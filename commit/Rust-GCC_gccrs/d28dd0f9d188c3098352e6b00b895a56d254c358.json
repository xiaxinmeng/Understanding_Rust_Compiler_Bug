{"sha": "d28dd0f9d188c3098352e6b00b895a56d254c358", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI4ZGQwZjlkMTg4YzMwOTgzNTJlNmIwMGI4OTVhNTZkMjU0YzM1OA==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2003-06-24T17:18:39Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2003-06-24T17:18:39Z"}, "message": "reg_search: Replace existing uses of DATE with MADE_DATE and use DATE for the date command.\n\n\t* reg_search: Replace existing uses of DATE with MADE_DATE and\n\tuse DATE for the date command.\n\t* reg_periodic: Ditto.\n\nFrom-SVN: r68429", "tree": {"sha": "63c4e008e6ad85405fb8d068d5a5f182632789e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63c4e008e6ad85405fb8d068d5a5f182632789e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d28dd0f9d188c3098352e6b00b895a56d254c358", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d28dd0f9d188c3098352e6b00b895a56d254c358", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d28dd0f9d188c3098352e6b00b895a56d254c358", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d28dd0f9d188c3098352e6b00b895a56d254c358/comments", "author": null, "committer": null, "parents": [{"sha": "e7891c4bbbbb3c0856d533473ac0b665d71667af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7891c4bbbbb3c0856d533473ac0b665d71667af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7891c4bbbbb3c0856d533473ac0b665d71667af"}], "stats": {"total": 73, "additions": 46, "deletions": 27}, "files": [{"sha": "33ba2c7a54033b4f369941ad5c0e9413a9a12887", "filename": "contrib/reghunt/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d28dd0f9d188c3098352e6b00b895a56d254c358/contrib%2Freghunt%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d28dd0f9d188c3098352e6b00b895a56d254c358/contrib%2Freghunt%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Freghunt%2FChangeLog?ref=d28dd0f9d188c3098352e6b00b895a56d254c358", "patch": "@@ -1,5 +1,10 @@\n-2003-03-27  Janis Johnson  <janis187@us.ibm.com>\n+2003-06-24  Janis Johnson  <janis187@us.ibm.com>\n \n+\t* reg_search: Replace existing uses of DATE with MADE_DATE and\n+\tuse DATE for the date command.\n+\t* reg_periodic: Ditto.\n+\n+2003-03-27  Janis Johnson  <janis187@us.ibm.com> \n \t* README: New file.\n \t* reg_search: New file.\n \t* reg_periodic: New file."}, {"sha": "4d46cf78d38cff2bf6984fbbe12f81f08bb9d319", "filename": "contrib/reghunt/reg_periodic", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d28dd0f9d188c3098352e6b00b895a56d254c358/contrib%2Freghunt%2Freg_periodic", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d28dd0f9d188c3098352e6b00b895a56d254c358/contrib%2Freghunt%2Freg_periodic", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Freghunt%2Freg_periodic?ref=d28dd0f9d188c3098352e6b00b895a56d254c358", "patch": "@@ -55,7 +55,7 @@ msg() {\n   if [ \"x${DATE_IN_MSG}\" = \"x\" ]; then\n     echo \"${2}\"\n   else\n-    echo \"`date`  ${2}\"\n+    echo \"`${DATE}`  ${2}\"\n   fi\n }\n \n@@ -70,7 +70,7 @@ error() {\n # control tools and report to the user.\n \n make_date() {\n-  MADE_DATE=\"`date -u +\\\"%Y-%m-%d %H:%M %Z\\\" --date \\\"1970-01-01 00:00:${1}\\\"`\" \\\n+  MADE_DATE=\"`${DATE} -u +\\\"%Y-%m-%d %H:%M %Z\\\" --date \\\"1970-01-01 00:00:${1}\\\"`\" \\\n     || error \"make_date: date command failed\"\n }\n \n@@ -79,25 +79,32 @@ make_date() {\n # testing; the first one needs it, the others can ignore it if they want.\n \n process_date() {\n-  DATE=\"${1}\"\n+  TEST_DATE=\"${1}\"\n \n-  ${REG_UPDATE} \"${DATE}\"\n+  ${REG_UPDATE} \"${TEST_DATE}\"\n   if [ $? -ne 0 ]; then\n-    msg 0 \"source update failed for ${DATE}\"\n+    msg 0 \"source update failed for ${TEST_DATE}\"\n     return\n   fi\n-  ${REG_BUILD} \"${DATE}\"\n+  ${REG_BUILD} \"${TEST_DATE}\"\n   if [ $? -ne 0 ]; then\n-    msg 0 \"build failed for ${DATE}\"\n+    msg 0 \"build failed for ${TEST_DATE}\"\n     return\n   fi\n-  ${REG_TEST} \"${DATE}\"\n+  ${REG_TEST} \"${TEST_DATE}\"\n }\n  \n ########################################################################\n # Main program (so to speak)\n ########################################################################\n \n+# If DATE isn't defined, use the default date command; the configuration\n+# file can override this.\n+\n+if [ \"x${DATE}\" = \"x\" ]; then\n+  DATE=date\n+fi\n+\n # Process the configuration file.\n \n if [ $# -ne 1 ]; then\n@@ -135,9 +142,9 @@ msg 2 \"VERBOSITY  = ${VERBOSITY}\"\n # Change the dates into seconds since the epoch.  This uses an extension\n # in GNU date.\n \n-LOW_DATE=`date +%s --date \"${LOW_DATE}\"` || \\\n+LOW_DATE=`${DATE} +%s --date \"${LOW_DATE}\"` || \\\n   error \"date command failed for \\\"${LOW_DATE}\\\"\"\n-HIGH_DATE=`date +%s --date \"${HIGH_DATE}\"` || \\\n+HIGH_DATE=`${DATE} +%s --date \"${HIGH_DATE}\"` || \\\n   error \"date command failed for \\\"${LOW_DATE}\\\"\"\n \n # Process each date in the range."}, {"sha": "9452dda8f5f75cd7c4bb8ccfee4d30f76bd86230", "filename": "contrib/reghunt/reg_search", "status": "modified", "additions": 23, "deletions": 16, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d28dd0f9d188c3098352e6b00b895a56d254c358/contrib%2Freghunt%2Freg_search", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d28dd0f9d188c3098352e6b00b895a56d254c358/contrib%2Freghunt%2Freg_search", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Freghunt%2Freg_search?ref=d28dd0f9d188c3098352e6b00b895a56d254c358", "patch": "@@ -75,7 +75,7 @@ msg() {\n   if [ \"x${DATE_IN_MSG}\" = \"x\" ]; then\n     echo \"${2}\"\n   else\n-    echo \"`date`  ${2}\"\n+    echo \"`${DATE}`  ${2}\"\n   fi\n }\n \n@@ -96,7 +96,7 @@ error() {\n # control tools and report to the user.\n \n make_date() {\n-  MADE_DATE=\"`date -u +\\\"%Y-%m-%d %H:%M %Z\\\" --date \\\"1970-01-01 00:00:${1}\\\"`\" \\\n+  MADE_DATE=\"`${DATE} -u +\\\"%Y-%m-%d %H:%M %Z\\\" --date \\\"1970-01-01 00:00:${1}\\\"`\" \\\n     || error \"make_date: date command failed\"\n }\n \n@@ -105,15 +105,15 @@ make_date() {\n # testing; the first one needs it, the others can ignore it if they want.\n \n process_date() {\n-  DATE=\"${1}\"\n+  TEST_DATE=\"${1}\"\n \n-  ${REG_UPDATE} \"${DATE}\" || error \"source update failed for ${DATE}\"\n+  ${REG_UPDATE} \"${TEST_DATE}\" || error \"source update failed for ${TEST_DATE}\"\n \n   # If we're already in a valid range, skip this date if there are no\n   # differences from either end of the range and adjust LATER.\n \n   if [ ${VALID_RANGE} = 1 ]; then\n-    ${HAS_CHANGES} \"${DATE}\" \"${LATER_THAN}\" \"${EARLIER_THAN}\"\n+    ${HAS_CHANGES} \"${TEST_DATE}\" \"${LATER_THAN}\" \"${EARLIER_THAN}\"\n     RET=$?\n     case ${RET} in\n     0) ;;\n@@ -123,8 +123,8 @@ process_date() {\n     esac\n   fi\n \n-  ${REG_BUILD} \"${DATE}\"  || error \"build failed for ${DATE}\"\n-  ${REG_TEST} \"${DATE}\"\n+  ${REG_BUILD} \"${TEST_DATE}\"  || error \"build failed for ${TEST_DATE}\"\n+  ${REG_TEST} \"${TEST_DATE}\"\n   LATER=$?\n }\n \n@@ -149,21 +149,21 @@ search_dates() {\n \n   while [ ${DIFF} -ge ${DELTA} ]; do\n     make_date ${MID}\n-    DATE=\"${MADE_DATE}\"\n+    TEST_DATE=\"${MADE_DATE}\"\n \n     # Test it.\n \n-    process_date \"${DATE}\"\n+    process_date \"${TEST_DATE}\"\n \n     # Narrow the search based on the outcome of testing DATE.\n \n     if [ ${LATER} -eq 1 ]; then\n-      msg 1 \"search dates later than \\\"${DATE}\\\"\"\n-      LATER_THAN=\"${DATE}\"\n+      msg 1 \"search dates later than \\\"${TEST_DATE}\\\"\"\n+      LATER_THAN=\"${TEST_DATE}\"\n       let LOW=MID\n     else\n-      msg 1 \"search dates earlier than \\\"${DATE}\\\"\"\n-      EARLIER_THAN=\"${DATE}\"\n+      msg 1 \"search dates earlier than \\\"${TEST_DATE}\\\"\"\n+      EARLIER_THAN=\"${TEST_DATE}\"\n       let HIGH=MID\n     fi\n \n@@ -176,6 +176,13 @@ search_dates() {\n # Main program (so to speak)\n ########################################################################\n \n+# If DATE isn't defined, use the default date command; the configuration\n+# file can override this.\n+\n+if [ \"x${DATE}\" = \"x\" ]; then\n+  DATE=date\n+fi\n+\n # The error function uses this.\n \n VALID_RANGE=0\n@@ -228,15 +235,15 @@ test ${DELTA} -lt 120 && \\\n # Change the dates into seconds since the epoch.  This uses an extension\n # in GNU date.\n \n-LOW_DATE=`date +%s --date \"${LOW_DATE}\"` || \\\n+LOW_DATE=`${DATE} +%s --date \"${LOW_DATE}\"` || \\\n   error \"date command failed for \\\"${LOW_DATE}\\\"\"\n-HIGH_DATE=`date +%s --date \"${HIGH_DATE}\"` || \\\n+HIGH_DATE=`${DATE} +%s --date \"${HIGH_DATE}\"` || \\\n   error \"date command failed for \\\"${LOW_DATE}\\\"\"\n \n # If FIRST_MID was defined, convert it and make sure it's in the range.\n \n if [ \"x${FIRST_MID}\" != \"x\" ]; then\n-  FIRST_MID=`date +%s --date \"${FIRST_MID}\"` || \\\n+  FIRST_MID=`${DATE} +%s --date \"${FIRST_MID}\"` || \\\n     error \"date command failed for \\\"${FIRST_MID}\\\"\"\n   test ${FIRST_MID} -le ${LOW_DATE}  && \\\n     error \"FIRST_MID date is earlier than LOW_DATE\""}]}