{"sha": "7c72138aa2c52e51598f2a1f82325bb109f8b529", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M3MjEzOGFhMmM1MmU1MTU5OGYyYTFmODIzMjViYjEwOWY4YjUyOQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "1999-04-05T14:28:59Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "1999-04-05T14:28:59Z"}, "message": "regress-demangle: New file.\n\n\t* testsuite/regress-demangle: New file.\n\t* testsuite/demangle-expected: New file.\n\t* Makefile.in (all, check, installcheck, info, install-info,\n\tclean-info, dvi, install, etags, tags, mostlyclean, clean,\n\tdistclean, maintainer-clean, realclean): Depend on corresponding\n\t`-subdir' target.\n\t(all-subdir check-subdir installcheck-subdir info-subdir\n\tinstall-info-subdir clean-info-subdir dvi-subdir\n\tinstall-info-subdir etags-subdir mostlyclean-subdir clean-subdir\n\tdistclean-subdir maintainer-clean-subdir): New target.\n\t* testsuite/Makefile.in: New file.\n\t* configure: Rebuilt.\n\t* configure.in: Create testsuite/Makefile.\n\nFrom-SVN: r26205", "tree": {"sha": "71e92a4eeb8ae0617771fb4d01e8792b0ab72869", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71e92a4eeb8ae0617771fb4d01e8792b0ab72869"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c72138aa2c52e51598f2a1f82325bb109f8b529", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c72138aa2c52e51598f2a1f82325bb109f8b529", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c72138aa2c52e51598f2a1f82325bb109f8b529", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c72138aa2c52e51598f2a1f82325bb109f8b529/comments", "author": null, "committer": null, "parents": [{"sha": "4f65832d5c08d16601c8271909c5e1f9deca23ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f65832d5c08d16601c8271909c5e1f9deca23ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f65832d5c08d16601c8271909c5e1f9deca23ed"}], "stats": {"total": 2735, "additions": 2677, "deletions": 58}, "files": [{"sha": "8b6e6718f436d1d0c871503b569b1d0692d1c825", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c72138aa2c52e51598f2a1f82325bb109f8b529/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c72138aa2c52e51598f2a1f82325bb109f8b529/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=7c72138aa2c52e51598f2a1f82325bb109f8b529", "patch": "@@ -1,3 +1,20 @@\n+1999-04-05  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* testsuite/regress-demangle: New file.\n+\t* testsuite/demangle-expected: New file.\n+\n+\t* Makefile.in (all, check, installcheck, info, install-info,\n+\tclean-info, dvi, install, etags, tags, mostlyclean, clean,\n+\tdistclean, maintainer-clean, realclean): Depend on corresponding\n+\t`-subdir' target.\n+\t(all-subdir check-subdir installcheck-subdir info-subdir\n+\tinstall-info-subdir clean-info-subdir dvi-subdir\n+\tinstall-info-subdir etags-subdir mostlyclean-subdir clean-subdir\n+\tdistclean-subdir maintainer-clean-subdir): New target.\n+\t* testsuite/Makefile.in: New file.\n+\t* configure: Rebuilt.\n+\t* configure.in: Create testsuite/Makefile.\n+\n 1999-04-02  Mark Mitchell  <mark@codesourcery.com>\n \n \t* splay-tree.h (splay_tree_compare_pointers): Define."}, {"sha": "622b92c1400c828638cf72abc0203849f28ceb0d", "filename": "libiberty/Makefile.in", "status": "modified", "additions": 22, "deletions": 10, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c72138aa2c52e51598f2a1f82325bb109f8b529/libiberty%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c72138aa2c52e51598f2a1f82325bb109f8b529/libiberty%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FMakefile.in?ref=7c72138aa2c52e51598f2a1f82325bb109f8b529", "patch": "@@ -1,6 +1,6 @@\n #\n # Makefile\n-#   Copyright (C) 1990, 91, 92, 93, 94, 95, 96, 97, 1998\n+#   Copyright (C) 1990, 91, 92, 93, 94, 95, 96, 97, 98, 1999\n #   Free Software Foundation\n #\n # This file is part of the libiberty library.\n@@ -87,11 +87,12 @@ FLAGS_TO_PASS = \\\n \t\"RANLIB=$(RANLIB)\" \\\n \t\"SHELL=$(SHELL)\"\n \n-all: stamp-picdir $(TARGETLIB) needed-list required-list\n+all: stamp-picdir $(TARGETLIB) needed-list required-list all-subdir\n \t@$(MULTIDO) $(FLAGS_TO_PASS) multi-do DO=all\n \n .PHONY: check installcheck\n-check installcheck:\n+check: check-subdir\n+installcheck: installcheck-subdir\n \n @host_makefile_frag@\n \n@@ -103,7 +104,10 @@ COMPILE.c = $(CC) -c @DEFS@ $(LIBCFLAGS) -I. -I$(INCDIR) $(HDEFINES)\n \t  $(COMPILE.c) $(PICFLAG) $< -o pic/$@\n \t$(COMPILE.c) $<\n \n-info install-info clean-info dvi:\n+info: info-subdir\n+install-info: install-info-subdir\n+clean-info: clean-info-subdir\n+dvi: dvi-subdir\n \n # Include files that are in this directory.\n HFILES = alloca-conf.h\n@@ -136,7 +140,7 @@ $(TARGETLIB): $(REQUIRED_OFILES) $(EXTRA_OFILES) $(LIBOBJS) $(ALLOCA)\n \t$(RANLIB) $(TARGETLIB)\n \n INSTALL_DEST = @INSTALL_DEST@\n-install: install_to_$(INSTALL_DEST)\n+install: install_to_$(INSTALL_DEST) install-subdir\n \n install_to_libdir: all\n \t$(INSTALL_DATA) $(TARGETLIB) $(libdir)$(MULTISUBDIR)/$(TARGETLIB).n\n@@ -171,7 +175,7 @@ stamp-picdir:\n \n .PHONY: all etags tags ls clean stage1 stage2\n \n-etags tags: TAGS\n+etags tags: TAGS etags-subdir\n \n TAGS: $(CFILES) $(HFILES)\n \tetags `for i in $(HFILES) $(CFILES); do echo $(srcdir)/$$i ; done`\n@@ -187,19 +191,19 @@ ls:\n \n # Need to deal with profiled libraries, too.\n \n-mostlyclean:\n+mostlyclean: mostlyclean-subdir\n \trm -rf *.o pic core errs \\#* *.E a.out\n \trm -f needed.awk needed2.awk errors dummy needed-list config.h stamp-*\n \trm -f $(CONFIG_H) $(NEEDED_LIST) stamp-picdir\n \t@$(MULTICLEAN) multi-clean DO=mostlyclean\n-clean: mostlyclean\n+clean: mostlyclean clean-subdir\n \trm -f *.a required-list tmpmulti.out\n \t@$(MULTICLEAN) multi-clean DO=clean\n-distclean: clean\n+distclean: clean distclean-subdir\n \t@$(MULTICLEAN) multi-clean DO=distclean\n \trm -f *~ Makefile config.status xhost-mkfrag TAGS multilib.out\n \trm -f config.log\n-maintainer-clean realclean: distclean\n+maintainer-clean realclean: distclean maintainer-clean-subdir\n \n force:\n \n@@ -213,6 +217,14 @@ stamp-h: config.in config.status\n config.status: $(srcdir)/configure $(srcdir)/config.table\n \t$(SHELL) ./config.status --recheck\n \n+\n+all-subdir check-subdir installcheck-subdir info-subdir\t\\\n+install-info-subdir clean-info-subdir dvi-subdir install-subdir\t\\\n+etags-subdir mostlyclean-subdir clean-subdir distclean-subdir \\\n+maintainer-clean-subdir:\n+\t@target=`echo $@ | sed -e 's/-subdir//'`; \\\n+\tcd testsuite && $(MAKE) $$target\n+\n $(REQUIRED_OFILES) $(EXTRA_OFILES) $(LIBOBJS) $(ALLOCA): stamp-picdir\n \n alloca.o: config.h"}, {"sha": "f7ba4b21902420928aeb1bece6522b31aaccc3c6", "filename": "libiberty/configure", "status": "modified", "additions": 57, "deletions": 47, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c72138aa2c52e51598f2a1f82325bb109f8b529/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c72138aa2c52e51598f2a1f82325bb109f8b529/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=7c72138aa2c52e51598f2a1f82325bb109f8b529", "patch": "@@ -1538,6 +1538,7 @@ fi\n # if the host does not provide alloca, we set ALLOCA to alloca.o\n \n setobjs=\n+CHECK=\n if test -n \"${with_target_subdir}\"; then\n \n   # We are being configured as a target library.  AC_REPLACE_FUNCS\n@@ -1578,8 +1579,16 @@ EOF\n     setobjs=yes\n \n   fi\n+\n+else\n+\n+   # Not a target library, so we set things up to run the test suite.\n+   CHECK=check-cplus-dem\n+\n fi\n \n+\n+\n if test -z \"${setobjs}\"; then\n   case \"${host}\" in\n \n@@ -1668,7 +1677,7 @@ EOF\n   # We haven't set the list of objects yet.  Use the standard autoconf\n   # tests.  This will only work if the compiler works.\n   echo $ac_n \"checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works\"\"... $ac_c\" 1>&6\n-echo \"configure:1672: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works\" >&5\n+echo \"configure:1681: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works\" >&5\n \n ac_ext=c\n # CFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.\n@@ -1679,12 +1688,12 @@ cross_compiling=$ac_cv_prog_cc_cross\n \n cat > conftest.$ac_ext << EOF\n \n-#line 1683 \"configure\"\n+#line 1692 \"configure\"\n #include \"confdefs.h\"\n \n main(){return(0);}\n EOF\n-if { (eval echo configure:1688: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1697: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   ac_cv_prog_cc_works=yes\n   # If we can't run a trivial program, we are probably using a cross compiler.\n   if (./conftest; exit) 2>/dev/null; then\n@@ -1710,19 +1719,19 @@ if test $ac_cv_prog_cc_works = no; then\n   { echo \"configure: error: installation or configuration problem: C compiler cannot create executables.\" 1>&2; exit 1; }\n fi\n echo $ac_n \"checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler\"\"... $ac_c\" 1>&6\n-echo \"configure:1714: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler\" >&5\n+echo \"configure:1723: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler\" >&5\n echo \"$ac_t\"\"$ac_cv_prog_cc_cross\" 1>&6\n cross_compiling=$ac_cv_prog_cc_cross\n \n   for ac_func in $funcs\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:1721: checking for $ac_func\" >&5\n+echo \"configure:1730: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1726 \"configure\"\n+#line 1735 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -1745,7 +1754,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1749: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1758: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -1774,19 +1783,19 @@ done\n   # The Ultrix 4.2 mips builtin alloca declared by alloca.h only works\n # for constant arguments.  Useless!\n echo $ac_n \"checking for working alloca.h\"\"... $ac_c\" 1>&6\n-echo \"configure:1778: checking for working alloca.h\" >&5\n+echo \"configure:1787: checking for working alloca.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_alloca_h'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1783 \"configure\"\n+#line 1792 \"configure\"\n #include \"confdefs.h\"\n #include <alloca.h>\n int main() {\n char *p = alloca(2 * sizeof(int));\n ; return 0; }\n EOF\n-if { (eval echo configure:1790: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1799: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_cv_header_alloca_h=yes\n else\n@@ -1807,12 +1816,12 @@ EOF\n fi\n \n echo $ac_n \"checking for alloca\"\"... $ac_c\" 1>&6\n-echo \"configure:1811: checking for alloca\" >&5\n+echo \"configure:1820: checking for alloca\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_alloca_works'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1816 \"configure\"\n+#line 1825 \"configure\"\n #include \"confdefs.h\"\n \n #ifdef __GNUC__\n@@ -1840,7 +1849,7 @@ int main() {\n char *p = (char *) alloca(1);\n ; return 0; }\n EOF\n-if { (eval echo configure:1844: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1853: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_cv_func_alloca_works=yes\n else\n@@ -1872,12 +1881,12 @@ EOF\n \n \n echo $ac_n \"checking whether alloca needs Cray hooks\"\"... $ac_c\" 1>&6\n-echo \"configure:1876: checking whether alloca needs Cray hooks\" >&5\n+echo \"configure:1885: checking whether alloca needs Cray hooks\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_os_cray'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1881 \"configure\"\n+#line 1890 \"configure\"\n #include \"confdefs.h\"\n #if defined(CRAY) && ! defined(CRAY2)\n webecray\n@@ -1902,12 +1911,12 @@ echo \"$ac_t\"\"$ac_cv_os_cray\" 1>&6\n if test $ac_cv_os_cray = yes; then\n for ac_func in _getb67 GETB67 getb67; do\n   echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:1906: checking for $ac_func\" >&5\n+echo \"configure:1915: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1911 \"configure\"\n+#line 1920 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -1930,7 +1939,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1934: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1943: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -1957,15 +1966,15 @@ done\n fi\n \n echo $ac_n \"checking stack direction for C alloca\"\"... $ac_c\" 1>&6\n-echo \"configure:1961: checking stack direction for C alloca\" >&5\n+echo \"configure:1970: checking stack direction for C alloca\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_c_stack_direction'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   ac_cv_c_stack_direction=0\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1969 \"configure\"\n+#line 1978 \"configure\"\n #include \"confdefs.h\"\n find_stack_direction ()\n {\n@@ -1984,7 +1993,7 @@ main ()\n   exit (find_stack_direction() < 0);\n }\n EOF\n-if { (eval echo configure:1988: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:1997: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_c_stack_direction=1\n else\n@@ -2006,20 +2015,20 @@ EOF\n fi\n \n   echo $ac_n \"checking for ANSI C header files\"\"... $ac_c\" 1>&6\n-echo \"configure:2010: checking for ANSI C header files\" >&5\n+echo \"configure:2019: checking for ANSI C header files\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_stdc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2015 \"configure\"\n+#line 2024 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n #include <stdarg.h>\n #include <string.h>\n #include <float.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:2023: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:2032: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -2036,7 +2045,7 @@ rm -f conftest*\n if test $ac_cv_header_stdc = yes; then\n   # SunOS 4.x string.h does not declare mem*, contrary to ANSI.\n cat > conftest.$ac_ext <<EOF\n-#line 2040 \"configure\"\n+#line 2049 \"configure\"\n #include \"confdefs.h\"\n #include <string.h>\n EOF\n@@ -2054,7 +2063,7 @@ fi\n if test $ac_cv_header_stdc = yes; then\n   # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.\n cat > conftest.$ac_ext <<EOF\n-#line 2058 \"configure\"\n+#line 2067 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n EOF\n@@ -2075,7 +2084,7 @@ if test \"$cross_compiling\" = yes; then\n   :\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2079 \"configure\"\n+#line 2088 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n #define ISLOWER(c) ('a' <= (c) && (c) <= 'z')\n@@ -2086,7 +2095,7 @@ if (XOR (islower (i), ISLOWER (i)) || toupper (i) != TOUPPER (i)) exit(2);\n exit (0); }\n \n EOF\n-if { (eval echo configure:2090: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:2099: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   :\n else\n@@ -2110,12 +2119,12 @@ EOF\n fi\n \n echo $ac_n \"checking for pid_t\"\"... $ac_c\" 1>&6\n-echo \"configure:2114: checking for pid_t\" >&5\n+echo \"configure:2123: checking for pid_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_pid_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2119 \"configure\"\n+#line 2128 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n@@ -2144,17 +2153,17 @@ fi\n \n ac_safe=`echo \"vfork.h\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for vfork.h\"\"... $ac_c\" 1>&6\n-echo \"configure:2148: checking for vfork.h\" >&5\n+echo \"configure:2157: checking for vfork.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2153 \"configure\"\n+#line 2162 \"configure\"\n #include \"confdefs.h\"\n #include <vfork.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:2158: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:2167: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -2179,18 +2188,18 @@ else\n fi\n \n echo $ac_n \"checking for working vfork\"\"... $ac_c\" 1>&6\n-echo \"configure:2183: checking for working vfork\" >&5\n+echo \"configure:2192: checking for working vfork\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_vfork_works'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   echo $ac_n \"checking for vfork\"\"... $ac_c\" 1>&6\n-echo \"configure:2189: checking for vfork\" >&5\n+echo \"configure:2198: checking for vfork\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_vfork'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2194 \"configure\"\n+#line 2203 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char vfork(); below.  */\n@@ -2213,7 +2222,7 @@ vfork();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:2217: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:2226: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_vfork=yes\"\n else\n@@ -2235,7 +2244,7 @@ fi\n ac_cv_func_vfork_works=$ac_cv_func_vfork\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2239 \"configure\"\n+#line 2248 \"configure\"\n #include \"confdefs.h\"\n /* Thanks to Paul Eggert for this test.  */\n #include <stdio.h>\n@@ -2330,7 +2339,7 @@ main() {\n   }\n }\n EOF\n-if { (eval echo configure:2334: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:2343: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_func_vfork_works=yes\n else\n@@ -2357,19 +2366,19 @@ fi\n   fi\n   for v in $vars; do\n     echo $ac_n \"checking for $v\"\"... $ac_c\" 1>&6\n-echo \"configure:2361: checking for $v\" >&5\n+echo \"configure:2370: checking for $v\" >&5\n     if eval \"test \\\"`echo '$''{'libiberty_cv_var_$v'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2366 \"configure\"\n+#line 2375 \"configure\"\n #include \"confdefs.h\"\n int *p;\n int main() {\n extern int $v; p = &$v;\n ; return 0; }\n EOF\n-if { (eval echo configure:2373: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:2382: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"libiberty_cv_var_$v=yes\"\n else\n@@ -2395,12 +2404,12 @@ EOF\n   for ac_func in $checkfuncs\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:2399: checking for $ac_func\" >&5\n+echo \"configure:2408: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2404 \"configure\"\n+#line 2413 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -2423,7 +2432,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:2427: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:2436: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -2560,7 +2569,7 @@ done\n ac_given_srcdir=$srcdir\n ac_given_INSTALL=\"$INSTALL\"\n \n-trap 'rm -fr `echo \"Makefile config.h:config.in\" | sed \"s/:[^ ]*//g\"` conftest*; exit 1' 1 2 15\n+trap 'rm -fr `echo \"Makefile testsuite/Makefile config.h:config.in\" | sed \"s/:[^ ]*//g\"` conftest*; exit 1' 1 2 15\n EOF\n cat >> $CONFIG_STATUS <<EOF\n \n@@ -2611,6 +2620,7 @@ s%@INSTALL_DATA@%$INSTALL_DATA%g\n /@host_makefile_frag@/r $host_makefile_frag\n s%@host_makefile_frag@%%g\n s%@CPP@%$CPP%g\n+s%@CHECK@%$CHECK%g\n s%@LIBOBJS@%$LIBOBJS%g\n s%@ALLOCA@%$ALLOCA%g\n s%@INSTALL_DEST@%$INSTALL_DEST%g\n@@ -2655,7 +2665,7 @@ EOF\n \n cat >> $CONFIG_STATUS <<EOF\n \n-CONFIG_FILES=\\${CONFIG_FILES-\"Makefile\"}\n+CONFIG_FILES=\\${CONFIG_FILES-\"Makefile testsuite/Makefile\"}\n EOF\n cat >> $CONFIG_STATUS <<\\EOF\n for ac_file in .. $CONFIG_FILES; do if test \"x$ac_file\" != x..; then"}, {"sha": "9a4967200502c6c3de8686da66a2ce5ab5a09d83", "filename": "libiberty/configure.in", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c72138aa2c52e51598f2a1f82325bb109f8b529/libiberty%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c72138aa2c52e51598f2a1f82325bb109f8b529/libiberty%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.in?ref=7c72138aa2c52e51598f2a1f82325bb109f8b529", "patch": "@@ -176,6 +176,7 @@ fi\n # if the host does not provide alloca, we set ALLOCA to alloca.o\n \n setobjs=\n+CHECK=\n if test -n \"${with_target_subdir}\"; then\n \n   # We are being configured as a target library.  AC_REPLACE_FUNCS\n@@ -210,8 +211,16 @@ if test -n \"${with_target_subdir}\"; then\n     setobjs=yes\n \n   fi\n+\n+else\n+\n+   # Not a target library, so we set things up to run the test suite.\n+   CHECK=check-cplus-dem\n+\n fi\n \n+AC_SUBST(CHECK)\n+\n if test -z \"${setobjs}\"; then\n   case \"${host}\" in\n \n@@ -321,7 +330,7 @@ fi\n AC_SUBST(INSTALL_DEST)\n \n # We need multilib support, but only if configuring for the target.\n-AC_OUTPUT(Makefile,\n+AC_OUTPUT(Makefile testsuite/Makefile,\n [test -z \"$CONFIG_HEADERS\" || echo timestamp > stamp-h\n if test -n \"$CONFIG_FILES\"; then\n   if test -n \"${with_target_subdir}\"; then"}, {"sha": "9d4ddd0ef1ee8db3a95a710a75087722f966f7ed", "filename": "libiberty/testsuite/Makefile.in", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c72138aa2c52e51598f2a1f82325bb109f8b529/libiberty%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c72138aa2c52e51598f2a1f82325bb109f8b529/libiberty%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2FMakefile.in?ref=7c72138aa2c52e51598f2a1f82325bb109f8b529", "patch": "@@ -0,0 +1,75 @@\n+#\n+# Makefile\n+#   Copyright (C) 1999\n+#   Free Software Foundation\n+#\n+# This file is part of the libiberty library.\n+# Libiberty is free software; you can redistribute it and/or\n+# modify it under the terms of the GNU Library General Public\n+# License as published by the Free Software Foundation; either\n+# version 2 of the License, or (at your option) any later version.\n+#\n+# Libiberty is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+# Library General Public License for more details.\n+#\n+# You should have received a copy of the GNU Library General Public\n+# License along with libiberty; see the file COPYING.LIB.  If not,\n+# write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n+# Boston, MA 02111-1307, USA.\n+#\n+\n+# This file was written by Tom Tromey <tromey@cygnus.com>.\n+\n+#\n+# Makefile for libiberty/testsuite directory\n+#\n+\n+srcdir = @srcdir@\n+VPATH = @srcdir@\n+\n+SHELL = @SHELL@\n+\n+CC = @CC@\n+CFLAGS = @CFLAGS@\n+LIBCFLAGS = $(CFLAGS)\n+\n+# Multilib support variables.\n+MULTISRCTOP =\n+\n+INCDIR=$(srcdir)/../$(MULTISRCTOP)../include\n+\n+all:\n+\n+check: @CHECK@\n+\n+# Run some tests of the demangler.\n+check-cplus-dem: test-filter $(srcdir)/demangle-expected\n+\t$(SHELL) $(srcdir)/regress-demangle $(srcdir)/demangle-expected\n+\n+# Note that we just hard-code prepends_underscore to 0.  This doesn't\n+# matter since any particular test can override the default if need\n+# be.\n+TEST_COMPILE = $(CC) @DEFS@ $(LIBCFLAGS) -I.. -I$(INCDIR) $(HDEFINES)\n+test-filter: $(srcdir)/../cplus-dem.c\n+\techo 'int prepends_underscore = 0;' > test-us.c\n+\t$(TEST_COMPILE) -o test-filter -DMAIN -DVERSION='\"none\"' @DEFS@ \\\n+\t\t$(srcdir)/../cplus-dem.c test-us.c -L.. -liberty\n+\n+\n+# Standard (either GNU or Cygnus) rules we don't use.\n+info install-info clean-info dvi install etags tags installcheck:\n+\n+# The standard clean rules.\n+mostlyclean:\n+\trm -f test-us.c test-filter\n+clean: mostlyclean\n+distclean: clean\n+\trm -f Makefile\n+maintainer-clean realclean: distclean\n+\n+\n+Makefile: $(srcdir)/Makefile.in ../config.status\n+\tCONFIG_FILES=testsuite/Makefile CONFIG_HEADERS= \\\n+\t  cd .. && $(SHELL) ./config.status"}, {"sha": "95dc4dda671a18630f76406e7ad7c6d3558ea0a3", "filename": "libiberty/testsuite/demangle-expected", "status": "added", "additions": 2468, "deletions": 0, "changes": 2468, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c72138aa2c52e51598f2a1f82325bb109f8b529/libiberty%2Ftestsuite%2Fdemangle-expected", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c72138aa2c52e51598f2a1f82325bb109f8b529/libiberty%2Ftestsuite%2Fdemangle-expected", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Fdemangle-expected?ref=7c72138aa2c52e51598f2a1f82325bb109f8b529", "patch": "@@ -0,0 +1,2468 @@\n+# This file holds test cases for the demangler.\n+# Each test consists of three lines in succession.\n+# The first line is arguments to pass to the test filter program.\n+# The second line is the mangled string.\n+# The third line is the expected output.\n+# A line starting with `#' is ignore.\n+# However blank lines in this file are NOT ignored.\n+#\n+--format=gnu\n+AddAlignment__9ivTSolverUiP12ivInteractorP7ivTGlue\n+ivTSolver::AddAlignment(unsigned int, ivInteractor *, ivTGlue *)\n+#\n+--format=gnu\n+ArrowheadIntersects__9ArrowLineP9ArrowheadR6BoxObjP7Graphic\n+ArrowLine::ArrowheadIntersects(Arrowhead *, BoxObj &, Graphic *)\n+#\n+--format=gnu\n+AtEnd__13ivRubberGroup\n+ivRubberGroup::AtEnd(void)\n+#\n+--format=gnu\n+BgFilter__9ivTSolverP12ivInteractor\n+ivTSolver::BgFilter(ivInteractor *)\n+#\n+--format=gnu\n+Check__6UArrayi\n+UArray::Check(int)\n+#\n+--format=gnu\n+CoreConstDecls__8TextCodeR7ostream\n+TextCode::CoreConstDecls(ostream &)\n+#\n+--format=gnu\n+Detach__8StateVarP12StateVarView\n+StateVar::Detach(StateVarView *)\n+#\n+--format=gnu\n+Done__9ComponentG8Iterator\n+Component::Done(Iterator)\n+#\n+--format=gnu\n+Effect__11RelateManipR7ivEvent\n+RelateManip::Effect(ivEvent &)\n+#\n+--format=gnu\n+FindFixed__FRP4CNetP4CNet\n+FindFixed(CNet *&, CNet *)\n+#\n+--format=gnu\n+Fix48_abort__FR8twolongs\n+Fix48_abort(twolongs &)\n+#\n+--format=gnu\n+GetBarInfo__15iv2_6_VScrollerP13ivPerspectiveRiT2\n+iv2_6_VScroller::GetBarInfo(ivPerspective *, int &, int &)\n+#\n+--format=gnu\n+GetBgColor__C9ivPainter\n+ivPainter::GetBgColor(void) const\n+#\n+--format=gnu\n+InsertBody__15H_PullrightMenuii\n+H_PullrightMenu::InsertBody(int, int)\n+#\n+--format=gnu\n+InsertCharacter__9TextManipc\n+TextManip::InsertCharacter(char)\n+#\n+--format=gnu\n+InsertToplevel__7ivWorldP12ivInteractorT1\n+ivWorld::InsertToplevel(ivInteractor *, ivInteractor *)\n+#\n+--format=gnu\n+InsertToplevel__7ivWorldP12ivInteractorT1iiUi\n+ivWorld::InsertToplevel(ivInteractor *, ivInteractor *, int, int, unsigned int)\n+#\n+--format=gnu\n+IsAGroup__FP11GraphicViewP11GraphicComp\n+IsAGroup(GraphicView *, GraphicComp *)\n+#\n+--format=gnu\n+IsA__10ButtonCodeUl\n+ButtonCode::IsA(unsigned long)\n+#\n+--format=gnu\n+ReadName__FR7istreamPc\n+ReadName(istream &, char *)\n+#\n+--format=gnu\n+Redraw__13StringBrowseriiii\n+StringBrowser::Redraw(int, int, int, int)\n+#\n+--format=gnu\n+Rotate__13ivTransformerf\n+ivTransformer::Rotate(float)\n+#\n+--format=gnu\n+Rotated__C13ivTransformerf\n+ivTransformer::Rotated(float) const\n+#\n+--format=gnu\n+Round__Ff\n+Round(float)\n+#\n+--format=gnu\n+SetExport__16MemberSharedNameUi\n+MemberSharedName::SetExport(unsigned int)\n+#\n+--format=gnu\n+Set__14ivControlState13ControlStatusUi\n+ivControlState::Set(ControlStatus, unsigned int)\n+#\n+--format=gnu\n+Set__5DFacePcii\n+DFace::Set(char *, int, int)\n+#\n+--format=gnu\n+VConvert__9ivTSolverP12ivInteractorRP8TElementT2\n+ivTSolver::VConvert(ivInteractor *, TElement *&, TElement *&)\n+#\n+--format=gnu\n+VConvert__9ivTSolverP7ivTGlueRP8TElement\n+ivTSolver::VConvert(ivTGlue *, TElement *&)\n+#\n+--format=gnu\n+VOrder__9ivTSolverUiRP12ivInteractorT2\n+ivTSolver::VOrder(unsigned int, ivInteractor *&, ivInteractor *&)\n+#\n+--format=gnu\n+_10PageButton\\$__both\n+PageButton::__both\n+#\n+--format=gnu\n+_3RNG\\$singleMantissa\n+RNG::singleMantissa\n+#\n+--format=gnu\n+_5IComp\\$_release\n+IComp::_release\n+#\n+--format=gnu\n+_\\$_10BitmapComp\n+BitmapComp::~BitmapComp(void)\n+#\n+--format=gnu\n+_\\$_9__io_defs\n+__io_defs::~__io_defs(void)\n+#\n+--format=gnu\n+_\\$_Q23foo3bar\n+foo::bar::~bar(void)\n+#\n+--format=gnu\n+_\\$_Q33foo3bar4bell\n+foo::bar::bell::~bell(void)\n+#\n+--format=gnu\n+__10ivTelltaleiP7ivGlyph\n+ivTelltale::ivTelltale(int, ivGlyph *)\n+#\n+--format=gnu\n+__10ivViewportiP12ivInteractorUi\n+ivViewport::ivViewport(int, ivInteractor *, unsigned int)\n+#\n+--format=gnu\n+__10ostrstream\n+ostrstream::ostrstream(void)\n+#\n+--format=gnu\n+__10ostrstreamPcii\n+ostrstream::ostrstream(char *, int, int)\n+#\n+--format=gnu\n+__11BitmapTablei\n+BitmapTable::BitmapTable(int)\n+#\n+--format=gnu\n+__12ViewportCodeP12ViewportComp\n+ViewportCode::ViewportCode(ViewportComp *)\n+#\n+--format=gnu\n+__12iv2_6_Borderii\n+iv2_6_Border::iv2_6_Border(int, int)\n+#\n+--format=gnu\n+__12ivBreak_Listl\n+ivBreak_List::ivBreak_List(long)\n+#\n+--format=gnu\n+__14iv2_6_MenuItemiP12ivInteractor\n+iv2_6_MenuItem::iv2_6_MenuItem(int, ivInteractor *)\n+#\n+--format=gnu\n+__20DisplayList_IteratorR11DisplayList\n+DisplayList_Iterator::DisplayList_Iterator(DisplayList &)\n+#\n+--format=gnu\n+__3fooRT0\n+foo::foo(foo &)\n+#\n+--format=gnu\n+__3fooiN31\n+foo::foo(int, int, int, int)\n+#\n+--format=gnu\n+__3fooiRT0iT2iT2\n+foo::foo(int, foo &, int, foo &, int, foo &)\n+#\n+--format=gnu\n+__6KeyMapPT0\n+KeyMap::KeyMap(KeyMap *)\n+#\n+--format=gnu\n+__8ArrowCmdP6EditorUiUi\n+ArrowCmd::ArrowCmd(Editor *, unsigned int, unsigned int)\n+#\n+--format=gnu\n+__9F_EllipseiiiiP7Graphic\n+F_Ellipse::F_Ellipse(int, int, int, int, Graphic *)\n+#\n+--format=gnu\n+__9FrameDataP9FrameCompi\n+FrameData::FrameData(FrameComp *, int)\n+#\n+--format=gnu\n+__9HVGraphicP9CanvasVarP7Graphic\n+HVGraphic::HVGraphic(CanvasVar *, Graphic *)\n+#\n+--format=gnu\n+__Q23foo3bar\n+foo::bar::bar(void)\n+#\n+--format=gnu\n+__Q33foo3bar4bell\n+foo::bar::bell::bell(void)\n+#\n+--format=gnu\n+__aa__3fooRT0\n+foo::operator&&(foo &)\n+#\n+--format=gnu\n+__aad__3fooRT0\n+foo::operator&=(foo &)\n+#\n+--format=gnu\n+__ad__3fooRT0\n+foo::operator&(foo &)\n+#\n+--format=gnu\n+__adv__3fooRT0\n+foo::operator/=(foo &)\n+#\n+--format=gnu\n+__aer__3fooRT0\n+foo::operator^=(foo &)\n+#\n+--format=gnu\n+__als__3fooRT0\n+foo::operator<<=(foo &)\n+#\n+--format=gnu\n+__amd__3fooRT0\n+foo::operator%=(foo &)\n+#\n+--format=gnu\n+__ami__3fooRT0\n+foo::operator-=(foo &)\n+#\n+--format=gnu\n+__aml__3FixRT0\n+Fix::operator*=(Fix &)\n+#\n+--format=gnu\n+__aml__5Fix16i\n+Fix16::operator*=(int)\n+#\n+--format=gnu\n+__aml__5Fix32RT0\n+Fix32::operator*=(Fix32 &)\n+#\n+--format=gnu\n+__aor__3fooRT0\n+foo::operator|=(foo &)\n+#\n+--format=gnu\n+__apl__3fooRT0\n+foo::operator+=(foo &)\n+#\n+--format=gnu\n+__ars__3fooRT0\n+foo::operator>>=(foo &)\n+#\n+--format=gnu\n+__as__3fooRT0\n+foo::operator=(foo &)\n+#\n+--format=gnu\n+__cl__3fooRT0\n+foo::operator()(foo &)\n+#\n+--format=gnu\n+__cl__6Normal\n+Normal::operator()(void)\n+#\n+--format=gnu\n+__cl__6Stringii\n+String::operator()(int, int)\n+#\n+--format=gnu\n+__cm__3fooRT0\n+foo::operator, (foo &)\n+#\n+--format=gnu\n+__co__3foo\n+foo::operator~(void)\n+#\n+--format=gnu\n+__dl__3fooPv\n+foo::operator delete(void *)\n+#\n+--format=gnu\n+__dv__3fooRT0\n+foo::operator/(foo &)\n+#\n+--format=gnu\n+__eq__3fooRT0\n+foo::operator==(foo &)\n+#\n+--format=gnu\n+__er__3fooRT0\n+foo::operator^(foo &)\n+#\n+--format=gnu\n+__ge__3fooRT0\n+foo::operator>=(foo &)\n+#\n+--format=gnu\n+__gt__3fooRT0\n+foo::operator>(foo &)\n+#\n+--format=gnu\n+__le__3fooRT0\n+foo::operator<=(foo &)\n+#\n+--format=gnu\n+__ls__3fooRT0\n+foo::operator<<(foo &)\n+#\n+--format=gnu\n+__ls__FR7ostreamPFR3ios_R3ios\n+operator<<(ostream &, ios &(*)(ios &))\n+#\n+--format=gnu\n+__ls__FR7ostreamR3Fix\n+operator<<(ostream &, Fix &)\n+#\n+--format=gnu\n+__lt__3fooRT0\n+foo::operator<(foo &)\n+#\n+--format=gnu\n+__md__3fooRT0\n+foo::operator%(foo &)\n+#\n+--format=gnu\n+__mi__3fooRT0\n+foo::operator-(foo &)\n+#\n+--format=gnu\n+__ml__3fooRT0\n+foo::operator*(foo &)\n+#\n+--format=gnu\n+__mm__3fooi\n+foo::operator--(int)\n+#\n+--format=gnu\n+__ne__3fooRT0\n+foo::operator!=(foo &)\n+#\n+--format=gnu\n+__nt__3foo\n+foo::operator!(void)\n+#\n+--format=gnu\n+__nw__3fooi\n+foo::operator new(int)\n+#\n+--format=gnu\n+__oo__3fooRT0\n+foo::operator||(foo &)\n+#\n+--format=gnu\n+__opPc__3foo\n+foo::operator char *(void)\n+#\n+--format=gnu\n+__opi__3foo\n+foo::operator int(void)\n+#\n+--format=gnu\n+__or__3fooRT0\n+foo::operator|(foo &)\n+#\n+--format=gnu\n+__pl__3fooRT0\n+foo::operator+(foo &)\n+#\n+--format=gnu\n+__pp__3fooi\n+foo::operator++(int)\n+#\n+--format=gnu\n+__rf__3foo\n+foo::operator->(void)\n+#\n+--format=gnu\n+__rm__3fooRT0\n+foo::operator->*(foo &)\n+#\n+--format=gnu\n+__rs__3fooRT0\n+foo::operator>>(foo &)\n+#\n+--format=gnu\n+_new_Fix__FUs\n+_new_Fix(unsigned short)\n+#\n+--format=gnu\n+_vt.foo\n+foo virtual table\n+#\n+--format=gnu\n+_vt.foo.bar\n+foo::bar virtual table\n+#\n+--format=gnu\n+_vt\\$foo\n+foo virtual table\n+#\n+--format=gnu\n+_vt\\$foo\\$bar\n+foo::bar virtual table\n+#\n+--format=gnu\n+append__7ivGlyphPT0\n+ivGlyph::append(ivGlyph *)\n+#\n+--format=gnu\n+clearok__FP7_win_sti\n+clearok(_win_st *, int)\n+#\n+--format=gnu\n+complexfunc2__FPFPc_i\n+complexfunc2(int (*)(char *))\n+#\n+--format=gnu\n+complexfunc3__FPFPFPl_s_i\n+complexfunc3(int (*)(short (*)(long *)))\n+#\n+--format=gnu\n+complexfunc4__FPFPFPc_s_i\n+complexfunc4(int (*)(short (*)(char *)))\n+#\n+--format=gnu\n+complexfunc5__FPFPc_PFl_i\n+complexfunc5(int (*(*)(char *))(long))\n+#\n+--format=gnu\n+complexfunc6__FPFPi_PFl_i\n+complexfunc6(int (*(*)(int *))(long))\n+#\n+--format=gnu\n+complexfunc7__FPFPFPc_i_PFl_i\n+complexfunc7(int (*(*)(int (*)(char *)))(long))\n+#\n+--format=gnu\n+foo__FiN30\n+foo(int, int, int, int)\n+#\n+--format=gnu\n+foo__FiR3fooiT1iT1\n+foo(int, foo &, int, foo &, int, foo &)\n+#\n+--format=gnu\n+foo___3barl\n+bar::foo_(long)\n+#\n+--format=gnu\n+insert__15ivClippingStacklRP8_XRegion\n+ivClippingStack::insert(long, _XRegion *&)\n+#\n+--format=gnu\n+insert__16ChooserInfo_ListlR11ChooserInfo\n+ChooserInfo_List::insert(long, ChooserInfo &)\n+#\n+--format=gnu\n+insert__17FontFamilyRepListlRP15ivFontFamilyRep\n+FontFamilyRepList::insert(long, ivFontFamilyRep *&)\n+#\n+--format=gnu\n+leaveok__FP7_win_stc\n+leaveok(_win_st *, char)\n+#\n+--format=gnu\n+left_mover__C7ivMFKitP12ivAdjustableP7ivStyle\n+ivMFKit::left_mover(ivAdjustable *, ivStyle *) const\n+#\n+--format=gnu\n+overload1arg__FSc\n+overload1arg(signed char)\n+#\n+--format=gnu\n+overload1arg__FUc\n+overload1arg(unsigned char)\n+#\n+--format=gnu\n+overload1arg__FUi\n+overload1arg(unsigned int)\n+#\n+--format=gnu\n+overload1arg__FUl\n+overload1arg(unsigned long)\n+#\n+--format=gnu\n+overload1arg__FUs\n+overload1arg(unsigned short)\n+#\n+--format=gnu\n+overload1arg__Fc\n+overload1arg(char)\n+#\n+--format=gnu\n+overload1arg__Fd\n+overload1arg(double)\n+#\n+--format=gnu\n+overload1arg__Ff\n+overload1arg(float)\n+#\n+--format=gnu\n+overload1arg__Fi\n+overload1arg(int)\n+#\n+--format=gnu\n+overload1arg__Fl\n+overload1arg(long)\n+#\n+--format=gnu\n+overload1arg__Fs\n+overload1arg(short)\n+#\n+--format=gnu\n+overload1arg__Fv\n+overload1arg(void)\n+#\n+--format=gnu\n+overloadargs__Fi\n+overloadargs(int)\n+#\n+--format=gnu\n+overloadargs__Fii\n+overloadargs(int, int)\n+#\n+--format=gnu\n+overloadargs__Fiii\n+overloadargs(int, int, int)\n+#\n+--format=gnu\n+overloadargs__Fiiii\n+overloadargs(int, int, int, int)\n+#\n+--format=gnu\n+overloadargs__Fiiiii\n+overloadargs(int, int, int, int, int)\n+#\n+--format=gnu\n+overloadargs__Fiiiiii\n+overloadargs(int, int, int, int, int, int)\n+#\n+--format=gnu\n+overloadargs__Fiiiiiii\n+overloadargs(int, int, int, int, int, int, int)\n+#\n+--format=gnu\n+overloadargs__Fiiiiiiii\n+overloadargs(int, int, int, int, int, int, int, int)\n+#\n+--format=gnu\n+overloadargs__Fiiiiiiiii\n+overloadargs(int, int, int, int, int, int, int, int, int)\n+#\n+--format=gnu\n+overloadargs__Fiiiiiiiiii\n+overloadargs(int, int, int, int, int, int, int, int, int, int)\n+#\n+--format=gnu\n+overloadargs__Fiiiiiiiiiii\n+overloadargs(int, int, int, int, int, int, int, int, int, int, int)\n+#\n+--format=gnu\n+poke__8ivRasterUlUlffff\n+ivRaster::poke(unsigned long, unsigned long, float, float, float, float)\n+#\n+--format=gnu\n+polar__Fdd\n+polar(double, double)\n+#\n+--format=gnu\n+scale__13ivTransformerff\n+ivTransformer::scale(float, float)\n+#\n+--format=gnu\n+sgetn__7filebufPci\n+filebuf::sgetn(char *, int)\n+#\n+--format=gnu\n+shift__FP5_FrepiT0\n+shift(_Frep *, int, _Frep *)\n+#\n+--format=gnu\n+test__C6BitSeti\n+BitSet::test(int) const\n+#\n+--format=gnu\n+test__C6BitSetii\n+BitSet::test(int, int) const\n+#\n+--format=gnu\n+text_source__8Documentl\n+Document::text_source(long)\n+#\n+--format=gnu\n+variance__6Erlangd\n+Erlang::variance(double)\n+#\n+--format=gnu\n+view__14DocumentViewerP8ItemViewP11TabularItem\n+DocumentViewer::view(ItemView *, TabularItem *)\n+#\n+--format=gnu\n+xy_extents__11ivExtensionffff\n+ivExtension::xy_extents(float, float, float, float)\n+#\n+--format=gnu\n+zero__8osMemoryPvUi\n+osMemory::zero(void *, unsigned int)\n+#\n+--format=gnu\n+_2T4\\$N\n+T4::N\n+#\n+--format=gnu\n+_Q22T42t1\\$N\n+T4::t1::N\n+#\n+--format=gnu\n+get__2T1\n+T1::get(void)\n+#\n+--format=gnu\n+get__Q22T11a\n+T1::a::get(void)\n+#\n+--format=gnu\n+get__Q32T11a1b\n+T1::a::b::get(void)\n+#\n+--format=gnu\n+get__Q42T11a1b1c\n+T1::a::b::c::get(void)\n+#\n+--format=gnu\n+get__Q52T11a1b1c1d\n+T1::a::b::c::d::get(void)\n+#\n+--format=gnu\n+put__2T1i\n+T1::put(int)\n+#\n+--format=gnu\n+put__Q22T11ai\n+T1::a::put(int)\n+#\n+--format=gnu\n+put__Q32T11a1bi\n+T1::a::b::put(int)\n+#\n+--format=gnu\n+put__Q42T11a1b1ci\n+T1::a::b::c::put(int)\n+#\n+--format=gnu\n+put__Q52T11a1b1c1di\n+T1::a::b::c::d::put(int)\n+#\n+--format=gnu\n+bar__3fooPv\n+foo::bar(void *)\n+#\n+--format=gnu\n+bar__C3fooPv\n+foo::bar(void *) const\n+#\n+--format=gnu\n+__eq__3fooRT0\n+foo::operator==(foo &)\n+#\n+--format=gnu\n+__eq__C3fooR3foo\n+foo::operator==(foo &) const\n+#\n+--format=gnu\n+elem__t6vector1Zdi\n+vector<double>::elem(int)\n+#\n+--format=gnu\n+elem__t6vector1Zii\n+vector<int>::elem(int)\n+#\n+--format=gnu\n+__t6vector1Zdi\n+vector<double>::vector(int)\n+#\n+--format=gnu\n+__t6vector1Zii\n+vector<int>::vector(int)\n+#\n+--format=gnu\n+_\\$_t6vector1Zdi\n+vector<double>::~vector(int)\n+#\n+--format=gnu\n+_\\$_t6vector1Zii\n+vector<int>::~vector(int)\n+#\n+--format=gnu\n+__nw__t2T11ZcUi\n+T1<char>::operator new(unsigned int)\n+#\n+--format=gnu\n+__nw__t2T11Z1tUi\n+T1<t>::operator new(unsigned int)\n+#\n+--format=gnu\n+__dl__t2T11ZcPv\n+T1<char>::operator delete(void *)\n+#\n+--format=gnu\n+__dl__t2T11Z1tPv\n+T1<t>::operator delete(void *)\n+#\n+--format=gnu\n+__t2T11Zci\n+T1<char>::T1(int)\n+#\n+--format=gnu\n+__t2T11Zc\n+T1<char>::T1(void)\n+#\n+--format=gnu\n+__t2T11Z1ti\n+T1<t>::T1(int)\n+#\n+--format=gnu\n+__t2T11Z1t\n+T1<t>::T1(void)\n+#\n+--format=gnu\n+__Q2t4List1Z10VHDLEntity3Pix\n+List<VHDLEntity>::Pix::Pix(void)\n+#\n+--format=gnu\n+__Q2t4List1Z10VHDLEntity3PixPQ2t4List1Z10VHDLEntity7element\n+List<VHDLEntity>::Pix::Pix(List<VHDLEntity>::element *)\n+#\n+--format=gnu\n+__Q2t4List1Z10VHDLEntity3PixRCQ2t4List1Z10VHDLEntity3Pix\n+List<VHDLEntity>::Pix::Pix(List<VHDLEntity>::Pix const &)\n+#\n+--format=gnu\n+__Q2t4List1Z10VHDLEntity7elementRC10VHDLEntityPT0\n+List<VHDLEntity>::element::element(VHDLEntity const &, List<VHDLEntity>::element *)\n+#\n+--format=gnu\n+__Q2t4List1Z10VHDLEntity7elementRCQ2t4List1Z10VHDLEntity7element\n+List<VHDLEntity>::element::element(List<VHDLEntity>::element const &)\n+#\n+--format=gnu\n+__cl__C11VHDLLibraryGt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity\n+VHDLLibrary::operator()(PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> >) const\n+#\n+--format=gnu\n+__cl__Ct4List1Z10VHDLEntityRCQ2t4List1Z10VHDLEntity3Pix\n+List<VHDLEntity>::operator()(List<VHDLEntity>::Pix const &) const\n+#\n+--format=gnu\n+__ne__FPvRCQ2t4List1Z10VHDLEntity3Pix\n+operator!=(void *, List<VHDLEntity>::Pix const &)\n+#\n+--format=gnu\n+__ne__FPvRCt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity\n+operator!=(void *, PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> > const &)\n+#\n+--format=gnu\n+__t4List1Z10VHDLEntityRCt4List1Z10VHDLEntity\n+List<VHDLEntity>::List(List<VHDLEntity> const &)\n+#\n+--format=gnu\n+__t4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity\n+PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> >::PixX(void)\n+#\n+--format=gnu\n+__t4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntityP14VHDLLibraryRepGQ2t4List1Z10VHDLEntity3Pix\n+PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> >::PixX(VHDLLibraryRep *, List<VHDLEntity>::Pix)\n+#\n+--format=gnu\n+__t4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntityRCt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity\n+PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> >::PixX(PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> > const &)\n+#\n+--format=gnu\n+nextE__C11VHDLLibraryRt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity\n+VHDLLibrary::nextE(PixX<VHDLLibrary, VHDLLibraryRep, List<VHDLEntity> > &) const\n+#\n+--format=gnu\n+next__Ct4List1Z10VHDLEntityRQ2t4List1Z10VHDLEntity3Pix\n+List<VHDLEntity>::next(List<VHDLEntity>::Pix &) const\n+#\n+--format=gnu\n+_GLOBAL_\\$D\\$set\n+global destructors keyed to set\n+#\n+--format=gnu\n+_GLOBAL_\\$I\\$set\n+global constructors keyed to set\n+#\n+--format=gnu\n+__as__t5ListS1ZUiRCt5ListS1ZUi\n+ListS<unsigned int>::operator=(ListS<unsigned int> const &)\n+#\n+--format=gnu\n+__cl__Ct5ListS1ZUiRCQ2t5ListS1ZUi3Vix\n+ListS<unsigned int>::operator()(ListS<unsigned int>::Vix const &) const\n+#\n+--format=gnu\n+__cl__Ct5SetLS1ZUiRCQ2t5SetLS1ZUi3Vix\n+SetLS<unsigned int>::operator()(SetLS<unsigned int>::Vix const &) const\n+#\n+--format=gnu\n+__t10ListS_link1ZUiRCUiPT0\n+ListS_link<unsigned int>::ListS_link(unsigned int const &, ListS_link<unsigned int> *)\n+#\n+--format=gnu\n+__t10ListS_link1ZUiRCt10ListS_link1ZUi\n+ListS_link<unsigned int>::ListS_link(ListS_link<unsigned int> const &)\n+#\n+--format=gnu\n+__t5ListS1ZUiRCt5ListS1ZUi\n+ListS<unsigned int>::ListS(ListS<unsigned int> const &)\n+#\n+--format=gnu\n+next__Ct5ListS1ZUiRQ2t5ListS1ZUi3Vix\n+ListS<unsigned int>::next(ListS<unsigned int>::Vix &) const\n+#\n+--format=gnu\n+__ne__FPvRCQ2t5SetLS1ZUi3Vix\n+operator!=(void *, SetLS<unsigned int>::Vix const &)\n+#\n+--format=gnu\n+__t8ListElem1Z5LabelRt4List1Z5Label\n+ListElem<Label>::ListElem(List<Label> &)\n+#\n+--format=gnu\n+__t8BDDHookV1ZPcRCPc\n+BDDHookV<char *>::BDDHookV(char *const &)\n+#\n+--format=gnu\n+_vt\\$t8BDDHookV1ZPc\n+BDDHookV<char *> virtual table\n+#\n+--format=gnu\n+__ne__FPvRCQ211BDDFunction4VixB\n+operator!=(void *, BDDFunction::VixB const &)\n+#\n+--format=gnu\n+__eq__FPvRCQ211BDDFunction4VixB\n+operator==(void *, BDDFunction::VixB const &)\n+#\n+--format=gnu\n+relativeId__CQ36T_phi210T_preserve8FPC_nextRCQ26T_phi210T_preserveRC10Parameters\n+T_phi2::T_preserve::FPC_next::relativeId(T_phi2::T_preserve const &, Parameters const &) const\n+#\n+--format=lucid\n+WS__FR7istream\n+WS(istream &)\n+#\n+--format=lucid\n+__aa__3fooFR3foo\n+foo::operator&&(foo &)\n+#\n+--format=lucid\n+__aad__3fooFR3foo\n+foo::operator&=(foo &)\n+#\n+--format=lucid\n+__ad__3fooFR3foo\n+foo::operator&(foo &)\n+#\n+--format=lucid\n+__adv__3fooFR3foo\n+foo::operator/=(foo &)\n+#\n+--format=lucid\n+__adv__7complexF7complex\n+complex::operator/=(complex)\n+#\n+--format=lucid\n+__aer__3fooFR3foo\n+foo::operator^=(foo &)\n+#\n+--format=lucid\n+__als__3fooFR3foo\n+foo::operator<<=(foo &)\n+#\n+--format=lucid\n+__amd__3fooFR3foo\n+foo::operator%=(foo &)\n+#\n+--format=lucid\n+__ami__3fooFR3foo\n+foo::operator-=(foo &)\n+#\n+--format=lucid\n+__amu__3fooFR3foo\n+foo::operator*=(foo &)\n+#\n+--format=lucid\n+__amu__7complexF7complex\n+complex::operator*=(complex)\n+#\n+--format=lucid\n+__aor__3fooFR3foo\n+foo::operator|=(foo &)\n+#\n+--format=lucid\n+__apl__3fooFR3foo\n+foo::operator+=(foo &)\n+#\n+--format=lucid\n+__ars__3fooFR3foo\n+foo::operator>>=(foo &)\n+#\n+--format=lucid\n+__as__18istream_withassignFP9streambuf\n+istream_withassign::operator=(streambuf *)\n+#\n+--format=lucid\n+__as__18istream_withassignFR7istream\n+istream_withassign::operator=(istream &)\n+#\n+--format=lucid\n+__as__3fooFR3foo\n+foo::operator=(foo &)\n+#\n+--format=lucid\n+__as__3iosFR3ios\n+ios::operator=(ios &)\n+#\n+--format=lucid\n+__cl__3fooFR3foo\n+foo::operator()(foo &)\n+#\n+--format=lucid\n+__cm__3fooFR3foo\n+foo::operator, (foo &)\n+#\n+--format=lucid\n+__co__3fooFv\n+foo::operator~(void)\n+#\n+--format=lucid\n+__ct__10istrstreamFPc\n+istrstream::istrstream(char *)\n+#\n+--format=lucid\n+__ct__10istrstreamFPci\n+istrstream::istrstream(char *, int)\n+#\n+--format=lucid\n+__ct__10ostrstreamFPciT2\n+ostrstream::ostrstream(char *, int, int)\n+#\n+--format=lucid\n+__ct__10ostrstreamFv\n+ostrstream::ostrstream(void)\n+#\n+--format=lucid\n+__ct__10smanip_intFPFR3iosi_R3iosi\n+smanip_int::smanip_int(ios &(*)(ios &, int), int)\n+#\n+--format=lucid\n+__ct__11fstreambaseFi\n+fstreambase::fstreambase(int)\n+#\n+--format=lucid\n+__ct__11fstreambaseFiPcT1\n+fstreambase::fstreambase(int, char *, int)\n+#\n+--format=lucid\n+__ct__11fstreambaseFv\n+fstreambase::fstreambase(void)\n+#\n+--format=lucid\n+__ct__11smanip_longFPFR3iosl_R3iosl\n+smanip_long::smanip_long(ios &(*)(ios &, long), long)\n+#\n+--format=lucid\n+__ct__11stdiostreamFP4FILE\n+stdiostream::stdiostream(FILE *)\n+#\n+--format=lucid\n+__ct__12strstreambufFPFl_PvPFPv_v\n+strstreambuf::strstreambuf(void *(*)(long), void (*)(void *))\n+#\n+--format=lucid\n+__ct__12strstreambufFPUciT1\n+strstreambuf::strstreambuf(unsigned char *, int, unsigned char *)\n+#\n+--format=lucid\n+__ct__12strstreambufFPciT1\n+strstreambuf::strstreambuf(char *, int, char *)\n+#\n+--format=lucid\n+__ct__12strstreambufFi\n+strstreambuf::strstreambuf(int)\n+#\n+--format=lucid\n+__ct__12strstreambufFv\n+strstreambuf::strstreambuf(void)\n+#\n+--format=lucid\n+__ct__13strstreambaseFPciT1\n+strstreambase::strstreambase(char *, int, char *)\n+#\n+--format=lucid\n+__ct__3fooFR3foo\n+foo::foo(foo &)\n+#\n+--format=lucid\n+__ct__3fooFi\n+foo::foo(int)\n+#\n+--format=lucid\n+__ct__3fooFiN31\n+foo::foo(int, int, int, int)\n+#\n+--format=lucid\n+__ct__3fooFiR3fooT1T2T1T2\n+foo::foo(int, foo &, int, foo &, int, foo &)\n+#\n+--format=lucid\n+__ct__3iosFP9streambuf\n+ios::ios(streambuf *)\n+#\n+--format=lucid\n+__ct__7filebufFiPcT1\n+filebuf::filebuf(int, char *, int)\n+#\n+--format=lucid\n+__ct__7fstreamFiPcT1\n+fstream::fstream(int, char *, int)\n+#\n+--format=lucid\n+__ct__7istreamFP9streambuf\n+istream::istream(streambuf *)\n+#\n+--format=lucid\n+__ct__7istreamFP9streambufiP7ostream\n+istream::istream(streambuf *, int, ostream *)\n+#\n+--format=lucid\n+__ct__7istreamFiPcT1\n+istream::istream(int, char *, int)\n+#\n+--format=lucid\n+__ct__7istreamFiT1P7ostream\n+istream::istream(int, int, ostream *)\n+#\n+--format=lucid\n+__ct__7ostreamFP9streambuf\n+ostream::ostream(streambuf *)\n+#\n+--format=lucid\n+__ct__7ostreamFiPc\n+ostream::ostream(int, char *)\n+#\n+--format=lucid\n+__ct__8ifstreamFiPcT1\n+ifstream::ifstream(int, char *, int)\n+#\n+--format=lucid\n+__ct__Q23foo3barFv\n+foo::bar::bar(void)\n+#\n+--format=lucid\n+__ct__Q33foo3bar4bellFv\n+foo::bar::bell::bell(void)\n+#\n+--format=lucid\n+__dl__3fooSFPv\n+foo::operator delete(void *) static\n+#\n+--format=lucid\n+__dl__FPv\n+operator delete(void *)\n+#\n+--format=lucid\n+__dt__10istrstreamFv\n+istrstream::~istrstream(void)\n+#\n+--format=lucid\n+__dt__Q23foo3barFv\n+foo::bar::~bar(void)\n+#\n+--format=lucid\n+__dt__Q33foo3bar4bellFv\n+foo::bar::bell::~bell(void)\n+#\n+--format=lucid\n+__dv__3fooFR3foo\n+foo::operator/(foo &)\n+#\n+--format=lucid\n+__dv__F7complexT1\n+operator/(complex, complex)\n+#\n+--format=lucid\n+__eq__3fooFR3foo\n+foo::operator==(foo &)\n+#\n+--format=lucid\n+__er__3fooFR3foo\n+foo::operator^(foo &)\n+#\n+--format=lucid\n+__ge__3fooFR3foo\n+foo::operator>=(foo &)\n+#\n+--format=lucid\n+__gt__3fooFR3foo\n+foo::operator>(foo &)\n+#\n+--format=lucid\n+__le__3fooFR3foo\n+foo::operator<=(foo &)\n+#\n+--format=lucid\n+__ls__3fooFR3foo\n+foo::operator<<(foo &)\n+#\n+--format=lucid\n+__ls__7ostreamFP9streambuf\n+ostream::operator<<(streambuf *)\n+#\n+--format=lucid\n+__ls__7ostreamFPFR3ios_R3ios\n+ostream::operator<<(ios &(*)(ios &))\n+#\n+--format=lucid\n+__ls__7ostreamFPv\n+ostream::operator<<(void *)\n+#\n+--format=lucid\n+__ls__7ostreamFUi\n+ostream::operator<<(unsigned int)\n+#\n+--format=lucid\n+__ls__7ostreamFUl\n+ostream::operator<<(unsigned long)\n+#\n+--format=lucid\n+__ls__7ostreamFd\n+ostream::operator<<(double)\n+#\n+--format=lucid\n+__ls__7ostreamFf\n+ostream::operator<<(float)\n+#\n+--format=lucid\n+__ls__7ostreamFi\n+ostream::operator<<(int)\n+#\n+--format=lucid\n+__ls__7ostreamFl\n+ostream::operator<<(long)\n+#\n+--format=lucid\n+__ls__FR7ostream7complex\n+operator<<(ostream &, complex)\n+#\n+--format=lucid\n+__lt__3fooFR3foo\n+foo::operator<(foo &)\n+#\n+--format=lucid\n+__md__3fooFR3foo\n+foo::operator%(foo &)\n+#\n+--format=lucid\n+__mi__3fooFR3foo\n+foo::operator-(foo &)\n+#\n+--format=lucid\n+__ml__3fooFR3foo\n+foo::operator*(foo &)\n+#\n+--format=lucid\n+__ml__F7complexT1\n+operator*(complex, complex)\n+#\n+--format=lucid\n+__mm__3fooFi\n+foo::operator--(int)\n+#\n+--format=lucid\n+__ne__3fooFR3foo\n+foo::operator!=(foo &)\n+#\n+--format=lucid\n+__nt__3fooFv\n+foo::operator!(void)\n+#\n+--format=lucid\n+__nw__3fooSFi\n+foo::operator new(int) static\n+#\n+--format=lucid\n+__nw__FUi\n+operator new(unsigned int)\n+#\n+--format=lucid\n+__nw__FUiPv\n+operator new(unsigned int, void *)\n+#\n+--format=lucid\n+__oo__3fooFR3foo\n+foo::operator||(foo &)\n+#\n+--format=lucid\n+__opPc__3fooFv\n+foo::operator char *(void)\n+#\n+--format=lucid\n+__opi__3fooFv\n+foo::operator int(void)\n+#\n+--format=lucid\n+__or__3fooFR3foo\n+foo::operator|(foo &)\n+#\n+--format=lucid\n+__pl__3fooFR3foo\n+foo::operator+(foo &)\n+#\n+--format=lucid\n+__pp__3fooFi\n+foo::operator++(int)\n+#\n+--format=lucid\n+__pt__3fooFv\n+foo::operator->(void)\n+#\n+--format=lucid\n+__rm__3fooFR3foo\n+foo::operator->*(foo &)\n+#\n+--format=lucid\n+__rs__3fooFR3foo\n+foo::operator>>(foo &)\n+#\n+--format=lucid\n+__rs__7istreamFP9streambuf\n+istream::operator>>(streambuf *)\n+#\n+--format=lucid\n+__rs__7istreamFPFR3ios_R3ios\n+istream::operator>>(ios &(*)(ios &))\n+#\n+--format=lucid\n+__rs__7istreamFPFR7istream_R7istream\n+istream::operator>>(istream &(*)(istream &))\n+#\n+--format=lucid\n+__rs__7istreamFPUc\n+istream::operator>>(unsigned char *)\n+#\n+--format=lucid\n+__rs__7istreamFPc\n+istream::operator>>(char *)\n+#\n+--format=lucid\n+__rs__7istreamFRUi\n+istream::operator>>(unsigned int &)\n+#\n+--format=lucid\n+__rs__7istreamFRUl\n+istream::operator>>(unsigned long &)\n+#\n+--format=lucid\n+__rs__7istreamFRUs\n+istream::operator>>(unsigned short &)\n+#\n+--format=lucid\n+__rs__7istreamFRd\n+istream::operator>>(double &)\n+#\n+--format=lucid\n+__rs__7istreamFRf\n+istream::operator>>(float &)\n+#\n+--format=lucid\n+__rs__7istreamFRi\n+istream::operator>>(int &)\n+#\n+--format=lucid\n+__rs__7istreamFRl\n+istream::operator>>(long &)\n+#\n+--format=lucid\n+__rs__7istreamFRs\n+istream::operator>>(short &)\n+#\n+--format=lucid\n+__rs__FR7istreamR7complex\n+operator>>(istream &, complex &)\n+#\n+--format=lucid\n+__vtbl__10istrstream\n+istrstream virtual table\n+#\n+--format=lucid\n+__vtbl__17ostream__iostream__19iostream_withassign\n+iostream_withassign::ostream__iostream virtual table\n+#\n+--format=lucid\n+__vtbl__3ios\n+ios virtual table\n+#\n+--format=lucid\n+__vtbl__3ios__13strstreambase\n+strstreambase::ios virtual table\n+#\n+--format=lucid\n+abs__F7complex\n+abs(complex)\n+#\n+--format=lucid\n+allocate__9streambufFv\n+streambuf::allocate(void)\n+#\n+--format=lucid\n+attach__11fstreambaseFi\n+fstreambase::attach(int)\n+#\n+--format=lucid\n+bitalloc__3iosSFv\n+ios::bitalloc(void) static\n+#\n+--format=lucid\n+chr__FiT1\n+chr(int, int)\n+#\n+--format=lucid\n+complex_error__FR11c_exception\n+complex_error(c_exception &)\n+#\n+--format=lucid\n+complexfunc2__FPFPc_i\n+complexfunc2(int (*)(char *))\n+#\n+--format=lucid\n+complexfunc3__FPFPFPl_s_i\n+complexfunc3(int (*)(short (*)(long *)))\n+#\n+--format=lucid\n+complexfunc4__FPFPFPc_s_i\n+complexfunc4(int (*)(short (*)(char *)))\n+#\n+--format=lucid\n+complexfunc5__FPFPc_PFl_i\n+complexfunc5(int (*(*)(char *))(long))\n+#\n+--format=lucid\n+complexfunc6__FPFPi_PFl_i\n+complexfunc6(int (*(*)(int *))(long))\n+#\n+--format=lucid\n+complexfunc7__FPFPFPc_i_PFl_i\n+complexfunc7(int (*(*)(int (*)(char *)))(long))\n+#\n+--format=lucid\n+complicated_put__7ostreamFc\n+ostream::complicated_put(char)\n+#\n+--format=lucid\n+conv10__FlPc\n+conv10(long, char *)\n+#\n+--format=lucid\n+conv16__FUlPc\n+conv16(unsigned long, char *)\n+#\n+--format=lucid\n+dec__FR3ios\n+dec(ios &)\n+#\n+--format=lucid\n+dec__Fli\n+dec(long, int)\n+#\n+--format=lucid\n+dofield__FP7ostreamPciT2T3\n+dofield(ostream *, char *, int, char *, int)\n+#\n+--format=lucid\n+flags__3iosFl\n+ios::flags(long)\n+#\n+--format=lucid\n+flags__3iosFv\n+ios::flags(void)\n+#\n+--format=lucid\n+foo__FiN31\n+foo(int, int, int, int)\n+#\n+--format=lucid\n+foo__FiR3fooT1T2T1T2\n+foo(int, foo &, int, foo &, int, foo &)\n+#\n+--format=lucid\n+foo___3barFl\n+bar::foo_(long)\n+#\n+--format=lucid\n+get__7istreamFPcic\n+istream::get(char *, int, char)\n+#\n+--format=lucid\n+get__7istreamFR9streambufc\n+istream::get(streambuf &, char)\n+#\n+--format=lucid\n+get_complicated__7istreamFRUc\n+istream::get_complicated(unsigned char &)\n+#\n+--format=lucid\n+get_complicated__7istreamFRc\n+istream::get_complicated(char &)\n+#\n+--format=lucid\n+getline__7istreamFPUcic\n+istream::getline(unsigned char *, int, char)\n+#\n+--format=lucid\n+getline__7istreamFPcic\n+istream::getline(char *, int, char)\n+#\n+--format=lucid\n+ignore__7istreamFiT1\n+istream::ignore(int, int)\n+#\n+--format=lucid\n+init__12strstreambufFPciT1\n+strstreambuf::init(char *, int, char *)\n+#\n+--format=lucid\n+init__3iosFP9streambuf\n+ios::init(streambuf *)\n+#\n+--format=lucid\n+initcount__13Iostream_init\n+Iostream_init::initcount\n+#\n+--format=lucid\n+ipfx__7istreamFi\n+istream::ipfx(int)\n+#\n+--format=lucid\n+ls_complicated__7ostreamFUc\n+ostream::ls_complicated(unsigned char)\n+#\n+--format=lucid\n+ls_complicated__7ostreamFc\n+ostream::ls_complicated(char)\n+#\n+--format=lucid\n+overload1arg__FSc\n+overload1arg(signed char)\n+#\n+--format=lucid\n+overload1arg__FUc\n+overload1arg(unsigned char)\n+#\n+--format=lucid\n+overload1arg__FUi\n+overload1arg(unsigned int)\n+#\n+--format=lucid\n+overload1arg__FUl\n+overload1arg(unsigned long)\n+#\n+--format=lucid\n+overload1arg__FUs\n+overload1arg(unsigned short)\n+#\n+--format=lucid\n+overload1arg__Fc\n+overload1arg(char)\n+#\n+--format=lucid\n+overload1arg__Fd\n+overload1arg(double)\n+#\n+--format=lucid\n+overload1arg__Ff\n+overload1arg(float)\n+#\n+--format=lucid\n+overload1arg__Fi\n+overload1arg(int)\n+#\n+--format=lucid\n+overload1arg__Fl\n+overload1arg(long)\n+#\n+--format=lucid\n+overload1arg__Fs\n+overload1arg(short)\n+#\n+--format=lucid\n+overload1arg__Fv\n+overload1arg(void)\n+#\n+--format=lucid\n+overloadargs__FiN21\n+overloadargs(int, int, int)\n+#\n+--format=lucid\n+overloadargs__FiN31\n+overloadargs(int, int, int, int)\n+#\n+--format=lucid\n+overloadargs__FiN41\n+overloadargs(int, int, int, int, int)\n+#\n+--format=lucid\n+overloadargs__FiN51\n+overloadargs(int, int, int, int, int, int)\n+#\n+--format=lucid\n+overloadargs__FiN61\n+overloadargs(int, int, int, int, int, int, int)\n+#\n+--format=lucid\n+overloadargs__FiN71\n+overloadargs(int, int, int, int, int, int, int, int)\n+#\n+--format=lucid\n+overloadargs__FiN81\n+overloadargs(int, int, int, int, int, int, int, int, int)\n+#\n+--format=lucid\n+overloadargs__FiN91\n+overloadargs(int, int, int, int, int, int, int, int, int, int)\n+#\n+--format=lucid\n+overloadargs__FiN91N11\n+overloadargs(int, int, int, int, int, int, int, int, int, int, int)\n+#\n+--format=lucid\n+overloadargs__FiT1\n+overloadargs(int, int)\n+#\n+--format=lucid\n+polar__FdT1\n+polar(double, double)\n+#\n+--format=lucid\n+pow__F7complexT1\n+pow(complex, complex)\n+#\n+--format=lucid\n+pow__F7complexd\n+pow(complex, double)\n+#\n+--format=lucid\n+pow__F7complexi\n+pow(complex, int)\n+#\n+--format=lucid\n+pow__Fd7complex\n+pow(double, complex)\n+#\n+--format=lucid\n+pstart__FPciT2\n+pstart(char *, int, int)\n+#\n+--format=lucid\n+put__7ostreamFc\n+ostream::put(char)\n+#\n+--format=lucid\n+read__7istreamFPci\n+istream::read(char *, int)\n+#\n+--format=lucid\n+resetiosflags__FR3iosl\n+resetiosflags(ios &, long)\n+#\n+--format=lucid\n+restore_errno__FRi\n+restore_errno(int &)\n+#\n+--format=lucid\n+rs_complicated__7istreamFRUc\n+istream::rs_complicated(unsigned char &)\n+#\n+--format=lucid\n+rs_complicated__7istreamFRc\n+istream::rs_complicated(char &)\n+#\n+--format=lucid\n+seekg__7istreamFl8seek_dir\n+istream::seekg(long, seek_dir)\n+#\n+--format=lucid\n+seekoff__12strstreambufFl8seek_diri\n+strstreambuf::seekoff(long, seek_dir, int)\n+#\n+--format=lucid\n+seekoff__9streambufFlQ2_3ios12ios_seek_diri\n+streambuf::seekoff(long, ios::ios_seek_dir, int)\n+#\n+--format=lucid\n+seekpos__9streambufFli\n+streambuf::seekpos(long, int)\n+#\n+--format=lucid\n+set_new_handler__FPFv_v\n+set_new_handler(void (*)(void))\n+#\n+--format=lucid\n+setb__9streambufFPcT1i\n+streambuf::setb(char *, char *, int)\n+#\n+--format=lucid\n+setb__FR3iosi\n+setb(ios &, int)\n+#\n+--format=lucid\n+setbuf__11fstreambaseFPci\n+fstreambase::setbuf(char *, int)\n+#\n+--format=lucid\n+setbuf__9streambufFPUci\n+streambuf::setbuf(unsigned char *, int)\n+#\n+--format=lucid\n+setbuf__9streambufFPciT2\n+streambuf::setbuf(char *, int, int)\n+#\n+--format=lucid\n+setf__3iosFlT1\n+ios::setf(long, long)\n+#\n+--format=lucid\n+setfill__FR3iosi\n+setfill(ios &, int)\n+#\n+--format=lucid\n+setg__9streambufFPcN21\n+streambuf::setg(char *, char *, char *)\n+#\n+--format=lucid\n+setp__9streambufFPcT1\n+streambuf::setp(char *, char *)\n+#\n+--format=lucid\n+tie__3iosFP7ostream\n+ios::tie(ostream *)\n+#\n+--format=lucid\n+uconv10__FUlPc\n+uconv10(unsigned long, char *)\n+#\n+--format=lucid\n+xget__7istreamFPc\n+istream::xget(char *)\n+#\n+--format=lucid\n+xsgetn__9streambufFPci\n+streambuf::xsgetn(char *, int)\n+#\n+--format=arm\n+__dt__21T5__pt__11_PFiPPdPv_iFv\n+T5<int (*)(int, double **, void *)>::~T5(void)\n+#\n+--format=arm\n+__ct__1cFi\n+c::c(int)\n+#\n+--format=arm\n+__dt__11T5__pt__2_iFv\n+T5<int>::~T5(void)\n+#\n+--format=arm\n+__dt__11T5__pt__2_cFv\n+T5<char>::~T5(void)\n+#\n+--format=arm\n+__ct__2T2Fi\n+T2::T2(int)\n+#\n+--format=arm\n+__dt__2T1Fv\n+T1::~T1(void)\n+#\n+--format=arm\n+__dt__12T5__pt__3_1xFv\n+T5<x>::~T5(void)\n+#\n+--format=arm\n+__dt__17T5__pt__8_PFcPv_iFv\n+T5<int (*)(char, void *)>::~T5(void)\n+#\n+--format=arm\n+__ct__21T5__pt__11_PFiPPdPv_iFi\n+T5<int (*)(int, double **, void *)>::T5(int)\n+#\n+--format=arm\n+__amd__FR2T2i\n+operator%=(T2 &, int)\n+#\n+--format=arm\n+__adv__FR2T2i\n+operator/=(T2 &, int)\n+#\n+--format=arm\n+__amu__FR2T2i\n+operator*=(T2 &, int)\n+#\n+--format=arm\n+__ami__FR2T2i\n+operator-=(T2 &, int)\n+#\n+--format=arm\n+__apl__FR2T2i\n+operator+=(T2 &, int)\n+#\n+--format=arm\n+__nw__2T1SFUi\n+T1::operator new(unsigned int) static\n+#\n+--format=arm\n+__dl__2T1SFPv\n+T1::operator delete(void *) static\n+#\n+--format=arm\n+put__2T7SFi\n+T7::put(int) static\n+#\n+--format=arm\n+__dl__12T5__pt__3_1xSFPv\n+T5<x>::operator delete(void *) static\n+#\n+--format=arm\n+h__FUc\n+h(unsigned char)\n+#\n+--format=arm\n+f__Fic\n+f(int, char)\n+#\n+--format=arm\n+h__FUi\n+h(unsigned int)\n+#\n+--format=arm\n+h__Fci\n+h(char, int)\n+#\n+--format=arm\n+h__FUl\n+h(unsigned long)\n+#\n+--format=arm\n+h__Fcl\n+h(char, long)\n+#\n+--format=arm\n+h__FUs\n+h(unsigned short)\n+#\n+--format=arm\n+h__Fcs\n+h(char, short)\n+#\n+--format=arm\n+X__12T5__pt__3_1x\n+T5<x>::X\n+#\n+--format=arm\n+__ct__11T5__pt__2_iFi\n+T5<int>::T5(int)\n+#\n+--format=arm\n+__ct__11T5__pt__2_cFi\n+T5<char>::T5(int)\n+#\n+--format=arm\n+h__FcT1\n+h(char, char)\n+#\n+--format=arm\n+f__Ficd\n+f(int, char, double)\n+#\n+--format=arm\n+__dl__17T5__pt__8_PFcPv_iSFPv\n+T5<int (*)(char, void *)>::operator delete(void *) static\n+#\n+--format=arm\n+X__17T5__pt__8_PFcPv_i\n+T5<int (*)(char, void *)>::X\n+#\n+--format=arm\n+__ct__12T5__pt__3_1xFi\n+T5<x>::T5(int)\n+#\n+--format=arm\n+__dl__21T5__pt__11_PFiPPdPv_iSFPv\n+T5<int (*)(int, double **, void *)>::operator delete(void *) static\n+#\n+--format=arm\n+__std__foo\n+global destructors keyed to foo\n+#\n+--format=arm\n+__sti__bar\n+global constructors keyed to bar\n+#\n+--format=arm\n+f__FicdPcPFci_v\n+f(int, char, double, char *, void (*)(char, int))\n+#\n+--format=arm\n+f__FicdPcPFic_v\n+f(int, char, double, char *, void (*)(int, char))\n+#\n+--format=arm\n+get__2T7SFv\n+T7::get(void) static\n+#\n+--format=arm\n+X__21T5__pt__11_PFiPPdPv_i\n+T5<int (*)(int, double **, void *)>::X\n+#\n+--format=arm\n+__dl__11T5__pt__2_iSFPv\n+T5<int>::operator delete(void *) static\n+#\n+--format=arm\n+__dl__11T5__pt__2_cSFPv\n+T5<char>::operator delete(void *) static\n+#\n+--format=arm\n+h__Fc\n+h(char)\n+#\n+--format=arm\n+h__Fd\n+h(double)\n+#\n+--format=arm\n+h__Ff\n+h(float)\n+#\n+--format=arm\n+h__Fi\n+h(int)\n+#\n+--format=arm\n+f__Fi\n+f(int)\n+#\n+--format=arm\n+h__Fl\n+h(long)\n+#\n+--format=arm\n+h__Fs\n+h(short)\n+#\n+--format=arm\n+X__11T5__pt__2_c\n+T5<char>::X\n+#\n+--format=arm\n+X__11T5__pt__2_i\n+T5<int>::X\n+#\n+--format=arm\n+__ct__17T5__pt__8_PFcPv_iFi\n+T5<int (*)(char, void *)>::T5(int)\n+#\n+--format=arm\n+f__FicdPc\n+f(int, char, double, char *)\n+#\n+--format=arm\n+__nw__FUi\n+operator new(unsigned int)\n+#\n+--format=arm\n+__ct__Q3_2T11a1bSFi\n+T1::a::b::b(int) static\n+#\n+--format=arm\n+__dt__Q3_2T11a1bSFi\n+T1::a::b::~b(int) static\n+#\n+--format=arm\n+put__Q3_2T11a1bSFi\n+T1::a::b::put(int) static\n+#\n+--format=arm\n+get__Q2_2T11aSFv\n+T1::a::get(void) static\n+#\n+--format=arm\n+put__2T1SFi\n+T1::put(int) static\n+#\n+--format=arm\n+put__Q5_2T11a1b1c1dSFi\n+T1::a::b::c::d::put(int) static\n+#\n+--format=arm\n+get__Q4_2T11a1b1cSFv\n+T1::a::b::c::get(void) static\n+#\n+--format=arm\n+put__Q2_2T11aSFi\n+T1::a::put(int) static\n+#\n+--format=arm\n+put__Q4_2T11a1b1cSFi\n+T1::a::b::c::put(int) static\n+#\n+--format=arm\n+get__Q3_2T11a1bSFv\n+T1::a::b::get(void) static\n+#\n+--format=arm\n+get__2T1SFv\n+T1::get(void) static\n+#\n+--format=arm\n+get__Q5_2T11a1b1c1dSFv\n+T1::a::b::c::d::get(void) static\n+#\n+--format=arm\n+__dt__11T1__pt__2_cFv\n+T1<char>::~T1(void)\n+#\n+--format=arm\n+__dt__12T1__pt__3_1tFv\n+T1<t>::~T1(void)\n+#\n+--format=arm\n+__dl__12T1__pt__3_1tSFPv\n+T1<t>::operator delete(void *) static\n+#\n+--format=arm\n+__ct__11T1__pt__2_cFi\n+T1<char>::T1(int)\n+#\n+--format=arm\n+__ct__11T1__pt__2_cFv\n+T1<char>::T1(void)\n+#\n+--format=arm\n+__ct__12T1__pt__3_1tFi\n+T1<t>::T1(int)\n+#\n+--format=arm\n+__ct__12T1__pt__3_1tFv\n+T1<t>::T1(void)\n+#\n+--format=arm\n+__dl__11T1__pt__2_cSFPv\n+T1<char>::operator delete(void *) static\n+#\n+--format=arm\n+bar__3fooFPv\n+foo::bar(void *)\n+#\n+--format=arm\n+bar__3fooCFPv\n+foo::bar(void *) const\n+#\n+--format=arm\n+__eq__3fooFR3foo\n+foo::operator==(foo &)\n+#\n+--format=arm\n+__eq__3fooCFR3foo\n+foo::operator==(foo &) const\n+#\n+--format=arm\n+elem__15vector__pt__2_dFi\n+vector<double>::elem(int)\n+#\n+--format=arm\n+elem__15vector__pt__2_iFi\n+vector<int>::elem(int)\n+#\n+--format=arm\n+__ct__15vector__pt__2_dFi\n+vector<double>::vector(int)\n+#\n+--format=arm\n+__ct__15vector__pt__2_iFi\n+vector<int>::vector(int)\n+#\n+--format=arm\n+__ct__25DListNode__pt__9_R6RLabelFR6RLabelP25DListNode__pt__9_R6RLabelT2\n+DListNode<RLabel &>::DListNode(RLabel &, DListNode<RLabel &> *, DListNode<RLabel &> *)\n+#\n+--format=arm\n+bar__3fooFiT16FooBar\n+foo::bar(int, int, FooBar)\n+#\n+--format=arm\n+bar__3fooFPiN51PdN37PcN211T1iN215\n+foo::bar(int *, int *, int *, int *, int *, int *, double *, double *, double *, double *, char *, char *, char *, int *, int, int, int)\n+#\n+--format=hp\n+__amd__FR2T2i\n+operator%=(T2 &, int)\n+#\n+--format=hp\n+__adv__FR2T2i\n+operator/=(T2 &, int)\n+#\n+--format=hp\n+__amu__FR2T2i\n+operator*=(T2 &, int)\n+#\n+--format=hp\n+__ami__FR2T2i\n+operator-=(T2 &, int)\n+#\n+--format=hp\n+__apl__FR2T2i\n+operator+=(T2 &, int)\n+#\n+--format=hp\n+__nw__2T1SFUi\n+T1::operator new(unsigned int) static\n+#\n+--format=hp\n+__dl__2T1SFPv\n+T1::operator delete(void *) static\n+#\n+--format=hp\n+put__2T7SFi\n+T7::put(int) static\n+#\n+--format=hp\n+h__FUc\n+h(unsigned char)\n+#\n+--format=hp\n+f__Fic\n+f(int, char)\n+#\n+--format=hp\n+h__FUi\n+h(unsigned int)\n+#\n+--format=hp\n+h__Fci\n+h(char, int)\n+#\n+--format=hp\n+h__FUl\n+h(unsigned long)\n+#\n+--format=hp\n+h__Fcl\n+h(char, long)\n+#\n+--format=hp\n+h__FUs\n+h(unsigned short)\n+#\n+--format=hp\n+h__Fcs\n+h(char, short)\n+#\n+--format=hp\n+h__FcT1\n+h(char, char)\n+#\n+--format=hp\n+f__Ficd\n+f(int, char, double)\n+#\n+--format=hp\n+f__FicdPcPFci_v\n+f(int, char, double, char *, void (*)(char, int))\n+#\n+--format=hp\n+f__FicdPcPFic_v\n+f(int, char, double, char *, void (*)(int, char))\n+#\n+--format=hp\n+get__2T7SFv\n+T7::get(void) static\n+#\n+--format=hp\n+h__Fc\n+h(char)\n+#\n+--format=hp\n+h__Fd\n+h(double)\n+#\n+--format=hp\n+h__Ff\n+h(float)\n+#\n+--format=hp\n+h__Fi\n+h(int)\n+#\n+--format=hp\n+f__Fi\n+f(int)\n+#\n+--format=hp\n+h__Fl\n+h(long)\n+#\n+--format=hp\n+h__Fs\n+h(short)\n+#\n+--format=hp\n+f__FicdPc\n+f(int, char, double, char *)\n+#\n+--format=hp\n+__nw__FUi\n+operator new(unsigned int)\n+#\n+--format=hp\n+__ct__Q3_2T11a1bSFi\n+T1::a::b::b(int) static\n+#\n+--format=hp\n+__dt__Q3_2T11a1bSFi\n+T1::a::b::~b(int) static\n+#\n+--format=hp\n+put__Q3_2T11a1bSFi\n+T1::a::b::put(int) static\n+#\n+--format=hp\n+get__Q2_2T11aSFv\n+T1::a::get(void) static\n+#\n+--format=hp\n+put__2T1SFi\n+T1::put(int) static\n+#\n+--format=hp\n+put__Q5_2T11a1b1c1dSFi\n+T1::a::b::c::d::put(int) static\n+#\n+--format=hp\n+get__Q4_2T11a1b1cSFv\n+T1::a::b::c::get(void) static\n+#\n+--format=hp\n+put__Q2_2T11aSFi\n+T1::a::put(int) static\n+#\n+--format=hp\n+put__Q4_2T11a1b1cSFi\n+T1::a::b::c::put(int) static\n+#\n+--format=hp\n+get__Q3_2T11a1bSFv\n+T1::a::b::get(void) static\n+#\n+--format=hp\n+get__2T1SFv\n+T1::get(void) static\n+#\n+--format=hp\n+get__Q5_2T11a1b1c1dSFv\n+T1::a::b::c::d::get(void) static\n+#\n+--format=hp\n+bar__3fooFPv\n+foo::bar(void *)\n+#\n+--format=hp\n+bar__3fooCFPv\n+foo::bar(void *) const\n+#\n+--format=hp\n+__eq__3fooFR3foo\n+foo::operator==(foo &)\n+#\n+--format=hp\n+__eq__3fooCFR3foo\n+foo::operator==(foo &) const\n+#\n+--format=hp\n+bar__3fooFiT16FooBar\n+foo::bar(int, int, FooBar)\n+#\n+--format=hp\n+bar__3fooFPiN51PdN37PcN211T1iN215\n+foo::bar(int *, int *, int *, int *, int *, int *, double *, double *, double *, double *, char *, char *, char *, int *, int, int, int)\n+#\n+--format=hp\n+__dt__2T5XTPFiPPdPv_i__Fv\n+T5<int (*)(int, double **, void *)>::~T5(void)\n+#\n+--format=hp\n+__ct__1cFi\n+c::c(int)\n+#\n+--format=hp\n+__dt__2T5XTi__Fv\n+T5<int>::~T5(void)\n+#\n+--format=hp\n+__dt__2T5XTc__Fv\n+T5<char>::~T5(void)\n+#\n+--format=hp\n+__ct__2T2Fi\n+T2::T2(int)\n+#\n+--format=hp\n+__dt__2T1Fv\n+T1::~T1(void)\n+#\n+--format=hp\n+__dt__2T5XT1x__Fv\n+T5<x>::~T5(void)\n+#\n+--format=hp\n+__dt__2T5XTPFcPv_i__Fv\n+T5<int (*)(char, void *)>::~T5(void)\n+#\n+--format=hp\n+__ct__2T5XTPFiPPdPv_i__Fi\n+T5<int (*)(int, double **, void *)>::T5(int)\n+#\n+--format=hp\n+__dl__2T5XT1x__SFPv\n+T5<x>::operator delete(void *) static\n+#\n+--format=hp\n+X__2T5XT1x\n+T5<x>::X\n+#\n+--format=hp\n+__ct__2T5XTi__Fi\n+T5<int>::T5(int)\n+#\n+--format=hp\n+__ct__2T5XTc__Fi\n+T5<char>::T5(int)\n+#\n+--format=hp\n+__dl__2T5XTPFcPv_i__SFPv\n+T5<int (*)(char, void *)>::operator delete(void *) static\n+#\n+--format=hp\n+X__2T5XTPFcPv_i\n+T5<int (*)(char, void *)>::X\n+#\n+--format=hp\n+__ct__2T5XT1x__Fi\n+T5<x>::T5(int)\n+#\n+--format=hp\n+__dl__2T5XTPFiPPdPv_i__SFPv\n+T5<int (*)(int, double **, void *)>::operator delete(void *) static\n+#\n+--format=hp\n+X__2T5XTPFiPPdPv_i\n+T5<int (*)(int, double **, void *)>::X\n+#\n+--format=hp\n+__dl__2T5XTi__SFPv\n+T5<int>::operator delete(void *) static\n+#\n+--format=hp\n+__dl__2T5XTc__SFPv\n+T5<char>::operator delete(void *) static\n+#\n+--format=hp\n+X__2T5XTc\n+T5<char>::X\n+#\n+--format=hp\n+X__2T5XTi\n+T5<int>::X\n+#\n+--format=hp\n+__ct__2T5XTPFcPv_i__Fi\n+T5<int (*)(char, void *)>::T5(int)\n+#\n+--format=hp\n+__dt__2T1XTc__Fv\n+T1<char>::~T1(void)\n+#\n+--format=hp\n+__dt__2T1XT1t__Fv\n+T1<t>::~T1(void)\n+#\n+--format=hp\n+__dl__2T1XT1t__SFPv\n+T1<t>::operator delete(void *) static\n+#\n+--format=hp\n+__ct__2T1XTc__Fi\n+T1<char>::T1(int)\n+#\n+--format=hp\n+__ct__2T1XTc__Fv\n+T1<char>::T1(void)\n+#\n+--format=hp\n+__ct__2T1XT1t__Fi\n+T1<t>::T1(int)\n+#\n+--format=hp\n+__ct__2T1XT1t__Fv\n+T1<t>::T1(void)\n+#\n+--format=hp\n+__dl__2T1XTc__SFPv\n+T1<char>::operator delete(void *) static\n+#\n+--format=hp\n+elem__6vectorXTd__Fi\n+vector<double>::elem(int)\n+#\n+--format=hp\n+elem__6vectorXTi__Fi\n+vector<int>::elem(int)\n+#\n+--format=hp\n+__ct__6vectorXTd__Fi\n+vector<double>::vector(int)\n+#\n+--format=hp\n+__ct__6vectorXTi__Fi\n+vector<int>::vector(int)\n+#\n+--format=hp\n+__ct__9DListNodeXTR6RLabel__FR6RLabelP9DListNodeXTR6RLabel_T2\n+DListNode<RLabel &>::DListNode(RLabel &, DListNode<RLabel &> *, DListNode<RLabel &> *)\n+#\n+--format=hp\n+elem__6vectorXTiUP34__Fi\n+vector<int,34U>::elem(int)\n+#\n+--format=hp\n+elem__6vectorXUP2701Td__Fi\n+vector<2701U,double>::elem(int)\n+#\n+--format=hp\n+elem__6vectorXTiSP334__Fi\n+vector<int,334>::elem(int)\n+#\n+--format=hp\n+elem__6vectorXTiSN67__Fi\n+vector<int,-67>::elem(int)\n+#\n+--format=hp\n+elem__6vectorXTiSM__SCFPPd\n+vector<int,-2147483648>::elem(double **) static const\n+#\n+--format=hp\n+elem__6vectorXTiSN67UP4000TRs__Fi\n+vector<int,-67,4000U,short &>::elem(int)\n+#\n+--format=hp\n+elem__6vectorXTiSN67TRdTFPv_i__Fi\n+vector<int,-67,double &,int (void *)>::elem(int)\n+#\n+--format=hp\n+X__6vectorXTiSN67TdTPvUP5TRs\n+vector<int,-67,double,void *,5U,short &>::X\n+#\n+--format=hp\n+elem__6vectorXTiA3foo__Fi\n+vector<int,&foo>::elem(int)\n+#\n+--format=hp\n+elem__6vectorXTiA3fooTPvA5Label__FiPPvT2\n+vector<int,&foo,void *,&Label>::elem(int, void **, void **)\n+#\n+--format=hp\n+elem__6vectorXTiSN42A3foo__Fi\n+vector<int,-42,&foo>::elem(int)\n+#\n+--format=hp\n+__ct__2T5XTPFcPv_i__Fi_2\n+T5<int (*)(char, void *)>::T5(int)\n+#\n+--format=hp\n+__ct__2T5XTPFcPv_i__Fi_19\n+T5<int (*)(char, void *)>::T5(int)\n+#\n+--format=hp\n+f__FicdPcPFci_v_34\n+f(int, char, double, char *, void (*)(char, int))\n+#\n+--format=hp\n+spec__13Spec<#1,#1.*>XTiTPi_FPi\n+Spec<int,int *>::spec(int *)\n+#\n+--format=hp\n+spec__16Spec<#1,#1.&,#1>XTiTRiTi_FPi\n+Spec<int,int &,int>::spec(int *)\n+#\n+--format=hp\n+add__XTc_FcT1\n+add<char>(char, char)\n+#\n+--format=hp\n+add__XTcSP9A5label_FcPPlT1\n+add<char,9,&label>(char, long **, char)\n+#\n+--format=hp\n+add__XTPfTFPd_f_FcT1\n+add<float *,float (double *)>(char, char)\n+#\n+--format=hp\n+unLink__12basic_stringXTcT18string_char_traitsXTc_T9allocator_Fv\n+basic_string<char,string_char_traits<char>,allocator>::unLink(void)\n+#\n+# A regression test with no args.  This used to cause a segv.\n+\n+_Utf390_1__1_9223372036854775807__9223372036854775\n+_Utf390_1__1_9223372036854775807__9223372036854775"}, {"sha": "bd48ce9013ec39bb2fef238249de33bcd24ad018", "filename": "libiberty/testsuite/regress-demangle", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c72138aa2c52e51598f2a1f82325bb109f8b529/libiberty%2Ftestsuite%2Fregress-demangle", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c72138aa2c52e51598f2a1f82325bb109f8b529/libiberty%2Ftestsuite%2Fregress-demangle", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Fregress-demangle?ref=7c72138aa2c52e51598f2a1f82325bb109f8b529", "patch": "@@ -0,0 +1,28 @@\n+#! /bin/sh\n+\n+# Run a regression test for the demangler.\n+# Usage: regress-demangle TEST-FILE\n+\n+failures=0\n+count=0\n+sed -e '/^#/ d' \"$1\" | (\n+  while read type; do\n+     read mangled\n+     read demangled\n+\n+     x=\"`echo $mangled | ./test-filter $type`\"\n+     count=`expr $count + 1`\n+     if test \"x$x\" != \"x$demangled\"; then\n+\tfailures=`expr $failures + 1`\n+\techo \"FAIL: $type $mangled\"\n+     fi\n+  done\n+\n+  if test $failures -eq 0; then\n+     echo \"All $count tests passed\"\n+  else\n+     echo \"$failures of $count tests failed\"\n+  fi\n+\n+  test $failures -eq 0\n+)"}]}