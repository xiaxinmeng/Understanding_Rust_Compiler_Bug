{"sha": "171125708adc225b28da35f2f50d2554c0d5f595", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTcxMTI1NzA4YWRjMjI1YjI4ZGEzNWYyZjUwZDI1NTRjMGQ1ZjU5NQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2018-11-21T08:31:04Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-11-21T08:31:04Z"}, "message": "[libbacktrace] Factor out read_string\n\nFactor out new function read_string in dwarf.c.\n\nBootstrapped and reg-tested on x86_64.\n\n2018-11-21  Tom de Vries  <tdevries@suse.de>\n\n\t* dwarf.c (read_string): Factor out of ...\n\t(read_attribute, read_line_header, read_line_program): ... here.\n\nFrom-SVN: r266339", "tree": {"sha": "559ba9d02ffa6b0d07ed38e7487acddafaeb1998", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/559ba9d02ffa6b0d07ed38e7487acddafaeb1998"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/171125708adc225b28da35f2f50d2554c0d5f595", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/171125708adc225b28da35f2f50d2554c0d5f595", "html_url": "https://github.com/Rust-GCC/gccrs/commit/171125708adc225b28da35f2f50d2554c0d5f595", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/171125708adc225b28da35f2f50d2554c0d5f595/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "25baeeb36ea512632ca128b6fc3f3ab27f17203b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25baeeb36ea512632ca128b6fc3f3ab27f17203b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25baeeb36ea512632ca128b6fc3f3ab27f17203b"}], "stats": {"total": 44, "additions": 33, "deletions": 11}, "files": [{"sha": "c2963f5fe8a615ce61247e12090bb96680e166e3", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/171125708adc225b28da35f2f50d2554c0d5f595/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/171125708adc225b28da35f2f50d2554c0d5f595/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=171125708adc225b28da35f2f50d2554c0d5f595", "patch": "@@ -1,3 +1,8 @@\n+2018-11-21  Tom de Vries  <tdevries@suse.de>\n+\n+\t* dwarf.c (read_string): Factor out of ...\n+\t(read_attribute, read_line_header, read_line_program): ... here.\n+\n 2018-10-31  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR bootstrap/82856"}, {"sha": "c4f8732c7ebdd3ff64a70db3af1f723575f0153a", "filename": "libbacktrace/dwarf.c", "status": "modified", "additions": 28, "deletions": 11, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/171125708adc225b28da35f2f50d2554c0d5f595/libbacktrace%2Fdwarf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/171125708adc225b28da35f2f50d2554c0d5f595/libbacktrace%2Fdwarf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fdwarf.c?ref=171125708adc225b28da35f2f50d2554c0d5f595", "patch": "@@ -411,6 +411,25 @@ advance (struct dwarf_buf *buf, size_t count)\n   return 1;\n }\n \n+/* Read one zero-terminated string from BUF and advance past the string.  */\n+\n+static const char *\n+read_string (struct dwarf_buf *buf)\n+{\n+  const char *p = (const char *)buf->buf;\n+  size_t len = strnlen (p, buf->left);\n+\n+  /* - If len == left, we ran out of buffer before finding the zero terminator.\n+       Generate an error by advancing len + 1.\n+     - If len < left, advance by len + 1 to skip past the zero terminator.  */\n+  size_t count = len + 1;\n+\n+  if (!advance (buf, count))\n+    return NULL;\n+\n+  return p;\n+}\n+\n /* Read one byte from BUF and advance 1 byte.  */\n \n static unsigned char\n@@ -694,8 +713,8 @@ read_attribute (enum dwarf_form form, struct dwarf_buf *buf,\n       return 1;\n     case DW_FORM_string:\n       val->encoding = ATTR_VAL_STRING;\n-      val->u.string = (const char *) buf->buf;\n-      return advance (buf, strnlen ((const char *) buf->buf, buf->left) + 1);\n+      val->u.string = read_string (buf);\n+      return val->u.string == NULL ? 0 : 1;\n     case DW_FORM_block:\n       val->encoding = ATTR_VAL_BLOCK;\n       return advance (buf, read_uleb128 (buf));\n@@ -1649,11 +1668,10 @@ read_line_header (struct backtrace_state *state, struct unit *u,\n       if (hdr_buf.reported_underflow)\n \treturn 0;\n \n-      hdr->dirs[i] = (const char *) hdr_buf.buf;\n-      ++i;\n-      if (!advance (&hdr_buf,\n-\t\t    strnlen ((const char *) hdr_buf.buf, hdr_buf.left) + 1))\n+      hdr->dirs[i] = read_string (&hdr_buf);\n+      if (hdr->dirs[i] == NULL)\n \treturn 0;\n+      ++i;\n     }\n   if (!advance (&hdr_buf, 1))\n     return 0;\n@@ -1687,9 +1705,8 @@ read_line_header (struct backtrace_state *state, struct unit *u,\n       if (hdr_buf.reported_underflow)\n \treturn 0;\n \n-      filename = (const char *) hdr_buf.buf;\n-      if (!advance (&hdr_buf,\n-\t\t    strnlen ((const char *) hdr_buf.buf, hdr_buf.left) + 1))\n+      filename = read_string (&hdr_buf);\n+      if (filename == NULL)\n \treturn 0;\n       dir_index = read_uleb128 (&hdr_buf);\n       if (IS_ABSOLUTE_PATH (filename)\n@@ -1808,8 +1825,8 @@ read_line_program (struct backtrace_state *state, struct dwarf_data *ddata,\n \t\tconst char *f;\n \t\tunsigned int dir_index;\n \n-\t\tf = (const char *) line_buf->buf;\n-\t\tif (!advance (line_buf, strnlen (f, line_buf->left) + 1))\n+\t\tf = read_string (line_buf);\n+\t\tif (f == NULL)\n \t\t  return 0;\n \t\tdir_index = read_uleb128 (line_buf);\n \t\t/* Ignore that time and length.  */"}]}