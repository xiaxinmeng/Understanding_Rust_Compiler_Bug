{"sha": "c070dcf73313ae48f3686b3beaa267802d757ab3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA3MGRjZjczMzEzYWU0OGYzNjg2YjNiZWFhMjY3ODAyZDc1N2FiMw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-29T22:05:11Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-29T22:05:11Z"}, "message": "comment change.\n\nFrom-SVN: r4797", "tree": {"sha": "f80ac1d91af5d306853f2d30f9fcad622f11bce0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f80ac1d91af5d306853f2d30f9fcad622f11bce0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c070dcf73313ae48f3686b3beaa267802d757ab3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c070dcf73313ae48f3686b3beaa267802d757ab3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c070dcf73313ae48f3686b3beaa267802d757ab3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c070dcf73313ae48f3686b3beaa267802d757ab3/comments", "author": null, "committer": null, "parents": [{"sha": "72cdb410fd69dac68bc8c6ba190dff6534ba7e8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72cdb410fd69dac68bc8c6ba190dff6534ba7e8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72cdb410fd69dac68bc8c6ba190dff6534ba7e8b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "fb63387b4f11d66457e2332db46cf3b15bf4ee45", "filename": "gcc/combine.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c070dcf73313ae48f3686b3beaa267802d757ab3/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c070dcf73313ae48f3686b3beaa267802d757ab3/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=c070dcf73313ae48f3686b3beaa267802d757ab3", "patch": "@@ -3997,7 +3997,7 @@ subst (x, from, to, in_dest, unique_copy)\n \t means that we only care about the low bits of the result.\n \n \t However, on most machines (those with neither BYTE_LOADS_ZERO_EXTEND\n-\t nor BYTES_LOADS_SIGN_EXTEND defined), we cannot perform a\n+\t nor BYTE_LOADS_SIGN_EXTEND defined), we cannot perform a\n \t narrower operation that requested since the high-order bits will\n \t be undefined.  On machine where BYTE_LOADS_*_EXTEND is defined,\n \t however, this transformation is safe as long as M1 and M2 have"}]}