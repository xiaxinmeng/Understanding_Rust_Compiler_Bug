{"sha": "c05fc0c2e1dc82c3e8c53a8d492bd7e0578868ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA1ZmMwYzJlMWRjODJjM2U4YzUzYThkNDkyYmQ3ZTA1Nzg4NjhlYw==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-12-19T11:01:05Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-12-19T11:01:05Z"}, "message": "2003-12-19  Michael Koch  <konqueror@gmx.de>\n\n\t* java/util/SimpleTimeZone.java\n\t(setStartRule): Reformated documentation.\n\t(setEndRule): Reworked documentation.\n\t(getDSTSavings): Fixed @since tag.\n\t(setDSTSavings): New method.\n\nFrom-SVN: r74831", "tree": {"sha": "ec3b080542a4aa34ccef9023d8c207c14ee8a049", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec3b080542a4aa34ccef9023d8c207c14ee8a049"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c05fc0c2e1dc82c3e8c53a8d492bd7e0578868ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c05fc0c2e1dc82c3e8c53a8d492bd7e0578868ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c05fc0c2e1dc82c3e8c53a8d492bd7e0578868ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c05fc0c2e1dc82c3e8c53a8d492bd7e0578868ec/comments", "author": null, "committer": null, "parents": [{"sha": "b2fbbf564f3464ab69826e5e62cf8c6d9873fe35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2fbbf564f3464ab69826e5e62cf8c6d9873fe35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2fbbf564f3464ab69826e5e62cf8c6d9873fe35"}], "stats": {"total": 40, "additions": 33, "deletions": 7}, "files": [{"sha": "13db38aa970c3ddd87174f20bb144443d13d5b89", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05fc0c2e1dc82c3e8c53a8d492bd7e0578868ec/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05fc0c2e1dc82c3e8c53a8d492bd7e0578868ec/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=c05fc0c2e1dc82c3e8c53a8d492bd7e0578868ec", "patch": "@@ -1,3 +1,11 @@\n+2003-12-19  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/util/SimpleTimeZone.java\n+\t(setStartRule): Reformated documentation.\n+\t(setEndRule): Reworked documentation.\n+\t(getDSTSavings): Fixed @since tag.\n+\t(setDSTSavings): New method.\n+\n 2003-12-19  Michael Koch  <konqueror@gmx.de>\n \n \t* java/text/NumberFormat.java: Sorted imports."}, {"sha": "31b85e189725c620af9ffab51413085f0f5f0989", "filename": "libjava/java/util/SimpleTimeZone.java", "status": "modified", "additions": 25, "deletions": 7, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05fc0c2e1dc82c3e8c53a8d492bd7e0578868ec/libjava%2Fjava%2Futil%2FSimpleTimeZone.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05fc0c2e1dc82c3e8c53a8d492bd7e0578868ec/libjava%2Fjava%2Futil%2FSimpleTimeZone.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FSimpleTimeZone.java?ref=c05fc0c2e1dc82c3e8c53a8d492bd7e0578868ec", "patch": "@@ -1,5 +1,5 @@\n /* java.util.SimpleTimeZone\n-   Copyright (C) 1998, 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2003 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -390,7 +390,8 @@ else if (dayOfWeek > 0)\n    * @param dayOfWeek The day of week where daylight savings start.\n    * @param time The time in milliseconds standard time where daylight\n    * savings start.\n-   * @see SimpleTimeZone */\n+   * @see SimpleTimeZone\n+   */\n   public void setStartRule(int month, int day, int dayOfWeek, int time)\n   {\n     this.startMode = checkRule(month, day, dayOfWeek);\n@@ -411,11 +412,12 @@ public void setStartRule(int month, int day, int dayOfWeek, int time)\n    *\n    * @param rawOffset The time offset from GMT.\n    * @param id  The identifier of this time zone.\n-   * @param Month The end month of daylight savings.\n+   * @param month The end month of daylight savings.\n    * @param day A day in month, or a day of week in month.\n-   * @param DayOfWeek A day of week, when daylight savings ends.\n-   * @param Time A time in millis in standard time.\n-   * @see #setStartRule */\n+   * @param dayOfWeek A day of week, when daylight savings ends.\n+   * @param time A time in millis in standard time.\n+   * @see #setStartRule\n+   */\n   public void setEndRule(int month, int day, int dayOfWeek, int time)\n   {\n     this.endMode = checkRule(month, day, dayOfWeek);\n@@ -509,13 +511,29 @@ public void setRawOffset(int rawOffset)\n    * is one hour, but for some time zones this may be half an our.\n    * @return the daylight savings offset in milliseconds.\n    * \n-   * @since JDK1.2\n+   * @since 1.2\n    */\n   public int getDSTSavings()\n   {\n     return dstSavings;\n   }\n \n+  /**\n+   * Sets the daylight savings offset.  This is a positive offset in\n+   * milliseconds with respect to standard time.\n+   *\n+   * @param dstSavings the daylight savings offset in milliseconds.\n+   *\n+   * @since 1.2\n+   */\n+  public void setDSTSavings(int dstSavings)\n+  {\n+    if (dstSavings <= 0)\n+      throw new IllegalArgumentException(\"illegal value for dstSavings\");\n+    \n+    this.dstSavings = dstSavings;\n+  }\n+\n   /**\n    * Returns if this time zone uses daylight savings time.\n    * @return true, if we use daylight savings time, false otherwise."}]}