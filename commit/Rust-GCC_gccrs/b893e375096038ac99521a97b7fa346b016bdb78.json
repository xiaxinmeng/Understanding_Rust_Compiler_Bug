{"sha": "b893e375096038ac99521a97b7fa346b016bdb78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg5M2UzNzUwOTYwMzhhYzk5NTIxYTk3YjdmYTM0NmIwMTZiZGI3OA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-08-12T17:25:23Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-08-12T17:25:23Z"}, "message": "re PR c++/55095 (Wshift-overflow)\n\n\tPR c++/55095\n\t* c-common.c (maybe_warn_shift_overflow): Properly handle\n\tleft-shifting 1 into the sign bit.\n\n\t* c-c++-common/Wshift-overflow-6.c: New test.\n\t* c-c++-common/Wshift-overflow-7.c: New test.\n\t* g++.dg/cpp1y/left-shift-2.C: New test.\n\nFrom-SVN: r226826", "tree": {"sha": "61fb3ae13f36228936da84dc60d9e477d727f37e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61fb3ae13f36228936da84dc60d9e477d727f37e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b893e375096038ac99521a97b7fa346b016bdb78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b893e375096038ac99521a97b7fa346b016bdb78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b893e375096038ac99521a97b7fa346b016bdb78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b893e375096038ac99521a97b7fa346b016bdb78/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bb2978b8fd41165054ffe3cfcfa5311fffaf13cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb2978b8fd41165054ffe3cfcfa5311fffaf13cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb2978b8fd41165054ffe3cfcfa5311fffaf13cd"}], "stats": {"total": 128, "additions": 124, "deletions": 4}, "files": [{"sha": "c67c26ce7721b8ded5800ce2a4aa636cd0bbff97", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b893e375096038ac99521a97b7fa346b016bdb78/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b893e375096038ac99521a97b7fa346b016bdb78/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=b893e375096038ac99521a97b7fa346b016bdb78", "patch": "@@ -1,3 +1,9 @@\n+2015-08-12  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/55095\n+\t* c-common.c (maybe_warn_shift_overflow): Properly handle\n+\tleft-shifting 1 into the sign bit.\n+\n 2015-08-09  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \t* c.opt (Wchkp): Use LangEnabledBy instead of EnabledBy."}, {"sha": "13175d84f41ce9d12f1a4dfa881ab3fc31757ea5", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b893e375096038ac99521a97b7fa346b016bdb78/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b893e375096038ac99521a97b7fa346b016bdb78/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=b893e375096038ac99521a97b7fa346b016bdb78", "patch": "@@ -12442,9 +12442,10 @@ maybe_warn_shift_overflow (location_t loc, tree op0, tree op1)\n   if (TYPE_UNSIGNED (type0))\n     return false;\n \n+  unsigned int min_prec = (wi::min_precision (op0, SIGNED)\n+\t\t\t   + TREE_INT_CST_LOW (op1));\n   /* Handle the left-shifting 1 into the sign bit case.  */\n-  if (integer_onep (op0)\n-      && compare_tree_int (op1, prec0 - 1) == 0)\n+  if (min_prec == prec0 + 1)\n     {\n       /* Never warn for C++14 onwards.  */\n       if (cxx_dialect >= cxx14)\n@@ -12456,8 +12457,6 @@ maybe_warn_shift_overflow (location_t loc, tree op0, tree op1)\n \treturn true;\n     }\n \n-  unsigned int min_prec = (wi::min_precision (op0, SIGNED)\n-\t\t\t   + TREE_INT_CST_LOW (op1));\n   bool overflowed = min_prec > prec0;\n   if (overflowed && c_inhibit_evaluation_warnings == 0)\n     warning_at (loc, OPT_Wshift_overflow_,"}, {"sha": "0a8679bf8a5dc7b177f11df6451afb644ce1840f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b893e375096038ac99521a97b7fa346b016bdb78/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b893e375096038ac99521a97b7fa346b016bdb78/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b893e375096038ac99521a97b7fa346b016bdb78", "patch": "@@ -1,3 +1,10 @@\n+2015-08-12  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/55095\n+\t* c-c++-common/Wshift-overflow-6.c: New test.\n+\t* c-c++-common/Wshift-overflow-7.c: New test.\n+\t* g++.dg/cpp1y/left-shift-2.C: New test.\n+\n 2015-08-12  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/52742"}, {"sha": "d540dea8aae6a815c56c3366a2a0181cea38b0ec", "filename": "gcc/testsuite/c-c++-common/Wshift-overflow-6.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b893e375096038ac99521a97b7fa346b016bdb78/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-overflow-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b893e375096038ac99521a97b7fa346b016bdb78/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-overflow-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-overflow-6.c?ref=b893e375096038ac99521a97b7fa346b016bdb78", "patch": "@@ -0,0 +1,36 @@\n+/* PR c++/55095 */\n+/* { dg-do compile { target int32 } } */\n+/* { dg-options \"-Wshift-overflow=1\" } */\n+/* { dg-additional-options \"-std=c++11\" { target c++ } } */\n+\n+int i00 = 0b1 << 31;\n+int i01 = 0b10 << 30;\n+int i02 = 0b100 << 29;\n+int i03 = 0b1000 << 28;\n+int i04 = 0b10000 << 27;\n+int i05 = 0b100000 << 26;\n+int i06 = 0b1000000 << 25;\n+int i07 = 0b10000000 << 24;\n+int i08 = 0b100000000 << 23;\n+int i09 = 0b1000000000 << 22;\n+int i10 = 0b10000000000 << 21;\n+int i11 = 0b100000000000 << 20;\n+int i12 = 0b1000000000000 << 19;\n+int i13 = 0b10000000000000 << 18;\n+int i14 = 0b100000000000000 << 17;\n+int i15 = 0b1000000000000000 << 16;\n+int i16 = 0b10000000000000000 << 15;\n+int i17 = 0b100000000000000000 << 14;\n+int i18 = 0b1000000000000000000 << 13;\n+int i19 = 0b10000000000000000000 << 12;\n+int i20 = 0b100000000000000000000 << 11;\n+int i21 = 0b1000000000000000000000 << 10;\n+int i22 = 0b10000000000000000000000 << 9;\n+int i23 = 0b100000000000000000000000 << 8;\n+int i24 = 0b1000000000000000000000000 << 7;\n+int i25 = 0b10000000000000000000000000 << 6;\n+int i26 = 0b100000000000000000000000000 << 5;\n+int i27 = 0b1000000000000000000000000000 << 4;\n+int i28 = 0b10000000000000000000000000000 << 3;\n+int i29 = 0b100000000000000000000000000000 << 2;\n+int i30 = 0b1000000000000000000000000000000 << 1;"}, {"sha": "0eb1fef94c76df76bf088fb688e06f119920aadf", "filename": "gcc/testsuite/c-c++-common/Wshift-overflow-7.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b893e375096038ac99521a97b7fa346b016bdb78/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-overflow-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b893e375096038ac99521a97b7fa346b016bdb78/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-overflow-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-overflow-7.c?ref=b893e375096038ac99521a97b7fa346b016bdb78", "patch": "@@ -0,0 +1,36 @@\n+/* PR c++/55095 */\n+/* { dg-do compile { target int32 } } */\n+/* { dg-options \"-Wshift-overflow=2\" } */\n+/* { dg-additional-options \"-std=c++11\" { target c++ } } */\n+\n+int i00 = 0b1 << 31; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i01 = 0b10 << 30; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i02 = 0b100 << 29; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i03 = 0b1000 << 28; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i04 = 0b10000 << 27; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i05 = 0b100000 << 26; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i06 = 0b1000000 << 25; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i07 = 0b10000000 << 24; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i08 = 0b100000000 << 23; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i09 = 0b1000000000 << 22; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i10 = 0b10000000000 << 21; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i11 = 0b100000000000 << 20; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i12 = 0b1000000000000 << 19; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i13 = 0b10000000000000 << 18; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i14 = 0b100000000000000 << 17; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i15 = 0b1000000000000000 << 16; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i16 = 0b10000000000000000 << 15; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i17 = 0b100000000000000000 << 14; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i18 = 0b1000000000000000000 << 13; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i19 = 0b10000000000000000000 << 12; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i20 = 0b100000000000000000000 << 11; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i21 = 0b1000000000000000000000 << 10; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i22 = 0b10000000000000000000000 << 9; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i23 = 0b100000000000000000000000 << 8; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i24 = 0b1000000000000000000000000 << 7; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i25 = 0b10000000000000000000000000 << 6; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i26 = 0b100000000000000000000000000 << 5; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i27 = 0b1000000000000000000000000000 << 4; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i28 = 0b10000000000000000000000000000 << 3; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i29 = 0b100000000000000000000000000000 << 2; /* { dg-warning \"requires 33 bits to represent\" } */\n+int i30 = 0b1000000000000000000000000000000 << 1; /* { dg-warning \"requires 33 bits to represent\" } */"}, {"sha": "342f90726ad81ec9c3ab552019e3ea64cf1e209a", "filename": "gcc/testsuite/g++.dg/cpp1y/left-shift-2.C", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b893e375096038ac99521a97b7fa346b016bdb78/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fleft-shift-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b893e375096038ac99521a97b7fa346b016bdb78/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fleft-shift-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fleft-shift-2.C?ref=b893e375096038ac99521a97b7fa346b016bdb78", "patch": "@@ -0,0 +1,36 @@\n+// PR c++/55095\n+// { dg-do compile { target c++14 } }\n+// { dg-options \"-Wshift-overflow=2\" }\n+// { dg-require-effective-target int32 }\n+\n+int i00 = 0b1 << 31;\n+int i01 = 0b10 << 30;\n+int i02 = 0b100 << 29;\n+int i03 = 0b1000 << 28;\n+int i04 = 0b10000 << 27;\n+int i05 = 0b100000 << 26;\n+int i06 = 0b1000000 << 25;\n+int i07 = 0b10000000 << 24;\n+int i08 = 0b100000000 << 23;\n+int i09 = 0b1000000000 << 22;\n+int i10 = 0b10000000000 << 21;\n+int i11 = 0b100000000000 << 20;\n+int i12 = 0b1000000000000 << 19;\n+int i13 = 0b10000000000000 << 18;\n+int i14 = 0b100000000000000 << 17;\n+int i15 = 0b1000000000000000 << 16;\n+int i16 = 0b10000000000000000 << 15;\n+int i17 = 0b100000000000000000 << 14;\n+int i18 = 0b1000000000000000000 << 13;\n+int i19 = 0b10000000000000000000 << 12;\n+int i20 = 0b100000000000000000000 << 11;\n+int i21 = 0b1000000000000000000000 << 10;\n+int i22 = 0b10000000000000000000000 << 9;\n+int i23 = 0b100000000000000000000000 << 8;\n+int i24 = 0b1000000000000000000000000 << 7;\n+int i25 = 0b10000000000000000000000000 << 6;\n+int i26 = 0b100000000000000000000000000 << 5;\n+int i27 = 0b1000000000000000000000000000 << 4;\n+int i28 = 0b10000000000000000000000000000 << 3;\n+int i29 = 0b100000000000000000000000000000 << 2;\n+int i30 = 0b1000000000000000000000000000000 << 1;"}]}