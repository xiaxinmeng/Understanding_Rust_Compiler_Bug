{"sha": "a663ce5a831198b5ef99cbc0b7205a2d9a37a574", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTY2M2NlNWE4MzExOThiNWVmOTljYmMwYjcyMDVhMmQ5YTM3YTU3NA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-11-21T00:47:50Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-11-21T00:47:50Z"}, "message": "re PR c++/63658 (Using class reference as template parameter causes compilation to fail)\n\n\tPR c++/63658\n\t* pt.c (convert_nontype_argument): Call convert_from_reference.\n\t(check_instantiated_arg): Don't be confused by reference refs.\n\t(unify): Look through reference refs on the arg, too.\n\t* mangle.c (write_template_arg): Look through reference refs.\n\nFrom-SVN: r217900", "tree": {"sha": "d1eea4dffcb9657dfe21b9a6e9b9509e2752f8c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1eea4dffcb9657dfe21b9a6e9b9509e2752f8c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a663ce5a831198b5ef99cbc0b7205a2d9a37a574", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a663ce5a831198b5ef99cbc0b7205a2d9a37a574", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a663ce5a831198b5ef99cbc0b7205a2d9a37a574", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a663ce5a831198b5ef99cbc0b7205a2d9a37a574/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e4c4792d37be8f7835dac75e929e7011ccba91fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4c4792d37be8f7835dac75e929e7011ccba91fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4c4792d37be8f7835dac75e929e7011ccba91fa"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "ee431a1091d0a5c93aa2265a88759b2119ab6488", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a663ce5a831198b5ef99cbc0b7205a2d9a37a574/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a663ce5a831198b5ef99cbc0b7205a2d9a37a574/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a663ce5a831198b5ef99cbc0b7205a2d9a37a574", "patch": "@@ -1,5 +1,11 @@\n 2014-11-20  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/63658\n+\t* pt.c (convert_nontype_argument): Call convert_from_reference.\n+\t(check_instantiated_arg): Don't be confused by reference refs.\n+\t(unify): Look through reference refs on the arg, too.\n+\t* mangle.c (write_template_arg): Look through reference refs.\n+\n \t* error.c (dump_expr): Avoid printing (*&i) for references.\n \n 2014-11-20  Ville Voutilainen  <ville.voutilainen@gmail.com>"}, {"sha": "4c63df042faf9391d702e2803cd9c825485d904c", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a663ce5a831198b5ef99cbc0b7205a2d9a37a574/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a663ce5a831198b5ef99cbc0b7205a2d9a37a574/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=a663ce5a831198b5ef99cbc0b7205a2d9a37a574", "patch": "@@ -3086,6 +3086,8 @@ write_template_arg (tree node)\n \t}\n     }\n \n+  if (REFERENCE_REF_P (node))\n+    node = TREE_OPERAND (node, 0);\n   if (TREE_CODE (node) == NOP_EXPR\n       && TREE_CODE (TREE_TYPE (node)) == REFERENCE_TYPE)\n     {"}, {"sha": "71b7af1c206ff8862cf8d72981c51e07eb49f5ac", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a663ce5a831198b5ef99cbc0b7205a2d9a37a574/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a663ce5a831198b5ef99cbc0b7205a2d9a37a574/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=a663ce5a831198b5ef99cbc0b7205a2d9a37a574", "patch": "@@ -6174,7 +6174,7 @@ convert_nontype_argument (tree type, tree expr, tsubst_flags_t complain)\n      right type?  */\n   gcc_assert (same_type_ignoring_top_level_qualifiers_p\n \t      (type, TREE_TYPE (expr)));\n-  return expr;\n+  return convert_from_reference (expr);\n }\n \n /* Subroutine of coerce_template_template_parms, which returns 1 if\n@@ -15740,6 +15740,7 @@ check_instantiated_arg (tree tmpl, tree t, tsubst_flags_t complain)\n      constant.  */\n   else if (TREE_TYPE (t)\n \t   && INTEGRAL_OR_ENUMERATION_TYPE_P (TREE_TYPE (t))\n+\t   && !REFERENCE_REF_P (t)\n \t   && !TREE_CONSTANT (t))\n     {\n       if (complain & tf_error)\n@@ -18473,8 +18474,12 @@ unify (tree tparms, tree targs, tree parm, tree arg, int strict,\n \n     case INDIRECT_REF:\n       if (REFERENCE_REF_P (parm))\n-\treturn unify (tparms, targs, TREE_OPERAND (parm, 0), arg,\n-\t\t      strict, explain_p);\n+\t{\n+\t  if (REFERENCE_REF_P (arg))\n+\t    arg = TREE_OPERAND (arg, 0);\n+\t  return unify (tparms, targs, TREE_OPERAND (parm, 0), arg,\n+\t\t\tstrict, explain_p);\n+\t}\n       /* FALLTHRU */\n \n     default:"}, {"sha": "983f627887fb02f12e45a443e3bb2901d2386a69", "filename": "gcc/testsuite/g++.dg/template/ref9.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a663ce5a831198b5ef99cbc0b7205a2d9a37a574/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fref9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a663ce5a831198b5ef99cbc0b7205a2d9a37a574/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fref9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fref9.C?ref=a663ce5a831198b5ef99cbc0b7205a2d9a37a574", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/63658\n+\n+struct Descriptor {};\n+\n+template <Descriptor & D>\n+struct foo\n+{\n+  void size ();\n+};\n+\n+Descriptor g_descriptor = {};\n+\n+template<> void foo<g_descriptor>::size()\n+{\n+}"}]}