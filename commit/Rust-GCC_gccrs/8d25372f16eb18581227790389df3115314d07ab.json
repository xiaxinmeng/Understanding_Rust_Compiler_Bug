{"sha": "8d25372f16eb18581227790389df3115314d07ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQyNTM3MmYxNmViMTg1ODEyMjc3OTAzODlkZjMxMTUzMTRkMDdhYg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-05-20T18:59:05Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-05-20T18:59:05Z"}, "message": "pt.c (convert_template_argument): Add a diagnostic for the [temp.arg]/2 ambiguity case.\n\n\t* pt.c (convert_template_argument): Add a diagnostic for the\n\t[temp.arg]/2 ambiguity case.\n\n\t* g++.dg/cpp2a/nontype-class17.C: New test.\n\nFrom-SVN: r271431", "tree": {"sha": "5e4dfcf6439a49db1583cbd2e9e35cfdee01406b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e4dfcf6439a49db1583cbd2e9e35cfdee01406b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d25372f16eb18581227790389df3115314d07ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d25372f16eb18581227790389df3115314d07ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d25372f16eb18581227790389df3115314d07ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d25372f16eb18581227790389df3115314d07ab/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "215826720508c828b6a5eaca7f0a7396d78ab36b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/215826720508c828b6a5eaca7f0a7396d78ab36b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/215826720508c828b6a5eaca7f0a7396d78ab36b"}], "stats": {"total": 44, "additions": 40, "deletions": 4}, "files": [{"sha": "87ecd7c1f6fcf5bd3e0562ecb1bec69399a18b51", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d25372f16eb18581227790389df3115314d07ab/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d25372f16eb18581227790389df3115314d07ab/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8d25372f16eb18581227790389df3115314d07ab", "patch": "@@ -1,3 +1,8 @@\n+2019-05-20  Marek Polacek  <polacek@redhat.com>\n+\n+\t* pt.c (convert_template_argument): Add a diagnostic for the\n+\t[temp.arg]/2 ambiguity case.\n+\n 2019-05-20  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* cp-tree.h: Remove remnants of CONV_NONCONVERTING."}, {"sha": "3519c7a34a6ea9e23d1d8708b4370aa86cfa613e", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d25372f16eb18581227790389df3115314d07ab/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d25372f16eb18581227790389df3115314d07ab/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=8d25372f16eb18581227790389df3115314d07ab", "patch": "@@ -7963,10 +7963,22 @@ convert_template_argument (tree parm,\n \t\t     \"parameter list for %qD\",\n \t\t     i + 1, in_decl);\n \t      if (is_type)\n-\t\tinform (input_location,\n-\t\t\t\"  expected a constant of type %qT, got %qT\",\n-\t\t\tTREE_TYPE (parm),\n-\t\t\t(DECL_P (arg) ? DECL_NAME (arg) : orig_arg));\n+\t\t{\n+\t\t  /* The template argument is a type, but we're expecting\n+\t\t     an expression.  */\n+\t\t  inform (input_location,\n+\t\t\t  \"  expected a constant of type %qT, got %qT\",\n+\t\t\t  TREE_TYPE (parm),\n+\t\t\t  (DECL_P (arg) ? DECL_NAME (arg) : orig_arg));\n+\t\t  /* [temp.arg]/2: \"In a template-argument, an ambiguity\n+\t\t     between a type-id and an expression is resolved to a\n+\t\t     type-id, regardless of the form of the corresponding\n+\t\t     template-parameter.\"  So give the user a clue.  */\n+\t\t  if (TREE_CODE (arg) == FUNCTION_TYPE)\n+\t\t    inform (input_location, \"  ambiguous template argument \"\n+\t\t\t    \"for non-type template parameter is treated as \"\n+\t\t\t    \"function type\");\n+\t\t}\n \t      else if (requires_tmpl_type)\n \t\tinform (input_location,\n \t\t\t\"  expected a class template, got %qE\", orig_arg);"}, {"sha": "0f4c81c21546eeba13c2ab876f79dca565cc9633", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d25372f16eb18581227790389df3115314d07ab/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d25372f16eb18581227790389df3115314d07ab/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8d25372f16eb18581227790389df3115314d07ab", "patch": "@@ -2,6 +2,8 @@\n \n \t* g++.dg/ext/utf8-2.C: Accept both \"char\" and \"char8_t\" in aka.\n \n+\t* g++.dg/cpp2a/nontype-class17.C: New test.\n+\n 2019-05-20  Jeff Law  <law@redhat.com>\n \n \t* gcc.dg/Wtype-limits-Wextra.c: Adjust expected output after"}, {"sha": "ca5f68e16114ce8caa909e1a9edec736172dde5d", "filename": "gcc/testsuite/g++.dg/cpp2a/nontype-class17.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d25372f16eb18581227790389df3115314d07ab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnontype-class17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d25372f16eb18581227790389df3115314d07ab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnontype-class17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fnontype-class17.C?ref=8d25372f16eb18581227790389df3115314d07ab", "patch": "@@ -0,0 +1,17 @@\n+// { dg-do compile { target c++2a } }\n+\n+template<auto>\n+struct S { };\n+\n+struct R { };\n+\n+void\n+g (void)\n+{\n+  S<R()> s; // { dg-error \"mismatch\" }\n+// { dg-message \"treated as function\" \"note\" { target *-*-* } .-1 }\n+  S<R{}> s2;\n+  S<int()> s3; // { dg-error \"mismatch\" }\n+// { dg-message \"treated as function\" \"note\" { target *-*-* } .-1 }\n+  S<int{}> s4;\n+}"}]}