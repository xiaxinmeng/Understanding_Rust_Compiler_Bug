{"sha": "43c35d0d90214171bd037741d525a0fde73b7755", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNjMzVkMGQ5MDIxNDE3MWJkMDM3NzQxZDUyNWEwZmRlNzNiNzc1NQ==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-06-11T09:09:28Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-06-11T09:09:28Z"}, "message": "Daily bump.", "tree": {"sha": "a8f2617f1f46e4b6eef3236785c33ebd2f836e2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8f2617f1f46e4b6eef3236785c33ebd2f836e2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43c35d0d90214171bd037741d525a0fde73b7755", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43c35d0d90214171bd037741d525a0fde73b7755", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43c35d0d90214171bd037741d525a0fde73b7755", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43c35d0d90214171bd037741d525a0fde73b7755/comments", "author": null, "committer": null, "parents": [{"sha": "e01874cdae4bfdb1d5c5e25c54f14225c5895af3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e01874cdae4bfdb1d5c5e25c54f14225c5895af3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e01874cdae4bfdb1d5c5e25c54f14225c5895af3"}], "stats": {"total": 262, "additions": 261, "deletions": 1}, "files": [{"sha": "da7d4d59a0985e2ef48af348de857ba404be93c6", "filename": "contrib/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c35d0d90214171bd037741d525a0fde73b7755/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c35d0d90214171bd037741d525a0fde73b7755/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=43c35d0d90214171bd037741d525a0fde73b7755", "patch": "@@ -1,3 +1,8 @@\n+2021-06-11  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_update_version.py: Ignore commit that\n+\tviolates rules and was somehow pushed.\n+\n 2021-05-25  Jakub Jelinek  <jakub@redhat.com>\n \n \t* update-copyright.py: Add c++tools."}, {"sha": "5e6ea07f9daea86623726d6cbd120d84355a84f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c35d0d90214171bd037741d525a0fde73b7755/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c35d0d90214171bd037741d525a0fde73b7755/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=43c35d0d90214171bd037741d525a0fde73b7755", "patch": "@@ -1,3 +1,112 @@\n+2021-06-11  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000.md\n+\t(floatsi<SFDF:mode>2_lfiwax_<QHI:mode>_mem_zext): New\n+\tdefine_insn_and_split.\n+\n+2021-06-11  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-slp.c (vect_build_slp_tree_2): Use stablesort\n+\tto sort operands of the associative chain.\n+\n+2021-06-11  Richard Biener  <rguenther@suse.de>\n+\n+\t* system.h (gcc_stablesort_r): Declare.\n+\t* sort.cc (gcc_sort_r): Support stable sort.\n+\t(gcc_stablesort_r): Define.\n+\t* vec.h (vec<>::stablesort): Add.\n+\n+2021-06-10  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/89021\n+\t* config/i386/i386-expand.c (ix86_split_mmx_punpck):\n+\tHandle V2SF mode.  Emit SHUFPS to fixup unpack-high for V2SF mode.\n+\t(expand_vec_perm_blend): Handle 64bit modes for TARGET_SSE4_1.\n+\t(expand_vec_perm_pshufb): Handle 64bit modes for TARGET_SSSE3.\n+\t(expand_vec_perm_pblendv): Handle 64bit modes for TARGET_SSE4_1.\n+\t(expand_vec_perm_interleave2): Handle 64bit modes.\n+\t(expand_vec_perm_even_odd_pack): Handle V8QI mode.\n+\t(expand_vec_perm_even_odd_1): Ditto.\n+\t(ix86_vectorize_vec_perm_const): Ditto.\n+\t* config/i386/i386.md (UNSPEC_PSHUFB): Move from ...\n+\t* config/i386/sse.md: ... here.\n+\t* config/i386/mmx.md (*vec_interleave_lowv2sf):\n+\tNew insn_and_split pattern.\n+\t(*vec_interleave_highv2sf): Ditto.\n+\t(mmx_pshufbv8qi3): New insn pattern.\n+\t(*mmx_pblendw): Ditto.\n+\n+2021-06-10  Peter Bergner  <bergner@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000-builtin.def (build_pair): New built-in.\n+\t(build_acc): Likewise.\n+\t* config/rs6000/rs6000-call.c (mma_expand_builtin): Swap assemble\n+\tsource operands in little-endian mode.\n+\t(rs6000_gimple_fold_mma_builtin): Handle VSX_BUILTIN_BUILD_PAIR.\n+\t(mma_init_builtins): Likewise.\n+\t* config/rs6000/rs6000.c (rs6000_split_multireg_move): Handle endianness\n+\tordering for the MMA assemble and build source operands.\n+\t* doc/extend.texi (__builtin_vsx_build_acc, __builtin_mma_build_pair):\n+\tDocument.\n+\t(__builtin_mma_assemble_acc, __builtin_mma_assemble_pair): Remove\n+\tdocumentation.\n+\n+2021-06-10  Jeff Law  <jeffreyalaw@gmail.com>\n+\n+\t* config/h8300/h8300.c (select_cc_mode): Handle MEM.  Use\n+\tREG_P.\n+\t* config/h8300/extensions.md: Replace _clobber_flags patterns\n+\twith <cczn>.\n+\n+2021-06-10  Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\t* config/s390/vector.md (vcond_mask_<mode><mode>): Change to\n+\t(vcond_mask_<mode><tointvec>): this.\n+\n+2021-06-10  Andrew Stubbs  <ams@codesourcery.com>\n+\t    Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* omp-builtins.def (BUILT_IN_GOACC_ENTER_EXIT_DATA): Split into...\n+\t(BUILT_IN_GOACC_ENTER_DATA, BUILT_IN_GOACC_EXIT_DATA): ... these.\n+\t* gimple.h (enum gf_mask): Split\n+\t'GF_OMP_TARGET_KIND_OACC_ENTER_EXIT_DATA' into\n+\t'GF_OMP_TARGET_KIND_OACC_ENTER_DATA' and\n+\t'GF_OMP_TARGET_KIND_OACC_EXIT_DATA'.\n+\t(is_gimple_omp_oacc): Update.\n+\t* gimple-pretty-print.c (dump_gimple_omp_target): Likewise.\n+\t* gimplify.c (gimplify_omp_target_update): Likewise.\n+\t* omp-expand.c (expand_omp_target, build_omp_regions_1)\n+\t(omp_make_gimple_edges): Likewise.\n+\t* omp-low.c (check_omp_nesting_restrictions, lower_omp_target):\n+\tLikewise.\n+\n+2021-06-10  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* value-query.cc (value_query::value_on_edge): Rename name to\n+\texpr.\n+\t(range_query::range_on_edge): Same.\n+\t(range_query::value_of_expr): Same.\n+\t(range_query::value_on_edge): Same.\n+\t* value-query.h (class value_query): Same.\n+\t(class range_query): Same.\n+\n+2021-06-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/101003\n+\t* tree-vect-slp.c (vect_build_slp_tree_2): Appropriately\n+\tuse the pattern stmt defs when linearizing a chain.\n+\n+2021-06-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/100852\n+\t* ifcvt.c (noce_get_alt_condition, noce_try_abs): Use\n+\tprev_nonnote_nondebug_insn instead of prev_nonnote_insn.\n+\n+2021-06-10  Clement Chigot  <clement.chigot@atos.net>\n+\n+\t* config/rs6000/aix71.h (ASM_CPU_SPEC): Add Power10 directive.\n+\t* config/rs6000/aix72.h (ASM_CPU_SPEC): Likewise.\n+\n 2021-06-09  Andrew Pinski  <apinski@marvell.com>\n \n \tPR tree-optimization/100925"}, {"sha": "702992b4bf6cbeb1a7a949f0e5881e294bd7cdf5", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c35d0d90214171bd037741d525a0fde73b7755/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c35d0d90214171bd037741d525a0fde73b7755/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=43c35d0d90214171bd037741d525a0fde73b7755", "patch": "@@ -1 +1 @@\n-20210610\n+20210611"}, {"sha": "ee5ef36bcd9ec01c3bfd38825cceb8f13dfff1d6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c35d0d90214171bd037741d525a0fde73b7755/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c35d0d90214171bd037741d525a0fde73b7755/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=43c35d0d90214171bd037741d525a0fde73b7755", "patch": "@@ -1,3 +1,27 @@\n+2021-06-11  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/100995\n+\t* constexpr.c (maybe_constexpr_fn): New.\n+\t* cp-tree.h (maybe_constexpr_fn): Declare.\n+\t* semantics.c (find_std_constant_evaluated_r): New.\n+\t(maybe_warn_for_constant_evaluated): New.\n+\t(finish_if_stmt_cond): Call it.\n+\n+2021-06-10  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/67829\n+\t* pt.c (unify) <case BOUND_TEMPLATE_TEMPLATE_PARM>: When\n+\tthe TEMPLATE_DECL of a BOUND_TEMPLATE_TEMPLATE_PARM argument is\n+\ta template template parameter, adjust to the\n+\tTEMPLATE_TEMPLATE_PARAMETER before falling through.\n+\n+2021-06-10  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/100946\n+\t* constraint.cc (normalize_placeholder_type_constraints): When\n+\tnormalizing a non-templated return-type-requirement, add a dummy\n+\tlevel to initial_parms.\n+\n 2021-06-08  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/100065"}, {"sha": "9ba56bee905699e00f43b17598da9bfb6633310d", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c35d0d90214171bd037741d525a0fde73b7755/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c35d0d90214171bd037741d525a0fde73b7755/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=43c35d0d90214171bd037741d525a0fde73b7755", "patch": "@@ -1,3 +1,16 @@\n+2021-06-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/100967\n+\t* d-frontend.cc (getTypeInfoType): Move TypeInfo checks to\n+\tcheck_typeinfo_type and call new function.\n+\t* d-tree.h (check_typeinfo_type): Declare.\n+\t* typeinfo.cc: Include dmd/scope.h.\n+\t(create_frontend_tinfo_types): Generate front-end types even if Object\n+\tis missing.\n+\t(build_typeinfo): Move TypeInfo checks to check_typeinfo_type and call\n+\tnew function.\n+\t(check_typeinfo_type): New function.\n+\n 2021-06-09  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \tPR d/100964"}, {"sha": "9c4c17b90bf78551b20dff54c54c79166b41a735", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c35d0d90214171bd037741d525a0fde73b7755/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c35d0d90214171bd037741d525a0fde73b7755/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=43c35d0d90214171bd037741d525a0fde73b7755", "patch": "@@ -1,3 +1,74 @@\n+2021-06-11  Kewen Lin  <linkw@linux.ibm.com>\n+\n+\t* gcc.target/powerpc/p9-fpcvt-3.c: New test.\n+\n+2021-06-11  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/100995\n+\t* g++.dg/cpp2a/is-constant-evaluated9.C: Add dg-warning.\n+\t* g++.dg/cpp2a/is-constant-evaluated12.C: New test.\n+\n+2021-06-10  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/67829\n+\t* g++.dg/template/ttp34.C: New test.\n+\t* g++.dg/template/ttp34a.C: New test.\n+\t* g++.dg/template/ttp34b.C: New test.\n+\n+2021-06-10  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/100946\n+\t* g++.dg/cpp2a/concepts-return-req3.C: New test.\n+\n+2021-06-10  Peter Bergner  <bergner@linux.ibm.com>\n+\n+\t* gcc.target/powerpc/mma-builtin-4.c (__builtin_vsx_build_pair): Add\n+\ttests.  Update expected counts.\n+\t* gcc.target/powerpc/mma-builtin-5.c (__builtin_mma_build_acc): Add\n+\ttests.  Update expected counts.\n+\n+2021-06-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/100967\n+\t* gdc.dg/pr100967.d: New test.\n+\n+2021-06-10  Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\t* gcc.target/s390/vector/vcond-mixed-double.c: New test.\n+\t* gcc.target/s390/vector/vcond-mixed-float.c: New test.\n+\n+2021-06-10  Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\t* gcc.dg/vect/pr56541.c: Fix target selector.\n+\n+2021-06-10  Andrew Stubbs  <ams@codesourcery.com>\n+\t    Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* c-c++-common/goacc-gomp/nesting-fail-1.c: Adjust patterns.\n+\t* c-c++-common/goacc/finalize-1.c: Likewise.\n+\t* c-c++-common/goacc/mdc-1.c: Likewise.\n+\t* c-c++-common/goacc/nesting-fail-1.c: Likewise.\n+\t* c-c++-common/goacc/struct-enter-exit-data-1.c: Likewise.\n+\t* gfortran.dg/goacc/attach-descriptor.f90: Likewise.\n+\t* gfortran.dg/goacc/finalize-1.f: Likewise.\n+\t* gfortran.dg/goacc/mapping-tests-3.f90: Likewise.\n+\n+2021-06-10  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* c-c++-common/goacc/mdc-1.c: Fix '#pragma acc acc [...]' typo.\n+\t* c-c++-common/goacc/mdc-2.c: Likewise.\n+\t* g++.dg/goacc/mdc.C: Likewise.\n+\n+2021-06-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.dg/cpp2a/feat-cxx2a.C: Uncomment __cpp_consteval test.\n+\t* g++.dg/cpp23/feat-cxx2b.C: Likewise.\n+\n+2021-06-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/100852\n+\t* g++.dg/opt/pr100852.C: New test.\n+\n 2021-06-09  Andrew Pinski  <apinski@marvell.com>\n \n \t* g++.dg/torture/pr100925.C: New test."}, {"sha": "62852e604189c32221ed690e7f78389b277e911a", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c35d0d90214171bd037741d525a0fde73b7755/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c35d0d90214171bd037741d525a0fde73b7755/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=43c35d0d90214171bd037741d525a0fde73b7755", "patch": "@@ -1,3 +1,8 @@\n+2021-06-10  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/quad-float128.h: Guard all uses of [U]TItype_ppc by\n+\t_ARCH_PPC64 .\n+\n 2021-06-09  Carl Love  <cel@us.ibm.com>\n \n \t* config.host: Add if test and set for"}, {"sha": "ed9f258d2f2e3478b9b3be7173c62feb2a6c1774", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43c35d0d90214171bd037741d525a0fde73b7755/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43c35d0d90214171bd037741d525a0fde73b7755/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=43c35d0d90214171bd037741d525a0fde73b7755", "patch": "@@ -1,3 +1,36 @@\n+2021-06-10  Andrew Stubbs  <ams@codesourcery.com>\n+\t    Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* libgomp.map (GOACC_2.0.2): New symbol version.\n+\t* libgomp_g.h (GOACC_enter_data, GOACC_exit_data) New prototypes.\n+\t* oacc-mem.c (GOACC_enter_data, GOACC_exit_data) New functions.\n+\n+2021-06-10  Thomas Schwinge  <thomas@codesourcery.com>\n+\t    Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* oacc-mem.c (goacc_enter_exit_data_internal): New function,\n+\textracted from...\n+\t(GOACC_enter_exit_data): ... here.\n+\t(GOACC_declare): Use it.\n+\n+2021-06-10  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* oacc-parallel.c (GOACC_declare): Move...\n+\t* oacc-mem.c: ... here.\n+\t* libgomp_g.h: Adjust.\n+\n+2021-06-10  Andrew Stubbs  <ams@codesourcery.com>\n+\t    Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* oacc-parallel.c (GOACC_declare): Clean up 'GOMP_MAP_POINTER'\n+\thandling.\n+\n+2021-06-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/100981\n+\t* testsuite/libgomp.fortran/pr100981-2.f90 (cdcdot): Initialize\n+\tdsdotr and dsdoti to 0.\n+\n 2021-06-09  H.J. Lu  <hjl.tools@gmail.com>\n \n \t* testsuite/lib/libgomp.exp (libgomp_init): Don't add -march=i486"}]}