{"sha": "c62b90642287de048ac1735adeb210e3b78ff874", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzYyYjkwNjQyMjg3ZGUwNDhhYzE3MzVhZGViMjEwZTNiNzhmZjg3NA==", "commit": {"author": {"name": "Hans Boehm", "email": "Hans_Boehm@hp.com", "date": "2003-03-04T22:18:08Z"}, "committer": {"name": "Hans Boehm", "email": "hboehm@gcc.gnu.org", "date": "2003-03-04T22:18:08Z"}, "message": "gcconfig.h (GC_data_start): declare when needed.\n\n2003-03-04  Hans Boehm <Hans.Boehm@hp.com>\n\t* include/private/gcconfig.h (GC_data_start): declare when needed.\n\t* include/private/gc_priv.h: Include gcconfig.h after ptr_t\n\tdeclaration.\n\t* dyn_load.c (GC_register_dynamic_libraries_dl_iterate_phdr,\n\tGC_register_dynlib_callback): Register main data for static\n\texecutable if dl_iterate_phdr() didn't.\n\t* misc.c (GC_init_inner): Call GC_init_linux_data_start() even\n\tif we don't expect to register main static data.\n\nFrom-SVN: r63809", "tree": {"sha": "1d91feb234953cb7730e29e49af3ec28ecb7a656", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d91feb234953cb7730e29e49af3ec28ecb7a656"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c62b90642287de048ac1735adeb210e3b78ff874", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c62b90642287de048ac1735adeb210e3b78ff874", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c62b90642287de048ac1735adeb210e3b78ff874", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c62b90642287de048ac1735adeb210e3b78ff874/comments", "author": null, "committer": null, "parents": [{"sha": "65ebbf81604b9234703aaa0bbe332e8d5301945c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65ebbf81604b9234703aaa0bbe332e8d5301945c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65ebbf81604b9234703aaa0bbe332e8d5301945c"}], "stats": {"total": 38, "additions": 30, "deletions": 8}, "files": [{"sha": "c6539791d2f9a1b02d4a473d2cee48d6c275af19", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c62b90642287de048ac1735adeb210e3b78ff874/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c62b90642287de048ac1735adeb210e3b78ff874/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=c62b90642287de048ac1735adeb210e3b78ff874", "patch": "@@ -1,3 +1,13 @@\n+2003-03-04  Hans Boehm <Hans.Boehm@hp.com>\n+\t* include/private/gcconfig.h (GC_data_start): declare when needed.\n+\t* include/private/gc_priv.h: Include gcconfig.h after ptr_t\n+\tdeclaration.\n+\t* dyn_load.c (GC_register_dynamic_libraries_dl_iterate_phdr,\n+\tGC_register_dynlib_callback): Register main data for static\n+\texecutable if dl_iterate_phdr() didn't.\n+\t* misc.c (GC_init_inner): Call GC_init_linux_data_start() even\n+\tif we don't expect to register main static data.\n+\n 2003-03-03  Hans Boehm  <Hans.Boehm@hp.com>\n \t* mark_rts.c (GC_cond_register_dynamic_libraries): add.\n \t(GC_push_roots): explicitly mark free list headers, register"}, {"sha": "71ad5fb1d78d80aa483f2e97ccfafd553d90f767", "filename": "boehm-gc/dyn_load.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c62b90642287de048ac1735adeb210e3b78ff874/boehm-gc%2Fdyn_load.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c62b90642287de048ac1735adeb210e3b78ff874/boehm-gc%2Fdyn_load.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fdyn_load.c?ref=c62b90642287de048ac1735adeb210e3b78ff874", "patch": "@@ -487,6 +487,7 @@ static int GC_register_dynlib_callback(info, size, ptr)\n     }\n   }\n \n+  * (int *)ptr = 1;\t/* Signal that we were called */\n   return 0;\n }     \n \n@@ -496,10 +497,17 @@ static int GC_register_dynlib_callback(info, size, ptr)\n \n GC_bool GC_register_dynamic_libraries_dl_iterate_phdr()\n {\n-  int tmp = 0;\n-\n   if (dl_iterate_phdr) {\n-    dl_iterate_phdr(GC_register_dynlib_callback, &tmp);\n+    int did_something = 0;\n+    dl_iterate_phdr(GC_register_dynlib_callback, &did_something);\n+    if (!did_something) {\n+\t/* dl_iterate_phdr may forget the static data segment in\t*/\n+\t/* statically linked executables.\t\t\t\t*/\n+\tGC_add_roots_inner(DATASTART, (char *)(DATAEND), TRUE);\n+#       if defined(DATASTART2)\n+          GC_add_roots_inner(DATASTART2, (char *)(DATAEND2), TRUE);\n+#       endif\n+    }\n     return TRUE;\n   } else {\n     return FALSE;"}, {"sha": "b09c4840945607dcc0f44a39e7475cbfac982422", "filename": "boehm-gc/include/private/gc_priv.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c62b90642287de048ac1735adeb210e3b78ff874/boehm-gc%2Finclude%2Fprivate%2Fgc_priv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c62b90642287de048ac1735adeb210e3b78ff874/boehm-gc%2Finclude%2Fprivate%2Fgc_priv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Finclude%2Fprivate%2Fgc_priv.h?ref=c62b90642287de048ac1735adeb210e3b78ff874", "patch": "@@ -44,10 +44,6 @@\n #   include \"../gc_mark.h\"\n # endif\n \n-# ifndef GCCONFIG_H\n-#   include \"gcconfig.h\"\n-# endif\n-\n typedef GC_word word;\n typedef GC_signed_word signed_word;\n \n@@ -60,6 +56,10 @@ typedef char * ptr_t;\t/* A generic pointer to which we can add\t*/\n \t\t\t/* Preferably identical to caddr_t, if it \t*/\n \t\t\t/* exists.\t\t\t\t\t*/\n \t\t\t\n+# ifndef GCCONFIG_H\n+#   include \"gcconfig.h\"\n+# endif\n+\n # ifndef HEADERS_H\n #   include \"gc_hdrs.h\"\n # endif"}, {"sha": "51d9de0186ce64a918c7d3187f2b3f1d168c4567", "filename": "boehm-gc/include/private/gcconfig.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c62b90642287de048ac1735adeb210e3b78ff874/boehm-gc%2Finclude%2Fprivate%2Fgcconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c62b90642287de048ac1735adeb210e3b78ff874/boehm-gc%2Finclude%2Fprivate%2Fgcconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Finclude%2Fprivate%2Fgcconfig.h?ref=c62b90642287de048ac1735adeb210e3b78ff874", "patch": "@@ -1810,6 +1810,10 @@\n     /* platforms as well, though it should be avoided in win32.\t\t*/\n # endif /* LINUX */\n \n+# if defined(SEARCH_FOR_DATA_START) && defined(GC_PRIVATE_H)\n+    extern ptr_t GC_data_start;\n+# endif\n+\n # ifndef CLEAR_DOUBLE\n #   define CLEAR_DOUBLE(x) \\\n \t((word*)x)[0] = 0; \\"}, {"sha": "8f83ff3ab53c2a2425a9f22c99c86530788b92fa", "filename": "boehm-gc/misc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c62b90642287de048ac1735adeb210e3b78ff874/boehm-gc%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c62b90642287de048ac1735adeb210e3b78ff874/boehm-gc%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fmisc.c?ref=c62b90642287de048ac1735adeb210e3b78ff874", "patch": "@@ -580,7 +580,7 @@ void GC_init_inner()\n  \tGC_init_win32();\n #   endif\n #   if defined(SEARCH_FOR_DATA_START)\n-\tif (GC_REGISTER_MAIN_STATIC_DATA()) GC_init_linux_data_start();\n+\tGC_init_linux_data_start();\n #   endif\n #   if (defined(NETBSD) || defined(OPENBSD)) && defined(__ELF__)\n \tGC_init_netbsd_elf();"}]}