{"sha": "adfa3cd32b6176686ad4c940a9d3ef1e4d5f77f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRmYTNjZDMyYjYxNzY2ODZhZDRjOTQwYTlkM2VmMWU0ZDVmNzdmOA==", "commit": {"author": {"name": "Andreas Krebbel", "email": "Andreas.Krebbel@de.ibm.com", "date": "2010-04-08T11:23:23Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2010-04-08T11:23:23Z"}, "message": "s390.c (s390_expand_movmem): Issue prefetch instructions for z10.\n\n2010-04-08  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n\n\t* config/s390/s390.c (s390_expand_movmem): Issue prefetch\n\tinstructions for z10.\n\t(s390_expand_setmem): Likewise.\n\t(s390_expand_cmpmem): Likewise.\n\nFrom-SVN: r158116", "tree": {"sha": "05a51d681c123b5b4287b2b474bd456a2203057a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05a51d681c123b5b4287b2b474bd456a2203057a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/adfa3cd32b6176686ad4c940a9d3ef1e4d5f77f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adfa3cd32b6176686ad4c940a9d3ef1e4d5f77f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adfa3cd32b6176686ad4c940a9d3ef1e4d5f77f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adfa3cd32b6176686ad4c940a9d3ef1e4d5f77f8/comments", "author": null, "committer": null, "parents": [{"sha": "84ae6d7ba5b2cc9d0ecbb844486c435598594123", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84ae6d7ba5b2cc9d0ecbb844486c435598594123", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84ae6d7ba5b2cc9d0ecbb844486c435598594123"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "6f4ef744d0ec381f2b2c5857c35a6fcf71bd9cbc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adfa3cd32b6176686ad4c940a9d3ef1e4d5f77f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adfa3cd32b6176686ad4c940a9d3ef1e4d5f77f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=adfa3cd32b6176686ad4c940a9d3ef1e4d5f77f8", "patch": "@@ -1,3 +1,10 @@\n+2010-04-08  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n+\n+\t* config/s390/s390.c (s390_expand_movmem): Issue prefetch\n+\tinstructions for z10.\n+\t(s390_expand_setmem): Likewise.\n+\t(s390_expand_cmpmem): Likewise.\n+\n 2010-04-08  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/43679"}, {"sha": "05ad9f2382e4760ce2db6fc900f9aff6f79e5991", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adfa3cd32b6176686ad4c940a9d3ef1e4d5f77f8/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adfa3cd32b6176686ad4c940a9d3ef1e4d5f77f8/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=adfa3cd32b6176686ad4c940a9d3ef1e4d5f77f8", "patch": "@@ -3940,6 +3940,24 @@ s390_expand_movmem (rtx dst, rtx src, rtx len)\n \n       emit_label (loop_start_label);\n \n+      if (TARGET_Z10\n+\t  && (GET_CODE (len) != CONST_INT || INTVAL (len) > 768))\n+\t{\n+\t  rtx prefetch;\n+\n+\t  /* Issue a read prefetch for the +3 cache line.  */\n+\t  prefetch = gen_prefetch (gen_rtx_PLUS (Pmode, src_addr, GEN_INT (768)),\n+\t\t\t\t   const0_rtx, const0_rtx);\n+\t  PREFETCH_SCHEDULE_BARRIER_P (prefetch) = true;\n+\t  emit_insn (prefetch);\n+\n+\t  /* Issue a write prefetch for the +3 cache line.  */\n+\t  prefetch = gen_prefetch (gen_rtx_PLUS (Pmode, dst_addr, GEN_INT (768)),\n+\t\t\t\t   const1_rtx, const0_rtx);\n+\t  PREFETCH_SCHEDULE_BARRIER_P (prefetch) = true;\n+\t  emit_insn (prefetch);\n+\t}\n+\n       emit_insn (gen_movmem_short (dst, src, GEN_INT (255)));\n       s390_load_address (dst_addr,\n \t\t\t gen_rtx_PLUS (Pmode, dst_addr, GEN_INT (256)));\n@@ -4060,6 +4078,17 @@ s390_expand_setmem (rtx dst, rtx len, rtx val)\n \n       emit_label (loop_start_label);\n \n+      if (TARGET_Z10\n+\t  && (GET_CODE (len) != CONST_INT || INTVAL (len) > 1024))\n+\t{\n+\t  /* Issue a write prefetch for the +4 cache line.  */\n+\t  rtx prefetch = gen_prefetch (gen_rtx_PLUS (Pmode, dst_addr,\n+\t\t\t\t\t\t     GEN_INT (1024)),\n+\t\t\t\t       const1_rtx, const0_rtx);\n+\t  emit_insn (prefetch);\n+\t  PREFETCH_SCHEDULE_BARRIER_P (prefetch) = true;\n+\t}\n+\n       if (val == const0_rtx)\n \temit_insn (gen_clrmem_short (dst, GEN_INT (255)));\n       else\n@@ -4155,6 +4184,24 @@ s390_expand_cmpmem (rtx target, rtx op0, rtx op1, rtx len)\n \n       emit_label (loop_start_label);\n \n+      if (TARGET_Z10\n+\t  && (GET_CODE (len) != CONST_INT || INTVAL (len) > 512))\n+\t{\n+\t  rtx prefetch;\n+\n+\t  /* Issue a read prefetch for the +2 cache line of operand 1.  */\n+\t  prefetch = gen_prefetch (gen_rtx_PLUS (Pmode, addr0, GEN_INT (512)),\n+\t\t\t\t   const0_rtx, const0_rtx);\n+\t  emit_insn (prefetch);\n+\t  PREFETCH_SCHEDULE_BARRIER_P (prefetch) = true;\n+\n+\t  /* Issue a read prefetch for the +2 cache line of operand 2.  */\n+\t  prefetch = gen_prefetch (gen_rtx_PLUS (Pmode, addr1, GEN_INT (512)),\n+\t\t\t\t   const0_rtx, const0_rtx);\n+\t  emit_insn (prefetch);\n+\t  PREFETCH_SCHEDULE_BARRIER_P (prefetch) = true;\n+\t}\n+\n       emit_insn (gen_cmpmem_short (op0, op1, GEN_INT (255)));\n       temp = gen_rtx_NE (VOIDmode, ccreg, const0_rtx);\n       temp = gen_rtx_IF_THEN_ELSE (VOIDmode, temp,"}]}