{"sha": "92f3a180aaf6f3cd0b06e282632fc320445e3c01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTJmM2ExODBhYWY2ZjNjZDBiMDZlMjgyNjMyZmMzMjA0NDVlM2MwMQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2019-01-15T19:52:08Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2019-01-15T19:52:08Z"}, "message": "trans-expr.c (gfc_conv_gfc_desc_to_cfi_desc): Deal with exprs that are indirect references; ie.\n\n2019-01-15  Paul Thomas  <pault@gcc.gnu.org>\n\n\t* trans-expr.c (gfc_conv_gfc_desc_to_cfi_desc): Deal with exprs\n\tthat are indirect references; ie. dummy arguments.\n\n2019-01-15  Paul Thomas  <pault@gcc.gnu.org>\n\n\t* gfortran.dg/ISO_Fortran_binding_2.c : Change reference to\n\tISO_Fortran_binding_2.h.\n\nFrom-SVN: r267946", "tree": {"sha": "2da21eecc2233e94fad3334c4efbde354bd97134", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2da21eecc2233e94fad3334c4efbde354bd97134"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92f3a180aaf6f3cd0b06e282632fc320445e3c01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92f3a180aaf6f3cd0b06e282632fc320445e3c01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92f3a180aaf6f3cd0b06e282632fc320445e3c01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92f3a180aaf6f3cd0b06e282632fc320445e3c01/comments", "author": null, "committer": null, "parents": [{"sha": "51177d3d648e871c936787f073b72389a4683ca3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51177d3d648e871c936787f073b72389a4683ca3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51177d3d648e871c936787f073b72389a4683ca3"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "a8cb6dd505f2dffcb0061b4834dc32ecb06f6c4c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92f3a180aaf6f3cd0b06e282632fc320445e3c01/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92f3a180aaf6f3cd0b06e282632fc320445e3c01/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=92f3a180aaf6f3cd0b06e282632fc320445e3c01", "patch": "@@ -1,3 +1,8 @@\n+2019-01-15  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\t* trans-expr.c (gfc_conv_gfc_desc_to_cfi_desc): Deal with exprs\n+\tthat are indirect references; ie. dummy arguments.\n+\n 2019-01-13  Dominique d'Humieres  <dominiq@gcc.gnu.org>\n \n \tPR fortran/88803"}, {"sha": "b38d784bc0c5e939dd302561ff87b170957edc9f", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92f3a180aaf6f3cd0b06e282632fc320445e3c01/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92f3a180aaf6f3cd0b06e282632fc320445e3c01/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=92f3a180aaf6f3cd0b06e282632fc320445e3c01", "patch": "@@ -4919,6 +4919,10 @@ gfc_conv_gfc_desc_to_cfi_desc (gfc_se *parmse, gfc_expr *e, gfc_symbol *fsym)\n     {\n       gfc_conv_expr_descriptor (parmse, e);\n \n+      if (POINTER_TYPE_P (TREE_TYPE (parmse->expr)))\n+\tparmse->expr = build_fold_indirect_ref_loc (input_location,\n+\t\t\t\t\t\t    parmse->expr);\n+\n       /* All the temporary descriptors are marked as DECL_ARTIFICIAL. If\n \t the expression type is different from the descriptor type, then\n \t the offset must be found (eg. to a component ref or substring)\n@@ -4949,6 +4953,11 @@ gfc_conv_gfc_desc_to_cfi_desc (gfc_se *parmse, gfc_expr *e, gfc_symbol *fsym)\n   else\n     {\n       gfc_conv_expr (parmse, e);\n+\n+      if (POINTER_TYPE_P (TREE_TYPE (parmse->expr)))\n+\tparmse->expr = build_fold_indirect_ref_loc (input_location,\n+\t\t\t\t\t\t    parmse->expr);\n+\n       /* Copy the scalar for INTENT_IN.  */\n       if (e->expr_type == EXPR_VARIABLE && fsym->attr.intent == INTENT_IN)\n \tparmse->expr = gfc_evaluate_now (parmse->expr, &parmse->pre);\n@@ -5875,7 +5884,7 @@ gfc_conv_procedure_call (gfc_se * se, gfc_symbol * sym,\n \t     array-descriptor actual to array-descriptor dummy, see\n \t     PR 41911 for why a check has to be inserted.\n \t     fsym == NULL is checked as intrinsics required the descriptor\n-\t     but do not always set fsym.  \n+\t     but do not always set fsym.\n \t     Also, it is necessary to pass a NULL pointer to library routines\n \t     which usually ignore optional arguments, so they can handle\n \t     these themselves.  */"}, {"sha": "d38a5783686e874d190cfbb14301e454c3e7facd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92f3a180aaf6f3cd0b06e282632fc320445e3c01/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92f3a180aaf6f3cd0b06e282632fc320445e3c01/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=92f3a180aaf6f3cd0b06e282632fc320445e3c01", "patch": "@@ -1,3 +1,8 @@\n+2019-01-15  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\t* gfortran.dg/ISO_Fortran_binding_2.c : Change reference to\n+\tISO_Fortran_binding_2.h.\n+\n 2019-01-15  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/88866"}, {"sha": "d3eb9a4938a3d41edffc09eb6448a82acb99a421", "filename": "gcc/testsuite/gfortran.dg/ISO_Fortran_binding_1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92f3a180aaf6f3cd0b06e282632fc320445e3c01/gcc%2Ftestsuite%2Fgfortran.dg%2FISO_Fortran_binding_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92f3a180aaf6f3cd0b06e282632fc320445e3c01/gcc%2Ftestsuite%2Fgfortran.dg%2FISO_Fortran_binding_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2FISO_Fortran_binding_1.c?ref=92f3a180aaf6f3cd0b06e282632fc320445e3c01", "patch": "@@ -1,6 +1,6 @@\n /* Test F2008 18.5: ISO_Fortran_binding.h functions.  */\n \n-#include <ISO_Fortran_binding.h>\n+#include \"../../../libgfortran/ISO_Fortran_binding.h\"\n #include <stdio.h>\n #include <stdlib.h>\n #include <complex.h>"}]}