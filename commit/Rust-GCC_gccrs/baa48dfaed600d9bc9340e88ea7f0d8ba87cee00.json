{"sha": "baa48dfaed600d9bc9340e88ea7f0d8ba87cee00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFhNDhkZmFlZDYwMGQ5YmM5MzQwZTg4ZWE3ZjBkOGJhODdjZWUwMA==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2009-04-22T08:59:26Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2009-04-22T08:59:26Z"}, "message": "sparc.h (POINTER_SIZE): Fix comment.\n\n2009-04-22  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* config/sparc/sparc.h (POINTER_SIZE): Fix comment.\n\t(Pmode): Move above.\n\nFrom-SVN: r146552", "tree": {"sha": "09b753c4462efb6b8af11a2d717ba058463fef39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09b753c4462efb6b8af11a2d717ba058463fef39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/baa48dfaed600d9bc9340e88ea7f0d8ba87cee00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baa48dfaed600d9bc9340e88ea7f0d8ba87cee00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/baa48dfaed600d9bc9340e88ea7f0d8ba87cee00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baa48dfaed600d9bc9340e88ea7f0d8ba87cee00/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "feec4372c1d33b1d7de0442d9d6308c2b96255ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/feec4372c1d33b1d7de0442d9d6308c2b96255ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/feec4372c1d33b1d7de0442d9d6308c2b96255ca"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "2357c2a6181ce22dfe0bbe4f1f8bde700ef5ec61", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baa48dfaed600d9bc9340e88ea7f0d8ba87cee00/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baa48dfaed600d9bc9340e88ea7f0d8ba87cee00/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=baa48dfaed600d9bc9340e88ea7f0d8ba87cee00", "patch": "@@ -1,3 +1,8 @@\n+2009-04-22  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* config/sparc/sparc.h (POINTER_SIZE): Fix comment.\n+\t(Pmode): Move above.\n+\n 2009-04-22  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/alpha/alpha.c: Use REG_P, MEM_P, CONST_INT_P, JUMP_P,\n@@ -38,10 +43,6 @@\n \t* config/mmix/mmix.h (GO_IF_MODE_DEPENDENT_ADDRESS): Delete.\n \t* config/bfin/bfin.h (GO_IF_MODE_DEPENDENT_ADDRESS): Delete.\n \n-2009-04-22  Paolo Bonzini  <bonzini@gnu.org>\n-\n-\t* config/sparc/sparc.h (POINTER_SIZE): Clarify comment.\n-\n 2009-04-22  Laurynas Biveinis  <laurynas.biveinis@gmail.com>\n \n \t* cfghooks.c (tidy_fallthru_edges): Remove find_basic_blocks"}, {"sha": "c0667700cd41ab1d7272bfe820685a42e7ac819f", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/baa48dfaed600d9bc9340e88ea7f0d8ba87cee00/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/baa48dfaed600d9bc9340e88ea7f0d8ba87cee00/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=baa48dfaed600d9bc9340e88ea7f0d8ba87cee00", "patch": "@@ -625,10 +625,12 @@ extern struct sparc_cpu_select sparc_select[];\n /* The widest floating-point format really supported by the hardware.  */\n #define WIDEST_HARDWARE_FP_SIZE 64\n \n-/* Width in bits of a pointer.\n-   See also the macro `Pmode' defined below.  */\n+/* Width in bits of a pointer.  This is the size of ptr_mode.  */\n #define POINTER_SIZE (TARGET_PTR64 ? 64 : 32)\n \n+/* This is the machine mode used for addresses.  */\n+#define Pmode (TARGET_ARCH64 ? DImode : SImode)\n+\n /* If we have to extend pointers (only when TARGET_ARCH64 and not\n    TARGET_PTR64), we want to do it unsigned.   This macro does nothing\n    if ptr_mode and Pmode are the same.  */\n@@ -2026,9 +2028,6 @@ do {                                                                    \\\n    is done just by pretending it is already truncated.  */\n #define TRULY_NOOP_TRUNCATION(OUTPREC, INPREC) 1\n \n-/* Specify the machine mode used for addresses.  */\n-#define Pmode (TARGET_ARCH64 ? DImode : SImode)\n-\n /* Given a comparison code (EQ, NE, etc.) and the first operand of a COMPARE,\n    return the mode to be used for the comparison.  For floating-point,\n    CCFP[E]mode is used.  CC_NOOVmode should be used when the first operand"}]}