{"sha": "8eeeecbcc17041fdfd3ccc928161ae86e7f9b456", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVlZWVjYmNjMTcwNDFmZGZkM2NjYzkyODE2MWFlODZlN2Y5YjQ1Ng==", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2020-09-03T18:33:14Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2020-09-03T18:33:14Z"}, "message": "PR fortran/96890 - Wrong answer with intrinsic IALL\n\nThe IALL intrinsic would always return 0 when the DIM and MASK arguments\nwere present since the initial value of repeated BIT-AND operations was\nset to 0 instead of -1.\n\nlibgfortran/ChangeLog:\n\n\t* m4/iall.m4: Initial value for result should be -1.\n\t* generated/iall_i1.c (miall_i1): Generated.\n\t* generated/iall_i16.c (miall_i16): Likewise.\n\t* generated/iall_i2.c (miall_i2): Likewise.\n\t* generated/iall_i4.c (miall_i4): Likewise.\n\t* generated/iall_i8.c (miall_i8): Likewise.\n\ngcc/testsuite/ChangeLog:\n\n\t* gfortran.dg/iall_masked.f90: New test.", "tree": {"sha": "03d0de302626130b582dc2597059889d8b87d245", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03d0de302626130b582dc2597059889d8b87d245"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8eeeecbcc17041fdfd3ccc928161ae86e7f9b456", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eeeecbcc17041fdfd3ccc928161ae86e7f9b456", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8eeeecbcc17041fdfd3ccc928161ae86e7f9b456", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eeeecbcc17041fdfd3ccc928161ae86e7f9b456/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "753b4679bc46f6806cf45d9afc3783c6d3b63589", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/753b4679bc46f6806cf45d9afc3783c6d3b63589", "html_url": "https://github.com/Rust-GCC/gccrs/commit/753b4679bc46f6806cf45d9afc3783c6d3b63589"}], "stats": {"total": 34, "additions": 28, "deletions": 6}, "files": [{"sha": "33cc4106a1b942d7d912ef47092f7e4b0813eee5", "filename": "gcc/testsuite/gfortran.dg/iall_masked.f90", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eeeecbcc17041fdfd3ccc928161ae86e7f9b456/gcc%2Ftestsuite%2Fgfortran.dg%2Fiall_masked.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eeeecbcc17041fdfd3ccc928161ae86e7f9b456/gcc%2Ftestsuite%2Fgfortran.dg%2Fiall_masked.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fiall_masked.f90?ref=8eeeecbcc17041fdfd3ccc928161ae86e7f9b456", "patch": "@@ -0,0 +1,22 @@\n+! { dg-do run }\n+! PR fortran/96890 - Wrong answer with intrinsic IALL\n+program p\n+  implicit none\n+  integer :: iarr1(0), iarr2(2,2), iarr3(2,2,2)\n+  logical :: mask1(0), mask2(2,2), mask3(2,2,2)\n+\n+  if (     iall(iarr1,    mask1) /=          -1                 ) stop 1\n+  if (     iall(iarr1, 1, mask1) /=          -1                 ) stop 2\n+\n+  iarr2 = reshape ([  1,      2,       3,      4      ], shape (iarr2))\n+  mask2 = reshape ([ .true., .false., .true., .false. ], shape (mask2))\n+\n+  if (any (iall(iarr2, 2, mask2) /=          [1,-1])            ) stop 3\n+\n+  iarr3 = reshape ([  1,      2,       3,      4,     &\n+                      5,      6,       7,      8      ], shape (iarr3))\n+  mask3 = reshape ([ .true., .false., .true., .false.,&\n+                     .true., .false., .true., .false. ], shape (iarr3))\n+\n+  if (any (iall(iarr3, 2, mask3) /= reshape ([1,-1,5,-1],[2,2]))) stop 4\n+end"}, {"sha": "086a5464aad35203dac6aa91cd20b4f5594941f1", "filename": "libgfortran/generated/iall_i1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eeeecbcc17041fdfd3ccc928161ae86e7f9b456/libgfortran%2Fgenerated%2Fiall_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eeeecbcc17041fdfd3ccc928161ae86e7f9b456/libgfortran%2Fgenerated%2Fiall_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiall_i1.c?ref=8eeeecbcc17041fdfd3ccc928161ae86e7f9b456", "patch": "@@ -345,7 +345,7 @@ miall_i1 (gfc_array_i1 * const restrict retarray,\n       msrc = mbase;\n       {\n \n-  result = 0;\n+  result = (GFC_INTEGER_1) -1;\n \tfor (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t  {\n "}, {"sha": "c491414ca7c35e5b35db26a8aa842851d549ca67", "filename": "libgfortran/generated/iall_i16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eeeecbcc17041fdfd3ccc928161ae86e7f9b456/libgfortran%2Fgenerated%2Fiall_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eeeecbcc17041fdfd3ccc928161ae86e7f9b456/libgfortran%2Fgenerated%2Fiall_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiall_i16.c?ref=8eeeecbcc17041fdfd3ccc928161ae86e7f9b456", "patch": "@@ -345,7 +345,7 @@ miall_i16 (gfc_array_i16 * const restrict retarray,\n       msrc = mbase;\n       {\n \n-  result = 0;\n+  result = (GFC_INTEGER_16) -1;\n \tfor (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t  {\n "}, {"sha": "d43e5df1809f901b7da86d8afcd6ef155a0b4829", "filename": "libgfortran/generated/iall_i2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eeeecbcc17041fdfd3ccc928161ae86e7f9b456/libgfortran%2Fgenerated%2Fiall_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eeeecbcc17041fdfd3ccc928161ae86e7f9b456/libgfortran%2Fgenerated%2Fiall_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiall_i2.c?ref=8eeeecbcc17041fdfd3ccc928161ae86e7f9b456", "patch": "@@ -345,7 +345,7 @@ miall_i2 (gfc_array_i2 * const restrict retarray,\n       msrc = mbase;\n       {\n \n-  result = 0;\n+  result = (GFC_INTEGER_2) -1;\n \tfor (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t  {\n "}, {"sha": "039e796379868d951dd450fef6a43dfa4d5eee85", "filename": "libgfortran/generated/iall_i4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eeeecbcc17041fdfd3ccc928161ae86e7f9b456/libgfortran%2Fgenerated%2Fiall_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eeeecbcc17041fdfd3ccc928161ae86e7f9b456/libgfortran%2Fgenerated%2Fiall_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiall_i4.c?ref=8eeeecbcc17041fdfd3ccc928161ae86e7f9b456", "patch": "@@ -345,7 +345,7 @@ miall_i4 (gfc_array_i4 * const restrict retarray,\n       msrc = mbase;\n       {\n \n-  result = 0;\n+  result = (GFC_INTEGER_4) -1;\n \tfor (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t  {\n "}, {"sha": "d01f7aecaf83409e907f8a8cbf8b4a17c7ea6c4f", "filename": "libgfortran/generated/iall_i8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eeeecbcc17041fdfd3ccc928161ae86e7f9b456/libgfortran%2Fgenerated%2Fiall_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eeeecbcc17041fdfd3ccc928161ae86e7f9b456/libgfortran%2Fgenerated%2Fiall_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fiall_i8.c?ref=8eeeecbcc17041fdfd3ccc928161ae86e7f9b456", "patch": "@@ -345,7 +345,7 @@ miall_i8 (gfc_array_i8 * const restrict retarray,\n       msrc = mbase;\n       {\n \n-  result = 0;\n+  result = (GFC_INTEGER_8) -1;\n \tfor (n = 0; n < len; n++, src += delta, msrc += mdelta)\n \t  {\n "}, {"sha": "8f3b77414868e3e4229ddcd8a0e2fe4df8c5c531", "filename": "libgfortran/m4/iall.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eeeecbcc17041fdfd3ccc928161ae86e7f9b456/libgfortran%2Fm4%2Fiall.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eeeecbcc17041fdfd3ccc928161ae86e7f9b456/libgfortran%2Fm4%2Fiall.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fiall.m4?ref=8eeeecbcc17041fdfd3ccc928161ae86e7f9b456", "patch": "@@ -35,7 +35,7 @@ ARRAY_FUNCTION(0,\n `  result &= *src;')\n \n MASKED_ARRAY_FUNCTION(0,\n-`  result = 0;',\n+`  result = ('rtype_name`) -1;',\n `  if (*msrc)\n     result &= *src;')\n "}]}