{"sha": "6a68a5c39771f9dbcea080430cc0161a2ab1d3a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE2OGE1YzM5NzcxZjlkYmNlYTA4MDQzMGNjMDE2MWEyYWIxZDNhMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-12-08T16:43:14Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-12-08T16:43:14Z"}, "message": "re PR middle-end/46844 (regrename.c:312:22: error: unused parameter 'reg')\n\n\tPR middle-end/46844\n\t* regrename.c (check_new_reg_p): Add ATTRIBUTE_UNUSED to reg\n\tparameter.\n\nFrom-SVN: r167596", "tree": {"sha": "98157a503b76080c42fe5f90e863754ee7d2d353", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98157a503b76080c42fe5f90e863754ee7d2d353"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a68a5c39771f9dbcea080430cc0161a2ab1d3a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a68a5c39771f9dbcea080430cc0161a2ab1d3a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a68a5c39771f9dbcea080430cc0161a2ab1d3a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a68a5c39771f9dbcea080430cc0161a2ab1d3a1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c994a0ce087dba0ca4563130ba8840bf87c0d07c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c994a0ce087dba0ca4563130ba8840bf87c0d07c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c994a0ce087dba0ca4563130ba8840bf87c0d07c"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "3f99dc6f68bb9ad3e6498183a6f45947063fc324", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a68a5c39771f9dbcea080430cc0161a2ab1d3a1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a68a5c39771f9dbcea080430cc0161a2ab1d3a1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a68a5c39771f9dbcea080430cc0161a2ab1d3a1", "patch": "@@ -1,3 +1,9 @@\n+2010-12-08  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/46844\n+\t* regrename.c (check_new_reg_p): Add ATTRIBUTE_UNUSED to reg\n+\tparameter.\n+\n 2010-12-08  Richard Earnshaw  <rearnsha@arm.com>\n \n \tPR target/46631"}, {"sha": "d4787b213c55223113453706101e229bdb98c01e", "filename": "gcc/regrename.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a68a5c39771f9dbcea080430cc0161a2ab1d3a1/gcc%2Fregrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a68a5c39771f9dbcea080430cc0161a2ab1d3a1/gcc%2Fregrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregrename.c?ref=6a68a5c39771f9dbcea080430cc0161a2ab1d3a1", "patch": "@@ -309,8 +309,8 @@ sort_du_head (struct du_head **head)\n    registers.  */\n \n static bool\n-check_new_reg_p (int reg, int new_reg,  struct du_head *this_head,\n-\t\t HARD_REG_SET this_unavailable)\n+check_new_reg_p (int reg ATTRIBUTE_UNUSED, int new_reg,\n+\t\t struct du_head *this_head, HARD_REG_SET this_unavailable)\n {\n   enum machine_mode mode = GET_MODE (*this_head->first->loc);\n   int nregs = hard_regno_nregs[new_reg][mode];"}]}