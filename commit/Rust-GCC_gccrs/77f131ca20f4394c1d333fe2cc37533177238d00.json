{"sha": "77f131ca20f4394c1d333fe2cc37533177238d00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzdmMTMxY2EyMGY0Mzk0YzFkMzMzZmUyY2MzNzUzMzE3NzIzOGQwMA==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2006-05-17T14:11:40Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2006-05-17T14:11:40Z"}, "message": "re PR fortran/26551 (gfortran compiles recursive subroutines declared without the RECURSIVE attribute)\n\n\tPR fortran/26551\n\n\t* resolve.c (resolve_call, resolve_function): Issue an error\n\tif a function or subroutine call is recursive but the function or\n\tsubroutine wasn't declared as such.\n\n\t* gfortran.dg/recursive_check_1.f: New test.\n\nFrom-SVN: r113860", "tree": {"sha": "95d49920a92d86be58e80e3f3c5df27263b61e48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95d49920a92d86be58e80e3f3c5df27263b61e48"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77f131ca20f4394c1d333fe2cc37533177238d00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77f131ca20f4394c1d333fe2cc37533177238d00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77f131ca20f4394c1d333fe2cc37533177238d00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77f131ca20f4394c1d333fe2cc37533177238d00/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be448346aa660311b2cb932c082b101bc1cf504b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be448346aa660311b2cb932c082b101bc1cf504b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be448346aa660311b2cb932c082b101bc1cf504b"}], "stats": {"total": 93, "additions": 93, "deletions": 0}, "files": [{"sha": "1f30fd46a94930cba505bb702a96cb97dec07c28", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f131ca20f4394c1d333fe2cc37533177238d00/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f131ca20f4394c1d333fe2cc37533177238d00/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=77f131ca20f4394c1d333fe2cc37533177238d00", "patch": "@@ -1,3 +1,16 @@\n+2006-05-17  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR fortran/26551\n+\t* resolve.c (resolve_call, resolve_function): Issue an error\n+\tif a function or subroutine call is recursive but the function or\n+\tsubroutine wasn't declared as such.\n+\n+2006-05-07  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR fortran/26551\n+\t* gfortran.dg/recursive_check_1.f: New test.\n+\n+\n 2006-05-17  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR fortran/27320"}, {"sha": "f106d053f7640f15abb6919fe93a4886e57b8729", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f131ca20f4394c1d333fe2cc37533177238d00/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f131ca20f4394c1d333fe2cc37533177238d00/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=77f131ca20f4394c1d333fe2cc37533177238d00", "patch": "@@ -1380,6 +1380,30 @@ resolve_function (gfc_expr * expr)\n \t}\n     }\n \n+  /* Functions without the RECURSIVE attribution are not allowed to\n+   * call themselves.  */\n+  if (expr->value.function.esym && !expr->value.function.esym->attr.recursive)\n+    {\n+      gfc_symbol *esym, *proc;\n+      esym = expr->value.function.esym;\n+      proc = gfc_current_ns->proc_name;\n+      if (esym == proc)\n+      {\n+        gfc_error (\"Function '%s' at %L cannot call itself, as it is not \"\n+                   \"RECURSIVE\", name, &expr->where);\n+        t = FAILURE;\n+      }\n+\n+      if (esym->attr.entry && esym->ns->entries && proc->ns->entries\n+          && esym->ns->entries->sym == proc->ns->entries->sym)\n+      {\n+        gfc_error (\"Call to ENTRY '%s' at %L is recursive, but function \"\n+                   \"'%s' is not declared as RECURSIVE\",\n+                   esym->name, &expr->where, esym->ns->entries->sym->name);\n+        t = FAILURE;\n+      }\n+    }\n+\n   /* Character lengths of use associated functions may contains references to\n      symbols not referenced from the current program unit otherwise.  Make sure\n      those symbols are marked as referenced.  */\n@@ -1629,6 +1653,30 @@ resolve_call (gfc_code * c)\n \t&& !c->symtree->n.sym->attr.use_assoc)\n     resolve_global_procedure (c->symtree->n.sym, &c->loc, 1);\n \n+  /* Subroutines without the RECURSIVE attribution are not allowed to\n+   * call themselves.  */\n+  if (c->symtree && c->symtree->n.sym && !c->symtree->n.sym->attr.recursive)\n+    {\n+      gfc_symbol *csym, *proc;\n+      csym = c->symtree->n.sym;\n+      proc = gfc_current_ns->proc_name;\n+      if (csym == proc)\n+      {\n+        gfc_error (\"SUBROUTINE '%s' at %L cannot call itself, as it is not \"\n+                   \"RECURSIVE\", csym->name, &c->loc);\n+        t = FAILURE;\n+      }\n+\n+      if (csym->attr.entry && csym->ns->entries && proc->ns->entries\n+          && csym->ns->entries->sym == proc->ns->entries->sym)\n+      {\n+        gfc_error (\"Call to ENTRY '%s' at %L is recursive, but subroutine \"\n+                   \"'%s' is not declared as RECURSIVE\",\n+                   csym->name, &c->loc, csym->ns->entries->sym->name);\n+        t = FAILURE;\n+      }\n+    }\n+\n   /* Switch off assumed size checking and do this again for certain kinds\n      of procedure, once the procedure itself is resolved.  */\n   need_full_assumed_size++;"}, {"sha": "3a82938e07915c644491e98d49dafe4078f692c9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f131ca20f4394c1d333fe2cc37533177238d00/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f131ca20f4394c1d333fe2cc37533177238d00/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=77f131ca20f4394c1d333fe2cc37533177238d00", "patch": "@@ -1,3 +1,8 @@\n+2006-05-17  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR fortran/26551\n+\t* gfortran.dg/recursive_check_1.f: New test.\n+\n 2005-05-17  Bernd Schmidt  <bernd.schmidt@analog.com>\n \n \t* g++.dg/opt/temp2.C: New test."}, {"sha": "b264f25db764899f3d91e2c837da163bc5779195", "filename": "gcc/testsuite/gfortran.dg/recursive_check_1.f", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77f131ca20f4394c1d333fe2cc37533177238d00/gcc%2Ftestsuite%2Fgfortran.dg%2Frecursive_check_1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77f131ca20f4394c1d333fe2cc37533177238d00/gcc%2Ftestsuite%2Fgfortran.dg%2Frecursive_check_1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Frecursive_check_1.f?ref=77f131ca20f4394c1d333fe2cc37533177238d00", "patch": "@@ -0,0 +1,27 @@\n+! { dg-do compile }\n+! PR fortran/26551\n+      SUBROUTINE SUB()\n+      CALL SUB() ! { dg-error \"cannot call itself, as it is not RECURSIVE\" }\n+      END SUBROUTINE\n+\n+      FUNCTION FUNC() RESULT (FOO)\n+      INTEGER FOO\n+      FOO = FUNC() ! { dg-error \"cannot call itself, as it is not RECURSIVE\" }\n+      END FUNCTION\n+\n+      SUBROUTINE SUB2()\n+      ENTRY ENT2()\n+      CALL ENT2() ! { dg-error \"is not declared as RECURSIVE\" }\n+      END SUBROUTINE\n+\n+      function func2()\n+      integer func2\n+      func2 = 42\n+      return\n+      entry c() result (foo)\n+      foo = b() ! { dg-error \"is not declared as RECURSIVE\" }\n+      return\n+      entry b() result (bar)\n+      bar = 12\n+      return\n+      end function"}]}