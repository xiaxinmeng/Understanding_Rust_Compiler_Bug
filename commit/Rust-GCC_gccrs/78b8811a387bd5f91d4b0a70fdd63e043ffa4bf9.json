{"sha": "78b8811a387bd5f91d4b0a70fdd63e043ffa4bf9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhiODgxMWEzODdiZDVmOTFkNGIwYTcwZmRkNjNlMDQzZmZhNGJmOQ==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2003-06-12T06:09:15Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2003-06-12T06:09:15Z"}, "message": "Don't warn on dollars in builtin macro definitions,\n\n\te.g. __REGISTER_PREFIX__.\n\t* cpphash.h (struct cpp_reader): Move member warn_dollars...\n\t* cpplib.h (struct cpp_options): ...to here.  Change type to\n\tunsigned char.\n\t* cppinit.c (cpp_create_reader): Set it to 1 here.\n\t(post_options): Don't set it here.\n\t* c-opts.c (c_common_init_options): Reset it to 0 here.\n\t(finish_options): Set it here.\n\t* cpplex.c (forms_identifier_p): Tweak for new location of\n\twarn_dollars.\n\nFrom-SVN: r67824", "tree": {"sha": "0ab8d16523fbcbfca756131fa06162d509f6269a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ab8d16523fbcbfca756131fa06162d509f6269a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78b8811a387bd5f91d4b0a70fdd63e043ffa4bf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78b8811a387bd5f91d4b0a70fdd63e043ffa4bf9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78b8811a387bd5f91d4b0a70fdd63e043ffa4bf9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78b8811a387bd5f91d4b0a70fdd63e043ffa4bf9/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ed44683592f6503ce41f466aa075aa146235ca11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed44683592f6503ce41f466aa075aa146235ca11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed44683592f6503ce41f466aa075aa146235ca11"}], "stats": {"total": 53, "additions": 39, "deletions": 14}, "files": [{"sha": "1e9547180885ebf2d97c8a93cbebd0e6a4e33235", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78b8811a387bd5f91d4b0a70fdd63e043ffa4bf9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78b8811a387bd5f91d4b0a70fdd63e043ffa4bf9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78b8811a387bd5f91d4b0a70fdd63e043ffa4bf9", "patch": "@@ -1,3 +1,17 @@\n+2003-06-12  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\tDon't warn on dollars in builtin macro definitions,\n+\te.g. __REGISTER_PREFIX__.\n+\t* cpphash.h (struct cpp_reader): Move member warn_dollars...\n+\t* cpplib.h (struct cpp_options): ...to here.  Change type to\n+\tunsigned char.\n+\t* cppinit.c (cpp_create_reader): Set it to 1 here.\n+\t(post_options): Don't set it here.\n+\t* c-opts.c (c_common_init_options): Reset it to 0 here.\n+\t(finish_options): Set it here.\n+\t* cpplex.c (forms_identifier_p): Tweak for new location of\n+\twarn_dollars.\n+\n 2003-06-11  Uwe Stieber  <uwe@kaos-group.de>\n \n \t* config.gcc (arm*-*-kaos*, i[34567]86-*-kaos*, powerpc-*-kaos*,"}, {"sha": "6f449a00bb347c9f7bff77ece3e1a52af59970d7", "filename": "gcc/c-opts.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78b8811a387bd5f91d4b0a70fdd63e043ffa4bf9/gcc%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78b8811a387bd5f91d4b0a70fdd63e043ffa4bf9/gcc%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-opts.c?ref=78b8811a387bd5f91d4b0a70fdd63e043ffa4bf9", "patch": "@@ -225,6 +225,11 @@ c_common_init_options (lang)\n \t\t\t\tident_hash);\n   cpp_opts = cpp_get_options (parse_in);\n   cpp_opts->dollars_in_ident = DOLLARS_IN_IDENTIFIERS;\n+\n+  /* Reset to avoid warnings on internal definitions.  We set it just\n+     before passing on command-line options to cpplib.  */\n+  cpp_opts->warn_dollars = 0;\n+\n   if (flag_objc)\n     cpp_opts->objc = 1;\n \n@@ -1356,6 +1361,18 @@ finish_options ()\n       cpp_change_file (parse_in, LC_RENAME, _(\"<built-in>\"));\n       cpp_init_builtins (parse_in, flag_hosted);\n       c_cpp_builtins (parse_in);\n+\n+      /* We're about to send user input to cpplib, so make it warn for\n+\t things that we previously (when we sent it internal definitions)\n+\t told it to not warn.\n+\n+\t C99 permits implementation-defined characters in identifiers.\n+\t The documented meaning of -std= is to turn off extensions that\n+\t conflict with the specified standard, and since a strictly\n+\t conforming program cannot contain a '$', we do not condition\n+\t their acceptance on the -std= setting.  */\n+      cpp_opts->warn_dollars = (cpp_opts->pedantic && !cpp_opts->c99);\n+\n       cpp_change_file (parse_in, LC_RENAME, _(\"<command line>\"));\n       for (i = 0; i < deferred_count; i++)\n \t{"}, {"sha": "88addeac4d5c5172dd700167cb63ef56379d860a", "filename": "gcc/cpphash.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78b8811a387bd5f91d4b0a70fdd63e043ffa4bf9/gcc%2Fcpphash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78b8811a387bd5f91d4b0a70fdd63e043ffa4bf9/gcc%2Fcpphash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpphash.h?ref=78b8811a387bd5f91d4b0a70fdd63e043ffa4bf9", "patch": "@@ -378,10 +378,6 @@ struct cpp_reader\n   cpp_token avoid_paste;\n   cpp_token eof;\n \n-  /* True if we should warn about dollars in identifiers or numbers\n-     for this translation unit.  */\n-  bool warn_dollars;\n-\n   /* Opaque handle to the dependencies of mkdeps.c.  */\n   struct deps *deps;\n "}, {"sha": "cace8b9f5db9f5d6081a5a369387b6435ac1cf83", "filename": "gcc/cppinit.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78b8811a387bd5f91d4b0a70fdd63e043ffa4bf9/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78b8811a387bd5f91d4b0a70fdd63e043ffa4bf9/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=78b8811a387bd5f91d4b0a70fdd63e043ffa4bf9", "patch": "@@ -151,6 +151,7 @@ cpp_create_reader (lang, table)\n   CPP_OPTION (pfile, warn_deprecated) = 1;\n   CPP_OPTION (pfile, warn_long_long) = !CPP_OPTION (pfile, c99);\n   CPP_OPTION (pfile, dollars_in_ident) = 1;\n+  CPP_OPTION (pfile, warn_dollars) = 1;\n \n   /* Default CPP arithmetic to something sensible for the host for the\n      benefit of dumb users like fix-header.  */\n@@ -570,11 +571,4 @@ post_options (pfile)\n       CPP_OPTION (pfile, trigraphs) = 0;\n       CPP_OPTION (pfile, warn_trigraphs) = 0;\n     }\n-\n-  /* C99 permits implementation-defined characters in identifiers.\n-     The documented meaning of -std= is to turn off extensions that\n-     conflict with the specified standard, and since a strictly\n-     conforming program cannot contain a '$', we do not condition\n-     their acceptance on the -std= setting.  */\n-  pfile->warn_dollars = CPP_PEDANTIC (pfile) && !CPP_OPTION (pfile, c99);\n }"}, {"sha": "e072f01bdcf0ff60103c6c23ebb34986b356efe1", "filename": "gcc/cpplex.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78b8811a387bd5f91d4b0a70fdd63e043ffa4bf9/gcc%2Fcpplex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78b8811a387bd5f91d4b0a70fdd63e043ffa4bf9/gcc%2Fcpplex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplex.c?ref=78b8811a387bd5f91d4b0a70fdd63e043ffa4bf9", "patch": "@@ -1,5 +1,5 @@\n /* CPP Library - lexical analysis.\n-   Copyright (C) 2000, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n    Contributed by Per Bothner, 1994-95.\n    Based on CCCP program by Paul Rubin, June 1986\n    Adapted to ANSI C, Richard Stallman, Jan 1987\n@@ -402,9 +402,9 @@ forms_identifier_p (pfile, first)\n \treturn false;\n \n       buffer->cur++;\n-      if (pfile->warn_dollars && !pfile->state.skipping)\n+      if (CPP_OPTION (pfile, warn_dollars) && !pfile->state.skipping)\n \t{\n-\t  pfile->warn_dollars = false;\n+\t  CPP_OPTION (pfile, warn_dollars) = 0;\n \t  cpp_error (pfile, DL_PEDWARN, \"'$' in identifier or number\");\n \t}\n "}, {"sha": "45142527ea20034677ed4e782fc804cefaf3d398", "filename": "gcc/cpplib.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78b8811a387bd5f91d4b0a70fdd63e043ffa4bf9/gcc%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78b8811a387bd5f91d4b0a70fdd63e043ffa4bf9/gcc%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.h?ref=78b8811a387bd5f91d4b0a70fdd63e043ffa4bf9", "patch": "@@ -300,6 +300,10 @@ struct cpp_options\n   /* Zero means dollar signs are punctuation.  */\n   unsigned char dollars_in_ident;\n \n+  /* True if we should warn about dollars in identifiers or numbers\n+     for this translation unit.  */\n+  unsigned char warn_dollars;\n+\n   /* Nonzero means warn if undefined identifiers are evaluated in an #if.  */\n   unsigned char warn_undef;\n "}]}