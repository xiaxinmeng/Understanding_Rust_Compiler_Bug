{"sha": "740392538848e2c1b4535f3b6fc7e018930c0a64", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQwMzkyNTM4ODQ4ZTJjMWI0NTM1ZjNiNmZjN2UwMTg5MzBjMGE2NA==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2019-08-10T05:25:44Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-08-10T05:25:44Z"}, "message": "Fix ODR violation in d/runtime.cc\n\ngcc/d/ChangeLog:\n\n\tPR d/90893\n\t* runtime.cc (enum libcall_type): Rename to...\n\t(enum d_libcall_type): ...this.\n\t(get_libcall_type): Use d_libcall_type.\n\t(build_libcall_decl): Likewise.\n\nFrom-SVN: r274249", "tree": {"sha": "efb68cac33dc5f9cbf7bc860ad671383c24a4165", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efb68cac33dc5f9cbf7bc860ad671383c24a4165"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/740392538848e2c1b4535f3b6fc7e018930c0a64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/740392538848e2c1b4535f3b6fc7e018930c0a64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/740392538848e2c1b4535f3b6fc7e018930c0a64", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/740392538848e2c1b4535f3b6fc7e018930c0a64/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8fa64062ada5fad44a4c8161c03d7873c531ccad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fa64062ada5fad44a4c8161c03d7873c531ccad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fa64062ada5fad44a4c8161c03d7873c531ccad"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "fb7b974d745ed67d894c0ab6bc5f82ac8c62048f", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/740392538848e2c1b4535f3b6fc7e018930c0a64/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/740392538848e2c1b4535f3b6fc7e018930c0a64/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=740392538848e2c1b4535f3b6fc7e018930c0a64", "patch": "@@ -1,3 +1,11 @@\n+2019-08-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/90893\n+\t* runtime.cc (enum libcall_type): Rename to...\n+\t(enum d_libcall_type): ...this.\n+\t(get_libcall_type): Use d_libcall_type.\n+\t(build_libcall_decl): Likewise.\n+\n 2019-06-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \tPR d/90559"}, {"sha": "72659aea0e3f41b92e505da0f98ff9ccffc6a1f2", "filename": "gcc/d/runtime.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/740392538848e2c1b4535f3b6fc7e018930c0a64/gcc%2Fd%2Fruntime.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/740392538848e2c1b4535f3b6fc7e018930c0a64/gcc%2Fd%2Fruntime.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fruntime.cc?ref=740392538848e2c1b4535f3b6fc7e018930c0a64", "patch": "@@ -34,7 +34,7 @@ along with GCC; see the file COPYING3.  If not see\n    We represent them in the frontend here, however there's no guarantee that\n    the compiler implementation actually matches the actual implementation.  */\n \n-enum libcall_type\n+enum d_libcall_type\n {\n   LCT_VOID,\t\t    /* void\t\t    */\n   LCT_BYTE,\t\t    /* byte\t\t    */\n@@ -81,7 +81,7 @@ static tree libcall_decls[LIBCALL_LAST];\n    arrayOf() will return cached types if they have been requested before.  */\n \n static Type *\n-get_libcall_type (libcall_type type)\n+get_libcall_type (d_libcall_type type)\n {\n   if (libcall_types[type])\n     return libcall_types[type];\n@@ -212,7 +212,7 @@ get_libcall_type (libcall_type type)\n    the number of arguments, the types of which are provided in `...'.  */\n \n static tree\n-build_libcall_decl (const char *name, libcall_type return_type,\n+build_libcall_decl (const char *name, d_libcall_type return_type,\n \t\t    int flags, int nparams, ...)\n {\n   tree *args = XALLOCAVEC (tree, nparams);\n@@ -226,7 +226,7 @@ build_libcall_decl (const char *name, libcall_type return_type,\n \n   for (int i = 0; i < nparams; i++)\n     {\n-      libcall_type ptype = (libcall_type) va_arg (ap, int);\n+      d_libcall_type ptype = (d_libcall_type) va_arg (ap, int);\n       Type *type = get_libcall_type (ptype);\n \n       if (type == Type::tvoid)"}]}