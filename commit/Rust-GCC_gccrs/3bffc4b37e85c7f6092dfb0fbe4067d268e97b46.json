{"sha": "3bffc4b37e85c7f6092dfb0fbe4067d268e97b46", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JmZmM0YjM3ZTg1YzdmNjA5MmRmYjBmYmU0MDY3ZDI2OGU5N2I0Ng==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2021-04-19T15:56:31Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2021-04-19T15:56:31Z"}, "message": "arm: partial revert of r11-8168 [PR100067]\n\nThis is a partial revert of r11-8168.  The overall purpose of the\ncommit is retained (to fix a bogus warning when -mfpu=<not-auto> is\nused in combination with eg -mcpu=neoverse-v1), but it removes the\nhunk that changed the subsequent feature bits for features of a\nsimd/fp unit that cannot be described by -mfpu.  While I still think\nthat is the correct direction of travel, it's somewhat disruptive and\nnot appropriate for late stage4.  I'll revisit for gcc-12.\n\ngcc:\n\tPR target/100067\n\t* config/arm/arm.c (arm_configure_build_target): Do not strip\n\textended FPU/SIMD feature bits from the target ISA when -mfpu\n\tis specified (partial revert of r11-8168).", "tree": {"sha": "40b99fa1ed284dc5af57691cb166600cf69ff20f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40b99fa1ed284dc5af57691cb166600cf69ff20f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bffc4b37e85c7f6092dfb0fbe4067d268e97b46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bffc4b37e85c7f6092dfb0fbe4067d268e97b46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bffc4b37e85c7f6092dfb0fbe4067d268e97b46", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bffc4b37e85c7f6092dfb0fbe4067d268e97b46/comments", "author": null, "committer": null, "parents": [{"sha": "714bdc31b69688ae2eaeb9807a48e0f101fecf4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/714bdc31b69688ae2eaeb9807a48e0f101fecf4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/714bdc31b69688ae2eaeb9807a48e0f101fecf4e"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "340f7c95d76b86b750493597787c4bd4ff65b474", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bffc4b37e85c7f6092dfb0fbe4067d268e97b46/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bffc4b37e85c7f6092dfb0fbe4067d268e97b46/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=3bffc4b37e85c7f6092dfb0fbe4067d268e97b46", "patch": "@@ -3396,9 +3396,11 @@ arm_configure_build_target (struct arm_build_target *target,\n       auto_sbitmap fpu_bits (isa_num_bits);\n \n       arm_initialize_isa (fpu_bits, arm_selected_fpu->isa_bits);\n-      /* Clear out ALL bits relating to the FPU/simd extensions, to avoid\n-\t potentially invalid combinations later on that we can't match.  */\n-      bitmap_and_compl (target->isa, target->isa, isa_all_fpbits);\n+      /* This should clear out ALL bits relating to the FPU/simd\n+\t extensions, to avoid potentially invalid combinations later on\n+\t that we can't match.  At present we only clear out those bits\n+\t that can be set by -mfpu.  This should be fixed in GCC-12.  */\n+      bitmap_and_compl (target->isa, target->isa, isa_all_fpubits_internal);\n       bitmap_ior (target->isa, target->isa, fpu_bits);\n     }\n "}]}