{"sha": "3d7a191ffc392c46a555149fd52cac6decd4e977", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q3YTE5MWZmYzM5MmM0NmE1NTUxNDlmZDUyY2FjNmRlY2Q0ZTk3Nw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-10-11T23:26:08Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-10-11T23:26:08Z"}, "message": "Tidy last change.\n\nFrom-SVN: r46205", "tree": {"sha": "bf4555187b241415d4fecfb57b59ffc776185e9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf4555187b241415d4fecfb57b59ffc776185e9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d7a191ffc392c46a555149fd52cac6decd4e977", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d7a191ffc392c46a555149fd52cac6decd4e977", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d7a191ffc392c46a555149fd52cac6decd4e977", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d7a191ffc392c46a555149fd52cac6decd4e977/comments", "author": null, "committer": null, "parents": [{"sha": "5929a2f01346eee238c076088ac5228def8791c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5929a2f01346eee238c076088ac5228def8791c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5929a2f01346eee238c076088ac5228def8791c6"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "1d245b7ad905b945609bac13f10d58b07fb83d43", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d7a191ffc392c46a555149fd52cac6decd4e977/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d7a191ffc392c46a555149fd52cac6decd4e977/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=3d7a191ffc392c46a555149fd52cac6decd4e977", "patch": "@@ -8330,11 +8330,7 @@ add_const_value_attribute (die, rtl)\n \t\n \t/* ??? We really should be using HOST_WIDE_INT throughout.  */\n \tif (val < 0 && (long) val == val)\n-\t  {\n-\t    if ((long) val != val)\n-\t      abort ();\n-\t    add_AT_int (die, DW_AT_const_value, (long) val);\n-\t  }\n+\t  add_AT_int (die, DW_AT_const_value, (long) val);\n \telse if ((unsigned long) val == (unsigned HOST_WIDE_INT) val)\n \t  add_AT_unsigned (die, DW_AT_const_value, (unsigned long) val);\n \telse if (2*HOST_BITS_PER_LONG == HOST_BITS_PER_WIDE_INT)"}]}