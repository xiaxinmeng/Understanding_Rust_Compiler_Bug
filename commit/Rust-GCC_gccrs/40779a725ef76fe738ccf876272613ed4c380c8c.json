{"sha": "40779a725ef76fe738ccf876272613ed4c380c8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA3NzlhNzI1ZWY3NmZlNzM4Y2NmODc2MjcyNjEzZWQ0YzM4MGM4Yw==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@superh.com", "date": "2003-12-04T17:18:45Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2003-12-04T17:18:45Z"}, "message": "sh.md (truncdiqi2): Use andi opcode for immediate.\n\n\t* sh.md (truncdiqi2): Use andi opcode for immediate.\n\t(reload_outdf+1,reload_outdf+2): Remove constraints.\n\t(movv16sf_i): Fxi multiplier for SUBREG_BYTE.\n\t(movv8qi_i+2): Zero-extend low byte before adding it to high byte.\n\t(fipr, ftrv): Add .s suffix to opcode.\n\nFrom-SVN: r74281", "tree": {"sha": "617f2053de4aa5dc8d9193644141971838135859", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/617f2053de4aa5dc8d9193644141971838135859"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40779a725ef76fe738ccf876272613ed4c380c8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40779a725ef76fe738ccf876272613ed4c380c8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40779a725ef76fe738ccf876272613ed4c380c8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40779a725ef76fe738ccf876272613ed4c380c8c/comments", "author": null, "committer": null, "parents": [{"sha": "a9f8f33a27eb434c3d21f5051ba9c74b5afb27fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9f8f33a27eb434c3d21f5051ba9c74b5afb27fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9f8f33a27eb434c3d21f5051ba9c74b5afb27fa"}], "stats": {"total": 35, "additions": 22, "deletions": 13}, "files": [{"sha": "88b2404d26526cadae539b10d66036e150e3ba94", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40779a725ef76fe738ccf876272613ed4c380c8c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40779a725ef76fe738ccf876272613ed4c380c8c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=40779a725ef76fe738ccf876272613ed4c380c8c", "patch": "@@ -1,3 +1,11 @@\n+2003-12-04  J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\t* sh.md (truncdiqi2): Use andi opcode for immediate.\n+\t(reload_outdf+1,reload_outdf+2): Remove constraints.\n+\t(movv16sf_i): Fxi multiplier for SUBREG_BYTE.\n+\t(movv8qi_i+2): Zero-extend low byte before adding it to high byte.\n+\t(fipr, ftrv): Add .s suffix to opcode.\n+\n 2003-12-04  Richard Sandiford  <rsandifo@redhat.com>\n \n \tPR target/13186"}, {"sha": "228d4e5336f224a30bd6c14c691d506dcf35c885", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40779a725ef76fe738ccf876272613ed4c380c8c/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40779a725ef76fe738ccf876272613ed4c380c8c/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=40779a725ef76fe738ccf876272613ed4c380c8c", "patch": "@@ -3163,7 +3163,7 @@\n \n (define_expand \"extendhisi2\"\n   [(set (match_operand:SI 0 \"arith_reg_operand\" \"=r,r\")\n-       (sign_extend:SI (match_operand:HI 1 \"general_extend_operand\" \"r,m\")))]\n+\t(sign_extend:SI (match_operand:HI 1 \"general_extend_operand\" \"r,m\")))]\n   \"\"\n   \"\")\n \n@@ -3173,7 +3173,7 @@\n   \"TARGET_SH1\"\n   \"@\n \texts.w\t%1,%0\n-   \tmov.w\t%1,%0\"\n+\tmov.w\t%1,%0\"\n   [(set_attr \"type\" \"arith,load\")])\n \n (define_insn \"*extendhisi2_media\"\n@@ -3277,7 +3277,7 @@\n \t(truncate:QI (match_operand:DI 1 \"register_operand\" \"r,r\")))]\n   \"TARGET_SHMEDIA\"\n   \"@\n-\tand\t%1, 255, %0\n+\tandi\t%1, 255, %0\n \tst%M0.b\t%m0, %1\"\n   [(set_attr \"type\"   \"arith_media,store\")])\n \n@@ -4395,7 +4395,7 @@\n   [(set (match_operand:SF 0 \"register_operand\" \"\")\n \t(match_operand:SF 1 \"register_operand\" \"\"))\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"\"))\n-   (clobber (match_scratch:SI 3 \"X\"))]\n+   (clobber (match_scratch:SI 3 \"\"))]\n   \"TARGET_SH2E && reload_completed\n    && true_regnum (operands[0]) == true_regnum (operands[1])\"\n   [(set (match_dup 0) (match_dup 0))]\n@@ -4406,7 +4406,7 @@\n   [(set (match_operand:DF 0 \"register_operand\" \"\")\n \t(match_operand:DF 1 \"register_operand\" \"\"))\n    (use (match_operand:PSI 2 \"fpscr_operand\" \"\"))\n-   (clobber (match_scratch:SI 3 \"X\"))]\n+   (clobber (match_scratch:SI 3 \"\"))]\n   \"TARGET_SH4 && ! TARGET_FMOVD && reload_completed\n    && FP_OR_XD_REGISTER_P (true_regnum (operands[0]))\n    && FP_OR_XD_REGISTER_P (true_regnum (operands[1]))\"\n@@ -4801,7 +4801,7 @@\n \t\t\t\t\ti * GET_MODE_SIZE (V2SFmode)));\n       else\n \t{\n-\t  x = gen_rtx_SUBREG (V2SFmode, operands[0], i * 2);\n+\t  x = gen_rtx_SUBREG (V2SFmode, operands[0], i * 8);\n \t  alter_subreg (&x);\n \t}\n \n@@ -4811,7 +4811,7 @@\n \t\t\t\t\ti * GET_MODE_SIZE (V2SFmode)));\n       else\n \t{\n-\t  y = gen_rtx_SUBREG (V2SFmode, operands[1], i * 2);\n+\t  y = gen_rtx_SUBREG (V2SFmode, operands[1], i * 8);\n \t  alter_subreg (&y);\n \t}\n \n@@ -9450,9 +9450,10 @@ mov.l\\\\t1f,r0\\\\n\\\\\n   if (unit_size < 2)\n     {\n       if (GET_CODE (operands[1]) == CONST_INT && GET_CODE (elt1) == CONST_INT)\n-\toperands[1] = GEN_INT (TARGET_LITTLE_ENDIAN\n-\t\t\t       ? INTVAL (operands[1]) + (INTVAL (elt1) << 8)\n-\t\t\t       : (INTVAL (operands[1]) << 8) + INTVAL (elt1));\n+\toperands[1]\n+\t  = GEN_INT (TARGET_LITTLE_ENDIAN\n+\t\t     ? (INTVAL (operands[1]) & 0xff) + (INTVAL (elt1) << 8)\n+\t\t     : (INTVAL (operands[1]) << 8) + (INTVAL (elt1) & 0xff));\n       else\n \t{\n \t  operands[0] = gen_rtx_REG (V2QImode, true_regnum (operands[0]));\n@@ -10560,7 +10561,7 @@ mov.l\\\\t1f,r0\\\\n\\\\\n \t\t\t  (vec_select:SF (mult:V4SF (match_dup 1) (match_dup 2))\n \t\t\t\t\t (parallel [(const_int 3)])))))]\n   \"TARGET_SHMEDIA\"\n-  \"fipr\t%1, %2, %0\"\n+  \"fipr.s\t%1, %2, %0\"\n   [(set_attr \"type\" \"fparith_media\")])\n \n (define_insn \"fsrra_s\"\n@@ -10586,7 +10587,7 @@ mov.l\\\\t1f,r0\\\\n\\\\\n \t\t\t\t       (const_int 14) (const_int 3)]))\n \t   (vec_select:V4SF (match_dup 2)\n \t\t\t    (parallel [(const_int 1) (const_int 2)\n-\t\t\t\t      (const_int 3) (const_int 0)]))))\n+\t\t\t\t       (const_int 3) (const_int 0)]))))\n \t (plus:V4SF\n \t  (mult:V4SF\n \t   (vec_select:V4SF (match_dup 1)\n@@ -10603,7 +10604,7 @@ mov.l\\\\t1f,r0\\\\n\\\\\n \t\t\t    (parallel [(const_int 3) (const_int 0)\n \t\t\t\t       (const_int 1) (const_int 2)]))))))]\n   \"TARGET_SHMEDIA\"\n-  \"ftrv %1, %2, %0\"\n+  \"ftrv.s %1, %2, %0\"\n   [(set_attr \"type\" \"fparith_media\")])\n \n (define_insn \"nsb\""}]}