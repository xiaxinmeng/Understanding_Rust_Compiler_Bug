{"sha": "23edcf6bee5d40f7c9b7dda04155b9e90b3b3379", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNlZGNmNmJlZTVkNDBmN2M5YjdkZGEwNDE1NWI5ZTkwYjNiMzM3OQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2020-10-27T23:37:44Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2020-10-28T22:43:15Z"}, "message": "Re: testsuite: Enable and adjust powerpc fold-vec-extract/insert testcases\n\ngit commit badeac77f552 changed expected number of addi instructions,\ncausing these fails on powerpc-linux.\n\ngcc.target/powerpc/fold-vec-insert-int-p9.c: \\\\maddi\\\\M found 12 times\nFAIL: gcc.target/powerpc/fold-vec-insert-int-p9.c scan-assembler-times \\\\maddi\\\\M 8\ngcc.target/powerpc/fold-vec-extract-char.p9.c: addi found 6 times\nFAIL: gcc.target/powerpc/fold-vec-extract-char.p9.c scan-assembler-times addi 3\ngcc.target/powerpc/fold-vec-extract-int.p9.c: \\\\maddi\\\\M found 6 times\nFAIL: gcc.target/powerpc/fold-vec-extract-int.p9.c scan-assembler-times \\\\maddi\\\\M 3\ngcc.target/powerpc/fold-vec-extract-longlong.p7.c: \\\\maddi\\\\M found 6 times\nFAIL: gcc.target/powerpc/fold-vec-extract-longlong.p7.c scan-assembler-times \\\\maddi\\\\M 4\ngcc.target/powerpc/fold-vec-extract-longlong.p8.c: \\\\maddi\\\\M found 6 times\nFAIL: gcc.target/powerpc/fold-vec-extract-longlong.p8.c scan-assembler-times \\\\maddi\\\\M 4\nchanged by badeac77f552\n\nI'm not at all sure why we are counting addi.  On linux I see\neight in fold-vec-insert-int-p9.c tearing down the stack frame in\nfunction epilogues, and four in\n        addi 9,1,16\n        lvewx 0,0,9\nFor aix you have the above four but with a -16 offset.  There are no\nstack frames, and you have four addressing stack red-zone as\n        addi 9,1,-64\n\nfold-vec-extract-char.p9.c on linux just has epilogue addi, aix has\nred-zone addressing.  The same for fold-vec-extract-int.p9.c,\nfold-vec-extract-longlong.p7.c and fold-vec-extract-longlong.p8.c.\n\nIt seems silly to count addi in a function epilogue, and fragile to\ncount them in code.  So remove the ilp32 addi checks.\n\n\t* gcc.target/powerpc/fold-vec-extract-char.p9.c: Don't check addi\n\tcount for ilp32.\n\t* gcc.target/powerpc/fold-vec-extract-int.p9.c: Likewise.\n\t* gcc.target/powerpc/fold-vec-extract-longlong.p7.c: Likewise.\n\t* gcc.target/powerpc/fold-vec-extract-longlong.p8.c: Likewise.\n\t* gcc.target/powerpc/fold-vec-insert-int-p9.c: Likewise.", "tree": {"sha": "b4c5dff8ec4ecaeb0b21b44aed3d037d6cf32870", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4c5dff8ec4ecaeb0b21b44aed3d037d6cf32870"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23edcf6bee5d40f7c9b7dda04155b9e90b3b3379", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23edcf6bee5d40f7c9b7dda04155b9e90b3b3379", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23edcf6bee5d40f7c9b7dda04155b9e90b3b3379", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23edcf6bee5d40f7c9b7dda04155b9e90b3b3379/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24fb1d9c5855900b5229d8db445eba515c8375e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24fb1d9c5855900b5229d8db445eba515c8375e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24fb1d9c5855900b5229d8db445eba515c8375e3"}], "stats": {"total": 6, "additions": 0, "deletions": 6}, "files": [{"sha": "8a4c380edad51bfeb33c992257a6e35cd12eecd6", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-extract-char.p9.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23edcf6bee5d40f7c9b7dda04155b9e90b3b3379/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-extract-char.p9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23edcf6bee5d40f7c9b7dda04155b9e90b3b3379/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-extract-char.p9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-extract-char.p9.c?ref=23edcf6bee5d40f7c9b7dda04155b9e90b3b3379", "patch": "@@ -12,7 +12,6 @@\n \n /* { dg-final { scan-assembler-times \"stxv\" 6 { target ilp32 } } } */\n /* { dg-final { scan-assembler-times \"lbz\" 6 { target ilp32 } } } */\n-/* { dg-final { scan-assembler-times \"addi\" 3 { target ilp32 } } } */\n \n \n #include <altivec.h>"}, {"sha": "1abf19da40d454d05184bfb6e6c743e3a8767832", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-extract-int.p9.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23edcf6bee5d40f7c9b7dda04155b9e90b3b3379/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-extract-int.p9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23edcf6bee5d40f7c9b7dda04155b9e90b3b3379/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-extract-int.p9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-extract-int.p9.c?ref=23edcf6bee5d40f7c9b7dda04155b9e90b3b3379", "patch": "@@ -18,7 +18,6 @@\n /* { dg-final { scan-assembler-times {\\madd\\M} 3 { target ilp32 } } } */\n /* { dg-final { scan-assembler-times {\\mstxv\\M} 6 { target ilp32 } } } */\n /* { dg-final { scan-assembler-times {\\mlwz\\M} 6 { target ilp32 } } } */\n-/* { dg-final { scan-assembler-times {\\maddi\\M} 3 { target ilp32 } } } */\n \n \n #include <altivec.h>"}, {"sha": "b97fcb40eda0db937360e42bbb2fd163308bc832", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-extract-longlong.p7.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23edcf6bee5d40f7c9b7dda04155b9e90b3b3379/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-extract-longlong.p7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23edcf6bee5d40f7c9b7dda04155b9e90b3b3379/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-extract-longlong.p7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-extract-longlong.p7.c?ref=23edcf6bee5d40f7c9b7dda04155b9e90b3b3379", "patch": "@@ -22,7 +22,6 @@\n /* -m32 target with constant test uses (+2)li where the -m64 has an ld */\n /* { dg-final { scan-assembler-times {\\mli\\M} 5 { target ilp32 } } } */\n /* { dg-final { scan-assembler-times {\\maddi\\M} 6 { target lp64 } } } */\n-/* { dg-final { scan-assembler-times {\\maddi\\M} 4 { target ilp32 } } } */\n /* { dg-final { scan-assembler-times {\\mstxvd2x\\M|\\mstvx\\M} 3 } } */\n /* { dg-final { scan-assembler-times {\\mrldic\\M|\\mrlwinm\\M} 3 } } */\n /* { dg-final { scan-assembler-times {\\mldx\\M} 3 { target lp64 } } } */"}, {"sha": "8ddce3fd2d858f411e7cf251aea008226d0945aa", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-extract-longlong.p8.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23edcf6bee5d40f7c9b7dda04155b9e90b3b3379/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-extract-longlong.p8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23edcf6bee5d40f7c9b7dda04155b9e90b3b3379/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-extract-longlong.p8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-extract-longlong.p8.c?ref=23edcf6bee5d40f7c9b7dda04155b9e90b3b3379", "patch": "@@ -17,7 +17,6 @@\n /* { dg-final { scan-assembler-times {\\mstxvd2x\\M|\\mstxvw4x\\M} 4 { target ilp32 } } } */\n /* { dg-final { scan-assembler-times {\\madd\\M} 3 { target ilp32 } } } */\n /* { dg-final { scan-assembler-times {\\mlwz\\M} 11 { target ilp32 } } } */\n-/* { dg-final { scan-assembler-times {\\maddi\\M} 4 { target ilp32 } } } */\n /* { dg-final { scan-assembler-times {\\mmfvsrd\\M} 6 { target lp64 } } } */\n /* { dg-final { scan-assembler-times {\\mmtvsrd\\M} 3 { target lp64 } } } */\n /* { dg-final { scan-assembler-times {\\mxxpermdi\\M} 3 { target le } } } */"}, {"sha": "a851fd6b8dc0d89c141c0e110299f0cc0c75813f", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-insert-int-p9.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23edcf6bee5d40f7c9b7dda04155b9e90b3b3379/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-insert-int-p9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23edcf6bee5d40f7c9b7dda04155b9e90b3b3379/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-insert-int-p9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-insert-int-p9.c?ref=23edcf6bee5d40f7c9b7dda04155b9e90b3b3379", "patch": "@@ -58,8 +58,6 @@ testui2_cst(unsigned int x, vector unsigned int v)\n /* { dg-final { scan-assembler-times {\\mmtvsrwz\\M} 4 { target lp64 } } } */\n /* { dg-final { scan-assembler-times {\\mxxinsertw\\M} 4 { target lp64 } } } */\n \n-\n-/* { dg-final { scan-assembler-times {\\maddi\\M} 8 { target ilp32 } } } */\n /* { dg-final { scan-assembler-times {\\mstw\\M} 8 { target ilp32 } } } */\n /* { dg-final { scan-assembler-times {\\mlxv\\M} 8 { target ilp32 } } } */\n /* { dg-final { scan-assembler-times {\\mlvewx\\M} 4 { target ilp32 } } } */"}]}