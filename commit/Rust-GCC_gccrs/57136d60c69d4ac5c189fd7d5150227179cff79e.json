{"sha": "57136d60c69d4ac5c189fd7d5150227179cff79e", "node_id": "C_kwDOANBUbNoAKDU3MTM2ZDYwYzY5ZDRhYzVjMTg5ZmQ3ZDUxNTAyMjcxNzljZmY3OWU", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-12-08T22:24:13Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-01-07T16:24:08Z"}, "message": "[Ada] Fix inconsistent quoting in messages about compile-time errors\n\ngcc/ada/\n\n\t* exp_ch4.adb (Raise_Accessibility_Error): Move exception name\n\tto the message string; move << control characters to the end,\n\tfor consistency.\n\t* sem_ch6.adb (Analyze_Function_Return): Likewise.\n\t* sem_util.adb (Compile_Time_Constraint_Error): Likewise.\n\t* gcc-interface/decl.c (gnat_to_gnu_entity): Remove quotes\n\taround Storage_Error.\n\t* gcc-interface/trans.c (gnat_to_gnu): Remove quotes around\n\tConstraint_Error.\n\ngcc/testsuite/\n\n\t* gnat.dg/aggr26.adb: Update expected error message.", "tree": {"sha": "ef412002cf1b8556459bd567c061e95b8f3e6f6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef412002cf1b8556459bd567c061e95b8f3e6f6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57136d60c69d4ac5c189fd7d5150227179cff79e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57136d60c69d4ac5c189fd7d5150227179cff79e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57136d60c69d4ac5c189fd7d5150227179cff79e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57136d60c69d4ac5c189fd7d5150227179cff79e/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8e99971b643c1b0610175bba047cd789c571c74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8e99971b643c1b0610175bba047cd789c571c74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8e99971b643c1b0610175bba047cd789c571c74"}], "stats": {"total": 29, "additions": 14, "deletions": 15}, "files": [{"sha": "262e40e8201770f77d0352d0fb657e42345af478", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57136d60c69d4ac5c189fd7d5150227179cff79e/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57136d60c69d4ac5c189fd7d5150227179cff79e/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=57136d60c69d4ac5c189fd7d5150227179cff79e", "patch": "@@ -11885,8 +11885,8 @@ package body Exp_Ch4 is\n              Reason => PE_Accessibility_Check_Failed));\n          Set_Etype (N, Target_Type);\n \n-         Error_Msg_N (\"<<accessibility check failure\", N);\n-         Error_Msg_NE (\"\\<<& [\", N, Standard_Program_Error);\n+         Error_Msg_N (\"accessibility check failure<<\", N);\n+         Error_Msg_N (\"\\Program_Error [<<\", N);\n       end Raise_Accessibility_Error;\n \n       ----------------------"}, {"sha": "8c0703a3eee20d834e4377cff0b1ced9132b3b9b", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57136d60c69d4ac5c189fd7d5150227179cff79e/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57136d60c69d4ac5c189fd7d5150227179cff79e/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=57136d60c69d4ac5c189fd7d5150227179cff79e", "patch": "@@ -1400,7 +1400,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n \n \t\tif (TREE_CODE (TYPE_SIZE_UNIT (gnu_alloc_type)) == INTEGER_CST\n \t\t    && !valid_constant_size_p (TYPE_SIZE_UNIT (gnu_alloc_type)))\n-\t\t  post_error (\"??`Storage_Error` will be raised at run time!\",\n+\t\t  post_error (\"??Storage_Error will be raised at run time!\",\n \t\t\t      gnat_entity);\n \n \t\tgnu_expr"}, {"sha": "f767cc6bc3b30b4a8a29a5ffe7434a9a24fa8080", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57136d60c69d4ac5c189fd7d5150227179cff79e/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57136d60c69d4ac5c189fd7d5150227179cff79e/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=57136d60c69d4ac5c189fd7d5150227179cff79e", "patch": "@@ -8300,7 +8300,7 @@ gnat_to_gnu (Node_Id gnat_node)\n   /* If the result is a constant that overflowed, raise Constraint_Error.  */\n   if (TREE_CODE (gnu_result) == INTEGER_CST && TREE_OVERFLOW (gnu_result))\n     {\n-      post_error (\"??`Constraint_Error` will be raised at run time\", gnat_node);\n+      post_error (\"??Constraint_Error will be raised at run time\", gnat_node);\n       gnu_result\n \t= build1 (NULL_EXPR, gnu_result_type,\n \t\t  build_call_raise (CE_Overflow_Check_Failed, gnat_node,"}, {"sha": "5bfbca89fb54ca99241fd580f10bd3474b0672c0", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57136d60c69d4ac5c189fd7d5150227179cff79e/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57136d60c69d4ac5c189fd7d5150227179cff79e/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=57136d60c69d4ac5c189fd7d5150227179cff79e", "patch": "@@ -1684,7 +1684,7 @@ package body Sem_Ch6 is\n \n                Error_Msg_Warn := SPARK_Mode /= On;\n                Error_Msg_N (\"cannot return a local value by reference<<\", N);\n-               Error_Msg_NE (\"\\& [<<\", N, Standard_Program_Error);\n+               Error_Msg_N (\"\\Program_Error [<<\", N);\n             end if;\n          end if;\n "}, {"sha": "88181ab274468501d442a55cdf9baaef06b72da4", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57136d60c69d4ac5c189fd7d5150227179cff79e/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57136d60c69d4ac5c189fd7d5150227179cff79e/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=57136d60c69d4ac5c189fd7d5150227179cff79e", "patch": "@@ -6707,24 +6707,23 @@ package body Sem_Util is\n                      if Present (Conc_Typ)\n                        and then not Comes_From_Source (Conc_Typ)\n                      then\n-                        Error_Msg_NEL\n-                          (\"\\& [<<\", N, Standard_Constraint_Error, Eloc);\n+                        Error_Msg (\"\\& [<<\", Eloc, N);\n \n                      else\n                         if GNATprove_Mode then\n-                           Error_Msg_NEL\n-                             (\"\\& would have been raised for objects of this \"\n-                              & \"type\", N, Standard_Constraint_Error, Eloc);\n+                           Error_Msg\n+                             (\"\\Constraint_Error would have been raised\"\n+                              & \" for objects of this type\", Eloc, N);\n                         else\n-                           Error_Msg_NEL\n-                             (\"\\& will be raised for objects of this type??\",\n-                              N, Standard_Constraint_Error, Eloc);\n+                           Error_Msg\n+                             (\"\\Constraint_Error will be raised\"\n+                              & \" for objects of this type??\", Eloc, N);\n                         end if;\n                      end if;\n                   end;\n \n                else\n-                  Error_Msg_NEL (\"\\& [<<\", N, Standard_Constraint_Error, Eloc);\n+                  Error_Msg (\"\\Constraint_Error [<<\", Eloc, N);\n                end if;\n \n             else"}, {"sha": "45370fd098ed883c059f4958155a506180dc62db", "filename": "gcc/testsuite/gnat.dg/aggr26.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57136d60c69d4ac5c189fd7d5150227179cff79e/gcc%2Ftestsuite%2Fgnat.dg%2Faggr26.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57136d60c69d4ac5c189fd7d5150227179cff79e/gcc%2Ftestsuite%2Fgnat.dg%2Faggr26.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Faggr26.adb?ref=57136d60c69d4ac5c189fd7d5150227179cff79e", "patch": "@@ -3,7 +3,7 @@\n procedure Aggr26 is\n \n     type Row is array (Positive) of Integer;\n-    H : array (Positive) of Row := (others => (others => 0));  --  { dg-warning \"\\\"Storage_Error\\\" will be raised at run time\" }\n+    H : array (Positive) of Row := (others => (others => 0));  --  { dg-warning \"Storage_Error will be raised at run time\" }\n \n begin\n    null;"}]}