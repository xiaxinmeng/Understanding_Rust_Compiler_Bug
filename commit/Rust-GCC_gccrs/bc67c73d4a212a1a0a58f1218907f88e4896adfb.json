{"sha": "bc67c73d4a212a1a0a58f1218907f88e4896adfb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM2N2M3M2Q0YTIxMmExYTBhNThmMTIxODkwN2Y4OGU0ODk2YWRmYg==", "commit": {"author": {"name": "Kim Ho", "email": "kho@redhat.com", "date": "2003-12-09T03:47:32Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-12-09T03:47:32Z"}, "message": "Fix for Checkbox states.\n\n2003-12-08  Kim Ho  <kho@redhat.com>\n\n\tFix for Checkbox states.\n\t* gnu/java/awt/peer/gtk/GtkCheckboxPeer.java:\n\t(currentState): New field.\n\t(nativeCreate): Add initial state parameter.\n\t(create): Changed to reflect new parameter.\n\t(setState): Fire only on changed states.\n\t(postItemEvent): Fire only on changed states. Also change the\n\tJava Checkbox to reflect new state.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.c:\n\t(nativeCreate): Add parameter and set active state.\n\nFrom-SVN: r74459", "tree": {"sha": "0b6ff0be1eea2dcd15ec02ed2ae18a8760b5138f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b6ff0be1eea2dcd15ec02ed2ae18a8760b5138f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc67c73d4a212a1a0a58f1218907f88e4896adfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc67c73d4a212a1a0a58f1218907f88e4896adfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc67c73d4a212a1a0a58f1218907f88e4896adfb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc67c73d4a212a1a0a58f1218907f88e4896adfb/comments", "author": {"login": "biscuitsandscones", "id": 133805869, "node_id": "U_kgDOB_m3LQ", "avatar_url": "https://avatars.githubusercontent.com/u/133805869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/biscuitsandscones", "html_url": "https://github.com/biscuitsandscones", "followers_url": "https://api.github.com/users/biscuitsandscones/followers", "following_url": "https://api.github.com/users/biscuitsandscones/following{/other_user}", "gists_url": "https://api.github.com/users/biscuitsandscones/gists{/gist_id}", "starred_url": "https://api.github.com/users/biscuitsandscones/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/biscuitsandscones/subscriptions", "organizations_url": "https://api.github.com/users/biscuitsandscones/orgs", "repos_url": "https://api.github.com/users/biscuitsandscones/repos", "events_url": "https://api.github.com/users/biscuitsandscones/events{/privacy}", "received_events_url": "https://api.github.com/users/biscuitsandscones/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7dd8177fc7f953488a096ef37329781fda227d4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dd8177fc7f953488a096ef37329781fda227d4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dd8177fc7f953488a096ef37329781fda227d4b"}], "stats": {"total": 46, "additions": 38, "deletions": 8}, "files": [{"sha": "2b1d473805f3ded4b0d1aee759914f2ae6bf6600", "filename": "libjava/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc67c73d4a212a1a0a58f1218907f88e4896adfb/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc67c73d4a212a1a0a58f1218907f88e4896adfb/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=bc67c73d4a212a1a0a58f1218907f88e4896adfb", "patch": "@@ -1,3 +1,16 @@\n+2003-12-08  Kim Ho  <kho@redhat.com>\n+\n+\tFix for Checkbox states.\n+\t* gnu/java/awt/peer/gtk/GtkCheckboxPeer.java:\n+\t(currentState): New field.\n+\t(nativeCreate): Add initial state parameter.\n+\t(create): Changed to reflect new parameter.\n+\t(setState): Fire only on changed states.\n+\t(postItemEvent): Fire only on changed states. Also change the \n+\tJava Checkbox to reflect new state.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.c:\n+\t(nativeCreate): Add parameter and set active state.\n+\n 2003-12-08  Fernando Nasser  <fnasser@redhat.com>\n  \n \t* java/awt/datatransfer/StringSelection.java (getTransferData): Return"}, {"sha": "174a16923deabdf1cbf9fa583207fc5d8a4f9dc4", "filename": "libjava/gnu/java/awt/peer/gtk/GtkCheckboxPeer.java", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc67c73d4a212a1a0a58f1218907f88e4896adfb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc67c73d4a212a1a0a58f1218907f88e4896adfb/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkCheckboxPeer.java?ref=bc67c73d4a212a1a0a58f1218907f88e4896adfb", "patch": "@@ -1,5 +1,5 @@\n /* GtkCheckboxPeer.java -- Implements CheckboxPeer with GTK\n-   Copyright (C) 1998, 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2002, 2003 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -48,8 +48,11 @@ public class GtkCheckboxPeer extends GtkComponentPeer\n {\n   // Group from last time it was set.\n   public GtkCheckboxGroupPeer old_group;\n+  // The current state of the GTK checkbox.\n+  private boolean currentState;  \n \n-  public native void nativeCreate (GtkCheckboxGroupPeer group);\n+  public native void nativeCreate (GtkCheckboxGroupPeer group,\n+                                   boolean state);\n   public native void nativeSetCheckboxGroup (GtkCheckboxGroupPeer group);\n   public native void connectHooks ();\n \n@@ -66,12 +69,14 @@ public void create ()\n   {\n     CheckboxGroup g = ((Checkbox) awtComponent).getCheckboxGroup ();\n     old_group = GtkCheckboxGroupPeer.getCheckboxGroupPeer (g);\n-    nativeCreate (old_group);\n+    currentState = ((Checkbox)awtComponent).getState();\n+    nativeCreate (old_group, currentState);\n   }\n \n   public void setState (boolean state)\n   {\n-    set (\"active\", state);\n+    if (currentState != state)\n+      set (\"active\", state);\n   }\n \n   public void setLabel (String label)\n@@ -103,7 +108,19 @@ public void getArgs (Component component, GtkArgList args)\n   // need information that we have.\n   public void postItemEvent (Object item, int stateChange)\n   {\n-    super.postItemEvent (awtComponent, stateChange);\n+    Checkbox currentCheckBox = ((Checkbox)awtComponent);\n+    // A firing of the event is only desired if the state has changed due to a \n+    // button press. The currentCheckBox's state must be different from the \n+    // one that the stateChange is changing to. \n+    // stateChange = 1 if it goes from false -> true\n+    // stateChange = 2 if it goes from true -> false\n+    if (( !currentCheckBox.getState() && stateChange == 1)\n+        || (currentCheckBox.getState() && stateChange == 2))\n+    {\n+      super.postItemEvent (awtComponent, stateChange);\n+      currentState = !currentCheckBox.getState();\n+      currentCheckBox.setState(currentState);\n+    }\n   }\n \n   public void dispose ()"}, {"sha": "d0d95f9fab73418e7689875da51f3e8ff36863df", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkCheckboxPeer.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc67c73d4a212a1a0a58f1218907f88e4896adfb/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkCheckboxPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc67c73d4a212a1a0a58f1218907f88e4896adfb/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkCheckboxPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkCheckboxPeer.c?ref=bc67c73d4a212a1a0a58f1218907f88e4896adfb", "patch": "@@ -1,5 +1,5 @@\n /* gtkcheckboxpeer.c -- Native implementation of GtkCheckboxPeer\n-   Copyright (C) 1998, 1999, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2002, 2003 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -78,7 +78,7 @@ JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkCheckboxGroupPeer_remove\n \n JNIEXPORT void JNICALL\n Java_gnu_java_awt_peer_gtk_GtkCheckboxPeer_nativeCreate\n-  (JNIEnv *env, jobject obj, jobject group)\n+  (JNIEnv *env, jobject obj, jobject group, jboolean state)\n {\n   GtkWidget *button;\n \n@@ -97,7 +97,7 @@ Java_gnu_java_awt_peer_gtk_GtkCheckboxPeer_nativeCreate\n \t  NSA_SET_PTR (env, group, button);\n \t}\n     }\n-\n+  gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (button), state);\n   gdk_threads_leave ();\n \n   NSA_SET_PTR (env, obj, button);"}]}