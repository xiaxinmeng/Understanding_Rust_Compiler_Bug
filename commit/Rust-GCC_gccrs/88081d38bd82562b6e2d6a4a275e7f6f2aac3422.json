{"sha": "88081d38bd82562b6e2d6a4a275e7f6f2aac3422", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODgwODFkMzhiZDgyNTYyYjZlMmQ2YTRhMjc1ZTdmNmYyYWFjMzQyMg==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-03-18T15:05:27Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2021-03-23T06:57:41Z"}, "message": "Handle setting of 1-bit anti-ranges uniformly.\n\n\tPR tree-optimization/99296\n\t* value-range.cc (irange::irange_set_1bit_anti_range): New.\n\t(irange::irange_set_anti_range): Call irange_set_1bit_anti_range\n\t* value-range.h (irange::irange_set_1bit_anti_range): New.", "tree": {"sha": "aaa780bc5eedd443151939c953fff9d6047b2858", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aaa780bc5eedd443151939c953fff9d6047b2858"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88081d38bd82562b6e2d6a4a275e7f6f2aac3422", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88081d38bd82562b6e2d6a4a275e7f6f2aac3422", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88081d38bd82562b6e2d6a4a275e7f6f2aac3422", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88081d38bd82562b6e2d6a4a275e7f6f2aac3422/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "441e1980cea7265c340868468cd63ea8c046ddec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/441e1980cea7265c340868468cd63ea8c046ddec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/441e1980cea7265c340868468cd63ea8c046ddec"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "4a0b3f0c366c6745eba8796594ee63dc5b1405cc", "filename": "gcc/testsuite/gcc.dg/pr99296.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88081d38bd82562b6e2d6a4a275e7f6f2aac3422/gcc%2Ftestsuite%2Fgcc.dg%2Fpr99296.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88081d38bd82562b6e2d6a4a275e7f6f2aac3422/gcc%2Ftestsuite%2Fgcc.dg%2Fpr99296.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr99296.c?ref=88081d38bd82562b6e2d6a4a275e7f6f2aac3422", "patch": "@@ -0,0 +1,7 @@\n+// { dg-do compile }\n+// { dg-options \"-O2 -fno-tree-bit-ccp\" }\n+\n+struct {\n+  signed a : 1;\n+} b, c;\n+void d() { b.a |= c.a |= 0 != 2; }"}, {"sha": "cd21f75909bf694265b0ac2ea4b119e136362fab", "filename": "gcc/value-range.cc", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88081d38bd82562b6e2d6a4a275e7f6f2aac3422/gcc%2Fvalue-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88081d38bd82562b6e2d6a4a275e7f6f2aac3422/gcc%2Fvalue-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.cc?ref=88081d38bd82562b6e2d6a4a275e7f6f2aac3422", "patch": "@@ -184,12 +184,43 @@ irange::irange_set (tree min, tree max)\n     verify_range ();\n }\n \n+void\n+irange::irange_set_1bit_anti_range (tree min, tree max)\n+{\n+  tree type = TREE_TYPE (min);\n+  gcc_checking_assert (TYPE_PRECISION (type) == 1);\n+\n+  if (operand_equal_p (min, max))\n+    {\n+      // Since these are 1-bit quantities, they can only be [MIN,MIN]\n+      // or [MAX,MAX].\n+      if (vrp_val_is_min (min))\n+\tmin = max = vrp_val_max (type);\n+      else\n+\tmin = max = vrp_val_min (type);\n+      set (min, max);\n+    }\n+  else\n+    {\n+      // The only alternative is [MIN,MAX], which is the empty range.\n+      set_undefined ();\n+    }\n+  if (flag_checking)\n+    verify_range ();\n+}\n+\n void\n irange::irange_set_anti_range (tree min, tree max)\n {\n   gcc_checking_assert (!POLY_INT_CST_P (min));\n   gcc_checking_assert (!POLY_INT_CST_P (max));\n \n+  if (TYPE_PRECISION (TREE_TYPE (min)) == 1)\n+    {\n+      irange_set_1bit_anti_range (min, max);\n+      return;\n+    }\n+\n   // set an anti-range\n   tree type = TREE_TYPE (min);\n   signop sign = TYPE_SIGN (type);"}, {"sha": "bfc54a2473ffa284da872453daf44bef27a01510", "filename": "gcc/value-range.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88081d38bd82562b6e2d6a4a275e7f6f2aac3422/gcc%2Fvalue-range.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88081d38bd82562b6e2d6a4a275e7f6f2aac3422/gcc%2Fvalue-range.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.h?ref=88081d38bd82562b6e2d6a4a275e7f6f2aac3422", "patch": "@@ -127,6 +127,8 @@ class irange\n   void copy_legacy_to_multi_range (const irange &);\n \n private:\n+  void irange_set_1bit_anti_range (tree, tree);\n+\n   unsigned char m_num_ranges;\n   unsigned char m_max_ranges;\n   ENUM_BITFIELD(value_range_kind) m_kind : 8;"}]}