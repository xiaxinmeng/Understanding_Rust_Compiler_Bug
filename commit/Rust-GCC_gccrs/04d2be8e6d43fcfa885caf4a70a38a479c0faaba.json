{"sha": "04d2be8e6d43fcfa885caf4a70a38a479c0faaba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDRkMmJlOGU2ZDQzZmNmYTg4NWNhZjRhNzBhMzhhNDc5YzBmYWFiYQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2002-05-25T20:18:41Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-05-25T20:18:41Z"}, "message": "tree.def: Fix typos.\n\n\t* tree.def: Fix typos.\n\t* doc/install.texi: Likewise.\n\nFrom-SVN: r53875", "tree": {"sha": "4b527778da2e5a352166db18ffd7169da770ce6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b527778da2e5a352166db18ffd7169da770ce6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04d2be8e6d43fcfa885caf4a70a38a479c0faaba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04d2be8e6d43fcfa885caf4a70a38a479c0faaba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04d2be8e6d43fcfa885caf4a70a38a479c0faaba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04d2be8e6d43fcfa885caf4a70a38a479c0faaba/comments", "author": null, "committer": null, "parents": [{"sha": "7b6e506ee012b202851133cac4bfbd32cef529fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b6e506ee012b202851133cac4bfbd32cef529fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b6e506ee012b202851133cac4bfbd32cef529fb"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "891d678648e7fa8fa3526c5e5412f3eb0a87d814", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04d2be8e6d43fcfa885caf4a70a38a479c0faaba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04d2be8e6d43fcfa885caf4a70a38a479c0faaba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=04d2be8e6d43fcfa885caf4a70a38a479c0faaba", "patch": "@@ -1,3 +1,8 @@\n+2002-05-25  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* tree.def: Fix typos.\n+\t* doc/install.texi: Likewise.\n+\n 2002-05-25  Richard Henderson  <rth@redhat.com>\n \n \t* configure.in (HAVE_AS_TLS): Add ia64 test."}, {"sha": "a81fb86f68a40b2067307002346c4575854dd939", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04d2be8e6d43fcfa885caf4a70a38a479c0faaba/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04d2be8e6d43fcfa885caf4a70a38a479c0faaba/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=04d2be8e6d43fcfa885caf4a70a38a479c0faaba", "patch": "@@ -2311,7 +2311,7 @@ is not really supported on the platform.  The native @command{as} and\n @command{ld} still are recommended.  The native AIX tools do\n interoperate with GCC@.\n \n-Building @file{libstdc++.a} requires a fix for a AIX Assembler bug\n+Building @file{libstdc++.a} requires a fix for an AIX Assembler bug\n APAR IY26685 (AIX 4.3) or APAR IY25528 (AIX 5.1).\n \n Linking executables and shared libraries may produce warnings of"}, {"sha": "705252fa17127cc0951f804372fc1b4d0f82aa94", "filename": "gcc/tree.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04d2be8e6d43fcfa885caf4a70a38a479c0faaba/gcc%2Ftree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04d2be8e6d43fcfa885caf4a70a38a479c0faaba/gcc%2Ftree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.def?ref=04d2be8e6d43fcfa885caf4a70a38a479c0faaba", "patch": "@@ -643,7 +643,7 @@ DEFTREECODE (BIT_NOT_EXPR, \"bit_not_expr\", '1', 1)\n    needed or not (for side effects).  The operand may have\n    BOOLEAN_TYPE or INTEGER_TYPE.  In either case, the argument will be\n    either zero or one.  For example, a TRUTH_NOT_EXPR will never have\n-   a INTEGER_TYPE VAR_DECL as its argument; instead, a NE_EXPR will be\n+   an INTEGER_TYPE VAR_DECL as its argument; instead, a NE_EXPR will be\n    used to compare the VAR_DECL to zero, thereby obtaining a node with\n    value zero or one.  */\n DEFTREECODE (TRUTH_ANDIF_EXPR, \"truth_andif_expr\", 'e', 2)\n@@ -776,7 +776,7 @@ DEFTREECODE (VA_ARG_EXPR, \"va_arg_expr\", 'e', 1)\n DEFTREECODE (TRY_CATCH_EXPR, \"try_catch_expr\", 'e', 2)\n \n /* Evaluate the first operand.\n-   The second operand is a a cleanup expression which is evaluated\n+   The second operand is a cleanup expression which is evaluated\n    before an exit (normal, exception, or jump out) from this expression.\n \n    Like a CLEANUP_POINT_EXPR/WITH_CLEANUP_EXPR combination, but those"}]}