{"sha": "8396a8d6fa187f93296c401f76b4150f9b3037aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM5NmE4ZDZmYTE4N2Y5MzI5NmM0MDFmNzZiNDE1MGY5YjMwMzdhYQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-31T03:13:52Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-31T03:13:52Z"}, "message": "(shorten_compare): Do nothing if both args constant.\n\nFrom-SVN: r5954", "tree": {"sha": "a97c431ec19396bc035762c5e9ca2386441e3135", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a97c431ec19396bc035762c5e9ca2386441e3135"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8396a8d6fa187f93296c401f76b4150f9b3037aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8396a8d6fa187f93296c401f76b4150f9b3037aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8396a8d6fa187f93296c401f76b4150f9b3037aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8396a8d6fa187f93296c401f76b4150f9b3037aa/comments", "author": null, "committer": null, "parents": [{"sha": "a81fee56a95764ef7040351599e20506c879fa6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a81fee56a95764ef7040351599e20506c879fa6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a81fee56a95764ef7040351599e20506c879fa6a"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "37d0458e769045ba7faac31391f66a57c10c181e", "filename": "gcc/c-common.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8396a8d6fa187f93296c401f76b4150f9b3037aa/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8396a8d6fa187f93296c401f76b4150f9b3037aa/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=8396a8d6fa187f93296c401f76b4150f9b3037aa", "patch": "@@ -1259,6 +1259,13 @@ shorten_compare (op0_ptr, op1_ptr, restype_ptr, rescode_ptr)\n   tree primop0, primop1;\n   enum tree_code code = *rescode_ptr;\n \n+  /* Don't do anything if both args are constant.\n+     This avoids confusing warnings.  The caller will fold properly.  */\n+  if ((TREE_CODE (op0) == INTEGER_CST || TREE_CODE (op0) == REAL_CST)\n+      &&\n+      (TREE_CODE (op1) == INTEGER_CST || TREE_CODE (op1) == REAL_CST))\n+    return 0;\n+\n   /* Throw away any conversions to wider types\n      already present in the operands.  */\n "}]}