{"sha": "619bfd9fef74000750b1683efc79909798104940", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE5YmZkOWZlZjc0MDAwNzUwYjE2ODNlZmM3OTkwOTc5ODEwNDk0MA==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-12-11T11:11:42Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-12-11T11:11:42Z"}, "message": "[Ada] Fix setting of Has_Predicate flag for aggregate subtypes\n\nThis patch enures that the subtype of an aggregate has the Has_Predicate\nflag properly set if the array component has a predicate, including the\ncase the predicate function for the component has not been constructed\nyet.\n\n2018-12-11  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_aggr.adb (Array_Aggr_Subtype. Resolve_Aggr_Expr): Indicate\n\tthat aggregate subtype has a predicate if the component type has\n\ta predicate; do not rely on exisatence of predicate function for\n\tcomponent, in case component is a type no yet frozen, for which\n\tpredicate function has not been created yet.\n\nFrom-SVN: r267007", "tree": {"sha": "d945d5736bed089227b5406ea0ea73c30586af46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d945d5736bed089227b5406ea0ea73c30586af46"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/619bfd9fef74000750b1683efc79909798104940", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/619bfd9fef74000750b1683efc79909798104940", "html_url": "https://github.com/Rust-GCC/gccrs/commit/619bfd9fef74000750b1683efc79909798104940", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/619bfd9fef74000750b1683efc79909798104940/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "78326189ea22b44e238daeb79cde3aa9171b8d15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78326189ea22b44e238daeb79cde3aa9171b8d15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78326189ea22b44e238daeb79cde3aa9171b8d15"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "d9dfb2240d2b5501f7d6c0e9626396ac2d686ce9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/619bfd9fef74000750b1683efc79909798104940/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/619bfd9fef74000750b1683efc79909798104940/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=619bfd9fef74000750b1683efc79909798104940", "patch": "@@ -1,3 +1,11 @@\n+2018-12-11  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_aggr.adb (Array_Aggr_Subtype. Resolve_Aggr_Expr): Indicate\n+\tthat aggregate subtype has a predicate if the component type has\n+\ta predicate; do not rely on exisatence of predicate function for\n+\tcomponent, in case component is a type no yet frozen, for which\n+\tpredicate function has not been created yet.\n+\n 2018-12-11  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* exp_aggr.adb (Packed_Array_Aggregate_Handled): Bail out for"}, {"sha": "304ff5d29492aa18686b30d5cd399ab5aa43692e", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/619bfd9fef74000750b1683efc79909798104940/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/619bfd9fef74000750b1683efc79909798104940/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=619bfd9fef74000750b1683efc79909798104940", "patch": "@@ -611,6 +611,16 @@ package body Sem_Aggr is\n       Set_Is_Constrained (Itype, True);\n       Set_Is_Internal    (Itype, True);\n \n+      if Has_Predicates (Typ) then\n+         Set_Has_Predicates (Itype);\n+\n+         if Present (Predicate_Function (Typ)) then\n+            Set_Predicate_Function (Itype, Predicate_Function (Typ));\n+         else\n+            Set_Predicated_Parent (Itype, Predicated_Parent (Typ));\n+         end if;\n+      end if;\n+\n       --  A simple optimization: purely positional aggregates of static\n       --  components should be passed to gigi unexpanded whenever possible, and\n       --  regardless of the staticness of the bounds themselves. Subsequent\n@@ -1627,7 +1637,7 @@ package body Sem_Aggr is\n          --  component assignments. If the expression covers several components\n          --  the analysis and the predicate check take place later.\n \n-         if Present (Predicate_Function (Component_Typ))\n+         if Has_Predicates (Component_Typ)\n            and then Analyzed (Expr)\n          then\n             Apply_Predicate_Check (Expr, Component_Typ);\n@@ -4194,7 +4204,7 @@ package body Sem_Aggr is\n          --  because the aggegate might not be expanded into individual\n          --  component assignments.\n \n-         if Present (Predicate_Function (Expr_Type))\n+         if Has_Predicates (Expr_Type)\n            and then Analyzed (Expr)\n          then\n             Apply_Predicate_Check (Expr, Expr_Type);"}]}