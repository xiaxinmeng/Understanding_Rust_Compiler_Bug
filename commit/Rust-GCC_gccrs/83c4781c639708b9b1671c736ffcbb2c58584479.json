{"sha": "83c4781c639708b9b1671c736ffcbb2c58584479", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNjNDc4MWM2Mzk3MDhiOWIxNjcxYzczNmZmY2JiMmM1ODU4NDQ3OQ==", "commit": {"author": {"name": "Bruce Korb", "email": "bkorb@gnu.org", "date": "2000-12-07T14:42:39Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2000-12-07T14:42:39Z"}, "message": "use \"exeext\" for variables and \"build_exeext\" for substitution\n\nFrom-SVN: r38113", "tree": {"sha": "1557efbce0f300ae53cb02737693d36d3da34961", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1557efbce0f300ae53cb02737693d36d3da34961"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83c4781c639708b9b1671c736ffcbb2c58584479", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83c4781c639708b9b1671c736ffcbb2c58584479", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83c4781c639708b9b1671c736ffcbb2c58584479", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83c4781c639708b9b1671c736ffcbb2c58584479/comments", "author": {"login": "brkorb", "id": 1242936, "node_id": "MDQ6VXNlcjEyNDI5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1242936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brkorb", "html_url": "https://github.com/brkorb", "followers_url": "https://api.github.com/users/brkorb/followers", "following_url": "https://api.github.com/users/brkorb/following{/other_user}", "gists_url": "https://api.github.com/users/brkorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/brkorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brkorb/subscriptions", "organizations_url": "https://api.github.com/users/brkorb/orgs", "repos_url": "https://api.github.com/users/brkorb/repos", "events_url": "https://api.github.com/users/brkorb/events{/privacy}", "received_events_url": "https://api.github.com/users/brkorb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "38da603971b2179956379c758f953d9a92f358c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38da603971b2179956379c758f953d9a92f358c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38da603971b2179956379c758f953d9a92f358c5"}], "stats": {"total": 27, "additions": 16, "deletions": 11}, "files": [{"sha": "0587e1a06e3bd52b913996abc6bd7092b749cbb5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83c4781c639708b9b1671c736ffcbb2c58584479/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83c4781c639708b9b1671c736ffcbb2c58584479/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=83c4781c639708b9b1671c736ffcbb2c58584479", "patch": "@@ -1,3 +1,8 @@\n+2000-12-07  Bruce Korb  <bkorb@gnu.org>\n+\n+\t* fixinc/Makefile.*(exeext): the variables are exeext, the\n+\tsubstitution expression is build_exeext.\n+\n 2000-12-07  Neil Booth  <neilb@earthling.net>\n \n         * c-common.c (parse_in): Make a cpp_reader *."}, {"sha": "3994ebda4318cc7f41fcf6841741a7cf914cde64", "filename": "gcc/fixinc/Makefile.BEOS", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83c4781c639708b9b1671c736ffcbb2c58584479/gcc%2Ffixinc%2FMakefile.BEOS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83c4781c639708b9b1671c736ffcbb2c58584479/gcc%2Ffixinc%2FMakefile.BEOS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2FMakefile.BEOS?ref=83c4781c639708b9b1671c736ffcbb2c58584479", "patch": "@@ -64,19 +64,19 @@ OBJ = fixincl.o fixtests.o fixfixes.o server.o procopen.o \\\n \n HDR = server.h gnu-regex.h fixlib.h machname.h\n \n-TARGETS = fixincl@exeext@ applyfix@exeext@\n+TARGETS = fixincl@build_exeext@ applyfix@build_exeext@\n \n all : $(TARGETS)\n gen : $(srcdir)/fixincl.x\n \n FIXINCL_OBJ = fixincl.o fixlib.o fixtests.o gnu-regex.o\n \n-fixincl@exeext@: $(FIXINCL_OBJ) $(LIBERTY)\n+fixincl@build_exeext@: $(FIXINCL_OBJ) $(LIBERTY)\n \t$(CC) $(FIXINC_DEFS) $(LDFLAGS) -o $@ $(FIXINCL_OBJ) $(LIBERTY)\n \n APPLY_OBJ = fixfixes.o fixlib.o gnu-regex.o\n \n-applyfix@exeext@: $(APPLY_OBJ) $(LIBERTY)\n+applyfix@build_exeext@: $(APPLY_OBJ) $(LIBERTY)\n \t$(CC) $(FIXINC_DEFS) $(LDFLAGS) -o $@ $(APPLY_OBJ) $(LIBERTY)\n \n $(OBJ)      : $(HDR)\n@@ -107,7 +107,7 @@ maintainer-clean : clean\n #  We still copy the script because we still have alternative scripts.\n #\n install-bin : $(TARGETS)\n-\t./fixincl@exeext@ -v\n+\t./fixincl -v\n \t@if [ -f ../fixinc.sh ] ; then rm -f ../fixinc.sh || \\\n \t    mv -f ../fixinc.sh ../fixinc.sh.$$ || exit 1 ; fi\n \t@if [ -f ./fixincl.sh ] ; \\"}, {"sha": "a606a7a24c6397a12fc121fff579fa5c35e9d665", "filename": "gcc/fixinc/Makefile.DOS", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83c4781c639708b9b1671c736ffcbb2c58584479/gcc%2Ffixinc%2FMakefile.DOS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83c4781c639708b9b1671c736ffcbb2c58584479/gcc%2Ffixinc%2FMakefile.DOS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2FMakefile.DOS?ref=83c4781c639708b9b1671c736ffcbb2c58584479", "patch": "@@ -64,19 +64,19 @@ OBJ = fixincl.o fixtests.o fixfixes.o server.o procopen.o \\\n \n HDR = server.h gnu-regex.h fixlib.h machname.h\n \n-TARGETS = fixincl@exeext@ applyfix@exeext@\n+TARGETS = fixincl@build_exeext@ applyfix@build_exeext@\n \n all : $(TARGETS)\n gen : $(srcdir)/fixincl.x\n \n FIXINCL_OBJ = fixincl.o fixlib.o fixtests.o gnu-regex.o\n \n-fixincl@exeext@: $(FIXINCL_OBJ) $(LIBERTY)\n+fixincl@build_exeext@: $(FIXINCL_OBJ) $(LIBERTY)\n \t$(CC) $(FIXINC_DEFS) $(LDFLAGS) -o $@ $(FIXINCL_OBJ) $(LIBERTY)\n \n APPLY_OBJ = fixfixes.o fixlib.o gnu-regex.o\n \n-applyfix@exeext@: $(APPLY_OBJ) $(LIBERTY)\n+applyfix@build_exeext@: $(APPLY_OBJ) $(LIBERTY)\n \t$(CC) $(FIXINC_DEFS) $(LDFLAGS) -o $@ $(APPLY_OBJ) $(LIBERTY)\n \n $(OBJ)      : $(HDR)\n@@ -107,7 +107,7 @@ maintainer-clean : clean\n #  We still copy the script because we still have alternative scripts.\n #\n install-bin : $(TARGETS)\n-\t./fixincl@exeext@ -v\n+\t./fixincl -v\n \t@if [ -f ../fixinc.sh ] ; then rm -f ../fixinc.sh || \\\n \t    mv -f ../fixinc.sh ../fixinc.sh.$$ || exit 1 ; fi\n \t@if [ -f ./fixincl.sh ] ; \\"}, {"sha": "6213ffd12b8a7ba018bf642f7a4f15cb196e3d56", "filename": "gcc/fixinc/Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83c4781c639708b9b1671c736ffcbb2c58584479/gcc%2Ffixinc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83c4781c639708b9b1671c736ffcbb2c58584479/gcc%2Ffixinc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2FMakefile.in?ref=83c4781c639708b9b1671c736ffcbb2c58584479", "patch": "@@ -64,12 +64,12 @@ OBJ = fixincl.o fixtests.o fixfixes.o server.o procopen.o \\\n \n HDR = server.h gnu-regex.h fixlib.h machname.h\n \n-TARGETS = fixincl@exeext@\n+TARGETS = fixincl@build_exeext@\n \n all : $(TARGETS)\n gen : $(srcdir)/fixincl.x\n \n-fixincl@exeext@: $(OBJ) $(LIBERTY)\n+fixincl@build_exeext@: $(OBJ) $(LIBERTY)\n \t$(CC) $(FIXINC_DEFS) $(LDFLAGS) -o $@ $(OBJ) $(LIBERTY)\n \n $(OBJ)      : $(HDR)\n@@ -100,7 +100,7 @@ maintainer-clean : clean\n #  We still copy the script because we still have alternative scripts.\n #\n install-bin : $(TARGETS)\n-\t./fixincl@exeext@ -v\n+\t./fixincl -v\n \t@if [ -f ../fixinc.sh ] ; then rm -f ../fixinc.sh || \\\n \t    mv -f ../fixinc.sh ../fixinc.sh.$$ || exit 1 ; fi\n \t@if [ -f ./fixincl.sh ] ; \\"}]}