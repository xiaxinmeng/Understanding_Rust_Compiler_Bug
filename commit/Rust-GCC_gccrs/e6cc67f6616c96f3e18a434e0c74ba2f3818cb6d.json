{"sha": "e6cc67f6616c96f3e18a434e0c74ba2f3818cb6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTZjYzY3ZjY2MTZjOTZmM2UxOGE0MzRlMGM3NGJhMmYzODE4Y2I2ZA==", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2020-06-29T13:15:49Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2020-06-29T13:15:49Z"}, "message": "PR fortran/71706 - ICE on using sync images with -fcheck=bounds\n\nThe run-time checking code did not properly convert the kind of the\nargument to SYNC IMAGES, leading to an error in verify_gimple.  Fix that.\n\ngcc/fortran/\n\tPR fortran/71706\n\t* trans-stmt.c (gfc_trans_sync): Do proper kind conversion in\n\tbounds-checking code.", "tree": {"sha": "678e7c84131543f09dbf1ca7f98453136ccd41cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/678e7c84131543f09dbf1ca7f98453136ccd41cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6cc67f6616c96f3e18a434e0c74ba2f3818cb6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6cc67f6616c96f3e18a434e0c74ba2f3818cb6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6cc67f6616c96f3e18a434e0c74ba2f3818cb6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6cc67f6616c96f3e18a434e0c74ba2f3818cb6d/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95d7d7f92924bca0dc04df95b14d7d1b56f92d98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95d7d7f92924bca0dc04df95b14d7d1b56f92d98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95d7d7f92924bca0dc04df95b14d7d1b56f92d98"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "54b56c4f01d036b9f71bb2a0f3790c0594eabaae", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6cc67f6616c96f3e18a434e0c74ba2f3818cb6d/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6cc67f6616c96f3e18a434e0c74ba2f3818cb6d/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=e6cc67f6616c96f3e18a434e0c74ba2f3818cb6d", "patch": "@@ -1228,6 +1228,7 @@ gfc_trans_sync (gfc_code *code, gfc_exec_op type)\n   if (code->expr1 && (gfc_option.rtcheck & GFC_RTCHECK_BOUNDS)\n       && code->expr1->rank == 0)\n     {\n+      tree images2 = fold_convert (integer_type_node, images);\n       tree cond;\n       if (flag_coarray != GFC_FCOARRAY_LIB)\n \tcond = fold_build2_loc (input_location, NE_EXPR, logical_type_node,\n@@ -1239,7 +1240,7 @@ gfc_trans_sync (gfc_code *code, gfc_exec_op type)\n \t\t\t\t     2, integer_zero_node,\n \t\t\t\t     build_int_cst (integer_type_node, -1));\n \t  cond = fold_build2_loc (input_location, GT_EXPR, logical_type_node,\n-\t\t\t\t  images, tmp);\n+\t\t\t\t  images2, tmp);\n \t  cond2 = fold_build2_loc (input_location, LT_EXPR, logical_type_node,\n \t\t\t\t   images,\n \t\t\t\t   build_int_cst (TREE_TYPE (images), 1));\n@@ -1248,8 +1249,7 @@ gfc_trans_sync (gfc_code *code, gfc_exec_op type)\n \t}\n       gfc_trans_runtime_check (true, false, cond, &se.pre,\n \t\t\t       &code->expr1->where, \"Invalid image number \"\n-\t\t\t       \"%d in SYNC IMAGES\",\n-\t\t\t       fold_convert (integer_type_node, images));\n+\t\t\t       \"%d in SYNC IMAGES\", images2);\n     }\n \n   /* Per F2008, 8.5.1, a SYNC MEMORY is implied by calling the"}, {"sha": "860c1c8be80737b734c5e578d85bca9c8ddeb0f6", "filename": "gcc/testsuite/gfortran.dg/pr71706.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6cc67f6616c96f3e18a434e0c74ba2f3818cb6d/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr71706.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6cc67f6616c96f3e18a434e0c74ba2f3818cb6d/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr71706.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr71706.f90?ref=e6cc67f6616c96f3e18a434e0c74ba2f3818cb6d", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do compile }\n+! { dg-options \"-fcoarray=lib -fcheck=all -fdefault-integer-8\" }\n+! PR fortran/71706 - ICE on using sync images with -fcheck=bounds\n+\n+program p\n+  integer, volatile :: me = 1\n+  sync images (me)\n+  sync images (int (me, 2))\n+  sync images (int (me, 8))\n+end"}]}