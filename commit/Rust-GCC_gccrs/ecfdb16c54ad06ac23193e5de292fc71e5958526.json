{"sha": "ecfdb16c54ad06ac23193e5de292fc71e5958526", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNmZGIxNmM1NGFkMDZhYzIzMTkzZTVkZTI5MmZjNzFlNTk1ODUyNg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2019-05-15T15:32:33Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2019-05-15T15:32:33Z"}, "message": "i386: Allow MMX intrinsic emulation with SSE\n\nAllow MMX intrinsic emulation with SSE/SSE2/SSSE3.  Don't enable MMX ISA\nby default with TARGET_MMX_WITH_SSE.\n\nFor pr82483-1.c and pr82483-2.c, \"-mssse3 -mno-mmx\" compiles in 64-bit\nmode since MMX intrinsics can be emulated wit SSE.\n\ngcc/\n\n\tPR target/89021\n\t* config/i386/i386-builtin.def: Enable MMX intrinsics with\n\tSSE/SSE2/SSSE3.\n\t* config/i386/i386-builtins.c (ix86_init_mmx_sse_builtins):\n\tLikewise.\n\t* config/i386/i386-expand.c (ix86_expand_builtin): Allow\n\tSSE/SSE2/SSSE3 to emulate MMX intrinsics with TARGET_MMX_WITH_SSE.\n\t* config/i386/mmintrin.h: Only require SSE2 if __MMX_WITH_SSE__\n\tis defined.\n\ngcc/testsuite/\n\n\tPR target/89021\n\t* gcc.target/i386/pr82483-1.c: Error only on ia32.\n\t* gcc.target/i386/pr82483-2.c: Likewise.\n\nFrom-SVN: r271252", "tree": {"sha": "b79a73d141c252d663dabc74bf397f1836f33806", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b79a73d141c252d663dabc74bf397f1836f33806"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecfdb16c54ad06ac23193e5de292fc71e5958526", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecfdb16c54ad06ac23193e5de292fc71e5958526", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecfdb16c54ad06ac23193e5de292fc71e5958526", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecfdb16c54ad06ac23193e5de292fc71e5958526/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d4410ec0ab4e3d2c834a811acf9e39af32e1d1d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4410ec0ab4e3d2c834a811acf9e39af32e1d1d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4410ec0ab4e3d2c834a811acf9e39af32e1d1d8"}], "stats": {"total": 189, "additions": 119, "deletions": 70}, "files": [{"sha": "9c69c02116fbea26f7dbf990797dd7fcf835af70", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecfdb16c54ad06ac23193e5de292fc71e5958526/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecfdb16c54ad06ac23193e5de292fc71e5958526/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ecfdb16c54ad06ac23193e5de292fc71e5958526", "patch": "@@ -1,3 +1,15 @@\n+2019-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/89021\n+\t* config/i386/i386-builtin.def: Enable MMX intrinsics with\n+\tSSE/SSE2/SSSE3.\n+\t* config/i386/i386-builtins.c (ix86_init_mmx_sse_builtins):\n+\tLikewise.\n+\t* config/i386/i386-expand.c (ix86_expand_builtin): Allow\n+\tSSE/SSE2/SSSE3 to emulate MMX intrinsics with TARGET_MMX_WITH_SSE.\n+\t* config/i386/mmintrin.h: Only require SSE2 if __MMX_WITH_SSE__\n+\tis defined.\n+\n 2019-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/89021"}, {"sha": "af3a491f92fc43ba25b7c7d28ff454d0c48979f8", "filename": "gcc/config/i386/i386-builtin.def", "status": "modified", "additions": 63, "deletions": 63, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecfdb16c54ad06ac23193e5de292fc71e5958526/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecfdb16c54ad06ac23193e5de292fc71e5958526/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin.def?ref=ecfdb16c54ad06ac23193e5de292fc71e5958526", "patch": "@@ -100,7 +100,7 @@ BDESC (0, 0, CODE_FOR_fnstsw, \"__builtin_ia32_fnstsw\", IX86_BUILTIN_FNSTSW, UNKN\n BDESC (0, 0, CODE_FOR_fnclex, \"__builtin_ia32_fnclex\", IX86_BUILTIN_FNCLEX, UNKNOWN, (int) VOID_FTYPE_VOID)\n \n /* MMX */\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_emms, \"__builtin_ia32_emms\", IX86_BUILTIN_EMMS, UNKNOWN, (int) VOID_FTYPE_VOID)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_emms, \"__builtin_ia32_emms\", IX86_BUILTIN_EMMS, UNKNOWN, (int) VOID_FTYPE_VOID)\n \n /* 3DNow! */\n BDESC (OPTION_MASK_ISA_3DNOW, 0, CODE_FOR_mmx_femms, \"__builtin_ia32_femms\", IX86_BUILTIN_FEMMS, UNKNOWN, (int) VOID_FTYPE_VOID)\n@@ -446,68 +446,68 @@ BDESC (0, 0, CODE_FOR_rotrqi3, \"__builtin_ia32_rorqi\", IX86_BUILTIN_RORQI, UNKNO\n BDESC (0, 0, CODE_FOR_rotrhi3, \"__builtin_ia32_rorhi\", IX86_BUILTIN_RORHI, UNKNOWN, (int) UINT16_FTYPE_UINT16_INT)\n \n /* MMX */\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_addv8qi3, \"__builtin_ia32_paddb\", IX86_BUILTIN_PADDB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_addv4hi3, \"__builtin_ia32_paddw\", IX86_BUILTIN_PADDW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_addv2si3, \"__builtin_ia32_paddd\", IX86_BUILTIN_PADDD, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_subv8qi3, \"__builtin_ia32_psubb\", IX86_BUILTIN_PSUBB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_subv4hi3, \"__builtin_ia32_psubw\", IX86_BUILTIN_PSUBW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_subv2si3, \"__builtin_ia32_psubd\", IX86_BUILTIN_PSUBD, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI)\n-\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_ssaddv8qi3, \"__builtin_ia32_paddsb\", IX86_BUILTIN_PADDSB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_ssaddv4hi3, \"__builtin_ia32_paddsw\", IX86_BUILTIN_PADDSW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_sssubv8qi3, \"__builtin_ia32_psubsb\", IX86_BUILTIN_PSUBSB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_sssubv4hi3, \"__builtin_ia32_psubsw\", IX86_BUILTIN_PSUBSW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_usaddv8qi3, \"__builtin_ia32_paddusb\", IX86_BUILTIN_PADDUSB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_usaddv4hi3, \"__builtin_ia32_paddusw\", IX86_BUILTIN_PADDUSW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_ussubv8qi3, \"__builtin_ia32_psubusb\", IX86_BUILTIN_PSUBUSB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_ussubv4hi3, \"__builtin_ia32_psubusw\", IX86_BUILTIN_PSUBUSW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n-\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_mulv4hi3, \"__builtin_ia32_pmullw\", IX86_BUILTIN_PMULLW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_smulv4hi3_highpart, \"__builtin_ia32_pmulhw\", IX86_BUILTIN_PMULHW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n-\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_andv2si3, \"__builtin_ia32_pand\", IX86_BUILTIN_PAND, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_andnotv2si3, \"__builtin_ia32_pandn\", IX86_BUILTIN_PANDN, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_iorv2si3, \"__builtin_ia32_por\", IX86_BUILTIN_POR, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_xorv2si3, \"__builtin_ia32_pxor\", IX86_BUILTIN_PXOR, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI)\n-\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_eqv8qi3, \"__builtin_ia32_pcmpeqb\", IX86_BUILTIN_PCMPEQB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_eqv4hi3, \"__builtin_ia32_pcmpeqw\", IX86_BUILTIN_PCMPEQW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_eqv2si3, \"__builtin_ia32_pcmpeqd\", IX86_BUILTIN_PCMPEQD, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_gtv8qi3, \"__builtin_ia32_pcmpgtb\", IX86_BUILTIN_PCMPGTB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_gtv4hi3, \"__builtin_ia32_pcmpgtw\", IX86_BUILTIN_PCMPGTW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_gtv2si3, \"__builtin_ia32_pcmpgtd\", IX86_BUILTIN_PCMPGTD, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI)\n-\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_punpckhbw, \"__builtin_ia32_punpckhbw\", IX86_BUILTIN_PUNPCKHBW, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_punpckhwd, \"__builtin_ia32_punpckhwd\", IX86_BUILTIN_PUNPCKHWD, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_punpckhdq, \"__builtin_ia32_punpckhdq\", IX86_BUILTIN_PUNPCKHDQ, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_punpcklbw, \"__builtin_ia32_punpcklbw\", IX86_BUILTIN_PUNPCKLBW, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_punpcklwd, \"__builtin_ia32_punpcklwd\", IX86_BUILTIN_PUNPCKLWD, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_punpckldq, \"__builtin_ia32_punpckldq\", IX86_BUILTIN_PUNPCKLDQ, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI)\n-\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_packsswb, \"__builtin_ia32_packsswb\", IX86_BUILTIN_PACKSSWB, UNKNOWN, (int) V8QI_FTYPE_V4HI_V4HI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_packssdw, \"__builtin_ia32_packssdw\", IX86_BUILTIN_PACKSSDW, UNKNOWN, (int) V4HI_FTYPE_V2SI_V2SI)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_packuswb, \"__builtin_ia32_packuswb\", IX86_BUILTIN_PACKUSWB, UNKNOWN, (int) V8QI_FTYPE_V4HI_V4HI)\n-\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_pmaddwd, \"__builtin_ia32_pmaddwd\", IX86_BUILTIN_PMADDWD, UNKNOWN, (int) V2SI_FTYPE_V4HI_V4HI)\n-\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_ashlv4hi3, \"__builtin_ia32_psllwi\", IX86_BUILTIN_PSLLWI, UNKNOWN, (int) V4HI_FTYPE_V4HI_SI_COUNT)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_ashlv2si3, \"__builtin_ia32_pslldi\", IX86_BUILTIN_PSLLDI, UNKNOWN, (int) V2SI_FTYPE_V2SI_SI_COUNT)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_ashlv1di3, \"__builtin_ia32_psllqi\", IX86_BUILTIN_PSLLQI, UNKNOWN, (int) V1DI_FTYPE_V1DI_SI_COUNT)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_ashlv4hi3, \"__builtin_ia32_psllw\", IX86_BUILTIN_PSLLW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI_COUNT)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_ashlv2si3, \"__builtin_ia32_pslld\", IX86_BUILTIN_PSLLD, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI_COUNT)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_ashlv1di3, \"__builtin_ia32_psllq\", IX86_BUILTIN_PSLLQ, UNKNOWN, (int) V1DI_FTYPE_V1DI_V1DI_COUNT)\n-\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_lshrv4hi3, \"__builtin_ia32_psrlwi\", IX86_BUILTIN_PSRLWI, UNKNOWN, (int) V4HI_FTYPE_V4HI_SI_COUNT)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_lshrv2si3, \"__builtin_ia32_psrldi\", IX86_BUILTIN_PSRLDI, UNKNOWN, (int) V2SI_FTYPE_V2SI_SI_COUNT)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_lshrv1di3, \"__builtin_ia32_psrlqi\", IX86_BUILTIN_PSRLQI, UNKNOWN, (int) V1DI_FTYPE_V1DI_SI_COUNT)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_lshrv4hi3, \"__builtin_ia32_psrlw\", IX86_BUILTIN_PSRLW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI_COUNT)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_lshrv2si3, \"__builtin_ia32_psrld\", IX86_BUILTIN_PSRLD, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI_COUNT)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_lshrv1di3, \"__builtin_ia32_psrlq\", IX86_BUILTIN_PSRLQ, UNKNOWN, (int) V1DI_FTYPE_V1DI_V1DI_COUNT)\n-\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_ashrv4hi3, \"__builtin_ia32_psrawi\", IX86_BUILTIN_PSRAWI, UNKNOWN, (int) V4HI_FTYPE_V4HI_SI_COUNT)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_ashrv2si3, \"__builtin_ia32_psradi\", IX86_BUILTIN_PSRADI, UNKNOWN, (int) V2SI_FTYPE_V2SI_SI_COUNT)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_ashrv4hi3, \"__builtin_ia32_psraw\", IX86_BUILTIN_PSRAW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI_COUNT)\n-BDESC (OPTION_MASK_ISA_MMX, 0, CODE_FOR_mmx_ashrv2si3, \"__builtin_ia32_psrad\", IX86_BUILTIN_PSRAD, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI_COUNT)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_addv8qi3, \"__builtin_ia32_paddb\", IX86_BUILTIN_PADDB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_addv4hi3, \"__builtin_ia32_paddw\", IX86_BUILTIN_PADDW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_addv2si3, \"__builtin_ia32_paddd\", IX86_BUILTIN_PADDD, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_subv8qi3, \"__builtin_ia32_psubb\", IX86_BUILTIN_PSUBB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_subv4hi3, \"__builtin_ia32_psubw\", IX86_BUILTIN_PSUBW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_subv2si3, \"__builtin_ia32_psubd\", IX86_BUILTIN_PSUBD, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI)\n+\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_ssaddv8qi3, \"__builtin_ia32_paddsb\", IX86_BUILTIN_PADDSB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_ssaddv4hi3, \"__builtin_ia32_paddsw\", IX86_BUILTIN_PADDSW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_sssubv8qi3, \"__builtin_ia32_psubsb\", IX86_BUILTIN_PSUBSB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_sssubv4hi3, \"__builtin_ia32_psubsw\", IX86_BUILTIN_PSUBSW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_usaddv8qi3, \"__builtin_ia32_paddusb\", IX86_BUILTIN_PADDUSB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_usaddv4hi3, \"__builtin_ia32_paddusw\", IX86_BUILTIN_PADDUSW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_ussubv8qi3, \"__builtin_ia32_psubusb\", IX86_BUILTIN_PSUBUSB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_ussubv4hi3, \"__builtin_ia32_psubusw\", IX86_BUILTIN_PSUBUSW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n+\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_mulv4hi3, \"__builtin_ia32_pmullw\", IX86_BUILTIN_PMULLW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_smulv4hi3_highpart, \"__builtin_ia32_pmulhw\", IX86_BUILTIN_PMULHW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n+\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_andv2si3, \"__builtin_ia32_pand\", IX86_BUILTIN_PAND, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_andnotv2si3, \"__builtin_ia32_pandn\", IX86_BUILTIN_PANDN, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_iorv2si3, \"__builtin_ia32_por\", IX86_BUILTIN_POR, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_xorv2si3, \"__builtin_ia32_pxor\", IX86_BUILTIN_PXOR, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI)\n+\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_eqv8qi3, \"__builtin_ia32_pcmpeqb\", IX86_BUILTIN_PCMPEQB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_eqv4hi3, \"__builtin_ia32_pcmpeqw\", IX86_BUILTIN_PCMPEQW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_eqv2si3, \"__builtin_ia32_pcmpeqd\", IX86_BUILTIN_PCMPEQD, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_gtv8qi3, \"__builtin_ia32_pcmpgtb\", IX86_BUILTIN_PCMPGTB, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_gtv4hi3, \"__builtin_ia32_pcmpgtw\", IX86_BUILTIN_PCMPGTW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_gtv2si3, \"__builtin_ia32_pcmpgtd\", IX86_BUILTIN_PCMPGTD, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI)\n+\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_punpckhbw, \"__builtin_ia32_punpckhbw\", IX86_BUILTIN_PUNPCKHBW, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_punpckhwd, \"__builtin_ia32_punpckhwd\", IX86_BUILTIN_PUNPCKHWD, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_punpckhdq, \"__builtin_ia32_punpckhdq\", IX86_BUILTIN_PUNPCKHDQ, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_punpcklbw, \"__builtin_ia32_punpcklbw\", IX86_BUILTIN_PUNPCKLBW, UNKNOWN, (int) V8QI_FTYPE_V8QI_V8QI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_punpcklwd, \"__builtin_ia32_punpcklwd\", IX86_BUILTIN_PUNPCKLWD, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_punpckldq, \"__builtin_ia32_punpckldq\", IX86_BUILTIN_PUNPCKLDQ, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI)\n+\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_packsswb, \"__builtin_ia32_packsswb\", IX86_BUILTIN_PACKSSWB, UNKNOWN, (int) V8QI_FTYPE_V4HI_V4HI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_packssdw, \"__builtin_ia32_packssdw\", IX86_BUILTIN_PACKSSDW, UNKNOWN, (int) V4HI_FTYPE_V2SI_V2SI)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_packuswb, \"__builtin_ia32_packuswb\", IX86_BUILTIN_PACKUSWB, UNKNOWN, (int) V8QI_FTYPE_V4HI_V4HI)\n+\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_pmaddwd, \"__builtin_ia32_pmaddwd\", IX86_BUILTIN_PMADDWD, UNKNOWN, (int) V2SI_FTYPE_V4HI_V4HI)\n+\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_ashlv4hi3, \"__builtin_ia32_psllwi\", IX86_BUILTIN_PSLLWI, UNKNOWN, (int) V4HI_FTYPE_V4HI_SI_COUNT)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_ashlv2si3, \"__builtin_ia32_pslldi\", IX86_BUILTIN_PSLLDI, UNKNOWN, (int) V2SI_FTYPE_V2SI_SI_COUNT)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_ashlv1di3, \"__builtin_ia32_psllqi\", IX86_BUILTIN_PSLLQI, UNKNOWN, (int) V1DI_FTYPE_V1DI_SI_COUNT)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_ashlv4hi3, \"__builtin_ia32_psllw\", IX86_BUILTIN_PSLLW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI_COUNT)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_ashlv2si3, \"__builtin_ia32_pslld\", IX86_BUILTIN_PSLLD, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI_COUNT)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_ashlv1di3, \"__builtin_ia32_psllq\", IX86_BUILTIN_PSLLQ, UNKNOWN, (int) V1DI_FTYPE_V1DI_V1DI_COUNT)\n+\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_lshrv4hi3, \"__builtin_ia32_psrlwi\", IX86_BUILTIN_PSRLWI, UNKNOWN, (int) V4HI_FTYPE_V4HI_SI_COUNT)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_lshrv2si3, \"__builtin_ia32_psrldi\", IX86_BUILTIN_PSRLDI, UNKNOWN, (int) V2SI_FTYPE_V2SI_SI_COUNT)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_lshrv1di3, \"__builtin_ia32_psrlqi\", IX86_BUILTIN_PSRLQI, UNKNOWN, (int) V1DI_FTYPE_V1DI_SI_COUNT)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_lshrv4hi3, \"__builtin_ia32_psrlw\", IX86_BUILTIN_PSRLW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI_COUNT)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_lshrv2si3, \"__builtin_ia32_psrld\", IX86_BUILTIN_PSRLD, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI_COUNT)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_lshrv1di3, \"__builtin_ia32_psrlq\", IX86_BUILTIN_PSRLQ, UNKNOWN, (int) V1DI_FTYPE_V1DI_V1DI_COUNT)\n+\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_ashrv4hi3, \"__builtin_ia32_psrawi\", IX86_BUILTIN_PSRAWI, UNKNOWN, (int) V4HI_FTYPE_V4HI_SI_COUNT)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_ashrv2si3, \"__builtin_ia32_psradi\", IX86_BUILTIN_PSRADI, UNKNOWN, (int) V2SI_FTYPE_V2SI_SI_COUNT)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_ashrv4hi3, \"__builtin_ia32_psraw\", IX86_BUILTIN_PSRAW, UNKNOWN, (int) V4HI_FTYPE_V4HI_V4HI_COUNT)\n+BDESC (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0, CODE_FOR_mmx_ashrv2si3, \"__builtin_ia32_psrad\", IX86_BUILTIN_PSRAD, UNKNOWN, (int) V2SI_FTYPE_V2SI_V2SI_COUNT)\n \n /* 3DNow! */\n BDESC (OPTION_MASK_ISA_3DNOW, 0, CODE_FOR_mmx_pf2id, \"__builtin_ia32_pf2id\", IX86_BUILTIN_PF2ID, UNKNOWN, (int) V2SI_FTYPE_V2SF)"}, {"sha": "4f1ebf580548e65eddc84b0903e7c6ad3244c8c2", "filename": "gcc/config/i386/i386-builtins.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecfdb16c54ad06ac23193e5de292fc71e5958526/gcc%2Fconfig%2Fi386%2Fi386-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecfdb16c54ad06ac23193e5de292fc71e5958526/gcc%2Fconfig%2Fi386%2Fi386-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtins.c?ref=ecfdb16c54ad06ac23193e5de292fc71e5958526", "patch": "@@ -1058,14 +1058,17 @@ ix86_init_mmx_sse_builtins (void)\n \t       VOID_FTYPE_UNSIGNED, IX86_BUILTIN_XABORT);\n \n   /* MMX access to the vec_init patterns.  */\n-  def_builtin_const (OPTION_MASK_ISA_MMX, 0, \"__builtin_ia32_vec_init_v2si\",\n+  def_builtin_const (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0,\n+\t\t     \"__builtin_ia32_vec_init_v2si\",\n \t\t     V2SI_FTYPE_INT_INT, IX86_BUILTIN_VEC_INIT_V2SI);\n \n-  def_builtin_const (OPTION_MASK_ISA_MMX, 0, \"__builtin_ia32_vec_init_v4hi\",\n+  def_builtin_const (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0,\n+\t\t     \"__builtin_ia32_vec_init_v4hi\",\n \t\t     V4HI_FTYPE_HI_HI_HI_HI,\n \t\t     IX86_BUILTIN_VEC_INIT_V4HI);\n \n-  def_builtin_const (OPTION_MASK_ISA_MMX, 0, \"__builtin_ia32_vec_init_v8qi\",\n+  def_builtin_const (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0,\n+\t\t     \"__builtin_ia32_vec_init_v8qi\",\n \t\t     V8QI_FTYPE_QI_QI_QI_QI_QI_QI_QI_QI,\n \t\t     IX86_BUILTIN_VEC_INIT_V8QI);\n \n@@ -1087,7 +1090,8 @@ ix86_init_mmx_sse_builtins (void)\n \t\t     \"__builtin_ia32_vec_ext_v4hi\",\n \t\t     HI_FTYPE_V4HI_INT, IX86_BUILTIN_VEC_EXT_V4HI);\n \n-  def_builtin_const (OPTION_MASK_ISA_MMX, 0, \"__builtin_ia32_vec_ext_v2si\",\n+  def_builtin_const (OPTION_MASK_ISA_MMX | OPTION_MASK_ISA_SSE2, 0,\n+\t\t     \"__builtin_ia32_vec_ext_v2si\",\n \t\t     SI_FTYPE_V2SI_INT, IX86_BUILTIN_VEC_EXT_V2SI);\n \n   def_builtin_const (OPTION_MASK_ISA_SSE2, 0, \"__builtin_ia32_vec_ext_v16qi\","}, {"sha": "a8ed33c48e5bbe2f5ed6b20a03bf1aa122b486a7", "filename": "gcc/config/i386/i386-expand.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecfdb16c54ad06ac23193e5de292fc71e5958526/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecfdb16c54ad06ac23193e5de292fc71e5958526/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.c?ref=ecfdb16c54ad06ac23193e5de292fc71e5958526", "patch": "@@ -10936,6 +10936,23 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,\n        == (OPTION_MASK_ISA_FMA | OPTION_MASK_ISA_FMA4))\n       && (isa & (OPTION_MASK_ISA_FMA | OPTION_MASK_ISA_FMA4)) != 0)\n     isa |= (OPTION_MASK_ISA_FMA | OPTION_MASK_ISA_FMA4);\n+  /* Use SSE/SSE2/SSSE3 to emulate MMX intrinsics in 64-bit mode when\n+     MMX is disabled.  */\n+  if (TARGET_MMX_WITH_SSE)\n+    {\n+      if (((bisa & (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_MMX))\n+\t   == (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_MMX))\n+\t  && (isa & (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_MMX)) != 0)\n+\tisa |= (OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_MMX);\n+      if (((bisa & (OPTION_MASK_ISA_SSE2 | OPTION_MASK_ISA_MMX))\n+\t   == (OPTION_MASK_ISA_SSE2 | OPTION_MASK_ISA_MMX))\n+\t  && (isa & (OPTION_MASK_ISA_SSE2 | OPTION_MASK_ISA_MMX)) != 0)\n+\tisa |= (OPTION_MASK_ISA_SSE2 | OPTION_MASK_ISA_MMX);\n+      if (((bisa & (OPTION_MASK_ISA_SSSE3 | OPTION_MASK_ISA_MMX))\n+\t   == (OPTION_MASK_ISA_SSSE3 | OPTION_MASK_ISA_MMX))\n+\t  && (isa & (OPTION_MASK_ISA_SSSE3 | OPTION_MASK_ISA_MMX)) != 0)\n+\tisa |= (OPTION_MASK_ISA_SSSE3 | OPTION_MASK_ISA_MMX);\n+    }\n   if ((bisa & isa) != bisa || (bisa2 & isa2) != bisa2)\n     {\n       bool add_abi_p = bisa & OPTION_MASK_ISA_64BIT;"}, {"sha": "c4b2e0c7b257278a8cbcdde72e1fa10f7a4584d0", "filename": "gcc/config/i386/mmintrin.h", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecfdb16c54ad06ac23193e5de292fc71e5958526/gcc%2Fconfig%2Fi386%2Fmmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecfdb16c54ad06ac23193e5de292fc71e5958526/gcc%2Fconfig%2Fi386%2Fmmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmintrin.h?ref=ecfdb16c54ad06ac23193e5de292fc71e5958526", "patch": "@@ -29,7 +29,9 @@\n \n #if defined __x86_64__ && !defined __SSE__ || !defined __MMX__\n #pragma GCC push_options\n-#ifdef __x86_64__\n+#ifdef __MMX_WITH_SSE__\n+#pragma GCC target(\"sse2\")\n+#elif defined __x86_64__\n #pragma GCC target(\"sse,mmx\")\n #else\n #pragma GCC target(\"mmx\")\n@@ -315,7 +317,11 @@ _m_paddd (__m64 __m1, __m64 __m2)\n /* Add the 64-bit values in M1 to the 64-bit values in M2.  */\n #ifndef __SSE2__\n #pragma GCC push_options\n+#ifdef __MMX_WITH_SSE__\n+#pragma GCC target(\"sse2\")\n+#else\n #pragma GCC target(\"sse2,mmx\")\n+#endif\n #define __DISABLE_SSE2__\n #endif /* __SSE2__ */\n \n@@ -427,7 +433,11 @@ _m_psubd (__m64 __m1, __m64 __m2)\n /* Add the 64-bit values in M1 to the 64-bit values in M2.  */\n #ifndef __SSE2__\n #pragma GCC push_options\n+#ifdef __MMX_WITH_SSE__\n+#pragma GCC target(\"sse2\")\n+#else\n #pragma GCC target(\"sse2,mmx\")\n+#endif\n #define __DISABLE_SSE2__\n #endif /* __SSE2__ */\n "}, {"sha": "bade79920452b1cc48c1673c609c65302bd38222", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecfdb16c54ad06ac23193e5de292fc71e5958526/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecfdb16c54ad06ac23193e5de292fc71e5958526/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ecfdb16c54ad06ac23193e5de292fc71e5958526", "patch": "@@ -1,3 +1,9 @@\n+2019-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/89021\n+\t* gcc.target/i386/pr82483-1.c: Error only on ia32.\n+\t* gcc.target/i386/pr82483-2.c: Likewise.\n+\n 2019-05-15  Martin Liska  <mliska@suse.cz>\n \n \tPR middle-end/90478"}, {"sha": "b2028d8dc5e07bd64b6a9ee322bcc8613051ad89", "filename": "gcc/testsuite/gcc.target/i386/pr82483-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecfdb16c54ad06ac23193e5de292fc71e5958526/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82483-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecfdb16c54ad06ac23193e5de292fc71e5958526/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82483-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82483-1.c?ref=ecfdb16c54ad06ac23193e5de292fc71e5958526", "patch": "@@ -1,7 +1,7 @@\n /* PR target/82483 */\n /* { dg-do compile } */\n /* { dg-options \"-mssse3 -mno-mmx -Wno-psabi\" } */\n-/* { dg-error \"needs isa option\" \"\" { target *-*-* } 0 } */\n+/* { dg-error \"needs isa option\" \"\" { target ia32 } 0 } */\n \n #include <x86intrin.h>\n "}, {"sha": "c92de405cb30ad6570eedff4d88f48515d9c3f33", "filename": "gcc/testsuite/gcc.target/i386/pr82483-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecfdb16c54ad06ac23193e5de292fc71e5958526/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82483-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecfdb16c54ad06ac23193e5de292fc71e5958526/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82483-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82483-2.c?ref=ecfdb16c54ad06ac23193e5de292fc71e5958526", "patch": "@@ -1,7 +1,7 @@\n /* PR target/82483 */\n /* { dg-do compile } */\n /* { dg-options \"-mssse3 -mno-mmx -Wno-psabi\" } */\n-/* { dg-error \"needs isa option\" \"\" { target *-*-* } 0 } */\n+/* { dg-error \"needs isa option\" \"\" { target ia32 } 0 } */\n \n #include <x86intrin.h>\n "}]}