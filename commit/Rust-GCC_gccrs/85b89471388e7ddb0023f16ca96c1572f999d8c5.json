{"sha": "85b89471388e7ddb0023f16ca96c1572f999d8c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODViODk0NzEzODhlN2RkYjAwMjNmMTZjYTk2YzE1NzJmOTk5ZDhjNQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@geoffk.org", "date": "2003-12-03T09:19:12Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2003-12-03T09:19:12Z"}, "message": "df.c (df_uses_record): The argument of a MEM is read-only, never read-write.\n\n\t* df.c (df_uses_record) <MEM>: The argument of a MEM is read-only,\n\tnever read-write.\n\t<REG>: Delete incorrect comment.\n\t<SET>: Remove 'use_flags' variable.\n\nFrom-SVN: r74221", "tree": {"sha": "66a0b29bb51c49e377df8f017cbf503abbed5c6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66a0b29bb51c49e377df8f017cbf503abbed5c6b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85b89471388e7ddb0023f16ca96c1572f999d8c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85b89471388e7ddb0023f16ca96c1572f999d8c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85b89471388e7ddb0023f16ca96c1572f999d8c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85b89471388e7ddb0023f16ca96c1572f999d8c5/comments", "author": {"login": "geoffk02", "id": 34037634, "node_id": "MDQ6VXNlcjM0MDM3NjM0", "avatar_url": "https://avatars.githubusercontent.com/u/34037634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk02", "html_url": "https://github.com/geoffk02", "followers_url": "https://api.github.com/users/geoffk02/followers", "following_url": "https://api.github.com/users/geoffk02/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk02/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk02/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk02/subscriptions", "organizations_url": "https://api.github.com/users/geoffk02/orgs", "repos_url": "https://api.github.com/users/geoffk02/repos", "events_url": "https://api.github.com/users/geoffk02/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk02/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3259561c4c46afb921e593baeebdc0a955063473", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3259561c4c46afb921e593baeebdc0a955063473", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3259561c4c46afb921e593baeebdc0a955063473"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "1ea9b2c6da885e14a4044adadaddb35b43560eaa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85b89471388e7ddb0023f16ca96c1572f999d8c5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85b89471388e7ddb0023f16ca96c1572f999d8c5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=85b89471388e7ddb0023f16ca96c1572f999d8c5", "patch": "@@ -1,3 +1,10 @@\n+2003-12-02  Geoffrey Keating  <geoffk@geoffk.org>\n+\n+\t* df.c (df_uses_record) <MEM>: The argument of a MEM is read-only,\n+\tnever read-write.\n+\t<REG>: Delete incorrect comment.\n+\t<SET>: Remove 'use_flags' variable.\n+\n 2003-12-03  David Edelsohn  <edelsohn@gnu.org>\n \n \t* function.c (assign_parms): Make sure parm PARALLEL combined"}, {"sha": "e061faee13f5d8c7e03da6b29acc493611c7f9cd", "filename": "gcc/df.c", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85b89471388e7ddb0023f16ca96c1572f999d8c5/gcc%2Fdf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85b89471388e7ddb0023f16ca96c1572f999d8c5/gcc%2Fdf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf.c?ref=85b89471388e7ddb0023f16ca96c1572f999d8c5", "patch": "@@ -971,7 +971,7 @@ df_uses_record (struct df *df, rtx *loc, enum df_ref_type ref_type,\n       return;\n \n     case MEM:\n-      df_uses_record (df, &XEXP (x, 0), DF_REF_REG_MEM_LOAD, bb, insn, flags);\n+      df_uses_record (df, &XEXP (x, 0), DF_REF_REG_MEM_LOAD, bb, insn, 0);\n       return;\n \n     case SUBREG:\n@@ -987,7 +987,6 @@ df_uses_record (struct df *df, rtx *loc, enum df_ref_type ref_type,\n       /* ... Fall through ...  */\n \n     case REG:\n-      /* See a REG (or SUBREG) other than being set.  */\n       df_ref_record (df, x, loc, insn, ref_type, flags);\n       return;\n \n@@ -999,14 +998,12 @@ df_uses_record (struct df *df, rtx *loc, enum df_ref_type ref_type,\n \n \tswitch (GET_CODE (dst))\n \t  {\n-\t    enum df_ref_flags use_flags;\n \t    case SUBREG:\n \t      if ((df->flags & DF_FOR_REGALLOC) == 0\n                   && read_modify_subreg_p (dst))\n \t\t{\n-\t\t  use_flags = DF_REF_READ_WRITE;\n \t\t  df_uses_record (df, &SUBREG_REG (dst), DF_REF_REG_USE, bb,\n-\t\t\t\t  insn, use_flags);\n+\t\t\t\t  insn, DF_REF_READ_WRITE);\n \t\t  break;\n \t\t}\n \t      /* ... FALLTHRU ...  */\n@@ -1025,9 +1022,8 @@ df_uses_record (struct df *df, rtx *loc, enum df_ref_type ref_type,\n \t      dst = XEXP (dst, 0);\n \t      if (GET_CODE (dst) != SUBREG)\n \t\tabort ();\n-\t      use_flags = DF_REF_READ_WRITE;\n \t      df_uses_record (df, &SUBREG_REG (dst), DF_REF_REG_USE, bb,\n-\t\t\t     insn, use_flags);\n+\t\t\t     insn, DF_REF_READ_WRITE);\n \t      break;\n \t    case ZERO_EXTRACT:\n \t    case SIGN_EXTRACT:"}]}