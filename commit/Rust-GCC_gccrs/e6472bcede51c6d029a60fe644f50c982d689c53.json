{"sha": "e6472bcede51c6d029a60fe644f50c982d689c53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY0NzJiY2VkZTUxYzZkMDI5YTYwZmU2NDRmNTBjOTgyZDY4OWM1Mw==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2007-01-20T18:33:20Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-01-20T18:33:20Z"}, "message": "gfortran.h (gfc_options_t): Add flag_allow_leading_underscore.\n\n\t* gfortran.h (gfc_options_t): Add flag_allow_leading_underscore.\n\t* lang.opt: Add -fallow-leading-underscore.\n\t* match.c (gfc_match_name): Allow leading underscore in symbol\n\tname if -fallow-leading-underscore is used.\n\t* symbol.c (gfc_get_default_type): Add special case for symbol\n\tnames beginning with an underscore.\n\t* trans-decl.c (gfc_get_extern_function_decl,\n\tgfc_build_intrinsic_function_decls): Add _gfortran prefix to\n\tlibrary symbols selected_int_kind, selected_real_kind and \n\tall specifics.\n\t* options.c (gfc_init_options, gfc_handle_option): Handle the\n\tnew -fallow-leading-underscore option.\n\n\t* m4/misc_specifics.m4: Add _gfortran prefix to specific names.\n\t* m4/specific2.m4: Likewise.\n\t* m4/specific.m4: Likewise.\n\t* intrinsics/f2c_specifics.F90: Likewise.\n\t* intrinsics/selected_int_kind.f90: Add _gfortran prefix.\n\t* intrinsics/selected_real_kind.f90: Likewise.\n\t* intrinsics/dprod_r8.f90: Likewise.\n\t* Makefile.am: Add -fallow-leading-underscore to the\n\tgfor_specific_src files, as well as selected_real_kind.F90\n\tand selected_int_kind.F90\n\t* Makefile.in: Regenerate.\n\t* generated/_sqrt_c8.F90: Regenerate.\n\t* generated/_sign_r16.F90: Regenerate.\n\t* generated/_log_c16.F90: Regenerate.\n\t* generated/_sin_c10.F90: Regenerate.\n\t* generated/_tanh_r4.F90: Regenerate.\n\t* generated/_tanh_r8.F90: Regenerate.\n\t* generated/_log10_r10.F90: Regenerate.\n\t* generated/_aimag_c4.F90: Regenerate.\n\t* generated/_sign_r4.F90: Regenerate.\n\t* generated/_aimag_c8.F90: Regenerate.\n\t* generated/_sign_r8.F90: Regenerate.\n\t* generated/_mod_i4.F90: Regenerate.\n\t* generated/_cos_r16.F90: Regenerate.\n\t* generated/_aint_r10.F90: Regenerate.\n\t* generated/_mod_i8.F90: Regenerate.\n\t* generated/_abs_i16.F90: Regenerate.\n\t* generated/_sqrt_c10.F90: Regenerate.\n\t* generated/_atan2_r4.F90: Regenerate.\n\t* generated/_cos_c4.F90: Regenerate.\n\t* generated/_atan_r16.F90: Regenerate.\n\t* generated/_tanh_r10.F90: Regenerate.\n\t* generated/_atan2_r8.F90: Regenerate.\n\t* generated/_cos_c8.F90: Regenerate.\n\t* generated/_exp_r4.F90: Regenerate.\n\t* generated/_log_r10.F90: Regenerate.\n\t* generated/_exp_r8.F90: Regenerate.\n\t* generated/_abs_r4.F90: Regenerate.\n\t* generated/_abs_r8.F90: Regenerate.\n\t* generated/_sin_r16.F90: Regenerate.\n\t* generated/_tan_r4.F90: Regenerate.\n\t* generated/_tan_r8.F90: Regenerate.\n\t* generated/_sign_i4.F90: Regenerate.\n\t* generated/_sign_i8.F90: Regenerate.\n\t* generated/_exp_c16.F90: Regenerate.\n\t* generated/_sqrt_r16.F90: Regenerate.\n\t* generated/_conjg_c4.F90: Regenerate.\n\t* generated/_conjg_c8.F90: Regenerate.\n\t* generated/_dim_r16.F90: Regenerate.\n\t* generated/_mod_r10.F90: Regenerate.\n\t* generated/_abs_c10.F90: Regenerate.\n\t* generated/_conjg_c16.F90: Regenerate.\n\t* generated/_tan_r16.F90: Regenerate.\n\t* generated/_asinh_r10.F90: Regenerate.\n\t* generated/_abs_i4.F90: Regenerate.\n\t* generated/_abs_i8.F90: Regenerate.\n\t* generated/_acos_r10.F90: Regenerate.\n\t* generated/_exp_r10.F90: Regenerate.\n\t* generated/_acosh_r16.F90: Regenerate.\n\t* generated/_atan2_r16.F90: Regenerate.\n\t* generated/_cos_c16.F90: Regenerate.\n\t* generated/_mod_i16.F90: Regenerate.\n\t* generated/_asin_r4.F90: Regenerate.\n\t* generated/_anint_r16.F90: Regenerate.\n\t* generated/_asin_r8.F90: Regenerate.\n\t* generated/_aimag_c10.F90: Regenerate.\n\t* generated/_exp_c4.F90: Regenerate.\n\t* generated/_sinh_r10.F90: Regenerate.\n\t* generated/_exp_c8.F90: Regenerate.\n\t* generated/_log10_r4.F90: Regenerate.\n\t* generated/_log10_r8.F90: Regenerate.\n\t* generated/_abs_c4.F90: Regenerate.\n\t* generated/_abs_r16.F90: Regenerate.\n\t* generated/_abs_c8.F90: Regenerate.\n\t* generated/_asin_r10.F90: Regenerate.\n\t* generated/_sign_r10.F90: Regenerate.\n\t* generated/_atanh_r16.F90: Regenerate.\n\t* generated/_log_c10.F90: Regenerate.\n\t* generated/_cosh_r16.F90: Regenerate.\n\t* generated/_sin_c16.F90: Regenerate.\n\t* generated/_cos_r10.F90: Regenerate.\n\t* generated/_log10_r16.F90: Regenerate.\n\t* generated/_aint_r16.F90: Regenerate.\n\t* generated/_acos_r4.F90: Regenerate.\n\t* generated/_acos_r8.F90: Regenerate.\n\t* generated/_sqrt_c16.F90: Regenerate.\n\t* generated/_acosh_r4.F90: Regenerate.\n\t* generated/_atan_r10.F90: Regenerate.\n\t* generated/_acosh_r8.F90: Regenerate.\n\t* generated/_sign_i16.F90: Regenerate.\n\t* generated/_tanh_r16.F90: Regenerate.\n\t* generated/_log_r4.F90: Regenerate.\n\t* generated/_log_r8.F90: Regenerate.\n\t* generated/_sin_r4.F90: Regenerate.\n\t* generated/_sin_r8.F90: Regenerate.\n\t* generated/_log_r16.F90: Regenerate.\n\t* generated/_sin_r10.F90: Regenerate.\n\t* generated/_sqrt_r4.F90: Regenerate.\n\t* generated/_exp_c10.F90: Regenerate.\n\t* generated/_sqrt_r8.F90: Regenerate.\n\t* generated/_asinh_r4.F90: Regenerate.\n\t* generated/_sqrt_r10.F90: Regenerate.\n\t* generated/_asinh_r8.F90: Regenerate.\n\t* generated/_dim_r4.F90: Regenerate.\n\t* generated/_dim_r8.F90: Regenerate.\n\t* generated/_dim_r10.F90: Regenerate.\n\t* generated/_cosh_r4.F90: Regenerate.\n\t* generated/_conjg_c10.F90: Regenerate.\n\t* generated/_tan_r10.F90: Regenerate.\n\t* generated/_cosh_r8.F90: Regenerate.\n\t* generated/_mod_r16.F90: Regenerate.\n\t* generated/_abs_c16.F90: Regenerate.\n\t* generated/_cos_r4.F90: Regenerate.\n\t* generated/_asinh_r16.F90: Regenerate.\n\t* generated/_cos_r8.F90: Regenerate.\n\t* generated/_atanh_r4.F90: Regenerate.\n\t* generated/_atanh_r8.F90: Regenerate.\n\t* generated/_acos_r16.F90: Regenerate.\n\t* generated/_anint_r4.F90: Regenerate.\n\t* generated/_acosh_r10.F90: Regenerate.\n\t* generated/_anint_r8.F90: Regenerate.\n\t* generated/_exp_r16.F90: Regenerate.\n\t* generated/_mod_r4.F90: Regenerate.\n\t* generated/_cos_c10.F90: Regenerate.\n\t* generated/_atan2_r10.F90: Regenerate.\n\t* generated/_dim_i16.F90: Regenerate.\n\t* generated/_mod_r8.F90: Regenerate.\n\t* generated/_anint_r10.F90: Regenerate.\n\t* generated/_aint_r4.F90: Regenerate.\n\t* generated/_aint_r8.F90: Regenerate.\n\t* generated/_dim_i4.F90: Regenerate.\n\t* generated/_sinh_r4.F90: Regenerate.\n\t* generated/_log_c4.F90: Regenerate.\n\t* generated/_dim_i8.F90: Regenerate.\n\t* generated/_sinh_r8.F90: Regenerate.\n\t* generated/_log_c8.F90: Regenerate.\n\t* generated/_sin_c4.F90: Regenerate.\n\t* generated/_sin_c8.F90: Regenerate.\n\t* generated/misc_specifics.F90: Regenerate.\n\t* generated/_abs_r10.F90: Regenerate.\n\t* generated/_aimag_c16.F90: Regenerate.\n\t* generated/_atan_r4.F90: Regenerate.\n\t* generated/_sinh_r16.F90: Regenerate.\n\t* generated/_atan_r8.F90: Regenerate.\n\t* generated/_atanh_r10.F90: Regenerate.\n\t* generated/_cosh_r10.F90: Regenerate.\n\t* generated/_sqrt_c4.F90: Regenerate.\n\t* generated/_asin_r16.F90: Regenerate.\n\nFrom-SVN: r121007", "tree": {"sha": "420164ab04b47273cddf4ac4aa692f1d7a3797dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/420164ab04b47273cddf4ac4aa692f1d7a3797dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6472bcede51c6d029a60fe644f50c982d689c53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6472bcede51c6d029a60fe644f50c982d689c53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6472bcede51c6d029a60fe644f50c982d689c53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6472bcede51c6d029a60fe644f50c982d689c53/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b153d3e1cab96c4c95abfc4ae957775ad92379aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b153d3e1cab96c4c95abfc4ae957775ad92379aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b153d3e1cab96c4c95abfc4ae957775ad92379aa"}], "stats": {"total": 1226, "additions": 709, "deletions": 517}, "files": [{"sha": "3e16d4c8b2a9a24c4a20506e0314f9f14f2bed2e", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -1,3 +1,18 @@\n+2007-01-20  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* gfortran.h (gfc_options_t): Add flag_allow_leading_underscore.\n+\t* lang.opt: Add -fallow-leading-underscore.\n+\t* match.c (gfc_match_name): Allow leading underscore in symbol\n+\tname if -fallow-leading-underscore is used.\n+\t* symbol.c (gfc_get_default_type): Add special case for symbol\n+\tnames beginning with an underscore.\n+\t* trans-decl.c (gfc_get_extern_function_decl,\n+\tgfc_build_intrinsic_function_decls): Add _gfortran prefix to\n+\tlibrary symbols selected_int_kind, selected_real_kind and \n+\tall specifics.\n+\t* options.c (gfc_init_options, gfc_handle_option): Handle the\n+\tnew -fallow-leading-underscore option.\n+\n 2007-01-20  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR fortran/30446"}, {"sha": "05b7ebc4243ba59e77b00fa8ec1c95fcc69dbfe3", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -1656,6 +1656,7 @@ typedef struct\n   int flag_f2c;\n   int flag_automatic;\n   int flag_backslash;\n+  int flag_allow_leading_underscore;\n   int flag_dump_core;\n   int flag_external_blas;\n   int blas_matmul_limit;"}, {"sha": "7d413ffd3519913d072d5ae7c7a960b76a87ecef", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -81,6 +81,10 @@ fall-intrinsics\n Fortran RejectNegative\n All intrinsics procedures are available regardless of selected standard\n \n+fallow-leading-underscore\n+Fortran Undocumented\n+; For internal use only: allow the first character of symbol names to be an underscore\n+\n fautomatic\n Fortran\n Do not treat local variables and COMMON blocks as if they were named in SAVE statements"}, {"sha": "0fa1f634204a97c1a288fb953652f5b3886d0af3", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -392,7 +392,7 @@ gfc_match_name (char *buffer)\n   gfc_gobble_whitespace ();\n \n   c = gfc_next_char ();\n-  if (!ISALPHA (c))\n+  if (!(ISALPHA (c) || (c == '_' && gfc_option.flag_allow_leading_underscore)))\n     {\n       if (gfc_error_flag_test() == 0)\n \tgfc_error (\"Invalid character in name at %C\");"}, {"sha": "8ead48f5c8ba0f2e1ff75f58ce601fb2992c9193", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -84,6 +84,7 @@ gfc_init_options (unsigned int argc ATTRIBUTE_UNUSED,\n   gfc_option.flag_preprocessed = 0;\n   gfc_option.flag_automatic = 1;\n   gfc_option.flag_backslash = 1;\n+  gfc_option.flag_allow_leading_underscore = 0;\n   gfc_option.flag_dump_core = 0;\n   gfc_option.flag_external_blas = 0;\n   gfc_option.blas_matmul_limit = 30;\n@@ -450,6 +451,10 @@ gfc_handle_option (size_t scode, const char *arg, int value)\n       gfc_option.flag_automatic = value;\n       break;\n \n+    case OPT_fallow_leading_underscore:\n+      gfc_option.flag_allow_leading_underscore = value;\n+      break;\n+      \n     case OPT_fbackslash:\n       gfc_option.flag_backslash = value;\n       break;"}, {"sha": "c130dee6e71dee473e989393c0f2db885536c933", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -202,6 +202,12 @@ gfc_get_default_type (gfc_symbol * sym, gfc_namespace * ns)\n   char letter;\n \n   letter = sym->name[0];\n+\n+  if (gfc_option.flag_allow_leading_underscore && letter == '_')\n+    gfc_internal_error (\"Option -fallow_leading_underscore is for use only by \"\n+\t\t\t\"gfortran developers, and should not be used for \"\n+\t\t\t\"implicitly typed variables\");\n+\n   if (letter < 'a' || letter > 'z')\n     gfc_internal_error (\"gfc_get_default_type(): Bad symbol\");\n "}, {"sha": "3028c8fa422dda4af0e41eb602f776e8349205f3", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -1060,7 +1060,7 @@ gfc_get_extern_function_decl (gfc_symbol * sym)\n   gfc_expr e;\n   gfc_intrinsic_sym *isym;\n   gfc_expr argexpr;\n-  char s[GFC_MAX_SYMBOL_LEN + 13]; /* \"f2c_specific\" and '\\0'.  */\n+  char s[GFC_MAX_SYMBOL_LEN + 23]; /* \"_gfortran_f2c_specific\" and '\\0'.  */\n   tree name;\n   tree mangled_name;\n \n@@ -1108,10 +1108,10 @@ gfc_get_extern_function_decl (gfc_symbol * sym)\n \t{\n \t  /* Specific which needs a different implementation if f2c\n \t     calling conventions are used.  */\n-\t  sprintf (s, \"f2c_specific%s\", e.value.function.name);\n+\t  sprintf (s, \"_gfortran_f2c_specific%s\", e.value.function.name);\n \t}\n       else\n-\tsprintf (s, \"specific%s\", e.value.function.name);\n+\tsprintf (s, \"_gfortran_specific%s\", e.value.function.name);\n \n       name = get_identifier (s);\n       mangled_name = name;\n@@ -2082,13 +2082,15 @@ gfc_build_intrinsic_function_decls (void)\n \t\t\t\t     gfc_charlen_type_node, pchar_type_node);\n \n   gfor_fndecl_si_kind =\n-    gfc_build_library_function_decl (get_identifier (\"selected_int_kind\"),\n+    gfc_build_library_function_decl (get_identifier\n+\t\t\t\t\t(PREFIX(\"selected_int_kind\")),\n                                      gfc_int4_type_node,\n                                      1,\n                                      pvoid_type_node);\n \n   gfor_fndecl_sr_kind =\n-    gfc_build_library_function_decl (get_identifier (\"selected_real_kind\"),\n+    gfc_build_library_function_decl (get_identifier \n+\t\t\t\t\t(PREFIX(\"selected_real_kind\")),\n                                      gfc_int4_type_node,\n                                      2, pvoid_type_node,\n                                      pvoid_type_node);"}, {"sha": "a1387508a42d8761b2044b2498bee07452dc78de", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 151, "deletions": 0, "changes": 151, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -1,3 +1,154 @@\n+2007-01-20  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* m4/misc_specifics.m4: Add _gfortran prefix to specific names.\n+\t* m4/specific2.m4: Likewise.\n+\t* m4/specific.m4: Likewise.\n+\t* intrinsics/f2c_specifics.F90: Likewise.\n+\t* intrinsics/selected_int_kind.f90: Add _gfortran prefix.\n+\t* intrinsics/selected_real_kind.f90: Likewise.\n+\t* intrinsics/dprod_r8.f90: Likewise.\n+\t* Makefile.am: Add -fallow-leading-underscore to the\n+\tgfor_specific_src files, as well as selected_real_kind.F90\n+\tand selected_int_kind.F90\n+\t* Makefile.in: Regenerate.\n+\t* generated/_sqrt_c8.F90: Regenerate.\n+\t* generated/_sign_r16.F90: Regenerate.\n+\t* generated/_log_c16.F90: Regenerate.\n+\t* generated/_sin_c10.F90: Regenerate.\n+\t* generated/_tanh_r4.F90: Regenerate.\n+\t* generated/_tanh_r8.F90: Regenerate.\n+\t* generated/_log10_r10.F90: Regenerate.\n+\t* generated/_aimag_c4.F90: Regenerate.\n+\t* generated/_sign_r4.F90: Regenerate.\n+\t* generated/_aimag_c8.F90: Regenerate.\n+\t* generated/_sign_r8.F90: Regenerate.\n+\t* generated/_mod_i4.F90: Regenerate.\n+\t* generated/_cos_r16.F90: Regenerate.\n+\t* generated/_aint_r10.F90: Regenerate.\n+\t* generated/_mod_i8.F90: Regenerate.\n+\t* generated/_abs_i16.F90: Regenerate.\n+\t* generated/_sqrt_c10.F90: Regenerate.\n+\t* generated/_atan2_r4.F90: Regenerate.\n+\t* generated/_cos_c4.F90: Regenerate.\n+\t* generated/_atan_r16.F90: Regenerate.\n+\t* generated/_tanh_r10.F90: Regenerate.\n+\t* generated/_atan2_r8.F90: Regenerate.\n+\t* generated/_cos_c8.F90: Regenerate.\n+\t* generated/_exp_r4.F90: Regenerate.\n+\t* generated/_log_r10.F90: Regenerate.\n+\t* generated/_exp_r8.F90: Regenerate.\n+\t* generated/_abs_r4.F90: Regenerate.\n+\t* generated/_abs_r8.F90: Regenerate.\n+\t* generated/_sin_r16.F90: Regenerate.\n+\t* generated/_tan_r4.F90: Regenerate.\n+\t* generated/_tan_r8.F90: Regenerate.\n+\t* generated/_sign_i4.F90: Regenerate.\n+\t* generated/_sign_i8.F90: Regenerate.\n+\t* generated/_exp_c16.F90: Regenerate.\n+\t* generated/_sqrt_r16.F90: Regenerate.\n+\t* generated/_conjg_c4.F90: Regenerate.\n+\t* generated/_conjg_c8.F90: Regenerate.\n+\t* generated/_dim_r16.F90: Regenerate.\n+\t* generated/_mod_r10.F90: Regenerate.\n+\t* generated/_abs_c10.F90: Regenerate.\n+\t* generated/_conjg_c16.F90: Regenerate.\n+\t* generated/_tan_r16.F90: Regenerate.\n+\t* generated/_asinh_r10.F90: Regenerate.\n+\t* generated/_abs_i4.F90: Regenerate.\n+\t* generated/_abs_i8.F90: Regenerate.\n+\t* generated/_acos_r10.F90: Regenerate.\n+\t* generated/_exp_r10.F90: Regenerate.\n+\t* generated/_acosh_r16.F90: Regenerate.\n+\t* generated/_atan2_r16.F90: Regenerate.\n+\t* generated/_cos_c16.F90: Regenerate.\n+\t* generated/_mod_i16.F90: Regenerate.\n+\t* generated/_asin_r4.F90: Regenerate.\n+\t* generated/_anint_r16.F90: Regenerate.\n+\t* generated/_asin_r8.F90: Regenerate.\n+\t* generated/_aimag_c10.F90: Regenerate.\n+\t* generated/_exp_c4.F90: Regenerate.\n+\t* generated/_sinh_r10.F90: Regenerate.\n+\t* generated/_exp_c8.F90: Regenerate.\n+\t* generated/_log10_r4.F90: Regenerate.\n+\t* generated/_log10_r8.F90: Regenerate.\n+\t* generated/_abs_c4.F90: Regenerate.\n+\t* generated/_abs_r16.F90: Regenerate.\n+\t* generated/_abs_c8.F90: Regenerate.\n+\t* generated/_asin_r10.F90: Regenerate.\n+\t* generated/_sign_r10.F90: Regenerate.\n+\t* generated/_atanh_r16.F90: Regenerate.\n+\t* generated/_log_c10.F90: Regenerate.\n+\t* generated/_cosh_r16.F90: Regenerate.\n+\t* generated/_sin_c16.F90: Regenerate.\n+\t* generated/_cos_r10.F90: Regenerate.\n+\t* generated/_log10_r16.F90: Regenerate.\n+\t* generated/_aint_r16.F90: Regenerate.\n+\t* generated/_acos_r4.F90: Regenerate.\n+\t* generated/_acos_r8.F90: Regenerate.\n+\t* generated/_sqrt_c16.F90: Regenerate.\n+\t* generated/_acosh_r4.F90: Regenerate.\n+\t* generated/_atan_r10.F90: Regenerate.\n+\t* generated/_acosh_r8.F90: Regenerate.\n+\t* generated/_sign_i16.F90: Regenerate.\n+\t* generated/_tanh_r16.F90: Regenerate.\n+\t* generated/_log_r4.F90: Regenerate.\n+\t* generated/_log_r8.F90: Regenerate.\n+\t* generated/_sin_r4.F90: Regenerate.\n+\t* generated/_sin_r8.F90: Regenerate.\n+\t* generated/_log_r16.F90: Regenerate.\n+\t* generated/_sin_r10.F90: Regenerate.\n+\t* generated/_sqrt_r4.F90: Regenerate.\n+\t* generated/_exp_c10.F90: Regenerate.\n+\t* generated/_sqrt_r8.F90: Regenerate.\n+\t* generated/_asinh_r4.F90: Regenerate.\n+\t* generated/_sqrt_r10.F90: Regenerate.\n+\t* generated/_asinh_r8.F90: Regenerate.\n+\t* generated/_dim_r4.F90: Regenerate.\n+\t* generated/_dim_r8.F90: Regenerate.\n+\t* generated/_dim_r10.F90: Regenerate.\n+\t* generated/_cosh_r4.F90: Regenerate.\n+\t* generated/_conjg_c10.F90: Regenerate.\n+\t* generated/_tan_r10.F90: Regenerate.\n+\t* generated/_cosh_r8.F90: Regenerate.\n+\t* generated/_mod_r16.F90: Regenerate.\n+\t* generated/_abs_c16.F90: Regenerate.\n+\t* generated/_cos_r4.F90: Regenerate.\n+\t* generated/_asinh_r16.F90: Regenerate.\n+\t* generated/_cos_r8.F90: Regenerate.\n+\t* generated/_atanh_r4.F90: Regenerate.\n+\t* generated/_atanh_r8.F90: Regenerate.\n+\t* generated/_acos_r16.F90: Regenerate.\n+\t* generated/_anint_r4.F90: Regenerate.\n+\t* generated/_acosh_r10.F90: Regenerate.\n+\t* generated/_anint_r8.F90: Regenerate.\n+\t* generated/_exp_r16.F90: Regenerate.\n+\t* generated/_mod_r4.F90: Regenerate.\n+\t* generated/_cos_c10.F90: Regenerate.\n+\t* generated/_atan2_r10.F90: Regenerate.\n+\t* generated/_dim_i16.F90: Regenerate.\n+\t* generated/_mod_r8.F90: Regenerate.\n+\t* generated/_anint_r10.F90: Regenerate.\n+\t* generated/_aint_r4.F90: Regenerate.\n+\t* generated/_aint_r8.F90: Regenerate.\n+\t* generated/_dim_i4.F90: Regenerate.\n+\t* generated/_sinh_r4.F90: Regenerate.\n+\t* generated/_log_c4.F90: Regenerate.\n+\t* generated/_dim_i8.F90: Regenerate.\n+\t* generated/_sinh_r8.F90: Regenerate.\n+\t* generated/_log_c8.F90: Regenerate.\n+\t* generated/_sin_c4.F90: Regenerate.\n+\t* generated/_sin_c8.F90: Regenerate.\n+\t* generated/misc_specifics.F90: Regenerate.\n+\t* generated/_abs_r10.F90: Regenerate.\n+\t* generated/_aimag_c16.F90: Regenerate.\n+\t* generated/_atan_r4.F90: Regenerate.\n+\t* generated/_sinh_r16.F90: Regenerate.\n+\t* generated/_atan_r8.F90: Regenerate.\n+\t* generated/_atanh_r10.F90: Regenerate.\n+\t* generated/_cosh_r10.F90: Regenerate.\n+\t* generated/_sqrt_c4.F90: Regenerate.\n+\t* generated/_asin_r16.F90: Regenerate.\n+\n 2007-01-19  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR libfortran/26893"}, {"sha": "65cc004f60d1a5f59b2939e461834ee37fd89ed0", "filename": "libgfortran/Makefile.am", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.am?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -597,6 +597,10 @@ $(patsubst %.c,%.lo,$(notdir $(i_matmul_c))): AM_CFLAGS += -ftree-vectorize -fun\n # Logical matmul doesn't vectorize.\n $(patsubst %.c,%.lo,$(notdir $(i_matmull_c))): AM_CFLAGS += -funroll-loops\n \n+# Add the -fallow-leading-underscore option when needed\n+$(patsubst %.F90,%.lo,$(patsubst %.f90,%.lo,$(notdir $(gfor_specific_src)))): AM_FCFLAGS += -fallow-leading-underscore\n+selected_real_kind.lo selected_int_kind.lo: AM_FCFLAGS += -fallow-leading-underscore\n+\n BUILT_SOURCES=$(gfor_built_src) $(gfor_built_specific_src) \\\n     $(gfor_built_specific2_src) $(gfor_misc_specifics)\n libgfortran_la_SOURCES = $(gfor_src) $(gfor_built_src) $(gfor_io_src) \\"}, {"sha": "acc4e855e8e74b7a1cbe24b15d58a5ea314c63be", "filename": "libgfortran/Makefile.in", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.in?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -4518,6 +4518,10 @@ $(patsubst %.c,%.lo,$(notdir $(i_matmul_c))): AM_CFLAGS += -ftree-vectorize -fun\n # Logical matmul doesn't vectorize.\n $(patsubst %.c,%.lo,$(notdir $(i_matmull_c))): AM_CFLAGS += -funroll-loops\n \n+# Add the -fallow-leading-underscore option when needed\n+$(patsubst %.F90,%.lo,$(patsubst %.f90,%.lo,$(notdir $(gfor_specific_src)))): AM_FCFLAGS += -fallow-leading-underscore\n+selected_real_kind.lo selected_int_kind.lo: AM_FCFLAGS += -fallow-leading-underscore\n+\n kinds.h: $(srcdir)/mk-kinds-h.sh\n \t$(SHELL) $(srcdir)/mk-kinds-h.sh '$(FCCOMPILE)' > $@ || rm $@\n "}, {"sha": "791cd5bedf6b6aacf85ff96d950c111b854df455", "filename": "libgfortran/generated/_abs_c10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_abs_c10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_abs_c10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_abs_c10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_10)\n #ifdef HAVE_CABSL\n \n-elemental function specific__abs_c10 (parm)\n+elemental function _gfortran_specific__abs_c10 (parm)\n    complex (kind=10), intent (in) :: parm\n-   real (kind=10) :: specific__abs_c10\n+   real (kind=10) :: _gfortran_specific__abs_c10\n \n-   specific__abs_c10 = abs (parm)\n+   _gfortran_specific__abs_c10 = abs (parm)\n end function\n \n #endif"}, {"sha": "ee94cb00c4e15c9553c5faa691cdae27ab598750", "filename": "libgfortran/generated/_abs_c16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_abs_c16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_abs_c16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_abs_c16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_16)\n #ifdef HAVE_CABSL\n \n-elemental function specific__abs_c16 (parm)\n+elemental function _gfortran_specific__abs_c16 (parm)\n    complex (kind=16), intent (in) :: parm\n-   real (kind=16) :: specific__abs_c16\n+   real (kind=16) :: _gfortran_specific__abs_c16\n \n-   specific__abs_c16 = abs (parm)\n+   _gfortran_specific__abs_c16 = abs (parm)\n end function\n \n #endif"}, {"sha": "bc25d6e4a239ffe694cf56703edfe3c036944b2c", "filename": "libgfortran/generated/_abs_c4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_abs_c4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_abs_c4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_abs_c4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_4)\n #ifdef HAVE_CABSF\n \n-elemental function specific__abs_c4 (parm)\n+elemental function _gfortran_specific__abs_c4 (parm)\n    complex (kind=4), intent (in) :: parm\n-   real (kind=4) :: specific__abs_c4\n+   real (kind=4) :: _gfortran_specific__abs_c4\n \n-   specific__abs_c4 = abs (parm)\n+   _gfortran_specific__abs_c4 = abs (parm)\n end function\n \n #endif"}, {"sha": "4648dd1236946824fe0c53d8a72f50f78caf4ef2", "filename": "libgfortran/generated/_abs_c8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_abs_c8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_abs_c8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_abs_c8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_8)\n #ifdef HAVE_CABS\n \n-elemental function specific__abs_c8 (parm)\n+elemental function _gfortran_specific__abs_c8 (parm)\n    complex (kind=8), intent (in) :: parm\n-   real (kind=8) :: specific__abs_c8\n+   real (kind=8) :: _gfortran_specific__abs_c8\n \n-   specific__abs_c8 = abs (parm)\n+   _gfortran_specific__abs_c8 = abs (parm)\n end function\n \n #endif"}, {"sha": "72240c24fdffac8db88c5dca9c3a438f0d39eece", "filename": "libgfortran/generated/_abs_i16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_abs_i16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_abs_i16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_abs_i16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_INTEGER_16)\n \n \n-elemental function specific__abs_i16 (parm)\n+elemental function _gfortran_specific__abs_i16 (parm)\n    integer (kind=16), intent (in) :: parm\n-   integer (kind=16) :: specific__abs_i16\n+   integer (kind=16) :: _gfortran_specific__abs_i16\n \n-   specific__abs_i16 = abs (parm)\n+   _gfortran_specific__abs_i16 = abs (parm)\n end function\n \n "}, {"sha": "5f3a1e85d8f4eff64a42321a47214b8c6e9fcd12", "filename": "libgfortran/generated/_abs_i4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_abs_i4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_abs_i4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_abs_i4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_INTEGER_4)\n \n \n-elemental function specific__abs_i4 (parm)\n+elemental function _gfortran_specific__abs_i4 (parm)\n    integer (kind=4), intent (in) :: parm\n-   integer (kind=4) :: specific__abs_i4\n+   integer (kind=4) :: _gfortran_specific__abs_i4\n \n-   specific__abs_i4 = abs (parm)\n+   _gfortran_specific__abs_i4 = abs (parm)\n end function\n \n "}, {"sha": "87f987092b12c7efee09b51f1e9de5b32eefe988", "filename": "libgfortran/generated/_abs_i8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_abs_i8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_abs_i8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_abs_i8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_INTEGER_8)\n \n \n-elemental function specific__abs_i8 (parm)\n+elemental function _gfortran_specific__abs_i8 (parm)\n    integer (kind=8), intent (in) :: parm\n-   integer (kind=8) :: specific__abs_i8\n+   integer (kind=8) :: _gfortran_specific__abs_i8\n \n-   specific__abs_i8 = abs (parm)\n+   _gfortran_specific__abs_i8 = abs (parm)\n end function\n \n "}, {"sha": "4b070d3a99d20f303b8ca9a864d825d1d5d0879f", "filename": "libgfortran/generated/_abs_r10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_abs_r10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_abs_r10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_abs_r10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_10)\n #ifdef HAVE_FABSL\n \n-elemental function specific__abs_r10 (parm)\n+elemental function _gfortran_specific__abs_r10 (parm)\n    real (kind=10), intent (in) :: parm\n-   real (kind=10) :: specific__abs_r10\n+   real (kind=10) :: _gfortran_specific__abs_r10\n \n-   specific__abs_r10 = abs (parm)\n+   _gfortran_specific__abs_r10 = abs (parm)\n end function\n \n #endif"}, {"sha": "10edfba79cfda0279549fa0b323a1b5575e9fd5e", "filename": "libgfortran/generated/_abs_r16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_abs_r16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_abs_r16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_abs_r16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_16)\n #ifdef HAVE_FABSL\n \n-elemental function specific__abs_r16 (parm)\n+elemental function _gfortran_specific__abs_r16 (parm)\n    real (kind=16), intent (in) :: parm\n-   real (kind=16) :: specific__abs_r16\n+   real (kind=16) :: _gfortran_specific__abs_r16\n \n-   specific__abs_r16 = abs (parm)\n+   _gfortran_specific__abs_r16 = abs (parm)\n end function\n \n #endif"}, {"sha": "02ebd43fd0e49d4c077454b84fd7691d8b5e8d24", "filename": "libgfortran/generated/_abs_r4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_abs_r4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_abs_r4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_abs_r4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_4)\n #ifdef HAVE_FABSF\n \n-elemental function specific__abs_r4 (parm)\n+elemental function _gfortran_specific__abs_r4 (parm)\n    real (kind=4), intent (in) :: parm\n-   real (kind=4) :: specific__abs_r4\n+   real (kind=4) :: _gfortran_specific__abs_r4\n \n-   specific__abs_r4 = abs (parm)\n+   _gfortran_specific__abs_r4 = abs (parm)\n end function\n \n #endif"}, {"sha": "0d7b62057fcf30eba5c9137f0c0a2c0d6142f4d7", "filename": "libgfortran/generated/_abs_r8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_abs_r8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_abs_r8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_abs_r8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_8)\n #ifdef HAVE_FABS\n \n-elemental function specific__abs_r8 (parm)\n+elemental function _gfortran_specific__abs_r8 (parm)\n    real (kind=8), intent (in) :: parm\n-   real (kind=8) :: specific__abs_r8\n+   real (kind=8) :: _gfortran_specific__abs_r8\n \n-   specific__abs_r8 = abs (parm)\n+   _gfortran_specific__abs_r8 = abs (parm)\n end function\n \n #endif"}, {"sha": "4225572fa3032f23dea31c10006a016817363d56", "filename": "libgfortran/generated/_acos_r10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_acos_r10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_acos_r10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_acos_r10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_10)\n #ifdef HAVE_ACOSL\n \n-elemental function specific__acos_r10 (parm)\n+elemental function _gfortran_specific__acos_r10 (parm)\n    real (kind=10), intent (in) :: parm\n-   real (kind=10) :: specific__acos_r10\n+   real (kind=10) :: _gfortran_specific__acos_r10\n \n-   specific__acos_r10 = acos (parm)\n+   _gfortran_specific__acos_r10 = acos (parm)\n end function\n \n #endif"}, {"sha": "90525beef355cb5a382523633d6a733721dc1702", "filename": "libgfortran/generated/_acos_r16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_acos_r16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_acos_r16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_acos_r16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_16)\n #ifdef HAVE_ACOSL\n \n-elemental function specific__acos_r16 (parm)\n+elemental function _gfortran_specific__acos_r16 (parm)\n    real (kind=16), intent (in) :: parm\n-   real (kind=16) :: specific__acos_r16\n+   real (kind=16) :: _gfortran_specific__acos_r16\n \n-   specific__acos_r16 = acos (parm)\n+   _gfortran_specific__acos_r16 = acos (parm)\n end function\n \n #endif"}, {"sha": "16478e4872f276be339cc420cf9d11ecc6fc3eea", "filename": "libgfortran/generated/_acos_r4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_acos_r4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_acos_r4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_acos_r4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_4)\n #ifdef HAVE_ACOSF\n \n-elemental function specific__acos_r4 (parm)\n+elemental function _gfortran_specific__acos_r4 (parm)\n    real (kind=4), intent (in) :: parm\n-   real (kind=4) :: specific__acos_r4\n+   real (kind=4) :: _gfortran_specific__acos_r4\n \n-   specific__acos_r4 = acos (parm)\n+   _gfortran_specific__acos_r4 = acos (parm)\n end function\n \n #endif"}, {"sha": "5866b81121cf4f8b9e45d6f0b90ea3ab4919fa3d", "filename": "libgfortran/generated/_acos_r8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_acos_r8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_acos_r8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_acos_r8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_8)\n #ifdef HAVE_ACOS\n \n-elemental function specific__acos_r8 (parm)\n+elemental function _gfortran_specific__acos_r8 (parm)\n    real (kind=8), intent (in) :: parm\n-   real (kind=8) :: specific__acos_r8\n+   real (kind=8) :: _gfortran_specific__acos_r8\n \n-   specific__acos_r8 = acos (parm)\n+   _gfortran_specific__acos_r8 = acos (parm)\n end function\n \n #endif"}, {"sha": "2f7c93d9952da61561841c66f0d1c6c0399f9b44", "filename": "libgfortran/generated/_acosh_r10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_acosh_r10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_acosh_r10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_acosh_r10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_10)\n #ifdef HAVE_ACOSHL\n \n-elemental function specific__acosh_r10 (parm)\n+elemental function _gfortran_specific__acosh_r10 (parm)\n    real (kind=10), intent (in) :: parm\n-   real (kind=10) :: specific__acosh_r10\n+   real (kind=10) :: _gfortran_specific__acosh_r10\n \n-   specific__acosh_r10 = acosh (parm)\n+   _gfortran_specific__acosh_r10 = acosh (parm)\n end function\n \n #endif"}, {"sha": "010a42ecad08e9c4722291fc1975848ac50a61f8", "filename": "libgfortran/generated/_acosh_r16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_acosh_r16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_acosh_r16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_acosh_r16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_16)\n #ifdef HAVE_ACOSHL\n \n-elemental function specific__acosh_r16 (parm)\n+elemental function _gfortran_specific__acosh_r16 (parm)\n    real (kind=16), intent (in) :: parm\n-   real (kind=16) :: specific__acosh_r16\n+   real (kind=16) :: _gfortran_specific__acosh_r16\n \n-   specific__acosh_r16 = acosh (parm)\n+   _gfortran_specific__acosh_r16 = acosh (parm)\n end function\n \n #endif"}, {"sha": "f6c24839bc1d9284a6284e27daa0dc536bd11e7d", "filename": "libgfortran/generated/_acosh_r4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_acosh_r4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_acosh_r4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_acosh_r4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_4)\n #ifdef HAVE_ACOSHF\n \n-elemental function specific__acosh_r4 (parm)\n+elemental function _gfortran_specific__acosh_r4 (parm)\n    real (kind=4), intent (in) :: parm\n-   real (kind=4) :: specific__acosh_r4\n+   real (kind=4) :: _gfortran_specific__acosh_r4\n \n-   specific__acosh_r4 = acosh (parm)\n+   _gfortran_specific__acosh_r4 = acosh (parm)\n end function\n \n #endif"}, {"sha": "e785507bb84465b9b473558419fbb6dfe75adb31", "filename": "libgfortran/generated/_acosh_r8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_acosh_r8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_acosh_r8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_acosh_r8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_8)\n #ifdef HAVE_ACOSH\n \n-elemental function specific__acosh_r8 (parm)\n+elemental function _gfortran_specific__acosh_r8 (parm)\n    real (kind=8), intent (in) :: parm\n-   real (kind=8) :: specific__acosh_r8\n+   real (kind=8) :: _gfortran_specific__acosh_r8\n \n-   specific__acosh_r8 = acosh (parm)\n+   _gfortran_specific__acosh_r8 = acosh (parm)\n end function\n \n #endif"}, {"sha": "a406cff30a17ba6a980cf8d943feefec8c87c8ea", "filename": "libgfortran/generated/_aimag_c10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_aimag_c10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_aimag_c10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_aimag_c10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_10)\n \n \n-elemental function specific__aimag_c10 (parm)\n+elemental function _gfortran_specific__aimag_c10 (parm)\n    complex (kind=10), intent (in) :: parm\n-   real (kind=10) :: specific__aimag_c10\n+   real (kind=10) :: _gfortran_specific__aimag_c10\n \n-   specific__aimag_c10 = aimag (parm)\n+   _gfortran_specific__aimag_c10 = aimag (parm)\n end function\n \n "}, {"sha": "32858cfb4f1b32c4603b9ab9bddad7e9c964e4a4", "filename": "libgfortran/generated/_aimag_c16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_aimag_c16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_aimag_c16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_aimag_c16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_16)\n \n \n-elemental function specific__aimag_c16 (parm)\n+elemental function _gfortran_specific__aimag_c16 (parm)\n    complex (kind=16), intent (in) :: parm\n-   real (kind=16) :: specific__aimag_c16\n+   real (kind=16) :: _gfortran_specific__aimag_c16\n \n-   specific__aimag_c16 = aimag (parm)\n+   _gfortran_specific__aimag_c16 = aimag (parm)\n end function\n \n "}, {"sha": "118a742de388f8095ed1ce9ba2459318ff6204aa", "filename": "libgfortran/generated/_aimag_c4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_aimag_c4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_aimag_c4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_aimag_c4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_4)\n \n \n-elemental function specific__aimag_c4 (parm)\n+elemental function _gfortran_specific__aimag_c4 (parm)\n    complex (kind=4), intent (in) :: parm\n-   real (kind=4) :: specific__aimag_c4\n+   real (kind=4) :: _gfortran_specific__aimag_c4\n \n-   specific__aimag_c4 = aimag (parm)\n+   _gfortran_specific__aimag_c4 = aimag (parm)\n end function\n \n "}, {"sha": "112c6882d8ecb1cc93d4b3bc2c0476671f46fb13", "filename": "libgfortran/generated/_aimag_c8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_aimag_c8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_aimag_c8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_aimag_c8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_8)\n \n \n-elemental function specific__aimag_c8 (parm)\n+elemental function _gfortran_specific__aimag_c8 (parm)\n    complex (kind=8), intent (in) :: parm\n-   real (kind=8) :: specific__aimag_c8\n+   real (kind=8) :: _gfortran_specific__aimag_c8\n \n-   specific__aimag_c8 = aimag (parm)\n+   _gfortran_specific__aimag_c8 = aimag (parm)\n end function\n \n "}, {"sha": "2853c0c6718ba2f534d05275e67f46243e9b5737", "filename": "libgfortran/generated/_aint_r10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_aint_r10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_aint_r10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_aint_r10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_10)\n #ifdef HAVE_TRUNCL\n \n-elemental function specific__aint_r10 (parm)\n+elemental function _gfortran_specific__aint_r10 (parm)\n    real (kind=10), intent (in) :: parm\n-   real (kind=10) :: specific__aint_r10\n+   real (kind=10) :: _gfortran_specific__aint_r10\n \n-   specific__aint_r10 = aint (parm)\n+   _gfortran_specific__aint_r10 = aint (parm)\n end function\n \n #endif"}, {"sha": "5208c4e6a8a26cf6ff2b50cbc8d061bb25d64f20", "filename": "libgfortran/generated/_aint_r16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_aint_r16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_aint_r16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_aint_r16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_16)\n #ifdef HAVE_TRUNCL\n \n-elemental function specific__aint_r16 (parm)\n+elemental function _gfortran_specific__aint_r16 (parm)\n    real (kind=16), intent (in) :: parm\n-   real (kind=16) :: specific__aint_r16\n+   real (kind=16) :: _gfortran_specific__aint_r16\n \n-   specific__aint_r16 = aint (parm)\n+   _gfortran_specific__aint_r16 = aint (parm)\n end function\n \n #endif"}, {"sha": "8318dd979da296daada5dbea982b90f305dc907b", "filename": "libgfortran/generated/_aint_r4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_aint_r4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_aint_r4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_aint_r4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_4)\n #ifdef HAVE_TRUNCF\n \n-elemental function specific__aint_r4 (parm)\n+elemental function _gfortran_specific__aint_r4 (parm)\n    real (kind=4), intent (in) :: parm\n-   real (kind=4) :: specific__aint_r4\n+   real (kind=4) :: _gfortran_specific__aint_r4\n \n-   specific__aint_r4 = aint (parm)\n+   _gfortran_specific__aint_r4 = aint (parm)\n end function\n \n #endif"}, {"sha": "9f2d712f179c08eb5b24d5bbe78895d669dc02c8", "filename": "libgfortran/generated/_aint_r8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_aint_r8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_aint_r8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_aint_r8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_8)\n #ifdef HAVE_TRUNC\n \n-elemental function specific__aint_r8 (parm)\n+elemental function _gfortran_specific__aint_r8 (parm)\n    real (kind=8), intent (in) :: parm\n-   real (kind=8) :: specific__aint_r8\n+   real (kind=8) :: _gfortran_specific__aint_r8\n \n-   specific__aint_r8 = aint (parm)\n+   _gfortran_specific__aint_r8 = aint (parm)\n end function\n \n #endif"}, {"sha": "29d11b31fbadf1ccf7f4c45643dce2620ebd9013", "filename": "libgfortran/generated/_anint_r10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_anint_r10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_anint_r10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_anint_r10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_10)\n #ifdef HAVE_ROUNDL\n \n-elemental function specific__anint_r10 (parm)\n+elemental function _gfortran_specific__anint_r10 (parm)\n    real (kind=10), intent (in) :: parm\n-   real (kind=10) :: specific__anint_r10\n+   real (kind=10) :: _gfortran_specific__anint_r10\n \n-   specific__anint_r10 = anint (parm)\n+   _gfortran_specific__anint_r10 = anint (parm)\n end function\n \n #endif"}, {"sha": "bc74dcca91b2797a4d7acdb61018971323e8ee94", "filename": "libgfortran/generated/_anint_r16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_anint_r16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_anint_r16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_anint_r16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_16)\n #ifdef HAVE_ROUNDL\n \n-elemental function specific__anint_r16 (parm)\n+elemental function _gfortran_specific__anint_r16 (parm)\n    real (kind=16), intent (in) :: parm\n-   real (kind=16) :: specific__anint_r16\n+   real (kind=16) :: _gfortran_specific__anint_r16\n \n-   specific__anint_r16 = anint (parm)\n+   _gfortran_specific__anint_r16 = anint (parm)\n end function\n \n #endif"}, {"sha": "f808b5dc9b468d9bf844ff39a843334fdbc2d1c2", "filename": "libgfortran/generated/_anint_r4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_anint_r4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_anint_r4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_anint_r4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_4)\n #ifdef HAVE_ROUNDF\n \n-elemental function specific__anint_r4 (parm)\n+elemental function _gfortran_specific__anint_r4 (parm)\n    real (kind=4), intent (in) :: parm\n-   real (kind=4) :: specific__anint_r4\n+   real (kind=4) :: _gfortran_specific__anint_r4\n \n-   specific__anint_r4 = anint (parm)\n+   _gfortran_specific__anint_r4 = anint (parm)\n end function\n \n #endif"}, {"sha": "33495dcde9f63de219117dba7eb3f1385210f266", "filename": "libgfortran/generated/_anint_r8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_anint_r8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_anint_r8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_anint_r8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_8)\n #ifdef HAVE_ROUND\n \n-elemental function specific__anint_r8 (parm)\n+elemental function _gfortran_specific__anint_r8 (parm)\n    real (kind=8), intent (in) :: parm\n-   real (kind=8) :: specific__anint_r8\n+   real (kind=8) :: _gfortran_specific__anint_r8\n \n-   specific__anint_r8 = anint (parm)\n+   _gfortran_specific__anint_r8 = anint (parm)\n end function\n \n #endif"}, {"sha": "cccc6c3465e1e02e59159d6ff5869d8f36181c1f", "filename": "libgfortran/generated/_asin_r10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_asin_r10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_asin_r10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_asin_r10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_10)\n #ifdef HAVE_ASINL\n \n-elemental function specific__asin_r10 (parm)\n+elemental function _gfortran_specific__asin_r10 (parm)\n    real (kind=10), intent (in) :: parm\n-   real (kind=10) :: specific__asin_r10\n+   real (kind=10) :: _gfortran_specific__asin_r10\n \n-   specific__asin_r10 = asin (parm)\n+   _gfortran_specific__asin_r10 = asin (parm)\n end function\n \n #endif"}, {"sha": "6b6f26da6cb265dcf9f6ce149f2e3e80616086ee", "filename": "libgfortran/generated/_asin_r16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_asin_r16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_asin_r16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_asin_r16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_16)\n #ifdef HAVE_ASINL\n \n-elemental function specific__asin_r16 (parm)\n+elemental function _gfortran_specific__asin_r16 (parm)\n    real (kind=16), intent (in) :: parm\n-   real (kind=16) :: specific__asin_r16\n+   real (kind=16) :: _gfortran_specific__asin_r16\n \n-   specific__asin_r16 = asin (parm)\n+   _gfortran_specific__asin_r16 = asin (parm)\n end function\n \n #endif"}, {"sha": "da9c5e234797b61a41657f92a6acea600d09b8a5", "filename": "libgfortran/generated/_asin_r4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_asin_r4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_asin_r4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_asin_r4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_4)\n #ifdef HAVE_ASINF\n \n-elemental function specific__asin_r4 (parm)\n+elemental function _gfortran_specific__asin_r4 (parm)\n    real (kind=4), intent (in) :: parm\n-   real (kind=4) :: specific__asin_r4\n+   real (kind=4) :: _gfortran_specific__asin_r4\n \n-   specific__asin_r4 = asin (parm)\n+   _gfortran_specific__asin_r4 = asin (parm)\n end function\n \n #endif"}, {"sha": "62910447a0fb643580644976262ae15244c4970f", "filename": "libgfortran/generated/_asin_r8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_asin_r8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_asin_r8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_asin_r8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_8)\n #ifdef HAVE_ASIN\n \n-elemental function specific__asin_r8 (parm)\n+elemental function _gfortran_specific__asin_r8 (parm)\n    real (kind=8), intent (in) :: parm\n-   real (kind=8) :: specific__asin_r8\n+   real (kind=8) :: _gfortran_specific__asin_r8\n \n-   specific__asin_r8 = asin (parm)\n+   _gfortran_specific__asin_r8 = asin (parm)\n end function\n \n #endif"}, {"sha": "24cf6b658bdb51de21b30c1616d68c4ed6893e52", "filename": "libgfortran/generated/_asinh_r10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_asinh_r10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_asinh_r10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_asinh_r10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_10)\n #ifdef HAVE_ASINHL\n \n-elemental function specific__asinh_r10 (parm)\n+elemental function _gfortran_specific__asinh_r10 (parm)\n    real (kind=10), intent (in) :: parm\n-   real (kind=10) :: specific__asinh_r10\n+   real (kind=10) :: _gfortran_specific__asinh_r10\n \n-   specific__asinh_r10 = asinh (parm)\n+   _gfortran_specific__asinh_r10 = asinh (parm)\n end function\n \n #endif"}, {"sha": "09a1f49c5aa3c1f4482319f2b471ac6554b9e2a0", "filename": "libgfortran/generated/_asinh_r16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_asinh_r16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_asinh_r16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_asinh_r16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_16)\n #ifdef HAVE_ASINHL\n \n-elemental function specific__asinh_r16 (parm)\n+elemental function _gfortran_specific__asinh_r16 (parm)\n    real (kind=16), intent (in) :: parm\n-   real (kind=16) :: specific__asinh_r16\n+   real (kind=16) :: _gfortran_specific__asinh_r16\n \n-   specific__asinh_r16 = asinh (parm)\n+   _gfortran_specific__asinh_r16 = asinh (parm)\n end function\n \n #endif"}, {"sha": "f821bc75a9d75c08c4143be07c05f588a5a201c8", "filename": "libgfortran/generated/_asinh_r4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_asinh_r4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_asinh_r4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_asinh_r4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_4)\n #ifdef HAVE_ASINHF\n \n-elemental function specific__asinh_r4 (parm)\n+elemental function _gfortran_specific__asinh_r4 (parm)\n    real (kind=4), intent (in) :: parm\n-   real (kind=4) :: specific__asinh_r4\n+   real (kind=4) :: _gfortran_specific__asinh_r4\n \n-   specific__asinh_r4 = asinh (parm)\n+   _gfortran_specific__asinh_r4 = asinh (parm)\n end function\n \n #endif"}, {"sha": "ab3f70af0823da6761e4993f80d4bdcab9698174", "filename": "libgfortran/generated/_asinh_r8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_asinh_r8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_asinh_r8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_asinh_r8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_8)\n #ifdef HAVE_ASINH\n \n-elemental function specific__asinh_r8 (parm)\n+elemental function _gfortran_specific__asinh_r8 (parm)\n    real (kind=8), intent (in) :: parm\n-   real (kind=8) :: specific__asinh_r8\n+   real (kind=8) :: _gfortran_specific__asinh_r8\n \n-   specific__asinh_r8 = asinh (parm)\n+   _gfortran_specific__asinh_r8 = asinh (parm)\n end function\n \n #endif"}, {"sha": "d7ea3920f23fce739c1534c6efe907473f40fc4f", "filename": "libgfortran/generated/_atan2_r10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_atan2_r10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_atan2_r10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_atan2_r10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -39,11 +39,11 @@\n \n #ifdef HAVE_ATAN2L\n \n-elemental function specific__atan2_r10 (p1, p2)\n+elemental function _gfortran_specific__atan2_r10 (p1, p2)\n    real (kind=10), intent (in) :: p1, p2\n-   real (kind=10) :: specific__atan2_r10\n+   real (kind=10) :: _gfortran_specific__atan2_r10\n \n-   specific__atan2_r10 = atan2 (p1, p2)\n+   _gfortran_specific__atan2_r10 = atan2 (p1, p2)\n end function\n \n #endif"}, {"sha": "b2a6d60c0aad09c54d3ecfe378c00c8952ab64ee", "filename": "libgfortran/generated/_atan2_r16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_atan2_r16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_atan2_r16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_atan2_r16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -39,11 +39,11 @@\n \n #ifdef HAVE_ATAN2L\n \n-elemental function specific__atan2_r16 (p1, p2)\n+elemental function _gfortran_specific__atan2_r16 (p1, p2)\n    real (kind=16), intent (in) :: p1, p2\n-   real (kind=16) :: specific__atan2_r16\n+   real (kind=16) :: _gfortran_specific__atan2_r16\n \n-   specific__atan2_r16 = atan2 (p1, p2)\n+   _gfortran_specific__atan2_r16 = atan2 (p1, p2)\n end function\n \n #endif"}, {"sha": "bfeb726ff1c7bc2b251b6f062808ff026a39f0c1", "filename": "libgfortran/generated/_atan2_r4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_atan2_r4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_atan2_r4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_atan2_r4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -39,11 +39,11 @@\n \n #ifdef HAVE_ATAN2F\n \n-elemental function specific__atan2_r4 (p1, p2)\n+elemental function _gfortran_specific__atan2_r4 (p1, p2)\n    real (kind=4), intent (in) :: p1, p2\n-   real (kind=4) :: specific__atan2_r4\n+   real (kind=4) :: _gfortran_specific__atan2_r4\n \n-   specific__atan2_r4 = atan2 (p1, p2)\n+   _gfortran_specific__atan2_r4 = atan2 (p1, p2)\n end function\n \n #endif"}, {"sha": "ef83c9d28317558a750056c8eb68ed82b8ff9b03", "filename": "libgfortran/generated/_atan2_r8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_atan2_r8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_atan2_r8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_atan2_r8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -39,11 +39,11 @@\n \n #ifdef HAVE_ATAN2\n \n-elemental function specific__atan2_r8 (p1, p2)\n+elemental function _gfortran_specific__atan2_r8 (p1, p2)\n    real (kind=8), intent (in) :: p1, p2\n-   real (kind=8) :: specific__atan2_r8\n+   real (kind=8) :: _gfortran_specific__atan2_r8\n \n-   specific__atan2_r8 = atan2 (p1, p2)\n+   _gfortran_specific__atan2_r8 = atan2 (p1, p2)\n end function\n \n #endif"}, {"sha": "282393391dfd26cfabecdb7f17f87c7be2f69a43", "filename": "libgfortran/generated/_atan_r10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_atan_r10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_atan_r10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_atan_r10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_10)\n #ifdef HAVE_ATANL\n \n-elemental function specific__atan_r10 (parm)\n+elemental function _gfortran_specific__atan_r10 (parm)\n    real (kind=10), intent (in) :: parm\n-   real (kind=10) :: specific__atan_r10\n+   real (kind=10) :: _gfortran_specific__atan_r10\n \n-   specific__atan_r10 = atan (parm)\n+   _gfortran_specific__atan_r10 = atan (parm)\n end function\n \n #endif"}, {"sha": "5b4ccb3783083b1f10bb49d68021adaed98f9fee", "filename": "libgfortran/generated/_atan_r16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_atan_r16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_atan_r16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_atan_r16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_16)\n #ifdef HAVE_ATANL\n \n-elemental function specific__atan_r16 (parm)\n+elemental function _gfortran_specific__atan_r16 (parm)\n    real (kind=16), intent (in) :: parm\n-   real (kind=16) :: specific__atan_r16\n+   real (kind=16) :: _gfortran_specific__atan_r16\n \n-   specific__atan_r16 = atan (parm)\n+   _gfortran_specific__atan_r16 = atan (parm)\n end function\n \n #endif"}, {"sha": "74dc979de6c78f0d515097b6e2c79d0a41a60c0f", "filename": "libgfortran/generated/_atan_r4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_atan_r4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_atan_r4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_atan_r4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_4)\n #ifdef HAVE_ATANF\n \n-elemental function specific__atan_r4 (parm)\n+elemental function _gfortran_specific__atan_r4 (parm)\n    real (kind=4), intent (in) :: parm\n-   real (kind=4) :: specific__atan_r4\n+   real (kind=4) :: _gfortran_specific__atan_r4\n \n-   specific__atan_r4 = atan (parm)\n+   _gfortran_specific__atan_r4 = atan (parm)\n end function\n \n #endif"}, {"sha": "55b45bdc3d6ad42e2772a51a14612f0d88d27af6", "filename": "libgfortran/generated/_atan_r8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_atan_r8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_atan_r8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_atan_r8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_8)\n #ifdef HAVE_ATAN\n \n-elemental function specific__atan_r8 (parm)\n+elemental function _gfortran_specific__atan_r8 (parm)\n    real (kind=8), intent (in) :: parm\n-   real (kind=8) :: specific__atan_r8\n+   real (kind=8) :: _gfortran_specific__atan_r8\n \n-   specific__atan_r8 = atan (parm)\n+   _gfortran_specific__atan_r8 = atan (parm)\n end function\n \n #endif"}, {"sha": "9cee6dde758be3bb6bc819384d439b32b018698e", "filename": "libgfortran/generated/_atanh_r10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_atanh_r10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_atanh_r10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_atanh_r10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_10)\n #ifdef HAVE_ATANHL\n \n-elemental function specific__atanh_r10 (parm)\n+elemental function _gfortran_specific__atanh_r10 (parm)\n    real (kind=10), intent (in) :: parm\n-   real (kind=10) :: specific__atanh_r10\n+   real (kind=10) :: _gfortran_specific__atanh_r10\n \n-   specific__atanh_r10 = atanh (parm)\n+   _gfortran_specific__atanh_r10 = atanh (parm)\n end function\n \n #endif"}, {"sha": "9322e6a3121020016abe5e8247189dacb9a2b4e9", "filename": "libgfortran/generated/_atanh_r16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_atanh_r16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_atanh_r16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_atanh_r16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_16)\n #ifdef HAVE_ATANHL\n \n-elemental function specific__atanh_r16 (parm)\n+elemental function _gfortran_specific__atanh_r16 (parm)\n    real (kind=16), intent (in) :: parm\n-   real (kind=16) :: specific__atanh_r16\n+   real (kind=16) :: _gfortran_specific__atanh_r16\n \n-   specific__atanh_r16 = atanh (parm)\n+   _gfortran_specific__atanh_r16 = atanh (parm)\n end function\n \n #endif"}, {"sha": "f08764a78c51c42ded8ad86340142afc7a626aa1", "filename": "libgfortran/generated/_atanh_r4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_atanh_r4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_atanh_r4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_atanh_r4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_4)\n #ifdef HAVE_ATANHF\n \n-elemental function specific__atanh_r4 (parm)\n+elemental function _gfortran_specific__atanh_r4 (parm)\n    real (kind=4), intent (in) :: parm\n-   real (kind=4) :: specific__atanh_r4\n+   real (kind=4) :: _gfortran_specific__atanh_r4\n \n-   specific__atanh_r4 = atanh (parm)\n+   _gfortran_specific__atanh_r4 = atanh (parm)\n end function\n \n #endif"}, {"sha": "b3871086e48285dce062c022e1ec6d55caa35f3a", "filename": "libgfortran/generated/_atanh_r8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_atanh_r8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_atanh_r8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_atanh_r8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_8)\n #ifdef HAVE_ATANH\n \n-elemental function specific__atanh_r8 (parm)\n+elemental function _gfortran_specific__atanh_r8 (parm)\n    real (kind=8), intent (in) :: parm\n-   real (kind=8) :: specific__atanh_r8\n+   real (kind=8) :: _gfortran_specific__atanh_r8\n \n-   specific__atanh_r8 = atanh (parm)\n+   _gfortran_specific__atanh_r8 = atanh (parm)\n end function\n \n #endif"}, {"sha": "df082e99a7a7e6f41e2b78938a27f56c2fb1c5ba", "filename": "libgfortran/generated/_conjg_c10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_conjg_c10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_conjg_c10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_conjg_c10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_10)\n \n \n-elemental function specific__conjg_10 (parm)\n+elemental function _gfortran_specific__conjg_10 (parm)\n    complex (kind=10), intent (in) :: parm\n-   complex (kind=10) :: specific__conjg_10\n+   complex (kind=10) :: _gfortran_specific__conjg_10\n \n-   specific__conjg_10 = conjg (parm)\n+   _gfortran_specific__conjg_10 = conjg (parm)\n end function\n \n "}, {"sha": "69565bdb10454f5a564d2efbcbdb18275b4c175a", "filename": "libgfortran/generated/_conjg_c16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_conjg_c16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_conjg_c16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_conjg_c16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_16)\n \n \n-elemental function specific__conjg_16 (parm)\n+elemental function _gfortran_specific__conjg_16 (parm)\n    complex (kind=16), intent (in) :: parm\n-   complex (kind=16) :: specific__conjg_16\n+   complex (kind=16) :: _gfortran_specific__conjg_16\n \n-   specific__conjg_16 = conjg (parm)\n+   _gfortran_specific__conjg_16 = conjg (parm)\n end function\n \n "}, {"sha": "5dadbec243f9114843408ba0aa78458a8fb75f40", "filename": "libgfortran/generated/_conjg_c4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_conjg_c4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_conjg_c4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_conjg_c4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_4)\n \n \n-elemental function specific__conjg_4 (parm)\n+elemental function _gfortran_specific__conjg_4 (parm)\n    complex (kind=4), intent (in) :: parm\n-   complex (kind=4) :: specific__conjg_4\n+   complex (kind=4) :: _gfortran_specific__conjg_4\n \n-   specific__conjg_4 = conjg (parm)\n+   _gfortran_specific__conjg_4 = conjg (parm)\n end function\n \n "}, {"sha": "bac101fa1ad888522da381b8f4b633d4c2a2ec10", "filename": "libgfortran/generated/_conjg_c8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_conjg_c8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_conjg_c8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_conjg_c8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_8)\n \n \n-elemental function specific__conjg_8 (parm)\n+elemental function _gfortran_specific__conjg_8 (parm)\n    complex (kind=8), intent (in) :: parm\n-   complex (kind=8) :: specific__conjg_8\n+   complex (kind=8) :: _gfortran_specific__conjg_8\n \n-   specific__conjg_8 = conjg (parm)\n+   _gfortran_specific__conjg_8 = conjg (parm)\n end function\n \n "}, {"sha": "e926d862f16da9e8d1ea75395cc65cbac5216e87", "filename": "libgfortran/generated/_cos_c10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_cos_c10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_cos_c10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_cos_c10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_10)\n #ifdef HAVE_CCOSL\n \n-elemental function specific__cos_c10 (parm)\n+elemental function _gfortran_specific__cos_c10 (parm)\n    complex (kind=10), intent (in) :: parm\n-   complex (kind=10) :: specific__cos_c10\n+   complex (kind=10) :: _gfortran_specific__cos_c10\n \n-   specific__cos_c10 = cos (parm)\n+   _gfortran_specific__cos_c10 = cos (parm)\n end function\n \n #endif"}, {"sha": "f98ff0f9586d77c4bbcce5b9f87d09cd97aeace2", "filename": "libgfortran/generated/_cos_c16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_cos_c16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_cos_c16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_cos_c16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_16)\n #ifdef HAVE_CCOSL\n \n-elemental function specific__cos_c16 (parm)\n+elemental function _gfortran_specific__cos_c16 (parm)\n    complex (kind=16), intent (in) :: parm\n-   complex (kind=16) :: specific__cos_c16\n+   complex (kind=16) :: _gfortran_specific__cos_c16\n \n-   specific__cos_c16 = cos (parm)\n+   _gfortran_specific__cos_c16 = cos (parm)\n end function\n \n #endif"}, {"sha": "3e7e243e5b5f1dc48e6b198dbbccfaeffd009bf7", "filename": "libgfortran/generated/_cos_c4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_cos_c4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_cos_c4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_cos_c4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_4)\n #ifdef HAVE_CCOSF\n \n-elemental function specific__cos_c4 (parm)\n+elemental function _gfortran_specific__cos_c4 (parm)\n    complex (kind=4), intent (in) :: parm\n-   complex (kind=4) :: specific__cos_c4\n+   complex (kind=4) :: _gfortran_specific__cos_c4\n \n-   specific__cos_c4 = cos (parm)\n+   _gfortran_specific__cos_c4 = cos (parm)\n end function\n \n #endif"}, {"sha": "6a7d1fa07e639905d5852799ba64296ab8bd6d3d", "filename": "libgfortran/generated/_cos_c8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_cos_c8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_cos_c8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_cos_c8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_8)\n #ifdef HAVE_CCOS\n \n-elemental function specific__cos_c8 (parm)\n+elemental function _gfortran_specific__cos_c8 (parm)\n    complex (kind=8), intent (in) :: parm\n-   complex (kind=8) :: specific__cos_c8\n+   complex (kind=8) :: _gfortran_specific__cos_c8\n \n-   specific__cos_c8 = cos (parm)\n+   _gfortran_specific__cos_c8 = cos (parm)\n end function\n \n #endif"}, {"sha": "c68230ceb48088638f48fe1617c643bf2470cadd", "filename": "libgfortran/generated/_cos_r10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_cos_r10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_cos_r10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_cos_r10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_10)\n #ifdef HAVE_COSL\n \n-elemental function specific__cos_r10 (parm)\n+elemental function _gfortran_specific__cos_r10 (parm)\n    real (kind=10), intent (in) :: parm\n-   real (kind=10) :: specific__cos_r10\n+   real (kind=10) :: _gfortran_specific__cos_r10\n \n-   specific__cos_r10 = cos (parm)\n+   _gfortran_specific__cos_r10 = cos (parm)\n end function\n \n #endif"}, {"sha": "e23e7e737fb600982b087ee4a7d78adf3e12381f", "filename": "libgfortran/generated/_cos_r16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_cos_r16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_cos_r16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_cos_r16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_16)\n #ifdef HAVE_COSL\n \n-elemental function specific__cos_r16 (parm)\n+elemental function _gfortran_specific__cos_r16 (parm)\n    real (kind=16), intent (in) :: parm\n-   real (kind=16) :: specific__cos_r16\n+   real (kind=16) :: _gfortran_specific__cos_r16\n \n-   specific__cos_r16 = cos (parm)\n+   _gfortran_specific__cos_r16 = cos (parm)\n end function\n \n #endif"}, {"sha": "6ae1eadf92554eb890dd0bdfd037217f6ac4cf9a", "filename": "libgfortran/generated/_cos_r4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_cos_r4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_cos_r4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_cos_r4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_4)\n #ifdef HAVE_COSF\n \n-elemental function specific__cos_r4 (parm)\n+elemental function _gfortran_specific__cos_r4 (parm)\n    real (kind=4), intent (in) :: parm\n-   real (kind=4) :: specific__cos_r4\n+   real (kind=4) :: _gfortran_specific__cos_r4\n \n-   specific__cos_r4 = cos (parm)\n+   _gfortran_specific__cos_r4 = cos (parm)\n end function\n \n #endif"}, {"sha": "0addadc26cc5509a78fa6e913a36d8a3801c81a0", "filename": "libgfortran/generated/_cos_r8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_cos_r8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_cos_r8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_cos_r8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_8)\n #ifdef HAVE_COS\n \n-elemental function specific__cos_r8 (parm)\n+elemental function _gfortran_specific__cos_r8 (parm)\n    real (kind=8), intent (in) :: parm\n-   real (kind=8) :: specific__cos_r8\n+   real (kind=8) :: _gfortran_specific__cos_r8\n \n-   specific__cos_r8 = cos (parm)\n+   _gfortran_specific__cos_r8 = cos (parm)\n end function\n \n #endif"}, {"sha": "c82329039e181ff71512342dd36d86d520da754e", "filename": "libgfortran/generated/_cosh_r10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_cosh_r10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_cosh_r10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_cosh_r10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_10)\n #ifdef HAVE_COSHL\n \n-elemental function specific__cosh_r10 (parm)\n+elemental function _gfortran_specific__cosh_r10 (parm)\n    real (kind=10), intent (in) :: parm\n-   real (kind=10) :: specific__cosh_r10\n+   real (kind=10) :: _gfortran_specific__cosh_r10\n \n-   specific__cosh_r10 = cosh (parm)\n+   _gfortran_specific__cosh_r10 = cosh (parm)\n end function\n \n #endif"}, {"sha": "cb20cd3af0e4571d35dc658bc8fecca4e962b456", "filename": "libgfortran/generated/_cosh_r16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_cosh_r16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_cosh_r16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_cosh_r16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_16)\n #ifdef HAVE_COSHL\n \n-elemental function specific__cosh_r16 (parm)\n+elemental function _gfortran_specific__cosh_r16 (parm)\n    real (kind=16), intent (in) :: parm\n-   real (kind=16) :: specific__cosh_r16\n+   real (kind=16) :: _gfortran_specific__cosh_r16\n \n-   specific__cosh_r16 = cosh (parm)\n+   _gfortran_specific__cosh_r16 = cosh (parm)\n end function\n \n #endif"}, {"sha": "6559d778e0e0f0d4b05da09ad29651ef2535dc96", "filename": "libgfortran/generated/_cosh_r4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_cosh_r4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_cosh_r4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_cosh_r4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_4)\n #ifdef HAVE_COSHF\n \n-elemental function specific__cosh_r4 (parm)\n+elemental function _gfortran_specific__cosh_r4 (parm)\n    real (kind=4), intent (in) :: parm\n-   real (kind=4) :: specific__cosh_r4\n+   real (kind=4) :: _gfortran_specific__cosh_r4\n \n-   specific__cosh_r4 = cosh (parm)\n+   _gfortran_specific__cosh_r4 = cosh (parm)\n end function\n \n #endif"}, {"sha": "00ff5842d26f4f21432470da109dc4c62eeb3bda", "filename": "libgfortran/generated/_cosh_r8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_cosh_r8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_cosh_r8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_cosh_r8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_8)\n #ifdef HAVE_COSH\n \n-elemental function specific__cosh_r8 (parm)\n+elemental function _gfortran_specific__cosh_r8 (parm)\n    real (kind=8), intent (in) :: parm\n-   real (kind=8) :: specific__cosh_r8\n+   real (kind=8) :: _gfortran_specific__cosh_r8\n \n-   specific__cosh_r8 = cosh (parm)\n+   _gfortran_specific__cosh_r8 = cosh (parm)\n end function\n \n #endif"}, {"sha": "acfc3a4eabfda11373779be6eb9e460c7da2ff06", "filename": "libgfortran/generated/_dim_i16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_dim_i16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_dim_i16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_dim_i16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -39,11 +39,11 @@\n \n \n \n-elemental function specific__dim_i16 (p1, p2)\n+elemental function _gfortran_specific__dim_i16 (p1, p2)\n    integer (kind=16), intent (in) :: p1, p2\n-   integer (kind=16) :: specific__dim_i16\n+   integer (kind=16) :: _gfortran_specific__dim_i16\n \n-   specific__dim_i16 = dim (p1, p2)\n+   _gfortran_specific__dim_i16 = dim (p1, p2)\n end function\n \n "}, {"sha": "16ef060fbfce68dfbda552e654b35b424c4c441c", "filename": "libgfortran/generated/_dim_i4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_dim_i4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_dim_i4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_dim_i4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -39,11 +39,11 @@\n \n \n \n-elemental function specific__dim_i4 (p1, p2)\n+elemental function _gfortran_specific__dim_i4 (p1, p2)\n    integer (kind=4), intent (in) :: p1, p2\n-   integer (kind=4) :: specific__dim_i4\n+   integer (kind=4) :: _gfortran_specific__dim_i4\n \n-   specific__dim_i4 = dim (p1, p2)\n+   _gfortran_specific__dim_i4 = dim (p1, p2)\n end function\n \n "}, {"sha": "01ca82a967fe91f99810efd9ddbc713c2a24fc64", "filename": "libgfortran/generated/_dim_i8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_dim_i8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_dim_i8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_dim_i8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -39,11 +39,11 @@\n \n \n \n-elemental function specific__dim_i8 (p1, p2)\n+elemental function _gfortran_specific__dim_i8 (p1, p2)\n    integer (kind=8), intent (in) :: p1, p2\n-   integer (kind=8) :: specific__dim_i8\n+   integer (kind=8) :: _gfortran_specific__dim_i8\n \n-   specific__dim_i8 = dim (p1, p2)\n+   _gfortran_specific__dim_i8 = dim (p1, p2)\n end function\n \n "}, {"sha": "1d140004106b8a408c40d52a9dc889b8896b0c70", "filename": "libgfortran/generated/_dim_r10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_dim_r10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_dim_r10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_dim_r10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -39,11 +39,11 @@\n \n \n \n-elemental function specific__dim_r10 (p1, p2)\n+elemental function _gfortran_specific__dim_r10 (p1, p2)\n    real (kind=10), intent (in) :: p1, p2\n-   real (kind=10) :: specific__dim_r10\n+   real (kind=10) :: _gfortran_specific__dim_r10\n \n-   specific__dim_r10 = dim (p1, p2)\n+   _gfortran_specific__dim_r10 = dim (p1, p2)\n end function\n \n "}, {"sha": "1f435b3b555ffb6d9e6791d8aa2d8d389bb0b531", "filename": "libgfortran/generated/_dim_r16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_dim_r16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_dim_r16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_dim_r16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -39,11 +39,11 @@\n \n \n \n-elemental function specific__dim_r16 (p1, p2)\n+elemental function _gfortran_specific__dim_r16 (p1, p2)\n    real (kind=16), intent (in) :: p1, p2\n-   real (kind=16) :: specific__dim_r16\n+   real (kind=16) :: _gfortran_specific__dim_r16\n \n-   specific__dim_r16 = dim (p1, p2)\n+   _gfortran_specific__dim_r16 = dim (p1, p2)\n end function\n \n "}, {"sha": "0c4cd5d6b9aa5203d3bf32399042295d55336fb6", "filename": "libgfortran/generated/_dim_r4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_dim_r4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_dim_r4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_dim_r4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -39,11 +39,11 @@\n \n \n \n-elemental function specific__dim_r4 (p1, p2)\n+elemental function _gfortran_specific__dim_r4 (p1, p2)\n    real (kind=4), intent (in) :: p1, p2\n-   real (kind=4) :: specific__dim_r4\n+   real (kind=4) :: _gfortran_specific__dim_r4\n \n-   specific__dim_r4 = dim (p1, p2)\n+   _gfortran_specific__dim_r4 = dim (p1, p2)\n end function\n \n "}, {"sha": "f23b0cce1f9725d31233871c53745291c552dc82", "filename": "libgfortran/generated/_dim_r8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_dim_r8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_dim_r8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_dim_r8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -39,11 +39,11 @@\n \n \n \n-elemental function specific__dim_r8 (p1, p2)\n+elemental function _gfortran_specific__dim_r8 (p1, p2)\n    real (kind=8), intent (in) :: p1, p2\n-   real (kind=8) :: specific__dim_r8\n+   real (kind=8) :: _gfortran_specific__dim_r8\n \n-   specific__dim_r8 = dim (p1, p2)\n+   _gfortran_specific__dim_r8 = dim (p1, p2)\n end function\n \n "}, {"sha": "126f55c95362fcf7e0cdf0871cf726773d0f52d1", "filename": "libgfortran/generated/_exp_c10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_exp_c10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_exp_c10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_exp_c10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_10)\n #ifdef HAVE_CEXPL\n \n-elemental function specific__exp_c10 (parm)\n+elemental function _gfortran_specific__exp_c10 (parm)\n    complex (kind=10), intent (in) :: parm\n-   complex (kind=10) :: specific__exp_c10\n+   complex (kind=10) :: _gfortran_specific__exp_c10\n \n-   specific__exp_c10 = exp (parm)\n+   _gfortran_specific__exp_c10 = exp (parm)\n end function\n \n #endif"}, {"sha": "ad7d4dc7244fc69038e3cb3bd7b81b2ae8635906", "filename": "libgfortran/generated/_exp_c16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_exp_c16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_exp_c16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_exp_c16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_16)\n #ifdef HAVE_CEXPL\n \n-elemental function specific__exp_c16 (parm)\n+elemental function _gfortran_specific__exp_c16 (parm)\n    complex (kind=16), intent (in) :: parm\n-   complex (kind=16) :: specific__exp_c16\n+   complex (kind=16) :: _gfortran_specific__exp_c16\n \n-   specific__exp_c16 = exp (parm)\n+   _gfortran_specific__exp_c16 = exp (parm)\n end function\n \n #endif"}, {"sha": "866820b33cc305a8740f24e82cacb0f0476bc5e7", "filename": "libgfortran/generated/_exp_c4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_exp_c4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_exp_c4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_exp_c4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_4)\n #ifdef HAVE_CEXPF\n \n-elemental function specific__exp_c4 (parm)\n+elemental function _gfortran_specific__exp_c4 (parm)\n    complex (kind=4), intent (in) :: parm\n-   complex (kind=4) :: specific__exp_c4\n+   complex (kind=4) :: _gfortran_specific__exp_c4\n \n-   specific__exp_c4 = exp (parm)\n+   _gfortran_specific__exp_c4 = exp (parm)\n end function\n \n #endif"}, {"sha": "2112ce861a0e1039e830e7e171e149e2574757d1", "filename": "libgfortran/generated/_exp_c8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_exp_c8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_exp_c8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_exp_c8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_8)\n #ifdef HAVE_CEXP\n \n-elemental function specific__exp_c8 (parm)\n+elemental function _gfortran_specific__exp_c8 (parm)\n    complex (kind=8), intent (in) :: parm\n-   complex (kind=8) :: specific__exp_c8\n+   complex (kind=8) :: _gfortran_specific__exp_c8\n \n-   specific__exp_c8 = exp (parm)\n+   _gfortran_specific__exp_c8 = exp (parm)\n end function\n \n #endif"}, {"sha": "03e8fa02902ae0e993cc2ea036965380e783f6b9", "filename": "libgfortran/generated/_exp_r10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_exp_r10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_exp_r10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_exp_r10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_10)\n #ifdef HAVE_EXPL\n \n-elemental function specific__exp_r10 (parm)\n+elemental function _gfortran_specific__exp_r10 (parm)\n    real (kind=10), intent (in) :: parm\n-   real (kind=10) :: specific__exp_r10\n+   real (kind=10) :: _gfortran_specific__exp_r10\n \n-   specific__exp_r10 = exp (parm)\n+   _gfortran_specific__exp_r10 = exp (parm)\n end function\n \n #endif"}, {"sha": "a88733c91f4fa528d2549faf941297772ebc99bf", "filename": "libgfortran/generated/_exp_r16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_exp_r16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_exp_r16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_exp_r16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_16)\n #ifdef HAVE_EXPL\n \n-elemental function specific__exp_r16 (parm)\n+elemental function _gfortran_specific__exp_r16 (parm)\n    real (kind=16), intent (in) :: parm\n-   real (kind=16) :: specific__exp_r16\n+   real (kind=16) :: _gfortran_specific__exp_r16\n \n-   specific__exp_r16 = exp (parm)\n+   _gfortran_specific__exp_r16 = exp (parm)\n end function\n \n #endif"}, {"sha": "0d71d2e493bd7447abdbecfde6060c1d19efbd1d", "filename": "libgfortran/generated/_exp_r4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_exp_r4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_exp_r4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_exp_r4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_4)\n #ifdef HAVE_EXPF\n \n-elemental function specific__exp_r4 (parm)\n+elemental function _gfortran_specific__exp_r4 (parm)\n    real (kind=4), intent (in) :: parm\n-   real (kind=4) :: specific__exp_r4\n+   real (kind=4) :: _gfortran_specific__exp_r4\n \n-   specific__exp_r4 = exp (parm)\n+   _gfortran_specific__exp_r4 = exp (parm)\n end function\n \n #endif"}, {"sha": "e0e2c8d057a4c62dd665f59fc4e3a5b943a2ad45", "filename": "libgfortran/generated/_exp_r8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_exp_r8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_exp_r8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_exp_r8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_8)\n #ifdef HAVE_EXP\n \n-elemental function specific__exp_r8 (parm)\n+elemental function _gfortran_specific__exp_r8 (parm)\n    real (kind=8), intent (in) :: parm\n-   real (kind=8) :: specific__exp_r8\n+   real (kind=8) :: _gfortran_specific__exp_r8\n \n-   specific__exp_r8 = exp (parm)\n+   _gfortran_specific__exp_r8 = exp (parm)\n end function\n \n #endif"}, {"sha": "f293489eb185b2d3b67358cc7775d6cea5ab2881", "filename": "libgfortran/generated/_log10_r10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_log10_r10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_log10_r10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_log10_r10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_10)\n #ifdef HAVE_LOG10L\n \n-elemental function specific__log10_r10 (parm)\n+elemental function _gfortran_specific__log10_r10 (parm)\n    real (kind=10), intent (in) :: parm\n-   real (kind=10) :: specific__log10_r10\n+   real (kind=10) :: _gfortran_specific__log10_r10\n \n-   specific__log10_r10 = log10 (parm)\n+   _gfortran_specific__log10_r10 = log10 (parm)\n end function\n \n #endif"}, {"sha": "f690879953b3ecfcc66bb728ed7d95041c0b0e72", "filename": "libgfortran/generated/_log10_r16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_log10_r16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_log10_r16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_log10_r16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_16)\n #ifdef HAVE_LOG10L\n \n-elemental function specific__log10_r16 (parm)\n+elemental function _gfortran_specific__log10_r16 (parm)\n    real (kind=16), intent (in) :: parm\n-   real (kind=16) :: specific__log10_r16\n+   real (kind=16) :: _gfortran_specific__log10_r16\n \n-   specific__log10_r16 = log10 (parm)\n+   _gfortran_specific__log10_r16 = log10 (parm)\n end function\n \n #endif"}, {"sha": "bcadf2417ee216cd0aacb1d1bc05ef7e30fe1a66", "filename": "libgfortran/generated/_log10_r4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_log10_r4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_log10_r4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_log10_r4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_4)\n #ifdef HAVE_LOG10F\n \n-elemental function specific__log10_r4 (parm)\n+elemental function _gfortran_specific__log10_r4 (parm)\n    real (kind=4), intent (in) :: parm\n-   real (kind=4) :: specific__log10_r4\n+   real (kind=4) :: _gfortran_specific__log10_r4\n \n-   specific__log10_r4 = log10 (parm)\n+   _gfortran_specific__log10_r4 = log10 (parm)\n end function\n \n #endif"}, {"sha": "7d55ad703e7bbc07192ac4a20679651b95b08e43", "filename": "libgfortran/generated/_log10_r8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_log10_r8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_log10_r8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_log10_r8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_8)\n #ifdef HAVE_LOG10\n \n-elemental function specific__log10_r8 (parm)\n+elemental function _gfortran_specific__log10_r8 (parm)\n    real (kind=8), intent (in) :: parm\n-   real (kind=8) :: specific__log10_r8\n+   real (kind=8) :: _gfortran_specific__log10_r8\n \n-   specific__log10_r8 = log10 (parm)\n+   _gfortran_specific__log10_r8 = log10 (parm)\n end function\n \n #endif"}, {"sha": "90e415bcd2e8af467600541e54f14e8b5659561b", "filename": "libgfortran/generated/_log_c10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_log_c10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_log_c10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_log_c10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_10)\n #ifdef HAVE_CLOGL\n \n-elemental function specific__log_c10 (parm)\n+elemental function _gfortran_specific__log_c10 (parm)\n    complex (kind=10), intent (in) :: parm\n-   complex (kind=10) :: specific__log_c10\n+   complex (kind=10) :: _gfortran_specific__log_c10\n \n-   specific__log_c10 = log (parm)\n+   _gfortran_specific__log_c10 = log (parm)\n end function\n \n #endif"}, {"sha": "d9db7cea0355b2acd0aae75eb5320e742d32b7bd", "filename": "libgfortran/generated/_log_c16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_log_c16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_log_c16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_log_c16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_16)\n #ifdef HAVE_CLOGL\n \n-elemental function specific__log_c16 (parm)\n+elemental function _gfortran_specific__log_c16 (parm)\n    complex (kind=16), intent (in) :: parm\n-   complex (kind=16) :: specific__log_c16\n+   complex (kind=16) :: _gfortran_specific__log_c16\n \n-   specific__log_c16 = log (parm)\n+   _gfortran_specific__log_c16 = log (parm)\n end function\n \n #endif"}, {"sha": "550ed1d6eed9a8fdc845cc9f07affec5a1c78a92", "filename": "libgfortran/generated/_log_c4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_log_c4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_log_c4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_log_c4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_4)\n #ifdef HAVE_CLOGF\n \n-elemental function specific__log_c4 (parm)\n+elemental function _gfortran_specific__log_c4 (parm)\n    complex (kind=4), intent (in) :: parm\n-   complex (kind=4) :: specific__log_c4\n+   complex (kind=4) :: _gfortran_specific__log_c4\n \n-   specific__log_c4 = log (parm)\n+   _gfortran_specific__log_c4 = log (parm)\n end function\n \n #endif"}, {"sha": "ee26dc21f1545177acd209ed3f0b22c5bab6b328", "filename": "libgfortran/generated/_log_c8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_log_c8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_log_c8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_log_c8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_8)\n #ifdef HAVE_CLOG\n \n-elemental function specific__log_c8 (parm)\n+elemental function _gfortran_specific__log_c8 (parm)\n    complex (kind=8), intent (in) :: parm\n-   complex (kind=8) :: specific__log_c8\n+   complex (kind=8) :: _gfortran_specific__log_c8\n \n-   specific__log_c8 = log (parm)\n+   _gfortran_specific__log_c8 = log (parm)\n end function\n \n #endif"}, {"sha": "ca7d33743895082acf54e433fdf368fb21dc8964", "filename": "libgfortran/generated/_log_r10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_log_r10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_log_r10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_log_r10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_10)\n #ifdef HAVE_LOGL\n \n-elemental function specific__log_r10 (parm)\n+elemental function _gfortran_specific__log_r10 (parm)\n    real (kind=10), intent (in) :: parm\n-   real (kind=10) :: specific__log_r10\n+   real (kind=10) :: _gfortran_specific__log_r10\n \n-   specific__log_r10 = log (parm)\n+   _gfortran_specific__log_r10 = log (parm)\n end function\n \n #endif"}, {"sha": "7bd4038a5004fe80c374607fa9a0a89f776ba5a2", "filename": "libgfortran/generated/_log_r16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_log_r16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_log_r16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_log_r16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_16)\n #ifdef HAVE_LOGL\n \n-elemental function specific__log_r16 (parm)\n+elemental function _gfortran_specific__log_r16 (parm)\n    real (kind=16), intent (in) :: parm\n-   real (kind=16) :: specific__log_r16\n+   real (kind=16) :: _gfortran_specific__log_r16\n \n-   specific__log_r16 = log (parm)\n+   _gfortran_specific__log_r16 = log (parm)\n end function\n \n #endif"}, {"sha": "b4e6217bfe10e01105bcbf4f8097df61e8ac8180", "filename": "libgfortran/generated/_log_r4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_log_r4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_log_r4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_log_r4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_4)\n #ifdef HAVE_LOGF\n \n-elemental function specific__log_r4 (parm)\n+elemental function _gfortran_specific__log_r4 (parm)\n    real (kind=4), intent (in) :: parm\n-   real (kind=4) :: specific__log_r4\n+   real (kind=4) :: _gfortran_specific__log_r4\n \n-   specific__log_r4 = log (parm)\n+   _gfortran_specific__log_r4 = log (parm)\n end function\n \n #endif"}, {"sha": "a0b149b16ce404153c2bedeced706d4c0e9dc376", "filename": "libgfortran/generated/_log_r8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_log_r8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_log_r8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_log_r8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_8)\n #ifdef HAVE_LOG\n \n-elemental function specific__log_r8 (parm)\n+elemental function _gfortran_specific__log_r8 (parm)\n    real (kind=8), intent (in) :: parm\n-   real (kind=8) :: specific__log_r8\n+   real (kind=8) :: _gfortran_specific__log_r8\n \n-   specific__log_r8 = log (parm)\n+   _gfortran_specific__log_r8 = log (parm)\n end function\n \n #endif"}, {"sha": "fd851b8d218e34a5962b556e8299021a80b378bb", "filename": "libgfortran/generated/_mod_i16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_mod_i16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_mod_i16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_mod_i16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -39,11 +39,11 @@\n \n \n \n-elemental function specific__mod_i16 (p1, p2)\n+elemental function _gfortran_specific__mod_i16 (p1, p2)\n    integer (kind=16), intent (in) :: p1, p2\n-   integer (kind=16) :: specific__mod_i16\n+   integer (kind=16) :: _gfortran_specific__mod_i16\n \n-   specific__mod_i16 = mod (p1, p2)\n+   _gfortran_specific__mod_i16 = mod (p1, p2)\n end function\n \n "}, {"sha": "7f5bcb220158990a540b8031d1557603a66a2d27", "filename": "libgfortran/generated/_mod_i4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_mod_i4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_mod_i4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_mod_i4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -39,11 +39,11 @@\n \n \n \n-elemental function specific__mod_i4 (p1, p2)\n+elemental function _gfortran_specific__mod_i4 (p1, p2)\n    integer (kind=4), intent (in) :: p1, p2\n-   integer (kind=4) :: specific__mod_i4\n+   integer (kind=4) :: _gfortran_specific__mod_i4\n \n-   specific__mod_i4 = mod (p1, p2)\n+   _gfortran_specific__mod_i4 = mod (p1, p2)\n end function\n \n "}, {"sha": "94f6c7b85f443b19ecc567df11c593d782fcd405", "filename": "libgfortran/generated/_mod_i8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_mod_i8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_mod_i8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_mod_i8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -39,11 +39,11 @@\n \n \n \n-elemental function specific__mod_i8 (p1, p2)\n+elemental function _gfortran_specific__mod_i8 (p1, p2)\n    integer (kind=8), intent (in) :: p1, p2\n-   integer (kind=8) :: specific__mod_i8\n+   integer (kind=8) :: _gfortran_specific__mod_i8\n \n-   specific__mod_i8 = mod (p1, p2)\n+   _gfortran_specific__mod_i8 = mod (p1, p2)\n end function\n \n "}, {"sha": "a4cf1d0404675f125dd508652c3412b2c55a03ff", "filename": "libgfortran/generated/_mod_r10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_mod_r10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_mod_r10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_mod_r10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -39,11 +39,11 @@\n \n \n \n-elemental function specific__mod_r10 (p1, p2)\n+elemental function _gfortran_specific__mod_r10 (p1, p2)\n    real (kind=10), intent (in) :: p1, p2\n-   real (kind=10) :: specific__mod_r10\n+   real (kind=10) :: _gfortran_specific__mod_r10\n \n-   specific__mod_r10 = mod (p1, p2)\n+   _gfortran_specific__mod_r10 = mod (p1, p2)\n end function\n \n "}, {"sha": "6ae2c4f1758ff03034bdc3f80bd4799c6a967529", "filename": "libgfortran/generated/_mod_r16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_mod_r16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_mod_r16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_mod_r16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -39,11 +39,11 @@\n \n \n \n-elemental function specific__mod_r16 (p1, p2)\n+elemental function _gfortran_specific__mod_r16 (p1, p2)\n    real (kind=16), intent (in) :: p1, p2\n-   real (kind=16) :: specific__mod_r16\n+   real (kind=16) :: _gfortran_specific__mod_r16\n \n-   specific__mod_r16 = mod (p1, p2)\n+   _gfortran_specific__mod_r16 = mod (p1, p2)\n end function\n \n "}, {"sha": "dfb0f078e8ee4280d8033b33305191c605581aaf", "filename": "libgfortran/generated/_mod_r4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_mod_r4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_mod_r4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_mod_r4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -39,11 +39,11 @@\n \n \n \n-elemental function specific__mod_r4 (p1, p2)\n+elemental function _gfortran_specific__mod_r4 (p1, p2)\n    real (kind=4), intent (in) :: p1, p2\n-   real (kind=4) :: specific__mod_r4\n+   real (kind=4) :: _gfortran_specific__mod_r4\n \n-   specific__mod_r4 = mod (p1, p2)\n+   _gfortran_specific__mod_r4 = mod (p1, p2)\n end function\n \n "}, {"sha": "50df377fc6b6eb3f77a71ca12b41d678d32644fd", "filename": "libgfortran/generated/_mod_r8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_mod_r8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_mod_r8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_mod_r8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -39,11 +39,11 @@\n \n \n \n-elemental function specific__mod_r8 (p1, p2)\n+elemental function _gfortran_specific__mod_r8 (p1, p2)\n    real (kind=8), intent (in) :: p1, p2\n-   real (kind=8) :: specific__mod_r8\n+   real (kind=8) :: _gfortran_specific__mod_r8\n \n-   specific__mod_r8 = mod (p1, p2)\n+   _gfortran_specific__mod_r8 = mod (p1, p2)\n end function\n \n "}, {"sha": "3e642b29b8112caec36011f4ce8a090798bd7f83", "filename": "libgfortran/generated/_sign_i16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sign_i16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sign_i16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_sign_i16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -39,11 +39,11 @@\n \n \n \n-elemental function specific__sign_i16 (p1, p2)\n+elemental function _gfortran_specific__sign_i16 (p1, p2)\n    integer (kind=16), intent (in) :: p1, p2\n-   integer (kind=16) :: specific__sign_i16\n+   integer (kind=16) :: _gfortran_specific__sign_i16\n \n-   specific__sign_i16 = sign (p1, p2)\n+   _gfortran_specific__sign_i16 = sign (p1, p2)\n end function\n \n "}, {"sha": "d637aae54bf67d4f0cc68e511a83f39d0d216b76", "filename": "libgfortran/generated/_sign_i4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sign_i4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sign_i4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_sign_i4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -39,11 +39,11 @@\n \n \n \n-elemental function specific__sign_i4 (p1, p2)\n+elemental function _gfortran_specific__sign_i4 (p1, p2)\n    integer (kind=4), intent (in) :: p1, p2\n-   integer (kind=4) :: specific__sign_i4\n+   integer (kind=4) :: _gfortran_specific__sign_i4\n \n-   specific__sign_i4 = sign (p1, p2)\n+   _gfortran_specific__sign_i4 = sign (p1, p2)\n end function\n \n "}, {"sha": "00d0eda6964c8b32e57c5ba5b024763128024e96", "filename": "libgfortran/generated/_sign_i8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sign_i8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sign_i8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_sign_i8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -39,11 +39,11 @@\n \n \n \n-elemental function specific__sign_i8 (p1, p2)\n+elemental function _gfortran_specific__sign_i8 (p1, p2)\n    integer (kind=8), intent (in) :: p1, p2\n-   integer (kind=8) :: specific__sign_i8\n+   integer (kind=8) :: _gfortran_specific__sign_i8\n \n-   specific__sign_i8 = sign (p1, p2)\n+   _gfortran_specific__sign_i8 = sign (p1, p2)\n end function\n \n "}, {"sha": "b165526b579aa1d913e7e84e1035f5f2be228e4e", "filename": "libgfortran/generated/_sign_r10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sign_r10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sign_r10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_sign_r10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -39,11 +39,11 @@\n \n \n \n-elemental function specific__sign_r10 (p1, p2)\n+elemental function _gfortran_specific__sign_r10 (p1, p2)\n    real (kind=10), intent (in) :: p1, p2\n-   real (kind=10) :: specific__sign_r10\n+   real (kind=10) :: _gfortran_specific__sign_r10\n \n-   specific__sign_r10 = sign (p1, p2)\n+   _gfortran_specific__sign_r10 = sign (p1, p2)\n end function\n \n "}, {"sha": "5e66148d3ffe90984e9ba0ee229ff7e4479660d1", "filename": "libgfortran/generated/_sign_r16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sign_r16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sign_r16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_sign_r16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -39,11 +39,11 @@\n \n \n \n-elemental function specific__sign_r16 (p1, p2)\n+elemental function _gfortran_specific__sign_r16 (p1, p2)\n    real (kind=16), intent (in) :: p1, p2\n-   real (kind=16) :: specific__sign_r16\n+   real (kind=16) :: _gfortran_specific__sign_r16\n \n-   specific__sign_r16 = sign (p1, p2)\n+   _gfortran_specific__sign_r16 = sign (p1, p2)\n end function\n \n "}, {"sha": "6428b9adf4fb081114177f31226f51057c523032", "filename": "libgfortran/generated/_sign_r4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sign_r4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sign_r4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_sign_r4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -39,11 +39,11 @@\n \n \n \n-elemental function specific__sign_r4 (p1, p2)\n+elemental function _gfortran_specific__sign_r4 (p1, p2)\n    real (kind=4), intent (in) :: p1, p2\n-   real (kind=4) :: specific__sign_r4\n+   real (kind=4) :: _gfortran_specific__sign_r4\n \n-   specific__sign_r4 = sign (p1, p2)\n+   _gfortran_specific__sign_r4 = sign (p1, p2)\n end function\n \n "}, {"sha": "452132dd0fe9ffa1fe4555b4056f3ea0042f74a2", "filename": "libgfortran/generated/_sign_r8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sign_r8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sign_r8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_sign_r8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -39,11 +39,11 @@\n \n \n \n-elemental function specific__sign_r8 (p1, p2)\n+elemental function _gfortran_specific__sign_r8 (p1, p2)\n    real (kind=8), intent (in) :: p1, p2\n-   real (kind=8) :: specific__sign_r8\n+   real (kind=8) :: _gfortran_specific__sign_r8\n \n-   specific__sign_r8 = sign (p1, p2)\n+   _gfortran_specific__sign_r8 = sign (p1, p2)\n end function\n \n "}, {"sha": "6384598ee84929e3c8cea4d4abb8cc0c8ab60974", "filename": "libgfortran/generated/_sin_c10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sin_c10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sin_c10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_sin_c10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_10)\n #ifdef HAVE_CSINL\n \n-elemental function specific__sin_c10 (parm)\n+elemental function _gfortran_specific__sin_c10 (parm)\n    complex (kind=10), intent (in) :: parm\n-   complex (kind=10) :: specific__sin_c10\n+   complex (kind=10) :: _gfortran_specific__sin_c10\n \n-   specific__sin_c10 = sin (parm)\n+   _gfortran_specific__sin_c10 = sin (parm)\n end function\n \n #endif"}, {"sha": "4e8f445f722bdc9c3dd1712171dd5a805b874adb", "filename": "libgfortran/generated/_sin_c16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sin_c16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sin_c16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_sin_c16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_16)\n #ifdef HAVE_CSINL\n \n-elemental function specific__sin_c16 (parm)\n+elemental function _gfortran_specific__sin_c16 (parm)\n    complex (kind=16), intent (in) :: parm\n-   complex (kind=16) :: specific__sin_c16\n+   complex (kind=16) :: _gfortran_specific__sin_c16\n \n-   specific__sin_c16 = sin (parm)\n+   _gfortran_specific__sin_c16 = sin (parm)\n end function\n \n #endif"}, {"sha": "7f4b6be630799bed42f1cff6300013dec5b059d7", "filename": "libgfortran/generated/_sin_c4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sin_c4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sin_c4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_sin_c4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_4)\n #ifdef HAVE_CSINF\n \n-elemental function specific__sin_c4 (parm)\n+elemental function _gfortran_specific__sin_c4 (parm)\n    complex (kind=4), intent (in) :: parm\n-   complex (kind=4) :: specific__sin_c4\n+   complex (kind=4) :: _gfortran_specific__sin_c4\n \n-   specific__sin_c4 = sin (parm)\n+   _gfortran_specific__sin_c4 = sin (parm)\n end function\n \n #endif"}, {"sha": "9abd4a13ec4a0fa5099e110553c33a80ea9c23c1", "filename": "libgfortran/generated/_sin_c8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sin_c8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sin_c8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_sin_c8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_8)\n #ifdef HAVE_CSIN\n \n-elemental function specific__sin_c8 (parm)\n+elemental function _gfortran_specific__sin_c8 (parm)\n    complex (kind=8), intent (in) :: parm\n-   complex (kind=8) :: specific__sin_c8\n+   complex (kind=8) :: _gfortran_specific__sin_c8\n \n-   specific__sin_c8 = sin (parm)\n+   _gfortran_specific__sin_c8 = sin (parm)\n end function\n \n #endif"}, {"sha": "f201962e6891520cc8e5baf4d39f66ed5f1f84fd", "filename": "libgfortran/generated/_sin_r10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sin_r10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sin_r10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_sin_r10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_10)\n #ifdef HAVE_SINL\n \n-elemental function specific__sin_r10 (parm)\n+elemental function _gfortran_specific__sin_r10 (parm)\n    real (kind=10), intent (in) :: parm\n-   real (kind=10) :: specific__sin_r10\n+   real (kind=10) :: _gfortran_specific__sin_r10\n \n-   specific__sin_r10 = sin (parm)\n+   _gfortran_specific__sin_r10 = sin (parm)\n end function\n \n #endif"}, {"sha": "10c86a88e49a183303507702e38d8a6d8a923fdf", "filename": "libgfortran/generated/_sin_r16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sin_r16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sin_r16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_sin_r16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_16)\n #ifdef HAVE_SINL\n \n-elemental function specific__sin_r16 (parm)\n+elemental function _gfortran_specific__sin_r16 (parm)\n    real (kind=16), intent (in) :: parm\n-   real (kind=16) :: specific__sin_r16\n+   real (kind=16) :: _gfortran_specific__sin_r16\n \n-   specific__sin_r16 = sin (parm)\n+   _gfortran_specific__sin_r16 = sin (parm)\n end function\n \n #endif"}, {"sha": "b586928daf0d790e1e47cf40942b5445f7ad2702", "filename": "libgfortran/generated/_sin_r4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sin_r4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sin_r4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_sin_r4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_4)\n #ifdef HAVE_SINF\n \n-elemental function specific__sin_r4 (parm)\n+elemental function _gfortran_specific__sin_r4 (parm)\n    real (kind=4), intent (in) :: parm\n-   real (kind=4) :: specific__sin_r4\n+   real (kind=4) :: _gfortran_specific__sin_r4\n \n-   specific__sin_r4 = sin (parm)\n+   _gfortran_specific__sin_r4 = sin (parm)\n end function\n \n #endif"}, {"sha": "cb8e25772d90d8e43b79ced72aba144ca07982b0", "filename": "libgfortran/generated/_sin_r8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sin_r8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sin_r8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_sin_r8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_8)\n #ifdef HAVE_SIN\n \n-elemental function specific__sin_r8 (parm)\n+elemental function _gfortran_specific__sin_r8 (parm)\n    real (kind=8), intent (in) :: parm\n-   real (kind=8) :: specific__sin_r8\n+   real (kind=8) :: _gfortran_specific__sin_r8\n \n-   specific__sin_r8 = sin (parm)\n+   _gfortran_specific__sin_r8 = sin (parm)\n end function\n \n #endif"}, {"sha": "67609d682d22eedd3e36ed99b48747dbcda4f938", "filename": "libgfortran/generated/_sinh_r10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sinh_r10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sinh_r10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_sinh_r10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_10)\n #ifdef HAVE_SINHL\n \n-elemental function specific__sinh_r10 (parm)\n+elemental function _gfortran_specific__sinh_r10 (parm)\n    real (kind=10), intent (in) :: parm\n-   real (kind=10) :: specific__sinh_r10\n+   real (kind=10) :: _gfortran_specific__sinh_r10\n \n-   specific__sinh_r10 = sinh (parm)\n+   _gfortran_specific__sinh_r10 = sinh (parm)\n end function\n \n #endif"}, {"sha": "6274a59b7d61f1edcf0f24f0cf612e44882f32b7", "filename": "libgfortran/generated/_sinh_r16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sinh_r16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sinh_r16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_sinh_r16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_16)\n #ifdef HAVE_SINHL\n \n-elemental function specific__sinh_r16 (parm)\n+elemental function _gfortran_specific__sinh_r16 (parm)\n    real (kind=16), intent (in) :: parm\n-   real (kind=16) :: specific__sinh_r16\n+   real (kind=16) :: _gfortran_specific__sinh_r16\n \n-   specific__sinh_r16 = sinh (parm)\n+   _gfortran_specific__sinh_r16 = sinh (parm)\n end function\n \n #endif"}, {"sha": "116f205385c99c3f6234cd082a5b11bfd0ea2b30", "filename": "libgfortran/generated/_sinh_r4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sinh_r4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sinh_r4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_sinh_r4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_4)\n #ifdef HAVE_SINHF\n \n-elemental function specific__sinh_r4 (parm)\n+elemental function _gfortran_specific__sinh_r4 (parm)\n    real (kind=4), intent (in) :: parm\n-   real (kind=4) :: specific__sinh_r4\n+   real (kind=4) :: _gfortran_specific__sinh_r4\n \n-   specific__sinh_r4 = sinh (parm)\n+   _gfortran_specific__sinh_r4 = sinh (parm)\n end function\n \n #endif"}, {"sha": "bb4ceae479ca1319db39673e5334134a6eef0f3d", "filename": "libgfortran/generated/_sinh_r8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sinh_r8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sinh_r8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_sinh_r8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_8)\n #ifdef HAVE_SINH\n \n-elemental function specific__sinh_r8 (parm)\n+elemental function _gfortran_specific__sinh_r8 (parm)\n    real (kind=8), intent (in) :: parm\n-   real (kind=8) :: specific__sinh_r8\n+   real (kind=8) :: _gfortran_specific__sinh_r8\n \n-   specific__sinh_r8 = sinh (parm)\n+   _gfortran_specific__sinh_r8 = sinh (parm)\n end function\n \n #endif"}, {"sha": "d6ca3b64daba1b37f81f669d39cc76925704adc5", "filename": "libgfortran/generated/_sqrt_c10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sqrt_c10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sqrt_c10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_sqrt_c10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_10)\n #ifdef HAVE_CSQRTL\n \n-elemental function specific__sqrt_c10 (parm)\n+elemental function _gfortran_specific__sqrt_c10 (parm)\n    complex (kind=10), intent (in) :: parm\n-   complex (kind=10) :: specific__sqrt_c10\n+   complex (kind=10) :: _gfortran_specific__sqrt_c10\n \n-   specific__sqrt_c10 = sqrt (parm)\n+   _gfortran_specific__sqrt_c10 = sqrt (parm)\n end function\n \n #endif"}, {"sha": "247bdf5f09dad99ea5fc181f90cb1b9e8892f115", "filename": "libgfortran/generated/_sqrt_c16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sqrt_c16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sqrt_c16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_sqrt_c16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_16)\n #ifdef HAVE_CSQRTL\n \n-elemental function specific__sqrt_c16 (parm)\n+elemental function _gfortran_specific__sqrt_c16 (parm)\n    complex (kind=16), intent (in) :: parm\n-   complex (kind=16) :: specific__sqrt_c16\n+   complex (kind=16) :: _gfortran_specific__sqrt_c16\n \n-   specific__sqrt_c16 = sqrt (parm)\n+   _gfortran_specific__sqrt_c16 = sqrt (parm)\n end function\n \n #endif"}, {"sha": "7a8195f9dca0e8b2173adb6d0271be68a016a19a", "filename": "libgfortran/generated/_sqrt_c4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sqrt_c4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sqrt_c4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_sqrt_c4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_4)\n #ifdef HAVE_CSQRTF\n \n-elemental function specific__sqrt_c4 (parm)\n+elemental function _gfortran_specific__sqrt_c4 (parm)\n    complex (kind=4), intent (in) :: parm\n-   complex (kind=4) :: specific__sqrt_c4\n+   complex (kind=4) :: _gfortran_specific__sqrt_c4\n \n-   specific__sqrt_c4 = sqrt (parm)\n+   _gfortran_specific__sqrt_c4 = sqrt (parm)\n end function\n \n #endif"}, {"sha": "1e1e153a91f6bc8bdea9fbc63ac8bdd5e87f9bee", "filename": "libgfortran/generated/_sqrt_c8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sqrt_c8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sqrt_c8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_sqrt_c8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_COMPLEX_8)\n #ifdef HAVE_CSQRT\n \n-elemental function specific__sqrt_c8 (parm)\n+elemental function _gfortran_specific__sqrt_c8 (parm)\n    complex (kind=8), intent (in) :: parm\n-   complex (kind=8) :: specific__sqrt_c8\n+   complex (kind=8) :: _gfortran_specific__sqrt_c8\n \n-   specific__sqrt_c8 = sqrt (parm)\n+   _gfortran_specific__sqrt_c8 = sqrt (parm)\n end function\n \n #endif"}, {"sha": "b770433ae9f37d0a018a99329408e415767d7b76", "filename": "libgfortran/generated/_sqrt_r10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sqrt_r10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sqrt_r10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_sqrt_r10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_10)\n #ifdef HAVE_SQRTL\n \n-elemental function specific__sqrt_r10 (parm)\n+elemental function _gfortran_specific__sqrt_r10 (parm)\n    real (kind=10), intent (in) :: parm\n-   real (kind=10) :: specific__sqrt_r10\n+   real (kind=10) :: _gfortran_specific__sqrt_r10\n \n-   specific__sqrt_r10 = sqrt (parm)\n+   _gfortran_specific__sqrt_r10 = sqrt (parm)\n end function\n \n #endif"}, {"sha": "8e796f8b3a25bbe2dbff1649bf9cfa3665e87f6b", "filename": "libgfortran/generated/_sqrt_r16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sqrt_r16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sqrt_r16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_sqrt_r16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_16)\n #ifdef HAVE_SQRTL\n \n-elemental function specific__sqrt_r16 (parm)\n+elemental function _gfortran_specific__sqrt_r16 (parm)\n    real (kind=16), intent (in) :: parm\n-   real (kind=16) :: specific__sqrt_r16\n+   real (kind=16) :: _gfortran_specific__sqrt_r16\n \n-   specific__sqrt_r16 = sqrt (parm)\n+   _gfortran_specific__sqrt_r16 = sqrt (parm)\n end function\n \n #endif"}, {"sha": "2181cd09d78033a16cc8dab3b6e085afb34a9fa0", "filename": "libgfortran/generated/_sqrt_r4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sqrt_r4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sqrt_r4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_sqrt_r4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_4)\n #ifdef HAVE_SQRTF\n \n-elemental function specific__sqrt_r4 (parm)\n+elemental function _gfortran_specific__sqrt_r4 (parm)\n    real (kind=4), intent (in) :: parm\n-   real (kind=4) :: specific__sqrt_r4\n+   real (kind=4) :: _gfortran_specific__sqrt_r4\n \n-   specific__sqrt_r4 = sqrt (parm)\n+   _gfortran_specific__sqrt_r4 = sqrt (parm)\n end function\n \n #endif"}, {"sha": "47253da4e32c4212c4062e6992b82fe68c006007", "filename": "libgfortran/generated/_sqrt_r8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sqrt_r8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_sqrt_r8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_sqrt_r8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_8)\n #ifdef HAVE_SQRT\n \n-elemental function specific__sqrt_r8 (parm)\n+elemental function _gfortran_specific__sqrt_r8 (parm)\n    real (kind=8), intent (in) :: parm\n-   real (kind=8) :: specific__sqrt_r8\n+   real (kind=8) :: _gfortran_specific__sqrt_r8\n \n-   specific__sqrt_r8 = sqrt (parm)\n+   _gfortran_specific__sqrt_r8 = sqrt (parm)\n end function\n \n #endif"}, {"sha": "f2829e72eceddb5c6a1480bc3f752e5ac520b035", "filename": "libgfortran/generated/_tan_r10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_tan_r10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_tan_r10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_tan_r10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_10)\n #ifdef HAVE_TANL\n \n-elemental function specific__tan_r10 (parm)\n+elemental function _gfortran_specific__tan_r10 (parm)\n    real (kind=10), intent (in) :: parm\n-   real (kind=10) :: specific__tan_r10\n+   real (kind=10) :: _gfortran_specific__tan_r10\n \n-   specific__tan_r10 = tan (parm)\n+   _gfortran_specific__tan_r10 = tan (parm)\n end function\n \n #endif"}, {"sha": "dcc7f8e8c096bbedd21f893b4c7caa9be1448c97", "filename": "libgfortran/generated/_tan_r16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_tan_r16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_tan_r16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_tan_r16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_16)\n #ifdef HAVE_TANL\n \n-elemental function specific__tan_r16 (parm)\n+elemental function _gfortran_specific__tan_r16 (parm)\n    real (kind=16), intent (in) :: parm\n-   real (kind=16) :: specific__tan_r16\n+   real (kind=16) :: _gfortran_specific__tan_r16\n \n-   specific__tan_r16 = tan (parm)\n+   _gfortran_specific__tan_r16 = tan (parm)\n end function\n \n #endif"}, {"sha": "638cc8da7507eb6b83e1b05e909d19b37d618314", "filename": "libgfortran/generated/_tan_r4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_tan_r4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_tan_r4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_tan_r4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_4)\n #ifdef HAVE_TANF\n \n-elemental function specific__tan_r4 (parm)\n+elemental function _gfortran_specific__tan_r4 (parm)\n    real (kind=4), intent (in) :: parm\n-   real (kind=4) :: specific__tan_r4\n+   real (kind=4) :: _gfortran_specific__tan_r4\n \n-   specific__tan_r4 = tan (parm)\n+   _gfortran_specific__tan_r4 = tan (parm)\n end function\n \n #endif"}, {"sha": "cea722506662a348495ac00dd597b46abc1129f5", "filename": "libgfortran/generated/_tan_r8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_tan_r8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_tan_r8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_tan_r8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_8)\n #ifdef HAVE_TAN\n \n-elemental function specific__tan_r8 (parm)\n+elemental function _gfortran_specific__tan_r8 (parm)\n    real (kind=8), intent (in) :: parm\n-   real (kind=8) :: specific__tan_r8\n+   real (kind=8) :: _gfortran_specific__tan_r8\n \n-   specific__tan_r8 = tan (parm)\n+   _gfortran_specific__tan_r8 = tan (parm)\n end function\n \n #endif"}, {"sha": "6994238888aff6ed93283a65a496ae1f880889ad", "filename": "libgfortran/generated/_tanh_r10.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_tanh_r10.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_tanh_r10.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_tanh_r10.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_10)\n #ifdef HAVE_TANHL\n \n-elemental function specific__tanh_r10 (parm)\n+elemental function _gfortran_specific__tanh_r10 (parm)\n    real (kind=10), intent (in) :: parm\n-   real (kind=10) :: specific__tanh_r10\n+   real (kind=10) :: _gfortran_specific__tanh_r10\n \n-   specific__tanh_r10 = tanh (parm)\n+   _gfortran_specific__tanh_r10 = tanh (parm)\n end function\n \n #endif"}, {"sha": "d7dca68070089380118e85bbc267605e12197bfa", "filename": "libgfortran/generated/_tanh_r16.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_tanh_r16.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_tanh_r16.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_tanh_r16.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_16)\n #ifdef HAVE_TANHL\n \n-elemental function specific__tanh_r16 (parm)\n+elemental function _gfortran_specific__tanh_r16 (parm)\n    real (kind=16), intent (in) :: parm\n-   real (kind=16) :: specific__tanh_r16\n+   real (kind=16) :: _gfortran_specific__tanh_r16\n \n-   specific__tanh_r16 = tanh (parm)\n+   _gfortran_specific__tanh_r16 = tanh (parm)\n end function\n \n #endif"}, {"sha": "098d9b86848b81a58ec875c28ccf9aae962059aa", "filename": "libgfortran/generated/_tanh_r4.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_tanh_r4.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_tanh_r4.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_tanh_r4.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_4)\n #ifdef HAVE_TANHF\n \n-elemental function specific__tanh_r4 (parm)\n+elemental function _gfortran_specific__tanh_r4 (parm)\n    real (kind=4), intent (in) :: parm\n-   real (kind=4) :: specific__tanh_r4\n+   real (kind=4) :: _gfortran_specific__tanh_r4\n \n-   specific__tanh_r4 = tanh (parm)\n+   _gfortran_specific__tanh_r4 = tanh (parm)\n end function\n \n #endif"}, {"sha": "ca7c7ccc71da02a4bcb45ace37353ede92bd0a1a", "filename": "libgfortran/generated/_tanh_r8.F90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_tanh_r8.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2F_tanh_r8.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2F_tanh_r8.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -40,11 +40,11 @@\n #if defined (HAVE_GFC_REAL_8)\n #ifdef HAVE_TANH\n \n-elemental function specific__tanh_r8 (parm)\n+elemental function _gfortran_specific__tanh_r8 (parm)\n    real (kind=8), intent (in) :: parm\n-   real (kind=8) :: specific__tanh_r8\n+   real (kind=8) :: _gfortran_specific__tanh_r8\n \n-   specific__tanh_r8 = tanh (parm)\n+   _gfortran_specific__tanh_r8 = tanh (parm)\n end function\n \n #endif"}, {"sha": "29e999f7651bec0ef188371e1f359e6806c2e7fd", "filename": "libgfortran/generated/misc_specifics.F90", "status": "modified", "additions": 63, "deletions": 63, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2Fmisc_specifics.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fgenerated%2Fmisc_specifics.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmisc_specifics.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -36,176 +36,176 @@\n \n \n #if defined (HAVE_GFC_REAL_4) && defined (HAVE_GFC_INTEGER_4)\n-elemental function specific__nint_4_4 (parm)\n+elemental function _gfortran_specific__nint_4_4 (parm)\n    real (kind=4) , intent (in) :: parm\n-   integer (kind=4) :: specific__nint_4_4\n-   specific__nint_4_4 = nint (parm)\n+   integer (kind=4) :: _gfortran_specific__nint_4_4\n+   _gfortran_specific__nint_4_4 = nint (parm)\n end function\n #endif\n \n #if defined (HAVE_GFC_REAL_8) && defined (HAVE_GFC_INTEGER_4)\n-elemental function specific__nint_4_8 (parm)\n+elemental function _gfortran_specific__nint_4_8 (parm)\n    real (kind=8) , intent (in) :: parm\n-   integer (kind=4) :: specific__nint_4_8\n-   specific__nint_4_8 = nint (parm)\n+   integer (kind=4) :: _gfortran_specific__nint_4_8\n+   _gfortran_specific__nint_4_8 = nint (parm)\n end function\n #endif\n \n #if defined (HAVE_GFC_REAL_10) && defined (HAVE_GFC_INTEGER_4)\n-elemental function specific__nint_4_10 (parm)\n+elemental function _gfortran_specific__nint_4_10 (parm)\n    real (kind=10) , intent (in) :: parm\n-   integer (kind=4) :: specific__nint_4_10\n-   specific__nint_4_10 = nint (parm)\n+   integer (kind=4) :: _gfortran_specific__nint_4_10\n+   _gfortran_specific__nint_4_10 = nint (parm)\n end function\n #endif\n \n #if defined (HAVE_GFC_REAL_16) && defined (HAVE_GFC_INTEGER_4)\n-elemental function specific__nint_4_16 (parm)\n+elemental function _gfortran_specific__nint_4_16 (parm)\n    real (kind=16) , intent (in) :: parm\n-   integer (kind=4) :: specific__nint_4_16\n-   specific__nint_4_16 = nint (parm)\n+   integer (kind=4) :: _gfortran_specific__nint_4_16\n+   _gfortran_specific__nint_4_16 = nint (parm)\n end function\n #endif\n \n #if defined (HAVE_GFC_REAL_4) && defined (HAVE_GFC_INTEGER_8)\n-elemental function specific__nint_8_4 (parm)\n+elemental function _gfortran_specific__nint_8_4 (parm)\n    real (kind=4) , intent (in) :: parm\n-   integer (kind=8) :: specific__nint_8_4\n-   specific__nint_8_4 = nint (parm)\n+   integer (kind=8) :: _gfortran_specific__nint_8_4\n+   _gfortran_specific__nint_8_4 = nint (parm)\n end function\n #endif\n \n #if defined (HAVE_GFC_REAL_8) && defined (HAVE_GFC_INTEGER_8)\n-elemental function specific__nint_8_8 (parm)\n+elemental function _gfortran_specific__nint_8_8 (parm)\n    real (kind=8) , intent (in) :: parm\n-   integer (kind=8) :: specific__nint_8_8\n-   specific__nint_8_8 = nint (parm)\n+   integer (kind=8) :: _gfortran_specific__nint_8_8\n+   _gfortran_specific__nint_8_8 = nint (parm)\n end function\n #endif\n \n #if defined (HAVE_GFC_REAL_10) && defined (HAVE_GFC_INTEGER_8)\n-elemental function specific__nint_8_10 (parm)\n+elemental function _gfortran_specific__nint_8_10 (parm)\n    real (kind=10) , intent (in) :: parm\n-   integer (kind=8) :: specific__nint_8_10\n-   specific__nint_8_10 = nint (parm)\n+   integer (kind=8) :: _gfortran_specific__nint_8_10\n+   _gfortran_specific__nint_8_10 = nint (parm)\n end function\n #endif\n \n #if defined (HAVE_GFC_REAL_16) && defined (HAVE_GFC_INTEGER_8)\n-elemental function specific__nint_8_16 (parm)\n+elemental function _gfortran_specific__nint_8_16 (parm)\n    real (kind=16) , intent (in) :: parm\n-   integer (kind=8) :: specific__nint_8_16\n-   specific__nint_8_16 = nint (parm)\n+   integer (kind=8) :: _gfortran_specific__nint_8_16\n+   _gfortran_specific__nint_8_16 = nint (parm)\n end function\n #endif\n \n #if defined (HAVE_GFC_REAL_4) && defined (HAVE_GFC_INTEGER_16)\n-elemental function specific__nint_16_4 (parm)\n+elemental function _gfortran_specific__nint_16_4 (parm)\n    real (kind=4) , intent (in) :: parm\n-   integer (kind=16) :: specific__nint_16_4\n-   specific__nint_16_4 = nint (parm)\n+   integer (kind=16) :: _gfortran_specific__nint_16_4\n+   _gfortran_specific__nint_16_4 = nint (parm)\n end function\n #endif\n \n #if defined (HAVE_GFC_REAL_8) && defined (HAVE_GFC_INTEGER_16)\n-elemental function specific__nint_16_8 (parm)\n+elemental function _gfortran_specific__nint_16_8 (parm)\n    real (kind=8) , intent (in) :: parm\n-   integer (kind=16) :: specific__nint_16_8\n-   specific__nint_16_8 = nint (parm)\n+   integer (kind=16) :: _gfortran_specific__nint_16_8\n+   _gfortran_specific__nint_16_8 = nint (parm)\n end function\n #endif\n \n #if defined (HAVE_GFC_REAL_10) && defined (HAVE_GFC_INTEGER_16)\n-elemental function specific__nint_16_10 (parm)\n+elemental function _gfortran_specific__nint_16_10 (parm)\n    real (kind=10) , intent (in) :: parm\n-   integer (kind=16) :: specific__nint_16_10\n-   specific__nint_16_10 = nint (parm)\n+   integer (kind=16) :: _gfortran_specific__nint_16_10\n+   _gfortran_specific__nint_16_10 = nint (parm)\n end function\n #endif\n \n #if defined (HAVE_GFC_REAL_16) && defined (HAVE_GFC_INTEGER_16)\n-elemental function specific__nint_16_16 (parm)\n+elemental function _gfortran_specific__nint_16_16 (parm)\n    real (kind=16) , intent (in) :: parm\n-   integer (kind=16) :: specific__nint_16_16\n-   specific__nint_16_16 = nint (parm)\n+   integer (kind=16) :: _gfortran_specific__nint_16_16\n+   _gfortran_specific__nint_16_16 = nint (parm)\n end function\n #endif\n \n \n \n #if defined (HAVE_GFC_INTEGER_4)\n-elemental function specific__char_1_i4 (parm)\n+elemental function _gfortran_specific__char_1_i4 (parm)\n    integer (kind=4) , intent (in) :: parm\n-   character (kind=1,len=1) :: specific__char_1_i4\n-   specific__char_1_i4 = char (parm, kind=1)\n+   character (kind=1,len=1) :: _gfortran_specific__char_1_i4\n+   _gfortran_specific__char_1_i4 = char (parm, kind=1)\n end function\n #endif\n \n #if defined (HAVE_GFC_INTEGER_8)\n-elemental function specific__char_1_i8 (parm)\n+elemental function _gfortran_specific__char_1_i8 (parm)\n    integer (kind=8) , intent (in) :: parm\n-   character (kind=1,len=1) :: specific__char_1_i8\n-   specific__char_1_i8 = char (parm, kind=1)\n+   character (kind=1,len=1) :: _gfortran_specific__char_1_i8\n+   _gfortran_specific__char_1_i8 = char (parm, kind=1)\n end function\n #endif\n \n #if defined (HAVE_GFC_INTEGER_16)\n-elemental function specific__char_1_i16 (parm)\n+elemental function _gfortran_specific__char_1_i16 (parm)\n    integer (kind=16) , intent (in) :: parm\n-   character (kind=1,len=1) :: specific__char_1_i16\n-   specific__char_1_i16 = char (parm, kind=1)\n+   character (kind=1,len=1) :: _gfortran_specific__char_1_i16\n+   _gfortran_specific__char_1_i16 = char (parm, kind=1)\n end function\n #endif\n \n \n \n #if defined (HAVE_GFC_INTEGER_4)\n-elemental function specific__len_1_i4 (parm)\n+elemental function _gfortran_specific__len_1_i4 (parm)\n    character (kind=1,len=*) , intent (in) :: parm\n-   integer (kind=4) :: specific__len_1_i4\n-   specific__len_1_i4 = len (parm)\n+   integer (kind=4) :: _gfortran_specific__len_1_i4\n+   _gfortran_specific__len_1_i4 = len (parm)\n end function\n #endif\n \n #if defined (HAVE_GFC_INTEGER_8)\n-elemental function specific__len_1_i8 (parm)\n+elemental function _gfortran_specific__len_1_i8 (parm)\n    character (kind=1,len=*) , intent (in) :: parm\n-   integer (kind=8) :: specific__len_1_i8\n-   specific__len_1_i8 = len (parm)\n+   integer (kind=8) :: _gfortran_specific__len_1_i8\n+   _gfortran_specific__len_1_i8 = len (parm)\n end function\n #endif\n \n #if defined (HAVE_GFC_INTEGER_16)\n-elemental function specific__len_1_i16 (parm)\n+elemental function _gfortran_specific__len_1_i16 (parm)\n    character (kind=1,len=*) , intent (in) :: parm\n-   integer (kind=16) :: specific__len_1_i16\n-   specific__len_1_i16 = len (parm)\n+   integer (kind=16) :: _gfortran_specific__len_1_i16\n+   _gfortran_specific__len_1_i16 = len (parm)\n end function\n #endif\n \n \n \n #if defined (HAVE_GFC_INTEGER_4)\n-elemental function specific__index_1_i4 (parm1, parm2)\n+elemental function _gfortran_specific__index_1_i4 (parm1, parm2)\n    character (kind=1,len=*) , intent (in) :: parm1, parm2\n-   integer (kind=4) :: specific__index_1_i4\n-   specific__index_1_i4 = index (parm1, parm2)\n+   integer (kind=4) :: _gfortran_specific__index_1_i4\n+   _gfortran_specific__index_1_i4 = index (parm1, parm2)\n end function\n #endif\n \n #if defined (HAVE_GFC_INTEGER_8)\n-elemental function specific__index_1_i8 (parm1, parm2)\n+elemental function _gfortran_specific__index_1_i8 (parm1, parm2)\n    character (kind=1,len=*) , intent (in) :: parm1, parm2\n-   integer (kind=8) :: specific__index_1_i8\n-   specific__index_1_i8 = index (parm1, parm2)\n+   integer (kind=8) :: _gfortran_specific__index_1_i8\n+   _gfortran_specific__index_1_i8 = index (parm1, parm2)\n end function\n #endif\n \n #if defined (HAVE_GFC_INTEGER_16)\n-elemental function specific__index_1_i16 (parm1, parm2)\n+elemental function _gfortran_specific__index_1_i16 (parm1, parm2)\n    character (kind=1,len=*) , intent (in) :: parm1, parm2\n-   integer (kind=16) :: specific__index_1_i16\n-   specific__index_1_i16 = index (parm1, parm2)\n+   integer (kind=16) :: _gfortran_specific__index_1_i16\n+   _gfortran_specific__index_1_i16 = index (parm1, parm2)\n end function\n #endif\n "}, {"sha": "44c63c41d56bd9cdcecc59b8f9ed62914c7797cf", "filename": "libgfortran/intrinsics/dprod_r8.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fintrinsics%2Fdprod_r8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fintrinsics%2Fdprod_r8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fdprod_r8.f90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -19,9 +19,9 @@\n !Boston, MA 02110-1301, USA.\n \n \n-elemental function specific__dprod_r8 (p1, p2)\n+elemental function _gfortran_specific__dprod_r8 (p1, p2)\n    real (kind=4), intent (in) :: p1, p2\n-   real (kind=8) :: specific__dprod_r8\n+   real (kind=8) :: _gfortran_specific__dprod_r8\n \n-   specific__dprod_r8 = dprod (p1, p2)\n+   _gfortran_specific__dprod_r8 = dprod (p1, p2)\n end function"}, {"sha": "85b539e291213c33428cb1e510b29fd71a58db27", "filename": "libgfortran/intrinsics/f2c_specifics.F90", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fintrinsics%2Ff2c_specifics.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fintrinsics%2Ff2c_specifics.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Ff2c_specifics.F90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -41,7 +41,7 @@\n \n ! one argument functions\n #define REAL_HEAD(NAME) \\\n-elemental function f2c_specific__/**/NAME/**/_r4 (parm) result(res);\n+elemental function _gfortran_f2c_specific__/**/NAME/**/_r4 (parm) result(res);\n \n #define REAL_BODY(NAME) \\\n   REAL, intent (in) :: parm; \\\n@@ -50,7 +50,7 @@ elemental function f2c_specific__/**/NAME/**/_r4 (parm) result(res);\n end function\n \n #define COMPLEX_HEAD(NAME) \\\n-subroutine f2c_specific__/**/NAME/**/_c4 (res, parm);\n+subroutine _gfortran_f2c_specific__/**/NAME/**/_c4 (res, parm);\n \n #define COMPLEX_BODY(NAME) \\\n   COMPLEX, intent (in) :: parm; \\\n@@ -59,7 +59,7 @@ subroutine f2c_specific__/**/NAME/**/_c4 (res, parm);\n end subroutine\n \n #define DCOMPLEX_HEAD(NAME) \\\n-subroutine f2c_specific__/**/NAME/**/_c8 (res, parm);\n+subroutine _gfortran_f2c_specific__/**/NAME/**/_c8 (res, parm);\n \n #define DCOMPLEX_BODY(NAME) \\\n   DOUBLE COMPLEX, intent (in) :: parm; \\\n@@ -71,24 +71,24 @@ subroutine f2c_specific__/**/NAME/**/_c8 (res, parm);\n REAL_BODY(abs)\n \n ! abs is special in that the result is real\n-elemental function f2c_specific__abs_c4 (parm) result (res)\n+elemental function _gfortran_f2c_specific__abs_c4 (parm) result (res)\n   COMPLEX, intent(in) :: parm\n   DOUBLE PRECISION :: res\n   res = abs(parm)\n end function\n \n \n ! aimag is special in that the result is real\n-elemental function f2c_specific__aimag_c4 (parm)\n+elemental function _gfortran_f2c_specific__aimag_c4 (parm)\n   complex(kind=4), intent(in) :: parm\n-  double precision :: f2c_specific__aimag_c4\n-  f2c_specific__aimag_c4 = aimag(parm)\n+  double precision :: _gfortran_f2c_specific__aimag_c4\n+  _gfortran_f2c_specific__aimag_c4 = aimag(parm)\n end function\n \n-elemental function f2c_specific__aimag_c8 (parm)\n+elemental function _gfortran_f2c_specific__aimag_c8 (parm)\n   complex(kind=8), intent(in) :: parm\n-  double precision :: f2c_specific__aimag_c8\n-  f2c_specific__aimag_c8 = aimag(parm)\n+  double precision :: _gfortran_f2c_specific__aimag_c8\n+  _gfortran_f2c_specific__aimag_c8 = aimag(parm)\n end function\n \n \n@@ -168,7 +168,7 @@ elemental function f2c_specific__aimag_c8 (parm)\n \n ! two argument functions\n #define REAL2_HEAD(NAME) \\\n-elemental function f2c_specific__/**/NAME/**/_r4 (p1, p2) result(res);\n+elemental function _gfortran_f2c_specific__/**/NAME/**/_r4 (p1, p2) result(res);\n \n #define REAL2_BODY(NAME) \\\n   REAL, intent (in) :: p1, p2; \\\n@@ -189,12 +189,12 @@ elemental function f2c_specific__/**/NAME/**/_r4 (p1, p2) result(res);\n REAL2_BODY(mod)\n \n ! conjg is special-cased because it is not suffixed _c4 but _4\n-subroutine f2c_specific__conjg_4 (res, parm)\n+subroutine _gfortran_f2c_specific__conjg_4 (res, parm)\n   COMPLEX, intent (in) :: parm\n   COMPLEX, intent (out) :: res\n   res = conjg (parm)\n end subroutine\n-subroutine f2c_specific__conjg_8 (res, parm)\n+subroutine _gfortran_f2c_specific__conjg_8 (res, parm)\n   DOUBLE COMPLEX, intent (in) :: parm\n   DOUBLE COMPLEX, intent (out) :: res\n   res = conjg (parm)"}, {"sha": "bcb6759e769a9d877c2dcd6c0b37a2be964ba948", "filename": "libgfortran/intrinsics/selected_int_kind.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fintrinsics%2Fselected_int_kind.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fintrinsics%2Fselected_int_kind.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fselected_int_kind.f90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -19,10 +19,10 @@\n !Boston, MA 02110-1301, USA.\n !\n \n-function selected_int_kind (r)\n+function _gfortran_selected_int_kind (r)\n   implicit none\n   integer, intent (in) :: r\n-  integer :: selected_int_kind\n+  integer :: _gfortran_selected_int_kind\n   integer :: i\n   ! Integer kind_range table\n   type :: int_info\n@@ -34,10 +34,10 @@ function selected_int_kind (r)\n \n   do i = 1, c\n     if (r <= int_infos (i) % range) then\n-      selected_int_kind = int_infos (i) % kind\n+      _gfortran_selected_int_kind = int_infos (i) % kind\n       return\n     end if\n   end do\n-  selected_int_kind = -1\n+  _gfortran_selected_int_kind = -1\n   return\n end function"}, {"sha": "2ace5c0c4d20c203077fb70ef754c3a871e6cdea", "filename": "libgfortran/intrinsics/selected_real_kind.f90", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fintrinsics%2Fselected_real_kind.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fintrinsics%2Fselected_real_kind.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fselected_real_kind.f90?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -19,10 +19,10 @@\n !Boston, MA 02110-1301, USA.\n !\n \n-function selected_real_kind (p, r)\n+function _gfortran_selected_real_kind (p, r)\n   implicit none\n   integer, optional, intent (in) :: p, r\n-  integer :: selected_real_kind\n+  integer :: _gfortran_selected_real_kind\n   integer :: i, p2, r2\n   logical :: found_p, found_r\n   ! Real kind_precision_range table\n@@ -34,7 +34,7 @@ function selected_real_kind (p, r)\n \n   include \"selected_real_kind.inc\"\n \n-  selected_real_kind = 0\n+  _gfortran_selected_real_kind = 0\n   p2 = 0\n   r2 = 0\n   found_p = .false.\n@@ -49,13 +49,13 @@ function selected_real_kind (p, r)\n     if (p2 <= real_infos (i) % precision) found_p = .true.\n     if (r2 <= real_infos (i) % range) found_r = .true.\n     if (found_p .and. found_r) then\n-      selected_real_kind = real_infos (i) % kind\n+      _gfortran_selected_real_kind = real_infos (i) % kind\n       return\n     end if\n   end do\n \n-  if (.not. (found_p)) selected_real_kind = selected_real_kind - 1\n-  if (.not. (found_r)) selected_real_kind = selected_real_kind - 2\n+  if (.not. (found_p)) _gfortran_selected_real_kind = _gfortran_selected_real_kind - 1\n+  if (.not. (found_r)) _gfortran_selected_real_kind = _gfortran_selected_real_kind - 2\n \n   return\n end function"}, {"sha": "3e40bf01784a17a0175c5eb734e9820aadb242a6", "filename": "libgfortran/m4/misc_specifics.m4", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fm4%2Fmisc_specifics.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fm4%2Fmisc_specifics.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fmisc_specifics.m4?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -22,43 +22,43 @@ divert\n dnl   NINT specifics\n foreach(`ikind', `(4, 8, 16)', `foreach(`rkind', `(4, 8, 10, 16)', `\n `#if defined (HAVE_GFC_REAL_'rkind`) && defined (HAVE_GFC_INTEGER_'ikind`)'\n-elemental function specific__nint_`'ikind`_'rkind (parm)\n+elemental function _gfortran_specific__nint_`'ikind`_'rkind (parm)\n    real (kind=rkind) , intent (in) :: parm\n-   integer (kind=ikind) :: specific__nint_`'ikind`_'rkind\n-   specific__nint_`'ikind`_'rkind = nint (parm)\n+   integer (kind=ikind) :: _gfortran_specific__nint_`'ikind`_'rkind\n+   _gfortran_specific__nint_`'ikind`_'rkind = nint (parm)\n end function\n #endif\n ')')\n \n dnl   CHAR specifics\n foreach(`ckind', `(1)', `foreach(`ikind', `(4, 8, 16)', `\n `#if defined (HAVE_GFC_INTEGER_'ikind`)'\n-elemental function specific__char_`'ckind`_i'ikind (parm)\n+elemental function _gfortran_specific__char_`'ckind`_i'ikind (parm)\n    integer (kind=ikind) , intent (in) :: parm\n-   character (kind=ckind,len=1) :: specific__char_`'ckind`_i'ikind\n-   specific__char_`'ckind`_i'ikind` = char (parm, kind='ckind`)'\n+   character (kind=ckind,len=1) :: _gfortran_specific__char_`'ckind`_i'ikind\n+   _gfortran_specific__char_`'ckind`_i'ikind` = char (parm, kind='ckind`)'\n end function\n #endif\n ')')\n \n dnl   LEN specifics\n foreach(`ckind', `(1)', `foreach(`ikind', `(4, 8, 16)', `\n `#if defined (HAVE_GFC_INTEGER_'ikind`)'\n-elemental function specific__len_`'ckind`_i'ikind (parm)\n+elemental function _gfortran_specific__len_`'ckind`_i'ikind (parm)\n    character (kind=ckind,len=*) , intent (in) :: parm\n-   integer (kind=ikind) :: specific__len_`'ckind`_i'ikind\n-   specific__len_`'ckind`_i'ikind` = len (parm)'\n+   integer (kind=ikind) :: _gfortran_specific__len_`'ckind`_i'ikind\n+   _gfortran_specific__len_`'ckind`_i'ikind` = len (parm)'\n end function\n #endif\n ')')\n \n dnl   INDEX specifics\n foreach(`ckind', `(1)', `foreach(`ikind', `(4, 8, 16)', `\n `#if defined (HAVE_GFC_INTEGER_'ikind`)'\n-elemental function specific__index_`'ckind`_i'ikind (parm1, parm2)\n+elemental function _gfortran_specific__index_`'ckind`_i'ikind (parm1, parm2)\n    character (kind=ckind,len=*) , intent (in) :: parm1, parm2\n-   integer (kind=ikind) :: specific__index_`'ckind`_i'ikind\n-   specific__index_`'ckind`_i'ikind` = index (parm1, parm2)'\n+   integer (kind=ikind) :: _gfortran_specific__index_`'ckind`_i'ikind\n+   _gfortran_specific__index_`'ckind`_i'ikind` = index (parm1, parm2)'\n end function\n #endif\n ')')"}, {"sha": "ebc89839ad48a3ac2c274f8f7f33471ba337d51d", "filename": "libgfortran/m4/specific.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fm4%2Fspecific.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fm4%2Fspecific.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fspecific.m4?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -7,7 +7,7 @@ define(get_typename, `get_typename2(ifelse($1,i,integer,ifelse($1,r,real,ifelse(\n define(atype_name, get_typename(atype_letter,atype_kind))dnl\n define(name, regexp(regexp(file, `[^/]*$', `\\&'), `^_\\([^_]*\\)_', `\\1'))dnl\n define(rtype_name,get_typename(ifelse(name,abs,ifelse(atype_letter,c,r,atype_letter),ifelse(name,aimag,ifelse(atype_letter,c,r,atype_letter),atype_letter)),atype_kind))dnl\n-define(function_name,ifelse(name,conjg,`specific__conjg_'atype_kind,`specific__'name`_'atype_code))dnl\n+define(function_name,ifelse(name,conjg,`_gfortran_specific__conjg_'atype_kind,`_gfortran_specific__'name`_'atype_code))dnl\n \n define(type,ifelse(atype_letter,l,LOGICAL,ifelse(atype_letter,i,INTEGER,ifelse(atype_letter,r,REAL,ifelse(atype_letter,c,COMPLEX,UNKNOW)))))dnl\n define(Q,ifelse(atype_kind,4,F,ifelse(atype_kind,8,`',ifelse(atype_kind,10,L,ifelse(atype_kind,16,L,`_'atype_kind)))))dnl"}, {"sha": "d05e8db1435a621858ab393d41735a525a91b98c", "filename": "libgfortran/m4/specific2.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fm4%2Fspecific2.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6472bcede51c6d029a60fe644f50c982d689c53/libgfortran%2Fm4%2Fspecific2.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fspecific2.m4?ref=e6472bcede51c6d029a60fe644f50c982d689c53", "patch": "@@ -6,7 +6,7 @@ define(get_typename2, `$1 (kind=$2)')dnl\n define(get_typename, `get_typename2(ifelse($1,i,integer,ifelse($1,r,real,ifelse($1,l,logical,ifelse($1,c,complex,unknown)))),`$2')')dnl\n define(atype_name, get_typename(atype_letter,atype_kind))dnl\n define(name, regexp(regexp(file, `[^/]*$', `\\&'), `^_\\([^_]*\\)_', `\\1'))dnl\n-define(function_name,`specific__'name`_'atype_code)dnl\n+define(function_name,`_gfortran_specific__'name`_'atype_code)dnl\n \n define(Q,ifelse(atype_kind,4,F,ifelse(atype_kind,8,`',ifelse(atype_kind,10,L,ifelse(atype_kind,16,L,`_'atype_kind)))))dnl\n "}]}