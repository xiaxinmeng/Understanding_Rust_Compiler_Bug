{"sha": "c1f04022896376e32313b7b1763ed3baa5fab8e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFmMDQwMjI4OTYzNzZlMzIzMTNiN2IxNzYzZWQzYmFhNWZhYjhlOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-26T22:29:57Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-26T22:29:57Z"}, "message": "Add prototypes for static functions.\n\n(choose_hard_reg_mode): Add missing parameters declaration.\n\nFrom-SVN: r3886", "tree": {"sha": "9e2be2316ae3e4b1cd2ebafb2b59b923433bc30c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e2be2316ae3e4b1cd2ebafb2b59b923433bc30c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1f04022896376e32313b7b1763ed3baa5fab8e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1f04022896376e32313b7b1763ed3baa5fab8e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1f04022896376e32313b7b1763ed3baa5fab8e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1f04022896376e32313b7b1763ed3baa5fab8e9/comments", "author": null, "committer": null, "parents": [{"sha": "5aa58c13dd1ef37084ebb2766c706bfadba67414", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5aa58c13dd1ef37084ebb2766c706bfadba67414", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5aa58c13dd1ef37084ebb2766c706bfadba67414"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "db49610e370a6fbf3b3d263caf8f98bc52d31c23", "filename": "gcc/caller-save.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1f04022896376e32313b7b1763ed3baa5fab8e9/gcc%2Fcaller-save.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1f04022896376e32313b7b1763ed3baa5fab8e9/gcc%2Fcaller-save.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcaller-save.c?ref=c1f04022896376e32313b7b1763ed3baa5fab8e9", "patch": "@@ -69,17 +69,20 @@ static HARD_REG_SET hard_regs_need_restore;\n \n int n_regs_saved;\n \n-static void set_reg_live ();\n-static void clear_reg_live ();\n-static void restore_referenced_regs ();\n-static int insert_save_restore ();\n+static enum machine_mode choose_hard_reg_mode PROTO((int, int));\n+static void set_reg_live\t\tPROTO((rtx, rtx));\n+static void clear_reg_live\t\tPROTO((rtx));\n+static void restore_referenced_regs\tPROTO((rtx, rtx, enum machine_mode));\n+static int insert_save_restore\t\tPROTO((rtx, int, int,\n+\t\t\t\t\t       enum machine_mode, int));\n \f\n /* Return a machine mode that is legitimate for hard reg REGNO and large\n    enough to save nregs.  If we can't find one, return VOIDmode.  */\n \n static enum machine_mode\n choose_hard_reg_mode (regno, nregs)\n      int regno;\n+     int nregs;\n {\n   enum machine_mode found_mode = VOIDmode, mode;\n "}]}