{"sha": "7dcc5966f0e739470271e5abaf890ae5d303a4dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2RjYzU5NjZmMGU3Mzk0NzAyNzFlNWFiYWY4OTBhZTVkMzAzYTRkYw==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2001-09-05T19:32:57Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2001-09-05T19:32:57Z"}, "message": "From Eric Blake, via Classpath:\n\n\t* java/lang/String.java (CaseInsensitiveComparator): New class.\n\t(CASE_INSENSITIVE_ORDER): Use instance of CaseInsensitiveComparator.\n\nFrom-SVN: r45425", "tree": {"sha": "a542ad80059a7f989df6daa2b8a9dfb4488f5f4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a542ad80059a7f989df6daa2b8a9dfb4488f5f4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7dcc5966f0e739470271e5abaf890ae5d303a4dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dcc5966f0e739470271e5abaf890ae5d303a4dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dcc5966f0e739470271e5abaf890ae5d303a4dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dcc5966f0e739470271e5abaf890ae5d303a4dc/comments", "author": null, "committer": null, "parents": [{"sha": "666b0481c3a8e10c6f856c6000c6825962731430", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/666b0481c3a8e10c6f856c6000c6825962731430", "html_url": "https://github.com/Rust-GCC/gccrs/commit/666b0481c3a8e10c6f856c6000c6825962731430"}], "stats": {"total": 47, "additions": 41, "deletions": 6}, "files": [{"sha": "fb2d75d58422067704447e79e93712809a465df8", "filename": "libjava/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dcc5966f0e739470271e5abaf890ae5d303a4dc/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dcc5966f0e739470271e5abaf890ae5d303a4dc/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=7dcc5966f0e739470271e5abaf890ae5d303a4dc", "patch": "@@ -1,5 +1,9 @@\n 2001-09-05  Tom Tromey  <tromey@redhat.com>\n \n+\tFrom Eric Blake, via Classpath:\n+\t* java/lang/String.java (CaseInsensitiveComparator): New class.\n+\t(CASE_INSENSITIVE_ORDER): Use instance of CaseInsensitiveComparator.\n+\n \t* java/util/Date.java: Re-merged with Classpath.\n \n \t* java/text/DateFormatSymbols.java: Re-merged with Classpath."}, {"sha": "bed3171fb22d2e5017fcec2c77e50027d58744b1", "filename": "libjava/java/lang/String.java", "status": "modified", "additions": 37, "deletions": 6, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7dcc5966f0e739470271e5abaf890ae5d303a4dc/libjava%2Fjava%2Flang%2FString.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7dcc5966f0e739470271e5abaf890ae5d303a4dc/libjava%2Fjava%2Flang%2FString.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FString.java?ref=7dcc5966f0e739470271e5abaf890ae5d303a4dc", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 1998, 1999, 2000  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2001  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -32,13 +32,44 @@ public final class String implements Serializable, Comparable\n   // but it will avoid showing up as a discrepancy when comparing SUIDs.\n   private static final long serialVersionUID = -6849794470754667710L;\n \n-  public static final Comparator CASE_INSENSITIVE_ORDER = new Comparator()\n-  {\n-    public int compare (Object o1, Object o2)\n+  /**\n+   * An implementation for {@link CASE_INSENSITIVE_ORDER}.\n+   * This must be {@link Serializable}.\n+   */\n+  private static final class CaseInsensitiveComparator\n+    implements Comparator, Serializable\n+  {\n+    /**\n+     * The default private constructor generates unnecessary overhead\n+     */\n+    CaseInsensitiveComparator() {}\n+\n+    /**\n+     * Compares two Strings, using\n+     * <code>String.compareToIgnoreCase(String)</code>.\n+     * \n+     * @param o1 the first string\n+     * @param o2 the second string\n+     * @return &lt; 0, 0, or &gt; 0 depending on the case-insensitive\n+     *         comparison of the two strings.\n+     * @throws NullPointerException if either argument is null\n+     * @throws ClassCastException if either argument is not a String\n+     * @see #compareToIgnoreCase(String)\n+     */\n+    public int compare(Object o1, Object o2)\n     {\n-      return ((String) o1).compareToIgnoreCase ((String) o2);\n+      return ((String) o1).compareToIgnoreCase((String) o2);\n     }\n-  };\n+  }\n+\n+  /**\n+   * A Comparator that uses <code>String.compareToIgnoreCase(String)</code>.\n+   * This comparator is {@link Serializable}.\n+   *\n+   * @since 1.2\n+   */\n+  public static final Comparator CASE_INSENSITIVE_ORDER\n+    = new CaseInsensitiveComparator();\n \n   public String ()\n   {"}]}