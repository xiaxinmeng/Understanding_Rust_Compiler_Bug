{"sha": "cbfb21c1c1e1b9d012f4d67838a88a94b5fb5e24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JmYjIxYzFjMWUxYjlkMDEyZjRkNjc4MzhhODhhOTRiNWZiNWUyNA==", "commit": {"author": {"name": "Steven Bosscher", "email": "stevenb.gcc@gmail.com", "date": "2008-02-28T15:39:33Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-02-28T15:39:33Z"}, "message": "tree-ssa-sccvn (vn_ssa_aux_obstack): New obstack.\n\n2008-02-28  Steven Bosscher  <stevenb.gcc@gmail.com>\n\n\t* tree-ssa-sccvn (vn_ssa_aux_obstack): New obstack.\n\t(VN_INFO_GET): Allocate new objects on the obstack.\n\t(init_scc_vn): Initialize the obstack.  Use XDELETE instead of free\n\tfor rpo_numbers_temp, for consistency.\n\t(free_scc_vn): Free the obstack.\n\nFrom-SVN: r132750", "tree": {"sha": "ab13083680af80bace066bcfda16d904f9c494b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab13083680af80bace066bcfda16d904f9c494b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbfb21c1c1e1b9d012f4d67838a88a94b5fb5e24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbfb21c1c1e1b9d012f4d67838a88a94b5fb5e24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbfb21c1c1e1b9d012f4d67838a88a94b5fb5e24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbfb21c1c1e1b9d012f4d67838a88a94b5fb5e24/comments", "author": null, "committer": null, "parents": [{"sha": "dea61d92828ce08a91a19523d3cc2eaf29b76acf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dea61d92828ce08a91a19523d3cc2eaf29b76acf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dea61d92828ce08a91a19523d3cc2eaf29b76acf"}], "stats": {"total": 41, "additions": 28, "deletions": 13}, "files": [{"sha": "8fd03aeb7451c0bb5c7f85631f0db8c83b32e2c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbfb21c1c1e1b9d012f4d67838a88a94b5fb5e24/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbfb21c1c1e1b9d012f4d67838a88a94b5fb5e24/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cbfb21c1c1e1b9d012f4d67838a88a94b5fb5e24", "patch": "@@ -1,3 +1,11 @@\n+2008-02-28  Steven Bosscher  <stevenb.gcc@gmail.com>\n+\n+\t* tree-ssa-sccvn (vn_ssa_aux_obstack): New obstack.\n+\t(VN_INFO_GET): Allocate new objects on the obstack.\n+\t(init_scc_vn): Initialize the obstack.  Use XDELETE instead of free\n+\tfor rpo_numbers_temp, for consistency.\n+\t(free_scc_vn): Free the obstack.\n+\n 2008-02-28  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* doc/invoke.texi: Document -ftree-loop-distribution."}, {"sha": "2030a81c438d45ec041568435ffe0eb3a43dfde9", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 20, "deletions": 13, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbfb21c1c1e1b9d012f4d67838a88a94b5fb5e24/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbfb21c1c1e1b9d012f4d67838a88a94b5fb5e24/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=cbfb21c1c1e1b9d012f4d67838a88a94b5fb5e24", "patch": "@@ -241,9 +241,12 @@ static VEC (tree, heap) *sccstack;\n DEF_VEC_P(vn_ssa_aux_t);\n DEF_VEC_ALLOC_P(vn_ssa_aux_t, heap);\n \n-/* Table of vn_ssa_aux_t's, one per ssa_name.  */\n+/* Table of vn_ssa_aux_t's, one per ssa_name.  The vn_ssa_aux_t objects\n+   are allocated on an obstack for locality reasons, and to free them\n+   without looping over the VEC.  */\n \n static VEC (vn_ssa_aux_t, heap) *vn_ssa_aux_table;\n+static struct obstack vn_ssa_aux_obstack;\n \n /* Return the value numbering information for a given SSA name.  */\n \n@@ -264,13 +267,16 @@ VN_INFO_SET (tree name, vn_ssa_aux_t value)\n \t       SSA_NAME_VERSION (name), value);\n }\n \n-/* Get the value numbering info for a given SSA name, creating it if\n-   it does not exist.  */\n+/* Initialize the value numbering info for a given SSA name.\n+   This should be called just once for every SSA name.  */\n \n vn_ssa_aux_t\n VN_INFO_GET (tree name)\n {\n-  vn_ssa_aux_t newinfo = XCNEW (struct vn_ssa_aux);\n+  vn_ssa_aux_t newinfo;\n+\n+  newinfo = obstack_alloc (&vn_ssa_aux_obstack, sizeof (struct vn_ssa_aux));\n+  memset (newinfo, 0, sizeof (struct vn_ssa_aux));\n   if (SSA_NAME_VERSION (name) >= VEC_length (vn_ssa_aux_t, vn_ssa_aux_table))\n     VEC_safe_grow (vn_ssa_aux_t, heap, vn_ssa_aux_table,\n \t\t   SSA_NAME_VERSION (name) + 1);\n@@ -2007,6 +2013,8 @@ init_scc_vn (void)\n   /* VEC_alloc doesn't actually grow it to the right size, it just\n      preallocates the space to do so.  */\n   VEC_safe_grow (vn_ssa_aux_t, heap, vn_ssa_aux_table, num_ssa_names + 1);\n+  gcc_obstack_init (&vn_ssa_aux_obstack);\n+\n   shared_lookup_phiargs = NULL;\n   shared_lookup_vops = NULL;\n   shared_lookup_references = NULL;\n@@ -2020,7 +2028,7 @@ init_scc_vn (void)\n   for (j = 0; j < n_basic_blocks - NUM_FIXED_BLOCKS; j++)\n     rpo_numbers[rpo_numbers_temp[j]] = j;\n \n-  free (rpo_numbers_temp);\n+  XDELETE (rpo_numbers_temp);\n \n   VN_TOP = create_tmp_var_raw (void_type_node, \"vn_top\");\n \n@@ -2071,19 +2079,18 @@ free_scc_vn (void)\n   VEC_free (tree, gc, shared_lookup_vops);\n   VEC_free (vn_reference_op_s, heap, shared_lookup_references);\n   XDELETEVEC (rpo_numbers);\n+\n   for (i = 0; i < num_ssa_names; i++)\n     {\n       tree name = ssa_name (i);\n-      if (name)\n-\t{\n-\t  XDELETE (VN_INFO (name));\n-\t  if (SSA_NAME_VALUE (name) &&\n-\t      TREE_CODE (SSA_NAME_VALUE (name)) == VALUE_HANDLE)\n-\t    SSA_NAME_VALUE (name) = NULL;\n-\t}\n+      if (name\n+\t  && SSA_NAME_VALUE (name)\n+\t  && TREE_CODE (SSA_NAME_VALUE (name)) == VALUE_HANDLE)\n+\tSSA_NAME_VALUE (name) = NULL;\n     }\n-\n+  obstack_free (&vn_ssa_aux_obstack, NULL);\n   VEC_free (vn_ssa_aux_t, heap, vn_ssa_aux_table);\n+\n   VEC_free (tree, heap, sccstack);\n   free_vn_table (valid_info);\n   XDELETE (valid_info);"}]}