{"sha": "308173e30bff3cb179f75fdf4b96310482dc6846", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA4MTczZTMwYmZmM2NiMTc5Zjc1ZmRmNGI5NjMxMDQ4MmRjNjg0Ng==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-04-07T08:38:23Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-04-07T08:38:23Z"}, "message": "re PR c++/60750 (double free after std::move on string inside throw when compiled with optimization)\n\n2014-04-07  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/60750\n\t* tree-ssa-operands.c (maybe_add_call_vops): Also add VDEFs\n\tfor noreturn calls.\n\t* tree-cfgcleanup.c (fixup_noreturn_call): Do not remove VDEFs.\n\n\t* g++.dg/torture/pr60750.C: New testcase.\n\t* gcc.dg/tree-ssa/20040517-1.c: Adjust.\n\nFrom-SVN: r209179", "tree": {"sha": "c873482c24ce3a1ea1806d1b868c0d6d7ce57885", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c873482c24ce3a1ea1806d1b868c0d6d7ce57885"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/308173e30bff3cb179f75fdf4b96310482dc6846", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/308173e30bff3cb179f75fdf4b96310482dc6846", "html_url": "https://github.com/Rust-GCC/gccrs/commit/308173e30bff3cb179f75fdf4b96310482dc6846", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/308173e30bff3cb179f75fdf4b96310482dc6846/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f2e9b72b1a987adc31f0c0f56c7e2610de60fc43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2e9b72b1a987adc31f0c0f56c7e2610de60fc43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2e9b72b1a987adc31f0c0f56c7e2610de60fc43"}], "stats": {"total": 48, "additions": 39, "deletions": 9}, "files": [{"sha": "91ec83b058c4540e9ea95b08878e50b15cebafbd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308173e30bff3cb179f75fdf4b96310482dc6846/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308173e30bff3cb179f75fdf4b96310482dc6846/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=308173e30bff3cb179f75fdf4b96310482dc6846", "patch": "@@ -1,3 +1,10 @@\n+2014-04-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/60750\n+\t* tree-ssa-operands.c (maybe_add_call_vops): Also add VDEFs\n+\tfor noreturn calls.\n+\t* tree-cfgcleanup.c (fixup_noreturn_call): Do not remove VDEFs.\n+\n 2014-04-06  John David Anglin  <danglin@gcc.gnu.org>\n \n \tPR debug/55794"}, {"sha": "a7c7c78cbc88018e5ff0e2d17ff0477aa2d7a4f3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308173e30bff3cb179f75fdf4b96310482dc6846/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308173e30bff3cb179f75fdf4b96310482dc6846/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=308173e30bff3cb179f75fdf4b96310482dc6846", "patch": "@@ -1,3 +1,9 @@\n+2014-04-07  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/60750\n+\t* g++.dg/torture/pr60750.C: New testcase.\n+\t* gcc.dg/tree-ssa/20040517-1.c: Adjust.\n+\n 2014-04-06  Andreas Schwab  <schwab@linux-m68k.org>\n \n \t* gcc.c-torture/compile/pr60655-1.c: Use __SIZE_TYPE__ for size_t."}, {"sha": "a344bd764a336ff0c61a9cf481008d0792f4f7ad", "filename": "gcc/testsuite/g++.dg/torture/pr60750.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308173e30bff3cb179f75fdf4b96310482dc6846/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr60750.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308173e30bff3cb179f75fdf4b96310482dc6846/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr60750.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr60750.C?ref=308173e30bff3cb179f75fdf4b96310482dc6846", "patch": "@@ -0,0 +1,21 @@\n+// { dg-do run }\n+// { dg-options \"-std=c++11\" }\n+\n+#include <string>\n+#include <stdexcept>\n+\n+const std::string err_prefix = \"Problem: \";\n+void thrower (std::string msg)\n+{\n+  throw std::runtime_error(err_prefix + std::move(msg));\n+}\n+\n+int main(int argc, char **argv)\n+{\n+  try {\n+      std::string base = \"hello\";\n+      thrower(std::move(base));\n+  } catch (const std::runtime_error &e) {\n+  }\n+  return 0;\n+}"}, {"sha": "b49cf648c7d1fa6cb0fcaf370756a168caa8dcd7", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040517-1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308173e30bff3cb179f75fdf4b96310482dc6846/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040517-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308173e30bff3cb179f75fdf4b96310482dc6846/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040517-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040517-1.c?ref=308173e30bff3cb179f75fdf4b96310482dc6846", "patch": "@@ -16,6 +16,7 @@ void bar (void)\n /* We used to treat malloc functions like pure and const functions, but\n    malloc functions may clobber global memory.  Only the function result\n    does not alias any other pointer.\n-   Hence, we must have a VDEF for a before and after the call to foo().  */\n-/* { dg-final { scan-tree-dump-times \"VDEF\" 2 \"alias\"} } */\n+   Hence, we must have a VDEF for a before and after the call to foo().\n+   And one after the call to abort().  */\n+/* { dg-final { scan-tree-dump-times \"VDEF\" 3 \"alias\"} } */\n /* { dg-final { cleanup-tree-dump \"alias\" } } */"}, {"sha": "b7882cf67625648dc70d34177483f0bff616130b", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308173e30bff3cb179f75fdf4b96310482dc6846/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308173e30bff3cb179f75fdf4b96310482dc6846/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=308173e30bff3cb179f75fdf4b96310482dc6846", "patch": "@@ -586,9 +586,6 @@ fixup_noreturn_call (gimple stmt)\n       update_stmt (stmt);\n       changed = true;\n     }\n-  /* Similarly remove VDEF if there is any.  */\n-  else if (gimple_vdef (stmt))\n-    update_stmt (stmt);\n   return changed;\n }\n "}, {"sha": "c525fe579ea2108a167a74a39ddff0562e494041", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/308173e30bff3cb179f75fdf4b96310482dc6846/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/308173e30bff3cb179f75fdf4b96310482dc6846/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=308173e30bff3cb179f75fdf4b96310482dc6846", "patch": "@@ -648,10 +648,8 @@ maybe_add_call_vops (struct function *fn, gimple stmt)\n      call-clobbered.  */\n   if (!(call_flags & ECF_NOVOPS))\n     {\n-      /* A 'pure' or a 'const' function never call-clobbers anything.\n-\t A 'noreturn' function might, but since we don't return anyway\n-\t there is no point in recording that.  */\n-      if (!(call_flags & (ECF_PURE | ECF_CONST | ECF_NORETURN)))\n+      /* A 'pure' or a 'const' function never call-clobbers anything.  */\n+      if (!(call_flags & (ECF_PURE | ECF_CONST)))\n \tadd_virtual_operand (fn, stmt, opf_def);\n       else if (!(call_flags & ECF_CONST))\n \tadd_virtual_operand (fn, stmt, opf_use);"}]}