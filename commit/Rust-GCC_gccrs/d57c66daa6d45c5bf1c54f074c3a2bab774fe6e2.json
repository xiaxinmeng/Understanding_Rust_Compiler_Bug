{"sha": "d57c66daa6d45c5bf1c54f074c3a2bab774fe6e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU3YzY2ZGFhNmQ0NWM1YmYxYzU0ZjA3NGMzYTJiYWI3NzRmZTZlMg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-07-07T22:04:52Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-07-07T22:04:52Z"}, "message": "(convert_to_mode): Move misplaced parentheses.\n\nFrom-SVN: r4878", "tree": {"sha": "e98daa4326329cddcda279700a54b743a3792a9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e98daa4326329cddcda279700a54b743a3792a9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d57c66daa6d45c5bf1c54f074c3a2bab774fe6e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d57c66daa6d45c5bf1c54f074c3a2bab774fe6e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d57c66daa6d45c5bf1c54f074c3a2bab774fe6e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d57c66daa6d45c5bf1c54f074c3a2bab774fe6e2/comments", "author": null, "committer": null, "parents": [{"sha": "34785d0514897765d254fe7683089c0fc2252278", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34785d0514897765d254fe7683089c0fc2252278", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34785d0514897765d254fe7683089c0fc2252278"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "965eabc2c762837e5a4bdba9853178b5729e727a", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d57c66daa6d45c5bf1c54f074c3a2bab774fe6e2/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d57c66daa6d45c5bf1c54f074c3a2bab774fe6e2/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=d57c66daa6d45c5bf1c54f074c3a2bab774fe6e2", "patch": "@@ -1111,8 +1111,8 @@ convert_to_mode (mode, x, unsignedp)\n \t  && GET_MODE_CLASS (GET_MODE (x)) == MODE_INT\n \t  && (GET_CODE (x) == CONST_DOUBLE\n \t      || (GET_MODE_SIZE (mode) <= GET_MODE_SIZE (GET_MODE (x))\n-\t\t  && ((GET_CODE (x) == MEM && ! MEM_VOLATILE_P (x))\n-\t\t      && direct_load[(int) mode]\n+\t\t  && ((GET_CODE (x) == MEM && ! MEM_VOLATILE_P (x)\n+\t\t       && direct_load[(int) mode])\n \t\t      || GET_CODE (x) == REG)))))\n     return gen_lowpart (mode, x);\n "}]}