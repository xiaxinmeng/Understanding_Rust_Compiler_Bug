{"sha": "c2db4b320dc594f7f5724c712fec7612e1744918", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJkYjRiMzIwZGM1OTRmN2Y1NzI0YzcxMmZlYzc2MTJlMTc0NDkxOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T10:09:06Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T10:09:06Z"}, "message": "[multiple changes]\n\n2011-08-04  Arnaud Charlet  <charlet@adacore.com>\n\n\t* prj-env.adb: Remove local debug traces.\n\n2011-08-04  Yannick Moy  <moy@adacore.com>\n\n\t* checks.adb (Apply_Float_Conversion_Check): correct a typo where Lo_OK\n\twas used instead of Hi_OK, which could cause a read of an uninitialized\n\tvalue later on. Detected while working on the new warning.\n\t* exp_ch9.adb (Expand_N_Entry_Declaration): remove useless assignment\n\tto local variable.\n\t* sem_ch5.adb (Analyze_Assignment): set the last assignment component\n\tin more cases, in order to detect more unreferenced values.\n\t* sem_util.adb, sem_util.ads (Get_Enclosing_Object): return enclosing\n\tobject for expression, if any.\n\n2011-08-04  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* exp_intr.adb (Expand_Binary_Operator_Call): Look at the RM size of\n\tthe operand types instead of the Esize.\n\n2011-08-04  Steve Baird  <baird@adacore.com>\n\n\t* switch-b.adb (Scan_Binder_Switches): Add -P binder switch, used to\n\tenable CodePeer_Mode.\n\t* bindusg.adb (Display): Add help message describing -P binder switch.\n\t* gnat_ugn.texi: Document -P binder switch.\n\t* bindgen.adb (Gen_Main_Ada): If CodePeer_Mode is set, then call the\n\tuser-defined main program directly.\n\t(Gen_Output_File_Ada): If CodePeer_Mode is set, generate a with of the\n\tuser-defined main program in the context clause of the package body.\n\nFrom-SVN: r177355", "tree": {"sha": "ee88f2d362365e5135d7544118b03fafb9e771d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee88f2d362365e5135d7544118b03fafb9e771d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2db4b320dc594f7f5724c712fec7612e1744918", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2db4b320dc594f7f5724c712fec7612e1744918", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2db4b320dc594f7f5724c712fec7612e1744918", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2db4b320dc594f7f5724c712fec7612e1744918/comments", "author": null, "committer": null, "parents": [{"sha": "ceb0dcaaad6b6dc2fbea74a76531ca7b05101d9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ceb0dcaaad6b6dc2fbea74a76531ca7b05101d9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ceb0dcaaad6b6dc2fbea74a76531ca7b05101d9c"}], "stats": {"total": 152, "additions": 133, "deletions": 19}, "files": [{"sha": "cd5c59cbf1a47215e44d3e5c78938ab22d5b8738", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2db4b320dc594f7f5724c712fec7612e1744918/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2db4b320dc594f7f5724c712fec7612e1744918/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c2db4b320dc594f7f5724c712fec7612e1744918", "patch": "@@ -1,3 +1,35 @@\n+2011-08-04  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* prj-env.adb: Remove local debug traces.\n+\n+2011-08-04  Yannick Moy  <moy@adacore.com>\n+\n+\t* checks.adb (Apply_Float_Conversion_Check): correct a typo where Lo_OK\n+\twas used instead of Hi_OK, which could cause a read of an uninitialized\n+\tvalue later on. Detected while working on the new warning.\n+\t* exp_ch9.adb (Expand_N_Entry_Declaration): remove useless assignment\n+\tto local variable.\n+\t* sem_ch5.adb (Analyze_Assignment): set the last assignment component\n+\tin more cases, in order to detect more unreferenced values.\n+\t* sem_util.adb, sem_util.ads (Get_Enclosing_Object): return enclosing\n+\tobject for expression, if any.\n+\n+2011-08-04  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_intr.adb (Expand_Binary_Operator_Call): Look at the RM size of\n+\tthe operand types instead of the Esize.\n+\n+2011-08-04  Steve Baird  <baird@adacore.com>\n+\n+\t* switch-b.adb (Scan_Binder_Switches): Add -P binder switch, used to\n+\tenable CodePeer_Mode.\n+\t* bindusg.adb (Display): Add help message describing -P binder switch.\n+\t* gnat_ugn.texi: Document -P binder switch.\n+\t* bindgen.adb (Gen_Main_Ada): If CodePeer_Mode is set, then call the\n+\tuser-defined main program directly.\n+\t(Gen_Output_File_Ada): If CodePeer_Mode is set, generate a with of the\n+\tuser-defined main program in the context clause of the package body.\n+\n 2011-08-04  Yannick Moy  <moy@adacore.com>\n \n \t* alfa.adb, alfa.ads (Get_Entity_For_Decl): remove function, partial"}, {"sha": "f13667e242d576e6cda87b0533098b1e683229db", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2db4b320dc594f7f5724c712fec7612e1744918/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2db4b320dc594f7f5724c712fec7612e1744918/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=c2db4b320dc594f7f5724c712fec7612e1744918", "patch": "@@ -2218,7 +2218,20 @@ package body Bindgen is\n       if not No_Main_Subprogram then\n          WBI (\"      Break_Start;\");\n \n-         if ALIs.Table (ALIs.First).Main_Program = Proc then\n+         if CodePeer_Mode then\n+            --  Bypass Ada_Main_Program; its Import pragma confuses CodePeer.\n+            Get_Name_String (Units.Table (First_Unit_Entry).Uname);\n+            declare\n+               Callee_Name : String renames Name_Buffer (1 .. Name_Len - 2);\n+               --  strip trailing \"%b\"\n+            begin\n+               if ALIs.Table (ALIs.First).Main_Program = Proc then\n+                  WBI (\"      \" & Callee_Name & \";\");\n+               else\n+                  WBI (\"      Result := \" & Callee_Name & \";\");\n+               end if;\n+            end;\n+         elsif ALIs.Table (ALIs.First).Main_Program = Proc then\n             WBI (\"      Ada_Main_Program;\");\n          else\n             WBI (\"      Result := Ada_Main_Program;\");\n@@ -3062,6 +3075,13 @@ package body Bindgen is\n          WBI (\"with Ada.Exceptions;\");\n       end if;\n \n+      if CodePeer_Mode then\n+         --  For CodePeer, main program is not called via an Import pragma.\n+         Get_Name_String (Units.Table (First_Unit_Entry).Uname);\n+         WBI (\"with \" & Name_Buffer (1 .. Name_Len - 2) & \";\");\n+         --  strip trailing \"%b\"\n+      end if;\n+\n       WBI (\"\");\n       WBI (\"package body \" & Ada_Main & \" is\");\n       WBI (\"   pragma Warnings (Off);\");"}, {"sha": "e762c872fcbb8160eb05142a8d6eff16899390b5", "filename": "gcc/ada/bindusg.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2db4b320dc594f7f5724c712fec7612e1744918/gcc%2Fada%2Fbindusg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2db4b320dc594f7f5724c712fec7612e1744918/gcc%2Fada%2Fbindusg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindusg.adb?ref=c2db4b320dc594f7f5724c712fec7612e1744918", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                B o d y                                   --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -178,6 +178,10 @@ package body Bindusg is\n \n       Write_Line (\"  -p        Pessimistic (worst-case) elaboration order\");\n \n+      --  Line for -P switch\n+\n+      Write_Line (\"  -P        Generate binder file suitable for CodePeer\");\n+\n       --  Line for -r switch\n \n       Write_Line (\"  -r        List restrictions that could be applied \" &"}, {"sha": "a798e3f22fa78b53f358b60a30012e7c24e40bea", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2db4b320dc594f7f5724c712fec7612e1744918/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2db4b320dc594f7f5724c712fec7612e1744918/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=c2db4b320dc594f7f5724c712fec7612e1744918", "patch": "@@ -1690,7 +1690,7 @@ package body Checks is\n \n       if Truncate and then Ilast < 0 then\n          Hi := Succ (Expr_Type, UR_From_Uint (Ilast));\n-         Lo_OK := False;\n+         Hi_OK := False;\n \n       elsif Truncate then\n          Hi := Pred (Expr_Type, UR_From_Uint (Ilast + 1));"}, {"sha": "43ec7aff0b70ba15891f6a4c2c70b29ae8608b8d", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2db4b320dc594f7f5724c712fec7612e1744918/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2db4b320dc594f7f5724c712fec7612e1744918/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=c2db4b320dc594f7f5724c712fec7612e1744918", "patch": "@@ -7330,7 +7330,6 @@ package body Exp_Ch9 is\n                  Subtype_Indication => New_Reference_To (Rec_Ent, Loc)));\n \n          Insert_After (Last_Decl, Decl);\n-         Last_Decl := Decl;\n       end if;\n    end Expand_N_Entry_Declaration;\n "}, {"sha": "39fe851204196285ca85b71f52f2b6841a7066b3", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2db4b320dc594f7f5724c712fec7612e1744918/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2db4b320dc594f7f5724c712fec7612e1744918/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=c2db4b320dc594f7f5724c712fec7612e1744918", "patch": "@@ -124,7 +124,7 @@ package body Exp_Intr is\n       T3  : Entity_Id;\n       Res : Node_Id;\n \n-      Siz : constant Uint := UI_Max (Esize (T1), Esize (T2));\n+      Siz : constant Uint := UI_Max (RM_Size (T1), RM_Size (T2));\n       --  Maximum of operand sizes\n \n    begin"}, {"sha": "69bc2750bc5f3244c566802aa990412549fdb1b8", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2db4b320dc594f7f5724c712fec7612e1744918/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2db4b320dc594f7f5724c712fec7612e1744918/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=c2db4b320dc594f7f5724c712fec7612e1744918", "patch": "@@ -8313,6 +8313,10 @@ Output object list (to standard output or to the named file).\n @cindex @option{^-p^/PESSIMISTIC_ELABORATION^} (@command{gnatbind})\n Pessimistic (worst-case) elaboration order\n \n+@item ^-P^-P^\n+@cindex @option{^-P^/CODEPEER^} (@command{gnatbind})\n+Generate binder file suitable for CodePeer.\n+\n @item ^-R^-R^\n @cindex @option{^-R^-R^} (@command{gnatbind})\n Output closure source list."}, {"sha": "0aa907ad1fd1a1fff52eff8fcc207ffa87eda166", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2db4b320dc594f7f5724c712fec7612e1744918/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2db4b320dc594f7f5724c712fec7612e1744918/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=c2db4b320dc594f7f5724c712fec7612e1744918", "patch": "@@ -534,9 +534,6 @@ package body Prj.Env is\n          while Element (Iter) /= No_Source loop\n             Source := Element (Iter);\n \n-            Debug_Output (\"MANU Source index=\" & Source.Index'Img,\n-                          Name_Id (Source.File));\n-\n             if Source.Index >= 1\n               and then not Source.Locally_Removed\n               and then Source.Unit /= null\n@@ -703,7 +700,6 @@ package body Prj.Env is\n    --  Start of processing for Create_Config_Pragmas_File\n \n    begin\n-      Debug_Output (\"MANU Create_Config_Pragmas_File\", For_Project.Name);\n       if not For_Project.Config_Checked then\n          Naming_Table.Init (Namings);\n "}, {"sha": "3597f793b908e7386c313e5e1eb121ca363ffff7", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 26, "deletions": 9, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2db4b320dc594f7f5724c712fec7612e1744918/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2db4b320dc594f7f5724c712fec7612e1744918/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=c2db4b320dc594f7f5724c712fec7612e1744918", "patch": "@@ -746,22 +746,17 @@ package body Sem_Ch5 is\n             if Safe_To_Capture_Value (N, Ent) then\n \n                --  If simple variable on left side, warn if this assignment\n-               --  blots out another one (rendering it useless) and note\n-               --  location of assignment in case no one references value. We\n-               --  only do this for source assignments, otherwise we can\n-               --  generate bogus warnings when an assignment is rewritten as\n-               --  another assignment, and gets tied up with itself.\n-\n-               --  Note: we don't use Record_Last_Assignment here, because we\n-               --  have lots of other stuff to do under control of this test.\n+               --  blots out another one (rendering it useless). We only do\n+               --  this for source assignments, otherwise we can generate bogus\n+               --  warnings when an assignment is rewritten as another\n+               --  assignment, and gets tied up with itself.\n \n                if Warn_On_Modified_Unread\n                  and then Is_Assignable (Ent)\n                  and then Comes_From_Source (N)\n                  and then In_Extended_Main_Source_Unit (Ent)\n                then\n                   Warn_On_Useless_Assignment (Ent, N);\n-                  Set_Last_Assignment (Ent, Lhs);\n                end if;\n \n                --  If we are assigning an access type and the left side is an\n@@ -803,6 +798,28 @@ package body Sem_Ch5 is\n             end if;\n          end;\n       end if;\n+\n+      --  If assigning to an object in whole or in part, note location of\n+      --  assignment in case no one references value. We only do this for\n+      --  source assignments, otherwise we can generate bogus warnings when an\n+      --  assignment is rewritten as another assignment, and gets tied up with\n+      --  itself.\n+\n+      declare\n+         Ent : constant Entity_Id := Get_Enclosing_Object (Lhs);\n+\n+      begin\n+         if Present (Ent)\n+           and then Safe_To_Capture_Value (N, Ent)\n+           and then Nkind (N) = N_Assignment_Statement\n+           and then Warn_On_Modified_Unread\n+           and then Is_Assignable (Ent)\n+           and then Comes_From_Source (N)\n+           and then In_Extended_Main_Source_Unit (Ent)\n+         then\n+            Set_Last_Assignment (Ent, Lhs);\n+         end if;\n+      end;\n    end Analyze_Assignment;\n \n    -----------------------------"}, {"sha": "a3e464270dfbbd9a09338654384b69d0e9124fdb", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2db4b320dc594f7f5724c712fec7612e1744918/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2db4b320dc594f7f5724c712fec7612e1744918/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=c2db4b320dc594f7f5724c712fec7612e1744918", "patch": "@@ -4151,6 +4151,38 @@ package body Sem_Util is\n           Strval => String_From_Name_Buffer);\n    end Get_Default_External_Name;\n \n+   --------------------------\n+   -- Get_Enclosing_Object --\n+   --------------------------\n+\n+   function Get_Enclosing_Object (N : Node_Id) return Entity_Id is\n+   begin\n+      if Is_Entity_Name (N) then\n+         return Entity (N);\n+      else\n+         case Nkind (N) is\n+            when N_Indexed_Component  |\n+                 N_Slice              |\n+                 N_Selected_Component =>\n+\n+               --  If not generating code, a dereference may be left implicit.\n+               --  In thoses cases, return Empty.\n+\n+               if Is_Access_Type (Etype (Prefix (N))) then\n+                  return Empty;\n+               else\n+                  return Get_Enclosing_Object (Prefix (N));\n+               end if;\n+\n+            when N_Type_Conversion =>\n+               return Get_Enclosing_Object (Expression (N));\n+\n+            when others =>\n+               return Empty;\n+         end case;\n+      end if;\n+   end Get_Enclosing_Object;\n+\n    ---------------------------\n    -- Get_Enum_Lit_From_Pos --\n    ---------------------------"}, {"sha": "bf57d97143eb380827a8f30bab752c8765a55daf", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2db4b320dc594f7f5724c712fec7612e1744918/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2db4b320dc594f7f5724c712fec7612e1744918/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=c2db4b320dc594f7f5724c712fec7612e1744918", "patch": "@@ -480,6 +480,10 @@ package Sem_Util is\n    --  identifier provided as the external name. Letters in the name are\n    --  according to the setting of Opt.External_Name_Default_Casing.\n \n+   function Get_Enclosing_Object (N : Node_Id) return Entity_Id;\n+   --  If expression N references a part of an object, return this object.\n+   --  Otherwise return Empty. Expression N should have been resolved already.\n+\n    function Get_Generic_Entity (N : Node_Id) return Entity_Id;\n    --  Returns the true generic entity in an instantiation. If the name in the\n    --  instantiation is a renaming, the function returns the renamed generic."}, {"sha": "0d44aa8be8051b1caf144b6dd19c1cc7da4f20c1", "filename": "gcc/ada/switch-b.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2db4b320dc594f7f5724c712fec7612e1744918/gcc%2Fada%2Fswitch-b.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2db4b320dc594f7f5724c712fec7612e1744918/gcc%2Fada%2Fswitch-b.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-b.adb?ref=c2db4b320dc594f7f5724c712fec7612e1744918", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -364,6 +364,12 @@ package body Switch.B is\n             Ptr := Ptr + 1;\n             Pessimistic_Elab_Order := True;\n \n+         --  Processing for P switch\n+\n+         when 'P' =>\n+            Ptr := Ptr + 1;\n+            CodePeer_Mode := True;\n+\n          --  Processing for q switch\n \n          when 'q' =>"}]}