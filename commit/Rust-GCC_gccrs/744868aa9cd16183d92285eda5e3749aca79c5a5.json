{"sha": "744868aa9cd16183d92285eda5e3749aca79c5a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ0ODY4YWE5Y2QxNjE4M2Q5MjI4NWVkYTVlMzc0OWFjYTc5YzVhNQ==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2014-12-16T08:15:38Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2014-12-16T08:15:38Z"}, "message": "re PR fortran/64244 (ICE at class.c:236 when using non_overridable)\n\n2014-12-16  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/64244\n\t* resolve.c (resolve_typebound_call): New argument to pass out the\n\tnon-overridable attribute of the specific procedure.\n\t(resolve_typebound_subroutine): Get overridable flag from\n\tresolve_typebound_call.\n\n2014-12-16  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/64244\n\t* gfortran.dg/typebound_call_26.f90: New.\n\nFrom-SVN: r218776", "tree": {"sha": "21de9fdde409e3561bb8bb46fe8d3a3a47273c2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21de9fdde409e3561bb8bb46fe8d3a3a47273c2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/744868aa9cd16183d92285eda5e3749aca79c5a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/744868aa9cd16183d92285eda5e3749aca79c5a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/744868aa9cd16183d92285eda5e3749aca79c5a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/744868aa9cd16183d92285eda5e3749aca79c5a5/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "728f661cf56691b13ebda60fcde1b1245ad84509", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/728f661cf56691b13ebda60fcde1b1245ad84509", "html_url": "https://github.com/Rust-GCC/gccrs/commit/728f661cf56691b13ebda60fcde1b1245ad84509"}], "stats": {"total": 57, "additions": 52, "deletions": 5}, "files": [{"sha": "d0a3ad48bcc6f3bf0878aa10294415f27a805f80", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/744868aa9cd16183d92285eda5e3749aca79c5a5/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/744868aa9cd16183d92285eda5e3749aca79c5a5/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=744868aa9cd16183d92285eda5e3749aca79c5a5", "patch": "@@ -1,3 +1,11 @@\n+2014-12-16  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/64244\n+\t* resolve.c (resolve_typebound_call): New argument to pass out the\n+\tnon-overridable attribute of the specific procedure.\n+\t(resolve_typebound_subroutine): Get overridable flag from\n+\tresolve_typebound_call.\n+\n 2014-12-15  Steven Bosscher  <steven@gcc.gnu.org>\n \n \tPR fortran/61669"}, {"sha": "c74f8fb6da794ec8ddf93411b8a2aa32bc5f0769", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/744868aa9cd16183d92285eda5e3749aca79c5a5/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/744868aa9cd16183d92285eda5e3749aca79c5a5/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=744868aa9cd16183d92285eda5e3749aca79c5a5", "patch": "@@ -5676,7 +5676,7 @@ resolve_typebound_generic_call (gfc_expr* e, const char **name)\n /* Resolve a call to a type-bound subroutine.  */\n \n static bool\n-resolve_typebound_call (gfc_code* c, const char **name)\n+resolve_typebound_call (gfc_code* c, const char **name, bool *overridable)\n {\n   gfc_actual_arglist* newactual;\n   gfc_symtree* target;\n@@ -5700,6 +5700,10 @@ resolve_typebound_call (gfc_code* c, const char **name)\n   if (!resolve_typebound_generic_call (c->expr1, name))\n     return false;\n \n+  /* Pass along the NON_OVERRIDABLE attribute of the specific TBP. */\n+  if (overridable)\n+    *overridable = !c->expr1->value.compcall.tbp->non_overridable;\n+\n   /* Transform into an ordinary EXEC_CALL for now.  */\n \n   if (!resolve_typebound_static (c->expr1, &target, &newactual))\n@@ -5959,7 +5963,7 @@ resolve_typebound_subroutine (gfc_code *code)\n       if (c->ts.u.derived == NULL)\n \tc->ts.u.derived = gfc_find_derived_vtab (declared);\n \n-      if (!resolve_typebound_call (code, &name))\n+      if (!resolve_typebound_call (code, &name, NULL))\n \treturn false;\n \n       /* Use the generic name if it is there.  */\n@@ -5991,7 +5995,7 @@ resolve_typebound_subroutine (gfc_code *code)\n     }\n \n   if (st == NULL)\n-    return resolve_typebound_call (code, NULL);\n+    return resolve_typebound_call (code, NULL, NULL);\n \n   if (!resolve_ref (code->expr1))\n     return false;\n@@ -6004,10 +6008,10 @@ resolve_typebound_subroutine (gfc_code *code)\n \t || (!class_ref && st->n.sym->ts.type != BT_CLASS))\n     {\n       gfc_free_ref_list (new_ref);\n-      return resolve_typebound_call (code, NULL);\n+      return resolve_typebound_call (code, NULL, NULL);\n     }\n \n-  if (!resolve_typebound_call (code, &name))\n+  if (!resolve_typebound_call (code, &name, &overridable))\n     {\n       gfc_free_ref_list (new_ref);\n       return false;"}, {"sha": "0034d0a5b4288f7381916be0580f30d57ed1ccc4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/744868aa9cd16183d92285eda5e3749aca79c5a5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/744868aa9cd16183d92285eda5e3749aca79c5a5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=744868aa9cd16183d92285eda5e3749aca79c5a5", "patch": "@@ -1,3 +1,8 @@\n+2014-12-16  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/64244\n+\t* gfortran.dg/typebound_call_26.f90: New.\n+\n 2014-12-15  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR lto/64043"}, {"sha": "dffbf93e786500c3592d6a94d821a7803db815c3", "filename": "gcc/testsuite/gfortran.dg/typebound_call_26.f90", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/744868aa9cd16183d92285eda5e3749aca79c5a5/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_call_26.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/744868aa9cd16183d92285eda5e3749aca79c5a5/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_call_26.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftypebound_call_26.f90?ref=744868aa9cd16183d92285eda5e3749aca79c5a5", "patch": "@@ -0,0 +1,30 @@\n+! { dg-do compile }\n+!\n+! PR 64244: [4.8/4.9/5 Regression] ICE at class.c:236 when using non_overridable\n+!\n+! Contributed by Ond\u0159ej \u010cert\u00edk <ondrej.certik@gmail.com>\n+\n+module m\n+  implicit none\n+\n+  type :: A\n+  contains\n+    generic :: f => g\n+    procedure, non_overridable :: g\n+  end type\n+\n+contains\n+\n+  subroutine g(this)\n+    class(A), intent(in) :: this\n+  end subroutine\n+\n+end module\n+\n+\n+program test_non_overridable\n+  use m, only: A\n+  implicit none\n+  class(A), allocatable :: h\n+  call h%f()\n+end"}]}