{"sha": "d8ae8cd480b11169cbb725e296cc0a1d0302c73a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhhZThjZDQ4MGIxMTE2OWNiYjcyNWUyOTZjYzBhMWQwMzAyYzczYQ==", "commit": {"author": {"name": "Bo Thorsen", "email": "bo@suse.co.uk", "date": "2002-04-26T07:05:56Z"}, "committer": {"name": "Bo Thorsen", "email": "bo@gcc.gnu.org", "date": "2002-04-26T07:05:56Z"}, "message": "linux64.h (MD_FALLBACK_FRAME_STATE_FOR): Define for x86-64.\n\n2002-04-26  Bo Thorsen  <bo@suse.co.uk>\n\n\t* config/i386/linux64.h (MD_FALLBACK_FRAME_STATE_FOR): Define for\n\tx86-64.\n\nFrom-SVN: r52781", "tree": {"sha": "9407a4a1613bddaf25c5582a911fe46f122a9620", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9407a4a1613bddaf25c5582a911fe46f122a9620"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8ae8cd480b11169cbb725e296cc0a1d0302c73a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8ae8cd480b11169cbb725e296cc0a1d0302c73a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8ae8cd480b11169cbb725e296cc0a1d0302c73a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8ae8cd480b11169cbb725e296cc0a1d0302c73a/comments", "author": null, "committer": null, "parents": [{"sha": "f8b954fcdc0446691171bd20e6cb218799d4d1a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8b954fcdc0446691171bd20e6cb218799d4d1a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8b954fcdc0446691171bd20e6cb218799d4d1a9"}], "stats": {"total": 70, "additions": 70, "deletions": 0}, "files": [{"sha": "185b49a73d1047201155df90d8a301d5b40fda36", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8ae8cd480b11169cbb725e296cc0a1d0302c73a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8ae8cd480b11169cbb725e296cc0a1d0302c73a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d8ae8cd480b11169cbb725e296cc0a1d0302c73a", "patch": "@@ -1,3 +1,8 @@\n+2002-04-26  Bo Thorsen  <bo@suse.co.uk>\n+\n+\t* config/i386/linux64.h (MD_FALLBACK_FRAME_STATE_FOR): Define for\n+\tx86-64.\n+\n 2002-04-26  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* cppexp.c (CPP_UMINUS, CPP_UPLUS): New."}, {"sha": "e457a7dedc77eac976631b3790dfc0464006468b", "filename": "gcc/config/i386/linux64.h", "status": "modified", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8ae8cd480b11169cbb725e296cc0a1d0302c73a/gcc%2Fconfig%2Fi386%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8ae8cd480b11169cbb725e296cc0a1d0302c73a/gcc%2Fconfig%2Fi386%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux64.h?ref=d8ae8cd480b11169cbb725e296cc0a1d0302c73a", "patch": "@@ -64,3 +64,68 @@ Boston, MA 02111-1307, USA.  */\n #define ENDFILE_SPEC \"\\\n   %{m32:%{!shared:crtend.o%s} %{shared:crtendS.o%s} crtn.o%s} \\\n   %{!m32:%{!shared:crtend.o%s} %{shared:crtendS.o%s} /usr/lib64/crtn.o%s}\"\n+\n+/* Do code reading to identify a signal frame, and set the frame\n+   state data appropriately.  See unwind-dw2.c for the structs.  */\n+\n+#ifdef IN_LIBGCC2\n+#include <signal.h>\n+#include <sys/ucontext.h>\n+#endif\n+\n+#define MD_FALLBACK_FRAME_STATE_FOR(CONTEXT, FS, SUCCESS)\t\t\\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    unsigned char *pc_ = (CONTEXT)->ra;\t\t\t\t\t\\\n+    struct sigcontext *sc_;\t\t\t\t\t\t\\\n+    long new_cfa_;\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+    /* movq __NR_rt_sigreturn, %rax ; syscall  */\t\t\t\\\n+    if (*(unsigned char *)(pc_+0) == 0x48\t\t\t\t\\\n+\t&& *(unsigned long *)(pc_+1) == 0x050f0000000fc0c7)\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tstruct ucontext *uc_ = (CONTEXT)->cfa;\t\t\t\t\\\n+\tsc_ = (struct sigcontext *) &uc_->uc_mcontext;\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+    else\t\t\t\t\t\t\t\t\\\n+      break;\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+    new_cfa_ = sc_->rsp;\t\t\t\t\t\t\\\n+    (FS)->cfa_how = CFA_REG_OFFSET;\t\t\t\t\t\\\n+    /* Register 7 is rsp  */\t\t\t\t\t\t\\\n+    (FS)->cfa_reg = 7;\t\t\t\t\t\t\t\\\n+    (FS)->cfa_offset = new_cfa_ - (long) (CONTEXT)->cfa;\t\t\\\n+\t\t\t\t\t\t\t\t\t\\\n+    /* The SVR4 register numbering macros aren't usable in libgcc.  */\t\\\n+    (FS)->regs.reg[0].how = REG_SAVED_OFFSET;\t\t\t\t\\\n+    (FS)->regs.reg[0].loc.offset = (long)&sc_->rax - new_cfa_;\t\t\\\n+    (FS)->regs.reg[1].how = REG_SAVED_OFFSET;\t\t\t\t\\\n+    (FS)->regs.reg[1].loc.offset = (long)&sc_->rbx - new_cfa_;\t\t\\\n+    (FS)->regs.reg[2].how = REG_SAVED_OFFSET;\t\t\t\t\\\n+    (FS)->regs.reg[2].loc.offset = (long)&sc_->rcx - new_cfa_;\t\t\\\n+    (FS)->regs.reg[3].how = REG_SAVED_OFFSET;\t\t\t\t\\\n+    (FS)->regs.reg[3].loc.offset = (long)&sc_->rdx - new_cfa_;\t\t\\\n+    (FS)->regs.reg[4].how = REG_SAVED_OFFSET;\t\t\t\t\\\n+    (FS)->regs.reg[4].loc.offset = (long)&sc_->rbp - new_cfa_;\t\t\\\n+    (FS)->regs.reg[5].how = REG_SAVED_OFFSET;\t\t\t\t\\\n+    (FS)->regs.reg[5].loc.offset = (long)&sc_->rsi - new_cfa_;\t\t\\\n+    (FS)->regs.reg[6].how = REG_SAVED_OFFSET;\t\t\t\t\\\n+    (FS)->regs.reg[6].loc.offset = (long)&sc_->rdi - new_cfa_;\t\t\\\n+    (FS)->regs.reg[8].how = REG_SAVED_OFFSET;\t\t\t\t\\\n+    (FS)->regs.reg[8].loc.offset = (long)&sc_->r8 - new_cfa_;\t\t\\\n+    (FS)->regs.reg[9].how = REG_SAVED_OFFSET;\t\t\t\t\\\n+    (FS)->regs.reg[9].loc.offset = (long)&sc_->r9 - new_cfa_;\t\t\\\n+    (FS)->regs.reg[10].how = REG_SAVED_OFFSET;\t\t\t\t\\\n+    (FS)->regs.reg[10].loc.offset = (long)&sc_->r10 - new_cfa_;\t\t\\\n+    (FS)->regs.reg[11].how = REG_SAVED_OFFSET;\t\t\t\t\\\n+    (FS)->regs.reg[11].loc.offset = (long)&sc_->r11 - new_cfa_;\t\t\\\n+    (FS)->regs.reg[12].how = REG_SAVED_OFFSET;\t\t\t\t\\\n+    (FS)->regs.reg[12].loc.offset = (long)&sc_->r12 - new_cfa_;\t\t\\\n+    (FS)->regs.reg[13].how = REG_SAVED_OFFSET;\t\t\t\t\\\n+    (FS)->regs.reg[13].loc.offset = (long)&sc_->r13 - new_cfa_;\t\t\\\n+    (FS)->regs.reg[14].how = REG_SAVED_OFFSET;\t\t\t\t\\\n+    (FS)->regs.reg[14].loc.offset = (long)&sc_->r14 - new_cfa_;\t\t\\\n+    (FS)->regs.reg[15].how = REG_SAVED_OFFSET;\t\t\t\t\\\n+    (FS)->regs.reg[15].loc.offset = (long)&sc_->r15 - new_cfa_;\t\t\\\n+    (FS)->retaddr_column = 16;\t\t\t\t\t\t\\\n+    goto SUCCESS;\t\t\t\t\t\t\t\\\n+  } while (0)"}]}