{"sha": "73b3e61bca04df93fcba001702c469deeed6a06d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNiM2U2MWJjYTA0ZGY5M2ZjYmEwMDE3MDJjNDY5ZGVlZWQ2YTA2ZA==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2014-06-20T18:28:12Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2014-06-20T18:28:12Z"}, "message": "Update definition of call_fusage_contains_non_callee_clobbers\n\n2014-06-20  Tom de Vries  <tom@codesourcery.com>\n\n\t* target.def (call_fusage_contains_non_callee_clobbers): Update\n\tdefinition.\n\t* doc/tm.texi: Regenerate.\n\nFrom-SVN: r211852", "tree": {"sha": "e0f9f44bb935fb127d731ec2456988bcbd942062", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0f9f44bb935fb127d731ec2456988bcbd942062"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73b3e61bca04df93fcba001702c469deeed6a06d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73b3e61bca04df93fcba001702c469deeed6a06d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73b3e61bca04df93fcba001702c469deeed6a06d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73b3e61bca04df93fcba001702c469deeed6a06d/comments", "author": null, "committer": null, "parents": [{"sha": "676d89dd0f84823db929854671bf45573aa30b01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/676d89dd0f84823db929854671bf45573aa30b01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/676d89dd0f84823db929854671bf45573aa30b01"}], "stats": {"total": 42, "additions": 24, "deletions": 18}, "files": [{"sha": "3141ec92cbbbb7d783b00b8131c036dd14a4ca04", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73b3e61bca04df93fcba001702c469deeed6a06d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73b3e61bca04df93fcba001702c469deeed6a06d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=73b3e61bca04df93fcba001702c469deeed6a06d", "patch": "@@ -1,3 +1,9 @@\n+2014-06-20  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* target.def (call_fusage_contains_non_callee_clobbers): Update\n+\tdefinition.\n+\t* doc/tm.texi: Regenerate.\n+\n 2014-06-20  Yury Gribov  <y.gribov@samsung.com>\n \t    Max Ostapenko  <m.ostapenko@partner.samsung.com>\n "}, {"sha": "45281aef88ad9ad529e31e8396a404d06489e226", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73b3e61bca04df93fcba001702c469deeed6a06d/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73b3e61bca04df93fcba001702c469deeed6a06d/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=73b3e61bca04df93fcba001702c469deeed6a06d", "patch": "@@ -4884,14 +4884,14 @@ Whether this target supports splitting the stack when the options described in @\n @cindex miscellaneous register hooks\n \n @deftypevr {Target Hook} bool TARGET_CALL_FUSAGE_CONTAINS_NON_CALLEE_CLOBBERS\n-set to true if all the calls in the current function contain clobbers in\n-CALL_INSN_FUNCTION_USAGE for the registers that are clobbered by the call\n-rather than by the callee, and are not already set or clobbered in the call\n-pattern.  Examples of such registers are registers used in PLTs and stubs,\n-and temporary registers used in the call instruction but not present in the\n-rtl pattern.  Another way to formulate it is the registers not present in the\n-rtl pattern that are clobbered by the call assuming the callee does not\n-clobber any register.  The default version of this hook is set to false.\n+Set to true if each call that binds to a local definition explicitly\n+clobbers or sets all non-fixed registers modified by performing the call.\n+That is, by the call pattern itself, or by code that might be inserted by the\n+linker (e.g. stubs, veneers, branch islands), but not including those\n+modifiable by the callee.  The affected registers may be mentioned explicitly\n+in the call pattern, or included as clobbers in CALL_INSN_FUNCTION_USAGE.\n+The default version of this hook is set to false.  The purpose of this hook\n+is to enable the fuse-caller-save optimization.\n @end deftypevr\n \n @node Varargs"}, {"sha": "ee250e6adfebe75234877fe935be4707dd61197c", "filename": "gcc/target.def", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73b3e61bca04df93fcba001702c469deeed6a06d/gcc%2Ftarget.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73b3e61bca04df93fcba001702c469deeed6a06d/gcc%2Ftarget.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.def?ref=73b3e61bca04df93fcba001702c469deeed6a06d", "patch": "@@ -5128,18 +5128,18 @@ FRAME_POINTER_REGNUM, ARG_POINTER_REGNUM, and the PIC_OFFSET_TABLE_REGNUM.\",\n  hook_void_bitmap)\n \n /* Targets should define this target hook to mark that non-callee clobbers are\n-   present in CALL_INSN_FUNCTION_USAGE for all the calls in the current\n-   function.  */\n+   present in CALL_INSN_FUNCTION_USAGE for all the calls that bind to a local\n+   definition.  */\n DEFHOOKPOD\n (call_fusage_contains_non_callee_clobbers,\n- \"set to true if all the calls in the current function contain clobbers in\\n\\\n-CALL_INSN_FUNCTION_USAGE for the registers that are clobbered by the call\\n\\\n-rather than by the callee, and are not already set or clobbered in the call\\n\\\n-pattern.  Examples of such registers are registers used in PLTs and stubs,\\n\\\n-and temporary registers used in the call instruction but not present in the\\n\\\n-rtl pattern.  Another way to formulate it is the registers not present in the\\n\\\n-rtl pattern that are clobbered by the call assuming the callee does not\\n\\\n-clobber any register.  The default version of this hook is set to false.\",\n+ \"Set to true if each call that binds to a local definition explicitly\\n\\\n+clobbers or sets all non-fixed registers modified by performing the call.\\n\\\n+That is, by the call pattern itself, or by code that might be inserted by the\\n\\\n+linker (e.g. stubs, veneers, branch islands), but not including those\\n\\\n+modifiable by the callee.  The affected registers may be mentioned explicitly\\n\\\n+in the call pattern, or included as clobbers in CALL_INSN_FUNCTION_USAGE.\\n\\\n+The default version of this hook is set to false.  The purpose of this hook\\n\\\n+is to enable the fuse-caller-save optimization.\",\n  bool, \n  false)\n "}]}