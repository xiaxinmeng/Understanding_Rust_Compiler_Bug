{"sha": "be7ce7aefd00f15e98f2802cfe3434dcca517643", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU3Y2U3YWVmZDAwZjE1ZTk4ZjI4MDJjZmUzNDM0ZGNjYTUxNzY0Mw==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2016-03-16T09:19:12Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2016-03-16T09:19:12Z"}, "message": "Fix same_close_phi_node\n\n2016-03-16  Tom de Vries  <tom@codesourcery.com>\n\n\tPR tree-optimization/68809\n\t* graphite-scop-detection.c (same_close_phi_node): Test if result types\n\tare the same.\n\n\t* gcc.dg/graphite/pr68809-2.c: New test.\n\t* gcc.dg/graphite/pr68809.c: New test.\n\nFrom-SVN: r234250", "tree": {"sha": "ba4d740a7622c18269bd8ac6c22f41fcda01cb2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba4d740a7622c18269bd8ac6c22f41fcda01cb2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be7ce7aefd00f15e98f2802cfe3434dcca517643", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be7ce7aefd00f15e98f2802cfe3434dcca517643", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be7ce7aefd00f15e98f2802cfe3434dcca517643", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be7ce7aefd00f15e98f2802cfe3434dcca517643/comments", "author": null, "committer": null, "parents": [{"sha": "6651c93e42d125b151a4a2631fbb912c8d5a986a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6651c93e42d125b151a4a2631fbb912c8d5a986a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6651c93e42d125b151a4a2631fbb912c8d5a986a"}], "stats": {"total": 73, "additions": 71, "deletions": 2}, "files": [{"sha": "d8f2eeac6e44beace1135aa2eb80e74899514e67", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7ce7aefd00f15e98f2802cfe3434dcca517643/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7ce7aefd00f15e98f2802cfe3434dcca517643/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be7ce7aefd00f15e98f2802cfe3434dcca517643", "patch": "@@ -1,3 +1,9 @@\n+2016-03-16  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR tree-optimization/68809\n+\t* graphite-scop-detection.c (same_close_phi_node): Test if result types\n+\tare the same.\n+\n 2016-03-16  Carlos O'Donell  <carlos@redhat.com>\n \t    Sandra Loosemore  <sandra@codesourcery.com>\n "}, {"sha": "e20baa10b93ce858308fd97cf33a29c014a53458", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7ce7aefd00f15e98f2802cfe3434dcca517643/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7ce7aefd00f15e98f2802cfe3434dcca517643/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=be7ce7aefd00f15e98f2802cfe3434dcca517643", "patch": "@@ -273,8 +273,10 @@ trivially_empty_bb_p (basic_block bb)\n static inline bool\n same_close_phi_node (gphi *p1, gphi *p2)\n {\n-  return operand_equal_p (gimple_phi_arg_def (p1, 0),\n-\t\t\t  gimple_phi_arg_def (p2, 0), 0);\n+  return (types_compatible_p (TREE_TYPE (gimple_phi_result (p1)),\n+\t\t\t      TREE_TYPE (gimple_phi_result (p2)))\n+\t  && operand_equal_p (gimple_phi_arg_def (p1, 0),\n+\t\t\t      gimple_phi_arg_def (p2, 0), 0));\n }\n \n static void make_close_phi_nodes_unique (basic_block bb);"}, {"sha": "90e19eeab44c201028255bdb4c8fc6879fbcf510", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7ce7aefd00f15e98f2802cfe3434dcca517643/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7ce7aefd00f15e98f2802cfe3434dcca517643/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=be7ce7aefd00f15e98f2802cfe3434dcca517643", "patch": "@@ -1,3 +1,9 @@\n+2016-03-16  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR tree-optimization/68809\n+\t* gcc.dg/graphite/pr68809-2.c: New test.\n+\t* gcc.dg/graphite/pr68809.c: New test.\n+\n 2016-03-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/70147"}, {"sha": "e6639b85ef4bb2e9e102e8bac490603c9b347029", "filename": "gcc/testsuite/gcc.dg/graphite/pr68809-2.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7ce7aefd00f15e98f2802cfe3434dcca517643/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr68809-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7ce7aefd00f15e98f2802cfe3434dcca517643/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr68809-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr68809-2.c?ref=be7ce7aefd00f15e98f2802cfe3434dcca517643", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -floop-nest-optimize\" } */\n+\n+int ae, vs, gf;\n+char ue;\n+\n+void\n+kc (char);\n+\n+void\n+pm (void)\n+{\n+  unsigned int v9;\n+  int td = (gf != 0);\n+  while (vs)\n+    {\n+      kc (ue);\n+      for (ae = 0; ae < 70; ++ae)\n+\t{\n+\t}\n+      ae &= 4;\n+      ae ^ td && ((ue = 0) != 0);\n+      ++vs;\n+    }\n+  v9 = ue + 1;\n+  ue - v9 && ((ue = 0) != 0);\n+}"}, {"sha": "1d758418f95b3814ac2cad67cdfaf75f08de087e", "filename": "gcc/testsuite/gcc.dg/graphite/pr68809.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7ce7aefd00f15e98f2802cfe3434dcca517643/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr68809.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7ce7aefd00f15e98f2802cfe3434dcca517643/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr68809.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr68809.c?ref=be7ce7aefd00f15e98f2802cfe3434dcca517643", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -floop-nest-optimize\" } */\n+\n+int ae, vs;\n+char ue;\n+\n+void\n+kc (char);\n+\n+void\n+pm (void)\n+{\n+  unsigned int v9;\n+  int gf = 0;\n+  vs = 1;\n+  while (vs)\n+    {\n+      gf -= ue;\n+      kc (ue);\n+      for (ae = 0; ae < 70; ++ae)\n+\t{\n+\t}\n+      ae &= 4;\n+      ae ^ (gf != 0) && ((ue = 0) != 0);\n+    }\n+  v9 = ue + 1;\n+  ue - v9 && ((ue = 0) != 0);\n+}"}]}