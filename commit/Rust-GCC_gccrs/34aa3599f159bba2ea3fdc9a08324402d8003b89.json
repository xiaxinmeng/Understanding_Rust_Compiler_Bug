{"sha": "34aa3599f159bba2ea3fdc9a08324402d8003b89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzRhYTM1OTlmMTU5YmJhMmVhM2ZkYzlhMDgzMjQ0MDJkODAwM2I4OQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-25T21:05:37Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-25T21:05:37Z"}, "message": "(convert_move): Don't access a hard reg in an invalid mode when doing\na truncation.\n\nFrom-SVN: r9447", "tree": {"sha": "ee2e261e263b54d3e3b90661f27226889b62962a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee2e261e263b54d3e3b90661f27226889b62962a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34aa3599f159bba2ea3fdc9a08324402d8003b89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34aa3599f159bba2ea3fdc9a08324402d8003b89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34aa3599f159bba2ea3fdc9a08324402d8003b89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34aa3599f159bba2ea3fdc9a08324402d8003b89/comments", "author": null, "committer": null, "parents": [{"sha": "c89e8dc28f98fbe84c9e4b3edbfa2c38094c16e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c89e8dc28f98fbe84c9e4b3edbfa2c38094c16e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c89e8dc28f98fbe84c9e4b3edbfa2c38094c16e6"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "c76feb013526ae376745172e80a814e837f45fd2", "filename": "gcc/expr.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34aa3599f159bba2ea3fdc9a08324402d8003b89/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34aa3599f159bba2ea3fdc9a08324402d8003b89/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=34aa3599f159bba2ea3fdc9a08324402d8003b89", "patch": "@@ -1081,6 +1081,9 @@ convert_move (to, from, unsignedp)\n \t    || GET_CODE (from) == REG\n \t    || GET_CODE (from) == SUBREG))\n \tfrom = force_reg (from_mode, from);\n+      if (GET_CODE (from) == REG && REGNO (from) < FIRST_PSEUDO_REGISTER\n+\t  && ! HARD_REGNO_MODE_OK (REGNO (from), to_mode))\n+\tfrom = copy_to_reg (from);\n       emit_move_insn (to, gen_lowpart (to_mode, from));\n       return;\n     }"}]}