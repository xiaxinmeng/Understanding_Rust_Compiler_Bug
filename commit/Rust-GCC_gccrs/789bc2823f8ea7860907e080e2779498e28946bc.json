{"sha": "789bc2823f8ea7860907e080e2779498e28946bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg5YmMyODIzZjhlYTc4NjA5MDdlMDgwZTI3Nzk0OThlMjg5NDZiYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-01-03T12:16:36Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-01-03T12:16:36Z"}, "message": "Remove inadvertent change.\n\nFrom-SVN: r3064", "tree": {"sha": "0de0e439e588b52644441be01f3b634051495e3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0de0e439e588b52644441be01f3b634051495e3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/789bc2823f8ea7860907e080e2779498e28946bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/789bc2823f8ea7860907e080e2779498e28946bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/789bc2823f8ea7860907e080e2779498e28946bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/789bc2823f8ea7860907e080e2779498e28946bc/comments", "author": null, "committer": null, "parents": [{"sha": "d0adc050ee3db38bace0b3c261e33d13fb82785e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0adc050ee3db38bace0b3c261e33d13fb82785e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0adc050ee3db38bace0b3c261e33d13fb82785e"}], "stats": {"total": 15, "additions": 2, "deletions": 13}, "files": [{"sha": "15a2c511cf83034a8fb4be1822bdb24f2ff0ae49", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/789bc2823f8ea7860907e080e2779498e28946bc/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/789bc2823f8ea7860907e080e2779498e28946bc/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=789bc2823f8ea7860907e080e2779498e28946bc", "patch": "@@ -4579,18 +4579,7 @@\n   \"\"\n   \"cror 0,0,0\")\n \f\n-;; Define the subtract-one-and-jump insns, starting with the template \n-;; so loop.c knows what to generate.\n-\n-(define_expand \"decrement_and_branchsi\"\n-  [(set (pc) (if_then_else (ne (match_operand:SI 0 \"register_operand\" \"c\")\n-\t\t\t       (const_int 1))\n-\t\t\t   (label_ref (match_operand 1 \"\" \"\"))\n-\t\t\t   (pc)))\n-   (set (match_dup 0) (plus:SI (match_dup 0) (const_int -1)))]\n-  \"\"\n-  \"\")\n-\n+;; Define the subtract-one-and-jump insns. \n ;; We need to be able to do this for any operand, including MEM, or we\n ;; will cause reload to blow up since we don't allow output reloads on\n ;; JUMP_INSNs. \n@@ -4610,7 +4599,7 @@\n    #\n    #\")\n \t\t\t       \n-;; Similar, but we can use GE since we have a REG_NONNEG.\n+;; Similar, but we can use GE since we have a REG_NOTES.\n (define_insn \"\"\n   [(set (pc)\n \t(if_then_else (ge (match_operand:SI 1 \"register_operand\" \"0,*r,*r\")"}]}