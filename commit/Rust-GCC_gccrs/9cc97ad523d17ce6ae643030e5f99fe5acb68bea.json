{"sha": "9cc97ad523d17ce6ae643030e5f99fe5acb68bea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNjOTdhZDUyM2QxN2NlNmFlNjQzMDMwZTVmOTlmZTVhY2I2OGJlYQ==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2018-07-17T08:11:28Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-07-17T08:11:28Z"}, "message": "[Ada] Configuration state not observed for instance bodies\n\nThis patch ensures that the processing of instantiated and inlined bodies uses\nthe proper configuration context available at the point of the instantiation or\ninlining.\n\nPreviously configuration pragmas which appear prior to the context items of a\nunit would lose their effect when a body is instantiated or inlined.\n\n2018-07-17  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* frontend.adb (Frontend): Update the call to Register_Config_Switches.\n\t* inline.ads: Add new component Config_Switches to record\n\tPending_Body_Info which captures the configuration state of the pending\n\tbody.  Remove components Version, Version_Pragma, SPARK_Mode, and\n\tSPARK_Mode_Pragma from record Pending_Body_Info because they are\n\talready captured in component Config_Switches.\n\t* opt.adb (Register_Opt_Config_Switches): Rename to\n\tRegister_Config_Switches.\n\t(Restore_Opt_Config_Switches): Rename to Restore_Config_Switches.\n\t(Save_Opt_Config_Switches): Rename to Save_Config_Switches. This\n\troutine is now a function, and returns the saved configuration state as\n\tan aggregate to avoid missing an attribute.\n\t(Set_Opt_Config_Switches): Rename to Set_Config_Switches.\n\t* opt.ads (Register_Opt_Config_Switches): Rename to\n\tRegister_Config_Switches.\n\t(Restore_Opt_Config_Switches): Rename to Restore_Config_Switches.\n\t(Save_Opt_Config_Switches): Rename to Save_Config_Switches. This\n\troutine is now a function.\n\t(Set_Opt_Config_Switches): Rename to Set_Config_Switches.\n\t* par.adb (Par): Update the calls to configuration switch-related\n\tsubprograms.\n\t* sem.adb (Semantics): Update the calls to configuration switch-related\n\tsubprograms.\n\t* sem_ch10.adb (Analyze_Package_Body_Stub): Update the calls to\n\tconfiguration switch-related subprograms.\n\t(Analyze_Protected_Body_Stub): Update the calls to configuration\n\tswitch-related subprograms.\n\t(Analyze_Subprogram_Body_Stub): Update calls to configuration\n\tswitch-related subprograms.\n\t* sem_ch12.adb (Add_Pending_Instantiation): Update the capture of\n\tpending instantiation attributes.\n\t(Inline_Instance_Body): Update the capture of pending instantiation\n\tattributes.  It is no longer needed to explicitly manipulate the SPARK\n\tmode.\n\t(Instantiate_Package_Body): Update the restoration of the context\n\tattributes.\n\t(Instantiate_Subprogram_Body): Update the restoration of context\n\tattributes.\n\t(Load_Parent_Of_Generic): Update the capture of pending instantiation\n\tattributes.\n\t(Set_Instance_Env): Update the way relevant configuration attributes\n\tare saved and restored.\n\ngcc/testsuite/\n\n\t* gnat.dg/config_pragma1.adb, gnat.dg/config_pragma1_pkg.ads: New testcase.\n\nFrom-SVN: r262794", "tree": {"sha": "23ba3b31f1558c7507493b0c189898086dd8d135", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23ba3b31f1558c7507493b0c189898086dd8d135"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cc97ad523d17ce6ae643030e5f99fe5acb68bea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cc97ad523d17ce6ae643030e5f99fe5acb68bea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cc97ad523d17ce6ae643030e5f99fe5acb68bea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cc97ad523d17ce6ae643030e5f99fe5acb68bea/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "03b4b15ec70e28f945fab896d4574e3953fa2272", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03b4b15ec70e28f945fab896d4574e3953fa2272", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03b4b15ec70e28f945fab896d4574e3953fa2272"}], "stats": {"total": 443, "additions": 249, "deletions": 194}, "files": [{"sha": "9fe7a3b69d7c69c49a3cf97bf283a8b50d846642", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc97ad523d17ce6ae643030e5f99fe5acb68bea/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc97ad523d17ce6ae643030e5f99fe5acb68bea/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9cc97ad523d17ce6ae643030e5f99fe5acb68bea", "patch": "@@ -1,3 +1,48 @@\n+2018-07-17  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* frontend.adb (Frontend): Update the call to Register_Config_Switches.\n+\t* inline.ads: Add new component Config_Switches to record\n+\tPending_Body_Info which captures the configuration state of the pending\n+\tbody.  Remove components Version, Version_Pragma, SPARK_Mode, and\n+\tSPARK_Mode_Pragma from record Pending_Body_Info because they are\n+\talready captured in component Config_Switches.\n+\t* opt.adb (Register_Opt_Config_Switches): Rename to\n+\tRegister_Config_Switches.\n+\t(Restore_Opt_Config_Switches): Rename to Restore_Config_Switches.\n+\t(Save_Opt_Config_Switches): Rename to Save_Config_Switches. This\n+\troutine is now a function, and returns the saved configuration state as\n+\tan aggregate to avoid missing an attribute.\n+\t(Set_Opt_Config_Switches): Rename to Set_Config_Switches.\n+\t* opt.ads (Register_Opt_Config_Switches): Rename to\n+\tRegister_Config_Switches.\n+\t(Restore_Opt_Config_Switches): Rename to Restore_Config_Switches.\n+\t(Save_Opt_Config_Switches): Rename to Save_Config_Switches. This\n+\troutine is now a function.\n+\t(Set_Opt_Config_Switches): Rename to Set_Config_Switches.\n+\t* par.adb (Par): Update the calls to configuration switch-related\n+\tsubprograms.\n+\t* sem.adb (Semantics): Update the calls to configuration switch-related\n+\tsubprograms.\n+\t* sem_ch10.adb (Analyze_Package_Body_Stub): Update the calls to\n+\tconfiguration switch-related subprograms.\n+\t(Analyze_Protected_Body_Stub): Update the calls to configuration\n+\tswitch-related subprograms.\n+\t(Analyze_Subprogram_Body_Stub): Update calls to configuration\n+\tswitch-related subprograms.\n+\t* sem_ch12.adb (Add_Pending_Instantiation): Update the capture of\n+\tpending instantiation attributes.\n+\t(Inline_Instance_Body): Update the capture of pending instantiation\n+\tattributes.  It is no longer needed to explicitly manipulate the SPARK\n+\tmode.\n+\t(Instantiate_Package_Body): Update the restoration of the context\n+\tattributes.\n+\t(Instantiate_Subprogram_Body): Update the restoration of context\n+\tattributes.\n+\t(Load_Parent_Of_Generic): Update the capture of pending instantiation\n+\tattributes.\n+\t(Set_Instance_Env): Update the way relevant configuration attributes\n+\tare saved and restored.\n+\n 2018-07-17  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Variable>: Deal with"}, {"sha": "1af5587110fdb5d1474d64c77566907d08999968", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc97ad523d17ce6ae643030e5f99fe5acb68bea/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc97ad523d17ce6ae643030e5f99fe5acb68bea/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=9cc97ad523d17ce6ae643030e5f99fe5acb68bea", "patch": "@@ -303,7 +303,7 @@ begin\n       --  capture the values of the configuration switches (see Opt for further\n       --  details).\n \n-      Opt.Register_Opt_Config_Switches;\n+      Register_Config_Switches;\n \n       --  Check for file which contains No_Body pragma\n "}, {"sha": "81f1e2993532eb2fad01a5aecfaf9d396fada00e", "filename": "gcc/ada/inline.ads", "status": "modified", "additions": 9, "deletions": 19, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc97ad523d17ce6ae643030e5f99fe5acb68bea/gcc%2Fada%2Finline.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc97ad523d17ce6ae643030e5f99fe5acb68bea/gcc%2Fada%2Finline.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.ads?ref=9cc97ad523d17ce6ae643030e5f99fe5acb68bea", "patch": "@@ -63,21 +63,24 @@ package Inline is\n    --  See full description in body of Sem_Ch12 for more details\n \n    type Pending_Body_Info is record\n-      Inst_Node : Node_Id;\n-      --  Node for instantiation that requires the body\n-\n       Act_Decl : Node_Id;\n       --  Declaration for package or subprogram spec for instantiation\n \n-      Expander_Status : Boolean;\n-      --  If the body is instantiated only for semantic checking, expansion\n-      --  must be inhibited.\n+      Config_Switches : Config_Switches_Type;\n+      --  Capture the values of configuration switches\n \n       Current_Sem_Unit : Unit_Number_Type;\n       --  The semantic unit within which the instantiation is found. Must be\n       --  restored when compiling the body, to insure that internal entities\n       --  use the same counter and are unique over spec and body.\n \n+      Expander_Status : Boolean;\n+      --  If the body is instantiated only for semantic checking, expansion\n+      --  must be inhibited.\n+\n+      Inst_Node : Node_Id;\n+      --  Node for instantiation that requires the body\n+\n       Scope_Suppress           : Suppress_Record;\n       Local_Suppress_Stack_Top : Suppress_Stack_Entry_Ptr;\n       --  Save suppress information at the point of instantiation. Used to\n@@ -93,21 +96,8 @@ package Inline is\n       --  This means we have to capture this information from the current scope\n       --  at the point of instantiation.\n \n-      Version : Ada_Version_Type;\n-      --  The body must be compiled with the same language version as the\n-      --  spec. The version may be set by a configuration pragma in a separate\n-      --  file or in the current file, and may differ from body to body.\n-\n-      Version_Pragma : Node_Id;\n-      --  This is linked with the Version value\n-\n       Warnings : Warning_Record;\n       --  Capture values of warning flags\n-\n-      SPARK_Mode        : SPARK_Mode_Type;\n-      SPARK_Mode_Pragma : Node_Id;\n-      --  SPARK_Mode for an instance is the one applicable at the point of\n-      --  instantiation. SPARK_Mode_Pragma is the related active pragma.\n    end record;\n \n    package Pending_Instantiations is new Table.Table ("}, {"sha": "1f128890bd9a6b2f6d265d23d1c31c9d97f8aecf", "filename": "gcc/ada/opt.adb", "status": "modified", "additions": 51, "deletions": 47, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc97ad523d17ce6ae643030e5f99fe5acb68bea/gcc%2Fada%2Fopt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc97ad523d17ce6ae643030e5f99fe5acb68bea/gcc%2Fada%2Fopt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.adb?ref=9cc97ad523d17ce6ae643030e5f99fe5acb68bea", "patch": "@@ -80,11 +80,11 @@ package body Opt is\n       return Exception_Mechanism = Back_End_ZCX;\n    end ZCX_Exceptions;\n \n-   ----------------------------------\n-   -- Register_Opt_Config_Switches --\n-   ----------------------------------\n+   ------------------------------\n+   -- Register_Config_Switches --\n+   ------------------------------\n \n-   procedure Register_Opt_Config_Switches is\n+   procedure Register_Config_Switches is\n    begin\n       Ada_Version_Config                    := Ada_Version;\n       Ada_Version_Pragma_Config             := Ada_Version_Pragma;\n@@ -118,13 +118,13 @@ package body Opt is\n       --  but that's not a local setting.\n \n       Optimize_Alignment_Local := False;\n-   end Register_Opt_Config_Switches;\n+   end Register_Config_Switches;\n \n-   ---------------------------------\n-   -- Restore_Opt_Config_Switches --\n-   ---------------------------------\n+   -----------------------------\n+   -- Restore_Config_Switches --\n+   -----------------------------\n \n-   procedure Restore_Opt_Config_Switches (Save : Config_Switches_Type) is\n+   procedure Restore_Config_Switches (Save : Config_Switches_Type) is\n    begin\n       Ada_Version                    := Save.Ada_Version;\n       Ada_Version_Pragma             := Save.Ada_Version_Pragma;\n@@ -160,48 +160,50 @@ package body Opt is\n       --  Normalize_Scalars then it forces that value for all with'ed units.\n \n       Init_Or_Norm_Scalars := Initialize_Scalars or Normalize_Scalars;\n-   end Restore_Opt_Config_Switches;\n+   end Restore_Config_Switches;\n \n-   ------------------------------\n-   -- Save_Opt_Config_Switches --\n-   ------------------------------\n+   --------------------------\n+   -- Save_Config_Switches --\n+   --------------------------\n \n-   procedure Save_Opt_Config_Switches (Save : out Config_Switches_Type) is\n+   function Save_Config_Switches return Config_Switches_Type is\n    begin\n-      Save.Ada_Version                    := Ada_Version;\n-      Save.Ada_Version_Pragma             := Ada_Version_Pragma;\n-      Save.Ada_Version_Explicit           := Ada_Version_Explicit;\n-      Save.Assertions_Enabled             := Assertions_Enabled;\n-      Save.Assume_No_Invalid_Values       := Assume_No_Invalid_Values;\n-      Save.Check_Float_Overflow           := Check_Float_Overflow;\n-      Save.Check_Policy_List              := Check_Policy_List;\n-      Save.Default_Pool                   := Default_Pool;\n-      Save.Default_SSO                    := Default_SSO;\n-      Save.Dynamic_Elaboration_Checks     := Dynamic_Elaboration_Checks;\n-      Save.Exception_Locations_Suppressed := Exception_Locations_Suppressed;\n-      Save.Extensions_Allowed             := Extensions_Allowed;\n-      Save.External_Name_Exp_Casing       := External_Name_Exp_Casing;\n-      Save.External_Name_Imp_Casing       := External_Name_Imp_Casing;\n-      Save.Fast_Math                      := Fast_Math;\n-      Save.Initialize_Scalars             := Initialize_Scalars;\n-      Save.No_Component_Reordering        := No_Component_Reordering;\n-      Save.Optimize_Alignment             := Optimize_Alignment;\n-      Save.Optimize_Alignment_Local       := Optimize_Alignment_Local;\n-      Save.Persistent_BSS_Mode            := Persistent_BSS_Mode;\n-      Save.Polling_Required               := Polling_Required;\n-      Save.Prefix_Exception_Messages      := Prefix_Exception_Messages;\n-      Save.SPARK_Mode                     := SPARK_Mode;\n-      Save.SPARK_Mode_Pragma              := SPARK_Mode_Pragma;\n-      Save.Uneval_Old                     := Uneval_Old;\n-      Save.Use_VADS_Size                  := Use_VADS_Size;\n-      Save.Warnings_As_Errors_Count       := Warnings_As_Errors_Count;\n-   end Save_Opt_Config_Switches;\n+      return\n+        (Ada_Version                    => Ada_Version,\n+         Ada_Version_Pragma             => Ada_Version_Pragma,\n+         Ada_Version_Explicit           => Ada_Version_Explicit,\n+         Assertions_Enabled             => Assertions_Enabled,\n+         Assume_No_Invalid_Values       => Assume_No_Invalid_Values,\n+         Check_Float_Overflow           => Check_Float_Overflow,\n+         Check_Policy_List              => Check_Policy_List,\n+         Default_Pool                   => Default_Pool,\n+         Default_SSO                    => Default_SSO,\n+         Dynamic_Elaboration_Checks     => Dynamic_Elaboration_Checks,\n+         Exception_Locations_Suppressed => Exception_Locations_Suppressed,\n+         Extensions_Allowed             => Extensions_Allowed,\n+         External_Name_Exp_Casing       => External_Name_Exp_Casing,\n+         External_Name_Imp_Casing       => External_Name_Imp_Casing,\n+         Fast_Math                      => Fast_Math,\n+         Initialize_Scalars             => Initialize_Scalars,\n+         No_Component_Reordering        => No_Component_Reordering,\n+         Normalize_Scalars              => Normalize_Scalars,\n+         Optimize_Alignment             => Optimize_Alignment,\n+         Optimize_Alignment_Local       => Optimize_Alignment_Local,\n+         Persistent_BSS_Mode            => Persistent_BSS_Mode,\n+         Polling_Required               => Polling_Required,\n+         Prefix_Exception_Messages      => Prefix_Exception_Messages,\n+         SPARK_Mode                     => SPARK_Mode,\n+         SPARK_Mode_Pragma              => SPARK_Mode_Pragma,\n+         Uneval_Old                     => Uneval_Old,\n+         Use_VADS_Size                  => Use_VADS_Size,\n+         Warnings_As_Errors_Count       => Warnings_As_Errors_Count);\n+   end Save_Config_Switches;\n \n-   -----------------------------\n-   -- Set_Opt_Config_Switches --\n-   -----------------------------\n+   -------------------------\n+   -- Set_Config_Switches --\n+   -------------------------\n \n-   procedure Set_Opt_Config_Switches\n+   procedure Set_Config_Switches\n      (Internal_Unit : Boolean;\n       Main_Unit     : Boolean)\n    is\n@@ -244,12 +246,14 @@ package body Opt is\n             Check_Policy_List        := Check_Policy_List_Config;\n             SPARK_Mode               := SPARK_Mode_Config;\n             SPARK_Mode_Pragma        := SPARK_Mode_Pragma_Config;\n+\n          else\n             if GNAT_Mode_Config then\n                Assertions_Enabled    := Assertions_Enabled_Config;\n             else\n                Assertions_Enabled    := False;\n             end if;\n+\n             Assume_No_Invalid_Values := False;\n             Check_Policy_List        := Empty;\n             SPARK_Mode               := None;\n@@ -299,7 +303,7 @@ package body Opt is\n       Exception_Locations_Suppressed := Exception_Locations_Suppressed_Config;\n       Fast_Math                      := Fast_Math_Config;\n       Polling_Required               := Polling_Required_Config;\n-   end Set_Opt_Config_Switches;\n+   end Set_Config_Switches;\n \n    ---------------\n    -- Tree_Read --"}, {"sha": "fd45984fb9e84550f3875c90ef468a76f849aebc", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc97ad523d17ce6ae643030e5f99fe5acb68bea/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc97ad523d17ce6ae643030e5f99fe5acb68bea/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=9cc97ad523d17ce6ae643030e5f99fe5acb68bea", "patch": "@@ -2148,11 +2148,20 @@ package Opt is\n    type Config_Switches_Type is private;\n    --  Type used to save values of the switches set from Config values\n \n-   procedure Save_Opt_Config_Switches (Save : out Config_Switches_Type);\n-   --  This procedure saves the current values of the switches which are\n-   --  initialized from the above Config values.\n+   procedure Register_Config_Switches;\n+   --  This procedure is called after processing the gnat.adc file and other\n+   --  configuration pragma files to record the values of the Config switches,\n+   --  as possibly modified by the use of command line switches and pragmas\n+   --  appearing in these files.\n+\n+   procedure Restore_Config_Switches (Save : Config_Switches_Type);\n+   --  This procedure restores a set of switch values previously saved by a\n+   --  call to Save_Config_Switches.\n+\n+   function Save_Config_Switches return Config_Switches_Type;\n+   --  Return the current state of all configuration-related attributes\n \n-   procedure Set_Opt_Config_Switches\n+   procedure Set_Config_Switches\n      (Internal_Unit : Boolean;\n       Main_Unit     : Boolean);\n    --  This procedure sets the switches to the appropriate initial values. The\n@@ -2164,16 +2173,6 @@ package Opt is\n    --  internal unit is the main unit, in which case we use the command line\n    --  settings.\n \n-   procedure Restore_Opt_Config_Switches (Save : Config_Switches_Type);\n-   --  This procedure restores a set of switch values previously saved by a\n-   --  call to Save_Opt_Config_Switches (Save).\n-\n-   procedure Register_Opt_Config_Switches;\n-   --  This procedure is called after processing the gnat.adc file and other\n-   --  configuration pragma files to record the values of the Config switches,\n-   --  as possibly modified by the use of command line switches and pragmas\n-   --  appearing in these files.\n-\n    ------------------------\n    -- Other Global Flags --\n    ------------------------"}, {"sha": "dd6c9b6028d43a1d9a95f936e64fb20bbfac3efb", "filename": "gcc/ada/par.adb", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc97ad523d17ce6ae643030e5f99fe5acb68bea/gcc%2Fada%2Fpar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc97ad523d17ce6ae643030e5f99fe5acb68bea/gcc%2Fada%2Fpar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar.adb?ref=9cc97ad523d17ce6ae643030e5f99fe5acb68bea", "patch": "@@ -57,22 +57,22 @@ with Tbuild;   use Tbuild;\n \n function Par (Configuration_Pragmas : Boolean) return List_Id is\n \n+   Inside_Record_Definition : Boolean := False;\n+   --  True within a record definition. Used to control warning for\n+   --  redefinition of standard entities (not issued for field names).\n+\n+   Loop_Block_Count : Nat := 0;\n+   --  Counter used for constructing loop/block names (see the routine\n+   --  Par.Ch5.Get_Loop_Block_Name).\n+\n    Num_Library_Units : Natural := 0;\n    --  Count number of units parsed (relevant only in syntax check only mode,\n    --  since in semantics check mode only a single unit is permitted anyway).\n \n-   Save_Config_Switches : Config_Switches_Type;\n+   Save_Config_Attrs : Config_Switches_Type;\n    --  Variable used to save values of config switches while we parse the\n    --  new unit, to be restored on exit for proper recursive behavior.\n \n-   Loop_Block_Count : Nat := 0;\n-   --  Counter used for constructing loop/block names (see the routine\n-   --  Par.Ch5.Get_Loop_Block_Name).\n-\n-   Inside_Record_Definition : Boolean := False;\n-   --  True within a record definition. Used to control warning for\n-   --  redefinition of standard entities (not issued for field names).\n-\n    --------------------\n    -- Error Recovery --\n    --------------------\n@@ -1517,15 +1517,15 @@ begin\n    --  Normal case of compilation unit\n \n    else\n-      Save_Opt_Config_Switches (Save_Config_Switches);\n+      Save_Config_Attrs := Save_Config_Switches;\n \n       --  The following loop runs more than once in syntax check mode\n       --  where we allow multiple compilation units in the same file\n       --  and in Multiple_Unit_Per_file mode where we skip units till\n       --  we get to the unit we want.\n \n       for Ucount in Pos loop\n-         Set_Opt_Config_Switches\n+         Set_Config_Switches\n            (Is_Internal_Unit (Current_Source_Unit),\n             Main_Unit => Current_Source_Unit = Main_Unit);\n \n@@ -1661,7 +1661,7 @@ begin\n \n          end if;\n \n-         Restore_Opt_Config_Switches (Save_Config_Switches);\n+         Restore_Config_Switches (Save_Config_Attrs);\n       end loop;\n \n       --  Now that we have completely parsed the source file, we can complete\n@@ -1690,7 +1690,7 @@ begin\n \n       --  Restore settings of switches saved on entry\n \n-      Restore_Opt_Config_Switches (Save_Config_Switches);\n+      Restore_Config_Switches (Save_Config_Attrs);\n       Set_Comes_From_Source_Default (False);\n    end if;\n "}, {"sha": "799d66d78ead35774dc4cb3577d5d8b2f916ef6b", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc97ad523d17ce6ae643030e5f99fe5acb68bea/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc97ad523d17ce6ae643030e5f99fe5acb68bea/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=9cc97ad523d17ce6ae643030e5f99fe5acb68bea", "patch": "@@ -1438,7 +1438,7 @@ package body Sem is\n                                In_Extended_Main_Source_Unit (Comp_Unit);\n       --  Determine if unit is in extended main source unit\n \n-      Save_Config_Switches : Config_Switches_Type;\n+      Save_Config_Attrs : Config_Switches_Type;\n       --  Variable used to save values of config switches while we analyze the\n       --  new unit, to be restored on exit for proper recursive behavior.\n \n@@ -1518,8 +1518,8 @@ package body Sem is\n \n       --  Save current config switches and reset then appropriately\n \n-      Save_Opt_Config_Switches (Save_Config_Switches);\n-      Set_Opt_Config_Switches\n+      Save_Config_Attrs := Save_Config_Switches;\n+      Set_Config_Switches\n         (Is_Internal_Unit (Current_Sem_Unit),\n          Is_Main_Unit_Or_Main_Unit_Spec);\n \n@@ -1602,7 +1602,7 @@ package body Sem is\n       Outer_Generic_Scope  := S_Outer_Gen_Scope;\n       Style_Check          := S_Style_Check;\n \n-      Restore_Opt_Config_Switches (Save_Config_Switches);\n+      Restore_Config_Switches (Save_Config_Attrs);\n \n       --  Deal with restore of restrictions\n "}, {"sha": "39ed04681aa64b479353fae2f03d1d06f44e5325", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc97ad523d17ce6ae643030e5f99fe5acb68bea/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc97ad523d17ce6ae643030e5f99fe5acb68bea/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=9cc97ad523d17ce6ae643030e5f99fe5acb68bea", "patch": "@@ -1624,7 +1624,7 @@ package body Sem_Ch10 is\n          --  Retain and restore the configuration options of the enclosing\n          --  context as the proper body may introduce a set of its own.\n \n-         Save_Opt_Config_Switches (Opts);\n+         Opts := Save_Config_Switches;\n \n          --  Indicate that the body of the package exists. If we are doing\n          --  only semantic analysis, the stub stands for the body. If we are\n@@ -1644,7 +1644,7 @@ package body Sem_Ch10 is\n          Generate_Reference (Nam, Id, 'b');\n          Analyze_Proper_Body (N, Nam);\n \n-         Restore_Opt_Config_Switches (Opts);\n+         Restore_Config_Switches (Opts);\n       end if;\n    end Analyze_Package_Body_Stub;\n \n@@ -1985,7 +1985,7 @@ package body Sem_Ch10 is\n          --  Retain and restore the configuration options of the enclosing\n          --  context as the proper body may introduce a set of its own.\n \n-         Save_Opt_Config_Switches (Opts);\n+         Opts := Save_Config_Switches;\n \n          Set_Scope (Id, Current_Scope);\n          Set_Ekind (Id, E_Protected_Body);\n@@ -2000,7 +2000,7 @@ package body Sem_Ch10 is\n          Generate_Reference (Nam, Id, 'b');\n          Analyze_Proper_Body (N, Etype (Nam));\n \n-         Restore_Opt_Config_Switches (Opts);\n+         Restore_Config_Switches (Opts);\n       end if;\n    end Analyze_Protected_Body_Stub;\n \n@@ -2045,15 +2045,15 @@ package body Sem_Ch10 is\n       --  Retain and restore the configuration options of the enclosing context\n       --  as the proper body may introduce a set of its own.\n \n-      Save_Opt_Config_Switches (Opts);\n+      Opts := Save_Config_Switches;\n \n       --  Treat stub as a body, which checks conformance if there is a previous\n       --  declaration, or else introduces entity and its signature.\n \n       Analyze_Subprogram_Body (N);\n       Analyze_Proper_Body (N, Empty);\n \n-      Restore_Opt_Config_Switches (Opts);\n+      Restore_Config_Switches (Opts);\n    end Analyze_Subprogram_Body_Stub;\n \n    ---------------------"}, {"sha": "391d1e3ae7c299452e659d8685cf31a30fb9d6f1", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 61, "deletions": 90, "changes": 151, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc97ad523d17ce6ae643030e5f99fe5acb68bea/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc97ad523d17ce6ae643030e5f99fe5acb68bea/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=9cc97ad523d17ce6ae643030e5f99fe5acb68bea", "patch": "@@ -1031,23 +1031,18 @@ package body Sem_Ch12 is\n \n    procedure Add_Pending_Instantiation (Inst : Node_Id; Act_Decl : Node_Id) is\n    begin\n-\n-      --  Add to the instantiation node and the corresponding unit declaration\n-      --  the current values of global flags to be used when analyzing the\n-      --  instance body.\n+      --  Capture the body of the generic instantiation along with its context\n+      --  for later processing by Instantiate_Bodies.\n \n       Pending_Instantiations.Append\n-        ((Inst_Node                => Inst,\n-          Act_Decl                 => Act_Decl,\n-          Expander_Status          => Expander_Active,\n+        ((Act_Decl                 => Act_Decl,\n+          Config_Switches          => Save_Config_Switches,\n           Current_Sem_Unit         => Current_Sem_Unit,\n-          Scope_Suppress           => Scope_Suppress,\n+          Expander_Status          => Expander_Active,\n+          Inst_Node                => Inst,\n           Local_Suppress_Stack_Top => Local_Suppress_Stack_Top,\n-          Version                  => Ada_Version,\n-          Version_Pragma           => Ada_Version_Pragma,\n-          Warnings                 => Save_Warnings,\n-          SPARK_Mode               => SPARK_Mode,\n-          SPARK_Mode_Pragma        => SPARK_Mode_Pragma));\n+          Scope_Suppress           => Scope_Suppress,\n+          Warnings                 => Save_Warnings));\n    end Add_Pending_Instantiation;\n \n    ----------------------------------\n@@ -4782,17 +4777,13 @@ package body Sem_Ch12 is\n       Gen_Unit : Entity_Id;\n       Act_Decl : Node_Id)\n    is\n+      Config_Attrs : constant Config_Switches_Type := Save_Config_Switches;\n+\n       Curr_Comp : constant Node_Id   := Cunit (Current_Sem_Unit);\n       Curr_Unit : constant Entity_Id := Cunit_Entity (Current_Sem_Unit);\n       Gen_Comp  : constant Entity_Id :=\n                     Cunit_Entity (Get_Source_Unit (Gen_Unit));\n \n-      Saved_SM  : constant SPARK_Mode_Type := SPARK_Mode;\n-      Saved_SMP : constant Node_Id         := SPARK_Mode_Pragma;\n-      --  Save the SPARK mode-related data to restore on exit. Removing\n-      --  enclosing scopes to provide a clean environment for analysis of\n-      --  the inlined body will eliminate any previously set SPARK_Mode.\n-\n       Scope_Stack_Depth : constant Pos :=\n                             Scope_Stack.Last - Scope_Stack.First + 1;\n \n@@ -4934,25 +4925,25 @@ package body Sem_Ch12 is\n \n          pragma Assert (Num_Inner < Num_Scopes);\n \n-         --  The inlined package body must be analyzed with the SPARK_Mode of\n-         --  the enclosing context, otherwise the body may cause bogus errors\n-         --  if a configuration SPARK_Mode pragma in in effect.\n-\n          Push_Scope (Standard_Standard);\n          Scope_Stack.Table (Scope_Stack.Last).Is_Active_Stack_Base := True;\n+\n+         --  The inlined package body is analyzed with the configuration state\n+         --  of the context prior to the scope manipulations performed above.\n+\n+         --  ??? shouldn't this also use the warning state of the context prior\n+         --  to the scope manipulations?\n+\n          Instantiate_Package_Body\n            (Body_Info =>\n-             ((Inst_Node                => N,\n-               Act_Decl                 => Act_Decl,\n-               Expander_Status          => Expander_Active,\n+             ((Act_Decl                 => Act_Decl,\n+               Config_Switches          => Config_Attrs,\n                Current_Sem_Unit         => Current_Sem_Unit,\n-               Scope_Suppress           => Scope_Suppress,\n+               Expander_Status          => Expander_Active,\n+               Inst_Node                => N,\n                Local_Suppress_Stack_Top => Local_Suppress_Stack_Top,\n-               Version                  => Ada_Version,\n-               Version_Pragma           => Ada_Version_Pragma,\n-               Warnings                 => Save_Warnings,\n-               SPARK_Mode               => Saved_SM,\n-               SPARK_Mode_Pragma        => Saved_SMP)),\n+               Scope_Suppress           => Scope_Suppress,\n+               Warnings                 => Save_Warnings)),\n             Inlined_Body => True);\n \n          Pop_Scope;\n@@ -5059,17 +5050,14 @@ package body Sem_Ch12 is\n       else\n          Instantiate_Package_Body\n            (Body_Info =>\n-             ((Inst_Node                => N,\n-               Act_Decl                 => Act_Decl,\n-               Expander_Status          => Expander_Active,\n+             ((Act_Decl                 => Act_Decl,\n+               Config_Switches          => Save_Config_Switches,\n                Current_Sem_Unit         => Current_Sem_Unit,\n-               Scope_Suppress           => Scope_Suppress,\n+               Expander_Status          => Expander_Active,\n+               Inst_Node                => N,\n                Local_Suppress_Stack_Top => Local_Suppress_Stack_Top,\n-               Version                  => Ada_Version,\n-               Version_Pragma           => Ada_Version_Pragma,\n-               Warnings                 => Save_Warnings,\n-               SPARK_Mode               => SPARK_Mode,\n-               SPARK_Mode_Pragma        => SPARK_Mode_Pragma)),\n+               Scope_Suppress           => Scope_Suppress,\n+               Warnings                 => Save_Warnings)),\n             Inlined_Body => True);\n       end if;\n    end Inline_Instance_Body;\n@@ -8994,7 +8982,7 @@ package body Sem_Ch12 is\n       --  Save configuration switches. These may be reset if the unit is a\n       --  predefined unit, and the current mode is not Ada 2005.\n \n-      Save_Opt_Config_Switches (Saved.Switches);\n+      Saved.Switches := Save_Config_Switches;\n \n       Instance_Envs.Append (Saved);\n \n@@ -11334,13 +11322,9 @@ package body Sem_Ch12 is\n \n       Local_Suppress_Stack_Top := Body_Info.Local_Suppress_Stack_Top;\n       Scope_Suppress           := Body_Info.Scope_Suppress;\n-      Opt.Ada_Version          := Body_Info.Version;\n-      Opt.Ada_Version_Pragma   := Body_Info.Version_Pragma;\n-      Restore_Warnings (Body_Info.Warnings);\n-\n-      --  Install the SPARK mode which applies to the package body\n \n-      Install_SPARK_Mode (Body_Info.SPARK_Mode, Body_Info.SPARK_Mode_Pragma);\n+      Restore_Config_Switches (Body_Info.Config_Switches);\n+      Restore_Warnings        (Body_Info.Warnings);\n \n       if No (Gen_Body_Id) then\n \n@@ -11694,15 +11678,9 @@ package body Sem_Ch12 is\n \n       Local_Suppress_Stack_Top := Body_Info.Local_Suppress_Stack_Top;\n       Scope_Suppress           := Body_Info.Scope_Suppress;\n-      Opt.Ada_Version          := Body_Info.Version;\n-      Opt.Ada_Version_Pragma   := Body_Info.Version_Pragma;\n-      Restore_Warnings (Body_Info.Warnings);\n \n-      --  Install the SPARK mode which applies to the subprogram body from the\n-      --  instantiation context. This may be refined further if an explicit\n-      --  SPARK_Mode pragma applies to the generic body.\n-\n-      Install_SPARK_Mode (Body_Info.SPARK_Mode, Body_Info.SPARK_Mode_Pragma);\n+      Restore_Config_Switches (Body_Info.Config_Switches);\n+      Restore_Warnings        (Body_Info.Warnings);\n \n       if No (Gen_Body_Id) then\n \n@@ -13735,20 +13713,17 @@ package body Sem_Ch12 is\n                         Decl := First_Elmt (Previous_Instances);\n                         while Present (Decl) loop\n                            Info :=\n-                             (Inst_Node                => Node (Decl),\n-                              Act_Decl                 =>\n+                             (Act_Decl                 =>\n                                 Instance_Spec (Node (Decl)),\n-                              Expander_Status          => Exp_Status,\n+                              Config_Switches          => Save_Config_Switches,\n                               Current_Sem_Unit         =>\n                                 Get_Code_Unit (Sloc (Node (Decl))),\n-                              Scope_Suppress           => Scope_Suppress,\n+                              Expander_Status          => Exp_Status,\n+                              Inst_Node                => Node (Decl),\n                               Local_Suppress_Stack_Top =>\n                                 Local_Suppress_Stack_Top,\n-                              Version                  => Ada_Version,\n-                              Version_Pragma           => Ada_Version_Pragma,\n-                              Warnings                 => Save_Warnings,\n-                              SPARK_Mode               => SPARK_Mode,\n-                              SPARK_Mode_Pragma        => SPARK_Mode_Pragma);\n+                              Scope_Suppress           => Scope_Suppress,\n+                              Warnings                 => Save_Warnings);\n \n                            --  Package instance\n \n@@ -13798,18 +13773,15 @@ package body Sem_Ch12 is\n \n                   Instantiate_Package_Body\n                     (Body_Info =>\n-                       ((Inst_Node                => Inst_Node,\n-                         Act_Decl                 => True_Parent,\n+                       ((Act_Decl                 => True_Parent,\n+                         Config_Switches          => Save_Config_Switches,\n+                         Current_Sem_Unit         =>\n+                           Get_Code_Unit (Sloc (Inst_Node)),\n                          Expander_Status          => Exp_Status,\n-                         Current_Sem_Unit         => Get_Code_Unit\n-                                                       (Sloc (Inst_Node)),\n-                         Scope_Suppress           => Scope_Suppress,\n+                         Inst_Node                => Inst_Node,\n                          Local_Suppress_Stack_Top => Local_Suppress_Stack_Top,\n-                         Version                  => Ada_Version,\n-                         Version_Pragma           => Ada_Version_Pragma,\n-                         Warnings                 => Save_Warnings,\n-                         SPARK_Mode               => SPARK_Mode,\n-                         SPARK_Mode_Pragma        => SPARK_Mode_Pragma)),\n+                         Scope_Suppress           => Scope_Suppress,\n+                         Warnings                 => Save_Warnings)),\n                      Body_Optional => Body_Optional);\n                end;\n             end if;\n@@ -14405,7 +14377,7 @@ package body Sem_Ch12 is\n       Parent_Unit_Visible         := Saved.Parent_Unit_Visible;\n       Instance_Parent_Unit        := Saved.Instance_Parent_Unit;\n \n-      Restore_Opt_Config_Switches (Saved.Switches);\n+      Restore_Config_Switches (Saved.Switches);\n \n       Instance_Envs.Decrement_Last;\n    end Restore_Env;\n@@ -15980,11 +15952,10 @@ package body Sem_Ch12 is\n       Act_Unit : Entity_Id)\n    is\n       Saved_AE  : constant Boolean         := Assertions_Enabled;\n+      Saved_CPL : constant Node_Id         := Check_Policy_List;\n+      Saved_DEC : constant Boolean         := Dynamic_Elaboration_Checks;\n       Saved_SM  : constant SPARK_Mode_Type := SPARK_Mode;\n       Saved_SMP : constant Node_Id         := SPARK_Mode_Pragma;\n-      --  Save the SPARK mode-related data because utilizing the configuration\n-      --  values of pragmas and switches will eliminate any previously set\n-      --  SPARK_Mode.\n \n    begin\n       --  Regardless of the current mode, predefined units are analyzed in the\n@@ -15993,20 +15964,20 @@ package body Sem_Ch12 is\n       --  These are always analyzed in the current mode.\n \n       if In_Internal_Unit (Gen_Unit) then\n-         Set_Opt_Config_Switches (True, Current_Sem_Unit = Main_Unit);\n \n-         --  In Ada2012 we may want to enable assertions in an instance of a\n-         --  predefined unit, in which case we need to preserve the current\n-         --  setting for the Assertions_Enabled flag. This will become more\n-         --  critical when pre/postconditions are added to predefined units,\n-         --  as is already the case for some numeric libraries.\n+         --  The following call resets all configuration attributes to default\n+         --  or the xxx_Config versions of the attributes when the current sem\n+         --  unit is the main unit. At the same time, internal units must also\n+         --  inherit certain configuration attributes from their context. It\n+         --  is unclear what these two sets are.\n \n-         if Ada_Version >= Ada_2012 then\n-            Assertions_Enabled := Saved_AE;\n-         end if;\n+         Set_Config_Switches (True, Current_Sem_Unit = Main_Unit);\n+\n+         --  Reinstall relevant configuration attributes of the context\n \n-         --  Reinstall the SPARK_Mode which was in effect at the point of\n-         --  instantiation.\n+         Assertions_Enabled         := Saved_AE;\n+         Check_Policy_List          := Saved_CPL;\n+         Dynamic_Elaboration_Checks := Saved_DEC;\n \n          Install_SPARK_Mode (Saved_SM, Saved_SMP);\n       end if;"}, {"sha": "50cc08f4a95b80cc40d552198b990c994225791e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc97ad523d17ce6ae643030e5f99fe5acb68bea/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc97ad523d17ce6ae643030e5f99fe5acb68bea/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9cc97ad523d17ce6ae643030e5f99fe5acb68bea", "patch": "@@ -1,3 +1,7 @@\n+2018-07-17  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* gnat.dg/config_pragma1.adb, gnat.dg/config_pragma1_pkg.ads: New testcase.\n+\n 2018-07-17  Ed Schonberg  <schonberg@adacore.com>\n \n \t* gnat.dg/equal3.adb: New testcase."}, {"sha": "bae42d298ef4b1076a78e69cff60486e4ca6dfaa", "filename": "gcc/testsuite/gnat.dg/config_pragma1.adb", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc97ad523d17ce6ae643030e5f99fe5acb68bea/gcc%2Ftestsuite%2Fgnat.dg%2Fconfig_pragma1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc97ad523d17ce6ae643030e5f99fe5acb68bea/gcc%2Ftestsuite%2Fgnat.dg%2Fconfig_pragma1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fconfig_pragma1.adb?ref=9cc97ad523d17ce6ae643030e5f99fe5acb68bea", "patch": "@@ -0,0 +1,21 @@\n+--  { dg-do run }\n+--  { dg-options \"-gnata\" }\n+\n+with Ada.Strings.Fixed;  use Ada.Strings.Fixed;\n+with Config_Pragma1_Pkg; use Config_Pragma1_Pkg;\n+\n+procedure Config_Pragma1 is\n+   Target : String10;\n+\n+begin\n+   for I in Positive10 loop\n+      Move\n+        (Source  => Positive10'Image(I),\n+         Target  => Target);\n+\n+      FHM.Include\n+        (Container => FHMM,\n+         Key       => Target,\n+         New_Item  => I);\n+   end loop;\n+end Config_Pragma1;"}, {"sha": "17150686b9c6caab7ab1a1b72871c08c2369e25d", "filename": "gcc/testsuite/gnat.dg/config_pragma1_pkg.ads", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cc97ad523d17ce6ae643030e5f99fe5acb68bea/gcc%2Ftestsuite%2Fgnat.dg%2Fconfig_pragma1_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cc97ad523d17ce6ae643030e5f99fe5acb68bea/gcc%2Ftestsuite%2Fgnat.dg%2Fconfig_pragma1_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fconfig_pragma1_pkg.ads?ref=9cc97ad523d17ce6ae643030e5f99fe5acb68bea", "patch": "@@ -0,0 +1,21 @@\n+pragma Assertion_Policy (Ignore);\n+\n+with Ada.Containers; use Ada.Containers;\n+with Ada.Containers.Formal_Hashed_Maps;\n+with Ada.Strings;    use Ada.Strings;\n+with Ada.Strings.Hash;\n+\n+package Config_Pragma1_Pkg is\n+   subtype Positive10 is Positive range 1 .. 1000;\n+   subtype String10 is String (Positive10);\n+\n+   package FHM is new Formal_Hashed_Maps\n+     (Key_Type        => String10,\n+      Element_Type    => Positive10,\n+      Hash            => Hash,\n+      Equivalent_Keys => \"=\");\n+\n+   FHMM : FHM.Map\n+     (Capacity => 1_000_000,\n+      Modulus  => FHM.Default_Modulus (Count_Type (1_000_000)));\n+end Config_Pragma1_Pkg;"}]}