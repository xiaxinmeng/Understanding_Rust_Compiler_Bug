{"sha": "365cd5f9ba812c389b404a53d99ab5dded5097f4", "node_id": "C_kwDOANBUbNoAKDM2NWNkNWY5YmE4MTJjMzg5YjQwNGE1M2Q5OWFiNWRkZWQ1MDk3ZjQ", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-11-26T12:11:16Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-11-30T11:59:14Z"}, "message": "[OpenACC] Remove erroneous \"Orphan reductions cannot have gang partitioning\" handling\n\nThat is:\n\n    -/* Ensure that the middle end does not assign gang level parallelism\n    -   to orphan loop containing reductions.  */\n    +/* Verify that we diagnose \"gang reduction on an orphan loop\" for automatically\n    +   assigned gang level of parallelism.  */\n\n... to implement what the OpenACC specification actually says.\n\nFix-up for preceding commit 2b7dac2c0dcb087da9e4018943c023c0678234a3\n\"Make OpenACC orphan gang reductions errors\".\n\n\tgcc/\n\t* omp-offload.c (oacc_loop_auto_partitions): Remove erroneous\n\t\"Orphan reductions cannot have gang partitioning\" handling.\n\tgcc/testsuite/\n\t* c-c++-common/goacc/nested-reductions-1-routine.c: Adjust.\n\t* c-c++-common/goacc/nested-reductions-2-routine.c: Adjust.\n\t* c-c++-common/goacc/orphan-reductions-2.c: Adjust.\n\t* gfortran.dg/goacc/nested-reductions-1-routine.f90: Adjust.\n\t* gfortran.dg/goacc/nested-reductions-2-routine.f90: Adjust.\n\t* gfortran.dg/goacc/orphan-reductions-1.f90: Adjust.\n\t* gfortran.dg/goacc/orphan-reductions-2.f90: Adjust.", "tree": {"sha": "d8f1575a59ad6b41b6ec86307464f3b45493efd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8f1575a59ad6b41b6ec86307464f3b45493efd9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/365cd5f9ba812c389b404a53d99ab5dded5097f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/365cd5f9ba812c389b404a53d99ab5dded5097f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/365cd5f9ba812c389b404a53d99ab5dded5097f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/365cd5f9ba812c389b404a53d99ab5dded5097f4/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77d24d43644909852998043335b5a0e09d1e8f02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77d24d43644909852998043335b5a0e09d1e8f02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77d24d43644909852998043335b5a0e09d1e8f02"}], "stats": {"total": 113, "additions": 62, "deletions": 51}, "files": [{"sha": "5cdb57d913268ec1134bb71e35f4a0c0e6a53229", "filename": "gcc/omp-offload.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/365cd5f9ba812c389b404a53d99ab5dded5097f4/gcc%2Fomp-offload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/365cd5f9ba812c389b404a53d99ab5dded5097f4/gcc%2Fomp-offload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-offload.c?ref=365cd5f9ba812c389b404a53d99ab5dded5097f4", "patch": "@@ -1623,13 +1623,6 @@ oacc_loop_auto_partitions (oacc_loop *loop, unsigned outer_mask,\n \t non-innermost available level.  */\n       unsigned this_mask = GOMP_DIM_MASK (GOMP_DIM_GANG);\n \n-      /* Orphan reductions cannot have gang partitioning.  */\n-      if ((loop->flags & OLF_REDUCTION)\n-\t  && oacc_get_fn_attrib (current_function_decl)\n-\t  && !lookup_attribute (\"omp target entrypoint\",\n-\t\t\t\tDECL_ATTRIBUTES (current_function_decl)))\n-\tthis_mask = GOMP_DIM_MASK (GOMP_DIM_WORKER);\n-\n       /* Find the first outermost available partition. */\n       while (this_mask <= outer_mask)\n \tthis_mask <<= 1;"}, {"sha": "45b8cf3451f61b7ce26d7201ec93464fa3c5529b", "filename": "gcc/testsuite/c-c++-common/goacc/nested-reductions-1-routine.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/365cd5f9ba812c389b404a53d99ab5dded5097f4/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fnested-reductions-1-routine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/365cd5f9ba812c389b404a53d99ab5dded5097f4/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fnested-reductions-1-routine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fnested-reductions-1-routine.c?ref=365cd5f9ba812c389b404a53d99ab5dded5097f4", "patch": "@@ -8,60 +8,64 @@ void acc_routine (void)\n   int i, j, k, sum, diff;\n \n   {\n+    /* { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 } */\n     #pragma acc loop reduction(+:sum)\n     for (i = 0; i < 10; i++)\n       for (j = 0; j < 10; j++)\n         for (k = 0; k < 10; k++)\n           sum = 1;\n \n+    /* { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 } */\n     #pragma acc loop collapse(2) reduction(+:sum)\n     for (i = 0; i < 10; i++)\n       for (j = 0; j < 10; j++)\n         for (k = 0; k < 10; k++)\n           sum = 1;\n \n+    /* { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 } */\n     #pragma acc loop reduction(+:sum)\n     for (i = 0; i < 10; i++)\n       #pragma acc loop reduction(+:sum)\n       for (j = 0; j < 10; j++)\n         for (k = 0; k < 10; k++)\n           sum = 1;\n \n+    /* { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 } */\n     #pragma acc loop reduction(+:sum)\n     for (i = 0; i < 10; i++)\n       #pragma acc loop collapse(2) reduction(+:sum)\n       for (j = 0; j < 10; j++)\n         for (k = 0; k < 10; k++)\n           sum = 1;\n \n+    /* { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 } */\n     #pragma acc loop reduction(+:sum)\n     for (i = 0; i < 10; i++)\n       for (j = 0; j < 10; j++)\n         #pragma acc loop reduction(+:sum)\n         for (k = 0; k < 10; k++)\n           sum = 1;\n \n+    /* { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 } */\n     #pragma acc loop reduction(+:sum)\n     for (i = 0; i < 10; i++)\n       #pragma acc loop reduction(+:sum)\n-      // { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n       for (j = 0; j < 10; j++)\n         #pragma acc loop reduction(+:sum)\n         for (k = 0; k < 10; k++)\n           sum = 1;\n \n+    /* { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 } */\n     #pragma acc loop reduction(+:sum) reduction(-:diff)\n     for (i = 0; i < 10; i++)\n       {\n         #pragma acc loop reduction(+:sum)\n-\t// { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n         for (j = 0; j < 10; j++)\n           #pragma acc loop reduction(+:sum)\n           for (k = 0; k < 10; k++)\n             sum = 1;\n \n         #pragma acc loop reduction(-:diff)\n-\t// { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n         for (j = 0; j < 10; j++)\n           #pragma acc loop reduction(-:diff)\n           for (k = 0; k < 10; k++)"}, {"sha": "3b2b0275ec8d7f423add3a3b6ce1ebb5f8961278", "filename": "gcc/testsuite/c-c++-common/goacc/nested-reductions-2-routine.c", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/365cd5f9ba812c389b404a53d99ab5dded5097f4/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fnested-reductions-2-routine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/365cd5f9ba812c389b404a53d99ab5dded5097f4/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fnested-reductions-2-routine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fnested-reductions-2-routine.c?ref=365cd5f9ba812c389b404a53d99ab5dded5097f4", "patch": "@@ -8,29 +8,29 @@ void acc_routine (void)\n   int i, j, k, l, sum, diff;\n \n   {\n+    /* { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 } */\n     #pragma acc loop reduction(+:sum)\n     for (i = 0; i < 10; i++)\n       #pragma acc loop // { dg-warning \"nested loop in reduction needs reduction clause for .sum.\" }\n-      // { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n       for (j = 0; j < 10; j++)\n         #pragma acc loop reduction(+:sum)\n         for (k = 0; k < 10; k++)\n           sum = 1;\n \n+    /* { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 } */\n     #pragma acc loop reduction(+:sum)\n     for (i = 0; i < 10; i++)\n       #pragma acc loop collapse(2) // { dg-warning \"nested loop in reduction needs reduction clause for .sum.\" }\n-      // { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n       for (j = 0; j < 10; j++)\n         for (k = 0; k < 10; k++)\n           #pragma acc loop reduction(+:sum)\n           for (l = 0; l < 10; l++)\n             sum = 1;\n \n+    /* { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 } */\n     #pragma acc loop reduction(+:sum)\n     for (i = 0; i < 10; i++)\n       #pragma acc loop // { dg-warning \"nested loop in reduction needs reduction clause for .sum.\" }\n-      // { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n       for (j = 0; j < 10; j++)\n         #pragma acc loop // { dg-warning \"nested loop in reduction needs reduction clause for .sum.\" }\n         // { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 } \n@@ -39,28 +39,28 @@ void acc_routine (void)\n           for (l = 0; l < 10; l++)\n             sum = 1;\n \n+    /* { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 } */\n     #pragma acc loop reduction(+:sum)\n     for (i = 0; i < 10; i++)\n       #pragma acc loop reduction(-:sum) // { dg-warning \"conflicting reduction operations for .sum.\" }\n-      // { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n       for (j = 0; j < 10; j++)\n         #pragma acc loop reduction(+:sum) // { dg-warning \"conflicting reduction operations for .sum.\" }\n         for (k = 0; k < 10; k++)\n           sum = 1;\n \n+    /* { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 } */\n     #pragma acc loop reduction(+:sum)\n     for (i = 0; i < 10; i++)\n       #pragma acc loop reduction(-:sum) // { dg-warning \"conflicting reduction operations for .sum.\" }\n-      // { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n       for (j = 0; j < 10; j++)\n         #pragma acc loop reduction(-:sum)\n         for (k = 0; k < 10; k++)\n           sum = 1;\n \n+    /* { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 } */\n     #pragma acc loop reduction(+:sum)\n     for (i = 0; i < 10; i++)\n       #pragma acc loop reduction(-:sum) // { dg-warning \"conflicting reduction operations for .sum.\" }\n-      // { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n       for (j = 0; j < 10; j++)\n         #pragma acc loop // { dg-warning \"nested loop in reduction needs reduction clause for .sum.\" }\n         // { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 } \n@@ -69,10 +69,10 @@ void acc_routine (void)\n \t  for (l = 0; l < 10; l++)\n \t    sum = 1;\n \n+    /* { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 } */\n     #pragma acc loop reduction(+:sum)\n     for (i = 0; i < 10; i++)\n       #pragma acc loop reduction(-:sum) // { dg-warning \"conflicting reduction operations for .sum.\" }\n-      // { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n       for (j = 0; j < 10; j++)\n       #pragma acc loop reduction(+:sum) // { dg-warning \"conflicting reduction operations for .sum.\" })\n       // { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 } \n@@ -81,18 +81,17 @@ void acc_routine (void)\n \t  for (l = 0; l < 10; l++)\n \t    sum = 1;\n \n+    /* { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 } */\n     #pragma acc loop reduction(+:sum) reduction(-:diff)\n     for (i = 0; i < 10; i++)\n       {\n         #pragma acc loop reduction(-:diff) // { dg-warning \"nested loop in reduction needs reduction clause for .sum.\" }\n-\t// { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n         for (j = 0; j < 10; j++)\n           #pragma acc loop reduction(+:sum)\n           for (k = 0; k < 10; k++)\n             sum = 1;\n \n         #pragma acc loop reduction(+:sum) // { dg-warning \"nested loop in reduction needs reduction clause for .diff.\" }\n-\t// { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n         for (j = 0; j < 10; j++)\n           #pragma acc loop reduction(-:diff)\n           for (k = 0; k < 10; k++)"}, {"sha": "6ff8698a35c554730f63d022b3f949f7055c078b", "filename": "gcc/testsuite/c-c++-common/goacc/orphan-reductions-2.c", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/365cd5f9ba812c389b404a53d99ab5dded5097f4/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Forphan-reductions-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/365cd5f9ba812c389b404a53d99ab5dded5097f4/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Forphan-reductions-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Forphan-reductions-2.c?ref=365cd5f9ba812c389b404a53d99ab5dded5097f4", "patch": "@@ -1,17 +1,20 @@\n-/* Ensure that the middle end does not assign gang level parallelism\n-   to orphan loop containing reductions.  */\n+/* Verify that we diagnose \"gang reduction on an orphan loop\" for automatically\n+   assigned gang level of parallelism.  */\n \n /* { dg-do compile } */\n /* { dg-additional-options \"-fopt-info-optimized-omp\" } */\n /* { dg-additional-options \"-Wopenacc-parallelism\" } */\n \n #pragma acc routine gang\n+/* { dg-bogus \"warning: region is worker partitioned but does not contain worker partitioned code\" \"TODO default 'gang' 'vector'\" { xfail *-*-* } .+3 }\n+   TODO It's the compiler's own decision to not use 'worker' parallelism here, so it doesn't make sense to bother the user about it.  */\n int\n-f1 () /* { dg-warning \"region is gang partitioned but does not contain gang partitioned code\" } */\n+f1 ()\n {\n   int sum = 0, i;\n \n-#pragma acc loop reduction (+:sum) /* { dg-optimized \"assigned OpenACC worker vector loop parallelism\" } */\n+  /* { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 } */\n+#pragma acc loop reduction (+:sum) /* { dg-optimized \"assigned OpenACC gang vector loop parallelism\" } */\n   for (i = 0; i < 100; i++)\n     sum++;\n \n@@ -20,11 +23,12 @@ f1 () /* { dg-warning \"region is gang partitioned but does not contain gang part\n \n #pragma acc routine gang\n int\n-f2 () /* { dg-warning \"region is gang partitioned but does not contain gang partitioned code\" } */\n+f2 ()\n {\n   int sum = 0, i, j;\n \n-#pragma acc loop reduction (+:sum) /* { dg-optimized \"assigned OpenACC worker loop parallelism\" } */\n+  /* { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 } */\n+#pragma acc loop reduction (+:sum) /* { dg-optimized \"assigned OpenACC gang worker loop parallelism\" } */\n   for (i = 0; i < 100; i++)\n #pragma acc loop reduction (+:sum) /* { dg-optimized \"assigned OpenACC vector loop parallelism\" } */\n     for (j = 0; j < 100; j++)\n@@ -35,14 +39,14 @@ f2 () /* { dg-warning \"region is gang partitioned but does not contain gang part\n \n #pragma acc routine gang\n int\n-f3 () /* { dg-warning \"region is gang partitioned but does not contain gang partitioned code\" } */\n+f3 ()\n {\n   int sum = 0, i, j, k;\n \n-#pragma acc loop reduction (+:sum) /* { dg-optimized \"assigned OpenACC worker loop parallelism\" } */\n+  /* { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 } */\n+#pragma acc loop reduction (+:sum) /* { dg-optimized \"assigned OpenACC gang loop parallelism\" } */\n   for (i = 0; i < 100; i++)\n-#pragma acc loop reduction (+:sum) /* { dg-optimized \"assigned OpenACC seq loop parallelism\" } */\n-    /* { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 } */\n+#pragma acc loop reduction (+:sum) /* { dg-optimized \"assigned OpenACC worker loop parallelism\" } */\n     for (j = 0; j < 100; j++)\n #pragma acc loop reduction (+:sum) /* { dg-optimized \"assigned OpenACC vector loop parallelism\" } */\n       for (k = 0; k < 100; k++)"}, {"sha": "e1b0a0202d41bbec26b421e2aef72af4a2764cd2", "filename": "gcc/testsuite/gfortran.dg/goacc/nested-reductions-1-routine.f90", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/365cd5f9ba812c389b404a53d99ab5dded5097f4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fnested-reductions-1-routine.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/365cd5f9ba812c389b404a53d99ab5dded5097f4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fnested-reductions-1-routine.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fnested-reductions-1-routine.f90?ref=365cd5f9ba812c389b404a53d99ab5dded5097f4", "patch": "@@ -8,6 +8,7 @@ subroutine acc_routine ()\n \n   integer :: i, j, k, sum, diff\n \n+    ! { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 }\n     !$acc loop reduction(+:sum)\n     do i = 1, 10\n       do j = 1, 10\n@@ -17,6 +18,7 @@ subroutine acc_routine ()\n       end do\n     end do\n \n+    ! { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 }\n     !$acc loop collapse(2) reduction(+:sum)\n     do i = 1, 10\n       do j = 1, 10\n@@ -26,6 +28,7 @@ subroutine acc_routine ()\n       end do\n     end do\n \n+    ! { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 }\n     !$acc loop reduction(+:sum)\n     do i = 1, 10\n       !$acc loop reduction(+:sum)\n@@ -36,6 +39,7 @@ subroutine acc_routine ()\n       end do\n     end do\n \n+    ! { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 }\n     !$acc loop reduction(+:sum)\n     do i = 1, 10\n       !$acc loop collapse(2) reduction(+:sum)\n@@ -46,6 +50,7 @@ subroutine acc_routine ()\n       end do\n     end do\n \n+    ! { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 }\n     !$acc loop reduction(+:sum)\n     do i = 1, 10\n       do j = 1, 10\n@@ -56,10 +61,10 @@ subroutine acc_routine ()\n       end do\n     end do\n \n+    ! { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 }\n     !$acc loop reduction(+:sum)\n     do i = 1, 10\n       !$acc loop reduction(+:sum)\n-      ! { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n       do j = 1, 10\n         !$acc loop reduction(+:sum)\n         do k = 1, 10\n@@ -68,10 +73,10 @@ subroutine acc_routine ()\n       end do\n     end do\n \n+    ! { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 }\n     !$acc loop reduction(+:sum) reduction(-:diff)\n     do i = 1, 10\n       !$acc loop reduction(+:sum)\n-      ! { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n       do j = 1, 10\n         !$acc loop reduction(+:sum)\n         do k = 1, 10\n@@ -80,7 +85,6 @@ subroutine acc_routine ()\n       end do\n \n       !$acc loop reduction(-:diff)\n-      ! { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n       do j = 1, 10\n         !$acc loop reduction(-:diff)\n         do k = 1, 10"}, {"sha": "73a0520791014d6ef5c802c871a6952de3dc087a", "filename": "gcc/testsuite/gfortran.dg/goacc/nested-reductions-2-routine.f90", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/365cd5f9ba812c389b404a53d99ab5dded5097f4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fnested-reductions-2-routine.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/365cd5f9ba812c389b404a53d99ab5dded5097f4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fnested-reductions-2-routine.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fnested-reductions-2-routine.f90?ref=365cd5f9ba812c389b404a53d99ab5dded5097f4", "patch": "@@ -7,10 +7,10 @@ subroutine acc_routine ()\n   !$acc routine gang\n   integer :: i, j, k, l, sum, diff\n \n+    ! { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 }\n     !$acc loop reduction(+:sum)\n     do i = 1, 10\n       !$acc loop  ! { dg-warning \"nested loop in reduction needs reduction clause for .sum.\" }\n-      ! { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n       do j = 1, 10\n         !$acc loop reduction(+:sum)\n         do k = 1, 10\n@@ -19,10 +19,10 @@ subroutine acc_routine ()\n       end do\n     end do\n \n+    ! { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 }\n     !$acc loop reduction(+:sum)\n     do i = 1, 10\n       !$acc loop collapse(2)  ! { dg-warning \"nested loop in reduction needs reduction clause for .sum.\" }\n-      ! { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n       do j = 1, 10\n         do k = 1, 10\n           !$acc loop reduction(+:sum)\n@@ -33,10 +33,10 @@ subroutine acc_routine ()\n       end do\n     end do\n \n+    ! { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 }\n     !$acc loop reduction(+:sum)\n     do i = 1, 10\n       !$acc loop  ! { dg-warning \"nested loop in reduction needs reduction clause for .sum.\" }\n-      ! { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n       do j = 1, 10\n         !$acc loop  ! { dg-warning \"nested loop in reduction needs reduction clause for .sum.\" }\n         ! { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n@@ -49,10 +49,10 @@ subroutine acc_routine ()\n       end do\n     end do\n \n+    ! { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 }\n     !$acc loop reduction(+:sum)\n     do i = 1, 10\n       !$acc loop reduction(-:sum)  ! { dg-warning \"conflicting reduction operations for .sum.\" }\n-      ! { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n       do j = 1, 10\n         !$acc loop reduction(+:sum)  ! { dg-warning \"conflicting reduction operations for .sum.\" }\n         do k = 1, 10\n@@ -61,10 +61,10 @@ subroutine acc_routine ()\n       end do\n     end do\n \n+    ! { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 }\n     !$acc loop reduction(+:sum)\n     do i = 1, 10\n       !$acc loop reduction(-:sum)  ! { dg-warning \"conflicting reduction operations for .sum.\" }\n-      ! { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n       do j = 1, 10\n         !$acc loop reduction(-:sum)\n         do k = 1, 10\n@@ -73,10 +73,10 @@ subroutine acc_routine ()\n       end do\n     end do\n \n+    ! { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 }\n     !$acc loop reduction(+:sum)\n     do i = 1, 10\n       !$acc loop reduction(-:sum)  ! { dg-warning \"conflicting reduction operations for .sum.\" }\n-      ! { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n       do j = 1, 10\n         !$acc loop  ! { dg-warning \"nested loop in reduction needs reduction clause for .sum.\" }\n         ! { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n@@ -89,10 +89,10 @@ subroutine acc_routine ()\n       end do\n     end do\n \n+    ! { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 }\n     !$acc loop reduction(+:sum)\n     do i = 1, 10\n       !$acc loop reduction(-:sum)  ! { dg-warning \"conflicting reduction operations for .sum.\" }\n-      ! { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n       do j = 1, 10\n         !$acc loop reduction(+:sum)  ! { dg-warning \"conflicting reduction operations for .sum.\" }\n         ! { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n@@ -105,10 +105,10 @@ subroutine acc_routine ()\n       end do\n     end do\n \n+    ! { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 }\n     !$acc loop reduction(+:sum) reduction(-:diff)\n     do i = 1, 10\n       !$acc loop reduction(-:diff)  ! { dg-warning \"nested loop in reduction needs reduction clause for .sum.\" }\n-      ! { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n       do j = 1, 10\n         !$acc loop reduction(+:sum)\n         do k = 1, 10\n@@ -117,7 +117,6 @@ subroutine acc_routine ()\n       end do\n \n       !$acc loop reduction(+:sum)  ! { dg-warning \"nested loop in reduction needs reduction clause for .diff.\" }\n-      ! { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n       do j = 1, 10\n         !$acc loop reduction(-:diff)\n         do k = 1, 10"}, {"sha": "8eed080a12800c567196a8e6cda6cd4a794e5fbb", "filename": "gcc/testsuite/gfortran.dg/goacc/orphan-reductions-1.f90", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/365cd5f9ba812c389b404a53d99ab5dded5097f4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Forphan-reductions-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/365cd5f9ba812c389b404a53d99ab5dded5097f4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Forphan-reductions-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Forphan-reductions-1.f90?ref=365cd5f9ba812c389b404a53d99ab5dded5097f4", "patch": "@@ -42,6 +42,7 @@ subroutine s2\n   end do\n \n   !$acc loop reduction(+:sum)\n+  ! { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n   do i = 1, n\n      !$acc loop gang reduction(+:sum) ! { dg-error \"gang reduction on an orphan loop\" }\n      do j = 1, n\n@@ -92,6 +93,7 @@ integer function f2 ()\n   end do\n \n   !$acc loop reduction(+:sum)\n+  ! { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n   do i = 1, n\n      !$acc loop gang reduction(+:sum) ! { dg-error \"gang reduction on an orphan loop\" }\n      do j = 1, n\n@@ -144,6 +146,7 @@ subroutine s4\n     end do\n \n     !$acc loop reduction(+:sum)\n+    ! { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n     do i = 1, n\n        !$acc loop gang reduction(+:sum) ! { dg-error \"gang reduction on an orphan loop\" }\n        do j = 1, n\n@@ -194,6 +197,7 @@ integer function f4 ()\n     end do\n \n     !$acc loop reduction(+:sum)\n+    ! { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n     do i = 1, n\n        !$acc loop gang reduction(+:sum) ! { dg-error \"gang reduction on an orphan loop\" }\n        do j = 1, n"}, {"sha": "47f8a32660767a8e7444bab7bf62aa274281a6a8", "filename": "gcc/testsuite/gfortran.dg/goacc/orphan-reductions-2.f90", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/365cd5f9ba812c389b404a53d99ab5dded5097f4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Forphan-reductions-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/365cd5f9ba812c389b404a53d99ab5dded5097f4/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Forphan-reductions-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Forphan-reductions-2.f90?ref=365cd5f9ba812c389b404a53d99ab5dded5097f4", "patch": "@@ -1,29 +1,33 @@\n-! Ensure that the middle end does not assign gang level parallelism to\n-! orphan loop containing reductions.\n+! Verify that we diagnose \"gang reduction on an orphan loop\" for automatically\n+! assigned gang level of parallelism.\n \n ! { dg-do compile }\n ! { dg-additional-options \"-fopt-info-optimized-omp\" }\n ! { dg-additional-options \"-Wopenacc-parallelism\" }\n \n-subroutine s1 ! { dg-warning \"region is gang partitioned but does not contain gang partitioned code\" }\n+subroutine s1\n   implicit none\n   !$acc routine gang\n+  ! { dg-bogus \"\\[Ww\\]arning: region is worker partitioned but does not contain worker partitioned code\" \"TODO default 'gang' 'vector'\" { xfail *-*-* } .-3 }\n+  !TODO It's the compiler's own decision to not use 'worker' parallelism here, so it doesn't make sense to bother the user about it.\n   integer i, sum\n \n   sum = 0\n-  !$acc loop reduction (+:sum) ! { dg-optimized \"assigned OpenACC worker vector loop parallelism\" }\n+  ! { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 }\n+  !$acc loop reduction (+:sum) ! { dg-optimized \"assigned OpenACC gang vector loop parallelism\" }\n   do i = 1, 10\n      sum = sum + 1\n   end do\n end subroutine s1\n \n-subroutine s2 ! { dg-warning \"region is gang partitioned but does not contain gang partitioned code\" }\n+subroutine s2\n   implicit none\n   !$acc routine gang\n   integer i, j, sum\n \n   sum = 0\n-  !$acc loop reduction (+:sum) ! { dg-optimized \"assigned OpenACC worker loop parallelism\" }\n+  ! { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 }\n+  !$acc loop reduction (+:sum) ! { dg-optimized \"assigned OpenACC gang worker loop parallelism\" }\n   do i = 1, 10\n      !$acc loop reduction (+:sum) ! { dg-optimized \"assigned OpenACC vector loop parallelism\" }\n      do j = 1, 10\n@@ -32,16 +36,16 @@ subroutine s2 ! { dg-warning \"region is gang partitioned but does not contain ga\n   end do\n end subroutine s2\n \n-subroutine s3 ! { dg-warning \"region is gang partitioned but does not contain gang partitioned code\" }\n+subroutine s3\n   implicit none\n   !$acc routine gang\n   integer i, j, k, sum\n \n   sum = 0\n-  !$acc loop reduction (+:sum) ! { dg-optimized \"assigned OpenACC worker loop parallelism\" }\n+  ! { dg-error \"gang reduction on an orphan loop\" \"\" { target *-*-* } .+1 }\n+  !$acc loop reduction (+:sum) ! { dg-optimized \"assigned OpenACC gang loop parallelism\" }\n   do i = 1, 10\n-     !$acc loop reduction (+:sum) ! { dg-optimized \"assigned OpenACC seq loop parallelism\" }\n-     ! { dg-warning \"insufficient partitioning available to parallelize loop\" \"\" { target *-*-* } .-1 }\n+     !$acc loop reduction (+:sum) ! { dg-optimized \"assigned OpenACC worker loop parallelism\" }\n      do j = 1, 10\n         !$acc loop reduction (+:sum) ! { dg-optimized \"assigned OpenACC vector loop parallelism\" }\n         do k = 1, 10"}]}