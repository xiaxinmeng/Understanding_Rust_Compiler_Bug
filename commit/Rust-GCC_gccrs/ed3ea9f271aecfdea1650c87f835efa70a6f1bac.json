{"sha": "ed3ea9f271aecfdea1650c87f835efa70a6f1bac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQzZWE5ZjI3MWFlY2ZkZWExNjUwYzg3ZjgzNWVmYTcwYTZmMWJhYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-03-08T07:43:58Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-03-08T07:43:58Z"}, "message": "re PR c++/89599 (C-style function-pointer-to-void* cast is handled inconsistently)\n\n\tPR c++/89599\n\t* constexpr.c (potential_constant_expression_1): Reject\n\tREINTERPRET_CAST_P NOP_EXPRs.\n\n\t* g++.dg/ubsan/vptr-4.C: Adjust expected diagnostics.\n\t* g++.dg/parse/array-size2.C: Likewise.\n\t* g++.dg/cpp0x/constexpr-89599.C: New test.\n\nFrom-SVN: r269482", "tree": {"sha": "a4f0892b801ff3c5b2db353e1db1b132b8aed8b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4f0892b801ff3c5b2db353e1db1b132b8aed8b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed3ea9f271aecfdea1650c87f835efa70a6f1bac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed3ea9f271aecfdea1650c87f835efa70a6f1bac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed3ea9f271aecfdea1650c87f835efa70a6f1bac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed3ea9f271aecfdea1650c87f835efa70a6f1bac/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "560a46a5914a3cc55ade0cb0fe3d8e36d85d01cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/560a46a5914a3cc55ade0cb0fe3d8e36d85d01cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/560a46a5914a3cc55ade0cb0fe3d8e36d85d01cd"}], "stats": {"total": 35, "additions": 29, "deletions": 6}, "files": [{"sha": "c6e023ff6630bf0703718442ae95b059a6f1be49", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3ea9f271aecfdea1650c87f835efa70a6f1bac/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3ea9f271aecfdea1650c87f835efa70a6f1bac/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ed3ea9f271aecfdea1650c87f835efa70a6f1bac", "patch": "@@ -1,5 +1,9 @@\n 2019-03-08  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/89599\n+\t* constexpr.c (potential_constant_expression_1): Reject\n+\tREINTERPRET_CAST_P NOP_EXPRs.\n+\n \tPR c++/89622\n \t* call.c (joust): Call print_z_candidate only if pedwarn returned\n \ttrue."}, {"sha": "783d1fcb496f68c41c3c078876bdec12b07ca440", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3ea9f271aecfdea1650c87f835efa70a6f1bac/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3ea9f271aecfdea1650c87f835efa70a6f1bac/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=ed3ea9f271aecfdea1650c87f835efa70a6f1bac", "patch": "@@ -5961,6 +5961,13 @@ potential_constant_expression_1 (tree t, bool want_rval, bool strict, bool now,\n       return true;\n \n     case NOP_EXPR:\n+      if (REINTERPRET_CAST_P (t))\n+\t{\n+\t  if (flags & tf_error)\n+\t    error_at (loc, \"a reinterpret_cast is not a constant expression\");\n+\t  return false;\n+\t}\n+      /* FALLTHRU */\n     case CONVERT_EXPR:\n     case VIEW_CONVERT_EXPR:\n       /* -- a reinterpret_cast.  FIXME not implemented, and this rule"}, {"sha": "5db4e375b277df6522d9d2c8801e70e1f5d26445", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3ea9f271aecfdea1650c87f835efa70a6f1bac/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3ea9f271aecfdea1650c87f835efa70a6f1bac/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ed3ea9f271aecfdea1650c87f835efa70a6f1bac", "patch": "@@ -1,5 +1,10 @@\n 2019-03-08  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/89599\n+\t* g++.dg/ubsan/vptr-4.C: Adjust expected diagnostics.\n+\t* g++.dg/parse/array-size2.C: Likewise.\n+\t* g++.dg/cpp0x/constexpr-89599.C: New test.\n+\n \tPR c++/89622\n \t* g++.dg/warn/pr89622.C: New test.\n "}, {"sha": "07760a302a7bcc34cc9cc1240c210ccc76a5a8c6", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-89599.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3ea9f271aecfdea1650c87f835efa70a6f1bac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-89599.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3ea9f271aecfdea1650c87f835efa70a6f1bac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-89599.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-89599.C?ref=ed3ea9f271aecfdea1650c87f835efa70a6f1bac", "patch": "@@ -0,0 +1,6 @@\n+// PR c++/89599\n+// { dg-do compile { target c++11 } }\n+\n+void foo (int x) {}\n+constexpr void *arr[2] = { (void*) &foo, (void *) foo };// { dg-error \"a reinterpret_cast is not a constant expression\" }\n+constexpr void *ptr = (void *) &foo;\t\t\t// { dg-error \"a reinterpret_cast is not a constant expression\" }"}, {"sha": "c4a69df3b0160e514dc8bf56a42218492fbb83cf", "filename": "gcc/testsuite/g++.dg/parse/array-size2.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3ea9f271aecfdea1650c87f835efa70a6f1bac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Farray-size2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3ea9f271aecfdea1650c87f835efa70a6f1bac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Farray-size2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Farray-size2.C?ref=ed3ea9f271aecfdea1650c87f835efa70a6f1bac", "patch": "@@ -15,6 +15,8 @@ void\n foo (void)\n {\n   char g[(char *) &((struct S *) 0)->b - (char *) 0]; // { dg-error \"40:size of array .g. is not an integral constant-expression\" }\n+\t\t\t\t\t\t      // { dg-error \"narrowing conversion\" \"\" { target c++11 } .-1 }\n+\t\t\t\t\t\t      // { dg-message \"expression has a constant value but is not a C.. constant-expression\" \"\" { target c++11 } .-2 }\n   char h[(__SIZE_TYPE__) &((struct S *) 8)->b];\t      // { dg-error \"10:size of array .h. is not an integral constant-expression\" }\n   bar (g, h);\n }"}, {"sha": "764f599950162ce92f110d6241da273bba299c21", "filename": "gcc/testsuite/g++.dg/ubsan/vptr-4.C", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed3ea9f271aecfdea1650c87f835efa70a6f1bac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fvptr-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed3ea9f271aecfdea1650c87f835efa70a6f1bac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fvptr-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fvptr-4.C?ref=ed3ea9f271aecfdea1650c87f835efa70a6f1bac", "patch": "@@ -19,7 +19,7 @@ struct T : S {\n };\n \n constexpr T t;\n-constexpr const T *p = t.foo ();\t// { dg-message \"expansion of\" }\n+constexpr const T *p = t.foo ();\t// { dg-error \"called in a constant expression\" }\n \n template <typename U>\n struct V {\n@@ -39,17 +39,16 @@ struct W : V<U> {\n };\n \n constexpr W<int> w;\n-constexpr const W<int> *s = w.foo ();\t// { dg-error \"is not a constant expression\" }\n-// { dg-message \"expansion of\" \"\" { target *-*-* } .-1 }\n+constexpr const W<int> *s = w.foo ();\t// { dg-error \"called in a constant expression\" }\n \n template <typename U>\n int foo (void)\n {\n   static constexpr T t;\n-  static constexpr const T *p = t.foo ();\t// { dg-message \"expansion of\" }\n+  static constexpr const T *p = t.foo ();\t// { dg-error \"called in a constant expression\" }\n   static constexpr W<U> w;\n-  static constexpr const W<U> *s = w.foo ();\t// { dg-error \"is not a constant expression\" }\n-  return t.b + w.b;\t\t\t\t// { dg-message \"expansion of\" \"\" { target *-*-* } .-1 }\n+  static constexpr const W<U> *s = w.foo ();\t// { dg-error \"called in a constant expression\" }\n+  return t.b + w.b;\n }\n \n int x = foo <char> ();"}]}