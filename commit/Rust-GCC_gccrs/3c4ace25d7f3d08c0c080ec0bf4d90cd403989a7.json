{"sha": "3c4ace25d7f3d08c0c080ec0bf4d90cd403989a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M0YWNlMjVkN2YzZDA4YzBjMDgwZWMwYmY0ZDkwY2Q0MDM5ODlhNw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2006-11-30T10:57:34Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2006-11-30T10:57:34Z"}, "message": "i386.md (R10_REG): New constant.\n\n\t* config/i386/i386.md (R10_REG): New constant.\n\t* config/i386/i386.c (pro_epilogue_adjust_stack): Use R11_REG.\n\t(ix86_emit_restore_regs_using_mov): Ditto.\n\t(ix86_expand_call): Ditto.\n\t(x86_output_mi_thunk): Ditto. Also use R10_REG.\n\nFrom-SVN: r119360", "tree": {"sha": "7496b1040b99fa3310eb7f131d4e15f0e4db4e9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7496b1040b99fa3310eb7f131d4e15f0e4db4e9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c4ace25d7f3d08c0c080ec0bf4d90cd403989a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c4ace25d7f3d08c0c080ec0bf4d90cd403989a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c4ace25d7f3d08c0c080ec0bf4d90cd403989a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c4ace25d7f3d08c0c080ec0bf4d90cd403989a7/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ac3768f69a29b98a3db963b3cc17cc1d721572d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac3768f69a29b98a3db963b3cc17cc1d721572d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac3768f69a29b98a3db963b3cc17cc1d721572d8"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "e12b3ff77b177941fdd132ed7d14f31ec0a366aa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c4ace25d7f3d08c0c080ec0bf4d90cd403989a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c4ace25d7f3d08c0c080ec0bf4d90cd403989a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c4ace25d7f3d08c0c080ec0bf4d90cd403989a7", "patch": "@@ -1,3 +1,11 @@\n+2006-11-30  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (R10_REG): New constant.\n+\t* config/i386/i386.c (pro_epilogue_adjust_stack): Use R11_REG.\n+\t(ix86_emit_restore_regs_using_mov): Ditto.\n+\t(ix86_expand_call): Ditto.\n+\t(x86_output_mi_thunk): Ditto. Also use R10_REG.\n+\n 2006-11-30  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* cselib.c (cselib_init): Use special MEM rtx form for callmem."}, {"sha": "fa1a1e64e00a7f237806db81babb2e84d95cf41c", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c4ace25d7f3d08c0c080ec0bf4d90cd403989a7/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c4ace25d7f3d08c0c080ec0bf4d90cd403989a7/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=3c4ace25d7f3d08c0c080ec0bf4d90cd403989a7", "patch": "@@ -5581,7 +5581,7 @@ pro_epilogue_adjust_stack (rtx dest, rtx src, rtx offset, int style)\n \t shouldn't be used together with huge frame sizes in one\n \t function because of the frame_size check in sibcall.c.  */\n       gcc_assert (style);\n-      r11 = gen_rtx_REG (DImode, FIRST_REX_INT_REG + 3 /* R11 */);\n+      r11 = gen_rtx_REG (DImode, R11_REG);\n       insn = emit_insn (gen_rtx_SET (DImode, r11, offset));\n       if (style < 0)\n \tRTX_FRAME_RELATED_P (insn) = 1;\n@@ -5838,7 +5838,7 @@ ix86_emit_restore_regs_using_mov (rtx pointer, HOST_WIDE_INT offset,\n \t  {\n \t    rtx r11;\n \n-\t    r11 = gen_rtx_REG (DImode, FIRST_REX_INT_REG + 3 /* R11 */);\n+\t    r11 = gen_rtx_REG (DImode, R11_REG);\n \t    emit_move_insn (r11, GEN_INT (offset));\n \t    emit_insn (gen_adddi3 (r11, r11, pointer));\n \t    base_address = gen_rtx_MEM (Pmode, r11);\n@@ -14417,7 +14417,7 @@ ix86_expand_call (rtx retval, rtx fnaddr, rtx callarg1,\n     {\n       rtx addr;\n       addr = copy_to_mode_reg (Pmode, XEXP (fnaddr, 0));\n-      fnaddr = gen_rtx_REG (Pmode, FIRST_REX_INT_REG + 3 /* R11 */);\n+      fnaddr = gen_rtx_REG (Pmode, R11_REG);\n       emit_move_insn (fnaddr, addr);\n       fnaddr = gen_rtx_MEM (QImode, fnaddr);\n     }\n@@ -18762,7 +18762,7 @@ x86_output_mi_thunk (FILE *file ATTRIBUTE_UNUSED,\n \t{\n \t  if (!x86_64_general_operand (xops[0], DImode))\n \t    {\n-\t      tmp = gen_rtx_REG (DImode, FIRST_REX_INT_REG + 2 /* R10 */);\n+\t      tmp = gen_rtx_REG (DImode, R10_REG);\n \t      xops[1] = tmp;\n \t      output_asm_insn (\"mov{q}\\t{%1, %0|%0, %1}\", xops);\n \t      xops[0] = tmp;\n@@ -18778,7 +18778,7 @@ x86_output_mi_thunk (FILE *file ATTRIBUTE_UNUSED,\n   if (vcall_offset)\n     {\n       if (TARGET_64BIT)\n-\ttmp = gen_rtx_REG (DImode, FIRST_REX_INT_REG + 2 /* R10 */);\n+\ttmp = gen_rtx_REG (DImode, R10_REG);\n       else\n \t{\n \t  int tmp_regno = 2 /* ECX */;\n@@ -18799,7 +18799,7 @@ x86_output_mi_thunk (FILE *file ATTRIBUTE_UNUSED,\n       xops[0] = gen_rtx_MEM (Pmode, plus_constant (tmp, vcall_offset));\n       if (TARGET_64BIT && !memory_operand (xops[0], Pmode))\n \t{\n-\t  rtx tmp2 = gen_rtx_REG (DImode, FIRST_REX_INT_REG + 3 /* R11 */);\n+\t  rtx tmp2 = gen_rtx_REG (DImode, R11_REG);\n \t  xops[0] = GEN_INT (vcall_offset);\n \t  xops[1] = tmp2;\n \t  output_asm_insn (\"mov{q}\\t{%0, %1|%1, %0}\", xops);"}, {"sha": "a4be7e1ef2dce42752f0e66b20cb9a5af46d3756", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c4ace25d7f3d08c0c080ec0bf4d90cd403989a7/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c4ace25d7f3d08c0c080ec0bf4d90cd403989a7/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=3c4ace25d7f3d08c0c080ec0bf4d90cd403989a7", "patch": "@@ -181,6 +181,7 @@\n    (FPSR_REG\t\t\t18)\n    (FPCR_REG\t\t\t19)\n    (DIRFLAG_REG\t\t\t20)\n+   (R10_REG\t\t\t40)\n    (R11_REG\t\t\t41)\n   ])\n "}]}