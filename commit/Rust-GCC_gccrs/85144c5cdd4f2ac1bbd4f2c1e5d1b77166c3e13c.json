{"sha": "85144c5cdd4f2ac1bbd4f2c1e5d1b77166c3e13c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODUxNDRjNWNkZDRmMmFjMWJiZDRmMmMxZTVkMWI3NzE2NmMzZTEzYw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2006-10-23T00:14:39Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2006-10-23T00:14:39Z"}, "message": "re PR target/28232 (Wrong aligned load is generated with -m4a on sh-*)\n\n\tPR target/28232\n\t* config/sh/sh.c (expand_block_move): Use a BLKmode rather than\n\tSImode memory reference for the source of a movua.\n\t* config/sh/sh.md (UNSPEC_MOVUA): New macro.\n\t(movua): Use an unspec instead of sign_extract.  Expect the source\n\tto have mode BLKmode.\n\t(extv, insv): Use a BLKmode rather than SImode memory reference\n\tfor the source of a movua.\n\n\nCo-Authored-By: Kaz Kojima <kkojima@gcc.gnu.org>\n\nFrom-SVN: r117961", "tree": {"sha": "c618fdc7bea64f3e2e7057e7f1864d919624b92e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c618fdc7bea64f3e2e7057e7f1864d919624b92e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/85144c5cdd4f2ac1bbd4f2c1e5d1b77166c3e13c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85144c5cdd4f2ac1bbd4f2c1e5d1b77166c3e13c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85144c5cdd4f2ac1bbd4f2c1e5d1b77166c3e13c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85144c5cdd4f2ac1bbd4f2c1e5d1b77166c3e13c/comments", "author": null, "committer": null, "parents": [{"sha": "279f3eb50bc5e442683a3a4dd7cc45f04e3cb2fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/279f3eb50bc5e442683a3a4dd7cc45f04e3cb2fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/279f3eb50bc5e442683a3a4dd7cc45f04e3cb2fd"}], "stats": {"total": 31, "additions": 24, "deletions": 7}, "files": [{"sha": "328875538079d05fa747228e8909baf1ea0854ff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85144c5cdd4f2ac1bbd4f2c1e5d1b77166c3e13c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85144c5cdd4f2ac1bbd4f2c1e5d1b77166c3e13c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=85144c5cdd4f2ac1bbd4f2c1e5d1b77166c3e13c", "patch": "@@ -1,3 +1,15 @@\n+2006-10-22  Richard Sandiford  <richard@codesourcery.com>\n+\t    Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\tPR target/28232\n+\t* config/sh/sh.c (expand_block_move): Use a BLKmode rather than\n+\tSImode memory reference for the source of a movua.\n+\t* config/sh/sh.md (UNSPEC_MOVUA): New macro.\n+\t(movua): Use an unspec instead of sign_extract.  Expect the source\n+\tto have mode BLKmode.\n+\t(extv, insv): Use a BLKmode rather than SImode memory reference\n+\tfor the source of a movua.\n+\n 2006-10-22  Jeff Law  <law@redhat.com>\n \tRichard Guenther  <rguenther@suse.de>\n "}, {"sha": "65b2daa129ee30bdef9a9a5dc12d2e9a09c5ad5c", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85144c5cdd4f2ac1bbd4f2c1e5d1b77166c3e13c/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85144c5cdd4f2ac1bbd4f2c1e5d1b77166c3e13c/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=85144c5cdd4f2ac1bbd4f2c1e5d1b77166c3e13c", "patch": "@@ -1074,8 +1074,10 @@ expand_block_move (rtx *operands)\n       while (copied + 4 <= bytes)\n \t{\n \t  rtx to = adjust_address (dest, SImode, copied);\n-\t  rtx from = adjust_automodify_address (src, SImode, src_addr, copied);\n+\t  rtx from = adjust_automodify_address (src, BLKmode,\n+\t\t\t\t\t\tsrc_addr, copied);\n \n+\t  set_mem_size (from, GEN_INT (4));\n \t  emit_insn (gen_movua (temp, from));\n \t  emit_move_insn (src_addr, plus_constant (src_addr, 4));\n \t  emit_move_insn (to, temp);"}, {"sha": "ca112ef8dd0aed292f52efac45a9c9dcff72b135", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/85144c5cdd4f2ac1bbd4f2c1e5d1b77166c3e13c/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/85144c5cdd4f2ac1bbd4f2c1e5d1b77166c3e13c/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=85144c5cdd4f2ac1bbd4f2c1e5d1b77166c3e13c", "patch": "@@ -153,6 +153,7 @@\n   (UNSPEC_THUNK\t\t36)\n   (UNSPEC_SP_SET\t40)\n   (UNSPEC_SP_TEST\t41)\n+  (UNSPEC_MOVUA\t\t42)\n \n   ;; These are used with unspec_volatile.\n   (UNSPECV_BLOCKAGE\t0)\n@@ -11147,8 +11148,8 @@ mov.l\\\\t1f,r0\\\\n\\\\\n \n (define_insn \"movua\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=z\")\n-\t(sign_extract:SI (match_operand:SI 1 \"unaligned_load_operand\" \"Sua>\")\n-\t\t\t (const_int 32) (const_int 0)))]\n+\t(unspec:SI [(match_operand:BLK 1 \"unaligned_load_operand\" \"Sua>\")]\n+\t\t   UNSPEC_MOVUA))]\n   \"TARGET_SH4A_ARCH\"\n   \"movua.l\t%1,%0\"\n   [(set_attr \"type\" \"movua\")])\n@@ -11181,8 +11182,9 @@ mov.l\\\\t1f,r0\\\\n\\\\\n       && INTVAL (operands[3]) == -24 * (BITS_BIG_ENDIAN != BYTES_BIG_ENDIAN)\n       && GET_CODE (operands[1]) == MEM && MEM_ALIGN (operands[1]) < 32)\n     {\n-      emit_insn (gen_movua (operands[0],\n-\t\t\t    adjust_address (operands[1], SImode, 0)));\n+      rtx src = adjust_address (operands[1], BLKmode, 0);\n+      set_mem_size (src, GEN_INT (4));\n+      emit_insn (gen_movua (operands[0], src));\n       DONE;\n     }\n \n@@ -11201,8 +11203,9 @@ mov.l\\\\t1f,r0\\\\n\\\\\n       && INTVAL (operands[3]) == -24 * (BITS_BIG_ENDIAN != BYTES_BIG_ENDIAN)\n       && GET_CODE (operands[1]) == MEM && MEM_ALIGN (operands[1]) < 32)\n     {\n-      emit_insn (gen_movua (operands[0],\n-\t\t\t    adjust_address (operands[1], SImode, 0)));\n+      rtx src = adjust_address (operands[1], BLKmode, 0);\n+      set_mem_size (src, GEN_INT (4));\n+      emit_insn (gen_movua (operands[0], src));\n       DONE;\n     }\n "}]}