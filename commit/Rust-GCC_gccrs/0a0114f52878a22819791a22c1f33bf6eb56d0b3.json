{"sha": "0a0114f52878a22819791a22c1f33bf6eb56d0b3", "node_id": "C_kwDOANBUbNoAKDBhMDExNGY1Mjg3OGEyMjgxOTc5MWEyMmMxZjMzYmY2ZWI1NmQwYjM", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-05-03T09:17:01Z"}, "committer": {"name": "CohenArthur", "email": "arthur.cohen@embecosm.com", "date": "2023-05-05T11:48:37Z"}, "message": "utils: Add bidirectional hashmap class\n\ngcc/rust/ChangeLog:\n\n\t* expand/rust-macro-builtins.cc: Include bidirectional map.\n\t* util/bi-map.h: New file.", "tree": {"sha": "4f7c9f31c44f07af68e06615113b6ca2237dd918", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f7c9f31c44f07af68e06615113b6ca2237dd918"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a0114f52878a22819791a22c1f33bf6eb56d0b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a0114f52878a22819791a22c1f33bf6eb56d0b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a0114f52878a22819791a22c1f33bf6eb56d0b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a0114f52878a22819791a22c1f33bf6eb56d0b3/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f04cbc3f1767def988ac8191d8c104d804e0faa0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f04cbc3f1767def988ac8191d8c104d804e0faa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f04cbc3f1767def988ac8191d8c104d804e0faa0"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "ec4897bb9d31e9fee727baf7615e77de70b76acd", "filename": "gcc/rust/expand/rust-macro-builtins.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a0114f52878a22819791a22c1f33bf6eb56d0b3/gcc%2Frust%2Fexpand%2Frust-macro-builtins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a0114f52878a22819791a22c1f33bf6eb56d0b3/gcc%2Frust%2Fexpand%2Frust-macro-builtins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-macro-builtins.cc?ref=0a0114f52878a22819791a22c1f33bf6eb56d0b3", "patch": "@@ -29,6 +29,7 @@\n #include \"rust-macro.h\"\n #include \"rust-parse.h\"\n #include \"rust-session-manager.h\"\n+#include \"bi-map.h\"\n \n namespace Rust {\n namespace {"}, {"sha": "ab5878d8fb74b3a51800612c3f18d982bc5edab1", "filename": "gcc/rust/util/bi-map.h", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a0114f52878a22819791a22c1f33bf6eb56d0b3/gcc%2Frust%2Futil%2Fbi-map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a0114f52878a22819791a22c1f33bf6eb56d0b3/gcc%2Frust%2Futil%2Fbi-map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Fbi-map.h?ref=0a0114f52878a22819791a22c1f33bf6eb56d0b3", "patch": "@@ -0,0 +1,48 @@\n+// Copyright (C) 2020-2023 Free Software Foundation, Inc.\n+\n+// This file is part of GCC.\n+\n+// GCC is free software; you can redistribute it and/or modify it under\n+// the terms of the GNU General Public License as published by the Free\n+// Software Foundation; either version 3, or (at your option) any later\n+// version.\n+\n+// GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+// WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+// for more details.\n+\n+// You should have received a copy of the GNU General Public License\n+// along with GCC; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include \"rust-system.h\"\n+\n+#ifndef BIMAP_H\n+#define BIMAP_H\n+\n+// very simple bi-directional hashmap\n+template <typename K, typename V> class BiMap\n+{\n+  using v_iter = typename std::unordered_map<K, V>::const_iterator;\n+  using k_iter = typename std::unordered_map<V, K>::const_iterator;\n+\n+public:\n+  BiMap (std::unordered_map<K, V> &&original) : map (std::move (original))\n+  {\n+    for (auto &kv : map)\n+      rmap.insert ({kv.second, kv.first});\n+  }\n+\n+  const v_iter lookup (const K &key) const { return map.find (key); }\n+  const k_iter lookup (const V &key) const { return rmap.find (key); }\n+\n+  bool is_iter_ok (const v_iter &iter) const { return iter != map.end (); }\n+  bool is_iter_ok (const k_iter &iter) const { return iter != rmap.end (); }\n+\n+private:\n+  std::unordered_map<K, V> map;\n+  std::unordered_map<V, K> rmap;\n+};\n+\n+#endif // !BIMAP_H"}]}