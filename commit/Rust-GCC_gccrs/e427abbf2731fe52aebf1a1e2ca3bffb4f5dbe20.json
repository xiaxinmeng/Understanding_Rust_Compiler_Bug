{"sha": "e427abbf2731fe52aebf1a1e2ca3bffb4f5dbe20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQyN2FiYmYyNzMxZmU1MmFlYmYxYTFlMmNhM2JmZmI0ZjVkYmUyMA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-08-14T02:59:18Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-08-14T02:59:18Z"}, "message": "i386.md (call_1, [...]): Use Pmode for constant_call_address_operand.\n\n        * config/i386/i386.md (call_1, sibcall_1, call_1_rex64): Use Pmode\n        for constant_call_address_operand.\n        (call_value_pop_1, call_value_1): Likewise.\n        (sibcall_value_1, call_value_1_rex64): Likewise.\n\nFrom-SVN: r85981", "tree": {"sha": "de8ffe9c39b4ba94075646cef9f4117794309520", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de8ffe9c39b4ba94075646cef9f4117794309520"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e427abbf2731fe52aebf1a1e2ca3bffb4f5dbe20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e427abbf2731fe52aebf1a1e2ca3bffb4f5dbe20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e427abbf2731fe52aebf1a1e2ca3bffb4f5dbe20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e427abbf2731fe52aebf1a1e2ca3bffb4f5dbe20/comments", "author": null, "committer": null, "parents": [{"sha": "77a30f085d5dc6e0e19fe034fe4ff2196c7047da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77a30f085d5dc6e0e19fe034fe4ff2196c7047da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77a30f085d5dc6e0e19fe034fe4ff2196c7047da"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "415c0fc6dddcb5d3ddd89c1a994692fc58ab57bb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e427abbf2731fe52aebf1a1e2ca3bffb4f5dbe20/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e427abbf2731fe52aebf1a1e2ca3bffb4f5dbe20/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e427abbf2731fe52aebf1a1e2ca3bffb4f5dbe20", "patch": "@@ -1,3 +1,10 @@\n+2004-08-13  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/i386/i386.md (call_1, sibcall_1, call_1_rex64): Use Pmode\n+\tfor constant_call_address_operand.\n+\t(call_value_pop_1, call_value_1): Likewise.\n+\t(sibcall_value_1, call_value_1_rex64): Likewise.\n+\n 2004-08-13  James E Wilson  <wilson@specifixinc.com>\n \n \t* config/mips/sb1.md (ir_sb1_divdf_2pipes, ir_sb1_divdf_1pipe):"}, {"sha": "a32063d647e0284c6a4eb2ee75c0286961be96a5", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e427abbf2731fe52aebf1a1e2ca3bffb4f5dbe20/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e427abbf2731fe52aebf1a1e2ca3bffb4f5dbe20/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=e427abbf2731fe52aebf1a1e2ca3bffb4f5dbe20", "patch": "@@ -13668,7 +13668,7 @@\n \t (match_operand 1 \"\" \"\"))]\n   \"!SIBLING_CALL_P (insn) && !TARGET_64BIT\"\n {\n-  if (constant_call_address_operand (operands[0], QImode))\n+  if (constant_call_address_operand (operands[0], Pmode))\n     return \"call\\t%P0\";\n   return \"call\\t%A0\";\n }\n@@ -13679,7 +13679,7 @@\n \t (match_operand 1 \"\" \"\"))]\n   \"SIBLING_CALL_P (insn) && !TARGET_64BIT\"\n {\n-  if (constant_call_address_operand (operands[0], QImode))\n+  if (constant_call_address_operand (operands[0], Pmode))\n     return \"jmp\\t%P0\";\n   return \"jmp\\t%A0\";\n }\n@@ -13690,7 +13690,7 @@\n \t (match_operand 1 \"\" \"\"))]\n   \"!SIBLING_CALL_P (insn) && TARGET_64BIT\"\n {\n-  if (constant_call_address_operand (operands[0], QImode))\n+  if (constant_call_address_operand (operands[0], Pmode))\n     return \"call\\t%P0\";\n   return \"call\\t%A0\";\n }\n@@ -19518,7 +19518,7 @@\n \t\t\t    (match_operand:SI 3 \"immediate_operand\" \"i\")))]\n   \"!TARGET_64BIT\"\n {\n-  if (constant_call_address_operand (operands[1], QImode))\n+  if (constant_call_address_operand (operands[1], Pmode))\n     {\n       if (SIBLING_CALL_P (insn))\n \treturn \"jmp\\t%P1\";\n@@ -19564,7 +19564,7 @@\n \t      (match_operand:SI 2 \"\" \"\")))]\n   \"!SIBLING_CALL_P (insn) && !TARGET_64BIT\"\n {\n-  if (constant_call_address_operand (operands[1], QImode))\n+  if (constant_call_address_operand (operands[1], Pmode))\n     return \"call\\t%P1\";\n   return \"call\\t%*%1\";\n }\n@@ -19576,7 +19576,7 @@\n \t      (match_operand:SI 2 \"\" \"\")))]\n   \"SIBLING_CALL_P (insn) && !TARGET_64BIT\"\n {\n-  if (constant_call_address_operand (operands[1], QImode))\n+  if (constant_call_address_operand (operands[1], Pmode))\n     return \"jmp\\t%P1\";\n   return \"jmp\\t%*%1\";\n }\n@@ -19588,7 +19588,7 @@\n \t      (match_operand:DI 2 \"\" \"\")))]\n   \"!SIBLING_CALL_P (insn) && TARGET_64BIT\"\n {\n-  if (constant_call_address_operand (operands[1], QImode))\n+  if (constant_call_address_operand (operands[1], Pmode))\n     return \"call\\t%P1\";\n   return \"call\\t%A1\";\n }"}]}