{"sha": "86d38d25ba2f6583291319bae57481a75aed48bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZkMzhkMjViYTJmNjU4MzI5MTMxOWJhZTU3NDgxYTc1YWVkNDhiZA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-06T00:48:19Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-06T00:48:19Z"}, "message": "(expand_assignment): Special handling for storing in RESULT_DECL.\n\nFrom-SVN: r3663", "tree": {"sha": "7563129dc93fc94c803da35bd194156fcc63d504", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7563129dc93fc94c803da35bd194156fcc63d504"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86d38d25ba2f6583291319bae57481a75aed48bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86d38d25ba2f6583291319bae57481a75aed48bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86d38d25ba2f6583291319bae57481a75aed48bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86d38d25ba2f6583291319bae57481a75aed48bd/comments", "author": null, "committer": null, "parents": [{"sha": "9cea6503647587279c871fd4dfa1878efaebf596", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cea6503647587279c871fd4dfa1878efaebf596", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cea6503647587279c871fd4dfa1878efaebf596"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "3ff238ca1c15a16089e4c70a2493681d066e12bf", "filename": "gcc/expr.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86d38d25ba2f6583291319bae57481a75aed48bd/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86d38d25ba2f6583291319bae57481a75aed48bd/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=86d38d25ba2f6583291319bae57481a75aed48bd", "patch": "@@ -2765,6 +2765,16 @@ expand_assignment (to, from, want_value, suggest_reg)\n   if (to_rtx == 0)\n     to_rtx = expand_expr (to, NULL_RTX, VOIDmode, 0);\n \n+  /* Don't move directly into a return register.  */\n+  if (TREE_CODE (to) == RESULT_DECL && GET_CODE (to_rtx) == REG)\n+    {\n+      rtx temp = expand_expr (from, 0, VOIDmode, 0);\n+      emit_move_insn (to_rtx, temp);\n+      preserve_temp_slots (to_rtx);\n+      free_temp_slots ();\n+      return to_rtx;\n+    }\n+\n   /* In case we are returning the contents of an object which overlaps\n      the place the value is being stored, use a safe function when copying\n      a value through a pointer into a structure value return block.  */"}]}