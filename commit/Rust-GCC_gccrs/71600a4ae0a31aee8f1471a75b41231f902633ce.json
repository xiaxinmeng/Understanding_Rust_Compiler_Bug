{"sha": "71600a4ae0a31aee8f1471a75b41231f902633ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE2MDBhNGFlMGEzMWFlZThmMTQ3MWE3NWI0MTIzMWY5MDI2MzNjZQ==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@cygnus.com", "date": "2000-02-09T20:38:02Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2000-02-09T20:38:02Z"}, "message": "decl.c (clear_binding_level): Remove excess initializer.\n\n2000-02-09  Andrew Haley  <aph@cygnus.com>\n\n        * decl.c (clear_binding_level): Remove excess initializer.\n        (maybe_poplevels): Remove unused variable.\n        (force_poplevels): Ditto.\n        (struct binding_level): Add comment.\n\nFrom-SVN: r31870", "tree": {"sha": "ac92f55a5467c8fc590e5a815db88ee3d4391dc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac92f55a5467c8fc590e5a815db88ee3d4391dc0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71600a4ae0a31aee8f1471a75b41231f902633ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71600a4ae0a31aee8f1471a75b41231f902633ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71600a4ae0a31aee8f1471a75b41231f902633ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71600a4ae0a31aee8f1471a75b41231f902633ce/comments", "author": null, "committer": null, "parents": [{"sha": "d38c8dab7071781d79e1c432b8e06c26f8bb9f93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d38c8dab7071781d79e1c432b8e06c26f8bb9f93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d38c8dab7071781d79e1c432b8e06c26f8bb9f93"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "b536e5ecc4c360218f4951210a112905ed24b131", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71600a4ae0a31aee8f1471a75b41231f902633ce/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71600a4ae0a31aee8f1471a75b41231f902633ce/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=71600a4ae0a31aee8f1471a75b41231f902633ce", "patch": "@@ -1,3 +1,10 @@\n+2000-02-09  Andrew Haley  <aph@cygnus.com>\n+\n+\t* decl.c (clear_binding_level): Remove excess initializer.\n+\t(maybe_poplevels): Remove unused variable.\n+\t(force_poplevels): Ditto.\n+\t(struct binding_level): Add comment.\n+\t\n 2000-01-25  Andrew Haley  <aph@cygnus.com>\n \n         * java-except.h (struct eh_range): Add `expanded' field."}, {"sha": "b5416e49b7e89bce4c6ac9ef509caefe953f0d21", "filename": "gcc/java/decl.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71600a4ae0a31aee8f1471a75b41231f902633ce/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71600a4ae0a31aee8f1471a75b41231f902633ce/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=71600a4ae0a31aee8f1471a75b41231f902633ce", "patch": "@@ -221,6 +221,7 @@ struct binding_level\n \n     /* The bytecode PC that marks the end of this level. */\n     int end_pc;\n+    /* The bytecode PC that marks the start of this level. */\n     int start_pc;\n \n #if defined(DEBUG_JAVA_BINDING_LEVELS)\n@@ -253,7 +254,7 @@ static struct binding_level *global_binding_level;\n \n static struct binding_level clear_binding_level\n   = {NULL_TREE, NULL_TREE, NULL_TREE, NULL_TREE,\n-       NULL_BINDING_LEVEL, 0, 0, 0, 0, LARGEST_PC, 0, 0};\n+       NULL_BINDING_LEVEL, 0, 0, 0, 0, LARGEST_PC, 0};\n \n #if 0\n /* A list (chain of TREE_LIST nodes) of all LABEL_DECLs in the function\n@@ -1443,7 +1444,6 @@ maybe_poplevels (pc)\n \n   while (current_binding_level->end_pc <= pc)\n     {\n-      tree decls = getdecls ();\t\n       expand_end_bindings (getdecls (), 1, 0);\n       maybe_end_try (current_binding_level->start_pc, pc);\n       poplevel (1, 0, 0);\n@@ -1462,7 +1462,6 @@ force_poplevels (start_pc)\n {\n   while (current_binding_level->start_pc > start_pc)\n     {\n-      tree decls = getdecls ();\t\n       if (pedantic && current_binding_level->start_pc > start_pc)\n \twarning_with_decl (current_function_decl, \n \t\t\t   \"In %s: overlapped variable and exception ranges at %d\","}]}