{"sha": "cf40364820f180bdb35437db31cdfb21ba0b0142", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Y0MDM2NDgyMGYxODBiZGIzNTQzN2RiMzFjZGZiMjFiYTBiMDE0Mg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2002-01-22T14:33:35Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-01-22T14:33:35Z"}, "message": "predict.c: Fix formatting.\n\n\t* predict.c: Fix formatting.\n\t* print-tree.c: Likewise.\n\t* protoize.c: Likewise.\n\t* real.h: Likewise.\n\t* rtl.h: Likewise.\n\t* sbitmap.h: Likewise.\n\t* scan.c: Likewise.\n\t* sched-deps.c: Likewise.\n\t* sched-vis.c: Likewise.\n\t* sdbout.c: Likewise.\n\t* sibcall.c: Likewise.\n\t* ssa.c: Likewise.\n\t* ssa-ccp.c: Likewise.\n\t* ssa-dce.c: Likewise.\n\t* stmt.c: Likewise.\n\t* stor-layout.c: Likewise.\n\t* system.h: Likewise.\n\nFrom-SVN: r49074", "tree": {"sha": "47eb45334226fa8effd3bd4990f8351716b2e206", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47eb45334226fa8effd3bd4990f8351716b2e206"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf40364820f180bdb35437db31cdfb21ba0b0142", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf40364820f180bdb35437db31cdfb21ba0b0142", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf40364820f180bdb35437db31cdfb21ba0b0142", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf40364820f180bdb35437db31cdfb21ba0b0142/comments", "author": null, "committer": null, "parents": [{"sha": "a8765ae7a090cfbc12b41f643938fdd17a3c0dec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8765ae7a090cfbc12b41f643938fdd17a3c0dec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8765ae7a090cfbc12b41f643938fdd17a3c0dec"}], "stats": {"total": 166, "additions": 93, "deletions": 73}, "files": [{"sha": "db51fc63dd5996099ee7c5f30852aa51ddc630ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cf40364820f180bdb35437db31cdfb21ba0b0142", "patch": "@@ -1,3 +1,23 @@\n+2002-01-22  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* predict.c: Fix formatting.\n+\t* print-tree.c: Likewise.\n+\t* protoize.c: Likewise.\n+\t* real.h: Likewise.\n+\t* rtl.h: Likewise.\n+\t* sbitmap.h: Likewise.\n+\t* scan.c: Likewise.\n+\t* sched-deps.c: Likewise.\n+\t* sched-vis.c: Likewise.\n+\t* sdbout.c: Likewise.\n+\t* sibcall.c: Likewise.\n+\t* ssa.c: Likewise.\n+\t* ssa-ccp.c: Likewise.\n+\t* ssa-dce.c: Likewise.\n+\t* stmt.c: Likewise.\n+\t* stor-layout.c: Likewise.\n+\t* system.h: Likewise.\n+\n Tue Jan 22 06:26:33 2002  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* tree.c (int_fits_type_p): If bounds of a subtype are variable, see"}, {"sha": "6961a33fb458bba60ff9019a87e49f152bba2b48", "filename": "gcc/predict.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=cf40364820f180bdb35437db31cdfb21ba0b0142", "patch": "@@ -367,7 +367,7 @@ estimate_probability (loops_info)\n \t\t  predict_edge\n \t\t    (e, PRED_LOOP_EXIT,\n \t\t     (REG_BR_PROB_BASE\n-\t\t      - predictor_info [(int)PRED_LOOP_EXIT].hitrate)\n+\t\t      - predictor_info [(int) PRED_LOOP_EXIT].hitrate)\n \t\t     / exits);\n \t  }\n     }"}, {"sha": "594cf0ba4c2c602e31244ea76ba57a8e6032ec61", "filename": "gcc/print-tree.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fprint-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fprint-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.c?ref=cf40364820f180bdb35437db31cdfb21ba0b0142", "patch": "@@ -1,6 +1,6 @@\n /* Prints out tree in human readable form - GNU C-compiler\n    Copyright (C) 1990, 1991, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,\n-   2001 Free Software Foundation, Inc.\n+   2001, 2002 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -387,7 +387,7 @@ print_node (file, prefix, node, indent)\n       if (DECL_LANG_FLAG_7 (node))\n \tfputs (\" decl_7\", file);\n \n-      fprintf (file, \" %s\", GET_MODE_NAME(mode));\n+      fprintf (file, \" %s\", GET_MODE_NAME (mode));\n       fprintf (file, \" file %s line %d\",\n \t       DECL_SOURCE_FILE (node), DECL_SOURCE_LINE (node));\n \n@@ -531,7 +531,7 @@ print_node (file, prefix, node, indent)\n \tfputs (\" type_6\", file);\n \n       mode = TYPE_MODE (node);\n-      fprintf (file, \" %s\", GET_MODE_NAME(mode));\n+      fprintf (file, \" %s\", GET_MODE_NAME (mode));\n \n       print_node (file, \"size\", TYPE_SIZE (node), indent + 4);\n       print_node (file, \"unit size\", TYPE_SIZE_UNIT (node), indent + 4);"}, {"sha": "f8d8a9e7fbe477827ab36f5cdc8798fc0dc1d3b9", "filename": "gcc/protoize.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fprotoize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fprotoize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprotoize.c?ref=cf40364820f180bdb35437db31cdfb21ba0b0142", "patch": "@@ -1,6 +1,6 @@\n /* Protoize program - Original version by Ron Guilmette (rfg@segfault.us.com).\n    Copyright (C) 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001 Free Software Foundation, Inc.\n+   1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -2467,20 +2467,20 @@ reverse_def_dec_list (hp)\n {\n   file_info *file_p = hp->fip;\n   def_dec_info *prev = NULL;\n-  def_dec_info *current = (def_dec_info *)file_p->defs_decs;\n+  def_dec_info *current = (def_dec_info *) file_p->defs_decs;\n \n   if (!current)\n     return;        \t\t/* no list to reverse */\n \n   prev = current;\n-  if (! (current = (def_dec_info *)current->next_in_file))\n+  if (! (current = (def_dec_info *) current->next_in_file))\n     return;        \t\t/* can't reverse a single list element */\n \n   prev->next_in_file = NULL;\n \n   while (current)\n     {\n-      def_dec_info *next = (def_dec_info *)current->next_in_file;\n+      def_dec_info *next = (def_dec_info *) current->next_in_file;\n \n       current->next_in_file = prev;\n       prev = current;\n@@ -2825,7 +2825,7 @@ connect_defs_and_decs (hp)\n       for (dd_p2 = dd_p->next_for_func; dd_p2; dd_p2 = dd_p2->next_for_func)\n         if (!dd_p2->is_func_def && dd_p2->is_static\n          && !dd_p2->definition && (dd_p2->file == dd_p->file))\n-          ((NONCONST def_dec_info *)dd_p2)->definition = dd_p->definition;\n+          ((NONCONST def_dec_info *) dd_p2)->definition = dd_p->definition;\n       }\n \n   /* Convert any dummy (-1) definitions we created in the step above back to\n@@ -3460,7 +3460,7 @@ find_rightmost_formals_list (clean_text_p)\n          by an alphabetic character, while others *cannot* validly be followed\n          by such characters.  */\n \n-      if ((ch == '{') || ISALPHA ((unsigned char)ch))\n+      if ((ch == '{') || ISALPHA ((unsigned char) ch))\n         break;\n \n       /* At this point, we have found a right paren, but we know that it is\n@@ -3806,7 +3806,7 @@ edit_fn_definition (def_dec_p, clean_text_p)\n             have_newlines |= (*scan_orig == '\\n');\n             /* Leave identical whitespace alone.  */\n             if (!ISSPACE ((const unsigned char)*scan_orig))\n-              *((NONCONST char *)scan_orig) = ' '; /* identical - so whiteout */\n+              *((NONCONST char *) scan_orig) = ' '; /* identical - so whiteout */\n           }\n         else\n           have_flotsam = 1;\n@@ -3877,7 +3877,7 @@ do_cleaning (new_clean_text_base, new_clean_text_limit)\n             while (scan_p[1] != '\\'' || scan_p[0] == '\\\\')\n               {\n                 if (scan_p[0] == '\\\\'\n-\t\t    && !ISSPACE ((const unsigned char)scan_p[1]))\n+\t\t    && !ISSPACE ((const unsigned char) scan_p[1]))\n                   scan_p[1] = ' ';\n                 if (!ISSPACE ((const unsigned char)*scan_p))\n                   *scan_p = ' ';\n@@ -3892,7 +3892,7 @@ do_cleaning (new_clean_text_base, new_clean_text_limit)\n             while (scan_p[1] != '\"' || scan_p[0] == '\\\\')\n               {\n                 if (scan_p[0] == '\\\\'\n-\t\t    && !ISSPACE ((const unsigned char)scan_p[1]))\n+\t\t    && !ISSPACE ((const unsigned char) scan_p[1]))\n                   scan_p[1] = ' ';\n                 if (!ISSPACE ((const unsigned char)*scan_p))\n                   *scan_p = ' ';"}, {"sha": "2d3a9090e0429283132a7d9b101c34018c4d0076", "filename": "gcc/real.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Freal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Freal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.h?ref=cf40364820f180bdb35437db31cdfb21ba0b0142", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of floating-point access for GNU compiler.\n    Copyright (C) 1989, 1991, 1994, 1996, 1997, 1998,\n-   1999, 2000 Free Software Foundation, Inc.\n+   1999, 2000, 2002 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -212,7 +212,7 @@ extern REAL_VALUE_TYPE ereal_from_double PARAMS ((HOST_WIDE_INT *));\n    (LONG_DOUBLE_TYPE_SIZE == 64 ? etardouble ((IN), (OUT))\t\\\n     : LONG_DOUBLE_TYPE_SIZE == 96 ? etarldouble ((IN), (OUT))\t\\\n     : LONG_DOUBLE_TYPE_SIZE == 128 ? etartdouble ((IN), (OUT))  \\\n-    : abort())\n+    : abort ())\n #define REAL_VALUE_TO_TARGET_DOUBLE(IN, OUT) (etardouble ((IN), (OUT)))\n \n /* IN is a REAL_VALUE_TYPE.  OUT is a long.  */\n@@ -285,7 +285,7 @@ do {\t\t\t\t\t\t\t\\\n     HOST_WIDE_INT l;\t\t\t\t\t\\\n   } u;\t\t\t\t\t\t\t\\\n   if (sizeof(HOST_WIDE_INT) < sizeof(float))\t\t\\\n-    abort();\t\t\t\t\t\t\\\n+    abort ();\t\t\t\t\t\t\\\n   u.l = 0;\t\t\t\t\t\t\\\n   u.f = (IN);\t\t\t\t\t\t\\\n   (OUT) = u.l;\t\t\t\t\t\t\\\n@@ -303,7 +303,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n     HOST_WIDE_INT l[2];\t\t\t\t\t\t\t\\\n   } u;\t\t\t\t\t\t\t\t\t\\\n   if (sizeof(HOST_WIDE_INT) * 2 < sizeof(REAL_VALUE_TYPE))\t\t\\\n-    abort();\t\t\t\t\t\t\t\t\\\n+    abort ();\t\t\t\t\t\t\t\t\\\n   u.l[0] = u.l[1] = 0;\t\t\t\t\t\t\t\\\n   u.f = (IN);\t\t\t\t\t\t\t\t\\\n   if (HOST_FLOAT_WORDS_BIG_ENDIAN == FLOAT_WORDS_BIG_ENDIAN)\t\t\\"}, {"sha": "4ef5c4c3420b8be05f41443f057e35f07aabb687", "filename": "gcc/rtl.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=cf40364820f180bdb35437db31cdfb21ba0b0142", "patch": "@@ -48,7 +48,7 @@ enum rtx_code  {\n \t\t\t\t   NUM_RTX_CODE.\n \t\t\t\t   Assumes default enum value assignment.  */\n \n-#define NUM_RTX_CODE ((int)LAST_AND_UNUSED_RTX_CODE)\n+#define NUM_RTX_CODE ((int) LAST_AND_UNUSED_RTX_CODE)\n \t\t\t\t/* The cast here, saves many elsewhere.  */\n \n extern const unsigned char rtx_length[NUM_RTX_CODE];\n@@ -1706,7 +1706,7 @@ extern rtx gen_lowpart_SUBREG PARAMS ((enum machine_mode, rtx));\n        && (REGNUM) <= LAST_VIRTUAL_REGISTER))\n \n /* REGNUM never really appearing in the INSN stream.  */\n-#define INVALID_REGNUM\t\t\t(~(unsigned int)0)\n+#define INVALID_REGNUM\t\t\t(~(unsigned int) 0)\n \n extern rtx find_next_ref\t\tPARAMS ((rtx, rtx));\n "}, {"sha": "889680188b29136030bb9fc0225dd00874246367", "filename": "gcc/sbitmap.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fsbitmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fsbitmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsbitmap.h?ref=cf40364820f180bdb35437db31cdfb21ba0b0142", "patch": "@@ -1,5 +1,5 @@\n /* Simple bitmaps.\n-   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2002 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -71,7 +71,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n       if (word_ != 0)\t\t\t\t\t\t\t\\\n \tfor (; bit_num_ < SBITMAP_ELT_BITS; bit_num_++)\t\t\t\\\n \t  {\t\t\t\t\t\t\t\t\\\n-\t    SBITMAP_ELT_TYPE _mask = (SBITMAP_ELT_TYPE)1 << bit_num_;\t\\\n+\t    SBITMAP_ELT_TYPE _mask = (SBITMAP_ELT_TYPE) 1 << bit_num_;\t\\\n \t\t\t\t\t\t\t\t\t\\\n \t    if ((word_ & _mask) != 0)\t\t\t\t\t\\\n \t      {\t\t\t\t\t\t\t\t\\"}, {"sha": "ee2607c575efec05135cb47be9561b1123f76456", "filename": "gcc/scan.c", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fscan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fscan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fscan.c?ref=cf40364820f180bdb35437db31cdfb21ba0b0142", "patch": "@@ -1,5 +1,5 @@\n /* Utility functions for scan-decls and fix-header programs.\n-   Copyright (C) 1993, 1994, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1994, 1998, 2002 Free Software Foundation, Inc.\n \n This program is free software; you can redistribute it and/or modify it\n under the terms of the GNU General Public License as published by the\n@@ -46,9 +46,9 @@ sstring_append (dst, src)\n      sstring *src;\n {\n   char *d, *s;\n-  int count = SSTRING_LENGTH(src);\n+  int count = SSTRING_LENGTH (src);\n \n-  MAKE_SSTRING_SPACE(dst, count + 1);\n+  MAKE_SSTRING_SPACE (dst, count + 1);\n   d = dst->ptr;\n   s = src->base;\n   while (--count >= 0) *d++ = *s++;\n@@ -63,17 +63,17 @@ scan_ident (fp, s, c)\n      int c;\n {\n   s->ptr = s->base;\n-  if (ISIDST(c))\n+  if (ISIDST (c))\n     {\n       for (;;)\n \t{\n-\t  SSTRING_PUT(s, c);\n+\t  SSTRING_PUT (s, c);\n \t  c = getc (fp);\n-\t  if (c == EOF || ! ISIDNUM(c))\n+\t  if (c == EOF || ! ISIDNUM (c))\n \t    break;\n \t}\n     }\n-  MAKE_SSTRING_SPACE(s, 1);\n+  MAKE_SSTRING_SPACE (s, 1);\n   *s->ptr = 0;\n   return c;\n }\n@@ -104,9 +104,9 @@ scan_string (fp, s, init)\n \t  if (c == '\\n')\n \t    continue;\n \t}\n-      SSTRING_PUT(s, c);\n+      SSTRING_PUT (s, c);\n     }\n-  MAKE_SSTRING_SPACE(s, 1);\n+  MAKE_SSTRING_SPACE (s, 1);\n   *s->ptr = 0;\n   return c;\n }\n@@ -164,9 +164,9 @@ read_upto (fp, str, delim)\n       ch = getc (fp);\n       if (ch == EOF || ch == delim)\n \tbreak;\n-      SSTRING_PUT(str, ch);\n+      SSTRING_PUT (str, ch);\n     }\n-  MAKE_SSTRING_SPACE(str, 1);\n+  MAKE_SSTRING_SPACE (str, 1);\n   *str->ptr = 0;\n   return ch;\n }\n@@ -215,9 +215,9 @@ get_token (fp, s)\n     {\n       do\n \t{\n-\t  SSTRING_PUT(s, c);\n+\t  SSTRING_PUT (s, c);\n \t  c = getc (fp);\n-\t} while (c != EOF && ISDIGIT(c));\n+\t} while (c != EOF && ISDIGIT (c));\n       ungetc (c, fp);\n       c = INT_TOKEN;\n       goto done;\n@@ -234,9 +234,9 @@ get_token (fp, s)\n       ungetc (c, fp);\n       return c == '\\'' ? CHAR_TOKEN : STRING_TOKEN;\n     }\n-  SSTRING_PUT(s, c);\n+  SSTRING_PUT (s, c);\n  done:\n-  MAKE_SSTRING_SPACE(s, 1);\n+  MAKE_SSTRING_SPACE (s, 1);\n   *s->ptr = 0;\n   return c;\n }\n@@ -248,7 +248,7 @@ hashstr (str, len)\n {\n   unsigned int n = len;\n   unsigned int r = 0;\n-  const unsigned char *s = (const unsigned char *)str;\n+  const unsigned char *s = (const unsigned char *) str;\n \n   do\n     r = r * 67 + (*s++ - 113);"}, {"sha": "edf1feea505f2d7219ee0a887511afe3d964a05f", "filename": "gcc/sched-deps.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fsched-deps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fsched-deps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-deps.c?ref=cf40364820f180bdb35437db31cdfb21ba0b0142", "patch": "@@ -1,7 +1,7 @@\n /* Instruction scheduling pass.  This file computes dependencies between\n    instructions.\n    Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001 Free Software Foundation, Inc.\n+   1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com) Enhanced by,\n    and currently maintained by, Jim Wilson (wilson@cygnus.com)\n \n@@ -334,7 +334,7 @@ add_dependence (insn, elem, dep_type)\n \t     note that in the bitmap caches of dependency information.  */\n \t  if (true_dependency_cache != NULL)\n \t    {\n-\t      if ((int)REG_NOTE_KIND (link) == 0)\n+\t      if ((int) REG_NOTE_KIND (link) == 0)\n \t\tSET_BIT (true_dependency_cache[INSN_LUID (insn)],\n \t\t\t INSN_LUID (elem));\n \t      else if (REG_NOTE_KIND (link) == REG_DEP_ANTI)\n@@ -360,7 +360,7 @@ add_dependence (insn, elem, dep_type)\n      in the bitmap caches of dependency information.  */\n   if (true_dependency_cache != NULL)\n     {\n-      if ((int)dep_type == 0)\n+      if ((int) dep_type == 0)\n \tSET_BIT (true_dependency_cache[INSN_LUID (insn)], INSN_LUID (elem));\n       else if (dep_type == REG_DEP_ANTI)\n \tSET_BIT (anti_dependency_cache[INSN_LUID (insn)], INSN_LUID (elem));"}, {"sha": "2dd20d0cd506776193dd20fe882876895e71f75e", "filename": "gcc/sched-vis.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fsched-vis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fsched-vis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-vis.c?ref=cf40364820f180bdb35437db31cdfb21ba0b0142", "patch": "@@ -1,6 +1,6 @@\n /* Instruction scheduling pass.\n    Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000 Free Software Foundation, Inc.\n+   1999, 2000, 2002 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com) Enhanced by,\n    and currently maintained by, Jim Wilson (wilson@cygnus.com)\n \n@@ -928,7 +928,7 @@ visualize_stall_cycles (stalls)\n   strcpy (p, prefix);\n   p += strlen (prefix);\n \n-  if ((unsigned)stalls >\n+  if ((unsigned) stalls >\n       visual_tbl_line_length - strlen (prefix) - strlen (suffix))\n     {\n       suffix = \"[...]\\n\";"}, {"sha": "8405c0a8f29d1422fc90e73ec6aed864b1f5af7f", "filename": "gcc/sdbout.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fsdbout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fsdbout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsdbout.c?ref=cf40364820f180bdb35437db31cdfb21ba0b0142", "patch": "@@ -1,6 +1,6 @@\n /* Output sdb-format symbol table information from GNU compiler.\n    Copyright (C) 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-   2000, 2001  Free Software Foundation, Inc.\n+   2000, 2001, 2002 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -150,7 +150,7 @@ static void sdbout_global_decl\t\tPARAMS ((tree));\n #define PUT_SDB_INT_VAL(a) \\\n  do {\t\t\t\t\t\t\t\t\t\\\n    fputs (\"\\t.val\\t\", asm_out_file);\t\t       \t\t\t\\\n-   fprintf (asm_out_file, HOST_WIDE_INT_PRINT_DEC, (HOST_WIDE_INT)(a));\t\\\n+   fprintf (asm_out_file, HOST_WIDE_INT_PRINT_DEC, (HOST_WIDE_INT) (a)); \\\n    fprintf (asm_out_file, \"%s\", SDB_DELIM);\t\t\t\t\\\n  } while (0)\n \n@@ -186,7 +186,7 @@ do { fprintf (asm_out_file, \"\\t.def\\t\");\t\\\n #define PUT_SDB_SIZE(a) \\\n  do {\t\t\t\t\t\t\t\t\t\\\n    fputs (\"\\t.size\\t\", asm_out_file);\t\t\t\t\t\\\n-   fprintf (asm_out_file, HOST_WIDE_INT_PRINT_DEC, (HOST_WIDE_INT)(a));\t\\\n+   fprintf (asm_out_file, HOST_WIDE_INT_PRINT_DEC, (HOST_WIDE_INT) (a)); \\\n    fprintf (asm_out_file, \"%s\", SDB_DELIM);\t\t\t\t\\\n  } while(0)\n #endif\n@@ -381,9 +381,9 @@ gen_fake_label ()\n    PREV is the number describing the target, value or element type.\n    DT_type describes how to transform that type.  */\n #define PUSH_DERIVED_LEVEL(DT_type,PREV)\t\t\\\n-  ((((PREV) & ~(int)N_BTMASK) << (int)N_TSHIFT)\t\t\\\n-   | ((int)DT_type << (int)N_BTSHFT)\t\t\t\\\n-   | ((PREV) & (int)N_BTMASK))\n+  ((((PREV) & ~(int) N_BTMASK) << (int) N_TSHIFT)\t\t\\\n+   | ((int) DT_type << (int) N_BTSHFT)\t\t\t\\\n+   | ((PREV) & (int) N_BTMASK))\n \n /* Number of elements used in sdb_dims.  */\n static int sdb_n_dims = 0;"}, {"sha": "6c2dc5c09146041d4478a1fb619a0db5dd87e465", "filename": "gcc/sibcall.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fsibcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fsibcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsibcall.c?ref=cf40364820f180bdb35437db31cdfb21ba0b0142", "patch": "@@ -1,5 +1,5 @@\n /* Generic sibling call optimization support\n-   Copyright (C) 1999, 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -546,7 +546,7 @@ replace_call_placeholder (insn, use)\n   else if (use == sibcall_use_normal)\n     emit_insns_before (XEXP (PATTERN (insn), 0), insn);\n   else\n-    abort();\n+    abort ();\n \n   /* Turn off LABEL_PRESERVE_P for the tail recursion label if it\n      exists.  We only had to set it long enough to keep the jump"}, {"sha": "9d2d9c9170e72a2998fcdd5795b409a4f7ae2854", "filename": "gcc/ssa-ccp.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fssa-ccp.c?ref=cf40364820f180bdb35437db31cdfb21ba0b0142", "patch": "@@ -1,5 +1,5 @@\n /* Conditional constant propagation pass for the GNU compiler.\n-   Copyright (C) 2000,2001 Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2001, 2002 Free Software Foundation, Inc.\n    Original framework by Daniel Berlin <dan@cgsoftware.com>\n    Fleshed out and major cleanups by Jeff Law <law@redhat.com>\n    \n@@ -1102,7 +1102,7 @@ mark_references (current_rtx, data)\n      void *data;\n {\n   rtx x = *current_rtx;\n-  sbitmap worklist = (sbitmap)data;\n+  sbitmap worklist = (sbitmap) data;\n \n   if (x == NULL_RTX)\n     return 0;"}, {"sha": "83b4e44bf804264e898af3919689c9a2cd78639a", "filename": "gcc/ssa-dce.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fssa-dce.c?ref=cf40364820f180bdb35437db31cdfb21ba0b0142", "patch": "@@ -1,5 +1,5 @@\n /* Dead-code elimination pass for the GNU compiler.\n-   Copyright (C) 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2001, 2002 Free Software Foundation, Inc.\n    Written by Jeffrey D. Oldham <oldham@codesourcery.com>.\n \n This file is part of GCC.\n@@ -341,7 +341,7 @@ note_inherently_necessary_set (dest, set, data)\n      rtx dest;\n      void *data;\n {\n-  int *inherently_necessary_set_p = (int *)data;\n+  int *inherently_necessary_set_p = (int *) data;\n \n   while (GET_CODE (dest) == SUBREG\n \t || GET_CODE (dest) == STRICT_LOW_PART\n@@ -396,7 +396,7 @@ find_inherently_necessary (x)\n \t}\n       default:\n \t/* Found an impossible insn type.  */\n-\tabort();\n+\tabort ();\n \tbreak;\n       }\n }\n@@ -521,7 +521,7 @@ ssa_eliminate_dead_code ()\n   for (i = 0; i < n_basic_blocks; ++i)\n     if (pdom[i] == INVALID_BLOCK)\n       pdom[i] = EXIT_BLOCK;\n-  el = create_edge_list();\n+  el = create_edge_list ();\n   find_all_control_dependences (el, pdom, cdbte);\n \n   /* Find inherently necessary instructions.  */"}, {"sha": "c97b35c35883850397a94bd110b48f5c81d1ad3e", "filename": "gcc/ssa.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fssa.c?ref=cf40364820f180bdb35437db31cdfb21ba0b0142", "patch": "@@ -1,5 +1,5 @@\n /* Static Single Assignment conversion routines for the GNU compiler.\n-   Copyright (C) 2000, 2001 Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2001, 2002 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -625,9 +625,9 @@ compute_iterated_dominance_frontiers (idfs, frontiers, evals, nregs)\n \n   if (rtl_dump_file)\n     {\n-      fprintf(rtl_dump_file,\n-\t      \"Iterated dominance frontier: %d passes on %d regs.\\n\",\n-\t      passes, nregs);\n+      fprintf (rtl_dump_file,\n+\t       \"Iterated dominance frontier: %d passes on %d regs.\\n\",\n+\t       passes, nregs);\n     }\n }\n \n@@ -743,7 +743,7 @@ create_delayed_rename (c, reg_loc)\n   \n   if (GET_CODE (*reg_loc) != REG\n       || !CONVERT_REGISTER_TO_SSA_P (REGNO (*reg_loc)))\n-    abort();\n+    abort ();\n \n   r->reg_loc = reg_loc;\n   r->old_reg = *reg_loc;\n@@ -779,7 +779,7 @@ apply_delayed_renames (c)\n       /* Failure here means that someone has a PARALLEL that sets\n \t a register twice (bad!).  */\n       if (ssa_rename_to_lookup (r->old_reg) != r->prev_reg)\n-\tabort();\n+\tabort ();\n       /* Failure here means we have changed REG_LOC before applying\n \t the rename.  */\n       /* For the first set we come across, reuse the original regno.  */\n@@ -1091,7 +1091,7 @@ rename_block (bb, idom)\n       rtx old_reg = *set_data->reg_loc;\n \n       if (*set_data->reg_loc != set_data->old_reg)\n-\tabort();\n+\tabort ();\n       *set_data->reg_loc = set_data->new_reg;\n \n       ssa_rename_to_insert (old_reg, set_data->prev_reg);\n@@ -1149,7 +1149,7 @@ convert_to_ssa ()\n   life_analysis (get_insns (), NULL, 0);\n \n   idom = (int *) alloca (n_basic_blocks * sizeof (int));\n-  memset ((void *)idom, -1, (size_t)n_basic_blocks * sizeof (int));\n+  memset ((void *) idom, -1, (size_t) n_basic_blocks * sizeof (int));\n   calculate_dominance_info (idom, NULL, CDI_DOMINATORS);\n \n   if (rtl_dump_file)\n@@ -1175,7 +1175,7 @@ convert_to_ssa ()\n \n   /* Compute register evaluations.  */\n \n-  ssa_max_reg_num = max_reg_num();\n+  ssa_max_reg_num = max_reg_num ();\n   nregs = ssa_max_reg_num;\n   evals = sbitmap_vector_alloc (nregs, n_basic_blocks);\n   find_evaluations (evals, nregs);\n@@ -1395,7 +1395,7 @@ eliminate_phi (e, reg_partition)\n       reg = *preg;\n \n       if (GET_CODE (reg) != REG || GET_CODE (tgt) != REG)\n-\tabort();\n+\tabort ();\n \n       reg = regno_reg_rtx[partition_find (reg_partition, REGNO (reg))];\n       tgt = regno_reg_rtx[partition_find (reg_partition, REGNO (tgt))];\n@@ -2122,7 +2122,7 @@ rename_equivalent_regs (reg_partition)\n \t\t  int i;\n \n \t\t  if (slen <= 1)\n-\t\t    abort();\n+\t\t    abort ();\n \n \t\t  PATTERN (insn) = XVECEXP (s, 0, slen-1);\n \t\t  for (i = 0; i < slen - 1; i++)\n@@ -2139,7 +2139,7 @@ rename_equivalent_regs (reg_partition)\n /* The main entry point for moving from SSA.  */\n \n void\n-convert_from_ssa()\n+convert_from_ssa ()\n {\n   int bb;\n   partition reg_partition;"}, {"sha": "c7c6b2a084d3ca7d15fad602f7dd2bcb17772d00", "filename": "gcc/stmt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=cf40364820f180bdb35437db31cdfb21ba0b0142", "patch": "@@ -110,7 +110,7 @@ static int cost_table_initialized;\n \n /* Special care is needed because we allow -1, but TREE_INT_CST_LOW\n    is unsigned.  */\n-#define COST_TABLE(I)  cost_table_[(unsigned HOST_WIDE_INT)((I) + 1)]\n+#define COST_TABLE(I)  cost_table_[(unsigned HOST_WIDE_INT) ((I) + 1)]\n \f\n /* Stack of control and binding constructs we are currently inside.\n "}, {"sha": "91aa454618357c796cfc6d9ee4445be789e1f987", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=cf40364820f180bdb35437db31cdfb21ba0b0142", "patch": "@@ -1,6 +1,6 @@\n /* C-compiler utilities for types and variables storage layout\n    Copyright (C) 1987, 1988, 1992, 1993, 1994, 1995, 1996, 1996, 1998,\n-   1999, 2000, 2001 Free Software Foundation, Inc.\n+   1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -1563,7 +1563,7 @@ layout_type (type)\n     case SET_TYPE:  /* Used by Chill and Pascal.  */\n       if (TREE_CODE (TYPE_MAX_VALUE (TYPE_DOMAIN (type))) != INTEGER_CST\n \t  || TREE_CODE (TYPE_MIN_VALUE (TYPE_DOMAIN (type))) != INTEGER_CST)\n-\tabort();\n+\tabort ();\n       else\n \t{\n #ifndef SET_WORD_SIZE"}, {"sha": "a55351a0fcbd9961477a6e3c1d05e606d860f023", "filename": "gcc/system.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf40364820f180bdb35437db31cdfb21ba0b0142/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=cf40364820f180bdb35437db31cdfb21ba0b0142", "patch": "@@ -178,7 +178,7 @@ extern int errno;\n    UPPER.  However the bounds themselves can be either positive or\n    negative.  */\n #define IN_RANGE(VALUE, LOWER, UPPER) \\\n-  ((unsigned HOST_WIDE_INT)((VALUE) - (LOWER)) <= ((UPPER) - (LOWER)))\n+  ((unsigned HOST_WIDE_INT) ((VALUE) - (LOWER)) <= ((UPPER) - (LOWER)))\n \n /* Infrastructure for defining missing _MAX and _MIN macros.  Note that\n    macros defined with these cannot be used in #if.  */\n@@ -507,7 +507,7 @@ extern void abort PARAMS ((void));\n #endif\n \n #ifndef offsetof\n-#define offsetof(TYPE, MEMBER)\t((size_t) &((TYPE *)0)->MEMBER)\n+#define offsetof(TYPE, MEMBER)\t((size_t) &((TYPE *) 0)->MEMBER)\n #endif\n \n /* Traditional C cannot initialize union members of structs.  Provide"}]}