{"sha": "26830c2facbde04517814464d4cd099a6fe1dd08", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY4MzBjMmZhY2JkZTA0NTE3ODE0NDY0ZDRjZDA5OWE2ZmUxZGQwOA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2017-01-16T23:51:57Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2017-01-16T23:51:57Z"}, "message": "revert: Makefile.in (PREPROCESSOR_DEFINES): Add a level of indirection for several include directories that may be relative...\n\n\tRevert:\n\t2016-12-02  Tadek Kijkowski  <tkijkowski@gmail.com>\n        * Makefile.in (PREPROCESSOR_DEFINES): Add a level of indirection\n        for several include directories that may be relative to sysroot.\n        * config/i386/x-mingw32 (gplus_includedir): Define.\n        (gplus_tool_includedir, gplus_backward_include_dir): Likewise.\n        (native_system_includedir): Likewise.\n        * config/i386/mingw32.h (STANDARD_STARTFILE_PREFIX_1): Do not\n        override if TARGET_SYSTEM_ROOT is defined.\n        (NATIVE_SYSTEM_HEADER_DIR): Likewise.\n\nFrom-SVN: r244510", "tree": {"sha": "c02c8ee252f4a3574baec98a4c45d395f83bc70c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c02c8ee252f4a3574baec98a4c45d395f83bc70c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26830c2facbde04517814464d4cd099a6fe1dd08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26830c2facbde04517814464d4cd099a6fe1dd08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26830c2facbde04517814464d4cd099a6fe1dd08", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26830c2facbde04517814464d4cd099a6fe1dd08/comments", "author": null, "committer": null, "parents": [{"sha": "a59afbe2fecf938caff8462378acc0506ea4ff5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a59afbe2fecf938caff8462378acc0506ea4ff5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a59afbe2fecf938caff8462378acc0506ea4ff5c"}], "stats": {"total": 66, "additions": 15, "deletions": 51}, "files": [{"sha": "3ef73ce180e3b87d1c1942fdcab8d9b29160618e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26830c2facbde04517814464d4cd099a6fe1dd08/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26830c2facbde04517814464d4cd099a6fe1dd08/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=26830c2facbde04517814464d4cd099a6fe1dd08", "patch": "@@ -1,5 +1,16 @@\n 2017-01-16  Jeff Law  <law@redhat.com>\n \n+\tRevert:\n+\t2016-12-02  Tadek Kijkowski  <tkijkowski@gmail.com>\n+        * Makefile.in (PREPROCESSOR_DEFINES): Add a level of indirection\n+        for several include directories that may be relative to sysroot.\n+        * config/i386/x-mingw32 (gplus_includedir): Define.\n+        (gplus_tool_includedir, gplus_backward_include_dir): Likewise.\n+        (native_system_includedir): Likewise.\n+        * config/i386/mingw32.h (STANDARD_STARTFILE_PREFIX_1): Do not\n+        override if TARGET_SYSTEM_ROOT is defined.\n+        (NATIVE_SYSTEM_HEADER_DIR): Likewise.\n+\n \tPR tree-optimization/79090\n \tPR tree-optimization/33562\n \tPR tree-optimization/61912"}, {"sha": "59fe4aa28364981339373252c01f81e509175c9d", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26830c2facbde04517814464d4cd099a6fe1dd08/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26830c2facbde04517814464d4cd099a6fe1dd08/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=26830c2facbde04517814464d4cd099a6fe1dd08", "patch": "@@ -675,15 +675,6 @@ objext = .o\n exeext = @host_exeext@\n build_exeext = @build_exeext@\n \n-\n-# This allows overriding include paths in host specific Makefile\n-# (config/i386/x-mingw32 overrides those variables and local_includedir).\n-gplusplus_includedir = $(gcc_gxx_include_dir)\n-gplusplus_tool_includedir = $(gcc_gxx_include_dir)/$(target_noncanonical)\n-gplusplus_backward_includedir = $(gcc_gxx_include_dir)/backward\n-native_system_includedir = $(NATIVE_SYSTEM_HEADER_DIR)\n-\n-\n # Directory in which to put man pages.\n mandir = @mandir@\n man1dir = $(mandir)/man1\n@@ -2793,14 +2784,14 @@ CFLAGS-intl.o += -DLOCALEDIR=\\\"$(localedir)\\\"\n PREPROCESSOR_DEFINES = \\\n   -DGCC_INCLUDE_DIR=\\\"$(libsubdir)/include\\\" \\\n   -DFIXED_INCLUDE_DIR=\\\"$(libsubdir)/include-fixed\\\" \\\n-  -DGPLUSPLUS_INCLUDE_DIR=\\\"$(gplusplus_includedir)\\\" \\\n+  -DGPLUSPLUS_INCLUDE_DIR=\\\"$(gcc_gxx_include_dir)\\\" \\\n   -DGPLUSPLUS_INCLUDE_DIR_ADD_SYSROOT=$(gcc_gxx_include_dir_add_sysroot) \\\n-  -DGPLUSPLUS_TOOL_INCLUDE_DIR=\\\"$(gplusplus_tool_includedir)\\\" \\\n-  -DGPLUSPLUS_BACKWARD_INCLUDE_DIR=\\\"$(gplusplus_backward_includedir)\\\" \\\n+  -DGPLUSPLUS_TOOL_INCLUDE_DIR=\\\"$(gcc_gxx_include_dir)/$(target_noncanonical)\\\" \\\n+  -DGPLUSPLUS_BACKWARD_INCLUDE_DIR=\\\"$(gcc_gxx_include_dir)/backward\\\" \\\n   -DLOCAL_INCLUDE_DIR=\\\"$(local_includedir)\\\" \\\n   -DCROSS_INCLUDE_DIR=\\\"$(CROSS_SYSTEM_HEADER_DIR)\\\" \\\n   -DTOOL_INCLUDE_DIR=\\\"$(gcc_tooldir)/include\\\" \\\n-  -DNATIVE_SYSTEM_HEADER_DIR=\\\"$(native_system_includedir)\\\" \\\n+  -DNATIVE_SYSTEM_HEADER_DIR=\\\"$(NATIVE_SYSTEM_HEADER_DIR)\\\" \\\n   -DPREFIX=\\\"$(prefix)/\\\" \\\n   -DSTANDARD_EXEC_PREFIX=\\\"$(libdir)/gcc/\\\" \\\n   @TARGET_SYSTEM_ROOT_DEFINE@"}, {"sha": "543d851f5388b4fd9cf7659d87dc05c0b74d20c8", "filename": "gcc/config/i386/mingw32.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26830c2facbde04517814464d4cd099a6fe1dd08/gcc%2Fconfig%2Fi386%2Fmingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26830c2facbde04517814464d4cd099a6fe1dd08/gcc%2Fconfig%2Fi386%2Fmingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmingw32.h?ref=26830c2facbde04517814464d4cd099a6fe1dd08", "patch": "@@ -161,8 +161,6 @@ along with GCC; see the file COPYING3.  If not see\n     fvtable-verify=std:vtv_end.o%s} \\\n   crtend.o%s\"\n \n-#if !defined(TARGET_SYSTEM_ROOT)\n-\n /* Override startfile prefix defaults.  */\n #ifndef STANDARD_STARTFILE_PREFIX_1\n #define STANDARD_STARTFILE_PREFIX_1 \"/mingw/lib/\"\n@@ -176,8 +174,6 @@ along with GCC; see the file COPYING3.  If not see\n #undef NATIVE_SYSTEM_HEADER_DIR\n #define NATIVE_SYSTEM_HEADER_DIR \"/mingw/include\"\n \n-#endif /* !defined(TARGET_SYSTEM_ROOT) */\n-\n /* Output STRING, a string representing a filename, to FILE.\n    We canonicalize it to be in Unix format (backslashes are replaced\n    forward slashes.  */"}, {"sha": "6a2d5a5069461b93884fa68ffbcbb13585d24c37", "filename": "gcc/config/i386/x-mingw32", "status": "modified", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26830c2facbde04517814464d4cd099a6fe1dd08/gcc%2Fconfig%2Fi386%2Fx-mingw32", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26830c2facbde04517814464d4cd099a6fe1dd08/gcc%2Fconfig%2Fi386%2Fx-mingw32", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-mingw32?ref=26830c2facbde04517814464d4cd099a6fe1dd08", "patch": "@@ -16,44 +16,10 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n #\n-\n-# MSYS will zealously translate all paths to Windows form, so /usr/include becomes c:/msysX/usr/include.\n-# This is undesirable when TARGET_SYSTEM_ROOT is specified, so this function converts /usr/include to //usr\\include,\n-# which will become /usr/include again when passed to gcc.\n-\n-# This function takes two parameters: first parameter is include directory path, second parameter tells\n-# if the path is relative to TARGET_SYSTEM_ROOT.\n-# If TARGET_SYSTEM_ROOT is not configured, or\n-#   this function always expands to the unmodified first parameter\n-# if TARGET_SYSTEM_ROOT is configured, but second parameter is not 1,\n-#   this function again expands to the unmodified first parameter\n-# otherwise,\n-#  it expands to a shell expression which will transform the first parameter as described above.\n-ifneq ($(TARGET_SYSTEM_ROOT),)\n-sysroot_relative_path = $(if $(filter 1,$(2)),`echo \"$(1)\" | tr '/' '\\\\\\\\' | sed 's|^\\\\\\\\|//|'`,$(1))\n-else\n-sysroot_relative_path = $(1)\n-endif\n-\n-ifneq ($(TARGET_SYSTEM_ROOT),)\n-#\n-# Make sure that relative the path is not converted to absolute DOS style path\n-#\n-local_includedir = $(call sysroot_relative_path,$(local_prefix)/include,1)\n-else\n #\n # Make local_includedir relative to EXEC_PREFIX \n #\n local_includedir=$(libsubdir)/$(unlibsubdir)/..`echo $(exec_prefix) | sed -e 's|^$(prefix)||' -e 's|/[^/]*|/..|g'`/include\n-endif\n-\n-#\n-# Make sure that relative path are not converted to absolute DOS style paths\n-#\n-gplusplus_includedir = $(call sysroot_relative_path,$(gcc_gxx_include_dir),$(gcc_gxx_include_dir_add_sysroot))\n-gplusplus_tool_includedir = $(call sysroot_relative_path,$(gcc_gxx_include_dir)/$(target_noncanonical),$(gcc_gxx_include_dir_add_sysroot))\n-gplusplus_backward_includedir = $(call sysroot_relative_path,$(gcc_gxx_include_dir)/backward,$(gcc_gxx_include_dir_add_sysroot))\n-native_system_includedir = $(call sysroot_relative_path,$(NATIVE_SYSTEM_HEADER_DIR),1)\n \n # On MinGW, we use \"%IA64d\" to print 64-bit integers, and the format-checking\n # code does not handle that, so we have to disable checking here."}]}