{"sha": "1151ccc922e195087ce596ac58a09a113e58011b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE1MWNjYzkyMmUxOTUwODdjZTU5NmFjNThhMDlhMTEzZTU4MDExYg==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2009-08-17T20:17:12Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2009-08-17T20:17:12Z"}, "message": "re PR fortran/41062 (ICE in gfc_trans_use_stmts, at fortran/trans-decl.c:3438)\n\n2008-08-17  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/41062\n\t* trans-decl.c (gfc_trans_use_stmts):  Keep going through use\n\tlist if symbol is not use associated.\n\n2008-08-17  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/41062\n\t* gfortran.dg/use_only_4.f90: New test.\n\nFrom-SVN: r150858", "tree": {"sha": "07fdaa9450f0ab8128378fe6f6c2252efff5a683", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07fdaa9450f0ab8128378fe6f6c2252efff5a683"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1151ccc922e195087ce596ac58a09a113e58011b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1151ccc922e195087ce596ac58a09a113e58011b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1151ccc922e195087ce596ac58a09a113e58011b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1151ccc922e195087ce596ac58a09a113e58011b/comments", "author": null, "committer": null, "parents": [{"sha": "e83fd9d7f5fde2a813400775357a30cdbdfd8cdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e83fd9d7f5fde2a813400775357a30cdbdfd8cdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e83fd9d7f5fde2a813400775357a30cdbdfd8cdc"}], "stats": {"total": 53, "additions": 52, "deletions": 1}, "files": [{"sha": "cf5b4ece3043d684c216849f45b91fd57ef7d6f9", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1151ccc922e195087ce596ac58a09a113e58011b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1151ccc922e195087ce596ac58a09a113e58011b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1151ccc922e195087ce596ac58a09a113e58011b", "patch": "@@ -1,3 +1,9 @@\n+2008-08-17  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/41062\n+\t* trans-decl.c (gfc_trans_use_stmts):  Keep going through use\n+\tlist if symbol is not use associated.\n+\n 2009-08-17  Daniel Kraft  <d@domob.eu>\n \n \tPR fortran/37425"}, {"sha": "7fb571f5e57a780e7b6e07153d41ee4e10cb73c2", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1151ccc922e195087ce596ac58a09a113e58011b/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1151ccc922e195087ce596ac58a09a113e58011b/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=1151ccc922e195087ce596ac58a09a113e58011b", "patch": "@@ -3426,7 +3426,13 @@ gfc_trans_use_stmts (gfc_namespace * ns)\n \t      st = gfc_find_symtree (ns->sym_root,\n \t\t\t\t     rent->local_name[0]\n \t\t\t\t     ? rent->local_name : rent->use_name);\n-\t      gcc_assert (st && st->n.sym->attr.use_assoc);\n+\t      gcc_assert (st);\n+\n+\t      /* Sometimes, generic interfaces wind up being over-ruled by a\n+\t\t local symbol (see PR41062).  */\n+\t      if (!st->n.sym->attr.use_assoc)\n+\t\tcontinue;\n+\n \t      if (st->n.sym->backend_decl\n \t\t  && DECL_P (st->n.sym->backend_decl)\n \t\t  && st->n.sym->module"}, {"sha": "8a05c848f808871f0dae829430170a91453cb204", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1151ccc922e195087ce596ac58a09a113e58011b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1151ccc922e195087ce596ac58a09a113e58011b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1151ccc922e195087ce596ac58a09a113e58011b", "patch": "@@ -1,3 +1,8 @@\n+2008-08-17  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/41062\n+\t* gfortran.dg/use_only_4.f90: New test.\n+\n 2009-08-17  Daniel Kraft  <d@domob.eu>\n \n \tPR fortran/37425"}, {"sha": "a37db45ef777a47cc549bf88b54650c06818fd6d", "filename": "gcc/testsuite/gfortran.dg/use_only_4.f90", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1151ccc922e195087ce596ac58a09a113e58011b/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_only_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1151ccc922e195087ce596ac58a09a113e58011b/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_only_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_only_4.f90?ref=1151ccc922e195087ce596ac58a09a113e58011b", "patch": "@@ -0,0 +1,34 @@\n+! { dg-do compile }\n+! Test the fix for PR41062, in which an ICE would ensue because\n+! of confusion between the two 'one's in the creation of module\n+! debug info.\n+!\n+! Reported by Norman S. Clerman <clerman@fuse.net>\n+! Reduced testcase by Tobias Burnus <burnus@gcc.gnu.org>\n+!\n+module m1\n+   interface one  ! GENERIC \"one\"\n+     module procedure one1\n+   end interface\n+contains\n+  subroutine one1()\n+    call abort\n+  end subroutine one1\n+end module m1\n+\n+module m2\n+use m1, only : one  ! USE generic \"one\"\n+contains\n+  subroutine two()\n+    call one()  ! Call internal \"one\"\n+  contains\n+    subroutine one() ! Internal \"one\"\n+      print *, \"m2\"\n+    end subroutine one\n+  end subroutine two\n+end module m2\n+\n+  use m2\n+  call two\n+end\n+! { dg-final { cleanup-modules \"m1 m2\" } }"}]}