{"sha": "083fcbcbc37951b2a9b880edad2d9c805dd00cfc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDgzZmNiY2JjMzc5NTFiMmE5Yjg4MGVkYWQyZDljODA1ZGQwMGNmYw==", "commit": {"author": {"name": "Graham Reed", "email": "greed@pobox.com", "date": "2011-01-24T19:53:35Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-01-24T19:53:35Z"}, "message": "re PR libstdc++/47387 (AIX ctype 'mask' override not working)\n\n2011-01-24  Graham Reed  <greed@pobox.com>\n\n\tPR libstdc++/47387\n\t* config/os/aix/ctype_inline.h (ctype<char>::is): Use _M_table if\n\tprovided.\n\nFrom-SVN: r169178", "tree": {"sha": "53f6247a5d852442dff6f8e9bbd220dff668d057", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53f6247a5d852442dff6f8e9bbd220dff668d057"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/083fcbcbc37951b2a9b880edad2d9c805dd00cfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/083fcbcbc37951b2a9b880edad2d9c805dd00cfc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/083fcbcbc37951b2a9b880edad2d9c805dd00cfc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/083fcbcbc37951b2a9b880edad2d9c805dd00cfc/comments", "author": null, "committer": null, "parents": [{"sha": "9841210f0480a36d06d5f9305cfda71402ed1be3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9841210f0480a36d06d5f9305cfda71402ed1be3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9841210f0480a36d06d5f9305cfda71402ed1be3"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "f6a742211be150d5151fc729c20bef1520b1ace9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/083fcbcbc37951b2a9b880edad2d9c805dd00cfc/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/083fcbcbc37951b2a9b880edad2d9c805dd00cfc/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=083fcbcbc37951b2a9b880edad2d9c805dd00cfc", "patch": "@@ -1,15 +1,21 @@\n+2011-01-24  Graham Reed  <greed@pobox.com>\n+\n+\tPR libstdc++/47387\n+\t* config/os/aix/ctype_inline.h (ctype<char>::is): Use _M_table if\n+\tprovided.\n+\n 2011-01-24  Johannes Singler  <singler@kit.edu>\n \n         PR libstdc++/47433\n         * include/parallel/losertree.h\n         (_LoserTree<>::__delete_min_insert):\n-        Do not qualify swap with std:: for value type, \n+        Do not qualify swap with std:: for value type,\n         but include a using directive instead.\n         (_LoserTreeUnguarded<>::__delete_min_insert): Likewise.\n         * include/parallel/balanced_quicksort.h (__qsb_divide):\n         Use std::iter_swap instead of std::swap.\n         (__qsb_local_sort_with_helping): Likewise.\n-        * include/parallel/partition.h (__parallel_partition): \n+        * include/parallel/partition.h (__parallel_partition):\n         Likewise. (__parallel_nth_element): Likewise.\n \n 2011-01-24  Johannes Singler  <singler@kit.edu>"}, {"sha": "8c201a5771a804f43a31353ef7eadcd24dc79dce", "filename": "libstdc++-v3/config/os/aix/ctype_inline.h", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/083fcbcbc37951b2a9b880edad2d9c805dd00cfc/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/083fcbcbc37951b2a9b880edad2d9c805dd00cfc/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Faix%2Fctype_inline.h?ref=083fcbcbc37951b2a9b880edad2d9c805dd00cfc", "patch": "@@ -1,6 +1,6 @@\n // Locale support -*- C++ -*-\n \n-// Copyright (C) 2000, 2009, 2010 Free Software Foundation, Inc.\n+// Copyright (C) 2000, 2009, 2010, 2011 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -39,14 +39,23 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   bool\n   ctype<char>::\n   is(mask __m, char __c) const\n-  { return __OBJ_DATA(__lc_ctype)->mask[__c] & __m; }\n+  { \n+    if(_M_table)\n+      return _M_table[static_cast<unsigned char>(__c)] & __m;\n+    else\n+      return __OBJ_DATA(__lc_ctype)->mask[__c] & __m;\n+  }\n \n   const char*\n   ctype<char>::\n   is(const char* __low, const char* __high, mask* __vec) const\n   {\n-    while (__low < __high)\n-      *__vec++ = __OBJ_DATA(__lc_ctype)->mask[*__low++];\n+    if(_M_table)\n+      while (__low < __high)\n+\t*__vec++ = _M_table[static_cast<unsigned char>(*__low++)];\n+    else\n+      while (__low < __high)\n+        *__vec++ = __OBJ_DATA(__lc_ctype)->mask[*__low++];\n     return __high;\n   }\n "}]}