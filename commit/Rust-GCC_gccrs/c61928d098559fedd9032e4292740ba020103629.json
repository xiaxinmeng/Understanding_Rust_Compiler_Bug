{"sha": "c61928d098559fedd9032e4292740ba020103629", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzYxOTI4ZDA5ODU1OWZlZGQ5MDMyZTQyOTI3NDBiYTAyMDEwMzYyOQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2015-03-23T09:16:49Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2015-03-23T09:16:49Z"}, "message": "[expmed][trivial] Fix comment about multiplying by T-1 and adding T.\n\n\t* expmed.c (synth_mult): Fix comment about multiplying by T-1 and\n\tadding T or multiplying by T+1 and subracting T.\n\nFrom-SVN: r221588", "tree": {"sha": "f57bc2c45645d0de0c1523653d3b9232bd871245", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f57bc2c45645d0de0c1523653d3b9232bd871245"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c61928d098559fedd9032e4292740ba020103629", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c61928d098559fedd9032e4292740ba020103629", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c61928d098559fedd9032e4292740ba020103629", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c61928d098559fedd9032e4292740ba020103629/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fb136e35c77e0374112189e3283c9ecf1e83abb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb136e35c77e0374112189e3283c9ecf1e83abb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb136e35c77e0374112189e3283c9ecf1e83abb1"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "d269b76c464e1b0b862a9859d6c612afb485a23d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c61928d098559fedd9032e4292740ba020103629/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c61928d098559fedd9032e4292740ba020103629/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c61928d098559fedd9032e4292740ba020103629", "patch": "@@ -1,3 +1,8 @@\n+2015-03-23  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* expmed.c (synth_mult): Fix comment about multiplying by T-1 and\n+\tadding T or multiplying by T+1 and subracting T.\n+\n 2015-03-22  Jeff Law  <law@redhat.com>\n \n \tPR rtl-optimization/64317"}, {"sha": "e0b2619034d15e5388db47affa07c7ea92380873", "filename": "gcc/expmed.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c61928d098559fedd9032e4292740ba020103629/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c61928d098559fedd9032e4292740ba020103629/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=c61928d098559fedd9032e4292740ba020103629", "patch": "@@ -2611,7 +2611,7 @@ synth_mult (struct algorithm *alg_out, unsigned HOST_WIDE_INT t,\n \t\t Thus we prefer addition in that case.  */\n \t      && t != 3))\n \t{\n-\t  /* T ends with ...111.  Multiply by (T + 1) and subtract 1.  */\n+\t  /* T ends with ...111.  Multiply by (T + 1) and subtract T.  */\n \n \t  op_cost = add_cost (speed, mode);\n \t  new_limit.cost = best_cost.cost - op_cost;\n@@ -2630,7 +2630,7 @@ synth_mult (struct algorithm *alg_out, unsigned HOST_WIDE_INT t,\n \t}\n       else\n \t{\n-\t  /* T ends with ...01 or ...011.  Multiply by (T - 1) and add 1.  */\n+\t  /* T ends with ...01 or ...011.  Multiply by (T - 1) and add T.  */\n \n \t  op_cost = add_cost (speed, mode);\n \t  new_limit.cost = best_cost.cost - op_cost;"}]}