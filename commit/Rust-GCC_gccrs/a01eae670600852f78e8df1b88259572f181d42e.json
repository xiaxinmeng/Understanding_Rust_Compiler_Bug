{"sha": "a01eae670600852f78e8df1b88259572f181d42e", "node_id": "C_kwDOANBUbNoAKGEwMWVhZTY3MDYwMDg1MmY3OGU4ZGYxYjg4MjU5NTcyZjE4MWQ0MmU", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-10-19T16:49:03Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-10-19T16:49:03Z"}, "message": "testsuite: Fix up c2x-enum-1.c for 32-bit arches [PR107311]\n\nOn Wed, Oct 19, 2022 at 02:57:59PM +0000, Joseph Myers wrote:\n> I think the type checked for e5a should be conditional on __LONG_MAX__ >\n> __INT_MAX__; everything else there should be OK regardless.\n\nThis patch does that.\n\n2022-10-19  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c/107311\n\t* gcc.dg/c2x-enum-1.c (enum e5): Expect e5a type inside of\n\tenum to be int rather than long if long isn't wider than int.", "tree": {"sha": "27eb1e2729ce40f4a9c266cf0e698ab71eaae023", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27eb1e2729ce40f4a9c266cf0e698ab71eaae023"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a01eae670600852f78e8df1b88259572f181d42e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a01eae670600852f78e8df1b88259572f181d42e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a01eae670600852f78e8df1b88259572f181d42e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a01eae670600852f78e8df1b88259572f181d42e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69a233610f6b27cd4283561569d8ce0f35044dc4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69a233610f6b27cd4283561569d8ce0f35044dc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69a233610f6b27cd4283561569d8ce0f35044dc4"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "984a4e70d37e396168dda4940bcdecf2146975c8", "filename": "gcc/testsuite/gcc.dg/c2x-enum-1.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a01eae670600852f78e8df1b88259572f181d42e/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-enum-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a01eae670600852f78e8df1b88259572f181d42e/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-enum-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc2x-enum-1.c?ref=a01eae670600852f78e8df1b88259572f181d42e", "patch": "@@ -82,7 +82,12 @@ enum e5 { e5a = __LONG_MAX__,\n \t  e5b, e5c, e5d = ((typeof (e5b)) -1) < 0,\n \t  e5e = (unsigned long) -1,\n \t  e5f, e5g = ((typeof (e5e)) -1) > 0,\n-\t  TYPE_CHECK (e5a, long), TYPE_CHECK (e5e, unsigned long) };\n+#if __LONG_MAX__ > __INT_MAX__\n+\t  TYPE_CHECK (e5a, long),\n+#else\n+\t  TYPE_CHECK (e5a, int),\n+#endif\n+\t  TYPE_CHECK (e5e, unsigned long) };\n extern enum e5 e5v;\n extern typeof (e5a) e5v;\n extern typeof (e5b) e5v;"}]}