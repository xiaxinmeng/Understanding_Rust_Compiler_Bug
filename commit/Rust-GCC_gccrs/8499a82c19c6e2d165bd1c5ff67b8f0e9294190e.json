{"sha": "8499a82c19c6e2d165bd1c5ff67b8f0e9294190e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ5OWE4MmMxOWM2ZTJkMTY1YmQxYzVmZjY3YjhmMGU5Mjk0MTkwZQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-06-18T18:02:24Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-06-18T18:02:24Z"}, "message": "LWG 3050 Fix cv-qualification of convertibility constraints\n\n\tLWG 3050 Fix cv-qualification of convertibility constraints\n\t* include/std/chrono (duration, operator*, operator/, operator%): Use\n\tconst-qualified type as source type in is_convertible constraints.\n\t* testsuite/20_util/duration/arithmetic/dr3050.cc: New.\n\t* testsuite/20_util/duration/cons/dr3050.cc: New.\n\t* testsuite/20_util/duration/literals/range.cc: Rename to...\n\t* testsuite/20_util/duration/literals/range_neg.cc: Here. Adjust\n\tdg-error lineno.\n\nFrom-SVN: r261708", "tree": {"sha": "469adfc925404f36adff82cb2b1386c70877263f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/469adfc925404f36adff82cb2b1386c70877263f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8499a82c19c6e2d165bd1c5ff67b8f0e9294190e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8499a82c19c6e2d165bd1c5ff67b8f0e9294190e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8499a82c19c6e2d165bd1c5ff67b8f0e9294190e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8499a82c19c6e2d165bd1c5ff67b8f0e9294190e/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f9eae9fd88ea2de19b7660b03fa6d49217ab211", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f9eae9fd88ea2de19b7660b03fa6d49217ab211", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f9eae9fd88ea2de19b7660b03fa6d49217ab211"}], "stats": {"total": 47, "additions": 43, "deletions": 4}, "files": [{"sha": "bdf20606bc9a3ad9a0c3a0ac3843f40b7deb5926", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8499a82c19c6e2d165bd1c5ff67b8f0e9294190e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8499a82c19c6e2d165bd1c5ff67b8f0e9294190e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8499a82c19c6e2d165bd1c5ff67b8f0e9294190e", "patch": "@@ -1,3 +1,14 @@\n+2018-06-18  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tLWG 3050 Fix cv-qualification of convertibility constraints\n+\t* include/std/chrono (duration, operator*, operator/, operator%): Use\n+\tconst-qualified type as source type in is_convertible constraints.\n+\t* testsuite/20_util/duration/arithmetic/dr3050.cc: New.\n+\t* testsuite/20_util/duration/cons/dr3050.cc: New.\n+\t* testsuite/20_util/duration/literals/range.cc: Rename to...\n+\t* testsuite/20_util/duration/literals/range_neg.cc: Here. Adjust\n+\tdg-error lineno.\n+\n 2018-06-18  Maya Rashish  <coypu@sdf.org>\n \n \t* crossconfig.m4: Handle OpenBSD just like NetBSD."}, {"sha": "d6d9dcae411e11cd5dbe0e524170185f6febcaee", "filename": "libstdc++-v3/include/std/chrono", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8499a82c19c6e2d165bd1c5ff67b8f0e9294190e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fchrono", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8499a82c19c6e2d165bd1c5ff67b8f0e9294190e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fchrono", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fchrono?ref=8499a82c19c6e2d165bd1c5ff67b8f0e9294190e", "patch": "@@ -325,8 +325,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n \tduration(const duration&) = default;\n \n+\t// _GLIBCXX_RESOLVE_LIB_DEFECTS\n+\t// 3050. Conversion specification problem in chrono::duration\n \ttemplate<typename _Rep2, typename = _Require<\n-\t\t is_convertible<_Rep2, rep>,\n+\t\t is_convertible<const _Rep2&, rep>,\n \t\t __or_<__is_float<rep>, __not_<__is_float<_Rep2>>>>>\n \t  constexpr explicit duration(const _Rep2& __rep)\n \t  : __r(static_cast<rep>(__rep)) { }\n@@ -471,10 +473,12 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n     // SFINAE helper to obtain common_type<_Rep1, _Rep2> only if _Rep2\n     // is implicitly convertible to it.\n+    // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+    // 3050. Conversion specification problem in chrono::duration constructor\n     template<typename _Rep1, typename _Rep2,\n \t     typename _CRep = typename common_type<_Rep1, _Rep2>::type>\n-      using __common_rep_t\n-\t= typename enable_if<is_convertible<_Rep2, _CRep>::value, _CRep>::type;\n+      using __common_rep_t = typename\n+\tenable_if<is_convertible<const _Rep2&, _CRep>::value, _CRep>::type;\n \n     template<typename _Rep1, typename _Period, typename _Rep2>\n       constexpr duration<__common_rep_t<_Rep1, _Rep2>, _Period>"}, {"sha": "a4f57a38c30245e22becf5936068585369dca06e", "filename": "libstdc++-v3/testsuite/20_util/duration/cons/dr3050.cc", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8499a82c19c6e2d165bd1c5ff67b8f0e9294190e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fcons%2Fdr3050.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8499a82c19c6e2d165bd1c5ff67b8f0e9294190e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fcons%2Fdr3050.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fcons%2Fdr3050.cc?ref=8499a82c19c6e2d165bd1c5ff67b8f0e9294190e", "patch": "@@ -0,0 +1,24 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do compile { target c++11 } }\n+\n+#include <chrono>\n+\n+struct X { operator int64_t() /* not const */; };\n+static_assert(!std::is_constructible<std::chrono::seconds, X>::value,\n+\t      \"LWG 3050\");"}, {"sha": "d1be74493c9df81a9615ba82484adb7e7bbbdec9", "filename": "libstdc++-v3/testsuite/20_util/duration/literals/range_neg.cc", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8499a82c19c6e2d165bd1c5ff67b8f0e9294190e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fliterals%2Frange_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8499a82c19c6e2d165bd1c5ff67b8f0e9294190e/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fliterals%2Frange_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Fliterals%2Frange_neg.cc?ref=8499a82c19c6e2d165bd1c5ff67b8f0e9294190e", "patch": "@@ -26,6 +26,6 @@ test01()\n \n   // std::numeric_limits<int64_t>::max() == 9223372036854775807;\n   auto h = 9223372036854775808h;\n-  // { dg-error \"cannot be represented\" \"\" { target *-*-* } 894 }\n+  // { dg-error \"cannot be represented\" \"\" { target *-*-* } 898 }\n }\n // { dg-prune-output \"in constexpr expansion\" } // needed for -O0", "previous_filename": "libstdc++-v3/testsuite/20_util/duration/literals/range.cc"}]}