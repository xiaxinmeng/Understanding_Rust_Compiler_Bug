{"sha": "174ebf656274b6119c13a730294241fd5c0efb55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc0ZWJmNjU2Mjc0YjYxMTljMTNhNzMwMjk0MjQxZmQ1YzBlZmI1NQ==", "commit": {"author": {"name": "Ville Voutilainen", "email": "ville.voutilainen@gmail.com", "date": "2014-05-21T17:23:07Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-05-21T17:23:07Z"}, "message": "re PR c++/61133 (g++ doesn't implement DR1760)\n\n\tPR c++/61133\n\t* lambda.c (build_capture_proxy, add_capture): Treat normal\n\tcaptures and init-captures identically.\n\nFrom-SVN: r210720", "tree": {"sha": "b28d4b0e943b01ef3b9e2d54ae03b3227bb78251", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b28d4b0e943b01ef3b9e2d54ae03b3227bb78251"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/174ebf656274b6119c13a730294241fd5c0efb55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/174ebf656274b6119c13a730294241fd5c0efb55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/174ebf656274b6119c13a730294241fd5c0efb55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/174ebf656274b6119c13a730294241fd5c0efb55/comments", "author": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2acb1027924f91e900964b529719efcdc1aacfac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2acb1027924f91e900964b529719efcdc1aacfac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2acb1027924f91e900964b529719efcdc1aacfac"}], "stats": {"total": 59, "additions": 40, "deletions": 19}, "files": [{"sha": "d90e6e3bf9059728094ab9c30f129ba1d81af72b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/174ebf656274b6119c13a730294241fd5c0efb55/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/174ebf656274b6119c13a730294241fd5c0efb55/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=174ebf656274b6119c13a730294241fd5c0efb55", "patch": "@@ -1,3 +1,9 @@\n+2014-05-21  Ville Voutilainen  <ville.voutilainen@gmail.com>\n+\n+\tPR c++/61133\n+\t* lambda.c (build_capture_proxy, add_capture): Treat normal\n+\tcaptures and init-captures identically.\n+\n 2014-05-21  Mark Wielaard  <mjw@redhat.com>\n \n \tPR debug/16063"}, {"sha": "bb6014b23d04d10338e7d0a6fd151d5fae774695", "filename": "gcc/cp/lambda.c", "status": "modified", "additions": 6, "deletions": 15, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/174ebf656274b6119c13a730294241fd5c0efb55/gcc%2Fcp%2Flambda.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/174ebf656274b6119c13a730294241fd5c0efb55/gcc%2Fcp%2Flambda.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flambda.c?ref=174ebf656274b6119c13a730294241fd5c0efb55", "patch": "@@ -367,10 +367,7 @@ build_capture_proxy (tree member)\n     object = TREE_OPERAND (object, 0);\n \n   /* Remove the __ inserted by add_capture.  */\n-  if (DECL_NORMAL_CAPTURE_P (member))\n-    name = get_identifier (IDENTIFIER_POINTER (DECL_NAME (member)) + 2);\n-  else\n-    name = DECL_NAME (member);\n+  name = get_identifier (IDENTIFIER_POINTER (DECL_NAME (member)) + 2);\n \n   type = lambda_proxy_type (object);\n \n@@ -500,17 +497,11 @@ add_capture (tree lambda, tree id, tree orig_init, bool by_reference_p,\n      won't find the field with name lookup.  We can't just leave the name\n      unset because template instantiation uses the name to find\n      instantiated fields.  */\n-  if (!explicit_init_p)\n-    {\n-      buf = (char *) alloca (IDENTIFIER_LENGTH (id) + 3);\n-      buf[1] = buf[0] = '_';\n-      memcpy (buf + 2, IDENTIFIER_POINTER (id),\n-\t      IDENTIFIER_LENGTH (id) + 1);\n-      name = get_identifier (buf);\n-    }\n-  else\n-    /* But captures with explicit initializers are named.  */\n-    name = id;\n+  buf = (char *) alloca (IDENTIFIER_LENGTH (id) + 3);\n+  buf[1] = buf[0] = '_';\n+  memcpy (buf + 2, IDENTIFIER_POINTER (id),\n+\t  IDENTIFIER_LENGTH (id) + 1);\n+  name = get_identifier (buf);\n \n   /* If TREE_TYPE isn't set, we're still in the introducer, so check\n      for duplicates.  */"}, {"sha": "e2530004f5cf91d8526636ef10354b5abf752347", "filename": "gcc/testsuite/g++.dg/cpp1y/lambda-init6.C", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/174ebf656274b6119c13a730294241fd5c0efb55/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-init6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/174ebf656274b6119c13a730294241fd5c0efb55/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-init6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-init6.C?ref=174ebf656274b6119c13a730294241fd5c0efb55", "patch": "@@ -1,12 +1,10 @@\n-// Test that simple captures are not named in the closure type, but\n-// initialized captures are named.\n+// Test that captures are not named in the closure type.\n // { dg-do compile { target c++1y } }\n \n int main()\n {\n   int i;\n   auto lam = [i,j=42]{};\n-  lam.j;\n-  lam.j.foo;\t\t\t// { dg-error \"::j\" }\n+  lam.j;                        // { dg-error \"no member\" }\n   lam.i;\t\t\t// { dg-error \"no member\" }\n }"}, {"sha": "3a61b74eaedbd7bc20f236b6b4e7710b5ff443a4", "filename": "gcc/testsuite/g++.dg/cpp1y/lambda-init8.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/174ebf656274b6119c13a730294241fd5c0efb55/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-init8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/174ebf656274b6119c13a730294241fd5c0efb55/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-init8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-init8.C?ref=174ebf656274b6119c13a730294241fd5c0efb55", "patch": "@@ -0,0 +1,26 @@\n+// DR1760: \"no additional copy and destruction is performed\"\n+// { dg-do run { target c++1y } }\n+\n+#include <cassert>\n+\n+int copy_count = 0;\n+int dtor_count = 0;\n+\n+struct X\n+{\n+  X() = default;\n+  X(const X&) { ++copy_count; }\n+  ~X() { ++dtor_count; }\n+};\n+\n+int main()\n+{\n+  {\n+    X x;\n+    auto z = [y = x](){};\n+    X x2;\n+    auto z2 = [x2](){};\n+    assert(copy_count == 2);\n+  }\n+  assert(dtor_count == 4);\n+}"}]}