{"sha": "4965be0b3388557643114c1ec20bd206f0bda1df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk2NWJlMGIzMzg4NTU3NjQzMTE0YzFlYzIwYmQyMDZmMGJkYTFkZg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-09-12T10:36:30Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-09-12T10:37:47Z"}, "message": "Accept absolute address clause for array of UNC nominal subtype\n\nThis changes the compiler to accept again absolute address clause for\naliased array of unconstrained nominal subtype, instead of erroring\nout in this case.\n\ngcc/ada/ChangeLog:\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Variable>: Only give\n\ta warning for the overlay of an aliased array with an unconstrained\n\tnominal subtype if the address is absolute.", "tree": {"sha": "6a7a512bb146d15d24acc1c21c82bb69d89cfb4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a7a512bb146d15d24acc1c21c82bb69d89cfb4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4965be0b3388557643114c1ec20bd206f0bda1df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4965be0b3388557643114c1ec20bd206f0bda1df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4965be0b3388557643114c1ec20bd206f0bda1df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4965be0b3388557643114c1ec20bd206f0bda1df/comments", "author": null, "committer": null, "parents": [{"sha": "ac35c090821f92f41e83d1688eaf2e2b4946afb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac35c090821f92f41e83d1688eaf2e2b4946afb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac35c090821f92f41e83d1688eaf2e2b4946afb1"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "d19f5aac81f9826ccac9f44888e780e760f06743", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4965be0b3388557643114c1ec20bd206f0bda1df/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4965be0b3388557643114c1ec20bd206f0bda1df/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=4965be0b3388557643114c1ec20bd206f0bda1df", "patch": "@@ -1245,6 +1245,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n \t\tif (TREE_CODE (gnu_address) == POINTER_PLUS_EXPR\n \t\t    && TREE_OPERAND (gnu_address, 1) == off)\n \t\t  gnu_address = TREE_OPERAND (gnu_address, 0);\n+\n \t\t/* This is the pattern built for an overaligned object.  */\n \t\telse if (TREE_CODE (gnu_address) == POINTER_PLUS_EXPR\n \t\t\t && TREE_CODE (TREE_OPERAND (gnu_address, 1))\n@@ -1255,6 +1256,18 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n \t\t    = build2 (POINTER_PLUS_EXPR, gnu_type,\n \t\t\t      TREE_OPERAND (gnu_address, 0),\n \t\t\t      TREE_OPERAND (TREE_OPERAND (gnu_address, 1), 0));\n+\n+\t\t/* We make an exception for an absolute address but we warn\n+\t\t   that there is a descriptor at the start of the object.  */\n+\t\telse if (TREE_CODE (gnu_address) == INTEGER_CST)\n+\t\t  {\n+\t\t    post_error_ne (\"??aliased object& with unconstrained \"\n+\t\t\t\t   \"array nominal subtype\", gnat_clause,\n+\t\t\t\t   gnat_entity);\n+\t\t    post_error (\"\\\\starts with a descriptor whose size is \"\n+\t\t\t\t\"given by ''Descriptor_Size\", gnat_clause);\n+\t\t  }\n+\n \t\telse\n \t\t  {\n \t\t    post_error_ne (\"aliased object& with unconstrained array \""}]}