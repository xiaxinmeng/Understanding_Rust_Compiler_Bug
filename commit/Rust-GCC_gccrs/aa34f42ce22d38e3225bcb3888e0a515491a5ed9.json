{"sha": "aa34f42ce22d38e3225bcb3888e0a515491a5ed9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWEzNGY0MmNlMjJkMzhlMzIyNWJjYjM4ODhlMGE1MTU0OTFhNWVkOQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-05-09T10:31:14Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-05-09T10:31:14Z"}, "message": "gcc.c (store_arg): Revert last change.\n\n2010-05-09  Richard Guenther  <rguenther@suse.de>\n\n\t* gcc.c (store_arg): Revert last change.\n\nFrom-SVN: r159197", "tree": {"sha": "f372cc850ff2b43ed87b8b92cdac738beb63fe47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f372cc850ff2b43ed87b8b92cdac738beb63fe47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa34f42ce22d38e3225bcb3888e0a515491a5ed9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa34f42ce22d38e3225bcb3888e0a515491a5ed9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa34f42ce22d38e3225bcb3888e0a515491a5ed9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa34f42ce22d38e3225bcb3888e0a515491a5ed9/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "619d3256fae02924727625ec591d7230fde57377", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/619d3256fae02924727625ec591d7230fde57377", "html_url": "https://github.com/Rust-GCC/gccrs/commit/619d3256fae02924727625ec591d7230fde57377"}], "stats": {"total": 40, "additions": 22, "deletions": 18}, "files": [{"sha": "c8d93ffc42c136a3d33f941a4a7a4efb87d36a69", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa34f42ce22d38e3225bcb3888e0a515491a5ed9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa34f42ce22d38e3225bcb3888e0a515491a5ed9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa34f42ce22d38e3225bcb3888e0a515491a5ed9", "patch": "@@ -1,3 +1,7 @@\n+2010-05-09  Richard Guenther  <rguenther@suse.de>\n+\n+\t* gcc.c (store_arg): Revert last change.\n+\n 2010-05-08  Sandra Loosemore  <sandra@codesourcery.com>\n \n \tPR middle-end/28685"}, {"sha": "a0083e1d0f66be9292bf89759b822f5603abe5a8", "filename": "gcc/gcc.c", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa34f42ce22d38e3225bcb3888e0a515491a5ed9/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa34f42ce22d38e3225bcb3888e0a515491a5ed9/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=aa34f42ce22d38e3225bcb3888e0a515491a5ed9", "patch": "@@ -2045,23 +2045,6 @@ static int signal_count;\n /* Name with which this program was invoked.  */\n \n static const char *programname;\n-\n-/* This is the common prefix we use to make temp file names.\n-   It is chosen once for each run of this program.\n-   It is substituted into a spec by %g or %j.\n-   Thus, all temp file names contain this prefix.\n-   In practice, all temp file names start with this prefix.\n-\n-   This prefix comes from the envvar TMPDIR if it is defined;\n-   otherwise, from the P_tmpdir macro if that is defined;\n-   otherwise, in /usr/tmp or /tmp;\n-   or finally the current directory if all else fails.  */\n-\n-static const char *temp_filename;\n-\n-/* Length of the prefix.  */\n-\n-static int temp_filename_length;\n \f\n /* Allocate the argument vector.  */\n \n@@ -2099,7 +2082,7 @@ store_arg (const char *arg, int delete_always, int delete_failure)\n   if (strcmp (arg, \"-o\") == 0)\n     have_o_argbuf_index = argbuf_index;\n   if (delete_always || delete_failure)\n-    record_temp_file (temp_filename, delete_always, delete_failure);\n+    record_temp_file (arg, delete_always, delete_failure);\n }\n \f\n /* Load specs from a file name named FILENAME, replacing occurrences of\n@@ -2402,6 +2385,23 @@ read_specs (const char *filename, int main_p)\n /* Record the names of temporary files we tell compilers to write,\n    and delete them at the end of the run.  */\n \n+/* This is the common prefix we use to make temp file names.\n+   It is chosen once for each run of this program.\n+   It is substituted into a spec by %g or %j.\n+   Thus, all temp file names contain this prefix.\n+   In practice, all temp file names start with this prefix.\n+\n+   This prefix comes from the envvar TMPDIR if it is defined;\n+   otherwise, from the P_tmpdir macro if that is defined;\n+   otherwise, in /usr/tmp or /tmp;\n+   or finally the current directory if all else fails.  */\n+\n+static const char *temp_filename;\n+\n+/* Length of the prefix.  */\n+\n+static int temp_filename_length;\n+\n /* Define the list of temporary files to delete.  */\n \n struct temp_file"}]}