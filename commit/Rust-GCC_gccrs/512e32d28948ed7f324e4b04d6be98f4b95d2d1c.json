{"sha": "512e32d28948ed7f324e4b04d6be98f4b95d2d1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTEyZTMyZDI4OTQ4ZWQ3ZjMyNGU0YjA0ZDZiZTk4ZjRiOTVkMmQxYw==", "commit": {"author": {"name": "Anthony Green", "email": "green@redhat.com", "date": "2002-03-15T18:01:38Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2002-03-15T18:01:38Z"}, "message": "Address mingw32 issues.\n\nFrom-SVN: r50816", "tree": {"sha": "cae80110f1ab5a233f1626c6d560dd950b6abe6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cae80110f1ab5a233f1626c6d560dd950b6abe6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/512e32d28948ed7f324e4b04d6be98f4b95d2d1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/512e32d28948ed7f324e4b04d6be98f4b95d2d1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/512e32d28948ed7f324e4b04d6be98f4b95d2d1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/512e32d28948ed7f324e4b04d6be98f4b95d2d1c/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8d39b4476f88ffff3738648595c6b42e2c917bd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d39b4476f88ffff3738648595c6b42e2c917bd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d39b4476f88ffff3738648595c6b42e2c917bd9"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "bf564944e84fc00964abd5460a054367da0f7e4c", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/512e32d28948ed7f324e4b04d6be98f4b95d2d1c/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/512e32d28948ed7f324e4b04d6be98f4b95d2d1c/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=512e32d28948ed7f324e4b04d6be98f4b95d2d1c", "patch": "@@ -1,3 +1,10 @@\n+2002-03-15  Anthony Green  <green@redhat.com>\n+\n+\t* misc.c (GC_init_inner): Initialize GC_write_cs before use.\n+\t* configure.in: Disable use of getenv for win32 targets (some of\n+\twhich have broken implementations).\n+\t* configure: Rebuilt.\n+\n 2002-03-12  Adam Megacz  <adam@xwt.org>\n \n         * dyn_load.c: Renamed GC_win32s to GC_no_win32_dlls."}, {"sha": "edfd4f116a9957c65025d1c97dbf066c514eb0e9", "filename": "boehm-gc/configure", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/512e32d28948ed7f324e4b04d6be98f4b95d2d1c/boehm-gc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/512e32d28948ed7f324e4b04d6be98f4b95d2d1c/boehm-gc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfigure?ref=512e32d28948ed7f324e4b04d6be98f4b95d2d1c", "patch": "@@ -2725,6 +2725,10 @@ EOF\n  win32)\n     cat >> confdefs.h <<\\EOF\n #define GC_WIN32_THREADS 1\n+EOF\n+\n+    cat >> confdefs.h <<\\EOF\n+#define NO_GETENV 1\n EOF\n \n     ;;\n@@ -2738,15 +2742,15 @@ esac\n \n \n echo $ac_n \"checking for dlopen in -ldl\"\"... $ac_c\" 1>&6\n-echo \"configure:2742: checking for dlopen in -ldl\" >&5\n+echo \"configure:2746: checking for dlopen in -ldl\" >&5\n ac_lib_var=`echo dl'_'dlopen | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-ldl  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 2750 \"configure\"\n+#line 2754 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -2757,7 +2761,7 @@ int main() {\n dlopen()\n ; return 0; }\n EOF\n-if { (eval echo configure:2761: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:2765: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else"}, {"sha": "b3a785186c7f4ad66b1241bd67ef776d78d2e5f2", "filename": "boehm-gc/configure.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/512e32d28948ed7f324e4b04d6be98f4b95d2d1c/boehm-gc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/512e32d28948ed7f324e4b04d6be98f4b95d2d1c/boehm-gc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfigure.in?ref=512e32d28948ed7f324e4b04d6be98f4b95d2d1c", "patch": "@@ -109,6 +109,7 @@ case \"$THREADS\" in\n     ;;\n  win32)\n     AC_DEFINE(GC_WIN32_THREADS)\n+    AC_DEFINE(NO_GETENV)\n     ;;\n  decosf1 | irix | mach | os2 | solaris | dce | vxworks)\n     AC_MSG_ERROR(thread package $THREADS not yet supported)"}, {"sha": "50955f458cc4df92db194cc86e09a1849cfe9713", "filename": "boehm-gc/misc.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/512e32d28948ed7f324e4b04d6be98f4b95d2d1c/boehm-gc%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/512e32d28948ed7f324e4b04d6be98f4b95d2d1c/boehm-gc%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fmisc.c?ref=512e32d28948ed7f324e4b04d6be98f4b95d2d1c", "patch": "@@ -499,6 +499,10 @@ void GC_init_inner()\n #   ifdef PRINTSTATS\n       GC_print_stats = 1;\n #   endif\n+#   if defined(MSWIN32) || defined(MSWINCE)\n+\tInitializeCriticalSection(&GC_write_cs);\n+#   endif\n+\n     if (0 != GETENV(\"GC_PRINT_STATS\")) {\n       GC_print_stats = 1;\n     } \n@@ -536,9 +540,6 @@ void GC_init_inner()\n     if (ALIGNMENT > GC_DS_TAGS && EXTRA_BYTES != 0) {\n       GC_obj_kinds[NORMAL].ok_descriptor = ((word)(-ALIGNMENT) | GC_DS_LENGTH);\n     }\n-#   if defined(MSWIN32) || defined(MSWINCE)\n-\tInitializeCriticalSection(&GC_write_cs);\n-#   endif\n     GC_setpagesize();\n     GC_exclude_static_roots(beginGC_arrays, endGC_arrays);\n     GC_exclude_static_roots(beginGC_obj_kinds, endGC_obj_kinds);"}]}