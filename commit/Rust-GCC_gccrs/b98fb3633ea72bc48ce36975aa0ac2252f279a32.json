{"sha": "b98fb3633ea72bc48ce36975aa0ac2252f279a32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk4ZmIzNjMzZWE3MmJjNDhjZTM2OTc1YWEwYWMyMjUyZjI3OWEzMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-02-21T21:49:05Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-02-21T21:49:05Z"}, "message": "re PR c++/60186 ([c++11] ICE with invalid value in constexpr array initializer)\n\n\tPR c++/60186\n\t* typeck2.c (massage_init_elt): Call fold_non_dependent_expr_sfinae.\n\nFrom-SVN: r208027", "tree": {"sha": "6f2eb0ca711791b4e619bc58b59726114cd5778e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f2eb0ca711791b4e619bc58b59726114cd5778e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b98fb3633ea72bc48ce36975aa0ac2252f279a32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b98fb3633ea72bc48ce36975aa0ac2252f279a32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b98fb3633ea72bc48ce36975aa0ac2252f279a32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b98fb3633ea72bc48ce36975aa0ac2252f279a32/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3e9e24ab25fe2765881b888cc148a3a13740d4fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e9e24ab25fe2765881b888cc148a3a13740d4fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e9e24ab25fe2765881b888cc148a3a13740d4fb"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "8e4a2a0d9d1e892cc0b510b5c25f3d2cc30bdcdc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b98fb3633ea72bc48ce36975aa0ac2252f279a32/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b98fb3633ea72bc48ce36975aa0ac2252f279a32/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b98fb3633ea72bc48ce36975aa0ac2252f279a32", "patch": "@@ -1,5 +1,8 @@\n 2014-02-21  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/60186\n+\t* typeck2.c (massage_init_elt): Call fold_non_dependent_expr_sfinae.\n+\n \tPR c++/60187\n \t* parser.c (cp_parser_enum_specifier): Call\n \tcheck_for_bare_parameter_packs."}, {"sha": "8877286546e6eea043a45baaba374a6e439a812d", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b98fb3633ea72bc48ce36975aa0ac2252f279a32/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b98fb3633ea72bc48ce36975aa0ac2252f279a32/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=b98fb3633ea72bc48ce36975aa0ac2252f279a32", "patch": "@@ -1131,7 +1131,10 @@ massage_init_elt (tree type, tree init, tsubst_flags_t complain)\n     init = TARGET_EXPR_INITIAL (init);\n   /* When we defer constant folding within a statement, we may want to\n      defer this folding as well.  */\n-  init = maybe_constant_init (init);\n+  tree t = fold_non_dependent_expr_sfinae (init, complain);\n+  t = maybe_constant_value (t);\n+  if (TREE_CONSTANT (t))\n+    init = t;\n   return init;\n }\n "}, {"sha": "6fea82f515c6bd3df070f564f31610fafc938e8f", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-initlist7.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b98fb3633ea72bc48ce36975aa0ac2252f279a32/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-initlist7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b98fb3633ea72bc48ce36975aa0ac2252f279a32/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-initlist7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-initlist7.C?ref=b98fb3633ea72bc48ce36975aa0ac2252f279a32", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/60186\n+// { dg-require-effective-target c++11 }\n+\n+template<typename> void foo(int i)\n+{\n+  constexpr int a[] = { i };\t// { dg-error \"\" }\n+}"}]}