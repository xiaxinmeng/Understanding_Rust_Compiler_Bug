{"sha": "3c60ae5ab5a37eb374787aebaca0575f6bb76cb8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M2MGFlNWFiNWEzN2ViMzc0Nzg3YWViYWNhMDU3NWY2YmI3NmNiOA==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@integrable-solutions.net", "date": "2005-04-16T00:40:08Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2005-04-16T00:40:08Z"}, "message": "asprintf.c: Include config.h.\n\n        * asprintf.c: Include config.h.\n        * basename.c: Likewise.\n        * fdmatch.c: Likewise.\n        * hex.c: Likewise.\n        * lbasename.c: Likewise.\n        * spaces.c: Likewise.\n        * xatexit.c:Likewise.\n        * configure.ac:  Do check declarations for basename, ffs, asprintf\n        and vasprintf for real.\n        * configure: Regenerate.\n\nFrom-SVN: r98218", "tree": {"sha": "bbfe27041b455972c399668b84994b1ebafccd5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbfe27041b455972c399668b84994b1ebafccd5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c60ae5ab5a37eb374787aebaca0575f6bb76cb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c60ae5ab5a37eb374787aebaca0575f6bb76cb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c60ae5ab5a37eb374787aebaca0575f6bb76cb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c60ae5ab5a37eb374787aebaca0575f6bb76cb8/comments", "author": {"login": "cxx-undef", "id": 5528103, "node_id": "MDQ6VXNlcjU1MjgxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5528103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cxx-undef", "html_url": "https://github.com/cxx-undef", "followers_url": "https://api.github.com/users/cxx-undef/followers", "following_url": "https://api.github.com/users/cxx-undef/following{/other_user}", "gists_url": "https://api.github.com/users/cxx-undef/gists{/gist_id}", "starred_url": "https://api.github.com/users/cxx-undef/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cxx-undef/subscriptions", "organizations_url": "https://api.github.com/users/cxx-undef/orgs", "repos_url": "https://api.github.com/users/cxx-undef/repos", "events_url": "https://api.github.com/users/cxx-undef/events{/privacy}", "received_events_url": "https://api.github.com/users/cxx-undef/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1a5293c01a21a99fc3c0a026af5d95254b3febb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a5293c01a21a99fc3c0a026af5d95254b3febb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a5293c01a21a99fc3c0a026af5d95254b3febb3"}], "stats": {"total": 320, "additions": 320, "deletions": 0}, "files": [{"sha": "72b421b54dd162b6369f7a903c83407449fa0cde", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c60ae5ab5a37eb374787aebaca0575f6bb76cb8/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c60ae5ab5a37eb374787aebaca0575f6bb76cb8/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=3c60ae5ab5a37eb374787aebaca0575f6bb76cb8", "patch": "@@ -1,3 +1,16 @@\n+2005-04-13  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n+\n+\t* asprintf.c: Include config.h.\n+\t* basename.c: Likewise.\n+\t* fdmatch.c: Likewise.\n+\t* hex.c: Likewise.\n+\t* lbasename.c: Likewise.\n+\t* spaces.c: Likewise.\n+\t* xatexit.c:Likewise.\n+\t* configure.ac:  Do check declarations for basename, ffs, asprintf \n+\tand vasprintf for real.\n+\t* configure: Regenerate.\n+\n 2005-04-13  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n \t* argv.c (dupargv): Allocate space of argv[argc], not "}, {"sha": "bfa3896d089e08df8274f2852c5d8441b0c079f8", "filename": "libiberty/argv.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c60ae5ab5a37eb374787aebaca0575f6bb76cb8/libiberty%2Fargv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c60ae5ab5a37eb374787aebaca0575f6bb76cb8/libiberty%2Fargv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fargv.c?ref=3c60ae5ab5a37eb374787aebaca0575f6bb76cb8", "patch": "@@ -22,6 +22,9 @@ Boston, MA 02111-1307, USA.  */\n /*  Create and destroy argument vectors.  An argument vector is simply an\n     array of string pointers, terminated by a NULL pointer. */\n \n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n #include \"ansidecl.h\"\n #include \"libiberty.h\"\n "}, {"sha": "adcdcc2840435e70fb99663605fc4695621ff468", "filename": "libiberty/asprintf.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c60ae5ab5a37eb374787aebaca0575f6bb76cb8/libiberty%2Fasprintf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c60ae5ab5a37eb374787aebaca0575f6bb76cb8/libiberty%2Fasprintf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fasprintf.c?ref=3c60ae5ab5a37eb374787aebaca0575f6bb76cb8", "patch": "@@ -19,6 +19,9 @@ License along with libiberty; see the file COPYING.LIB.  If\n not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n #include \"ansidecl.h\"\n #include \"libiberty.h\"\n "}, {"sha": "0f2c069f0ccf5a7d91e4913548e068c247e12efb", "filename": "libiberty/basename.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c60ae5ab5a37eb374787aebaca0575f6bb76cb8/libiberty%2Fbasename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c60ae5ab5a37eb374787aebaca0575f6bb76cb8/libiberty%2Fbasename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fbasename.c?ref=3c60ae5ab5a37eb374787aebaca0575f6bb76cb8", "patch": "@@ -12,6 +12,9 @@ Behavior is undefined if the pathname ends in a directory separator.\n \n */\n \n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n #include \"ansidecl.h\"\n #include \"libiberty.h\"\n #include \"safe-ctype.h\""}, {"sha": "d9c5425642568901254392d24f9edfaf066c3c17", "filename": "libiberty/configure", "status": "modified", "additions": 282, "deletions": 0, "changes": 282, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c60ae5ab5a37eb374787aebaca0575f6bb76cb8/libiberty%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c60ae5ab5a37eb374787aebaca0575f6bb76cb8/libiberty%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure?ref=3c60ae5ab5a37eb374787aebaca0575f6bb76cb8", "patch": "@@ -6915,6 +6915,288 @@ _ACEOF\n fi\n done\n \n+  echo \"$as_me:$LINENO: checking whether basename is declared\" >&5\n+echo $ECHO_N \"checking whether basename is declared... $ECHO_C\" >&6\n+if test \"${ac_cv_have_decl_basename+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+$ac_includes_default\n+int\n+main ()\n+{\n+#ifndef basename\n+  char *p = (char *) basename;\n+#endif\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_have_decl_basename=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_cv_have_decl_basename=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_have_decl_basename\" >&5\n+echo \"${ECHO_T}$ac_cv_have_decl_basename\" >&6\n+if test $ac_cv_have_decl_basename = yes; then\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DECL_BASENAME 1\n+_ACEOF\n+\n+\n+else\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_DECL_BASENAME 0\n+_ACEOF\n+\n+\n+fi\n+echo \"$as_me:$LINENO: checking whether ffs is declared\" >&5\n+echo $ECHO_N \"checking whether ffs is declared... $ECHO_C\" >&6\n+if test \"${ac_cv_have_decl_ffs+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+$ac_includes_default\n+int\n+main ()\n+{\n+#ifndef ffs\n+  char *p = (char *) ffs;\n+#endif\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_have_decl_ffs=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_cv_have_decl_ffs=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_have_decl_ffs\" >&5\n+echo \"${ECHO_T}$ac_cv_have_decl_ffs\" >&6\n+if test $ac_cv_have_decl_ffs = yes; then\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DECL_FFS 1\n+_ACEOF\n+\n+\n+else\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_DECL_FFS 0\n+_ACEOF\n+\n+\n+fi\n+echo \"$as_me:$LINENO: checking whether asprintf is declared\" >&5\n+echo $ECHO_N \"checking whether asprintf is declared... $ECHO_C\" >&6\n+if test \"${ac_cv_have_decl_asprintf+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+$ac_includes_default\n+int\n+main ()\n+{\n+#ifndef asprintf\n+  char *p = (char *) asprintf;\n+#endif\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_have_decl_asprintf=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_cv_have_decl_asprintf=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_have_decl_asprintf\" >&5\n+echo \"${ECHO_T}$ac_cv_have_decl_asprintf\" >&6\n+if test $ac_cv_have_decl_asprintf = yes; then\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DECL_ASPRINTF 1\n+_ACEOF\n+\n+\n+else\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_DECL_ASPRINTF 0\n+_ACEOF\n+\n+\n+fi\n+echo \"$as_me:$LINENO: checking whether vasprintf is declared\" >&5\n+echo $ECHO_N \"checking whether vasprintf is declared... $ECHO_C\" >&6\n+if test \"${ac_cv_have_decl_vasprintf+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+$ac_includes_default\n+int\n+main ()\n+{\n+#ifndef vasprintf\n+  char *p = (char *) vasprintf;\n+#endif\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_have_decl_vasprintf=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_cv_have_decl_vasprintf=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_have_decl_vasprintf\" >&5\n+echo \"${ECHO_T}$ac_cv_have_decl_vasprintf\" >&6\n+if test $ac_cv_have_decl_vasprintf = yes; then\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_DECL_VASPRINTF 1\n+_ACEOF\n+\n+\n+else\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_DECL_VASPRINTF 0\n+_ACEOF\n+\n+\n+fi\n+\n+\n   echo \"$as_me:$LINENO: checking whether canonicalize_file_name must be declared\" >&5\n echo $ECHO_N \"checking whether canonicalize_file_name must be declared... $ECHO_C\" >&6\n if test \"${libiberty_cv_decl_needed_canonicalize_file_name+set}\" = set; then"}, {"sha": "92362d0b8b6ad0a74b9e9310dec68f52e32a53f6", "filename": "libiberty/configure.ac", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c60ae5ab5a37eb374787aebaca0575f6bb76cb8/libiberty%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c60ae5ab5a37eb374787aebaca0575f6bb76cb8/libiberty%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fconfigure.ac?ref=3c60ae5ab5a37eb374787aebaca0575f6bb76cb8", "patch": "@@ -518,6 +518,7 @@ if test -z \"${setobjs}\"; then\n     [AC_MSG_RESULT([no])])\n \n   AC_CHECK_FUNCS($checkfuncs)\n+  AC_CHECK_DECLS([basename, ffs, asprintf, vasprintf])\n   libiberty_NEED_DECLARATION(canonicalize_file_name)\n fi\n "}, {"sha": "84df7845bbdb78c260d28f09ea0bec86fcb67e29", "filename": "libiberty/fdmatch.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c60ae5ab5a37eb374787aebaca0575f6bb76cb8/libiberty%2Ffdmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c60ae5ab5a37eb374787aebaca0575f6bb76cb8/libiberty%2Ffdmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ffdmatch.c?ref=3c60ae5ab5a37eb374787aebaca0575f6bb76cb8", "patch": "@@ -41,6 +41,9 @@ BUGS\n \n */\n \n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n #include \"ansidecl.h\"\n #include \"libiberty.h\"\n #include <sys/types.h>"}, {"sha": "5738762a7b2793e43cfdc217991048ea47eeefc1", "filename": "libiberty/hex.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c60ae5ab5a37eb374787aebaca0575f6bb76cb8/libiberty%2Fhex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c60ae5ab5a37eb374787aebaca0575f6bb76cb8/libiberty%2Fhex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fhex.c?ref=3c60ae5ab5a37eb374787aebaca0575f6bb76cb8", "patch": "@@ -18,6 +18,9 @@ not, write to the Free Software Foundation, Inc., 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n #include <stdio.h>  /* for EOF */\n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n #include \"libiberty.h\"\n #include \"safe-ctype.h\" /* for HOST_CHARSET_ASCII */\n "}, {"sha": "45858c84de90172f06e0c0e202f726119ed23b23", "filename": "libiberty/lbasename.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c60ae5ab5a37eb374787aebaca0575f6bb76cb8/libiberty%2Flbasename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c60ae5ab5a37eb374787aebaca0575f6bb76cb8/libiberty%2Flbasename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Flbasename.c?ref=3c60ae5ab5a37eb374787aebaca0575f6bb76cb8", "patch": "@@ -37,6 +37,9 @@ and a path ending in @code{/} returns the empty string after it.\n \n */\n \n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n #include \"ansidecl.h\"\n #include \"libiberty.h\"\n #include \"safe-ctype.h\""}, {"sha": "8666abe2026fd79e7439f286f3ee39a3631dedd0", "filename": "libiberty/spaces.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c60ae5ab5a37eb374787aebaca0575f6bb76cb8/libiberty%2Fspaces.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c60ae5ab5a37eb374787aebaca0575f6bb76cb8/libiberty%2Fspaces.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fspaces.c?ref=3c60ae5ab5a37eb374787aebaca0575f6bb76cb8", "patch": "@@ -29,6 +29,9 @@ valid until at least the next call.\n \n */\n \n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n #include \"ansidecl.h\"\n #include \"libiberty.h\"\n "}, {"sha": "6fdad9ed806a0a336f75c7869bb19a23bc6521d3", "filename": "libiberty/xatexit.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c60ae5ab5a37eb374787aebaca0575f6bb76cb8/libiberty%2Fxatexit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c60ae5ab5a37eb374787aebaca0575f6bb76cb8/libiberty%2Fxatexit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fxatexit.c?ref=3c60ae5ab5a37eb374787aebaca0575f6bb76cb8", "patch": "@@ -22,6 +22,9 @@ failure.  If you use @code{xatexit} to register functions, you must use\n /* Adapted from newlib/libc/stdlib/{,at}exit.[ch].\n    If you use xatexit, you must call xexit instead of exit.  */\n \n+#ifdef HAVE_CONFIG_H\n+#include \"config.h\"\n+#endif\n #include \"ansidecl.h\"\n #include \"libiberty.h\"\n "}]}