{"sha": "e335b3ee7e702baa1379c06bcf98ad2b997859a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTMzNWIzZWU3ZTcwMmJhYTEzNzljMDZiY2Y5OGFkMmI5OTc4NTlhMg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-03-15T12:53:30Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-03-15T12:53:30Z"}, "message": "(OBJC_VERSION): Increment version as recent changes have made old compiled code incompatible with current ObjC runtime.\n\n(OBJC_VERSION): Increment version as recent changes have made old\ncompiled code incompatible with current ObjC runtime.\n(build_objc_symtab_template): Make sure defs in objc_symtab is a NULL\nterminated array.\n(init_def_list): Attach statics to end of def list.\n(init_objc_symtab): Take statics list into account.\n(init_module_descriptor, build_module_descriptor): Don't add statics.\n(generate_static_references): Indicate that statics are used.\n(finish_objc): Process statics in the beginning.\n\nFrom-SVN: r13708", "tree": {"sha": "ee41e7d8dca22693396300bb8e55876bc3764273", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee41e7d8dca22693396300bb8e55876bc3764273"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e335b3ee7e702baa1379c06bcf98ad2b997859a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e335b3ee7e702baa1379c06bcf98ad2b997859a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e335b3ee7e702baa1379c06bcf98ad2b997859a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e335b3ee7e702baa1379c06bcf98ad2b997859a2/comments", "author": null, "committer": null, "parents": [{"sha": "7dee9e6a7185189c7a5ce14905f4aa1102f9640f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dee9e6a7185189c7a5ce14905f4aa1102f9640f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dee9e6a7185189c7a5ce14905f4aa1102f9640f"}], "stats": {"total": 67, "additions": 30, "deletions": 37}, "files": [{"sha": "4e05b3203a75e2e980b801addca20ef6a9faa38e", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 30, "deletions": 37, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e335b3ee7e702baa1379c06bcf98ad2b997859a2/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e335b3ee7e702baa1379c06bcf98ad2b997859a2/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=e335b3ee7e702baa1379c06bcf98ad2b997859a2", "patch": "@@ -127,16 +127,16 @@ static struct obstack util_obstack;\n char *util_firstobj;\n \n /* List of classes with list of their static instances.  */\n-static tree objc_static_instances;\n+static tree objc_static_instances = NULL_TREE;\n \n /* The declaration of the array administrating the static instances.  */\n-static tree static_instances_decl;\n+static tree static_instances_decl = NULL_TREE;\n \n /* for encode_method_def */\n #include \"rtl.h\"\n #include \"c-parse.h\"\n \n-#define OBJC_VERSION\t(flag_next_runtime ? 5 : 7)\n+#define OBJC_VERSION\t(flag_next_runtime ? 5 : 8)\n #define PROTOCOL_VERSION 2\n \n #define OBJC_ENCODE_INLINE_DEFS \t0\n@@ -1367,9 +1367,12 @@ build_objc_symtab_template ()\n \n   /* void *defs[cls_def_cnt + cat_def_cnt]; */\n \n-  index = build_index_type (build_int_2 (imp_count + cat_count - 1,\n-\t\t\t\t\t imp_count == 0 && cat_count == 0\n-\t\t\t\t\t ? -1 : 0));\n+  if (!flag_next_runtime)\n+    index = build_index_type (build_int_2 (imp_count + cat_count, 0));\n+  else\n+    index = build_index_type (build_int_2 (imp_count + cat_count - 1,\n+\t\t\t\t\t   imp_count == 0 && cat_count == 0\n+\t\t\t\t\t   ? -1 : 0));\n   field_decl = create_builtin_decl (FIELD_DECL,\n \t\t\t\t    build_array_type (ptr_type_node, index),\n \t\t\t\t    \"defs\");\n@@ -1408,6 +1411,19 @@ init_def_list (type)\n \t  }\n       }\n \n+  if (!flag_next_runtime)\n+    {\n+      /* statics = { ..., _OBJC_STATIC_INSTANCES, ... }  */\n+      tree expr;\n+\n+      if (static_instances_decl)\n+\texpr = build_unary_op (ADDR_EXPR, static_instances_decl, 0);\n+      else\n+\texpr = build_int_2 (0, 0);\n+\n+      initlist = tree_cons (NULL_TREE, expr, initlist);\n+    }\n+\n   return build_constructor (type, nreverse (initlist));\n }\n \n@@ -1443,8 +1459,9 @@ init_objc_symtab (type)\n \n   /* cls_def = { ..., { &Foo, &Bar, ...}, ... } */\n \n-  if (imp_count || cat_count)\n+  if (imp_count || cat_count || static_instances_decl)\n     {\n+\n       tree field = TYPE_FIELDS (type);\n       field = TREE_CHAIN (TREE_CHAIN (TREE_CHAIN (TREE_CHAIN (field))));\n \n@@ -1533,17 +1550,6 @@ init_module_descriptor (type)\n   expr = add_objc_string (get_identifier (input_filename), class_names);\n   initlist = tree_cons (NULL_TREE, expr, initlist);\n \n-\n-  if (!flag_next_runtime)\n-    {\n-      /* statics = { ..., _OBJC_STATIC_INSTANCES, ... }  */\n-      if (static_instances_decl)\n-\texpr = build_unary_op (ADDR_EXPR, static_instances_decl, 0);\n-      else\n-\texpr = build_int_2 (0, 0);\n-      initlist = tree_cons (NULL_TREE, expr, initlist);\n-    }\n-\n   /* symtab = { ..., _OBJC_SYMBOLS, ... } */\n \n   if (UOBJC_SYMBOLS_decl)\n@@ -1595,22 +1601,6 @@ build_module_descriptor ()\n     = grokfield (input_filename, lineno, field_decl, decl_specs, NULL_TREE);\n   chainon (field_decl_chain, field_decl);\n \n-\n-  if (!flag_next_runtime)\n-    {\n-      /* void *statics */\n-\n-      decl_specs = get_identifier (UTAG_STATICS);\n-      decl_specs\n-\t= build_tree_list (NULL_TREE, xref_tag (RECORD_TYPE, decl_specs));\n-      field_decl\n-\t= build1 (INDIRECT_REF, NULL_TREE, get_identifier (\"statics\"));\n-      field_decl = grokfield (input_filename, lineno, field_decl,\n-\t\t\t      decl_specs, NULL_TREE);\n-      chainon (field_decl_chain, field_decl);\n-    }\n-\n-\n   /* struct objc_symtab *symtab; */\n \n   decl_specs = get_identifier (UTAG_SYMTAB);\n@@ -1817,6 +1807,7 @@ generate_static_references ()\n \t\t\t\t\t  ridpointers[(int) RID_STATIC]));\n   static_instances_decl\n     = start_decl (expr_decl, decl_spec, 1, NULL_TREE, NULL_TREE);\n+  TREE_USED (static_instances_decl) = 1;\n   DECL_CONTEXT (static_instances_decl) = 0;\n   DECL_ARTIFICIAL (static_instances_decl) = 1;\n   end_temporary_allocation ();\n@@ -7923,6 +7914,11 @@ finish_objc ()\n   OBJC_PROLOGUE;\n #endif\n \n+  /* Process the static instances here because initialization of objc_symtab\n+     dependens on them. */\n+  if (objc_static_instances)\n+    generate_static_references ();\n+\n   if (implementation_context || class_names_chain\n       || meth_var_names_chain || meth_var_types_chain || sel_ref_chain)\n     generate_objc_symtab_decl ();\n@@ -7957,9 +7953,6 @@ finish_objc ()\n   if (protocol_chain)\n     generate_protocols ();\n \n-  if (objc_static_instances)\n-    generate_static_references ();\n-\n   if (implementation_context || class_names_chain || objc_static_instances\n       || meth_var_names_chain || meth_var_types_chain || sel_ref_chain)\n     {"}]}