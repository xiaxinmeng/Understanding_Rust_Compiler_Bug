{"sha": "5e4aec98743d2122b089a926a74549780d3aee53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWU0YWVjOTg3NDNkMjEyMmIwODlhOTI2YTc0NTQ5NzgwZDNhZWU1Mw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2012-07-24T22:25:18Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2012-07-24T22:25:18Z"}, "message": "Purge FIXUNS_TRUNC_LIKE_FIX_TRUNC\n\nFrom-SVN: r189826", "tree": {"sha": "234bcc9dca69c1a00033bcd6ee200229f06782e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/234bcc9dca69c1a00033bcd6ee200229f06782e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e4aec98743d2122b089a926a74549780d3aee53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e4aec98743d2122b089a926a74549780d3aee53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e4aec98743d2122b089a926a74549780d3aee53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e4aec98743d2122b089a926a74549780d3aee53/comments", "author": null, "committer": null, "parents": [{"sha": "d8dd6fae2b39da0324e27b7b2c608058ac89bbab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8dd6fae2b39da0324e27b7b2c608058ac89bbab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8dd6fae2b39da0324e27b7b2c608058ac89bbab"}], "stats": {"total": 74, "additions": 35, "deletions": 39}, "files": [{"sha": "afc2b69d7e11b250a29f0b671c645d7b22057ca7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4aec98743d2122b089a926a74549780d3aee53/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4aec98743d2122b089a926a74549780d3aee53/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5e4aec98743d2122b089a926a74549780d3aee53", "patch": "@@ -1,3 +1,19 @@\n+2012-07-24  Richard Henderson  <rth@redhat.com>\n+\n+\t* system.h (FIXUNS_TRUNC_LIKE_FIX_TRUNC): Poison.\n+\t* config/cris/cris.h (FIXUNS_TRUNC_LIKE_FIX_TRUNC): Remove.\n+\t* config/h8300/h8300.h (FIXUNS_TRUNC_LIKE_FIX_TRUNC): Remove.\n+\t* config/mn10300/mn10300.h (FIXUNS_TRUNC_LIKE_FIX_TRUNC): Remove.\n+\t* config/rs6000/rs6000.h (FIXUNS_TRUNC_LIKE_FIX_TRUNC): Remove\n+\tcomment reference.\n+\t* config/v850/v850.h (FIXUNS_TRUNC_LIKE_FIX_TRUNC): Remove.\n+\t* config/v850/v850.md (fixuns_truncsfsi2, fixuns_truncdfsi2): New.\n+\t(fix_truncsfsi2, fix_truncdfsi2): Avoid double FIX.\n+\t* config/vax/vax.h (FIXUNS_TRUNC_LIKE_FIX_TRUNC): Remove.\n+\t* config/vax/vax.md (fixuns_trunc<VAXfp><VAXint>): New.\n+\t* doc/tm.texi.in (FIXUNS_TRUNC_LIKE_FIX_TRUNC): Remove.\n+\t* doc/tm.texi: Rebuild.\n+\n 2012-07-24  Richard Henderson  <rth@redhat.com>\n \n \t* optabs.def: New file."}, {"sha": "646ba90b4b96f7a35dbc303bda5a867ec88c43d3", "filename": "gcc/config/cris/cris.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4aec98743d2122b089a926a74549780d3aee53/gcc%2Fconfig%2Fcris%2Fcris.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4aec98743d2122b089a926a74549780d3aee53/gcc%2Fconfig%2Fcris%2Fcris.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.h?ref=5e4aec98743d2122b089a926a74549780d3aee53", "patch": "@@ -1055,8 +1055,6 @@ enum cris_pic_symbol_type\n /* FIXME: Investigate CASE_VECTOR_SHORTEN_MODE to make sure HImode is not\n    used when broken-.word could possibly fail (plus testcase).  */\n \n-#define FIXUNS_TRUNC_LIKE_FIX_TRUNC\n-\n /* This is the number of bytes that can be moved in one\n    reasonably fast instruction sequence.  For CRIS, this is two\n    instructions: mem => reg, reg => mem.  */"}, {"sha": "61e0dd2f84614c02a6b7075e53cde70e6b9f389e", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4aec98743d2122b089a926a74549780d3aee53/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4aec98743d2122b089a926a74549780d3aee53/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=5e4aec98743d2122b089a926a74549780d3aee53", "patch": "@@ -566,10 +566,6 @@ struct cum_arg\n    are unsigned.  */\n #define DEFAULT_SIGNED_CHAR 0\n \n-/* This flag, if defined, says the same insns that convert to a signed fixnum\n-   also convert validly to an unsigned one.  */\n-#define FIXUNS_TRUNC_LIKE_FIX_TRUNC\n-\n /* Max number of bytes we can move from memory to memory\n    in one reasonably fast instruction.  */\n #define MOVE_MAX\t(TARGET_H8300H || TARGET_H8300S ? 4 : 2)"}, {"sha": "eb4f2f9f42fcf8410f035dc91f10d9550337bc92", "filename": "gcc/config/mn10300/mn10300.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4aec98743d2122b089a926a74549780d3aee53/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4aec98743d2122b089a926a74549780d3aee53/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.h?ref=5e4aec98743d2122b089a926a74549780d3aee53", "patch": "@@ -703,10 +703,6 @@ do {\t\t\t\t\t\t\t\t\t     \\\n \n #define LOAD_EXTEND_OP(MODE) ZERO_EXTEND\n \n-/* This flag, if defined, says the same insns that convert to a signed fixnum\n-   also convert validly to an unsigned one.  */\n-#define FIXUNS_TRUNC_LIKE_FIX_TRUNC\n-\n /* Max number of bytes we can move from memory to memory\n    in one reasonably fast instruction.  */\n #define MOVE_MAX\t4"}, {"sha": "2c8a7dda1f6a1c52dc23ce09bb7b19d4e8a2dd8e", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4aec98743d2122b089a926a74549780d3aee53/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4aec98743d2122b089a926a74549780d3aee53/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=5e4aec98743d2122b089a926a74549780d3aee53", "patch": "@@ -1821,11 +1821,6 @@ do {\t\t\t\t\t\t\t\t\t     \\\n /* Define this as 1 if `char' should by default be signed; else as 0.  */\n #define DEFAULT_SIGNED_CHAR 0\n \n-/* This flag, if defined, says the same insns that convert to a signed fixnum\n-   also convert validly to an unsigned one.  */\n-\n-/* #define FIXUNS_TRUNC_LIKE_FIX_TRUNC */\n-\n /* An integer expression for the size in bits of the largest integer machine\n    mode that should actually be used.  */\n "}, {"sha": "10ddd7b13a6f5f5c47ca57014454c3e8640cb10b", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4aec98743d2122b089a926a74549780d3aee53/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4aec98743d2122b089a926a74549780d3aee53/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=5e4aec98743d2122b089a926a74549780d3aee53", "patch": "@@ -812,10 +812,6 @@ typedef enum\n /* Byte and short loads sign extend the value to a word.  */\n #define LOAD_EXTEND_OP(MODE) SIGN_EXTEND\n \n-/* This flag, if defined, says the same insns that convert to a signed fixnum\n-   also convert validly to an unsigned one.  */\n-#define FIXUNS_TRUNC_LIKE_FIX_TRUNC\n-\n /* Max number of bytes we can move from memory to memory\n    in one reasonably fast instruction.  */\n #define MOVE_MAX\t4"}, {"sha": "f479ff6322e8da54fdec9ce3dcf5532ab412d41d", "filename": "gcc/config/v850/v850.md", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4aec98743d2122b089a926a74549780d3aee53/gcc%2Fconfig%2Fv850%2Fv850.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4aec98743d2122b089a926a74549780d3aee53/gcc%2Fconfig%2Fv850%2Fv850.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.md?ref=5e4aec98743d2122b089a926a74549780d3aee53", "patch": "@@ -1938,7 +1938,7 @@\n ;; float -> int\n (define_insn \"fix_truncsfsi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(fix:SI (fix:SF (match_operand:SF 1 \"register_operand\" \"r\"))))]\n+\t(fix:SI (match_operand:SF 1 \"register_operand\" \"r\")))]\n   \"TARGET_V850E2V3\"\n   \"trncf.sw %1,%0\"\n   [(set_attr \"length\" \"4\")\n@@ -1947,13 +1947,23 @@\n \n (define_insn \"fix_truncdfsi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(fix:SI (fix:DF (match_operand:DF 1 \"even_reg_operand\" \"r\"))))]\n+\t(fix:SI (match_operand:DF 1 \"even_reg_operand\" \"r\")))]\n   \"TARGET_V850E2V3\"\n   \"trncf.dw %1,%0\"\n   [(set_attr \"length\" \"4\")\n    (set_attr \"cc\" \"none_0hit\")\n    (set_attr \"type\" \"fpu\")])\n \n+(define_expand \"fixuns_truncsfsi2\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(fix:SI (match_operand:SF 1 \"register_operand\" \"r\")))]\n+  \"TARGET_V850E2V3\")\n+\n+(define_expand \"fixuns_truncdfsi2\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(fix:SI (match_operand:DF 1 \"even_reg_operand\" \"r\")))]\n+  \"TARGET_V850E2V3\")\n+\n ;; int -> float\n (define_insn \"floatsisf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=r\")"}, {"sha": "9d23fd058f5f55c6f16837f4fab8c4f29d45f7ce", "filename": "gcc/config/vax/vax.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4aec98743d2122b089a926a74549780d3aee53/gcc%2Fconfig%2Fvax%2Fvax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4aec98743d2122b089a926a74549780d3aee53/gcc%2Fconfig%2Fvax%2Fvax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.h?ref=5e4aec98743d2122b089a926a74549780d3aee53", "patch": "@@ -455,10 +455,6 @@ enum reg_class { NO_REGS, ALL_REGS, LIM_REG_CLASSES };\n /* Define this as 1 if `char' should by default be signed; else as 0.  */\n #define DEFAULT_SIGNED_CHAR 1\n \n-/* This flag, if defined, says the same insns that convert to a signed fixnum\n-   also convert validly to an unsigned one.  */\n-#define FIXUNS_TRUNC_LIKE_FIX_TRUNC\n-\n /* Max number of bytes we can move from memory to memory\n    in one reasonably fast instruction.  */\n #define MOVE_MAX 8"}, {"sha": "afc31293d6dcdaa614dddb39658afa5f6a8e0223", "filename": "gcc/config/vax/vax.md", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4aec98743d2122b089a926a74549780d3aee53/gcc%2Fconfig%2Fvax%2Fvax.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4aec98743d2122b089a926a74549780d3aee53/gcc%2Fconfig%2Fvax%2Fvax.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.md?ref=5e4aec98743d2122b089a926a74549780d3aee53", "patch": "@@ -318,9 +318,14 @@\n \n (define_insn \"fix_trunc<VAXfp:mode><VAXint:mode>2\"\n   [(set (match_operand:VAXint 0 \"nonimmediate_operand\" \"=g\")\n-\t(fix:VAXint (fix:VAXfp (match_operand:VAXfp 1 \"general_operand\" \"gF\"))))]\n+\t(fix:VAXint (match_operand:VAXfp 1 \"general_operand\" \"gF\")))]\n   \"\"\n   \"cvt<VAXfp:fsfx><VAXint:isfx> %1,%0\")\n+\n+(define_expand \"fixuns_trunc<VAXfp:mode><VAXint:mode>2\"\n+  [(set (match_operand:VAXint 0 \"nonimmediate_operand\" \"\")\n+\t(fix:VAXint (match_operand:VAXfp 1 \"general_operand\")))]\n+  \"\")\n \f\n ;;- All kinds of add instructions.\n "}, {"sha": "ff743c8f19c0640dc13145444e089405b4913c87", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4aec98743d2122b089a926a74549780d3aee53/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4aec98743d2122b089a926a74549780d3aee53/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=5e4aec98743d2122b089a926a74549780d3aee53", "patch": "@@ -10339,12 +10339,6 @@ Define this macro if loading short immediate values into registers sign\n extends.\n @end defmac\n \n-@defmac FIXUNS_TRUNC_LIKE_FIX_TRUNC\n-Define this macro if the same instructions that convert a floating\n-point number to a signed fixed point number also convert validly to an\n-unsigned one.\n-@end defmac\n-\n @deftypefn {Target Hook} {unsigned int} TARGET_MIN_DIVISIONS_FOR_RECIP_MUL (enum machine_mode @var{mode})\n When @option{-ffast-math} is in effect, GCC tries to optimize\n divisions by the same divisor, by turning them into multiplications by"}, {"sha": "85d9d1de0571af73e73fddce296a26e64bf7f662", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4aec98743d2122b089a926a74549780d3aee53/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4aec98743d2122b089a926a74549780d3aee53/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=5e4aec98743d2122b089a926a74549780d3aee53", "patch": "@@ -10205,12 +10205,6 @@ Define this macro if loading short immediate values into registers sign\n extends.\n @end defmac\n \n-@defmac FIXUNS_TRUNC_LIKE_FIX_TRUNC\n-Define this macro if the same instructions that convert a floating\n-point number to a signed fixed point number also convert validly to an\n-unsigned one.\n-@end defmac\n-\n @hook TARGET_MIN_DIVISIONS_FOR_RECIP_MUL\n When @option{-ffast-math} is in effect, GCC tries to optimize\n divisions by the same divisor, by turning them into multiplications by"}, {"sha": "e3a72887e06c21cab040cd41f880f7986da97aae", "filename": "gcc/system.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4aec98743d2122b089a926a74549780d3aee53/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4aec98743d2122b089a926a74549780d3aee53/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=5e4aec98743d2122b089a926a74549780d3aee53", "patch": "@@ -888,7 +888,7 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n \tIDENT_ASM_OP UNALIGNED_SHORT_ASM_OP UNALIGNED_INT_ASM_OP\t   \\\n \tUNALIGNED_LONG_ASM_OP UNALIGNED_DOUBLE_INT_ASM_OP\t\t   \\\n \tUSE_COMMON_FOR_ONE_ONLY IFCVT_EXTRA_FIELDS IFCVT_INIT_EXTRA_FIELDS \\\n-\tCASE_USE_BIT_TESTS\n+\tCASE_USE_BIT_TESTS FIXUNS_TRUNC_LIKE_FIX_TRUNC\n \n /* Hooks that are no longer used.  */\n  #pragma GCC poison LANG_HOOKS_FUNCTION_MARK LANG_HOOKS_FUNCTION_FREE\t\\"}]}