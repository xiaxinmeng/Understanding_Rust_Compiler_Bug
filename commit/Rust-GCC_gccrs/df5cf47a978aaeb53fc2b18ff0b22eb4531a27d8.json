{"sha": "df5cf47a978aaeb53fc2b18ff0b22eb4531a27d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGY1Y2Y0N2E5NzhhYWViNTNmYzJiMThmZjBiMjJlYjQ1MzFhMjdkOA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2020-07-31T16:27:33Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2020-07-31T16:27:33Z"}, "message": "Set and test no-warning bit to avoid -Wnonnull for synthesized expressions.\n\nResolves:\nPR c++/96003 spurious -Wnonnull calling a member on the result of static_cast\n\ngcc/c-family/ChangeLog:\n\n\tPR c++/96003\n\t* c-common.c (check_function_arguments_recurse): Return early when\n\tno-warning bit is set.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/96003\n\t* class.c (build_base_path): Set no-warning bit on the synthesized\n\tconditional expression in static_cast.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/96003\n\t* g++.dg/warn/Wnonnull7.C: New test.", "tree": {"sha": "7a00548585cab2802e93e64d5924e4d2d178b52e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a00548585cab2802e93e64d5924e4d2d178b52e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df5cf47a978aaeb53fc2b18ff0b22eb4531a27d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df5cf47a978aaeb53fc2b18ff0b22eb4531a27d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df5cf47a978aaeb53fc2b18ff0b22eb4531a27d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df5cf47a978aaeb53fc2b18ff0b22eb4531a27d8/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4143efc1eed44050201b20c78d0206bc266e30c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4143efc1eed44050201b20c78d0206bc266e30c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4143efc1eed44050201b20c78d0206bc266e30c4"}], "stats": {"total": 49, "additions": 47, "deletions": 2}, "files": [{"sha": "96ed2334863cb21fcf02f02c7afcd68e3151ea6f", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df5cf47a978aaeb53fc2b18ff0b22eb4531a27d8/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df5cf47a978aaeb53fc2b18ff0b22eb4531a27d8/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=df5cf47a978aaeb53fc2b18ff0b22eb4531a27d8", "patch": "@@ -5822,6 +5822,9 @@ check_function_arguments_recurse (void (*callback)\n \t\t\t\t  void *ctx, tree param,\n \t\t\t\t  unsigned HOST_WIDE_INT param_num)\n {\n+  if (TREE_NO_WARNING (param))\n+    return;\n+\n   if (CONVERT_EXPR_P (param)\n       && (TYPE_PRECISION (TREE_TYPE (param))\n \t  == TYPE_PRECISION (TREE_TYPE (TREE_OPERAND (param, 0)))))"}, {"sha": "b39bdaaa3ab7b0379b891b79bd8383ad0871ecd0", "filename": "gcc/cp/class.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df5cf47a978aaeb53fc2b18ff0b22eb4531a27d8/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df5cf47a978aaeb53fc2b18ff0b22eb4531a27d8/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=df5cf47a978aaeb53fc2b18ff0b22eb4531a27d8", "patch": "@@ -516,8 +516,14 @@ build_base_path (enum tree_code code,\n \n  out:\n   if (null_test)\n-    expr = fold_build3_loc (input_location, COND_EXPR, target_type, null_test, expr,\n-\t\t\t    build_zero_cst (target_type));\n+    {\n+      expr = fold_build3_loc (input_location, COND_EXPR, target_type, null_test,\n+\t\t\t      expr, build_zero_cst (target_type));\n+      /* Avoid warning for the whole conditional expression (in addition\n+\t to NULL_TEST itself -- see above) in case the result is used in\n+\t a nonnull context that the front end -Wnonnull checks.  */\n+      TREE_NO_WARNING (expr) = 1;\n+    }\n \n   return expr;\n }"}, {"sha": "7611c18d94849ea74bc2b415cfad42622cb59118", "filename": "gcc/testsuite/g++.dg/warn/Wnonnull7.C", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df5cf47a978aaeb53fc2b18ff0b22eb4531a27d8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnonnull7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df5cf47a978aaeb53fc2b18ff0b22eb4531a27d8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnonnull7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWnonnull7.C?ref=df5cf47a978aaeb53fc2b18ff0b22eb4531a27d8", "patch": "@@ -0,0 +1,36 @@\n+/* PR c++/96003 - spurious -Wnonnull calling a member on the result\n+   of static_cast\n+   { dg-do compile }\n+   { dg-options \"-Wall\" } */\n+\n+struct D;\n+struct B\n+{\n+  B* next;\n+  D* Next ();\n+};\n+\n+struct D: B\n+{\n+  virtual ~D ();\n+};\n+\n+struct Iterator\n+{\n+  D* p;\n+  void advance ()\n+  {\n+    p = static_cast<B*>(p)->Next ();    // { dg-bogus \"\\\\\\[-Wnonnull\" }\n+  }\n+};\n+\n+// Test case from comment #11.\n+\n+struct S1 { virtual ~S1 (); };\n+struct S2 { virtual ~S2 (); };\n+struct S3: S1, S2 { void f (); };\n+\n+void f (S2 *p)\n+{\n+  static_cast<S3 *>(p)->f ();           // { dg-bogus \"\\\\\\[-Wnonnull\" }\n+}"}]}