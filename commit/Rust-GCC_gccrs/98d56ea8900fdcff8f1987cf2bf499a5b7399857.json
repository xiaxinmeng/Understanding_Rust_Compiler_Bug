{"sha": "98d56ea8900fdcff8f1987cf2bf499a5b7399857", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThkNTZlYTg5MDBmZGNmZjhmMTk4N2NmMmJmNDk5YTViNzM5OTg1Nw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-01-10T16:01:19Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-01-16T16:30:12Z"}, "message": "libstdc++: std::ctype fixes for recent versions of NetBSD\n\nThis removes support for EOL versions of NetBSD and syncs the\ndefinitions with patches from NetBSD upstream.\n\nThe only change here that isn't from upstream is to use _CTYPE_BL for\nthe isblank class, which is correct but wasn't previously done either in\nFSF GCC or the NetBSD packages.\n\n2020-01-16  Kai-Uwe Eckhardt  <kuehro@gmx.de>\n\t    Matthew Bauer  <mjbauer95@gmail.com>\n\t    Jonathan Wakely  <jwakely@redhat.com>\n\n\tPR bootstrap/64271 (partial)\n\t* config/os/bsd/netbsd/ctype_base.h (ctype_base::mask): Change type\n\tto unsigned short.\n\t(ctype_base::alpha, ctype_base::digit, ctype_base::xdigit)\n\t(ctype_base::print, ctype_base::graph, ctype_base::alnum): Sync\n\tdefinitions with NetBSD upstream.\n\t(ctype_base::blank): Use _CTYPE_BL.\n\t* config/os/bsd/netbsd/ctype_configure_char.cc (_C_ctype_): Remove\n\tDeclaration.\n\t(ctype<char>::classic_table): Use _C_ctype_tab_ instead of _C_ctype_.\n\t(ctype<char>::do_toupper, ctype<char>::do_tolower): Cast char\n\tparameters to unsigned char.\n\t* config/os/bsd/netbsd/ctype_inline.h (ctype<char>::is): Likewise.", "tree": {"sha": "bf083bc7c32e4a55d3639753e3fb52dd93213caa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf083bc7c32e4a55d3639753e3fb52dd93213caa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98d56ea8900fdcff8f1987cf2bf499a5b7399857", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98d56ea8900fdcff8f1987cf2bf499a5b7399857", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98d56ea8900fdcff8f1987cf2bf499a5b7399857", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98d56ea8900fdcff8f1987cf2bf499a5b7399857/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ea9140170b8a511822b1a873dea1227093f3ccf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ea9140170b8a511822b1a873dea1227093f3ccf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ea9140170b8a511822b1a873dea1227093f3ccf"}], "stats": {"total": 72, "additions": 37, "deletions": 35}, "files": [{"sha": "c37d3b1bfe3e2dbb5406b64f1f267169379a3540", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98d56ea8900fdcff8f1987cf2bf499a5b7399857/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98d56ea8900fdcff8f1987cf2bf499a5b7399857/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=98d56ea8900fdcff8f1987cf2bf499a5b7399857", "patch": "@@ -1,3 +1,21 @@\n+2020-01-16  Kai-Uwe Eckhardt  <kuehro@gmx.de>\n+\t    Matthew Bauer  <mjbauer95@gmail.com>\n+\t    Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR bootstrap/64271 (partial)\n+\t* config/os/bsd/netbsd/ctype_base.h (ctype_base::mask): Change type\n+\tto unsigned short.\n+\t(ctype_base::alpha, ctype_base::digit, ctype_base::xdigit)\n+\t(ctype_base::print, ctype_base::graph, ctype_base::alnum): Sync\n+\tdefinitions with NetBSD upstream.\n+\t(ctype_base::blank): Use _CTYPE_BL.\n+\t* config/os/bsd/netbsd/ctype_configure_char.cc (_C_ctype_): Remove\n+\tDeclaration.\n+\t(ctype<char>::classic_table): Use _C_ctype_tab_ instead of _C_ctype_.\n+\t(ctype<char>::do_toupper, ctype<char>::do_tolower): Cast char\n+\tparameters to unsigned char.\n+\t* config/os/bsd/netbsd/ctype_inline.h (ctype<char>::is): Likewise.\n+\n 2020-01-16  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \tPR libstdc++/91263"}, {"sha": "28bf232ba8399e4d0b03cde6e2e6727bb92c5364", "filename": "libstdc++-v3/config/os/bsd/netbsd/ctype_base.h", "status": "modified", "additions": 13, "deletions": 27, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98d56ea8900fdcff8f1987cf2bf499a5b7399857/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fnetbsd%2Fctype_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98d56ea8900fdcff8f1987cf2bf499a5b7399857/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fnetbsd%2Fctype_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fnetbsd%2Fctype_base.h?ref=98d56ea8900fdcff8f1987cf2bf499a5b7399857", "patch": "@@ -43,35 +43,21 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n     // NB: Offsets into ctype<char>::_M_table force a particular size\n     // on the mask type. Because of this, we don't use an enum.\n-    typedef unsigned char      \tmask;\n+    typedef unsigned short      \tmask;\n \n-#ifndef _CTYPE_U\n-    static const mask upper    \t= _U;\n-    static const mask lower \t= _L;\n-    static const mask alpha \t= _U | _L;\n-    static const mask digit \t= _N;\n-    static const mask xdigit \t= _N | _X;\n-    static const mask space \t= _S;\n-    static const mask print \t= _P | _U | _L | _N | _B;\n-    static const mask graph \t= _P | _U | _L | _N;\n-    static const mask cntrl \t= _C;\n-    static const mask punct \t= _P;\n-    static const mask alnum \t= _U | _L | _N;\n-#else\n-    static const mask upper    \t= _CTYPE_U;\n-    static const mask lower \t= _CTYPE_L;\n-    static const mask alpha \t= _CTYPE_U | _CTYPE_L;\n-    static const mask digit \t= _CTYPE_N;\n-    static const mask xdigit \t= _CTYPE_N | _CTYPE_X;\n-    static const mask space \t= _CTYPE_S;\n-    static const mask print \t= _CTYPE_P | _CTYPE_U | _CTYPE_L | _CTYPE_N | _CTYPE_B;\n-    static const mask graph \t= _CTYPE_P | _CTYPE_U | _CTYPE_L | _CTYPE_N;\n-    static const mask cntrl \t= _CTYPE_C;\n-    static const mask punct \t= _CTYPE_P;\n-    static const mask alnum \t= _CTYPE_U | _CTYPE_L | _CTYPE_N;\n-#endif\n+    static const mask upper\t= _CTYPE_U;\n+    static const mask lower\t= _CTYPE_L;\n+    static const mask alpha\t= _CTYPE_A;\n+    static const mask digit\t= _CTYPE_D;\n+    static const mask xdigit\t= _CTYPE_X;\n+    static const mask space\t= _CTYPE_S;\n+    static const mask print\t= _CTYPE_R;\n+    static const mask graph\t= _CTYPE_G;\n+    static const mask cntrl\t= _CTYPE_C;\n+    static const mask punct\t= _CTYPE_P;\n+    static const mask alnum\t= _CTYPE_A | _CTYPE_D;\n #if __cplusplus >= 201103L\n-    static const mask blank \t= space;\n+    static const mask blank\t= _CTYPE_BL;\n #endif\n   };\n "}, {"sha": "86f7828517dca91765731dbcc2ad84909af4d2cb", "filename": "libstdc++-v3/config/os/bsd/netbsd/ctype_configure_char.cc", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98d56ea8900fdcff8f1987cf2bf499a5b7399857/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fnetbsd%2Fctype_configure_char.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98d56ea8900fdcff8f1987cf2bf499a5b7399857/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fnetbsd%2Fctype_configure_char.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fnetbsd%2Fctype_configure_char.cc?ref=98d56ea8900fdcff8f1987cf2bf499a5b7399857", "patch": "@@ -38,11 +38,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n // Information as gleaned from /usr/include/ctype.h\n \n-  extern \"C\" const u_int8_t _C_ctype_[];\n-\n   const ctype_base::mask*\n   ctype<char>::classic_table() throw()\n-  { return _C_ctype_ + 1; }\n+  { return _C_ctype_tab_ + 1; }\n \n   ctype<char>::ctype(__c_locale, const mask* __table, bool __del,\n \t\t     size_t __refs)\n@@ -69,29 +67,29 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   char\n   ctype<char>::do_toupper(char __c) const\n-  { return ::toupper((int) __c); }\n+  { return ::toupper((int)(unsigned char) __c); }\n \n   const char*\n   ctype<char>::do_toupper(char* __low, const char* __high) const\n   {\n     while (__low < __high)\n       {\n-\t*__low = ::toupper((int) *__low);\n+\t*__low = ::toupper((int)(unsigned char) *__low);\n \t++__low;\n       }\n     return __high;\n   }\n \n   char\n   ctype<char>::do_tolower(char __c) const\n-  { return ::tolower((int) __c); }\n+  { return ::tolower((int)(unsigned char) __c); }\n \n   const char*\n   ctype<char>::do_tolower(char* __low, const char* __high) const\n   {\n     while (__low < __high)\n       {\n-\t*__low = ::tolower((int) *__low);\n+\t*__low = ::tolower((int)(unsigned char) *__low);\n \t++__low;\n       }\n     return __high;"}, {"sha": "4536690b6d869872d8d2d50ce3731ce66a08959b", "filename": "libstdc++-v3/config/os/bsd/netbsd/ctype_inline.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98d56ea8900fdcff8f1987cf2bf499a5b7399857/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fnetbsd%2Fctype_inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98d56ea8900fdcff8f1987cf2bf499a5b7399857/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fnetbsd%2Fctype_inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Fnetbsd%2Fctype_inline.h?ref=98d56ea8900fdcff8f1987cf2bf499a5b7399857", "patch": "@@ -48,7 +48,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   is(const char* __low, const char* __high, mask* __vec) const\n   {\n     while (__low < __high)\n-      *__vec++ = _M_table[*__low++];\n+      *__vec++ = _M_table[(unsigned char)*__low++];\n     return __high;\n   }\n "}]}