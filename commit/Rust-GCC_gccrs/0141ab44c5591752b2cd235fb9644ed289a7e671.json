{"sha": "0141ab44c5591752b2cd235fb9644ed289a7e671", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE0MWFiNDRjNTU5MTc1MmIyY2QyMzVmYjk2NDRlZDI4OWE3ZTY3MQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2018-10-15T22:16:59Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2018-10-15T22:16:59Z"}, "message": "diagnostics: add minimum width to left margin for line numbers\n\nThis patch adds a minimum width to the left margin used for printing\nline numbers.   I set the default to 6.  Hence rather than:\n\nsome-filename:9:1: some message\n9 | some source text\n  | ^~~~~~~~~~~~~~~~\nsome-filename:10:1: another message\n10 | more source text\n   | ^~~~~~~~~~~~~~~~\n\nwe now print:\n\nsome-filename:9:42: some message\n    9 | some source text\n      | ^~~~~~~~~~~~~~~~\nsome-filename:10:42: another message\n   10 | more source text\n      | ^~~~~~~~~~~~~~~~\n\nThis implicitly fixes issues with margins failing to line up due\nto different lengths of the number when we haven't read the full\nfile yet and so don't know the highest possible line number, for\nline numbers up to 99999.\n\nDoing so adds some whitespace on the left-hand side, for non-huge\nfiles, at least.  I believe that this makes it easier to see where each\ndiagnostic starts, by visually breaking things up at the leftmost\ncolumn; my hope is to make it easier for the eye to see the different\ndiagnostics as if they were different \"paragraphs\".\n\ngcc/ChangeLog:\n\t* common.opt (fdiagnostics-minimum-margin-width=): New option.\n\t* diagnostic-show-locus.c (layout::layout): Apply the minimum\n\tmargin width.\n\t(layout::start_annotation_line): Only print up to 3 of the\n\tmargin character, to avoid touching the left-hand side.\n\t(selftest::test_diagnostic_show_locus_fixit_lines): Update for\n\tminimum margin width, as set by test_diagnostic_context's ctor.\n\t(selftest::test_fixit_insert_containing_newline): Likewise.\n\t(selftest::test_fixit_insert_containing_newline_2): Likewise.\n\t(selftest::test_line_numbers_multiline_range): Clear\n\tdc.min_margin_width.\n\t* diagnostic.c (diagnostic_initialize): Initialize\n\tmin_margin_width.\n\t* diagnostic.h (struct diagnostic_context): Add field\n\t\"min_margin_width\".\n\t* doc/invoke.texi: Add -fdiagnostics-minimum-margin-width=.\n\t* opts.c (common_handle_option): Handle\n\tOPT_fdiagnostics_minimum_margin_width_.\n\t* selftest-diagnostic.c\n\t(selftest::test_diagnostic_context::test_diagnostic_context):\n\tInitialize min_margin_width to 6.\n\t* toplev.c (general_init): Initialize global_dc->min_margin_width.\n\ngcc/testsuite/ChangeLog:\n\t* gcc.dg/missing-header-fixit-3.c: Update expected indentation\n\tto reflect minimum margin width.\n\t* gcc.dg/missing-header-fixit-4.c: Likewise.\n\t* gcc.dg/plugin/diagnostic-test-show-locus-bw-line-numbers.c:\n\tLikewise.\n\t* gcc.dg/plugin/diagnostic-test-show-locus-color-line-numbers.c:\n\tLikewise.\n\t* gcc.dg/plugin/diagnostic-test-show-locus-bw-line-numbers-2.c:\n\tNew test.\n\t* gcc.dg/plugin/plugin.exp (plugin_test_list): Add it.\n\nFrom-SVN: r265178", "tree": {"sha": "6bbedd1880c0dd6587b4bacdf81e6dd027e1e194", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bbedd1880c0dd6587b4bacdf81e6dd027e1e194"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0141ab44c5591752b2cd235fb9644ed289a7e671", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0141ab44c5591752b2cd235fb9644ed289a7e671", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0141ab44c5591752b2cd235fb9644ed289a7e671", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0141ab44c5591752b2cd235fb9644ed289a7e671/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "95baaced40ed2bdced215d1aabdbd31b7e0718ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95baaced40ed2bdced215d1aabdbd31b7e0718ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95baaced40ed2bdced215d1aabdbd31b7e0718ef"}], "stats": {"total": 212, "additions": 152, "deletions": 60}, "files": [{"sha": "789e43b238848bafc65c297f45d253ee4ed1d24d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0141ab44c5591752b2cd235fb9644ed289a7e671", "patch": "@@ -1,3 +1,28 @@\n+2018-10-15  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* common.opt (fdiagnostics-minimum-margin-width=): New option.\n+\t* diagnostic-show-locus.c (layout::layout): Apply the minimum\n+\tmargin width.\n+\t(layout::start_annotation_line): Only print up to 3 of the\n+\tmargin character, to avoid touching the left-hand side.\n+\t(selftest::test_diagnostic_show_locus_fixit_lines): Update for\n+\tminimum margin width, as set by test_diagnostic_context's ctor.\n+\t(selftest::test_fixit_insert_containing_newline): Likewise.\n+\t(selftest::test_fixit_insert_containing_newline_2): Likewise.\n+\t(selftest::test_line_numbers_multiline_range): Clear\n+\tdc.min_margin_width.\n+\t* diagnostic.c (diagnostic_initialize): Initialize\n+\tmin_margin_width.\n+\t* diagnostic.h (struct diagnostic_context): Add field\n+\t\"min_margin_width\".\n+\t* doc/invoke.texi: Add -fdiagnostics-minimum-margin-width=.\n+\t* opts.c (common_handle_option): Handle\n+\tOPT_fdiagnostics_minimum_margin_width_.\n+\t* selftest-diagnostic.c\n+\t(selftest::test_diagnostic_context::test_diagnostic_context):\n+\tInitialize min_margin_width to 6.\n+\t* toplev.c (general_init): Initialize global_dc->min_margin_width.\n+\n 2018-10-15  David Malcolm  <dmalcolm@redhat.com>\n \n \t* gcc-rich-location.h (gcc_rich_location::add_location_if_nearby):"}, {"sha": "2971dc21b1fee55e8aee9a313023635c093b23a4", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=0141ab44c5591752b2cd235fb9644ed289a7e671", "patch": "@@ -1281,6 +1281,10 @@ fdiagnostics-show-option\n Common Var(flag_diagnostics_show_option) Init(1)\n Amend appropriate diagnostic messages with the command line option that controls them.\n \n+fdiagnostics-minimum-margin-width=\n+Common Joined UInteger Var(diagnostics_minimum_margin_width) Init(6)\n+Set minimum width of left margin of source code when showing source\n+\n fdisable-\n Common Joined RejectNegative Var(common_deferred_options) Defer\n -fdisable-[tree|rtl|ipa]-<pass>=range1+range2 disables an optimization pass."}, {"sha": "a42ff819512ff1adbc170fbef5b91f47de2a4e93", "filename": "gcc/diagnostic-show-locus.c", "status": "modified", "additions": 25, "deletions": 16, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Fdiagnostic-show-locus.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Fdiagnostic-show-locus.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic-show-locus.c?ref=0141ab44c5591752b2cd235fb9644ed289a7e671", "patch": "@@ -930,6 +930,9 @@ layout::layout (diagnostic_context * context,\n   /* If we're showing jumps in the line-numbering, allow at least 3 chars.  */\n   if (m_line_spans.length () > 1)\n     m_linenum_width = MAX (m_linenum_width, 3);\n+  /* If there's a minimum margin width, apply it (subtracting 1 for the space\n+     after the line number.  */\n+  m_linenum_width = MAX (m_linenum_width, context->min_margin_width - 1);\n \n   /* Adjust m_x_offset.\n      Center the primary caret to fit in max_width; all columns\n@@ -1386,7 +1389,12 @@ layout::start_annotation_line (char margin_char) const\n {\n   if (m_show_line_numbers_p)\n     {\n-      for (int i = 0; i < m_linenum_width; i++)\n+      /* Print the margin.  If MARGIN_CHAR != ' ', then print up to 3\n+\t of it, right-aligned, padded with spaces.  */\n+      int i;\n+      for (i = 0; i < m_linenum_width - 3; i++)\n+\tpp_space (m_pp);\n+      for (; i < m_linenum_width; i++)\n \tpp_character (m_pp, margin_char);\n       pp_string (m_pp, \" |\");\n     }\n@@ -3027,12 +3035,12 @@ test_diagnostic_show_locus_fixit_lines (const line_table_case &case_)\n     dc.show_line_numbers_p = true;\n     diagnostic_show_locus (&dc, &richloc, DK_ERROR);\n     ASSERT_STREQ (\"\\n\"\n-\t\t  \"  3 |                        y\\n\"\n-\t\t  \"    |                        .\\n\"\n-\t\t  \"....\\n\"\n-\t\t  \"  6 |                         : 0.0};\\n\"\n-\t\t  \"    |                         ^\\n\"\n-\t\t  \"    |                         =\\n\",\n+\t\t  \"    3 |                        y\\n\"\n+\t\t  \"      |                        .\\n\"\n+\t\t  \"......\\n\"\n+\t\t  \"    6 |                         : 0.0};\\n\"\n+\t\t  \"      |                         ^\\n\"\n+\t\t  \"      |                         =\\n\",\n \t\t  pp_formatted_text (dc.printer));\n   }\n }\n@@ -3523,10 +3531,10 @@ test_fixit_insert_containing_newline (const line_table_case &case_)\n       dc.show_line_numbers_p = true;\n       diagnostic_show_locus (&dc, &richloc, DK_ERROR);\n       ASSERT_STREQ (\"\\n\"\n-\t\t    \"2 |       x = a;\\n\"\n-\t\t    \"+ |+      break;\\n\"\n-\t\t    \"3 |     case 'b':\\n\"\n-\t\t    \"  |     ^~~~~~~~~\\n\",\n+\t\t    \"    2 |       x = a;\\n\"\n+\t\t    \"  +++ |+      break;\\n\"\n+\t\t    \"    3 |     case 'b':\\n\"\n+\t\t    \"      |     ^~~~~~~~~\\n\",\n \t\t    pp_formatted_text (dc.printer));\n     }\n   }\n@@ -3605,11 +3613,11 @@ test_fixit_insert_containing_newline_2 (const line_table_case &case_)\n     dc.show_line_numbers_p = true;\n     diagnostic_show_locus (&dc, &richloc, DK_ERROR);\n     ASSERT_STREQ (\"\\n\"\n-\t\t  \"+ |+#include <stdio.h>\\n\"\n-\t\t  \"1 | test (int ch)\\n\"\n-\t\t  \"2 | {\\n\"\n-\t\t  \"3 |  putchar (ch);\\n\"\n-\t\t  \"  |  ^~~~~~~\\n\",\n+\t\t  \"  +++ |+#include <stdio.h>\\n\"\n+\t\t  \"    1 | test (int ch)\\n\"\n+\t\t  \"    2 | {\\n\"\n+\t\t  \"    3 |  putchar (ch);\\n\"\n+\t\t  \"      |  ^~~~~~~\\n\",\n \t\t  pp_formatted_text (dc.printer));\n   }\n }\n@@ -3734,6 +3742,7 @@ test_line_numbers_multiline_range ()\n \n   test_diagnostic_context dc;\n   dc.show_line_numbers_p = true;\n+  dc.min_margin_width = 0;\n   gcc_rich_location richloc (loc);\n   diagnostic_show_locus (&dc, &richloc, DK_ERROR);\n   ASSERT_STREQ (\"\\n\""}, {"sha": "a572c084aac0fb8b2b4ab77388a14ea0bc0b7fde", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=0141ab44c5591752b2cd235fb9644ed289a7e671", "patch": "@@ -177,6 +177,7 @@ diagnostic_initialize (diagnostic_context *context, int n_opts)\n   context->colorize_source_p = false;\n   context->show_labels_p = false;\n   context->show_line_numbers_p = false;\n+  context->min_margin_width = 0;\n   context->show_ruler_p = false;\n   context->parseable_fixits_p = false;\n   context->edit_context_ptr = NULL;"}, {"sha": "3498a9ba7bb7a9aa9235ca822700700a8f9412f9", "filename": "gcc/diagnostic.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Fdiagnostic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Fdiagnostic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.h?ref=0141ab44c5591752b2cd235fb9644ed289a7e671", "patch": "@@ -211,6 +211,10 @@ struct diagnostic_context\n      showing line numbers?  */\n   bool show_line_numbers_p;\n \n+  /* If printing source code, what should the minimum width of the margin\n+     be?  Line numbers will be right-aligned, and padded to this width.  */\n+  int min_margin_width;\n+\n   /* Usable by plugins; if true, print a debugging ruler above the\n      source output.  */\n   bool show_ruler_p;"}, {"sha": "06a00a29de73aa509b6a15ebb34dfc182cf94cd2", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=0141ab44c5591752b2cd235fb9644ed289a7e671", "patch": "@@ -270,6 +270,7 @@ Objective-C and Objective-C++ Dialects}.\n -fdiagnostics-color=@r{[}auto@r{|}never@r{|}always@r{]}  @gol\n -fno-diagnostics-show-option  -fno-diagnostics-show-caret @gol\n -fno-diagnostics-show-labels -fno-diagnostics-show-line-numbers @gol\n+-fdiagnostics-minimum-margin-width=@var{width} @gol\n -fdiagnostics-parseable-fixits  -fdiagnostics-generate-patch @gol\n -fdiagnostics-show-template-tree -fno-elide-type @gol\n -fno-show-column}\n@@ -3819,6 +3820,11 @@ By default, when printing source code (via @option{-fdiagnostics-show-caret}),\n a left margin is printed, showing line numbers.  This option suppresses this\n left margin.\n \n+@item -fdiagnostics-minimum-margin-width=@var{width}\n+@opindex -fdiagnostics-minimum-margin-width\n+This option controls the minimum width of the left margin printed by\n+@option{-fdiagnostics-show-line-numbers}.  It defaults to 6.\n+\n @item -fdiagnostics-parseable-fixits\n @opindex fdiagnostics-parseable-fixits\n Emit fix-it hints in a machine-parseable format, suitable for consumption"}, {"sha": "3b61e17a7ab07b0bff93f6d8f0bdafaf80d7a8e5", "filename": "gcc/opts.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=0141ab44c5591752b2cd235fb9644ed289a7e671", "patch": "@@ -2228,6 +2228,10 @@ common_handle_option (struct gcc_options *opts,\n       dc->show_option_requested = value;\n       break;\n \n+    case OPT_fdiagnostics_minimum_margin_width_:\n+      dc->min_margin_width = value;\n+      break;\n+\n     case OPT_fdump_:\n       /* Deferred.  */\n       break;"}, {"sha": "4a7f0dec4c92a0e3c1135cb4a8a712a780c2a15b", "filename": "gcc/selftest-diagnostic.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Fselftest-diagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Fselftest-diagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fselftest-diagnostic.c?ref=0141ab44c5591752b2cd235fb9644ed289a7e671", "patch": "@@ -40,6 +40,7 @@ test_diagnostic_context::test_diagnostic_context ()\n   show_labels_p = true;\n   show_column = true;\n   start_span = start_span_cb;\n+  min_margin_width = 6;\n }\n \n test_diagnostic_context::~test_diagnostic_context ()"}, {"sha": "37a9ed3f5b7b7c26e0a3333783823d3eaa11e843", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0141ab44c5591752b2cd235fb9644ed289a7e671", "patch": "@@ -1,3 +1,16 @@\n+2018-10-15  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* gcc.dg/missing-header-fixit-3.c: Update expected indentation\n+\tto reflect minimum margin width.\n+\t* gcc.dg/missing-header-fixit-4.c: Likewise.\n+\t* gcc.dg/plugin/diagnostic-test-show-locus-bw-line-numbers.c:\n+\tLikewise.\n+\t* gcc.dg/plugin/diagnostic-test-show-locus-color-line-numbers.c:\n+\tLikewise.\n+\t* gcc.dg/plugin/diagnostic-test-show-locus-bw-line-numbers-2.c:\n+\tNew test.\n+\t* gcc.dg/plugin/plugin.exp (plugin_test_list): Add it.\n+\n 2018-10-15  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/87597"}, {"sha": "dd53bf65d3c86dc9531e8a55e6148ec04f5016d4", "filename": "gcc/testsuite/gcc.dg/missing-header-fixit-3.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Ftestsuite%2Fgcc.dg%2Fmissing-header-fixit-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Ftestsuite%2Fgcc.dg%2Fmissing-header-fixit-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fmissing-header-fixit-3.c?ref=0141ab44c5591752b2cd235fb9644ed289a7e671", "patch": "@@ -10,12 +10,12 @@ void test (int i, int j)\n   /* { dg-message \"include '<stdio.h>' or provide a declaration of 'printf'\" \"\" { target *-*-* } 1 } */\n #if 0\n /* { dg-begin-multiline-output \"\" }\n-9 |   printf (\"%i of %i\\n\", i, j);\n-  |   ^~~~~~\n+    9 |   printf (\"%i of %i\\n\", i, j);\n+      |   ^~~~~~\n    { dg-end-multiline-output \"\" } */\n /* { dg-begin-multiline-output \"\" }\n-+ |+#include <stdio.h>\n-1 | /* Example of a fix-it hint that adds a #include directive,\n+  +++ |+#include <stdio.h>\n+    1 | /* Example of a fix-it hint that adds a #include directive,\n    { dg-end-multiline-output \"\" } */\n #endif\n }"}, {"sha": "942897d8c79fd6a615b1ab367cec10f54e55db32", "filename": "gcc/testsuite/gcc.dg/missing-header-fixit-4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Ftestsuite%2Fgcc.dg%2Fmissing-header-fixit-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Ftestsuite%2Fgcc.dg%2Fmissing-header-fixit-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fmissing-header-fixit-4.c?ref=0141ab44c5591752b2cd235fb9644ed289a7e671", "patch": "@@ -11,13 +11,13 @@ void test (int i, int j)\n   /* { dg-warning \"implicit declaration of function\" \"\" { target *-*-* } printf } */\n   /* { dg-warning \"incompatible implicit declaration\" \"\" { target *-*-* } printf } */\n   /* { dg-begin-multiline-output \"\" }\n-10 |   printf (\"%i of %i\\n\", i, j);\n-   |   ^~~~~~\n+   10 |   printf (\"%i of %i\\n\", i, j);\n+      |   ^~~~~~\n    { dg-end-multiline-output \"\" } */\n   /* { dg-message \"include '<stdio.h>' or provide a declaration of 'printf'\" \"\" { target *-*-* } 4 } */\n   /* { dg-begin-multiline-output \"\" }\n-3 | #include \"empty.h\"\n-+ |+#include <stdio.h>\n-4 | int the_next_line;\n+    3 | #include \"empty.h\"\n+  +++ |+#include <stdio.h>\n+    4 | int the_next_line;\n    { dg-end-multiline-output \"\" } */\n }"}, {"sha": "a9d022a250aad9bfe54da4a726fc754031286865", "filename": "gcc/testsuite/gcc.dg/plugin/diagnostic-test-show-locus-bw-line-numbers-2.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-show-locus-bw-line-numbers-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-show-locus-bw-line-numbers-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-show-locus-bw-line-numbers-2.c?ref=0141ab44c5591752b2cd235fb9644ed289a7e671", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* Verify \"-fdiagnostics-minimum-margin-width=0\".  */\n+/* { dg-options \"-O -fdiagnostics-show-caret -fdiagnostics-show-line-numbers -fdiagnostics-minimum-margin-width=0\" } */\n+\n+/* This is a collection of unittests for diagnostic_show_locus;\n+   see the overview in diagnostic_plugin_test_show_locus.c.\n+\n+   In particular, note the discussion of why we need a very long line here:\n+01234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789\n+   and that we can't use macros in this file.  */\n+\n+void test_simple (void)\n+{\n+#if 0\n+  myvar = myvar.x; /* { dg-warning \"test\" } */\n+\n+/* { dg-begin-multiline-output \"\" }\n+15 |   myvar = myvar.x;\n+   |           ~~~~~^~\n+   { dg-end-multiline-output \"\" } */\n+#endif\n+}"}, {"sha": "1e8f73bdb5d92763b7c74864a6696767291b02b0", "filename": "gcc/testsuite/gcc.dg/plugin/diagnostic-test-show-locus-bw-line-numbers.c", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-show-locus-bw-line-numbers.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-show-locus-bw-line-numbers.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-show-locus-bw-line-numbers.c?ref=0141ab44c5591752b2cd235fb9644ed289a7e671", "patch": "@@ -14,8 +14,8 @@ void test_simple (void)\n   myvar = myvar.x; /* { dg-warning \"test\" } */\n \n /* { dg-begin-multiline-output \"\" }\n-14 |   myvar = myvar.x;\n-   |           ~~~~~^~\n+   14 |   myvar = myvar.x;\n+      |           ~~~~~^~\n    { dg-end-multiline-output \"\" } */\n #endif\n }\n@@ -27,12 +27,12 @@ void test_multiline (void)\n        + second_function ()); /* { dg-warning \"test\" } */\n \n /* { dg-begin-multiline-output \"\" }\n-26 |   x = (first_function ()\n-   |        ~~~~~~~~~~~~~~~~~\n-27 |        + second_function ());\n-   |        ^ ~~~~~~~~~~~~~~~~~~\n-   |        |\n-   |        label\n+   26 |   x = (first_function ()\n+      |        ~~~~~~~~~~~~~~~~~\n+   27 |        + second_function ());\n+      |        ^ ~~~~~~~~~~~~~~~~~~\n+      |        |\n+      |        label\n    { dg-end-multiline-output \"\" } */\n #endif\n }\n@@ -42,14 +42,14 @@ void test_very_wide_line (void)\n #if 0\n                                                                                 float f = foo * bar; /* { dg-warning \"95: test\" } */\n /* { dg-begin-multiline-output \"\" }\n-   | 0         0         0         0         0         0         1         \n-   | 4         5         6         7         8         9         0         \n-   | 0123456789012345678901234567890123456789012345678901234567890123456789\n-43 |                                          float f = foo * bar;\n-   |                                                    ~~~~^~~~~\n-   |                                                        |\n-   |                                                        label\n-   |                                                    bar * foo\n+      |        0         0         0         0         0         1         1  \n+      |        5         6         7         8         9         0         1  \n+      | 3456789012345678901234567890123456789012345678901234567890123456789012\n+   43 |                                       float f = foo * bar;\n+      |                                                 ~~~~^~~~~\n+      |                                                     |\n+      |                                                     label 0\n+      |                                                 bar * foo\n    { dg-end-multiline-output \"\" } */\n #endif\n }\n@@ -62,9 +62,9 @@ void test_fixit_insert (void)\n #if 0\n    int a[2][2] = { 0, 1 , 2, 3 }; /* { dg-warning \"insertion hints\" } */\n /* { dg-begin-multiline-output \"\" }\n-63 |    int a[2][2] = { 0, 1 , 2, 3 };\n-   |                    ^~~~\n-   |                    {   }\n+   63 |    int a[2][2] = { 0, 1 , 2, 3 };\n+      |                    ^~~~\n+      |                    {   }\n    { dg-end-multiline-output \"\" } */\n #endif\n }\n@@ -76,9 +76,9 @@ void test_fixit_remove (void)\n #if 0\n   int a;; /* { dg-warning \"example of a removal hint\" } */\n /* { dg-begin-multiline-output \"\" }\n-77 |   int a;;\n-   |         ^\n-   |         -\n+   77 |   int a;;\n+      |         ^\n+      |         -\n    { dg-end-multiline-output \"\" } */\n #endif\n }\n@@ -90,9 +90,9 @@ void test_fixit_replace (void)\n #if 0\n   gtk_widget_showall (dlg); /* { dg-warning \"example of a replacement hint\" } */\n /* { dg-begin-multiline-output \"\" }\n-91 |   gtk_widget_showall (dlg);\n-   |   ^~~~~~~~~~~~~~~~~~\n-   |   gtk_widget_show_all\n+   91 |   gtk_widget_showall (dlg);\n+      |   ^~~~~~~~~~~~~~~~~~\n+      |   gtk_widget_show_all\n    { dg-end-multiline-output \"\" } */\n #endif\n }\n@@ -111,10 +111,10 @@ void test_fixit_insert_newline (void)\n       x = b;\n     }\n /* { dg-begin-multiline-output \"\" }\n-109 |       x = a;\n-+++ |+      break;\n-110 |     case 'b':\n-    |     ^~~~~~~~\n+  109 |       x = a;\n+  +++ |+      break;\n+  110 |     case 'b':\n+      |     ^~~~~~~~\n    { dg-end-multiline-output \"\" } */\n #endif\n }"}, {"sha": "bb83862d550d96a910555661c4dac0c2eff96ce6", "filename": "gcc/testsuite/gcc.dg/plugin/diagnostic-test-show-locus-color-line-numbers.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-show-locus-color-line-numbers.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-show-locus-color-line-numbers.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fdiagnostic-test-show-locus-color-line-numbers.c?ref=0141ab44c5591752b2cd235fb9644ed289a7e671", "patch": "@@ -15,12 +15,12 @@ void test_multiline (void)\n        + second_function ()); /* { dg-warning \"test\" } */\n \n /* { dg-begin-multiline-output \"\" }\n-14 |   x = (\u001b[32m\u001b[Kfirst_function ()\u001b[m\u001b[K\n-   |        \u001b[32m\u001b[K~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n-15 |        \u001b[01;35m\u001b[K+\u001b[m\u001b[K \u001b[34m\u001b[Ksecond_function ()\u001b[m\u001b[K);\n-   |        \u001b[01;35m\u001b[K^\u001b[m\u001b[K \u001b[34m\u001b[K~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n-   |        \u001b[01;35m\u001b[K|\u001b[m\u001b[K\n-   |        \u001b[01;35m\u001b[Klabel\u001b[m\u001b[K\n+   14 |   x = (\u001b[32m\u001b[Kfirst_function ()\u001b[m\u001b[K\n+      |        \u001b[32m\u001b[K~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n+   15 |        \u001b[01;35m\u001b[K+\u001b[m\u001b[K \u001b[34m\u001b[Ksecond_function ()\u001b[m\u001b[K);\n+      |        \u001b[01;35m\u001b[K^\u001b[m\u001b[K \u001b[34m\u001b[K~~~~~~~~~~~~~~~~~~\u001b[m\u001b[K\n+      |        \u001b[01;35m\u001b[K|\u001b[m\u001b[K\n+      |        \u001b[01;35m\u001b[Klabel\u001b[m\u001b[K\n    { dg-end-multiline-output \"\" } */\n #endif\n }"}, {"sha": "d92ede79c0d5b0529981826340964bec3b3dd580", "filename": "gcc/testsuite/gcc.dg/plugin/plugin.exp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fplugin.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fplugin.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fplugin%2Fplugin.exp?ref=0141ab44c5591752b2cd235fb9644ed289a7e671", "patch": "@@ -76,6 +76,7 @@ set plugin_test_list [list \\\n \t  diagnostic-test-show-locus-color.c \\\n \t  diagnostic-test-show-locus-no-labels.c \\\n \t  diagnostic-test-show-locus-bw-line-numbers.c \\\n+\t  diagnostic-test-show-locus-bw-line-numbers-2.c \\\n \t  diagnostic-test-show-locus-color-line-numbers.c \\\n \t  diagnostic-test-show-locus-parseable-fixits.c \\\n \t  diagnostic-test-show-locus-generate-patch.c }\\"}, {"sha": "d7ea11abf5349460d2ad2f53946714a68960cc7d", "filename": "gcc/toplev.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0141ab44c5591752b2cd235fb9644ed289a7e671/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=0141ab44c5591752b2cd235fb9644ed289a7e671", "patch": "@@ -1120,6 +1120,8 @@ general_init (const char *argv0, bool init_signals)\n     = global_options_init.x_flag_diagnostics_show_line_numbers;\n   global_dc->show_option_requested\n     = global_options_init.x_flag_diagnostics_show_option;\n+  global_dc->min_margin_width\n+    = global_options_init.x_diagnostics_minimum_margin_width;\n   global_dc->show_column\n     = global_options_init.x_flag_show_column;\n   global_dc->internal_error = internal_error_function;"}]}