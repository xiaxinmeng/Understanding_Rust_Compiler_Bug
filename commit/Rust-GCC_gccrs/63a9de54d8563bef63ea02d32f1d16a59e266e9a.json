{"sha": "63a9de54d8563bef63ea02d32f1d16a59e266e9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNhOWRlNTRkODU2M2JlZjYzZWEwMmQzMmYxZDE2YTU5ZTI2NmU5YQ==", "commit": {"author": {"name": "Christian Bruel", "email": "christian.bruel@st.com", "date": "2009-04-02T13:21:56Z"}, "committer": {"name": "Christian Bruel", "email": "chrbr@gcc.gnu.org", "date": "2009-04-02T13:21:56Z"}, "message": "[SH] double precision floating point dwarf fix\n\n2009-04-02  Christian Bruel  <christian.bruel@st.com>\n\n\t* config/sh/sh.c (sh_dwarf_register_span): New function.\n\t(TARGET_DWARF_REGISTER_SPAN): Define.\n\t* config/sh/sh-protos.h (sh_dwarf_register_span): Declare.\n\nFrom-SVN: r145448", "tree": {"sha": "a5e07ae4d2722bdefe956efd4c4239a659ab163d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5e07ae4d2722bdefe956efd4c4239a659ab163d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63a9de54d8563bef63ea02d32f1d16a59e266e9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63a9de54d8563bef63ea02d32f1d16a59e266e9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63a9de54d8563bef63ea02d32f1d16a59e266e9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63a9de54d8563bef63ea02d32f1d16a59e266e9a/comments", "author": null, "committer": null, "parents": [{"sha": "2f0fa28e1f7c64c4e0f352dfd97b02de06c6e94b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f0fa28e1f7c64c4e0f352dfd97b02de06c6e94b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f0fa28e1f7c64c4e0f352dfd97b02de06c6e94b"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "7664e11a2ae4788afe63e4fde1071b452a5cb495", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63a9de54d8563bef63ea02d32f1d16a59e266e9a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63a9de54d8563bef63ea02d32f1d16a59e266e9a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=63a9de54d8563bef63ea02d32f1d16a59e266e9a", "patch": "@@ -1,3 +1,9 @@\n+2009-04-02  Christian Bruel  <christian.bruel@st.com>\n+\n+\t* config/sh/sh.c (sh_dwarf_register_span): New function.\n+\t(TARGET_DWARF_REGISTER_SPAN): Define.\n+\t* config/sh/sh-protos.h (sh_dwarf_register_span): Declare.\n+\t\n 2009-04-02  Ira Rosen  <irar@il.ibm.com>\n \n \tPR tree-optimization/39595"}, {"sha": "afc4c94a941a81e46a309bb67a9689641f5f1892", "filename": "gcc/config/sh/sh-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63a9de54d8563bef63ea02d32f1d16a59e266e9a/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63a9de54d8563bef63ea02d32f1d16a59e266e9a/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh-protos.h?ref=63a9de54d8563bef63ea02d32f1d16a59e266e9a", "patch": "@@ -160,6 +160,7 @@ extern void sh_function_arg_advance (CUMULATIVE_ARGS *, enum machine_mode, tree,\n extern int sh_pass_in_reg_p (CUMULATIVE_ARGS *, enum machine_mode, tree);\n extern void sh_init_cumulative_args (CUMULATIVE_ARGS *, tree, rtx, tree, signed int, enum machine_mode);\n extern bool sh_promote_prototypes (const_tree);\n+extern rtx sh_dwarf_register_span (rtx);\n \n extern rtx replace_n_hard_rtx (rtx, rtx *, int , int);\n extern int shmedia_cleanup_truncate (rtx *, void *);"}, {"sha": "603ddecb1881912ffb8c1b333e5594529c23bde3", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63a9de54d8563bef63ea02d32f1d16a59e266e9a/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63a9de54d8563bef63ea02d32f1d16a59e266e9a/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=63a9de54d8563bef63ea02d32f1d16a59e266e9a", "patch": "@@ -405,6 +405,9 @@ static int sh2a_function_vector_p (tree);\n #undef TARGET_MACHINE_DEPENDENT_REORG\n #define TARGET_MACHINE_DEPENDENT_REORG sh_reorg\n \n+#undef TARGET_DWARF_REGISTER_SPAN\n+#define TARGET_DWARF_REGISTER_SPAN sh_dwarf_register_span\n+\n #ifdef HAVE_AS_TLS\n #undef TARGET_HAVE_TLS\n #define TARGET_HAVE_TLS true\n@@ -7426,6 +7429,26 @@ sh_gimplify_va_arg_expr (tree valist, tree type, gimple_seq *pre_p,\n   return result;\n }\n \n+/* 64 bit floating points memory transfers are paired single precision loads\n+   or store. So DWARF information needs fixing in little endian (unless\n+   PR=SZ=1 in FPSCR).  */\n+rtx\n+sh_dwarf_register_span (rtx reg)\n+{\n+  unsigned regno = REGNO (reg);\n+\n+  if (WORDS_BIG_ENDIAN || GET_MODE (reg) != DFmode)\n+    return NULL_RTX;\n+\n+  return\n+    gen_rtx_PARALLEL (VOIDmode,\n+\t\t      gen_rtvec (2,\n+\t\t\t\t gen_rtx_REG (SFmode,\n+\t\t\t\t\t      DBX_REGISTER_NUMBER (regno+1)),\n+\t\t\t\t gen_rtx_REG (SFmode,\n+\t\t\t\t\t      DBX_REGISTER_NUMBER (regno))));\n+}\n+\n bool\n sh_promote_prototypes (const_tree type)\n {"}]}