{"sha": "01933a513c9addbcc1f407574d58820f3f8251b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE5MzNhNTEzYzlhZGRiY2MxZjQwNzU3NGQ1ODgyMGYzZjgyNTFiNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-11-29T16:29:34Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-11-29T16:29:34Z"}, "message": "tabify\n\nFrom-SVN: r37849", "tree": {"sha": "e4ae78e7c518c30c2fab2a7f6fdd9a55f87b44d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4ae78e7c518c30c2fab2a7f6fdd9a55f87b44d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01933a513c9addbcc1f407574d58820f3f8251b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01933a513c9addbcc1f407574d58820f3f8251b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01933a513c9addbcc1f407574d58820f3f8251b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01933a513c9addbcc1f407574d58820f3f8251b7/comments", "author": null, "committer": null, "parents": [{"sha": "76b7dad31c40a9f34a499bfc899bd9483e7cd57e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76b7dad31c40a9f34a499bfc899bd9483e7cd57e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76b7dad31c40a9f34a499bfc899bd9483e7cd57e"}], "stats": {"total": 148, "additions": 74, "deletions": 74}, "files": [{"sha": "db00db23bc4175df79d62fbc6bfed01eb31d2ce1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 74, "deletions": 74, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01933a513c9addbcc1f407574d58820f3f8251b7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01933a513c9addbcc1f407574d58820f3f8251b7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=01933a513c9addbcc1f407574d58820f3f8251b7", "patch": "@@ -34,10 +34,10 @@ Wed Nov 29 00:08:23 2000  J\"orn Rennecke <amylaar@redhat.com>\n \n 2000-11-28  Neil Booth  <neilb@earthling.net>\n \n-        * c-common.h: Remove flag_digraphs.\n-        * c-decl.c: Remove flag_digraphs.  \n-        (c_decode_option): Don't set it. \n-        * c-lex.c (init_c_lex): Don't do anything for digraphs.\n+\t* c-common.h: Remove flag_digraphs.\n+\t* c-decl.c: Remove flag_digraphs.  \n+\t(c_decode_option): Don't set it. \n+\t* c-lex.c (init_c_lex): Don't do anything for digraphs.\n \n 2000-11-28  Richard Henderson  <rth@redhat.com>\n \n@@ -46,12 +46,12 @@ Wed Nov 29 00:08:23 2000  J\"orn Rennecke <amylaar@redhat.com>\n \n 2000-11-28  Neil Booth  <neilb@earthling.net>\n \n-        * cppmacro.c (cpp_scan_buffer_nooutput): Take a boolean\n-        indicating whether to scan all buffers on the stack or\n-        just one.\n-        * cppinit.c (do_includes): Update.\n-        * cppmain.c (main): Update.\n-        * cpplib.h: Update prototype.\n+\t* cppmacro.c (cpp_scan_buffer_nooutput): Take a boolean\n+\tindicating whether to scan all buffers on the stack or\n+\tjust one.\n+\t* cppinit.c (do_includes): Update.\n+\t* cppmain.c (main): Update.\n+\t* cpplib.h: Update prototype.\n \n 2000-11-28  Richard Henderson  <rth@redhat.com>\n \n@@ -111,17 +111,17 @@ Wed Nov 29 00:08:23 2000  J\"orn Rennecke <amylaar@redhat.com>\n \n 2000-11-28  Neil Booth  <neilb@earthling.net>\n \n-        * tradcpp.c (enum node_type): New hash types T_ASSERT, T_UNASSERT.\n-        (struct directive): Drop 4th argument from handlers.\n-        (do_define, do_line, do_include, do_undef, do_else, do_elif,\n-        do_endif): Similarly.\n-        (do_assert, do_unassert, do_ifdef, do_ifndef): New handlers.\n-        (do_ifxdef): Update as common handler of do_ifdef and do_ifndef.\n-        (make_definition, make_undef): Take a const char*.\n-        (make_assertion): New function.\n-        (struct directive_table): Update.\n-        (main): Handle -A command line argument.\n-        (handle_directive): Drop fourth handler argument.\n+\t* tradcpp.c (enum node_type): New hash types T_ASSERT, T_UNASSERT.\n+\t(struct directive): Drop 4th argument from handlers.\n+\t(do_define, do_line, do_include, do_undef, do_else, do_elif,\n+\tdo_endif): Similarly.\n+\t(do_assert, do_unassert, do_ifdef, do_ifndef): New handlers.\n+\t(do_ifxdef): Update as common handler of do_ifdef and do_ifndef.\n+\t(make_definition, make_undef): Take a const char*.\n+\t(make_assertion): New function.\n+\t(struct directive_table): Update.\n+\t(main): Handle -A command line argument.\n+\t(handle_directive): Drop fourth handler argument.\n \n 2000-11-28  Bernd Schmidt  <bernds@redhat.co.uk>\n \n@@ -152,19 +152,19 @@ Tue Nov 28 09:53:50 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n 2000-11-27  Neil Booth  <neilb@earthling.net>\n \n-        * cppinit.c (cpp_reader_init): Remove handling of warn_paste   \n-        command line options.\n-        (cpp_handle_option): Similarly.\n-        * cpplib.h (struct cpp_options): Remove warn_paste.\n-        * cppmacro.c (paste_tokens): Apart from assembler, make\n-        unpasteable token warning mandatory.\n+\t* cppinit.c (cpp_reader_init): Remove handling of warn_paste   \n+\tcommand line options.\n+\t(cpp_handle_option): Similarly.\n+\t* cpplib.h (struct cpp_options): Remove warn_paste.\n+\t* cppmacro.c (paste_tokens): Apart from assembler, make\n+\tunpasteable token warning mandatory.\n \n 2000-11-27  Neil Booth  <neilb@earthling.net>\n \n-        * tradcpp.c (enum pending_dir_t, struct pending_dir): New.\n-        (main): Allocate a pending directive set of these.  Use it.\n-        Merge handling of -D and -U.  Update handling of pending\n-        directives.  Free the memory after use.\n+\t* tradcpp.c (enum pending_dir_t, struct pending_dir): New.\n+\t(main): Allocate a pending directive set of these.  Use it.\n+\tMerge handling of -D and -U.  Update handling of pending\n+\tdirectives.  Free the memory after use.\n \n 2000-11-27  Bernd Schmidt  <bernds@redhat.co.uk>\n \n@@ -246,28 +246,28 @@ Mon Nov 27 17:22:56 MET 2000  Jan Hubicka  <jh@suse.cz>\n \n 2000-11-27  Neil Booth  <neilb@earthling.net>\n \n-        * c-lex.c (cb_enter_file, cb_leave_file, cb_rename_file):\n-        Combine into the new function cb_change_file.\n-        (init_c_lex): Update.\n-        * cppfiles.c (stack_include_file): Use _cpp_do_file_change.\n-        (cpp_syshdr_flags): Delete.\n-        * cpphash.h (_cpp_do_file_change): New prototype.\n-        Move struct cpp_buffer here from...\n-        * cpplib.h (struct cpp_buffer): ... here.\n-        (enum cpp_fc_reason, struct cpp_file_loc,\n-        struct_cpp_file_change, change_file): New.\n-        (enter_file, leave_file, rename_file, cpp_syshdr_flags): Delete.\n-        * cpplib.c (do_line): Update for new cb_change_file callback.\n-        (_cpp_do_file_change): New function.\n-        (_cpp_pop_buffer): Update to use it.\n-        * cppmain.c (move_printer): Delete.\n-        (main): Set up single callback cb_change_file.\n-        (cb_enter_file, cb_leave_file, cb_rename_file): Delete.\n-        (cb_change_file): New.\n-        * fix-header.c (cur_file, cb_change_file): New.\n-        (recognized_function, read_scan_file): Update.\n-        * scan-decls.c (scan_decls): Update.\n-        * scan.h (recognized_function): Update prototype.\n+\t* c-lex.c (cb_enter_file, cb_leave_file, cb_rename_file):\n+\tCombine into the new function cb_change_file.\n+\t(init_c_lex): Update.\n+\t* cppfiles.c (stack_include_file): Use _cpp_do_file_change.\n+\t(cpp_syshdr_flags): Delete.\n+\t* cpphash.h (_cpp_do_file_change): New prototype.\n+\tMove struct cpp_buffer here from...\n+\t* cpplib.h (struct cpp_buffer): ... here.\n+\t(enum cpp_fc_reason, struct cpp_file_loc,\n+\tstruct_cpp_file_change, change_file): New.\n+\t(enter_file, leave_file, rename_file, cpp_syshdr_flags): Delete.\n+\t* cpplib.c (do_line): Update for new cb_change_file callback.\n+\t(_cpp_do_file_change): New function.\n+\t(_cpp_pop_buffer): Update to use it.\n+\t* cppmain.c (move_printer): Delete.\n+\t(main): Set up single callback cb_change_file.\n+\t(cb_enter_file, cb_leave_file, cb_rename_file): Delete.\n+\t(cb_change_file): New.\n+\t* fix-header.c (cur_file, cb_change_file): New.\n+\t(recognized_function, read_scan_file): Update.\n+\t* scan-decls.c (scan_decls): Update.\n+\t* scan.h (recognized_function): Update prototype.\n \n 2000-11-26  Mark Mitchell  <mark@codesourcery.com>\n \n@@ -403,29 +403,29 @@ Sun Nov 26 10:02:37 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n 2000-11-25  Neil Booth  <neilb@earthling.net>\n \n-        * c-common.c: Remove USE_CPPLIB conditional inclusions.\n-        * c-common.h: Similarly.\n-        * c-decl.c: Similarly.\n+\t* c-common.c: Remove USE_CPPLIB conditional inclusions.\n+\t* c-common.h: Similarly.\n+\t* c-decl.c: Similarly.\n \t* c-lang.c: Similarly.\n \t* c-lex.c: Similarly.\n-        * c-parse.in: Similarly.\n-        * c-pragma.c: Similarly.\n-        * c-pragma.h: Similarly.\n-        * gcc.c: Similarly.\n-        * toplev.c: Similarly.\n-        * cp/cp-tree.h: Similarly.\n-        * cp/decl2.c: Similarly.\n-        * cp/lang-specs.h: Similarly.\n-        * cp/lex.c: Similarly.\n-        * cp/lex.h: Similarly.\n-        * cp/spew.c: Similarly.\n-        * java/lang-options.h: Similarly.\n-        * objc/lang-specs.h: Similarly.\n-        * objc/objc-act.c: Similarly.\n-\n-        * configure.in: Remove configure option.\n-        * config.in: Regenerate.\n-        * configure: Regenerate.\n+\t* c-parse.in: Similarly.\n+\t* c-pragma.c: Similarly.\n+\t* c-pragma.h: Similarly.\n+\t* gcc.c: Similarly.\n+\t* toplev.c: Similarly.\n+\t* cp/cp-tree.h: Similarly.\n+\t* cp/decl2.c: Similarly.\n+\t* cp/lang-specs.h: Similarly.\n+\t* cp/lex.c: Similarly.\n+\t* cp/lex.h: Similarly.\n+\t* cp/spew.c: Similarly.\n+\t* java/lang-options.h: Similarly.\n+\t* objc/lang-specs.h: Similarly.\n+\t* objc/objc-act.c: Similarly.\n+\n+\t* configure.in: Remove configure option.\n+\t* config.in: Regenerate.\n+\t* configure: Regenerate.\n \n 2000-11-25  Richard Henderson  <rth@redhat.com>\n "}]}