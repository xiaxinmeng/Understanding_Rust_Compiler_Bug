{"sha": "1b51f038cf027fdc1bf00240cacee59dd5cbe458", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI1MWYwMzhjZjAyN2ZkYzFiZjAwMjQwY2FjZWU1OWRkNWNiZTQ1OA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2021-06-04T15:51:05Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2021-06-04T15:52:06Z"}, "message": "i386: Convert a couple of predicates to use match_code RTXes.\n\nNo functional changes.\n\n2021-06-04  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\ngcc/\n\t* config/i386/predicates.md (GOT_memory_operand):\n\tImplement using match_code RTXes.\n\t(GOT32_symbol_operand): Ditto.", "tree": {"sha": "7ae6ec16a265eebc42824bbfafd89b82e43d2087", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7ae6ec16a265eebc42824bbfafd89b82e43d2087"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b51f038cf027fdc1bf00240cacee59dd5cbe458", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b51f038cf027fdc1bf00240cacee59dd5cbe458", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b51f038cf027fdc1bf00240cacee59dd5cbe458", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b51f038cf027fdc1bf00240cacee59dd5cbe458/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4facf2bf5b7b32f444da864306b5c11e14c15bcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4facf2bf5b7b32f444da864306b5c11e14c15bcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4facf2bf5b7b32f444da864306b5c11e14c15bcf"}], "stats": {"total": 17, "additions": 7, "deletions": 10}, "files": [{"sha": "d2f5f15d971ab49187beba918931641e4f28bc12", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b51f038cf027fdc1bf00240cacee59dd5cbe458/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b51f038cf027fdc1bf00240cacee59dd5cbe458/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=1b51f038cf027fdc1bf00240cacee59dd5cbe458", "patch": "@@ -734,13 +734,10 @@\n \n ;; Return true if OP is a GOT memory operand.\n (define_predicate \"GOT_memory_operand\"\n-  (match_operand 0 \"memory_operand\")\n-{\n-  op = XEXP (op, 0);\n-  return (GET_CODE (op) == CONST\n-\t  && GET_CODE (XEXP (op, 0)) == UNSPEC\n-\t  && XINT (XEXP (op, 0), 1) == UNSPEC_GOTPCREL);\n-})\n+  (and (match_operand 0 \"memory_operand\")\n+       (match_code \"const\" \"0\")\n+       (match_code \"unspec\" \"00\")\n+       (match_test \"XINT (XEXP (XEXP (op, 0), 0), 1) == UNSPEC_GOTPCREL\")))\n \n ;; Test for a valid operand for a call instruction.\n ;; Allow constant call address operands in Pmode only.\n@@ -767,9 +764,9 @@\n \n ;; Return true if OP is a 32-bit GOT symbol operand.\n (define_predicate \"GOT32_symbol_operand\"\n-  (match_test \"GET_CODE (op) == CONST\n-               && GET_CODE (XEXP (op, 0)) == UNSPEC\n-               && XINT (XEXP (op, 0), 1) == UNSPEC_GOT\"))\n+  (and (match_code \"const\")\n+       (match_code \"unspec\" \"0\")\n+       (match_test \"XINT (XEXP (op, 0), 1) == UNSPEC_GOT\")))\n \n ;; Match exactly zero.\n (define_predicate \"const0_operand\""}]}