{"sha": "dd54ca5649175043793ec22ee6fd568b004bb83f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ1NGNhNTY0OTE3NTA0Mzc5M2VjMjJlZTZmZDU2OGIwMDRiYjgzZg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-05-10T20:20:18Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-05-10T20:20:18Z"}, "message": "Have other unify failure functions call unify_invalid.\n\n\t* pt.c (unify_parameter_deduction_failure, unify_cv_qual_mismatch)\n\t(unify_type_mismatch, unify_parameter_pack_mismatch)\n\t(unify_ptrmem_cst_mismatch, unify_expression_unequal)\n\t(unify_parameter_pack_inconsistent, unify_inconsistency)\n\t(unify_vla_arg, unify_method_type_error, unify_arity)\n\t(unify_arg_conversion, unify_no_common_base)\n\t(unify_inconsistent_template_template_parameters)\n\t(unify_template_deduction_failure)\n\t(unify_template_argument_mismatch)\n\t(unify_overload_resolution_failure): Call unify_invalid.\n\nFrom-SVN: r247857", "tree": {"sha": "c5f0e37a8fb1b1a1192c8fefc5cca372db364bdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5f0e37a8fb1b1a1192c8fefc5cca372db364bdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd54ca5649175043793ec22ee6fd568b004bb83f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd54ca5649175043793ec22ee6fd568b004bb83f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd54ca5649175043793ec22ee6fd568b004bb83f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd54ca5649175043793ec22ee6fd568b004bb83f/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "00e08b0f4802855cf1516e67faea5ab385acafd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00e08b0f4802855cf1516e67faea5ab385acafd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00e08b0f4802855cf1516e67faea5ab385acafd5"}], "stats": {"total": 58, "additions": 36, "deletions": 22}, "files": [{"sha": "f29878fb5c847f26ee7e1656740bf36a81933fdf", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd54ca5649175043793ec22ee6fd568b004bb83f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd54ca5649175043793ec22ee6fd568b004bb83f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=dd54ca5649175043793ec22ee6fd568b004bb83f", "patch": "@@ -1,5 +1,16 @@\n 2017-05-10  Jason Merrill  <jason@redhat.com>\n \n+\t* pt.c (unify_parameter_deduction_failure, unify_cv_qual_mismatch)\n+\t(unify_type_mismatch, unify_parameter_pack_mismatch)\n+\t(unify_ptrmem_cst_mismatch, unify_expression_unequal)\n+\t(unify_parameter_pack_inconsistent, unify_inconsistency)\n+\t(unify_vla_arg, unify_method_type_error, unify_arity)\n+\t(unify_arg_conversion, unify_no_common_base)\n+\t(unify_inconsistent_template_template_parameters)\n+\t(unify_template_deduction_failure)\n+\t(unify_template_argument_mismatch)\n+\t(unify_overload_resolution_failure): Call unify_invalid.\n+\n \tCWG 1847 - Clarifying compatibility during partial ordering\n \t* pt.c (more_specialized_fn): No order between two non-deducible\n \tparameters."}, {"sha": "f80d7a5adcf6638bc15d5bf1e6bf6d346e62d109", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 25, "deletions": 22, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd54ca5649175043793ec22ee6fd568b004bb83f/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd54ca5649175043793ec22ee6fd568b004bb83f/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=dd54ca5649175043793ec22ee6fd568b004bb83f", "patch": "@@ -6105,19 +6105,22 @@ unify_success (bool /*explain_p*/)\n   return 0;\n }\n \n+/* Other failure functions should call this one, to provide a single function\n+   for setting a breakpoint on.  */\n+\n static int\n-unify_parameter_deduction_failure (bool explain_p, tree parm)\n+unify_invalid (bool /*explain_p*/)\n {\n-  if (explain_p)\n-    inform (input_location,\n-\t    \"  couldn't deduce template parameter %qD\", parm);\n   return 1;\n }\n \n static int\n-unify_invalid (bool /*explain_p*/)\n+unify_parameter_deduction_failure (bool explain_p, tree parm)\n {\n-  return 1;\n+  if (explain_p)\n+    inform (input_location,\n+\t    \"  couldn't deduce template parameter %qD\", parm);\n+  return unify_invalid (explain_p);\n }\n \n static int\n@@ -6127,15 +6130,15 @@ unify_cv_qual_mismatch (bool explain_p, tree parm, tree arg)\n     inform (input_location,\n \t    \"  types %qT and %qT have incompatible cv-qualifiers\",\n \t    parm, arg);\n-  return 1;\n+  return unify_invalid (explain_p);\n }\n \n static int\n unify_type_mismatch (bool explain_p, tree parm, tree arg)\n {\n   if (explain_p)\n     inform (input_location, \"  mismatched types %qT and %qT\", parm, arg);\n-  return 1;\n+  return unify_invalid (explain_p);\n }\n \n static int\n@@ -6146,7 +6149,7 @@ unify_parameter_pack_mismatch (bool explain_p, tree parm, tree arg)\n \t    \"  template parameter %qD is not a parameter pack, but \"\n \t    \"argument %qD is\",\n \t    parm, arg);\n-  return 1;\n+  return unify_invalid (explain_p);\n }\n \n static int\n@@ -6157,15 +6160,15 @@ unify_ptrmem_cst_mismatch (bool explain_p, tree parm, tree arg)\n \t    \"  template argument %qE does not match \"\n \t    \"pointer-to-member constant %qE\",\n \t    arg, parm);\n-  return 1;\n+  return unify_invalid (explain_p);\n }\n \n static int\n unify_expression_unequal (bool explain_p, tree parm, tree arg)\n {\n   if (explain_p)\n     inform (input_location, \"  %qE is not equivalent to %qE\", parm, arg);\n-  return 1;\n+  return unify_invalid (explain_p);\n }\n \n static int\n@@ -6175,7 +6178,7 @@ unify_parameter_pack_inconsistent (bool explain_p, tree old_arg, tree new_arg)\n     inform (input_location,\n \t    \"  inconsistent parameter pack deduction with %qT and %qT\",\n \t    old_arg, new_arg);\n-  return 1;\n+  return unify_invalid (explain_p);\n }\n \n static int\n@@ -6192,7 +6195,7 @@ unify_inconsistency (bool explain_p, tree parm, tree first, tree second)\n \t\t\"  deduced conflicting values for non-type parameter \"\n \t\t\"%qE (%qE and %qE)\", parm, first, second);\n     }\n-  return 1;\n+  return unify_invalid (explain_p);\n }\n \n static int\n@@ -6203,7 +6206,7 @@ unify_vla_arg (bool explain_p, tree arg)\n \t    \"  variable-sized array type %qT is not \"\n \t    \"a valid template argument\",\n \t    arg);\n-  return 1;\n+  return unify_invalid (explain_p);\n }\n \n static int\n@@ -6213,7 +6216,7 @@ unify_method_type_error (bool explain_p, tree arg)\n     inform (input_location,\n \t    \"  member function type %qT is not a valid template argument\",\n \t    arg);\n-  return 1;\n+  return unify_invalid (explain_p);\n }\n \n static int\n@@ -6232,7 +6235,7 @@ unify_arity (bool explain_p, int have, int wanted, bool least_p = false)\n \t\t  \"  candidate expects %d arguments, %d provided\",\n \t\t  wanted, have);\n     }\n-  return 1;\n+  return unify_invalid (explain_p);\n }\n \n static int\n@@ -6256,7 +6259,7 @@ unify_arg_conversion (bool explain_p, tree to_type,\n     inform (EXPR_LOC_OR_LOC (arg, input_location),\n \t    \"  cannot convert %qE (type %qT) to type %qT\",\n \t    arg, from_type, to_type);\n-  return 1;\n+  return unify_invalid (explain_p);\n }\n \n static int\n@@ -6274,7 +6277,7 @@ unify_no_common_base (bool explain_p, enum template_base_result r,\n \tinform (input_location, \"  %qT is not derived from %qT\", arg, parm);\n \tbreak;\n       }\n-  return 1;\n+  return unify_invalid (explain_p);\n }\n \n static int\n@@ -6284,7 +6287,7 @@ unify_inconsistent_template_template_parameters (bool explain_p)\n     inform (input_location,\n \t    \"  template parameters of a template template argument are \"\n \t    \"inconsistent with other deduced template arguments\");\n-  return 1;\n+  return unify_invalid (explain_p);\n }\n \n static int\n@@ -6294,7 +6297,7 @@ unify_template_deduction_failure (bool explain_p, tree parm, tree arg)\n     inform (input_location,\n \t    \"  can't deduce a template for %qT from non-template type %qT\",\n \t    parm, arg);\n-  return 1;\n+  return unify_invalid (explain_p);\n }\n \n static int\n@@ -6303,7 +6306,7 @@ unify_template_argument_mismatch (bool explain_p, tree parm, tree arg)\n   if (explain_p)\n     inform (input_location,\n \t    \"  template argument %qE does not match %qE\", arg, parm);\n-  return 1;\n+  return unify_invalid (explain_p);\n }\n \n static int\n@@ -6313,7 +6316,7 @@ unify_overload_resolution_failure (bool explain_p, tree arg)\n     inform (input_location,\n \t    \"  could not resolve address from overloaded function %qE\",\n \t    arg);\n-  return 1;\n+  return unify_invalid (explain_p);\n }\n \n /* Attempt to convert the non-type template parameter EXPR to the"}]}