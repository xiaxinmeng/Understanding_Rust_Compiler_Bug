{"sha": "47a84c97bf074ddbf8299e2bc05e71d2b4edd54d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDdhODRjOTdiZjA3NGRkYmY4Mjk5ZTJiYzA1ZTcxZDJiNGVkZDU0ZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-02-03T00:54:47Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-02-03T00:54:47Z"}, "message": "Prototypes for new functions.\n\n(__objc_runtime_mutex): Eliminate leading underscore from name of objc\nmutex and thread structures.\n\nFrom-SVN: r13597", "tree": {"sha": "dbe48d3e5e78dc4ada277694485859416c8bcaeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbe48d3e5e78dc4ada277694485859416c8bcaeb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47a84c97bf074ddbf8299e2bc05e71d2b4edd54d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47a84c97bf074ddbf8299e2bc05e71d2b4edd54d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47a84c97bf074ddbf8299e2bc05e71d2b4edd54d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47a84c97bf074ddbf8299e2bc05e71d2b4edd54d/comments", "author": null, "committer": null, "parents": [{"sha": "e64f9262e6e27a79ea5f3ce8dcee0ce4ce4af268", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e64f9262e6e27a79ea5f3ce8dcee0ce4ce4af268", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e64f9262e6e27a79ea5f3ce8dcee0ce4ce4af268"}], "stats": {"total": 33, "additions": 20, "deletions": 13}, "files": [{"sha": "80331fe692ae380123e6f0ac5463d306fd834d4f", "filename": "gcc/objc/thr.h", "status": "modified", "additions": 20, "deletions": 13, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47a84c97bf074ddbf8299e2bc05e71d2b4edd54d/gcc%2Fobjc%2Fthr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47a84c97bf074ddbf8299e2bc05e71d2b4edd54d/gcc%2Fobjc%2Fthr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fthr.h?ref=47a84c97bf074ddbf8299e2bc05e71d2b4edd54d", "patch": "@@ -1,5 +1,5 @@\n /* Thread and mutex controls for Objective C.\n-   Copyright (C) 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Galen C. Hunt (gchunt@cs.rochester.edu)\n \n This file is part of GNU CC.\n@@ -53,27 +53,34 @@ extern int __objc_thread_exit_status;      /* Global exit status.   */\n #define OBJC_THREAD_BACKGROUND_PRIORITY         1\n #define OBJC_THREAD_LOW_PRIORITY                0\n \n-typedef struct _objc_mutex *_objc_mutex_t;\n-typedef void * _objc_thread_t;\n+typedef void * objc_thread_t;\n+typedef struct objc_mutex *objc_mutex_t;\n+typedef struct objc_condition *objc_condition_t;\n \n-_objc_mutex_t objc_mutex_allocate(void);\n-int     objc_mutex_deallocate(_objc_mutex_t mutex);\n-int     objc_mutex_lock(_objc_mutex_t mutex);\n-int     objc_mutex_unlock(_objc_mutex_t mutex);\n-int     objc_mutex_trylock(_objc_mutex_t mutex);\n+objc_mutex_t objc_mutex_allocate(void);\n+int     objc_mutex_deallocate(objc_mutex_t mutex);\n+int     objc_mutex_lock(objc_mutex_t mutex);\n+int     objc_mutex_unlock(objc_mutex_t mutex);\n+int     objc_mutex_trylock(objc_mutex_t mutex);\n \n-_objc_thread_t objc_thread_create(void (*func)(void *arg), void *arg);\n+objc_condition_t objc_condition_allocate(void);\n+int     objc_condition_deallocate(objc_condition_t condition);\n+int     objc_condition_wait(objc_condition_t condition, objc_mutex_t mutex);\n+int     objc_condition_signal(objc_condition_t condition);\n+int     objc_condition_broadcast(objc_condition_t condition);\n+\n+objc_thread_t objc_thread_create(void (*func)(void *arg), void *arg);\n void    objc_thread_yield(void);\n int     objc_thread_exit(void);\n int     objc_thread_set_priority(int priority);\n int     objc_thread_get_priority(void);\n void *  objc_thread_get_data(void);\n int     objc_thread_set_data(void *value);\n-_objc_thread_t objc_thread_id(void);\n+objc_thread_t objc_thread_id(void);\n \n-_objc_thread_t objc_thread_detach(SEL selector, id object, id argument);\n-int     objc_mutex_lock_x(_objc_mutex_t mutex, const char *f, int l);\n-int     objc_mutex_unlock_x(_objc_mutex_t mutex, const char *f, int l);\n+objc_thread_t objc_thread_detach(SEL selector, id object, id argument);\n+int     objc_mutex_lock_x(objc_mutex_t mutex, const char *f, int l);\n+int     objc_mutex_unlock_x(objc_mutex_t mutex, const char *f, int l);\n \n /*\n   Use this to set the hook function that will be called when the "}]}