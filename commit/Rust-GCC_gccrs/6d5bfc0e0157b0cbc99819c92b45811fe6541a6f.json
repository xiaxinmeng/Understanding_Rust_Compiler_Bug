{"sha": "6d5bfc0e0157b0cbc99819c92b45811fe6541a6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQ1YmZjMGUwMTU3YjBjYmM5OTgxOWM5MmI0NTgxMWZlNjU0MWE2Zg==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2014-06-13T11:49:27Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2014-06-13T11:49:27Z"}, "message": "gcc.dg/vect/vect-singleton_1.c: Remove duplicate of test body.\n\nFrom-SVN: r211635", "tree": {"sha": "3c82f9c625398afcdfb998d995a9c836a0fb2fc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c82f9c625398afcdfb998d995a9c836a0fb2fc9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d5bfc0e0157b0cbc99819c92b45811fe6541a6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d5bfc0e0157b0cbc99819c92b45811fe6541a6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d5bfc0e0157b0cbc99819c92b45811fe6541a6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d5bfc0e0157b0cbc99819c92b45811fe6541a6f/comments", "author": null, "committer": null, "parents": [{"sha": "783da331c1613fee3f7214d66034fb9c9f787f71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/783da331c1613fee3f7214d66034fb9c9f787f71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/783da331c1613fee3f7214d66034fb9c9f787f71"}], "stats": {"total": 42, "additions": 4, "deletions": 38}, "files": [{"sha": "2cca7cda6edeefcea81518ddde3279d2686248cf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d5bfc0e0157b0cbc99819c92b45811fe6541a6f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d5bfc0e0157b0cbc99819c92b45811fe6541a6f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6d5bfc0e0157b0cbc99819c92b45811fe6541a6f", "patch": "@@ -1,3 +1,7 @@\n+2014-06-13  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* gcc.dg/vect/vect-singleton_1.c: Remove duplicate of test body.\n+\n 2014-06-13  Richard Biener  <rguenther@suse.de>\n \n \t* c-c++-common/pr46562-2.c: Adjust."}, {"sha": "6c2ff49cdab358245bfc3f5994724bb878c68d61", "filename": "gcc/testsuite/gcc.dg/vect/vect-singleton_1.c", "status": "modified", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d5bfc0e0157b0cbc99819c92b45811fe6541a6f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-singleton_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d5bfc0e0157b0cbc99819c92b45811fe6541a6f/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-singleton_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-singleton_1.c?ref=6d5bfc0e0157b0cbc99819c92b45811fe6541a6f", "patch": "@@ -36,41 +36,3 @@ TEST (int, intx1_t, i)\n TEST (short, int16x1_t, s16)\n \n TEST (char, int8x1_t, s8)\n-/* PR target/59843 ICE on function taking/returning vector of one float64_t.  */\n-\n-/* { dg-do compile } */\n-/* { dg-options \"-Warray-bounds -O2 -fno-inline -std=c99\" } */\n-\n-#define TEST(BASETYPE, VECTYPE, SUFFIX)\t\t\t\t\t     \\\n-  typedef BASETYPE VECTYPE\t\t\t\t\t\t     \\\n-      __attribute__ ((__vector_size__ (sizeof (BASETYPE))));\t\t     \\\n-  VECTYPE\t\t\t\t\t\t\t\t     \\\n-  test_vadd_##SUFFIX (VECTYPE a, VECTYPE b)\t\t\t\t     \\\n-  {\t\t\t\t\t\t\t\t\t     \\\n-    return a + b;\t\t\t\t\t\t\t     \\\n-  }\t\t\t\t\t\t\t\t\t     \\\n-\t\t\t\t\t\t\t\t\t     \\\n-  void\t\t\t\t\t\t\t\t\t     \\\n-  test_##SUFFIX (BASETYPE val)\t\t\t\t\t\t     \\\n-  {\t\t\t\t\t\t\t\t\t     \\\n-    VECTYPE var = { val };\t\t\t\t\t\t     \\\n-    BASETYPE v0 = var[0];\t\t\t\t\t\t     \\\n-    BASETYPE v1 = var[1]; /* { dg-warning \"index value is out of bound\" } */ \\\n-  }\n-\n-TEST (double, float64x1_t, f64)\n-\n-/* Original bug was for above type;\n-   in a nod to completeness, test other types too.  */\n-\n-TEST (long long, int64x1_t, s64)\n-\n-TEST (float, float32x1_t, f32)\n-\n-TEST (long, longx1_t, l)\n-\n-TEST (int, intx1_t, i)\n-\n-TEST (short, int16x1_t, s16)\n-\n-TEST (char, int8x1_t, s8)"}]}