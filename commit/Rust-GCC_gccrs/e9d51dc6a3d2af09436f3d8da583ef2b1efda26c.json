{"sha": "e9d51dc6a3d2af09436f3d8da583ef2b1efda26c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTlkNTFkYzZhM2QyYWYwOTQzNmYzZDhkYTU4M2VmMmIxZWZkYTI2Yw==", "commit": {"author": {"name": "Xinliang David Li", "email": "davidxl@google.com", "date": "2009-03-27T17:20:51Z"}, "committer": {"name": "Xinliang David Li", "email": "davidxl@gcc.gnu.org", "date": "2009-03-27T17:20:51Z"}, "message": "Fix for PR39557\n\nFrom-SVN: r145119", "tree": {"sha": "ff1dd15ceb3513ea389492fbf04e3b7e9ec63fa0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff1dd15ceb3513ea389492fbf04e3b7e9ec63fa0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9d51dc6a3d2af09436f3d8da583ef2b1efda26c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9d51dc6a3d2af09436f3d8da583ef2b1efda26c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9d51dc6a3d2af09436f3d8da583ef2b1efda26c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9d51dc6a3d2af09436f3d8da583ef2b1efda26c/comments", "author": {"login": "vns-mn", "id": 57157229, "node_id": "MDQ6VXNlcjU3MTU3MjI5", "avatar_url": "https://avatars.githubusercontent.com/u/57157229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vns-mn", "html_url": "https://github.com/vns-mn", "followers_url": "https://api.github.com/users/vns-mn/followers", "following_url": "https://api.github.com/users/vns-mn/following{/other_user}", "gists_url": "https://api.github.com/users/vns-mn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vns-mn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vns-mn/subscriptions", "organizations_url": "https://api.github.com/users/vns-mn/orgs", "repos_url": "https://api.github.com/users/vns-mn/repos", "events_url": "https://api.github.com/users/vns-mn/events{/privacy}", "received_events_url": "https://api.github.com/users/vns-mn/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4577cea1cde9b4c1c9d92d63920a3bd8ff81c2c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4577cea1cde9b4c1c9d92d63920a3bd8ff81c2c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4577cea1cde9b4c1c9d92d63920a3bd8ff81c2c4"}], "stats": {"total": 67, "additions": 67, "deletions": 0}, "files": [{"sha": "9ca01a2b653ec1c32d8eae84922ae2db58482234", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9d51dc6a3d2af09436f3d8da583ef2b1efda26c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9d51dc6a3d2af09436f3d8da583ef2b1efda26c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e9d51dc6a3d2af09436f3d8da583ef2b1efda26c", "patch": "@@ -1,3 +1,8 @@\n+2009-03-27  Xinliang David Li  <davidxl@google.com>\n+\n+\tPR tree-optimization/39557\n+\t* tree-ssa.c (warn_uninitialized_vars): free postdom info.\n+\n 2009-03-27  Xinliang David Li  <davidxl@google.com>\n \n \tPR tree-optimization/39548"}, {"sha": "38567f69fbf52ba26f6c101e42007b9ff06ec292", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9d51dc6a3d2af09436f3d8da583ef2b1efda26c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9d51dc6a3d2af09436f3d8da583ef2b1efda26c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e9d51dc6a3d2af09436f3d8da583ef2b1efda26c", "patch": "@@ -1,3 +1,8 @@\n+2009-03-27  Xinliang David Li  <davidxl@google.com>\n+\n+\tPR tree-optimization/39557\n+\t* g++.dg/tree-ssa/dom-invalid.C: New test.\n+\n 2009-03-27  Xinliang David Li  <davidxl@google.com>\n \n \tPR tree-optimization/39548"}, {"sha": "5513d3650c6803ee8cebb6349ab312e99a8d2505", "filename": "gcc/testsuite/g++.dg/tree-ssa/dom-invalid.C", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9d51dc6a3d2af09436f3d8da583ef2b1efda26c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fdom-invalid.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9d51dc6a3d2af09436f3d8da583ef2b1efda26c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fdom-invalid.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fdom-invalid.C?ref=e9d51dc6a3d2af09436f3d8da583ef2b1efda26c", "patch": "@@ -0,0 +1,52 @@\n+// PR tree-optimization/39557\n+// invalid post-dom info leads to infinite loop\n+// { dg-do run }\n+// { dg-options \"-Wall -fno-exceptions -O2 -fprofile-use -fno-rtti\" }\n+\n+struct C\n+{\n+ virtual const char *bar () const;\n+};\n+\n+struct D\n+{\n+ D () : d1 (0) { }\n+ C *d2[4];\n+ int d1;\n+ inline const C & baz (int i) const { return *d2[i]; }\n+};\n+\n+struct E\n+{\n+ unsigned char e1[2];\n+ D e2;\n+ bool foo () const { return (e1[1] & 1) != 0; }\n+ virtual const char *bar () const __attribute__ ((noinline));\n+};\n+\n+const char *\n+C::bar () const\n+{\n+ return 0;\n+}\n+\n+C c;\n+\n+const char *\n+E::bar () const\n+{\n+ const char *e = __null;\n+ if (foo () && (e = c.C::bar ()))\n+   return e;\n+ for (int i = 0, n = e2.d1; i < n; i++)\n+   if ((e = e2.baz (i).C::bar ()))\n+     return e;\n+ return e;\n+}\n+\n+int\n+main ()\n+{\n+ E e;\n+ e.bar ();\n+} // { dg-message  \"note: file\" \"\" }"}, {"sha": "8be2961f89538b757fa6bd985e24c59cd614c82b", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9d51dc6a3d2af09436f3d8da583ef2b1efda26c/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9d51dc6a3d2af09436f3d8da583ef2b1efda26c/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=e9d51dc6a3d2af09436f3d8da583ef2b1efda26c", "patch": "@@ -1589,6 +1589,11 @@ warn_uninitialized_vars (bool warn_possibly_uninitialized)\n \t  walk_gimple_op (gsi_stmt (gsi), warn_uninitialized_var, &wi);\n \t}\n     }\n+\n+  /* Post-dominator information can not be reliably updated. Free it\n+     after the use.  */\n+\n+  free_dominance_info (CDI_POST_DOMINATORS);\n   return 0;\n }\n "}]}