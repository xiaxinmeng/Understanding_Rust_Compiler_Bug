{"sha": "18184fdd765d1a8d98b573cd5f1c11284d965451", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgxODRmZGQ3NjVkMWE4ZDk4YjU3M2NkNWYxYzExMjg0ZDk2NTQ1MQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2019-05-15T15:15:44Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2019-05-15T15:15:44Z"}, "message": "i386: Emulate MMX V4HI smaxmin/V8QI umaxmin with SSE\n\nEmulate MMX V4HI smaxmin/V8QI umaxmin with SSE.  Only SSE register source\noperand is allowed.\n\n\tPR target/89021\n\t* config/i386/mmx.md (mmx_<code>v4hi3): Also check TARGET_MMX\n\tand TARGET_MMX_WITH_SSE.\n\t(mmx_<code>v8qi3): Likewise.\n\t(smaxmin:<code>v4hi3): New.\n\t(umaxmin:<code>v8qi3): Likewise.\n\t(smaxmin:*mmx_<code>v4hi3): Add SSE emulation.\n\t(umaxmin:*mmx_<code>v8qi3): Likewise.\n\nFrom-SVN: r271231", "tree": {"sha": "4eb04b8b357624dbbd29b067436c50fe35834e6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4eb04b8b357624dbbd29b067436c50fe35834e6b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18184fdd765d1a8d98b573cd5f1c11284d965451", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18184fdd765d1a8d98b573cd5f1c11284d965451", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18184fdd765d1a8d98b573cd5f1c11284d965451", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18184fdd765d1a8d98b573cd5f1c11284d965451/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "42500d835522f0858fb899b17d9b9ffb9efa71d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42500d835522f0858fb899b17d9b9ffb9efa71d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42500d835522f0858fb899b17d9b9ffb9efa71d9"}], "stats": {"total": 79, "additions": 59, "deletions": 20}, "files": [{"sha": "666c911bfd368c7e08114d3ab27cb926e8153cf3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18184fdd765d1a8d98b573cd5f1c11284d965451/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18184fdd765d1a8d98b573cd5f1c11284d965451/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=18184fdd765d1a8d98b573cd5f1c11284d965451", "patch": "@@ -1,3 +1,14 @@\n+2019-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/89021\n+\t* config/i386/mmx.md (mmx_<code>v4hi3): Also check TARGET_MMX\n+\tand TARGET_MMX_WITH_SSE.\n+\t(mmx_<code>v8qi3): Likewise.\n+\t(smaxmin:<code>v4hi3): New.\n+\t(umaxmin:<code>v8qi3): Likewise.\n+\t(smaxmin:*mmx_<code>v4hi3): Add SSE emulation.\n+\t(umaxmin:*mmx_<code>v8qi3): Likewise.\n+\n 2019-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/89021"}, {"sha": "9885369df81279817dad724dab5252d03478a25e", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 48, "deletions": 20, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18184fdd765d1a8d98b573cd5f1c11284d965451/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18184fdd765d1a8d98b573cd5f1c11284d965451/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=18184fdd765d1a8d98b573cd5f1c11284d965451", "patch": "@@ -948,40 +948,68 @@\n (define_expand \"mmx_<code>v4hi3\"\n   [(set (match_operand:V4HI 0 \"register_operand\")\n         (smaxmin:V4HI\n-\t  (match_operand:V4HI 1 \"nonimmediate_operand\")\n-\t  (match_operand:V4HI 2 \"nonimmediate_operand\")))]\n-  \"TARGET_SSE || TARGET_3DNOW_A\"\n+\t  (match_operand:V4HI 1 \"register_mmxmem_operand\")\n+\t  (match_operand:V4HI 2 \"register_mmxmem_operand\")))]\n+  \"(TARGET_MMX || TARGET_MMX_WITH_SSE)\n+   && (TARGET_SSE || TARGET_3DNOW_A)\"\n+  \"ix86_fixup_binary_operands_no_copy (<CODE>, V4HImode, operands);\")\n+\n+(define_expand \"<code>v4hi3\"\n+  [(set (match_operand:V4HI 0 \"register_operand\")\n+        (smaxmin:V4HI\n+\t  (match_operand:V4HI 1 \"register_operand\")\n+\t  (match_operand:V4HI 2 \"register_operand\")))]\n+  \"TARGET_MMX_WITH_SSE\"\n   \"ix86_fixup_binary_operands_no_copy (<CODE>, V4HImode, operands);\")\n \n (define_insn \"*mmx_<code>v4hi3\"\n-  [(set (match_operand:V4HI 0 \"register_operand\" \"=y\")\n+  [(set (match_operand:V4HI 0 \"register_operand\" \"=y,x,Yv\")\n         (smaxmin:V4HI\n-\t  (match_operand:V4HI 1 \"nonimmediate_operand\" \"%0\")\n-\t  (match_operand:V4HI 2 \"nonimmediate_operand\" \"ym\")))]\n-  \"(TARGET_SSE || TARGET_3DNOW_A)\n+\t  (match_operand:V4HI 1 \"register_mmxmem_operand\" \"%0,0,Yv\")\n+\t  (match_operand:V4HI 2 \"register_mmxmem_operand\" \"ym,x,Yv\")))]\n+  \"(TARGET_MMX || TARGET_MMX_WITH_SSE)\n+   && (TARGET_SSE || TARGET_3DNOW_A)\n    && ix86_binary_operator_ok (<CODE>, V4HImode, operands)\"\n-  \"p<maxmin_int>w\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"mmxadd\")\n-   (set_attr \"mode\" \"DI\")])\n+  \"@\n+   p<maxmin_int>w\\t{%2, %0|%0, %2}\n+   p<maxmin_int>w\\t{%2, %0|%0, %2}\n+   vp<maxmin_int>w\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+   (set_attr \"type\" \"mmxadd,sseiadd,sseiadd\")\n+   (set_attr \"mode\" \"DI,TI,TI\")])\n \n (define_expand \"mmx_<code>v8qi3\"\n   [(set (match_operand:V8QI 0 \"register_operand\")\n         (umaxmin:V8QI\n-\t  (match_operand:V8QI 1 \"nonimmediate_operand\")\n-\t  (match_operand:V8QI 2 \"nonimmediate_operand\")))]\n-  \"TARGET_SSE || TARGET_3DNOW_A\"\n+\t  (match_operand:V8QI 1 \"register_mmxmem_operand\")\n+\t  (match_operand:V8QI 2 \"register_mmxmem_operand\")))]\n+  \"(TARGET_MMX || TARGET_MMX_WITH_SSE)\n+   && (TARGET_SSE || TARGET_3DNOW_A)\"\n+  \"ix86_fixup_binary_operands_no_copy (<CODE>, V8QImode, operands);\")\n+\n+(define_expand \"<code>v8qi3\"\n+  [(set (match_operand:V8QI 0 \"register_operand\")\n+        (umaxmin:V8QI\n+\t  (match_operand:V8QI 1 \"register_operand\")\n+\t  (match_operand:V8QI 2 \"register_operand\")))]\n+  \"TARGET_MMX_WITH_SSE\"\n   \"ix86_fixup_binary_operands_no_copy (<CODE>, V8QImode, operands);\")\n \n (define_insn \"*mmx_<code>v8qi3\"\n-  [(set (match_operand:V8QI 0 \"register_operand\" \"=y\")\n+  [(set (match_operand:V8QI 0 \"register_operand\" \"=y,x,Yv\")\n         (umaxmin:V8QI\n-\t  (match_operand:V8QI 1 \"nonimmediate_operand\" \"%0\")\n-\t  (match_operand:V8QI 2 \"nonimmediate_operand\" \"ym\")))]\n-  \"(TARGET_SSE || TARGET_3DNOW_A)\n+\t  (match_operand:V8QI 1 \"register_mmxmem_operand\" \"%0,0,Yv\")\n+\t  (match_operand:V8QI 2 \"register_mmxmem_operand\" \"ym,x,Yv\")))]\n+  \"(TARGET_MMX || TARGET_MMX_WITH_SSE)\n+   && (TARGET_SSE || TARGET_3DNOW_A)\n    && ix86_binary_operator_ok (<CODE>, V8QImode, operands)\"\n-  \"p<maxmin_int>b\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"mmxadd\")\n-   (set_attr \"mode\" \"DI\")])\n+  \"@\n+   p<maxmin_int>b\\t{%2, %0|%0, %2}\n+   p<maxmin_int>b\\t{%2, %0|%0, %2}\n+   vp<maxmin_int>b\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"mmx_isa\" \"native,x64_noavx,x64_avx\")\n+   (set_attr \"type\" \"mmxadd,sseiadd,sseiadd\")\n+   (set_attr \"mode\" \"DI,TI,TI\")])\n \n (define_insn \"mmx_ashr<mode>3\"\n   [(set (match_operand:MMXMODE24 0 \"register_operand\" \"=y,x,Yv\")"}]}