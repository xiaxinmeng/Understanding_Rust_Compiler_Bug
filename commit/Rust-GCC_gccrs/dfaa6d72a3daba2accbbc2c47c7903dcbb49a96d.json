{"sha": "dfaa6d72a3daba2accbbc2c47c7903dcbb49a96d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGZhYTZkNzJhM2RhYmEyYWNjYmJjMmM0N2M3OTAzZGNiYjQ5YTk2ZA==", "commit": {"author": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1994-06-27T15:24:36Z"}, "committer": {"name": "Richard Earnshaw", "email": "erich@gnu.org", "date": "1994-06-27T15:24:36Z"}, "message": "(function_unit fpa): Add more accurate scheduling information.\n\n(all floating point patterns): Add more accurate instruction type information.\n\nFrom-SVN: r7574", "tree": {"sha": "c908ed389f579b38951479d18cd9127e48deec00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c908ed389f579b38951479d18cd9127e48deec00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dfaa6d72a3daba2accbbc2c47c7903dcbb49a96d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfaa6d72a3daba2accbbc2c47c7903dcbb49a96d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfaa6d72a3daba2accbbc2c47c7903dcbb49a96d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfaa6d72a3daba2accbbc2c47c7903dcbb49a96d/comments", "author": null, "committer": null, "parents": [{"sha": "bee06f3d82ed4c221d2ff8c1d66a22df1673974e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bee06f3d82ed4c221d2ff8c1d66a22df1673974e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bee06f3d82ed4c221d2ff8c1d66a22df1673974e"}], "stats": {"total": 152, "additions": 100, "deletions": 52}, "files": [{"sha": "7847d3413726f5fc8576f24ff0ec9b20b52e21c9", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 100, "deletions": 52, "changes": 152, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dfaa6d72a3daba2accbbc2c47c7903dcbb49a96d/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dfaa6d72a3daba2accbbc2c47c7903dcbb49a96d/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=dfaa6d72a3daba2accbbc2c47c7903dcbb49a96d", "patch": "@@ -1,4 +1,4 @@\n-;;- Machine description Acorn RISC Machine for GNU compiler\n+;;- Machine description for Advanced RISC Machines' ARM for GNU compiler\n ;;  Copyright (C) 1991, 1993, 1994 Free Software Foundation, Inc.\n ;;  Contributed by Pieter `Tiggr' Schoenmakers (rcpieter@win.tue.nl)\n ;;             and Martin Simmons (@harleqn.co.uk).\n@@ -23,7 +23,7 @@\n ;;- See file \"rtl.def\" for documentation on define_insn, match_*, et. al.\n \n ;; There are patterns in this file to support XFmode arithmetic.\n-;; Unfortunately RISCiX doesn't work well with these so they are disabled.\n+;; Unfortunately RISC iX doesn't work well with these so they are disabled.\n ;; (See arm.h)\n \f\n ;; UNSPEC Usage:\n@@ -66,6 +66,12 @@\n \n (define_attr \"cpu\" \"arm2,arm3,arm6\" (const (symbol_ref \"arm_cpu_attr\")))\n \n+; Floating Point Unit.  If we only have floating point emulation, then there\n+; is no point in scheduling the floating point insns.  (Well, for best\n+; performance we should try and group them together).\n+\n+(define_attr \"fpu\" \"fpa,fpe\" (const (symbol_ref \"arm_fpu_attr\")))\n+\n ; LENGTH of an instruction (in bytes)\n (define_attr \"length\" \"\" (const_int 4))\n \n@@ -83,7 +89,15 @@\n ; normal\tany data instruction that doesn't hit memory or fp regs\n ; block\t\tblockage insn, this blocks all functional units\n ; float\t\ta floating point arithmetic operation (subject to expansion)\n+; fdivx\t\tXFmode floating point division\n+; fdivd\t\tDFmode floating point division\n+; fdivs\t\tSFmode floating point division\n+; fmul\t\tFloating point multiply\n+; ffmul\t\tFast floating point multiply\n+; farith\tFloating point arithmetic (4 cycle)\n+; ffarith\tFast floating point arithmetic (2 cycle)\n ; float_em\ta floating point arithmetic operation that is normally emulated\n+;\t\teven on a machine with an fpa.\n ; f_load\ta floating point load from memory\n ; f_store\ta floating point store to memory\n ; f_mem_r\ta transfer of a floating point register to a real reg via mem\n@@ -98,7 +112,7 @@\n ; store4\tstore 4 words\n ;\n (define_attr \"type\"\n-\t\"normal,block,float,float_em,f_load,f_store,f_mem_r,r_mem_f,f_2_r,r_2_f,call,load,store1,store2,store3,store4\" \n+\t\"normal,block,float,fdivx,fdivd,fdivs,fmul,ffmul,farith,ffarith,float_em,f_load,f_store,f_mem_r,r_mem_f,f_2_r,r_2_f,call,load,store1,store2,store3,store4\" \n \t(const_string \"normal\"))\n \n (define_attr \"write_conflict\" \"no,yes\"\n@@ -119,8 +133,40 @@\n \n ;; (define_function_unit {name} {num-units} {n-users} {test}\n ;;                       {ready-delay} {issue-delay} [{conflict-list}])\n-;; This is not well tuned, but I don't have all the details.\n-(define_function_unit \"fpa\" 1 1 (eq_attr \"type\" \"float\") 5 0)\n+(define_function_unit \"fpa\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n+\t\t\t\t     (eq_attr \"type\" \"fdivx\")) 71 69)\n+\n+(define_function_unit \"fpa\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n+\t\t\t\t     (eq_attr \"type\" \"fdivd\")) 59 57)\n+\n+(define_function_unit \"fpa\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n+\t\t\t\t     (eq_attr \"type\" \"fdivs\")) 31 29)\n+\n+(define_function_unit \"fpa\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n+\t\t\t\t     (eq_attr \"type\" \"fmul\")) 9 7)\n+\n+(define_function_unit \"fpa\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n+\t\t\t\t     (eq_attr \"type\" \"ffmul\")) 6 4)\n+\n+(define_function_unit \"fpa\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n+\t\t\t\t     (eq_attr \"type\" \"farith\")) 4 2)\n+\n+(define_function_unit \"fpa\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n+\t\t\t\t     (eq_attr \"type\" \"ffarith\")) 2 2)\n+\n+(define_function_unit \"fpa\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n+\t\t\t\t     (eq_attr \"type\" \"r_2_f\")) 5 3)\n+\n+(define_function_unit \"fpa\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n+\t\t\t\t     (eq_attr \"type\" \"f_2_r\")) 1 2)\n+\n+;; The fpa10 doesn't really have a memory read unit, but it can start to\n+;; speculatively execute the instruction in the pipeline, provided the data\n+;; is already loaded, so pretend reads have a delay of 2 (and that the\n+;; pipeline is infinite.\n+\n+(define_function_unit \"fpa_mem\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n+\t\t\t\t\t (eq_attr \"type\" \"f_load\")) 3 1)\n \n (define_function_unit \"write_buf\" 1 2 (eq_attr \"type\" \"store1\") 3 3\n \t[(eq_attr \"write_conflict\" \"yes\")])\n@@ -313,7 +359,7 @@\n   \"@\n    adf%?s\\\\t%0, %1, %2\n    suf%?s\\\\t%0, %1, #%N2\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"farith\")])\n \n (define_insn \"adddf3\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f,f\")\n@@ -323,7 +369,7 @@\n   \"@\n    adf%?d\\\\t%0, %1, %2\n    suf%?d\\\\t%0, %1, #%N2\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"farith\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f,f\")\n@@ -334,7 +380,7 @@\n   \"@\n    adf%?d\\\\t%0, %1, %2\n    suf%?d\\\\t%0, %1, #%N2\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"farith\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n@@ -343,7 +389,7 @@\n \t\t  (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n   \"\"\n   \"adf%?d\\\\t%0, %1, %2\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"farith\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n@@ -353,7 +399,7 @@\n \t\t  (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n   \"\"\n   \"adf%?d\\\\t%0, %1, %2\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"farith\")])\n \n (define_insn \"addxf3\"\n   [(set (match_operand:XF 0 \"s_register_operand\" \"=f,f\")\n@@ -363,7 +409,7 @@\n   \"@\n    adf%?e\\\\t%0, %1, %2\n    suf%?e\\\\t%0, %1, #%N2\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"farith\")])\n \n (define_insn \"subdi3\"\n   [(set (match_operand:DI 0 \"s_register_operand\" \"=&r,&r,&r\")\n@@ -502,7 +548,7 @@\n   \"@\n    suf%?s\\\\t%0, %1, %2\n    rsf%?s\\\\t%0, %2, %1\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"farith\")])\n \n (define_insn \"subdf3\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f,f\")\n@@ -512,7 +558,7 @@\n   \"@\n    suf%?d\\\\t%0, %1, %2\n    rsf%?d\\\\t%0, %2, %1\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"farith\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n@@ -521,7 +567,7 @@\n \t\t  (match_operand:DF 2 \"fpu_rhs_operand\" \"fG\")))]\n   \"\"\n   \"suf%?d\\\\t%0, %1, %2\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"farith\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f,f\")\n@@ -532,7 +578,7 @@\n   \"@\n    suf%?d\\\\t%0, %1, %2\n    rsf%?d\\\\t%0, %2, %1\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"farith\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n@@ -542,7 +588,7 @@\n \t\t   (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n   \"\"\n   \"suf%?d\\\\t%0, %1, %2\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"farith\")])\n \n (define_insn \"subxf3\"\n   [(set (match_operand:XF 0 \"s_register_operand\" \"=f,f\")\n@@ -552,7 +598,7 @@\n   \"@\n    suf%?e\\\\t%0, %1, %2\n    rsf%?e\\\\t%0, %2, %1\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"farith\")])\n \f\n ;; Multiplication insns\n \n@@ -632,15 +678,15 @@\n \t\t (match_operand:SF 2 \"fpu_rhs_operand\" \"fG\")))]\n   \"\"\n   \"fml%?s\\\\t%0, %1, %2\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"ffmul\")])\n \n (define_insn \"muldf3\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n \t(mult:DF (match_operand:DF 1 \"s_register_operand\" \"f\")\n \t\t (match_operand:DF 2 \"fpu_rhs_operand\" \"fG\")))]\n   \"\"\n   \"muf%?d\\\\t%0, %1, %2\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"fmul\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n@@ -649,7 +695,7 @@\n \t\t (match_operand:DF 2 \"fpu_rhs_operand\" \"fG\")))]\n   \"\"\n   \"muf%?d\\\\t%0, %1, %2\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"fmul\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n@@ -658,7 +704,7 @@\n \t\t  (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n   \"\"\n   \"muf%?d\\\\t%0, %1, %2\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"fmul\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n@@ -668,15 +714,15 @@\n \t\t  (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n   \"\"\n   \"muf%?d\\\\t%0, %1, %2\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"fmul\")])\n \n (define_insn \"mulxf3\"\n   [(set (match_operand:XF 0 \"s_register_operand\" \"=f\")\n \t(mult:XF (match_operand:XF 1 \"s_register_operand\" \"f\")\n \t\t (match_operand:XF 2 \"fpu_rhs_operand\" \"fG\")))]\n   \"ENABLE_XF_PATTERNS\"\n   \"muf%?e\\\\t%0, %1, %2\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"fmul\")])\n \f\n ;; Division insns\n \n@@ -688,7 +734,7 @@\n   \"@\n    fdv%?s\\\\t%0, %1, %2\n    frd%?s\\\\t%0, %2, %1\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"fdivs\")])\n \n (define_insn \"divdf3\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f,f\")\n@@ -698,7 +744,7 @@\n   \"@\n    dvf%?d\\\\t%0, %1, %2\n    rdf%?d\\\\t%0, %2, %1\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"fdivd\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n@@ -707,7 +753,7 @@\n \t\t(match_operand:DF 2 \"fpu_rhs_operand\" \"fG\")))]\n   \"\"\n   \"dvf%?d\\\\t%0, %1, %2\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"fdivd\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n@@ -716,7 +762,7 @@\n \t\t (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n   \"\"\n   \"rdf%?d\\\\t%0, %2, %1\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"fdivd\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n@@ -726,7 +772,7 @@\n \t\t (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n   \"\"\n   \"dvf%?d\\\\t%0, %1, %2\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"fdivd\")])\n \n (define_insn \"divxf3\"\n   [(set (match_operand:XF 0 \"s_register_operand\" \"=f,f\")\n@@ -736,7 +782,7 @@\n   \"@\n    dvf%?e\\\\t%0, %1, %2\n    rdf%?e\\\\t%0, %2, %1\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"fdivx\")])\n \f\n ;; Modulo insns\n \n@@ -746,15 +792,15 @@\n \t\t(match_operand:SF 2 \"fpu_rhs_operand\" \"fG\")))]\n   \"\"\n   \"rmf%?s\\\\t%0, %1, %2\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"fdivs\")])\n \n (define_insn \"moddf3\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n \t(mod:DF (match_operand:DF 1 \"s_register_operand\" \"f\")\n \t\t(match_operand:DF 2 \"fpu_rhs_operand\" \"fG\")))]\n   \"\"\n   \"rmf%?d\\\\t%0, %1, %2\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"fdivd\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n@@ -763,7 +809,7 @@\n \t\t(match_operand:DF 2 \"fpu_rhs_operand\" \"fG\")))]\n   \"\"\n   \"rmf%?d\\\\t%0, %1, %2\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"fdivd\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n@@ -772,7 +818,7 @@\n \t\t (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n   \"\"\n   \"rmf%?d\\\\t%0, %1, %2\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"fdivd\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n@@ -782,15 +828,15 @@\n \t\t (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n   \"\"\n   \"rmf%?d\\\\t%0, %1, %2\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"fdivd\")])\n \n (define_insn \"modxf3\"\n   [(set (match_operand:XF 0 \"s_register_operand\" \"=f\")\n \t(mod:XF (match_operand:XF 1 \"s_register_operand\" \"f\")\n \t\t(match_operand:XF 2 \"fpu_rhs_operand\" \"fG\")))]\n   \"ENABLE_XF_PATTERNS\"\n   \"rmf%?e\\\\t%0, %1, %2\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"fdivx\")])\n \f\n ;; Boolean and,ior,xor insns\n \n@@ -1419,29 +1465,29 @@\n \t(neg:SF (match_operand:SF 1 \"s_register_operand\" \"f\")))]\n   \"\"\n   \"mnf%?s\\\\t%0, %1\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"ffarith\")])\n \n (define_insn \"negdf2\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n \t(neg:DF (match_operand:DF 1 \"s_register_operand\" \"f\")))]\n   \"\"\n   \"mnf%?d\\\\t%0, %1\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"ffarith\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n \t(neg:DF (float_extend:DF\n \t\t (match_operand:SF 1 \"s_register_operand\" \"f\"))))]\n   \"\"\n   \"mnf%?d\\\\t%0, %1\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"ffarith\")])\n \n (define_insn \"negxf2\"\n   [(set (match_operand:XF 0 \"s_register_operand\" \"=f\")\n \t(neg:XF (match_operand:XF 1 \"s_register_operand\" \"f\")))]\n   \"ENABLE_XF_PATTERNS\"\n   \"mnf%?e\\\\t%0, %1\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"ffarith\")])\n \n ;; abssi2 doesn't really clobber the condition codes if a different register\n ;; is being set.  To keep things simple, assume during rtl manipulations that\n@@ -1475,29 +1521,29 @@\n \t (abs:SF (match_operand:SF 1 \"s_register_operand\" \"f\")))]\n   \"\"\n   \"abs%?s\\\\t%0, %1\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"ffarith\")])\n \n (define_insn \"absdf2\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n \t(abs:DF (match_operand:DF 1 \"s_register_operand\" \"f\")))]\n   \"\"\n   \"abs%?d\\\\t%0, %1\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"ffarith\")])\n \n (define_insn \"\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n \t(abs:DF (float_extend:DF\n \t\t (match_operand:SF 1 \"s_register_operand\" \"f\"))))]\n   \"\"\n   \"abs%?d\\\\t%0, %1\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"ffarith\")])\n \n (define_insn \"absxf2\"\n   [(set (match_operand:XF 0 \"s_register_operand\" \"=f\")\n \t(abs:XF (match_operand:XF 1 \"s_register_operand\" \"f\")))]\n   \"ENABLE_XF_PATTERNS\"\n   \"abs%?e\\\\t%0, %1\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"ffarith\")])\n \n (define_insn \"sqrtsf2\"\n   [(set (match_operand:SF 0 \"s_register_operand\" \"=f\")\n@@ -1670,23 +1716,23 @@\n \t (match_operand:DF 1 \"s_register_operand\" \"f\")))]\n   \"\"\n   \"mvf%?s\\\\t%0, %1\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"ffarith\")])\n \n (define_insn \"truncxfsf2\"\n   [(set (match_operand:SF 0 \"s_register_operand\" \"=f\")\n \t(float_truncate:SF\n \t (match_operand:XF 1 \"s_register_operand\" \"f\")))]\n   \"ENABLE_XF_PATTERNS\"\n   \"mvf%?s\\\\t%0, %1\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"ffarith\")])\n \n (define_insn \"truncxfdf2\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n \t(float_truncate:DF\n \t (match_operand:XF 1 \"s_register_operand\" \"f\")))]\n   \"ENABLE_XF_PATTERNS\"\n   \"mvf%?d\\\\t%0, %1\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"ffarith\")])\n \f\n ;; Zero and sign extension instructions.\n \n@@ -1813,20 +1859,21 @@\n \t(float_extend:DF (match_operand:SF 1 \"s_register_operand\" \"f\")))]\n   \"\"\n   \"mvf%?d\\\\t%0, %1\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"ffarith\")])\n \n (define_insn \"extendsfxf2\"\n   [(set (match_operand:XF 0 \"s_register_operand\" \"=f\")\n \t(float_extend:XF (match_operand:SF 1 \"s_register_operand\" \"f\")))]\n   \"ENABLE_XF_PATTERNS\"\n-  \"mvf%?e\\\\t%0, %1\")\n+  \"mvf%?e\\\\t%0, %1\"\n+[(set_attr \"type\" \"ffarith\")])\n \n (define_insn \"extenddfxf2\"\n   [(set (match_operand:XF 0 \"s_register_operand\" \"=f\")\n \t(float_extend:XF (match_operand:DF 1 \"s_register_operand\" \"f\")))]\n   \"ENABLE_XF_PATTERNS\"\n   \"mvf%?e\\\\t%0, %1\"\n-[(set_attr \"type\" \"float\")])\n+[(set_attr \"type\" \"ffarith\")])\n \n \f\n ;; Move insns (including loads and stores)\n@@ -2301,7 +2348,8 @@\n    ldr%?\\\\t%0, %1\\\\t%@ float\n    str%?\\\\t%1, %0\\\\t%@ float\"\n [(set_attr \"length\" \"4,4,4,4,8,8,4,4,4\")\n- (set_attr \"type\" \"float,float,f_load,f_store,r_mem_f,f_mem_r,*,load,store1\")])\n+ (set_attr \"type\"\n+\t \"ffarith,ffarith,f_load,f_store,r_mem_f,f_mem_r,*,load,store1\")])\n \n (define_expand \"movdf\"\n   [(set (match_operand:DF 0 \"general_operand\" \"\")\n@@ -2387,7 +2435,7 @@\n \"\n [(set_attr \"length\" \"4,4,8,4,4,4,4,4,8,8,8\")\n  (set_attr \"type\" \n-\"load,store2,load,float,float,float,f_load,f_store,r_mem_f,f_mem_r,*\")])\n+\"load,store2,load,ffarith,ffarith,ffarith,f_load,f_store,r_mem_f,f_mem_r,*\")])\n \n (define_expand \"movxf\"\n   [(set (match_operand:XF 0 \"general_operand\" \"\")\n@@ -2415,7 +2463,7 @@\n     }\n \"\n [(set_attr \"length\" \"4,4,4,4,8,8,12\")\n- (set_attr \"type\" \"float,float,f_load,f_store,r_mem_f,f_mem_r,*\")])\n+ (set_attr \"type\" \"ffarith,ffarith,f_load,f_store,r_mem_f,f_mem_r,*\")])\n \f\n \n ;; load- and store-multiple insns"}]}