{"sha": "43ff4e9aa3075d4eab3c74b4bc510a9cde17c313", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNmZjRlOWFhMzA3NWQ0ZWFiM2M3NGI0YmM1MTBhOWNkZTE3YzMxMw==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2006-02-07T23:52:37Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2006-02-07T23:52:37Z"}, "message": "re PR libfortran/25577 (gfortran routine mvbits returns wrong answer.)\n\nlibgfortran/\n2006-02-07  Dale Ranta  <dir@lanl.gov>\n\n\tPR fortran/25577\n\t* intrinsics/mvbits.c: Shift '(TYPE)1' type when building 'lenmask'.\n\ntestsuite/\n2006-02-07  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n\n\tPR fortran/25577\n\t* gfortran.dg/mvbits_1.f90: New.\n\nAlso fixed Dirk Mueller's preceding ChangeLog entry.\n\nFrom-SVN: r110728", "tree": {"sha": "c0cfce55af07acbfb42d18f9f151fc9d70659377", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0cfce55af07acbfb42d18f9f151fc9d70659377"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43ff4e9aa3075d4eab3c74b4bc510a9cde17c313", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43ff4e9aa3075d4eab3c74b4bc510a9cde17c313", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43ff4e9aa3075d4eab3c74b4bc510a9cde17c313", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43ff4e9aa3075d4eab3c74b4bc510a9cde17c313/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23fca1f58766f4095fb3f889433de3f5552681f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23fca1f58766f4095fb3f889433de3f5552681f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23fca1f58766f4095fb3f889433de3f5552681f1"}], "stats": {"total": 57, "additions": 53, "deletions": 4}, "files": [{"sha": "4c5dc8f206cc7d2387c7b85598ff92fb97b0064b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ff4e9aa3075d4eab3c74b4bc510a9cde17c313/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ff4e9aa3075d4eab3c74b4bc510a9cde17c313/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=43ff4e9aa3075d4eab3c74b4bc510a9cde17c313", "patch": "@@ -1,7 +1,12 @@\n+2006-02-07  Tobias Schl\ufffdter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\tPR fortran/25577\n+\t* gfortran.dg/mvbits_1.f90: New.\n+\n 2006-02-07  Dirk Mueller  <dmueller@suse.com>\n \n-\tg++.dg/warn/Wdiv-by-zero.C: New test.\n-\tg++.dg/warn/Wno-div-by-zero.C: New.\n+\t* g++.dg/warn/Wdiv-by-zero.C: New test.\n+\t* g++.dg/warn/Wno-div-by-zero.C: New.\n \n 2006-02-07  Jeff Law  <law@redhat.com>\n "}, {"sha": "90e92bb0e2654addaa5451eb87b93526394e4eb4", "filename": "gcc/testsuite/gfortran.dg/mvbits_1.f90", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ff4e9aa3075d4eab3c74b4bc510a9cde17c313/gcc%2Ftestsuite%2Fgfortran.dg%2Fmvbits_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ff4e9aa3075d4eab3c74b4bc510a9cde17c313/gcc%2Ftestsuite%2Fgfortran.dg%2Fmvbits_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmvbits_1.f90?ref=43ff4e9aa3075d4eab3c74b4bc510a9cde17c313", "patch": "@@ -0,0 +1,39 @@\n+! PR 25577\n+! MVBITS didn't work correctly for integer types wider than a C int\n+! The testcase is based on the one Dale Ranta posted in the bug report\n+implicit none\n+integer(1) i1,j1\n+integer(2) i2,j2\n+integer(4) i4,j4\n+integer(8) i8,j8\n+integer ibits,n\n+\n+ibits=bit_size(1_1)\n+do n=1,ibits\n+   i1=-1\n+   call mvbits(1_1, 0,n,i1,0)\n+   j1=-1-2_1**n+2\n+   if(i1.ne.j1)call abort\n+enddo\n+ibits=bit_size(1_2)\n+do n=1,ibits\n+   i2=-1\n+   call mvbits(1_2, 0,n,i2,0)\n+   j2=-1-2_2**n+2\n+   if(i2.ne.j2)call abort\n+enddo\n+ibits=bit_size(1_4)\n+do n=1,ibits\n+   i4=-1\n+   call mvbits(1_4, 0,n,i4,0)\n+   j4=-1-2_4**n+2\n+   if(i4.ne.j4)call abort\n+enddo\n+ibits=bit_size(1_8)\n+do n=1,ibits\n+   i8=-1\n+   call mvbits(1_8, 0,n,i8,0)\n+   j8=-1-2_8**n+2\n+   if(i8.ne.j8)call abort\n+enddo\n+end"}, {"sha": "8517787a1a770de5e4fd9ce085a4444a4719abc0", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ff4e9aa3075d4eab3c74b4bc510a9cde17c313/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ff4e9aa3075d4eab3c74b4bc510a9cde17c313/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=43ff4e9aa3075d4eab3c74b4bc510a9cde17c313", "patch": "@@ -1,3 +1,8 @@\n+2006-02-07  Dale Ranta  <dir@lanl.gov>\n+\n+\tPR fortran/25577\n+\t* intrinsics/mvbits.c: Shift '(TYPE)1' type when building 'lenmask'.\n+\n 2006-02-07  Rainer Emrich <r.emrich@de.tecosim.com>\n \n \t* intrinsics/c99_functions.c: Work around incompatible"}, {"sha": "a452fc98b3f73fdec1719d4a96d3fe5f89ccf800", "filename": "libgfortran/intrinsics/mvbits.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ff4e9aa3075d4eab3c74b4bc510a9cde17c313/libgfortran%2Fintrinsics%2Fmvbits.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ff4e9aa3075d4eab3c74b4bc510a9cde17c313/libgfortran%2Fintrinsics%2Fmvbits.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fmvbits.c?ref=43ff4e9aa3075d4eab3c74b4bc510a9cde17c313", "patch": "@@ -1,5 +1,5 @@\n /* Implementation of the MVBITS intrinsic\n-   Copyright (C) 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2006 Free Software Foundation, Inc.\n    Contributed by Tobias Schl\u00fcter\n \n This file is part of the GNU Fortran 95 runtime library (libgfortran).\n@@ -48,7 +48,7 @@ SUB_NAME (const TYPE *from, const GFC_INTEGER_4 *frompos,\n {\n   TYPE oldbits, newbits, lenmask;\n \n-  lenmask = (*len == sizeof (TYPE)*8) ? ~(TYPE)0 : (1 << *len) - 1;\n+  lenmask = (*len == sizeof (TYPE)*8) ? ~(TYPE)0 : ((TYPE)1 << *len) - 1;\n   newbits = (((UTYPE)(*from) >> *frompos) & lenmask) << *topos;\n   oldbits = *to & (~(lenmask << *topos));\n "}]}