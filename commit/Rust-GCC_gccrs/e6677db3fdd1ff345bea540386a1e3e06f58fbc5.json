{"sha": "e6677db3fdd1ff345bea540386a1e3e06f58fbc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY2NzdkYjNmZGQxZmYzNDViZWE1NDAzODZhMWUzZTA2ZjU4ZmJjNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-30T20:28:12Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-30T20:28:12Z"}, "message": "(movstr_optab): No longer static.\n\n(init_expr_once): Don't initialize movstr_optab.\n\nFrom-SVN: r3923", "tree": {"sha": "05e9e3fe9fc77eaea2021297978dd533dbfaa3bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05e9e3fe9fc77eaea2021297978dd533dbfaa3bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6677db3fdd1ff345bea540386a1e3e06f58fbc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6677db3fdd1ff345bea540386a1e3e06f58fbc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6677db3fdd1ff345bea540386a1e3e06f58fbc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6677db3fdd1ff345bea540386a1e3e06f58fbc5/comments", "author": null, "committer": null, "parents": [{"sha": "af9e4a0cf0468b4d1af7e9fb48d70c9e2903bcf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af9e4a0cf0468b4d1af7e9fb48d70c9e2903bcf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af9e4a0cf0468b4d1af7e9fb48d70c9e2903bcf6"}], "stats": {"total": 25, "additions": 1, "deletions": 24}, "files": [{"sha": "e51d29764735069a1fd88325832685adf5cb8d95", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 24, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6677db3fdd1ff345bea540386a1e3e06f58fbc5/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6677db3fdd1ff345bea540386a1e3e06f58fbc5/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=e6677db3fdd1ff345bea540386a1e3e06f58fbc5", "patch": "@@ -167,7 +167,7 @@ static char direct_store[NUM_MACHINE_MODES];\n #endif\n \n /* This array records the insn_code of insns to perform block moves.  */\n-static enum insn_code movstr_optab[NUM_MACHINE_MODES];\n+enum insn_code movstr_optab[NUM_MACHINE_MODES];\n \n /* SLOW_UNALIGNED_ACCESS is non-zero if unaligned accesses are very slow. */\n \n@@ -245,32 +245,9 @@ init_expr_once ()\n \t    if (recog (pat, insn, &num_clobbers) >= 0)\n \t      direct_store[(int) mode] = 1;\n \t  }\n-\n-      movstr_optab[(int) mode] = CODE_FOR_nothing;\n     }\n \n   end_sequence ();\n-\n-#ifdef HAVE_movstrqi\n-  if (HAVE_movstrqi)\n-    movstr_optab[(int) QImode] = CODE_FOR_movstrqi;\n-#endif\n-#ifdef HAVE_movstrhi\n-  if (HAVE_movstrhi)\n-    movstr_optab[(int) HImode] = CODE_FOR_movstrhi;\n-#endif\n-#ifdef HAVE_movstrsi\n-  if (HAVE_movstrsi)\n-    movstr_optab[(int) SImode] = CODE_FOR_movstrsi;\n-#endif\n-#ifdef HAVE_movstrdi\n-  if (HAVE_movstrdi)\n-    movstr_optab[(int) DImode] = CODE_FOR_movstrdi;\n-#endif\n-#ifdef HAVE_movstrti\n-  if (HAVE_movstrti)\n-    movstr_optab[(int) TImode] = CODE_FOR_movstrti;\n-#endif\n }\n       \n /* This is run at the start of compiling a function.  */"}]}