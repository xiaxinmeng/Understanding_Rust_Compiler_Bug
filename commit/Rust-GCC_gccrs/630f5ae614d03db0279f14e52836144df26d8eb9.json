{"sha": "630f5ae614d03db0279f14e52836144df26d8eb9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjMwZjVhZTYxNGQwM2RiMDI3OWYxNGU1MjgzNjE0NGRmMjZkOGViOQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-05-02T19:30:02Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-05-02T19:30:02Z"}, "message": "m32r.c (addr24_operand): Handle literals.\n\n\t* m32r/m32r.c (addr24_operand): Handle literals.\n\t(m32r_output_function_prologue): Use IMMEDIATE_PREFIX.\n\t(m32r_output_function_epilogue): Likewise.  Use shorter add insn if\n\table.\n\nFrom-SVN: r14013", "tree": {"sha": "d192ea0878d3f5740284a14bb33ee0a15180ee37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d192ea0878d3f5740284a14bb33ee0a15180ee37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/630f5ae614d03db0279f14e52836144df26d8eb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/630f5ae614d03db0279f14e52836144df26d8eb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/630f5ae614d03db0279f14e52836144df26d8eb9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/630f5ae614d03db0279f14e52836144df26d8eb9/comments", "author": null, "committer": null, "parents": [{"sha": "0ebaa85d1603168a75190fb2cf515cfd17c5fbef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ebaa85d1603168a75190fb2cf515cfd17c5fbef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ebaa85d1603168a75190fb2cf515cfd17c5fbef"}], "stats": {"total": 54, "additions": 32, "deletions": 22}, "files": [{"sha": "b415dd0c7a91bd7d036ec34c193dd427260106cd", "filename": "gcc/config/m32r/m32r.c", "status": "modified", "additions": 32, "deletions": 22, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/630f5ae614d03db0279f14e52836144df26d8eb9/gcc%2Fconfig%2Fm32r%2Fm32r.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/630f5ae614d03db0279f14e52836144df26d8eb9/gcc%2Fconfig%2Fm32r%2Fm32r.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.c?ref=630f5ae614d03db0279f14e52836144df26d8eb9", "patch": "@@ -503,7 +503,8 @@ addr24_operand (op, mode)\n   if (GET_CODE (op) == SYMBOL_REF)\n     return (SMALL_NAME_P (XSTR (op, 0))\n \t    || (TARGET_ADDR24\n-\t\t&& CONSTANT_POOL_ADDRESS_P (op)));\n+\t\t&& (CONSTANT_POOL_ADDRESS_P (op)\n+\t\t    || LIT_NAME_P (XSTR (op, 0)))));\n \n   if (GET_CODE (op) == CONST\n       && GET_CODE (XEXP (op, 0)) == PLUS\n@@ -514,7 +515,8 @@ addr24_operand (op, mode)\n       rtx sym = XEXP (XEXP (op, 0), 0);\n       return (SMALL_NAME_P (XSTR (sym, 0))\n \t      || (TARGET_ADDR24\n-\t\t  && CONSTANT_POOL_ADDRESS_P (op)));\n+\t\t  && (CONSTANT_POOL_ADDRESS_P (op)\n+\t\t      || LIT_NAME_P (XSTR (op, 0)))));\n     }\n \n   return 0;\n@@ -1323,15 +1325,17 @@ m32r_output_function_prologue (file, size)\n #if 1\n   /* Allocate space for register arguments if this is a variadic function.  */\n   if (current_frame_info.pretend_size != 0)\n-    fprintf (file, \"\\taddi %s,%d\\n\",\n-\t     sp_str, -current_frame_info.pretend_size);\n+    fprintf (file, \"\\taddi %s,%s%d\\n\",\n+\t     sp_str, IMMEDIATE_PREFIX,\n+\t     -current_frame_info.pretend_size);\n #else\n   /* If there are unnamed args in registers, save them.  */\n   if (current_function_stdarg || current_function_varargs)\n     {\n       int i;\n-      fprintf (file, \"\\taddi %s,%d\\n\",\n-\t       sp_str, - M32R_MAX_PARM_REGS * UNITS_PER_WORD);\n+      fprintf (file, \"\\taddi %s,%s%d\\n\",\n+\t       sp_str, IMMEDIATE_PREFIX,\n+\t       - M32R_MAX_PARM_REGS * UNITS_PER_WORD);\n       for (i = 0; i < M32R_MAX_PARM_REGS; ++i)\n \tfprintf (file, \"\\tst %s,@(sp,%d)\\n\",\n \t\t reg_names[i], i * UNITS_PER_WORD);\n@@ -1362,14 +1366,15 @@ m32r_output_function_prologue (file, size)\n   if (frame_size == 0)\n     ; /* nothing to do */\n   else if (frame_size <= 128)\n-    fprintf (file, \"\\taddi %s,%d\\n\",\n-\t     sp_str, -frame_size);\n+    fprintf (file, \"\\taddi %s,%s%d\\n\",\n+\t     sp_str, IMMEDIATE_PREFIX, -frame_size);\n   else if (frame_size <= 32768)\n-    fprintf (file, \"\\tadd3 %s,%s,%d\\n\",\n-\t     sp_str, sp_str, -frame_size);\n+    fprintf (file, \"\\tadd3 %s,%s,%s%d\\n\",\n+\t     sp_str, sp_str, IMMEDIATE_PREFIX, -frame_size);\n   else\n-    fprintf (file, \"\\tld24 %s,%d\\n\\tsub %s,%s\\n\",\n-\t     reg_names[PROLOGUE_TMP_REGNUM], frame_size,\n+    fprintf (file, \"\\tld24 %s,%s%d\\n\\tsub %s,%s\\n\",\n+\t     reg_names[PROLOGUE_TMP_REGNUM],\n+\t     IMMEDIATE_PREFIX, frame_size,\n \t     sp_str, reg_names[PROLOGUE_TMP_REGNUM]);\n \n   if (frame_pointer_needed)\n@@ -1428,12 +1433,16 @@ m32r_output_function_epilogue (file, size)\n \t  unsigned int reg_offset = var_size + args_size;\n \t  if (reg_offset == 0)\n \t    ; /* nothing to do */\n+\t  else if (reg_offset < 128)\n+\t    fprintf (file, \"\\taddi %s,%s%d\\n\",\n+\t\t     sp_str, IMMEDIATE_PREFIX, reg_offset);\n \t  else if (reg_offset < 32768)\n-\t    fprintf (file, \"\\tadd3 %s,%s,%d\\n\",\n-\t\t     sp_str, sp_str, reg_offset);\n+\t    fprintf (file, \"\\tadd3 %s,%s,%s%d\\n\",\n+\t\t     sp_str, sp_str, IMMEDIATE_PREFIX, reg_offset);\n \t  else\n-\t    fprintf (file, \"\\tld24 %s,%d\\n\\tadd %s,%s\\n\",\n-\t\t     reg_names[PROLOGUE_TMP_REGNUM], reg_offset,\n+\t    fprintf (file, \"\\tld24 %s,%s%d\\n\\tadd %s,%s\\n\",\n+\t\t     reg_names[PROLOGUE_TMP_REGNUM],\n+\t\t     IMMEDIATE_PREFIX, reg_offset,\n \t\t     sp_str, reg_names[PROLOGUE_TMP_REGNUM]);\n \t}\n       else if (frame_pointer_needed)\n@@ -1442,11 +1451,12 @@ m32r_output_function_epilogue (file, size)\n \t  if (reg_offset == 0)\n \t    fprintf (file, \"\\tmv %s,%s\\n\", sp_str, fp_str);\n \t  else if (reg_offset < 32768)\n-\t    fprintf (file, \"\\tadd3 %s,%s,%d\\n\",\n-\t\t     sp_str, fp_str, reg_offset);\n+\t    fprintf (file, \"\\tadd3 %s,%s,%s%d\\n\",\n+\t\t     sp_str, fp_str, IMMEDIATE_PREFIX, reg_offset);\n \t  else\n-\t    fprintf (file, \"\\tld24 %s,%d\\n\\tadd %s,%s\\n\",\n-\t\t     reg_names[PROLOGUE_TMP_REGNUM], reg_offset,\n+\t    fprintf (file, \"\\tld24 %s,%s%d\\n\\tadd %s,%s\\n\",\n+\t\t     reg_names[PROLOGUE_TMP_REGNUM],\n+\t\t     IMMEDIATE_PREFIX, reg_offset,\n \t\t     sp_str, reg_names[PROLOGUE_TMP_REGNUM]);\n \t}\n       else\n@@ -1468,8 +1478,8 @@ m32r_output_function_epilogue (file, size)\n \n       /* Remove varargs area if present.  */\n       if (current_frame_info.pretend_size != 0)\n-\tfprintf (file, \"\\taddi %s,%d\\n\",\n-\t\t sp_str, current_frame_info.pretend_size);\n+\tfprintf (file, \"\\taddi %s,%s%d\\n\",\n+\t\t sp_str, IMMEDIATE_PREFIX, current_frame_info.pretend_size);\n \t\n       /* Emit the return instruction.  */\n       if (M32R_INTERRUPT_P (fn_type))"}]}