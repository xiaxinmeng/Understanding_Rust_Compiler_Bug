{"sha": "ec217bd88a7f9ac30e05ff43de51dda5e4b001d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWMyMTdiZDg4YTdmOWFjMzBlMDVmZjQzZGU1MWRkYTVlNGIwMDFkMg==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2014-05-20T14:14:21Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2014-05-20T14:14:21Z"}, "message": "simplify-rtx.c (simplify_binary_operation_1): Optimize case of nested VEC_SELECTs that are inverses of each other.\n\n[gcc]\n\n2014-05-20  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* simplify-rtx.c (simplify_binary_operation_1): Optimize case of\n\tnested VEC_SELECTs that are inverses of each other.\n\n[gcc/testsuite]\n\n2014-05-20  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* gcc.target/powerpc/vsxcopy.c: New test.\n\nFrom-SVN: r210644", "tree": {"sha": "c70cebb42d5110d8ce5aba1d0dec49af965a4b52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c70cebb42d5110d8ce5aba1d0dec49af965a4b52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec217bd88a7f9ac30e05ff43de51dda5e4b001d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec217bd88a7f9ac30e05ff43de51dda5e4b001d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec217bd88a7f9ac30e05ff43de51dda5e4b001d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec217bd88a7f9ac30e05ff43de51dda5e4b001d2/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b2b222b31138eb3772cfd648ff2cf31be27ee30b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2b222b31138eb3772cfd648ff2cf31be27ee30b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2b222b31138eb3772cfd648ff2cf31be27ee30b"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "7d518b8abcee1efe306c790b9320253416392f56", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec217bd88a7f9ac30e05ff43de51dda5e4b001d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec217bd88a7f9ac30e05ff43de51dda5e4b001d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ec217bd88a7f9ac30e05ff43de51dda5e4b001d2", "patch": "@@ -1,3 +1,8 @@\n+2014-05-20  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* simplify-rtx.c (simplify_binary_operation_1): Optimize case of\n+\tnested VEC_SELECTs that are inverses of each other.\n+\n 2014-05-20  Richard Biener  <rguenther@suse.de>\n \n \t* tree-ssa-sccvn.c (process_scc): Dump SCC here, when"}, {"sha": "181b56fb8c002b85fcdc528c2ff2f39d09c18878", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec217bd88a7f9ac30e05ff43de51dda5e4b001d2/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec217bd88a7f9ac30e05ff43de51dda5e4b001d2/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=ec217bd88a7f9ac30e05ff43de51dda5e4b001d2", "patch": "@@ -3419,6 +3419,31 @@ simplify_binary_operation_1 (enum rtx_code code, enum machine_mode mode,\n \t    }\n \t}\n \n+      /* If we have two nested selects that are inverses of each\n+\t other, replace them with the source operand.  */\n+      if (GET_CODE (trueop0) == VEC_SELECT\n+\t  && GET_MODE (XEXP (trueop0, 0)) == mode)\n+\t{\n+\t  rtx op0_subop1 = XEXP (trueop0, 1);\n+\t  gcc_assert (GET_CODE (op0_subop1) == PARALLEL);\n+\t  gcc_assert (XVECLEN (trueop1, 0) == GET_MODE_NUNITS (mode));\n+\n+\t  /* Apply the outer ordering vector to the inner one.  (The inner\n+\t     ordering vector is expressly permitted to be of a different\n+\t     length than the outer one.)  If the result is { 0, 1, ..., n-1 }\n+\t     then the two VEC_SELECTs cancel.  */\n+\t  for (int i = 0; i < XVECLEN (trueop1, 0); ++i)\n+\t    {\n+\t      rtx x = XVECEXP (trueop1, 0, i);\n+\t      if (!CONST_INT_P (x))\n+\t\treturn 0;\n+\t      rtx y = XVECEXP (op0_subop1, 0, INTVAL (x));\n+\t      if (!CONST_INT_P (y) || i != INTVAL (y))\n+\t\treturn 0;\n+\t    }\n+\t  return XEXP (trueop0, 0);\n+\t}\n+\n       return 0;\n     case VEC_CONCAT:\n       {"}, {"sha": "1440e049912c905033ba63d7b5abb0b314a5547f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec217bd88a7f9ac30e05ff43de51dda5e4b001d2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec217bd88a7f9ac30e05ff43de51dda5e4b001d2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ec217bd88a7f9ac30e05ff43de51dda5e4b001d2", "patch": "@@ -1,3 +1,7 @@\n+2014-05-20  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* gcc.target/powerpc/vsxcopy.c: New test.\n+\n 2014-05-20  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/58664"}, {"sha": "fc1f0bd387a83ce3d3fa23c0722b5f9c3672c6b4", "filename": "gcc/testsuite/gcc.target/powerpc/vsxcopy.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec217bd88a7f9ac30e05ff43de51dda5e4b001d2/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsxcopy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec217bd88a7f9ac30e05ff43de51dda5e4b001d2/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsxcopy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsxcopy.c?ref=ec217bd88a7f9ac30e05ff43de51dda5e4b001d2", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile { target { powerpc64*-*-* } } } */\n+/* { dg-require-effective-target powerpc_vsx_ok } */\n+/* { dg-options \"-O1\" } */\n+/* { dg-final { scan-assembler \"lxvd2x\" } } */\n+/* { dg-final { scan-assembler \"stxvd2x\" } } */\n+/* { dg-final { scan-assembler-not \"xxpermdi\" } } */\n+\n+typedef float vecf __attribute__ ((vector_size (16)));\n+extern vecf j, k;\n+\n+void fun (void)\n+{\n+  j = k;\n+}\n+"}]}