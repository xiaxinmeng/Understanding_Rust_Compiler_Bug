{"sha": "31c304baef95db414d5429ede8767f469a253945", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFjMzA0YmFlZjk1ZGI0MTRkNTQyOWVkZTg3NjdmNDY5YTI1Mzk0NQ==", "commit": {"author": {"name": "Steven Bosscher", "email": "stevenb@suse.de", "date": "2005-09-19T05:04:58Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2005-09-19T05:04:58Z"}, "message": "re PR rtl-optimization/23943 (segv in side_effects_p())\n\ngcc/\n\tPR rtl-optimization/23943\n\t* cse.c (find_best_addr): Never propagate an EXPR_LIST rtx.\n\ntestsuite/\n\t* gcc.dg/pr23943.c: New test.\n\nFrom-SVN: r104413", "tree": {"sha": "9e9a80ed7c0c194680c9e165cc538ad6c898a19f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e9a80ed7c0c194680c9e165cc538ad6c898a19f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31c304baef95db414d5429ede8767f469a253945", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31c304baef95db414d5429ede8767f469a253945", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31c304baef95db414d5429ede8767f469a253945", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31c304baef95db414d5429ede8767f469a253945/comments", "author": null, "committer": null, "parents": [{"sha": "02c375d90d4e0b486814c915ee7fe8a47afb4716", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02c375d90d4e0b486814c915ee7fe8a47afb4716", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02c375d90d4e0b486814c915ee7fe8a47afb4716"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "3e7d70a8658db31d9503e556a9c65ed6f2540245", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31c304baef95db414d5429ede8767f469a253945/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31c304baef95db414d5429ede8767f469a253945/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=31c304baef95db414d5429ede8767f469a253945", "patch": "@@ -1,3 +1,8 @@\n+2005-09-19  Steven Bosscher  <stevenb@suse.de>\n+\n+\tPR rtl-optimization/23943\n+\t* cse.c (find_best_addr): Never propagate an EXPR_LIST rtx.\n+\n 2005-09-18  Jan Hubicka  <jh@suse.cz>\n \n \t* calls.c (flags_from_decl_or_type): Do not set ECF_LIBCALL_BLOCK."}, {"sha": "defa56185e65ff7cf9394ffb293f9755bc128121", "filename": "gcc/cse.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31c304baef95db414d5429ede8767f469a253945/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31c304baef95db414d5429ede8767f469a253945/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=31c304baef95db414d5429ede8767f469a253945", "patch": "@@ -2999,7 +2999,9 @@ find_best_addr (rtx insn, rtx *loc, enum machine_mode mode)\n \t       p = p->next_same_value, count++)\n \t    if (! p->flag\n \t\t&& (REG_P (p->exp)\n-\t\t    || exp_equiv_p (p->exp, p->exp, 1, false)))\n+\t\t    || (GET_CODE (p->exp) != EXPR_LIST\n+\t\t\t&& exp_equiv_p (p->exp, p->exp, 1, false))))\n+\n \t      {\n \t\trtx new = simplify_gen_binary (GET_CODE (*loc), Pmode,\n \t\t\t\t\t       p->exp, op1);"}, {"sha": "367ffae4c4bf2fb4104d33bfaf60b9dc0b0da023", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31c304baef95db414d5429ede8767f469a253945/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31c304baef95db414d5429ede8767f469a253945/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=31c304baef95db414d5429ede8767f469a253945", "patch": "@@ -1,3 +1,7 @@\n+2005-09-19  Steven Bosscher  <stevenb@suse.de>\n+\n+\t* gcc.dg/pr23943.c: New test.\n+\n 2005-09-18  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/19181"}, {"sha": "f0e60bf84d7976d3047564604ede9e64d4143bab", "filename": "gcc/testsuite/gcc.dg/pr23943.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31c304baef95db414d5429ede8767f469a253945/gcc%2Ftestsuite%2Fgcc.dg%2Fpr23943.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31c304baef95db414d5429ede8767f469a253945/gcc%2Ftestsuite%2Fgcc.dg%2Fpr23943.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr23943.c?ref=31c304baef95db414d5429ede8767f469a253945", "patch": "@@ -0,0 +1,20 @@\n+/* This used to ICE in side_effects_p, due to a problem in cse.c.\n+   Origin: marcus at jet dot franken dot de.  */\n+/* { dg-do compile { target x86_64-*-* } } */\n+/* { dg-options \"-O2 -fPIC\" } */\n+\n+typedef long unsigned int size_t;\n+\n+extern size_t strlen (__const char *__s)\n+    __attribute__ ((__nothrow__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));\n+\n+static char savecallsin[256] = \"\";\n+\n+int read_agent_config(void)\n+{\n+  savecallsin[0] = '\\0';\n+\n+  if (savecallsin[strlen(savecallsin) - 1] != '/')\n+    __builtin___strncat_chk (savecallsin, \"/\", sizeof(savecallsin) - strlen(savecallsin) - 1, __builtin_object_size (savecallsin, 2 > 1)) ;\n+  return 0;\n+}"}]}