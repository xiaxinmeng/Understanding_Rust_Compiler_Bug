{"sha": "c6a26dc45d18eb53a4e10b31e3514c4d2ae2208c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZhMjZkYzQ1ZDE4ZWI1M2E0ZTEwYjMxZTM1MTRjNGQyYWUyMjA4Yw==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-04-11T00:28:07Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-04-11T00:28:07Z"}, "message": "cse.c (count_reg_usage): Correctly handle REG_NONNEG notes.\n\n        * cse.c (count_reg_usage): Correctly handle REG_NONNEG notes.\n        (delete_trivially_dead_insns): Renamed from delete_dead_from_cse.\n        * toplev.c (rest_of_compilation): Call delete_trivially_dead_insns\n        instead of delete_dead_from_cse.  Also call delete_trivially_dead_insns\n        between loop optimization passes.\n        * rtl.h: Updated appropriately.\n\nFrom-SVN: r19100", "tree": {"sha": "1b6526c46b39473c92ee7cd2b70a7e002cbcfd90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b6526c46b39473c92ee7cd2b70a7e002cbcfd90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6a26dc45d18eb53a4e10b31e3514c4d2ae2208c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6a26dc45d18eb53a4e10b31e3514c4d2ae2208c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6a26dc45d18eb53a4e10b31e3514c4d2ae2208c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6a26dc45d18eb53a4e10b31e3514c4d2ae2208c/comments", "author": null, "committer": null, "parents": [{"sha": "112bd748e3ff5bc3ae7010d8f233056b5c278cfd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/112bd748e3ff5bc3ae7010d8f233056b5c278cfd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/112bd748e3ff5bc3ae7010d8f233056b5c278cfd"}], "stats": {"total": 35, "additions": 25, "deletions": 10}, "files": [{"sha": "b002afa2453beb5f23206b876658c3037f880db5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6a26dc45d18eb53a4e10b31e3514c4d2ae2208c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6a26dc45d18eb53a4e10b31e3514c4d2ae2208c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c6a26dc45d18eb53a4e10b31e3514c4d2ae2208c", "patch": "@@ -1,3 +1,11 @@\n+Sat Apr 11 01:24:28 1998  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* cse.c (count_reg_usage): Correctly handle REG_NONNEG notes.\n+\t(delete_trivially_dead_insns): Renamed from delete_dead_from_cse.\n+\t* toplev.c (rest_of_compilation): Call delete_trivially_dead_insns\t\tinstead of delete_dead_from_cse.  Also call delete_trivially_dead_insns\n+\tbetween loop optimization passes.\n+\t* rtl.h: Updated appropriately.\n+\n Fri Apr 10 22:28:32 1998  Jeffrey A Law  (law@cygnus.com)\n \n \tReinstall this patch from Jason."}, {"sha": "19a02eff778531a5205892691a7de659e6a23a0e", "filename": "gcc/cse.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6a26dc45d18eb53a4e10b31e3514c4d2ae2208c/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6a26dc45d18eb53a4e10b31e3514c4d2ae2208c/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=c6a26dc45d18eb53a4e10b31e3514c4d2ae2208c", "patch": "@@ -8731,7 +8731,7 @@ count_reg_usage (x, counts, dest, incr)\n     case EXPR_LIST:\n     case INSN_LIST:\n       if (REG_NOTE_KIND (x) == REG_EQUAL\n-\t  || GET_CODE (XEXP (x,0)) == USE)\n+\t  || (REG_NOTE_KIND (x) != REG_NONNEG && GET_CODE (XEXP (x,0)) == USE))\n \tcount_reg_usage (XEXP (x, 0), counts, NULL_RTX, incr);\n       count_reg_usage (XEXP (x, 1), counts, NULL_RTX, incr);\n       return;\n@@ -8754,13 +8754,13 @@ count_reg_usage (x, counts, dest, incr)\n /* Scan all the insns and delete any that are dead; i.e., they store a register\n    that is never used or they copy a register to itself.\n \n-   This is used to remove insns made obviously dead by cse.  It improves the\n-   heuristics in loop since it won't try to move dead invariants out of loops\n-   or make givs for dead quantities.  The remaining passes of the compilation\n-   are also sped up.  */\n+   This is used to remove insns made obviously dead by cse, loop or other\n+   optimizations.  It improves the heuristics in loop since it won't try to\n+   move dead invariants out of loops or make givs for dead quantities.  The\n+   remaining passes of the compilation are also sped up.  */\n \n void\n-delete_dead_from_cse (insns, nreg)\n+delete_trivially_dead_insns (insns, nreg)\n      rtx insns;\n      int nreg;\n {"}, {"sha": "c01770a90f3af24aa256a0e42d72dec95244f242", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6a26dc45d18eb53a4e10b31e3514c4d2ae2208c/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6a26dc45d18eb53a4e10b31e3514c4d2ae2208c/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=c6a26dc45d18eb53a4e10b31e3514c4d2ae2208c", "patch": "@@ -1115,7 +1115,7 @@ extern int read_skip_spaces\t\tPROTO ((FILE *));\n /* In cse.c */\n struct cse_basic_block_data;\n extern int rtx_cost\t\t\tPROTO ((rtx, enum rtx_code));\n-extern void delete_dead_from_cse\tPROTO ((rtx, int));\n+extern void delete_trivially_dead_insns\tPROTO ((rtx, int));\n #ifdef BUFSIZ\n extern int cse_main\t\t\tPROTO ((rtx, int, int, FILE *));\n #endif"}, {"sha": "b841b2c18dbd19458caf92cf481646b3f9113993", "filename": "gcc/toplev.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6a26dc45d18eb53a4e10b31e3514c4d2ae2208c/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6a26dc45d18eb53a4e10b31e3514c4d2ae2208c/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=c6a26dc45d18eb53a4e10b31e3514c4d2ae2208c", "patch": "@@ -3211,7 +3211,7 @@ rest_of_compilation (decl)\n \n       TIMEVAR (cse_time, tem = cse_main (insns, max_reg_num (),\n \t\t\t\t\t 0, rtl_dump_file));\n-      TIMEVAR (cse_time, delete_dead_from_cse (insns, max_reg_num ()));\n+      TIMEVAR (cse_time, delete_trivially_dead_insns (insns, max_reg_num ()));\n \n       if (tem || optimize > 1)\n \tTIMEVAR (jump_time, jump_optimize (insns, 0, 0, 0));\n@@ -3244,8 +3244,15 @@ rest_of_compilation (decl)\n \t       \n \t       loop_optimize (insns, rtl_dump_file, 0);\n \t       \n-\t       /* The regscan pass may not be necessary, but let's\n-\t\t  be safe until we can prove otherwise.  */\n+\t\n+\t       /* The first call to loop_optimize makes some instructions\n+\t\t  trivially dead.  We delete those instructions now in the\n+\t\t  hope that doing so will make the heuristics in loop work\n+\t\t  better and possibly speed up compilation.  */\n+\t       delete_trivially_dead_insns (insns, max_reg_num ());\n+\n+\t       /* The regscan pass is currently necessary as the alias\n+\t\t  analysis code depends on this information.  */\n \t       reg_scan (insns, max_reg_num (), 1);\n \t     }\n \t   loop_optimize (insns, rtl_dump_file, flag_unroll_loops);"}]}