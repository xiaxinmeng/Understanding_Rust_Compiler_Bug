{"sha": "3b76513aee76adbfa5a19dd2d7a27fdae1e02940", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2I3NjUxM2FlZTc2YWRiZmE1YTE5ZGQyZDdhMjdmZGFlMWUwMjk0MA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-28T18:16:02Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-28T18:16:02Z"}, "message": "(output_move_double): Use new local var highest_first to make sure addreg1 gets handled in the overlap case.\n\n(output_move_double): Use new local var\nhighest_first to make sure addreg1 gets handled in the overlap case.\nIn 2-reg-overlap case, really use proper reg in new address.\n\nFrom-SVN: r4788", "tree": {"sha": "64c2327fbfd58d0a77dc7dc058fb43a05a410937", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64c2327fbfd58d0a77dc7dc058fb43a05a410937"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b76513aee76adbfa5a19dd2d7a27fdae1e02940", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b76513aee76adbfa5a19dd2d7a27fdae1e02940", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b76513aee76adbfa5a19dd2d7a27fdae1e02940", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b76513aee76adbfa5a19dd2d7a27fdae1e02940/comments", "author": null, "committer": null, "parents": [{"sha": "fd956e81b750254faf40a2ebce419a99ff823853", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd956e81b750254faf40a2ebce419a99ff823853", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd956e81b750254faf40a2ebce419a99ff823853"}], "stats": {"total": 34, "additions": 22, "deletions": 12}, "files": [{"sha": "da7d0ab91e9815da7a6f0f0339ab44cb2832dbee", "filename": "gcc/config/i860/i860.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b76513aee76adbfa5a19dd2d7a27fdae1e02940/gcc%2Fconfig%2Fi860%2Fi860.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b76513aee76adbfa5a19dd2d7a27fdae1e02940/gcc%2Fconfig%2Fi860%2Fi860.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi860%2Fi860.c?ref=3b76513aee76adbfa5a19dd2d7a27fdae1e02940", "patch": "@@ -572,6 +572,7 @@ output_move_double (operands)\n   enum { REGOP, OFFSOP, MEMOP, PUSHOP, POPOP, CNSTOP, RNDOP } optype0, optype1;\n   rtx latehalf[2];\n   rtx addreg0 = 0, addreg1 = 0;\n+  int highest_first = 0;\n \n   /* First classify both operands.  */\n \n@@ -690,18 +691,19 @@ output_move_double (operands)\n \t  xops[0] = latehalf[0];\n \t  xops[1] = op0;\n \t  output_asm_insn (\"adds %1,%0,%1\", xops);\n-\t  operands[1] = gen_rtx (MEM, DImode, latehalf[0]);\n+\t  operands[1] = gen_rtx (MEM, DImode, op0);\n \t  latehalf[1] = adj_offsettable_operand (operands[1], 4);\n+\t  addreg1 = 0;\n \t}\n       /* Do the late half first.  */\n-      output_asm_insn (singlemove_string (latehalf), latehalf);\n-      /* Then clobber.  */\n-      return singlemove_string (operands);\n+      highest_first = 1;\n     }\n \n-  /* Normal case: do the two words, low-numbered first.  */\n+  /* Normal case: do the two words, low-numbered first.\n+     Overlap case (highest_first set): do high-numbered word first.  */\n \n-  output_asm_insn (singlemove_string (operands), operands);\n+  if (! highest_first)\n+    output_asm_insn (singlemove_string (operands), operands);\n \n   CC_STATUS_PARTIAL_INIT;\n   /* Make any unoffsettable addresses point at high-numbered word.  */\n@@ -719,6 +721,9 @@ output_move_double (operands)\n   if (addreg1)\n     output_asm_insn (\"adds -0x4,%0,%0\", &addreg1);\n \n+  if (highest_first)\n+    output_asm_insn (singlemove_string (operands), operands);\n+\n   return \"\";\n }\n \f"}, {"sha": "42c56275ed9d1f0283d6c4dfb04277f2a7ecf32d", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b76513aee76adbfa5a19dd2d7a27fdae1e02940/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b76513aee76adbfa5a19dd2d7a27fdae1e02940/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=3b76513aee76adbfa5a19dd2d7a27fdae1e02940", "patch": "@@ -1061,6 +1061,7 @@ output_move_double (operands)\n   rtx latehalf[2];\n   rtx addreg0 = 0;\n   rtx addreg1 = 0;\n+  int highest_first = 0;\n \n   /* First classify both operands.  */\n \n@@ -1166,18 +1167,19 @@ output_move_double (operands)\n \t  xops[0] = latehalf[0];\n \t  xops[1] = op0;\n \t  output_asm_insn (\"add %1,%0,%1\", xops);\n-\t  operands[1] = gen_rtx (MEM, DImode, latehalf[0]);\n+\t  operands[1] = gen_rtx (MEM, DImode, op0);\n \t  latehalf[1] = adj_offsettable_operand (operands[1], 4);\n+\t  addreg1 = 0;\n \t}\n       /* Do the late half first.  */\n-      output_asm_insn (singlemove_string (latehalf), latehalf);\n-      /* Then clobber.  */\n-      return singlemove_string (operands);\n+      highest_first = 1;\n     }\n \n-  /* Normal case: do the two words, low-numbered first.  */\n+  /* Normal case: do the two words, low-numbered first.\n+     Overlap case (highest_first set): do high-numbered word first.  */\n \n-  output_asm_insn (singlemove_string (operands), operands);\n+  if (! highest_first)\n+    output_asm_insn (singlemove_string (operands), operands);\n \n   /* Make any unoffsettable addresses point at high-numbered word.  */\n   if (addreg0)\n@@ -1194,6 +1196,9 @@ output_move_double (operands)\n   if (addreg1)\n     output_asm_insn (\"add %0,-0x4,%0\", &addreg1);\n \n+  if (highest_first)\n+    output_asm_insn (singlemove_string (operands), operands);\n+\n   return \"\";\n }\n "}]}