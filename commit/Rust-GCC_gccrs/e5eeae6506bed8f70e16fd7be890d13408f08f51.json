{"sha": "e5eeae6506bed8f70e16fd7be890d13408f08f51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTVlZWFlNjUwNmJlZDhmNzBlMTZmZDdiZTg5MGQxMzQwOGYwOGY1MQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-06-06T23:14:12Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1996-06-06T23:14:12Z"}, "message": "(expand_value_return): Handle PARALLEL return_reg.\n\nFrom-SVN: r12192", "tree": {"sha": "9427b19a8fa0cbd84982d1e85f828504060c56ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9427b19a8fa0cbd84982d1e85f828504060c56ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5eeae6506bed8f70e16fd7be890d13408f08f51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5eeae6506bed8f70e16fd7be890d13408f08f51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5eeae6506bed8f70e16fd7be890d13408f08f51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5eeae6506bed8f70e16fd7be890d13408f08f51/comments", "author": null, "committer": null, "parents": [{"sha": "5c4cdc9fdf288148cc63bd30e37c49a5b147b6a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c4cdc9fdf288148cc63bd30e37c49a5b147b6a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c4cdc9fdf288148cc63bd30e37c49a5b147b6a0"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "687520e290dbec0293f8a2a362bf8c6b1793c2b8", "filename": "gcc/stmt.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5eeae6506bed8f70e16fd7be890d13408f08f51/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5eeae6506bed8f70e16fd7be890d13408f08f51/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=e5eeae6506bed8f70e16fd7be890d13408f08f51", "patch": "@@ -2529,6 +2529,21 @@ expand_value_return (val)\n   if (GET_CODE (return_reg) == REG\n       && REGNO (return_reg) < FIRST_PSEUDO_REGISTER)\n     emit_insn (gen_rtx (USE, VOIDmode, return_reg));\n+  /* Handle calls that return values in multiple non-contiguous locations.\n+     The Irix 6 ABI has examples of this.  */\n+  else if (GET_CODE (return_reg) == PARALLEL)\n+    {\n+      int i;\n+\n+      for (i = 0; i < XVECLEN (return_reg, 0); i++)\n+\t{\n+\t  rtx x = XEXP (XVECEXP (return_reg, 0, i), 0);\n+\n+\t  if (GET_CODE (x) == REG\n+\t      && REGNO (x) < FIRST_PSEUDO_REGISTER)\n+\t    emit_insn (gen_rtx (USE, VOIDmode, x));\n+\t}\n+    }\n \n   /* Does any pending block have cleanups?  */\n "}]}