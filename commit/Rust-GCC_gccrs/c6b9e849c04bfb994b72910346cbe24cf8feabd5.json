{"sha": "c6b9e849c04bfb994b72910346cbe24cf8feabd5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZiOWU4NDljMDRiZmI5OTRiNzI5MTAzNDZjYmUyNGNmOGZlYWJkNQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-05-01T17:45:52Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2017-05-01T17:45:52Z"}, "message": "re PR fortran/37131 (inline matmul for small matrix sizes)\n\n2017-05-01  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/37131\n\t* frontend-passes.c (inline_matmul_assign): Also check bounds\n\tfor allocatable lhs and matrix-vector-multiplication.\n\n2017-05-01  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/37131\n\t* gfortran.dg/matmul_bounds_11.f90:  New test.\n\nFrom-SVN: r247441", "tree": {"sha": "642cc25f3e7ddd62f61cfd6dc2c874f7380178af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/642cc25f3e7ddd62f61cfd6dc2c874f7380178af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6b9e849c04bfb994b72910346cbe24cf8feabd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6b9e849c04bfb994b72910346cbe24cf8feabd5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6b9e849c04bfb994b72910346cbe24cf8feabd5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6b9e849c04bfb994b72910346cbe24cf8feabd5/comments", "author": null, "committer": null, "parents": [{"sha": "706eb1a70d6f1222cf14e84ab77c8b5404641182", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/706eb1a70d6f1222cf14e84ab77c8b5404641182", "html_url": "https://github.com/Rust-GCC/gccrs/commit/706eb1a70d6f1222cf14e84ab77c8b5404641182"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "1cc78c94b037427fda77a77e8a4ea2bf620d74d1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6b9e849c04bfb994b72910346cbe24cf8feabd5/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6b9e849c04bfb994b72910346cbe24cf8feabd5/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c6b9e849c04bfb994b72910346cbe24cf8feabd5", "patch": "@@ -1,3 +1,9 @@\n+2017-05-01  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/37131\n+\t* frontend-passes.c (inline_matmul_assign): Also check bounds\n+\tfor allocatable lhs and matrix-vector-multiplication.\n+\n 2017-04-23  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/80484"}, {"sha": "069ec286dd11d8f9ecebff83814054e4daff1ada", "filename": "gcc/fortran/frontend-passes.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6b9e849c04bfb994b72910346cbe24cf8feabd5/gcc%2Ffortran%2Ffrontend-passes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6b9e849c04bfb994b72910346cbe24cf8feabd5/gcc%2Ffortran%2Ffrontend-passes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ffrontend-passes.c?ref=c6b9e849c04bfb994b72910346cbe24cf8feabd5", "patch": "@@ -3066,9 +3066,10 @@ inline_matmul_assign (gfc_code **c, int *walk_subtrees,\n       gfc_code *lhs_alloc;\n \n       /* Only need to check a single dimension for the A2B2 case for\n-\t bounds checking, the rest will be allocated.  */\n+\t bounds checking, the rest will be allocated.  Also check this\n+\t for A2B1.   */\n \n-      if (gfc_option.rtcheck & GFC_RTCHECK_BOUNDS && m_case == A2B2)\n+      if ((gfc_option.rtcheck & GFC_RTCHECK_BOUNDS) && (m_case == A2B2 || m_case == A2B1))\n \t{\n \t  gfc_code *test;\n \t  gfc_expr *a2, *b1;"}, {"sha": "584eae59c681cbf6a81c8a0e8b72826178c362d8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6b9e849c04bfb994b72910346cbe24cf8feabd5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6b9e849c04bfb994b72910346cbe24cf8feabd5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c6b9e849c04bfb994b72910346cbe24cf8feabd5", "patch": "@@ -1,3 +1,8 @@\n+2017-05-01  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/37131\n+\t* gfortran.dg/matmul_bounds_11.f90:  New test.\n+\n 2017-05-01  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/79715"}, {"sha": "9209760e50b445034adff337201581e521a77eeb", "filename": "gcc/testsuite/gfortran.dg/matmul_bounds_11.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6b9e849c04bfb994b72910346cbe24cf8feabd5/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_bounds_11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6b9e849c04bfb994b72910346cbe24cf8feabd5/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_bounds_11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_bounds_11.f90?ref=c6b9e849c04bfb994b72910346cbe24cf8feabd5", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do run }\n+! { dg-options \"-O -finline-matmul-limit=30 -fcheck=all\" }\n+! { dg-shouldfail \"Dimension of array B incorrect in MATMUL intrinsic\" }\n+program main\n+  real, dimension(:,:), allocatable :: a\n+  real, dimension(:), allocatable :: b\n+  real, dimension(:), allocatable :: res\n+  allocate (a(2,2), b(3))\n+  call random_number(a)\n+  call random_number(b)\n+  res = matmul(a,b)\n+  print *,res\n+end program main\n+! { dg-output \"Fortran runtime error: Dimension of array B incorrect in MATMUL intrinsic.*\" }\n+"}]}