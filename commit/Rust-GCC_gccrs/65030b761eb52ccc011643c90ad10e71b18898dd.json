{"sha": "65030b761eb52ccc011643c90ad10e71b18898dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjUwMzBiNzYxZWI1MmNjYzAxMTY0M2M5MGFkMTBlNzFiMTg4OThkZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-08-03T04:32:00Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-08-03T04:32:00Z"}, "message": "combine.c (combine_instructions): Don't use reg_equal/equiv results if the mode doesn't match.\n\n        * combine.c (combine_instructions): Don't use reg_equal/equiv\n        results if the mode doesn't match.\n\nFrom-SVN: r102679", "tree": {"sha": "329c3ae87e628947fe21ab63b1119ed79d5a2479", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/329c3ae87e628947fe21ab63b1119ed79d5a2479"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65030b761eb52ccc011643c90ad10e71b18898dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65030b761eb52ccc011643c90ad10e71b18898dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65030b761eb52ccc011643c90ad10e71b18898dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65030b761eb52ccc011643c90ad10e71b18898dd/comments", "author": null, "committer": null, "parents": [{"sha": "776928b46c9ac74faa89bfe1b4358b84e9e3ad8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/776928b46c9ac74faa89bfe1b4358b84e9e3ad8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/776928b46c9ac74faa89bfe1b4358b84e9e3ad8e"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "f15d09e9218873dd42ff080f8c95ea25a83e2abe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65030b761eb52ccc011643c90ad10e71b18898dd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65030b761eb52ccc011643c90ad10e71b18898dd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=65030b761eb52ccc011643c90ad10e71b18898dd", "patch": "@@ -1,3 +1,8 @@\n+2005-08-02  Richard Henderson  <rth@redhat.com>\n+\n+\t* combine.c (combine_instructions): Don't use reg_equal/equiv\n+\tresults if the mode doesn't match.\n+\n 2005-08-02  Mark Mitchell  <mark@codesourcery.com>\n \n \t* config/i386/t-mingw32 (NATIVE_SYSTEM_HEADER_DIR): Set it."}, {"sha": "bbd6c0953c3aec1d424adfe9a2bdc0ea9124411c", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65030b761eb52ccc011643c90ad10e71b18898dd/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65030b761eb52ccc011643c90ad10e71b18898dd/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=65030b761eb52ccc011643c90ad10e71b18898dd", "patch": "@@ -860,16 +860,19 @@ combine_instructions (rtx f, unsigned int nregs)\n \t\t  rtx temp = XEXP (links, 0);\n \t\t  if ((set = single_set (temp)) != 0\n \t\t      && (note = find_reg_equal_equiv_note (temp)) != 0\n-\t\t      && GET_CODE (XEXP (note, 0)) != EXPR_LIST\n+\t\t      && (note = XEXP (note, 0), GET_CODE (note)) != EXPR_LIST\n \t\t      /* Avoid using a register that may already been marked\n \t\t\t dead by an earlier instruction.  */\n-\t\t      && ! unmentioned_reg_p (XEXP (note, 0), SET_SRC (set)))\n+\t\t      && ! unmentioned_reg_p (note, SET_SRC (set))\n+\t\t      && (GET_MODE (note) == VOIDmode\n+\t\t\t  ? SCALAR_INT_MODE_P (GET_MODE (SET_DEST (set)))\n+\t\t\t  : GET_MODE (SET_DEST (set)) == GET_MODE (note)))\n \t\t    {\n \t\t      /* Temporarily replace the set's source with the\n \t\t\t contents of the REG_EQUAL note.  The insn will\n \t\t\t be deleted or recognized by try_combine.  */\n \t\t      rtx orig = SET_SRC (set);\n-\t\t      SET_SRC (set) = XEXP (note, 0);\n+\t\t      SET_SRC (set) = note;\n \t\t      next = try_combine (insn, temp, NULL_RTX,\n \t\t\t\t\t  &new_direct_jump_p);\n \t\t      if (next)"}]}