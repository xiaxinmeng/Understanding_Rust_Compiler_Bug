{"sha": "18da4303c191c561224dd04b9012ffa06c096800", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThkYTQzMDNjMTkxYzU2MTIyNGRkMDRiOTAxMmZmYTA2YzA5NjgwMA==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@google.com", "date": "2012-08-15T02:25:19Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2012-08-15T02:25:19Z"}, "message": "Add an xfail manifest for x86_64-unknown-linux-gnu to trunk.\n\nThis patch adds an xfail manifest for trunk for x86_64 builds. I find\nthis useful to determine whether my patch has introduced new failures.\nThe failures in these manifest are always present in trunk and\ndeciding what to ignore is not very straightforward.\n\nI will keep maintaining this manifest out of clean builds. They are\nnot hard to maintain. Manifest files can be generated by going to the\ntop of the build directory and typing:\n\n$ cd <top-of-bld-dir>\n$ <path-to-src>/contrib/testsuite-management --produce_manifest\n\nThis will generate a .xfail file with the triple name of the target\nyou just built.  Once this file exist you can run the validator again\non the build directory with no arguments.  It should produce the\noutput:\n\n$ cd <top-of-bld-dir>\n$ <path-to-src>/contrib/testsuite-management/validate_failures.py\nSource directory: <path-to-src>\nBuild target:     x86_64-unknown-linux-gnu\nManifest:         <path-to-src>/contrib/testsuite-management/x86_64-unknown-linux-gnu.xfail\nGetting actual results from build\n        ./x86_64-unknown-linux-gnu/libstdc++-v3/testsuite/libstdc++.sum\n        ./x86_64-unknown-linux-gnu/libffi/testsuite/libffi.sum\n        ./x86_64-unknown-linux-gnu/libgomp/testsuite/libgomp.sum\n        ./x86_64-unknown-linux-gnu/libgo/libgo.sum\n        ./x86_64-unknown-linux-gnu/boehm-gc/testsuite/boehm-gc.sum\n        ./x86_64-unknown-linux-gnu/libatomic/testsuite/libatomic.sum\n        ./x86_64-unknown-linux-gnu/libmudflap/testsuite/libmudflap.sum\n        ./x86_64-unknown-linux-gnu/libitm/testsuite/libitm.sum\n        ./x86_64-unknown-linux-gnu/libjava/testsuite/libjava.sum\n        ./gcc/testsuite/g++/g++.sum\n        ./gcc/testsuite/gnat/gnat.sum\n        ./gcc/testsuite/ada/acats/acats.sum\n        ./gcc/testsuite/gcc/gcc.sum\n        ./gcc/testsuite/gfortran/gfortran.sum\n        ./gcc/testsuite/obj-c++/obj-c++.sum\n        ./gcc/testsuite/go/go.sum\n        ./gcc/testsuite/objc/objc.sum\n\n\nSUCCESS: No unexpected failures.\n\n\nIf the output shows new failures, you investigate them. If they are\nnot yours, you can add them to the xfail manifest (after reporting\nthem) and then commit the modified .xfail file.\n\nLong term, I would like to have this script pull manifest files from\npostings made to gcc-testresults. This way, we won't have to maintain\nthese .xfail files manually. In branches this is not a big problem,\nbut in trunk it may be a tad annoying.\n\nFrom-SVN: r190404", "tree": {"sha": "1922c8c7f7f82e784d392c49bcf9ae03650245c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1922c8c7f7f82e784d392c49bcf9ae03650245c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18da4303c191c561224dd04b9012ffa06c096800", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18da4303c191c561224dd04b9012ffa06c096800", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18da4303c191c561224dd04b9012ffa06c096800", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18da4303c191c561224dd04b9012ffa06c096800/comments", "author": {"login": "dnovillo", "id": 7295335, "node_id": "MDQ6VXNlcjcyOTUzMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/7295335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnovillo", "html_url": "https://github.com/dnovillo", "followers_url": "https://api.github.com/users/dnovillo/followers", "following_url": "https://api.github.com/users/dnovillo/following{/other_user}", "gists_url": "https://api.github.com/users/dnovillo/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnovillo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnovillo/subscriptions", "organizations_url": "https://api.github.com/users/dnovillo/orgs", "repos_url": "https://api.github.com/users/dnovillo/repos", "events_url": "https://api.github.com/users/dnovillo/events{/privacy}", "received_events_url": "https://api.github.com/users/dnovillo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0823efedd0fb8669b7e840954bc54c3b2cf08d67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0823efedd0fb8669b7e840954bc54c3b2cf08d67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0823efedd0fb8669b7e840954bc54c3b2cf08d67"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "bb876380ec6bee8502003807fc1ebccb1aa55610", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18da4303c191c561224dd04b9012ffa06c096800/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18da4303c191c561224dd04b9012ffa06c096800/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=18da4303c191c561224dd04b9012ffa06c096800", "patch": "@@ -1,3 +1,7 @@\n+2012-08-14   Diego Novillo  <dnovillo@google.com>\n+\n+\t* testsuite-management/x86_64-unknown-linux-gnu.xfail: New.\n+\n 2012-08-13  Diego Novillo  <dnovillo@google.com>\n \n \t* testsuite-management/validate_failures.py (ExpirationDate): Tidy"}, {"sha": "c823fb20fbbbf13bf0726c7504e7ed9972da9c84", "filename": "contrib/testsuite-management/x86_64-unknown-linux-gnu.xfail", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18da4303c191c561224dd04b9012ffa06c096800/contrib%2Ftestsuite-management%2Fx86_64-unknown-linux-gnu.xfail", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18da4303c191c561224dd04b9012ffa06c096800/contrib%2Ftestsuite-management%2Fx86_64-unknown-linux-gnu.xfail", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ftestsuite-management%2Fx86_64-unknown-linux-gnu.xfail?ref=18da4303c191c561224dd04b9012ffa06c096800", "patch": "@@ -0,0 +1,78 @@\n+FAIL: gcc.dg/attr-weakref-1.c (test for excess errors)\n+FAIL: gcc.dg/torture/pr51106-2.c -O0  (internal compiler error)\n+FAIL: gcc.dg/torture/pr51106-2.c -O0  (test for excess errors)\n+FAIL: gcc.dg/torture/pr51106-2.c -O1  (internal compiler error)\n+FAIL: gcc.dg/torture/pr51106-2.c -O1  (test for excess errors)\n+FAIL: gcc.dg/torture/pr51106-2.c -O2  (internal compiler error)\n+FAIL: gcc.dg/torture/pr51106-2.c -O2  (test for excess errors)\n+FAIL: gcc.dg/torture/pr51106-2.c -O2 -flto -fno-use-linker-plugin -flto-partition=none  (internal compiler error)\n+FAIL: gcc.dg/torture/pr51106-2.c -O2 -flto -fno-use-linker-plugin -flto-partition=none  (test for excess errors)\n+FAIL: gcc.dg/torture/pr51106-2.c -O3 -fomit-frame-pointer  (internal compiler error)\n+FAIL: gcc.dg/torture/pr51106-2.c -O3 -fomit-frame-pointer  (test for excess errors)\n+FAIL: gcc.dg/torture/pr51106-2.c -O3 -g  (internal compiler error)\n+FAIL: gcc.dg/torture/pr51106-2.c -O3 -g  (test for excess errors)\n+FAIL: gcc.dg/torture/pr51106-2.c -Os  (internal compiler error)\n+FAIL: gcc.dg/torture/pr51106-2.c -Os  (test for excess errors)\n+FAIL: gfortran.dg/lto/pr45586 f_lto_pr45586_0.o-f_lto_pr45586_0.o link, -O0 -flto -flto-partition=1to1 -fno-use-linker-plugin  (internal compiler error)\n+FAIL: gfortran.dg/lto/pr45586 f_lto_pr45586_0.o-f_lto_pr45586_0.o link, -O0 -flto -flto-partition=none -fuse-linker-plugin (internal compiler error)\n+FAIL: gfortran.dg/lto/pr45586 f_lto_pr45586_0.o-f_lto_pr45586_0.o link, -O0 -flto -fuse-linker-plugin -fno-fat-lto-objects  (internal compiler error)\n+FAIL: gfortran.dg/lto/pr45586-2 f_lto_pr45586-2_0.o-f_lto_pr45586-2_0.o link, -O0 -flto -flto-partition=1to1 -fno-use-linker-plugin  (internal compiler error)\n+FAIL: gfortran.dg/lto/pr45586-2 f_lto_pr45586-2_0.o-f_lto_pr45586-2_0.o link, -O0 -flto -flto-partition=none -fuse-linker-plugin (internal compiler error)\n+FAIL: gfortran.dg/lto/pr45586-2 f_lto_pr45586-2_0.o-f_lto_pr45586-2_0.o link, -O0 -flto -fuse-linker-plugin -fno-fat-lto-objects  (internal compiler error)\n+FAIL: gnat.dg/array11.adb (test for warnings, line 12)\n+FAIL: gnat.dg/object_overflow.adb (test for warnings, line 8)\n+FAIL: libmudflap.c++/pass55-frag.cxx ( -O) execution test\n+FAIL: libmudflap.c++/pass55-frag.cxx (-O2) execution test\n+FAIL: libmudflap.c++/pass55-frag.cxx (-O3) execution test\n+UNRESOLVED: gcc.dg/attr-weakref-1.c compilation failed to produce executable\n+UNRESOLVED: gfortran.dg/lto/pr45586 f_lto_pr45586_0.o-f_lto_pr45586_0.o execute -O0 -flto -flto-partition=1to1 -fno-use-linker-plugin\n+UNRESOLVED: gfortran.dg/lto/pr45586 f_lto_pr45586_0.o-f_lto_pr45586_0.o execute -O0 -flto -flto-partition=none -fuse-linker-plugin\n+UNRESOLVED: gfortran.dg/lto/pr45586 f_lto_pr45586_0.o-f_lto_pr45586_0.o execute -O0 -flto -fuse-linker-plugin -fno-fat-lto-objects\n+UNRESOLVED: gfortran.dg/lto/pr45586-2 f_lto_pr45586-2_0.o-f_lto_pr45586-2_0.o execute -O0 -flto -flto-partition=1to1 -fno-use-linker-plugin\n+UNRESOLVED: gfortran.dg/lto/pr45586-2 f_lto_pr45586-2_0.o-f_lto_pr45586-2_0.o execute -O0 -flto -flto-partition=none -fuse-linker-plugin\n+UNRESOLVED: gfortran.dg/lto/pr45586-2 f_lto_pr45586-2_0.o-f_lto_pr45586-2_0.o execute -O0 -flto -fuse-linker-plugin -fno-fat-lto-objects\n+XPASS: gcc.dg/Wstrict-overflow-18.c (test for bogus messages, line 20)\n+XPASS: gcc.dg/guality/example.c -O0  execution test\n+XPASS: gcc.dg/guality/example.c -O1  execution test\n+XPASS: gcc.dg/guality/example.c -O2  execution test\n+XPASS: gcc.dg/guality/example.c -O2 -flto -fno-use-linker-plugin -flto-partition=none  execution test\n+XPASS: gcc.dg/guality/example.c -Os  execution test\n+XPASS: gcc.dg/guality/guality.c -O0  execution test\n+XPASS: gcc.dg/guality/guality.c -O1  execution test\n+XPASS: gcc.dg/guality/guality.c -O2  execution test\n+XPASS: gcc.dg/guality/guality.c -O2 -flto -fno-use-linker-plugin -flto-partition=none  execution test\n+XPASS: gcc.dg/guality/guality.c -O2 -flto -fuse-linker-plugin -fno-fat-lto-objects  execution test\n+XPASS: gcc.dg/guality/guality.c -O3 -fomit-frame-pointer  execution test\n+XPASS: gcc.dg/guality/guality.c -O3 -g  execution test\n+XPASS: gcc.dg/guality/guality.c -Os  execution test\n+XPASS: gcc.dg/guality/inline-params.c -O2  execution test\n+XPASS: gcc.dg/guality/inline-params.c -O2 -flto -fno-use-linker-plugin -flto-partition=none  execution test\n+XPASS: gcc.dg/guality/inline-params.c -O2 -flto -fuse-linker-plugin -fno-fat-lto-objects  execution test\n+XPASS: gcc.dg/guality/inline-params.c -O3 -fomit-frame-pointer  execution test\n+XPASS: gcc.dg/guality/inline-params.c -O3 -g  execution test\n+XPASS: gcc.dg/guality/inline-params.c -Os  execution test\n+XPASS: gcc.dg/guality/pr41447-1.c -O0  execution test\n+XPASS: gcc.dg/guality/pr41447-1.c -O1  execution test\n+XPASS: gcc.dg/guality/pr41447-1.c -O2  execution test\n+XPASS: gcc.dg/guality/pr41447-1.c -O2 -flto -fno-use-linker-plugin -flto-partition=none  execution test\n+XPASS: gcc.dg/guality/pr41447-1.c -O2 -flto -fuse-linker-plugin -fno-fat-lto-objects  execution test\n+XPASS: gcc.dg/guality/pr41447-1.c -O3 -fomit-frame-pointer  execution test\n+XPASS: gcc.dg/guality/pr41447-1.c -O3 -g  execution test\n+XPASS: gcc.dg/guality/pr41447-1.c -Os  execution test\n+XPASS: gcc.dg/guality/pr41616-1.c -O0  execution test\n+XPASS: gcc.dg/guality/pr41616-1.c -O1  execution test\n+XPASS: gcc.dg/guality/pr41616-1.c -O2  execution test\n+XPASS: gcc.dg/guality/pr41616-1.c -O2 -flto -fno-use-linker-plugin -flto-partition=none  execution test\n+XPASS: gcc.dg/guality/pr41616-1.c -O3 -fomit-frame-pointer  execution test\n+XPASS: gcc.dg/guality/pr41616-1.c -O3 -g  execution test\n+XPASS: gcc.dg/guality/pr41616-1.c -Os  execution test\n+XPASS: gcc.dg/inline_3.c (test for excess errors)\n+XPASS: gcc.dg/inline_4.c (test for excess errors)\n+XPASS: gcc.dg/unroll_2.c (test for excess errors)\n+XPASS: gcc.dg/unroll_3.c (test for excess errors)\n+XPASS: gcc.dg/unroll_4.c (test for excess errors)\n+FAIL: gcc.dg/pr52558-1.c scan-tree-dump-times lim1 \"MEM count_lsm.. count_lsm_flag\" 1\n+FAIL: gcc.dg/pr52558-2.c scan-tree-dump-times lim1 \"MEM.*g_2_lsm_flag\" 1\n+FAIL: gcc.dg/tm/reg-promotion.c scan-tree-dump-times lim1 \"MEM count_lsm.. count_lsm_flag\" 1\n+FAIL: go.test/test/stack.go execution,  -O2 -g\n+FAIL: gcc.target/i386/pad-10.c scan-assembler-not nop"}]}