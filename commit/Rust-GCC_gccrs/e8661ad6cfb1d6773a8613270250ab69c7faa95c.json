{"sha": "e8661ad6cfb1d6773a8613270250ab69c7faa95c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTg2NjFhZDZjZmIxZDY3NzNhODYxMzI3MDI1MGFiNjljN2ZhYTk1Yw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-04-04T08:46:51Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-04-04T08:46:51Z"}, "message": "re PR hsa/70402 (HSA: SBR instruction can be undefined)\n\nFix PR hsa/70402\n\n\tPR hsa/70402\n\t* hsa-gen.c (gen_hsa_insns_for_switch_stmt): Guard index\n\tvalue that is really in range handled by SBR instruction.\n\t* hsa-brig.c (emit_switch_insn): Do not emit unconditional\n\tjump.\n\t* hsa-dump.c (dump_hsa_insn_1): Do not dump default BB.\n\t* hsa.h (hsa_insn_sbr::m_default_bb): Remove field.\n\nFrom-SVN: r234707", "tree": {"sha": "1cd6e7fc6360f385a81f95741e5cddf427798a4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1cd6e7fc6360f385a81f95741e5cddf427798a4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8661ad6cfb1d6773a8613270250ab69c7faa95c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8661ad6cfb1d6773a8613270250ab69c7faa95c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8661ad6cfb1d6773a8613270250ab69c7faa95c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8661ad6cfb1d6773a8613270250ab69c7faa95c/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f13355da300a1f58d0bb7bc4094921dda4169de2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f13355da300a1f58d0bb7bc4094921dda4169de2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f13355da300a1f58d0bb7bc4094921dda4169de2"}], "stats": {"total": 64, "additions": 48, "deletions": 16}, "files": [{"sha": "68574f438c8dc8c443c9b06fd9625e4663613aa9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8661ad6cfb1d6773a8613270250ab69c7faa95c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8661ad6cfb1d6773a8613270250ab69c7faa95c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e8661ad6cfb1d6773a8613270250ab69c7faa95c", "patch": "@@ -1,3 +1,13 @@\n+2016-04-04  Martin Liska  <mliska@suse.cz>\n+\n+\tPR hsa/70402\n+\t* hsa-gen.c (gen_hsa_insns_for_switch_stmt): Guard index\n+\tvalue that is really in range handled by SBR instruction.\n+\t* hsa-brig.c (emit_switch_insn): Do not emit unconditional\n+\tjump.\n+\t* hsa-dump.c (dump_hsa_insn_1): Do not dump default BB.\n+\t* hsa.h (hsa_insn_sbr::m_default_bb): Remove field.\n+\n 2016-04-03  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/70416"}, {"sha": "a943e379f554f44079657d61026b285aec280be3", "filename": "gcc/hsa-brig.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8661ad6cfb1d6773a8613270250ab69c7faa95c/gcc%2Fhsa-brig.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8661ad6cfb1d6773a8613270250ab69c7faa95c/gcc%2Fhsa-brig.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhsa-brig.c?ref=e8661ad6cfb1d6773a8613270250ab69c7faa95c", "patch": "@@ -1577,10 +1577,6 @@ emit_switch_insn (hsa_insn_sbr *sbr)\n \n   brig_code.add (&repr, sizeof (repr));\n   brig_insn_count++;\n-\n-  /* Emit jump to default label.  */\n-  hsa_bb *hbb = hsa_bb_for_bb (sbr->m_default_bb);\n-  emit_unconditional_jump (&hbb->m_label_ref);\n }\n \n /* Emit a HSA convert instruction and all necessary directives, schedule"}, {"sha": "985caca24abc7914ae01ffe3ac9fa06c357b1815", "filename": "gcc/hsa-dump.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8661ad6cfb1d6773a8613270250ab69c7faa95c/gcc%2Fhsa-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8661ad6cfb1d6773a8613270250ab69c7faa95c/gcc%2Fhsa-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhsa-dump.c?ref=e8661ad6cfb1d6773a8613270250ab69c7faa95c", "patch": "@@ -920,9 +920,6 @@ dump_hsa_insn_1 (FILE *f, hsa_insn_basic *insn, int *indent)\n \t  if (i != sbr->m_jump_table.length () - 1)\n \t    fprintf (f, \", \");\n \t}\n-\n-      fprintf (f, \"] /* default: BB %i */\",\n-\t       hsa_bb_for_bb (sbr->m_default_bb)->m_index);\n     }\n   else if (is_a <hsa_insn_arg_block *> (insn))\n     {"}, {"sha": "5baf6073e3b1bd7179e5c3fca5f409d3770c9266", "filename": "gcc/hsa-gen.c", "status": "modified", "additions": 38, "deletions": 6, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8661ad6cfb1d6773a8613270250ab69c7faa95c/gcc%2Fhsa-gen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8661ad6cfb1d6773a8613270250ab69c7faa95c/gcc%2Fhsa-gen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhsa-gen.c?ref=e8661ad6cfb1d6773a8613270250ab69c7faa95c", "patch": "@@ -1515,7 +1515,7 @@ hsa_insn_br::operator new (size_t)\n \n hsa_insn_sbr::hsa_insn_sbr (hsa_op_reg *index, unsigned jump_count)\n   : hsa_insn_basic (1, BRIG_OPCODE_SBR, BRIG_TYPE_B1, index),\n-    m_width (BRIG_WIDTH_1), m_jump_table (vNULL), m_default_bb (NULL),\n+    m_width (BRIG_WIDTH_1), m_jump_table (vNULL),\n     m_label_code_list (new hsa_op_code_list (jump_count))\n {\n }\n@@ -3436,11 +3436,48 @@ get_switch_size (gswitch *s)\n static void\n gen_hsa_insns_for_switch_stmt (gswitch *s, hsa_bb *hbb)\n {\n+  gimple_stmt_iterator it = gsi_for_stmt (s);\n+  gsi_prev (&it);\n+\n+  /* Create preambule that verifies that index - lowest_label >= 0.  */\n+  edge e = split_block (hbb->m_bb, gsi_stmt (it));\n+  e->flags &= ~EDGE_FALLTHRU;\n+  e->flags |= EDGE_TRUE_VALUE;\n+\n   function *func = DECL_STRUCT_FUNCTION (current_function_decl);\n   tree index_tree = gimple_switch_index (s);\n   tree lowest = get_switch_low (s);\n+  tree highest = get_switch_high (s);\n \n   hsa_op_reg *index = hsa_cfun->reg_for_gimple_ssa (index_tree);\n+\n+  hsa_op_reg *cmp1_reg = new hsa_op_reg (BRIG_TYPE_B1);\n+  hsa_op_immed *cmp1_immed = new hsa_op_immed (lowest);\n+  hbb->append_insn (new hsa_insn_cmp (BRIG_COMPARE_GE, cmp1_reg->m_type,\n+\t\t\t\t      cmp1_reg, index, cmp1_immed));\n+\n+  hsa_op_reg *cmp2_reg = new hsa_op_reg (BRIG_TYPE_B1);\n+  hsa_op_immed *cmp2_immed = new hsa_op_immed (highest);\n+  hbb->append_insn (new hsa_insn_cmp (BRIG_COMPARE_LE, cmp2_reg->m_type,\n+\t\t\t\t      cmp2_reg, index, cmp2_immed));\n+\n+  hsa_op_reg *cmp_reg = new hsa_op_reg (BRIG_TYPE_B1);\n+  hbb->append_insn (new hsa_insn_basic (3, BRIG_OPCODE_AND, cmp_reg->m_type,\n+\t\t\t\t\tcmp_reg, cmp1_reg, cmp2_reg));\n+\n+  hbb->append_insn (new hsa_insn_br (cmp_reg));\n+\n+  tree default_label = gimple_switch_default_label (s);\n+  basic_block default_label_bb = label_to_block_fn (func,\n+\t\t\t\t\t\t    CASE_LABEL (default_label));\n+\n+  make_edge (e->src, default_label_bb, EDGE_FALSE_VALUE);\n+\n+  hsa_cfun->m_modified_cfg = true;\n+\n+  /* Basic block with the SBR instruction.  */\n+  hbb = hsa_init_new_bb (e->dest);\n+\n   hsa_op_reg *sub_index = new hsa_op_reg (index->m_type);\n   hbb->append_insn (new hsa_insn_basic (3, BRIG_OPCODE_SUB, sub_index->m_type,\n \t\t\t\t\tsub_index, index,\n@@ -3452,11 +3489,6 @@ gen_hsa_insns_for_switch_stmt (gswitch *s, hsa_bb *hbb)\n   unsigned HOST_WIDE_INT size = tree_to_uhwi (get_switch_size (s));\n \n   hsa_insn_sbr *sbr = new hsa_insn_sbr (sub_index, size + 1);\n-  tree default_label = gimple_switch_default_label (s);\n-  basic_block default_label_bb = label_to_block_fn (func,\n-\t\t\t\t\t\t    CASE_LABEL (default_label));\n-\n-  sbr->m_default_bb = default_label_bb;\n \n   /* Prepare array with default label destination.  */\n   for (unsigned HOST_WIDE_INT i = 0; i <= size; i++)"}, {"sha": "1b57a3c1c99b1f95285c0c2f4f61eeff3f7d81f4", "filename": "gcc/hsa.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8661ad6cfb1d6773a8613270250ab69c7faa95c/gcc%2Fhsa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8661ad6cfb1d6773a8613270250ab69c7faa95c/gcc%2Fhsa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhsa.h?ref=e8661ad6cfb1d6773a8613270250ab69c7faa95c", "patch": "@@ -564,9 +564,6 @@ class hsa_insn_sbr : public hsa_insn_basic\n   /* Jump table.  */\n   vec <basic_block> m_jump_table;\n \n-  /* Default label basic block.  */\n-  basic_block m_default_bb;\n-\n   /* Code list for label references.  */\n   hsa_op_code_list *m_label_code_list;\n "}]}