{"sha": "571a03b876a6b4b7db3fb2051f0b50f58ecd3a91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTcxYTAzYjg3NmE2YjRiN2RiM2ZiMjA1MWYwYjUwZjU4ZWNkM2E5MQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-01-07T21:15:12Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-01-07T21:15:12Z"}, "message": "* predict.c (combine_predictions_for_insn): Avoid division by zero.\n\nFrom-SVN: r48615", "tree": {"sha": "3d8f82c5ac3ab5424c7e563aa3d650605ea6f0e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d8f82c5ac3ab5424c7e563aa3d650605ea6f0e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/571a03b876a6b4b7db3fb2051f0b50f58ecd3a91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/571a03b876a6b4b7db3fb2051f0b50f58ecd3a91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/571a03b876a6b4b7db3fb2051f0b50f58ecd3a91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/571a03b876a6b4b7db3fb2051f0b50f58ecd3a91/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2e9513841e7b1614d5bcde97e7af166481728296", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e9513841e7b1614d5bcde97e7af166481728296", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e9513841e7b1614d5bcde97e7af166481728296"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "6f8967fe617d00fe452adbe6ed496f0449d2e1c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/571a03b876a6b4b7db3fb2051f0b50f58ecd3a91/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/571a03b876a6b4b7db3fb2051f0b50f58ecd3a91/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=571a03b876a6b4b7db3fb2051f0b50f58ecd3a91", "patch": "@@ -1,3 +1,7 @@\n+2002-01-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* predict.c (combine_predictions_for_insn): Avoid division by zero.\n+\n 2002-01-07  Jakub Jelinek  <jakub@redhat.com>\n \n \t* simplify-rtx.c (simplify_plus_minus): Bump n_ops for NOT."}, {"sha": "c35837ed2b7eb413a462ef2ddb8c9271c31370e3", "filename": "gcc/predict.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/571a03b876a6b4b7db3fb2051f0b50f58ecd3a91/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/571a03b876a6b4b7db3fb2051f0b50f58ecd3a91/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=571a03b876a6b4b7db3fb2051f0b50f58ecd3a91", "patch": "@@ -253,8 +253,12 @@ combine_predictions_for_insn (insn, bb)\n \t     * (REG_BR_PROB_BASE - probability));\n \n \t/* Use FP math to avoid overflows of 32bit integers.  */\n-\tcombined_probability = (((double) combined_probability) * probability\n-\t\t\t\t* REG_BR_PROB_BASE / d + 0.5);\n+\tif (d == 0)\n+\t  /* If one probability is 0% and one 100%, avoid division by zero.  */\n+\t  combined_probability = REG_BR_PROB_BASE / 2;\n+\telse\n+\t  combined_probability = (((double) combined_probability) * probability\n+\t\t\t\t  * REG_BR_PROB_BASE / d + 0.5);\n       }\n \n   /* Decide which heuristic to use.  In case we didn't match anything,"}]}