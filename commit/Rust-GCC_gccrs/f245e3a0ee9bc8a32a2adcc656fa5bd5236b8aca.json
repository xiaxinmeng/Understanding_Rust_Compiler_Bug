{"sha": "f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI0NWUzYTBlZTliYzhhMzJhMmFkY2M2NTZmYTViZDUyMzZiOGFjYQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-07-31T16:51:08Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-07-31T16:51:08Z"}, "message": "Move dg-error directives to relevant lines\n\n\t* testsuite/20_util/duration/requirements/typedefs_neg3.cc: Move\n\tdg-error to relevant line.\n\t* testsuite/20_util/headers/type_traits/types_std_c++0x_neg.cc:\n\tLikewise.\n\t* testsuite/23_containers/forward_list/requirements/dr438/\n\tassign_neg.cc: Likewise.\n\t* testsuite/23_containers/forward_list/requirements/dr438/\n\tconstructor_1_neg.cc: Likewise.\n\t* testsuite/23_containers/forward_list/requirements/dr438/\n\tconstructor_2_neg.cc: Likewise.\n\t* testsuite/23_containers/forward_list/requirements/dr438/\n\tinsert_neg.cc: Likewise.\n\t* testsuite/26_numerics/headers/cmath/types_std_c++0x_neg.cc:\n\tLikewise.\n\t* testsuite/26_numerics/random/linear_congruential_engine/\n\trequirements/non_uint_neg.cc: Likewise.\n\t* testsuite/29_atomics/headers/atomic/types_std_c++0x_neg.cc:\n\tLikewise. Also test for std::atomic_address.\n\nFrom-SVN: r238923", "tree": {"sha": "bee8eb4a988601ca4164be109cf8b07a8f19a9f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bee8eb4a988601ca4164be109cf8b07a8f19a9f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35029597264863ed28e612202d945dfce568521c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35029597264863ed28e612202d945dfce568521c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35029597264863ed28e612202d945dfce568521c"}], "stats": {"total": 268, "additions": 104, "deletions": 164}, "files": [{"sha": "a50066eef111ace32a1d3f7f6698e62946462b67", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca", "patch": "@@ -1,3 +1,24 @@\n+2016-07-31  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/20_util/duration/requirements/typedefs_neg3.cc: Move\n+\tdg-error to relevant line.\n+\t* testsuite/20_util/headers/type_traits/types_std_c++0x_neg.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/forward_list/requirements/dr438/\n+\tassign_neg.cc: Likewise.\n+\t* testsuite/23_containers/forward_list/requirements/dr438/\n+\tconstructor_1_neg.cc: Likewise.\n+\t* testsuite/23_containers/forward_list/requirements/dr438/\n+\tconstructor_2_neg.cc: Likewise.\n+\t* testsuite/23_containers/forward_list/requirements/dr438/\n+\tinsert_neg.cc: Likewise.\n+\t* testsuite/26_numerics/headers/cmath/types_std_c++0x_neg.cc:\n+\tLikewise.\n+\t* testsuite/26_numerics/random/linear_congruential_engine/\n+\trequirements/non_uint_neg.cc: Likewise.\n+\t* testsuite/29_atomics/headers/atomic/types_std_c++0x_neg.cc:\n+\tLikewise. Also test for std::atomic_address.\n+\n 2016-07-31  Ville Voutilainen  <ville.voutilainen@gmail.com>\n \n \tAdd missing variable traits, fix testsuite failures."}, {"sha": "7fb022b62219b55eda5c2237d2b72c7fc3b9d193", "filename": "libstdc++-v3/testsuite/20_util/duration/requirements/typedefs_neg3.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Ftypedefs_neg3.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Ftypedefs_neg3.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Ftypedefs_neg3.cc?ref=f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca", "patch": "@@ -30,8 +30,7 @@ void test01()\n   typedef int rep_type;\n   typedef std::ratio<-1> period_type;\n   typedef std::chrono::duration<rep_type, period_type> test_type;\n-  test_type d;\n+  test_type d;  // { dg-error \"required from here\" }\n }\n \n // { dg-error \"period must be positive\" \"\" { target *-*-* } 253 }\n-// { dg-error \"required from here\" \"\" { target *-*-* } 33 }"}, {"sha": "fc9fbe531e01129fa2bcfd99407748dcbd8ceee6", "filename": "libstdc++-v3/testsuite/20_util/headers/type_traits/types_std_c++0x_neg.cc", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fheaders%2Ftype_traits%2Ftypes_std_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fheaders%2Ftype_traits%2Ftypes_std_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fheaders%2Ftype_traits%2Ftypes_std_c%2B%2B0x_neg.cc?ref=f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca", "patch": "@@ -22,15 +22,9 @@\n \n namespace gnu\n {\n-  // C++0x changes from TR1.\n-  using std::has_trivial_constructor;\n-  using std::has_nothrow_constructor;\n-  using std::has_trivial_copy;\n-  using std::has_nothrow_copy;\n+  // C++11 changes from TR1.\n+  using std::has_trivial_constructor; // { dg-error \"has not been declared\" }\n+  using std::has_nothrow_constructor; // { dg-error \"has not been declared\" }\n+  using std::has_trivial_copy;\t      // { dg-error \"has not been declared\" }\n+  using std::has_nothrow_copy;\t      // { dg-error \"has not been declared\" }\n }\n-\n-// { dg-error \"has not been declared\" \"\" { target *-*-* } 26 } \n-// { dg-error \"has not been declared\" \"\" { target *-*-* } 27 } \n-// { dg-error \"has not been declared\" \"\" { target *-*-* } 28 } \n-// { dg-error \"has not been declared\" \"\" { target *-*-* } 29 } \n-"}, {"sha": "1fa2106b4821d4339fc2bbde4a1732a9ed408b70", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/requirements/dr438/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fdr438%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fdr438%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fdr438%2Fassign_neg.cc?ref=f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca", "patch": "@@ -1,6 +1,5 @@\n // { dg-do compile }\n // { dg-options \"-std=gnu++11\" }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 33 }\n \n // Copyright (C) 2009-2016 Free Software Foundation, Inc.\n //\n@@ -30,5 +29,5 @@ void f()\n {\n   typedef std::forward_list<A> test_type;\n   test_type l;\n-  l.assign(10, 1);\n+  l.assign(10, 1); // { dg-error \"no matching\" }\n }"}, {"sha": "829c84d5a053497bca14321896d547730a905775", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/requirements/dr438/constructor_1_neg.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fdr438%2Fconstructor_1_neg.cc?ref=f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca", "patch": "@@ -1,6 +1,5 @@\n // { dg-do compile }\n // { dg-options \"-std=gnu++11\" }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 27 }\n \n // Copyright (C) 2009-2016 Free Software Foundation, Inc.\n //\n@@ -24,5 +23,5 @@\n void f()\n {\n   typedef std::forward_list<std::forward_list<int> > test_type;\n-  test_type l(10, 1);\n+  test_type l(10, 1); // { dg-error \"no matching\" }\n }"}, {"sha": "2ebcec3002dc42a75cefc581b6e96b18da3268d5", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/requirements/dr438/constructor_2_neg.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fdr438%2Fconstructor_2_neg.cc?ref=f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca", "patch": "@@ -1,6 +1,5 @@\n // { dg-do compile }\n // { dg-options \"-std=gnu++11\" }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 28 }\n \n // Copyright (C) 2009-2016 Free Software Foundation, Inc.\n //\n@@ -25,5 +24,5 @@\n void f()\n {\n   typedef std::forward_list<std::forward_list<std::pair<char, char> > > test_type;\n-  test_type l('a', 'b');\n+  test_type l('a', 'b'); // { dg-error \"no matching\" }\n }"}, {"sha": "cc2f2af0f96f1b20104d02b567b995456678faaa", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/requirements/dr438/insert_neg.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fdr438%2Finsert_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fdr438%2Finsert_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fdr438%2Finsert_neg.cc?ref=f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca", "patch": "@@ -1,6 +1,5 @@\n // { dg-do compile }\n // { dg-options \"-std=gnu++11\" }\n-// { dg-error \"no matching\" \"\" { target *-*-* } 33 }\n \n // Copyright (C) 2009-2016 Free Software Foundation, Inc.\n //\n@@ -30,5 +29,5 @@ void f()\n {\n   typedef std::forward_list<A> test_type;\n   test_type l;\n-  l.insert_after(l.begin(), 10, 1);\n+  l.insert_after(l.begin(), 10, 1); // { dg-error \"no matching\" }\n }"}, {"sha": "8910c7e9a906637418fb07744004aa2af14c9964", "filename": "libstdc++-v3/testsuite/26_numerics/headers/cmath/types_std_c++0x_neg.cc", "status": "modified", "additions": 24, "deletions": 48, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Ftypes_std_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Ftypes_std_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcmath%2Ftypes_std_c%2B%2B0x_neg.cc?ref=f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca", "patch": "@@ -22,52 +22,28 @@\n \n namespace gnu\n {\n-  // C++0x changes from TR1.\n-  using std::assoc_laguerre;\n-  using std::assoc_legendre;\n-  using std::beta; \n-  using std::comp_ellint_1;\n-  using std::comp_ellint_2;\n-  using std::comp_ellint_3;\n-  using std::conf_hyperg;\n-  using std::cyl_bessel_i;\n-  using std::cyl_bessel_j;\n-  using std::cyl_bessel_k;\n-  using std::cyl_neumann;\n-  using std::ellint_1;\n-  using std::ellint_2;\n-  using std::ellint_3;\n-  using std::expint;  \n-  using std::hermite;\n-  using std::hyperg;\n-  using std::laguerre;\n-  using std::legendre;\n-  using std::riemann_zeta;\n-  using std::sph_bessel;\n-  using std::sph_legendre;\n-  using std::sph_neumann;\n+  // C++11 changes from TR1.\n+  using std::assoc_laguerre;\t// { dg-error \"has not been declared\" }\n+  using std::assoc_legendre;\t// { dg-error \"has not been declared\" }\n+  using std::beta;\t\t// { dg-error \"has not been declared\" }\n+  using std::comp_ellint_1;\t// { dg-error \"has not been declared\" }\n+  using std::comp_ellint_2;\t// { dg-error \"has not been declared\" }\n+  using std::comp_ellint_3;\t// { dg-error \"has not been declared\" }\n+  using std::conf_hyperg;\t// { dg-error \"has not been declared\" }\n+  using std::cyl_bessel_i;\t// { dg-error \"has not been declared\" }\n+  using std::cyl_bessel_j;\t// { dg-error \"has not been declared\" }\n+  using std::cyl_bessel_k;\t// { dg-error \"has not been declared\" }\n+  using std::cyl_neumann;\t// { dg-error \"has not been declared\" }\n+  using std::ellint_1;\t\t// { dg-error \"has not been declared\" }\n+  using std::ellint_2;\t\t// { dg-error \"has not been declared\" }\n+  using std::ellint_3;\t\t// { dg-error \"has not been declared\" }\n+  using std::expint;\t\t// { dg-error \"has not been declared\" }\n+  using std::hermite;\t\t// { dg-error \"has not been declared\" }\n+  using std::hyperg;\t\t// { dg-error \"has not been declared\" }\n+  using std::laguerre;\t\t// { dg-error \"has not been declared\" }\n+  using std::legendre;\t\t// { dg-error \"has not been declared\" }\n+  using std::riemann_zeta;\t// { dg-error \"has not been declared\" }\n+  using std::sph_bessel;\t// { dg-error \"has not been declared\" }\n+  using std::sph_legendre;\t// { dg-error \"has not been declared\" }\n+  using std::sph_neumann;\t// { dg-error \"has not been declared\" }\n }\n-\n-// { dg-error \"has not been declared\" \"\" { target *-*-* } 26 } \n-// { dg-error \"has not been declared\" \"\" { target *-*-* } 27 } \n-// { dg-error \"has not been declared\" \"\" { target *-*-* } 28 } \n-// { dg-error \"has not been declared\" \"\" { target *-*-* } 29 } \n-// { dg-error \"has not been declared\" \"\" { target *-*-* } 30 } \n-// { dg-error \"has not been declared\" \"\" { target *-*-* } 31 } \n-// { dg-error \"has not been declared\" \"\" { target *-*-* } 32 } \n-// { dg-error \"has not been declared\" \"\" { target *-*-* } 33 } \n-// { dg-error \"has not been declared\" \"\" { target *-*-* } 34 } \n-// { dg-error \"has not been declared\" \"\" { target *-*-* } 35 } \n-// { dg-error \"has not been declared\" \"\" { target *-*-* } 36 } \n-// { dg-error \"has not been declared\" \"\" { target *-*-* } 37 } \n-// { dg-error \"has not been declared\" \"\" { target *-*-* } 38 } \n-// { dg-error \"has not been declared\" \"\" { target *-*-* } 39 } \n-// { dg-error \"has not been declared\" \"\" { target *-*-* } 40 } \n-// { dg-error \"has not been declared\" \"\" { target *-*-* } 41 } \n-// { dg-error \"has not been declared\" \"\" { target *-*-* } 42 } \n-// { dg-error \"has not been declared\" \"\" { target *-*-* } 43 } \n-// { dg-error \"has not been declared\" \"\" { target *-*-* } 44 } \n-// { dg-error \"has not been declared\" \"\" { target *-*-* } 45 } \n-// { dg-error \"has not been declared\" \"\" { target *-*-* } 46 } \n-// { dg-error \"has not been declared\" \"\" { target *-*-* } 47 } \n-// { dg-error \"has not been declared\" \"\" { target *-*-* } 48 } "}, {"sha": "3c7f7bf8256228e9a067e48b6460ef8021a81e3c", "filename": "libstdc++-v3/testsuite/26_numerics/random/linear_congruential_engine/requirements/non_uint_neg.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Frequirements%2Fnon_uint_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Frequirements%2Fnon_uint_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Frequirements%2Fnon_uint_neg.cc?ref=f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca", "patch": "@@ -21,11 +21,10 @@\n // { dg-do compile }\n // { dg-options \"-std=gnu++11\" }\n // { dg-require-cstdint \"\" }\n-// { dg-error \"not a valid type\" \"\" { target *-*-* } 31 }\n \n // 26.4.3.1 class template linear_congruential_engine [rand.eng.lcong]\n // 26.4.2.2 Concept RandomNumberEngine [rand.concept.eng]\n \n #include <random>\n \n-std::linear_congruential_engine<double, 48271, 0, 2147483647> x;\n+std::linear_congruential_engine<double, 48271, 0, 2147483647> x; // { dg-error \"not a valid type\" }"}, {"sha": "dbea9b9c24c06c87a156ba2539c40c222c503eac", "filename": "libstdc++-v3/testsuite/29_atomics/headers/atomic/types_std_c++0x_neg.cc", "status": "modified", "additions": 48, "deletions": 93, "changes": 141, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fheaders%2Fatomic%2Ftypes_std_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fheaders%2Fatomic%2Ftypes_std_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fheaders%2Fatomic%2Ftypes_std_c%2B%2B0x_neg.cc?ref=f245e3a0ee9bc8a32a2adcc656fa5bd5236b8aca", "patch": "@@ -23,101 +23,56 @@\n void test01()\n {\n   // Not global scoped, only namespace std.\n-  using memory_order;\n-  using memory_order_relaxed;\n-  using memory_order_consume;\n-  using memory_order_acquire;\n-  using memory_order_release;\n-  using memory_order_acq_rel;\n-  using memory_order_seq_cst;\n+  using memory_order;\t\t// { dg-error \"expected nested-name-specifier\" }\n+  using memory_order_relaxed;\t// { dg-error \"expected nested-name-specifier\" }\n+  using memory_order_consume;\t// { dg-error \"expected nested-name-specifier\" }\n+  using memory_order_acquire;\t// { dg-error \"expected nested-name-specifier\" }\n+  using memory_order_release;\t// { dg-error \"expected nested-name-specifier\" }\n+  using memory_order_acq_rel;\t// { dg-error \"expected nested-name-specifier\" }\n+  using memory_order_seq_cst;\t// { dg-error \"expected nested-name-specifier\" }\n \n-  using atomic_flag;\n+  using atomic_flag;\t\t// { dg-error \"expected nested-name-specifier\" }\n \n-  using atomic_bool;\n-  using atomic_char;\n-  using atomic_schar;\n-  using atomic_uchar;\n-  using atomic_short;\n-  using atomic_ushort;\n-  using atomic_int;\n-  using atomic_uint;\n-  using atomic_long;\n-  using atomic_ulong;\n-  using atomic_llong;\n-  using atomic_ullong;\n-  using atomic_wchar_t;\n-  using atomic_char16_t;\n-  using atomic_char32_t;\n+  using atomic_bool;\t\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_char;\t\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_schar;\t\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_uchar;\t\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_short;\t\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_ushort;\t\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_int;\t\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_uint;\t\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_long;\t\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_ulong;\t\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_llong;\t\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_ullong;\t\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_wchar_t;\t\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_char16_t;\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_char32_t;\t// { dg-error \"expected nested-name-specifier\" }\n \n-  using atomic_int_least8_t;\n-  using atomic_uint_least8_t;\n-  using atomic_int_least16_t;\n-  using atomic_uint_least16_t;\n-  using atomic_int_least32_t;\n-  using atomic_uint_least32_t;\n-  using atomic_int_least64_t;\n-  using atomic_uint_least64_t;\n-  using atomic_int_fast8_t;\n-  using atomic_uint_fast8_t;\n-  using atomic_int_fast16_t;\n-  using atomic_uint_fast16_t;\n-  using atomic_int_fast32_t;\n-  using atomic_uint_fast32_t;\n-  using atomic_int_fast64_t;\n-  using atomic_uint_fast64_t;\n-  using atomic_intptr_t;\n-  using atomic_uintptr_t;\n-  using atomic_size_t;\n-  using atomic_ptrdiff_t;\n-  using atomic_intmax_t;\n-  using atomic_uintmax_t;\n+  using atomic_int_least8_t;\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_uint_least8_t;\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_int_least16_t;\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_uint_least16_t;\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_int_least32_t;\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_uint_least32_t;\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_int_least64_t;\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_uint_least64_t;\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_int_fast8_t;\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_uint_fast8_t;\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_int_fast16_t;\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_uint_fast16_t;\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_int_fast32_t;\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_uint_fast32_t;\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_int_fast64_t;\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_uint_fast64_t;\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_intptr_t;\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_uintptr_t;\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_size_t;\t\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_ptrdiff_t;\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_intmax_t;\t// { dg-error \"expected nested-name-specifier\" }\n+  using atomic_uintmax_t;\t// { dg-error \"expected nested-name-specifier\" }\n \n-  using atomic_address;\n+  using atomic_address;\t\t// { dg-error \"expected nested-name-specifier\" }\n+  // Present in C++0x drafts but not final C++11 standard:\n+  using std::atomic_address;\t// { dg-error \"has not been declared\" }\n }\n-\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 26 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 27 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 28 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 29 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 30 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 31 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 32 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 34 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 36 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 37 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 38 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 39 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 40 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 41 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 42 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 43 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 44 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 45 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 46 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 47 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 48 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 49 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 50 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 52 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 53 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 54 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 55 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 56 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 57 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 58 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 59 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 60 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 61 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 62 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 63 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 64 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 65 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 66 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 67 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 68 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 69 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 70 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 71 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 72 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 73 }\n-// { dg-error \"expected nested-name-specifier\" \"\" { target *-*-* } 75 }"}]}