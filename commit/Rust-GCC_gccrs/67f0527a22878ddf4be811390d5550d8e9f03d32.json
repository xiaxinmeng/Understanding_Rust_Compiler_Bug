{"sha": "67f0527a22878ddf4be811390d5550d8e9f03d32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdmMDUyN2EyMjg3OGRkZjRiZTgxMTM5MGQ1NTUwZDhlOWYwM2QzMg==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2015-11-14T17:31:16Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2015-11-14T17:31:16Z"}, "message": "re PR fortran/67803 (ICE on concatenating wrong character array constructor)\n\n2015-11-14  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n    PR fortran/67803\n    * array.c (gfc_match_array_constructor): If array constructor included\n    a CHARACTER typespec, check array elements for compatible type.\n\n2015-11-14  Steven G. Kargl  <kargl@gcc.gnu.org>\n\n    PR fortran/67803\n    * gfortran.dg/pr67803.f90: New test.\n\nFrom-SVN: r230379", "tree": {"sha": "26c1f8082673d754485a608d8d4809767d5aff54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26c1f8082673d754485a608d8d4809767d5aff54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67f0527a22878ddf4be811390d5550d8e9f03d32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67f0527a22878ddf4be811390d5550d8e9f03d32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67f0527a22878ddf4be811390d5550d8e9f03d32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67f0527a22878ddf4be811390d5550d8e9f03d32/comments", "author": null, "committer": null, "parents": [{"sha": "230b4edeee99f2585aefe233f6832cb2d4d68631", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/230b4edeee99f2585aefe233f6832cb2d4d68631", "html_url": "https://github.com/Rust-GCC/gccrs/commit/230b4edeee99f2585aefe233f6832cb2d4d68631"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "5fdb86687dfb5c2be6bd447462c01cc86f405010", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f0527a22878ddf4be811390d5550d8e9f03d32/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f0527a22878ddf4be811390d5550d8e9f03d32/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=67f0527a22878ddf4be811390d5550d8e9f03d32", "patch": "@@ -1,3 +1,9 @@\n+2015-11-14  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/67803\n+\t* array.c (gfc_match_array_constructor): If array constructor included\n+\ta CHARACTER typespec, check array elements for compatible type.\n+\n 2015-11-13  Steven G. Kargl  <kargl@gccc.gnu.org>\n \n \tPR fortran/68319"}, {"sha": "1e3f0f2b0abcfd1e714a1e9a84fb5350ddd42cca", "filename": "gcc/fortran/array.c", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f0527a22878ddf4be811390d5550d8e9f03d32/gcc%2Ffortran%2Farray.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f0527a22878ddf4be811390d5550d8e9f03d32/gcc%2Ffortran%2Farray.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farray.c?ref=67f0527a22878ddf4be811390d5550d8e9f03d32", "patch": "@@ -1162,6 +1162,35 @@ gfc_match_array_constructor (gfc_expr **result)\n     {\n       expr = gfc_get_array_expr (ts.type, ts.kind, &where);\n       expr->ts = ts;\n+\n+      /* If the typespec is CHARACTER, check that array elements can\n+\t be converted.  See PR fortran/67803.  */\n+      if (ts.type == BT_CHARACTER)\n+\t{\n+\t  gfc_constructor *c;\n+\n+\t  c = gfc_constructor_first (head);\n+\t  for (; c; c = gfc_constructor_next (c))\n+\t    {\n+\t      if (gfc_numeric_ts (&c->expr->ts)\n+\t\t  || c->expr->ts.type == BT_LOGICAL)\n+\t\t{\n+\t\t  gfc_error (\"Incompatible typespec for array element at %L\",\n+\t\t\t     &c->expr->where);\n+\t\t  return MATCH_ERROR;\n+\t\t}\n+\n+\t      /* Special case null().  */\n+\t      if (c->expr->expr_type == EXPR_FUNCTION\n+\t\t  && c->expr->ts.type == BT_UNKNOWN\n+\t\t  && strcmp (c->expr->symtree->name, \"null\") == 0)\n+\t\t{\n+\t\t  gfc_error (\"Incompatible typespec for array element at %L\",\n+\t\t\t     &c->expr->where);\n+\t\t  return MATCH_ERROR;\n+\t\t}\n+\t    }\n+\t}\n     }\n   else\n     expr = gfc_get_array_expr (BT_UNKNOWN, 0, &where);\n@@ -1171,6 +1200,7 @@ gfc_match_array_constructor (gfc_expr **result)\n     expr->ts.u.cl->length_from_typespec = seen_ts;\n \n   *result = expr;\n+\n   return MATCH_YES;\n \n syntax:"}, {"sha": "bed12411f365815343e013c5d4882c3ae679e897", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f0527a22878ddf4be811390d5550d8e9f03d32/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f0527a22878ddf4be811390d5550d8e9f03d32/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=67f0527a22878ddf4be811390d5550d8e9f03d32", "patch": "@@ -1,3 +1,8 @@\n+2015-11-14  Steven G. Kargl  <kargl@gcc.gnu.org>\n+ \n+\tPR fortran/67803\n+\t* gfortran.dg/pr67803.f90: New test.\n+\n 2015-11-14  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* g++.dg/cpp/ucn-1.C: Fix typo."}, {"sha": "9a8ff309feb1ee887ced08785f6d59da48d2ad6f", "filename": "gcc/testsuite/gfortran.dg/pr67803.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67f0527a22878ddf4be811390d5550d8e9f03d32/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr67803.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67f0527a22878ddf4be811390d5550d8e9f03d32/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr67803.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr67803.f90?ref=67f0527a22878ddf4be811390d5550d8e9f03d32", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do compile }\n+! PR fortran/67803\n+! Original code submitted by Gerhard Steinmetz\n+! <gerhard dot steinmetz dot fortran at t-online dot de >\n+!\n+program p\n+  character(2) :: x(1)\n+  x = '0' // [character :: 1]       ! { dg-error \"Incompatible typespec for\" }\n+  x = '0' // [character :: 1.]      ! { dg-error \"Incompatible typespec for\" }\n+  x = '0' // [character :: 1d1]     ! { dg-error \"Incompatible typespec for\" }\n+  x = '0' // [character :: (0.,1.)] ! { dg-error \"Incompatible typespec for\" }\n+  x = '0' // [character :: .true.]  ! { dg-error \"Incompatible typespec for\" }\n+  x = '0' // [character :: null()]  ! { dg-error \"Incompatible typespec for\" }\n+end"}]}