{"sha": "868fc7506b9b9824de70612823e7dff108001506", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODY4ZmM3NTA2YjliOTgyNGRlNzA2MTI4MjNlN2RmZjEwODAwMTUwNg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-11T22:48:51Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-11T22:48:51Z"}, "message": "(convert_and_check): Don't diagnose overflow in constant expression\nmerely because conversion overflowed.\n\nFrom-SVN: r9626", "tree": {"sha": "50c4e512889fcd9f78b89d82f77dee8f86a04422", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50c4e512889fcd9f78b89d82f77dee8f86a04422"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/868fc7506b9b9824de70612823e7dff108001506", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/868fc7506b9b9824de70612823e7dff108001506", "html_url": "https://github.com/Rust-GCC/gccrs/commit/868fc7506b9b9824de70612823e7dff108001506", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/868fc7506b9b9824de70612823e7dff108001506/comments", "author": null, "committer": null, "parents": [{"sha": "5be1df77c9a811517d0d7af71467c6fba1267909", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5be1df77c9a811517d0d7af71467c6fba1267909", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5be1df77c9a811517d0d7af71467c6fba1267909"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "fc368c8a53d91b2bdb8fcb7476e7eac884e90392", "filename": "gcc/c-common.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/868fc7506b9b9824de70612823e7dff108001506/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/868fc7506b9b9824de70612823e7dff108001506/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=868fc7506b9b9824de70612823e7dff108001506", "patch": "@@ -1369,6 +1369,10 @@ convert_and_check (type, expr)\n \t{\n \t  TREE_OVERFLOW (t) = 0;\n \n+\t  /* Do not diagnose overflow in a constant expression merely\n+\t     because a conversion overflowed.  */\n+\t  TREE_CONSTANT_OVERFLOW (t) = TREE_CONSTANT_OVERFLOW (expr);\n+\n \t  /* No warning for converting 0x80000000 to int.  */\n \t  if (!(TREE_UNSIGNED (type) < TREE_UNSIGNED (TREE_TYPE (expr))\n \t\t&& TREE_CODE (TREE_TYPE (expr)) == INTEGER_TYPE"}]}