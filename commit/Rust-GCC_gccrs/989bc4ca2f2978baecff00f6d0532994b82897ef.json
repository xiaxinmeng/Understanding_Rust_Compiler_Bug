{"sha": "989bc4ca2f2978baecff00f6d0532994b82897ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTg5YmM0Y2EyZjI5NzhiYWVjZmYwMGY2ZDA1MzI5OTRiODI4OTdlZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-08-26T06:44:59Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-08-27T06:07:34Z"}, "message": "tree-optimization/96565 - improve DSE with paths ending in noreturn\n\nThis improves DSEs stmt walking by not considering a DEF without\nuses for further processing (and thus giving up when there's two\npaths to follow).\n\n2020-08-26  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/96565\n\t* tree-ssa-dse.c (dse_classify_store): Remove defs with\n\tno uses from further processing.\n\n\t* gcc.dg/tree-ssa/ssa-dse-40.c: New testcase.\n\t* gcc.dg/builtin-object-size-4.c: Adjust.", "tree": {"sha": "818b5867caed131fd5c269b18d5a1948d6cbb459", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/818b5867caed131fd5c269b18d5a1948d6cbb459"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/989bc4ca2f2978baecff00f6d0532994b82897ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/989bc4ca2f2978baecff00f6d0532994b82897ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/989bc4ca2f2978baecff00f6d0532994b82897ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/989bc4ca2f2978baecff00f6d0532994b82897ef/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ae0cd94abc15e33dc06ca7a5f76f14b1d74129f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ae0cd94abc15e33dc06ca7a5f76f14b1d74129f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ae0cd94abc15e33dc06ca7a5f76f14b1d74129f"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "9f159e36a0f5a3390594914be8e6826e1eaf5203", "filename": "gcc/testsuite/gcc.dg/builtin-object-size-4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/989bc4ca2f2978baecff00f6d0532994b82897ef/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-object-size-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/989bc4ca2f2978baecff00f6d0532994b82897ef/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-object-size-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-object-size-4.c?ref=989bc4ca2f2978baecff00f6d0532994b82897ef", "patch": "@@ -170,6 +170,9 @@ test1 (void *q, int x)\n   r = (char *) L\"abcd\\0efg\";\n   if (__builtin_object_size (r + 2, 3) != sizeof (L\"abcd\\0efg\") - 2)\n     abort ();\n+  /* Prevent DSE from removing calls that prevent bad combining of\n+     addresses and offsets.  */\n+  asm volatile (\"\" : : \"g\" (&a));\n }\n \n size_t l1 = 1;"}, {"sha": "36f69c05d5be2909c9836c76760dc4927b4552c8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dse-40.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/989bc4ca2f2978baecff00f6d0532994b82897ef/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-40.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/989bc4ca2f2978baecff00f6d0532994b82897ef/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-40.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-40.c?ref=989bc4ca2f2978baecff00f6d0532994b82897ef", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-dse1-details\" } */\n+\n+_Bool g(void);\n+\n+void f(int x)\n+{\n+  char arr[x];\n+\n+  arr[0] = 0;\n+\n+  if (g())\n+    __builtin_abort();\n+}\n+\n+/* { dg-final { scan-tree-dump \"Deleted dead store\" \"dse1\" } } */"}, {"sha": "76eed06f17f0eec070f77d6404fc62c21760f3f7", "filename": "gcc/tree-ssa-dse.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/989bc4ca2f2978baecff00f6d0532994b82897ef/gcc%2Ftree-ssa-dse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/989bc4ca2f2978baecff00f6d0532994b82897ef/gcc%2Ftree-ssa-dse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dse.c?ref=989bc4ca2f2978baecff00f6d0532994b82897ef", "patch": "@@ -898,6 +898,17 @@ dse_classify_store (ao_ref *ref, gimple *stmt,\n \t\t*by_clobber_p = false;\n \t      defs.unordered_remove (i);\n \t    }\n+\t  /* If the path ends here we do not need to process it further.\n+\t     This for example happens with calls to noreturn functions.  */\n+\t  else if (gimple_code (def) != GIMPLE_PHI\n+\t\t   && has_zero_uses (gimple_vdef (def)))\n+\t    {\n+\t      /* But if the store is to global memory it is definitely\n+\t\t not dead.  */\n+\t      if (ref_may_alias_global_p (ref))\n+\t\treturn DSE_STORE_LIVE;\n+\t      defs.unordered_remove (i);\n+\t    }\n \t  /* In addition to kills we can remove defs whose only use\n \t     is another def in defs.  That can only ever be PHIs of which\n \t     we track a single for simplicity reasons (we fail for multiple"}]}