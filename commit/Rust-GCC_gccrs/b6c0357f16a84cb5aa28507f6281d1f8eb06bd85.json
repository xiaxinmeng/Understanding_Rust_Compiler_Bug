{"sha": "b6c0357f16a84cb5aa28507f6281d1f8eb06bd85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZjMDM1N2YxNmE4NGNiNWFhMjg1MDdmNjI4MWQxZjhlYjA2YmQ4NQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2012-03-31T21:03:36Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2012-03-31T21:03:36Z"}, "message": "Don't check TARGET_64BIT if TARGET_64BIT_DEFAULT is false\n\n2012-03-31  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR bootstrap/52784\n\t* config/i386/i386.c (ix86_option_override_internal): Don't\n\tcheck TARGET_64BIT if TARGET_64BIT_DEFAULT is false.\n\nFrom-SVN: r186049", "tree": {"sha": "a9bcb8f28f4dfe4ea8a3793ca430a6235b57ada3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9bcb8f28f4dfe4ea8a3793ca430a6235b57ada3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6c0357f16a84cb5aa28507f6281d1f8eb06bd85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6c0357f16a84cb5aa28507f6281d1f8eb06bd85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6c0357f16a84cb5aa28507f6281d1f8eb06bd85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6c0357f16a84cb5aa28507f6281d1f8eb06bd85/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8d960eda478bc9e710f55aaa0ac8849f6c78465a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d960eda478bc9e710f55aaa0ac8849f6c78465a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d960eda478bc9e710f55aaa0ac8849f6c78465a"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "30823d933de3cb8e2596922b4a60dda8c6c21e5d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6c0357f16a84cb5aa28507f6281d1f8eb06bd85/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6c0357f16a84cb5aa28507f6281d1f8eb06bd85/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b6c0357f16a84cb5aa28507f6281d1f8eb06bd85", "patch": "@@ -1,3 +1,9 @@\n+2012-03-31  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR bootstrap/52784\n+\t* config/i386/i386.c (ix86_option_override_internal): Don't\n+\tcheck TARGET_64BIT if TARGET_64BIT_DEFAULT is false.\n+\n 2012-03-31  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* tree-cfg.c (call_can_make_abnormal_goto): New predicate."}, {"sha": "d58dafc157d5a91d4d15534cde87464127687ad6", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6c0357f16a84cb5aa28507f6281d1f8eb06bd85/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6c0357f16a84cb5aa28507f6281d1f8eb06bd85/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=b6c0357f16a84cb5aa28507f6281d1f8eb06bd85", "patch": "@@ -3118,8 +3118,8 @@ ix86_option_override_internal (bool main_args_p)\n #endif\n \n   /* Turn off both OPTION_MASK_ABI_64 and OPTION_MASK_ABI_X32 if\n-     TARGET_64BIT is false.  */\n-  if (!TARGET_64BIT)\n+     TARGET_64BIT_DEFAULT is true and TARGET_64BIT is false.  */\n+  if (TARGET_64BIT_DEFAULT && !TARGET_64BIT)\n     ix86_isa_flags &= ~(OPTION_MASK_ABI_64 | OPTION_MASK_ABI_X32);\n #ifdef TARGET_BI_ARCH\n   else"}]}