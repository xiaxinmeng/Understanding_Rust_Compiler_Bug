{"sha": "3814e88007d6d9abfbdfd53dbcdc92fe1aed23de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzgxNGU4ODAwN2Q2ZDlhYmZiZGZkNTNkYmNkYzkyZmUxYWVkMjNkZQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2016-10-04T17:10:41Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2016-10-04T17:10:41Z"}, "message": "read-md.c: track column numbers\n\ngcc/ChangeLog:\n\t* genattrtab.c (make_internal_attr): Supply dummy column number to\n\tfile_location ctor.\n\t(main): Likewise.\n\t* genoutput.c (init_insn_for_nothing): Likewise.\n\t* gensupport.c (add_define_attr): Likewise.\n\t* read-md.c (message_at_1): Print column number.\n\t(fatal_with_file_and_line): Likewise.\n\t(rtx_reader::read_char): Track column numbers.\n\t(rtx_reader::unread_char): Likewise.\n\t(rtx_reader::rtx_reader): Initialize m_read_md_colno.\n\t(rtx_reader::handle_include): Stash and restore m_read_md_colno.\n\t(rtx_reader::handle_file): Initialize m_read_md_colno.\n\t(rtx_reader::get_current_location): Supply column number to\n\tfile_location ctor.\n\t* read-md.h (struct file_location): Add field \"colno\".\n\t(file_location::file_location): Likewise.\n\t(rtx_reader::get_colno): New accessor.\n\t(rtx_reader::m_read_md_colno): New field.\n\t(rtx_reader::m_last_line_colno): New field.\n\nFrom-SVN: r240752", "tree": {"sha": "674c22b9fe8aab5e932b8be9edc880125ec3af7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/674c22b9fe8aab5e932b8be9edc880125ec3af7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3814e88007d6d9abfbdfd53dbcdc92fe1aed23de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3814e88007d6d9abfbdfd53dbcdc92fe1aed23de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3814e88007d6d9abfbdfd53dbcdc92fe1aed23de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3814e88007d6d9abfbdfd53dbcdc92fe1aed23de/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f72da967576271070086b2252a8463bb69f93abd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f72da967576271070086b2252a8463bb69f93abd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f72da967576271070086b2252a8463bb69f93abd"}], "stats": {"total": 79, "additions": 63, "deletions": 16}, "files": [{"sha": "60aeafb0a16d569fcf858279938fd3fbf0932637", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3814e88007d6d9abfbdfd53dbcdc92fe1aed23de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3814e88007d6d9abfbdfd53dbcdc92fe1aed23de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3814e88007d6d9abfbdfd53dbcdc92fe1aed23de", "patch": "@@ -1,3 +1,25 @@\n+2016-10-04  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* genattrtab.c (make_internal_attr): Supply dummy column number to\n+\tfile_location ctor.\n+\t(main): Likewise.\n+\t* genoutput.c (init_insn_for_nothing): Likewise.\n+\t* gensupport.c (add_define_attr): Likewise.\n+\t* read-md.c (message_at_1): Print column number.\n+\t(fatal_with_file_and_line): Likewise.\n+\t(rtx_reader::read_char): Track column numbers.\n+\t(rtx_reader::unread_char): Likewise.\n+\t(rtx_reader::rtx_reader): Initialize m_read_md_colno.\n+\t(rtx_reader::handle_include): Stash and restore m_read_md_colno.\n+\t(rtx_reader::handle_file): Initialize m_read_md_colno.\n+\t(rtx_reader::get_current_location): Supply column number to\n+\tfile_location ctor.\n+\t* read-md.h (struct file_location): Add field \"colno\".\n+\t(file_location::file_location): Likewise.\n+\t(rtx_reader::get_colno): New accessor.\n+\t(rtx_reader::m_read_md_colno): New field.\n+\t(rtx_reader::m_last_line_colno): New field.\n+\n 2016-10-04  Jakub Jelinek  <jakub@redhat.com>\n \n \t* doc/extend.texi (Java Exceptions): Remove."}, {"sha": "6e0a9b9b6265fafc8fd6ef4a310e1fbd832692cb", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3814e88007d6d9abfbdfd53dbcdc92fe1aed23de/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3814e88007d6d9abfbdfd53dbcdc92fe1aed23de/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=3814e88007d6d9abfbdfd53dbcdc92fe1aed23de", "patch": "@@ -4659,7 +4659,7 @@ make_internal_attr (const char *name, rtx value, int special)\n   attr->is_numeric = 1;\n   attr->is_const = 0;\n   attr->is_special = (special & ATTR_SPECIAL) != 0;\n-  attr->default_val = get_attr_value (file_location (\"<internal>\", 0),\n+  attr->default_val = get_attr_value (file_location (\"<internal>\", 0, 0),\n \t\t\t\t      value, attr, -2);\n }\n \n@@ -5281,7 +5281,7 @@ main (int argc, const char **argv)\n       md_rtx_info info;\n       info.def = rtx_alloc (DEFINE_ASM_ATTRIBUTES);\n       XVEC (info.def, 0) = rtvec_alloc (0);\n-      info.loc = file_location (\"<internal>\", 0);\n+      info.loc = file_location (\"<internal>\", 0, 0);\n       info.index = -1;\n       gen_insn (&info);\n     }"}, {"sha": "f792cb462bf73d395ba97daa7f2d65e4e62ce3dd", "filename": "gcc/genoutput.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3814e88007d6d9abfbdfd53dbcdc92fe1aed23de/gcc%2Fgenoutput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3814e88007d6d9abfbdfd53dbcdc92fe1aed23de/gcc%2Fgenoutput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenoutput.c?ref=3814e88007d6d9abfbdfd53dbcdc92fe1aed23de", "patch": "@@ -980,7 +980,7 @@ init_insn_for_nothing (void)\n   idata = XCNEW (struct data);\n   new (idata) data ();\n   idata->name = \"*placeholder_for_nothing\";\n-  idata->loc = file_location (\"<internal>\", 0);\n+  idata->loc = file_location (\"<internal>\", 0, 0);\n   idata_end = &idata->next;\n }\n "}, {"sha": "cb74aeac2eaede939a4b0a5ba69788c908fe68f3", "filename": "gcc/gensupport.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3814e88007d6d9abfbdfd53dbcdc92fe1aed23de/gcc%2Fgensupport.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3814e88007d6d9abfbdfd53dbcdc92fe1aed23de/gcc%2Fgensupport.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgensupport.c?ref=3814e88007d6d9abfbdfd53dbcdc92fe1aed23de", "patch": "@@ -446,7 +446,7 @@ add_define_attr (const char *name)\n   XEXP (t1, 2) = rtx_alloc (CONST_STRING);\n   XSTR (XEXP (t1, 2), 0) = \"yes\";\n   e->data = t1;\n-  e->loc = file_location (\"built-in\", -1);\n+  e->loc = file_location (\"built-in\", -1, -1);\n   e->next = define_attr_queue;\n   define_attr_queue = e;\n "}, {"sha": "e158be55f9a749491a5b020a1f2b82e8519c8790", "filename": "gcc/read-md.c", "status": "modified", "additions": 24, "deletions": 9, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3814e88007d6d9abfbdfd53dbcdc92fe1aed23de/gcc%2Fread-md.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3814e88007d6d9abfbdfd53dbcdc92fe1aed23de/gcc%2Fread-md.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fread-md.c?ref=3814e88007d6d9abfbdfd53dbcdc92fe1aed23de", "patch": "@@ -218,7 +218,7 @@ print_c_condition (const char *cond)\n static void ATTRIBUTE_PRINTF(2,0)\n message_at_1 (file_location loc, const char *msg, va_list ap)\n {\n-  fprintf (stderr, \"%s:%d: \", loc.filename, loc.lineno);\n+  fprintf (stderr, \"%s:%d:%d: \", loc.filename, loc.lineno, loc.colno);\n   vfprintf (stderr, msg, ap);\n   fputc ('\\n', stderr);\n }\n@@ -274,8 +274,8 @@ fatal_with_file_and_line (const char *msg, ...)\n \n   va_start (ap, msg);\n \n-  fprintf (stderr, \"%s:%d: error: \", rtx_reader_ptr->get_filename (),\n-\t   rtx_reader_ptr->get_lineno ());\n+  fprintf (stderr, \"%s:%d:%d: error: \", rtx_reader_ptr->get_filename (),\n+\t   rtx_reader_ptr->get_lineno (), rtx_reader_ptr->get_colno ());\n   vfprintf (stderr, msg, ap);\n   putc ('\\n', stderr);\n \n@@ -294,9 +294,9 @@ fatal_with_file_and_line (const char *msg, ...)\n     }\n   context[i] = '\\0';\n \n-  fprintf (stderr, \"%s:%d: note: following context is `%s'\\n\",\n+  fprintf (stderr, \"%s:%d:%d: note: following context is `%s'\\n\",\n \t   rtx_reader_ptr->get_filename (), rtx_reader_ptr->get_lineno (),\n-\t   context);\n+\t   rtx_reader_ptr->get_colno (), context);\n \n   va_end (ap);\n   exit (1);\n@@ -384,7 +384,13 @@ rtx_reader::read_char (void)\n \n   ch = getc (m_read_md_file);\n   if (ch == '\\n')\n-    m_read_md_lineno++;\n+    {\n+      m_read_md_lineno++;\n+      m_last_line_colno = m_read_md_colno;\n+      m_read_md_colno = 0;\n+    }\n+  else\n+    m_read_md_colno++;\n \n   return ch;\n }\n@@ -395,7 +401,12 @@ void\n rtx_reader::unread_char (int ch)\n {\n   if (ch == '\\n')\n-    m_read_md_lineno--;\n+    {\n+      m_read_md_lineno--;\n+      m_read_md_colno = m_last_line_colno;\n+    }\n+  else\n+    m_read_md_colno--;\n   ungetc (ch, m_read_md_file);\n }\n \n@@ -908,6 +919,7 @@ rtx_reader::rtx_reader ()\n   m_read_md_file (NULL),\n   m_read_md_filename (NULL),\n   m_read_md_lineno (0),\n+  m_read_md_colno (0),\n   m_first_dir_md_include (NULL),\n   m_last_dir_md_include_ptr (&m_first_dir_md_include)\n {\n@@ -933,7 +945,7 @@ rtx_reader::handle_include (file_location loc)\n {\n   const char *filename;\n   const char *old_filename;\n-  int old_lineno;\n+  int old_lineno, old_colno;\n   char *pathname;\n   FILE *input_file, *old_file;\n \n@@ -982,6 +994,7 @@ rtx_reader::handle_include (file_location loc)\n   old_file = m_read_md_file;\n   old_filename = m_read_md_filename;\n   old_lineno = m_read_md_lineno;\n+  old_colno = m_read_md_colno;\n \n   if (include_callback)\n     include_callback (pathname);\n@@ -995,6 +1008,7 @@ rtx_reader::handle_include (file_location loc)\n   m_read_md_file = old_file;\n   m_read_md_filename = old_filename;\n   m_read_md_lineno = old_lineno;\n+  m_read_md_colno = old_colno;\n \n   /* Do not free the pathname.  It is attached to the various rtx\n      queue elements.  */\n@@ -1011,6 +1025,7 @@ rtx_reader::handle_file ()\n   int c;\n \n   m_read_md_lineno = 1;\n+  m_read_md_colno = 0;\n   while ((c = read_skip_spaces ()) != EOF)\n     {\n       file_location loc = get_current_location ();\n@@ -1055,7 +1070,7 @@ rtx_reader::handle_toplevel_file ()\n file_location\n rtx_reader::get_current_location () const\n {\n-  return file_location (m_read_md_filename, m_read_md_lineno);\n+  return file_location (m_read_md_filename, m_read_md_lineno, m_read_md_colno);\n }\n \n /* Parse a -I option with argument ARG.  */"}, {"sha": "a74cc726b79b3549c7121b7502aeba30f2982f7a", "filename": "gcc/read-md.h", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3814e88007d6d9abfbdfd53dbcdc92fe1aed23de/gcc%2Fread-md.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3814e88007d6d9abfbdfd53dbcdc92fe1aed23de/gcc%2Fread-md.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fread-md.h?ref=3814e88007d6d9abfbdfd53dbcdc92fe1aed23de", "patch": "@@ -25,14 +25,15 @@ along with GCC; see the file COPYING3.  If not see\n /* Records a position in the file.  */\n struct file_location {\n   file_location () {}\n-  file_location (const char *, int);\n+  file_location (const char *, int, int);\n \n   const char *filename;\n   int lineno;\n+  int colno;\n };\n \n-inline file_location::file_location (const char *filename_in, int lineno_in)\n-  : filename (filename_in), lineno (lineno_in) {}\n+inline file_location::file_location (const char *filename_in, int lineno_in, int colno_in)\n+: filename (filename_in), lineno (lineno_in), colno (colno_in) {}\n \n /* Holds one symbol or number in the .md file.  */\n struct md_name {\n@@ -112,6 +113,7 @@ class rtx_reader\n   const char *get_top_level_filename () const { return m_toplevel_fname; }\n   const char *get_filename () const { return m_read_md_filename; }\n   int get_lineno () const { return m_read_md_lineno; }\n+  int get_colno () const { return m_read_md_colno; }\n \n  private:\n   /* A singly-linked list of filenames.  */\n@@ -144,6 +146,14 @@ class rtx_reader\n   /* The current line number in m_read_md_file.  */\n   int m_read_md_lineno;\n \n+  /* The current column number in m_read_md_file.  */\n+  int m_read_md_colno;\n+\n+  /* The column number before the last newline, so that\n+     we can handle unread_char ('\\n') at least once whilst\n+     retaining column information.  */\n+  int m_last_line_colno;\n+\n   /* The first directory to search.  */\n   file_name_list *m_first_dir_md_include;\n "}]}