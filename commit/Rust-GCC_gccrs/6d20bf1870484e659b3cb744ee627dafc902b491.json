{"sha": "6d20bf1870484e659b3cb744ee627dafc902b491", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQyMGJmMTg3MDQ4NGU2NTliM2NiNzQ0ZWU2MjdkYWZjOTAyYjQ5MQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@cavium.com", "date": "2017-07-25T17:17:46Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2017-07-25T17:17:46Z"}, "message": "tree-ssa-uninit.c (warn_uninitialized_vars): Don't warn about memory accesses where the use is for the first operand of a...\n\n2017-07-25  Andrew Pinski  <apinski@cavium.com>\n\n        * tree-ssa-uninit.c (warn_uninitialized_vars): Don't warn about memory\n        accesses where the use is for the first operand of a BIT_INSERT.\n\nFrom-SVN: r250530", "tree": {"sha": "cdaddc7c631c819d11c4bdbc84936697d50fc29c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cdaddc7c631c819d11c4bdbc84936697d50fc29c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d20bf1870484e659b3cb744ee627dafc902b491", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d20bf1870484e659b3cb744ee627dafc902b491", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d20bf1870484e659b3cb744ee627dafc902b491", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d20bf1870484e659b3cb744ee627dafc902b491/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "50ca694de2a2f3ffc7583f53c6a1c1e0f40c5045", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50ca694de2a2f3ffc7583f53c6a1c1e0f40c5045", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50ca694de2a2f3ffc7583f53c6a1c1e0f40c5045"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "a5c563c43e6a818ffcbabbd056cea65c36fed7bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d20bf1870484e659b3cb744ee627dafc902b491/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d20bf1870484e659b3cb744ee627dafc902b491/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d20bf1870484e659b3cb744ee627dafc902b491", "patch": "@@ -1,3 +1,8 @@\n+2017-07-25  Andrew Pinski  <apinski@cavium.com>\n+\n+\t* tree-ssa-uninit.c (warn_uninitialized_vars): Don't warn about memory\n+\taccesses where the use is for the first operand of a BIT_INSERT.\n+\n 2017-07-25  Jim Wilson  <jim.wilson@linaro.org>\n \n \tPR bootstrap/81521"}, {"sha": "67f0d840bf5caee369212894fb2465eb1a9eda50", "filename": "gcc/tree-ssa-uninit.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d20bf1870484e659b3cb744ee627dafc902b491/gcc%2Ftree-ssa-uninit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d20bf1870484e659b3cb744ee627dafc902b491/gcc%2Ftree-ssa-uninit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uninit.c?ref=6d20bf1870484e659b3cb744ee627dafc902b491", "patch": "@@ -273,6 +273,11 @@ warn_uninitialized_vars (bool warn_possibly_uninitialized)\n \t      && gimple_has_location (stmt))\n \t    {\n \t      tree rhs = gimple_assign_rhs1 (stmt);\n+\t      tree lhs = gimple_assign_lhs (stmt);\n+\t      bool has_bit_insert = false;\n+\t      use_operand_p luse_p;\n+\t      imm_use_iterator liter;\n+\n \t      if (TREE_NO_WARNING (rhs))\n \t\tcontinue;\n \n@@ -300,6 +305,26 @@ warn_uninitialized_vars (bool warn_possibly_uninitialized)\n \t\t\t\t\t       ref.offset) <= 0)))\n \t\tcontinue;\n \n+\t      /* Do not warn if the access is then used for a BIT_INSERT_EXPR. */\n+\t      if (TREE_CODE (lhs) == SSA_NAME)\n+\t        FOR_EACH_IMM_USE_FAST (luse_p, liter, lhs)\n+\t\t  {\n+\t\t    gimple *use_stmt = USE_STMT (luse_p);\n+                    /* BIT_INSERT_EXPR first operand should not be considered\n+\t\t       a use for the purpose of uninit warnings.  */\n+\t\t    if (gassign *ass = dyn_cast <gassign *> (use_stmt))\n+\t\t      {\n+\t\t\tif (gimple_assign_rhs_code (ass) == BIT_INSERT_EXPR\n+\t\t\t    && luse_p->use == gimple_assign_rhs1_ptr (ass))\n+\t\t\t  {\n+\t\t\t    has_bit_insert = true;\n+\t\t\t    break;\n+\t\t\t  }\n+\t\t      }\n+\t\t  }\n+\t      if (has_bit_insert)\n+\t\tcontinue;\n+\n \t      /* Limit the walking to a constant number of stmts after\n \t         we overcommit quadratic behavior for small functions\n \t\t and O(n) behavior.  */"}]}