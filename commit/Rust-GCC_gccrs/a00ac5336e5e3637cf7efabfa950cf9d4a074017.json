{"sha": "a00ac5336e5e3637cf7efabfa950cf9d4a074017", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTAwYWM1MzM2ZTVlMzYzN2NmN2VmYWJmYTk1MGNmOWQ0YTA3NDAxNw==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola@nicola.brainstorm.co.uk", "date": "2010-09-28T17:39:43Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2010-09-28T17:39:43Z"}, "message": "In gcc/objc/: 2010-09-28 Nicola Pero <nicola@nicola.brainstorm.co.uk>\n\nIn gcc/objc/:\n2010-09-28  Nicola Pero  <nicola@nicola.brainstorm.co.uk>\n\n        * objc-act.c (encode_type): Fixed encoding enums with the next\n        runtime.\n\nFrom-SVN: r164693", "tree": {"sha": "cc91d1b88290e5ac9957fc3f455deb9d73ada7d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc91d1b88290e5ac9957fc3f455deb9d73ada7d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a00ac5336e5e3637cf7efabfa950cf9d4a074017", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a00ac5336e5e3637cf7efabfa950cf9d4a074017", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a00ac5336e5e3637cf7efabfa950cf9d4a074017", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a00ac5336e5e3637cf7efabfa950cf9d4a074017/comments", "author": null, "committer": null, "parents": [{"sha": "0d6e14fdda97a04b5bfba17b3a0fd30e08f814da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d6e14fdda97a04b5bfba17b3a0fd30e08f814da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d6e14fdda97a04b5bfba17b3a0fd30e08f814da"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "5263b4060cd9f797d81181ca80e7fce779608c77", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a00ac5336e5e3637cf7efabfa950cf9d4a074017/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a00ac5336e5e3637cf7efabfa950cf9d4a074017/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=a00ac5336e5e3637cf7efabfa950cf9d4a074017", "patch": "@@ -1,3 +1,8 @@\n+2010-09-28  Nicola Pero  <nicola@nicola.brainstorm.co.uk>\n+\n+\t* objc-act.c (encode_type): Fixed encoding enums with the next\n+\truntime.\n+\n 2010-09-28  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \tMerge from 'apple/trunk' branch on FSF servers."}, {"sha": "8013252e6fef67f53deeab1b82cfc9d33d5b9389", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a00ac5336e5e3637cf7efabfa950cf9d4a074017/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a00ac5336e5e3637cf7efabfa950cf9d4a074017/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=a00ac5336e5e3637cf7efabfa950cf9d4a074017", "patch": "@@ -8365,7 +8365,6 @@ static void\n encode_type (tree type, int curtype, int format)\n {\n   enum tree_code code = TREE_CODE (type);\n-  char c;\n \n   /* Ignore type qualifiers other than 'const' when encoding a\n      type.  */\n@@ -8387,13 +8386,14 @@ encode_type (tree type, int curtype, int format)\n \t  /* Kludge for backwards-compatibility with gcc-3.3: enums\n \t     are always encoded as 'i' no matter what type they\n \t     actually are (!).  */\n-\t  c = 'i';\n+\t  obstack_1grow (&util_obstack, 'i');\n \t  break;\n \t}\n       /* Else, they are encoded exactly like the integer type that is\n \t used by the compiler to store them.  */\n     case INTEGER_TYPE:\n       {\n+\tchar c;\n \tswitch (GET_MODE_BITSIZE (TYPE_MODE (type)))\n \t  {\n \t  case 8:  c = TYPE_UNSIGNED (type) ? 'C' : 'c'; break;\n@@ -8437,6 +8437,7 @@ encode_type (tree type, int curtype, int format)\n       }\n     case REAL_TYPE:\n       {\n+\tchar c;\n \t/* Floating point types.  */\n \tswitch (GET_MODE_BITSIZE (TYPE_MODE (type)))\n \t  {"}]}