{"sha": "f5dce7973fd8ea778c77f3ce3a1875752d5c7501", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjVkY2U3OTczZmQ4ZWE3NzhjNzdmM2NlM2ExODc1NzUyZDVjNzUwMQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2008-06-12T16:16:39Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2008-06-12T16:16:39Z"}, "message": "re PR fortran/36462 ([F03] Audit intrinsics for KIND arguments)\n\n2008-06-12  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/36462\n        * trans-intrinsic.c (gfc_conv_intrinsic_index_scan_verify):\n        Fix passing of the BACK= argument.\n\n2008-06-12  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/36462\n        * gfortran.dg/index_2.f90: New.\n\nFrom-SVN: r136712", "tree": {"sha": "98b993f8af06ed0a8880cb201683b0ba8738cfde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98b993f8af06ed0a8880cb201683b0ba8738cfde"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f5dce7973fd8ea778c77f3ce3a1875752d5c7501", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5dce7973fd8ea778c77f3ce3a1875752d5c7501", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5dce7973fd8ea778c77f3ce3a1875752d5c7501", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5dce7973fd8ea778c77f3ce3a1875752d5c7501/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "03b3e2712c6ece43c93688cd1e3aef302b44df76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03b3e2712c6ece43c93688cd1e3aef302b44df76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03b3e2712c6ece43c93688cd1e3aef302b44df76"}], "stats": {"total": 78, "additions": 75, "deletions": 3}, "files": [{"sha": "e42da2f1e91f1e0182eb4f191d4fe694362c4c14", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5dce7973fd8ea778c77f3ce3a1875752d5c7501/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5dce7973fd8ea778c77f3ce3a1875752d5c7501/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=f5dce7973fd8ea778c77f3ce3a1875752d5c7501", "patch": "@@ -1,3 +1,9 @@\n+2008-06-12  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/36462\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_index_scan_verify):\n+\tFix passing of the BACK= argument.\n+\n 2008-06-10  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \t* cpp.c: Add copyright notice."}, {"sha": "c032675cfcb8a54b94178b7eb55134f611905913", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5dce7973fd8ea778c77f3ce3a1875752d5c7501/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5dce7973fd8ea778c77f3ce3a1875752d5c7501/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=f5dce7973fd8ea778c77f3ce3a1875752d5c7501", "patch": "@@ -2751,11 +2751,17 @@ gfc_conv_intrinsic_index_scan_verify (gfc_se * se, gfc_expr * expr,\n   tree *args;\n   unsigned int num_args;\n \n-  num_args = gfc_intrinsic_argument_list_length (expr);\n   args = alloca (sizeof (tree) * 5);\n \n-  gfc_conv_intrinsic_function_args (se, expr, args,\n-\t\t\t\t    num_args >= 5 ? 5 : num_args);\n+  /* Get number of arguments; characters count double due to the\n+     string length argument. Kind= is not passed to the libary\n+     and thus ignored.  */\n+  if (expr->value.function.actual->next->next->expr == NULL)\n+    num_args = 4;\n+  else\n+    num_args = 5;\n+\n+  gfc_conv_intrinsic_function_args (se, expr, args, num_args);\n   type = gfc_typenode_for_spec (&expr->ts);\n \n   if (num_args == 4)"}, {"sha": "2026e22b1598ffe28d4dc4b94ee85ec8d5c0a37f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5dce7973fd8ea778c77f3ce3a1875752d5c7501/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5dce7973fd8ea778c77f3ce3a1875752d5c7501/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f5dce7973fd8ea778c77f3ce3a1875752d5c7501", "patch": "@@ -1,3 +1,8 @@\n+2008-06-12  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/36462\n+\t* gfortran.dg/index_2.f90: New.\n+\n 2008-06-12  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/discr9.ad[sb]: New test."}, {"sha": "9b92f0acee70d9d21bd4d5a2c432f5ccdc535bfb", "filename": "gcc/testsuite/gfortran.dg/index_2.f90", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f5dce7973fd8ea778c77f3ce3a1875752d5c7501/gcc%2Ftestsuite%2Fgfortran.dg%2Findex_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f5dce7973fd8ea778c77f3ce3a1875752d5c7501/gcc%2Ftestsuite%2Fgfortran.dg%2Findex_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Findex_2.f90?ref=f5dce7973fd8ea778c77f3ce3a1875752d5c7501", "patch": "@@ -0,0 +1,55 @@\n+! { dg-do run }\n+! { dg-options \"-fdump-tree-original\" }\n+! PR fortran/36462\n+!\n+  implicit none\n+  character(len=10,kind=1) string1\n+  character(len=10,kind=4) string4\n+  string1 = 'ABCDEEDCBA'\n+  string4 = 'ABCDEEDCBA'\n+\n+  if(index(string1,1_'A') /= 1) call abort()\n+  if(index(string4,4_'A') /= 1) call abort()\n+  if(index(string1,1_'A',kind=4) /= 1_4) call abort()\n+  if(index(string4,4_'A',kind=4) /= 1_4) call abort()\n+  if(index(string1,1_'A',kind=1) /= 1_1) call abort()\n+  if(index(string4,4_'A',kind=1) /= 1_1) call abort()\n+\n+  if(index(string1,1_'A',back=.true.) /= 10) call abort()\n+  if(index(string4,4_'A',back=.true.) /= 10) call abort()\n+  if(index(string1,1_'A',kind=4,back=.true.) /= 10_4) call abort()\n+  if(index(string4,4_'A',kind=4,back=.true.) /= 10_4) call abort()\n+  if(index(string1,1_'A',kind=1,back=.true.) /= 10_1) call abort()\n+  if(index(string4,4_'A',kind=1,back=.true.) /= 10_1) call abort()\n+\n+  if(index(string1,1_'A',back=.false.) /= 1) call abort()\n+  if(index(string4,4_'A',back=.false.) /= 1) call abort()\n+  if(index(string1,1_'A',kind=4,back=.false.) /= 1_4) call abort()\n+  if(index(string4,4_'A',kind=4,back=.false.) /= 1_4) call abort()\n+  if(index(string1,1_'A',kind=1,back=.false.) /= 1_1) call abort()\n+  if(index(string4,4_'A',kind=1,back=.false.) /= 1_1) call abort()\n+\n+  if(scan(string1,1_'A') /= 1) call abort()\n+  if(scan(string4,4_'A') /= 1) call abort()\n+  if(scan(string1,1_'A',kind=4) /= 1_4) call abort()\n+  if(scan(string4,4_'A',kind=4) /= 1_4) call abort()\n+  if(scan(string1,1_'A',kind=1) /= 1_1) call abort()\n+  if(scan(string4,4_'A',kind=1) /= 1_1) call abort()\n+\n+  if(scan(string1,1_'A',back=.true.) /= 10) call abort()\n+  if(scan(string4,4_'A',back=.true.) /= 10) call abort()\n+  if(scan(string1,1_'A',kind=4,back=.true.) /= 10_4) call abort()\n+  if(scan(string4,4_'A',kind=4,back=.true.) /= 10_4) call abort()\n+  if(scan(string1,1_'A',kind=1,back=.true.) /= 10_1) call abort()\n+  if(scan(string4,4_'A',kind=1,back=.true.) /= 10_1) call abort()\n+\n+  if(scan(string1,1_'A',back=.false.) /= 1) call abort()\n+  if(scan(string4,4_'A',back=.false.) /= 1) call abort()\n+  if(scan(string1,1_'A',kind=4,back=.false.) /= 1_4) call abort()\n+  if(scan(string4,4_'A',kind=4,back=.false.) /= 1_4) call abort()\n+  if(scan(string1,1_'A',kind=1,back=.false.) /= 1_1) call abort()\n+  if(scan(string4,4_'A',kind=1,back=.false.) /= 1_1) call abort()\n+  end\n+\n+! { dg-final { scan-tree-dump-times \"if ..integer.kind=1.. _gfortran_string_index\" 6 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"if ..integer.kind=1.. _gfortran_string_scan\" 6 \"original\" } }"}]}