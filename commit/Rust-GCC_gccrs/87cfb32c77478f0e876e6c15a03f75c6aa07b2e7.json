{"sha": "87cfb32c77478f0e876e6c15a03f75c6aa07b2e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdjZmIzMmM3NzQ3OGYwZTg3NmU2YzE1YTAzZjc1YzZhYTA3YjJlNw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2009-04-01T20:46:30Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2009-04-01T20:46:30Z"}, "message": "re PR rtl-optimization/39588 (internal compiler error: in trunc_int_for_mode, at explow.c:55)\n\n\tPR rtl-optimization/39588\n\t* combine.c (merge_outer_ops): Do not set the constant when this\n\tis not necessary.\n\t(simplify_shift_const_1): Do not modify it either in this case.\n\nFrom-SVN: r145430", "tree": {"sha": "4fd3653042cd7b017ac9cd6a959417dfec967094", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fd3653042cd7b017ac9cd6a959417dfec967094"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87cfb32c77478f0e876e6c15a03f75c6aa07b2e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87cfb32c77478f0e876e6c15a03f75c6aa07b2e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87cfb32c77478f0e876e6c15a03f75c6aa07b2e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87cfb32c77478f0e876e6c15a03f75c6aa07b2e7/comments", "author": null, "committer": null, "parents": [{"sha": "bbb6eae87edb29b26e7c545645fac3d76a4605d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbb6eae87edb29b26e7c545645fac3d76a4605d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbb6eae87edb29b26e7c545645fac3d76a4605d8"}], "stats": {"total": 33, "additions": 28, "deletions": 5}, "files": [{"sha": "b3b7d78dc804522ea83dc5ff9b1105246154c148", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87cfb32c77478f0e876e6c15a03f75c6aa07b2e7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87cfb32c77478f0e876e6c15a03f75c6aa07b2e7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=87cfb32c77478f0e876e6c15a03f75c6aa07b2e7", "patch": "@@ -1,3 +1,10 @@\n+2009-04-01  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR rtl-optimization/39588\n+\t* combine.c (merge_outer_ops): Do not set the constant when this\n+\tis not necessary.\n+\t(simplify_shift_const_1): Do not modify it either in this case.\n+\n 2009-04-01  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* config/ia64/ia64.c (ia64_handle_option): Inform user that Itanium1"}, {"sha": "80187347aed44aa2a24e83829e2bac0cb6f06bf9", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87cfb32c77478f0e876e6c15a03f75c6aa07b2e7/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87cfb32c77478f0e876e6c15a03f75c6aa07b2e7/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=87cfb32c77478f0e876e6c15a03f75c6aa07b2e7", "patch": "@@ -8971,13 +8971,13 @@ merge_outer_ops (enum rtx_code *pop0, HOST_WIDE_INT *pconst0, enum rtx_code op1,\n \t   && op0 == AND)\n     op0 = UNKNOWN;\n \n+  *pop0 = op0;\n+\n   /* ??? Slightly redundant with the above mask, but not entirely.\n      Moving this above means we'd have to sign-extend the mode mask\n      for the final test.  */\n-  const0 = trunc_int_for_mode (const0, mode);\n-\n-  *pop0 = op0;\n-  *pconst0 = const0;\n+  if (op0 != UNKNOWN && op0 != NEG)\n+    *pconst0 = trunc_int_for_mode (const0, mode);\n \n   return 1;\n }\n@@ -9700,7 +9700,8 @@ simplify_shift_const_1 (enum rtx_code code, enum machine_mode result_mode,\n \n   if (outer_op != UNKNOWN)\n     {\n-      if (GET_MODE_BITSIZE (result_mode) < HOST_BITS_PER_WIDE_INT)\n+      if (GET_RTX_CLASS (outer_op) != RTX_UNARY\n+\t  && GET_MODE_BITSIZE (result_mode) < HOST_BITS_PER_WIDE_INT)\n \touter_const = trunc_int_for_mode (outer_const, result_mode);\n \n       if (outer_op == AND)"}, {"sha": "b61f69a82cd2f66e8243a38a86f80eed9914b838", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87cfb32c77478f0e876e6c15a03f75c6aa07b2e7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87cfb32c77478f0e876e6c15a03f75c6aa07b2e7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=87cfb32c77478f0e876e6c15a03f75c6aa07b2e7", "patch": "@@ -1,3 +1,7 @@\n+2009-04-01  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc.c-torture/compile/20090401-1.c: New test.\n+\n 2009-04-01  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR c++/4926"}, {"sha": "a0058feb2df1bdf7d863740d910b5eeeca52eddf", "filename": "gcc/testsuite/gcc.c-torture/compile/20090401-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87cfb32c77478f0e876e6c15a03f75c6aa07b2e7/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20090401-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87cfb32c77478f0e876e6c15a03f75c6aa07b2e7/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20090401-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20090401-1.c?ref=87cfb32c77478f0e876e6c15a03f75c6aa07b2e7", "patch": "@@ -0,0 +1,11 @@\n+/* PR rtl-optimization/39588 */\n+/* Testcase by Olivier ROUSSEL <olivier.roussel@cril.univ-artois.fr> */\n+\n+#define lit_from_int(in) ((in<0)?(((-in)<<1)|1):(in<<1))\n+\n+void init_clause(int *literals, int size, int *lits)\n+{\n+  int i;\n+  for(i=0; i < size; i++)\n+    lits[i] = lit_from_int(literals[i]);\n+}"}]}