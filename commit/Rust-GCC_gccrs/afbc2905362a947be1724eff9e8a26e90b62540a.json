{"sha": "afbc2905362a947be1724eff9e8a26e90b62540a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZiYzI5MDUzNjJhOTQ3YmUxNzI0ZWZmOWU4YTI2ZTkwYjYyNTQwYQ==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "2000-02-24T20:09:30Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2000-02-24T20:09:30Z"}, "message": "Fix breakage from 6th Feb thread_prologue_and_epilogue_insns change:\n\n\t* sh-protos.h (sh_need_epilogue): Declare.\n\t* sh.c (sh_need_epilogue_known): New static variable.\n\t(sh_need_epilogue): New function.\n\t(function_epilogue): Clear need_epilogue_known.\n\t* sh.md (return): Split into expander / insn pattern.\n\tMake the expander conditional on ! sh_need_epilogue ().\n\nFrom-SVN: r32136", "tree": {"sha": "694f3fe2f71de5bc92bf96d9e4a1b1f76113c13b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/694f3fe2f71de5bc92bf96d9e4a1b1f76113c13b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afbc2905362a947be1724eff9e8a26e90b62540a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afbc2905362a947be1724eff9e8a26e90b62540a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afbc2905362a947be1724eff9e8a26e90b62540a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afbc2905362a947be1724eff9e8a26e90b62540a/comments", "author": null, "committer": null, "parents": [{"sha": "36c265b175b63f894eb3e2e4ade8eb183a28855d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36c265b175b63f894eb3e2e4ade8eb183a28855d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36c265b175b63f894eb3e2e4ade8eb183a28855d"}], "stats": {"total": 44, "additions": 38, "deletions": 6}, "files": [{"sha": "8194605cf6f29b56e8727376b3fdb3cba110511a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afbc2905362a947be1724eff9e8a26e90b62540a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afbc2905362a947be1724eff9e8a26e90b62540a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=afbc2905362a947be1724eff9e8a26e90b62540a", "patch": "@@ -1,3 +1,13 @@\n+Thu Feb 24 20:04:11 2000  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\tFix breakage from 6th Feb thread_prologue_and_epilogue_insns change:\n+\t* sh-protos.h (sh_need_epilogue): Declare.\n+\t* sh.c (sh_need_epilogue_known): New static variable.\n+\t(sh_need_epilogue): New function.\n+\t(function_epilogue): Clear need_epilogue_known.\n+\t* sh.md (return): Split into expander / insn pattern.\n+\tMake the expander conditional on ! sh_need_epilogue ().\n+\n 2000-02-24  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* machmode.h (get_mode_alignment): Declare."}, {"sha": "402bf6068ab0e4706a77156314d480f512b2134c", "filename": "gcc/config/sh/sh-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afbc2905362a947be1724eff9e8a26e90b62540a/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afbc2905362a947be1724eff9e8a26e90b62540a/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh-protos.h?ref=afbc2905362a947be1724eff9e8a26e90b62540a", "patch": "@@ -107,6 +107,7 @@ extern struct rtx_def *get_fpscr_rtx PARAMS ((void));\n extern void output_file_start PARAMS ((FILE *));\n extern void sh_expand_prologue PARAMS ((void));\n extern void sh_expand_epilogue PARAMS ((void));\n+extern int sh_need_epilogue PARAMS ((void));\n extern void function_epilogue PARAMS ((FILE *, int));\n extern int initial_elimination_offset PARAMS ((int, int));\n extern void emit_fpscr_use PARAMS ((void));"}, {"sha": "c90fdb373b4e98067807dfe3748d431c2c3315cf", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afbc2905362a947be1724eff9e8a26e90b62540a/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afbc2905362a947be1724eff9e8a26e90b62540a/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=afbc2905362a947be1724eff9e8a26e90b62540a", "patch": "@@ -3919,6 +3919,26 @@ sh_expand_epilogue ()\n     emit_insn (gen_sp_switch_2 ());\n }\n \n+static int sh_need_epilogue_known = 0;\n+\n+int\n+sh_need_epilogue ()\n+{\n+  if (! sh_need_epilogue_known)\n+    {\n+      rtx epilogue;\n+\n+      start_sequence ();\n+      sh_expand_epilogue ();\n+      epilogue = gen_sequence ();\n+      end_sequence ();\n+      sh_need_epilogue_known\n+\t= (GET_CODE (epilogue) == SEQUENCE && XVECLEN (epilogue, 0) == 0\n+\t   ? -1 : 1);\n+    }\n+  return sh_need_epilogue_known > 0;\n+}\n+\n /* Clear variables at function end.  */\n \n void\n@@ -3927,6 +3947,7 @@ function_epilogue (stream, size)\n      int size ATTRIBUTE_UNUSED;\n {\n   trap_exit = pragma_interrupt = pragma_trapa = pragma_nosave_low_regs = 0;\n+  sh_need_epilogue_known = 0;\n   sp_switch = NULL_RTX;\n }\n "}, {"sha": "62aac30d9c99594c830476a9349531762949a9f0", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afbc2905362a947be1724eff9e8a26e90b62540a/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afbc2905362a947be1724eff9e8a26e90b62540a/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=afbc2905362a947be1724eff9e8a26e90b62540a", "patch": "@@ -3484,12 +3484,12 @@\n }\"\n   [(set_attr \"length\" \"4\")])\n \n-;; ??? This is not the proper place to invoke another compiler pass;\n-;; Alas, there is no proper place to put it.\n-;; ??? This is also an odd place for the call to emit_fpscr_use.  It\n-;; would be all right if it were for an define_expand for return, but\n-;; that doesn't mix with emitting a prologue.\n-(define_insn \"return\"\n+(define_expand \"return\"\n+  [(return)]\n+  \"reload_completed && ! sh_need_epilogue ()\"\n+  \"\")\n+\n+(define_insn \"*return_i\"\n   [(return)]\n   \"reload_completed\"\n   \"%@\t%#\""}]}