{"sha": "04fd785e38c4c37ae4f71704397a27a924baf4d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDRmZDc4NWUzOGM0YzM3YWU0ZjcxNzA0Mzk3YTI3YTkyNGJhZjRkOQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-03-06T23:44:56Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-03-06T23:44:56Z"}, "message": "re PR sanitizer/65280 (-fsanitize=bounds does not detect out-of-bounds access)\n\n\tPR sanitizer/65280\n\t* doc/invoke.texi: Update description of -fsanitize=bounds.\n\n\t* c-ubsan.c (ubsan_instrument_bounds): Check for COMPONENT_REF\n\tbefore trying to figure out whether we have a flexible array member.\n\n\t* c-c++-common/ubsan/bounds-1.c: Add testing of flexible array\n\tmember-like arrays.\n\t* c-c++-common/ubsan/bounds-8.c: New test.\n\t* c-c++-common/ubsan/bounds-9.c: New test.\n\t* gcc.dg/ubsan/bounds-2.c: New test.\n\nCo-Authored-By: Martin Uecker <uecker@eecs.berkeley.edu>\n\nFrom-SVN: r221250", "tree": {"sha": "7064860fcc0879e90d67ecc31bc3d27458bf2a97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7064860fcc0879e90d67ecc31bc3d27458bf2a97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04fd785e38c4c37ae4f71704397a27a924baf4d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04fd785e38c4c37ae4f71704397a27a924baf4d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04fd785e38c4c37ae4f71704397a27a924baf4d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04fd785e38c4c37ae4f71704397a27a924baf4d9/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a78cbe2976549780489d72b895a9adb528ba874b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a78cbe2976549780489d72b895a9adb528ba874b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a78cbe2976549780489d72b895a9adb528ba874b"}], "stats": {"total": 92, "additions": 88, "deletions": 4}, "files": [{"sha": "f71958d88664cc945d61971b9ed482f73aa42da8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04fd785e38c4c37ae4f71704397a27a924baf4d9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04fd785e38c4c37ae4f71704397a27a924baf4d9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=04fd785e38c4c37ae4f71704397a27a924baf4d9", "patch": "@@ -1,3 +1,9 @@\n+2015-03-07  Marek Polacek  <polacek@redhat.com>\n+\t    Martin Uecker  <uecker@eecs.berkeley.edu>\n+\n+\tPR sanitizer/65280\n+\t* doc/invoke.texi: Update description of -fsanitize=bounds.\n+\n 2015-03-06  Wilco Dijkstra  <wilco.dijkstra@arm.com>\n \n \t* tree-ssa-phiopt.c (neg_replacement): Remove."}, {"sha": "6bd5a28fa8bdc383573012f1749a2058d3bbc2bd", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04fd785e38c4c37ae4f71704397a27a924baf4d9/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04fd785e38c4c37ae4f71704397a27a924baf4d9/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=04fd785e38c4c37ae4f71704397a27a924baf4d9", "patch": "@@ -1,3 +1,9 @@\n+2015-03-07  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR sanitizer/65280\n+\t* c-ubsan.c (ubsan_instrument_bounds): Check for COMPONENT_REF\n+\tbefore trying to figure out whether we have a flexible array member.\n+\n 2015-03-06  Eric Botcazou  <ebotcazou@adacore.com>\n             Jonathan Wakely  <jwakely.gcc@gmail.com>\n "}, {"sha": "a14426f962467aa5148be765cfe89383cfbe8ef5", "filename": "gcc/c-family/c-ubsan.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04fd785e38c4c37ae4f71704397a27a924baf4d9/gcc%2Fc-family%2Fc-ubsan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04fd785e38c4c37ae4f71704397a27a924baf4d9/gcc%2Fc-family%2Fc-ubsan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ubsan.c?ref=04fd785e38c4c37ae4f71704397a27a924baf4d9", "patch": "@@ -303,8 +303,9 @@ ubsan_instrument_bounds (location_t loc, tree array, tree *index,\n \n   /* Detect flexible array members and suchlike.  */\n   tree base = get_base_address (array);\n-  if (base && (TREE_CODE (base) == INDIRECT_REF\n-\t       || TREE_CODE (base) == MEM_REF))\n+  if (TREE_CODE (array) == COMPONENT_REF\n+      && base && (TREE_CODE (base) == INDIRECT_REF\n+\t\t  || TREE_CODE (base) == MEM_REF))\n     {\n       tree next = NULL_TREE;\n       tree cref = array;"}, {"sha": "67814d40d5fd8f33cbc96a04ef519ad832e3de0c", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04fd785e38c4c37ae4f71704397a27a924baf4d9/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04fd785e38c4c37ae4f71704397a27a924baf4d9/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=04fd785e38c4c37ae4f71704397a27a924baf4d9", "patch": "@@ -5704,8 +5704,8 @@ a++;\n @item -fsanitize=bounds\n @opindex fsanitize=bounds\n This option enables instrumentation of array bounds.  Various out of bounds\n-accesses are detected.  Flexible array members and initializers of variables\n-with static storage are not instrumented.\n+accesses are detected.  Flexible array members, flexible array member-like\n+arrays, and initializers of variables with static storage are not instrumented.\n \n @item -fsanitize=alignment\n @opindex fsanitize=alignment"}, {"sha": "0a9c561c1aebe0c84f2942ec2620a8211f500e33", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04fd785e38c4c37ae4f71704397a27a924baf4d9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04fd785e38c4c37ae4f71704397a27a924baf4d9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=04fd785e38c4c37ae4f71704397a27a924baf4d9", "patch": "@@ -1,3 +1,13 @@\n+2015-03-07  Marek Polacek  <polacek@redhat.com>\n+\t    Martin Uecker  <uecker@eecs.berkeley.edu>\n+\n+\tPR sanitizer/65280\n+\t* c-c++-common/ubsan/bounds-1.c: Add testing of flexible array\n+\tmember-like arrays.\n+\t* c-c++-common/ubsan/bounds-8.c: New test.\n+\t* c-c++-common/ubsan/bounds-9.c: New test.\n+\t* gcc.dg/ubsan/bounds-2.c: New test.\n+\n 2015-03-05  Martin Sebor  <msebor@redhat.com>\n \n \t* PR testsuite/63175"}, {"sha": "5014f6f1f7efc58a5c43dbaa7087aaba595e26ce", "filename": "gcc/testsuite/c-c++-common/ubsan/bounds-1.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04fd785e38c4c37ae4f71704397a27a924baf4d9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04fd785e38c4c37ae4f71704397a27a924baf4d9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-1.c?ref=04fd785e38c4c37ae4f71704397a27a924baf4d9", "patch": "@@ -6,6 +6,7 @@\n struct S { int a[10]; };\n struct T { int l; int a[]; };\n struct U { int l; int a[0]; };\n+struct V { int l; int a[1]; };\n \n __attribute__ ((noinline, noclone))\n void\n@@ -64,9 +65,14 @@ main (void)\n   struct T *t = (struct T *) __builtin_malloc (sizeof (struct T) + 10);\n   t->a[1] = 1;\n \n+  /* Don't instrument zero-sized arrays (GNU extension).  */\n   struct U *u = (struct U *) __builtin_malloc (sizeof (struct U) + 10);\n   u->a[1] = 1;\n \n+  /* Don't instrument last array in a struct.  */\n+  struct V *v = (struct V *) __builtin_malloc (sizeof (struct V) + 10);\n+  v->a[1] = 1;\n+\n   long int *d[10][5];\n   d[9][0] = (long int *) 0;\n   d[8][3] = d[9][0];"}, {"sha": "9a1b1d25c67806eb37188c5fdfe54520c77d5363", "filename": "gcc/testsuite/c-c++-common/ubsan/bounds-8.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04fd785e38c4c37ae4f71704397a27a924baf4d9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04fd785e38c4c37ae4f71704397a27a924baf4d9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-8.c?ref=04fd785e38c4c37ae4f71704397a27a924baf4d9", "patch": "@@ -0,0 +1,13 @@\n+/* PR sanitizer/65280 */\n+/* { dg-do run } */\n+/* { dg-options \"-fsanitize=bounds\" } */\n+\n+int\n+main (void)\n+{\n+  int *t = (int *) __builtin_malloc (sizeof (int) * 10);\n+  int (*a)[1] = (int (*)[1]) t;\n+  (*a)[2] = 1;\n+}\n+\n+/* { dg-output \"index 2 out of bounds for type 'int \\\\\\[1\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}, {"sha": "61c11f4b3b8a2f9439bbfab260b6ead5058f91e0", "filename": "gcc/testsuite/c-c++-common/ubsan/bounds-9.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04fd785e38c4c37ae4f71704397a27a924baf4d9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04fd785e38c4c37ae4f71704397a27a924baf4d9/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fbounds-9.c?ref=04fd785e38c4c37ae4f71704397a27a924baf4d9", "patch": "@@ -0,0 +1,24 @@\n+/* PR sanitizer/65280 */\n+/* { dg-do run } */\n+/* { dg-options \"-fsanitize=bounds\" } */\n+/* Origin: Martin Uecker <uecker@eecs.berkeley.edu> */\n+\n+void\n+foo (volatile int (*a)[3])\n+{\n+  (*a)[3] = 1;\t// error\n+  a[0][0] = 1;\t// ok\n+  a[1][0] = 1;\t// ok\n+  a[1][4] = 1;\t// error\n+}\n+\n+int\n+main ()\n+{\n+  volatile int a[20];\n+  foo ((int (*)[3]) &a);\n+  return 0;\n+}\n+\n+/* { dg-output \"index 3 out of bounds for type 'int \\\\\\[3\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*index 4 out of bounds for type 'int \\\\\\[3\\\\\\]'\" } */"}, {"sha": "3e88035b2069cd4827c9a09f13c5ec0a131f37b3", "filename": "gcc/testsuite/gcc.dg/ubsan/bounds-2.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04fd785e38c4c37ae4f71704397a27a924baf4d9/gcc%2Ftestsuite%2Fgcc.dg%2Fubsan%2Fbounds-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04fd785e38c4c37ae4f71704397a27a924baf4d9/gcc%2Ftestsuite%2Fgcc.dg%2Fubsan%2Fbounds-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fubsan%2Fbounds-2.c?ref=04fd785e38c4c37ae4f71704397a27a924baf4d9", "patch": "@@ -0,0 +1,18 @@\n+/* PR sanitizer/65280 */\n+/* { dg-do run } */\n+/* { dg-options \"-fsanitize=bounds\" } */\n+\n+void\n+foo (int n, int (*b)[n])\n+{\n+  (*b)[n] = 1;\n+}\n+\n+int\n+main ()\n+{\n+  int a[20];\n+  foo (3, (int (*)[3]) &a);\n+}\n+\n+/* { dg-output \"index 3 out of bounds for type 'int \\\\\\[\\\\\\*\\\\\\]'\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */"}]}