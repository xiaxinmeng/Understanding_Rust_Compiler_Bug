{"sha": "bf3c6caf5a72ac24df66dcd3d8758371ce66b0bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmYzYzZjYWY1YTcyYWMyNGRmNjZkY2QzZDg3NTgzNzFjZTY2YjBiYw==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2009-05-28T20:06:49Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2009-05-28T20:06:49Z"}, "message": "2009-05-28  Steve Ellcey  <sje@cup.hp.com>\n\n\t* doc/invoke.texi (IA-64 Options)\n\tAdd -msdata, -mfused-madd, -mno-inline-float-divide, \n\t-mno-inline-int-divide, -mno-inline-sqrt, -msched-spec-ldc,\n\t-msched-spec-control-ldc, -msched-prefer-non-data-spec-insns,\n\t-msched-prefer-non-control-spec-insns,\n\t-msched-stop-bits-after-every-cycle,\n\t-msched-count-spec-in-critical-path,\n\t-msel-sched-dont-check-control-spec, -msched-fp-mem-deps-zero-cost\n\t-msched-max-memory-insns-hard-limit, -msched-max-memory-insns\n\tRemove -mt, -pthread, -msched-ldc, -mno-sched-control-ldc,\n\tand -msched-spec-verbose.\n\nFrom-SVN: r147960", "tree": {"sha": "e20d904c0f322830941846e6dde836dae4701754", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e20d904c0f322830941846e6dde836dae4701754"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf3c6caf5a72ac24df66dcd3d8758371ce66b0bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf3c6caf5a72ac24df66dcd3d8758371ce66b0bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf3c6caf5a72ac24df66dcd3d8758371ce66b0bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf3c6caf5a72ac24df66dcd3d8758371ce66b0bc/comments", "author": null, "committer": null, "parents": [{"sha": "41850419739b8336c2b698e82be06e8b8c1a3c82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41850419739b8336c2b698e82be06e8b8c1a3c82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41850419739b8336c2b698e82be06e8b8c1a3c82"}], "stats": {"total": 127, "additions": 84, "deletions": 43}, "files": [{"sha": "a34a875b3afc7f5abc4f391a476be4e01febbee7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf3c6caf5a72ac24df66dcd3d8758371ce66b0bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf3c6caf5a72ac24df66dcd3d8758371ce66b0bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf3c6caf5a72ac24df66dcd3d8758371ce66b0bc", "patch": "@@ -1,3 +1,17 @@\n+2009-05-28  Steve Ellcey  <sje@cup.hp.com>\n+\n+\t* doc/invoke.texi (IA-64 Options)\n+\tAdd -msdata, -mfused-madd, -mno-inline-float-divide, \n+\t-mno-inline-int-divide, -mno-inline-sqrt, -msched-spec-ldc,\n+\t-msched-spec-control-ldc, -msched-prefer-non-data-spec-insns,\n+\t-msched-prefer-non-control-spec-insns,\n+\t-msched-stop-bits-after-every-cycle,\n+\t-msched-count-spec-in-critical-path,\n+\t-msel-sched-dont-check-control-spec, -msched-fp-mem-deps-zero-cost\n+\t-msched-max-memory-insns-hard-limit, -msched-max-memory-insns\n+\tRemove -mt, -pthread, -msched-ldc, -mno-sched-control-ldc,\n+\tand -msched-spec-verbose.\n+\n 2009-05-28  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config/arm/lib1funcs.asm (__clear_cache): Define if"}, {"sha": "ca059df9445214c5247b0b45505da271df5714b7", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 70, "deletions": 43, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf3c6caf5a72ac24df66dcd3d8758371ce66b0bc/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf3c6caf5a72ac24df66dcd3d8758371ce66b0bc/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=bf3c6caf5a72ac24df66dcd3d8758371ce66b0bc", "patch": "@@ -593,21 +593,26 @@ Objective-C and Objective-C++ Dialects}.\n \n @emph{IA-64 Options}\n @gccoptlist{-mbig-endian  -mlittle-endian  -mgnu-as  -mgnu-ld  -mno-pic @gol\n--mvolatile-asm-stop  -mregister-names  -mno-sdata @gol\n--mconstant-gp  -mauto-pic  -minline-float-divide-min-latency @gol\n+-mvolatile-asm-stop  -mregister-names  -msdata -mno-sdata @gol\n+-mconstant-gp  -mauto-pic  -mfused-madd @gol\n+-minline-float-divide-min-latency @gol\n -minline-float-divide-max-throughput @gol\n+-mno-inline-float-divide @gol\n -minline-int-divide-min-latency @gol\n -minline-int-divide-max-throughput  @gol\n+-mno-inline-int-divide @gol\n -minline-sqrt-min-latency -minline-sqrt-max-throughput @gol\n--mno-dwarf2-asm -mearly-stop-bits @gol\n+-mno-inline-sqrt @gol\n+-mdwarf2-asm -mearly-stop-bits @gol\n -mfixed-range=@var{register-range} -mtls-size=@var{tls-size} @gol\n--mtune=@var{cpu-type} -mt -pthread -milp32 -mlp64 @gol\n--mno-sched-br-data-spec -msched-ar-data-spec -mno-sched-control-spec @gol\n+-mtune=@var{cpu-type} -milp32 -mlp64 @gol\n+-msched-br-data-spec -msched-ar-data-spec -msched-control-spec @gol\n -msched-br-in-data-spec -msched-ar-in-data-spec -msched-in-control-spec @gol\n--msched-ldc -mno-sched-control-ldc -mno-sched-spec-verbose @gol\n--mno-sched-prefer-non-data-spec-insns @gol\n--mno-sched-prefer-non-control-spec-insns @gol\n--mno-sched-count-spec-in-critical-path}\n+-msched-spec-ldc -msched-spec-control-ldc @gol\n+-msched-prefer-non-data-spec-insns -msched-prefer-non-control-spec-insns @gol\n+-msched-stop-bits-after-every-cycle -msched-count-spec-in-critical-path @gol\n+-msel-sched-dont-check-control-spec -msched-fp-mem-deps-zero-cost @gol\n+-msched-max-memory-insns-hard-limit -msched-max-memory-insns=@var{max-insns}}\n \n @emph{M32R/D Options}\n @gccoptlist{-m32r2 -m32rx -m32r @gol\n@@ -11723,6 +11728,10 @@ using the minimum latency algorithm.\n Generate code for inline divides of floating point values\n using the maximum throughput algorithm.\n \n+@item -mno-inline-float-divide\n+@opindex mno-inline-float-divide\n+Do not generate inline code for divides of floating point values.\n+\n @item -minline-int-divide-min-latency\n @opindex minline-int-divide-min-latency\n Generate code for inline divides of integer values\n@@ -11733,6 +11742,10 @@ using the minimum latency algorithm.\n Generate code for inline divides of integer values\n using the maximum throughput algorithm.\n \n+@item -mno-inline-float-divide\n+@opindex mno-inline-float-divide\n+Do not generate inline code for divides of integer values.\n+\n @item -minline-sqrt-min-latency\n @opindex minline-sqrt-min-latency\n Generate code for inline square roots\n@@ -11743,6 +11756,17 @@ using the minimum latency algorithm.\n Generate code for inline square roots\n using the maximum throughput algorithm.\n \n+@item -mno-inline-sqrt\n+@opindex mno-inline-sqrt\n+Do not generate inline code for sqrt.\n+\n+@item -mfused-madd\n+@itemx -mno-fused-madd\n+@opindex mfused-madd\n+@opindex mno-fused-madd\n+Do (don't) generate code that uses the fused multiply/add or multiply/subtract\n+instructions.    The default is to use these instructions.\n+\n @item -mno-dwarf2-asm\n @itemx -mdwarf2-asm\n @opindex mno-dwarf2-asm\n@@ -11776,15 +11800,6 @@ Specify bit size of immediate TLS offsets.  Valid values are 14, 22, and\n Tune the instruction scheduling for a particular CPU, Valid values are\n itanium, itanium1, merced, itanium2, and mckinley.\n \n-@item -mt\n-@itemx -pthread\n-@opindex mt\n-@opindex pthread\n-Add support for multithreading using the POSIX threads library.  This\n-option sets flags for both the preprocessor and linker.  It does\n-not affect the thread safety of object code produced by the compiler or\n-that of libraries supplied with it.  These are HP-UX specific flags.\n-\n @item -milp32\n @itemx -mlp64\n @opindex milp32\n@@ -11849,31 +11864,6 @@ are dependent on the control speculative loads.\n This is effective only with @option{-msched-control-spec} enabled.\n The default is 'enable'.\n \n-@item -msched-ldc\n-@itemx -mno-sched-ldc\n-@opindex msched-ldc\n-@opindex mno-sched-ldc\n-(En/Dis)able use of simple data speculation checks ld.c .\n-If disabled, only chk.a instructions will be emitted to check\n-data speculative loads.\n-The default is 'enable'.\n-\n-@item -mno-sched-control-ldc\n-@itemx -msched-control-ldc\n-@opindex mno-sched-control-ldc\n-@opindex msched-control-ldc\n-(Dis/En)able use of ld.c instructions to check control speculative loads.\n-If enabled, in case of control speculative load with no speculatively\n-scheduled dependent instructions this load will be emitted as ld.sa and\n-ld.c will be used to check it.\n-The default is 'disable'.\n-\n-@item -mno-sched-spec-verbose\n-@itemx -msched-spec-verbose\n-@opindex mno-sched-spec-verbose\n-@opindex msched-spec-verbose\n-(Dis/En)able printing of the information about speculative motions.\n-\n @item -mno-sched-prefer-non-data-spec-insns\n @itemx -msched-prefer-non-data-spec-insns\n @opindex mno-sched-prefer-non-data-spec-insns\n@@ -11901,6 +11891,43 @@ computation of the instructions priorities.  This will make the use of the\n speculation a bit more conservative.\n The default is 'disable'.\n \n+@item -msched-spec-ldc\n+@opindex msched-spec-ldc\n+Use a simple data speculation check.  This option is on by default.\n+\n+@item -msched-control-spec-ldc\n+@opindex msched-spec-ldc\n+Use a simple check for control speculation.  This option is on by default.\n+\n+@item -msched-stop-bits-after-every-cycle\n+@opindex msched-stop-bits-after-every-cycle\n+Place a stop bit after every cycle when scheduling.  This option is on\n+by default.\n+\n+@item -msched-fp-mem-deps-zero-cost\n+@opindex msched-fp-mem-deps-zero-cost\n+Assume that floating-point stores and loads are not likely to cause a conflict\n+when placed into the same instruction group.  This option is disabled by\n+default.\n+\n+@item -msel-sched-dont-check-control-spec\n+@opindex msel-sched-dont-check-control-spec\n+Generate checks for control speculation in selective scheduling.\n+This flag is disabled by default.\n+\n+@item -msched-max-memory-insns=@var{max-insns}\n+@opindex msched-max-memory-insns\n+Limit on the number of memory insns per instruction group, giving lower\n+priority to subsequent memory insns attempting to schedule in the same\n+instruction group. Frequently useful to prevent cache bank conflicts.\n+The default value is 1.\n+\n+@item -msched-max-memory-insns-hard-limit\n+@opindex msched-max-memory-insns-hard-limit\n+Disallow more than `msched-max-memory-insns' in instruction group.\n+Otherwise, limit is `soft' meaning that we would prefer non-memory operations\n+when limit is reached but may still schedule memory operations.\n+\n @end table\n \n @node M32C Options"}]}