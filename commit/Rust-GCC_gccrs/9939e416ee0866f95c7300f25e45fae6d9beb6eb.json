{"sha": "9939e416ee0866f95c7300f25e45fae6d9beb6eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTkzOWU0MTZlZTA4NjZmOTVjNzMwMGYyNWU0NWZhZTZkOWJlYjZlYg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-02-01T16:15:56Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-02-01T16:15:56Z"}, "message": "re PR tree-optimization/47559 (ICE: verify_stmts failed: statement marked for throw, but doesn't with -fnon-call-exceptions and noexcept)\n\n2011-02-01  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/47559\n\t* tree-ssa-loop-im.c (can_sm_ref_p): Do not perform\n\tstore-motion on references that can throw.\n\n\t* g++.dg/torture/pr47559.C: New testcase.\n\nFrom-SVN: r169487", "tree": {"sha": "8d74b657ddb7abcb4ce8827ac122b630da6feef5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d74b657ddb7abcb4ce8827ac122b630da6feef5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9939e416ee0866f95c7300f25e45fae6d9beb6eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9939e416ee0866f95c7300f25e45fae6d9beb6eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9939e416ee0866f95c7300f25e45fae6d9beb6eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9939e416ee0866f95c7300f25e45fae6d9beb6eb/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4a3c9687cf64bce76107b63a31241a851c8ae119", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a3c9687cf64bce76107b63a31241a851c8ae119", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a3c9687cf64bce76107b63a31241a851c8ae119"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "fc3482ccd65fa492ad46985efe31e2448be89a45", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9939e416ee0866f95c7300f25e45fae6d9beb6eb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9939e416ee0866f95c7300f25e45fae6d9beb6eb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9939e416ee0866f95c7300f25e45fae6d9beb6eb", "patch": "@@ -1,3 +1,9 @@\n+2011-02-01  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/47559\n+\t* tree-ssa-loop-im.c (can_sm_ref_p): Do not perform\n+\tstore-motion on references that can throw.\n+\n 2011-02-01  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* tree-dump.c (dump_option_value_info): Add entry for TDF_CSELIB."}, {"sha": "26b7e3e0f3cd44c64b001f944a1518ecac6b025f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9939e416ee0866f95c7300f25e45fae6d9beb6eb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9939e416ee0866f95c7300f25e45fae6d9beb6eb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9939e416ee0866f95c7300f25e45fae6d9beb6eb", "patch": "@@ -1,3 +1,8 @@\n+2011-02-01  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/47559\n+\t* g++.dg/torture/pr47559.C: New testcase.\n+\n 2011-02-01  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/47565"}, {"sha": "42dedee291c46ef6a1a9b015ad58f193f4babf8f", "filename": "gcc/testsuite/g++.dg/torture/pr47559.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9939e416ee0866f95c7300f25e45fae6d9beb6eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr47559.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9939e416ee0866f95c7300f25e45fae6d9beb6eb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr47559.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr47559.C?ref=9939e416ee0866f95c7300f25e45fae6d9beb6eb", "patch": "@@ -0,0 +1,8 @@\n+// { dg-do compile }\n+// { dg-options \"-std=c++0x -fnon-call-exceptions\" }\n+\n+void foo (int *k) noexcept\n+{\n+  for (;;)\n+    *k = 0;\n+}"}, {"sha": "57f98978223348793fced8cecd6c1a2ce1c94439", "filename": "gcc/tree-ssa-loop-im.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9939e416ee0866f95c7300f25e45fae6d9beb6eb/gcc%2Ftree-ssa-loop-im.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9939e416ee0866f95c7300f25e45fae6d9beb6eb/gcc%2Ftree-ssa-loop-im.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-im.c?ref=9939e416ee0866f95c7300f25e45fae6d9beb6eb", "patch": "@@ -2318,6 +2318,10 @@ can_sm_ref_p (struct loop *loop, mem_ref_p ref)\n       || !for_each_index (&ref->mem, may_move_till, loop))\n     return false;\n \n+  /* If it can throw fail, we do not properly update EH info.  */\n+  if (tree_could_throw_p (ref->mem))\n+    return false;\n+\n   /* If it can trap, it must be always executed in LOOP.\n      Readonly memory locations may trap when storing to them, but\n      tree_could_trap_p is a predicate for rvalues, so check that"}]}