{"sha": "a2cf38ee5d3c65e7ff2bda9af265fdfbaec0c26e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJjZjM4ZWU1ZDNjNjVlN2ZmMmJkYTlhZjI2NWZkZmJhZWMwYzI2ZQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-04-10T05:31:39Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-04-10T05:31:39Z"}, "message": "install.html: Document complete list of locales required by test suite.\n\n\t* docs/html/install.html: Document complete list of locales\n\trequired by test suite.  Document procedure for installing\n\tsaid locales under Debian.  Solicit instructions for other\n\toperating systems.\n\nFrom-SVN: r65420", "tree": {"sha": "8d8db5af6e7c045825de54162f3810f7ac81314d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d8db5af6e7c045825de54162f3810f7ac81314d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2cf38ee5d3c65e7ff2bda9af265fdfbaec0c26e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2cf38ee5d3c65e7ff2bda9af265fdfbaec0c26e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2cf38ee5d3c65e7ff2bda9af265fdfbaec0c26e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2cf38ee5d3c65e7ff2bda9af265fdfbaec0c26e/comments", "author": null, "committer": null, "parents": [{"sha": "496324d0a723cb9f3aa8fd82d114e74c4bd08834", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/496324d0a723cb9f3aa8fd82d114e74c4bd08834", "html_url": "https://github.com/Rust-GCC/gccrs/commit/496324d0a723cb9f3aa8fd82d114e74c4bd08834"}], "stats": {"total": 222, "additions": 132, "deletions": 90}, "files": [{"sha": "e7f51e8e8d1d3ce2ad0593e0d8b72dbe5a23e987", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 92, "deletions": 85, "changes": 177, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cf38ee5d3c65e7ff2bda9af265fdfbaec0c26e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cf38ee5d3c65e7ff2bda9af265fdfbaec0c26e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a2cf38ee5d3c65e7ff2bda9af265fdfbaec0c26e", "patch": "@@ -1,3 +1,10 @@\n+2003-04-09  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* docs/html/install.html: Document complete list of locales\n+\trequired by test suite.  Document procedure for installing\n+\tsaid locales under Debian.  Solicit instructions for other\n+\toperating systems.\n+\n 2003-04-08  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* include/bits/sstream.tcc (overflow): Make sure operands of min\n@@ -25,7 +32,7 @@\n \t(__copy_streambufs): Likewise.\n \t* include/std/std_fstream.h (_M_set_determinate): Set\n \t_M_out_end here.\n-\t\n+\n 2003-03-30  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* include/bits/fstream.tcc (basic_filebuf::showmanyc,\n@@ -40,19 +47,19 @@\n \t* include/std/std_sstream.h (basic_istringstream): Adjust\n \tinitialization.\n \t(basic_ostringstream): Same.\n-\t(basic_stringstream): Same.\t\n+\t(basic_stringstream): Same.\n \t* include/std/std_fstream.h (basic_ifstream): Adjust initialization.\n \t(basic_ofstream): Same.\n \t(basic_fstream): Same.\n \t* include/std/std_ostream.h (basic_ostrem): Add protected ctor\n \tthat does not call init.\n-\t* include/std/std_istream.h (basic_istream): Same.\t\t\n+\t* include/std/std_istream.h (basic_istream): Same.\n \t(basic_iostream): Construct istream, ostream uninitialized, use\n \tinit to initialize just once. Add protected ctor that does not\n \tcall init.\n \n 2003-03-28  Paolo Carlini  <pcarlini@unitus.it>\n-            Nathan Myers  <ncm@cantrip.org>\n+\t    Nathan Myers  <ncm@cantrip.org>\n \n \tPR libstdc++/9533\n \t* include/bits/fstream.tcc (basic_filebuf<>::open): Don't\n@@ -95,7 +102,7 @@\n \t* testsuite/21_strings/basic_string/rfind/wchar_t/2.cc: likewise,\n \twchar_t find_last_of tests here.\n \t* testsuite/21_strings/basic_string/rfind/wchar_t/3.cc: likewise,\n-\twchar_t find_last_not_of tests here.\t\n+\twchar_t find_last_not_of tests here.\n \n 2003-03-22  Loren J. Rittle  <ljrittle@acm.org>\n \n@@ -106,8 +113,8 @@\n \n \tPR libstdc++/5730\n \t* include/bits/c++config (_GLIBCPP_FAST_MATH): Define.\n-        * include/std/std_complex.h (norm):  Use faster,\n-        less accurate computation for builtin float types under --fast-math.\n+\t* include/std/std_complex.h (norm):  Use faster,\n+\tless accurate computation for builtin float types under --fast-math.\n \n 2003-03-21  Magnus Fromreide  <gnats@magfr.user.lysator.liu.se>\n \n@@ -136,7 +143,7 @@\n \telement_access.cc, operations.cc, char_traits_requirements.cc,\n \tfind.cc, replace.cc, char_traits_typedefs.cc, insert.cc, rfind.cc,\n \tcompare.cc, inserters_extractors.cc, substr.cc: Split up, add\n-\twchar_t tests as follows.\t\n+\twchar_t tests as follows.\n \t* 21_strings/basic_string/append/char/1.cc: New.\n \t* 21_strings/basic_string/append/wchar_t/1.cc: New.\n \t* 21_strings/basic_string/assign/char/1.cc: New.\n@@ -217,9 +224,9 @@\n \t* 21_strings/char_traits/requirements/char/1.cc: New.\n \t* 21_strings/char_traits/requirements/wchar_t/1.cc: New.\n \t* 21_strings/char_traits/typedefs/char/1.cc: New.\n-\t\n+\n 2003-03-17  Paolo Carlini  <pcarlini@unitus.it>\n-            Petur Runolfsson  <peturr02@ru.is>\n+\t    Petur Runolfsson  <peturr02@ru.is>\n \n \tPR libstdc++/10097\n \t* src/fstream.cc (basic_filebuf<char>::_M_underflow_common,\n@@ -238,12 +245,12 @@\n \tCleanups.\n \n 2003-03-17  Petur Runolfsson  <peturr02@ru.is>\n- \n-        PR libstdc++/9964\n-        * include/bits/fstream.tcc (basic_filebuf::close):\n-        Always close file, even when write fails.\n-        * testsuite/27_io/filebuf_members.cc (test_07):  New test.\n- \n+\n+\tPR libstdc++/9964\n+\t* include/bits/fstream.tcc (basic_filebuf::close):\n+\tAlways close file, even when write fails.\n+\t* testsuite/27_io/filebuf_members.cc (test_07):  New test.\n+\n 2003-03-17  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \t* libsupc++/Makefile.am (C_COMPILE): Remove.\n@@ -252,7 +259,7 @@\n \n 2003-03-14  Benjamin Kosnik  <bkoz@redhat.com>\n \n-\t* testsuite/23_containers/bitset_members.cc: Add test variable.\t\n+\t* testsuite/23_containers/bitset_members.cc: Add test variable.\n \t* testsuite/23_containers/map_insert.cc: Same.\n \t* testsuite/22_locale/ctype/cons/char/1.cc: Same.\n \t* testsuite/22_locale/codecvt/max_length/wchar_t/1.cc: Same.\n@@ -272,7 +279,7 @@\n \t* testsuite/26_numerics/slice_array_assignment.cc: Same.\n \t* testsuite/24_iterators/istream_iterator.cc: Same.\n \t* mkcheck.in (TESTS_FILE): Use dejagnu-generated file if possible.\n-\t\n+\n 2003-03-14  Petur Runolfsson  <peturr02@ru.is>\n \n \tPR libstdc++/9581\n@@ -287,16 +294,16 @@\n \tchar, char*):\n \tConvert characters with wctob instead of wcsrtombs.\n \t* testsuite/22_locale/ctype/narrow/wchar_t/3.cc:  New test.\n-\t* testsuite/22_locale/ctype/widen/wchar_t/2.cc:  New test.\t\n-\t* testsuite/22_locale/ctype/widen/wchar_t/3.cc:  New test.\t\n+\t* testsuite/22_locale/ctype/widen/wchar_t/2.cc:  New test.\n+\t* testsuite/22_locale/ctype/widen/wchar_t/3.cc:  New test.\n \n 2003-03-14  Benjamin Kosnik  <bkoz@redhat.com>\n \n-\t* include/stdc++.h: New.\t\n+\t* include/stdc++.h: New.\n \t* libsupc++/exception_defines.h (__EXCEPTION_DEFINES_H): Add guard.\n \t* include/Makefile.am (stamp-std-precompile): Generate stdc++.h.gch\n-        * include/Makefile.in: Regenerate.\n-        * testsuite_flags.in (--build-cxx): Add, but don't use PCHFLAGS.\n+\t* include/Makefile.in: Regenerate.\n+\t* testsuite_flags.in (--build-cxx): Add, but don't use PCHFLAGS.\n \t(--cxxflags): Put -g -O2 here.\n \t* testsuite/libstdc++-v3.dg/dg.exp: Remove -g -O2 here.\n \n@@ -355,7 +362,7 @@\n \t* config/io/basic_file_stdio.cc: include <unistd.h>.\n \n 2003-03-09  Paolo Carlini  <pcarlini@unitus.it>\n-            Nathan Myers  <ncm@cantrip.org>\n+\t    Nathan Myers  <ncm@cantrip.org>\n \n \tPR libstdc++/7744\n \t* config/io/basic_file_stdio.h (__basic_file<>::xsgetn, xsputn,\n@@ -395,14 +402,14 @@\n \t* testsuite/27_io/ostream_exception.cc,\n \ttestsuite/27_io/istream_exception.cc: New tests.\n \n-2003-03-08  Benjamin Kosnik  <bkoz@redhat.com>\t\n+2003-03-08  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/locale_facets.tcc: Fix typo.\n \n 2003-03-08  Loren J. Rittle  <ljrittle@acm.org>\n \n \t* testsuite/26_numerics/c99_classification_macros_c.cc: Tweak test.\n-\t\n+\n \t* config/locale/generic/c_locale.cc\n \t(locale::facet::_S_create_c_locale): Throw runtime exception when\n \tunsupported language is specified.\n@@ -476,7 +483,7 @@\n \t* testsuite/27_io/stringbuf_virtuals.cc: New test wrap.\n \n 2003-03-08  Paolo Carlini <pcarlini@unitus.it>\n-            Petur Runolfsson  <peturr02@ru.is>\n+\t    Petur Runolfsson  <peturr02@ru.is>\n \n \tPR libstdc++/9424\n \t* include/bits/streambuf.tcc (__copy_streambufs): Use\n@@ -566,7 +573,7 @@\n \n 2003-03-05  Carlo Wood  <carlo@alinoe.com>\n \n-        * include/bits/ios_base.h(ios_base::Init::_S_initialized()): Added\n+\t* include/bits/ios_base.h(ios_base::Init::_S_initialized()): Added\n \t_S_initialized() in order to allow debugging libraries to detect\n \twhen the std streams are initialized from an overloaded operator\n \tnew.\n@@ -578,8 +585,8 @@\n \t* src/demangle.cc: Adjust include.\n \t* include/Makefile.am (bits_headers): Add.\n \t* include/Makefile.in: Regenerate.\n-\t\n-2003-03-04  Benjamin Kosnik  <bkoz@redhat.com>\t\n+\n+2003-03-04  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* src/globals.cc: Clarify comments, remove c_locale_imp_compat.\n \n@@ -609,32 +616,32 @@\n \t* config/linker-map.gnu: Hide more stuff.\n \t* include/Makefile.am: Cleanups.\n \t* include/Makefile.in: Regenerate.\n-\t\n+\n 2003-02-27  Jerry Quinn  <jlquinn@optonline.net>\n \n-        * config/locale/generic/messages_members.h (messages::messages):\n+\t* config/locale/generic/messages_members.h (messages::messages):\n \tRemove name from unused parameter.\n \n 2003-02-27  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* src/Makefile.am (sources): Add demangle.cc.\n \t(demangle.o): Add.\n-\t(demangle.lo): Add.\t\n+\t(demangle.lo): Add.\n \t* src/Makefile.in: Regenerate.\n \t* libsupc++/Makefile.am: Remove old __cxa_demangle bits.\n \t* libsupc++/Makefile.in: Regenerate.\n \n \t* testsuite/testsuite_hooks.h\n \t(__gnu_cxx_test::verify_demangle): New.\n \t* testsuite/testsuite_hooks.cc: Define.\n-\t\n+\n 2003-02-27  Carlo Wood  <carlo@alinoe.com>\n \n \t* src/demangle.cc: New.\n \t* libsupc++/demangle.h: New.\n \n 2003-02-27  Benjamin Kosnik  <bkoz@redhat.com>\n-            Carlo Wood  <carlo@alinoe.com>\n+\t    Carlo Wood  <carlo@alinoe.com>\n \n \t* testsuite/demangle/abi_examples/01.cc: New.\n \t* testsuite/demangle/abi_examples/02.cc: New.\n@@ -786,7 +793,7 @@\n \n 2003-02-21  Jerry Quinn  <jlquinn@optonline.net>\n \n-        * include/bits/locale_facets.tcc (_M_convert_float): Replace\n+\t* include/bits/locale_facets.tcc (_M_convert_float): Replace\n \tnumpunct facet accesses with data from __locale_cache.\n \n 2003-02-20  Phil Edwards  <pme@gcc.gnu.org>\n@@ -845,7 +852,7 @@\n \t(ios_base::_M_cache): Define.\n \t* include/bits/locale_facets.h:\t(__num_base): Fix comment.  Add\n \t_S_end.\n-        (__locale_cache_base,__locale_cache<_CharT>):  New classes.\n+\t(__locale_cache_base,__locale_cache<_CharT>):  New classes.\n \t(__locale_cache<char>, __locale_cache<wchar_t>): New specializations.\n \t* include/bits/locale_facets.tcc (num_put::_M_convert_int): Use locale\n \tcache literal string, grouping flag, thousands separator.\n@@ -912,21 +919,21 @@\n \n \t* include/Makefile.am (stamp-std-precompile): Add rule.\n \t* include/Makefile.in: Regenerated.\n-\t\n+\n 2003-02-11 Jerry Quinn  <jlquinn@optonline.net>\n-           Benjamin Kosnik  <benjamin@redhat.com>\n-\t\n+\t   Benjamin Kosnik  <benjamin@redhat.com>\n+\n \t* include/bits/locale_facets.h (__num_base): Add _S_atoms_out.\n \tAdd indexes into this array.\n \t(__num_base::_S_atoms): To _S_atoms_in.\n \t(num_put::_M_insert): Rename to _M_pad.\n \t(num_put::_M_convert_int): Adjust remove __mod, __modl arguments.\n \t(num_put::_M_widen_int): Rename to _M_group_int.\n-\t(num_put::_M_widen_float): Rename to _M_group_float.\t\n+\t(num_put::_M_widen_float): Rename to _M_group_float.\n \t* include/bits/locale_facets.tcc (__int_to_char): New inline\n \tfunction and adapter functions.\n \t(num_put::_M_group_int): Streamline.\n-\t(num_put::_M_group_float): Streamline.\t\n+\t(num_put::_M_group_float): Streamline.\n \t(num_put::_M_convert_int): Remove unused parameter names. Choose\n \tlarge enough buffer for text.  Use __int_to_char instead of\n \t__convert_from_v.  Formatted text is now at the end of the buffer.\n@@ -937,7 +944,7 @@\n \t(__int_to_char<char, unsigned long long>): New.\n \t(__int_to_char<wchar_t, unsigned long>): New.\n \t(__int_to_char<wchar_t, unsigned long long>): New.\n-\t\n+\n 2003-02-11  Scott Snyder  <snyder@fnal.gov>\n \n \tPR libstdc++/9659\n@@ -957,7 +964,7 @@\n \t* testsuite/ext/stdio_filebuf.cc: Add.\n \n 2003-02-11  Paolo Carlini  <pcarlini@unitus.it>\n-            Petur Runolfsson  <peturr02@ru.is>\n+\t    Petur Runolfsson  <peturr02@ru.is>\n \n \tPR libstdc++/9318\n \t* include/bits/streambuf.tcc (__copy_streambufs):\n@@ -1012,13 +1019,13 @@\n \t* config/io/c_io_libio.h: Same.\n \t* libio/Makefile.am: Same.\n \t* libio/Makefile.in: Regenerated.\n-\t\n+\n 2003-02-06  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* testsuite/22_locale/codecvt/encoding/wchar_t/1.cc (test01):\n \tExplicitly use the \"C\" locale.\n \t* testsuite/22_locale/codecvt/max_length/wchar_t/1.cc (test01): Same.\n-\t\n+\n 2003-02-06  Petur Runolfsson  <peturr02@ru.is>\n \n \tDR 75\n@@ -1112,19 +1119,19 @@\n \t* include/bits/locale_facets.h:\t(struct __pad): Comment on\n \timplementation.\n \t(__verify_grouping): Same.\n-\t(__add_grouping): Same.\t\t\n+\t(__add_grouping): Same.\n \t* include/bits/locale_facets.tcc (__verify_grouping): Move\n \tcomments to declaration.\n \t(__add_grouping): Same.\n-\t\n-\t* include/bits/locale_facets.tcc: \n+\n+\t* include/bits/locale_facets.tcc:\n \t(__write<_CharT, _OutIter>): New function.\n \t(__write<_CharT>): New function specialization.\n \t(num_put::_M_insert): Remove explicit loop over iterator.  Use\n \t__write.\n-\t(num_put::_M_widen_float): Remove __basefield. \n+\t(num_put::_M_widen_float): Remove __basefield.\n \t(num_put::_M_widen_int): Move __basefield to within grouping block.\n-\t\n+\n \t* include/bits/streambuf_iterator.h: Include <streambuf>.\n \t(ostreambuf_iterator::_M_put): Add.\n \n@@ -1135,9 +1142,9 @@\n 2003-02-04  Nathan Myers  <ncm@cantrip.org>\n \n \t* testsuite/25_algorithms/min_max.cc (test02): Add.\n-            \n+\n 2003-02-04  Paolo Carlini  <pcarlini@unitus.it>\n-\t\n+\n \tPR libstdc++/9439, PR libstdc++/9425\n \t* config/io/basic_file_stdio.cc\n \t(__basic_file<char>::seekoff, seekpos): Return -1L if\n@@ -1146,13 +1153,13 @@\n \tCheck _M_file.seekoff return value; always return\n \tpos_type(off_type(-1)) in case of failure.\n \t(basic_filebuf::pbackfail): Check this->seekoff return\n-\tvalue and return traits_type::eof() in case of failure.  \n+\tvalue and return traits_type::eof() in case of failure.\n \t* testsuite/27_io/filebuf_virtuals.cc (test09): Add.\n \n 2003-02-04  Jerry Quinn  <jlquinn@optonline.net>\n \n-\t* include/std/std_ostream.h (ostream::_M_write): Declare.\t\n-        * ostream.tcc (ostream::_M_write): Define.\n+\t* include/std/std_ostream.h (ostream::_M_write): Declare.\n+\t* ostream.tcc (ostream::_M_write): Define.\n \t(basic_ostream::write): Use it.\n \t(operator<<(basic_ostream, _CharT)): Ditto.\n \t(operator<<(basic_ostream, char)): Ditto.\n@@ -1200,7 +1207,7 @@\n \t* docs/html/17_intro/porting.html: Regenerate.\n \n 2003-02-03  Falk Hueffner  <falk.hueffner@student.uni-tuebingen.de>\n-            Phil Edwards  <pme@gcc.gnu.org>\n+\t    Phil Edwards  <pme@gcc.gnu.org>\n \n \t* include/std/std_bitset.h:  Replace CHAR_BIT with __CHAR_BIT__, use\n \tnumeric_limits for bits-per-word values.\n@@ -1240,7 +1247,7 @@\n \t* docs/html/faq/index.txt:  Regenerated.\n \n 2003-02-01  Paolo Carlini  <pcarlini@unitus.it>\n-            Benjamin Kosnik  <bkoz@redhat.com>\n+\t    Benjamin Kosnik  <bkoz@redhat.com>\n \n \tConst correctness issue:\n \thttp://gcc.gnu.org/ml/libstdc++/2003-01/msg00370.html\n@@ -1334,22 +1341,22 @@\n \t* include/std/std_iosfwd.h: Add c++locale.h, cctype includes.\n \t* include/std/std_fstream.h: Remove streambuf include.\n \t* include/std/std_sstream.h: Remove streambuf include.\n-\t\n+\n 2003-01-23  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* configure.in (libtool_VERSION): To 6:0:0.\n \t* configure: Regenerated.\n \t* config/linker-map.gnu: Clean.\n-\t\n+\n \t* src/misc-inst.cc: Remove instantiations.\n \n-\t* include/bits/stl_alloc.h (__malloc_alloc_template): \n+\t* include/bits/stl_alloc.h (__malloc_alloc_template):\n \tTo __malloc_alloc.\n \t(__default_alloc_template): To __pool_alloc.\n \t* src/stl-inst.cc: Same.\n \t* include/backward/alloc.h: Update.\n \t* testsuite/ext/allocators.cc: Update.\n-\t\n+\n \t* src/globals.cc (__gnu_cxx): Remove _GLIBCPP_ASM_SYMVER. Should\n \treally try to remove these if possible.\n \t* src/locale.cc (std): Same.\n@@ -1359,7 +1366,7 @@\n 2003-01-22  Benjamin Kosnik  <bkoz@redhat.com>\n \t    Sysoltsev Slawa  <Vyatcheslav.Sysoltsev@intel.com>\n \t    Mark Mitchell  <mark@codesourcery.com>\n-\t\n+\n \tPR libstdc++/9269\n \t* include/std/std_fstream.h (basic_filebuf::uflow): Declare.\n \t(basic_filebuf::underflow): Declare.\n@@ -1368,15 +1375,15 @@\n 2003-01-22  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/locale_facets.h: Move non-facet classes requiring\n-\t<string> to...  \n-\t* include/bits/locale_classes.h: New.  \n+\t<string> to...\n+\t* include/bits/locale_classes.h: New.\n \t* include/bits/Makefile.am (bits_headers_src): Add locale_classes.h.\n \t* include/bits/Makefile.in: Regenerate.\n \n \t* include/bits/locale_facets.tcc (__convert_from_v): Move to...\n \t* config/locale/gnu/c_locale.h: ...here.\n \t* config/locale/generic/c_locale.h: Same.\n-\t\n+\n \t* include/bits/locale_facets.tcc: Move declarations to...\n \t* include/bits/locale_facets.h: ...here.\n \t* include/bits/basic_ios.h: Tweak includes accordingly.\n@@ -1388,7 +1395,7 @@\n \n \t* config/linker-map.gnu: Specify __cxa functions, mark __cxa_dyn_*\n \tbits as unexported in the future.\n-\t\n+\n 2003-01-21  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tReshuffle 22_locale testsuite.\n@@ -1411,8 +1418,8 @@\n \tctype_widen_wchar_t.cc time_get.cc facet.cc time_get_members_char.cc\n \tglobal_templates.cc time_get_members_wchar_t.cc, members.cc,\n \ttime_put.cc, messages_byname.cc, time_put_members_char.cc,\n-\tmessages.cc, time_put_members_wchar_t.cc, messages_members_char.cc): \n-\tSplit up into individual test cases...\t\n+\tmessages.cc, time_put_members_wchar_t.cc, messages_members_char.cc):\n+\tSplit up into individual test cases...\n \t* 22_locale/codecvt/1.cc: New.\n \t* 22_locale/codecvt/2.cc: New.\n \t* 22_locale/codecvt/always_noconv/char/1.cc: New.\n@@ -1736,7 +1743,7 @@\n \n 2003-01-16  Mark Mitchell  <mark@codesourcery.com>\n \t    Jeffrey Oldham <oldham@codesourcery.com>\n-\t\n+\n \t* config/locale/gnu/messages_members.h: Use this-> to refer to\n \tunqualified members of base clasess.\n \t* config/locale/ieee_1003.1-2001/codecvt_specializations.h: Likewise.\n@@ -1759,7 +1766,7 @@\n \t* include/ext/stl_rope.h: Likewise.\n \t* include/std/std_fstream.h: Likewise.\n \t* include/std/std_sstream.h: Likewise.\n-\t\n+\n 2003-01-15  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* include/bits/basic_string.tcc (_S_string_copy): Unused, remove.\n@@ -1780,8 +1787,8 @@\n \tRemove setulimit bits.\n \t* testsuite/26_numerics/complex_value.cc: Set to noopts.\n \t* testsuite/Makefile.am (CLEANFILES): Add.\n-\t* testsuite/Makefile.in: Regenerate.\t\n-\t\n+\t* testsuite/Makefile.in: Regenerate.\n+\n 2003-01-15  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n \n \t* config/os/hpux/os_defines.h (_GLIBCPP_GTHREAD_USE_WEAK): Define for\n@@ -1797,7 +1804,7 @@\n \n 2003-01-12  Benjamin Kosnik  <bkoz@redhat.com>\n \n-\tRenames, namespaces for testsuite utilities.\t\n+\tRenames, namespaces for testsuite utilities.\n \t* testsuite/testsuite_hooks.h: Put into namespace __gnu_cxx_test.\n \t(gnu_allocator_tracker): Rename to allocation_tracker.\n \t(gnu_new_allocator): Rename to tracker_alloc.\n@@ -1816,12 +1823,12 @@\n \t* testsuite/testsuite_allocator.cc: Same.\n \t* testsuite/23_containers/deque_ctor.cc\n \t(test_copy_ctor_exception_safety): Change gnu_allocator_tracker to\n-\tallocation_tracker. \n+\tallocation_tracker.\n \tChange gnu_new_allocator to tracker_alloc.\n \tChange gnu_counting_struct to counter.\n \tChange gnu_copy_tracker to copy_tracker.\n \tChange gnu_copy_constructor to copy_constructor.\n-\tChange gnu_assignment_operator to assignment_operator.\t\n+\tChange gnu_assignment_operator to assignment_operator.\n \tInject.\n \t* testsuite/23_containers/vector_capacity.cc: Same.\n \t* testsuite/23_containers/vector_ctor.cc (test01): Same.\n@@ -1879,19 +1886,19 @@\n \t* configure.in: Don't add new multi-do rules every time the\n \tdirectory is reconfigured.\n \t* configure: Regenerate.\n-\t\n+\n 2003-01-08  Brad Spencer  <spencer@infointeractive.com>\n-            Nathan Myers  <ncm@cantrip.org>\n-\t\n+\t    Nathan Myers  <ncm@cantrip.org>\n+\n \t* src/Makefile.am (stamp-debug): Clean.\n \t* src/Makefile.in: Regenerate.\n-\t\n+\n 2003-01-07  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/8707\n \t* Makefile.am (distclean-multi): Fix.\n \t* Makefile.in: Regenerate.\n-\t\n+\n 2003-01-06  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/locale_facets.h (messages): Move ctor, dtor\n@@ -1911,7 +1918,7 @@\n \tUse it.\n \t* config/locale/gnu/time_members.h: Use it.\n \t* config/locale/gnu/messages_members.h: Use it.\n-\t* config/linker-map.gnu: Add locale::facets details.\t\n+\t* config/linker-map.gnu: Add locale::facets details.\n \t* include/Makefile.am (target_headers_extra): Add time_members.h.\n \t* include/Makefile.in: Regenerate.\n \t* acinclude.m4: Export CTIME_H.\n@@ -1921,8 +1928,8 @@\n 2003-01-06  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* src/codecvt.cc\n-        (codecvt<char, char, mbstate_t>::do_in, do_out):\n-        Tweak parameters to avoid unused parameter warnings.\n+\t(codecvt<char, char, mbstate_t>::do_in, do_out):\n+\tTweak parameters to avoid unused parameter warnings.\n \n 2003-01-06  Paolo Carlini  <pcarlini@unitus.it>\n \n@@ -1938,7 +1945,7 @@\n \t* testsuite/lib/libstdc++-v3-dg.exp (libstdc++-v3-init,\n \tlibstdc++-v3-list-sourcefiles): Additionally handle files one\n \tlevel deeper in glob patterns.\n-\t\n+\n \t* testsuite/27_io/istream_extractor_arith.cc: Delete, split...\n \t* testsuite/27_io/istream_extractor_arith/01.cc,\n \ttestsuite/27_io/istream_extractor_arith/02.cc,"}, {"sha": "e7e495ade9d0e103ecace5fc0cc7d4496fe9fa79", "filename": "libstdc++-v3/docs/html/install.html", "status": "modified", "additions": 40, "deletions": 5, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2cf38ee5d3c65e7ff2bda9af265fdfbaec0c26e/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Finstall.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2cf38ee5d3c65e7ff2bda9af265fdfbaec0c26e/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Finstall.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Finstall.html?ref=a2cf38ee5d3c65e7ff2bda9af265fdfbaec0c26e", "patch": "@@ -111,9 +111,27 @@ <h2><a name=\"prereqs\">Tools you will need beforehand</a></h2>\n \n       <p>\n       If the 'gnu' locale model is being used, the following locales\n-      are used and tested in the libstdc++ testsuites: en_HK, en_US,\n-      fr_FR, fr_FR@euro, de_DE, de_DE@euro, ja_JP.eucjp, es_MX, en_PH,\n-      and it_IT. Failure to have the underlying \"C\" library locale\n+      are used and tested in the libstdc++ testsuites.  The first column\n+      is the name of the locale, the second is the character set it is\n+      expected to use.\n+      </p>\n+<pre>\n+de_DE               ISO-8859-1\n+de_DE@euro          ISO-8859-15\n+en_HK               ISO-8859-1\n+en_PH               ISO-8859-1\n+en_US               ISO-8859-1\n+en_US.ISO-8859-1    ISO-8859-1\n+en_US.ISO-8859-15   ISO-8859-15\n+en_US.UTF-8         UTF-8\n+es_MX               ISO-8859-1\n+fr_FR               ISO-8859-1\n+fr_FR@euro          ISO-8859-15\n+it_IT               ISO-8859-1\n+ja_JP.eucjp         EUC-JP\n+se_NO.UTF-8         UTF-8\n+</pre>\n+      <p>Failure to have the underlying \"C\" library locale\n       information installed will mean that C++ named locales for the\n       above regions will not work: because of this, the libstdc++\n       testsuite will not pass the named locale tests. If this isn't an\n@@ -123,17 +141,34 @@ <h2><a name=\"prereqs\">Tools you will need beforehand</a></h2>\n       necessary.\n       </p>\n \n-      <p> To install\n-      support for locales, do only one of the following: </p>\n+      <p>To install support for locales, do only one of the following:\n+      </p>\n+\n       <ul>\n         <li> install all locales\n+          <ul>\n+            <li>with RedHat Linux:\n         <p> <code> export LC_ALL=C </code> </p>\n         <p> <code> rpm -e glibc-common --nodeps </code> </p>\n         <p> <code> rpm -i --define \"_install_langs all\"\n                    glibc-common-2.2.5-34.i386.rpm </code> </p>\n+             </li>\n+             <li> (instructions for other operating systems solicited) </li>\n+          </ul>\n         </li>\n         <li> install just the necessary locales\n+          <ul>\n+            <li>with Debian Linux:\n+        <p> Add the above list, as shown, to the file\n+            <code>/etc/locale.gen</code> </p>\n+        <p> run <code>/usr/sbin/locale-gen</code> </p>\n+            </li>\n+            <li> on most Unix-like operating systems:\n         <p> <code> localedef -i de_DE -f ISO-8859-1 de_DE </code> </p>\n+        <p> (repeat for each entry in the above list) </p>\n+            </li>\n+            <li> (instructions for other operating systems solicited) </li>\n+          </ul>\n         </li>\n       </ul>\n       </dd>"}]}