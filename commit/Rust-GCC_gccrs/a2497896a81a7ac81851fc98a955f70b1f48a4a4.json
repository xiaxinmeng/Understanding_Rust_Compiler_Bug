{"sha": "a2497896a81a7ac81851fc98a955f70b1f48a4a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI0OTc4OTZhODFhN2FjODE4NTFmYzk4YTk1NWY3MGIxZjQ4YTRhNA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@redhat.com", "date": "2001-07-06T00:37:18Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2001-07-06T00:37:18Z"}, "message": "Remove bogus patch.\n\n\t* config/ia64/lib1funcs.asm: Revert 2001-07-02 change.\n\t* config/ia64/t-ia64: Likewise.\n\t(LIB1ASMFUNCS): Update comment.\n\nFrom-SVN: r43796", "tree": {"sha": "6593a01ed40291cd0116b10d70c8a356330c9126", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6593a01ed40291cd0116b10d70c8a356330c9126"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2497896a81a7ac81851fc98a955f70b1f48a4a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2497896a81a7ac81851fc98a955f70b1f48a4a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2497896a81a7ac81851fc98a955f70b1f48a4a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2497896a81a7ac81851fc98a955f70b1f48a4a4/comments", "author": null, "committer": null, "parents": [{"sha": "9da6e781e90883213d15c52615cad1584ecd429a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9da6e781e90883213d15c52615cad1584ecd429a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9da6e781e90883213d15c52615cad1584ecd429a"}], "stats": {"total": 49, "additions": 30, "deletions": 19}, "files": [{"sha": "5b415e98a37530ba5903a665119170a68615b74b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2497896a81a7ac81851fc98a955f70b1f48a4a4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2497896a81a7ac81851fc98a955f70b1f48a4a4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a2497896a81a7ac81851fc98a955f70b1f48a4a4", "patch": "@@ -1,3 +1,9 @@\n+2001-07-05  Jim Wilson  <wilson@redhat.com>\n+\n+\t* config/ia64/lib1funcs.asm: Revert 2001-07-02 change.\n+\t* config/ia64/t-ia64: Likewise.\n+\t(LIB1ASMFUNCS): Update comment.\n+\n 2001-07-05  David Edelsohn  <edelsohn@gnu.org>\n \n \t* doc/install.texi (Install GCC: Binaries): Fix typo."}, {"sha": "75e79b0a0f73e7044909ffc44697fcb8a3b31142", "filename": "gcc/config/ia64/lib1funcs.asm", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2497896a81a7ac81851fc98a955f70b1f48a4a4/gcc%2Fconfig%2Fia64%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2497896a81a7ac81851fc98a955f70b1f48a4a4/gcc%2Fconfig%2Fia64%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Flib1funcs.asm?ref=a2497896a81a7ac81851fc98a955f70b1f48a4a4", "patch": "@@ -1,4 +1,4 @@\n-#ifdef L_divtf3\n+#ifdef L__divtf3\n // Compute a 80-bit IEEE double-extended quotient.\n //\n // From the Intel IA-64 Optimization Guide, choose the minimum latency\n@@ -40,7 +40,7 @@ __divtf3:\n \t.endp __divtf3\n #endif\n \n-#ifdef L_divdf3\n+#ifdef L__divdf3\n // Compute a 64-bit IEEE double quotient.\n //\n // From the Intel IA-64 Optimization Guide, choose the minimum latency\n@@ -82,7 +82,7 @@ __divdf3:\n \t.endp __divdf3\n #endif\n \n-#ifdef L_divsf3\n+#ifdef L__divsf3\n // Compute a 32-bit IEEE float quotient.\n //\n // From the Intel IA-64 Optimization Guide, choose the minimum latency\n@@ -118,7 +118,7 @@ __divsf3:\n \t.endp __divsf3\n #endif\n \n-#ifdef L_divdi3\n+#ifdef L__divdi3\n // Compute a 64-bit integer quotient.\n //\n // From the Intel IA-64 Optimization Guide, choose the minimum latency\n@@ -168,7 +168,7 @@ __divdi3:\n \t.endp __divdi3\n #endif\n \n-#ifdef L_moddi3\n+#ifdef L__moddi3\n // Compute a 64-bit integer modulus.\n //\n // From the Intel IA-64 Optimization Guide, choose the minimum latency\n@@ -222,7 +222,7 @@ __moddi3:\n \t.endp __moddi3\n #endif\n \n-#ifdef L_udivdi3\n+#ifdef L__udivdi3\n // Compute a 64-bit unsigned integer quotient.\n //\n // From the Intel IA-64 Optimization Guide, choose the minimum latency\n@@ -272,7 +272,7 @@ __udivdi3:\n \t.endp __udivdi3\n #endif\n \n-#ifdef L_umoddi3\n+#ifdef L__umoddi3\n // Compute a 64-bit unsigned integer modulus.\n //\n // From the Intel IA-64 Optimization Guide, choose the minimum latency\n@@ -327,7 +327,7 @@ __umoddi3:\n \t.endp __umoddi3\n #endif\n \n-#ifdef L_divsi3\n+#ifdef L__divsi3\n // Compute a 32-bit integer quotient.\n //\n // From the Intel IA-64 Optimization Guide, choose the minimum latency\n@@ -370,7 +370,7 @@ __divsi3:\n \t.endp __divsi3\n #endif\n \n-#ifdef L_modsi3\n+#ifdef L__modsi3\n // Compute a 32-bit integer modulus.\n //\n // From the Intel IA-64 Optimization Guide, choose the minimum latency\n@@ -417,7 +417,7 @@ __modsi3:\n \t.endp __modsi3\n #endif\n \n-#ifdef L_udivsi3\n+#ifdef L__udivsi3\n // Compute a 32-bit unsigned integer quotient.\n //\n // From the Intel IA-64 Optimization Guide, choose the minimum latency\n@@ -460,7 +460,7 @@ __udivsi3:\n \t.endp __udivsi3\n #endif\n \n-#ifdef L_umodsi3\n+#ifdef L__umodsi3\n // Compute a 32-bit unsigned integer modulus.\n //\n // From the Intel IA-64 Optimization Guide, choose the minimum latency\n@@ -507,7 +507,7 @@ __umodsi3:\n \t.endp __umodsi3\n #endif\n \n-#ifdef L_save_stack_nonlocal\n+#ifdef L__save_stack_nonlocal\n // Notes on save/restore stack nonlocal: We read ar.bsp but write\n // ar.bspstore.  This is because ar.bsp can be read at all times\n // (independent of the RSE mode) but since it's read-only we need to\n@@ -556,7 +556,7 @@ __ia64_save_stack_nonlocal:\n \t.endp __ia64_save_stack_nonlocal\n #endif\n \n-#ifdef L_nonlocal_goto\n+#ifdef L__nonlocal_goto\n // void __ia64_nonlocal_goto(void *target_label, void *save_area,\n //\t\t\t     void *static_chain);\n \n@@ -609,7 +609,7 @@ __ia64_nonlocal_goto:\n \t.endp __ia64_nonlocal_goto\n #endif\n \n-#ifdef L_restore_stack_nonlocal\n+#ifdef L__restore_stack_nonlocal\n // This is mostly the same as nonlocal_goto above.\n // ??? This has not been tested yet.\n \n@@ -662,7 +662,7 @@ __ia64_restore_stack_nonlocal:\n \t.endp __ia64_restore_stack_nonlocal\n #endif\n \n-#ifdef L_trampoline\n+#ifdef L__trampoline\n // Implement the nested function trampoline.  This is out of line\n // so that we don't have to bother with flushing the icache, as\n // well as making the on-stack trampoline smaller."}, {"sha": "c413b03d66d455b7cc5ad21832f33e5e061a3395", "filename": "gcc/config/ia64/t-ia64", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2497896a81a7ac81851fc98a955f70b1f48a4a4/gcc%2Fconfig%2Fia64%2Ft-ia64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2497896a81a7ac81851fc98a955f70b1f48a4a4/gcc%2Fconfig%2Fia64%2Ft-ia64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Ft-ia64?ref=a2497896a81a7ac81851fc98a955f70b1f48a4a4", "patch": "@@ -1,9 +1,14 @@\n LIB1ASMSRC    = ia64/lib1funcs.asm\n \n-LIB1ASMFUNCS  = _divtf3 _divdf3 _divsf3 \\\n-\t_divdi3 _moddi3 _udivdi3 _umoddi3 \\\n-\t_divsi3 _modsi3 _udivsi3 _umodsi3 _save_stack_nonlocal \\\n-\t_nonlocal_goto _restore_stack_nonlocal _trampoline\n+# We use different names for the DImode div/mod files so that they won't\n+# conflict with libgcc2.c files.  We used to use __ia64 as a prefix, now\n+# we use __ as the prefix.  Note that L_divdi3 in libgcc2.c actually defines\n+# a TImode divide function, so there is no actual overlap here between\n+# libgcc2.c and lib1funcs.asm.\n+LIB1ASMFUNCS  = __divtf3 __divdf3 __divsf3 \\\n+\t__divdi3 __moddi3 __udivdi3 __umoddi3 \\\n+\t__divsi3 __modsi3 __udivsi3 __umodsi3 __save_stack_nonlocal \\\n+\t__nonlocal_goto __restore_stack_nonlocal __trampoline\n \n # ??? Hack to get -P option used when compiling lib1funcs.asm, because Intel\n # assembler does not accept # line number as a comment."}]}