{"sha": "26ccb556d8e83720ab49d1f5f3136fb0bdf1a70d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZjY2I1NTZkOGU4MzcyMGFiNDlkMWY1ZjMxMzZmYjBiZGYxYTcwZA==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-09-30T21:20:30Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-09-30T21:20:30Z"}, "message": "Fix pbb_number_of_iterations_at_time.\n\n2010-09-09  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-poly.c (pbb_number_of_iterations): Removed.\n\t(pbb_number_of_iterations_at_time): Correctly compute the number\n\tof iterations in the transformed loop.\n\t* graphite-poly.h (pbb_number_of_iterations): Removed.\n\nFrom-SVN: r164802", "tree": {"sha": "a443c31eea3cb0ec37b0029ffecb6b4dabf86360", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a443c31eea3cb0ec37b0029ffecb6b4dabf86360"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26ccb556d8e83720ab49d1f5f3136fb0bdf1a70d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26ccb556d8e83720ab49d1f5f3136fb0bdf1a70d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26ccb556d8e83720ab49d1f5f3136fb0bdf1a70d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26ccb556d8e83720ab49d1f5f3136fb0bdf1a70d/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8745012ea7b742722a3d0f067875198c3e25a1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8745012ea7b742722a3d0f067875198c3e25a1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8745012ea7b742722a3d0f067875198c3e25a1f"}], "stats": {"total": 160, "additions": 108, "deletions": 52}, "files": [{"sha": "8479ecda5cc327bbfa960b5c70764930a31712e7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26ccb556d8e83720ab49d1f5f3136fb0bdf1a70d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26ccb556d8e83720ab49d1f5f3136fb0bdf1a70d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=26ccb556d8e83720ab49d1f5f3136fb0bdf1a70d", "patch": "@@ -1,3 +1,10 @@\n+2010-09-30  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-poly.c (pbb_number_of_iterations): Removed.\n+\t(pbb_number_of_iterations_at_time): Correctly compute the number\n+\tof iterations in the transformed loop.\n+\t* graphite-poly.h (pbb_number_of_iterations): Removed.\n+\n 2010-09-30  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-poly.h (lst_update_scattering_seq): Removed."}, {"sha": "5cbf9fc20f27c533d7b72711f13835668c512239", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26ccb556d8e83720ab49d1f5f3136fb0bdf1a70d/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26ccb556d8e83720ab49d1f5f3136fb0bdf1a70d/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=26ccb556d8e83720ab49d1f5f3136fb0bdf1a70d", "patch": "@@ -1,3 +1,10 @@\n+2010-09-09  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-poly.c (pbb_number_of_iterations): Removed.\n+\t(pbb_number_of_iterations_at_time): Correctly compute the number\n+\tof iterations in the transformed loop.\n+\t* graphite-poly.h (pbb_number_of_iterations): Removed.\n+\n 2010-09-09  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-poly.h (lst_update_scattering_seq): Removed."}, {"sha": "e4cab498d8a66aea3babe2fa5d1bdd5657896463", "filename": "gcc/graphite-interchange.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26ccb556d8e83720ab49d1f5f3136fb0bdf1a70d/gcc%2Fgraphite-interchange.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26ccb556d8e83720ab49d1f5f3136fb0bdf1a70d/gcc%2Fgraphite-interchange.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-interchange.c?ref=26ccb556d8e83720ab49d1f5f3136fb0bdf1a70d", "patch": "@@ -320,7 +320,7 @@ pdr_stride_in_loop (mpz_t stride, graphite_dim_t depth, poly_dr_p pdr)\n     {\n       char *str;\n       void (*gmp_free) (void *, size_t);\n-      \n+\n       fprintf (dump_file, \"\\nStride in BB_%d, DR_%d, depth %d:\",\n \t       pbb_index (pbb), PDR_ID (pdr), (int) depth);\n       str = mpz_get_str (0, 10, stride);"}, {"sha": "419a00b79616c1c2b34754cae85f5ebe50c1725b", "filename": "gcc/graphite-poly.c", "status": "modified", "additions": 93, "deletions": 50, "changes": 143, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26ccb556d8e83720ab49d1f5f3136fb0bdf1a70d/gcc%2Fgraphite-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26ccb556d8e83720ab49d1f5f3136fb0bdf1a70d/gcc%2Fgraphite-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.c?ref=26ccb556d8e83720ab49d1f5f3136fb0bdf1a70d", "patch": "@@ -1625,72 +1625,115 @@ psct_scattering_dim_for_loop_depth (poly_bb_p pbb, graphite_dim_t loop_depth)\n   gcc_unreachable ();\n }\n \n-/* Returns the number of iterations NITER of the loop around PBB at\n-   depth LOOP_DEPTH.  */\n-\n-void\n-pbb_number_of_iterations (poly_bb_p pbb,\n-\t\t\t  graphite_dim_t loop_depth,\n-\t\t\t  mpz_t niter)\n-{\n-  ppl_Linear_Expression_t le;\n-  ppl_dimension_type dim;\n-\n-  ppl_Pointset_Powerset_C_Polyhedron_space_dimension (PBB_DOMAIN (pbb), &dim);\n-  ppl_new_Linear_Expression_with_dimension (&le, dim);\n-  ppl_set_coef (le, pbb_iterator_dim (pbb, loop_depth), 1);\n-  mpz_set_si (niter, -1);\n-  ppl_max_for_le_pointset (PBB_DOMAIN (pbb), le, niter);\n-  ppl_delete_Linear_Expression (le);\n-}\n-\n-/* Returns the number of iterations NITER of the loop around PBB at\n+/* Returns the number of iterations RES of the loop around PBB at\n    time(scattering) dimension TIME_DEPTH.  */\n \n void\n pbb_number_of_iterations_at_time (poly_bb_p pbb,\n \t\t\t\t  graphite_dim_t time_depth,\n-\t\t\t\t  mpz_t niter)\n+\t\t\t\t  mpz_t res)\n {\n-  ppl_Pointset_Powerset_C_Polyhedron_t ext_domain, sctr;\n+  ppl_Pointset_Powerset_C_Polyhedron_t domain, sctr_lb, sctr_ub;\n+  ppl_dimension_type domain_dim, sctr_dim;\n   ppl_Linear_Expression_t le;\n-  ppl_dimension_type dim;\n-\n-  /* Takes together domain and scattering polyhedrons, and composes\n-     them into the bigger polyhedron that has the following format:\n+  mpz_t lb, ub, diff, one;\n+  int i;\n \n-     t0..t_{n-1} | l0..l_{nlcl-1} | i0..i_{niter-1} | g0..g_{nparm-1}\n+  ppl_Polyhedron_space_dimension (PBB_TRANSFORMED_SCATTERING (pbb), &sctr_dim);\n \n-     where\n-     | t0..t_{n-1} are time dimensions (scattering dimensions)\n-     | l0..l_{nclc-1} are local variables in scattering function\n-     | i0..i_{niter-1} are original iteration variables\n-     | g0..g_{nparam-1} are global parameters.  */\n+  ppl_new_Pointset_Powerset_C_Polyhedron_from_Pointset_Powerset_C_Polyhedron\n+    (&domain, PBB_DOMAIN (pbb));\n \n-  ppl_new_Pointset_Powerset_C_Polyhedron_from_C_Polyhedron (&sctr,\n-      PBB_TRANSFORMED_SCATTERING (pbb));\n+  ppl_Pointset_Powerset_C_Polyhedron_space_dimension (domain, &domain_dim);\n+  mpz_init (diff);\n+  mpz_init (lb);\n+  mpz_init (ub);\n+  mpz_init (one);\n+  mpz_set_si (one, 1);\n \n-  /* Extend the iteration domain with the scattering dimensions:\n-     0..0 | 0..0 | i0..i_{niter-1} | g0..g_{nparm-1}.   */\n-  ppl_new_Pointset_Powerset_C_Polyhedron_from_Pointset_Powerset_C_Polyhedron\n-    (&ext_domain, PBB_DOMAIN (pbb));\n-  ppl_insert_dimensions_pointset (ext_domain, 0,\n-                                  pbb_nb_scattering_transform (pbb)\n-                                  + pbb_nb_local_vars (pbb));\n+  /* Compute the upper bound on the original iteration domain and add\n+     that upper bound to the scattering.  */\n+  ppl_new_Pointset_Powerset_C_Polyhedron_from_C_Polyhedron\n+    (&sctr_ub, PBB_TRANSFORMED_SCATTERING (pbb));\n+  for (i = 0; i < (int) domain_dim; i++)\n+    {\n+      ppl_Linear_Expression_t eq;\n+      ppl_Constraint_t pc;\n+      ppl_Constraint_System_t cs;\n+      ppl_Polyhedron_t ph;\n+      ppl_Pointset_Powerset_C_Polyhedron_t pph;\n+\n+      ppl_new_Linear_Expression_with_dimension (&le, domain_dim);\n+      ppl_set_coef (le, i, 1);\n+      ppl_min_for_le_pointset (domain, le, lb);\n+      ppl_max_for_le_pointset (domain, le, ub);\n+      mpz_sub (diff, ub, lb);\n+      mpz_add (diff, diff, one);\n+\n+      ppl_new_Linear_Expression_with_dimension (&eq, sctr_dim);\n+      ppl_set_coef (eq, psct_iterator_dim (pbb, i), -1);\n+      ppl_set_inhomogeneous_gmp (eq, diff);\n+\n+      ppl_new_Constraint (&pc, eq, PPL_CONSTRAINT_TYPE_EQUAL);\n+      ppl_new_Constraint_System_from_Constraint (&cs, pc);\n+      ppl_new_C_Polyhedron_from_Constraint_System (&ph, cs);\n+      ppl_new_Pointset_Powerset_C_Polyhedron_from_C_Polyhedron (&pph, ph);\n+      ppl_Pointset_Powerset_C_Polyhedron_intersection_assign (sctr_ub, pph);\n+\n+      ppl_delete_Linear_Expression (le);\n+      ppl_delete_Linear_Expression (eq);\n+      ppl_delete_Polyhedron (ph);\n+      ppl_delete_Pointset_Powerset_C_Polyhedron (pph);\n+      ppl_delete_Constraint (pc);\n+      ppl_delete_Constraint_System (cs);\n+    }\n \n-  /* Add to sctr the extended domain.  */\n-  ppl_Pointset_Powerset_C_Polyhedron_intersection_assign (sctr, ext_domain);\n+  /* Compute the lower bound on the original iteration domain.  */\n+  ppl_new_Pointset_Powerset_C_Polyhedron_from_C_Polyhedron\n+    (&sctr_lb, PBB_TRANSFORMED_SCATTERING (pbb));\n+  for (i = 0; i < (int) domain_dim; i++)\n+    {\n+      ppl_Linear_Expression_t eq;\n+      ppl_Constraint_t pc;\n+      ppl_Constraint_System_t cs;\n+      ppl_Polyhedron_t ph;\n+      ppl_Pointset_Powerset_C_Polyhedron_t pph;\n+\n+      ppl_new_Linear_Expression_with_dimension (&le, domain_dim);\n+      ppl_set_coef (le, i, 1);\n+      ppl_min_for_le_pointset (domain, le, lb);\n+\n+      ppl_new_Linear_Expression_with_dimension (&eq, sctr_dim);\n+      ppl_set_coef (eq, psct_iterator_dim (pbb, i), -1);\n+      ppl_set_inhomogeneous_gmp (eq, lb);\n+\n+      ppl_new_Constraint (&pc, eq, PPL_CONSTRAINT_TYPE_EQUAL);\n+      ppl_new_Constraint_System_from_Constraint (&cs, pc);\n+      ppl_new_C_Polyhedron_from_Constraint_System (&ph, cs);\n+      ppl_new_Pointset_Powerset_C_Polyhedron_from_C_Polyhedron (&pph, ph);\n+      ppl_Pointset_Powerset_C_Polyhedron_intersection_assign (sctr_lb, pph);\n+\n+      ppl_delete_Linear_Expression (le);\n+      ppl_delete_Linear_Expression (eq);\n+      ppl_delete_Polyhedron (ph);\n+      ppl_delete_Pointset_Powerset_C_Polyhedron (pph);\n+      ppl_delete_Constraint (pc);\n+      ppl_delete_Constraint_System (cs);\n+    }\n \n   /* Extract the number of iterations.  */\n-  ppl_Pointset_Powerset_C_Polyhedron_space_dimension (sctr, &dim);\n-  ppl_new_Linear_Expression_with_dimension (&le, dim);\n+  ppl_new_Linear_Expression_with_dimension (&le, sctr_dim);\n   ppl_set_coef (le, time_depth, 1);\n-  mpz_set_si (niter, -1);\n-  ppl_max_for_le_pointset (sctr, le, niter);\n+  ppl_min_for_le_pointset (sctr_lb, le, lb);\n+  ppl_max_for_le_pointset (sctr_ub, le, ub);\n+  mpz_sub (res, ub, lb);\n \n-  ppl_delete_Linear_Expression (le);\n-  ppl_delete_Pointset_Powerset_C_Polyhedron (sctr);\n-  ppl_delete_Pointset_Powerset_C_Polyhedron (ext_domain);\n+  mpz_clear (one);\n+  mpz_clear (diff);\n+  mpz_clear (lb);\n+  mpz_clear (ub);\n+  ppl_delete_Pointset_Powerset_C_Polyhedron (sctr_ub);\n+  ppl_delete_Pointset_Powerset_C_Polyhedron (sctr_lb);\n }\n \n /* Translates LOOP to LST.  */"}, {"sha": "98ce124fa9f50544c019e83a2342e30e00ad3ab5", "filename": "gcc/graphite-poly.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26ccb556d8e83720ab49d1f5f3136fb0bdf1a70d/gcc%2Fgraphite-poly.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26ccb556d8e83720ab49d1f5f3136fb0bdf1a70d/gcc%2Fgraphite-poly.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-poly.h?ref=26ccb556d8e83720ab49d1f5f3136fb0bdf1a70d", "patch": "@@ -414,7 +414,6 @@ extern void debug_iteration_domains (scop_p, int);\n extern bool scop_do_interchange (scop_p);\n extern bool scop_do_strip_mine (scop_p);\n extern bool scop_do_block (scop_p);\n-extern void pbb_number_of_iterations (poly_bb_p, graphite_dim_t, mpz_t);\n extern void pbb_number_of_iterations_at_time (poly_bb_p, graphite_dim_t, mpz_t);\n extern void pbb_remove_duplicate_pdrs (poly_bb_p);\n "}]}