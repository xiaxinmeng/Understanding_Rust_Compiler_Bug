{"sha": "1a3f38a2b0b7a1d13a934952f74a4a910035e72b", "node_id": "C_kwDOANBUbNoAKDFhM2YzOGEyYjBiN2ExZDEzYTkzNDk1MmY3NGE0YTkxMDAzNWU3MmI", "commit": {"author": {"name": "Simon Cook", "email": "simon.cook@embecosm.com", "date": "2022-04-12T14:45:56Z"}, "committer": {"name": "Simon Cook", "email": "simon.cook@embecosm.com", "date": "2022-04-12T14:45:56Z"}, "message": "rust: Allow gccrs to build on x86_64-apple-darwin with clang/libc++\n\nThis makes changes to the includes such that gccrs can be built with\nclang/libc++, and for x86_64-apple-darwin. Similarly, a couple of\nchanges have been made to creating MacroInvocations and wrapping into\nExprOrStmts for libc++ compatibility.", "tree": {"sha": "d9528e076ff348fc2401f296e63fcb0695bccea4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9528e076ff348fc2401f296e63fcb0695bccea4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a3f38a2b0b7a1d13a934952f74a4a910035e72b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a3f38a2b0b7a1d13a934952f74a4a910035e72b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a3f38a2b0b7a1d13a934952f74a4a910035e72b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/comments", "author": {"login": "simonpcook", "id": 90491, "node_id": "MDQ6VXNlcjkwNDkx", "avatar_url": "https://avatars.githubusercontent.com/u/90491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonpcook", "html_url": "https://github.com/simonpcook", "followers_url": "https://api.github.com/users/simonpcook/followers", "following_url": "https://api.github.com/users/simonpcook/following{/other_user}", "gists_url": "https://api.github.com/users/simonpcook/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonpcook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonpcook/subscriptions", "organizations_url": "https://api.github.com/users/simonpcook/orgs", "repos_url": "https://api.github.com/users/simonpcook/repos", "events_url": "https://api.github.com/users/simonpcook/events{/privacy}", "received_events_url": "https://api.github.com/users/simonpcook/received_events", "type": "User", "site_admin": false}, "committer": {"login": "simonpcook", "id": 90491, "node_id": "MDQ6VXNlcjkwNDkx", "avatar_url": "https://avatars.githubusercontent.com/u/90491?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonpcook", "html_url": "https://github.com/simonpcook", "followers_url": "https://api.github.com/users/simonpcook/followers", "following_url": "https://api.github.com/users/simonpcook/following{/other_user}", "gists_url": "https://api.github.com/users/simonpcook/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonpcook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonpcook/subscriptions", "organizations_url": "https://api.github.com/users/simonpcook/orgs", "repos_url": "https://api.github.com/users/simonpcook/repos", "events_url": "https://api.github.com/users/simonpcook/events{/privacy}", "received_events_url": "https://api.github.com/users/simonpcook/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68458036c81d141a3899ac4e6ec6ddf0fdfde174", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68458036c81d141a3899ac4e6ec6ddf0fdfde174", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68458036c81d141a3899ac4e6ec6ddf0fdfde174"}], "stats": {"total": 69, "additions": 22, "deletions": 47}, "files": [{"sha": "593f9791f90b19b81d7b99e5d91a760386df6c33", "filename": "gcc/rust/ast/rust-path.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Fast%2Frust-path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Fast%2Frust-path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fast%2Frust-path.h?ref=1a3f38a2b0b7a1d13a934952f74a4a910035e72b", "patch": "@@ -23,9 +23,6 @@\n \n #include \"rust-ast.h\"\n \n-#include <string>\n-#include <vector>\n-\n namespace Rust {\n namespace AST {\n "}, {"sha": "c0aea0286af44d710bc191439ae866174dcb83f4", "filename": "gcc/rust/backend/rust-mangle.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Fbackend%2Frust-mangle.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Fbackend%2Frust-mangle.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-mangle.cc?ref=1a3f38a2b0b7a1d13a934952f74a4a910035e72b", "patch": "@@ -1,7 +1,6 @@\n #include \"rust-mangle.h\"\n #include \"fnv-hash.h\"\n #include \"rust-base62.h\"\n-#include <algorithm>\n \n // FIXME: Rename those to legacy_*\n static const std::string kMangledSymbolPrefix = \"_ZN\";"}, {"sha": "3f4bf37edbced88fe38410a0555062b8e7e18e16", "filename": "gcc/rust/expand/rust-macro-builtins.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Fexpand%2Frust-macro-builtins.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Fexpand%2Frust-macro-builtins.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-macro-builtins.h?ref=1a3f38a2b0b7a1d13a934952f74a4a910035e72b", "patch": "@@ -59,6 +59,12 @@\n  * of the `Mappings` class.\n  */\n \n+/* If assert is defined as a macro this file will not parse, so undefine this\n+   before continuing.  */\n+#ifdef assert\n+#undef assert\n+#endif\n+\n namespace Rust {\n class MacroBuiltin\n {"}, {"sha": "84096ce4c44203989a129111ee6f6c045bca38e9", "filename": "gcc/rust/hir/tree/rust-hir-path.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-path.h?ref=1a3f38a2b0b7a1d13a934952f74a4a910035e72b", "patch": "@@ -21,9 +21,6 @@\n \n #include \"rust-hir.h\"\n \n-#include <string>\n-#include <vector>\n-\n namespace Rust {\n namespace HIR {\n "}, {"sha": "ea09ac22c222246fe5759f1e9dc51b2e055116e7", "filename": "gcc/rust/lex/rust-lex.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Flex%2Frust-lex.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Flex%2Frust-lex.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flex%2Frust-lex.cc?ref=1a3f38a2b0b7a1d13a934952f74a4a910035e72b", "patch": "@@ -23,8 +23,6 @@\n #include \"rust-linemap.h\"\n #include \"safe-ctype.h\"\n \n-#include <sstream> // for ostringstream\n-\n namespace Rust {\n // TODO: move to separate compilation unit?\n // overload += for uint32_t to allow 32-bit encoded utf-8 to be added"}, {"sha": "e01d86d56a0f5659c3bc0b7011de0fc4e821e48e", "filename": "gcc/rust/lex/rust-lex.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Flex%2Frust-lex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Flex%2Frust-lex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flex%2Frust-lex.h?ref=1a3f38a2b0b7a1d13a934952f74a4a910035e72b", "patch": "@@ -23,10 +23,6 @@\n #include \"rust-buffered-queue.h\"\n #include \"rust-token.h\"\n \n-#include <cstdio>\n-#include <utility>\n-#include <tuple>\n-\n namespace Rust {\n // Simple wrapper for FILE* that simplifies destruction.\n struct RAIIFile"}, {"sha": "3fa46a2cebe49a71a2e7c291caabd79c40979717", "filename": "gcc/rust/lex/rust-token.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Flex%2Frust-token.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Flex%2Frust-token.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flex%2Frust-token.h?ref=1a3f38a2b0b7a1d13a934952f74a4a910035e72b", "patch": "@@ -19,9 +19,6 @@\n #ifndef RUST_TOKEN_H\n #define RUST_TOKEN_H\n \n-#include <string>\n-#include <memory>\n-\n #include \"rust-linemap.h\"\n #include \"rust-codepoint.h\"\n "}, {"sha": "aeecda5f73c32b5b2e41193c02dd976c4f1d60a0", "filename": "gcc/rust/lint/rust-lint-marklive.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Flint%2Frust-lint-marklive.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Flint%2Frust-lint-marklive.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flint%2Frust-lint-marklive.h?ref=1a3f38a2b0b7a1d13a934952f74a4a910035e72b", "patch": "@@ -19,7 +19,6 @@\n #ifndef RUST_HIR_LIVENESS\n #define RUST_HIR_LIVENESS\n \n-#include <set>\n #include \"rust-hir-full-decls.h\"\n #include \"rust-hir-map.h\"\n #include \"rust-lint-marklive-base.h\""}, {"sha": "591cb30bc24d158c10d7dd498e20eb0ca914c0db", "filename": "gcc/rust/lint/rust-lint-scan-deadcode.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Flint%2Frust-lint-scan-deadcode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Flint%2Frust-lint-scan-deadcode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flint%2Frust-lint-scan-deadcode.h?ref=1a3f38a2b0b7a1d13a934952f74a4a910035e72b", "patch": "@@ -19,7 +19,6 @@\n #ifndef RUST_HIR_SCAN_DEADCODE\n #define RUST_HIR_SCAN_DEADCODE\n \n-#include <set>\n #include \"rust-hir-full-decls.h\"\n #include \"rust-hir-map.h\"\n #include \"rust-lint-marklive.h\""}, {"sha": "895e058057bf3ab0e57f1ac6a43ef5eeafdbb5ad", "filename": "gcc/rust/parse/rust-cfg-parser.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Fparse%2Frust-cfg-parser.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Fparse%2Frust-cfg-parser.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-cfg-parser.h?ref=1a3f38a2b0b7a1d13a934952f74a4a910035e72b", "patch": "@@ -18,11 +18,9 @@ along with GCC; see the file COPYING3.  If not see\n #define RUST_CFG_PARSER_H\n \n #include \"config.h\"\n-#include \"system.h\"\n+#include \"rust-system.h\"\n #include \"coretypes.h\"\n \n-#include <string>\n-\n namespace Rust {\n /**\n  * Parse a `key` or `key=\"value\"` pair given to the `-frust-cfg` compiler"}, {"sha": "e352836118cac21b698f7948085ddba1629a95c0", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=1a3f38a2b0b7a1d13a934952f74a4a910035e72b", "patch": "@@ -11923,17 +11923,15 @@ Parser<ManagedTokenSource>::parse_path_based_stmt_or_expr (\n \t\tstd::unique_ptr<AST::MacroInvocation> stmt (\n \t\t  new AST::MacroInvocation (std::move (invoc_data),\n \t\t\t\t\t    std::move (outer_attrs),\n-\t\t\t\t\t    stmt_or_expr_loc),\n-\t\t  true);\n+\t\t\t\t\t    stmt_or_expr_loc, true));\n \t\treturn ExprOrStmt (std::move (stmt));\n \t      }\n \n \t    // otherwise, create macro invocation\n \t    std::unique_ptr<AST::MacroInvocation> expr (\n \t      new AST::MacroInvocation (std::move (invoc_data),\n \t\t\t\t\tstd::move (outer_attrs),\n-\t\t\t\t\tstmt_or_expr_loc),\n-\t      false);\n+\t\t\t\t\tstmt_or_expr_loc, false));\n \t    return ExprOrStmt (std::move (expr));\n \t  }\n \telse\n@@ -12244,8 +12242,8 @@ Parser<ManagedTokenSource>::parse_macro_invocation_maybe_semi (\n \n \t  std::unique_ptr<AST::MacroInvocation> stmt (\n \t    new AST::MacroInvocation (std::move (invoc_data),\n-\t\t\t\t      std::move (outer_attrs), macro_locus),\n-\t    true);\n+\t\t\t\t      std::move (outer_attrs), macro_locus,\n+\t\t\t\t      true));\n \t  return ExprOrStmt (std::move (stmt));\n \t}\n "}, {"sha": "fcfcf18ff5b3b893e61ed4118cab3adf8ce99f81", "filename": "gcc/rust/parse/rust-parse.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Fparse%2Frust-parse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Fparse%2Frust-parse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse.h?ref=1a3f38a2b0b7a1d13a934952f74a4a910035e72b", "patch": "@@ -40,6 +40,11 @@ struct ExprOrStmt\n   // statement constructor\n   ExprOrStmt (std::unique_ptr<AST::Stmt> stmt) : stmt (std::move (stmt)) {}\n \n+  // macro constructor\n+  ExprOrStmt (std::unique_ptr<AST::MacroInvocation> macro)\n+    : expr (std::move (macro))\n+  {}\n+\n   // Returns whether this object is in an error state.\n   bool is_error () const\n   {"}, {"sha": "39f350677527280b9f37d34b5240ce2a601ca3e3", "filename": "gcc/rust/rust-buffered-queue.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Frust-buffered-queue.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Frust-buffered-queue.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-buffered-queue.h?ref=1a3f38a2b0b7a1d13a934952f74a4a910035e72b", "patch": "@@ -19,9 +19,6 @@\n #ifndef RUST_BUFFERED_QUEUE_H\n #define RUST_BUFFERED_QUEUE_H\n \n-#include <vector>\n-#include <utility>\n-\n #include \"rust-system.h\"\n \n namespace Rust {"}, {"sha": "8fcc5dd3f0fc6364fd7499a503bc1dbc6fa530cf", "filename": "gcc/rust/rust-session-manager.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Frust-session-manager.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Frust-session-manager.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-session-manager.h?ref=1a3f38a2b0b7a1d13a934952f74a4a910035e72b", "patch": "@@ -24,7 +24,7 @@\n #include \"rust-backend.h\"\n \n #include \"config.h\"\n-#include \"system.h\"\n+#include \"rust-system.h\"\n #include \"coretypes.h\"\n #include \"options.h\"\n "}, {"sha": "3a600237966314b6dc761887ed1f1176bcdadce1", "filename": "gcc/rust/rust-system.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Frust-system.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Frust-system.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-system.h?ref=1a3f38a2b0b7a1d13a934952f74a4a910035e72b", "patch": "@@ -41,6 +41,8 @@\n #include <deque>\n #include <functional>\n #include <memory>\n+#include <utility>\n+#include <fstream>\n \n // Rust frontend requires C++11 minimum, so will have unordered_map and set\n #include <unordered_map>"}, {"sha": "1a4b17a330375cc2d7191bb2ed28c9cb690fe946", "filename": "gcc/rust/typecheck/rust-hir-type-check-util.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-util.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-util.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-util.h?ref=1a3f38a2b0b7a1d13a934952f74a4a910035e72b", "patch": "@@ -19,7 +19,7 @@\n #ifndef RUST_HIR_TYPE_CHECK_UTIL_H\n #define RUST_HIR_TYPE_CHECK_UTIL_H\n \n-#include <functional>\n+#include \"rust-system.h\"\n #include \"rust-hir-visitor.h\"\n \n namespace Rust {"}, {"sha": "70f0b11964a541b746295b28ab27a749efd3d238", "filename": "gcc/rust/typecheck/rust-tycheck-dump.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Ftypecheck%2Frust-tycheck-dump.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Ftypecheck%2Frust-tycheck-dump.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tycheck-dump.h?ref=1a3f38a2b0b7a1d13a934952f74a4a910035e72b", "patch": "@@ -22,9 +22,6 @@\n #include \"rust-hir-type-check-base.h\"\n #include \"rust-hir-full.h\"\n \n-#include <fstream>\n-#include <sstream>\n-\n namespace Rust {\n namespace Resolver {\n "}, {"sha": "78e54c994116fcbb5485666cd85770b63741e12b", "filename": "gcc/rust/util/fnv-hash.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Futil%2Ffnv-hash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Futil%2Ffnv-hash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Ffnv-hash.h?ref=1a3f38a2b0b7a1d13a934952f74a4a910035e72b", "patch": "@@ -19,9 +19,6 @@\n #ifndef RUST_FNV_HASH_H\n #define RUST_FNV_HASH_H\n \n-#include <cstdint>\n-#include <cstddef>\n-\n namespace Rust {\n namespace Hash {\n "}, {"sha": "2bd5ff081c938d413d5f3b4bb5e04de01d397bdf", "filename": "gcc/rust/util/rust-abi.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Futil%2Frust-abi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Futil%2Frust-abi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-abi.h?ref=1a3f38a2b0b7a1d13a934952f74a4a910035e72b", "patch": "@@ -17,7 +17,7 @@\n #ifndef RUST_ABI_OPTIONS_H\n #define RUST_ABI_OPTIONS_H\n \n-#include <string>\n+#include \"rust-system.h\"\n \n namespace Rust {\n "}, {"sha": "bdab23338c3dfa5a2864775c00534621412e0649", "filename": "gcc/rust/util/rust-base62.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Futil%2Frust-base62.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Futil%2Frust-base62.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-base62.cc?ref=1a3f38a2b0b7a1d13a934952f74a4a910035e72b", "patch": "@@ -18,8 +18,6 @@\n \n #include \"rust-base62.h\"\n \n-#include <algorithm>\n-\n namespace Rust {\n \n std::string"}, {"sha": "fa610d3e5a4ee74f094702f2943fffc090f97e0a", "filename": "gcc/rust/util/rust-base62.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Futil%2Frust-base62.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Futil%2Frust-base62.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-base62.h?ref=1a3f38a2b0b7a1d13a934952f74a4a910035e72b", "patch": "@@ -19,7 +19,7 @@\n #ifndef RUST_BASE62_H\n #define RUST_BASE62_H\n \n-#include <string>\n+#include \"rust-system.h\"\n \n namespace Rust {\n "}, {"sha": "105a67b8c5c0453a5abf5b79df979634cd289df6", "filename": "gcc/rust/util/rust-inline-visitor.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Futil%2Frust-inline-visitor.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Futil%2Frust-inline-visitor.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-inline-visitor.h?ref=1a3f38a2b0b7a1d13a934952f74a4a910035e72b", "patch": "@@ -22,9 +22,6 @@\n #ifndef RUST_INLINE_VISITOR\n #define RUST_INLINE_VISITOR\n \n-#include <utility>\n-#include <type_traits>\n-\n namespace Rust {\n \n // Wrapper for the target Visitor we're matching against."}, {"sha": "5f098d20307f1eb88989d336489147b0cbef1a98", "filename": "gcc/rust/util/rust-make-unique.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Futil%2Frust-make-unique.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a3f38a2b0b7a1d13a934952f74a4a910035e72b/gcc%2Frust%2Futil%2Frust-make-unique.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-make-unique.h?ref=1a3f38a2b0b7a1d13a934952f74a4a910035e72b", "patch": "@@ -1,8 +1,6 @@\n #ifndef RUST_MAKE_UNIQUE_H\n #define RUST_MAKE_UNIQUE_H\n \n-#include <memory>\n-\n namespace Rust {\n \n template <typename T, typename... Ts>"}]}