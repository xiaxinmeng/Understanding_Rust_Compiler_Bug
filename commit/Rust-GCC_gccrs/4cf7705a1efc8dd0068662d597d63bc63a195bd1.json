{"sha": "4cf7705a1efc8dd0068662d597d63bc63a195bd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNmNzcwNWExZWZjOGRkMDA2ODY2MmQ1OTdkNjNiYzYzYTE5NWJkMQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2000-04-15T15:44:19Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-04-15T15:44:19Z"}, "message": "varasm.c (assemble_variable): Add cast to remove warning.\n\n\t* varasm.c (assemble_variable): Add cast to remove warning.\n\t(immed_real_const_1): Only use CONST[01]_RTX if not in nested function.\n\nFrom-SVN: r33165", "tree": {"sha": "fbd5a61d05266a8fce129a38f9b08900ec24adda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbd5a61d05266a8fce129a38f9b08900ec24adda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4cf7705a1efc8dd0068662d597d63bc63a195bd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cf7705a1efc8dd0068662d597d63bc63a195bd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cf7705a1efc8dd0068662d597d63bc63a195bd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cf7705a1efc8dd0068662d597d63bc63a195bd1/comments", "author": null, "committer": null, "parents": [{"sha": "c29ea88a1dafb892b521501f36bd11871bcdce98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c29ea88a1dafb892b521501f36bd11871bcdce98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c29ea88a1dafb892b521501f36bd11871bcdce98"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "673a8c9a7fe1344dd97119b50261c7707e295c65", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cf7705a1efc8dd0068662d597d63bc63a195bd1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cf7705a1efc8dd0068662d597d63bc63a195bd1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4cf7705a1efc8dd0068662d597d63bc63a195bd1", "patch": "@@ -1,7 +1,10 @@\n Sat Apr 15 10:59:19 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n+\t* varasm.c (assemble_variable): Add cast to remove warning.\n+\t(immed_real_const_1): Only use CONST[01]_RTX if not in nested function.\n+\n \t* flow.c (count_basic_blocks, find_basic_blocks_1): Remove last change.\n-\t* optabs.c (emit_libcall_block): If have REG_EHG_REGION, update\n+\t* optabs.c (emit_libcall_block): If have REG_EH_REGION, update\n \tregion number to -1.\n \n 2000-04-15  Richard Earnshaw (rearnsah@arm.com)"}, {"sha": "5224284cb2697afb0780f9a9eb9cefba3d00bbb1", "filename": "gcc/varasm.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cf7705a1efc8dd0068662d597d63bc63a195bd1/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cf7705a1efc8dd0068662d597d63bc63a195bd1/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=4cf7705a1efc8dd0068662d597d63bc63a195bd1", "patch": "@@ -1507,7 +1507,7 @@ assemble_variable (decl, top_level, at_end, dont_output_data)\n \t\t * (BIGGEST_ALIGNMENT / BITS_PER_UNIT));\n       \n #if !defined(ASM_OUTPUT_ALIGNED_COMMON) && !defined(ASM_OUTPUT_ALIGNED_BSS)\n-      if (DECL_ALIGN (decl) / BITS_PER_UNIT > rounded)\n+      if ((unsigned HOST_WIDE_INT) DECL_ALIGN (decl) / BITS_PER_UNIT > rounded)\n          warning_with_decl \n            (decl, \"requested alignment for %s is greater than implemented alignment of %d.\",rounded);\n #endif\n@@ -2162,15 +2162,19 @@ immed_real_const_1 (d, mode)\n \n   u.d = d;\n \n-  /* Detect special cases.  */\n-\n-  if (REAL_VALUES_IDENTICAL (dconst0, d))\n+  /* Detect special cases.  But be careful we don't use a CONST_DOUBLE\n+     that's from a parent function since it may be in its constant pool.  */\n+  if (REAL_VALUES_IDENTICAL (dconst0, d)\n+      && (cfun == 0 || decl_function_context (current_function_decl) == 0))\n     return CONST0_RTX (mode);\n+\n   /* Check for NaN first, because some ports (specifically the i386) do not\n      emit correct ieee-fp code by default, and thus will generate a core\n      dump here if we pass a NaN to REAL_VALUES_EQUAL and if REAL_VALUES_EQUAL\n      does a floating point comparison.  */\n-  else if (! REAL_VALUE_ISNAN (d) && REAL_VALUES_EQUAL (dconst1, d))\n+  else if ((! REAL_VALUE_ISNAN (d) && REAL_VALUES_EQUAL (dconst1, d))\n+\t   && (cfun == 0\n+\t       || decl_function_context (current_function_decl) == 0))\n     return CONST1_RTX (mode);\n \n   if (sizeof u == sizeof (HOST_WIDE_INT))\n@@ -3677,7 +3681,8 @@ find_pool_constant (f, addr)\n   struct pool_sym *sym;\n   const char *label = XSTR (addr, 0);\n \n-  for (sym = f->varasm->x_const_rtx_sym_hash_table[SYMHASH (label)]; sym; sym = sym->next)\n+  for (sym = f->varasm->x_const_rtx_sym_hash_table[SYMHASH (label)]; sym;\n+       sym = sym->next)\n     if (sym->label == label)\n       return sym->pool;\n "}]}