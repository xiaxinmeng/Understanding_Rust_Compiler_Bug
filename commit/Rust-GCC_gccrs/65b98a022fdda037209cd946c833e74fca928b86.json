{"sha": "65b98a022fdda037209cd946c833e74fca928b86", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjViOThhMDIyZmRkYTAzNzIwOWNkOTQ2YzgzM2U3NGZjYTkyOGI4Ng==", "commit": {"author": {"name": "John Wehle", "email": "john@feith.com", "date": "2000-06-14T07:41:57Z"}, "committer": {"name": "John Wehle", "email": "wehle@gcc.gnu.org", "date": "2000-06-14T07:41:57Z"}, "message": "ifcvt.c (EDGE_COMPLEX): Move definition ...\n\n\t* ifcvt.c (EDGE_COMPLEX): Move definition ...\n\t* basic-block.h (EDGE_COMPLEX): ... here.\n\n\t* loop.c (check_dbra_loop): Specify the register when\n\tgenerating REG_NONNEG notes and don't generate duplicates.\n\nFrom-SVN: r34542", "tree": {"sha": "e23b796ad13b0395af26197dccde4ba350c24687", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e23b796ad13b0395af26197dccde4ba350c24687"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65b98a022fdda037209cd946c833e74fca928b86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65b98a022fdda037209cd946c833e74fca928b86", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65b98a022fdda037209cd946c833e74fca928b86", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65b98a022fdda037209cd946c833e74fca928b86/comments", "author": {"login": "jlwehle", "id": 46985578, "node_id": "MDQ6VXNlcjQ2OTg1NTc4", "avatar_url": "https://avatars.githubusercontent.com/u/46985578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlwehle", "html_url": "https://github.com/jlwehle", "followers_url": "https://api.github.com/users/jlwehle/followers", "following_url": "https://api.github.com/users/jlwehle/following{/other_user}", "gists_url": "https://api.github.com/users/jlwehle/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlwehle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlwehle/subscriptions", "organizations_url": "https://api.github.com/users/jlwehle/orgs", "repos_url": "https://api.github.com/users/jlwehle/repos", "events_url": "https://api.github.com/users/jlwehle/events{/privacy}", "received_events_url": "https://api.github.com/users/jlwehle/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "11cf4d1831071d23c84e1add8a2d3fbdd360a82e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11cf4d1831071d23c84e1add8a2d3fbdd360a82e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11cf4d1831071d23c84e1add8a2d3fbdd360a82e"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "969d873a8ddc5d6e2cdb01aed2711e09816cba2e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b98a022fdda037209cd946c833e74fca928b86/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b98a022fdda037209cd946c833e74fca928b86/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=65b98a022fdda037209cd946c833e74fca928b86", "patch": "@@ -1,3 +1,11 @@\n+Wed Jun 14 03:39:58 EDT 2000  John Wehle  (john@feith.com)\n+\n+\t* ifcvt.c (EDGE_COMPLEX): Move definition ...\n+\t* basic-block.h (EDGE_COMPLEX): ... here.\n+\n+\t* loop.c (check_dbra_loop): Specify the register when\n+\tgenerating REG_NONNEG notes and don't generate duplicates.\n+\n 2000-06-13  Jakub Jelinek  <jakub@redhat.com>\n \n \t* tree.h (TYPE_USER_ALIGN, DECL_USER_ALIGN): Define."}, {"sha": "633bdafdb202ba066e96126e06e7dd689c5361ea", "filename": "gcc/basic-block.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b98a022fdda037209cd946c833e74fca928b86/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b98a022fdda037209cd946c833e74fca928b86/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=65b98a022fdda037209cd946c833e74fca928b86", "patch": "@@ -138,6 +138,8 @@ typedef struct edge_def {\n #define EDGE_EH\t\t\t16\n #define EDGE_FAKE\t\t32\n \n+#define EDGE_COMPLEX\t(EDGE_ABNORMAL | EDGE_ABNORMAL_CALL | EDGE_EH)\n+\n \n /* Basic block information indexed by block number.  */\n typedef struct basic_block_def {"}, {"sha": "54ad8a73a6f2ffdd285c2ed5abdfe8f9f8645a60", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b98a022fdda037209cd946c833e74fca928b86/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b98a022fdda037209cd946c833e74fca928b86/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=65b98a022fdda037209cd946c833e74fca928b86", "patch": "@@ -51,8 +51,6 @@\n #define MAX_CONDITIONAL_EXECUTE   (BRANCH_COST + 1)\n #endif\n \n-#define EDGE_COMPLEX\t(EDGE_ABNORMAL | EDGE_ABNORMAL_CALL | EDGE_EH)\n-\n #define NULL_EDGE\t((struct edge_def *)NULL)\n #define NULL_BLOCK\t((struct basic_block_def *)NULL)\n "}, {"sha": "066ef931111dc3a40eb6c70170da09ebf0f4a0be", "filename": "gcc/loop.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65b98a022fdda037209cd946c833e74fca928b86/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65b98a022fdda037209cd946c833e74fca928b86/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=65b98a022fdda037209cd946c833e74fca928b86", "patch": "@@ -7835,9 +7835,10 @@ check_dbra_loop (loop, insn_count)\n \t      % (-INTVAL (bl->biv->add_val))) == 0)\n \t{\n \t  /* register always nonnegative, add REG_NOTE to branch */\n-\t  REG_NOTES (PREV_INSN (loop_end))\n-\t    = gen_rtx_EXPR_LIST (REG_NONNEG, NULL_RTX,\n-\t\t\t\t REG_NOTES (PREV_INSN (loop_end)));\n+\t  if (! find_reg_note (jump, REG_NONNEG, NULL_RTX))\n+\t    REG_NOTES (jump)\n+\t      = gen_rtx_EXPR_LIST (REG_NONNEG, bl->biv->dest_reg,\n+\t\t\t\t   REG_NOTES (jump));\n \t  bl->nonneg = 1;\n \n \t  return 1;\n@@ -7860,9 +7861,10 @@ check_dbra_loop (loop, insn_count)\n \t      && ! reg_set_between_p (bl->biv->dest_reg, p, loop_start)\n \t      && INTVAL (bl->biv->add_val) == -1)\n \t    {\n-\t      REG_NOTES (PREV_INSN (loop_end))\n-\t\t= gen_rtx_EXPR_LIST (REG_NONNEG, NULL_RTX,\n-\t\t\t\t     REG_NOTES (PREV_INSN (loop_end)));\n+\t      if (! find_reg_note (jump, REG_NONNEG, NULL_RTX))\n+\t\tREG_NOTES (jump)\n+\t\t  = gen_rtx_EXPR_LIST (REG_NONNEG, bl->biv->dest_reg,\n+\t\t\t\t       REG_NOTES (jump));\n \t      bl->nonneg = 1;\n \n \t      return 1;\n@@ -8260,7 +8262,7 @@ check_dbra_loop (loop, insn_count)\n \t\t      /* Increment of LABEL_NUSES done above.  */\n \t\t      /* Register is now always nonnegative,\n \t\t\t so add REG_NONNEG note to the branch.  */\n-\t\t      REG_NOTES (tem) = gen_rtx_EXPR_LIST (REG_NONNEG, NULL_RTX,\n+\t\t      REG_NOTES (tem) = gen_rtx_EXPR_LIST (REG_NONNEG, reg,\n \t\t\t\t\t\t\t   REG_NOTES (tem));\n \t\t    }\n \t\t  bl->nonneg = 1;"}]}