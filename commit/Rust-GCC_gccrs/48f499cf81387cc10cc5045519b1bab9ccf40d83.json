{"sha": "48f499cf81387cc10cc5045519b1bab9ccf40d83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhmNDk5Y2Y4MTM4N2NjMTBjYzUwNDU1MTliMWJhYjljY2Y0MGQ4Mw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2003-11-26T22:45:56Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-11-26T22:45:56Z"}, "message": "re PR libstdc++/12297 (istream::sentry::sentry() handles eof() incorrectly.)\n\n\n2003-11-26  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/12297\n\t* include/bits/istream.tcc\n\t(basic_istream::sentry::sentry): Set failbit and eofbit when eof.\n\t* testsuite/27_io/basic_istream/sentry/char/12297.cc: New.\n\nFrom-SVN: r73968", "tree": {"sha": "61eeb4755c2a89ce526968f83572aff8eafeb13e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61eeb4755c2a89ce526968f83572aff8eafeb13e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48f499cf81387cc10cc5045519b1bab9ccf40d83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48f499cf81387cc10cc5045519b1bab9ccf40d83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48f499cf81387cc10cc5045519b1bab9ccf40d83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48f499cf81387cc10cc5045519b1bab9ccf40d83/comments", "author": null, "committer": null, "parents": [{"sha": "aef81a9acb17a9eadc5df75007b4364fbfa3a9de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aef81a9acb17a9eadc5df75007b4364fbfa3a9de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aef81a9acb17a9eadc5df75007b4364fbfa3a9de"}], "stats": {"total": 65, "additions": 62, "deletions": 3}, "files": [{"sha": "243dcbdfd6b2e8f21fb4f0835b769788f9d6b19f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f499cf81387cc10cc5045519b1bab9ccf40d83/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f499cf81387cc10cc5045519b1bab9ccf40d83/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=48f499cf81387cc10cc5045519b1bab9ccf40d83", "patch": "@@ -1,3 +1,10 @@\n+2003-11-26  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/12297\n+\t* include/bits/istream.tcc\n+\t(basic_istream::sentry::sentry): Set failbit and eofbit when eof.\n+\t* testsuite/27_io/basic_istream/sentry/char/12297.cc: New.\n+\t\n 2003-11-26  Paolo Carlini  <pcarlini@suse.de>\n \t    Petur Runolfsson  <peturr02@ru.is>\n "}, {"sha": "d710f0c54f9465e0369fb534cbb8e7411dd2d1c4", "filename": "libstdc++-v3/include/bits/istream.tcc", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f499cf81387cc10cc5045519b1bab9ccf40d83/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f499cf81387cc10cc5045519b1bab9ccf40d83/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc?ref=48f499cf81387cc10cc5045519b1bab9ccf40d83", "patch": "@@ -46,6 +46,7 @@ namespace std\n     basic_istream<_CharT, _Traits>::sentry::\n     sentry(basic_istream<_CharT, _Traits>& __in, bool __noskipws)\n     {\n+      ios_base::iostate __err = ios_base::iostate(ios_base::goodbit);\n       if (__in.good()) \n \t{\n \t  if (__in.tie())\n@@ -66,17 +67,18 @@ namespace std\n \t      // 195. Should basic_istream::sentry's constructor ever\n \t      // set eofbit?\n \t      if (traits_type::eq_int_type(__c, __eof))\n-\t\t__in.setstate(ios_base::eofbit);\n+\t\t__err |= ios_base::eofbit;\n \t    }\n \t}\n \n-      if (__in.good())\n+      if (__in.good() && __err == ios_base::goodbit)\n \t_M_ok = true;\n       else\n \t{\n \t  _M_ok = false;\n-\t  __in.setstate(ios_base::failbit);\n+\t  __err |= ios_base::failbit;\n \t}\n+      __in.setstate(__err);\n     }\n \n   template<typename _CharT, typename _Traits>"}, {"sha": "918870c54d21dc37a617a5565eefeb8db1b6c72f", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/sentry/char/12297.cc", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48f499cf81387cc10cc5045519b1bab9ccf40d83/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fchar%2F12297.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48f499cf81387cc10cc5045519b1bab9ccf40d83/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fchar%2F12297.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fsentry%2Fchar%2F12297.cc?ref=48f499cf81387cc10cc5045519b1bab9ccf40d83", "patch": "@@ -0,0 +1,50 @@\n+// Copyright (C) 2003 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+// 27.6.1.1.2 class basic_istream::sentry\n+\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+int main()\n+{\n+  using namespace std;\n+  istringstream stream;\n+  stream.exceptions(ios_base::eofbit);\n+  \n+  try\n+    {\n+      istream::sentry sentry(stream, false);\n+      VERIFY( false );\n+    }\n+  catch (ios_base::failure&)\n+    {\n+      VERIFY( stream.rdstate() == (ios_base::eofbit | ios_base::failbit) );\n+    }\n+  \n+  return 0;\n+}"}]}