{"sha": "3ad1aba1f8d179027d2b5532d43024edfa7e903e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FkMWFiYTFmOGQxNzkwMjdkMmI1NTMyZDQzMDI0ZWRmYTdlOTAzZQ==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2009-06-29T17:50:59Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2009-06-29T17:50:59Z"}, "message": "re PR java/40590 (namespace namespace broken in CNI)\n\n2009-06-29  Andrew Haley  <aph@redhat.com>\n\n\tPR java/40590\t\n\t* tools/gnu/classpath/tools/javah/FieldHelper.java (print):\n\tUse printName().\n\t* tools/gnu/classpath/tools/javah/MethodHelper.java (print):\n\tUse printName().\n\t* tools/gnu/classpath/tools/javah/CniStubPrinter.java (printDecl):\n\tUse printName().\n\t* tools/gnu/classpath/tools/javah/Keywords.java (words): Replace\n\twith keywords list from  gcc/java/mangle.c.\n\t* tools/gnu/classpath/tools/javah/ClassWrapper.java (printMethods):\n\tDon't pre-convert a C++ keyword.\n\t(print(CniPrintStream)): Call CniPrintStream.printName().\n\t(printContents): Likewise.\n\t* tools/gnu/classpath/tools/javah/CniPrintStream.java\n\t(getClassName): Don't call replaceAll(\"/\", \"::\").\n\t(print(Type)): Add \"\"::\" befor name, \" *\" after.  Use printName(), not\n\tprint.\n\t(printName(PrintStream, String), printName(String), printlnName):\n\tNew methods.\n\t(moveToPackage): Use printName().\n\n2009-06-29  Andrew Haley  <aph@redhat.com>\n\n\tPR java/40590\n\t* java-tree.h (cxx_keyword_p): New declaration.\n\t* mangle_name.c (utf8_cmp): Move here from mangle.c.\n\t(cxx_keywords): Likewise.\n\t(cxx_keyword_p): Likewise.\n\t(MANGLE_CXX_KEYWORDS): New macro.\n\t(append_gpp_mangled_name): Use MANGLE_CXX_KEYWORDS.\n\t(append_gpp_mangled_name): Likewise.\n\t* mangle.c: Move code to mangle_name.c.\n\t(mangle_member_name): Don't call cxx_keyword_p.\n\nFrom-SVN: r149059", "tree": {"sha": "3cfe7282cd5664c854b8f591c178d778224cc35e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cfe7282cd5664c854b8f591c178d778224cc35e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ad1aba1f8d179027d2b5532d43024edfa7e903e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ad1aba1f8d179027d2b5532d43024edfa7e903e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ad1aba1f8d179027d2b5532d43024edfa7e903e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ad1aba1f8d179027d2b5532d43024edfa7e903e/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "356ecb153076b45d402faf66da6812e01e276906", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/356ecb153076b45d402faf66da6812e01e276906", "html_url": "https://github.com/Rust-GCC/gccrs/commit/356ecb153076b45d402faf66da6812e01e276906"}], "stats": {"total": 1351, "additions": 765, "deletions": 586}, "files": [{"sha": "5e41e13b180cf52cb00c2c2f7303868f3ac96e20", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -1,3 +1,16 @@\n+2009-06-29  Andrew Haley  <aph@redhat.com>\n+\n+\tPR java/40590\n+\t* java-tree.h (cxx_keyword_p): New declaration.\n+\t* mangle_name.c (utf8_cmp): Move here from mangle.c.\n+\t(cxx_keywords): Likewise.\n+\t(cxx_keyword_p): Likewise.\n+\t(MANGLE_CXX_KEYWORDS): New macro.\n+\t(append_gpp_mangled_name): Use MANGLE_CXX_KEYWORDS.\n+\t(append_gpp_mangled_name): Likewise.\n+\t* mangle.c: Move code to mangle_name.c. \n+\t(mangle_member_name): Don't call cxx_keyword_p.\n+\n 2009-06-12  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* java-gimplify.c (java_gimplify_block): New argument to"}, {"sha": "6bf2ecd8217d2cffd5df42c6a335cf3b9db69533", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -1224,6 +1224,8 @@ extern void java_read_sourcefilenames (const char *fsource_filename);\n \n extern void rewrite_reflection_indexes (void *);\n \n+int cxx_keyword_p (const char *name, int length);\n+\n #define DECL_FINAL(DECL) DECL_LANG_FLAG_3 (DECL)\n \n /* Access flags etc for a method (a FUNCTION_DECL): */"}, {"sha": "4630f6d9da026d40fc54c313e923fbca758d6026", "filename": "gcc/java/mangle.c", "status": "modified", "additions": 0, "deletions": 165, "changes": 165, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/gcc%2Fjava%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/gcc%2Fjava%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fmangle.c?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -72,167 +72,6 @@ struct obstack *mangle_obstack;\n /* atms: array template mangled string. */\n static GTY(()) tree atms;\n \n-static int\n-utf8_cmp (const unsigned char *str, int length, const char *name)\n-{\n-  const unsigned char *limit = str + length;\n-  int i;\n-\n-  for (i = 0; name[i]; ++i)\n-    {\n-      int ch = UTF8_GET (str, limit);\n-      if (ch != name[i])\n-\treturn ch - name[i];\n-    }\n-\n-  return str == limit ? 0 : 1;\n-}\n-\n-/* A sorted list of all C++ keywords.  */\n-static const char *const cxx_keywords[] =\n-{\n-  \"_Complex\",\n-  \"__alignof\",\n-  \"__alignof__\",\n-  \"__asm\",\n-  \"__asm__\",\n-  \"__attribute\",\n-  \"__attribute__\",\n-  \"__builtin_va_arg\",\n-  \"__complex\",\n-  \"__complex__\",\n-  \"__const\",\n-  \"__const__\",\n-  \"__extension__\",\n-  \"__imag\",\n-  \"__imag__\",\n-  \"__inline\",\n-  \"__inline__\",\n-  \"__label__\",\n-  \"__null\",\n-  \"__real\",\n-  \"__real__\",\n-  \"__restrict\",\n-  \"__restrict__\",\n-  \"__signed\",\n-  \"__signed__\",\n-  \"__typeof\",\n-  \"__typeof__\",\n-  \"__volatile\",\n-  \"__volatile__\",\n-  \"and\",\n-  \"and_eq\",\n-  \"asm\",\n-  \"auto\",\n-  \"bitand\",\n-  \"bitor\",\n-  \"bool\",\n-  \"break\",\n-  \"case\",\n-  \"catch\",\n-  \"char\",\n-  \"class\",\n-  \"compl\",\n-  \"const\",\n-  \"const_cast\",\n-  \"continue\",\n-  \"default\",\n-  \"delete\",\n-  \"do\",\n-  \"double\",\n-  \"dynamic_cast\",\n-  \"else\",\n-  \"enum\",\n-  \"explicit\",\n-  \"export\",\n-  \"extern\",\n-  \"false\",\n-  \"float\",\n-  \"for\",\n-  \"friend\",\n-  \"goto\",\n-  \"if\",\n-  \"inline\",\n-  \"int\",\n-  \"long\",\n-  \"mutable\",\n-  \"namespace\",\n-  \"new\",\n-  \"not\",\n-  \"not_eq\",\n-  \"operator\",\n-  \"or\",\n-  \"or_eq\",\n-  \"private\",\n-  \"protected\",\n-  \"public\",\n-  \"register\",\n-  \"reinterpret_cast\",\n-  \"return\",\n-  \"short\",\n-  \"signed\",\n-  \"sizeof\",\n-  \"static\",\n-  \"static_cast\",\n-  \"struct\",\n-  \"switch\",\n-  \"template\",\n-  \"this\",      \n-  \"throw\",\n-  \"true\",\n-  \"try\",\n-  \"typedef\",\n-  \"typeid\",\n-  \"typename\",\n-  \"typeof\",\n-  \"union\",\n-  \"unsigned\",\n-  \"using\",\n-  \"virtual\",\n-  \"void\",\n-  \"volatile\",\n-  \"wchar_t\",\n-  \"while\",\n-  \"xor\",\n-  \"xor_eq\"\n-};\n-\n-/* Return true if NAME is a C++ keyword.  */\n-static int\n-cxx_keyword_p (const char *name, int length)\n-{\n-  int last = ARRAY_SIZE (cxx_keywords);\n-  int first = 0;\n-  int mid = (last + first) / 2;\n-  int old = -1;\n-\n-  for (mid = (last + first) / 2;\n-       mid != old;\n-       old = mid, mid = (last + first) / 2)\n-    {\n-      int kwl = strlen (cxx_keywords[mid]);\n-      int min_length = kwl > length ? length : kwl;\n-      int r = utf8_cmp ((const unsigned char *) name, min_length, cxx_keywords[mid]);\n-\n-      if (r == 0)\n-\t{\n-\t  int i;\n-\t  /* We've found a match if all the remaining characters are `$'.  */\n-\t  for (i = min_length; i < length && name[i] == '$'; ++i)\n-\t    ;\n-\t  if (i == length)\n-\t    return 1;\n-\t  r = 1;\n-\t}\n-\n-      if (r < 0)\n-\tlast = mid;\n-      else\n-\tfirst = mid;\n-    }\n-  return 0;\n-}\n-\n /* This is the mangling interface: a decl, a class field (.class) and\n    the vtable. */\n \n@@ -392,10 +231,6 @@ mangle_member_name (tree name)\n {\n   append_gpp_mangled_name (IDENTIFIER_POINTER (name),\n \t\t\t   IDENTIFIER_LENGTH (name));\n-\n-  /* If NAME happens to be a C++ keyword, add `$'.  */\n-  if (cxx_keyword_p (IDENTIFIER_POINTER (name), IDENTIFIER_LENGTH (name)))\n-    obstack_1grow (mangle_obstack, '$');\n }\n \n /* Append the mangled name of TYPE onto OBSTACK.  */"}, {"sha": "a0e6887a04eb8f4d5c3bd5c204bc83e0a07774ef", "filename": "gcc/java/mangle_name.c", "status": "modified", "additions": 190, "deletions": 3, "changes": 193, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/gcc%2Fjava%2Fmangle_name.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/gcc%2Fjava%2Fmangle_name.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fmangle_name.c?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -41,6 +41,185 @@ static int  unicode_mangling_length (const char *, int);\n \n extern struct obstack *mangle_obstack;\n \n+static int\n+utf8_cmp (const unsigned char *str, int length, const char *name)\n+{\n+  const unsigned char *limit = str + length;\n+  int i;\n+\n+  for (i = 0; name[i]; ++i)\n+    {\n+      int ch = UTF8_GET (str, limit);\n+      if (ch != name[i])\n+\treturn ch - name[i];\n+    }\n+\n+  return str == limit ? 0 : 1;\n+}\n+\n+/* A sorted list of all C++ keywords.  If you change this, be sure\n+   also to change the list in\n+   libjava/classpath/tools/gnu/classpath/tools/javah/Keywords.java.  */\n+static const char *const cxx_keywords[] =\n+{\n+  \"_Complex\",\n+  \"__alignof\",\n+  \"__alignof__\",\n+  \"__asm\",\n+  \"__asm__\",\n+  \"__attribute\",\n+  \"__attribute__\",\n+  \"__builtin_va_arg\",\n+  \"__complex\",\n+  \"__complex__\",\n+  \"__const\",\n+  \"__const__\",\n+  \"__extension__\",\n+  \"__imag\",\n+  \"__imag__\",\n+  \"__inline\",\n+  \"__inline__\",\n+  \"__label__\",\n+  \"__null\",\n+  \"__real\",\n+  \"__real__\",\n+  \"__restrict\",\n+  \"__restrict__\",\n+  \"__signed\",\n+  \"__signed__\",\n+  \"__typeof\",\n+  \"__typeof__\",\n+  \"__volatile\",\n+  \"__volatile__\",\n+  \"and\",\n+  \"and_eq\",\n+  \"asm\",\n+  \"auto\",\n+  \"bitand\",\n+  \"bitor\",\n+  \"bool\",\n+  \"break\",\n+  \"case\",\n+  \"catch\",\n+  \"char\",\n+  \"class\",\n+  \"compl\",\n+  \"const\",\n+  \"const_cast\",\n+  \"continue\",\n+  \"default\",\n+  \"delete\",\n+  \"do\",\n+  \"double\",\n+  \"dynamic_cast\",\n+  \"else\",\n+  \"enum\",\n+  \"explicit\",\n+  \"export\",\n+  \"extern\",\n+  \"false\",\n+  \"float\",\n+  \"for\",\n+  \"friend\",\n+  \"goto\",\n+  \"if\",\n+  \"inline\",\n+  \"int\",\n+  \"long\",\n+  \"mutable\",\n+  \"namespace\",\n+  \"new\",\n+  \"not\",\n+  \"not_eq\",\n+  \"operator\",\n+  \"or\",\n+  \"or_eq\",\n+  \"private\",\n+  \"protected\",\n+  \"public\",\n+  \"register\",\n+  \"reinterpret_cast\",\n+  \"return\",\n+  \"short\",\n+  \"signed\",\n+  \"sizeof\",\n+  \"static\",\n+  \"static_cast\",\n+  \"struct\",\n+  \"switch\",\n+  \"template\",\n+  \"this\",      \n+  \"throw\",\n+  \"true\",\n+  \"try\",\n+  \"typedef\",\n+  \"typeid\",\n+  \"typename\",\n+  \"typeof\",\n+  \"union\",\n+  \"unsigned\",\n+  \"using\",\n+  \"virtual\",\n+  \"void\",\n+  \"volatile\",\n+  \"wchar_t\",\n+  \"while\",\n+  \"xor\",\n+  \"xor_eq\"\n+};\n+\n+/* Return true if NAME is a C++ keyword.  */\n+int\n+cxx_keyword_p (const char *name, int length)\n+{\n+  int last = ARRAY_SIZE (cxx_keywords);\n+  int first = 0;\n+  int mid = (last + first) / 2;\n+  int old = -1;\n+\n+  for (mid = (last + first) / 2;\n+       mid != old;\n+       old = mid, mid = (last + first) / 2)\n+    {\n+      int kwl = strlen (cxx_keywords[mid]);\n+      int min_length = kwl > length ? length : kwl;\n+      int r = utf8_cmp ((const unsigned char *) name, min_length, cxx_keywords[mid]);\n+\n+      if (r == 0)\n+\t{\n+\t  int i;\n+\t  /* We've found a match if all the remaining characters are `$'.  */\n+\t  for (i = min_length; i < length && name[i] == '$'; ++i)\n+\t    ;\n+\t  if (i == length)\n+\t    return 1;\n+\t  r = 1;\n+\t}\n+\n+      if (r < 0)\n+\tlast = mid;\n+      else\n+\tfirst = mid;\n+    }\n+  return 0;\n+}\n+\n+/* If NAME happens to be a C++ keyword, add `$'.  */\n+#define MANGLE_CXX_KEYWORDS(NAME, LEN)\t\t\t\\\n+do\t\t\t\t\t\t\t\\\n+  {\t\t\t\t\t\t\t\\\n+    if (cxx_keyword_p ((NAME), (LEN)))\t\t\t\\\n+      {\t\t\t\t\t\t\t\\\n+\tchar *tmp_buf = (char *)alloca ((LEN)+1);\t\\\n+\tmemcpy (tmp_buf, (NAME), (LEN));\t\t\\\n+\ttmp_buf[LEN]= '$';\t\t\t\t\\\n+\t(NAME) = tmp_buf;\t\t\t\t\\\n+\t(LEN)++;\t\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\\\n+  }\t\t\t\t\t\t\t\\\n+while (0)\n+\n+\n /* If the assembler doesn't support UTF8 in symbol names, some\n    characters might need to be escaped.  */\n \n@@ -54,10 +233,14 @@ extern struct obstack *mangle_obstack;\n void\n append_gpp_mangled_name (const char *name, int len)\n {\n-  int encoded_len = unicode_mangling_length (name, len);\n-  int needs_escapes = encoded_len > 0;\n+  int encoded_len, needs_escapes;\n   char buf[6];\n \n+  MANGLE_CXX_KEYWORDS (name, len);\n+\n+  encoded_len = unicode_mangling_length (name, len);\n+  needs_escapes = encoded_len > 0;\n+\n   sprintf (buf, \"%d\", (needs_escapes ? encoded_len : len));\n   obstack_grow (mangle_obstack, buf, strlen (buf));\n \n@@ -195,10 +378,14 @@ void\n append_gpp_mangled_name (const char *name, int len)\n {\n   const unsigned char *ptr;\n-  const unsigned char *limit = (const unsigned char *)name + len;\n+  const unsigned char *limit;\n   int encoded_len;\n   char buf [6];\n   \n+  MANGLE_CXX_KEYWORDS (name, len);\n+\n+  limit = (const unsigned char *)name + len;\n+\n   /* Compute the length of the string we wish to mangle. */\n   for (encoded_len =  0, ptr = (const unsigned char *) name;\n        ptr < limit; encoded_len++)"}, {"sha": "445649aae847618e74f8ed9c80f2281b25ff3098", "filename": "libjava/classpath/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fclasspath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fclasspath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -1,3 +1,26 @@\n+2009-06-29  Andrew Haley  <aph@redhat.com>\n+\n+\tPR java/40590\t\n+\t* tools/gnu/classpath/tools/javah/FieldHelper.java (print):\n+\tUse printName().\n+\t* tools/gnu/classpath/tools/javah/MethodHelper.java (print):\n+\tUse printName().\n+\t* tools/gnu/classpath/tools/javah/CniStubPrinter.java (printDecl):\n+\tUse printName().\n+\t* tools/gnu/classpath/tools/javah/Keywords.java (words): Replace\n+\twith keywords list from  gcc/java/mangle.c.\n+\t* tools/gnu/classpath/tools/javah/ClassWrapper.java (printMethods):\n+\tDon't pre-convert a C++ keyword.\n+\t(print(CniPrintStream)): Call CniPrintStream.printName().\n+\t(printContents): Likewise.\n+\t* tools/gnu/classpath/tools/javah/CniPrintStream.java\n+\t(getClassName): Don't call replaceAll(\"/\", \"::\").\n+\t(print(Type)): Add \"\"::\" befor name, \" *\" after.  Use printName(), not\n+\tprint.\n+\t(printName(PrintStream, String), printName(String), printlnName):\n+\tNew methods.\n+\t(moveToPackage): Use printName().\n+\n 2009-03-01  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* configure: Regenerate."}, {"sha": "e853782fc8504ecb1e383df5e476d7dc39783e47", "filename": "libjava/classpath/tools/classes/gnu/classpath/tools/javah/ClassWrapper.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FClassWrapper.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FClassWrapper.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FClassWrapper.class?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e"}, {"sha": "0c7915ce042a8779147ab2abf2b34f2299877526", "filename": "libjava/classpath/tools/classes/gnu/classpath/tools/javah/CniPrintStream.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FCniPrintStream.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FCniPrintStream.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FCniPrintStream.class?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e"}, {"sha": "e226ffbd5d728c354ced8ad3cbb43200702b728f", "filename": "libjava/classpath/tools/classes/gnu/classpath/tools/javah/CniStubPrinter.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FCniStubPrinter.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FCniStubPrinter.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FCniStubPrinter.class?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e"}, {"sha": "3d6f235bb2be300ee850329bc28ff678dd579133", "filename": "libjava/classpath/tools/classes/gnu/classpath/tools/javah/FieldHelper.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FFieldHelper.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FFieldHelper.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FFieldHelper.class?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e"}, {"sha": "592ff47055024603b099295da90ef79f0dd6813f", "filename": "libjava/classpath/tools/classes/gnu/classpath/tools/javah/Keywords.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FKeywords.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FKeywords.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FKeywords.class?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e"}, {"sha": "71974cc7d10b1d640320de64b96c0d58f8f0efbc", "filename": "libjava/classpath/tools/classes/gnu/classpath/tools/javah/MethodHelper.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FMethodHelper.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FMethodHelper.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fclasses%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FMethodHelper.class?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e"}, {"sha": "22278eba84cfae3c42634b9d6589cd458bf62cb4", "filename": "libjava/classpath/tools/gnu/classpath/tools/javah/ClassWrapper.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FClassWrapper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FClassWrapper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FClassWrapper.java?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -260,7 +260,7 @@ private void printMethods(CniPrintStream out) throws IOException\n \tif (bridgeTargets.contains(sum))\n \t  nameToUse = (String) methodNameMap.get(sum);\n \telse\n-\t  nameToUse = Keywords.getCxxName(m.name);\n+\t  nameToUse = m.name;\n \tmethodNameMap.put(sum, nameToUse);\n         MethodHelper.print(out, m, this, nameToUse);\n       }\n@@ -291,7 +291,8 @@ private void printTextList(PrintStream out, int what, ArrayList textList)\n \n   public void print(CniPrintStream out)\n   {\n-    out.print(\"::\" + name.replaceAll(\"/\", \"::\"));\n+    out.print(\"::\");\n+    out.printName(name);\n   }\n \n   // This prints the body of a class to a CxxPrintStream.\n@@ -303,7 +304,7 @@ private void printContents(CniPrintStream out, ArrayList textList)\n \n     out.print(\"class \");\n     // Don't use our print() -- we don't want the leading \"::\".\n-    out.print(name.replaceAll(\"/\", \"::\"));\n+    out.printName(name);\n     if (superClass != null)\n       {\n         out.print(\" : public \");"}, {"sha": "315fd8ae326c2ebb0d75337142a73a349d46dedc", "filename": "libjava/classpath/tools/gnu/classpath/tools/javah/CniPrintStream.java", "status": "modified", "additions": 35, "deletions": 4, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FCniPrintStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FCniPrintStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FCniPrintStream.java?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -125,9 +125,10 @@ public String getClassName(Type type)\n     // Add the plain class name; we'll handle it when\n     // we process namespaces.\n     allClasses.add(name);\n-    return \"::\" + name.replaceAll(\"/\", \"::\") + \" *\";\n+    return name; \n   }\n \n+  // Print the C++ form of TYPE, mangling C++ keywords.\n   public void print(Type type)\n   {\n     int arrayCount = 0;\n@@ -141,7 +142,9 @@ public void print(Type type)\n       }\n     if (type.getSort() == Type.OBJECT)\n       {\n-        print(getClassName(type));\n+\tprint(\"::\");\n+        printName(getClassName(type));\n+\tprint(\" *\");\n       }\n     else\n       {\n@@ -156,6 +159,34 @@ public void print(Type type)\n       }\n   }\n \n+  // Print NAME, converting into C++ syntax and mangling C++ keywords\n+  // as we go.\n+  public final static void printName(PrintStream out, String name)\n+  {\n+    String[] parts = name.split(\"::|/\");\n+    for (int i = 0; i < parts.length; i++)\n+      {\n+\tif (i != 0)\n+\t  out.print(\"::\");\n+\tout.print(Keywords.getCxxName(parts[i]));\n+      }\n+  }\n+\n+  // Println NAME, converting into C++ syntax and mangling C++\n+  // keywords as we go.\n+  public final static void printlnName(PrintStream out, String name)\n+  {\n+    printName(out, name);\n+    out.println();\n+  }\n+\n+  // Print NAME, converting into C++ syntax and mangling C++ keywords\n+  // as we go.\n+  final void printName(String name)\n+  {\n+    printName(this, name);\n+  }\n+\n   private void indent(PrintStream out, int n)\n   {\n     for (int i = 0; i < n; ++i)\n@@ -186,7 +217,7 @@ private void moveToPackage(PrintStream out, String[] pkgParts)\n       {\n         indent(out, j + 1);\n         out.print(\"namespace \");\n-        out.println(pkgParts[j]);\n+        printlnName(out, pkgParts[j]);\n         indent(out, j + 1);\n         out.println(\"{\");\n       }\n@@ -202,7 +233,7 @@ private void writeClass(PrintStream out, String klass)\n     moveToPackage(out, pkgParts);\n     indent(out, pkgParts.length + 2);\n     out.print(\"class \");\n-    out.print(className);\n+    printName(out, className);\n     out.println(\";\");\n   }\n "}, {"sha": "bbdda9249a1291d0e8a352df146c86a707ee5e2e", "filename": "libjava/classpath/tools/gnu/classpath/tools/javah/CniStubPrinter.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FCniStubPrinter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FCniStubPrinter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FCniStubPrinter.java?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -59,9 +59,9 @@ protected CniStubPrinter(Main classpath, File outFile, boolean isDir,\n \n   private void printDecl(CniPrintStream out, String className, MethodNode method)\n   {\n-    out.print(className);\n+    out.printName(className);\n     out.print(\"::\");\n-    out.print(method.name);\n+    out.printName(method.name);\n     out.print(\"(\");\n     Type[] argTypes = Type.getArgumentTypes(method.desc);\n     for (int j = 0; j < argTypes.length; ++j)"}, {"sha": "84b1fce8bf9ef8f893cd2f5c1968daf466a8766b", "filename": "libjava/classpath/tools/gnu/classpath/tools/javah/FieldHelper.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FFieldHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FFieldHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FFieldHelper.java?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -66,7 +66,7 @@ public static boolean print(CniPrintStream out, FieldNode field,\n         out.print(\")))) \");\n         result = true;\n       }\n-    out.print(Keywords.getCxxName(field.name));\n+    out.printName(field.name);\n     if (hasMethodName)\n       out.print(\"__\");\n     if (Modifier.isStatic(field.access))"}, {"sha": "b281197c5e90d5fb7ff429d9941712ace84e5715", "filename": "libjava/classpath/tools/gnu/classpath/tools/javah/Keywords.java", "status": "modified", "additions": 109, "deletions": 22, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FKeywords.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FKeywords.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FKeywords.java?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -42,28 +42,115 @@\n \n public class Keywords\n {\n-  private static final String[] words = { \"and\", \"and_eq\", \"asm\", \"auto\",\n-                                         \"bitand\", \"bitor\", \"bool\", \"break\",\n-                                         \"case\", \"catch\", \"char\", \"class\",\n-                                         \"compl\", \"const\", \"const_cast\",\n-                                         \"continue\", \"default\", \"delete\", \"do\",\n-                                         \"double\", \"dynamic_cast\", \"else\",\n-                                         \"enum\", \"explicit\", \"export\",\n-                                         \"extern\", \"false\", \"float\", \"for\",\n-                                         \"friend\", \"goto\", \"if\", \"inline\",\n-                                         \"int\", \"long\", \"mutable\", \"namespace\",\n-                                         \"new\", \"not\", \"not_eq\", \"operator\",\n-                                         \"or\", \"or_eq\", \"private\", \"protected\",\n-                                         \"public\", \"register\",\n-                                         \"reinterpret_cast\", \"return\", \"short\",\n-                                         \"signed\", \"sizeof\", \"static\",\n-                                         \"static_cast\", \"struct\", \"switch\",\n-                                         \"template\", \"this\", \"throw\", \"true\",\n-                                         \"try\", \"typedef\", \"typeid\",\n-                                         \"typename\", \"typeof\", \"union\",\n-                                         \"unsigned\", \"using\", \"virtual\",\n-                                         \"void\", \"volatile\", \"wchar_t\",\n-                                         \"while\", \"xor\", \"xor_eq\" };\n+/* A sorted list of all C++ keywords.  This is identical to the list\n+   in gcc/java/mangle.c.  */\n+  private static final String[] words = \n+    {\n+      \"_Complex\",\n+      \"__alignof\",\n+      \"__alignof__\",\n+      \"__asm\",\n+      \"__asm__\",\n+      \"__attribute\",\n+      \"__attribute__\",\n+      \"__builtin_va_arg\",\n+      \"__complex\",\n+      \"__complex__\",\n+      \"__const\",\n+      \"__const__\",\n+      \"__extension__\",\n+      \"__imag\",\n+      \"__imag__\",\n+      \"__inline\",\n+      \"__inline__\",\n+      \"__label__\",\n+      \"__null\",\n+      \"__real\",\n+      \"__real__\",\n+      \"__restrict\",\n+      \"__restrict__\",\n+      \"__signed\",\n+      \"__signed__\",\n+      \"__typeof\",\n+      \"__typeof__\",\n+      \"__volatile\",\n+      \"__volatile__\",\n+      \"and\",\n+      \"and_eq\",\n+      \"asm\",\n+      \"auto\",\n+      \"bitand\",\n+      \"bitor\",\n+      \"bool\",\n+      \"break\",\n+      \"case\",\n+      \"catch\",\n+      \"char\",\n+      \"class\",\n+      \"compl\",\n+      \"const\",\n+      \"const_cast\",\n+      \"continue\",\n+      \"default\",\n+      \"delete\",\n+      \"do\",\n+      \"double\",\n+      \"dynamic_cast\",\n+      \"else\",\n+      \"enum\",\n+      \"explicit\",\n+      \"export\",\n+      \"extern\",\n+      \"false\",\n+      \"float\",\n+      \"for\",\n+      \"friend\",\n+      \"goto\",\n+      \"if\",\n+      \"inline\",\n+      \"int\",\n+      \"long\",\n+      \"mutable\",\n+      \"namespace\",\n+      \"new\",\n+      \"not\",\n+      \"not_eq\",\n+      \"operator\",\n+      \"or\",\n+      \"or_eq\",\n+      \"private\",\n+      \"protected\",\n+      \"public\",\n+      \"register\",\n+      \"reinterpret_cast\",\n+      \"return\",\n+      \"short\",\n+      \"signed\",\n+      \"sizeof\",\n+      \"static\",\n+      \"static_cast\",\n+      \"struct\",\n+      \"switch\",\n+      \"template\",\n+      \"this\",\n+      \"throw\",\n+      \"true\",\n+      \"try\",\n+      \"typedef\",\n+      \"typeid\",\n+      \"typename\",\n+      \"typeof\",\n+      \"union\",\n+      \"unsigned\",\n+      \"using\",\n+      \"virtual\",\n+      \"void\",\n+      \"volatile\",\n+      \"wchar_t\",\n+      \"while\",\n+      \"xor\",\n+      \"xor_eq\"\n+    };\n \n   private static final HashSet keywords;\n   static"}, {"sha": "e12e47c540eb68190f0ef77b6084a62c3dcb4431", "filename": "libjava/classpath/tools/gnu/classpath/tools/javah/MethodHelper.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FMethodHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FMethodHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Ftools%2Fgnu%2Fclasspath%2Ftools%2Fjavah%2FMethodHelper.java?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -97,14 +97,14 @@ else if (! isInit && ! Modifier.isPrivate(meth.access)\n       {\n         out.print(Type.getReturnType(meth.desc));\n         out.print(\" \");\n-\tout.print(realMethodName);\n+\tout.printName(realMethodName);\n       }\n     else\n       {\n         String name = declarer.name;\n         int index = name.lastIndexOf('/');\n         name = name.substring(index + 1);\n-        out.print(name);\n+        out.printName(name);\n       }\n     out.print(\"(\");\n     Type[] argTypes = Type.getArgumentTypes(meth.desc);"}, {"sha": "dac7c27333e091fa06480f0fdc6de15390df6118", "filename": "libjava/gnu/xml/stream/AttributeImpl.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fstream%2FAttributeImpl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fstream%2FAttributeImpl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fstream%2FAttributeImpl.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -23,7 +23,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -39,16 +39,16 @@ class gnu::xml::stream::AttributeImpl : public ::gnu::xml::stream::XMLEventImpl\n {\n \n public: // actually protected\n-  AttributeImpl(::javax::xml::stream::Location *, ::javax::xml::namespace::QName *, ::java::lang::String *, ::java::lang::String *, jboolean);\n+  AttributeImpl(::javax::xml::stream::Location *, ::javax::xml::namespace$::QName *, ::java::lang::String *, ::java::lang::String *, jboolean);\n public:\n   virtual jint getEventType();\n-  virtual ::javax::xml::namespace::QName * getName();\n+  virtual ::javax::xml::namespace$::QName * getName();\n   virtual ::java::lang::String * getValue();\n   virtual ::java::lang::String * getDTDType();\n   virtual jboolean isSpecified();\n   virtual void writeAsEncodedUnicode(::java::io::Writer *);\n public: // actually protected\n-  ::javax::xml::namespace::QName * __attribute__((aligned(__alignof__( ::gnu::xml::stream::XMLEventImpl)))) name;\n+  ::javax::xml::namespace$::QName * __attribute__((aligned(__alignof__( ::gnu::xml::stream::XMLEventImpl)))) name;\n   ::java::lang::String * value;\n   ::java::lang::String * type;\n   jboolean specified;"}, {"sha": "2461d21d6c5f9c7c281de6d02d293471b0d3fd76", "filename": "libjava/gnu/xml/stream/EndElementImpl.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fstream%2FEndElementImpl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fstream%2FEndElementImpl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fstream%2FEndElementImpl.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -23,7 +23,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -39,14 +39,14 @@ class gnu::xml::stream::EndElementImpl : public ::gnu::xml::stream::XMLEventImpl\n {\n \n public: // actually protected\n-  EndElementImpl(::javax::xml::stream::Location *, ::javax::xml::namespace::QName *, ::java::util::List *);\n+  EndElementImpl(::javax::xml::stream::Location *, ::javax::xml::namespace$::QName *, ::java::util::List *);\n public:\n   virtual jint getEventType();\n-  virtual ::javax::xml::namespace::QName * getName();\n+  virtual ::javax::xml::namespace$::QName * getName();\n   virtual ::java::util::Iterator * getNamespaces();\n   virtual void writeAsEncodedUnicode(::java::io::Writer *);\n public: // actually protected\n-  ::javax::xml::namespace::QName * __attribute__((aligned(__alignof__( ::gnu::xml::stream::XMLEventImpl)))) name;\n+  ::javax::xml::namespace$::QName * __attribute__((aligned(__alignof__( ::gnu::xml::stream::XMLEventImpl)))) name;\n   ::java::util::List * namespaces;\n public:\n   static ::java::lang::Class class$;"}, {"sha": "1cd062b20df480881efc86943b128393cad2c5e0", "filename": "libjava/gnu/xml/stream/StartElementImpl.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fstream%2FStartElementImpl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fstream%2FStartElementImpl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fstream%2FStartElementImpl.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -23,7 +23,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class NamespaceContext;\n           class QName;\n@@ -44,21 +44,21 @@ class gnu::xml::stream::StartElementImpl : public ::gnu::xml::stream::XMLEventIm\n {\n \n public: // actually protected\n-  StartElementImpl(::javax::xml::stream::Location *, ::javax::xml::namespace::QName *, ::java::util::List *, ::java::util::List *, ::javax::xml::namespace::NamespaceContext *);\n+  StartElementImpl(::javax::xml::stream::Location *, ::javax::xml::namespace$::QName *, ::java::util::List *, ::java::util::List *, ::javax::xml::namespace$::NamespaceContext *);\n public:\n   virtual jint getEventType();\n-  virtual ::javax::xml::namespace::QName * getName();\n+  virtual ::javax::xml::namespace$::QName * getName();\n   virtual ::java::util::Iterator * getAttributes();\n   virtual ::java::util::Iterator * getNamespaces();\n-  virtual ::javax::xml::stream::events::Attribute * getAttributeByName(::javax::xml::namespace::QName *);\n-  virtual ::javax::xml::namespace::NamespaceContext * getNamespaceContext();\n+  virtual ::javax::xml::stream::events::Attribute * getAttributeByName(::javax::xml::namespace$::QName *);\n+  virtual ::javax::xml::namespace$::NamespaceContext * getNamespaceContext();\n   virtual ::java::lang::String * getNamespaceURI(::java::lang::String *);\n   virtual void writeAsEncodedUnicode(::java::io::Writer *);\n public: // actually protected\n-  ::javax::xml::namespace::QName * __attribute__((aligned(__alignof__( ::gnu::xml::stream::XMLEventImpl)))) name;\n+  ::javax::xml::namespace$::QName * __attribute__((aligned(__alignof__( ::gnu::xml::stream::XMLEventImpl)))) name;\n   ::java::util::List * attributes;\n   ::java::util::List * namespaces;\n-  ::javax::xml::namespace::NamespaceContext * namespaceContext;\n+  ::javax::xml::namespace$::NamespaceContext * namespaceContext;\n public:\n   static ::java::lang::Class class$;\n };"}, {"sha": "794eaa71c47ba14848e352a44d71f15ce57e6e3b", "filename": "libjava/gnu/xml/stream/XIncludeFilter.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fstream%2FXIncludeFilter.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fstream%2FXIncludeFilter.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fstream%2FXIncludeFilter.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -32,7 +32,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -79,15 +79,15 @@ class gnu::xml::stream::XIncludeFilter : public ::javax::xml::stream::util::Read\n   virtual ::java::lang::String * getAttributeLocalName(jint);\n   virtual ::java::lang::String * getAttributeNamespace(jint);\n   virtual ::java::lang::String * getAttributePrefix(jint);\n-  virtual ::javax::xml::namespace::QName * getAttributeName(jint);\n+  virtual ::javax::xml::namespace$::QName * getAttributeName(jint);\n   virtual ::java::lang::String * getAttributeType(jint);\n   virtual jboolean isAttributeSpecified(jint);\n   virtual ::java::lang::String * getAttributeValue(jint);\n   virtual ::java::lang::String * getAttributeValue(::java::lang::String *, ::java::lang::String *);\n   virtual ::java::lang::String * getElementText();\n   virtual jint getEventType();\n   virtual ::java::lang::String * getLocalName();\n-  virtual ::javax::xml::namespace::QName * getName();\n+  virtual ::javax::xml::namespace$::QName * getName();\n   virtual ::java::lang::String * getNamespaceURI();\n   virtual ::java::lang::String * getPIData();\n   virtual ::java::lang::String * getPITarget();"}, {"sha": "714dbc18233f8c1ed7e69e9af1be449eb38c82bb", "filename": "libjava/gnu/xml/stream/XMLEventFactoryImpl.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fstream%2FXMLEventFactoryImpl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fstream%2FXMLEventFactoryImpl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fstream%2FXMLEventFactoryImpl.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -23,7 +23,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class NamespaceContext;\n           class QName;\n@@ -59,14 +59,14 @@ class gnu::xml::stream::XMLEventFactoryImpl : public ::javax::xml::stream::XMLEv\n   virtual void setLocation(::javax::xml::stream::Location *);\n   virtual ::javax::xml::stream::events::Attribute * createAttribute(::java::lang::String *, ::java::lang::String *, ::java::lang::String *, ::java::lang::String *);\n   virtual ::javax::xml::stream::events::Attribute * createAttribute(::java::lang::String *, ::java::lang::String *);\n-  virtual ::javax::xml::stream::events::Attribute * createAttribute(::javax::xml::namespace::QName *, ::java::lang::String *);\n+  virtual ::javax::xml::stream::events::Attribute * createAttribute(::javax::xml::namespace$::QName *, ::java::lang::String *);\n   virtual ::javax::xml::stream::events::Namespace * createNamespace(::java::lang::String *);\n   virtual ::javax::xml::stream::events::Namespace * createNamespace(::java::lang::String *, ::java::lang::String *);\n-  virtual ::javax::xml::stream::events::StartElement * createStartElement(::javax::xml::namespace::QName *, ::java::util::Iterator *, ::java::util::Iterator *);\n+  virtual ::javax::xml::stream::events::StartElement * createStartElement(::javax::xml::namespace$::QName *, ::java::util::Iterator *, ::java::util::Iterator *);\n   virtual ::javax::xml::stream::events::StartElement * createStartElement(::java::lang::String *, ::java::lang::String *, ::java::lang::String *);\n   virtual ::javax::xml::stream::events::StartElement * createStartElement(::java::lang::String *, ::java::lang::String *, ::java::lang::String *, ::java::util::Iterator *, ::java::util::Iterator *);\n-  virtual ::javax::xml::stream::events::StartElement * createStartElement(::java::lang::String *, ::java::lang::String *, ::java::lang::String *, ::java::util::Iterator *, ::java::util::Iterator *, ::javax::xml::namespace::NamespaceContext *);\n-  virtual ::javax::xml::stream::events::EndElement * createEndElement(::javax::xml::namespace::QName *, ::java::util::Iterator *);\n+  virtual ::javax::xml::stream::events::StartElement * createStartElement(::java::lang::String *, ::java::lang::String *, ::java::lang::String *, ::java::util::Iterator *, ::java::util::Iterator *, ::javax::xml::namespace$::NamespaceContext *);\n+  virtual ::javax::xml::stream::events::EndElement * createEndElement(::javax::xml::namespace$::QName *, ::java::util::Iterator *);\n   virtual ::javax::xml::stream::events::EndElement * createEndElement(::java::lang::String *, ::java::lang::String *, ::java::lang::String *);\n   virtual ::javax::xml::stream::events::EndElement * createEndElement(::java::lang::String *, ::java::lang::String *, ::java::lang::String *, ::java::util::Iterator *);\n   virtual ::javax::xml::stream::events::Characters * createCharacters(::java::lang::String *);"}, {"sha": "13b793ef1c7e646914d4b143934cd8f9f5685592", "filename": "libjava/gnu/xml/stream/XMLEventImpl.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fstream%2FXMLEventImpl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fstream%2FXMLEventImpl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fstream%2FXMLEventImpl.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -23,7 +23,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -61,7 +61,7 @@ class gnu::xml::stream::XMLEventImpl : public ::java::lang::Object\n   virtual ::javax::xml::stream::events::StartElement * asStartElement();\n   virtual ::javax::xml::stream::events::EndElement * asEndElement();\n   virtual ::javax::xml::stream::events::Characters * asCharacters();\n-  virtual ::javax::xml::namespace::QName * getSchemaType();\n+  virtual ::javax::xml::namespace$::QName * getSchemaType();\n   virtual void writeAsEncodedUnicode(::java::io::Writer *) = 0;\n public: // actually protected\n   virtual ::java::lang::String * encode(::java::lang::String *, jboolean);"}, {"sha": "e81d0896aba9f0dd6f4c430770f83f09c2727fe0", "filename": "libjava/gnu/xml/stream/XMLEventWriterImpl.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fstream%2FXMLEventWriterImpl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fstream%2FXMLEventWriterImpl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fstream%2FXMLEventWriterImpl.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -23,7 +23,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class NamespaceContext;\n       }\n@@ -53,8 +53,8 @@ class gnu::xml::stream::XMLEventWriterImpl : public ::java::lang::Object\n   virtual ::java::lang::String * getPrefix(::java::lang::String *);\n   virtual void setPrefix(::java::lang::String *, ::java::lang::String *);\n   virtual void setDefaultNamespace(::java::lang::String *);\n-  virtual void setNamespaceContext(::javax::xml::namespace::NamespaceContext *);\n-  virtual ::javax::xml::namespace::NamespaceContext * getNamespaceContext();\n+  virtual void setNamespaceContext(::javax::xml::namespace$::NamespaceContext *);\n+  virtual ::javax::xml::namespace$::NamespaceContext * getNamespaceContext();\n public: // actually protected\n   ::javax::xml::stream::XMLStreamWriter * __attribute__((aligned(__alignof__( ::java::lang::Object)))) writer;\n public:"}, {"sha": "319c2c4a3855ab0a4faa0716408f440fd8fd06a6", "filename": "libjava/gnu/xml/stream/XMLParser.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fstream%2FXMLParser.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fstream%2FXMLParser.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fstream%2FXMLParser.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -39,7 +39,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class NamespaceContext;\n           class QName;\n@@ -64,12 +64,12 @@ class gnu::xml::stream::XMLParser : public ::java::lang::Object\n   virtual ::java::lang::String * getPrefix(::java::lang::String *);\n   virtual ::java::util::Iterator * getPrefixes(::java::lang::String *);\n   virtual void close();\n-  virtual ::javax::xml::namespace::NamespaceContext * getNamespaceContext();\n+  virtual ::javax::xml::namespace$::NamespaceContext * getNamespaceContext();\n   virtual jint getAttributeCount();\n   virtual ::java::lang::String * getAttributeLocalName(jint);\n   virtual ::java::lang::String * getAttributeNamespace(jint);\n   virtual ::java::lang::String * getAttributePrefix(jint);\n-  virtual ::javax::xml::namespace::QName * getAttributeName(jint);\n+  virtual ::javax::xml::namespace$::QName * getAttributeName(jint);\n   virtual ::java::lang::String * getAttributeType(jint);\n private:\n   ::java::lang::String * getAttributeType(::java::lang::String *, ::java::lang::String *);\n@@ -85,7 +85,7 @@ class gnu::xml::stream::XMLParser : public ::java::lang::Object\n   virtual jint getEventType();\n   virtual ::java::lang::String * getLocalName();\n   virtual ::javax::xml::stream::Location * getLocation();\n-  virtual ::javax::xml::namespace::QName * getName();\n+  virtual ::javax::xml::namespace$::QName * getName();\n   virtual jint getNamespaceCount();\n   virtual ::java::lang::String * getNamespacePrefix(jint);\n   virtual ::java::lang::String * getNamespaceURI();"}, {"sha": "d205957434793e6facdc4bc931f0be7f41c3c6c7", "filename": "libjava/gnu/xml/stream/XMLStreamWriterImpl.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fstream%2FXMLStreamWriterImpl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fstream%2FXMLStreamWriterImpl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fstream%2FXMLStreamWriterImpl.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -25,7 +25,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class NamespaceContext;\n       }\n@@ -89,8 +89,8 @@ class gnu::xml::stream::XMLStreamWriterImpl : public ::java::lang::Object\n   virtual ::java::lang::String * getPrefix(::java::lang::String *);\n   virtual void setPrefix(::java::lang::String *, ::java::lang::String *);\n   virtual void setDefaultNamespace(::java::lang::String *);\n-  virtual void setNamespaceContext(::javax::xml::namespace::NamespaceContext *);\n-  virtual ::javax::xml::namespace::NamespaceContext * getNamespaceContext();\n+  virtual void setNamespaceContext(::javax::xml::namespace$::NamespaceContext *);\n+  virtual ::javax::xml::namespace$::NamespaceContext * getNamespaceContext();\n   virtual ::java::lang::Object * getProperty(::java::lang::String *);\n private:\n   void writeEncoded(::java::lang::String *, jboolean);\n@@ -103,7 +103,7 @@ class gnu::xml::stream::XMLStreamWriterImpl : public ::java::lang::Object\n   ::java::io::Writer * __attribute__((aligned(__alignof__( ::java::lang::Object)))) writer;\n   ::java::lang::String * encoding;\n   jboolean prefixDefaulting;\n-  ::javax::xml::namespace::NamespaceContext * namespaceContext;\n+  ::javax::xml::namespace$::NamespaceContext * namespaceContext;\n private:\n   ::java::util::LinkedList * elements;\n   jboolean inStartElement;"}, {"sha": "d82794dacb64b127f34e7b37accf977f92595449", "filename": "libjava/gnu/xml/transform/AbstractNumberNode.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FAbstractNumberNode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FAbstractNumberNode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FAbstractNumberNode.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -34,7 +34,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -57,15 +57,15 @@ class gnu::xml::transform::AbstractNumberNode : public ::gnu::xml::transform::Te\n \n public: // actually package-private\n   AbstractNumberNode(::gnu::xml::transform::TemplateNode *, ::java::lang::String *, jint, ::java::lang::String *, jint);\n-  virtual void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n+  virtual void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n   virtual ::java::lang::String * format(::java::lang::String *, JArray< jint > *);\n   virtual void format(::gnu::java::lang::CPStringBuilder *, jint, ::java::lang::String *);\n   static jboolean isAlphanumeric(jchar);\n   static ::java::lang::String * alphabetic(jchar, jint);\n   static ::java::lang::String * roman(jboolean, jint);\n   virtual JArray< jint > * compute(::gnu::xml::transform::Stylesheet *, ::org::w3c::dom::Node *, jint, jint) = 0;\n public:\n-  virtual jboolean references(::javax::xml::namespace::QName *);\n+  virtual jboolean references(::javax::xml::namespace$::QName *);\n   virtual ::java::lang::String * toString();\n public: // actually package-private\n   static const jint ALPHABETIC = 0;"}, {"sha": "53f45e975328aff64d11828b837873315691d7e8", "filename": "libjava/gnu/xml/transform/ApplyImportsNode.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FApplyImportsNode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FApplyImportsNode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FApplyImportsNode.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -25,7 +25,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -49,7 +49,7 @@ class gnu::xml::transform::ApplyImportsNode : public ::gnu::xml::transform::Temp\n public: // actually package-private\n   ApplyImportsNode();\n   ::gnu::xml::transform::TemplateNode * clone(::gnu::xml::transform::Stylesheet *);\n-  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n+  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n public:\n   ::java::lang::String * toString();\n   static ::java::lang::Class class$;"}, {"sha": "c25d2f53b51d1700ce949e8a1c539e687c5385af", "filename": "libjava/gnu/xml/transform/ApplyTemplatesNode.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FApplyTemplatesNode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FApplyTemplatesNode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FApplyTemplatesNode.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -29,7 +29,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -51,15 +51,15 @@ class gnu::xml::transform::ApplyTemplatesNode : public ::gnu::xml::transform::Te\n {\n \n public: // actually package-private\n-  ApplyTemplatesNode(::gnu::xml::xpath::Expr *, ::javax::xml::namespace::QName *, ::java::util::List *, ::java::util::List *, jboolean);\n+  ApplyTemplatesNode(::gnu::xml::xpath::Expr *, ::javax::xml::namespace$::QName *, ::java::util::List *, ::java::util::List *, jboolean);\n   ::gnu::xml::transform::TemplateNode * clone(::gnu::xml::transform::Stylesheet *);\n-  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n+  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n public:\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::transform::TemplateNode)))) select;\n-  ::javax::xml::namespace::QName * mode;\n+  ::javax::xml::namespace$::QName * mode;\n   ::java::util::List * sortKeys;\n   ::java::util::List * withParams;\n   jboolean isDefault;"}, {"sha": "b83f7c8c0efd7b4a9dd05f52c73ad9f5ffc183ee", "filename": "libjava/gnu/xml/transform/AttributeNode.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FAttributeNode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FAttributeNode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FAttributeNode.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -25,7 +25,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -49,11 +49,11 @@ class gnu::xml::transform::AttributeNode : public ::gnu::xml::transform::Templat\n public: // actually package-private\n   AttributeNode(::gnu::xml::transform::TemplateNode *, ::gnu::xml::transform::TemplateNode *, ::org::w3c::dom::Node *);\n   ::gnu::xml::transform::TemplateNode * clone(::gnu::xml::transform::Stylesheet *);\n-  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n+  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n   ::java::lang::String * getPrefix(::java::lang::String *);\n   ::java::lang::String * inventPrefix(::org::w3c::dom::Node *);\n public:\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::transform::TemplateNode * __attribute__((aligned(__alignof__( ::gnu::xml::transform::TemplateNode)))) name;"}, {"sha": "abbc8f0c6d6fd1bf4a716daf53ac8d04af929485", "filename": "libjava/gnu/xml/transform/Bindings.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FBindings.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FBindings.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FBindings.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -53,12 +53,12 @@ class gnu::xml::transform::Bindings : public ::java::lang::Object\n   virtual void push(jint);\n   virtual void pop(jint);\n public:\n-  virtual jboolean containsKey(::javax::xml::namespace::QName *, jint);\n-  virtual ::java::lang::Object * get(::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint);\n+  virtual jboolean containsKey(::javax::xml::namespace$::QName *, jint);\n+  virtual ::java::lang::Object * get(::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint);\n public: // actually package-private\n-  virtual void set(::javax::xml::namespace::QName *, ::java::lang::Object *, jint);\n+  virtual void set(::javax::xml::namespace$::QName *, ::java::lang::Object *, jint);\n public:\n-  virtual ::java::lang::Object * resolveVariable(::javax::xml::namespace::QName *);\n+  virtual ::java::lang::Object * resolveVariable(::javax::xml::namespace$::QName *);\n   virtual ::java::lang::String * toString();\n public: // actually package-private\n   static const jint VARIABLE = 0;"}, {"sha": "03b2d179db3ac183e1a5b6e0e21e3cd6b660c5a8", "filename": "libjava/gnu/xml/transform/CallTemplateNode.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FCallTemplateNode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FCallTemplateNode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FCallTemplateNode.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -25,7 +25,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -47,14 +47,14 @@ class gnu::xml::transform::CallTemplateNode : public ::gnu::xml::transform::Temp\n {\n \n public: // actually package-private\n-  CallTemplateNode(::javax::xml::namespace::QName *, ::java::util::List *);\n+  CallTemplateNode(::javax::xml::namespace$::QName *, ::java::util::List *);\n   ::gnu::xml::transform::TemplateNode * clone(::gnu::xml::transform::Stylesheet *);\n-  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n+  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n public:\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n-  ::javax::xml::namespace::QName * __attribute__((aligned(__alignof__( ::gnu::xml::transform::TemplateNode)))) name;\n+  ::javax::xml::namespace$::QName * __attribute__((aligned(__alignof__( ::gnu::xml::transform::TemplateNode)))) name;\n   ::java::util::List * withParams;\n public:\n   static ::java::lang::Class class$;"}, {"sha": "33519454be9acfa5f84594623f2f5872df2e9fb0", "filename": "libjava/gnu/xml/transform/ChooseNode.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FChooseNode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FChooseNode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FChooseNode.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -25,7 +25,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -49,7 +49,7 @@ class gnu::xml::transform::ChooseNode : public ::gnu::xml::transform::TemplateNo\n public: // actually package-private\n   ChooseNode();\n   ::gnu::xml::transform::TemplateNode * clone(::gnu::xml::transform::Stylesheet *);\n-  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n+  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n public:\n   ::java::lang::String * toString();\n   static ::java::lang::Class class$;"}, {"sha": "78b6d184386392edde501dadacbba3decacc8684", "filename": "libjava/gnu/xml/transform/CommentNode.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FCommentNode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FCommentNode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FCommentNode.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -25,7 +25,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -49,7 +49,7 @@ class gnu::xml::transform::CommentNode : public ::gnu::xml::transform::TemplateN\n public: // actually package-private\n   CommentNode();\n   ::gnu::xml::transform::TemplateNode * clone(::gnu::xml::transform::Stylesheet *);\n-  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n+  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n public:\n   ::java::lang::String * toString();\n   static ::java::lang::Class class$;"}, {"sha": "e724dbbe1f91fb621c2435da9fe3d48419656766", "filename": "libjava/gnu/xml/transform/CopyNode.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FCopyNode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FCopyNode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FCopyNode.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -25,7 +25,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -49,8 +49,8 @@ class gnu::xml::transform::CopyNode : public ::gnu::xml::transform::TemplateNode\n public: // actually package-private\n   CopyNode(::java::lang::String *);\n   ::gnu::xml::transform::TemplateNode * clone(::gnu::xml::transform::Stylesheet *);\n-  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n-  void addAttributeSet(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *, ::java::lang::String *);\n+  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n+  void addAttributeSet(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *, ::java::lang::String *);\n public:\n   ::java::lang::String * toString();\n public: // actually package-private"}, {"sha": "4bf660768c024afbfc4291fd48bd005f02784145", "filename": "libjava/gnu/xml/transform/CopyOfNode.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FCopyOfNode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FCopyOfNode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FCopyOfNode.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -29,7 +29,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -53,9 +53,9 @@ class gnu::xml::transform::CopyOfNode : public ::gnu::xml::transform::TemplateNo\n public: // actually package-private\n   CopyOfNode(::gnu::xml::xpath::Expr *);\n   ::gnu::xml::transform::TemplateNode * clone(::gnu::xml::transform::Stylesheet *);\n-  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n+  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n public:\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::transform::TemplateNode)))) select;"}, {"sha": "118bfe54fd5a14f6d81584595bb134c700d3f8c8", "filename": "libjava/gnu/xml/transform/CurrentFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FCurrentFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FCurrentFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FCurrentFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -28,7 +28,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -56,7 +56,7 @@ class gnu::xml::transform::CurrentFunction : public ::gnu::xml::xpath::Expr\n   void setArguments(::java::util::List *);\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::transform::Stylesheet * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) stylesheet;"}, {"sha": "88c31dcfa97236938548af1ca112e374c8822ff4", "filename": "libjava/gnu/xml/transform/DocumentFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FDocumentFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FDocumentFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FDocumentFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -28,7 +28,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -59,7 +59,7 @@ class gnu::xml::transform::DocumentFunction : public ::gnu::xml::xpath::Expr\n   ::java::util::Collection * document(::java::lang::String *, ::java::lang::String *);\n public:\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n public: // actually package-private\n   ::gnu::xml::transform::Stylesheet * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) stylesheet;\n   ::org::w3c::dom::Node * base;"}, {"sha": "21a828abe2cd7829fc7f6d8904cc1dcfa78e25ff", "filename": "libjava/gnu/xml/transform/ElementAvailableFunction.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FElementAvailableFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FElementAvailableFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FElementAvailableFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -27,7 +27,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class NamespaceContext;\n           class QName;\n@@ -50,17 +50,17 @@ class gnu::xml::transform::ElementAvailableFunction : public ::gnu::xml::xpath::\n {\n \n public: // actually package-private\n-  ElementAvailableFunction(::javax::xml::namespace::NamespaceContext *);\n+  ElementAvailableFunction(::javax::xml::namespace$::NamespaceContext *);\n public:\n   virtual ::java::lang::Object * evaluate(::java::util::List *);\n   virtual void setArguments(::java::util::List *);\n   virtual ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   virtual ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  virtual jboolean references(::javax::xml::namespace::QName *);\n+  virtual jboolean references(::javax::xml::namespace$::QName *);\n   virtual ::java::lang::String * toString();\n public: // actually package-private\n   static ::java::util::Collection * elements;\n-  ::javax::xml::namespace::NamespaceContext * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) nsctx;\n+  ::javax::xml::namespace$::NamespaceContext * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) nsctx;\n   ::java::util::List * args;\n public:\n   static ::java::lang::Class class$;"}, {"sha": "b086d2ad5820044b4def011a2461fa8ff37a8032", "filename": "libjava/gnu/xml/transform/ElementNode.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FElementNode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FElementNode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FElementNode.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -25,7 +25,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -49,11 +49,11 @@ class gnu::xml::transform::ElementNode : public ::gnu::xml::transform::TemplateN\n public: // actually package-private\n   ElementNode(::gnu::xml::transform::TemplateNode *, ::gnu::xml::transform::TemplateNode *, ::java::lang::String *, ::org::w3c::dom::Node *);\n   ::gnu::xml::transform::TemplateNode * clone(::gnu::xml::transform::Stylesheet *);\n-  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n+  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n   ::java::lang::String * getPrefix(::java::lang::String *);\n-  void addAttributeSet(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *, ::java::lang::String *);\n+  void addAttributeSet(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *, ::java::lang::String *);\n public:\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::transform::TemplateNode * __attribute__((aligned(__alignof__( ::gnu::xml::transform::TemplateNode)))) name;"}, {"sha": "7b251d39b44b5fea20e5fca8982253c22214b5cc", "filename": "libjava/gnu/xml/transform/ForEachNode.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FForEachNode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FForEachNode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FForEachNode.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -29,7 +29,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -53,9 +53,9 @@ class gnu::xml::transform::ForEachNode : public ::gnu::xml::transform::TemplateN\n public: // actually package-private\n   ForEachNode(::gnu::xml::xpath::Expr *, ::java::util::List *);\n   ::gnu::xml::transform::TemplateNode * clone(::gnu::xml::transform::Stylesheet *);\n-  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n+  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n public:\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::transform::TemplateNode)))) select;"}, {"sha": "634dc643a3235eb29ecdac9de56ad52febf0423f", "filename": "libjava/gnu/xml/transform/FormatNumberFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FFormatNumberFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FFormatNumberFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FFormatNumberFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -28,7 +28,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -56,7 +56,7 @@ class gnu::xml::transform::FormatNumberFunction : public ::gnu::xml::xpath::Expr\n   void setArguments(::java::util::List *);\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n public: // actually package-private\n   ::gnu::xml::transform::Stylesheet * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) stylesheet;\n   ::java::util::List * args;"}, {"sha": "b34bfb0ad358561816a5edb00ced75a78044b07c", "filename": "libjava/gnu/xml/transform/FunctionAvailableFunction.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FFunctionAvailableFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FFunctionAvailableFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FFunctionAvailableFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -27,7 +27,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class NamespaceContext;\n           class QName;\n@@ -50,18 +50,18 @@ class gnu::xml::transform::FunctionAvailableFunction : public ::gnu::xml::xpath:\n {\n \n public: // actually package-private\n-  FunctionAvailableFunction(::javax::xml::namespace::NamespaceContext *);\n+  FunctionAvailableFunction(::javax::xml::namespace$::NamespaceContext *);\n public:\n   virtual ::java::lang::Object * evaluate(::java::util::List *);\n   virtual void setArguments(::java::util::List *);\n   virtual ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   virtual ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  virtual jboolean references(::javax::xml::namespace::QName *);\n+  virtual jboolean references(::javax::xml::namespace$::QName *);\n   virtual ::java::lang::String * toString();\n public: // actually package-private\n   static ::java::util::Collection * xsltFunctions;\n   static ::java::util::Collection * xpathFunctions;\n-  ::javax::xml::namespace::NamespaceContext * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) nsctx;\n+  ::javax::xml::namespace$::NamespaceContext * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) nsctx;\n   ::java::util::List * args;\n public:\n   static ::java::lang::Class class$;"}, {"sha": "fe43452635dab5c648561c4894dafa80982eef8e", "filename": "libjava/gnu/xml/transform/GenerateIdFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FGenerateIdFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FGenerateIdFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FGenerateIdFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -27,7 +27,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -55,7 +55,7 @@ class gnu::xml::transform::GenerateIdFunction : public ::gnu::xml::xpath::Expr\n   void setArguments(::java::util::List *);\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n public: // actually package-private\n   ::java::util::List * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) args;\n public:"}, {"sha": "357da0d1903a4b830db8a2b23676af1f5453b551", "filename": "libjava/gnu/xml/transform/IfNode.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FIfNode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FIfNode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FIfNode.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -29,7 +29,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -53,9 +53,9 @@ class gnu::xml::transform::IfNode : public ::gnu::xml::transform::TemplateNode\n public: // actually package-private\n   IfNode(::gnu::xml::xpath::Expr *);\n   ::gnu::xml::transform::TemplateNode * clone(::gnu::xml::transform::Stylesheet *);\n-  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n+  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n public:\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::transform::TemplateNode)))) test;"}, {"sha": "08ff987acd5644b6074acc6e8f06e250a31e370d", "filename": "libjava/gnu/xml/transform/Key.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FKey.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FKey.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FKey.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -29,7 +29,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -41,9 +41,9 @@ class gnu::xml::transform::Key : public ::java::lang::Object\n {\n \n public: // actually package-private\n-  Key(::javax::xml::namespace::QName *, ::gnu::xml::xpath::Pattern *, ::gnu::xml::xpath::Expr *);\n+  Key(::javax::xml::namespace$::QName *, ::gnu::xml::xpath::Pattern *, ::gnu::xml::xpath::Expr *);\n   virtual ::gnu::xml::transform::Key * clone(::gnu::xml::transform::Stylesheet *);\n-  ::javax::xml::namespace::QName * __attribute__((aligned(__alignof__( ::java::lang::Object)))) name;\n+  ::javax::xml::namespace$::QName * __attribute__((aligned(__alignof__( ::java::lang::Object)))) name;\n   ::gnu::xml::xpath::Pattern * match;\n   ::gnu::xml::xpath::Expr * use;\n public:"}, {"sha": "7da94b1d5978ba95598970419d65d99b53644ac8", "filename": "libjava/gnu/xml/transform/KeyFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FKeyFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FKeyFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FKeyFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -28,7 +28,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -61,7 +61,7 @@ class gnu::xml::transform::KeyFunction : public ::gnu::xml::xpath::Pattern\n   void addKeyNodeIfMatch(::org::w3c::dom::Node *, ::java::util::Collection *, ::java::lang::String *, ::java::util::Collection *);\n public:\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n public: // actually package-private\n   ::gnu::xml::transform::Stylesheet * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Pattern)))) stylesheet;\n   ::java::util::List * args;"}, {"sha": "c314eae25832f69a8d07ce586c7bfde786146b21", "filename": "libjava/gnu/xml/transform/LiteralNode.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FLiteralNode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FLiteralNode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FLiteralNode.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -25,7 +25,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -49,7 +49,7 @@ class gnu::xml::transform::LiteralNode : public ::gnu::xml::transform::TemplateN\n public: // actually package-private\n   LiteralNode(::org::w3c::dom::Node *);\n   ::gnu::xml::transform::TemplateNode * clone(::gnu::xml::transform::Stylesheet *);\n-  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n+  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n public:\n   ::java::lang::String * toString();\n public: // actually package-private"}, {"sha": "ebffd3d497a57b697fb1de13a27efa04c53f213c", "filename": "libjava/gnu/xml/transform/MessageNode.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FMessageNode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FMessageNode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FMessageNode.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -25,7 +25,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -49,7 +49,7 @@ class gnu::xml::transform::MessageNode : public ::gnu::xml::transform::TemplateN\n public: // actually package-private\n   MessageNode(jboolean);\n   ::gnu::xml::transform::TemplateNode * clone(::gnu::xml::transform::Stylesheet *);\n-  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n+  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n public:\n   ::java::lang::String * toString();\n public: // actually package-private"}, {"sha": "2a067a548b9229f2ca555ab42c0abe3314ca81ba", "filename": "libjava/gnu/xml/transform/OtherwiseNode.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FOtherwiseNode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FOtherwiseNode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FOtherwiseNode.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -25,7 +25,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -49,7 +49,7 @@ class gnu::xml::transform::OtherwiseNode : public ::gnu::xml::transform::Templat\n public: // actually package-private\n   OtherwiseNode();\n   ::gnu::xml::transform::TemplateNode * clone(::gnu::xml::transform::Stylesheet *);\n-  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n+  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n public:\n   ::java::lang::String * toString();\n   static ::java::lang::Class class$;"}, {"sha": "786be5aa824ae0d576461e5a6344d7e95fa50d5c", "filename": "libjava/gnu/xml/transform/ParameterNode.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FParameterNode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FParameterNode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FParameterNode.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -29,7 +29,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -51,20 +51,20 @@ class gnu::xml::transform::ParameterNode : public ::gnu::xml::transform::Templat\n {\n \n public: // actually package-private\n-  ParameterNode(::javax::xml::namespace::QName *, ::gnu::xml::xpath::Expr *, jint);\n+  ParameterNode(::javax::xml::namespace$::QName *, ::gnu::xml::xpath::Expr *, jint);\n   ::gnu::xml::transform::ParameterNode * ParameterNode$clone(::gnu::xml::transform::Stylesheet *);\n-  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n-  ::java::lang::Object * getValue(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint);\n+  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n+  ::java::lang::Object * getValue(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint);\n public:\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   jint ParameterNode$compareTo(::gnu::xml::transform::ParameterNode *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::transform::TemplateNode * clone(::gnu::xml::transform::Stylesheet *);\n public:\n   jint compareTo(::java::lang::Object *);\n public: // actually package-private\n-  ::javax::xml::namespace::QName * __attribute__((aligned(__alignof__( ::gnu::xml::transform::TemplateNode)))) name;\n+  ::javax::xml::namespace$::QName * __attribute__((aligned(__alignof__( ::gnu::xml::transform::TemplateNode)))) name;\n   ::gnu::xml::xpath::Expr * select;\n   jint type;\n public:"}, {"sha": "35bae5f7802ddae79b77c2506d4da233d53dddcd", "filename": "libjava/gnu/xml/transform/ProcessingInstructionNode.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FProcessingInstructionNode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FProcessingInstructionNode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FProcessingInstructionNode.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -25,7 +25,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -49,7 +49,7 @@ class gnu::xml::transform::ProcessingInstructionNode : public ::gnu::xml::transf\n public: // actually package-private\n   ProcessingInstructionNode(::java::lang::String *);\n   ::gnu::xml::transform::TemplateNode * clone(::gnu::xml::transform::Stylesheet *);\n-  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n+  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n public:\n   ::java::lang::String * toString();\n public: // actually package-private"}, {"sha": "a8e0a294222eb217094f19088d8fb0307c6acc59", "filename": "libjava/gnu/xml/transform/SortKey.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FSortKey.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FSortKey.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FSortKey.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -29,7 +29,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -53,8 +53,8 @@ class gnu::xml::transform::SortKey : public ::java::lang::Object\n public: // actually package-private\n   SortKey(::gnu::xml::xpath::Expr *, ::gnu::xml::transform::TemplateNode *, ::gnu::xml::transform::TemplateNode *, ::gnu::xml::transform::TemplateNode *, ::gnu::xml::transform::TemplateNode *);\n   ::java::lang::String * key(::org::w3c::dom::Node *);\n-  void init(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  void init(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::gnu::xml::transform::SortKey * clone(::gnu::xml::transform::Stylesheet *);\n private:\n   ::gnu::xml::transform::TemplateNode * cloneAttributeValueTemplate(::gnu::xml::transform::TemplateNode *, ::gnu::xml::transform::Stylesheet *);"}, {"sha": "69ceaa8225709dc64c0a372d0e7a959afe3ead10", "filename": "libjava/gnu/xml/transform/Stylesheet.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FStylesheet.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FStylesheet.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FStylesheet.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -33,7 +33,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -74,9 +74,9 @@ class gnu::xml::transform::Stylesheet : public ::java::lang::Object\n   virtual ::java::lang::String * getPrefix(::java::lang::String *);\n   virtual ::java::util::Iterator * getPrefixes(::java::lang::String *);\n public: // actually package-private\n-  virtual ::javax::xml::namespace::QName * getQName(::java::lang::String *);\n-  virtual ::gnu::xml::transform::TemplateNode * getTemplate(::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jboolean);\n-  virtual ::gnu::xml::transform::TemplateNode * getTemplate(::javax::xml::namespace::QName *, ::javax::xml::namespace::QName *);\n+  virtual ::javax::xml::namespace$::QName * getQName(::java::lang::String *);\n+  virtual ::gnu::xml::transform::TemplateNode * getTemplate(::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jboolean);\n+  virtual ::gnu::xml::transform::TemplateNode * getTemplate(::javax::xml::namespace$::QName *, ::javax::xml::namespace$::QName *);\n   virtual ::gnu::xml::transform::Template * parseTemplate(::org::w3c::dom::Node *, ::org::w3c::dom::NamedNodeMap *);\n   virtual void parseOutput(::org::w3c::dom::Node *, ::org::w3c::dom::NamedNodeMap *);\n   virtual void parseKey(::org::w3c::dom::Node *, ::org::w3c::dom::NamedNodeMap *);\n@@ -93,7 +93,7 @@ class gnu::xml::transform::Stylesheet : public ::java::lang::Object\n   virtual ::gnu::xml::transform::TemplateNode * parseAttributeValueTemplate(::java::lang::String *, ::org::w3c::dom::Node *);\n   virtual jboolean isPreserved(::org::w3c::dom::Text *, jboolean);\n public:\n-  virtual ::javax::xml::xpath::XPathFunction * resolveFunction(::javax::xml::namespace::QName *, jint);\n+  virtual ::javax::xml::xpath::XPathFunction * resolveFunction(::javax::xml::namespace$::QName *, jint);\n public: // actually package-private\n   virtual ::gnu::xml::transform::TemplateNode * parseApplyTemplates(::org::w3c::dom::Node *);\n   virtual ::gnu::xml::transform::TemplateNode * parseCallTemplate(::org::w3c::dom::Node *);"}, {"sha": "e1f16d9ceaf61bf155f2c4e631db5a1d9c840fde", "filename": "libjava/gnu/xml/transform/SystemPropertyFunction.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FSystemPropertyFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FSystemPropertyFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FSystemPropertyFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -27,7 +27,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -55,10 +55,10 @@ class gnu::xml::transform::SystemPropertyFunction : public ::gnu::xml::xpath::Ex\n   void setArguments(::java::util::List *);\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n public: // actually package-private\n-  ::java::lang::Object * systemProperty(::javax::xml::namespace::QName *);\n+  ::java::lang::Object * systemProperty(::javax::xml::namespace$::QName *);\n public:\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n public: // actually package-private\n   ::java::util::List * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) args;\n public:"}, {"sha": "018beacfeebb045568de27af587bbcce8b488a78", "filename": "libjava/gnu/xml/transform/Template.h", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FTemplate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FTemplate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FTemplate.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -31,7 +31,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -53,31 +53,31 @@ class gnu::xml::transform::Template : public ::java::lang::Object\n {\n \n public: // actually package-private\n-  Template(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::gnu::xml::xpath::Pattern *, ::gnu::xml::transform::TemplateNode *, jint, ::java::lang::String *, ::javax::xml::namespace::QName *);\n+  Template(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::gnu::xml::xpath::Pattern *, ::gnu::xml::transform::TemplateNode *, jint, ::java::lang::String *, ::javax::xml::namespace$::QName *);\n private:\n-  Template(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::gnu::xml::xpath::Pattern *, ::gnu::xml::transform::TemplateNode *, jint, jdouble, ::javax::xml::namespace::QName *, jboolean);\n+  Template(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::gnu::xml::xpath::Pattern *, ::gnu::xml::transform::TemplateNode *, jint, jdouble, ::javax::xml::namespace$::QName *, jboolean);\n public: // actually package-private\n   virtual ::gnu::xml::transform::Template * clone(::gnu::xml::transform::Stylesheet *);\n public:\n   virtual jint compareTo(::java::lang::Object *);\n public: // actually package-private\n   virtual ::gnu::xml::xpath::Test * getNodeTest(::gnu::xml::xpath::Expr *);\n-  virtual jboolean matches(::javax::xml::namespace::QName *, ::org::w3c::dom::Node *);\n-  virtual jboolean matches(::javax::xml::namespace::QName *);\n+  virtual jboolean matches(::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *);\n+  virtual jboolean matches(::javax::xml::namespace$::QName *);\n   virtual jboolean imports(::gnu::xml::transform::Template *);\n-  virtual void apply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n+  virtual void apply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n public:\n   virtual ::java::lang::String * toString();\n public: // actually package-private\n   virtual void list(::java::io::PrintStream *);\n   static jdouble DEFAULT_PRIORITY;\n   ::gnu::xml::transform::Stylesheet * __attribute__((aligned(__alignof__( ::java::lang::Object)))) stylesheet;\n-  ::javax::xml::namespace::QName * name;\n+  ::javax::xml::namespace$::QName * name;\n   ::gnu::xml::xpath::Pattern * match;\n   ::gnu::xml::transform::TemplateNode * node;\n   jdouble priority;\n   jint precedence;\n-  ::javax::xml::namespace::QName * mode;\n+  ::javax::xml::namespace$::QName * mode;\n   jboolean isAnyNode;\n public:\n   static ::java::lang::Class class$;"}, {"sha": "354ff78c83439695fdb25b6975fd1a60cb1e6c99", "filename": "libjava/gnu/xml/transform/TemplateNode.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FTemplateNode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FTemplateNode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FTemplateNode.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -47,14 +47,14 @@ class gnu::xml::transform::TemplateNode : public ::java::lang::Object\n \n public: // actually package-private\n   TemplateNode();\n-  virtual void apply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n-  virtual void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *) = 0;\n+  virtual void apply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n+  virtual void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *) = 0;\n   virtual ::gnu::xml::transform::TemplateNode * clone(::gnu::xml::transform::Stylesheet *) = 0;\n public:\n-  virtual jboolean references(::javax::xml::namespace::QName *);\n+  virtual jboolean references(::javax::xml::namespace$::QName *);\n public: // actually package-private\n   virtual void list(jint, ::java::io::PrintStream *, jboolean);\n-  virtual jboolean hasParam(::javax::xml::namespace::QName *);\n+  virtual jboolean hasParam(::javax::xml::namespace$::QName *);\n   static ::java::util::Comparator * documentOrderComparator;\n   ::gnu::xml::transform::TemplateNode * __attribute__((aligned(__alignof__( ::java::lang::Object)))) children;\n   ::gnu::xml::transform::TemplateNode * next;"}, {"sha": "9a832d1c1f428b5e047953e30f080368b19e9c80", "filename": "libjava/gnu/xml/transform/TextNode.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FTextNode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FTextNode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FTextNode.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -25,7 +25,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -49,7 +49,7 @@ class gnu::xml::transform::TextNode : public ::gnu::xml::transform::TemplateNode\n public: // actually package-private\n   TextNode(jboolean);\n   ::gnu::xml::transform::TemplateNode * clone(::gnu::xml::transform::Stylesheet *);\n-  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n+  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n public:\n   ::java::lang::String * toString();\n public: // actually package-private"}, {"sha": "9d10bd25e6fe601a9f7e68b56243a2eb9a64768b", "filename": "libjava/gnu/xml/transform/TransformerImpl.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FTransformerImpl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FTransformerImpl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FTransformerImpl.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -27,7 +27,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -86,7 +86,7 @@ class gnu::xml::transform::TransformerImpl : public ::javax::xml::transform::Tra\n public: // actually package-private\n   virtual void reindent(::org::w3c::dom::Document *, ::org::w3c::dom::Node *, jint);\n   virtual void convertCdataSectionElements(::org::w3c::dom::Document *, ::org::w3c::dom::Node *, ::java::util::List *);\n-  virtual jboolean match(::javax::xml::namespace::QName *, ::org::w3c::dom::Node *);\n+  virtual jboolean match(::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *);\n   ::gnu::xml::transform::TransformerFactoryImpl * __attribute__((aligned(__alignof__( ::javax::xml::transform::Transformer)))) factory;\n   ::gnu::xml::transform::Stylesheet * stylesheet;\n   ::javax::xml::transform::URIResolver * uriResolver;"}, {"sha": "646bb3b7b1aa3e8317d7a05889586d3bd311b27c", "filename": "libjava/gnu/xml/transform/UnparsedEntityUriFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FUnparsedEntityUriFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FUnparsedEntityUriFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FUnparsedEntityUriFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -27,7 +27,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -55,7 +55,7 @@ class gnu::xml::transform::UnparsedEntityUriFunction : public ::gnu::xml::xpath:\n   void setArguments(::java::util::List *);\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n public: // actually package-private\n   ::java::util::List * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) args;\n public:"}, {"sha": "30ed40daae493be9fd53470eb4d67c422896c845", "filename": "libjava/gnu/xml/transform/ValueOfNode.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FValueOfNode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FValueOfNode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FValueOfNode.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -29,7 +29,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -53,9 +53,9 @@ class gnu::xml::transform::ValueOfNode : public ::gnu::xml::transform::TemplateN\n public: // actually package-private\n   ValueOfNode(::gnu::xml::xpath::Expr *, jboolean);\n   ::gnu::xml::transform::TemplateNode * clone(::gnu::xml::transform::Stylesheet *);\n-  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n+  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n public:\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::transform::TemplateNode)))) select;"}, {"sha": "835b382772023a1ae2782c073616d80aff931052", "filename": "libjava/gnu/xml/transform/WhenNode.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FWhenNode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FWhenNode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FWhenNode.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -29,7 +29,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -53,9 +53,9 @@ class gnu::xml::transform::WhenNode : public ::gnu::xml::transform::TemplateNode\n public: // actually package-private\n   WhenNode(::gnu::xml::xpath::Expr *);\n   ::gnu::xml::transform::TemplateNode * clone(::gnu::xml::transform::Stylesheet *);\n-  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n+  void doApply(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint, ::org::w3c::dom::Node *, ::org::w3c::dom::Node *);\n public:\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::transform::TemplateNode)))) test;"}, {"sha": "1d50e2551897d45b4f3e8b3b725a0c85f2b33f7a", "filename": "libjava/gnu/xml/transform/WithParam.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FWithParam.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Ftransform%2FWithParam.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Ftransform%2FWithParam.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -29,7 +29,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -51,12 +51,12 @@ class gnu::xml::transform::WithParam : public ::java::lang::Object\n {\n \n public: // actually package-private\n-  WithParam(::javax::xml::namespace::QName *, ::gnu::xml::xpath::Expr *);\n-  WithParam(::javax::xml::namespace::QName *, ::gnu::xml::transform::TemplateNode *);\n-  ::java::lang::Object * getValue(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace::QName *, ::org::w3c::dom::Node *, jint, jint);\n+  WithParam(::javax::xml::namespace$::QName *, ::gnu::xml::xpath::Expr *);\n+  WithParam(::javax::xml::namespace$::QName *, ::gnu::xml::transform::TemplateNode *);\n+  ::java::lang::Object * getValue(::gnu::xml::transform::Stylesheet *, ::javax::xml::namespace$::QName *, ::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::transform::WithParam * clone(::gnu::xml::transform::Stylesheet *);\n-  jboolean references(::javax::xml::namespace::QName *);\n-  ::javax::xml::namespace::QName * __attribute__((aligned(__alignof__( ::java::lang::Object)))) name;\n+  jboolean references(::javax::xml::namespace$::QName *);\n+  ::javax::xml::namespace$::QName * __attribute__((aligned(__alignof__( ::java::lang::Object)))) name;\n   ::gnu::xml::xpath::Expr * select;\n   ::gnu::xml::transform::TemplateNode * content;\n public:"}, {"sha": "29b46ef06dd4066e1de6b925f2e08c5535525bed", "filename": "libjava/gnu/xml/validation/datatype/AtomicSimpleType.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FAtomicSimpleType.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FAtomicSimpleType.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FAtomicSimpleType.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -28,7 +28,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -50,9 +50,9 @@ class gnu::xml::validation::datatype::AtomicSimpleType : public ::gnu::xml::vali\n {\n \n public:\n-  AtomicSimpleType(::javax::xml::namespace::QName *, ::java::util::Set *, jint, ::gnu::xml::validation::datatype::SimpleType *, ::gnu::xml::validation::datatype::Annotation *);\n+  AtomicSimpleType(::javax::xml::namespace$::QName *, ::java::util::Set *, jint, ::gnu::xml::validation::datatype::SimpleType *, ::gnu::xml::validation::datatype::Annotation *);\n public: // actually package-private\n-  AtomicSimpleType(::javax::xml::namespace::QName *, ::gnu::xml::validation::datatype::SimpleType *);\n+  AtomicSimpleType(::javax::xml::namespace$::QName *, ::gnu::xml::validation::datatype::SimpleType *);\n public:\n   virtual void checkValid(::java::lang::String *, ::org::relaxng::datatype::ValidationContext *);\n   static ::java::lang::Class class$;"}, {"sha": "965b8643129cd04bbb58c6c49d364d8fc4436156", "filename": "libjava/gnu/xml/validation/datatype/ListSimpleType.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FListSimpleType.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FListSimpleType.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FListSimpleType.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -28,7 +28,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -50,7 +50,7 @@ class gnu::xml::validation::datatype::ListSimpleType : public ::gnu::xml::valida\n {\n \n public:\n-  ListSimpleType(::javax::xml::namespace::QName *, ::java::util::Set *, jint, ::gnu::xml::validation::datatype::SimpleType *, ::gnu::xml::validation::datatype::Annotation *, ::gnu::xml::validation::datatype::SimpleType *);\n+  ListSimpleType(::javax::xml::namespace$::QName *, ::java::util::Set *, jint, ::gnu::xml::validation::datatype::SimpleType *, ::gnu::xml::validation::datatype::Annotation *, ::gnu::xml::validation::datatype::SimpleType *);\n   virtual void checkValid(::java::lang::String *, ::org::relaxng::datatype::ValidationContext *);\n   ::gnu::xml::validation::datatype::SimpleType * __attribute__((aligned(__alignof__( ::gnu::xml::validation::datatype::SimpleType)))) itemType;\n   static ::java::lang::Class class$;"}, {"sha": "2827d89f80a595c422622c4e2b369112db75d616", "filename": "libjava/gnu/xml/validation/datatype/SimpleType.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FSimpleType.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FSimpleType.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FSimpleType.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -27,7 +27,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -50,7 +50,7 @@ class gnu::xml::validation::datatype::SimpleType : public ::gnu::xml::validation\n {\n \n public:\n-  SimpleType(::javax::xml::namespace::QName *, jint, ::java::util::Set *, jint, ::gnu::xml::validation::datatype::SimpleType *, ::gnu::xml::validation::datatype::Annotation *);\n+  SimpleType(::javax::xml::namespace$::QName *, jint, ::java::util::Set *, jint, ::gnu::xml::validation::datatype::SimpleType *, ::gnu::xml::validation::datatype::Annotation *);\n   virtual jboolean isValid(::java::lang::String *, ::org::relaxng::datatype::ValidationContext *);\n   virtual void checkValid(::java::lang::String *, ::org::relaxng::datatype::ValidationContext *);\n private:"}, {"sha": "7cf557bb02a5ac973810e3f9f7332262d6fc603d", "filename": "libjava/gnu/xml/validation/datatype/Type.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FType.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FType.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FType.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -26,7 +26,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -38,9 +38,9 @@ class gnu::xml::validation::datatype::Type : public ::java::lang::Object\n {\n \n public:\n-  Type(::javax::xml::namespace::QName *);\n+  Type(::javax::xml::namespace$::QName *);\n   static ::gnu::xml::validation::datatype::Type * ANY_TYPE;\n-  ::javax::xml::namespace::QName * __attribute__((aligned(__alignof__( ::java::lang::Object)))) name;\n+  ::javax::xml::namespace$::QName * __attribute__((aligned(__alignof__( ::java::lang::Object)))) name;\n   static ::java::lang::Class class$;\n };\n "}, {"sha": "db8c265d8427f5898b3d50d612400ff737e9e198", "filename": "libjava/gnu/xml/validation/datatype/UnionSimpleType.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FUnionSimpleType.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FUnionSimpleType.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FUnionSimpleType.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -28,7 +28,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -50,7 +50,7 @@ class gnu::xml::validation::datatype::UnionSimpleType : public ::gnu::xml::valid\n {\n \n public:\n-  UnionSimpleType(::javax::xml::namespace::QName *, ::java::util::Set *, jint, ::gnu::xml::validation::datatype::SimpleType *, ::gnu::xml::validation::datatype::Annotation *, ::java::util::List *);\n+  UnionSimpleType(::javax::xml::namespace$::QName *, ::java::util::Set *, jint, ::gnu::xml::validation::datatype::SimpleType *, ::gnu::xml::validation::datatype::Annotation *, ::java::util::List *);\n   virtual void checkValid(::java::lang::String *, ::org::relaxng::datatype::ValidationContext *);\n   ::java::util::List * __attribute__((aligned(__alignof__( ::gnu::xml::validation::datatype::SimpleType)))) memberTypes;\n   static ::java::lang::Class class$;"}, {"sha": "5b7d1fcb0b45e06bb498e58b000a65c8abd58232", "filename": "libjava/gnu/xml/validation/xmlschema/AttributeDeclaration.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fvalidation%2Fxmlschema%2FAttributeDeclaration.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fvalidation%2Fxmlschema%2FAttributeDeclaration.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fvalidation%2Fxmlschema%2FAttributeDeclaration.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -31,7 +31,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -43,14 +43,14 @@ class gnu::xml::validation::xmlschema::AttributeDeclaration : public ::java::lan\n {\n \n public: // actually package-private\n-  AttributeDeclaration(jboolean, jint, ::java::lang::String *, ::javax::xml::namespace::QName *, ::gnu::xml::validation::datatype::SimpleType *, ::gnu::xml::validation::datatype::Annotation *);\n+  AttributeDeclaration(jboolean, jint, ::java::lang::String *, ::javax::xml::namespace$::QName *, ::gnu::xml::validation::datatype::SimpleType *, ::gnu::xml::validation::datatype::Annotation *);\n   static const jint NONE = 0;\n   static const jint DEFAULT = 1;\n   static const jint FIXED = 2;\n   jboolean __attribute__((aligned(__alignof__( ::java::lang::Object)))) scope;\n   jint type;\n   ::java::lang::String * value;\n-  ::javax::xml::namespace::QName * name;\n+  ::javax::xml::namespace$::QName * name;\n   ::gnu::xml::validation::datatype::SimpleType * datatype;\n   ::gnu::xml::validation::datatype::Annotation * annotation;\n public:"}, {"sha": "170ab9db98f9758442c339c42d65ef0788b3d76b", "filename": "libjava/gnu/xml/validation/xmlschema/ComplexType.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fvalidation%2Fxmlschema%2FComplexType.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fvalidation%2Fxmlschema%2FComplexType.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fvalidation%2Fxmlschema%2FComplexType.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -27,7 +27,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -39,8 +39,8 @@ class gnu::xml::validation::xmlschema::ComplexType : public ::gnu::xml::validati\n {\n \n public: // actually package-private\n-  ComplexType(::javax::xml::namespace::QName *, jboolean, jint, jint);\n-  ::javax::xml::namespace::QName * __attribute__((aligned(__alignof__( ::gnu::xml::validation::datatype::Type)))) baseType;\n+  ComplexType(::javax::xml::namespace$::QName *, jboolean, jint, jint);\n+  ::javax::xml::namespace$::QName * __attribute__((aligned(__alignof__( ::gnu::xml::validation::datatype::Type)))) baseType;\n   jint derivationMethod;\n   jint finality;\n   jboolean isAbstract;"}, {"sha": "67e7d863e1ed1f7821db91b9b47c0119d4b67044", "filename": "libjava/gnu/xml/validation/xmlschema/ElementDeclaration.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fvalidation%2Fxmlschema%2FElementDeclaration.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fvalidation%2Fxmlschema%2FElementDeclaration.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fvalidation%2Fxmlschema%2FElementDeclaration.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -31,7 +31,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -43,15 +43,15 @@ class gnu::xml::validation::xmlschema::ElementDeclaration : public ::java::lang:\n {\n \n public: // actually package-private\n-  ElementDeclaration(::javax::xml::namespace::QName *, ::gnu::xml::validation::datatype::Type *, jint, ::gnu::xml::validation::xmlschema::ElementDeclaration *, jint, ::java::lang::String *, jboolean, ::javax::xml::namespace::QName *, jint, jint, jboolean);\n-  ::javax::xml::namespace::QName * __attribute__((aligned(__alignof__( ::java::lang::Object)))) name;\n+  ElementDeclaration(::javax::xml::namespace$::QName *, ::gnu::xml::validation::datatype::Type *, jint, ::gnu::xml::validation::xmlschema::ElementDeclaration *, jint, ::java::lang::String *, jboolean, ::javax::xml::namespace$::QName *, jint, jint, jboolean);\n+  ::javax::xml::namespace$::QName * __attribute__((aligned(__alignof__( ::java::lang::Object)))) name;\n   ::gnu::xml::validation::datatype::Type * datatype;\n   jint scope;\n   ::gnu::xml::validation::xmlschema::ElementDeclaration * parent;\n   jint type;\n   ::java::lang::String * value;\n   jboolean nillable;\n-  ::javax::xml::namespace::QName * substitutionGroup;\n+  ::javax::xml::namespace$::QName * substitutionGroup;\n   jint substitutionGroupExclusions;\n   jint disallowedSubstitutions;\n   jboolean isAbstract;"}, {"sha": "ed1bc80dc08d07ad986784a97cd7df03a2f61120", "filename": "libjava/gnu/xml/validation/xmlschema/XMLSchemaBuilder.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fvalidation%2Fxmlschema%2FXMLSchemaBuilder.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fvalidation%2Fxmlschema%2FXMLSchemaBuilder.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fvalidation%2Fxmlschema%2FXMLSchemaBuilder.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -36,7 +36,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -77,7 +77,7 @@ class gnu::xml::validation::xmlschema::XMLSchemaBuilder : public ::java::lang::O\n   virtual jint parseComplexTypeBlockSet(::java::lang::String *);\n   virtual ::java::lang::Object * parseElement(::org::w3c::dom::Node *, ::gnu::xml::validation::xmlschema::ElementDeclaration *);\n   virtual ::java::lang::Integer * getOccurrence(::java::lang::String *);\n-  virtual ::gnu::xml::validation::datatype::SimpleType * parseSimpleType(::javax::xml::namespace::QName *);\n+  virtual ::gnu::xml::validation::datatype::SimpleType * parseSimpleType(::javax::xml::namespace$::QName *);\n   virtual ::gnu::xml::validation::datatype::SimpleType * parseSimpleType(::org::w3c::dom::Node *);\n   virtual ::gnu::xml::validation::datatype::Type * parseComplexType(::org::w3c::dom::Node *, ::gnu::xml::validation::xmlschema::ElementDeclaration *);\n   virtual void parseSimpleContent(::org::w3c::dom::Node *, ::gnu::xml::validation::xmlschema::ComplexType *);\n@@ -87,7 +87,7 @@ class gnu::xml::validation::xmlschema::XMLSchemaBuilder : public ::java::lang::O\n   virtual ::gnu::xml::validation::datatype::Annotation * parseAnnotation(::org::w3c::dom::Node *);\n private:\n   static ::java::lang::String * getAttribute(::org::w3c::dom::NamedNodeMap *, ::java::lang::String *);\n-  static ::javax::xml::namespace::QName * asQName(::java::lang::String *, ::org::w3c::dom::Node *);\n+  static ::javax::xml::namespace$::QName * asQName(::java::lang::String *, ::org::w3c::dom::Node *);\n public: // actually package-private\n   ::gnu::xml::validation::xmlschema::XMLSchema * __attribute__((aligned(__alignof__( ::java::lang::Object)))) schema;\n   ::org::relaxng::datatype::DatatypeLibrary * typeLibrary;"}, {"sha": "dd57695fc5bf1c6603690d958728a14032ee40bf", "filename": "libjava/gnu/xml/xpath/AndExpr.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FAndExpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FAndExpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FAndExpr.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -49,7 +49,7 @@ class gnu::xml::xpath::AndExpr : public ::gnu::xml::xpath::Expr\n   AndExpr(::gnu::xml::xpath::Expr *, ::gnu::xml::xpath::Expr *);\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) lhs;"}, {"sha": "586ff4a323e01ab383b8edad7789b884edf561f7", "filename": "libjava/gnu/xml/xpath/ArithmeticExpr.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FArithmeticExpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FArithmeticExpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FArithmeticExpr.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -50,7 +50,7 @@ class gnu::xml::xpath::ArithmeticExpr : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   static const jint ADD = 0;"}, {"sha": "7688d9e02cf0e102c8c0b94dedb1f0d44dbccfbb", "filename": "libjava/gnu/xml/xpath/BooleanFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FBooleanFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FBooleanFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FBooleanFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -51,7 +51,7 @@ class gnu::xml::xpath::BooleanFunction : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) arg;"}, {"sha": "368ff4a62dddaad443539e34931e03b9046e8f56", "filename": "libjava/gnu/xml/xpath/CeilingFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FCeilingFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FCeilingFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FCeilingFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -51,7 +51,7 @@ class gnu::xml::xpath::CeilingFunction : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) arg;"}, {"sha": "db115180b0713a971d0e05826ba6ad4757423dff", "filename": "libjava/gnu/xml/xpath/ConcatFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FConcatFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FConcatFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FConcatFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -50,7 +50,7 @@ class gnu::xml::xpath::ConcatFunction : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::java::util::List * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) args;"}, {"sha": "c957b37c34773cb298d9a08f57c30a66bc6b8f57", "filename": "libjava/gnu/xml/xpath/Constant.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FConstant.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FConstant.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FConstant.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -49,7 +49,7 @@ class gnu::xml::xpath::Constant : public ::gnu::xml::xpath::Expr\n   Constant(::java::lang::Object *);\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::java::lang::Object * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) value;"}, {"sha": "a426db1c2e62c96af317e953baddb61372aaab37", "filename": "libjava/gnu/xml/xpath/ContainsFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FContainsFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FContainsFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FContainsFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -51,7 +51,7 @@ class gnu::xml::xpath::ContainsFunction : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) arg1;"}, {"sha": "353380e3ecc05c7418ece5314d58c1fece4755d3", "filename": "libjava/gnu/xml/xpath/CountFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FCountFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FCountFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FCountFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -51,7 +51,7 @@ class gnu::xml::xpath::CountFunction : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) arg;"}, {"sha": "dbf51f7b08c9f3996c3b0f28c765423f10c2b741", "filename": "libjava/gnu/xml/xpath/EqualityExpr.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FEqualityExpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FEqualityExpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FEqualityExpr.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -53,7 +53,7 @@ class gnu::xml::xpath::EqualityExpr : public ::gnu::xml::xpath::Expr\n   jboolean evaluateImpl(::org::w3c::dom::Node *, jint, jint);\n public:\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) lhs;"}, {"sha": "ee88cc052279bfd6a793c9c2f3859a67a56e8498", "filename": "libjava/gnu/xml/xpath/Expr.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FExpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FExpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FExpr.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -30,7 +30,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -60,13 +60,13 @@ class gnu::xml::xpath::Expr : public ::java::lang::Object\n \n public:\n   Expr();\n-  virtual ::java::lang::Object * evaluate(::java::lang::Object *, ::javax::xml::namespace::QName *);\n+  virtual ::java::lang::Object * evaluate(::java::lang::Object *, ::javax::xml::namespace$::QName *);\n   virtual ::java::lang::String * evaluate(::java::lang::Object *);\n-  virtual ::java::lang::Object * evaluate(::org::xml::sax::InputSource *, ::javax::xml::namespace::QName *);\n+  virtual ::java::lang::Object * evaluate(::org::xml::sax::InputSource *, ::javax::xml::namespace$::QName *);\n   virtual ::java::lang::String * evaluate(::org::xml::sax::InputSource *);\n   virtual ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint) = 0;\n   virtual ::gnu::xml::xpath::Expr * clone(::java::lang::Object *) = 0;\n-  virtual jboolean references(::javax::xml::namespace::QName *) = 0;\n+  virtual jboolean references(::javax::xml::namespace$::QName *) = 0;\n   static ::java::util::Collection * _id(::org::w3c::dom::Node *, ::java::lang::Object *);\n   static ::java::lang::String * _local_name(::org::w3c::dom::Node *, ::java::util::Collection *);\n   static ::java::lang::String * _namespace_uri(::org::w3c::dom::Node *, ::java::util::Collection *);"}, {"sha": "22447e5edc4ef4ae2d11159e42f2504d6562f198", "filename": "libjava/gnu/xml/xpath/FalseFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FFalseFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FFalseFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FFalseFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -50,7 +50,7 @@ class gnu::xml::xpath::FalseFunction : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n   static ::java::lang::Class class$;\n };"}, {"sha": "a3634d6731dc7eb4d9209328a2cbd44378512ab0", "filename": "libjava/gnu/xml/xpath/FloorFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FFloorFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FFloorFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FFloorFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -51,7 +51,7 @@ class gnu::xml::xpath::FloorFunction : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) arg;"}, {"sha": "6039022f5e2be3a0d5a9708eb3dfcdba9f1ad020", "filename": "libjava/gnu/xml/xpath/FunctionCall.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FFunctionCall.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FFunctionCall.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FFunctionCall.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -54,7 +54,7 @@ class gnu::xml::xpath::FunctionCall : public ::gnu::xml::xpath::Expr\n   FunctionCall(::javax::xml::xpath::XPathFunctionResolver *, ::java::lang::String *, ::java::util::List *);\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::javax::xml::xpath::XPathFunctionResolver * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) resolver;"}, {"sha": "a5fbc14c845ae3dbdab195846e7a4d06b931fdae", "filename": "libjava/gnu/xml/xpath/IdFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FIdFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FIdFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FIdFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -52,7 +52,7 @@ class gnu::xml::xpath::IdFunction : public ::gnu::xml::xpath::Pattern\n   jboolean matches(::org::w3c::dom::Node *);\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Pattern)))) arg;"}, {"sha": "cf7bd65fe65143f89fc2dd2bd65f6af86427de65", "filename": "libjava/gnu/xml/xpath/LangFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FLangFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FLangFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FLangFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -54,7 +54,7 @@ class gnu::xml::xpath::LangFunction : public ::gnu::xml::xpath::Expr\n   ::java::lang::String * getLang(::org::w3c::dom::Node *);\n public:\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) arg;"}, {"sha": "f20cf55c4f6a54e28cebcaf17544757122ea4699", "filename": "libjava/gnu/xml/xpath/LastFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FLastFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FLastFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FLastFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -50,7 +50,7 @@ class gnu::xml::xpath::LastFunction : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n   static ::java::lang::Class class$;\n };"}, {"sha": "2743e172624de13932805ba496394bfea0d41c1e", "filename": "libjava/gnu/xml/xpath/LocalNameFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FLocalNameFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FLocalNameFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FLocalNameFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -51,7 +51,7 @@ class gnu::xml::xpath::LocalNameFunction : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) arg;"}, {"sha": "4e9db9a4fc84ea3fbf7ebf8ef51e4a66057f090e", "filename": "libjava/gnu/xml/xpath/NameFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FNameFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FNameFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FNameFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -51,7 +51,7 @@ class gnu::xml::xpath::NameFunction : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) arg;"}, {"sha": "823ea6be1ddc376403497713b0779f1e2c6cea80", "filename": "libjava/gnu/xml/xpath/NameTest.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FNameTest.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FNameTest.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FNameTest.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -46,7 +46,7 @@ class gnu::xml::xpath::NameTest : public ::gnu::xml::xpath::Test\n {\n \n public:\n-  NameTest(::javax::xml::namespace::QName *, jboolean, jboolean);\n+  NameTest(::javax::xml::namespace$::QName *, jboolean, jboolean);\n   jboolean matchesAny();\n   jboolean matchesAnyLocalName();\n   jboolean matches(::org::w3c::dom::Node *, jint, jint);\n@@ -55,10 +55,10 @@ class gnu::xml::xpath::NameTest : public ::gnu::xml::xpath::Test\n   static jboolean equal(::java::lang::String *, ::java::lang::String *);\n public:\n   ::gnu::xml::xpath::Test * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n-  ::javax::xml::namespace::QName * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Test)))) qName;\n+  ::javax::xml::namespace$::QName * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Test)))) qName;\n   jboolean anyLocalName;\n   jboolean any;\n public:"}, {"sha": "55095195aa3d816bc645dd05aa3ce0ad6814557e", "filename": "libjava/gnu/xml/xpath/NamespaceTest.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FNamespaceTest.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FNamespaceTest.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FNamespaceTest.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -46,15 +46,15 @@ class gnu::xml::xpath::NamespaceTest : public ::gnu::xml::xpath::Test\n {\n \n public:\n-  NamespaceTest(::javax::xml::namespace::QName *, jboolean, jboolean);\n+  NamespaceTest(::javax::xml::namespace$::QName *, jboolean, jboolean);\n   jboolean matchesAny();\n   jboolean matchesAnyLocalName();\n   jboolean matches(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Test * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n-  ::javax::xml::namespace::QName * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Test)))) qName;\n+  ::javax::xml::namespace$::QName * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Test)))) qName;\n   jboolean anyLocalName;\n   jboolean any;\n public:"}, {"sha": "76e0460457751ef827d8bcedda2aaba18365e0d0", "filename": "libjava/gnu/xml/xpath/NamespaceUriFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FNamespaceUriFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FNamespaceUriFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FNamespaceUriFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -51,7 +51,7 @@ class gnu::xml::xpath::NamespaceUriFunction : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) arg;"}, {"sha": "21b9322636daaa23dd22c24eb09473a3bcbce515", "filename": "libjava/gnu/xml/xpath/NegativeExpr.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FNegativeExpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FNegativeExpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FNegativeExpr.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -50,7 +50,7 @@ class gnu::xml::xpath::NegativeExpr : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) expr;"}, {"sha": "da631d9296e9fc2e388552a5145c3d73a500254f", "filename": "libjava/gnu/xml/xpath/NodeTypeTest.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FNodeTypeTest.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FNodeTypeTest.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FNodeTypeTest.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -52,7 +52,7 @@ class gnu::xml::xpath::NodeTypeTest : public ::gnu::xml::xpath::Test\n   ::java::lang::String * getData();\n   jboolean matches(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Test * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   jshort __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Test)))) type;"}, {"sha": "ade9d2caa81410e6bd38ea1d27d356c1949ebf13", "filename": "libjava/gnu/xml/xpath/NormalizeSpaceFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FNormalizeSpaceFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FNormalizeSpaceFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FNormalizeSpaceFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -51,7 +51,7 @@ class gnu::xml::xpath::NormalizeSpaceFunction : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) arg;"}, {"sha": "c2f7499673d9a215c5282791ff135d6d7a220321", "filename": "libjava/gnu/xml/xpath/NotFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FNotFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FNotFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FNotFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -51,7 +51,7 @@ class gnu::xml::xpath::NotFunction : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) arg;"}, {"sha": "92937fdb15f02a16b4ca70786f1ee58096f6a876", "filename": "libjava/gnu/xml/xpath/NumberFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FNumberFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FNumberFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FNumberFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -51,7 +51,7 @@ class gnu::xml::xpath::NumberFunction : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) arg;"}, {"sha": "9cd5f9594bbd7e2d3cbe339fc42de80ddf1e6054", "filename": "libjava/gnu/xml/xpath/OrExpr.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FOrExpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FOrExpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FOrExpr.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -49,7 +49,7 @@ class gnu::xml::xpath::OrExpr : public ::gnu::xml::xpath::Expr\n   OrExpr(::gnu::xml::xpath::Expr *, ::gnu::xml::xpath::Expr *);\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) lhs;"}, {"sha": "3a228ade884b87e5ba9bb667c6c926b90f2b2a90", "filename": "libjava/gnu/xml/xpath/ParenthesizedExpr.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FParenthesizedExpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FParenthesizedExpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FParenthesizedExpr.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -50,7 +50,7 @@ class gnu::xml::xpath::ParenthesizedExpr : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) expr;"}, {"sha": "849f9c7495f908c5a899c0cc0a886537580696d6", "filename": "libjava/gnu/xml/xpath/PositionFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FPositionFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FPositionFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FPositionFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -50,7 +50,7 @@ class gnu::xml::xpath::PositionFunction : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n   static ::java::lang::Class class$;\n };"}, {"sha": "d51d05926b0cdba7aa2453940b68089425b2dd7f", "filename": "libjava/gnu/xml/xpath/Predicate.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FPredicate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FPredicate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FPredicate.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -25,7 +25,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -51,7 +51,7 @@ class gnu::xml::xpath::Predicate : public ::gnu::xml::xpath::Test\n public:\n   virtual jboolean matches(::org::w3c::dom::Node *, jint, jint);\n   virtual ::gnu::xml::xpath::Test * clone(::java::lang::Object *);\n-  virtual jboolean references(::javax::xml::namespace::QName *);\n+  virtual jboolean references(::javax::xml::namespace$::QName *);\n   virtual ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Test)))) expr;"}, {"sha": "3decec0dd29874705c882c2133b2057c4fa4b548", "filename": "libjava/gnu/xml/xpath/RelationalExpr.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FRelationalExpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FRelationalExpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FRelationalExpr.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -50,7 +50,7 @@ class gnu::xml::xpath::RelationalExpr : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) lhs;"}, {"sha": "37ce921fd6043b7a87b5d280c63789b20badce05", "filename": "libjava/gnu/xml/xpath/Root.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FRoot.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FRoot.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FRoot.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -53,7 +53,7 @@ class gnu::xml::xpath::Root : public ::gnu::xml::xpath::Path\n   ::java::util::Collection * evaluate(::org::w3c::dom::Node *, ::java::util::Collection *);\n public:\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n   static ::java::lang::Class class$;\n };"}, {"sha": "97dbf14ab391c2aa6fe9b3a43fa984ce3b965680", "filename": "libjava/gnu/xml/xpath/RoundFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FRoundFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FRoundFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FRoundFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -51,7 +51,7 @@ class gnu::xml::xpath::RoundFunction : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) arg;"}, {"sha": "9dcd37a4e3f155cf70071e4adaa0878242ccc501", "filename": "libjava/gnu/xml/xpath/Selector.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FSelector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FSelector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FSelector.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -27,7 +27,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -72,7 +72,7 @@ class gnu::xml::xpath::Selector : public ::gnu::xml::xpath::Path\n   jboolean isNamespaceAttribute(::org::w3c::dom::Node *);\n public:\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n   static const jint ANCESTOR = 0;\n   static const jint ANCESTOR_OR_SELF = 1;"}, {"sha": "c3900e4a475d36921d53e45fb25efc82960709a8", "filename": "libjava/gnu/xml/xpath/StartsWithFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FStartsWithFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FStartsWithFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FStartsWithFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -51,7 +51,7 @@ class gnu::xml::xpath::StartsWithFunction : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) arg1;"}, {"sha": "db4260555d39f4f09e24193f1edca88f64540d6e", "filename": "libjava/gnu/xml/xpath/Steps.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FSteps.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FSteps.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FSteps.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -25,7 +25,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -61,7 +61,7 @@ class gnu::xml::xpath::Steps : public ::gnu::xml::xpath::Path\n   ::java::util::Collection * evaluate(::org::w3c::dom::Node *, ::java::util::Collection *);\n public:\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::java::util::LinkedList * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Path)))) path;"}, {"sha": "0f96aa2d894f902334688e57da711aef5e9c1802", "filename": "libjava/gnu/xml/xpath/StringFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FStringFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FStringFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FStringFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -51,7 +51,7 @@ class gnu::xml::xpath::StringFunction : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) arg;"}, {"sha": "92f7ce14a48d45c16b0a9b6aa108b35d14fcf596", "filename": "libjava/gnu/xml/xpath/StringLengthFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FStringLengthFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FStringLengthFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FStringLengthFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -51,7 +51,7 @@ class gnu::xml::xpath::StringLengthFunction : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) arg;"}, {"sha": "fa9fed3b3807d50da438214bb60546519b55b1b0", "filename": "libjava/gnu/xml/xpath/SubstringAfterFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FSubstringAfterFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FSubstringAfterFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FSubstringAfterFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -51,7 +51,7 @@ class gnu::xml::xpath::SubstringAfterFunction : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) arg1;"}, {"sha": "f8056be5bb845b606da57188540434a883a8c3c2", "filename": "libjava/gnu/xml/xpath/SubstringBeforeFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FSubstringBeforeFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FSubstringBeforeFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FSubstringBeforeFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -51,7 +51,7 @@ class gnu::xml::xpath::SubstringBeforeFunction : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) arg1;"}, {"sha": "d56e1b9da801855016631c7dff72b8c9b6956313", "filename": "libjava/gnu/xml/xpath/SubstringFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FSubstringFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FSubstringFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FSubstringFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -51,7 +51,7 @@ class gnu::xml::xpath::SubstringFunction : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) arg1;"}, {"sha": "3a7b6e043a855491149f5e1a78f7df7e9783849b", "filename": "libjava/gnu/xml/xpath/SumFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FSumFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FSumFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FSumFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -51,7 +51,7 @@ class gnu::xml::xpath::SumFunction : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) arg;"}, {"sha": "64510e85fc3a1541a921275d298b9d18aa0ab311", "filename": "libjava/gnu/xml/xpath/Test.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FTest.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FTest.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FTest.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -23,7 +23,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -48,7 +48,7 @@ class gnu::xml::xpath::Test : public ::java::lang::Object\n   Test();\n   virtual jboolean matches(::org::w3c::dom::Node *, jint, jint) = 0;\n   virtual ::gnu::xml::xpath::Test * clone(::java::lang::Object *) = 0;\n-  virtual jboolean references(::javax::xml::namespace::QName *) = 0;\n+  virtual jboolean references(::javax::xml::namespace$::QName *) = 0;\n   static ::java::lang::Class class$;\n };\n "}, {"sha": "b1e168058d26fda882bc19c6b1cb8345c0eddbc4", "filename": "libjava/gnu/xml/xpath/TranslateFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FTranslateFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FTranslateFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FTranslateFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -51,7 +51,7 @@ class gnu::xml::xpath::TranslateFunction : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) arg1;"}, {"sha": "27e42ddbaa65ea0bda2f4048f2d0c5057710dacb", "filename": "libjava/gnu/xml/xpath/TrueFunction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FTrueFunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FTrueFunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FTrueFunction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -50,7 +50,7 @@ class gnu::xml::xpath::TrueFunction : public ::gnu::xml::xpath::Expr\n public:\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n   static ::java::lang::Class class$;\n };"}, {"sha": "bbac92a822d342955f1f06ace33b1b381bc2be3f", "filename": "libjava/gnu/xml/xpath/UnionExpr.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FUnionExpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FUnionExpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FUnionExpr.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -50,7 +50,7 @@ class gnu::xml::xpath::UnionExpr : public ::gnu::xml::xpath::Pattern\n   jboolean matches(::org::w3c::dom::Node *);\n   ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  jboolean references(::javax::xml::namespace::QName *);\n+  jboolean references(::javax::xml::namespace$::QName *);\n   ::java::lang::String * toString();\n public: // actually package-private\n   ::gnu::xml::xpath::Expr * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Pattern)))) lhs;"}, {"sha": "ea5c1a6e889b16c768bd97918705ea489dad0b4e", "filename": "libjava/gnu/xml/xpath/VariableReference.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FVariableReference.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FVariableReference.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FVariableReference.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -50,14 +50,14 @@ class gnu::xml::xpath::VariableReference : public ::gnu::xml::xpath::Expr\n {\n \n public:\n-  VariableReference(::javax::xml::xpath::XPathVariableResolver *, ::javax::xml::namespace::QName *);\n+  VariableReference(::javax::xml::xpath::XPathVariableResolver *, ::javax::xml::namespace$::QName *);\n   virtual ::java::lang::Object * evaluate(::org::w3c::dom::Node *, jint, jint);\n   virtual ::gnu::xml::xpath::Expr * clone(::java::lang::Object *);\n-  virtual jboolean references(::javax::xml::namespace::QName *);\n+  virtual jboolean references(::javax::xml::namespace$::QName *);\n   virtual ::java::lang::String * toString();\n public: // actually package-private\n   ::javax::xml::xpath::XPathVariableResolver * __attribute__((aligned(__alignof__( ::gnu::xml::xpath::Expr)))) resolver;\n-  ::javax::xml::namespace::QName * name;\n+  ::javax::xml::namespace$::QName * name;\n public:\n   static ::java::lang::Class class$;\n };"}, {"sha": "f1bc5a36576dcb8fee981fc869fca1ac925d1b67", "filename": "libjava/gnu/xml/xpath/XPathImpl.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FXPathImpl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FXPathImpl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FXPathImpl.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -24,7 +24,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class NamespaceContext;\n           class QName;\n@@ -53,23 +53,23 @@ class gnu::xml::xpath::XPathImpl : public ::java::lang::Object\n {\n \n public: // actually package-private\n-  XPathImpl(::javax::xml::namespace::NamespaceContext *, ::javax::xml::xpath::XPathVariableResolver *, ::javax::xml::xpath::XPathFunctionResolver *);\n+  XPathImpl(::javax::xml::namespace$::NamespaceContext *, ::javax::xml::xpath::XPathVariableResolver *, ::javax::xml::xpath::XPathFunctionResolver *);\n public:\n   virtual void reset();\n   virtual void setXPathVariableResolver(::javax::xml::xpath::XPathVariableResolver *);\n   virtual ::javax::xml::xpath::XPathVariableResolver * getXPathVariableResolver();\n   virtual void setXPathFunctionResolver(::javax::xml::xpath::XPathFunctionResolver *);\n   virtual ::javax::xml::xpath::XPathFunctionResolver * getXPathFunctionResolver();\n-  virtual void setNamespaceContext(::javax::xml::namespace::NamespaceContext *);\n-  virtual ::javax::xml::namespace::NamespaceContext * getNamespaceContext();\n+  virtual void setNamespaceContext(::javax::xml::namespace$::NamespaceContext *);\n+  virtual ::javax::xml::namespace$::NamespaceContext * getNamespaceContext();\n   virtual ::javax::xml::xpath::XPathExpression * compile(::java::lang::String *);\n-  virtual ::java::lang::Object * evaluate(::java::lang::String *, ::java::lang::Object *, ::javax::xml::namespace::QName *);\n+  virtual ::java::lang::Object * evaluate(::java::lang::String *, ::java::lang::Object *, ::javax::xml::namespace$::QName *);\n   virtual ::java::lang::String * evaluate(::java::lang::String *, ::java::lang::Object *);\n-  virtual ::java::lang::Object * evaluate(::java::lang::String *, ::org::xml::sax::InputSource *, ::javax::xml::namespace::QName *);\n+  virtual ::java::lang::Object * evaluate(::java::lang::String *, ::org::xml::sax::InputSource *, ::javax::xml::namespace$::QName *);\n   virtual ::java::lang::String * evaluate(::java::lang::String *, ::org::xml::sax::InputSource *);\n public: // actually package-private\n   ::gnu::xml::xpath::XPathParser * __attribute__((aligned(__alignof__( ::java::lang::Object)))) parser;\n-  ::javax::xml::namespace::NamespaceContext * namespaceContext;\n+  ::javax::xml::namespace$::NamespaceContext * namespaceContext;\n   ::javax::xml::xpath::XPathVariableResolver * variableResolver;\n   ::javax::xml::xpath::XPathFunctionResolver * functionResolver;\n public:"}, {"sha": "0133a04512de3910ea8eb9ff035418712f9eec51", "filename": "libjava/gnu/xml/xpath/XPathParser.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FXPathParser.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fgnu%2Fxml%2Fxpath%2FXPathParser.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fxml%2Fxpath%2FXPathParser.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -27,7 +27,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class NamespaceContext;\n           class QName;\n@@ -47,7 +47,7 @@ class gnu::xml::xpath::XPathParser : public ::java::lang::Object\n public:\n   XPathParser();\n public: // actually package-private\n-  virtual ::javax::xml::namespace::QName * getQName(::java::lang::String *);\n+  virtual ::javax::xml::namespace$::QName * getQName(::java::lang::String *);\n   virtual ::gnu::xml::xpath::Expr * lookupFunction(::java::lang::String *, ::java::util::List *);\n public:\n   virtual void yyerror(::java::lang::String *);\n@@ -61,7 +61,7 @@ class gnu::xml::xpath::XPathParser : public ::java::lang::Object\n public:\n   virtual ::java::lang::Object * yyparse(::gnu::xml::xpath::XPathParser$yyInput *);\n public: // actually package-private\n-  ::javax::xml::namespace::NamespaceContext * __attribute__((aligned(__alignof__( ::java::lang::Object)))) namespaceContext;\n+  ::javax::xml::namespace$::NamespaceContext * __attribute__((aligned(__alignof__( ::java::lang::Object)))) namespaceContext;\n   ::javax::xml::xpath::XPathVariableResolver * variableResolver;\n   ::javax::xml::xpath::XPathFunctionResolver * functionResolver;\n public:"}, {"sha": "37c0c0445e8ae4b979be6124fafd67d7c56766b2", "filename": "libjava/javax/xml/datatype/DatatypeConstants.h", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fdatatype%2FDatatypeConstants.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fdatatype%2FDatatypeConstants.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fdatatype%2FDatatypeConstants.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -18,7 +18,7 @@ extern \"Java\"\n           class DatatypeConstants;\n           class DatatypeConstants$Field;\n       }\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -54,17 +54,17 @@ class javax::xml::datatype::DatatypeConstants : public ::java::lang::Object\n   static ::javax::xml::datatype::DatatypeConstants$Field * HOURS;\n   static ::javax::xml::datatype::DatatypeConstants$Field * MINUTES;\n   static ::javax::xml::datatype::DatatypeConstants$Field * SECONDS;\n-  static ::javax::xml::namespace::QName * DATETIME;\n-  static ::javax::xml::namespace::QName * TIME;\n-  static ::javax::xml::namespace::QName * DATE;\n-  static ::javax::xml::namespace::QName * GYEARMONTH;\n-  static ::javax::xml::namespace::QName * GMONTHDAY;\n-  static ::javax::xml::namespace::QName * GYEAR;\n-  static ::javax::xml::namespace::QName * GMONTH;\n-  static ::javax::xml::namespace::QName * GDAY;\n-  static ::javax::xml::namespace::QName * DURATION;\n-  static ::javax::xml::namespace::QName * DURATION_DAYTIME;\n-  static ::javax::xml::namespace::QName * DURATION_YEARMONTH;\n+  static ::javax::xml::namespace$::QName * DATETIME;\n+  static ::javax::xml::namespace$::QName * TIME;\n+  static ::javax::xml::namespace$::QName * DATE;\n+  static ::javax::xml::namespace$::QName * GYEARMONTH;\n+  static ::javax::xml::namespace$::QName * GMONTHDAY;\n+  static ::javax::xml::namespace$::QName * GYEAR;\n+  static ::javax::xml::namespace$::QName * GMONTH;\n+  static ::javax::xml::namespace$::QName * GDAY;\n+  static ::javax::xml::namespace$::QName * DURATION;\n+  static ::javax::xml::namespace$::QName * DURATION_DAYTIME;\n+  static ::javax::xml::namespace$::QName * DURATION_YEARMONTH;\n   static const jint MAX_TIMEZONE_OFFSET = -840;\n   static const jint MIN_TIMEZONE_OFFSET = 840;\n   static ::java::lang::Class class$;"}, {"sha": "84f9782b254f47c5f5c35cf4270857f879468876", "filename": "libjava/javax/xml/datatype/Duration.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fdatatype%2FDuration.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fdatatype%2FDuration.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fdatatype%2FDuration.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -25,7 +25,7 @@ extern \"Java\"\n           class DatatypeConstants$Field;\n           class Duration;\n       }\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -38,7 +38,7 @@ class javax::xml::datatype::Duration : public ::java::lang::Object\n \n public:\n   Duration();\n-  virtual ::javax::xml::namespace::QName * getXMLSchemaType();\n+  virtual ::javax::xml::namespace$::QName * getXMLSchemaType();\n   virtual jint getSign() = 0;\n   virtual jint getYears();\n   virtual jint getMonths();"}, {"sha": "eda668f54e8bb607cfce48fff3e55df03dd5e28b", "filename": "libjava/javax/xml/datatype/XMLGregorianCalendar.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fdatatype%2FXMLGregorianCalendar.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fdatatype%2FXMLGregorianCalendar.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fdatatype%2FXMLGregorianCalendar.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -26,7 +26,7 @@ extern \"Java\"\n           class Duration;\n           class XMLGregorianCalendar;\n       }\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -70,7 +70,7 @@ class javax::xml::datatype::XMLGregorianCalendar : public ::java::lang::Object\n   virtual jboolean equals(::java::lang::Object *);\n   virtual jint hashCode();\n   virtual ::java::lang::String * toXMLFormat() = 0;\n-  virtual ::javax::xml::namespace::QName * getXMLSchemaType() = 0;\n+  virtual ::javax::xml::namespace$::QName * getXMLSchemaType() = 0;\n   virtual ::java::lang::String * toString();\n   virtual jboolean isValid() = 0;\n   virtual void add(::javax::xml::datatype::Duration *) = 0;"}, {"sha": "d0fd3410940a21a0c60009679792cfdfb7d86f23", "filename": "libjava/javax/xml/namespace/NamespaceContext.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fnamespace%2FNamespaceContext.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fnamespace%2FNamespaceContext.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fnamespace%2FNamespaceContext.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -13,15 +13,15 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class NamespaceContext;\n       }\n     }\n   }\n }\n \n-class javax::xml::namespace::NamespaceContext : public ::java::lang::Object\n+class javax::xml::namespace$::NamespaceContext : public ::java::lang::Object\n {\n \n public:"}, {"sha": "a352b7cea8a24470c8e99ad66b597099a205f95c", "filename": "libjava/javax/xml/namespace/QName.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fnamespace%2FQName.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fnamespace%2FQName.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fnamespace%2FQName.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -13,15 +13,15 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n     }\n   }\n }\n \n-class javax::xml::namespace::QName : public ::java::lang::Object\n+class javax::xml::namespace$::QName : public ::java::lang::Object\n {\n \n public:\n@@ -34,7 +34,7 @@ class javax::xml::namespace::QName : public ::java::lang::Object\n   virtual jboolean equals(::java::lang::Object *);\n   virtual jint hashCode();\n   virtual ::java::lang::String * toString();\n-  static ::javax::xml::namespace::QName * valueOf(::java::lang::String *);\n+  static ::javax::xml::namespace$::QName * valueOf(::java::lang::String *);\n private:\n   static const jlong serialVersionUID = 4418622981026545151LL;\n   ::java::lang::String * __attribute__((aligned(__alignof__( ::java::lang::Object)))) namespaceURI;"}, {"sha": "493ceef3db1851ff7beb3b918b1c30d232ae5ca3", "filename": "libjava/javax/xml/stream/XMLEventFactory.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2FXMLEventFactory.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2FXMLEventFactory.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fstream%2FXMLEventFactory.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -13,7 +13,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class NamespaceContext;\n           class QName;\n@@ -57,14 +57,14 @@ class javax::xml::stream::XMLEventFactory : public ::java::lang::Object\n   virtual void setLocation(::javax::xml::stream::Location *) = 0;\n   virtual ::javax::xml::stream::events::Attribute * createAttribute(::java::lang::String *, ::java::lang::String *, ::java::lang::String *, ::java::lang::String *) = 0;\n   virtual ::javax::xml::stream::events::Attribute * createAttribute(::java::lang::String *, ::java::lang::String *) = 0;\n-  virtual ::javax::xml::stream::events::Attribute * createAttribute(::javax::xml::namespace::QName *, ::java::lang::String *) = 0;\n+  virtual ::javax::xml::stream::events::Attribute * createAttribute(::javax::xml::namespace$::QName *, ::java::lang::String *) = 0;\n   virtual ::javax::xml::stream::events::Namespace * createNamespace(::java::lang::String *) = 0;\n   virtual ::javax::xml::stream::events::Namespace * createNamespace(::java::lang::String *, ::java::lang::String *) = 0;\n-  virtual ::javax::xml::stream::events::StartElement * createStartElement(::javax::xml::namespace::QName *, ::java::util::Iterator *, ::java::util::Iterator *) = 0;\n+  virtual ::javax::xml::stream::events::StartElement * createStartElement(::javax::xml::namespace$::QName *, ::java::util::Iterator *, ::java::util::Iterator *) = 0;\n   virtual ::javax::xml::stream::events::StartElement * createStartElement(::java::lang::String *, ::java::lang::String *, ::java::lang::String *) = 0;\n   virtual ::javax::xml::stream::events::StartElement * createStartElement(::java::lang::String *, ::java::lang::String *, ::java::lang::String *, ::java::util::Iterator *, ::java::util::Iterator *) = 0;\n-  virtual ::javax::xml::stream::events::StartElement * createStartElement(::java::lang::String *, ::java::lang::String *, ::java::lang::String *, ::java::util::Iterator *, ::java::util::Iterator *, ::javax::xml::namespace::NamespaceContext *) = 0;\n-  virtual ::javax::xml::stream::events::EndElement * createEndElement(::javax::xml::namespace::QName *, ::java::util::Iterator *) = 0;\n+  virtual ::javax::xml::stream::events::StartElement * createStartElement(::java::lang::String *, ::java::lang::String *, ::java::lang::String *, ::java::util::Iterator *, ::java::util::Iterator *, ::javax::xml::namespace$::NamespaceContext *) = 0;\n+  virtual ::javax::xml::stream::events::EndElement * createEndElement(::javax::xml::namespace$::QName *, ::java::util::Iterator *) = 0;\n   virtual ::javax::xml::stream::events::EndElement * createEndElement(::java::lang::String *, ::java::lang::String *, ::java::lang::String *) = 0;\n   virtual ::javax::xml::stream::events::EndElement * createEndElement(::java::lang::String *, ::java::lang::String *, ::java::lang::String *, ::java::util::Iterator *) = 0;\n   virtual ::javax::xml::stream::events::Characters * createCharacters(::java::lang::String *) = 0;"}, {"sha": "9ed0aa1df472e8e9e54566434030a81cf2ffc5bf", "filename": "libjava/javax/xml/stream/XMLEventWriter.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2FXMLEventWriter.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2FXMLEventWriter.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fstream%2FXMLEventWriter.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -13,7 +13,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class NamespaceContext;\n       }\n@@ -41,8 +41,8 @@ class javax::xml::stream::XMLEventWriter : public ::java::lang::Object\n   virtual ::java::lang::String * getPrefix(::java::lang::String *) = 0;\n   virtual void setPrefix(::java::lang::String *, ::java::lang::String *) = 0;\n   virtual void setDefaultNamespace(::java::lang::String *) = 0;\n-  virtual void setNamespaceContext(::javax::xml::namespace::NamespaceContext *) = 0;\n-  virtual ::javax::xml::namespace::NamespaceContext * getNamespaceContext() = 0;\n+  virtual void setNamespaceContext(::javax::xml::namespace$::NamespaceContext *) = 0;\n+  virtual ::javax::xml::namespace$::NamespaceContext * getNamespaceContext() = 0;\n   static ::java::lang::Class class$;\n } __attribute__ ((java_interface));\n "}, {"sha": "47b49b40814ba5ee7ef5b3321b8c3d6c3db5b206", "filename": "libjava/javax/xml/stream/XMLStreamReader.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2FXMLStreamReader.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2FXMLStreamReader.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fstream%2FXMLStreamReader.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -15,7 +15,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class NamespaceContext;\n           class QName;\n@@ -47,7 +47,7 @@ class javax::xml::stream::XMLStreamReader : public ::java::lang::Object\n   virtual jboolean isWhiteSpace() = 0;\n   virtual ::java::lang::String * getAttributeValue(::java::lang::String *, ::java::lang::String *) = 0;\n   virtual jint getAttributeCount() = 0;\n-  virtual ::javax::xml::namespace::QName * getAttributeName(jint) = 0;\n+  virtual ::javax::xml::namespace$::QName * getAttributeName(jint) = 0;\n   virtual ::java::lang::String * getAttributeNamespace(jint) = 0;\n   virtual ::java::lang::String * getAttributeLocalName(jint) = 0;\n   virtual ::java::lang::String * getAttributePrefix(jint) = 0;\n@@ -57,7 +57,7 @@ class javax::xml::stream::XMLStreamReader : public ::java::lang::Object\n   virtual jint getNamespaceCount() = 0;\n   virtual ::java::lang::String * getNamespacePrefix(jint) = 0;\n   virtual ::java::lang::String * getNamespaceURI(jint) = 0;\n-  virtual ::javax::xml::namespace::NamespaceContext * getNamespaceContext() = 0;\n+  virtual ::javax::xml::namespace$::NamespaceContext * getNamespaceContext() = 0;\n   virtual jint getEventType() = 0;\n   virtual ::java::lang::String * getText() = 0;\n   virtual JArray< jchar > * getTextCharacters() = 0;\n@@ -67,7 +67,7 @@ class javax::xml::stream::XMLStreamReader : public ::java::lang::Object\n   virtual ::java::lang::String * getEncoding() = 0;\n   virtual jboolean hasText() = 0;\n   virtual ::javax::xml::stream::Location * getLocation() = 0;\n-  virtual ::javax::xml::namespace::QName * getName() = 0;\n+  virtual ::javax::xml::namespace$::QName * getName() = 0;\n   virtual ::java::lang::String * getLocalName() = 0;\n   virtual jboolean hasName() = 0;\n   virtual ::java::lang::String * getNamespaceURI() = 0;"}, {"sha": "e4bed463c008edabd19d7eea6612b3a081b80453", "filename": "libjava/javax/xml/stream/XMLStreamWriter.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2FXMLStreamWriter.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2FXMLStreamWriter.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fstream%2FXMLStreamWriter.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -15,7 +15,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class NamespaceContext;\n       }\n@@ -60,8 +60,8 @@ class javax::xml::stream::XMLStreamWriter : public ::java::lang::Object\n   virtual ::java::lang::String * getPrefix(::java::lang::String *) = 0;\n   virtual void setPrefix(::java::lang::String *, ::java::lang::String *) = 0;\n   virtual void setDefaultNamespace(::java::lang::String *) = 0;\n-  virtual void setNamespaceContext(::javax::xml::namespace::NamespaceContext *) = 0;\n-  virtual ::javax::xml::namespace::NamespaceContext * getNamespaceContext() = 0;\n+  virtual void setNamespaceContext(::javax::xml::namespace$::NamespaceContext *) = 0;\n+  virtual ::javax::xml::namespace$::NamespaceContext * getNamespaceContext() = 0;\n   virtual ::java::lang::Object * getProperty(::java::lang::String *) = 0;\n   static ::java::lang::Class class$;\n } __attribute__ ((java_interface));"}, {"sha": "d4e42b5a5f2a8a9ba7c7d9082229fc09eded5100", "filename": "libjava/javax/xml/stream/events/Attribute.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FAttribute.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FAttribute.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FAttribute.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -13,7 +13,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -36,7 +36,7 @@ class javax::xml::stream::events::Attribute : public ::java::lang::Object\n {\n \n public:\n-  virtual ::javax::xml::namespace::QName * getName() = 0;\n+  virtual ::javax::xml::namespace$::QName * getName() = 0;\n   virtual ::java::lang::String * getValue() = 0;\n   virtual ::java::lang::String * getDTDType() = 0;\n   virtual jboolean isSpecified() = 0;\n@@ -54,7 +54,7 @@ class javax::xml::stream::events::Attribute : public ::java::lang::Object\n   virtual ::javax::xml::stream::events::StartElement * asStartElement() = 0;\n   virtual ::javax::xml::stream::events::EndElement * asEndElement() = 0;\n   virtual ::javax::xml::stream::events::Characters * asCharacters() = 0;\n-  virtual ::javax::xml::namespace::QName * getSchemaType() = 0;\n+  virtual ::javax::xml::namespace$::QName * getSchemaType() = 0;\n   virtual void writeAsEncodedUnicode(::java::io::Writer *) = 0;\n   static ::java::lang::Class class$;\n } __attribute__ ((java_interface));"}, {"sha": "539d45f3cd960252409fb14ab63c0321865354e4", "filename": "libjava/javax/xml/stream/events/Characters.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FCharacters.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FCharacters.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FCharacters.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -13,7 +13,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -53,7 +53,7 @@ class javax::xml::stream::events::Characters : public ::java::lang::Object\n   virtual ::javax::xml::stream::events::StartElement * asStartElement() = 0;\n   virtual ::javax::xml::stream::events::EndElement * asEndElement() = 0;\n   virtual ::javax::xml::stream::events::Characters * asCharacters() = 0;\n-  virtual ::javax::xml::namespace::QName * getSchemaType() = 0;\n+  virtual ::javax::xml::namespace$::QName * getSchemaType() = 0;\n   virtual void writeAsEncodedUnicode(::java::io::Writer *) = 0;\n   static ::java::lang::Class class$;\n } __attribute__ ((java_interface));"}, {"sha": "ba81b85a845be5efe7e985f66f3762d6dbfaa1fa", "filename": "libjava/javax/xml/stream/events/Comment.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FComment.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FComment.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FComment.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -13,7 +13,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -51,7 +51,7 @@ class javax::xml::stream::events::Comment : public ::java::lang::Object\n   virtual ::javax::xml::stream::events::StartElement * asStartElement() = 0;\n   virtual ::javax::xml::stream::events::EndElement * asEndElement() = 0;\n   virtual ::javax::xml::stream::events::Characters * asCharacters() = 0;\n-  virtual ::javax::xml::namespace::QName * getSchemaType() = 0;\n+  virtual ::javax::xml::namespace$::QName * getSchemaType() = 0;\n   virtual void writeAsEncodedUnicode(::java::io::Writer *) = 0;\n   static ::java::lang::Class class$;\n } __attribute__ ((java_interface));"}, {"sha": "2932d6871f4ad63f406f08a555c270ac58c71a5f", "filename": "libjava/javax/xml/stream/events/DTD.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FDTD.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FDTD.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FDTD.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -13,7 +13,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -54,7 +54,7 @@ class javax::xml::stream::events::DTD : public ::java::lang::Object\n   virtual ::javax::xml::stream::events::StartElement * asStartElement() = 0;\n   virtual ::javax::xml::stream::events::EndElement * asEndElement() = 0;\n   virtual ::javax::xml::stream::events::Characters * asCharacters() = 0;\n-  virtual ::javax::xml::namespace::QName * getSchemaType() = 0;\n+  virtual ::javax::xml::namespace$::QName * getSchemaType() = 0;\n   virtual void writeAsEncodedUnicode(::java::io::Writer *) = 0;\n   static ::java::lang::Class class$;\n } __attribute__ ((java_interface));"}, {"sha": "e3cdc98db264bbd2409bcd36cf96f3c8b5dbe904", "filename": "libjava/javax/xml/stream/events/EndDocument.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FEndDocument.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FEndDocument.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FEndDocument.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -13,7 +13,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -50,7 +50,7 @@ class javax::xml::stream::events::EndDocument : public ::java::lang::Object\n   virtual ::javax::xml::stream::events::StartElement * asStartElement() = 0;\n   virtual ::javax::xml::stream::events::EndElement * asEndElement() = 0;\n   virtual ::javax::xml::stream::events::Characters * asCharacters() = 0;\n-  virtual ::javax::xml::namespace::QName * getSchemaType() = 0;\n+  virtual ::javax::xml::namespace$::QName * getSchemaType() = 0;\n   virtual void writeAsEncodedUnicode(::java::io::Writer *) = 0;\n   static ::java::lang::Class class$;\n } __attribute__ ((java_interface));"}, {"sha": "b67f2bb183de23b9b656e9013545f821271a1a05", "filename": "libjava/javax/xml/stream/events/EndElement.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FEndElement.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FEndElement.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FEndElement.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -13,7 +13,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -35,7 +35,7 @@ class javax::xml::stream::events::EndElement : public ::java::lang::Object\n {\n \n public:\n-  virtual ::javax::xml::namespace::QName * getName() = 0;\n+  virtual ::javax::xml::namespace$::QName * getName() = 0;\n   virtual ::java::util::Iterator * getNamespaces() = 0;\n   virtual jint getEventType() = 0;\n   virtual ::javax::xml::stream::Location * getLocation() = 0;\n@@ -51,7 +51,7 @@ class javax::xml::stream::events::EndElement : public ::java::lang::Object\n   virtual ::javax::xml::stream::events::StartElement * asStartElement() = 0;\n   virtual ::javax::xml::stream::events::EndElement * asEndElement() = 0;\n   virtual ::javax::xml::stream::events::Characters * asCharacters() = 0;\n-  virtual ::javax::xml::namespace::QName * getSchemaType() = 0;\n+  virtual ::javax::xml::namespace$::QName * getSchemaType() = 0;\n   virtual void writeAsEncodedUnicode(::java::io::Writer *) = 0;\n   static ::java::lang::Class class$;\n } __attribute__ ((java_interface));"}, {"sha": "f4075edc44a7675b06d47a252687daed16387b6e", "filename": "libjava/javax/xml/stream/events/EntityDeclaration.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FEntityDeclaration.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FEntityDeclaration.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FEntityDeclaration.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -13,7 +13,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -56,7 +56,7 @@ class javax::xml::stream::events::EntityDeclaration : public ::java::lang::Objec\n   virtual ::javax::xml::stream::events::StartElement * asStartElement() = 0;\n   virtual ::javax::xml::stream::events::EndElement * asEndElement() = 0;\n   virtual ::javax::xml::stream::events::Characters * asCharacters() = 0;\n-  virtual ::javax::xml::namespace::QName * getSchemaType() = 0;\n+  virtual ::javax::xml::namespace$::QName * getSchemaType() = 0;\n   virtual void writeAsEncodedUnicode(::java::io::Writer *) = 0;\n   static ::java::lang::Class class$;\n } __attribute__ ((java_interface));"}, {"sha": "548bbc6b335ebc613ece5e3395a467e1d5015d5b", "filename": "libjava/javax/xml/stream/events/EntityReference.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FEntityReference.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FEntityReference.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FEntityReference.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -13,7 +13,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -53,7 +53,7 @@ class javax::xml::stream::events::EntityReference : public ::java::lang::Object\n   virtual ::javax::xml::stream::events::StartElement * asStartElement() = 0;\n   virtual ::javax::xml::stream::events::EndElement * asEndElement() = 0;\n   virtual ::javax::xml::stream::events::Characters * asCharacters() = 0;\n-  virtual ::javax::xml::namespace::QName * getSchemaType() = 0;\n+  virtual ::javax::xml::namespace$::QName * getSchemaType() = 0;\n   virtual void writeAsEncodedUnicode(::java::io::Writer *) = 0;\n   static ::java::lang::Class class$;\n } __attribute__ ((java_interface));"}, {"sha": "470b22bc46c28b6e562d5c86e4e5d2f588d56fa3", "filename": "libjava/javax/xml/stream/events/Namespace.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FNamespace.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FNamespace.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FNamespace.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -13,7 +13,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -53,7 +53,7 @@ class javax::xml::stream::events::Namespace : public ::java::lang::Object\n   virtual ::javax::xml::stream::events::StartElement * asStartElement() = 0;\n   virtual ::javax::xml::stream::events::EndElement * asEndElement() = 0;\n   virtual ::javax::xml::stream::events::Characters * asCharacters() = 0;\n-  virtual ::javax::xml::namespace::QName * getSchemaType() = 0;\n+  virtual ::javax::xml::namespace$::QName * getSchemaType() = 0;\n   virtual void writeAsEncodedUnicode(::java::io::Writer *) = 0;\n   static ::java::lang::Class class$;\n } __attribute__ ((java_interface));"}, {"sha": "c60a79ebc527a5f81919c3dc5584ce25edff07f6", "filename": "libjava/javax/xml/stream/events/NotationDeclaration.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FNotationDeclaration.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FNotationDeclaration.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FNotationDeclaration.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -13,7 +13,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -53,7 +53,7 @@ class javax::xml::stream::events::NotationDeclaration : public ::java::lang::Obj\n   virtual ::javax::xml::stream::events::StartElement * asStartElement() = 0;\n   virtual ::javax::xml::stream::events::EndElement * asEndElement() = 0;\n   virtual ::javax::xml::stream::events::Characters * asCharacters() = 0;\n-  virtual ::javax::xml::namespace::QName * getSchemaType() = 0;\n+  virtual ::javax::xml::namespace$::QName * getSchemaType() = 0;\n   virtual void writeAsEncodedUnicode(::java::io::Writer *) = 0;\n   static ::java::lang::Class class$;\n } __attribute__ ((java_interface));"}, {"sha": "79f969d69858432302474e212fef9651e5c3b074", "filename": "libjava/javax/xml/stream/events/ProcessingInstruction.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FProcessingInstruction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FProcessingInstruction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FProcessingInstruction.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -13,7 +13,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -52,7 +52,7 @@ class javax::xml::stream::events::ProcessingInstruction : public ::java::lang::O\n   virtual ::javax::xml::stream::events::StartElement * asStartElement() = 0;\n   virtual ::javax::xml::stream::events::EndElement * asEndElement() = 0;\n   virtual ::javax::xml::stream::events::Characters * asCharacters() = 0;\n-  virtual ::javax::xml::namespace::QName * getSchemaType() = 0;\n+  virtual ::javax::xml::namespace$::QName * getSchemaType() = 0;\n   virtual void writeAsEncodedUnicode(::java::io::Writer *) = 0;\n   static ::java::lang::Class class$;\n } __attribute__ ((java_interface));"}, {"sha": "112e600316e80f7292df436771fd4f664c509e33", "filename": "libjava/javax/xml/stream/events/StartDocument.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FStartDocument.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FStartDocument.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FStartDocument.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -13,7 +13,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -56,7 +56,7 @@ class javax::xml::stream::events::StartDocument : public ::java::lang::Object\n   virtual ::javax::xml::stream::events::StartElement * asStartElement() = 0;\n   virtual ::javax::xml::stream::events::EndElement * asEndElement() = 0;\n   virtual ::javax::xml::stream::events::Characters * asCharacters() = 0;\n-  virtual ::javax::xml::namespace::QName * getSchemaType() = 0;\n+  virtual ::javax::xml::namespace$::QName * getSchemaType() = 0;\n   virtual void writeAsEncodedUnicode(::java::io::Writer *) = 0;\n   static ::java::lang::Class class$;\n } __attribute__ ((java_interface));"}, {"sha": "2dd50e6c87c671846acfdf3f981450d4a3852d0a", "filename": "libjava/javax/xml/stream/events/StartElement.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FStartElement.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FStartElement.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FStartElement.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -13,7 +13,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class NamespaceContext;\n           class QName;\n@@ -37,11 +37,11 @@ class javax::xml::stream::events::StartElement : public ::java::lang::Object\n {\n \n public:\n-  virtual ::javax::xml::namespace::QName * getName() = 0;\n+  virtual ::javax::xml::namespace$::QName * getName() = 0;\n   virtual ::java::util::Iterator * getAttributes() = 0;\n   virtual ::java::util::Iterator * getNamespaces() = 0;\n-  virtual ::javax::xml::stream::events::Attribute * getAttributeByName(::javax::xml::namespace::QName *) = 0;\n-  virtual ::javax::xml::namespace::NamespaceContext * getNamespaceContext() = 0;\n+  virtual ::javax::xml::stream::events::Attribute * getAttributeByName(::javax::xml::namespace$::QName *) = 0;\n+  virtual ::javax::xml::namespace$::NamespaceContext * getNamespaceContext() = 0;\n   virtual ::java::lang::String * getNamespaceURI(::java::lang::String *) = 0;\n   virtual jint getEventType() = 0;\n   virtual ::javax::xml::stream::Location * getLocation() = 0;\n@@ -57,7 +57,7 @@ class javax::xml::stream::events::StartElement : public ::java::lang::Object\n   virtual ::javax::xml::stream::events::StartElement * asStartElement() = 0;\n   virtual ::javax::xml::stream::events::EndElement * asEndElement() = 0;\n   virtual ::javax::xml::stream::events::Characters * asCharacters() = 0;\n-  virtual ::javax::xml::namespace::QName * getSchemaType() = 0;\n+  virtual ::javax::xml::namespace$::QName * getSchemaType() = 0;\n   virtual void writeAsEncodedUnicode(::java::io::Writer *) = 0;\n   static ::java::lang::Class class$;\n } __attribute__ ((java_interface));"}, {"sha": "837f2a89474fe78e158c5e0f9d23b1b032ab814d", "filename": "libjava/javax/xml/stream/events/XMLEvent.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FXMLEvent.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FXMLEvent.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fstream%2Fevents%2FXMLEvent.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -13,7 +13,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -50,7 +50,7 @@ class javax::xml::stream::events::XMLEvent : public ::java::lang::Object\n   virtual ::javax::xml::stream::events::StartElement * asStartElement() = 0;\n   virtual ::javax::xml::stream::events::EndElement * asEndElement() = 0;\n   virtual ::javax::xml::stream::events::Characters * asCharacters() = 0;\n-  virtual ::javax::xml::namespace::QName * getSchemaType() = 0;\n+  virtual ::javax::xml::namespace$::QName * getSchemaType() = 0;\n   virtual void writeAsEncodedUnicode(::java::io::Writer *) = 0;\n   static ::java::lang::Class class$;\n } __attribute__ ((java_interface));"}, {"sha": "0a887d1ee9a78bc6f6025e2175f7bd1ae0b9c593", "filename": "libjava/javax/xml/stream/util/ReaderDelegate.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Futil%2FReaderDelegate.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fstream%2Futil%2FReaderDelegate.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fstream%2Futil%2FReaderDelegate.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -15,7 +15,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class NamespaceContext;\n           class QName;\n@@ -48,14 +48,14 @@ class javax::xml::stream::util::ReaderDelegate : public ::java::lang::Object\n   virtual jboolean hasNext();\n   virtual void close();\n   virtual ::java::lang::String * getNamespaceURI(::java::lang::String *);\n-  virtual ::javax::xml::namespace::NamespaceContext * getNamespaceContext();\n+  virtual ::javax::xml::namespace$::NamespaceContext * getNamespaceContext();\n   virtual jboolean isStartElement();\n   virtual jboolean isEndElement();\n   virtual jboolean isCharacters();\n   virtual jboolean isWhiteSpace();\n   virtual ::java::lang::String * getAttributeValue(::java::lang::String *, ::java::lang::String *);\n   virtual jint getAttributeCount();\n-  virtual ::javax::xml::namespace::QName * getAttributeName(jint);\n+  virtual ::javax::xml::namespace$::QName * getAttributeName(jint);\n   virtual ::java::lang::String * getAttributePrefix(jint);\n   virtual ::java::lang::String * getAttributeNamespace(jint);\n   virtual ::java::lang::String * getAttributeLocalName(jint);\n@@ -74,7 +74,7 @@ class javax::xml::stream::util::ReaderDelegate : public ::java::lang::Object\n   virtual ::java::lang::String * getEncoding();\n   virtual jboolean hasText();\n   virtual ::javax::xml::stream::Location * getLocation();\n-  virtual ::javax::xml::namespace::QName * getName();\n+  virtual ::javax::xml::namespace$::QName * getName();\n   virtual ::java::lang::String * getLocalName();\n   virtual jboolean hasName();\n   virtual ::java::lang::String * getNamespaceURI();"}, {"sha": "a19cd75432dd44f1fc1c1d548818d29238f208c8", "filename": "libjava/javax/xml/xpath/XPath.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fxpath%2FXPath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fxpath%2FXPath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fxpath%2FXPath.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -13,7 +13,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class NamespaceContext;\n           class QName;\n@@ -48,12 +48,12 @@ class javax::xml::xpath::XPath : public ::java::lang::Object\n   virtual ::javax::xml::xpath::XPathVariableResolver * getXPathVariableResolver() = 0;\n   virtual void setXPathFunctionResolver(::javax::xml::xpath::XPathFunctionResolver *) = 0;\n   virtual ::javax::xml::xpath::XPathFunctionResolver * getXPathFunctionResolver() = 0;\n-  virtual void setNamespaceContext(::javax::xml::namespace::NamespaceContext *) = 0;\n-  virtual ::javax::xml::namespace::NamespaceContext * getNamespaceContext() = 0;\n+  virtual void setNamespaceContext(::javax::xml::namespace$::NamespaceContext *) = 0;\n+  virtual ::javax::xml::namespace$::NamespaceContext * getNamespaceContext() = 0;\n   virtual ::javax::xml::xpath::XPathExpression * compile(::java::lang::String *) = 0;\n-  virtual ::java::lang::Object * evaluate(::java::lang::String *, ::java::lang::Object *, ::javax::xml::namespace::QName *) = 0;\n+  virtual ::java::lang::Object * evaluate(::java::lang::String *, ::java::lang::Object *, ::javax::xml::namespace$::QName *) = 0;\n   virtual ::java::lang::String * evaluate(::java::lang::String *, ::java::lang::Object *) = 0;\n-  virtual ::java::lang::Object * evaluate(::java::lang::String *, ::org::xml::sax::InputSource *, ::javax::xml::namespace::QName *) = 0;\n+  virtual ::java::lang::Object * evaluate(::java::lang::String *, ::org::xml::sax::InputSource *, ::javax::xml::namespace$::QName *) = 0;\n   virtual ::java::lang::String * evaluate(::java::lang::String *, ::org::xml::sax::InputSource *) = 0;\n   static ::java::lang::Class class$;\n } __attribute__ ((java_interface));"}, {"sha": "5cb800ce46e28291ef92631555c83c774dacaa4b", "filename": "libjava/javax/xml/xpath/XPathConstants.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fxpath%2FXPathConstants.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fxpath%2FXPathConstants.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fxpath%2FXPathConstants.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -13,7 +13,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -30,11 +30,11 @@ class javax::xml::xpath::XPathConstants : public ::java::lang::Object\n \n   XPathConstants();\n public:\n-  static ::javax::xml::namespace::QName * NUMBER;\n-  static ::javax::xml::namespace::QName * STRING;\n-  static ::javax::xml::namespace::QName * BOOLEAN;\n-  static ::javax::xml::namespace::QName * NODESET;\n-  static ::javax::xml::namespace::QName * NODE;\n+  static ::javax::xml::namespace$::QName * NUMBER;\n+  static ::javax::xml::namespace$::QName * STRING;\n+  static ::javax::xml::namespace$::QName * BOOLEAN;\n+  static ::javax::xml::namespace$::QName * NODESET;\n+  static ::javax::xml::namespace$::QName * NODE;\n   static ::java::lang::String * DOM_OBJECT_MODEL;\n   static ::java::lang::Class class$;\n };"}, {"sha": "389e5f69d9a89c641a20d97d57eb2b3746d2fee1", "filename": "libjava/javax/xml/xpath/XPathExpression.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fxpath%2FXPathExpression.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fxpath%2FXPathExpression.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fxpath%2FXPathExpression.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -13,7 +13,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -39,9 +39,9 @@ class javax::xml::xpath::XPathExpression : public ::java::lang::Object\n {\n \n public:\n-  virtual ::java::lang::Object * evaluate(::java::lang::Object *, ::javax::xml::namespace::QName *) = 0;\n+  virtual ::java::lang::Object * evaluate(::java::lang::Object *, ::javax::xml::namespace$::QName *) = 0;\n   virtual ::java::lang::String * evaluate(::java::lang::Object *) = 0;\n-  virtual ::java::lang::Object * evaluate(::org::xml::sax::InputSource *, ::javax::xml::namespace::QName *) = 0;\n+  virtual ::java::lang::Object * evaluate(::org::xml::sax::InputSource *, ::javax::xml::namespace$::QName *) = 0;\n   virtual ::java::lang::String * evaluate(::org::xml::sax::InputSource *) = 0;\n   static ::java::lang::Class class$;\n } __attribute__ ((java_interface));"}, {"sha": "106122767a31905022ded830383d64dbfd6c579b", "filename": "libjava/javax/xml/xpath/XPathFunctionResolver.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fxpath%2FXPathFunctionResolver.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fxpath%2FXPathFunctionResolver.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fxpath%2FXPathFunctionResolver.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -13,7 +13,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -30,7 +30,7 @@ class javax::xml::xpath::XPathFunctionResolver : public ::java::lang::Object\n {\n \n public:\n-  virtual ::javax::xml::xpath::XPathFunction * resolveFunction(::javax::xml::namespace::QName *, jint) = 0;\n+  virtual ::javax::xml::xpath::XPathFunction * resolveFunction(::javax::xml::namespace$::QName *, jint) = 0;\n   static ::java::lang::Class class$;\n } __attribute__ ((java_interface));\n "}, {"sha": "dfbd63592b1ef3981c167a70820d707c63423bc5", "filename": "libjava/javax/xml/xpath/XPathVariableResolver.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fxpath%2FXPathVariableResolver.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad1aba1f8d179027d2b5532d43024edfa7e903e/libjava%2Fjavax%2Fxml%2Fxpath%2FXPathVariableResolver.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fxml%2Fxpath%2FXPathVariableResolver.h?ref=3ad1aba1f8d179027d2b5532d43024edfa7e903e", "patch": "@@ -13,7 +13,7 @@ extern \"Java\"\n   {\n     namespace xml\n     {\n-      namespace namespace\n+      namespace namespace$\n       {\n           class QName;\n       }\n@@ -29,7 +29,7 @@ class javax::xml::xpath::XPathVariableResolver : public ::java::lang::Object\n {\n \n public:\n-  virtual ::java::lang::Object * resolveVariable(::javax::xml::namespace::QName *) = 0;\n+  virtual ::java::lang::Object * resolveVariable(::javax::xml::namespace$::QName *) = 0;\n   static ::java::lang::Class class$;\n } __attribute__ ((java_interface));\n "}]}