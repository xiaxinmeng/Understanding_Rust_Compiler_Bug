{"sha": "ad3f0d0806d64ae8ceddfbde1560d4829085202b", "node_id": "C_kwDOANBUbNoAKGFkM2YwZDA4MDZkNjRhZThjZWRkZmJkZTE1NjBkNDgyOTA4NTIwMmI", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-01-14T00:16:30Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-01-14T00:16:30Z"}, "message": "Daily bump.", "tree": {"sha": "3a11ea786c31da79eabe1389ced7673c829ca3a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a11ea786c31da79eabe1389ced7673c829ca3a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad3f0d0806d64ae8ceddfbde1560d4829085202b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad3f0d0806d64ae8ceddfbde1560d4829085202b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad3f0d0806d64ae8ceddfbde1560d4829085202b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad3f0d0806d64ae8ceddfbde1560d4829085202b/comments", "author": null, "committer": null, "parents": [{"sha": "a24ced4a95ea82c40df766ba0779597ba3d76433", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a24ced4a95ea82c40df766ba0779597ba3d76433", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a24ced4a95ea82c40df766ba0779597ba3d76433"}], "stats": {"total": 441, "additions": 440, "deletions": 1}, "files": [{"sha": "4d5e8c3a9c64c5bd5c1436df87e5e48ac33271ab", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad3f0d0806d64ae8ceddfbde1560d4829085202b/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad3f0d0806d64ae8ceddfbde1560d4829085202b/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=ad3f0d0806d64ae8ceddfbde1560d4829085202b", "patch": "@@ -1,3 +1,7 @@\n+2022-01-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* Makefile.am: Remove.\n+\n 2022-01-11  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \t* Makefile.am: New file."}, {"sha": "89ca7fd681e5e46c15d27c6d194198bea75b1d9f", "filename": "contrib/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad3f0d0806d64ae8ceddfbde1560d4829085202b/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad3f0d0806d64ae8ceddfbde1560d4829085202b/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=ad3f0d0806d64ae8ceddfbde1560d4829085202b", "patch": "@@ -1,3 +1,8 @@\n+2022-01-13  Martin Liska  <mliska@suse.cz>\n+\n+\t* git-backport.py: Simplify the script as pre-auto-ChangeLog era\n+\tis 14 months old.\n+\n 2022-01-11  Martin Liska  <mliska@suse.cz>\n \n \t* check-MAINTAINERS.py: Use sys.argv[1] as path to MAINTAINERS."}, {"sha": "d9d8ddac636e6eb0caf096bb0de42aa9d469111d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 136, "deletions": 0, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad3f0d0806d64ae8ceddfbde1560d4829085202b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad3f0d0806d64ae8ceddfbde1560d4829085202b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ad3f0d0806d64ae8ceddfbde1560d4829085202b", "patch": "@@ -1,3 +1,139 @@\n+2022-01-13  Anthony Sharp  <anthonysharp15@gmail.com>\n+\t    Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/70417\n+\t* doc/invoke.texi: Documentation for Wmissing-template-keyword.\n+\n+2022-01-13  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/103861\n+\t* config/i386/i386.md (*ashlqi_ext<mode>_2): New insn pattern.\n+\t(*<any_shiftrt:insn>qi_ext<mode>_2): Ditto.\n+\t* config/i386/mmx.md (<any_shift:insn>v2qi):\n+\tNew insn_and_split pattern.\n+\n+2022-01-13  Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\t* internal-fn.c (expand_partial_load_optab_fn): Add bias.\n+\t(expand_partial_store_optab_fn): Likewise.\n+\t(internal_len_load_store_bias): New function.\n+\t* internal-fn.h (VECT_PARTIAL_BIAS_UNSUPPORTED): New define.\n+\t(internal_len_load_store_bias): New function.\n+\t* tree-vect-loop-manip.c (vect_set_loop_controls_directly): Set bias.\n+\t(vect_set_loop_condition_partial_vectors): Add header_seq parameter.\n+\t* tree-vect-loop.c (vect_verify_loop_lens): Verify bias.\n+\t(vect_estimate_min_profitable_iters): Account for bias.\n+\t(vect_get_loop_len): Add bias-adjusted length.\n+\t* tree-vect-stmts.c (vectorizable_store): Use.\n+\t(vectorizable_load): Use.\n+\t* tree-vectorizer.h (struct rgroup_controls): Add bias-adjusted length.\n+\t(LOOP_VINFO_PARTIAL_LOAD_STORE_BIAS): New macro.\n+\t* config/rs6000/vsx.md: Use const0 bias predicate.\n+\t* doc/md.texi: Document bias value.\n+\n+2022-01-13  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/83072\n+\tPR tree-optimization/83073\n+\tPR tree-optimization/97909\n+\t* fold-const.c (expr_not_equal_to): Use a multi-range class.\n+\n+2022-01-13  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/96707\n+\t* range-op.cc (operator_rshift::lhs_op1_relation): New.\n+\n+2022-01-13  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/mmx.md (negv2qi): Disparage GPR alternative a bit.\n+\tDisable for TARGET_PARTIAL_REG_STALL unless optimizing for size.\n+\t(negv2qi splitters): Use lowpart_subreg instead of\n+\tgen_lowpart to create subreg.\n+\t(<plusminus:insn>v2qi3): Disparage GPR alternative a bit.\n+\tDisable for TARGET_PARTIAL_REG_STALL unless optimizing for size.\n+\t(<plusminus:insn>v2qi3 splitters): Use lowpart_subreg instead of\n+\tgen_lowpart to create subreg.\n+\t* config/i386/i386.md (*subqi_ext<mode>_2): Move.\n+\n+2022-01-13  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/104003\n+\t* config/i386/mmx.md (*xop_pcmov_<mode>): Use VI_16_32 mode iterator.\n+\n+2022-01-13  Martin Liska  <mliska@suse.cz>\n+\n+\t* common/config/arm/arm-common.c (arm_target_mode): Wrap\n+\tkeywords with %<, %> and remove trailing punctuation char.\n+\t(arm_canon_arch_option_1): Likewise.\n+\t(arm_asm_auto_mfpu): Likewise.\n+\t* config/arm/arm-builtins.c (arm_expand_builtin): Likewise.\n+\t* config/arm/arm.c (arm_options_perform_arch_sanity_checks): Likewise.\n+\t(use_vfp_abi): Likewise.\n+\t(aapcs_vfp_is_call_or_return_candidate): Likewise.\n+\t(arm_handle_cmse_nonsecure_entry): Likewise.\n+\t(arm_handle_cmse_nonsecure_call): Likewise.\n+\t(thumb1_md_asm_adjust): Likewise.\n+\n+2022-01-13  Paul A. Clarke  <pc@us.ibm.com>\n+\n+\t* config/rs6000/smmintrin.h (_mm_round_pd, _mm_round_ps,\n+\t_mm_round_sd, _mm_round_ss, _MM_FROUND_TO_NEAREST_INT,\n+\t_MM_FROUND_TO_ZERO, _MM_FROUND_TO_POS_INF, _MM_FROUND_TO_NEG_INF,\n+\t_MM_FROUND_CUR_DIRECTION, _MM_FROUND_RAISE_EXC, _MM_FROUND_NO_EXC,\n+\t_MM_FROUND_NINT, _MM_FROUND_FLOOR, _MM_FROUND_CEIL, _MM_FROUND_TRUNC,\n+\t_MM_FROUND_RINT, _MM_FROUND_NEARBYINT): New.\n+\t(_mm_ceil_pd, _mm_ceil_ps, _mm_ceil_sd, _mm_ceil_ss, _mm_floor_pd,\n+\t_mm_floor_ps, _mm_floor_sd, _mm_floor_ss): Convert from function to\n+\tmacro.\n+\n+2022-01-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/103989\n+\t* tree-inline.c (setup_one_parameter): Don't copy parms with\n+\tempty type.\n+\n+2022-01-13  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* tree-streamer-out.c (pack_ts_base_value_fields): Don't pack\n+\t'TYPE_ADDR_SPACE' for offloading.\n+\t* tree-streamer-in.c (unpack_ts_base_value_fields): Don't unpack\n+\t'TYPE_ADDR_SPACE' for offloading.\n+\n+2022-01-13  Julian Brown  <julian@codesourcery.com>\n+\t    Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* omp-oacc-kernels-decompose.cc (add_wait): New function, split out\n+\tof...\n+\t(add_async_clauses_and_wait): ...here. Call new outlined function.\n+\t(decompose_kernels_region_body): Add wait at the end of\n+\texplicitly-asynchronous kernels regions.\n+\n+2022-01-13  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR middle-end/100280\n+\t* omp-oacc-kernels-decompose.cc (maybe_build_inner_data_region):\n+\tMark variables used in synthesized data clauses as addressable.\n+\n+2022-01-13  Martin Liska  <mliska@suse.cz>\n+\n+\t* config/epiphany/epiphany.c (epiphany_mode_priority):\n+\tUse gcc_unreachable for not handled cases.\n+\n+2022-01-13  Martin Liska  <mliska@suse.cz>\n+\n+\t* config/epiphany/epiphany.c (epiphany_handle_interrupt_attribute):\n+\tUse %qs format specifier.\n+\t(epiphany_override_options): Wrap keyword in %<, %>.\n+\n+2022-01-13  Haochen Jiang  <haochen.jiang@intel.com>\n+\n+\tPR target/94790\n+\t* config/i386/i386.md (*xor2andn): New define_insn_and_split.\n+\n+2022-01-13  Xionghu Luo  <luoxhu@linux.ibm.com>\n+\n+\t* config/rs6000/altivec.md (sldoi_to_mov<mode>): New.\n+\n 2022-01-12  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \tPR target/100637"}, {"sha": "b0d3d8e27529dc48f2dd5eb7bd37eb31e775bd9b", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad3f0d0806d64ae8ceddfbde1560d4829085202b/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad3f0d0806d64ae8ceddfbde1560d4829085202b/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=ad3f0d0806d64ae8ceddfbde1560d4829085202b", "patch": "@@ -1 +1 @@\n-20220113\n+20220114"}, {"sha": "3a2a846908c254527c00a627ecb2745f6805cfed", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad3f0d0806d64ae8ceddfbde1560d4829085202b/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad3f0d0806d64ae8ceddfbde1560d4829085202b/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=ad3f0d0806d64ae8ceddfbde1560d4829085202b", "patch": "@@ -1,3 +1,14 @@\n+2022-01-13  Anthony Sharp  <anthonysharp15@gmail.com>\n+\t    Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/70417\n+\t* c.opt: Added -Wmissing-template-keyword.\n+\n+2022-01-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR c/104002\n+\t* c-common.c (c_common_mark_addressable_vec): Handle TARGET_EXPR.\n+\n 2022-01-12  Martin Liska  <mliska@suse.cz>\n \n \tPR target/103804"}, {"sha": "d823a61c1b9685526b7d10e361f9d85e45e11b05", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad3f0d0806d64ae8ceddfbde1560d4829085202b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad3f0d0806d64ae8ceddfbde1560d4829085202b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ad3f0d0806d64ae8ceddfbde1560d4829085202b", "patch": "@@ -1,3 +1,22 @@\n+2022-01-13  Anthony Sharp  <anthonysharp15@gmail.com>\n+\t    Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/70417\n+\t* parser.c (cp_parser_id_expression): Handle\n+\t-Wmissing-template-keyword.\n+\t(struct saved_token_sentinel): Add modes to control what happens\n+\ton destruction.\n+\t(cp_parser_statement): Adjust.\n+\t(cp_parser_skip_entire_template_parameter_list): New function that\n+\tskips an entire template parameter list.\n+\t(cp_parser_require_end_of_template_parameter_list): Rename old\n+\tcp_parser_skip_to_end_of_template_parameter_list.\n+\t(cp_parser_skip_to_end_of_template_parameter_list): Refactor to be\n+\tcalled from one of the above two functions.\n+\t(cp_parser_lambda_declarator_opt)\n+\t(cp_parser_explicit_template_declaration)\n+\t(cp_parser_enclosed_template_argument_list): Adjust.\n+\n 2022-01-12  Jakub Jelinek  <jakub@redhat.com>\n \t    Jason Merrill  <jason@redhat.com>\n "}, {"sha": "c08f3c1902b9a9ca5cca7fc66a719b89cb2dd789", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad3f0d0806d64ae8ceddfbde1560d4829085202b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad3f0d0806d64ae8ceddfbde1560d4829085202b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ad3f0d0806d64ae8ceddfbde1560d4829085202b", "patch": "@@ -1,3 +1,30 @@\n+2022-01-13  Hafiz Abid Qadeer  <abidh@codesourcery.com>\n+\n+\t* dump-parse-tree.c (show_omp_clauses): Handle OMP_LIST_ALLOCATE.\n+\t* gfortran.h (OMP_LIST_ALLOCATE): New enum value.\n+\t* openmp.c (enum omp_mask1): Add OMP_CLAUSE_ALLOCATE.\n+\t(gfc_match_omp_clauses): Handle OMP_CLAUSE_ALLOCATE\n+\t(OMP_PARALLEL_CLAUSES, OMP_DO_CLAUSES, OMP_SECTIONS_CLAUSES)\n+\t(OMP_TASK_CLAUSES, OMP_TASKLOOP_CLAUSES, OMP_TARGET_CLAUSES)\n+\t(OMP_TEAMS_CLAUSES, OMP_DISTRIBUTE_CLAUSES)\n+\t(OMP_SINGLE_CLAUSES): Add OMP_CLAUSE_ALLOCATE.\n+\t(OMP_TASKGROUP_CLAUSES): New.\n+\t(gfc_match_omp_taskgroup): Use OMP_TASKGROUP_CLAUSES instead of\n+\tOMP_CLAUSE_TASK_REDUCTION.\n+\t(resolve_omp_clauses): Handle OMP_LIST_ALLOCATE.\n+\t(resolve_omp_do): Avoid warning when loop iteration variable is\n+\tin allocate clause.\n+\t* trans-openmp.c (gfc_trans_omp_clauses): Handle translation of\n+\tallocate clause.\n+\t(gfc_split_omp_clauses): Update for OMP_LIST_ALLOCATE.\n+\n+2022-01-13  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/67804\n+\t* primary.c (gfc_match_structure_constructor): Recover from errors\n+\tthat occurred while checking for a valid structure constructor in\n+\ta DATA statement.\n+\n 2022-01-11  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \t* libgfortran.h (unit_convert): Add flags."}, {"sha": "e91aeea9037f35265ab437438886090177bec873", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 154, "deletions": 0, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad3f0d0806d64ae8ceddfbde1560d4829085202b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad3f0d0806d64ae8ceddfbde1560d4829085202b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ad3f0d0806d64ae8ceddfbde1560d4829085202b", "patch": "@@ -1,3 +1,157 @@\n+2022-01-13  Anthony Sharp  <anthonysharp15@gmail.com>\n+\t    Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/70417\n+\t* g++.dg/cpp0x/variadic-mem_fn2.C: Catch warning about missing\n+\ttemplate keyword.\n+\t* g++.dg/template/dependent-name17.C: New test.\n+\t* g++.dg/template/dependent-name18.C: New test.\n+\n+2022-01-13  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/103861\n+\t* gcc.target/i386/pr103861.c (shl,ashr,lshr): New tests.\n+\n+2022-01-13  Hafiz Abid Qadeer  <abidh@codesourcery.com>\n+\n+\t* gfortran.dg/gomp/allocate-1.f90: New test.\n+\t* gfortran.dg/gomp/allocate-2.f90: New test.\n+\t* gfortran.dg/gomp/allocate-3.f90: New test.\n+\t* gfortran.dg/gomp/collapse1.f90: Update error message.\n+\t* gfortran.dg/gomp/openmp-simd-4.f90: Likewise.\n+\t* gfortran.dg/gomp/clauses-1.f90: Uncomment allocate clause.\n+\n+2022-01-13  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/83072\n+\tPR tree-optimization/83073\n+\tPR tree-optimization/97909\n+\t* gcc.dg/pr83072-2.c: New.\n+\t* gcc.dg/pr83073.c: New.\n+\n+2022-01-13  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/96707\n+\t* g++.dg/pr96707.C: New.\n+\n+2022-01-13  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/67804\n+\t* gfortran.dg/pr93604.f90: Adjust to changed diagnostics.\n+\t* gfortran.dg/pr67804.f90: New test.\n+\n+2022-01-13  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/104003\n+\t* g++.target/i386/pr103861-1-sse4.C: New test.\n+\t* g++.target/i386/pr103861-1-xop.C: Ditto.\n+\n+2022-01-13  Paul A. Clarke  <pc@us.ibm.com>\n+\n+\t* gcc.target/powerpc/sse4_1-round3.h: New.\n+\t* gcc.target/powerpc/sse4_1-roundpd.c: New.\n+\t* gcc.target/powerpc/sse4_1-roundps.c: New.\n+\t* gcc.target/powerpc/sse4_1-roundsd.c: New.\n+\t* gcc.target/powerpc/sse4_1-roundss.c: New.\n+\n+2022-01-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR c/104002\n+\t* c-c++-common/builtin-shufflevector-3.c: Move ...\n+\t* c-c++-common/torture/builtin-shufflevector-3.c: ... here.\n+\n+2022-01-13  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* c-c++-common/goacc/routine-6.c: Merge into...\n+\t* c-c++-common/goacc/routine-5.c: ... this, and document current\n+\tC/C++ difference.\n+\n+2022-01-13  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* c-c++-common/goacc/builtin-goacc-parlevel-id-size.c: Document\n+\tcurrent '-Wuninitialized' diagnostics.\n+\t* c-c++-common/goacc/mdc-1.c: Likewise.\n+\t* c-c++-common/goacc/nested-reductions-1-kernels.c: Likewise.\n+\t* c-c++-common/goacc/nested-reductions-1-parallel.c: Likewise.\n+\t* c-c++-common/goacc/nested-reductions-1-routine.c: Likewise.\n+\t* c-c++-common/goacc/nested-reductions-2-kernels.c: Likewise.\n+\t* c-c++-common/goacc/nested-reductions-2-parallel.c: Likewise.\n+\t* c-c++-common/goacc/nested-reductions-2-routine.c: Likewise.\n+\t* c-c++-common/goacc/uninit-dim-clause.c: Likewise.\n+\t* c-c++-common/goacc/uninit-firstprivate-clause.c: Likewise.\n+\t* c-c++-common/goacc/uninit-if-clause.c: Likewise.\n+\t* gfortran.dg/goacc/array-with-dt-1.f90: Likewise.\n+\t* gfortran.dg/goacc/array-with-dt-2.f90: Likewise.\n+\t* gfortran.dg/goacc/array-with-dt-3.f90: Likewise.\n+\t* gfortran.dg/goacc/array-with-dt-4.f90: Likewise.\n+\t* gfortran.dg/goacc/array-with-dt-5.f90: Likewise.\n+\t* gfortran.dg/goacc/derived-chartypes-1.f90: Likewise.\n+\t* gfortran.dg/goacc/derived-chartypes-2.f90: Likewise.\n+\t* gfortran.dg/goacc/derived-chartypes-3.f90: Likewise.\n+\t* gfortran.dg/goacc/derived-chartypes-4.f90: Likewise.\n+\t* gfortran.dg/goacc/derived-classtypes-1.f95: Likewise.\n+\t* gfortran.dg/goacc/derived-types-2.f90: Likewise.\n+\t* gfortran.dg/goacc/host_data-tree.f95: Likewise.\n+\t* gfortran.dg/goacc/kernels-tree.f95: Likewise.\n+\t* gfortran.dg/goacc/modules.f95: Likewise.\n+\t* gfortran.dg/goacc/nested-reductions-1-kernels.f90: Likewise.\n+\t* gfortran.dg/goacc/nested-reductions-1-parallel.f90: Likewise.\n+\t* gfortran.dg/goacc/nested-reductions-1-routine.f90: Likewise.\n+\t* gfortran.dg/goacc/nested-reductions-2-kernels.f90: Likewise.\n+\t* gfortran.dg/goacc/nested-reductions-2-parallel.f90: Likewise.\n+\t* gfortran.dg/goacc/nested-reductions-2-routine.f90: Likewise.\n+\t* gfortran.dg/goacc/parallel-tree.f95: Likewise.\n+\t* gfortran.dg/goacc/pr93464.f90: Likewise.\n+\t* gfortran.dg/goacc/privatization-1-compute-loop.f90: Likewise.\n+\t* gfortran.dg/goacc/privatization-1-compute.f90: Likewise.\n+\t* gfortran.dg/goacc/privatization-1-routine_gang-loop.f90:\n+\tLikewise.\n+\t* gfortran.dg/goacc/privatization-1-routine_gang.f90: Likewise.\n+\t* gfortran.dg/goacc/uninit-dim-clause.f95: Likewise.\n+\t* gfortran.dg/goacc/uninit-firstprivate-clause.f95: Likewise.\n+\t* gfortran.dg/goacc/uninit-if-clause.f95: Likewise.\n+\t* gfortran.dg/goacc/uninit-use-device-clause.f95: Likewise.\n+\t* gfortran.dg/goacc/wait.f90: Likewise.\n+\n+2022-01-13  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR middle-end/100280\n+\t* c-c++-common/goacc/kernels-decompose-pr100280-1.c: New.\n+\t* c-c++-common/goacc/classify-kernels-parloops.c: Likewise.\n+\t* c-c++-common/goacc/classify-kernels-unparallelized-parloops.c:\n+\tLikewise.\n+\t* c-c++-common/goacc/classify-kernels-unparallelized.c: Test\n+\t'--param openacc-kernels=decompose'.\n+\t* c-c++-common/goacc/classify-kernels.c: Likewise.\n+\t* c-c++-common/goacc/kernels-decompose-2.c: Update.\n+\t* c-c++-common/goacc/kernels-decompose-ice-1.c: Remove.\n+\t* c-c++-common/goacc/kernels-decompose-ice-2.c: Likewise.\n+\t* gfortran.dg/goacc/classify-kernels-parloops.f95: New.\n+\t* gfortran.dg/goacc/classify-kernels-unparallelized-parloops.f95:\n+\tLikewise.\n+\t* gfortran.dg/goacc/classify-kernels-unparallelized.f95: Test\n+\t'--param openacc-kernels=decompose'.\n+\t* gfortran.dg/goacc/classify-kernels.f95: Likewise.\n+\n+2022-01-13  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* c-c++-common/goacc/kernels-decompose-1.c: Enhance.\n+\t* c-c++-common/goacc/kernels-decompose-2.c: Likewise.\n+\t* c-c++-common/goacc/kernels-decompose-ice-1.c: Likewise.\n+\t* c-c++-common/goacc/kernels-decompose-ice-2.c: Likewise.\n+\t* gfortran.dg/goacc/kernels-decompose-1.f95: Likewise.\n+\t* gfortran.dg/goacc/kernels-decompose-2.f95: Likewise.\n+\n+2022-01-13  Haochen Jiang  <haochen.jiang@intel.com>\n+\n+\tPR target/94790\n+\t* gcc.target/i386/pr94790-1.c: New test.\n+\t* gcc.target/i386/pr94790-2.c: Ditto.\n+\n+2022-01-13  Xionghu Luo  <luoxhu@linux.ibm.com>\n+\n+\t* gcc.target/powerpc/sldoi_to_mov.c: New test.\n+\n 2022-01-12  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \tPR target/103941"}, {"sha": "fbd5372eddd8e2ca441d217a28b3a548b327411d", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad3f0d0806d64ae8ceddfbde1560d4829085202b/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad3f0d0806d64ae8ceddfbde1560d4829085202b/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=ad3f0d0806d64ae8ceddfbde1560d4829085202b", "patch": "@@ -1,3 +1,10 @@\n+2022-01-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libfortran/104006\n+\t* Makefile.am (gfortran.map-sun): Rename target to ...\n+\t(gfortran.ver-sun): ... this.\n+\t* Makefile.in: Regenerated.\n+\n 2022-01-12  Jakub Jelinek  <jakub@redhat.com>\n \n \t* libgfortran.h (POWER_IEEE128): Use __GLIBC_PREREQ in a separate"}, {"sha": "85ec4bcfa14987aa4c17dea58cfe8aa362c0a761", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad3f0d0806d64ae8ceddfbde1560d4829085202b/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad3f0d0806d64ae8ceddfbde1560d4829085202b/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=ad3f0d0806d64ae8ceddfbde1560d4829085202b", "patch": "@@ -1,3 +1,79 @@\n+2022-01-13  Hafiz Abid Qadeer  <abidh@codesourcery.com>\n+\n+\t* testsuite/libgomp.fortran/allocate-1.c: New test.\n+\t* testsuite/libgomp.fortran/allocate-1.f90: New test.\n+\t* libgomp.texi: Remove string that says that allocate clause\n+\tsupport is for C/C++ only.\n+\n+2022-01-13  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* testsuite/libgomp.c-c++-common/on_device_arch.h\n+\t(any_device_arch, any_device_arch_intel_mic): New.\n+\t* testsuite/lib/libgomp.exp\n+\t(check_effective_target_offload_device_any_intel_mic): New.\n+\t* testsuite/libgomp.c-c++-common/target-45.c: Use it.\n+\t* testsuite/libgomp.fortran/target10.f90: Likewise.\n+\n+2022-01-13  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR tree-optimization/102192\n+\t* testsuite/libgomp.oacc-fortran/routine-10.f90: Document current\n+\t'-Wuninitialized' diagnostics.\n+\n+2022-01-13  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-c-c++-common/vred2d-128.c: Document\n+\tcurrent '-Wuninitialized' diagnostics.\n+\t* testsuite/libgomp.oacc-fortran/data-5.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/gemm-2.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/gemm.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/optional-reduction.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/parallel-reduction.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/pr70643.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/pr96628-part1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/privatized-ref-2.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/reduction-5.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/reduction-7.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/reference-reductions.f90:\n+\tLikewise.\n+\n+2022-01-13  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* testsuite/libgomp.c/address-space-1.c: Remove 'dg-xfail-run-if'\n+\tfor 'offload_device_intel_mic'.\n+\n+2022-01-13  Julian Brown  <julian@codesourcery.com>\n+\t    Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-c-c++-common/f-asyncwait-1.c: Remove GCN\n+\toffloading execution XFAIL.\n+\n+2022-01-13  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR middle-end/100280\n+\t* testsuite/libgomp.oacc-c-c++-common/declare-vla-kernels-decompose-ice-1.c:\n+\tUpdate.\n+\t* testsuite/libgomp.oacc-c-c++-common/f-asyncwait-1.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-decompose-1.c:\n+\tLikewise.\n+\n+2022-01-13  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-c-c++-common/declare-vla-kernels-decompose-ice-1.c:\n+\tEnhance.\n+\t* testsuite/libgomp.oacc-c-c++-common/declare-vla-kernels-decompose.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/declare-vla.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/f-asyncwait-1.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/f-asyncwait-2.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/f-asyncwait-3.c: Likewise.\n+\t* testsuite/libgomp.oacc-c-c++-common/kernels-decompose-1.c:\n+\tLikewise.\n+\t* testsuite/libgomp.oacc-fortran/asyncwait-1.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/asyncwait-2.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/asyncwait-3.f90: Likewise.\n+\t* testsuite/libgomp.oacc-fortran/pr94358-1.f90: Likewise.\n+\n 2022-01-04  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* testsuite/libgomp.c-c++-common/target-45.c: Iterate over all devices."}]}