{"sha": "8d9d9172904ef71ad7edc1f3ee3bb725dc294948", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ5ZDkxNzI5MDRlZjcxYWQ3ZWRjMWYzZWUzYmI3MjVkYzI5NDk0OA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2008-11-16T20:25:40Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2008-11-16T20:25:40Z"}, "message": "re PR target/38052 (genautomata segfaults when -O2 is enabled)\n\ngcc/\n\tPR target/38052\n\t* config/mips/mips.c (machine_function): Update the comment\n\tabove global_pointer.\n\t(mips_global_pointer): Use INVALID_REGNUM rather than 0 to indicate\n\tthat a function doesn't need a global pointer.\n\t(mips_current_loadgp_style): Update accordingly.\n\t(mips_restore_gp): Likewise.\n\t(mips_output_cplocal): Likewise.\n\t(mips_expand_prologue): Likewise.\n\nFrom-SVN: r141925", "tree": {"sha": "3e5227a53546095efad873921849c46f852055f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e5227a53546095efad873921849c46f852055f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d9d9172904ef71ad7edc1f3ee3bb725dc294948", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d9d9172904ef71ad7edc1f3ee3bb725dc294948", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d9d9172904ef71ad7edc1f3ee3bb725dc294948", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d9d9172904ef71ad7edc1f3ee3bb725dc294948/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "26237a509b4bba485dc868cfa8b9decc61d77d33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26237a509b4bba485dc868cfa8b9decc61d77d33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26237a509b4bba485dc868cfa8b9decc61d77d33"}], "stats": {"total": 33, "additions": 23, "deletions": 10}, "files": [{"sha": "ba593aec95ef4efe88a39cdcacd710ed5a6a5f61", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d9d9172904ef71ad7edc1f3ee3bb725dc294948/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d9d9172904ef71ad7edc1f3ee3bb725dc294948/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d9d9172904ef71ad7edc1f3ee3bb725dc294948", "patch": "@@ -1,3 +1,15 @@\n+2008-11-16  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\tPR target/38052\n+\t* config/mips/mips.c (machine_function): Update the comment\n+\tabove global_pointer.\n+\t(mips_global_pointer): Use INVALID_REGNUM rather than 0 to indicate\n+\tthat a function doesn't need a global pointer.\n+\t(mips_current_loadgp_style): Update accordingly.\n+\t(mips_restore_gp): Likewise.\n+\t(mips_output_cplocal): Likewise.\n+\t(mips_expand_prologue): Likewise.\n+\n 2008-11-16  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/sparc/sparc.c (function_arg_vector_value): Remove 'base_mode'"}, {"sha": "4244a9f6848c6f5cffa5b9c354fe8d1f8bde7936", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d9d9172904ef71ad7edc1f3ee3bb725dc294948/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d9d9172904ef71ad7edc1f3ee3bb725dc294948/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=8d9d9172904ef71ad7edc1f3ee3bb725dc294948", "patch": "@@ -292,7 +292,8 @@ struct machine_function GTY(()) {\n   /* The current frame information, calculated by mips_compute_frame_info.  */\n   struct mips_frame_info frame;\n \n-  /* The register to use as the function's global pointer.  */\n+  /* The register to use as the function's global pointer, or INVALID_REGNUM\n+     if the function doesn't need one.  */\n   unsigned int global_pointer;\n \n   /* True if mips_adjust_insn_length should ignore an instruction's\n@@ -8358,8 +8359,8 @@ mips16_cfun_returns_in_fpr_p (void)\n }\n \n /* Return the register that should be used as the global pointer\n-   within this function.  Return 0 if the function doesn't need\n-   a global pointer.  */\n+   within this function.  Return INVALID_REGNUM if the function\n+   doesn't need a global pointer.  */\n \n static unsigned int\n mips_global_pointer (void)\n@@ -8394,7 +8395,7 @@ mips_global_pointer (void)\n \t -call_nonpic code, no new uses will be introduced during or after\n \t reload.  */\n       if (TARGET_ABICALLS_PIC0)\n-\treturn 0;\n+\treturn INVALID_REGNUM;\n \n       /* We need to handle the following implicit gp references:\n \n@@ -8416,7 +8417,7 @@ mips_global_pointer (void)\n \t   external libgcc routine.  */\n       if (!crtl->uses_const_pool\n \t  && !mips16_cfun_returns_in_fpr_p ())\n-\treturn 0;\n+\treturn INVALID_REGNUM;\n     }\n \n   /* We need a global pointer, but perhaps we can use a call-clobbered\n@@ -8659,7 +8660,7 @@ mips_compute_frame_info (void)\n enum mips_loadgp_style\n mips_current_loadgp_style (void)\n {\n-  if (!TARGET_USE_GOT || cfun->machine->global_pointer == 0)\n+  if (!TARGET_USE_GOT || cfun->machine->global_pointer == INVALID_REGNUM)\n     return LOADGP_NONE;\n \n   if (TARGET_RTP_PIC)\n@@ -8809,7 +8810,7 @@ mips_restore_gp (rtx temp)\n {\n   gcc_assert (TARGET_ABICALLS && TARGET_OLDABI);\n \n-  if (cfun->machine->global_pointer == 0)\n+  if (cfun->machine->global_pointer == INVALID_REGNUM)\n     return;\n \n   if (TARGET_MIPS16)\n@@ -8886,7 +8887,7 @@ static void\n mips_output_cplocal (void)\n {\n   if (!TARGET_EXPLICIT_RELOCS\n-      && cfun->machine->global_pointer > 0\n+      && cfun->machine->global_pointer != INVALID_REGNUM\n       && cfun->machine->global_pointer != GLOBAL_POINTER_REGNUM)\n     output_asm_insn (\".cplocal %+\", 0);\n }\n@@ -9122,7 +9123,7 @@ mips_expand_prologue (void)\n   unsigned int nargs;\n   rtx insn;\n \n-  if (cfun->machine->global_pointer > 0)\n+  if (cfun->machine->global_pointer != INVALID_REGNUM)\n     SET_REGNO (pic_offset_table_rtx, cfun->machine->global_pointer);\n \n   frame = &cfun->machine->frame;\n@@ -9240,7 +9241,7 @@ mips_expand_prologue (void)\n \n   /* Initialize the $gp save slot.  */\n   if (frame->cprestore_size > 0\n-      && cfun->machine->global_pointer != 0)\n+      && cfun->machine->global_pointer != INVALID_REGNUM)\n     {\n       if (TARGET_MIPS16)\n \tmips_emit_move (mips_cprestore_slot (MIPS_PROLOGUE_TEMP (Pmode)),"}]}