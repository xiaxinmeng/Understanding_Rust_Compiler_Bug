{"sha": "7b37a0c548b633d91e07fbb2c941828aafd5cd3b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2IzN2EwYzU0OGI2MzNkOTFlMDdmYmIyYzk0MTgyOGFhZmQ1Y2QzYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-06-29T14:09:03Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-06-29T14:09:03Z"}, "message": "init.c (build_value_init): Decide whether or not to zero-initialize based on user-providedness of default...\n\n\t* init.c (build_value_init): Decide whether or not to zero-initialize\n\tbased on user-providedness of default ctor, not any ctor.\n\t(build_value_init_noctor): Adjust assert.\n\nFrom-SVN: r175640", "tree": {"sha": "e966a3c2683437fd89e8b86e732a7bade6ed2775", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e966a3c2683437fd89e8b86e732a7bade6ed2775"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b37a0c548b633d91e07fbb2c941828aafd5cd3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b37a0c548b633d91e07fbb2c941828aafd5cd3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b37a0c548b633d91e07fbb2c941828aafd5cd3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b37a0c548b633d91e07fbb2c941828aafd5cd3b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2061820e0d4998d1792021cfa7283c2ce345b093", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2061820e0d4998d1792021cfa7283c2ce345b093", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2061820e0d4998d1792021cfa7283c2ce345b093"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "2f7b215d97b48be842d7cb6e4f6e95270ab2a221", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b37a0c548b633d91e07fbb2c941828aafd5cd3b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b37a0c548b633d91e07fbb2c941828aafd5cd3b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7b37a0c548b633d91e07fbb2c941828aafd5cd3b", "patch": "@@ -1,5 +1,9 @@\n 2011-06-29  Jason Merrill  <jason@redhat.com>\n \n+\t* init.c (build_value_init): Decide whether or not to zero-initialize\n+\tbased on user-providedness of default ctor, not any ctor.\n+\t(build_value_init_noctor): Adjust assert.\n+\n \tDR 990\n \t* call.c (convert_like_real) [ck_user]: Handle value-initialization.\n \t(build_new_method_call_1): Likewise."}, {"sha": "ac2b733d9bf9e93f66441e888d79260d99dc6360", "filename": "gcc/cp/init.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b37a0c548b633d91e07fbb2c941828aafd5cd3b/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b37a0c548b633d91e07fbb2c941828aafd5cd3b/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=7b37a0c548b633d91e07fbb2c941828aafd5cd3b", "patch": "@@ -334,14 +334,20 @@ build_value_init (tree type, tsubst_flags_t complain)\n \n   if (CLASS_TYPE_P (type))\n     {\n-      if (type_has_user_provided_constructor (type))\n+      /* Instead of the above, only consider the user-providedness of the\n+\t default constructor itself so value-initializing a class with an\n+\t explicitly defaulted default constructor and another user-provided\n+\t constructor works properly (c++std-core-19883).  */\n+      if (type_has_user_provided_default_constructor (type)\n+\t  || (!TYPE_HAS_DEFAULT_CONSTRUCTOR (type)\n+\t      && type_has_user_provided_constructor (type)))\n \treturn build_aggr_init_expr\n \t  (type,\n \t   build_special_member_call (NULL_TREE, complete_ctor_identifier,\n \t\t\t\t      NULL, type, LOOKUP_NORMAL,\n \t\t\t\t      complain),\n \t   complain);\n-      else if (type_build_ctor_call (type))\n+      else if (TYPE_HAS_COMPLEX_DFLT (type))\n \t{\n \t  /* This is a class that needs constructing, but doesn't have\n \t     a user-provided constructor.  So we need to zero-initialize\n@@ -371,7 +377,7 @@ build_value_init_noctor (tree type, tsubst_flags_t complain)\n      SFINAE-enabled.  */\n   if (CLASS_TYPE_P (type))\n     {\n-      gcc_assert (!type_build_ctor_call (type));\n+      gcc_assert (!TYPE_HAS_COMPLEX_DFLT (type));\n \t\n       if (TREE_CODE (type) != UNION_TYPE)\n \t{"}, {"sha": "0794930afce75d953e2c38bf32c2805b623523c0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b37a0c548b633d91e07fbb2c941828aafd5cd3b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b37a0c548b633d91e07fbb2c941828aafd5cd3b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7b37a0c548b633d91e07fbb2c941828aafd5cd3b", "patch": "@@ -1,5 +1,7 @@\n 2011-06-29  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/cpp0x/initlist-value2.C: New.\n+\n \t* g++.dg/cpp0x/constexpr-initlist4.C: New.\n \t* g++.dg/cpp0x/initlist-value.C: New.\n "}, {"sha": "2b78241e956443963e7a7649bf1ff3819904afc9", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist-value2.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b37a0c548b633d91e07fbb2c941828aafd5cd3b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist-value2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b37a0c548b633d91e07fbb2c941828aafd5cd3b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist-value2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist-value2.C?ref=7b37a0c548b633d91e07fbb2c941828aafd5cd3b", "patch": "@@ -0,0 +1,20 @@\n+// Test that we properly value-initialize a class with a user-provided\n+// constructor but defaulted default constructor.  The FDIS got this\n+// wrong; see c++std-core-19883.\n+\n+// { dg-options -std=c++0x }\n+// { dg-do run }\n+\n+struct A\n+{\n+  int i;\n+  A() = default;\n+  A(int);\n+};\n+\n+int main()\n+{\n+  A a{};\n+  if (a.i != 0)\n+    return 1;\n+}"}]}