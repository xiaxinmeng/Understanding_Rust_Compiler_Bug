{"sha": "8233805962efaca360502989a390aef6825666ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIzMzgwNTk2MmVmYWNhMzYwNTAyOTg5YTM5MGFlZjY4MjU2NjZhYg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2013-05-24T15:35:21Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2013-05-24T15:35:21Z"}, "message": "re PR tree-optimization/57294 (ice in remove_described_reference)\n\n2013-05-24  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/57294\n\t* cgraph.h (ipa_record_stmt_references): Declare.\n\t* cgraphbuild.c (ipa_record_stmt_references): New function.\n\t(build_cgraph_edges): Use ipa_record_stmt_references.\n\t(rebuild_cgraph_edges): Likewise.\n\t(cgraph_rebuild_references): Likewise.\n\t* ipa-prop.c (ipa_modify_call_arguments): Discard references\n\tassociated with the old statement and build references from the\n\tnewly built statements.\n\t* ipa-ref.c (ipa_remove_stmt_references): New function.\n\t* ipa-ref.h (ipa_remove_stmt_references): Declare.\n\ntestsuite/\n\t* gcc.dg/ipa/pr57294.c: New test.\n\nFrom-SVN: r199299", "tree": {"sha": "43bacd6846c8b3eb43f0268cb4dce94a7f027c38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43bacd6846c8b3eb43f0268cb4dce94a7f027c38"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8233805962efaca360502989a390aef6825666ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8233805962efaca360502989a390aef6825666ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8233805962efaca360502989a390aef6825666ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8233805962efaca360502989a390aef6825666ab/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1ccd4874c93be4a4cad60e0324b27a953a7417ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ccd4874c93be4a4cad60e0324b27a953a7417ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ccd4874c93be4a4cad60e0324b27a953a7417ed"}], "stats": {"total": 99, "additions": 80, "deletions": 19}, "files": [{"sha": "38a0d8a5b7609458e6af703df6d727d738ba9b77", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8233805962efaca360502989a390aef6825666ab/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8233805962efaca360502989a390aef6825666ab/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8233805962efaca360502989a390aef6825666ab", "patch": "@@ -1,3 +1,17 @@\n+2013-05-24  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/57294\n+\t* cgraph.h (ipa_record_stmt_references): Declare.\n+\t* cgraphbuild.c (ipa_record_stmt_references): New function.\n+\t(build_cgraph_edges): Use ipa_record_stmt_references.\n+\t(rebuild_cgraph_edges): Likewise.\n+\t(cgraph_rebuild_references): Likewise.\n+\t* ipa-prop.c (ipa_modify_call_arguments): Discard references\n+\tassociated with the old statement and build references from the\n+\tnewly built statements.\n+\t* ipa-ref.c (ipa_remove_stmt_references): New function.\n+\t* ipa-ref.h (ipa_remove_stmt_references): Declare.\n+\n 2013-05-24  Vladimir Makarov  <vmakarov@redhat.com>\n \n         * lra-constraints.c (emit_spill_move): Use smaller mode for"}, {"sha": "fcb9261ff62c1e160d190d0ce7b3c9bcfbf28d99", "filename": "gcc/cgraph.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8233805962efaca360502989a390aef6825666ab/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8233805962efaca360502989a390aef6825666ab/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=8233805962efaca360502989a390aef6825666ab", "patch": "@@ -705,6 +705,7 @@ unsigned int rebuild_cgraph_edges (void);\n void cgraph_rebuild_references (void);\n int compute_call_stmt_bb_frequency (tree, basic_block bb);\n void record_references_in_initializer (tree, bool);\n+void ipa_record_stmt_references (struct cgraph_node *, gimple);\n \n /* In ipa.c  */\n bool symtab_remove_unreachable_nodes (bool, FILE *);"}, {"sha": "fb1515d603707e5bd9b733a376cf51507b3f537e", "filename": "gcc/cgraphbuild.c", "status": "modified", "additions": 14, "deletions": 18, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8233805962efaca360502989a390aef6825666ab/gcc%2Fcgraphbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8233805962efaca360502989a390aef6825666ab/gcc%2Fcgraphbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphbuild.c?ref=8233805962efaca360502989a390aef6825666ab", "patch": "@@ -288,6 +288,14 @@ mark_store (gimple stmt, tree t, void *data)\n   return false;\n }\n \n+/* Record all references from NODE that are taken in statement STMT.  */\n+void\n+ipa_record_stmt_references (struct cgraph_node *node, gimple stmt)\n+{\n+  walk_stmt_load_store_addr_ops (stmt, node, mark_load, mark_store,\n+\t\t\t\t mark_address);\n+}\n+\n /* Create cgraph edges for function calls.\n    Also look for functions and variables having addresses taken.  */\n \n@@ -323,8 +331,7 @@ build_cgraph_edges (void)\n \t\t\t\t\t     gimple_call_flags (stmt),\n \t\t\t\t\t     bb->count, freq);\n \t    }\n-\t  walk_stmt_load_store_addr_ops (stmt, node, mark_load,\n-\t\t\t\t\t mark_store, mark_address);\n+\t  ipa_record_stmt_references (node, stmt);\n \t  if (gimple_code (stmt) == GIMPLE_OMP_PARALLEL\n \t      && gimple_omp_parallel_child_fn (stmt))\n \t    {\n@@ -348,8 +355,7 @@ build_cgraph_edges (void)\n \t    }\n \t}\n       for (gsi = gsi_start_phis (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n-\twalk_stmt_load_store_addr_ops (gsi_stmt (gsi), node,\n-\t\t\t\t       mark_load, mark_store, mark_address);\n+\tipa_record_stmt_references (node, gsi_stmt (gsi));\n    }\n \n   /* Look for initializers of constant variables and private statics.  */\n@@ -437,13 +443,10 @@ rebuild_cgraph_edges (void)\n \t\t\t\t\t     gimple_call_flags (stmt),\n \t\t\t\t\t     bb->count, freq);\n \t    }\n-\t  walk_stmt_load_store_addr_ops (stmt, node, mark_load,\n-\t\t\t\t\t mark_store, mark_address);\n-\n+\t  ipa_record_stmt_references (node, stmt);\n \t}\n       for (gsi = gsi_start_phis (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n-\twalk_stmt_load_store_addr_ops (gsi_stmt (gsi), node,\n-\t\t\t\t       mark_load, mark_store, mark_address);\n+\tipa_record_stmt_references (node, gsi_stmt (gsi));\n     }\n   record_eh_tables (node, cfun);\n   gcc_assert (!node->global.inlined_to);\n@@ -468,16 +471,9 @@ cgraph_rebuild_references (void)\n   FOR_EACH_BB (bb)\n     {\n       for (gsi = gsi_start_bb (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n-\t{\n-\t  gimple stmt = gsi_stmt (gsi);\n-\n-\t  walk_stmt_load_store_addr_ops (stmt, node, mark_load,\n-\t\t\t\t\t mark_store, mark_address);\n-\n-\t}\n+\tipa_record_stmt_references (node, gsi_stmt (gsi));\n       for (gsi = gsi_start_phis (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n-\twalk_stmt_load_store_addr_ops (gsi_stmt (gsi), node,\n-\t\t\t\t       mark_load, mark_store, mark_address);\n+\tipa_record_stmt_references (node, gsi_stmt (gsi));\n     }\n   record_eh_tables (node, cfun);\n }"}, {"sha": "7c3987e222e40132ed0ccaa13522b00de6a49bd4", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8233805962efaca360502989a390aef6825666ab/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8233805962efaca360502989a390aef6825666ab/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=8233805962efaca360502989a390aef6825666ab", "patch": "@@ -3219,18 +3219,22 @@ void\n ipa_modify_call_arguments (struct cgraph_edge *cs, gimple stmt,\n \t\t\t   ipa_parm_adjustment_vec adjustments)\n {\n+  struct cgraph_node *current_node = cgraph_get_node (current_function_decl);\n   vec<tree> vargs;\n   vec<tree, va_gc> **debug_args = NULL;\n   gimple new_stmt;\n-  gimple_stmt_iterator gsi;\n+  gimple_stmt_iterator gsi, prev_gsi;\n   tree callee_decl;\n   int i, len;\n \n   len = adjustments.length ();\n   vargs.create (len);\n   callee_decl = !cs ? gimple_call_fndecl (stmt) : cs->callee->symbol.decl;\n+  ipa_remove_stmt_references ((symtab_node) current_node, stmt);\n \n   gsi = gsi_for_stmt (stmt);\n+  prev_gsi = gsi;\n+  gsi_prev (&prev_gsi);\n   for (i = 0; i < len; i++)\n     {\n       struct ipa_parm_adjustment *adj;\n@@ -3425,6 +3429,14 @@ ipa_modify_call_arguments (struct cgraph_edge *cs, gimple stmt,\n   gsi_replace (&gsi, new_stmt, true);\n   if (cs)\n     cgraph_set_call_stmt (cs, new_stmt);\n+  do\n+    {\n+      ipa_record_stmt_references (current_node, gsi_stmt (gsi));\n+      gsi_prev (&gsi);\n+    }\n+  while ((gsi_end_p (prev_gsi) && !gsi_end_p (gsi))\n+\t || (!gsi_end_p (prev_gsi) && gsi_stmt (gsi) == gsi_stmt (prev_gsi)));\n+\n   update_ssa (TODO_update_ssa);\n   free_dominance_info (CDI_DOMINATORS);\n }"}, {"sha": "7909805e0ce621c5f65e184073938ee68126ba05", "filename": "gcc/ipa-ref.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8233805962efaca360502989a390aef6825666ab/gcc%2Fipa-ref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8233805962efaca360502989a390aef6825666ab/gcc%2Fipa-ref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-ref.c?ref=8233805962efaca360502989a390aef6825666ab", "patch": "@@ -215,3 +215,17 @@ ipa_find_reference (symtab_node referring_node, symtab_node referred_node,\n       return r;\n   return NULL;\n }\n+\n+/* Remove all references from REFERRING_NODE that are associated with statement\n+   STMT.  */\n+\n+void\n+ipa_remove_stmt_references (symtab_node referring_node, gimple stmt)\n+{\n+  struct ipa_ref *r = NULL;\n+  int i;\n+\n+  FOR_EACH_VEC_SAFE_ELT (referring_node->symbol.ref_list.references, i, r)\n+    if (r->stmt == stmt)\n+      ipa_remove_reference (r);\n+}"}, {"sha": "79f60056601dabe925db75422c34565d7ee47fb6", "filename": "gcc/ipa-ref.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8233805962efaca360502989a390aef6825666ab/gcc%2Fipa-ref.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8233805962efaca360502989a390aef6825666ab/gcc%2Fipa-ref.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-ref.h?ref=8233805962efaca360502989a390aef6825666ab", "patch": "@@ -72,3 +72,4 @@ void ipa_clone_referring (symtab_node, struct ipa_ref_list *);\n bool ipa_ref_cannot_lead_to_return (struct ipa_ref *);\n bool ipa_ref_has_aliases_p (struct ipa_ref_list *);\n struct ipa_ref * ipa_find_reference (symtab_node, symtab_node, gimple);\n+void ipa_remove_stmt_references (symtab_node, gimple);"}, {"sha": "af4b16e2f11720e8e4f862133924d5831a80e8bc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8233805962efaca360502989a390aef6825666ab/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8233805962efaca360502989a390aef6825666ab/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8233805962efaca360502989a390aef6825666ab", "patch": "@@ -1,3 +1,8 @@\n+2013-05-24  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/57294\n+\t* gcc.dg/ipa/pr57294.c: New test.\n+\n 2013-05-24  Ian Bolton  <ian.bolton@arm.com>\n \n \t* gcc.target/aarch64/scalar_intrinsics.c"}, {"sha": "0871f3f41832dea054fdebb2f48fda82c138d0ac", "filename": "gcc/testsuite/gcc.dg/ipa/pr57294.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8233805962efaca360502989a390aef6825666ab/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr57294.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8233805962efaca360502989a390aef6825666ab/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr57294.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr57294.c?ref=8233805962efaca360502989a390aef6825666ab", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3\" } */\n+\n+void baz (void);\n+int func ();\n+\n+static void\n+bar (int a, int foo (void))\n+{\n+  baz ();\n+  foo ();\n+}\n+\n+void\n+baz (void)\n+{\n+  bar (0, func);\n+}"}]}