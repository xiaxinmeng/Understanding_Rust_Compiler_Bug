{"sha": "e3cc72542ba605f704f9590ef6d5b91bd9b66233", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTNjYzcyNTQyYmE2MDVmNzA0Zjk1OTBlZjZkNWI5MWJkOWI2NjIzMw==", "commit": {"author": {"name": "Zdenek Dvorak", "email": "dvorakz@suse.cz", "date": "2005-04-27T14:28:11Z"}, "committer": {"name": "Zdenek Dvorak", "email": "rakdver@gcc.gnu.org", "date": "2005-04-27T14:28:11Z"}, "message": "re PR tree-optimization/21171 (IV OPTS removes does not create a new VOPs for constant values)\n\n\tPR tree-optimization/21171\n\t* tree-ssa-loop-ivopts.c (find_interesting_uses_address): Do not\n\trecord address uses if the reference is volatile.\n\n\t* gcc.dg/tree-ssa/pr21171.c: New test.\n\nFrom-SVN: r98828", "tree": {"sha": "7b5703669accc8a1d8d9b4c22799fb59b1af5cfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b5703669accc8a1d8d9b4c22799fb59b1af5cfe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e3cc72542ba605f704f9590ef6d5b91bd9b66233", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3cc72542ba605f704f9590ef6d5b91bd9b66233", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3cc72542ba605f704f9590ef6d5b91bd9b66233", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3cc72542ba605f704f9590ef6d5b91bd9b66233/comments", "author": null, "committer": null, "parents": [{"sha": "c4336539b95d8ec3ff5b25d72eee0c4f47c4edd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4336539b95d8ec3ff5b25d72eee0c4f47c4edd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4336539b95d8ec3ff5b25d72eee0c4f47c4edd7"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "2a545fd9a6534833c8224f47972f08c3a739e92c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3cc72542ba605f704f9590ef6d5b91bd9b66233/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3cc72542ba605f704f9590ef6d5b91bd9b66233/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e3cc72542ba605f704f9590ef6d5b91bd9b66233", "patch": "@@ -1,3 +1,9 @@\n+2005-04-27  Zdenek Dvorak  <dvorakz@suse.cz>\n+\n+\tPR tree-optimization/21171\n+\t* tree-ssa-loop-ivopts.c (find_interesting_uses_address): Do not\n+\trecord address uses if the reference is volatile.\n+\n 2004-04-27  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* tree-complex.c (expand_vector_operation): New, extracted from"}, {"sha": "78ac81ac2aacfe7a374e52ff62cfd5c664662b4d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3cc72542ba605f704f9590ef6d5b91bd9b66233/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3cc72542ba605f704f9590ef6d5b91bd9b66233/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e3cc72542ba605f704f9590ef6d5b91bd9b66233", "patch": "@@ -1,3 +1,8 @@\n+2005-04-27  Zdenek Dvorak  <dvorakz@suse.cz>\n+\n+\tPR tree-optimization/21171\n+\t* gcc.dg/tree-ssa/pr21171.c: New test.\n+\n 2004-04-27  Paolo Bonzini  <bonzini@gnu.org>\n \n         * gcc.dg/tree-ssa/gen-vect-11.c, gcc.dg/tree-ssa/gen-vect-11a.c,"}, {"sha": "a655ed6328103318a7d652175621f0019a9dbad9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr21171.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3cc72542ba605f704f9590ef6d5b91bd9b66233/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr21171.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3cc72542ba605f704f9590ef6d5b91bd9b66233/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr21171.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr21171.c?ref=e3cc72542ba605f704f9590ef6d5b91bd9b66233", "patch": "@@ -0,0 +1,29 @@\n+/* PR 21171.  Ivopts should not rewrite references to volatile memory.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -fdump-tree-vars\" } */\n+\n+typedef\tunsigned int u_int32_t;\n+typedef\tunsigned char u_int8_t;\n+\n+#define\tAIC_VECTORS\t32\n+\n+typedef volatile struct AT91RM9200_regs {\n+  u_int32_t\tSVR[AIC_VECTORS];\n+} AT91RM9200_regs_t;\n+\n+#define CPUReg  ((AT91RM9200_regs_t*)0xFFF00000)\n+\n+extern const u_int32_t __IntTable[AIC_VECTORS];\n+\n+int main()\n+{\n+  int c;\n+\n+  for (c = 0; c < AIC_VECTORS; c++)\n+    CPUReg->SVR[c] = __IntTable[c];\n+\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"SVR\" 1 \"vars\"} } */\n+/* { dg-final { cleanup-tree-dump \"vars\" } } */"}, {"sha": "f23e8d6d3a5d439506eb67dd64a71a7f6ee24e17", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e3cc72542ba605f704f9590ef6d5b91bd9b66233/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e3cc72542ba605f704f9590ef6d5b91bd9b66233/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=e3cc72542ba605f704f9590ef6d5b91bd9b66233", "patch": "@@ -1518,6 +1518,11 @@ find_interesting_uses_address (struct ivopts_data *data, tree stmt, tree *op_p)\n   struct iv *civ;\n   struct ifs_ivopts_data ifs_ivopts_data;\n \n+  /* Do not play with volatile memory references.  A bit too conservative,\n+     perhaps, but safe.  */\n+  if (stmt_ann (stmt)->has_volatile_ops)\n+    goto fail;\n+\n   /* Ignore bitfields for now.  Not really something terribly complicated\n      to handle.  TODO.  */\n   if (TREE_CODE (base) == COMPONENT_REF"}]}