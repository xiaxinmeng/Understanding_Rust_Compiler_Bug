{"sha": "4ee28eb7cea6ebf4713ad1f808d7e5e033ff508a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVlMjhlYjdjZWE2ZWJmNDcxM2FkMWY4MDhkN2U1ZTAzM2ZmNTA4YQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-09-12T14:39:25Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-09-12T14:39:25Z"}, "message": "re PR c++/63201 (Full specialization of a member variable template of a class template does not work)\n\n\tPR c++/63201\n\t* decl.c (start_decl): Handle specialization of member variable\n\ttemplate.\n\t* pt.c (check_explicit_specialization): Adjust error.\n\nFrom-SVN: r215226", "tree": {"sha": "19910d805d5cb7cfa642612aea21ce5722033b73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19910d805d5cb7cfa642612aea21ce5722033b73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ee28eb7cea6ebf4713ad1f808d7e5e033ff508a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ee28eb7cea6ebf4713ad1f808d7e5e033ff508a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ee28eb7cea6ebf4713ad1f808d7e5e033ff508a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ee28eb7cea6ebf4713ad1f808d7e5e033ff508a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b6f866946b763415799331fe6799c4528357d6d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6f866946b763415799331fe6799c4528357d6d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6f866946b763415799331fe6799c4528357d6d0"}], "stats": {"total": 104, "additions": 91, "deletions": 13}, "files": [{"sha": "3e9cb8968240f5082e15ae15eaf51342683343f7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ee28eb7cea6ebf4713ad1f808d7e5e033ff508a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ee28eb7cea6ebf4713ad1f808d7e5e033ff508a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4ee28eb7cea6ebf4713ad1f808d7e5e033ff508a", "patch": "@@ -1,3 +1,10 @@\n+2014-09-11  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/63201\n+\t* decl.c (start_decl): Handle specialization of member variable\n+\ttemplate.\n+\t* pt.c (check_explicit_specialization): Adjust error.\n+\n 2014-09-11  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/61489"}, {"sha": "59dada7d3db290387ffb501852bb029e7d049745", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ee28eb7cea6ebf4713ad1f808d7e5e033ff508a/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ee28eb7cea6ebf4713ad1f808d7e5e033ff508a/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=4ee28eb7cea6ebf4713ad1f808d7e5e033ff508a", "patch": "@@ -4659,20 +4659,24 @@ start_decl (const cp_declarator *declarator,\n \t  if (field == NULL_TREE\n \t      || !(VAR_P (field) || variable_template_p (field)))\n \t    error (\"%q+#D is not a static data member of %q#T\", decl, context);\n-\t  else\n+\t  else if (variable_template_p (field) && !this_tmpl)\n \t    {\n-\t      if (variable_template_p (field))\n+\t      if (DECL_LANG_SPECIFIC (decl)\n+\t\t  && DECL_TEMPLATE_SPECIALIZATION (decl))\n+\t\t/* OK, specialization was already checked.  */;\n+\t      else\n \t\t{\n-\t\t  if (!this_tmpl)\n-\t\t    {\n-\t\t      error_at (DECL_SOURCE_LOCATION (decl),\n-\t\t\t\t\"non-member-template declaration of %qD\", decl);\n-\t\t      inform (DECL_SOURCE_LOCATION (field), \"does not match \"\n-\t\t\t      \"member template declaration here\");\n-\t\t      return error_mark_node;\n-\t\t    }\n-\t\t  field = DECL_TEMPLATE_RESULT (field);\n+\t\t  error_at (DECL_SOURCE_LOCATION (decl),\n+\t\t\t    \"non-member-template declaration of %qD\", decl);\n+\t\t  inform (DECL_SOURCE_LOCATION (field), \"does not match \"\n+\t\t\t  \"member template declaration here\");\n+\t\t  return error_mark_node;\n \t\t}\n+\t    }\n+\t  else\n+\t    {\n+\t      if (variable_template_p (field))\n+\t\tfield = DECL_TEMPLATE_RESULT (field);\n \n \t      if (DECL_CONTEXT (field) != context)\n \t\t{"}, {"sha": "008879b28d5da49fcf6dfcdc6ca25c9a6feb12e2", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ee28eb7cea6ebf4713ad1f808d7e5e033ff508a/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ee28eb7cea6ebf4713ad1f808d7e5e033ff508a/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=4ee28eb7cea6ebf4713ad1f808d7e5e033ff508a", "patch": "@@ -2471,7 +2471,7 @@ check_explicit_specialization (tree declarator,\n \t     template <class T> void f<int>(); */\n \n \t  if (uses_template_parms (declarator))\n-\t    error (\"function template partial specialization %qD \"\n+\t    error (\"non-type partial specialization %qD \"\n \t\t   \"is not allowed\", declarator);\n \t  else\n \t    error (\"template-id %qD in declaration of primary template\","}, {"sha": "5d6e0d0dcff610046c6fb6e3b2dc4553b6aed073", "filename": "gcc/testsuite/g++.dg/cpp1y/var-templ11.C", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ee28eb7cea6ebf4713ad1f808d7e5e033ff508a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ee28eb7cea6ebf4713ad1f808d7e5e033ff508a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ11.C?ref=4ee28eb7cea6ebf4713ad1f808d7e5e033ff508a", "patch": "@@ -0,0 +1,67 @@\n+// PR c++/63201\n+// { dg-do compile { target c++14 } }\n+\n+template <class T>\n+struct Y\n+{\n+  template <class U> static U x;\n+};\n+\n+template <class T>\n+template <class U>\n+U Y<T>::x = U();\n+\n+template <>\n+template <class U>\n+U Y<int>::x = 42;\n+\n+template <>\n+template <class U>\n+// odd diagnostic\n+U Y<float>::x<U> = 42; // { dg-error \"partial specialization\" }\n+\n+template <>\n+template <>\n+int Y<float>::x<int> = 42; // { dg-bogus \"non-member-template declaration\" }\n+\n+template <class T>\n+struct Z\n+{\n+  template <class U> struct ZZ\n+  {\n+    template <class V> static V x;\n+  };\n+};\n+\n+template <class T>\n+template <class U>\n+template <class V>\n+V Z<T>::ZZ<U>::x = V();\n+\n+template <>\n+template <>\n+template <class V>\n+V Z<int>::ZZ<int>::x = V();\n+\n+template <>\n+template <class U>\n+struct Z<float>::ZZ\n+{\n+  template <class V> static V x;\n+};\n+\n+template <>\n+template <class U>\n+template <class V>\n+V Z<float>::ZZ<U>::x = V();\n+\n+template <>\n+template <>\n+template <>\n+int Z<float>::ZZ<int>::x<int> = 42; // { dg-bogus \"non-member-template declaration\" }\n+\n+int main()\n+{\n+  int y = Y<int>::x<int>;\n+  int z = Z<float>::ZZ<int>::x<int>;\n+}"}, {"sha": "ffc51ee44112590216a334c57e4d5fc3c5981454", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb103.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ee28eb7cea6ebf4713ad1f808d7e5e033ff508a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb103.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ee28eb7cea6ebf4713ad1f808d7e5e033ff508a/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb103.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb103.C?ref=4ee28eb7cea6ebf4713ad1f808d7e5e033ff508a", "patch": "@@ -4,7 +4,7 @@\n template <int nlimb, int i>\n inline unsigned f (unsigned* ptr);\n template <int nlimb>\n-inline unsigned f<nlimb,nlimb> (unsigned* ptr) // { dg-error \"function template partial specialization\" }\n+inline unsigned f<nlimb,nlimb> (unsigned* ptr) // { dg-error \"partial specialization\" }\n {\n   return 1;\n }"}]}