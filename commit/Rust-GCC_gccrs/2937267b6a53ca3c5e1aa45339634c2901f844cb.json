{"sha": "2937267b6a53ca3c5e1aa45339634c2901f844cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjkzNzI2N2I2YTUzY2EzYzVlMWFhNDUzMzk2MzRjMjkwMWY4NDRjYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-05-09T21:01:55Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-05-09T21:01:55Z"}, "message": "re PR target/6429 (libgcc_s problem on dual 32/64-bit arches)\n\n\tPR target/6429\n\t* Makefile.in (libgcc.mk): Pass SHLIB_SLIBDIR_SUFFIXES to mklibgcc.\n\t* mklibgcc.in: If SHLIB_SLIBDIR_SUFFIXES is defined, put libgcc_s\n\tshared libraries into multilib dirs, with SONAME libgcc_s.so.1 for\n\tbase multilibs.\n\t* config/t-slibgcc-elf-ver (SHLIB_LINK): Adjust for the above.\n\t* config/t-slibgcc-sld (SHLIB_LINK): Likewise.\n\t* config/i386/t-linux64 (SHLIB_SLIBDIR_SUFFIXES): Define.\n\t* config/sparc/t-linux64 (SHLIB_SLIBDIR_SUFFIXES): Define.\n\t* config/sparc/t-sol2-64 (SHLIB_SLIBDIR_SUFFIXES): Define.\n\n\t* lib/g77.exp (g77_link_flags): Append all multilib dirs containing\n\tlibgcc_s*.so.1 below gcc object dir to LD_LIBRARY_PATH.\n\t* lib/g++.exp (g++_link_flags): Likewise.\n\t* lib/objc.exp (objc_target_compile): Likewise.\n\n\t* testsuite/lib/libstdc++-v3-dg.exp (libstdc++-v3-init): Append all\n\tmultilib dirs containing libgcc_s*.so.1 below gcc object dir to\n\tLD_LIBRARY_PATH.\n\n\t* testsuite/lib/libjava.exp (libjava_arguments): Append all\n\tmultilib dirs containing libgcc_s*.so.1 below gcc object dir to\n\tLD_LIBRARY_PATH.\n\nFrom-SVN: r53345", "tree": {"sha": "90b85aa28a1ca0a270f78459d62ab64da5663ee3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90b85aa28a1ca0a270f78459d62ab64da5663ee3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2937267b6a53ca3c5e1aa45339634c2901f844cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2937267b6a53ca3c5e1aa45339634c2901f844cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2937267b6a53ca3c5e1aa45339634c2901f844cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2937267b6a53ca3c5e1aa45339634c2901f844cb/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "086c0f96be83e383209026548c6929be7e160f1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/086c0f96be83e383209026548c6929be7e160f1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/086c0f96be83e383209026548c6929be7e160f1c"}], "stats": {"total": 265, "additions": 233, "deletions": 32}, "files": [{"sha": "128d1a87f380ee326c22d69719888e50abb85260", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2937267b6a53ca3c5e1aa45339634c2901f844cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2937267b6a53ca3c5e1aa45339634c2901f844cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2937267b6a53ca3c5e1aa45339634c2901f844cb", "patch": "@@ -1,3 +1,15 @@\n+2002-05-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/6429\n+\t* Makefile.in (libgcc.mk): Pass SHLIB_SLIBDIR_SUFFIXES to mklibgcc.\n+\t* mklibgcc.in: If SHLIB_SLIBDIR_SUFFIXES is defined, put libgcc_s\n+\tshared libraries into multilib dirs, with SONAME libgcc_s.so.1 for\n+\tbase multilibs.\n+\t* config/t-slibgcc-elf-ver (SHLIB_LINK): Adjust for the above.\n+\t* config/t-slibgcc-sld (SHLIB_LINK): Likewise.\n+\t* config/sparc/t-linux64 (SHLIB_SLIBDIR_SUFFIXES): Define.\n+\t* config/sparc/t-sol2-64 (SHLIB_SLIBDIR_SUFFIXES): Define.\n+\n 2002-05-09  Richard Henderson  <rth@redhat.com>\n \n \t* config/ia64/ia64.md: Use define_constants for unspec numbers."}, {"sha": "b1605563d85c7b9848b13569777cccab151e1fa6", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2937267b6a53ca3c5e1aa45339634c2901f844cb/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2937267b6a53ca3c5e1aa45339634c2901f844cb/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=2937267b6a53ca3c5e1aa45339634c2901f844cb", "patch": "@@ -1004,6 +1004,7 @@ libgcc.mk: config.status Makefile mklibgcc $(LIB2ADD) $(LIB2ADD_ST) xgcc$(exeext\n \tSHLIB_MKMAP_OPTS='$(SHLIB_MKMAP_OPTS)' \\\n \tSHLIB_MAPFILES='$(SHLIB_MAPFILES)' \\\n \tSHLIB_NM_FLAGS='$(SHLIB_NM_FLAGS)' \\\n+\tSHLIB_SLIBDIR_SUFFIXES='$(SHLIB_SLIBDIR_SUFFIXES)' \\\n \tmkinstalldirs='$(SHELL) $(srcdir)/mkinstalldirs' \\\n \t  $(SHELL) mklibgcc > tmp-libgcc.mk\n \tmv tmp-libgcc.mk libgcc.mk"}, {"sha": "d8dedc542bd76b27d26246010db1f40de97a4f80", "filename": "gcc/config/sparc/t-linux64", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2937267b6a53ca3c5e1aa45339634c2901f844cb/gcc%2Fconfig%2Fsparc%2Ft-linux64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2937267b6a53ca3c5e1aa45339634c2901f844cb/gcc%2Fconfig%2Fsparc%2Ft-linux64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-linux64?ref=2937267b6a53ca3c5e1aa45339634c2901f844cb", "patch": "@@ -8,3 +8,5 @@ LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib\n \n EXTRA_MULTILIB_PARTS=crtbegin.o crtend.o crtbeginS.o crtendS.o crtbeginT.o\n+\n+SHLIB_SLIBDIR_SUFFIXES = 64:64 32:"}, {"sha": "ef7dee7ecab2b4dea97b99b320dcb598b1c502cd", "filename": "gcc/config/sparc/t-sol2-64", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2937267b6a53ca3c5e1aa45339634c2901f844cb/gcc%2Fconfig%2Fsparc%2Ft-sol2-64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2937267b6a53ca3c5e1aa45339634c2901f844cb/gcc%2Fconfig%2Fsparc%2Ft-sol2-64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ft-sol2-64?ref=2937267b6a53ca3c5e1aa45339634c2901f844cb", "patch": "@@ -6,3 +6,5 @@ LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib\n \n EXTRA_MULTILIB_PARTS=crtbegin.o crtend.o gmon.o crt1.o crti.o crtn.o gcrt1.o\n+\n+SHLIB_SLIBDIR_SUFFIXES = sparcv9:/sparcv9 sparcv7:"}, {"sha": "c02ff9d6b7c7acfd4f55596929ecfd34f5745cac", "filename": "gcc/config/t-slibgcc-elf-ver", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2937267b6a53ca3c5e1aa45339634c2901f844cb/gcc%2Fconfig%2Ft-slibgcc-elf-ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2937267b6a53ca3c5e1aa45339634c2901f844cb/gcc%2Fconfig%2Ft-slibgcc-elf-ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-slibgcc-elf-ver?ref=2937267b6a53ca3c5e1aa45339634c2901f844cb", "patch": "@@ -2,22 +2,28 @@\n # with the GNU linker.\n \n SHLIB_EXT = .so\n-SHLIB_NAME = @shlib_base_name@.so\n-SHLIB_SONAME = @shlib_base_name@.so.1\n+SHLIB_SOLINK = @shlib_base_name@.so\n+SHLIB_SONAME = @shlib_so_name@.so.1\n+SHLIB_NAME = @shlib_dir@@shlib_so_name@.so.1\n SHLIB_MAP = @shlib_map_file@\n SHLIB_OBJS = @shlib_objs@\n+SHLIB_SLIBDIR_QUAL = @shlib_slibdir_qual@\n SHLIB_LC = -lc\n \n SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n \t-Wl,--soname=$(SHLIB_SONAME) \\\n \t-Wl,--version-script=$(SHLIB_MAP) \\\n \t-o $(SHLIB_NAME) @multilib_flags@ $(SHLIB_OBJS) $(SHLIB_LC) && \\\n-\trm -f $(SHLIB_SONAME) && \\\n-\t$(LN_S) $(SHLIB_NAME) $(SHLIB_SONAME)\n+\trm -f $(SHLIB_SOLINK) && \\\n+\t$(LN_S) $(SHLIB_NAME) $(SHLIB_SOLINK)\n # $(slibdir) double quoted to protect it from expansion while building\n # libgcc.mk.  We want this delayed until actual install time.\n-SHLIB_INSTALL = $(INSTALL_DATA) $(SHLIB_NAME) $$(slibdir)/$(SHLIB_SONAME); \\\n-\trm -f $$(slibdir)/$(SHLIB_NAME); \\\n-\t$(LN_S) $(SHLIB_SONAME) $$(slibdir)/$(SHLIB_NAME)\n+SHLIB_INSTALL = \\\n+\t$$(SHELL) $$(srcdir)/mkinstalldirs $$(slibdir)$(SHLIB_SLIBDIR_QUAL); \\\n+\t$(INSTALL_DATA) $(SHLIB_NAME) \\\n+\t  $$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SONAME); \\\n+\trm -f $$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK); \\\n+\t$(LN_S) $(SHLIB_SONAME) \\\n+\t  $$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK)\n SHLIB_MKMAP = $(srcdir)/mkmap-symver.awk\n SHLIB_MAPFILES = $(srcdir)/libgcc-std.ver"}, {"sha": "c11a572196681a69e269b079bcb7aa1423b59e6e", "filename": "gcc/config/t-slibgcc-sld", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2937267b6a53ca3c5e1aa45339634c2901f844cb/gcc%2Fconfig%2Ft-slibgcc-sld", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2937267b6a53ca3c5e1aa45339634c2901f844cb/gcc%2Fconfig%2Ft-slibgcc-sld", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-slibgcc-sld?ref=2937267b6a53ca3c5e1aa45339634c2901f844cb", "patch": "@@ -1,21 +1,27 @@\n # Build a shared libgcc library with the Solaris linker.\n \n SHLIB_EXT = .so\n-SHLIB_NAME = @shlib_base_name@.so\n-SHLIB_SONAME = @shlib_base_name@.so.1\n+SHLIB_SOLINK = @shlib_base_name@.so\n+SHLIB_SONAME = @shlib_so_name@.so.1\n+SHLIB_NAME = @shlib_dir@@shlib_so_name@.so.1\n SHLIB_MAP = @shlib_map_file@\n SHLIB_OBJS = @shlib_objs@\n+SHLIB_SLIBDIR_QUAL = @shlib_slibdir_qual@\n \n SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -shared -nodefaultlibs \\\n \t-Wl,-h,$(SHLIB_SONAME) -Wl,-z,text -Wl,-z,defs \\\n \t-Wl,-M,$(SHLIB_MAP) -o $(SHLIB_NAME) \\\n \t@multilib_flags@ $(SHLIB_OBJS) -lc && \\\n-\trm -f $(SHLIB_SONAME) && \\\n-\t$(LN_S) $(SHLIB_NAME) $(SHLIB_SONAME)\n+\trm -f $(SHLIB_SOLINK) && \\\n+\t$(LN_S) $(SHLIB_NAME) $(SHLIB_SOLINK)\n # $(slibdir) double quoted to protect it from expansion while building\n # libgcc.mk.  We want this delayed until actual install time.\n-SHLIB_INSTALL = $(INSTALL_DATA) $(SHLIB_NAME) $$(slibdir)/$(SHLIB_SONAME); \\\n-\trm -f $$(slibdir)/$(SHLIB_NAME); \\\n-\t$(LN_S) $(SHLIB_SONAME) $$(slibdir)/$(SHLIB_NAME)\n+SHLIB_INSTALL = \\\n+\t$$(SHELL) $$(srcdir)/mkinstalldirs $$(slibdir)$(SHLIB_SLIBDIR_QUAL); \\\n+\t$(INSTALL_DATA) $(SHLIB_NAME) \\\n+\t  $$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SONAME); \\\n+\trm -f $$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK); \\\n+\t$(LN_S) $(SHLIB_SONAME) \\\n+\t  $$(slibdir)$(SHLIB_SLIBDIR_QUAL)/$(SHLIB_SOLINK)\n SHLIB_MKMAP = $(srcdir)/mkmap-symver.awk\n SHLIB_MAPFILES = $(srcdir)/libgcc-std.ver"}, {"sha": "06c2ec0134ebf34d89e76b07ece9db0ee7ea2c8f", "filename": "gcc/mklibgcc.in", "status": "modified", "additions": 77, "deletions": 8, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2937267b6a53ca3c5e1aa45339634c2901f844cb/gcc%2Fmklibgcc.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2937267b6a53ca3c5e1aa45339634c2901f844cb/gcc%2Fmklibgcc.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmklibgcc.in?ref=2937267b6a53ca3c5e1aa45339634c2901f844cb", "patch": "@@ -32,6 +32,7 @@\n # SHLIB_MAPFILES\n # SHLIB_NM_FLAGS\n # SHLIB_INSTALL\n+# SHLIB_SLIBDIR_SUFFIXES\n \n # Make needs VPATH to be literal.\n echo 'srcdir = @srcdir@'\n@@ -306,19 +307,41 @@ for ml in $MULTILIBS; do\n     echo '\telse true; fi;'\n \n     if [ -z \"$SHLIB_MULTILIB\" ]; then\n-      if [ \"$dir\" = \".\" ]; then\n-\tshlib_base_name=\"libgcc_s\";\n+      if [ \"$dir\" = . ]; then\n+\tshlib_base_name=libgcc_s\n       else\n \tshlib_base_name=libgcc_s_`echo $dir | sed s,/,_,g`\n       fi\n+      shlib_so_name=\"$shlib_base_name\"\n+      shlib_dir=\n+      if [ -n \"$SHLIB_SLIBDIR_SUFFIXES\" ]; then\n+\tif [ \"$dir\" != . ]; then\n+\t  shlib_dir=\"$dir\"/\n+\t  for suffix_pair in $SHLIB_SLIBDIR_SUFFIXES ; do\n+\t    base_ml_dir=`echo ${suffix_pair} | sed -e 's/:.*$//' -e 's/=/$(EQ)/g'`\n+\t    if [ \"$dir\" = \"$base_ml_dir\" ]; then\n+\t      shlib_so_name=libgcc_s\n+\t      break\n+\t    else\n+\t      canon_dir=`echo $dir | sed -n -e \"s:$base_ml_dir/::p\"`\n+\t      if [ -n \"$canon_dir\" ]; then\n+\t\tshlib_so_name=libgcc_s_`echo $canon_dir | sed s,/,_,g`\n+\t\tbreak\n+\t      fi\n+\t    fi\n+\t  done\n+\tfi\n+      fi\n       echo \"\"\n       echo \"${dir}/${shlib_base_name}${SHLIB_EXT}: $shlib_deps\"\n       echo \"\t$SHLIB_LINK\" \\\n \t | sed -e \"s%@multilib_flags@%$flags%g\" \\\n \t       -e \"s%@multilib_dir@%$dir%g\" \\\n \t       -e \"s%@shlib_objs@%$libgcc_sh_objs%g\" \\\n \t       -e \"s%@shlib_base_name@%$shlib_base_name%g\" \\\n-\t       -e \"s%@shlib_map_file@%$mapfile%g\"\n+\t       -e \"s%@shlib_map_file@%$mapfile%g\" \\\n+\t       -e \"s%@shlib_so_name@%$shlib_so_name%g\" \\\n+\t       -e \"s%@shlib_dir@%$shlib_dir%g\"\n     elif [ \"$SHLIB_MULTILIB\" = \"$dir\" ]; then\n       shlib_base_name=\"libgcc_s\";\n       echo \"\"\n@@ -328,7 +351,9 @@ for ml in $MULTILIBS; do\n \t       -e \"s%@multilib_dir@%$dir%g\" \\\n \t       -e \"s%@shlib_objs@%$libgcc_sh_objs%g\" \\\n \t       -e \"s%@shlib_base_name@%$shlib_base_name%g\" \\\n-\t       -e \"s%@shlib_map_file@%$mapfile%g\"\n+\t       -e \"s%@shlib_map_file@%$mapfile%g\" \\\n+\t       -e \"s%@shlib_so_name@%$shlib_base_name%g\" \\\n+\t       -e \"s%@shlib_dir@%%g\"\n     fi\n   fi\n done\n@@ -424,17 +449,61 @@ for ml in $MULTILIBS; do\n     echo '\t$(RANLIB_FOR_TARGET)' ${ldir}/libgcc_eh.a\n \n     if [ -z \"$SHLIB_MULTILIB\" ]; then\n-      if [ \"$dir\" = \".\" ]; then\n-\tshlib_base_name=\"libgcc_s\";\n+      if [ \"$dir\" = . ]; then\n+\tshlib_base_name=libgcc_s\n       else\n \tshlib_base_name=libgcc_s_`echo $dir | sed s,/,_,g`\n       fi\n+      shlib_so_name=\"$shlib_base_name\"\n+      shlib_dir=\n+      shlib_slibdir_qual=\n+      if [ -n \"$SHLIB_SLIBDIR_SUFFIXES\" ]; then\n+\tshlib_slibdir_qual=none\n+\tif [ \"$dir\" != . ]; then\n+\t  shlib_dir=\"$dir\"/\n+\t  for suffix_pair in $SHLIB_SLIBDIR_SUFFIXES ; do\n+\t    base_ml_dir=`echo ${suffix_pair} | sed -e 's/:.*$//' -e 's/=/$(EQ)/g'`\n+\t    if [ \"$dir\" = \"$base_ml_dir\" ]; then\n+\t      shlib_so_name=libgcc_s\n+\t      shlib_slibdir_qual=`echo ${suffix_pair} | sed -e 's/^[^:]*://'`\n+\t      break\n+\t    else\n+\t      canon_dir=`echo $dir | sed -n -e \"s:$base_ml_dir/::p\"`\n+\t      if [ -n \"$canon_dir\" ]; then\n+\t\tshlib_so_name=libgcc_s_`echo $canon_dir | sed s,/,_,g`\n+\t\tshlib_slibdir_qual=`echo ${suffix_pair} | sed -e 's/^[^:]*://'`\n+\t\tbreak\n+\t      fi\n+\t    fi\n+\t  done\n+\tfi\n+\tif [ \"$shlib_slibdir_qual\" = none ]; then\n+\t  for suffix_pair in $SHLIB_SLIBDIR_SUFFIXES ; do\n+\t    base_ml_dir=`echo ${suffix_pair} | sed -e 's/:.*$//' -e 's/=/$(EQ)/g'`\n+\t    shlib_slibdir_qual=`echo ${suffix_pair} | sed -e 's/^[^:]*://'`\n+\t    for ml2 in $MULTILIBS; do\n+\t      dir2=`echo ${ml2} | sed -e 's/;.*$//' -e 's/=/$(EQ)/g'`\n+\t      if [ \"$base_ml_dir\" = \"$dir2\" ]; then\n+\t\tshlib_slibdir_qual=\n+\t\tbreak\n+\t      fi\n+\t    done\n+\t    if [ -n \"$shlib_slibdir_qual\" ]; then break; fi\n+\t  done\n+\tfi\n+      fi\n       echo \"\t$SHLIB_INSTALL\" \\\n-\t| sed -e \"s%@shlib_base_name@%$shlib_base_name%g\"\n+\t| sed -e \"s%@shlib_base_name@%$shlib_base_name%g\" \\\n+\t      -e \"s%@shlib_so_name@%$shlib_so_name%g\" \\\n+\t      -e \"s%@shlib_dir@%$shlib_dir%g\" \\\n+\t      -e \"s%@shlib_slibdir_qual@%$shlib_slibdir_qual%g\"\n     elif [ \"$SHLIB_MULTILIB\" = \"$dir\" ]; then\n       shlib_base_name=\"libgcc_s\";\n       echo \"\t$SHLIB_INSTALL\" \\\n-\t| sed -e \"s%@shlib_base_name@%$shlib_base_name%g\"\n+\t| sed -e \"s%@shlib_base_name@%$shlib_base_name%g\" \\\n+\t      -e \"s%@shlib_so_name@%$shlib_base_name%g\" \\\n+\t      -e \"s%@shlib_dir@%%g\" \\\n+\t      -e \"s%@shlib_slibdir_qual@%%g\"\n     fi\n   fi\n done"}, {"sha": "371e523957eca1e07608713a35d11f50c38fcdf5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2937267b6a53ca3c5e1aa45339634c2901f844cb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2937267b6a53ca3c5e1aa45339634c2901f844cb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2937267b6a53ca3c5e1aa45339634c2901f844cb", "patch": "@@ -1,3 +1,10 @@\n+2002-05-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* lib/g77.exp (g77_link_flags): Append all multilib dirs containing\n+\tlibgcc_s*.so.1 below gcc object dir to LD_LIBRARY_PATH.\n+\t* lib/g++.exp (g++_link_flags): Likewise.\n+\t* lib/objc.exp (objc_target_compile): Likewise.\n+\n 2002-05-09  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* gcc.dg/cpp/poison.c: Update."}, {"sha": "4fb903eed66eb5ba68ab78a4b0bae4a6cd7ba7f6", "filename": "gcc/testsuite/lib/g++.exp", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2937267b6a53ca3c5e1aa45339634c2901f844cb/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2937267b6a53ca3c5e1aa45339634c2901f844cb/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp?ref=2937267b6a53ca3c5e1aa45339634c2901f844cb", "patch": "@@ -1,4 +1,5 @@\n-# Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 2000, 2001 Free Software Foundation, Inc.\n+# Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 2000, 2001, 2002\n+# Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -108,6 +109,7 @@ proc g++_link_flags { paths } {\n     global rootme\n     global srcdir\n     global ld_library_path\n+    global GXX_UNDER_TEST\n \n     set gccpath ${paths}\n     set libio_dir \"\"\n@@ -137,6 +139,20 @@ proc g++_link_flags { paths } {\n           append flags \"-L${gccpath}/librx \"\n       }\n       append ld_library_path \":${rootme}\"\n+      set compiler [lindex $GXX_UNDER_TEST 0]\n+      if { [is_remote host] == 0 && [which $compiler] != 0 } {\n+\tforeach i \"[exec $compiler --print-multi-lib]\" {\n+\t  set mldir \"\"\n+\t  regexp -- \"\\[a-z0-9=/\\.-\\]*;\" $i mldir\n+\t  set mldir [string trimright $mldir \"\\;@\"]\n+\t  if { \"$mldir\" == \".\" } {\n+\t    continue\n+\t  }\n+\t  if { [llength [glob -nocomplain ${rootme}/${mldir}/libgcc_s*.so.*]] == 1 } {\n+\t    append ld_library_path \":${rootme}/${mldir}\"\n+\t  }\n+\t}\n+      }\n     } else {\n       global tool_root_dir;\n "}, {"sha": "42780c227c90dc14d06ee6036258a7720b5dc669", "filename": "gcc/testsuite/lib/g77.exp", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2937267b6a53ca3c5e1aa45339634c2901f844cb/gcc%2Ftestsuite%2Flib%2Fg77.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2937267b6a53ca3c5e1aa45339634c2901f844cb/gcc%2Ftestsuite%2Flib%2Fg77.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg77.exp?ref=2937267b6a53ca3c5e1aa45339634c2901f844cb", "patch": "@@ -75,6 +75,7 @@ proc g77_link_flags { paths } {\n     global rootme\n     global srcdir\n     global ld_library_path\n+    global G77_UNDER_TEST\n \n     set gccpath ${paths}\n     set libio_dir \"\"\n@@ -93,6 +94,20 @@ proc g77_link_flags { paths } {\n           append flags \"-L${gccpath}/libiberty \"\n       }\n       append ld_library_path \":${rootme}\"\n+      set compiler [lindex $G77_UNDER_TEST 0]\n+      if { [is_remote host] == 0 && [which $compiler] != 0 } {\n+\tforeach i \"[exec $compiler --print-multi-lib]\" {\n+\t  set mldir \"\"\n+\t  regexp -- \"\\[a-z0-9=/\\.-\\]*;\" $i mldir\n+\t  set mldir [string trimright $mldir \"\\;@\"]\n+\t  if { \"$mldir\" == \".\" } {\n+\t    continue\n+\t  }\n+\t  if { [llength [glob -nocomplain ${rootme}/${mldir}/libgcc_s*.so.*]] == 1 } {\n+\t    append ld_library_path \":${rootme}/${mldir}\"\n+\t  }\n+\t}\n+      }\n     }\n \n     # On IRIX 6, we have to set variables akin to LD_LIBRARY_PATH, but"}, {"sha": "a1431a116ec03756ced5704b89add0b095322e05", "filename": "gcc/testsuite/lib/objc.exp", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2937267b6a53ca3c5e1aa45339634c2901f844cb/gcc%2Ftestsuite%2Flib%2Fobjc.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2937267b6a53ca3c5e1aa45339634c2901f844cb/gcc%2Ftestsuite%2Flib%2Fobjc.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fobjc.exp?ref=2937267b6a53ca3c5e1aa45339634c2901f844cb", "patch": "@@ -1,4 +1,4 @@\n-# Copyright (C) 1992, 1993, 1994, 1996, 1997, 2000, 2001\n+# Copyright (C) 1992, 1993, 1994, 1996, 1997, 2000, 2001, 2002\n # Free Software Foundation, Inc.\n \n # This program is free software; you can redistribute it and/or modify\n@@ -85,12 +85,14 @@ proc objc_version { } {\n set objc_initialized 0\n \n proc objc_init { args } {\n+    global rootme\n     global tmpdir\n     global libdir\n     global gluefile wrap_flags\n     global objc_initialized\n     global OBJC_UNDER_TEST\n     global TOOL_EXECUTABLE\n+    global objc_libgcc_s_path\n \n     if { $objc_initialized == 1 } { return; }\n \n@@ -115,6 +117,22 @@ proc objc_init { args } {\n \t    unset gluefile\n \t}\n     }\n+\n+    set objc_libgcc_s_path \"${rootme}\"\n+    set compiler [lindex $OBJC_UNDER_TEST 0]\n+    if { [is_remote host] == 0 && [which $compiler] != 0 } {\n+\tforeach i \"[exec $compiler --print-multi-lib]\" {\n+\t    set mldir \"\"\n+\t    regexp -- \"\\[a-z0-9=/\\.-\\]*;\" $i mldir\n+\t    set mldir [string trimright $mldir \"\\;@\"]\n+\t    if { \"$mldir\" == \".\" } {\n+\t\tcontinue\n+\t    }\n+\t    if { [llength [glob -nocomplain ${rootme}/${mldir}/libgcc_s*.so.*]] == 1 } {\n+\t\tappend objc_libgcc_s_path \":${rootme}/${mldir}\"\n+\t    }\n+\t}\n+    }\n }\n \n proc objc_target_compile { source dest type options } {\n@@ -124,8 +142,9 @@ proc objc_target_compile { source dest type options } {\n     global OBJC_UNDER_TEST\n     global TOOL_OPTIONS\n     global ld_library_path\n+    global objc_libgcc_s_path\n \n-    set ld_library_path \".:${rootme}\"\n+    set ld_library_path \".:${objc_libgcc_s_path}\"\n     lappend options \"libs=-lobjc\"\n \n     if { [target_info needs_status_wrapper]!=\"\" && [info exists gluefile] } {"}, {"sha": "3827474e8e07d16cdc03681c6503f55394dad6b3", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2937267b6a53ca3c5e1aa45339634c2901f844cb/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2937267b6a53ca3c5e1aa45339634c2901f844cb/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=2937267b6a53ca3c5e1aa45339634c2901f844cb", "patch": "@@ -1,3 +1,9 @@\n+2002-05-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* testsuite/lib/libjava.exp (libjava_arguments): Append all\n+\tmultilib dirs containing libgcc_s*.so.1 below gcc object dir to\n+\tLD_LIBRARY_PATH.\n+\n 2002-05-08  Mark Mitchell  <mark@codesourcery.com>\n \n \t* libjava/Makefile.am (all_java_source_files): New variable."}, {"sha": "8f1f82948d4e15e33cd1a2ba322150b18edbf71b", "filename": "libjava/testsuite/lib/libjava.exp", "status": "modified", "additions": 27, "deletions": 7, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2937267b6a53ca3c5e1aa45339634c2901f844cb/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2937267b6a53ca3c5e1aa45339634c2901f844cb/libjava%2Ftestsuite%2Flib%2Flibjava.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flib%2Flibjava.exp?ref=2937267b6a53ca3c5e1aa45339634c2901f844cb", "patch": "@@ -113,6 +113,8 @@ proc libjava_init { args } {\n     global original_ld_library_path\n     global env objdir\n     global env gcc_version\n+    global tool_root_dir\n+    global libjava_libgcc_s_path\n \n     if { $libjava_initialized == 1 } { return; }\n \n@@ -170,6 +172,29 @@ proc libjava_init { args } {\n \t}\n     }\n \n+    # Finally, add the gcc build directory so that we can find the\n+    # shared libgcc.  This, like much of dejagnu, is hideous.\n+    set libjava_libgcc_s_path {}\n+    set gccdir [lookfor_file $tool_root_dir gcc/libgcc_s.so]\n+    if {$gccdir != \"\"} {\n+\tset gccdir [file dirname $gccdir]\n+\tlappend libjava_libgcc_s_path $gccdir\n+\tset compiler ${gccdir}/xgcc\n+\tif { [is_remote host] == 0 && [which $compiler] != 0 } {\n+\t    foreach i \"[exec $compiler --print-multi-lib]\" {\n+\t\tset mldir \"\"\n+\t\tregexp -- \"\\[a-z0-9=/\\.-\\]*;\" $i mldir\n+\t\tset mldir [string trimright $mldir \"\\;@\"]\n+\t\tif { \"$mldir\" == \".\" } {\n+\t\t    continue\n+\t\t}\n+\t\tif { [llength [glob -nocomplain ${gccdir}/${mldir}/libgcc_s*.so.*]] == 1 } {\n+\t\t    lappend libjava_libgcc_s_path \"${gccdir}/${mldir}\"\n+\t\t}\n+\t    }\n+\t}\n+    }\n+\n     set libjava_initialized 1\n }\n \n@@ -252,6 +277,7 @@ proc libjava_arguments {{mode compile}} {\n     global env\n     global tool_root_dir\n     global gcc_version\n+    global libjava_libgcc_s_path\n \n     if [info exists LIBJAVA] {\n \tset libjava $LIBJAVA;\n@@ -301,13 +327,7 @@ proc libjava_arguments {{mode compile}} {\n \t}\n     }\n \n-    # Finally, add the gcc build directory so that we can find the\n-    # shared libgcc.  This, like much of dejagnu, is hideous.\n-    set gccdir [lookfor_file $tool_root_dir gcc/libgcc_s.so]\n-    if {$gccdir != \"\"} {\n-\tlappend lpath [file dirname $gccdir]\n-    }\n-\n+    set lpath [concat $lpath $libjava_libgcc_s_path]\n     set ld_library_path [join $lpath :]\n \n     # That's enough to make things work for the normal case."}, {"sha": "1d9d90073f099d02841d7b0d24e66084e5a4e9ca", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2937267b6a53ca3c5e1aa45339634c2901f844cb/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2937267b6a53ca3c5e1aa45339634c2901f844cb/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2937267b6a53ca3c5e1aa45339634c2901f844cb", "patch": "@@ -1,3 +1,9 @@\n+2002-05-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* testsuite/lib/libstdc++-v3-dg.exp (libstdc++-v3-init): Append all\n+\tmultilib dirs containing libgcc_s*.so.1 below gcc object dir to\n+\tLD_LIBRARY_PATH.\n+\n 2002-05-08  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* configure.in (ORIGINAL_LD_FOR_MULTILIBS): Preserve LD at"}, {"sha": "adbd148e0bb0e2ff32801e1b7ea282dfbaf38566", "filename": "libstdc++-v3/testsuite/lib/libstdc++-v3-dg.exp", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2937267b6a53ca3c5e1aa45339634c2901f844cb/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B-v3-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2937267b6a53ca3c5e1aa45339634c2901f844cb/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B-v3-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B-v3-dg.exp?ref=2937267b6a53ca3c5e1aa45339634c2901f844cb", "patch": "@@ -67,6 +67,20 @@ proc libstdc++-v3-init { args } {\n \n     set ld_library_path \".\"\n     append ld_library_path \":${gccdir}\"\n+    set compiler ${gccdir}/g++\n+    if { [is_remote host] == 0 && [which $compiler] != 0 } {\n+      foreach i \"[exec $compiler --print-multi-lib]\" {\n+\tset mldir \"\"\n+\tregexp -- \"\\[a-z0-9=/\\.-\\]*;\" $i mldir\n+\tset mldir [string trimright $mldir \"\\;@\"]\n+\tif { \"$mldir\" == \".\" } {\n+\t  continue\n+\t}\n+\tif { [llength [glob -nocomplain ${gccdir}/${mldir}/libgcc_s*.so.*]] == 1 } {\n+\t  append ld_library_path \":${gccdir}/${mldir}\"\n+\t}\n+      }\n+    }\n     append ld_library_path \":${blddir}/src/.libs\"\n \n     # On IRIX 6, we have to set variables akin to LD_LIBRARY_PATH, but"}]}