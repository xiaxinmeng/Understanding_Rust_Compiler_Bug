{"sha": "0c85dbfd1251f34624e17cae810de6ddd4257cc4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGM4NWRiZmQxMjUxZjM0NjI0ZTE3Y2FlODEwZGU2ZGRkNDI1N2NjNA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2003-03-28T09:10:43Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-03-28T09:10:43Z"}, "message": "re PR target/10067 (GCC-3.2.2 outputs invalid asm on sparc64)\n\n\tPR target/10067\n\t* config/sparc/sparc.md (jump pattern): Correct order\n\twhen issuing the annuling marker.\n\nFrom-SVN: r64964", "tree": {"sha": "a9235c2432256d2a905e03464888b615e8a54fa0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9235c2432256d2a905e03464888b615e8a54fa0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c85dbfd1251f34624e17cae810de6ddd4257cc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c85dbfd1251f34624e17cae810de6ddd4257cc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c85dbfd1251f34624e17cae810de6ddd4257cc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c85dbfd1251f34624e17cae810de6ddd4257cc4/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c54390c5a14d2c67e803a644bbf28ea6e5ab5af5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c54390c5a14d2c67e803a644bbf28ea6e5ab5af5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c54390c5a14d2c67e803a644bbf28ea6e5ab5af5"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "581d7588aff95beea960f9c2da263daa643b1e56", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c85dbfd1251f34624e17cae810de6ddd4257cc4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c85dbfd1251f34624e17cae810de6ddd4257cc4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c85dbfd1251f34624e17cae810de6ddd4257cc4", "patch": "@@ -1,3 +1,9 @@\n+2003-03-28  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR target/10067\n+\t* config/sparc/sparc.md (jump pattern): Correct order\n+\twhen issuing the annuling marker.\n+\n 2003-03-28  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR c/8281"}, {"sha": "bc8c634ac18d49c18bdd7e2055f89d52c72660b5", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c85dbfd1251f34624e17cae810de6ddd4257cc4/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c85dbfd1251f34624e17cae810de6ddd4257cc4/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=0c85dbfd1251f34624e17cae810de6ddd4257cc4", "patch": "@@ -7252,7 +7252,7 @@\n \t  == INSN_ADDRESSES (INSN_UID (insn))))\n     return \"b\\t%l0%#\";\n   else\n-    return TARGET_V9 ? \"ba,pt%*\\t%%xcc, %l0%(\" : \"b%*\\t%l0%(\";\n+    return TARGET_V9 ? \"ba%*,pt\\t%%xcc, %l0%(\" : \"b%*\\t%l0%(\";\n }\n   [(set_attr \"type\" \"uncond_branch\")])\n "}, {"sha": "5818881ca76466f32171446bb9fc760cac4dee65", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c85dbfd1251f34624e17cae810de6ddd4257cc4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c85dbfd1251f34624e17cae810de6ddd4257cc4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0c85dbfd1251f34624e17cae810de6ddd4257cc4", "patch": "@@ -1,3 +1,7 @@\n+2003-03-28  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.dg/ultrasp8.c: New test.\n+\n 2003-03-28  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* gcc.dg/ultrasp7.c: New test."}, {"sha": "9b0c8d976c18ec64c141f4d8e7eaac375117c7b3", "filename": "gcc/testsuite/gcc.dg/ultrasp8.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c85dbfd1251f34624e17cae810de6ddd4257cc4/gcc%2Ftestsuite%2Fgcc.dg%2Fultrasp8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c85dbfd1251f34624e17cae810de6ddd4257cc4/gcc%2Ftestsuite%2Fgcc.dg%2Fultrasp8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fultrasp8.c?ref=0c85dbfd1251f34624e17cae810de6ddd4257cc4", "patch": "@@ -0,0 +1,39 @@\n+/* PR target/10067 */\n+/* Originator: <dat94ali@ludat.lth.se> */\n+/* { dg-do compile { target sparc-*-* } } */\n+/* { dg-options \"-O2 -m64 -mtune=supersparc\" } */\n+\n+struct _reent;\n+\n+extern unsigned long __malloc_trim_threshold;\n+extern unsigned long __malloc_top_pad;\n+\n+int _mallopt_r(struct _reent *reent_ptr, int param_number, int value)\n+{\n+  __malloc_lock(reent_ptr);\n+\n+  switch(param_number)\n+  {\n+    case -1:\n+      __malloc_trim_threshold = value;\n+      __malloc_unlock(reent_ptr);\n+      return 1;\n+\n+    case -2:\n+      __malloc_top_pad = value;\n+      __malloc_unlock(reent_ptr);\n+      return 1;\n+\n+    case -3:\n+      __malloc_unlock(reent_ptr);\n+      return 1;\n+\n+    case -4:\n+      __malloc_unlock(reent_ptr);\n+      return value == 0;\n+\n+    default:\n+      __malloc_unlock(reent_ptr);\n+      return 0;\n+  }\n+}"}]}