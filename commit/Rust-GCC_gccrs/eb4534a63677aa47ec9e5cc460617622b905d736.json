{"sha": "eb4534a63677aa47ec9e5cc460617622b905d736", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI0NTM0YTYzNjc3YWE0N2VjOWU1Y2M0NjA2MTc2MjJiOTA1ZDczNg==", "commit": {"author": {"name": "Kresten Krab Thorup", "email": "krab@gnu.org", "date": "1999-08-18T14:16:42Z"}, "committer": {"name": "Kresten Krab Thorup", "email": "krab@gcc.gnu.org", "date": "1999-08-18T14:16:42Z"}, "message": "natClassLoader.cc (_Jv_PrepareCompiledClass): Renamed from _Jv_InternClassStrings.\n\n\t* java/lang/natClassLoader.cc (_Jv_PrepareCompiledClass): Renamed\n\tfrom _Jv_InternClassStrings.\n\n\t* prims.cc (_Jv_RunMain): New function.\n\t(JvRunMain): Remove gij-support.\n\n\t* gij.cc (main): Use _Jv_RunMain.\n\n\t* java/util/zip/ZipFile.java: Call readDirectory in constructor.\n\n\t* interpret.cc (PUSHA, PUSHI, PUSHF, PUSHL, PUSHD): Don't store\n\targument in temp variable.\n\t(continue1): For all op_x2y insns, use temp variable for\n\tintermediate value.  Also remove some comments.\n\n\t* java/lang/natClass.cc (newInstance): Call _Jv_InitClass.\n\t(forName): Don't call _Jv_InitClass.\n\n\t* java/lang/Class.java (getResource,getResourceAsStream): Implement.\n\n\t* java/util/zip/ZipEntry.java (ZipEntry(ZipEntry)): New construcor.\n\n\t* java/util/jar/JarInputStream.java: New file.\n\n\t* java/util/jar/JarEntry.java: New file.\n\n\t* java/util/jar/JarFile.java: New file.\n\n\t* java/net/URLClassLoader.java: New file.\n\n\t* java/net/JarURLConnection.java: New file.\n\n\t* gnu/gcj/protocol/jar/Handler.java: New file.\n\n\t* gnu/gcj/protocol/jar/Connection.java: New file.\n\n\t* java/security/SecureClassLoader.java: New file.\n\n\t* java/lang/ClassLoader.java (parent): New variable.\n\t(ClassLoader (ClassLoader)): new constructor.\n\t(findClass): New method.\n\t(loadClass): Add default 1.2 implementation.\n\t(getSystemResourceAsBytes, getResourceAsBytes): Removed.\n\t(readfully): Removed.\n\n\t* gnu/gcj/runtime/VMClassLoader.java: Moved from java/lang.\n\t(findSystemClass): New method.\n\t(VMClassLoader): Constructor rewritten.\n\t(init): New method.\n\tAll other methods removed.\n\n\t* java/lang/natClassLoader.cc: Change use of java::lang::VMClassLoader\n\tto gnu::gcj::runtime::VMClassLoader.\n\t(_Jv_InternClassStrings): Use _Jv_ResolvePoolEntry.  Also handle\n\tclass entries.\n\t(VMClassLoader::findSystemClass): renamed from findBootClass.\n\n\t* Makefile.am: Add new files.\n\t(FirstThread.h, ThreadGroup.h): Add _Jv_Main friend.\n\n\t* Makefile.in: Rebuilt.\n\nFrom-SVN: r28748", "tree": {"sha": "3bcaf8f2877d654d67d3e2cc982a85a71299ca35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bcaf8f2877d654d67d3e2cc982a85a71299ca35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb4534a63677aa47ec9e5cc460617622b905d736", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb4534a63677aa47ec9e5cc460617622b905d736", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb4534a63677aa47ec9e5cc460617622b905d736", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb4534a63677aa47ec9e5cc460617622b905d736/comments", "author": {"login": "krestenkrab", "id": 137385, "node_id": "MDQ6VXNlcjEzNzM4NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/137385?v=4", "gravatar_id": "", "url": "https://api.github.com/users/krestenkrab", "html_url": "https://github.com/krestenkrab", "followers_url": "https://api.github.com/users/krestenkrab/followers", "following_url": "https://api.github.com/users/krestenkrab/following{/other_user}", "gists_url": "https://api.github.com/users/krestenkrab/gists{/gist_id}", "starred_url": "https://api.github.com/users/krestenkrab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/krestenkrab/subscriptions", "organizations_url": "https://api.github.com/users/krestenkrab/orgs", "repos_url": "https://api.github.com/users/krestenkrab/repos", "events_url": "https://api.github.com/users/krestenkrab/events{/privacy}", "received_events_url": "https://api.github.com/users/krestenkrab/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "312f625598f2eed11718c43a649027bc760ef30a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/312f625598f2eed11718c43a649027bc760ef30a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/312f625598f2eed11718c43a649027bc760ef30a"}], "stats": {"total": 2708, "additions": 2193, "deletions": 515}, "files": [{"sha": "b4aa1fd8f596da02978f07c9e3530623e2159877", "filename": "libjava/ChangeLog", "status": "modified", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=eb4534a63677aa47ec9e5cc460617622b905d736", "patch": "@@ -1,3 +1,67 @@\n+1999-08-18  Kresten Krab Thorup  <krab@gnu.org>\n+\n+\t* java/lang/natClassLoader.cc (_Jv_PrepareCompiledClass): Renamed\n+\tfrom _Jv_InternClassStrings.   \n+\n+\t* prims.cc (_Jv_RunMain): New function.\n+\t(JvRunMain): Remove gij-support.\n+\n+\t* gij.cc (main): Use _Jv_RunMain.\n+\n+\t* java/util/zip/ZipFile.java: Call readDirectory in constructor.\n+\n+\t* interpret.cc (PUSHA, PUSHI, PUSHF, PUSHL, PUSHD): Don't store\n+\targument in temp variable.\n+\t(continue1): For all op_x2y insns, use temp variable for\n+\tintermediate value.  Also remove some comments.\n+\n+\t* java/lang/natClass.cc (newInstance): Call _Jv_InitClass.\n+\t(forName): Don't call _Jv_InitClass.\n+\n+\t* java/lang/Class.java (getResource,getResourceAsStream): Implement.\n+\n+\t* java/util/zip/ZipEntry.java (ZipEntry(ZipEntry)): New construcor.\n+\n+\t* java/util/jar/JarInputStream.java: New file.\n+\n+\t* java/util/jar/JarEntry.java: New file.\n+\n+\t* java/util/jar/JarFile.java: New file.\n+\n+\t* java/net/URLClassLoader.java: New file.\n+\n+\t* java/net/JarURLConnection.java: New file.\n+\n+\t* gnu/gcj/protocol/jar/Handler.java: New file.\n+\n+\t* gnu/gcj/protocol/jar/Connection.java: New file.\n+\n+\t* java/security/SecureClassLoader.java: New file.\n+\n+\t* java/lang/ClassLoader.java (parent): New variable.\n+\t(ClassLoader (ClassLoader)): new constructor.  \n+\t(findClass): New method.\n+\t(loadClass): Add default 1.2 implementation.\n+\t(getSystemResourceAsBytes, getResourceAsBytes): Removed.\n+\t(readfully): Removed.\n+\n+\t* gnu/gcj/runtime/VMClassLoader.java: Moved from java/lang. \n+\t(findSystemClass): New method.\n+\t(VMClassLoader): Constructor rewritten.\n+\t(init): New method.\n+\tAll other methods removed.\n+\t\n+\t* java/lang/natClassLoader.cc: Change use of java::lang::VMClassLoader\n+\tto gnu::gcj::runtime::VMClassLoader. \n+\t(_Jv_InternClassStrings): Use _Jv_ResolvePoolEntry.  Also handle\n+\tclass entries.   \n+\t(VMClassLoader::findSystemClass): renamed from findBootClass.\n+\n+\t* Makefile.am: Add new files.\n+\t(FirstThread.h, ThreadGroup.h): Add _Jv_Main friend.\n+\n+\t* Makefile.in: Rebuilt.\n+\n 1999-08-17  Tom Tromey  <tromey@cygnus.com>\n \n \t* java/lang/natThread.cc (sleep): Turn 0 millis and 0 nanos into 1"}, {"sha": "a394fb9a95d40a97143f4b1a2a15b32f3ff17b84", "filename": "libjava/Makefile.am", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=eb4534a63677aa47ec9e5cc460617622b905d736", "patch": "@@ -201,16 +201,18 @@ nat_headers = $(ordinary_java_source_files:.java=.h) \\\n $(nat_headers): libgcj.zip\n \n ## Our internal main program needs to be able to create a FirstThread.\n-FTFRIEND = void JvRunMain (jclass klass, int argc, const char **argv)\n java/lang/FirstThread.h: java/lang/FirstThread.class libgcj.zip\n-\t$(GCJH) -classpath $(top_builddir) -friend '$(FTFRIEND);' \\\n+\t$(GCJH) -classpath $(top_builddir) \\\n+\t\t-friend 'void JvRunMain (jclass, int, const char **);' \\\n+\t\t-friend 'void _Jv_RunMain (const char*, int, const char **);' \\\n \t\t$(basename $<)\n \n ## ThreadGroup has a special constructor that is used when creating\n ## the first ThreadGroup.  We need to expose this to the main program.\n-TGFRIEND = void JvRunMain (jclass klass, int argc, const char **argv)\n java/lang/ThreadGroup.h: java/lang/ThreadGroup.class libgcj.zip\n-\t$(GCJH) -classpath $(top_builddir) -friend '$(TGFRIEND);' \\\n+\t$(GCJH) -classpath $(top_builddir) \\\n+\t\t-friend 'void JvRunMain (jclass, int, const char **);' \\\n+\t\t-friend 'void _Jv_RunMain (const char*, int, const char **);' \\\n \t\t$(basename $<)\n \n java/lang/String.h: java/lang/String.class libgcj.zip\n@@ -236,7 +238,7 @@ java/lang/reflect/Method.h: java/lang/reflect/Method.class libgcj.zip\n \t    -friend 'java::lang::Class;' \\\n \t    $(basename $<)\n \n-java/lang/VMClassLoader.h: java/lang/VMClassLoader.class libgcj.zip\n+gnu/gcj/runtime/VMClassLoader.h: gnu/gcj/runtime/VMClassLoader.class libgcj.zip\n \t$(GCJH) -classpath $(top_builddir) \\\n \t    -friend 'java::lang::ClassLoader;' \\\n \t    $(basename $<)\n@@ -481,6 +483,7 @@ built_java_source_files = java/lang/ConcreteProcess.java\n ## header, please list it in special_java_source_files.\n ordinary_java_source_files =  $(convert_source_files) \\\n gnu/gcj/runtime/MethodInvocation.java \\\n+gnu/gcj/runtime/VMClassLoader.java \\\n gnu/gcj/util/path/SearchPath.java \\\n gnu/gcj/util/path/PathEntry.java \\\n gnu/gcj/util/path/DirectoryPathEntry.java \\\n@@ -498,6 +501,8 @@ gnu/gcj/protocol/file/Connection.java \\\n gnu/gcj/protocol/file/Handler.java \\\n gnu/gcj/protocol/http/Connection.java \\\n gnu/gcj/protocol/http/Handler.java \\\n+gnu/gcj/protocol/jar/Handler.java \\\n+gnu/gcj/protocol/jar/Connection.java \\\n gnu/gcj/RawData.java \\\n gnu/gcj/util/EnumerationChain.java \\\n java/io/BufferedInputStream.java \\\n@@ -565,7 +570,6 @@ java/lang/ClassCastException.java \\\n java/lang/ClassCircularityError.java \\\n java/lang/ClassFormatError.java\t\\\n java/lang/ClassLoader.java \\\n-java/lang/VMClassLoader.java \\\n java/lang/ClassNotFoundException.java \\\n java/lang/CloneNotSupportedException.java \\\n java/lang/Cloneable.java \\\n@@ -643,6 +647,7 @@ java/net/DatagramSocketImpl.java \\\n java/net/FileNameMap.java \\\n java/net/HttpURLConnection.java \\\n java/net/InetAddress.java \\\n+java/net/JarURLConnection.java \\\n java/net/MalformedURLException.java \\\n java/net/MulticastSocket.java \\\n java/net/NoRouteToHostException.java \\\n@@ -656,6 +661,7 @@ java/net/SocketImpl.java \\\n java/net/SocketImplFactory.java\t\\\n java/net/SocketOptions.java \\\n java/net/URL.java \\\n+java/net/URLClassLoader.java \\\n java/net/URLConnection.java \\\n java/net/URLDecoder.java \\\n java/net/URLEncoder.java \\\n@@ -665,6 +671,7 @@ java/net/UnknownHostException.java \\\n java/net/UnknownServiceException.java \\\n java/security/MessageDigest.java \\\n java/security/NoSuchAlgorithmException.java \\\n+java/security/SecureClassLoader.java \\\n java/text/BreakIterator.java \\\n java/text/CharacterIterator.java \\\n java/text/ChoiceFormat.java \\\n@@ -711,6 +718,9 @@ java/util/StringTokenizer.java \\\n java/util/TimeZone.java\t\\\n java/util/TooManyListenersException.java \\\n java/util/Vector.java \\\n+java/util/jar/JarFile.java \\\n+java/util/jar/JarInputStream.java \\\n+java/util/jar/JarEntry.java \\\n java/util/zip/Adler32.java \\\n java/util/zip/CRC32.java \\\n java/util/zip/CheckedInputStream.java \\"}, {"sha": "5c0889da92f3dc64a368d62e2739ee2a73dc864a", "filename": "libjava/Makefile.in", "status": "modified", "additions": 983, "deletions": 206, "changes": 1189, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=eb4534a63677aa47ec9e5cc460617622b905d736", "patch": "@@ -1,4 +1,4 @@\n-# Makefile.in generated automatically by automake 1.4 from Makefile.am\n+# Makefile.in generated automatically by automake 1.4a from Makefile.am\n \n # Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n@@ -10,7 +10,6 @@\n # even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n # PARTICULAR PURPOSE.\n \n-\n SHELL = @SHELL@\n \n srcdir = @srcdir@\n@@ -46,9 +45,10 @@ AUTOMAKE = @AUTOMAKE@\n AUTOHEADER = @AUTOHEADER@\n \n INSTALL = @INSTALL@\n-INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)\n+INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n+INSTALL_STRIP_FLAG =\n transform = @program_transform_name@\n \n NORMAL_INSTALL = :\n@@ -71,7 +71,9 @@ COMPPATH = @COMPPATH@\n CPP = @CPP@\n CXX = @CXX@\n CXXCPP = @CXXCPP@\n+DIVIDESPEC = @DIVIDESPEC@\n DLLTOOL = @DLLTOOL@\n+EH_COMMON_INCLUDE = @EH_COMMON_INCLUDE@\n EXEEXT = @EXEEXT@\n GCDEPS = @GCDEPS@\n GCINCS = @GCINCS@\n@@ -105,41 +107,28 @@ ZLIBSPEC = @ZLIBSPEC@\n here = @here@\n libgcj_basedir = @libgcj_basedir@\n \n+\n AUTOMAKE_OPTIONS = foreign no-installinfo\n \n-@TESTSUBDIR_TRUE@SUBDIRS = \\\n-@TESTSUBDIR_TRUE@testsuite\n-@USE_LIBDIR_TRUE@toolexeclibdir = \\\n-@USE_LIBDIR_TRUE@$(libdir)$(MULTISUBDIR)\n-@USE_LIBDIR_FALSE@toolexeclibdir = \\\n-@USE_LIBDIR_FALSE@$(toolexecdir)/lib$(MULTISUBDIR)\n-@USE_LIBDIR_FALSE@toolexecdir = \\\n-@USE_LIBDIR_FALSE@$(exec_prefix)/$(target_alias)\n+@TESTSUBDIR_TRUE@SUBDIRS = @TESTSUBDIR_TRUE@testsuite\n+@USE_LIBDIR_TRUE@toolexeclibdir = @USE_LIBDIR_TRUE@$(libdir)$(MULTISUBDIR)\n+@USE_LIBDIR_FALSE@toolexeclibdir = @USE_LIBDIR_FALSE@$(toolexecdir)/lib$(MULTISUBDIR)\n+@USE_LIBDIR_FALSE@toolexecdir = @USE_LIBDIR_FALSE@$(exec_prefix)/$(target_alias)\n \n toolexeclib_LTLIBRARIES = libgcj.la\n toolexeclib_DATA = libgcj.spec\n data_DATA = libgcj.zip\n \n-@NATIVE_TRUE@bin_PROGRAMS = \\\n-@NATIVE_TRUE@jv-convert gij\n-@CANADIAN_TRUE@@NULL_TARGET_TRUE@GCJ = \\\n-@CANADIAN_TRUE@@NULL_TARGET_TRUE@gcj\n-@CANADIAN_TRUE@@NULL_TARGET_FALSE@GCJ = \\\n-@CANADIAN_TRUE@@NULL_TARGET_FALSE@$(target_alias)-gcj\n-@CANADIAN_FALSE@GCJ = \\\n-@CANADIAN_FALSE@$(expanded)/gcj$(EXEEXT) -B$(expanded)/\n-@CANADIAN_TRUE@@NULL_TARGET_TRUE@ZIP = \\\n-@CANADIAN_TRUE@@NULL_TARGET_TRUE@$(MULTIBUILDTOP)../$(COMPPATH)/zip/zip$(EXEEXT)\n-@CANADIAN_TRUE@@NULL_TARGET_FALSE@ZIP = \\\n-@CANADIAN_TRUE@@NULL_TARGET_FALSE@zip\n-@CANADIAN_FALSE@ZIP = \\\n-@CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/zip/zip$(EXEEXT)\n-@CANADIAN_TRUE@GCJH = \\\n-@CANADIAN_TRUE@gcjh\n-@CANADIAN_FALSE@GCJH = \\\n-@CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/gcc/gcjh$(EXEEXT)\n-@CANADIAN_FALSE@expanded = \\\n-@CANADIAN_FALSE@`cd $(MULTIBUILDTOP)../$(COMPPATH)/gcc && pwd`\n+@NATIVE_TRUE@bin_PROGRAMS = @NATIVE_TRUE@jv-convert gij\n+@CANADIAN_TRUE@@NULL_TARGET_TRUE@GCJ = @CANADIAN_TRUE@@NULL_TARGET_TRUE@gcj\n+@CANADIAN_TRUE@@NULL_TARGET_FALSE@GCJ = @CANADIAN_TRUE@@NULL_TARGET_FALSE@$(target_alias)-gcj\n+@CANADIAN_FALSE@GCJ = @CANADIAN_FALSE@$(expanded)/gcj$(EXEEXT) -B$(expanded)/\n+@CANADIAN_TRUE@@NULL_TARGET_TRUE@ZIP = @CANADIAN_TRUE@@NULL_TARGET_TRUE@$(MULTIBUILDTOP)../$(COMPPATH)/zip/zip$(EXEEXT)\n+@CANADIAN_TRUE@@NULL_TARGET_FALSE@ZIP = @CANADIAN_TRUE@@NULL_TARGET_FALSE@zip\n+@CANADIAN_FALSE@ZIP = @CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/zip/zip$(EXEEXT)\n+@CANADIAN_TRUE@GCJH = @CANADIAN_TRUE@gcjh\n+@CANADIAN_FALSE@GCJH = @CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/gcc/gcjh$(EXEEXT)\n+@CANADIAN_FALSE@expanded = @CANADIAN_FALSE@`cd $(MULTIBUILDTOP)../$(COMPPATH)/gcc && pwd`\n \n GCJCOMPILE = CLASSPATH=$(here) $(LIBTOOL) --mode=compile $(GCJ) -fassume-compiled $(JC1FLAGS) -c\n \n@@ -149,10 +138,8 @@ EH_COMMON_INCLUDE = @EH_COMMON_INCLUDE@\n \n WARNINGS = -W -Wall\n AM_CXXFLAGS = -fno-rtti -fvtable-thunks @LIBGCJ_CXXFLAGS@ $(WARNINGS)\n-@USING_GCC_TRUE@AM_CFLAGS = \\\n-@USING_GCC_TRUE@@LIBGCJ_CFLAGS@ $(WARNINGS)\n-@USING_GCC_FALSE@AM_CFLAGS = \\\n-@USING_GCC_FALSE@@LIBGCJ_CFLAGS@\n+@USING_GCC_TRUE@AM_CFLAGS = @USING_GCC_TRUE@@LIBGCJ_CFLAGS@ $(WARNINGS)\n+@USING_GCC_FALSE@AM_CFLAGS = @USING_GCC_FALSE@@LIBGCJ_CFLAGS@\n \n JCFLAGS = -g\n JC1FLAGS = -g @LIBGCJ_JAVAFLAGS@\n@@ -198,14 +185,9 @@ nat_headers = $(ordinary_java_source_files:.java=.h) \\\n \t$(built_java_source_files:.java=.h)\n \n \n-FTFRIEND = void JvRunMain (jclass klass, int argc, const char **argv)\n-\n-TGFRIEND = void JvRunMain (jclass klass, int argc, const char **argv)\n-\n NM = nm\n \n-@NATIVE_TRUE@@MAINTAINER_MODE_TRUE@noinst_PROGRAMS = \\\n-@NATIVE_TRUE@@MAINTAINER_MODE_TRUE@gen-from-JIS\n+@NATIVE_TRUE@@MAINTAINER_MODE_TRUE@noinst_PROGRAMS = @NATIVE_TRUE@@MAINTAINER_MODE_TRUE@gen-from-JIS\n \n CONVERT_DIR = gnu/gcj/convert\n \n@@ -315,6 +297,7 @@ built_java_source_files = java/lang/ConcreteProcess.java\n \n ordinary_java_source_files = $(convert_source_files) \\\n gnu/gcj/runtime/MethodInvocation.java \\\n+gnu/gcj/runtime/VMClassLoader.java \\\n gnu/gcj/util/path/SearchPath.java \\\n gnu/gcj/util/path/PathEntry.java \\\n gnu/gcj/util/path/DirectoryPathEntry.java \\\n@@ -332,6 +315,8 @@ gnu/gcj/protocol/file/Connection.java \\\n gnu/gcj/protocol/file/Handler.java \\\n gnu/gcj/protocol/http/Connection.java \\\n gnu/gcj/protocol/http/Handler.java \\\n+gnu/gcj/protocol/jar/Handler.java \\\n+gnu/gcj/protocol/jar/Connection.java \\\n gnu/gcj/RawData.java \\\n gnu/gcj/util/EnumerationChain.java \\\n java/io/BufferedInputStream.java \\\n@@ -399,7 +384,6 @@ java/lang/ClassCastException.java \\\n java/lang/ClassCircularityError.java \\\n java/lang/ClassFormatError.java\t\\\n java/lang/ClassLoader.java \\\n-java/lang/VMClassLoader.java \\\n java/lang/ClassNotFoundException.java \\\n java/lang/CloneNotSupportedException.java \\\n java/lang/Cloneable.java \\\n@@ -477,6 +461,7 @@ java/net/DatagramSocketImpl.java \\\n java/net/FileNameMap.java \\\n java/net/HttpURLConnection.java \\\n java/net/InetAddress.java \\\n+java/net/JarURLConnection.java \\\n java/net/MalformedURLException.java \\\n java/net/MulticastSocket.java \\\n java/net/NoRouteToHostException.java \\\n@@ -490,6 +475,7 @@ java/net/SocketImpl.java \\\n java/net/SocketImplFactory.java\t\\\n java/net/SocketOptions.java \\\n java/net/URL.java \\\n+java/net/URLClassLoader.java \\\n java/net/URLConnection.java \\\n java/net/URLDecoder.java \\\n java/net/URLEncoder.java \\\n@@ -499,6 +485,7 @@ java/net/UnknownHostException.java \\\n java/net/UnknownServiceException.java \\\n java/security/MessageDigest.java \\\n java/security/NoSuchAlgorithmException.java \\\n+java/security/SecureClassLoader.java \\\n java/text/BreakIterator.java \\\n java/text/CharacterIterator.java \\\n java/text/ChoiceFormat.java \\\n@@ -545,6 +532,9 @@ java/util/StringTokenizer.java \\\n java/util/TimeZone.java\t\\\n java/util/TooManyListenersException.java \\\n java/util/Vector.java \\\n+java/util/jar/JarFile.java \\\n+java/util/jar/JarInputStream.java \\\n+java/util/jar/JarEntry.java \\\n java/util/zip/Adler32.java \\\n java/util/zip/CRC32.java \\\n java/util/zip/CheckedInputStream.java \\\n@@ -673,6 +663,7 @@ MULTIDO = true\n MULTICLEAN = true\n \n cygnus_hack = \n+subdir = .\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n CONFIG_HEADER = ./include/config.h\n@@ -684,44 +675,54 @@ DEFS = @DEFS@ -I. -I$(srcdir) -I./include\n CPPFLAGS = @CPPFLAGS@\n LDFLAGS = @LDFLAGS@\n LIBS = @LIBS@\n-libgcj_la_OBJECTS =  prims.lo jni.lo exception.lo resolve.lo \\\n+am_libgcj_la_OBJECTS =  prims.lo jni.lo exception.lo resolve.lo \\\n defineclass.lo interpret.lo\n+libgcj_la_OBJECTS =  $(am_libgcj_la_OBJECTS)\n @NATIVE_TRUE@bin_PROGRAMS =  jv-convert$(EXEEXT) gij$(EXEEXT)\n @NATIVE_TRUE@@MAINTAINER_MODE_TRUE@noinst_PROGRAMS =  \\\n @NATIVE_TRUE@@MAINTAINER_MODE_TRUE@gen-from-JIS$(EXEEXT)\n PROGRAMS =  $(bin_PROGRAMS) $(noinst_PROGRAMS)\n \n-jv_convert_OBJECTS = \n-gij_OBJECTS = \n-gen_from_JIS_OBJECTS = \n+gen_from_JIS_OBJECTS =  $(am_gen_from_JIS_OBJECTS)\n gen_from_JIS_LDFLAGS = \n-CXXFLAGS = @CXXFLAGS@\n+gij_OBJECTS =  $(am_gij_OBJECTS)\n+jv_convert_OBJECTS =  $(am_jv_convert_OBJECTS)\n+COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n+LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n+CFLAGS = @CFLAGS@\n CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)\n LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)\n+CXXFLAGS = @CXXFLAGS@\n CXXLD = $(CXX)\n-CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@\n-CFLAGS = @CFLAGS@\n-COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n-LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n+CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\n+LTGCJCOMPILE = $(LIBTOOL) --mode=compile $(GCJ) $(DEFS) $(INCLUDES) $(AM_GCJFLAGS) $(GCJFLAGS)\n+GCJFLAGS = @GCJFLAGS@\n+GCJLD = $(GCJ)\n+GCJLINK = $(LIBTOOL) --mode=link $(GCJLD) $(AM_GCJFLAGS) $(GCJFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\n CCLD = $(CC)\n-LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@\n+LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@\n+DIST_SOURCES =  $(libgcj_la_SOURCES) $(EXTRA_libgcj_la_SOURCES) \\\n+$(gen_from_JIS_SOURCES) $(EXTRA_gen_from_JIS_SOURCES) $(gij_SOURCES) \\\n+$(EXTRA_gij_SOURCES) $(jv_convert_SOURCES) $(EXTRA_jv_convert_SOURCES)\n DATA =  $(data_DATA) $(toolexeclib_DATA)\n \n-DIST_COMMON =  COPYING.LIB ChangeLog Makefile.am Makefile.in NEWS THANKS \\\n-acconfig.h acinclude.m4 aclocal.m4 configure configure.in \\\n-include/config.h.in include/stamp-h.in libgcj.spec.in\n+DIST_COMMON =  $(data_DATA) $(toolexeclib_DATA) COPYING.LIB ChangeLog \\\n+Makefile.am Makefile.in NEWS THANKS acconfig.h acinclude.m4 aclocal.m4 \\\n+configure configure.in include/config.h.in include/stamp-h.in \\\n+libgcj.spec.in\n \n \n-DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = tar\n GZIP_ENV = --best\n DIST_SUBDIRS =  testsuite\n-DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n-.deps/$(srcdir)/$(CONVERT_DIR)/make-trie.P .deps/boehm.P \\\n-.deps/defineclass.P .deps/exception.P .deps/gij.P \\\n-.deps/gnu/gcj/RawData.P .deps/gnu/gcj/convert/BytesToUnicode.P \\\n-.deps/gnu/gcj/convert/Convert.P .deps/gnu/gcj/convert/Input_8859_1.P \\\n+DEP_FILES =  .deps/boehm.P .deps/defineclass.P .deps/dtoa.P \\\n+.deps/e_acos.P .deps/e_asin.P .deps/e_atan2.P .deps/e_exp.P \\\n+.deps/e_fmod.P .deps/e_log.P .deps/e_pow.P .deps/e_rem_pio2.P \\\n+.deps/e_remainder.P .deps/e_scalb.P .deps/e_sqrt.P .deps/exception.P \\\n+.deps/gen-from-JIS.P .deps/gij.P .deps/gnu/gcj/RawData.P \\\n+.deps/gnu/gcj/convert/BytesToUnicode.P .deps/gnu/gcj/convert/Convert.P \\\n+.deps/gnu/gcj/convert/Input_8859_1.P \\\n .deps/gnu/gcj/convert/Input_EUCJIS.P \\\n .deps/gnu/gcj/convert/Input_JavaSrc.P \\\n .deps/gnu/gcj/convert/Input_SJIS.P .deps/gnu/gcj/convert/Input_UTF8.P \\\n@@ -734,7 +735,10 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/gnu/gcj/protocol/file/Handler.P \\\n .deps/gnu/gcj/protocol/http/Connection.P \\\n .deps/gnu/gcj/protocol/http/Handler.P \\\n+.deps/gnu/gcj/protocol/jar/Connection.P \\\n+.deps/gnu/gcj/protocol/jar/Handler.P \\\n .deps/gnu/gcj/runtime/MethodInvocation.P \\\n+.deps/gnu/gcj/runtime/VMClassLoader.P \\\n .deps/gnu/gcj/text/BaseBreakIterator.P \\\n .deps/gnu/gcj/text/CharacterBreakIterator.P \\\n .deps/gnu/gcj/text/LineBreakIterator.P \\\n@@ -826,54 +830,35 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/java/lang/Throwable.P .deps/java/lang/UnknownError.P \\\n .deps/java/lang/UnsatisfiedLinkError.P \\\n .deps/java/lang/UnsupportedOperationException.P \\\n-.deps/java/lang/VMClassLoader.P .deps/java/lang/VerifyError.P \\\n-.deps/java/lang/VirtualMachineError.P .deps/java/lang/Void.P \\\n-.deps/java/lang/dtoa.P .deps/java/lang/e_acos.P \\\n-.deps/java/lang/e_asin.P .deps/java/lang/e_atan2.P \\\n-.deps/java/lang/e_exp.P .deps/java/lang/e_fmod.P \\\n-.deps/java/lang/e_log.P .deps/java/lang/e_pow.P \\\n-.deps/java/lang/e_rem_pio2.P .deps/java/lang/e_remainder.P \\\n-.deps/java/lang/e_scalb.P .deps/java/lang/e_sqrt.P \\\n-.deps/java/lang/k_cos.P .deps/java/lang/k_rem_pio2.P \\\n-.deps/java/lang/k_sin.P .deps/java/lang/k_tan.P .deps/java/lang/mprec.P \\\n-.deps/java/lang/reflect/AccessibleObject.P \\\n+.deps/java/lang/VerifyError.P .deps/java/lang/VirtualMachineError.P \\\n+.deps/java/lang/Void.P .deps/java/lang/reflect/AccessibleObject.P \\\n .deps/java/lang/reflect/Array.P .deps/java/lang/reflect/Constructor.P \\\n .deps/java/lang/reflect/Field.P \\\n .deps/java/lang/reflect/InvocationTargetException.P \\\n .deps/java/lang/reflect/Member.P .deps/java/lang/reflect/Method.P \\\n-.deps/java/lang/reflect/Modifier.P .deps/java/lang/s_atan.P \\\n-.deps/java/lang/s_ceil.P .deps/java/lang/s_copysign.P \\\n-.deps/java/lang/s_cos.P .deps/java/lang/s_fabs.P \\\n-.deps/java/lang/s_floor.P .deps/java/lang/s_rint.P \\\n-.deps/java/lang/s_scalbn.P .deps/java/lang/s_sin.P \\\n-.deps/java/lang/s_tan.P .deps/java/lang/sf_rint.P \\\n-.deps/java/lang/strtod.P .deps/java/lang/w_acos.P \\\n-.deps/java/lang/w_asin.P .deps/java/lang/w_atan2.P \\\n-.deps/java/lang/w_exp.P .deps/java/lang/w_fmod.P \\\n-.deps/java/lang/w_log.P .deps/java/lang/w_pow.P \\\n-.deps/java/lang/w_remainder.P .deps/java/lang/w_sqrt.P \\\n-.deps/java/net/BindException.P .deps/java/net/ConnectException.P \\\n-.deps/java/net/ContentHandler.P .deps/java/net/ContentHandlerFactory.P \\\n-.deps/java/net/DatagramPacket.P .deps/java/net/DatagramSocket.P \\\n-.deps/java/net/DatagramSocketImpl.P .deps/java/net/FileNameMap.P \\\n-.deps/java/net/HttpURLConnection.P .deps/java/net/InetAddress.P \\\n+.deps/java/lang/reflect/Modifier.P .deps/java/net/BindException.P \\\n+.deps/java/net/ConnectException.P .deps/java/net/ContentHandler.P \\\n+.deps/java/net/ContentHandlerFactory.P .deps/java/net/DatagramPacket.P \\\n+.deps/java/net/DatagramSocket.P .deps/java/net/DatagramSocketImpl.P \\\n+.deps/java/net/FileNameMap.P .deps/java/net/HttpURLConnection.P \\\n+.deps/java/net/InetAddress.P .deps/java/net/JarURLConnection.P \\\n .deps/java/net/MalformedURLException.P .deps/java/net/MulticastSocket.P \\\n .deps/java/net/NoRouteToHostException.P \\\n .deps/java/net/PlainDatagramSocketImpl.P \\\n .deps/java/net/PlainSocketImpl.P .deps/java/net/ProtocolException.P \\\n .deps/java/net/ServerSocket.P .deps/java/net/Socket.P \\\n .deps/java/net/SocketException.P .deps/java/net/SocketImpl.P \\\n .deps/java/net/SocketImplFactory.P .deps/java/net/SocketOptions.P \\\n-.deps/java/net/URL.P .deps/java/net/URLConnection.P \\\n-.deps/java/net/URLDecoder.P .deps/java/net/URLEncoder.P \\\n-.deps/java/net/URLStreamHandler.P \\\n+.deps/java/net/URL.P .deps/java/net/URLClassLoader.P \\\n+.deps/java/net/URLConnection.P .deps/java/net/URLDecoder.P \\\n+.deps/java/net/URLEncoder.P .deps/java/net/URLStreamHandler.P \\\n .deps/java/net/URLStreamHandlerFactory.P \\\n .deps/java/net/UnknownHostException.P \\\n .deps/java/net/UnknownServiceException.P \\\n .deps/java/security/MessageDigest.P \\\n .deps/java/security/NoSuchAlgorithmException.P \\\n-.deps/java/text/BreakIterator.P .deps/java/text/CharacterIterator.P \\\n-.deps/java/text/ChoiceFormat.P \\\n+.deps/java/security/SecureClassLoader.P .deps/java/text/BreakIterator.P \\\n+.deps/java/text/CharacterIterator.P .deps/java/text/ChoiceFormat.P \\\n .deps/java/text/CollationElementIterator.P \\\n .deps/java/text/CollationKey.P .deps/java/text/Collator.P \\\n .deps/java/text/DateFormat.P .deps/java/text/DateFormatSymbols.P \\\n@@ -897,8 +882,10 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/java/util/ResourceBundle.P .deps/java/util/SimpleTimeZone.P \\\n .deps/java/util/Stack.P .deps/java/util/StringTokenizer.P \\\n .deps/java/util/TimeZone.P .deps/java/util/TooManyListenersException.P \\\n-.deps/java/util/Vector.P .deps/java/util/zip/Adler32.P \\\n-.deps/java/util/zip/CRC32.P .deps/java/util/zip/CheckedInputStream.P \\\n+.deps/java/util/Vector.P .deps/java/util/jar/JarEntry.P \\\n+.deps/java/util/jar/JarFile.P .deps/java/util/jar/JarInputStream.P \\\n+.deps/java/util/zip/Adler32.P .deps/java/util/zip/CRC32.P \\\n+.deps/java/util/zip/CheckedInputStream.P \\\n .deps/java/util/zip/CheckedOutputStream.P \\\n .deps/java/util/zip/Checksum.P \\\n .deps/java/util/zip/DataFormatException.P \\\n@@ -910,14 +897,21 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/java/util/zip/ZipConstants.P .deps/java/util/zip/ZipEntry.P \\\n .deps/java/util/zip/ZipException.P .deps/java/util/zip/ZipFile.P \\\n .deps/java/util/zip/ZipInputStream.P \\\n-.deps/java/util/zip/ZipOutputStream.P .deps/jni.P .deps/no-threads.P \\\n-.deps/nogc.P .deps/posix-threads.P .deps/prims.P .deps/resolve.P\n-SOURCES = $(libgcj_la_SOURCES) $(EXTRA_libgcj_la_SOURCES) $(jv_convert_SOURCES) $(EXTRA_jv_convert_SOURCES) $(gij_SOURCES) $(EXTRA_gij_SOURCES) $(gen_from_JIS_SOURCES) $(EXTRA_gen_from_JIS_SOURCES)\n-OBJECTS = $(libgcj_la_OBJECTS) $(jv_convert_OBJECTS) $(gij_OBJECTS) $(gen_from_JIS_OBJECTS)\n+.deps/java/util/zip/ZipOutputStream.P .deps/jni.P .deps/k_cos.P \\\n+.deps/k_rem_pio2.P .deps/k_sin.P .deps/k_tan.P .deps/make-trie.P \\\n+.deps/mprec.P .deps/no-threads.P .deps/nogc.P .deps/posix-threads.P \\\n+.deps/prims.P .deps/resolve.P .deps/s_atan.P .deps/s_ceil.P \\\n+.deps/s_copysign.P .deps/s_cos.P .deps/s_fabs.P .deps/s_floor.P \\\n+.deps/s_rint.P .deps/s_scalbn.P .deps/s_sin.P .deps/s_tan.P \\\n+.deps/sf_rint.P .deps/strtod.P .deps/w_acos.P .deps/w_asin.P \\\n+.deps/w_atan2.P .deps/w_exp.P .deps/w_fmod.P .deps/w_log.P \\\n+.deps/w_pow.P .deps/w_remainder.P .deps/w_sqrt.P\n+SOURCES = $(libgcj_la_SOURCES) $(EXTRA_libgcj_la_SOURCES) $(gen_from_JIS_SOURCES) $(EXTRA_gen_from_JIS_SOURCES) $(gij_SOURCES) $(EXTRA_gij_SOURCES) $(jv_convert_SOURCES) $(EXTRA_jv_convert_SOURCES)\n+OBJECTS = $(am_libgcj_la_OBJECTS) $(am_gen_from_JIS_OBJECTS) $(am_gij_OBJECTS) $(am_jv_convert_OBJECTS)\n \n all: all-redirect\n .SUFFIXES:\n-.SUFFIXES: .S .c .cc .class .h .java .lo .o .s\n+.SUFFIXES: .c .cc .class .h .java .lo .o\n $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) \n \tcd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile\n \n@@ -939,18 +933,22 @@ include/config.h: include/stamp-h\n \t\t$(MAKE) include/stamp-h; \\\n \telse :; fi\n include/stamp-h: $(srcdir)/include/config.h.in $(top_builddir)/config.status\n+\t@rm -f include/stamp-h include/stamp-hT\n+\t@echo timestamp > include/stamp-hT 2> /dev/null\n \tcd $(top_builddir) \\\n \t  && CONFIG_FILES= CONFIG_HEADERS=include/config.h \\\n \t     $(SHELL) ./config.status\n-\t@echo timestamp > include/stamp-h 2> /dev/null\n+\t@mv include/stamp-hT include/stamp-h\n $(srcdir)/include/config.h.in: @MAINTAINER_MODE_TRUE@$(srcdir)/include/stamp-h.in\n \t@if test ! -f $@; then \\\n \t\trm -f $(srcdir)/include/stamp-h.in; \\\n \t\t$(MAKE) $(srcdir)/include/stamp-h.in; \\\n \telse :; fi\n $(srcdir)/include/stamp-h.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) acconfig.h\n+\t@rm -f $(srcdir)/include/stamp-h.in $(srcdir)/include/stamp-h.inT\n+\t@echo timestamp > $(srcdir)/include/stamp-h.inT 2> /dev/null\n \tcd $(top_srcdir) && $(AUTOHEADER)\n-\t@echo timestamp > $(srcdir)/include/stamp-h.in 2> /dev/null\n+\t@mv $(srcdir)/include/stamp-h.inT $(srcdir)/include/stamp-h.in\n \n mostlyclean-hdr:\n \n@@ -977,23 +975,18 @@ install-toolexeclibLTLIBRARIES: $(toolexeclib_LTLIBRARIES)\n \t$(mkinstalldirs) $(DESTDIR)$(toolexeclibdir)\n \t@list='$(toolexeclib_LTLIBRARIES)'; for p in $$list; do \\\n \t  if test -f $$p; then \\\n-\t    echo \"$(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(toolexeclibdir)/$$p\"; \\\n-\t    $(LIBTOOL)  --mode=install $(INSTALL) $$p $(DESTDIR)$(toolexeclibdir)/$$p; \\\n+\t    echo \"$(LIBTOOL)  --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(toolexeclibdir)/$$p\"; \\\n+\t    $(LIBTOOL)  --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(toolexeclibdir)/$$p; \\\n \t  else :; fi; \\\n \tdone\n \n uninstall-toolexeclibLTLIBRARIES:\n \t@$(NORMAL_UNINSTALL)\n-\tlist='$(toolexeclib_LTLIBRARIES)'; for p in $$list; do \\\n+\t@list='$(toolexeclib_LTLIBRARIES)'; for p in $$list; do \\\n+\t  echo \" $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(toolexeclibdir)/$$p\"; \\\n \t  $(LIBTOOL)  --mode=uninstall rm -f $(DESTDIR)$(toolexeclibdir)/$$p; \\\n \tdone\n \n-.s.o:\n-\t$(COMPILE) -c $<\n-\n-.S.o:\n-\t$(COMPILE) -c $<\n-\n mostlyclean-compile:\n \t-rm -f *.o core *.core\n \n@@ -1004,12 +997,6 @@ distclean-compile:\n \n maintainer-clean-compile:\n \n-.s.lo:\n-\t$(LIBTOOL) --mode=compile $(COMPILE) -c $<\n-\n-.S.lo:\n-\t$(LIBTOOL) --mode=compile $(COMPILE) -c $<\n-\n mostlyclean-libtool:\n \t-rm -f *.lo\n \n@@ -1019,6 +1006,743 @@ clean-libtool:\n distclean-libtool:\n \n maintainer-clean-libtool:\n+dtoa.lo: java/lang/dtoa.c\n+k_rem_pio2.lo: java/lang/k_rem_pio2.c\n+s_tan.lo: java/lang/s_tan.c\n+e_acos.lo: java/lang/e_acos.c\n+k_sin.lo: java/lang/k_sin.c\n+strtod.lo: java/lang/strtod.c\n+e_asin.lo: java/lang/e_asin.c\n+k_tan.lo: java/lang/k_tan.c\n+w_acos.lo: java/lang/w_acos.c\n+e_atan2.lo: java/lang/e_atan2.c\n+mprec.lo: java/lang/mprec.c\n+w_asin.lo: java/lang/w_asin.c\n+e_exp.lo: java/lang/e_exp.c\n+s_atan.lo: java/lang/s_atan.c\n+w_atan2.lo: java/lang/w_atan2.c\n+e_fmod.lo: java/lang/e_fmod.c\n+s_ceil.lo: java/lang/s_ceil.c\n+w_exp.lo: java/lang/w_exp.c\n+e_log.lo: java/lang/e_log.c\n+s_copysign.lo: java/lang/s_copysign.c\n+w_fmod.lo: java/lang/w_fmod.c\n+e_pow.lo: java/lang/e_pow.c\n+s_cos.lo: java/lang/s_cos.c\n+w_log.lo: java/lang/w_log.c\n+e_rem_pio2.lo: java/lang/e_rem_pio2.c\n+s_fabs.lo: java/lang/s_fabs.c\n+w_pow.lo: java/lang/w_pow.c\n+e_remainder.lo: java/lang/e_remainder.c\n+s_floor.lo: java/lang/s_floor.c\n+w_remainder.lo: java/lang/w_remainder.c\n+e_scalb.lo: java/lang/e_scalb.c\n+s_rint.lo: java/lang/s_rint.c\n+w_sqrt.lo: java/lang/w_sqrt.c\n+e_sqrt.lo: java/lang/e_sqrt.c\n+s_scalbn.lo: java/lang/s_scalbn.c\n+sf_rint.lo: java/lang/sf_rint.c\n+k_cos.lo: java/lang/k_cos.c\n+s_sin.lo: java/lang/s_sin.c\n+gnu/gcj/convert/.dirstamp:\n+\t@$(mkinstalldirs) gnu/gcj/convert\n+\t@: > gnu/gcj/convert/.dirstamp\n+.deps/gnu/gcj/convert/.dirstamp:\n+\t@$(mkinstalldirs) .deps/gnu/gcj/convert\n+\t@: > .deps/gnu/gcj/convert/.dirstamp\n+gnu/gcj/convert/BytesToUnicode.lo: gnu/gcj/convert/BytesToUnicode.java \\\n+\tgnu/gcj/convert/.dirstamp .deps/gnu/gcj/convert/.dirstamp\n+gnu/gcj/convert/Convert.lo: gnu/gcj/convert/Convert.java \\\n+\tgnu/gcj/convert/.dirstamp .deps/gnu/gcj/convert/.dirstamp\n+gnu/gcj/convert/Input_8859_1.lo: gnu/gcj/convert/Input_8859_1.java \\\n+\tgnu/gcj/convert/.dirstamp .deps/gnu/gcj/convert/.dirstamp\n+gnu/gcj/convert/Input_EUCJIS.lo: gnu/gcj/convert/Input_EUCJIS.java \\\n+\tgnu/gcj/convert/.dirstamp .deps/gnu/gcj/convert/.dirstamp\n+gnu/gcj/convert/Input_JavaSrc.lo: gnu/gcj/convert/Input_JavaSrc.java \\\n+\tgnu/gcj/convert/.dirstamp .deps/gnu/gcj/convert/.dirstamp\n+gnu/gcj/convert/Input_SJIS.lo: gnu/gcj/convert/Input_SJIS.java \\\n+\tgnu/gcj/convert/.dirstamp .deps/gnu/gcj/convert/.dirstamp\n+gnu/gcj/convert/Input_UTF8.lo: gnu/gcj/convert/Input_UTF8.java \\\n+\tgnu/gcj/convert/.dirstamp .deps/gnu/gcj/convert/.dirstamp\n+gnu/gcj/convert/Output_8859_1.lo: gnu/gcj/convert/Output_8859_1.java \\\n+\tgnu/gcj/convert/.dirstamp .deps/gnu/gcj/convert/.dirstamp\n+gnu/gcj/convert/Output_EUCJIS.lo: gnu/gcj/convert/Output_EUCJIS.java \\\n+\tgnu/gcj/convert/.dirstamp .deps/gnu/gcj/convert/.dirstamp\n+gnu/gcj/convert/Output_JavaSrc.lo: gnu/gcj/convert/Output_JavaSrc.java \\\n+\tgnu/gcj/convert/.dirstamp .deps/gnu/gcj/convert/.dirstamp\n+gnu/gcj/convert/Output_SJIS.lo: gnu/gcj/convert/Output_SJIS.java \\\n+\tgnu/gcj/convert/.dirstamp .deps/gnu/gcj/convert/.dirstamp\n+gnu/gcj/convert/Output_UTF8.lo: gnu/gcj/convert/Output_UTF8.java \\\n+\tgnu/gcj/convert/.dirstamp .deps/gnu/gcj/convert/.dirstamp\n+gnu/gcj/convert/UnicodeToBytes.lo: gnu/gcj/convert/UnicodeToBytes.java \\\n+\tgnu/gcj/convert/.dirstamp .deps/gnu/gcj/convert/.dirstamp\n+gnu/gcj/runtime/.dirstamp:\n+\t@$(mkinstalldirs) gnu/gcj/runtime\n+\t@: > gnu/gcj/runtime/.dirstamp\n+.deps/gnu/gcj/runtime/.dirstamp:\n+\t@$(mkinstalldirs) .deps/gnu/gcj/runtime\n+\t@: > .deps/gnu/gcj/runtime/.dirstamp\n+gnu/gcj/runtime/MethodInvocation.lo: \\\n+\tgnu/gcj/runtime/MethodInvocation.java gnu/gcj/runtime/.dirstamp \\\n+\t.deps/gnu/gcj/runtime/.dirstamp\n+gnu/gcj/runtime/VMClassLoader.lo: gnu/gcj/runtime/VMClassLoader.java \\\n+\tgnu/gcj/runtime/.dirstamp .deps/gnu/gcj/runtime/.dirstamp\n+gnu/gcj/util/path/.dirstamp:\n+\t@$(mkinstalldirs) gnu/gcj/util/path\n+\t@: > gnu/gcj/util/path/.dirstamp\n+.deps/gnu/gcj/util/path/.dirstamp:\n+\t@$(mkinstalldirs) .deps/gnu/gcj/util/path\n+\t@: > .deps/gnu/gcj/util/path/.dirstamp\n+gnu/gcj/util/path/SearchPath.lo: gnu/gcj/util/path/SearchPath.java \\\n+\tgnu/gcj/util/path/.dirstamp .deps/gnu/gcj/util/path/.dirstamp\n+gnu/gcj/util/path/PathEntry.lo: gnu/gcj/util/path/PathEntry.java \\\n+\tgnu/gcj/util/path/.dirstamp .deps/gnu/gcj/util/path/.dirstamp\n+gnu/gcj/util/path/DirectoryPathEntry.lo: \\\n+\tgnu/gcj/util/path/DirectoryPathEntry.java \\\n+\tgnu/gcj/util/path/.dirstamp .deps/gnu/gcj/util/path/.dirstamp\n+gnu/gcj/util/path/ZipPathEntry.lo: gnu/gcj/util/path/ZipPathEntry.java \\\n+\tgnu/gcj/util/path/.dirstamp .deps/gnu/gcj/util/path/.dirstamp\n+gnu/gcj/util/path/URLPathEntry.lo: gnu/gcj/util/path/URLPathEntry.java \\\n+\tgnu/gcj/util/path/.dirstamp .deps/gnu/gcj/util/path/.dirstamp\n+gnu/gcj/util/path/CacheEntry.lo: gnu/gcj/util/path/CacheEntry.java \\\n+\tgnu/gcj/util/path/.dirstamp .deps/gnu/gcj/util/path/.dirstamp\n+gnu/gcj/text/.dirstamp:\n+\t@$(mkinstalldirs) gnu/gcj/text\n+\t@: > gnu/gcj/text/.dirstamp\n+.deps/gnu/gcj/text/.dirstamp:\n+\t@$(mkinstalldirs) .deps/gnu/gcj/text\n+\t@: > .deps/gnu/gcj/text/.dirstamp\n+gnu/gcj/text/BaseBreakIterator.lo: gnu/gcj/text/BaseBreakIterator.java \\\n+\tgnu/gcj/text/.dirstamp .deps/gnu/gcj/text/.dirstamp\n+gnu/gcj/text/CharacterBreakIterator.lo: \\\n+\tgnu/gcj/text/CharacterBreakIterator.java gnu/gcj/text/.dirstamp \\\n+\t.deps/gnu/gcj/text/.dirstamp\n+gnu/gcj/text/LineBreakIterator.lo: gnu/gcj/text/LineBreakIterator.java \\\n+\tgnu/gcj/text/.dirstamp .deps/gnu/gcj/text/.dirstamp\n+gnu/gcj/text/LocaleData_en.lo: gnu/gcj/text/LocaleData_en.java \\\n+\tgnu/gcj/text/.dirstamp .deps/gnu/gcj/text/.dirstamp\n+gnu/gcj/text/LocaleData_en_US.lo: gnu/gcj/text/LocaleData_en_US.java \\\n+\tgnu/gcj/text/.dirstamp .deps/gnu/gcj/text/.dirstamp\n+gnu/gcj/text/SentenceBreakIterator.lo: \\\n+\tgnu/gcj/text/SentenceBreakIterator.java gnu/gcj/text/.dirstamp \\\n+\t.deps/gnu/gcj/text/.dirstamp\n+gnu/gcj/text/WordBreakIterator.lo: gnu/gcj/text/WordBreakIterator.java \\\n+\tgnu/gcj/text/.dirstamp .deps/gnu/gcj/text/.dirstamp\n+gnu/gcj/protocol/file/.dirstamp:\n+\t@$(mkinstalldirs) gnu/gcj/protocol/file\n+\t@: > gnu/gcj/protocol/file/.dirstamp\n+.deps/gnu/gcj/protocol/file/.dirstamp:\n+\t@$(mkinstalldirs) .deps/gnu/gcj/protocol/file\n+\t@: > .deps/gnu/gcj/protocol/file/.dirstamp\n+gnu/gcj/protocol/file/Connection.lo: \\\n+\tgnu/gcj/protocol/file/Connection.java \\\n+\tgnu/gcj/protocol/file/.dirstamp \\\n+\t.deps/gnu/gcj/protocol/file/.dirstamp\n+gnu/gcj/protocol/file/Handler.lo: gnu/gcj/protocol/file/Handler.java \\\n+\tgnu/gcj/protocol/file/.dirstamp \\\n+\t.deps/gnu/gcj/protocol/file/.dirstamp\n+gnu/gcj/protocol/http/.dirstamp:\n+\t@$(mkinstalldirs) gnu/gcj/protocol/http\n+\t@: > gnu/gcj/protocol/http/.dirstamp\n+.deps/gnu/gcj/protocol/http/.dirstamp:\n+\t@$(mkinstalldirs) .deps/gnu/gcj/protocol/http\n+\t@: > .deps/gnu/gcj/protocol/http/.dirstamp\n+gnu/gcj/protocol/http/Connection.lo: \\\n+\tgnu/gcj/protocol/http/Connection.java \\\n+\tgnu/gcj/protocol/http/.dirstamp \\\n+\t.deps/gnu/gcj/protocol/http/.dirstamp\n+gnu/gcj/protocol/http/Handler.lo: gnu/gcj/protocol/http/Handler.java \\\n+\tgnu/gcj/protocol/http/.dirstamp \\\n+\t.deps/gnu/gcj/protocol/http/.dirstamp\n+gnu/gcj/protocol/jar/.dirstamp:\n+\t@$(mkinstalldirs) gnu/gcj/protocol/jar\n+\t@: > gnu/gcj/protocol/jar/.dirstamp\n+.deps/gnu/gcj/protocol/jar/.dirstamp:\n+\t@$(mkinstalldirs) .deps/gnu/gcj/protocol/jar\n+\t@: > .deps/gnu/gcj/protocol/jar/.dirstamp\n+gnu/gcj/protocol/jar/Handler.lo: gnu/gcj/protocol/jar/Handler.java \\\n+\tgnu/gcj/protocol/jar/.dirstamp \\\n+\t.deps/gnu/gcj/protocol/jar/.dirstamp\n+gnu/gcj/protocol/jar/Connection.lo: gnu/gcj/protocol/jar/Connection.java \\\n+\tgnu/gcj/protocol/jar/.dirstamp \\\n+\t.deps/gnu/gcj/protocol/jar/.dirstamp\n+gnu/gcj/.dirstamp:\n+\t@$(mkinstalldirs) gnu/gcj\n+\t@: > gnu/gcj/.dirstamp\n+.deps/gnu/gcj/.dirstamp:\n+\t@$(mkinstalldirs) .deps/gnu/gcj\n+\t@: > .deps/gnu/gcj/.dirstamp\n+gnu/gcj/RawData.lo: gnu/gcj/RawData.java gnu/gcj/.dirstamp \\\n+\t.deps/gnu/gcj/.dirstamp\n+gnu/gcj/util/.dirstamp:\n+\t@$(mkinstalldirs) gnu/gcj/util\n+\t@: > gnu/gcj/util/.dirstamp\n+.deps/gnu/gcj/util/.dirstamp:\n+\t@$(mkinstalldirs) .deps/gnu/gcj/util\n+\t@: > .deps/gnu/gcj/util/.dirstamp\n+gnu/gcj/util/EnumerationChain.lo: gnu/gcj/util/EnumerationChain.java \\\n+\tgnu/gcj/util/.dirstamp .deps/gnu/gcj/util/.dirstamp\n+java/io/.dirstamp:\n+\t@$(mkinstalldirs) java/io\n+\t@: > java/io/.dirstamp\n+.deps/java/io/.dirstamp:\n+\t@$(mkinstalldirs) .deps/java/io\n+\t@: > .deps/java/io/.dirstamp\n+java/io/BufferedInputStream.lo: java/io/BufferedInputStream.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/BufferedOutputStream.lo: java/io/BufferedOutputStream.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/BufferedReader.lo: java/io/BufferedReader.java java/io/.dirstamp \\\n+\t.deps/java/io/.dirstamp\n+java/io/BufferedWriter.lo: java/io/BufferedWriter.java java/io/.dirstamp \\\n+\t.deps/java/io/.dirstamp\n+java/io/ByteArrayInputStream.lo: java/io/ByteArrayInputStream.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/ByteArrayOutputStream.lo: java/io/ByteArrayOutputStream.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/CharArrayReader.lo: java/io/CharArrayReader.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/CharArrayWriter.lo: java/io/CharArrayWriter.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/CharConversionException.lo: java/io/CharConversionException.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/DataInput.lo: java/io/DataInput.java java/io/.dirstamp \\\n+\t.deps/java/io/.dirstamp\n+java/io/DataInputStream.lo: java/io/DataInputStream.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/DataOutput.lo: java/io/DataOutput.java java/io/.dirstamp \\\n+\t.deps/java/io/.dirstamp\n+java/io/DataOutputStream.lo: java/io/DataOutputStream.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/EOFException.lo: java/io/EOFException.java java/io/.dirstamp \\\n+\t.deps/java/io/.dirstamp\n+java/io/File.lo: java/io/File.java java/io/.dirstamp \\\n+\t.deps/java/io/.dirstamp\n+java/io/FileDescriptor.lo: java/io/FileDescriptor.java java/io/.dirstamp \\\n+\t.deps/java/io/.dirstamp\n+java/io/FileInputStream.lo: java/io/FileInputStream.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/FileNotFoundException.lo: java/io/FileNotFoundException.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/FileOutputStream.lo: java/io/FileOutputStream.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/FileReader.lo: java/io/FileReader.java java/io/.dirstamp \\\n+\t.deps/java/io/.dirstamp\n+java/io/FileWriter.lo: java/io/FileWriter.java java/io/.dirstamp \\\n+\t.deps/java/io/.dirstamp\n+java/io/FilenameFilter.lo: java/io/FilenameFilter.java java/io/.dirstamp \\\n+\t.deps/java/io/.dirstamp\n+java/io/FilterInputStream.lo: java/io/FilterInputStream.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/FilterOutputStream.lo: java/io/FilterOutputStream.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/FilterReader.lo: java/io/FilterReader.java java/io/.dirstamp \\\n+\t.deps/java/io/.dirstamp\n+java/io/FilterWriter.lo: java/io/FilterWriter.java java/io/.dirstamp \\\n+\t.deps/java/io/.dirstamp\n+java/io/IOException.lo: java/io/IOException.java java/io/.dirstamp \\\n+\t.deps/java/io/.dirstamp\n+java/io/InputStream.lo: java/io/InputStream.java java/io/.dirstamp \\\n+\t.deps/java/io/.dirstamp\n+java/io/InputStreamReader.lo: java/io/InputStreamReader.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/InterruptedIOException.lo: java/io/InterruptedIOException.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/LineNumberInputStream.lo: java/io/LineNumberInputStream.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/LineNumberReader.lo: java/io/LineNumberReader.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/OutputStream.lo: java/io/OutputStream.java java/io/.dirstamp \\\n+\t.deps/java/io/.dirstamp\n+java/io/OutputStreamWriter.lo: java/io/OutputStreamWriter.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/PipedInputStream.lo: java/io/PipedInputStream.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/PipedOutputStream.lo: java/io/PipedOutputStream.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/PipedReader.lo: java/io/PipedReader.java java/io/.dirstamp \\\n+\t.deps/java/io/.dirstamp\n+java/io/PipedWriter.lo: java/io/PipedWriter.java java/io/.dirstamp \\\n+\t.deps/java/io/.dirstamp\n+java/io/PrintStream.lo: java/io/PrintStream.java java/io/.dirstamp \\\n+\t.deps/java/io/.dirstamp\n+java/io/PrintWriter.lo: java/io/PrintWriter.java java/io/.dirstamp \\\n+\t.deps/java/io/.dirstamp\n+java/io/PushbackInputStream.lo: java/io/PushbackInputStream.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/PushbackReader.lo: java/io/PushbackReader.java java/io/.dirstamp \\\n+\t.deps/java/io/.dirstamp\n+java/io/RandomAccessFile.lo: java/io/RandomAccessFile.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/Reader.lo: java/io/Reader.java java/io/.dirstamp \\\n+\t.deps/java/io/.dirstamp\n+java/io/SequenceInputStream.lo: java/io/SequenceInputStream.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/Serializable.lo: java/io/Serializable.java java/io/.dirstamp \\\n+\t.deps/java/io/.dirstamp\n+java/io/StreamTokenizer.lo: java/io/StreamTokenizer.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/StringBufferInputStream.lo: java/io/StringBufferInputStream.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/StringReader.lo: java/io/StringReader.java java/io/.dirstamp \\\n+\t.deps/java/io/.dirstamp\n+java/io/StringWriter.lo: java/io/StringWriter.java java/io/.dirstamp \\\n+\t.deps/java/io/.dirstamp\n+java/io/SyncFailedException.lo: java/io/SyncFailedException.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/UTFDataFormatException.lo: java/io/UTFDataFormatException.java \\\n+\tjava/io/.dirstamp .deps/java/io/.dirstamp\n+java/io/UnsupportedEncodingException.lo: \\\n+\tjava/io/UnsupportedEncodingException.java java/io/.dirstamp \\\n+\t.deps/java/io/.dirstamp\n+java/io/Writer.lo: java/io/Writer.java java/io/.dirstamp \\\n+\t.deps/java/io/.dirstamp\n+java/lang/.dirstamp:\n+\t@$(mkinstalldirs) java/lang\n+\t@: > java/lang/.dirstamp\n+.deps/java/lang/.dirstamp:\n+\t@$(mkinstalldirs) .deps/java/lang\n+\t@: > .deps/java/lang/.dirstamp\n+java/lang/AbstractMethodError.lo: java/lang/AbstractMethodError.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/ArithmeticException.lo: java/lang/ArithmeticException.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/ArrayIndexOutOfBoundsException.lo: \\\n+\tjava/lang/ArrayIndexOutOfBoundsException.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/ArrayStoreException.lo: java/lang/ArrayStoreException.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/Boolean.lo: java/lang/Boolean.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/Byte.lo: java/lang/Byte.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/Character.lo: java/lang/Character.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/ClassCastException.lo: java/lang/ClassCastException.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/ClassCircularityError.lo: java/lang/ClassCircularityError.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/ClassFormatError.lo: java/lang/ClassFormatError.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/ClassLoader.lo: java/lang/ClassLoader.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/ClassNotFoundException.lo: \\\n+\tjava/lang/ClassNotFoundException.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/CloneNotSupportedException.lo: \\\n+\tjava/lang/CloneNotSupportedException.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/Cloneable.lo: java/lang/Cloneable.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/Comparable.lo: java/lang/Comparable.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/Compiler.lo: java/lang/Compiler.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/Double.lo: java/lang/Double.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/Error.lo: java/lang/Error.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/Exception.lo: java/lang/Exception.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/ExceptionInInitializerError.lo: \\\n+\tjava/lang/ExceptionInInitializerError.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/FirstThread.lo: java/lang/FirstThread.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/Float.lo: java/lang/Float.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/IllegalAccessError.lo: java/lang/IllegalAccessError.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/IllegalAccessException.lo: \\\n+\tjava/lang/IllegalAccessException.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/IllegalArgumentException.lo: \\\n+\tjava/lang/IllegalArgumentException.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/IllegalMonitorStateException.lo: \\\n+\tjava/lang/IllegalMonitorStateException.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/IllegalStateException.lo: java/lang/IllegalStateException.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/IllegalThreadStateException.lo: \\\n+\tjava/lang/IllegalThreadStateException.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/IncompatibleClassChangeError.lo: \\\n+\tjava/lang/IncompatibleClassChangeError.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/IndexOutOfBoundsException.lo: \\\n+\tjava/lang/IndexOutOfBoundsException.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/InstantiationError.lo: java/lang/InstantiationError.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/InstantiationException.lo: \\\n+\tjava/lang/InstantiationException.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/Integer.lo: java/lang/Integer.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/InternalError.lo: java/lang/InternalError.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/InterruptedException.lo: java/lang/InterruptedException.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/LinkageError.lo: java/lang/LinkageError.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/Long.lo: java/lang/Long.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/Math.lo: java/lang/Math.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/NegativeArraySizeException.lo: \\\n+\tjava/lang/NegativeArraySizeException.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/NoClassDefFoundError.lo: java/lang/NoClassDefFoundError.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/NoSuchFieldError.lo: java/lang/NoSuchFieldError.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/NoSuchFieldException.lo: java/lang/NoSuchFieldException.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/NoSuchMethodError.lo: java/lang/NoSuchMethodError.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/NoSuchMethodException.lo: java/lang/NoSuchMethodException.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/NullPointerException.lo: java/lang/NullPointerException.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/Number.lo: java/lang/Number.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/NumberFormatException.lo: java/lang/NumberFormatException.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/OutOfMemoryError.lo: java/lang/OutOfMemoryError.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/Process.lo: java/lang/Process.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/Runnable.lo: java/lang/Runnable.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/Runtime.lo: java/lang/Runtime.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/RuntimeException.lo: java/lang/RuntimeException.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/SecurityException.lo: java/lang/SecurityException.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/SecurityManager.lo: java/lang/SecurityManager.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/Short.lo: java/lang/Short.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/StackOverflowError.lo: java/lang/StackOverflowError.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/String.lo: java/lang/String.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/StringBuffer.lo: java/lang/StringBuffer.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/StringIndexOutOfBoundsException.lo: \\\n+\tjava/lang/StringIndexOutOfBoundsException.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/System.lo: java/lang/System.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/Thread.lo: java/lang/Thread.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/ThreadDeath.lo: java/lang/ThreadDeath.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/ThreadGroup.lo: java/lang/ThreadGroup.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/Throwable.lo: java/lang/Throwable.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/UnknownError.lo: java/lang/UnknownError.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/UnsatisfiedLinkError.lo: java/lang/UnsatisfiedLinkError.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/UnsupportedOperationException.lo: \\\n+\tjava/lang/UnsupportedOperationException.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/VerifyError.lo: java/lang/VerifyError.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/VirtualMachineError.lo: java/lang/VirtualMachineError.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n+java/lang/Void.lo: java/lang/Void.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/reflect/.dirstamp:\n+\t@$(mkinstalldirs) java/lang/reflect\n+\t@: > java/lang/reflect/.dirstamp\n+.deps/java/lang/reflect/.dirstamp:\n+\t@$(mkinstalldirs) .deps/java/lang/reflect\n+\t@: > .deps/java/lang/reflect/.dirstamp\n+java/lang/reflect/AccessibleObject.lo: \\\n+\tjava/lang/reflect/AccessibleObject.java \\\n+\tjava/lang/reflect/.dirstamp .deps/java/lang/reflect/.dirstamp\n+java/lang/reflect/Array.lo: java/lang/reflect/Array.java \\\n+\tjava/lang/reflect/.dirstamp .deps/java/lang/reflect/.dirstamp\n+java/lang/reflect/Constructor.lo: java/lang/reflect/Constructor.java \\\n+\tjava/lang/reflect/.dirstamp .deps/java/lang/reflect/.dirstamp\n+java/lang/reflect/Field.lo: java/lang/reflect/Field.java \\\n+\tjava/lang/reflect/.dirstamp .deps/java/lang/reflect/.dirstamp\n+java/lang/reflect/InvocationTargetException.lo: \\\n+\tjava/lang/reflect/InvocationTargetException.java \\\n+\tjava/lang/reflect/.dirstamp .deps/java/lang/reflect/.dirstamp\n+java/lang/reflect/Member.lo: java/lang/reflect/Member.java \\\n+\tjava/lang/reflect/.dirstamp .deps/java/lang/reflect/.dirstamp\n+java/lang/reflect/Method.lo: java/lang/reflect/Method.java \\\n+\tjava/lang/reflect/.dirstamp .deps/java/lang/reflect/.dirstamp\n+java/lang/reflect/Modifier.lo: java/lang/reflect/Modifier.java \\\n+\tjava/lang/reflect/.dirstamp .deps/java/lang/reflect/.dirstamp\n+java/net/.dirstamp:\n+\t@$(mkinstalldirs) java/net\n+\t@: > java/net/.dirstamp\n+.deps/java/net/.dirstamp:\n+\t@$(mkinstalldirs) .deps/java/net\n+\t@: > .deps/java/net/.dirstamp\n+java/net/BindException.lo: java/net/BindException.java \\\n+\tjava/net/.dirstamp .deps/java/net/.dirstamp\n+java/net/ConnectException.lo: java/net/ConnectException.java \\\n+\tjava/net/.dirstamp .deps/java/net/.dirstamp\n+java/net/ContentHandler.lo: java/net/ContentHandler.java \\\n+\tjava/net/.dirstamp .deps/java/net/.dirstamp\n+java/net/ContentHandlerFactory.lo: java/net/ContentHandlerFactory.java \\\n+\tjava/net/.dirstamp .deps/java/net/.dirstamp\n+java/net/DatagramPacket.lo: java/net/DatagramPacket.java \\\n+\tjava/net/.dirstamp .deps/java/net/.dirstamp\n+java/net/DatagramSocket.lo: java/net/DatagramSocket.java \\\n+\tjava/net/.dirstamp .deps/java/net/.dirstamp\n+java/net/DatagramSocketImpl.lo: java/net/DatagramSocketImpl.java \\\n+\tjava/net/.dirstamp .deps/java/net/.dirstamp\n+java/net/FileNameMap.lo: java/net/FileNameMap.java java/net/.dirstamp \\\n+\t.deps/java/net/.dirstamp\n+java/net/HttpURLConnection.lo: java/net/HttpURLConnection.java \\\n+\tjava/net/.dirstamp .deps/java/net/.dirstamp\n+java/net/InetAddress.lo: java/net/InetAddress.java java/net/.dirstamp \\\n+\t.deps/java/net/.dirstamp\n+java/net/JarURLConnection.lo: java/net/JarURLConnection.java \\\n+\tjava/net/.dirstamp .deps/java/net/.dirstamp\n+java/net/MalformedURLException.lo: java/net/MalformedURLException.java \\\n+\tjava/net/.dirstamp .deps/java/net/.dirstamp\n+java/net/MulticastSocket.lo: java/net/MulticastSocket.java \\\n+\tjava/net/.dirstamp .deps/java/net/.dirstamp\n+java/net/NoRouteToHostException.lo: java/net/NoRouteToHostException.java \\\n+\tjava/net/.dirstamp .deps/java/net/.dirstamp\n+java/net/PlainDatagramSocketImpl.lo: \\\n+\tjava/net/PlainDatagramSocketImpl.java java/net/.dirstamp \\\n+\t.deps/java/net/.dirstamp\n+java/net/PlainSocketImpl.lo: java/net/PlainSocketImpl.java \\\n+\tjava/net/.dirstamp .deps/java/net/.dirstamp\n+java/net/ProtocolException.lo: java/net/ProtocolException.java \\\n+\tjava/net/.dirstamp .deps/java/net/.dirstamp\n+java/net/ServerSocket.lo: java/net/ServerSocket.java java/net/.dirstamp \\\n+\t.deps/java/net/.dirstamp\n+java/net/Socket.lo: java/net/Socket.java java/net/.dirstamp \\\n+\t.deps/java/net/.dirstamp\n+java/net/SocketException.lo: java/net/SocketException.java \\\n+\tjava/net/.dirstamp .deps/java/net/.dirstamp\n+java/net/SocketImpl.lo: java/net/SocketImpl.java java/net/.dirstamp \\\n+\t.deps/java/net/.dirstamp\n+java/net/SocketImplFactory.lo: java/net/SocketImplFactory.java \\\n+\tjava/net/.dirstamp .deps/java/net/.dirstamp\n+java/net/SocketOptions.lo: java/net/SocketOptions.java \\\n+\tjava/net/.dirstamp .deps/java/net/.dirstamp\n+java/net/URL.lo: java/net/URL.java java/net/.dirstamp \\\n+\t.deps/java/net/.dirstamp\n+java/net/URLClassLoader.lo: java/net/URLClassLoader.java \\\n+\tjava/net/.dirstamp .deps/java/net/.dirstamp\n+java/net/URLConnection.lo: java/net/URLConnection.java \\\n+\tjava/net/.dirstamp .deps/java/net/.dirstamp\n+java/net/URLDecoder.lo: java/net/URLDecoder.java java/net/.dirstamp \\\n+\t.deps/java/net/.dirstamp\n+java/net/URLEncoder.lo: java/net/URLEncoder.java java/net/.dirstamp \\\n+\t.deps/java/net/.dirstamp\n+java/net/URLStreamHandler.lo: java/net/URLStreamHandler.java \\\n+\tjava/net/.dirstamp .deps/java/net/.dirstamp\n+java/net/URLStreamHandlerFactory.lo: \\\n+\tjava/net/URLStreamHandlerFactory.java java/net/.dirstamp \\\n+\t.deps/java/net/.dirstamp\n+java/net/UnknownHostException.lo: java/net/UnknownHostException.java \\\n+\tjava/net/.dirstamp .deps/java/net/.dirstamp\n+java/net/UnknownServiceException.lo: \\\n+\tjava/net/UnknownServiceException.java java/net/.dirstamp \\\n+\t.deps/java/net/.dirstamp\n+java/security/.dirstamp:\n+\t@$(mkinstalldirs) java/security\n+\t@: > java/security/.dirstamp\n+.deps/java/security/.dirstamp:\n+\t@$(mkinstalldirs) .deps/java/security\n+\t@: > .deps/java/security/.dirstamp\n+java/security/MessageDigest.lo: java/security/MessageDigest.java \\\n+\tjava/security/.dirstamp .deps/java/security/.dirstamp\n+java/security/NoSuchAlgorithmException.lo: \\\n+\tjava/security/NoSuchAlgorithmException.java \\\n+\tjava/security/.dirstamp .deps/java/security/.dirstamp\n+java/security/SecureClassLoader.lo: java/security/SecureClassLoader.java \\\n+\tjava/security/.dirstamp .deps/java/security/.dirstamp\n+java/text/.dirstamp:\n+\t@$(mkinstalldirs) java/text\n+\t@: > java/text/.dirstamp\n+.deps/java/text/.dirstamp:\n+\t@$(mkinstalldirs) .deps/java/text\n+\t@: > .deps/java/text/.dirstamp\n+java/text/BreakIterator.lo: java/text/BreakIterator.java \\\n+\tjava/text/.dirstamp .deps/java/text/.dirstamp\n+java/text/CharacterIterator.lo: java/text/CharacterIterator.java \\\n+\tjava/text/.dirstamp .deps/java/text/.dirstamp\n+java/text/ChoiceFormat.lo: java/text/ChoiceFormat.java \\\n+\tjava/text/.dirstamp .deps/java/text/.dirstamp\n+java/text/CollationElementIterator.lo: \\\n+\tjava/text/CollationElementIterator.java java/text/.dirstamp \\\n+\t.deps/java/text/.dirstamp\n+java/text/CollationKey.lo: java/text/CollationKey.java \\\n+\tjava/text/.dirstamp .deps/java/text/.dirstamp\n+java/text/Collator.lo: java/text/Collator.java java/text/.dirstamp \\\n+\t.deps/java/text/.dirstamp\n+java/text/DateFormat.lo: java/text/DateFormat.java java/text/.dirstamp \\\n+\t.deps/java/text/.dirstamp\n+java/text/DateFormatSymbols.lo: java/text/DateFormatSymbols.java \\\n+\tjava/text/.dirstamp .deps/java/text/.dirstamp\n+java/text/DecimalFormat.lo: java/text/DecimalFormat.java \\\n+\tjava/text/.dirstamp .deps/java/text/.dirstamp\n+java/text/DecimalFormatSymbols.lo: java/text/DecimalFormatSymbols.java \\\n+\tjava/text/.dirstamp .deps/java/text/.dirstamp\n+java/text/FieldPosition.lo: java/text/FieldPosition.java \\\n+\tjava/text/.dirstamp .deps/java/text/.dirstamp\n+java/text/Format.lo: java/text/Format.java java/text/.dirstamp \\\n+\t.deps/java/text/.dirstamp\n+java/text/MessageFormat.lo: java/text/MessageFormat.java \\\n+\tjava/text/.dirstamp .deps/java/text/.dirstamp\n+java/text/NumberFormat.lo: java/text/NumberFormat.java \\\n+\tjava/text/.dirstamp .deps/java/text/.dirstamp\n+java/text/ParseException.lo: java/text/ParseException.java \\\n+\tjava/text/.dirstamp .deps/java/text/.dirstamp\n+java/text/ParsePosition.lo: java/text/ParsePosition.java \\\n+\tjava/text/.dirstamp .deps/java/text/.dirstamp\n+java/text/RuleBasedCollator.lo: java/text/RuleBasedCollator.java \\\n+\tjava/text/.dirstamp .deps/java/text/.dirstamp\n+java/text/SimpleDateFormat.lo: java/text/SimpleDateFormat.java \\\n+\tjava/text/.dirstamp .deps/java/text/.dirstamp\n+java/text/StringCharacterIterator.lo: \\\n+\tjava/text/StringCharacterIterator.java java/text/.dirstamp \\\n+\t.deps/java/text/.dirstamp\n+java/util/.dirstamp:\n+\t@$(mkinstalldirs) java/util\n+\t@: > java/util/.dirstamp\n+.deps/java/util/.dirstamp:\n+\t@$(mkinstalldirs) .deps/java/util\n+\t@: > .deps/java/util/.dirstamp\n+java/util/BitSet.lo: java/util/BitSet.java java/util/.dirstamp \\\n+\t.deps/java/util/.dirstamp\n+java/util/Calendar.lo: java/util/Calendar.java java/util/.dirstamp \\\n+\t.deps/java/util/.dirstamp\n+java/util/ConcurrentModificationException.lo: \\\n+\tjava/util/ConcurrentModificationException.java \\\n+\tjava/util/.dirstamp .deps/java/util/.dirstamp\n+java/util/Date.lo: java/util/Date.java java/util/.dirstamp \\\n+\t.deps/java/util/.dirstamp\n+java/util/Dictionary.lo: java/util/Dictionary.java java/util/.dirstamp \\\n+\t.deps/java/util/.dirstamp\n+java/util/EmptyStackException.lo: java/util/EmptyStackException.java \\\n+\tjava/util/.dirstamp .deps/java/util/.dirstamp\n+java/util/Enumeration.lo: java/util/Enumeration.java java/util/.dirstamp \\\n+\t.deps/java/util/.dirstamp\n+java/util/EventListener.lo: java/util/EventListener.java \\\n+\tjava/util/.dirstamp .deps/java/util/.dirstamp\n+java/util/EventObject.lo: java/util/EventObject.java java/util/.dirstamp \\\n+\t.deps/java/util/.dirstamp\n+java/util/GregorianCalendar.lo: java/util/GregorianCalendar.java \\\n+\tjava/util/.dirstamp .deps/java/util/.dirstamp\n+java/util/Hashtable.lo: java/util/Hashtable.java java/util/.dirstamp \\\n+\t.deps/java/util/.dirstamp\n+java/util/ListResourceBundle.lo: java/util/ListResourceBundle.java \\\n+\tjava/util/.dirstamp .deps/java/util/.dirstamp\n+java/util/Locale.lo: java/util/Locale.java java/util/.dirstamp \\\n+\t.deps/java/util/.dirstamp\n+java/util/MissingResourceException.lo: \\\n+\tjava/util/MissingResourceException.java java/util/.dirstamp \\\n+\t.deps/java/util/.dirstamp\n+java/util/NoSuchElementException.lo: \\\n+\tjava/util/NoSuchElementException.java java/util/.dirstamp \\\n+\t.deps/java/util/.dirstamp\n+java/util/Observable.lo: java/util/Observable.java java/util/.dirstamp \\\n+\t.deps/java/util/.dirstamp\n+java/util/Observer.lo: java/util/Observer.java java/util/.dirstamp \\\n+\t.deps/java/util/.dirstamp\n+java/util/Properties.lo: java/util/Properties.java java/util/.dirstamp \\\n+\t.deps/java/util/.dirstamp\n+java/util/PropertyResourceBundle.lo: \\\n+\tjava/util/PropertyResourceBundle.java java/util/.dirstamp \\\n+\t.deps/java/util/.dirstamp\n+java/util/Random.lo: java/util/Random.java java/util/.dirstamp \\\n+\t.deps/java/util/.dirstamp\n+java/util/ResourceBundle.lo: java/util/ResourceBundle.java \\\n+\tjava/util/.dirstamp .deps/java/util/.dirstamp\n+java/util/SimpleTimeZone.lo: java/util/SimpleTimeZone.java \\\n+\tjava/util/.dirstamp .deps/java/util/.dirstamp\n+java/util/Stack.lo: java/util/Stack.java java/util/.dirstamp \\\n+\t.deps/java/util/.dirstamp\n+java/util/StringTokenizer.lo: java/util/StringTokenizer.java \\\n+\tjava/util/.dirstamp .deps/java/util/.dirstamp\n+java/util/TimeZone.lo: java/util/TimeZone.java java/util/.dirstamp \\\n+\t.deps/java/util/.dirstamp\n+java/util/TooManyListenersException.lo: \\\n+\tjava/util/TooManyListenersException.java java/util/.dirstamp \\\n+\t.deps/java/util/.dirstamp\n+java/util/Vector.lo: java/util/Vector.java java/util/.dirstamp \\\n+\t.deps/java/util/.dirstamp\n+java/util/jar/.dirstamp:\n+\t@$(mkinstalldirs) java/util/jar\n+\t@: > java/util/jar/.dirstamp\n+.deps/java/util/jar/.dirstamp:\n+\t@$(mkinstalldirs) .deps/java/util/jar\n+\t@: > .deps/java/util/jar/.dirstamp\n+java/util/jar/JarFile.lo: java/util/jar/JarFile.java \\\n+\tjava/util/jar/.dirstamp .deps/java/util/jar/.dirstamp\n+java/util/jar/JarInputStream.lo: java/util/jar/JarInputStream.java \\\n+\tjava/util/jar/.dirstamp .deps/java/util/jar/.dirstamp\n+java/util/jar/JarEntry.lo: java/util/jar/JarEntry.java \\\n+\tjava/util/jar/.dirstamp .deps/java/util/jar/.dirstamp\n+java/util/zip/.dirstamp:\n+\t@$(mkinstalldirs) java/util/zip\n+\t@: > java/util/zip/.dirstamp\n+.deps/java/util/zip/.dirstamp:\n+\t@$(mkinstalldirs) .deps/java/util/zip\n+\t@: > .deps/java/util/zip/.dirstamp\n+java/util/zip/Adler32.lo: java/util/zip/Adler32.java \\\n+\tjava/util/zip/.dirstamp .deps/java/util/zip/.dirstamp\n+java/util/zip/CRC32.lo: java/util/zip/CRC32.java java/util/zip/.dirstamp \\\n+\t.deps/java/util/zip/.dirstamp\n+java/util/zip/CheckedInputStream.lo: \\\n+\tjava/util/zip/CheckedInputStream.java java/util/zip/.dirstamp \\\n+\t.deps/java/util/zip/.dirstamp\n+java/util/zip/CheckedOutputStream.lo: \\\n+\tjava/util/zip/CheckedOutputStream.java java/util/zip/.dirstamp \\\n+\t.deps/java/util/zip/.dirstamp\n+java/util/zip/Checksum.lo: java/util/zip/Checksum.java \\\n+\tjava/util/zip/.dirstamp .deps/java/util/zip/.dirstamp\n+java/util/zip/DataFormatException.lo: \\\n+\tjava/util/zip/DataFormatException.java java/util/zip/.dirstamp \\\n+\t.deps/java/util/zip/.dirstamp\n+java/util/zip/Deflater.lo: java/util/zip/Deflater.java \\\n+\tjava/util/zip/.dirstamp .deps/java/util/zip/.dirstamp\n+java/util/zip/DeflaterOutputStream.lo: \\\n+\tjava/util/zip/DeflaterOutputStream.java java/util/zip/.dirstamp \\\n+\t.deps/java/util/zip/.dirstamp\n+java/util/zip/GZIPInputStream.lo: java/util/zip/GZIPInputStream.java \\\n+\tjava/util/zip/.dirstamp .deps/java/util/zip/.dirstamp\n+java/util/zip/GZIPOutputStream.lo: java/util/zip/GZIPOutputStream.java \\\n+\tjava/util/zip/.dirstamp .deps/java/util/zip/.dirstamp\n+java/util/zip/Inflater.lo: java/util/zip/Inflater.java \\\n+\tjava/util/zip/.dirstamp .deps/java/util/zip/.dirstamp\n+java/util/zip/InflaterInputStream.lo: \\\n+\tjava/util/zip/InflaterInputStream.java java/util/zip/.dirstamp \\\n+\t.deps/java/util/zip/.dirstamp\n+java/util/zip/ZipConstants.lo: java/util/zip/ZipConstants.java \\\n+\tjava/util/zip/.dirstamp .deps/java/util/zip/.dirstamp\n+java/util/zip/ZipEntry.lo: java/util/zip/ZipEntry.java \\\n+\tjava/util/zip/.dirstamp .deps/java/util/zip/.dirstamp\n+java/util/zip/ZipException.lo: java/util/zip/ZipException.java \\\n+\tjava/util/zip/.dirstamp .deps/java/util/zip/.dirstamp\n+java/util/zip/ZipFile.lo: java/util/zip/ZipFile.java \\\n+\tjava/util/zip/.dirstamp .deps/java/util/zip/.dirstamp\n+java/util/zip/ZipInputStream.lo: java/util/zip/ZipInputStream.java \\\n+\tjava/util/zip/.dirstamp .deps/java/util/zip/.dirstamp\n+java/util/zip/ZipOutputStream.lo: java/util/zip/ZipOutputStream.java \\\n+\tjava/util/zip/.dirstamp .deps/java/util/zip/.dirstamp\n+java/lang/Class.lo: java/lang/Class.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/Object.lo: java/lang/Object.java java/lang/.dirstamp \\\n+\t.deps/java/lang/.dirstamp\n+java/lang/ConcreteProcess.lo: java/lang/ConcreteProcess.java \\\n+\tjava/lang/.dirstamp .deps/java/lang/.dirstamp\n \n libgcj.la: $(libgcj_la_OBJECTS) $(libgcj_la_DEPENDENCIES)\n \t$(CXXLINK) -rpath $(toolexeclibdir) $(libgcj_la_LDFLAGS) $(libgcj_la_OBJECTS) $(libgcj_la_LIBADD) $(LIBS)\n@@ -1037,15 +1761,18 @@ install-binPROGRAMS: $(bin_PROGRAMS)\n \t$(mkinstalldirs) $(DESTDIR)$(bindir)\n \t@list='$(bin_PROGRAMS)'; for p in $$list; do \\\n \t  if test -f $$p; then \\\n-\t    echo \" $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`\"; \\\n-\t    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $$p $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \\\n+\t    f=\"`echo $$p|sed -e 's/$(EXEEXT)$$//' -e '$(transform)' -e 's/$$/$(EXEEXT)/'`\"; \\\n+\t    echo \" $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(bindir)/$$f\"; \\\n+\t    $(LIBTOOL)  --mode=install $(INSTALL_PROGRAM) $(INSTALL_STRIP_FLAG) $$p $(DESTDIR)$(bindir)/$$f; \\\n \t  else :; fi; \\\n \tdone\n \n uninstall-binPROGRAMS:\n \t@$(NORMAL_UNINSTALL)\n-\tlist='$(bin_PROGRAMS)'; for p in $$list; do \\\n-\t  rm -f $(DESTDIR)$(bindir)/`echo $$p|sed 's/$(EXEEXT)$$//'|sed '$(transform)'|sed 's/$$/$(EXEEXT)/'`; \\\n+\t@list='$(bin_PROGRAMS)'; for p in $$list; do \\\n+\t  f=\"`echo $$p|sed -e 's/$(EXEEXT)$$//' -e '$(transform)' -e 's/$$/$(EXEEXT)/'`\"; \\\n+\t  echo \" rm -f $(DESTDIR)$(bindir)/$$f\"; \\\n+\t  rm -f $(DESTDIR)$(bindir)/$$f; \\\n \tdone\n \n mostlyclean-noinstPROGRAMS:\n@@ -1056,59 +1783,93 @@ clean-noinstPROGRAMS:\n distclean-noinstPROGRAMS:\n \n maintainer-clean-noinstPROGRAMS:\n+gen-from-JIS.o: $(srcdir)/$(CONVERT_DIR)/gen-from-JIS.c\n+make-trie.o: $(srcdir)/$(CONVERT_DIR)/make-trie.c\n \n-jv-convert$(EXEEXT): $(jv_convert_OBJECTS) $(jv_convert_DEPENDENCIES)\n-\t@rm -f jv-convert$(EXEEXT)\n-\t$(jv_convert_LINK) $(jv_convert_LDFLAGS) $(jv_convert_OBJECTS) $(jv_convert_LDADD) $(LIBS)\n+gen-from-JIS$(EXEEXT): $(gen_from_JIS_OBJECTS) $(gen_from_JIS_DEPENDENCIES)\n+\t@rm -f gen-from-JIS$(EXEEXT)\n+\t$(LINK) $(gen_from_JIS_LDFLAGS) $(gen_from_JIS_OBJECTS) $(gen_from_JIS_LDADD) $(LIBS)\n \n gij$(EXEEXT): $(gij_OBJECTS) $(gij_DEPENDENCIES)\n \t@rm -f gij$(EXEEXT)\n \t$(gij_LINK) $(gij_LDFLAGS) $(gij_OBJECTS) $(gij_LDADD) $(LIBS)\n+gnu/gcj/convert/BytesToUnicode.o: gnu/gcj/convert/BytesToUnicode.java \\\n+\tgnu/gcj/convert/.dirstamp .deps/gnu/gcj/convert/.dirstamp\n+gnu/gcj/convert/Convert.o: gnu/gcj/convert/Convert.java \\\n+\tgnu/gcj/convert/.dirstamp .deps/gnu/gcj/convert/.dirstamp\n+gnu/gcj/convert/Input_8859_1.o: gnu/gcj/convert/Input_8859_1.java \\\n+\tgnu/gcj/convert/.dirstamp .deps/gnu/gcj/convert/.dirstamp\n+gnu/gcj/convert/Input_EUCJIS.o: gnu/gcj/convert/Input_EUCJIS.java \\\n+\tgnu/gcj/convert/.dirstamp .deps/gnu/gcj/convert/.dirstamp\n+gnu/gcj/convert/Input_JavaSrc.o: gnu/gcj/convert/Input_JavaSrc.java \\\n+\tgnu/gcj/convert/.dirstamp .deps/gnu/gcj/convert/.dirstamp\n+gnu/gcj/convert/Input_SJIS.o: gnu/gcj/convert/Input_SJIS.java \\\n+\tgnu/gcj/convert/.dirstamp .deps/gnu/gcj/convert/.dirstamp\n+gnu/gcj/convert/Input_UTF8.o: gnu/gcj/convert/Input_UTF8.java \\\n+\tgnu/gcj/convert/.dirstamp .deps/gnu/gcj/convert/.dirstamp\n+gnu/gcj/convert/Output_8859_1.o: gnu/gcj/convert/Output_8859_1.java \\\n+\tgnu/gcj/convert/.dirstamp .deps/gnu/gcj/convert/.dirstamp\n+gnu/gcj/convert/Output_EUCJIS.o: gnu/gcj/convert/Output_EUCJIS.java \\\n+\tgnu/gcj/convert/.dirstamp .deps/gnu/gcj/convert/.dirstamp\n+gnu/gcj/convert/Output_JavaSrc.o: gnu/gcj/convert/Output_JavaSrc.java \\\n+\tgnu/gcj/convert/.dirstamp .deps/gnu/gcj/convert/.dirstamp\n+gnu/gcj/convert/Output_SJIS.o: gnu/gcj/convert/Output_SJIS.java \\\n+\tgnu/gcj/convert/.dirstamp .deps/gnu/gcj/convert/.dirstamp\n+gnu/gcj/convert/Output_UTF8.o: gnu/gcj/convert/Output_UTF8.java \\\n+\tgnu/gcj/convert/.dirstamp .deps/gnu/gcj/convert/.dirstamp\n+gnu/gcj/convert/UnicodeToBytes.o: gnu/gcj/convert/UnicodeToBytes.java \\\n+\tgnu/gcj/convert/.dirstamp .deps/gnu/gcj/convert/.dirstamp\n \n-gen-from-JIS$(EXEEXT): $(gen_from_JIS_OBJECTS) $(gen_from_JIS_DEPENDENCIES)\n-\t@rm -f gen-from-JIS$(EXEEXT)\n-\t$(LINK) $(gen_from_JIS_LDFLAGS) $(gen_from_JIS_OBJECTS) $(gen_from_JIS_LDADD) $(LIBS)\n+jv-convert$(EXEEXT): $(jv_convert_OBJECTS) $(jv_convert_DEPENDENCIES)\n+\t@rm -f jv-convert$(EXEEXT)\n+\t$(jv_convert_LINK) $(jv_convert_LDFLAGS) $(jv_convert_OBJECTS) $(jv_convert_LDADD) $(LIBS)\n+.c.o:\n+\t$(COMPILE) -c $<\n+.c.lo:\n+\t$(LTCOMPILE) -c -o $@ $<\n .cc.o:\n-\t$(CXXCOMPILE) -c $<\n+\t$(CXXCOMPILE) -c -o $@ $<\n .cc.lo:\n-\t$(LTCXXCOMPILE) -c $<\n+\t$(LTCXXCOMPILE) -c -o $@ $<\n+.java.o:\n+\t$(GCJCOMPILE) -c -o $@ $<\n+.java.lo:\n+\t$(LTGCJCOMPILE) -c -o $@ $<\n \n install-dataDATA: $(data_DATA)\n \t@$(NORMAL_INSTALL)\n \t$(mkinstalldirs) $(DESTDIR)$(datadir)\n \t@list='$(data_DATA)'; for p in $$list; do \\\n-\t  if test -f $(srcdir)/$$p; then \\\n-\t    echo \" $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(datadir)/$$p\"; \\\n-\t    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(datadir)/$$p; \\\n-\t  else if test -f $$p; then \\\n-\t    echo \" $(INSTALL_DATA) $$p $(DESTDIR)$(datadir)/$$p\"; \\\n-\t    $(INSTALL_DATA) $$p $(DESTDIR)$(datadir)/$$p; \\\n-\t  fi; fi; \\\n+\t  if test -f \"$$p\"; then d= ; else d=\"$(srcdir)/\"; fi; \\\n+\t  f=\"`echo $$p | sed -e 's|^.*/||'`\"; \\\n+\t  echo \" $(INSTALL_DATA) $$d$$p $(DESTDIR)$(datadir)/$$f\"; \\\n+\t  $(INSTALL_DATA) $$d$$p $(DESTDIR)$(datadir)/$$f; \\\n \tdone\n \n uninstall-dataDATA:\n \t@$(NORMAL_UNINSTALL)\n-\tlist='$(data_DATA)'; for p in $$list; do \\\n-\t  rm -f $(DESTDIR)$(datadir)/$$p; \\\n+\t@list='$(data_DATA)'; for p in $$list; do \\\n+\t  f=\"`echo $$p | sed -e 's|^.*/||'`\"; \\\n+\t  echo \" rm -f $(DESTDIR)$(datadir)/$$f\"; \\\n+\t  rm -f $(DESTDIR)$(datadir)/$$f; \\\n \tdone\n \n install-toolexeclibDATA: $(toolexeclib_DATA)\n \t@$(NORMAL_INSTALL)\n \t$(mkinstalldirs) $(DESTDIR)$(toolexeclibdir)\n \t@list='$(toolexeclib_DATA)'; for p in $$list; do \\\n-\t  if test -f $(srcdir)/$$p; then \\\n-\t    echo \" $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(toolexeclibdir)/$$p\"; \\\n-\t    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(toolexeclibdir)/$$p; \\\n-\t  else if test -f $$p; then \\\n-\t    echo \" $(INSTALL_DATA) $$p $(DESTDIR)$(toolexeclibdir)/$$p\"; \\\n-\t    $(INSTALL_DATA) $$p $(DESTDIR)$(toolexeclibdir)/$$p; \\\n-\t  fi; fi; \\\n+\t  if test -f \"$$p\"; then d= ; else d=\"$(srcdir)/\"; fi; \\\n+\t  f=\"`echo $$p | sed -e 's|^.*/||'`\"; \\\n+\t  echo \" $(INSTALL_DATA) $$d$$p $(DESTDIR)$(toolexeclibdir)/$$f\"; \\\n+\t  $(INSTALL_DATA) $$d$$p $(DESTDIR)$(toolexeclibdir)/$$f; \\\n \tdone\n \n uninstall-toolexeclibDATA:\n \t@$(NORMAL_UNINSTALL)\n-\tlist='$(toolexeclib_DATA)'; for p in $$list; do \\\n-\t  rm -f $(DESTDIR)$(toolexeclibdir)/$$p; \\\n+\t@list='$(toolexeclib_DATA)'; for p in $$list; do \\\n+\t  f=\"`echo $$p | sed -e 's|^.*/||'`\"; \\\n+\t  echo \" rm -f $(DESTDIR)$(toolexeclibdir)/$$f\"; \\\n+\t  rm -f $(DESTDIR)$(toolexeclibdir)/$$f; \\\n \tdone\n \n # This directory's subdirectories are mostly independent; you can cd\n@@ -1147,7 +1908,7 @@ maintainer-clean-recursive:\n \tdot_seen=no; \\\n \trev=''; list='$(SUBDIRS)'; for subdir in $$list; do \\\n \t  rev=\"$$subdir $$rev\"; \\\n-\t  test \"$$subdir\" = \".\" && dot_seen=yes; \\\n+\t  if test \"$$subdir\" = \".\"; then dot_seen=yes; else :; fi; \\\n \tdone; \\\n \ttest \"$$dot_seen\" = \"no\" && rev=\". $$rev\"; \\\n \ttarget=`echo $@ | sed s/-recursive//`; \\\n@@ -1168,28 +1929,32 @@ tags-recursive:\n \n tags: TAGS\n \n-ID: $(HEADERS) $(SOURCES) $(LISP)\n-\tlist='$(SOURCES) $(HEADERS)'; \\\n-\tunique=`for i in $$list; do echo $$i; done | \\\n-\t  awk '    { files[$$0] = 1; } \\\n+ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)\n+\tlist='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \\\n+\tunique=`for i in $$list; do \\\n+\t    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n+\t  done | \\\n+\t  $(AWK) '    { files[$$0] = 1; } \\\n \t       END { for (i in files) print i; }'`; \\\n-\there=`pwd` && cd $(srcdir) \\\n-\t  && mkid -f$$here/ID $$unique $(LISP)\n+\tmkid -f$$here/ID $$unique $(LISP)\n \n-TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) $(LISP)\n+TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \\\n+\t\t$(TAGS_FILES) $(LISP)\n \ttags=; \\\n \there=`pwd`; \\\n \tlist='$(SUBDIRS)'; for subdir in $$list; do \\\n    if test \"$$subdir\" = .; then :; else \\\n \t    test -f $$subdir/TAGS && tags=\"$$tags -i $$here/$$subdir/TAGS\"; \\\n    fi; \\\n \tdone; \\\n-\tlist='$(SOURCES) $(HEADERS)'; \\\n-\tunique=`for i in $$list; do echo $$i; done | \\\n-\t  awk '    { files[$$0] = 1; } \\\n+\tlist='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \\\n+\tunique=`for i in $$list; do \\\n+\t    if test -f \"$$i\"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n+\t  done | \\\n+\t  $(AWK) '    { files[$$0] = 1; } \\\n \t       END { for (i in files) print i; }'`; \\\n \ttest -z \"$(ETAGS_ARGS)$$unique$(LISP)$$tags\" \\\n-\t  || (cd $(srcdir) && etags $(ETAGS_ARGS) $$tags  $$unique $(LISP) -o $$here/TAGS)\n+\t  || etags $(ETAGS_ARGS) $$tags  $$unique $(LISP)\n \n mostlyclean-tags:\n \n@@ -1208,11 +1973,11 @@ top_distdir = $(distdir)\n # tarfile.\n distcheck: dist\n \t-rm -rf $(distdir)\n-\tGZIP=$(GZIP_ENV) $(TAR) zxf $(distdir).tar.gz\n+\tGZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(AMTAR) xf -\n \tmkdir $(distdir)/=build\n \tmkdir $(distdir)/=inst\n-\tdc_install_base=`cd $(distdir)/=inst && pwd`; \\\n-\tcd $(distdir)/=build \\\n+\tdc_install_base=`cd $(distdir)/=inst && pwd` \\\n+\t  && cd $(distdir)/=build \\\n \t  && ../configure --srcdir=.. --prefix=$$dc_install_base \\\n \t  && $(MAKE) $(AM_MAKEFLAGS) \\\n \t  && $(MAKE) $(AM_MAKEFLAGS) dvi \\\n@@ -1227,17 +1992,22 @@ distcheck: dist\n \techo \"$$banner\"; \\\n \techo \"$$dashes\"\n dist: distdir\n-\t-chmod -R a+r $(distdir)\n-\tGZIP=$(GZIP_ENV) $(TAR) chozf $(distdir).tar.gz $(distdir)\n+\t-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \\; -o \\\n+\t  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \\; -o \\\n+\t  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \\; \\\n+\t|| chmod -R a+r $(distdir)\n+\t$(AMTAR) ch$(AMTARFLAGS)f - $(distdir) | GZIP=$(GZIP_ENV) gzip -c > $(distdir).tar.gz\n \t-rm -rf $(distdir)\n dist-all: distdir\n-\t-chmod -R a+r $(distdir)\n-\tGZIP=$(GZIP_ENV) $(TAR) chozf $(distdir).tar.gz $(distdir)\n+\t-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \\; -o \\\n+\t  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \\; -o \\\n+\t  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \\; \\\n+\t|| chmod -R a+r $(distdir)\n+\t$(AMTAR) ch$(AMTARFLAGS)f - $(distdir) | GZIP=$(GZIP_ENV) gzip -c > $(distdir).tar.gz\n \t-rm -rf $(distdir)\n distdir: $(DISTFILES)\n \t-rm -rf $(distdir)\n \tmkdir $(distdir)\n-\t-chmod 777 $(distdir)\n \there=`cd $(top_builddir) && pwd`; \\\n \ttop_distdir=`cd $(distdir) && pwd`; \\\n \tdistdir=`cd $(distdir) && pwd`; \\\n@@ -1246,7 +2016,7 @@ distdir: $(DISTFILES)\n \t@for file in $(DISTFILES); do \\\n \t  d=$(srcdir); \\\n \t  if test -d $$d/$$file; then \\\n-\t    cp -pr $$/$$file $(distdir)/$$file; \\\n+\t    cp -pr $$d/$$file $(distdir)/$$file; \\\n \t  else \\\n \t    test -f $(distdir)/$$file \\\n \t    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \\\n@@ -1258,7 +2028,6 @@ distdir: $(DISTFILES)\n \t    test -d $(distdir)/$$subdir \\\n \t    || mkdir $(distdir)/$$subdir \\\n \t    || exit 1; \\\n-\t    chmod 777 $(distdir)/$$subdir; \\\n \t    (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir=../$(distdir) distdir=../$(distdir)/$$subdir distdir) \\\n \t      || exit 1; \\\n \t  fi; \\\n@@ -1278,42 +2047,42 @@ distclean-depend:\n maintainer-clean-depend:\n \n %.o: %.c\n-\t@echo '$(COMPILE) -c $<'; \\\n-\t$(COMPILE) -Wp,-MD,.deps/$(*F).pp -c $<\n-\t@-cp .deps/$(*F).pp .deps/$(*F).P; \\\n-\ttr ' ' '\\012' < .deps/$(*F).pp \\\n+\t@echo '$(COMPILE) -c -o $@ $<'; \\\n+\t$(COMPILE) -Wp,-MD,.deps/$(*D)/$(*F).pp -c -o $@ $<\n+\t@-cp .deps/$(*D)/$(*F).pp .deps/$(*D)/$(*F).P; \\\n+\ttr ' ' '\\012' < .deps/$(*D)/$(*F).pp \\\n \t  | sed -e 's/^\\\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \\\n-\t    >> .deps/$(*F).P; \\\n-\trm .deps/$(*F).pp\n+\t    >> .deps/$(*D)/$(*F).P; \\\n+\trm .deps/$(*D)/$(*F).pp\n \n %.lo: %.c\n-\t@echo '$(LTCOMPILE) -c $<'; \\\n-\t$(LTCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<\n+\t@echo '$(LTCOMPILE) -c -o $@ $<'; \\\n+\t$(LTCOMPILE) -Wp,-MD,.deps/$(*D)/$(*F).pp -c -o $@ $<\n \t@-sed -e 's/^\\([^:]*\\)\\.o[ \t]*:/\\1.lo \\1.o :/' \\\n-\t  < .deps/$(*F).pp > .deps/$(*F).P; \\\n-\ttr ' ' '\\012' < .deps/$(*F).pp \\\n+\t  < .deps/$(*D)/$(*F).pp > .deps/$(*D)/$(*F).P; \\\n+\ttr ' ' '\\012' < .deps/$(*D)/$(*F).pp \\\n \t  | sed -e 's/^\\\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \\\n-\t    >> .deps/$(*F).P; \\\n-\trm -f .deps/$(*F).pp\n+\t    >> .deps/$(*D)/$(*F).P; \\\n+\trm -f .deps/$(*D)/$(*F).pp\n \n %.o: %.cc\n-\t@echo '$(CXXCOMPILE) -c $<'; \\\n-\t$(CXXCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<\n-\t@-cp .deps/$(*F).pp .deps/$(*F).P; \\\n-\ttr ' ' '\\012' < .deps/$(*F).pp \\\n+\t@echo '$(CXXCOMPILE) -c -o $@ $<'; \\\n+\t$(CXXCOMPILE) -Wp,-MD,.deps/$(*D)/$(*F).pp -c -o $@ $<\n+\t@-cp .deps/$(*D)/$(*F).pp .deps/$(*D)/$(*F).P; \\\n+\ttr ' ' '\\012' < .deps/$(*D)/$(*F).pp \\\n \t  | sed -e 's/^\\\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \\\n-\t    >> .deps/$(*F).P; \\\n-\trm .deps/$(*F).pp\n+\t    >> .deps/$(*D)/$(*F).P; \\\n+\trm .deps/$(*D)/$(*F).pp\n \n %.lo: %.cc\n-\t@echo '$(LTCXXCOMPILE) -c $<'; \\\n-\t$(LTCXXCOMPILE) -Wp,-MD,.deps/$(*F).pp -c $<\n+\t@echo '$(LTCXXCOMPILE) -c -o $@ $<'; \\\n+\t$(LTCXXCOMPILE) -Wp,-MD,.deps/$(*D)/$(*F).pp -c -o $@ $<\n \t@-sed -e 's/^\\([^:]*\\)\\.o[ \t]*:/\\1.lo \\1.o :/' \\\n-\t  < .deps/$(*F).pp > .deps/$(*F).P; \\\n-\ttr ' ' '\\012' < .deps/$(*F).pp \\\n+\t  < .deps/$(*D)/$(*F).pp > .deps/$(*D)/$(*F).P; \\\n+\ttr ' ' '\\012' < .deps/$(*D)/$(*F).pp \\\n \t  | sed -e 's/^\\\\$$//' -e '/^$$/ d' -e '/:$$/ d' -e 's/$$/ :/' \\\n-\t    >> .deps/$(*F).P; \\\n-\trm -f .deps/$(*F).pp\n+\t    >> .deps/$(*D)/$(*F).P; \\\n+\trm -f .deps/$(*D)/$(*F).pp\n info-am:\n info: info-recursive\n dvi-am:\n@@ -1340,7 +2109,7 @@ uninstall: uninstall-recursive\n all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA)\n all-redirect: all-recursive\n install-strip:\n-\t$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install\n+\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_STRIP_FLAG=-s install\n installdirs: installdirs-recursive\n installdirs-am:\n \t$(mkinstalldirs)  $(DESTDIR)$(toolexeclibdir) $(DESTDIR)$(bindir) \\\n@@ -1406,20 +2175,22 @@ distclean-binPROGRAMS clean-binPROGRAMS maintainer-clean-binPROGRAMS \\\n uninstall-binPROGRAMS install-binPROGRAMS mostlyclean-noinstPROGRAMS \\\n distclean-noinstPROGRAMS clean-noinstPROGRAMS \\\n maintainer-clean-noinstPROGRAMS uninstall-dataDATA install-dataDATA \\\n-uninstall-toolexeclibDATA install-toolexeclibDATA \\\n-install-data-recursive uninstall-data-recursive install-exec-recursive \\\n-uninstall-exec-recursive installdirs-recursive uninstalldirs-recursive \\\n-all-recursive check-recursive installcheck-recursive info-recursive \\\n-dvi-recursive mostlyclean-recursive distclean-recursive clean-recursive \\\n+uninstall-toolexeclibDATA install-toolexeclibDATA install-recursive \\\n+uninstall-recursive install-data-recursive uninstall-data-recursive \\\n+install-exec-recursive uninstall-exec-recursive installdirs-recursive \\\n+uninstalldirs-recursive all-recursive check-recursive \\\n+installcheck-recursive info-recursive dvi-recursive \\\n+mostlyclean-recursive distclean-recursive clean-recursive \\\n maintainer-clean-recursive tags tags-recursive mostlyclean-tags \\\n distclean-tags clean-tags maintainer-clean-tags distdir \\\n mostlyclean-depend distclean-depend clean-depend \\\n maintainer-clean-depend info-am info dvi-am dvi check check-am \\\n installcheck-am installcheck install-info-am install-info \\\n install-exec-am install-exec install-data-am install-data install-am \\\n-install uninstall-am uninstall all-redirect all-am all installdirs-am \\\n-installdirs mostlyclean-generic distclean-generic clean-generic \\\n-maintainer-clean-generic clean mostlyclean distclean maintainer-clean\n+install uninstall-am uninstall all-redirect all-am all install-strip \\\n+installdirs-am installdirs mostlyclean-generic distclean-generic \\\n+clean-generic maintainer-clean-generic clean mostlyclean distclean \\\n+maintainer-clean\n \n \n $(java_source_files:.java=.class): libgcj.zip\n@@ -1464,11 +2235,17 @@ $(javao_files): %.lo: %.java\n \t$(GCJH) -classpath $(top_builddir) $(basename $<)\n \n $(nat_headers): libgcj.zip\n+\n java/lang/FirstThread.h: java/lang/FirstThread.class libgcj.zip\n-\t$(GCJH) -classpath $(top_builddir) -friend '$(FTFRIEND);' \\\n+\t$(GCJH) -classpath $(top_builddir) \\\n+\t\t-friend 'void JvRunMain (jclass, int, const char **);' \\\n+\t\t-friend 'void _Jv_RunMain (const char*, int, const char **);' \\\n \t\t$(basename $<)\n+\n java/lang/ThreadGroup.h: java/lang/ThreadGroup.class libgcj.zip\n-\t$(GCJH) -classpath $(top_builddir) -friend '$(TGFRIEND);' \\\n+\t$(GCJH) -classpath $(top_builddir) \\\n+\t\t-friend 'void JvRunMain (jclass, int, const char **);' \\\n+\t\t-friend 'void _Jv_RunMain (const char*, int, const char **);' \\\n \t\t$(basename $<)\n \n java/lang/String.h: java/lang/String.class libgcj.zip\n@@ -1494,7 +2271,7 @@ java/lang/reflect/Method.h: java/lang/reflect/Method.class libgcj.zip\n \t    -friend 'java::lang::Class;' \\\n \t    $(basename $<)\n \n-java/lang/VMClassLoader.h: java/lang/VMClassLoader.class libgcj.zip\n+gnu/gcj/runtime/VMClassLoader.h: gnu/gcj/runtime/VMClassLoader.class libgcj.zip\n \t$(GCJH) -classpath $(top_builddir) \\\n \t    -friend 'java::lang::ClassLoader;' \\\n \t    $(basename $<)"}, {"sha": "5bd2451275e29725adf5569a4a3cf09efed03a8b", "filename": "libjava/gij.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fgij.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fgij.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgij.cc?ref=eb4534a63677aa47ec9e5cc460617622b905d736", "patch": "@@ -23,5 +23,5 @@ int main (int argc, const char **argv)\n       exit (1);\n     }\n \n-  JvRunMain (0, argc, argv);\n+  _Jv_RunMain (argv[1], argc-1, argv+1);\n }"}, {"sha": "4d7421b2f7944a0eaf03bed2a8f8f4a67769bf95", "filename": "libjava/gnu/gcj/protocol/jar/Connection.java", "status": "added", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fgnu%2Fgcj%2Fprotocol%2Fjar%2FConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fgnu%2Fgcj%2Fprotocol%2Fjar%2FConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fprotocol%2Fjar%2FConnection.java?ref=eb4534a63677aa47ec9e5cc460617622b905d736", "patch": "@@ -0,0 +1,86 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package gnu.gcj.protocol.jar;\n+\n+import java.net.URL;\n+import java.net.JarURLConnection;\n+import java.net.URLStreamHandler;\n+import java.net.MalformedURLException;\n+import java.net.ProtocolException;\n+import java.io.IOException;\n+import java.util.jar.JarFile;\n+import java.util.Hashtable;\n+\n+/**\n+ * Written using on-line Java Platform 1.2 API Specification.\n+ * Status: Needs a way to download jar files and store them in the local file\n+ * system.  I don't know how to do that in a portable way.  For now, it can only handle \n+ * connections to a jar:file: url's.\n+ *\n+ * @author Kresten Krab Thorup <krab@gnu.org>\n+ * @date Aug 10, 1999.\n+ */\n+\n+\n+\n+public class Connection extends JarURLConnection \n+{\n+  static Hashtable file_cache = new Hashtable();\n+  private JarFile jarfile;\n+\n+  public Connection(URL url)\n+    throws MalformedURLException\n+  {\n+    super(url);\n+  }\n+\n+  public synchronized JarFile getJarFile() throws java.io.IOException\n+  {\n+    if (!connected)\n+      connect();\n+\n+    if (! doInput)\n+      throw new ProtocolException(\"Can't open JarFile if doInput is false\");\n+\n+    if (jarfile != null)\n+      return jarfile;\n+\n+    URL jarFileURL = getJarFileURL ();\n+\n+    if (jarFileURL.getProtocol ().equals (\"file\")\n+\t&& jarFileURL.getHost ().equals (\"\"))\n+      {\n+\tif (getUseCaches())\n+\t  {\n+\t    jarfile = (JarFile) file_cache.get(jarFileURL);\n+\t    if (jarFileURL == null)\n+\t      {\n+\t\tjarfile = new JarFile (jarFileURL.getFile ());\n+\t\tfile_cache.put (jarFileURL, jarfile);\n+\t      }\n+\t  }\n+\telse\n+\t  jarfile = new JarFile (jarFileURL.getFile ());\n+      }\n+    else\n+      {\n+\t/*\n+\t  FIXME: Here we need to download and cache the jar\n+\t  file in the local file system!  Stupid design.  Why\n+\t  can't we just create a JarFile from a bag of bytes?\n+\t*/\n+\n+\tthrow new java.io.IOException(\"cannot create jar file from \" +\n+\t\t\t\t      jarFileURL);\n+      }\n+\n+    return jarfile;\n+  }\n+\n+}"}, {"sha": "f9feb7d99772928d90967d0a0d335042b5f7d83f", "filename": "libjava/gnu/gcj/protocol/jar/Handler.java", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fgnu%2Fgcj%2Fprotocol%2Fjar%2FHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fgnu%2Fgcj%2Fprotocol%2Fjar%2FHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fprotocol%2Fjar%2FHandler.java?ref=eb4534a63677aa47ec9e5cc460617622b905d736", "patch": "@@ -0,0 +1,29 @@\n+// Handler.java - URLStreamHandler for file protocol.\n+\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package gnu.gcj.protocol.jar;\n+\n+import java.net.URL;\n+import java.net.URLConnection;\n+import java.net.URLStreamHandler;\n+import java.io.IOException;\n+\n+/**\n+ * @author Kresten Krab Thorup <krab@gnu.org>\n+ * @date August 13, 1999.\n+ */\n+\n+public class Handler extends URLStreamHandler\n+{\n+  protected URLConnection openConnection(URL url) throws IOException\n+  {\n+    return new Connection(url);\n+  }\n+}"}, {"sha": "bfdb36270737318c08e76598194d048b17b348d5", "filename": "libjava/gnu/gcj/runtime/VMClassLoader.java", "status": "added", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fgnu%2Fgcj%2Fruntime%2FVMClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fgnu%2Fgcj%2Fruntime%2FVMClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fruntime%2FVMClassLoader.java?ref=eb4534a63677aa47ec9e5cc460617622b905d736", "patch": "@@ -0,0 +1,62 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+/* Author: Kresten Krab Thorup <krab@gnu.org>  */\n+\n+package gnu.gcj.runtime;\n+\n+import java.io.*;\n+import java.util.StringTokenizer;\n+import java.net.URL;\n+\n+final class VMClassLoader extends java.net.URLClassLoader\n+{\n+  private VMClassLoader ()\n+  {\t\n+    super (init());\n+  }\n+\n+  private static URL[] init() \n+  {\n+    StringTokenizer st\n+\t= new StringTokenizer (System.getProperty (\"java.class.path\", \".\"),\n+\t\t\t       System.getProperty (\"path.separator\", \":\"));\n+\n+    java.util.Vector p = new java.util.Vector();\n+    while (st.hasMoreElements ()) \n+      {  \n+\tString e = st.nextToken ();\n+\ttry\n+\t  {\n+\t    if (e.endsWith(\".jar\") || e.endsWith (\".zip\"))\n+\t      p.addElement(new URL(\"jar\", \"\", -1, \"file:///\"+e+\"!/\"));\n+\t    else if (e.endsWith (\"/\"))\n+\t      p.addElement (new URL(\"file\", \"\", -1, e));\n+\t    else if (new File (e).isDirectory ())\n+\t      p.addElement (new URL(\"file\", \"\", -1, e + \"/\"));\n+\t    else\n+\t      /* Ignore path element. */;\n+\t  } \n+\tcatch (java.net.MalformedURLException x)\n+\t  {\n+\t    /* Ignore this path element */\n+\t  }\n+      }\n+\n+    URL[] urls = new URL[p.size()];\n+    p.copyInto (urls);\n+    return urls;\n+  }\n+\n+  /** This is overridden to search the internal hash table, which \n+   * will only search existing linked-in classes.   This will make\n+   * the default implementation of loadClass (in ClassLoader) work right.\n+   */\n+  protected final native Class findSystemClass(String name) \n+    throws java.lang.ClassNotFoundException, java.lang.LinkageError;\n+}"}, {"sha": "ff1c122c2f9d9e748b9049b8a88016857dacbf64", "filename": "libjava/include/java-array.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Finclude%2Fjava-array.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Finclude%2Fjava-array.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjava-array.h?ref=eb4534a63677aa47ec9e5cc460617622b905d736", "patch": "@@ -72,6 +72,7 @@ inline jobjectArray JvNewObjectArray (jsize length, jclass cls, jobject init)\n \n extern \"C\" jstringArray JvConvertArgv(int argc, const char **argv);\n extern \"C\" void JvRunMain (jclass klass, int argc, const char **argv);\n+void _Jv_RunMain (const char* name, int argc, const char **argv);\n \n inline jsize JvGetArrayLength (jarray array) { return array->length; }\n "}, {"sha": "2ecaf03de9ed0e4d567e9aac2b579c20250bf760", "filename": "libjava/interpret.cc", "status": "modified", "additions": 30, "deletions": 41, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Finterpret.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Finterpret.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finterpret.cc?ref=eb4534a63677aa47ec9e5cc460617622b905d736", "patch": "@@ -109,22 +109,25 @@ static inline void dupx (_Jv_word *&sp, int n, int x)\n };\n \n \n-#define PUSHA(V)  \\\n- ({ jobject __v=(V); (sp++)->o = __v; })\n-#define PUSHI(V)  \\\n- ({ jint __v=(V); (sp++)->i = __v; })\n-#define PUSHF(V)  \\\n- ({ jfloat __v=(V); (sp++)->f = __v; })\n-#define PUSHL(V)  \\\n- ({ jlong __v=(V); _Jv_storeLong(sp,__v); sp+=2; })\n-#define PUSHD(V)  \\\n- ({ jdouble __v=(V); _Jv_storeDouble(sp,__v); sp+=2; })\n+#define PUSHA(V)  (sp++)->o = (V)\n+#define PUSHI(V)  (sp++)->i = (V)\n+#define PUSHF(V)  (sp++)->f = (V)\n+#define PUSHL(V)  ({ _Jv_word2 w2; w2.l=(V); \\\n+                     (sp++)->ia[0] = w2.ia[0]; \\\n+                     (sp++)->ia[0] = w2.ia[1]; })\n+#define PUSHD(V)  ({ _Jv_word2 w2; w2.d=(V); \\\n+                     (sp++)->ia[0] = w2.ia[0]; \\\n+                     (sp++)->ia[0] = w2.ia[1]; })\n \n #define POPA()    ((--sp)->o)\n #define POPI()    ((jint) (--sp)->i) // cast since it may be promoted\n #define POPF()    ((jfloat) (--sp)->f)\n-#define POPL()    ({ sp-=2; _Jv_loadLong (sp); })\n-#define POPD()    ({ sp-=2; _Jv_loadDouble (sp); })\n+#define POPL()    ({ _Jv_word2 w2; \\\n+                     w2.ia[1] = (--sp)->ia[0]; \\\n+                     w2.ia[0] = (--sp)->ia[0]; w2.l; })\n+#define POPD()    ({ _Jv_word2 w2; \\\n+                     w2.ia[1] = (--sp)->ia[0]; \\\n+                     w2.ia[0] = (--sp)->ia[0]; w2.d; })\n \n #define LOADA(I)  (sp++)->o = locals[I].o\n #define LOADI(I)  (sp++)->i = locals[I].i\n@@ -456,17 +459,6 @@ dump_time ()\n   \n void _Jv_InterpMethod::continue1 (_Jv_InterpMethodInvocation *inv)\n {\n-  /* for some reason, which I do not understand, the compiler on x86\n-   * allocates almost 4k stack space for this function!  Even though\n-   * there are many local variables, they are all nicely contained\n-   * within a block scope, except for the few declared right below\n-   * here.  What's going on??  It could well be, that there in fact is\n-   * on the order of 1000 local variables, including all those inlined\n-   * and expanded from macros...   Compiling with -O0, it allocates a\n-   * \"modest\" 300 bytes of stack space.   Among all those options of\n-   * gcc, why isn't there a -fpack-stack, allowing reuse of stack\n-   * locations?  */\n-  \n   _Jv_word      *sp     = inv->sp;\n   unsigned char *pc     = inv->pc;\n   _Jv_word      *locals = inv->local_base ();\n@@ -542,9 +534,6 @@ void _Jv_InterpMethod::continue1 (_Jv_InterpMethodInvocation *inv)\n #endif\n   opcode = *pc++;\n \n-  /* we special-case the single opcode aload_0 -- it makes \n-     up 10% of the time spent in the main loop. */\n-\n   switch (opcode)\n     {\n     case op_aload_0:\t\t// 0x2a\n@@ -1359,63 +1348,63 @@ void _Jv_InterpMethod::continue1 (_Jv_InterpMethodInvocation *inv)\n       goto next_insn;\n \n     case op_i2l:\n-      PUSHL ((jlong)POPI ());\n+      {jlong value = POPI(); PUSHL (value);}\n       goto next_insn;\n \n     case op_i2f:\n-      PUSHF ((jfloat)POPI ());\n+      {jfloat value = POPI(); PUSHF (value);}\n       goto next_insn;\n \n     case op_i2d:\n-      PUSHD ((jdouble)POPI ());\n+      {jdouble value = POPI(); PUSHD (value);}\n       goto next_insn;\n \n     case op_l2i:\n-      PUSHI ((jint)POPL ());\n+      {jint value = POPL(); PUSHI (value);}\n       goto next_insn;\n \n     case op_l2f:\n-      PUSHF ((jfloat)POPL ());\n+      {jfloat value = POPL(); PUSHF (value);}\n       goto next_insn;\n \n     case op_l2d:\n-      PUSHD ((jdouble)POPL ());\n+      {jdouble value = POPL(); PUSHD (value);}\n       goto next_insn;\n \n     case op_f2i:\n-      PUSHI ((jint)POPF ());\n+      { jint value = (jint)POPF (); PUSHI(value); }\n       goto next_insn;\n \n     case op_f2l:\n-      PUSHL ((jlong)POPF ());\n+      { jlong value = (jlong)POPF (); PUSHL(value); }\n       goto next_insn;\n \n     case op_f2d:\n-      PUSHD ((jdouble)POPF ());\n+      { jdouble value = POPF (); PUSHD(value); }\n       goto next_insn;\n \n     case op_d2i:\n-      PUSHI ((jint)POPD ());\n+      { jint value = (jint)POPD (); PUSHI(value); }\n       goto next_insn;\n \n     case op_d2l:\n-      PUSHL ((jlong)POPD ());\n+      { jlong value = (jlong)POPD (); PUSHL(value); }\n       goto next_insn;\n \n     case op_d2f:\n-      PUSHF ((jfloat)POPD ());\n+      { jfloat value = POPD (); PUSHF(value); }\n       goto next_insn;\n \n     case op_i2b:\n-      PUSHI ((jbyte)POPI ());\n+      { jbyte value = POPI (); PUSHI(value); }\n       goto next_insn;\n \n     case op_i2c:\n-      PUSHI ((jchar)POPI ());\n+      { jchar value = POPI (); PUSHI(value); }\n       goto next_insn;\n \n     case op_i2s:\n-      PUSHI ((jshort)POPI ());\n+      { jshort value = POPI (); PUSHI(value); }\n       goto next_insn;\n \n     case op_lcmp:"}, {"sha": "b038c3498266d686dd483f4ffa19b014becc2323", "filename": "libjava/java/lang/Class.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fjava%2Flang%2FClass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fjava%2Flang%2FClass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClass.h?ref=eb4534a63677aa47ec9e5cc460617622b905d736", "patch": "@@ -16,6 +16,7 @@ details.  */\n \n #include <java/lang/Object.h>\n #include <java/lang/String.h>\n+#include <java/net/URL.h>\n \n // We declare these here to avoid including cni.h.\n extern \"C\" void _Jv_InitClass (jclass klass);\n@@ -108,6 +109,7 @@ class java::lang::Class : public java::lang::Object\n \n   jstring getName (void);\n \n+  java::net::URL        *getResource (jstring resourceName);\n   java::io::InputStream *getResourceAsStream (jstring resourceName);\n   JArray<jobject> *getSigners (void);\n \n@@ -182,7 +184,7 @@ class java::lang::Class : public java::lang::Object\n   friend jclass _Jv_NewClass (_Jv_Utf8Const *name, jclass superclass,\n \t\t\t      java::lang::ClassLoader *loader);\n \n-  friend void _Jv_InternClassStrings (jclass);\n+  friend void _Jv_PrepareCompiledClass (jclass);\n \n #ifdef INTERPRETER\n   friend jboolean _Jv_IsInterpretedClass (jclass);"}, {"sha": "f9bd59b25981b6158453d49376ac40106409f2d3", "filename": "libjava/java/lang/Class.java", "status": "modified", "additions": 33, "deletions": 5, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fjava%2Flang%2FClass.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fjava%2Flang%2FClass.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClass.java?ref=eb4534a63677aa47ec9e5cc460617622b905d736", "patch": "@@ -80,13 +80,41 @@ public native Method getMethod (String methodName, Class[] parameterTypes)\n   public native int getModifiers ();\n   public native String getName ();\n \n-  // FIXME: can't implement this until we have java.net.\n-  // public URL getResource (String resourceName);\n+  public java.net.URL getResource (String resourceName)\n+  {\n+    String name = resourcePath (resourceName);\n+    ClassLoader loader = getClassLoader ();\n+    if (loader == null)\n+      return ClassLoader.getSystemResource (name);\n+    else\n+      return loader.getResource (name);\n+  }\n \n-  // FIXME: implement.\n-  public InputStream getResourceAsStream (String resourceName)\n+  public java.io.InputStream getResourceAsStream (String resourceName)\n   {\n-    return null;\n+    String name = resourcePath (resourceName);\n+    ClassLoader loader = getClassLoader ();\n+    if (loader == null)\n+      return ClassLoader.getSystemResourceAsStream (name);\n+    else\n+      return loader.getResourceAsStream (name);\n+  }\n+\n+  private String resourcePath (String resourceName)\n+  {\n+    if (resourceName.startsWith (\"/\"))\n+      return resourceName.substring (1);\n+\n+    Class c = this;\n+    while (c.isArray ())\n+      c = c.getComponentType ();\n+\n+    String packageName = c.getName ().replace ('.', '/');\n+    int end = packageName.lastIndexOf ('/');\n+    if (end == -1)\n+      return resourceName;\n+    else\n+      return packageName.substring (0, end+1) + resourceName;\n   }\n \n   // FIXME: implement.  Requires java.security."}, {"sha": "4d520bb6c199b4a93312150eb4affabb97dfd481", "filename": "libjava/java/lang/ClassLoader.java", "status": "modified", "additions": 87, "deletions": 81, "changes": 168, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fjava%2Flang%2FClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fjava%2Flang%2FClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClassLoader.java?ref=eb4534a63677aa47ec9e5cc460617622b905d736", "patch": "@@ -26,6 +26,13 @@\n public abstract class ClassLoader {\n \n   static private ClassLoader system;\n+  private ClassLoader parent;\n+\n+  public ClassLoader getParent ()\n+  {\n+    /* FIXME: security */\n+    return parent;\n+  }\n     \n   private static native ClassLoader getVMClassLoader0 ();\n \n@@ -36,17 +43,29 @@ static public ClassLoader getSystemClassLoader () {\n   }\n \n   /**\n-   * Creates a <code>ClassLoader</code>.   The only thing this\n+   * Creates a <code>ClassLoader</code> with no parent.\n+   * @exception java.lang.SecurityException if not allowed\n+   */\n+  protected ClassLoader() \n+  {\n+    this (null);\n+  }\n+\n+  /**\n+   * Creates a <code>ClassLoader</code> with the given parent.   \n+   * The parent may be <code>null</code>.\n+   * The only thing this \n    * constructor does, is to call\n    * <code>checkCreateClassLoader</code> on the current \n    * security manager. \n    * @exception java.lang.SecurityException if not allowed\n    */\n-  protected ClassLoader() \n+  protected ClassLoader(ClassLoader parent) \n   {\n     SecurityManager security = System.getSecurityManager ();\n     if (security != null)\n       security.checkCreateClassLoader ();\n+    this.parent = parent;\n   }\n \n   /** \n@@ -59,22 +78,68 @@ protected ClassLoader()\n   public Class loadClass(String name) \n     throws java.lang.ClassNotFoundException, java.lang.LinkageError\n   { \n-    return loadClass (name, true);\n+    return loadClass (name, false);\n   }\n \n   /** \n-   * Loads the class by the given name.  \n-   * As per java 1.1, this has been deprecated.  Use \n-   * <code>loadClass(String)</code>\n-   * instead.\n+   * Loads the class by the given name.  The default implementation\n+   * will search for the class in the following order (similar to jdk 1.2)\n+   * <ul>\n+   *  <li> First <code>findLoadedClass</code>.\n+   *  <li> If parent is non-null, <code>parent.loadClass</code>;\n+   *       otherwise <code>findSystemClass</code>.\n+   *  <li> <code>findClass</code>.\n+   * </ul>\n+   * If <code>link</code> is true, <code>resolveClass</code> is then\n+   * called.  <p> Normally, this need not be overridden; override\n+   * <code>findClass</code> instead.\n    * @param     name the name of the class.\n    * @param     link if the class should be linked.\n    * @return    the class loaded.\n    * @exception java.lang.ClassNotFoundException \n    * @deprecated \n    */ \n-  protected abstract Class loadClass(String name, boolean link)\n-    throws java.lang.ClassNotFoundException, java.lang.LinkageError;\n+  protected Class loadClass(String name, boolean link)\n+    throws java.lang.ClassNotFoundException, java.lang.LinkageError\n+  {\n+    Class c = findLoadedClass (name);\n+\n+    if (c == null)\n+      {\n+\ttry {\n+\t  if (parent != null)\n+\t    return parent.loadClass (name, link);\n+\t  else\n+\t    c = findSystemClass (name);\n+\t} catch (ClassNotFoundException ex) {\n+\t  /* ignore, we'll try findClass */;\n+\t}\n+      }\n+\n+    if (c == null)\n+      c = findClass (name);\n+\n+    if (c == null)\n+      throw new ClassNotFoundException (name);\n+\n+    if (link)\n+      resolveClass (c);\n+\n+    return c;\n+  }\n+\n+  /** Find a class.  This should be overridden by subclasses; the\n+   *  default implementation throws ClassNotFoundException.\n+   *\n+   * @param name Name of the class to find.\n+   * @return     The class found.\n+   * @exception  java.lang.ClassNotFoundException\n+   */\n+  protected Class findClass (String name)\n+    throws ClassNotFoundException\n+  {\n+    throw new ClassNotFoundException ();\n+  }\n \n   /** \n    * Defines a class, given the class-data.  According to the JVM, this\n@@ -251,7 +316,7 @@ static void resolveClass0(Class clazz)\n   }\n \n   /** Internal method.  Calls _Jv_PrepareClass and\n-   * _Jv_InternClassStrings.  This is only called from resolveClass.  */ \n+   * _Jv_PrepareCompiledClass.  This is only called from resolveClass.  */ \n   private static native void linkClass0(Class clazz)\n     throws java.lang.LinkageError;\n \n@@ -263,15 +328,19 @@ private static native void linkClass0(Class clazz)\n \n   /** \n    * Returns a class found in a system-specific way, typically\n-   * via the <code>java.class.path</code> system property.  \n+   * via the <code>java.class.path</code> system property.  Loads the \n+   * class if necessary.\n    *\n    * @param     name the class to resolve.\n    * @return    the class loaded.\n    * @exception java.lang.LinkageError \n    * @exception java.lang.ClassNotFoundException \n    */\n-  protected native Class findSystemClass(String name) \n-    throws java.lang.ClassNotFoundException, java.lang.LinkageError;\n+  protected Class findSystemClass(String name) \n+    throws java.lang.ClassNotFoundException, java.lang.LinkageError\n+  {\n+    return getSystemClassLoader ().loadClass (name);\n+  }\n \n   /*\n    * Does currently nothing.\n@@ -280,10 +349,11 @@ protected final void setSigners(Class claz, Object[] signers) {\n     /* claz.setSigners (signers); */\n   }\n \n-  /*\n+  /**\n    * If a class named <code>name</code> was previously loaded using\n    * this <code>ClassLoader</code>, then it is returned.  Otherwise\n-   * it returns <code>null</code>.\n+   * it returns <code>null</code>.  (Unlike the JDK this is native,\n+   * since we implement the class table internally.)\n    * @param     name  class to find.\n    * @return    the class loaded, or null.\n    */ \n@@ -297,10 +367,6 @@ public static final URL getSystemResource(String name) {\n     return system.getResource (name);\n   }\n \n-  public static final byte[] getSystemResourceAsBytes(String name) {\n-    return system.getResourceAsBytes (name);\n-  }\n-\n   /**\n    *   Return an InputStream representing the resource name.  \n    *   This is essentially like \n@@ -309,7 +375,6 @@ public static final byte[] getSystemResourceAsBytes(String name) {\n    * @param   name  resource to load\n    * @return  an InputStream, or null\n    * @see     java.lang.ClassLoader#getResource(String)\n-   * @see     java.lang.ClassLoader#getResourceAsBytes(String)\n    * @see     java.io.InputStream\n    */\n   public InputStream getResourceAsStream(String name) \n@@ -323,42 +388,9 @@ public InputStream getResourceAsStream(String name)\n      }\n   }\n  \n-  /**\n-   *  Return a byte array <code>byte[]</code> representing the\n-   *  resouce <code>name</code>.  This only works for resources\n-   *  that have a known <code>content-length</code>, and\n-   *  it will block while loading the resource.  Returns null\n-   *  for error conditions.<p>\n-   *  Since it is synchroneous, this is only convenient for \n-   *  resources that are \"readily\" available.  System resources\n-   *  can conveniently be loaded this way, and the runtime\n-   *  system uses this to load class files.  <p>\n-   *  To find the class data for a given class, use\n-   *  something like the following:\n-   *  <ul><code>\n-   *  String res = clazz.getName().replace ('.', '/')) + \".class\";<br>\n-   *  byte[] data = getResourceAsBytes (res);\n-   *  </code></ul>\n-   * @param   name  resource to load\n-   * @return  a byte array, or null\n-   * @see     java.lang.ClassLoader#getResource(String)\n-   * @see     java.lang.ClassLoader#getResourceAsStream(String)\n-   */\n-  public byte[] getResourceAsBytes(String name) {\n-    try {\n-      URL res = getResource (name);\n-      if (res == null) return null;\n-      URLConnection conn = res.openConnection ();\n-      int len = conn.getContentLength ();\n-      if (len == -1) return null;\n-      return readbytes (conn.getInputStream (), len);\n-    } catch (java.io.IOException x) {\n-       return null;\n-     }\n-  }\n- \n   /**\n    * Return an java.io.URL representing the resouce <code>name</code>.  \n+   * The default implementation just returns <code>null</code>.\n    * @param   name  resource to load\n    * @return  a URL, or null if there is no such resource.\n    * @see     java.lang.ClassLoader#getResourceAsBytes(String)\n@@ -369,31 +401,5 @@ public URL getResource(String name) {\n     return null;\n   }\n \n-  /**\n-   * Utility routine to read a resource fully, even if the given\n-   * InputStream only provides partial results.\n-   */\n-  private static byte[] readbytes (InputStream is, int length)\n-  {\n-    try {\n-\n-      byte[] data = new byte[length];\n-      int read; \n-      int off = 0;\n-\t    \n-      while (off != length)\n-\t{\n-\t  read = is.read (data, off, (int) (length-off));\n-\n-\t  if (read == -1) \n-\t    return null;\n-\n-\t  off += read;\n-\t}\n-\t    \n-      return data;\n-    } catch (java.io.IOException x) {\n-      return null;\n-    }\n-  }\n }\n+"}, {"sha": "026f6d8d1fb0cd309600fa9ab74665a3e10e14c0", "filename": "libjava/java/lang/VMClassLoader.java", "status": "removed", "additions": 0, "deletions": 117, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312f625598f2eed11718c43a649027bc760ef30a/libjava%2Fjava%2Flang%2FVMClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312f625598f2eed11718c43a649027bc760ef30a/libjava%2Fjava%2Flang%2FVMClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FVMClassLoader.java?ref=312f625598f2eed11718c43a649027bc760ef30a", "patch": "@@ -1,117 +0,0 @@\n-/* Copyright (C) 1999  Cygnus Solutions\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n-\n-/* Author: Kresten Krab Thorup <krab@gnu.org>  */\n-\n-package java.lang;\n-\n-import java.io.*;\n-import java.net.URL;\n-import gnu.gcj.util.path.SearchPath;\n-\n-final class VMClassLoader extends java.lang.ClassLoader\n-{\n-  private SearchPath   path;\n-  private final String path_seperator;\n-  private final String file_seperator;\n-  private final char   file_seperator_char;\n-    \n-  private VMClassLoader () {\t\n-    path_seperator = System.getProperty (\"path.separator\", \":\");\n-    file_seperator = System.getProperty (\"file.separator\", \"/\");\n-\n-    file_seperator_char = file_seperator.charAt (0);\n-\n-    String class_path = System.getProperty (\"java.class.path\", \".\");\n-    path = new SearchPath (class_path);\n-  }\n-\n-  protected Class loadClass(String name,\n-\t\t\t    boolean resolve) \n-    throws java.lang.ClassNotFoundException, java.lang.LinkageError\n-  {\n-    return loadClassInternal (name, resolve, false);\n-  }\n-\t\n-    /** I'm a little in doubt here, if this method is \n-\tactually supposed to throw a LinkageError, or not.  \n-\tThe spec, 20.14.3, is a little unclear.  It says:\n-\n-\t`` The general contract of loadClass is that, given the name\n-\tof a class, it either returns the Class object for the class\n-\tor throws a ClassNotFoundException.''\n-\n-\tHowever, by making LinkageError a checked exception, \n-\ti.e., mention it directly in the throws clause,\n-\twe'll force caller to consider that case as well.\n-    **/\n-\n-  protected Class loadClassInternal(String name,\n-\t\t\t\t    boolean resolve, \n-\t\t\t\t    boolean fromBootLoader) \n-    throws java.lang.ClassNotFoundException, java.lang.LinkageError\n-  {\n-    Class clazz;\n-\n-    /** TODO: call _Jv_VerifyClassName **/\n-    if (   (name.indexOf ('/') != -1)\n-\t   || (name.charAt (0) == '.')\n-\t   || (name.indexOf (file_seperator) != -1)\n-\t   || (name.indexOf (\"..\") != -1))\n-\t{\n-\t    throw new IllegalArgumentException (name);\n-\t}\n-\n-    // already loaded?\n-    clazz = findLoadedClass (name);\n-\n-    // we need access to the boot class loader here\n-    if (clazz == null && !fromBootLoader)\n-      clazz = findBootClass (name);\n-\n-    if (clazz == null)\n-      {\n-\tStringBuffer res = new StringBuffer ();\n-\n-\t// here we do actually replace .'s with /'s because\n-\t// we're going to find something in the file system.\n-\tres.append (name.replace ('.', file_seperator_char));\n-\tres.append (\".class\");\n-\t\t\n-\tbyte[] data = getResourceAsBytes (res.toString ());\n-\n-\tif (data == null)\n-\t  throw new ClassNotFoundException (name);\n-\n-\tclazz = defineClass (name, data, 0, data.length);\n-\t    \n-      }\n-\n-    if (resolve && clazz != null)\n-      resolveClass (clazz);\n-\n-    return clazz;\n-  }\n-\n-  private native Class findBootClass (String name);\n-\n-  public InputStream getResourceAsStream(String name) \n-  {\n-    return path.getStream (name);\n-  }\n-\n-  public URL getResource(String name) \n-  {\n-    return path.getURL (name);\n-  }\n-\n-  public byte[] getResourceAsBytes(String name) \n-  {\n-    return path.getBytes (name);\n-  }\n-}"}, {"sha": "ff5e9c65da58e5b9d53e0f09c6add2316dd295f4", "filename": "libjava/java/lang/natClass.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fjava%2Flang%2FnatClass.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fjava%2Flang%2FnatClass.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatClass.cc?ref=eb4534a63677aa47ec9e5cc460617622b905d736", "patch": "@@ -92,8 +92,6 @@ java::lang::Class::forName (jstring className)\n   if (! klass)\n     JvThrow (new java::lang::ClassNotFoundException (className));\n \n-  _Jv_InitClass (klass);\n-\n   return klass;\n }\n \n@@ -354,6 +352,8 @@ java::lang::Class::newInstance (void)\n       || java::lang::reflect::Modifier::isAbstract(accflags))\n     JvThrow (new java::lang::InstantiationException);\n \n+  _Jv_InitClass (this);\n+\n   _Jv_Method *meth = _Jv_GetMethodLocal (this, init_name, void_signature);\n   if (! meth)\n     JvThrow (new java::lang::NoSuchMethodException);\n@@ -408,7 +408,7 @@ java::lang::Class::initializeClass (void)\n         {\n           // Step 1.\n \t  _Jv_MonitorEnter (this);\n-\t  _Jv_InternClassStrings (this);\n+\t  _Jv_PrepareCompiledClass (this);\n \t}\n     }\n   else"}, {"sha": "c35417c87dbcc3d0ccd03f7448cec873423e4008", "filename": "libjava/java/lang/natClassLoader.cc", "status": "modified", "additions": 63, "deletions": 27, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fjava%2Flang%2FnatClassLoader.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fjava%2Flang%2FnatClassLoader.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatClassLoader.cc?ref=eb4534a63677aa47ec9e5cc460617622b905d736", "patch": "@@ -20,8 +20,9 @@ details.  */\n #include <java/lang/Character.h>\n #include <java/lang/Thread.h>\n #include <java/lang/ClassLoader.h>\n-#include <java/lang/VMClassLoader.h>\n+#include <gnu/gcj/runtime/VMClassLoader.h>\n #include <java/lang/InternalError.h>\n+#include <java/lang/IllegalAccessError.h>\n #include <java/lang/LinkageError.h>\n #include <java/lang/ClassFormatError.h>\n #include <java/lang/NoClassDefFoundError.h>\n@@ -46,15 +47,15 @@ extern java::lang::Class ClassLoaderClass;\n /////////// java.lang.ClassLoader native methods ////////////\n \n #ifdef INTERPRETER\n-java::lang::VMClassLoader *redirect = 0;\n+gnu::gcj::runtime::VMClassLoader *redirect = 0;\n #endif\n \n java::lang::ClassLoader*\n java::lang::ClassLoader::getVMClassLoader0 ()\n {\n #ifdef INTERPRETER\n     if (redirect == 0)\n-\tredirect = new java::lang::VMClassLoader;\n+\tredirect = new gnu::gcj::runtime::VMClassLoader;\n     return redirect;\n #else\n     return 0;\n@@ -144,7 +145,7 @@ _Jv_WaitForState (jclass klass, int state)\n   if (state == JV_STATE_LINKED)\n     {\n       _Jv_MonitorExit (klass);\n-      _Jv_InternClassStrings (klass);\n+      _Jv_PrepareCompiledClass (klass);\n       return;\n     }\n \t\n@@ -179,7 +180,7 @@ java::lang::ClassLoader::linkClass0 (java::lang::Class *klass)\n     }\n #endif\n \n-  _Jv_InternClassStrings (klass);\n+  _Jv_PrepareCompiledClass (klass);\n }\n \n void\n@@ -193,7 +194,7 @@ java::lang::ClassLoader::markClassErrorState0 (java::lang::Class *klass)\n /** this is the only native method in VMClassLoader, so \n     we define it here. */\n jclass\n-java::lang::VMClassLoader::findBootClass (jstring name)\n+gnu::gcj::runtime::VMClassLoader::findSystemClass (jstring name)\n {\n   return _Jv_FindClassInCache (_Jv_makeUtf8Const (name), 0);\n }\n@@ -204,22 +205,27 @@ java::lang::ClassLoader::findLoadedClass (jstring name)\n   return _Jv_FindClassInCache (_Jv_makeUtf8Const (name), this);\n }\n \n-jclass\n-java::lang::ClassLoader::findSystemClass (jstring name)\n-{\n-  return _Jv_FindClass (_Jv_makeUtf8Const (name), 0);\n-}\n-\n-\n-/* This is the final step of linking, internalizing the constant strings\n- * of a class.  This is called for both compiled and interpreted\n- * classes, and it is *only* called from ClassLoader::linkClass0,\n- * which is always in a context where the current thread has a lock on\n- * the class in question.  We define it here, and not in resolve.cc, so that\n- * the entire resolve.cc can be #ifdef'ed away when not using the\n- * interpreter.   */\n+static const int PUBLIC       = 0x001;\n+static const int PRIVATE      = 0x002;\n+static const int PROTECTED    = 0x004;\n+static const int STATIC       = 0x008;\n+static const int FINAL        = 0x010;\n+static const int SYNCHRONIZED = 0x020;\n+static const int VOLATILE     = 0x040;\n+static const int TRANSIENT    = 0x080;\n+static const int NATIVE       = 0x100;\n+static const int INTERFACE    = 0x200;\n+static const int ABSTRACT     = 0x400;\n+static const int ALL_FLAGS    = 0x7FF; \n+\n+\n+/** This function does class-preparation for compiled classes.  \n+    NOTE: This function replicates functionality from\n+    _Jv_ResolvePoolEntry, and this is intentional, since that function\n+    is \n+ */\n void\n-_Jv_InternClassStrings(jclass klass)\n+_Jv_PrepareCompiledClass(jclass klass)\n {\n   if (klass->state >= JV_STATE_LINKED)\n     return;\n@@ -228,14 +234,44 @@ _Jv_InternClassStrings(jclass klass)\n   klass->state = JV_STATE_LINKED;\n \n   _Jv_Constants *pool = &klass->constants;\n-  for (int i = 1; i < pool->size; ++i)\n+  for (int index = 1; index < pool->size; ++index)\n     {\n-      if (pool->tags[i] == JV_CONSTANT_String)\n+      if (pool->tags[index] == JV_CONSTANT_Class)\n+\t{\n+\t  _Jv_Utf8Const *name = pool->data[index].utf8;\n+\t  \n+\t  jclass found;\n+\t  if (name->data[0] == '[')\n+\t    found = _Jv_FindClassFromSignature (&name->data[0],\n+\t\t\t\t\t\tklass->loader);\n+\t  else\n+\t    found = _Jv_FindClass (name, klass->loader);\n+\t\t\n+\t  if (! found)\n+\t    {\n+\t      jstring str = _Jv_NewStringUTF (name->data);\n+\t      JvThrow (new java::lang::ClassNotFoundException (str));\n+\t    }\n+\n+\t  if ((found->accflags & PUBLIC) == PUBLIC\n+\t      || (_Jv_ClassNameSamePackage (found->name,\n+\t\t\t\t\t    klass->name)))\n+\t    {\n+\t      pool->data[index].clazz = found;\n+\t      pool->tags[index] |= JV_CONSTANT_ResolvedFlag;\n+\t    }\n+\t  else\n+\t    {\n+\t      JvThrow (new java::lang::IllegalAccessError (found->getName()));\n+\t    }\n+\t}\n+\t    \n+      else if (pool->tags[index] == JV_CONSTANT_String)\n \t{\n \t  jstring str;\n-\t  str = _Jv_NewStringUtf8Const (pool->data[i].utf8);\n-\t  pool->data[i].string = str;\n-\t  pool->tags[i] |= JV_CONSTANT_ResolvedFlag;\n+\t  str = _Jv_NewStringUtf8Const (pool->data[index].utf8);\n+\t  pool->data[index].o = str;\n+\t  pool->tags[index] |= JV_CONSTANT_ResolvedFlag;\n \t}\n     }\n \n@@ -443,7 +479,7 @@ jclass _Jv_FindClass (_Jv_Utf8Const *name,\n \t    }\n \n \t  // Load using the bootstrap loader jmspec 5.3.1\n-\t  klass = redirect -> loadClassInternal (sname, false, true); \n+\t  klass = redirect -> loadClass (sname, false); \n \n \t  // register that we're an initiating loader\n \t  if (klass)"}, {"sha": "8eb4b7d996c0e4850671612ed2a2e313537e99fe", "filename": "libjava/java/net/JarURLConnection.java", "status": "added", "additions": 301, "deletions": 0, "changes": 301, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fjava%2Fnet%2FJarURLConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fjava%2Fnet%2FJarURLConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FJarURLConnection.java?ref=eb4534a63677aa47ec9e5cc460617622b905d736", "patch": "@@ -0,0 +1,301 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package java.net;\n+\n+import java.net.*;\n+import java.io.*;\n+import java.util.jar.*;\n+import java.util.zip.*;\n+import java.util.Vector;\n+import java.util.Hashtable;\n+\n+/**\n+ * @author Kresten Krab Thorup <krab@gnu.org>\n+ * @date Aug 10, 1999.\n+ */\n+\n+\n+public abstract class JarURLConnection extends URLConnection\n+{\n+  // three different ways to say the same thing\n+  private final URL jarFileURL;\n+\n+  /** The connection to the jar file itself. A JarURLConnection\n+   *  can represent an entry in a jar file or an entire jar file.  In\n+   *  either case this describes just the jar file itself. */\n+  protected URLConnection jarFileURLConnection;\n+\n+  // If this is a connection to a jar file element this is set, otherwose null.\n+  private final String element;\n+\n+  // Cached JarURLConnection's \n+  static Hashtable conn_cache = new Hashtable();\n+\n+  public URL getJarFileURL ()\n+  {\n+    return jarFileURL;\n+  }\n+\n+  public String getEntryName ()\n+  {\n+    return element;\n+  }\n+\n+  public JarURLConnection(URL url)\n+    throws MalformedURLException\n+  {\n+    super(url);\n+\n+    String spec = url.getFile();\n+    int bang = spec.indexOf (\"!/\", 0);\n+    if (bang == -1)\n+      throw new MalformedURLException (url + \": No `!/' in spec.\");\n+\n+    // Extact the url for the jar itself.\n+    jarFileURL = new URL(spec.substring (0, bang));\n+\n+    // Get the name of the element, if any.\n+    element = (bang+2==spec.length() ? null : spec.substring (bang+2));\n+  }\n+\n+  public synchronized void connect() throws IOException\n+  {\n+    // Call is ignored if already connected.\n+    if (connected)\n+      return;\n+\n+    if (getUseCaches())\n+      {\n+\tjarFileURLConnection = (URLConnection) conn_cache.get (jarFileURL);\n+\n+\tif (jarFileURLConnection == null)\n+\t  {\n+\t    jarFileURLConnection = jarFileURL.openConnection ();\n+\t    jarFileURLConnection.setUseCaches (true);\n+\t    jarFileURLConnection.connect ();\n+\t    conn_cache.put (jarFileURL, jarFileURLConnection);\n+\t  }\n+      }\n+    else\n+      {\n+\tjarFileURLConnection = jarFileURL.openConnection ();\n+\tjarFileURLConnection.connect ();\n+      }\n+\n+    connected = true;\n+  }\n+\n+  public InputStream getInputStream() throws IOException\n+  {\n+    if (!connected)\n+      connect();\n+\n+    if (! doInput)\n+      throw new ProtocolException(\"Can't open InputStream if doInput is false\");\n+\n+    if (element == null)\n+      {\n+\t// This is a JarURLConnection for the entire jar file.  \n+\n+\tInputStream jar_is = new BufferedInputStream(jarFileURLConnection.getInputStream ());\n+\treturn new JarInputStream(jar_is);\n+      }\n+\n+    // Reaching this point, we're looking for an element of a jar file.\n+\n+    JarFile jarfile = null;\n+\n+    try\n+      {\n+\tjarfile = getJarFile ();\n+      }\n+    catch (java.io.IOException x)\n+      {\n+\t/* ignore */\n+      }\n+    \n+    if (jarfile != null)\n+      {\n+\t// this is the easy way...\n+\treturn jarfile.getInputStream (jarfile.getEntry (element));\n+      }\n+    else\n+      {\n+\t// If the jar file is not local, ...\n+\tJarInputStream zis = new JarInputStream(jarFileURLConnection.getInputStream ());\n+\n+\t// This is hideous, we're doing a linear search...\n+\tfor (ZipEntry ent = zis.getNextEntry (); \n+\t     ent != null; \n+\t     ent = zis.getNextEntry ())\n+\t  {\n+\t    if (element.equals (ent.getName ()))\n+\t      {\n+\t\tint size = (int)ent.getSize();\n+\t\tbyte[] data = new byte[size];\n+\t\tzis.read (data, 0, size);\n+\t\treturn new ByteArrayInputStream (data);\n+\t      }\n+\t  }\n+      }\n+\n+    return null;\n+  }\n+\n+  public JarEntry getJarEntry (String name)\n+    throws java.io.IOException\n+  {\n+    JarFile jarfile = null;\n+\n+    if (! doInput)\n+      throw new ProtocolException(\"Can't open JarEntry if doInput is false\");\n+\n+    try\n+      {\n+\tjarfile = getJarFile ();\n+      }\n+    catch (java.io.IOException x)\n+      {\n+\t/* ignore */\n+      }\n+    \n+    if (jarfile == null)\n+      {\n+\tJarInputStream zis = new JarInputStream(jarFileURLConnection.getInputStream ());\n+\n+\t// This is hideous, we're doing a linear search for the thing...\n+\tfor (ZipEntry ent = zis.getNextEntry (); \n+\t     ent != null; \n+\t     ent = zis.getNextEntry ())\n+\t  {\n+\t    if (element.equals (ent.getName ()))\n+\t      {\n+\t\treturn new JarEntry (ent);\n+\t      }\n+\t  }\n+      }\n+\n+    else\n+      {\n+\treturn jarfile.getJarEntry (element);\n+      }\n+\n+    return null;\n+  }\n+\n+  public abstract JarFile getJarFile() throws java.io.IOException;\n+\n+\n+  // Steal and borrow from protocol/file/Connection.java\n+\n+  private Hashtable hdrHash = new Hashtable();\n+  private Vector hdrVec = new Vector();\n+  private boolean gotHeaders = false;\n+\n+  // Override default method in URLConnection.\n+  public String getHeaderField(String name)\n+  {\n+    try\n+      {\n+\tgetHeaders();\n+      }\n+    catch (IOException x)\n+      {\n+\treturn null;\n+      }\n+    return (String) hdrHash.get(name.toLowerCase());\n+  }\n+\n+  // Override default method in URLConnection.\n+  public String getHeaderField(int n)\n+  {\n+    try\n+      {\n+\tgetHeaders();\n+      }\n+    catch (IOException x)\n+      {\n+\treturn null;\n+      }\n+    if (n < hdrVec.size())\n+      return getField((String) hdrVec.elementAt(n));\n+\n+    return null;\n+  }\n+\n+  // Override default method in URLConnection.\n+  public String getHeaderFieldKey(int n)\n+  {\n+    try\n+      {\n+\tgetHeaders();\n+      }\n+    catch (IOException x)\n+      {\n+\treturn null;\n+      }\n+    if (n < hdrVec.size())\n+      return getKey((String) hdrVec.elementAt(n));\n+\n+    return null;\n+  }\n+\n+  private String getKey(String str)\n+  {\n+    if (str == null)\n+      return null;\n+    int index = str.indexOf(':');\n+    if (index >= 0)\n+      return str.substring(0, index);\n+    else\n+      return null;\n+  }\n+\n+  private String getField(String str)\n+  {\n+    if (str == null)\n+      return null;\n+    int index = str.indexOf(':');\n+    if (index >= 0)\n+      return str.substring(index + 1).trim();\n+    else\n+      return str;\n+  }\n+\n+  private void getHeaders() throws IOException\n+  {\n+    if (gotHeaders)\n+      return;\n+    gotHeaders = true;\n+\n+    connect();\n+\n+    // Yes, it is overkill to use the hash table and vector here since\n+    // we're only putting one header in the file, but in case we need\n+    // to add others later and for consistency, we'll implement it this way.\n+\n+    // Add the only header we know about right now:  Content-length.\n+    long len;\n+\n+    if (element == null)\n+      len = jarFileURLConnection.getContentLength ();\n+    else\n+      len = getJarEntry (element).getSize ();\n+\n+    String line = \"Content-length: \" + len;\n+    hdrVec.addElement(line);\n+\n+    // The key will never be null in this scenario since we build up the\n+    // headers ourselves.  If we ever rely on getting a header from somewhere\n+    // else, then we may have to check if the result of getKey() is null.\n+    String key = getKey(line);\n+    hdrHash.put(key.toLowerCase(), Long.toString(len));\n+  }\n+\n+}"}, {"sha": "df34306a89ea09ab1b708a8a7c77b7f956199c36", "filename": "libjava/java/net/URLClassLoader.java", "status": "added", "additions": 221, "deletions": 0, "changes": 221, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fjava%2Fnet%2FURLClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fjava%2Fnet%2FURLClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FURLClassLoader.java?ref=eb4534a63677aa47ec9e5cc460617622b905d736", "patch": "@@ -0,0 +1,221 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package java.net;\n+\n+import java.io.*;\n+import java.util.jar.*;\n+import java.util.Vector;\n+\n+public class URLClassLoader extends ClassLoader \n+{\n+  // The URLStreamHandlerFactory\n+  URLStreamHandlerFactory factory = null;\n+\n+  // `path' contains simply the URL's we're using for the searching.\n+  private Vector path; \n+\n+  // If path[n] is a zip/jar, then this holds a JarURLConnection for that thing,\n+  // otherwise, path[n] is null.\n+  private Vector info; \n+\n+  private URLStreamHandler getHandler0 (String protocol)\n+  {\n+    if (factory != null)\n+      return factory.createURLStreamHandler(protocol);\n+    else\n+      return null;\n+  }\n+\n+  public URLClassLoader (URL[] urls)\n+  { \n+    this (urls, null, null);\n+  }\n+  \n+  public URLClassLoader (URL[] urls, ClassLoader parent)\n+  { \n+    this (urls, parent, null);\n+  }\n+\n+  public URLClassLoader (URL[] urls, ClassLoader parent,\n+\t\t\t URLStreamHandlerFactory fac)\n+  { \n+    super (parent);\n+\n+    factory = fac;\n+\n+    if (urls == null || urls.length == 0)\n+      {\n+\tpath = new Vector (1);\n+\tinfo = new Vector (1);\n+\treturn;\n+      }\n+\n+    path = new Vector (urls.length);\n+    info = new Vector (urls.length);\n+\n+    for (int i = 0; i < urls.length; i++)\n+      {\n+\tURL u = urls[i];\n+\n+\t// If it is a jar url, then we'll search it as is.  \n+\tif (! u.getProtocol ().equals (\"jar\"))\n+\t  {\n+\t    String f = u.getFile ();\n+\n+\t    // If it ends with '/' we'll take it for a directory,\n+\t    // otherwise it's a jar file.  This is how JDK 1.2 defines\n+\t    // it, so we will not try to be smart here.\n+\t    if (f.charAt (f.length ()-1) != '/')\n+\t      {\n+\t\ttry\n+\t\t  {\n+\t\t    u = new URL (\"jar\", \"\", -1, (u.toExternalForm ())+\"!/\", \n+\t\t\t\t getHandler0 (\"jar\"));\n+\t\t  } \n+\t\tcatch (MalformedURLException x)\n+\t\t  {\n+\t\t    /* ignore */\n+\t\t  }\n+\t      }\n+\t  }\n+\n+\tpath.insertElementAt (u, i);\n+\n+\tif (u.getProtocol ().equals (\"jar\"))\n+\t  {\n+\t    JarURLConnection conn = null;\n+\t    try\n+\t      {\n+\t\tconn = (JarURLConnection) u.openConnection ();\n+\t      }\n+\t    catch (java.io.IOException x)\n+\t      {\n+\t\t/* ignore */\n+\t      }\n+\t    info.insertElementAt (conn, i);\n+\t  }\n+\telse\n+\t  {\n+\t    info.insertElementAt (null, i);\n+\t  }\n+      }\n+  }\n+  \n+  public URL getResource (String name)\n+  {\n+    for (int i = 0; i < path.size(); i++)\n+      {\n+\tURL u    = (URL)path.elementAt (i);\n+\t\n+\ttry {\n+\t  JarURLConnection conn = (JarURLConnection) info.elementAt (i);\n+\t  \n+\t  if (conn != null)\n+\t    {\n+\t      if (conn.getJarEntry (name) != null)\n+\t\treturn new URL(u, name, getHandler0 (u.getProtocol()));\n+\t    }\n+\t  else\n+\t    {\n+\t      URL p = new URL (u, name, getHandler0 (u.getProtocol()));\n+\n+\t      InputStream is = p.openStream();\n+\t      if (is != null)\n+\t\t{\n+\t\t  is.close();\n+\t\t  return p;\n+\t\t}\n+\t    }\n+\t\n+\t  // if we get an exception ... try the next path element\n+\t} catch (IOException x) {\n+\t  continue;\n+\t}\n+      }\n+\n+    return null;\n+  }\n+\n+  /** IN jdk 1.2 this method is not overridden, but we gain performance\n+      by doing so.\n+   */\n+\n+  public InputStream getResourceAsStream (String name)\n+  {\n+    for (int i = 0; i < path.size(); i++)\n+      {\n+\tURL u    = (URL)path.elementAt (i);\n+\t\n+\ttry {\n+\t  JarURLConnection conn = (JarURLConnection) info.elementAt (i);\n+\t  \n+\t  if (conn != null)\n+\t    {\n+\t      JarFile file = conn.getJarFile ();\n+\t      JarEntry ent = file.getJarEntry (name);\n+\t      if (ent != null)\n+\t\treturn file.getInputStream(ent);\n+\t    }\n+\t  else\n+\t    {\n+\t      InputStream is = new URL(u, name, getHandler0 (u.getProtocol())).openStream();\n+\t      if (is != null)\n+\t\treturn is;\n+\t    }\n+\t\n+\t  // if we get an exception ... try the next path element\n+\t} catch (IOException x) {\n+\t  continue;\n+\t}\n+      }\n+\n+    return null;\n+  }\n+\n+  // and finally, we can implement our class loader functionality.\n+  protected Class findClass (String name)\n+    throws ClassNotFoundException\n+  {\n+    if (name == null)\n+      throw new ClassNotFoundException (\"null\");\n+\n+    try \n+      {\n+\tInputStream is = getResourceAsStream (name.replace ('.', '/') + \".class\");\n+\t\n+\tif (is == null)\n+\t  throw new ClassNotFoundException (name);\n+\t\n+\t// Here we have to rely on available() to provide the length of\n+\t// the class; which might not be exactly right in some cases...\n+\t\n+\tint len = is.available ();\n+\tbyte[] data = new byte[len];\n+\n+\tint left = len;\n+\tint off  = 0;\n+\twhile (left > 0)\n+\t  {\n+\t    int c = is.read (data, off, len-off);\n+\t    if (c == -1 || c == 0)\n+\t      throw new InternalError (\"premature end of file\");\n+\t    left -= c;\n+\t    off += c;\n+\t  }\n+\n+\treturn defineClass (name, data, 0, len);\n+      } \n+    catch (java.io.IOException x)\n+      {\n+\tthrow new ClassNotFoundException(name);\n+      }\n+  }\n+\n+}\n+"}, {"sha": "b19503519dabedbb1737f86c8ab9fb742fd9ed92", "filename": "libjava/java/security/SecureClassLoader.java", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fjava%2Fsecurity%2FSecureClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fjava%2Fsecurity%2FSecureClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FSecureClassLoader.java?ref=eb4534a63677aa47ec9e5cc460617622b905d736", "patch": "@@ -0,0 +1,23 @@\n+/* Copyright (C) 1998, 1999  Cygnus Solutions\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package java.security;\n+\n+public class SecureClassLoader extends ClassLoader \n+{\n+    public SecureClassLoader ()\n+    { \n+      this (null);\n+    }\n+\n+    public SecureClassLoader (ClassLoader parent)\n+    { \n+      super (parent);\n+    }\n+}\n+"}, {"sha": "0fe202bcac5061564141be6cc77d49dc40f190c5", "filename": "libjava/java/util/jar/JarEntry.java", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fjava%2Futil%2Fjar%2FJarEntry.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fjava%2Futil%2Fjar%2FJarEntry.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fjar%2FJarEntry.java?ref=eb4534a63677aa47ec9e5cc460617622b905d736", "patch": "@@ -0,0 +1,39 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package java.util.jar;\n+\n+import java.util.zip.*;\n+\n+/**\n+ * Does not implement the security and manifest methods.\n+ *\n+ * @author Kresten Krab Thorup <krab@gnu.org>\n+ * @date August 10, 1999.\n+ */\n+\n+public class JarEntry extends ZipEntry\n+{\n+  ZipEntry zip;\n+\n+  public JarEntry (ZipEntry ent)\n+  {\n+    super (ent);\n+  }\n+\n+  public JarEntry (JarEntry ent)\n+  {\n+    super (ent);\n+  }\n+\n+  public JarEntry (String name)\n+  {\n+    super (name);\n+  }\n+\n+}"}, {"sha": "efab3c2d8138efd1764c7c790ed61250cd1227bc", "filename": "libjava/java/util/jar/JarFile.java", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fjava%2Futil%2Fjar%2FJarFile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fjava%2Futil%2Fjar%2FJarFile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fjar%2FJarFile.java?ref=eb4534a63677aa47ec9e5cc460617622b905d736", "patch": "@@ -0,0 +1,56 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package java.util.jar;\n+\n+import java.util.zip.*;\n+import java.io.File;\n+\n+/**\n+ * Does not implement any of the security.  Just a place holder, so\n+ * that I can implement URLClassLoader.\n+ *\n+ * @author Kresten Krab Thorup <krab@gnu.org>\n+ * @date August 10, 1999.\n+ */\n+\n+public class JarFile extends ZipFile\n+{\n+  private boolean verify;\n+\n+  public JarFile (String file) throws java.io.IOException\n+  {\n+    super (file);\n+  }\n+    \n+  public JarFile (File file) throws java.io.IOException\n+  {\n+    super (file);\n+  }\n+\n+  public JarFile (String file, boolean verify) throws java.io.IOException\n+  {\n+    super (file);\n+    this.verify = verify;\n+  }\n+    \n+  public JarFile (File file, boolean verify) throws java.io.IOException\n+  {\n+    super (file);\n+    this.verify = verify;\n+  }\n+\n+  public JarEntry getJarEntry (String name)\n+  {\n+    ZipEntry ent = getEntry(name);\n+    if (ent == null)\n+      return null;\n+    else\n+      return new JarEntry(ent);\n+  }\n+}"}, {"sha": "476e75fbe92fae699a92bfbddaac8207aa461e85", "filename": "libjava/java/util/jar/JarInputStream.java", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fjava%2Futil%2Fjar%2FJarInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fjava%2Futil%2Fjar%2FJarInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fjar%2FJarInputStream.java?ref=eb4534a63677aa47ec9e5cc460617622b905d736", "patch": "@@ -0,0 +1,32 @@\n+/* Copyright (C) 1999  Cygnus Solutions\n+\n+   This file is part of libgcj.\n+\n+This software is copyrighted work licensed under the terms of the\n+Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n+details.  */\n+\n+package java.util.jar;\n+\n+import java.util.zip.*;\n+\n+/**\n+ * Does not implement any of the security.  Just a place holder, so\n+ * that I can implement URLClassLoader.\n+ *\n+ * @author Kresten Krab Thorup <krab@gnu.org>\n+ * @date August 10, 1999.\n+ */\n+\n+public class JarInputStream extends ZipInputStream\n+{\n+   public JarEntry getNextJarEntry () throws java.io.IOException\n+    {\n+       return new JarEntry (getNextEntry ());\n+    }\n+\n+  public JarInputStream (java.io.InputStream is)\n+  {\n+    super(is);\n+  }\n+}"}, {"sha": "915c4b2bf316d075a6e9a4d26b198f2c37e5143d", "filename": "libjava/java/util/zip/ZipEntry.java", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fjava%2Futil%2Fzip%2FZipEntry.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fjava%2Futil%2Fzip%2FZipEntry.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FZipEntry.java?ref=eb4534a63677aa47ec9e5cc460617622b905d736", "patch": "@@ -46,6 +46,18 @@ public ZipEntry (String name)\n     this.name = name;\n   }\n \n+  public ZipEntry (ZipEntry ent)\n+  {\n+    comment = ent.comment;\n+    compressedSize = ent.compressedSize;\n+    crc = ent.crc;\n+    extra = ent.extra;\n+    method = ent.method;\n+    size = ent.size;\n+    time = ent.time;\n+    relativeOffset = ent.relativeOffset;\n+  }\n+\n   public String getComment () { return comment; }\n \n   public long getCompressedSize () { return compressedSize; }"}, {"sha": "1b0ebcee8baeeea3daff25c682c0b7b23b7ab42b", "filename": "libjava/java/util/zip/ZipFile.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fjava%2Futil%2Fzip%2FZipFile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fjava%2Futil%2Fzip%2FZipFile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FZipFile.java?ref=eb4534a63677aa47ec9e5cc460617622b905d736", "patch": "@@ -22,12 +22,14 @@ public ZipFile (String fname) throws IOException\n   {\n     file = new RandomAccessFile(fname, \"r\");\n     name = fname;\n+    readDirectory ();\n   }\n \n   public ZipFile (File f) throws IOException\n   {\n     file = new RandomAccessFile(f, \"r\");\n     name = f.getName();\n+    readDirectory ();\n   }\n \n   void readDirectory () throws IOException"}, {"sha": "3b0863c2d773e7ce6626e9fb75dfca2d4598649b", "filename": "libjava/prims.cc", "status": "modified", "additions": 31, "deletions": 14, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fprims.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fprims.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fprims.cc?ref=eb4534a63677aa47ec9e5cc460617622b905d736", "patch": "@@ -611,21 +611,38 @@ JvRunMain (jclass klass, int argc, const char **argv)\n   LTDL_SET_PRELOADED_SYMBOLS ();\n #endif\n \n-  if (klass == NULL)\n-    {\n-      arg_vec = JvConvertArgv (argc - 2, argv + 2);\n-      main_group = new java::lang::ThreadGroup (23);\n-      main_thread = new java::lang::FirstThread (main_group,\n-\t\t\t\t\t\t JvNewStringLatin1 (argv[1]),\n-\t\t\t\t\t\t arg_vec);\n-    }\n-  else\n-    {\n-      arg_vec = JvConvertArgv (argc - 1, argv + 1);\n-      main_group = new java::lang::ThreadGroup (23);\n-      main_thread = new java::lang::FirstThread (main_group, klass, arg_vec);\n-    }\n+  arg_vec = JvConvertArgv (argc - 1, argv + 1);\n+  main_group = new java::lang::ThreadGroup (23);\n+  main_thread = new java::lang::FirstThread (main_group, klass, arg_vec);\n+\n+  main_thread->start();\n+  _Jv_ThreadWait ();\n+\n+  java::lang::Runtime::getRuntime ()->exit (0);\n+}\n+\n+void\n+_Jv_RunMain (const char *class_name, int argc, const char **argv)\n+{\n+  INIT_SEGV;\n+#ifdef HANDLE_FPE\n+  INIT_FPE;\n+#else\n+  arithexception = new java::lang::ArithmeticException\n+    (JvNewStringLatin1 (\"/ by zero\"));\n+#endif\n+\n+  no_memory = new java::lang::OutOfMemoryError;\n+\n+#ifdef USE_LTDL\n+  LTDL_SET_PRELOADED_SYMBOLS ();\n+#endif\n \n+  arg_vec = JvConvertArgv (argc - 1, argv + 1);\n+  main_group = new java::lang::ThreadGroup (23);\n+  main_thread = new java::lang::FirstThread (main_group,\n+\t\t\t\t\t     JvNewStringLatin1 (class_name),\n+\t\t\t\t\t     arg_vec);\n   main_thread->start();\n   _Jv_ThreadWait ();\n "}, {"sha": "9b3167a36e906687af21b1c5d6a49244ec83a02a", "filename": "libjava/resolve.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fresolve.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Fresolve.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fresolve.cc?ref=eb4534a63677aa47ec9e5cc460617622b905d736", "patch": "@@ -12,8 +12,6 @@ details.  */\n \n #include <java-interp.h>\n \n-#ifdef INTERPRETER\n-\n #include <cni.h>\n #include <jvm.h>\n #include <string.h>\n@@ -30,6 +28,8 @@ details.  */\n #include <java/lang/ClassNotFoundException.h>\n #include <java/lang/IncompatibleClassChangeError.h>\n \n+#ifdef INTERPRETER\n+\n static void throw_internal_error (char *msg)\n \t__attribute__ ((__noreturn__));\n static void throw_class_format_error (jstring msg)\n@@ -124,6 +124,7 @@ _Jv_ResolvePoolEntry (jclass klass, int index)\n     }\n     break;\n \n+\n   case JV_CONSTANT_Fieldref:\n     {\n       _Jv_ushort class_index, name_and_type_index;\n@@ -316,6 +317,7 @@ _Jv_ResolvePoolEntry (jclass klass, int index)\n   return pool->data[index];\n }\n \n+\n void\n _Jv_ResolveField (_Jv_Field *field, java::lang::ClassLoader *loader)\n {"}, {"sha": "34c91863705bf627ad589474ac3d576c3ce8bb77", "filename": "libjava/testsuite/Makefile.in", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb4534a63677aa47ec9e5cc460617622b905d736/libjava%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FMakefile.in?ref=eb4534a63677aa47ec9e5cc460617622b905d736", "patch": "@@ -1,4 +1,4 @@\n-# Makefile.in generated automatically by automake 1.4 from Makefile.am\n+# Makefile.in generated automatically by automake 1.4a from Makefile.am\n \n # Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n@@ -10,7 +10,6 @@\n # even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n # PARTICULAR PURPOSE.\n \n-\n SHELL = @SHELL@\n \n srcdir = @srcdir@\n@@ -46,9 +45,10 @@ AUTOMAKE = @AUTOMAKE@\n AUTOHEADER = @AUTOHEADER@\n \n INSTALL = @INSTALL@\n-INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)\n+INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n+INSTALL_STRIP_FLAG =\n transform = @program_transform_name@\n \n NORMAL_INSTALL = :\n@@ -108,6 +108,7 @@ ZLIBSPEC = @ZLIBSPEC@\n here = @here@\n libgcj_basedir = @libgcj_basedir@\n \n+\n AUTOMAKE_OPTIONS = foreign dejagnu no-installinfo\n \n # Setup the testing framework, if you have one\n@@ -122,15 +123,16 @@ RUNTEST = `if [ -f $(top_srcdir)/../dejagnu/runtest ] ; then \\\n \n \n RUNTESTFLAGS = @AM_RUNTESTFLAGS@\n+subdir = testsuite\n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n CONFIG_HEADER = ../include/config.h\n CONFIG_CLEAN_FILES = \n+DIST_SOURCES = \n DIST_COMMON =  ChangeLog Makefile.am Makefile.in\n \n \n-DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n+DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = tar\n GZIP_ENV = --best\n all: all-redirect\n .SUFFIXES:\n@@ -147,8 +149,6 @@ TAGS:\n \n distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)\n \n-subdir = testsuite\n-\n distdir: $(DISTFILES)\n \there=`cd $(top_builddir) && pwd`; \\\n \ttop_distdir=`cd $(top_distdir) && pwd`; \\\n@@ -158,7 +158,7 @@ distdir: $(DISTFILES)\n \t@for file in $(DISTFILES); do \\\n \t  d=$(srcdir); \\\n \t  if test -d $$d/$$file; then \\\n-\t    cp -pr $$/$$file $(distdir)/$$file; \\\n+\t    cp -pr $$d/$$file $(distdir)/$$file; \\\n \t  else \\\n \t    test -f $(distdir)/$$file \\\n \t    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \\\n@@ -222,7 +222,7 @@ uninstall: uninstall-am\n all-am: Makefile\n all-redirect: all-am\n install-strip:\n-\t$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install\n+\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_STRIP_FLAG=-s install\n installdirs:\n \n \n@@ -257,8 +257,8 @@ maintainer-clean: maintainer-clean-am\n .PHONY: tags distdir check-DEJAGNU info-am info dvi-am dvi check \\\n check-am installcheck-am installcheck install-info-am install-info \\\n install-exec-am install-exec install-data-am install-data install-am \\\n-install uninstall-am uninstall all-redirect all-am all installdirs \\\n-mostlyclean-generic distclean-generic clean-generic \\\n+install uninstall-am uninstall all-redirect all-am all install-strip \\\n+installdirs mostlyclean-generic distclean-generic clean-generic \\\n maintainer-clean-generic clean mostlyclean distclean maintainer-clean\n \n "}]}