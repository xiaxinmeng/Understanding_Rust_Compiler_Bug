{"sha": "04381a1bf49096ecc719bdf89a1f91a7554ca03a", "node_id": "C_kwDOANBUbNoAKDA0MzgxYTFiZjQ5MDk2ZWNjNzE5YmRmODlhMWY5MWE3NTU0Y2EwM2E", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2022-10-27T10:54:22Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-11-14T13:46:49Z"}, "message": "ada: Improve location of error messages in instantiations\n\nWhen flag -gnatdF is used, source code lines are displayed to point\nthe location of errors. The code of the instantiation was displayed\nin case of errors inside generic instances, which was not precise.\nNow the code inside the generic is displayed.\n\ngcc/ada/\n\n\t* errout.adb (Error_Msg_Internal): Store span for Optr field, and\n\tadapt to new type of Optr.\n\t(Finalize. Output_JSON_Message, Remove_Warning_Messages): Adapt to\n\tnew type of Optr.\n\t(Output_Messages): Use Optr instead of Sptr to display code\n\tsnippet closer to error.\n\t* erroutc.adb (dmsg): Adapt to new type of Optr.\n\t* erroutc.ads (Error_Msg_Object): Make Optr a span like Sptr.\n\t* errutil.adb (Error_Msg): Likewise.", "tree": {"sha": "e8f29c356d78c6ff7d3d0550ccbbd225bb4b106a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8f29c356d78c6ff7d3d0550ccbbd225bb4b106a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04381a1bf49096ecc719bdf89a1f91a7554ca03a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04381a1bf49096ecc719bdf89a1f91a7554ca03a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04381a1bf49096ecc719bdf89a1f91a7554ca03a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04381a1bf49096ecc719bdf89a1f91a7554ca03a/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9d317bcd676256a4d982fa335f15a9fc7e39ade", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9d317bcd676256a4d982fa335f15a9fc7e39ade", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9d317bcd676256a4d982fa335f15a9fc7e39ade"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "dcd21778db314832a3d810a0ed13ad6a58339b3b", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04381a1bf49096ecc719bdf89a1f91a7554ca03a/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04381a1bf49096ecc719bdf89a1f91a7554ca03a/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=04381a1bf49096ecc719bdf89a1f91a7554ca03a", "patch": "@@ -1215,7 +1215,7 @@ package body Errout is\n           Next                => No_Error_Msg,\n           Prev                => No_Error_Msg,\n           Sptr                => Span,\n-          Optr                => Optr,\n+          Optr                => Opan,\n           Insertion_Sloc      => (if Has_Insertion_Line then Error_Msg_Sloc\n                                   else No_Location),\n           Sfile               => Get_Source_File_Index (Sptr),\n@@ -1284,7 +1284,7 @@ package body Errout is\n                        or else\n                           (Sptr = Errors.Table (Last_Error_Msg).Sptr.Ptr\n                              and then\n-                               Optr > Errors.Table (Last_Error_Msg).Optr))\n+                               Optr > Errors.Table (Last_Error_Msg).Optr.Ptr))\n          then\n             Prev_Msg := Last_Error_Msg;\n             Next_Msg := No_Error_Msg;\n@@ -1302,7 +1302,8 @@ package body Errout is\n                then\n                   exit when Sptr < Errors.Table (Next_Msg).Sptr.Ptr\n                     or else (Sptr = Errors.Table (Next_Msg).Sptr.Ptr\n-                              and then Optr < Errors.Table (Next_Msg).Optr);\n+                              and then\n+                             Optr < Errors.Table (Next_Msg).Optr.Ptr);\n                end if;\n \n                Prev_Msg := Next_Msg;\n@@ -1681,8 +1682,8 @@ package body Errout is\n                    (Warning_Specifically_Suppressed (CE.Sptr.Ptr, CE.Text, Tag)\n                                                                 /= No_String\n                       or else\n-                    Warning_Specifically_Suppressed (CE.Optr, CE.Text, Tag) /=\n-                                                                   No_String)\n+                    Warning_Specifically_Suppressed (CE.Optr.Ptr, CE.Text, Tag)\n+                                                                /= No_String)\n             then\n                Delete_Warning (Cur);\n \n@@ -2232,9 +2233,9 @@ package body Errout is\n       Write_Str (\",\"\"locations\"\":[\");\n       Write_JSON_Span (Errors.Table (E));\n \n-      if Errors.Table (E).Optr /= Errors.Table (E).Sptr.Ptr then\n+      if Errors.Table (E).Optr.Ptr /= Errors.Table (E).Sptr.Ptr then\n          Write_Str (\",{\"\"caret\"\":\");\n-         Write_JSON_Location (Errors.Table (E).Optr);\n+         Write_JSON_Location (Errors.Table (E).Optr.Ptr);\n          Write_Str (\"}\");\n       end if;\n \n@@ -2954,7 +2955,7 @@ package body Errout is\n                            else SGR_Error);\n                      begin\n                         Write_Source_Code_Lines\n-                          (Errors.Table (E).Sptr, SGR_Span);\n+                          (Errors.Table (E).Optr, SGR_Span);\n                      end;\n                   end if;\n                end if;\n@@ -3329,7 +3330,7 @@ package body Errout is\n \n                --  Don't remove if location does not match\n \n-               and then Errors.Table (E).Optr = Loc\n+               and then Errors.Table (E).Optr.Ptr = Loc\n \n                --  Don't remove if not warning/info message. Note that we do\n                --  not remove style messages here. They are warning messages"}, {"sha": "7766c9727308c471c217764af0a7f35093d14408", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04381a1bf49096ecc719bdf89a1f91a7554ca03a/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04381a1bf49096ecc719bdf89a1f91a7554ca03a/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=04381a1bf49096ecc719bdf89a1f91a7554ca03a", "patch": "@@ -324,7 +324,7 @@ package body Erroutc is\n \n       Write_Str\n         (\"  Optr     = \");\n-      Write_Location (E.Optr);\n+      Write_Location (E.Optr.Ptr);\n       Write_Eol;\n \n       w (\"  Line     = \", Int (E.Line));"}, {"sha": "c992bbaa1834a99f65529addbe8b3eaffcdb2a07", "filename": "gcc/ada/erroutc.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04381a1bf49096ecc719bdf89a1f91a7554ca03a/gcc%2Fada%2Ferroutc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04381a1bf49096ecc719bdf89a1f91a7554ca03a/gcc%2Fada%2Ferroutc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.ads?ref=04381a1bf49096ecc719bdf89a1f91a7554ca03a", "patch": "@@ -209,7 +209,7 @@ package Erroutc is\n       --  will be posted. Note that an error placed on an instantiation will\n       --  have Sptr pointing to the instantiation point.\n \n-      Optr : Source_Ptr;\n+      Optr : Source_Span;\n       --  Flag location used in the call to post the error. This is the same as\n       --  Sptr, except when an error is posted on a particular instantiation of\n       --  a generic. In such a case, Sptr will point to the original source"}, {"sha": "887dc8826bf4b304ddafe90429a31b2b8f52cf1f", "filename": "gcc/ada/errutil.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04381a1bf49096ecc719bdf89a1f91a7554ca03a/gcc%2Fada%2Ferrutil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04381a1bf49096ecc719bdf89a1f91a7554ca03a/gcc%2Fada%2Ferrutil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrutil.adb?ref=04381a1bf49096ecc719bdf89a1f91a7554ca03a", "patch": "@@ -208,7 +208,7 @@ package body Errutil is\n             Prev                => No_Error_Msg,\n             Sfile               => Get_Source_File_Index (Sptr),\n             Sptr                => To_Span (Sptr),\n-            Optr                => Optr,\n+            Optr                => To_Span (Optr),\n             Insertion_Sloc      => No_Location,\n             Line                => Get_Physical_Line_Number (Sptr),\n             Col                 => Get_Column_Number (Sptr),"}]}