{"sha": "2567406a17362fdf2f3b7150d1c006b87c63ee1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU2NzQwNmExNzM2MmZkZjJmM2I3MTUwZDFjMDA2Yjg3YzYzZWUxZg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2002-09-08T10:41:20Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2002-09-08T10:41:20Z"}, "message": "emit-rtl.c (set_mem_attributes_minus_bitpos): Fix array_ref handling.\n\n2002-09-08  Jan Hubicka  <jh@suse.cz>\n\n\t* emit-rtl.c (set_mem_attributes_minus_bitpos): Fix array_ref\n\thandling.\n\n\t* loop.c (loop_gics_reduce):  Emit addition after.\n\nFrom-SVN: r56950", "tree": {"sha": "55dd83715af1de496408e6e73457d8b79a04f206", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55dd83715af1de496408e6e73457d8b79a04f206"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2567406a17362fdf2f3b7150d1c006b87c63ee1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2567406a17362fdf2f3b7150d1c006b87c63ee1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2567406a17362fdf2f3b7150d1c006b87c63ee1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2567406a17362fdf2f3b7150d1c006b87c63ee1f/comments", "author": null, "committer": null, "parents": [{"sha": "6bb72ea0be35697c3317b4f558bb378f5331a646", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bb72ea0be35697c3317b4f558bb378f5331a646", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bb72ea0be35697c3317b4f558bb378f5331a646"}], "stats": {"total": 84, "additions": 58, "deletions": 26}, "files": [{"sha": "a736112a3dafb8dd0e36a6370ab1d36132c9e969", "filename": "gcc/ChangeLog", "status": "modified", "additions": 30, "deletions": 23, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2567406a17362fdf2f3b7150d1c006b87c63ee1f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2567406a17362fdf2f3b7150d1c006b87c63ee1f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2567406a17362fdf2f3b7150d1c006b87c63ee1f", "patch": "@@ -1,3 +1,10 @@\n+2002-09-08  Jan Hubicka  <jh@suse.cz>\n+\n+\t* emit-rtl.c (set_mem_attributes_minus_bitpos): Fix array_ref\n+\thandling.\n+\n+\t* loop.c (loop_gics_reduce):  Emit addition after.\n+\n 2002-09-08  Alan Modra  <amodra@bigpond.net.au>\n \n \t* varasm.c (default_assemble_visibility): Rename from\n@@ -38,15 +45,15 @@\n \tthat subsequent clobbers will be dependent on it.\n \n 2002-09-07  Igor Shevlyakov <igor@microunity.com>\n-  \n+\n \t* combine.c (simplify_shift_const): Calculate rotate count\n \tcorrectly for vector operands.\n \n 2002-09-07  Ansgar Esztermann  <ansgar@thphy.uni-duesseldorf.de>\n \n \t* c-typeck.c (c_tree_expr_nonnegative_p): New function.\n \t(build_binary_op): Call c_tree_expr_nonnegative_p rather than\n-\ttree_expr_nonnegative_p.  \n+\ttree_expr_nonnegative_p.\n \t(build_conditional_expr): Likewise.\n \t* c-tree.h (c_tree_expr_nonnegative_p): Declare.\n \n@@ -140,8 +147,8 @@ Fri Sep  6 16:17:33 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n \n 2002-09-06  Jason Thorpe  <thorpej@wasabisystems.com>\n \n-\t* config/arm/arm-protos.h (arm_gen_return_addr_mask): New \n-\tprototype. \n+\t* config/arm/arm-protos.h (arm_gen_return_addr_mask): New\n+\tprototype.\n \t* config/arm/arm.c (arm_gen_return_addr_mask): New function.\n \t* config/arm/arm.h (MASK_RETURN_ADDR): Use arm_gen_return_addr_mask\n \tif not APCS26 and not Thumb or ARMv4-or-higher.  Use gen_int_mode\n@@ -151,12 +158,12 @@ Fri Sep  6 16:17:33 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n \n 2002-09-06  Ulrich Weigand  <uweigand@de.ibm.com>\n \n-\t* config/s390/s390.md (\"*adddi3_cc\", \"*adddi3_cconly\", \n+\t* config/s390/s390.md (\"*adddi3_cc\", \"*adddi3_cconly\",\n \t\"*adddi3_cconly2\", \"*adddi3_64\", \"*adddi3_31\", \"adddi3\",\n-\t\"*addsi3_carry1_cc\", \"*addsi3_carry1_cconly\",\t\n+\t\"*addsi3_carry1_cc\", \"*addsi3_carry1_cconly\",\n \t\"*addsi3_carry2_cc\", \"*addsi3_carry2_cconly\",\n \t\"*addsi3_cc\", \"*addsi3_cconly\", \"*addsi3_cconly2\", \"addsi3\",\n-\t\"adddf3\", \"*adddf3\", \"*adddf3_ibm\", \n+\t\"adddf3\", \"*adddf3\", \"*adddf3_ibm\",\n \t\"addsf3\", \"*addsf3\", \"*addsf3_ibm\",\n \t\"muldi3\", \"mulsi3\", \"mulsidi3\",\n \t\"muldf3\", \"*muldf3\", \"*muldf3_ibm\",\n@@ -197,7 +204,7 @@ Fri Sep  6 16:17:33 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n 2002-09-05  Jason Thorpe  <thorpej@wasabisystems.com>\n \n \t* config/arm/arm.c (arm_return_in_memory): Implement ATPCS\n-\treturn-in-memory rules. \n+\treturn-in-memory rules.\n \t* config/arm/arm.h (ARM_FLAG_ATPCS, TARGET_ATPCS): Define.\n \n 2002-09-05  David Edelsohn  <edelsohn@gnu.org>\n@@ -210,11 +217,11 @@ Fri Sep  6 16:17:33 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n \t* real.c: Avoid parse error if FLOAT_WORDS_BIG_ENDIAN is\n \tnot a compile-time constant for the non-IBM case.\n \t* config/arm/arm-protos.h (arm_float_words_big_endian): New\n-\tprototype. \n+\tprototype.\n \t* config/arm/arm.c (arm_float_words_big_endian): New function.\n \t* config/arm/arm.h (TARGET_CPU_CPP_BUILTINS): Define __VFP_FP__\n-\tif TARGET_VFP  and not TARGET_HARD_FLOAT. \n-\t(ARM_FLAG_VFP, TARGET_VFP): Define. \n+\tif TARGET_VFP  and not TARGET_HARD_FLOAT.\n+\t(ARM_FLAG_VFP, TARGET_VFP): Define.\n \t(FLOAT_WORDS_BIG_ENDIAN): Use arm_float_words_big_endian.\n \n 2002-09-05  David Edelsohn  <edelsohn@gnu.org>\n@@ -238,7 +245,7 @@ Thu Sep  5 16:27:47 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \tdouble-word scratch register.\n \tconfig/s390/s390.md (\"reload_indi\", \"reload_insi\"): Adapt.\n \n-\t(\"*tmqi_ext\", \"*tmdi_mem\", \"*tmsi_mem\", \"*tmhi_mem\", \"*tmqi_mem\", \n+\t(\"*tmqi_ext\", \"*tmdi_mem\", \"*tmsi_mem\", \"*tmhi_mem\", \"*tmqi_mem\",\n \t\"*cli\"): Replace s_operand by memory_operand.\n \t(\"cmpstrdi\", \"cmpstrsi\"): Replace s_operand by general_operand.\n \n@@ -413,7 +420,7 @@ Wed Sep  4 18:48:10 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \t* config/m68hc11/m68hc11.c (print_operand): Likewise.\n \t* config/m68k/hp320.h (PRINT_OPERAND, ASM_OUTPUT_FLOAT_OPERAND,\n \tASM_OUTPUT_DOUBLE_OPERAND, ASM_OUTPUT_LONG_DOUBLE_OPERAND): Likewise.\n-\t* config/m68k/m68k.h (ASM_OUTPUT_FLOAT_OPERAND, \n+\t* config/m68k/m68k.h (ASM_OUTPUT_FLOAT_OPERAND,\n \tASM_OUTPUT_DOUBLE_OPERAND, ASM_OUTPUT_LONG_DOUBLE_OPERAND): Likewise.\n \t* config/m68k/sun2o4.h (ASM_OUTPUT_FLOAT_OPERAND,\n \tASM_OUTPUT_DOUBLE_OPERAND): Likewise.\n@@ -540,8 +547,8 @@ Wed Sep  4 11:22:14 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \t* config/s390/s390.md (\"movti\"): Add Q->Q alternative.\n \t(\"*movdi_64\", \"*movdi_31\", \"*movsi\", \"movhi\", \"movqi_64\",\n \t\"movqi\", \"*movdf_64\", \"*movdf_31\", \"*movsf\"): Likewise.\n-\t\n-\t(\"*movti_ss\", \"*movdi_ss\", \"*movsi_ss\", \"*movdf_ss\", \n+\n+\t(\"*movti_ss\", \"*movdi_ss\", \"*movsi_ss\", \"*movdf_ss\",\n \t\"*movsf_ss\"): Remove.\n \n 2002-09-03  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n@@ -576,8 +583,8 @@ Tue Sep  3 11:32:14 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n \n \tPR objc/5956:\n \t* objc/objc-act.c (build_typed_selector_reference): Fix typo which\n-\twas causing the new selector never to match the existing ones \n-\t(Patch by Alexander Malmberg <alexander@malmberg.org>). \n+\twas causing the new selector never to match the existing ones\n+\t(Patch by Alexander Malmberg <alexander@malmberg.org>).\n \n 2002-09-03  Graham Stott  <graham.stott@btinternet.com>\n \n@@ -630,7 +637,7 @@ Tue Sep  3 11:32:14 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n \tstuff.\n \t(ip2k_gen_unsigned_comp_branch): Handle CONST_INT and\n \tCONST_DOUBLE constants.\n-\t\n+\n 2002-08-30  Jason Thorpe  <thorpej@wasabisystems.com>\n \n \t* config/alpha/alpha.h (TARGET_CPU_CPP_BUILTINS): Move language-\n@@ -792,7 +799,7 @@ Fri Aug 30 00:33:37 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n \t(RTX_COSTS): Handle UMOD and UDIV.  Tune MULT for v850e.\n \t(TARGET_SWITCHES):  Add strict-align.\n \t(TARGET_STRICT_ALIGN): New.\n-\t(MASK_DEFAULT, STRICT_ALIGNMENT):  Redefine.\t\n+\t(MASK_DEFAULT, STRICT_ALIGNMENT):  Redefine.\n \t* config/v850/t-v850 (MULTILIB_OPTIONS, MULTILIB_DIRNAMES):\n \tDefine.\n \t(LIB1ASMFUNCS): Add v850_negdi2, v850_cmpdi2, v850_ucmpdi2,\n@@ -873,7 +880,7 @@ Wed Aug 28 15:35:17 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \t* c-opts.c (COMMAND_LINE_OPTIONS): Add -Wabi.\n \t(c_common_decode_option): Handle it.\n \t* doc/invoke.texi: Document -Wabi.\n-\t\n+\n Tue Aug 27 23:03:52 2002  Nicola Pero  <n.pero@mi.flashnet.it>\n \n \t* c-common.c (warn_undeclared_selector): New variable.\n@@ -988,7 +995,7 @@ Tue Aug 27 13:53:57 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n 2002-08-27  Gabriel Dos Reis  <gdr@soliton.integrable-solutions.net>\n \n \t* doc/cpp.texi (Common Predefined Macros): Don't mess with table\n-\tdelimiter. \n+\tdelimiter.\n \n 2002-08-27  Gabriel Dos Reis  <gdr@integrable-solutions.net>\n \n@@ -1010,7 +1017,7 @@ Tue Aug 27 13:53:57 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \n 2002-08-26  Ulrich Weigand  <uweigand@de.ibm.com>\n \n-\t* config/s390/s390-protos.h (s390_function_prologue, \n+\t* config/s390/s390-protos.h (s390_function_prologue,\n \ts390_function_epilogue): Remove.\n \tconfig/s390/s390.c (s390_function_prologue, s390_function_epilogue,\n \tTARGET_ASM_FUNCTION_PROLOGUE, TARGET_ASM_FUNCTION_EPILOGUE): Remove.\n@@ -1021,7 +1028,7 @@ Tue Aug 27 13:53:57 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \tconfig/s390/s390.c (s390_split_branches, s390_chunkify_pool): Adapt\n \tto being called from MACHINE_DEPENDENT_REORG.  Update regs_ever_live.\n \n-\tconfig/s390/s390.c (s390_frame_info): Inline save_fprs_p.  Always \n+\tconfig/s390/s390.c (s390_frame_info): Inline save_fprs_p.  Always\n \tassume BASE_REGISTER and RETURN_REGNUM need to be saved.\n \t(s390_emit_prologue): Assume RETURN_REGNUM to be saved iff\n \tfunction is not a leaf function.  Use save_gprs and restore_gprs."}, {"sha": "e94fc4ec843090822c1745767d6b7cb3f204f93c", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 27, "deletions": 2, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2567406a17362fdf2f3b7150d1c006b87c63ee1f/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2567406a17362fdf2f3b7150d1c006b87c63ee1f/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=2567406a17362fdf2f3b7150d1c006b87c63ee1f", "patch": "@@ -1805,11 +1805,36 @@ set_mem_attributes_minus_bitpos (ref, t, objectp, bitpos)\n \n \t  do\n \t    {\n+\t      tree index = TREE_OPERAND (t, 1);\n+\t      tree array = TREE_OPERAND (t, 0);\n+\t      tree domain = TYPE_DOMAIN (TREE_TYPE (array));\n+\t      tree low_bound = (domain ? TYPE_MIN_VALUE (domain) : 0);\n+\t      tree unit_size = TYPE_SIZE_UNIT (TREE_TYPE (TREE_TYPE (array)));\n+\n+\t      /* We assume all arrays have sizes that are a multiple of a byte.\n+\t\t First subtract the lower bound, if any, in the type of the\n+\t\t index, then convert to sizetype and multiply by the size of the\n+\t\t array element.  */\n+\t      if (low_bound != 0 && ! integer_zerop (low_bound))\n+\t\tindex = fold (build (MINUS_EXPR, TREE_TYPE (index),\n+\t\t\t\t     index, low_bound));\n+\n+\t      /* If the index has a self-referential type, pass it to a\n+\t\t WITH_RECORD_EXPR; if the component size is, pass our\n+\t\t component to one.  */\n+\t      if (! TREE_CONSTANT (index)\n+\t\t  && contains_placeholder_p (index))\n+\t\tindex = build (WITH_RECORD_EXPR, TREE_TYPE (index), index, t);\n+\t      if (! TREE_CONSTANT (unit_size)\n+\t\t  && contains_placeholder_p (unit_size))\n+\t\tunit_size = build (WITH_RECORD_EXPR, sizetype,\n+\t\t\t\t   unit_size, array);\n+\n \t      off_tree\n \t\t= fold (build (PLUS_EXPR, sizetype,\n \t\t\t       fold (build (MULT_EXPR, sizetype,\n-\t\t\t\t\t    TREE_OPERAND (t, 1),\n-\t\t\t\t\t    TYPE_SIZE_UNIT (TREE_TYPE (t)))),\n+\t\t\t\t\t    index,\n+\t\t\t\t\t    unit_size)),\n \t\t\t       off_tree));\n \t      t = TREE_OPERAND (t, 0);\n \t    }"}, {"sha": "80bc6f8d67aa2f94037fb9805e8f971add5f1505", "filename": "gcc/loop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2567406a17362fdf2f3b7150d1c006b87c63ee1f/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2567406a17362fdf2f3b7150d1c006b87c63ee1f/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=2567406a17362fdf2f3b7150d1c006b87c63ee1f", "patch": "@@ -4754,7 +4754,7 @@ loop_givs_reduce (loop, bl)\n \t      rtx insert_before;\n \n \t      if (! auto_inc_opt)\n-\t\tinsert_before = tv->insn;\n+\t\tinsert_before = NEXT_INSN (tv->insn);\n \t      else if (auto_inc_opt == 1)\n \t\tinsert_before = NEXT_INSN (v->insn);\n \t      else"}]}