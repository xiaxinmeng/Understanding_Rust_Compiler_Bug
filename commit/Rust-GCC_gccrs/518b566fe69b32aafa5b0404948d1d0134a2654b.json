{"sha": "518b566fe69b32aafa5b0404948d1d0134a2654b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE4YjU2NmZlNjliMzJhYWZhNWIwNDA0OTQ4ZDFkMDEzNGEyNjU0Yg==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@redhat.com", "date": "2001-09-18T17:37:48Z"}, "committer": {"name": "Jeffrey D. Oldham", "email": "oldham@gcc.gnu.org", "date": "2001-09-18T17:37:48Z"}, "message": "mips.c (mips_asm_file_start): Conditionalize Elf code generation only for Gnu assembler.\n\nTue Sep 18 09:51:11 2001  Eric Christopher  <ecechristo@redhat.com>\n\n        * config/mips/mips.c (mips_asm_file_start): Conditionalize Elf\n        code generation only for Gnu assembler.\n\nFrom-SVN: r45681", "tree": {"sha": "a3d3e91c954b438f2f2faded0b80e039c9fd5b1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3d3e91c954b438f2f2faded0b80e039c9fd5b1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/518b566fe69b32aafa5b0404948d1d0134a2654b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/518b566fe69b32aafa5b0404948d1d0134a2654b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/518b566fe69b32aafa5b0404948d1d0134a2654b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/518b566fe69b32aafa5b0404948d1d0134a2654b/comments", "author": {"login": "echristo", "id": 327308, "node_id": "MDQ6VXNlcjMyNzMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/327308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/echristo", "html_url": "https://github.com/echristo", "followers_url": "https://api.github.com/users/echristo/followers", "following_url": "https://api.github.com/users/echristo/following{/other_user}", "gists_url": "https://api.github.com/users/echristo/gists{/gist_id}", "starred_url": "https://api.github.com/users/echristo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/echristo/subscriptions", "organizations_url": "https://api.github.com/users/echristo/orgs", "repos_url": "https://api.github.com/users/echristo/repos", "events_url": "https://api.github.com/users/echristo/events{/privacy}", "received_events_url": "https://api.github.com/users/echristo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8086b53c76b3134f1e9da65a1b3cc855508cb866", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8086b53c76b3134f1e9da65a1b3cc855508cb866", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8086b53c76b3134f1e9da65a1b3cc855508cb866"}], "stats": {"total": 58, "additions": 34, "deletions": 24}, "files": [{"sha": "2af44d4672b99f1c2135ddc77cb7d0d2ae958a20", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/518b566fe69b32aafa5b0404948d1d0134a2654b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/518b566fe69b32aafa5b0404948d1d0134a2654b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=518b566fe69b32aafa5b0404948d1d0134a2654b", "patch": "@@ -1,3 +1,8 @@\n+Tue Sep 18 09:51:11 2001  Eric Christopher  <ecechristo@redhat.com>\n+\n+        * config/mips/mips.c (mips_asm_file_start): Conditionalize Elf\n+        code generation only for Gnu assembler.\n+\n 2001-09-18  Catherine Moore  <clm@redhat.com>\n \n         * config/stormy16 (LIB_SPEC): Remove -lnosys."}, {"sha": "446419f21616e5d2d9f09a357bdd6b471c0cfb17", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 29, "deletions": 24, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/518b566fe69b32aafa5b0404948d1d0134a2654b/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/518b566fe69b32aafa5b0404948d1d0134a2654b/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=518b566fe69b32aafa5b0404948d1d0134a2654b", "patch": "@@ -6106,32 +6106,37 @@ mips_asm_file_start (stream)\n   if (TARGET_MIPS_AS && optimize && flag_delayed_branch)\n     fprintf (stream, \"\\t.set\\tnobopt\\n\");\n \n-#ifdef OBJECT_FORMAT_ELF\n-  /* Generate a special section to describe the ABI switches used to produce\n-     the resultant binary.  This used to be done by the assembler setting bits\n-     in the ELF header's flags field, but we have run out of bits.  GDB needs\n-     this information in order to be able to correctly debug these binaries.\n-     See the function mips_gdbarch_init() in gdb/mips-tdep.c.  */\n-  switch (mips_abi)\n-    {\n-    case ABI_32:   abi_string = \"abi32\"; break;\n-    case ABI_N32:  abi_string = \"abiN32\"; break;\n-    case ABI_64:   abi_string = \"abi64\"; break;\n-    case ABI_O64:  abi_string = \"abiO64\"; break;\n-    case ABI_EABI: abi_string = TARGET_64BIT ? \"eabi64\" : \"eabi32\"; break;\n-    case ABI_MEABI:abi_string = TARGET_64BIT ? \"meabi64\" : \"meabi32\"; break;\n-    default:\n-      abort ();\n-    }\n-  /* Note - we use fprintf directly rather than called named_section()\n-     because in this way we can avoid creating an allocated section.  We\n-     do not want this section to take up any space in the running\n-     executable.  */\n-  fprintf (stream, \"\\t.section .mdebug.%s\\n\", abi_string);\n+  if (TARGET_GAS)\n+    {\n+#if defined(OBJECT_FORMAT_ELF)\n+      /* Generate a special section to describe the ABI switches used to\n+\t produce the resultant binary.  This used to be done by the assembler\n+\t setting bits in the ELF header's flags field, but we have run out of\n+\t bits.  GDB needs this information in order to be able to correctly\n+\t debug these binaries. See the function mips_gdbarch_init() in\n+\t gdb/mips-tdep.c.  */\n+\n+      switch (mips_abi)\n+\t{\n+\tcase ABI_32:   abi_string = \"abi32\"; break;\n+\tcase ABI_N32:  abi_string = \"abiN32\"; break;\n+\tcase ABI_64:   abi_string = \"abi64\"; break;\n+\tcase ABI_O64:  abi_string = \"abiO64\"; break;\n+\tcase ABI_EABI: abi_string = TARGET_64BIT ? \"eabi64\" : \"eabi32\"; break;\n+\tcase ABI_MEABI:abi_string = TARGET_64BIT ? \"meabi64\" : \"meabi32\"; break;\n+\tdefault:\n+\t  abort ();\n+\t}\n+      /* Note - we use fprintf directly rather than called named_section()\n+\t because in this way we can avoid creating an allocated section.  We\n+\t do not want this section to take up any space in the running\n+\t executable.  */\n+      fprintf (stream, \"\\t.section .mdebug.%s\\n\", abi_string);\n \n-  /* Restore the default section.  */\n-  fprintf (stream, \"\\t.previous\\n\");\n+      /* Restore the default section.  */\n+      fprintf (stream, \"\\t.previous\\n\");\n #endif\n+    }\n \n \n "}]}