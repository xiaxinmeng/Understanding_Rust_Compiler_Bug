{"sha": "98ff4808a08a68bd3cc410ec1b2b22e39b104ce7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThmZjQ4MDhhMDhhNjhiZDNjYzQxMGVjMWIyYjIyZTM5YjEwNGNlNw==", "commit": {"author": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1994-02-22T12:58:56Z"}, "committer": {"name": "Torbjorn Granlund", "email": "tege@gnu.org", "date": "1994-02-22T12:58:56Z"}, "message": "(divsi3): Emit all RTL from RTL template.\n\n(udivsi3, modsi3, umodsi3, divdi3, udivdi3, moddi3, umoddi3): Likewise.\n\nFrom-SVN: r6602", "tree": {"sha": "66c4a83aa31c2407fe356498682919c2a9cff203", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66c4a83aa31c2407fe356498682919c2a9cff203"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98ff4808a08a68bd3cc410ec1b2b22e39b104ce7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98ff4808a08a68bd3cc410ec1b2b22e39b104ce7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98ff4808a08a68bd3cc410ec1b2b22e39b104ce7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98ff4808a08a68bd3cc410ec1b2b22e39b104ce7/comments", "author": null, "committer": null, "parents": [{"sha": "ecc1a5acaffc65420e2ca8a37621bad0604bc048", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecc1a5acaffc65420e2ca8a37621bad0604bc048", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecc1a5acaffc65420e2ca8a37621bad0604bc048"}], "stats": {"total": 136, "additions": 48, "deletions": 88}, "files": [{"sha": "7e1b798d85fe9dbb9846605a89142878943657b1", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 48, "deletions": 88, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98ff4808a08a68bd3cc410ec1b2b22e39b104ce7/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98ff4808a08a68bd3cc410ec1b2b22e39b104ce7/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=98ff4808a08a68bd3cc410ec1b2b22e39b104ce7", "patch": "@@ -353,148 +353,108 @@\n ;; r24 and r25, put their output in r27, and clobber r23 and r28.\n \n (define_expand \"divsi3\"\n-  [(parallel [(set (reg:SI 27)\n-\t\t   (div:SI (match_operand:SI 1 \"general_operand\" \"\")\n-\t\t\t   (match_operand:SI 2 \"general_operand\" \"\")))\n+  [(set (reg:SI 24) (match_operand:SI 1 \"input_operand\" \"\"))\n+   (set (reg:SI 25) (match_operand:SI 2 \"input_operand\" \"\"))\n+   (parallel [(set (reg:SI 27)\n+\t\t   (div:SI (reg:SI 24)\n+\t\t\t   (reg:SI 25)))\n \t      (clobber (reg:DI 23))\n \t      (clobber (reg:DI 28))])\n    (set (match_operand:SI 0 \"general_operand\" \"\")\n \t(reg:SI 27))]\n   \"\"\n-  \"\n-{ rtx in0 = gen_rtx (REG, SImode, 24);\n-  rtx in1 = gen_rtx (REG, SImode, 25);\n-\n-  emit_move_insn (in0, operands[1]);\n-  emit_move_insn (in1, operands[2]);\n-  operands[1] = in0, operands[2] = in1;\n-}\")\n+  \"\")\n \n (define_expand \"udivsi3\"\n-  [(parallel [(set (reg:SI 27)\n-\t\t   (udiv:SI (match_operand:SI 1 \"general_operand\" \"\")\n-\t\t\t    (match_operand:SI 2 \"general_operand\" \"\")))\n+  [(set (reg:SI 24) (match_operand:SI 1 \"input_operand\" \"\"))\n+   (set (reg:SI 25) (match_operand:SI 2 \"input_operand\" \"\"))\n+   (parallel [(set (reg:SI 27)\n+\t\t   (udiv:SI (reg:SI 24)\n+\t\t\t    (reg:SI 25)))\n \t      (clobber (reg:DI 23))\n \t      (clobber (reg:DI 28))])\n    (set (match_operand:SI 0 \"general_operand\" \"\")\n \t(reg:SI 27))]\n   \"\"\n-  \"\n-{ rtx in0 = gen_rtx (REG, SImode, 24);\n-  rtx in1 = gen_rtx (REG, SImode, 25);\n-\n-  emit_move_insn (in0, operands[1]);\n-  emit_move_insn (in1, operands[2]);\n-  operands[1] = in0, operands[2] = in1;\n-}\")\n+  \"\")\n \n (define_expand \"modsi3\"\n-  [(parallel [(set (reg:SI 27)\n-\t\t   (mod:SI (match_operand:SI 1 \"general_operand\" \"\")\n-\t\t\t   (match_operand:SI 2 \"general_operand\" \"\")))\n+  [(set (reg:SI 24) (match_operand:SI 1 \"input_operand\" \"\"))\n+   (set (reg:SI 25) (match_operand:SI 2 \"input_operand\" \"\"))\n+   (parallel [(set (reg:SI 27)\n+\t\t   (mod:SI (reg:SI 24)\n+\t\t\t   (reg:SI 25)))\n \t      (clobber (reg:DI 23))\n \t      (clobber (reg:DI 28))])\n    (set (match_operand:SI 0 \"general_operand\" \"\")\n \t(reg:SI 27))]\n   \"\"\n-  \"\n-{ rtx in0 = gen_rtx (REG, SImode, 24);\n-  rtx in1 = gen_rtx (REG, SImode, 25);\n-\n-  emit_move_insn (in0, operands[1]);\n-  emit_move_insn (in1, operands[2]);\n-  operands[1] = in0, operands[2] = in1;\n-}\")\n+  \"\")\n \n (define_expand \"umodsi3\"\n-  [(parallel [(set (reg:SI 27)\n-\t\t   (umod:SI (match_operand:SI 1 \"general_operand\" \"\")\n-\t\t\t    (match_operand:SI 2 \"general_operand\" \"\")))\n+  [(set (reg:SI 24) (match_operand:SI 1 \"input_operand\" \"\"))\n+   (set (reg:SI 25) (match_operand:SI 2 \"input_operand\" \"\"))\n+   (parallel [(set (reg:SI 27)\n+\t\t   (umod:SI (reg:SI 24)\n+\t\t\t    (reg:SI 25)))\n \t      (clobber (reg:DI 23))\n \t      (clobber (reg:DI 28))])\n    (set (match_operand:SI 0 \"general_operand\" \"\")\n \t(reg:SI 27))]\n   \"\"\n-  \"\n-{ rtx in0 = gen_rtx (REG, SImode, 24);\n-  rtx in1 = gen_rtx (REG, SImode, 25);\n-\n-  emit_move_insn (in0, operands[1]);\n-  emit_move_insn (in1, operands[2]);\n-  operands[1] = in0, operands[2] = in1;\n-}\")\n+  \"\")\n \n (define_expand \"divdi3\"\n-  [(parallel [(set (reg:DI 27)\n-\t\t   (div:DI (match_operand:DI 1 \"general_operand\" \"\")\n-\t\t\t   (match_operand:DI 2 \"general_operand\" \"\")))\n+  [(set (reg:DI 24) (match_operand:DI 1 \"input_operand\" \"\"))\n+   (set (reg:DI 25) (match_operand:DI 2 \"input_operand\" \"\"))\n+   (parallel [(set (reg:DI 27)\n+\t\t   (div:DI (reg:DI 24)\n+\t\t\t   (reg:DI 25)))\n \t      (clobber (reg:DI 23))\n \t      (clobber (reg:DI 28))])\n    (set (match_operand:DI 0 \"general_operand\" \"\")\n \t(reg:DI 27))]\n   \"\"\n-  \"\n-{ rtx in0 = gen_rtx (REG, DImode, 24);\n-  rtx in1 = gen_rtx (REG, DImode, 25);\n-\n-  emit_move_insn (in0, operands[1]);\n-  emit_move_insn (in1, operands[2]);\n-  operands[1] = in0, operands[2] = in1;\n-}\")\n+  \"\")\n \n (define_expand \"udivdi3\"\n-  [(parallel [(set (reg:DI 27)\n-\t\t   (udiv:DI (match_operand:DI 1 \"general_operand\" \"\")\n-\t\t\t    (match_operand:DI 2 \"general_operand\" \"\")))\n+  [(set (reg:DI 24) (match_operand:DI 1 \"input_operand\" \"\"))\n+   (set (reg:DI 25) (match_operand:DI 2 \"input_operand\" \"\"))\n+   (parallel [(set (reg:DI 27)\n+\t\t   (udiv:DI (reg:DI 24)\n+\t\t\t    (reg:DI 25)))\n \t      (clobber (reg:DI 23))\n \t      (clobber (reg:DI 28))])\n    (set (match_operand:DI 0 \"general_operand\" \"\")\n \t(reg:DI 27))]\n   \"\"\n-  \"\n-{ rtx in0 = gen_rtx (REG, DImode, 24);\n-  rtx in1 = gen_rtx (REG, DImode, 25);\n-\n-  emit_move_insn (in0, operands[1]);\n-  emit_move_insn (in1, operands[2]);\n-  operands[1] = in0, operands[2] = in1;\n-}\")\n+  \"\")\n \n (define_expand \"moddi3\"\n-  [(parallel [(set (reg:DI 27)\n-\t\t   (mod:DI (match_operand:DI 1 \"general_operand\" \"\")\n-\t\t\t   (match_operand:DI 2 \"general_operand\" \"\")))\n+  [(set (reg:DI 24) (match_operand:DI 1 \"input_operand\" \"\"))\n+   (set (reg:DI 25) (match_operand:DI 2 \"input_operand\" \"\"))\n+   (parallel [(set (reg:DI 27)\n+\t\t   (mod:DI (reg:DI 24)\n+\t\t\t   (reg:DI 25)))\n \t      (clobber (reg:DI 23))\n \t      (clobber (reg:DI 28))])\n    (set (match_operand:DI 0 \"general_operand\" \"\")\n \t(reg:DI 27))]\n   \"\"\n-  \"\n-{ rtx in0 = gen_rtx (REG, DImode, 24);\n-  rtx in1 = gen_rtx (REG, DImode, 25);\n-\n-  emit_move_insn (in0, operands[1]);\n-  emit_move_insn (in1, operands[2]);\n-  operands[1] = in0, operands[2] = in1;\n-}\")\n+  \"\")\n \n (define_expand \"umoddi3\"\n-  [(parallel [(set (reg:DI 27)\n-\t\t   (umod:DI (match_operand:DI 1 \"general_operand\" \"\")\n-\t\t\t    (match_operand:DI 2 \"general_operand\" \"\")))\n+  [(set (reg:DI 24) (match_operand:DI 1 \"input_operand\" \"\"))\n+   (set (reg:DI 25) (match_operand:DI 2 \"input_operand\" \"\"))\n+   (parallel [(set (reg:DI 27)\n+\t\t   (umod:DI (reg:DI 24)\n+\t\t\t    (reg:DI 25)))\n \t      (clobber (reg:DI 23))\n \t      (clobber (reg:DI 28))])\n    (set (match_operand:DI 0 \"general_operand\" \"\")\n \t(reg:DI 27))]\n   \"\"\n-  \"\n-{ rtx in0 = gen_rtx (REG, DImode, 24);\n-  rtx in1 = gen_rtx (REG, DImode, 25);\n-\n-  emit_move_insn (in0, operands[1]);\n-  emit_move_insn (in1, operands[2]);\n-  operands[1] = in0, operands[2] = in1;\n-}\")\n+  \"\")\n \n (define_insn \"\"\n   [(set (reg:SI 27)"}]}