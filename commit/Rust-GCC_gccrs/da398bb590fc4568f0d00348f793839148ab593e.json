{"sha": "da398bb590fc4568f0d00348f793839148ab593e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGEzOThiYjU5MGZjNDU2OGYwZDAwMzQ4Zjc5MzgzOTE0OGFiNTkzZQ==", "commit": {"author": {"name": "Roman Zippel", "email": "zippel@linux-m68k.org", "date": "2007-09-18T12:11:49Z"}, "committer": {"name": "Roman Zippel", "email": "zippel@gcc.gnu.org", "date": "2007-09-18T12:11:49Z"}, "message": "m68k.c (override_options): Remove USE_GAS, use %.\n\n\t* config/m68k/m68k.c (override_options): Remove USE_GAS,\n\tuse %. syntax.\n\t(output_dbcc_and_branch, output_scc_di): Replace all jbcc\n\talternatives with just jcc.\n\t* config/m68k/m68k.md (addsi_lshrsi_31, beq0_di, bne0_di,\n\tbge0_di, blt0_di, bgtu, bltu, bgeu, bleu, bgtu_rev,\n\tbltu_rev, bgeu_rev, bleu_rev, jump, dbne_hi, dbne_si,\n\tdbge_hi, dbge_si): Likewise.\n\nFrom-SVN: r128576", "tree": {"sha": "8b5da680c34fd45891d0779338152116382a2df6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b5da680c34fd45891d0779338152116382a2df6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/da398bb590fc4568f0d00348f793839148ab593e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da398bb590fc4568f0d00348f793839148ab593e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da398bb590fc4568f0d00348f793839148ab593e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da398bb590fc4568f0d00348f793839148ab593e/comments", "author": null, "committer": null, "parents": [{"sha": "09e21d09bd4f7673be55fc0f50d6cc676616a9e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09e21d09bd4f7673be55fc0f50d6cc676616a9e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09e21d09bd4f7673be55fc0f50d6cc676616a9e4"}], "stats": {"total": 307, "additions": 77, "deletions": 230}, "files": [{"sha": "a582c5fce7b98878c37e5cdaa80f4b0d8370f4d0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da398bb590fc4568f0d00348f793839148ab593e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da398bb590fc4568f0d00348f793839148ab593e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=da398bb590fc4568f0d00348f793839148ab593e", "patch": "@@ -1,3 +1,14 @@\n+2007-09-18  Roman Zippel <zippel@linux-m68k.org>\n+\n+\t* config/m68k/m68k.c (override_options): Remove USE_GAS,\n+\tuse %. syntax.\n+\t(output_dbcc_and_branch, output_scc_di): Replace all jbcc\n+\talternatives with just jcc.\n+\t* config/m68k/m68k.md (addsi_lshrsi_31, beq0_di, bne0_di,\n+\tbge0_di, blt0_di, bgtu, bltu, bgeu, bleu, bgtu_rev,\n+\tbltu_rev, bgeu_rev, bleu_rev, jump, dbne_hi, dbne_si,\n+\tdbge_hi, dbge_si): Likewise.\n+\n 2007-09-18  Roman Zippel <zippel@linux-m68k.org>\n \n \t* config/m68k/m68k.md (beq, bne, bgt, blt, bge, ble, bordered,"}, {"sha": "8248e7180ac2daf29c03487a0a410a07530fcf17", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 21, "deletions": 81, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da398bb590fc4568f0d00348f793839148ab593e/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da398bb590fc4568f0d00348f793839148ab593e/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=da398bb590fc4568f0d00348f793839148ab593e", "patch": "@@ -571,11 +571,7 @@ override_options (void)\n     {\n       m68k_symbolic_call_var = M68K_SYMBOLIC_CALL_JSR;\n \n-#if MOTOROLA && !defined (USE_GAS)\n-      m68k_symbolic_jump = \"jmp %a0\";\n-#else\n       m68k_symbolic_jump = \"jra %a0\";\n-#endif\n     }\n   else if (TARGET_ID_SHARED_LIBRARY)\n     /* All addresses must be loaded from the GOT.  */\n@@ -590,15 +586,9 @@ override_options (void)\n       if (TARGET_ISAC)\n \t/* No unconditional long branch */;\n       else if (TARGET_PCREL)\n-\tm68k_symbolic_jump = \"bra.l %c0\";\n+\tm68k_symbolic_jump = \"bra%.l %c0\";\n       else\n-\t{\n-#if defined(USE_GAS)\n-\t  m68k_symbolic_jump = \"bra.l %p0\";\n-#else\n-\t  m68k_symbolic_jump = \"bra %p0\";\n-#endif\n-\t}\n+\tm68k_symbolic_jump = \"bra%.l %p0\";\n       /* Turn off function cse if we are doing PIC.  We always want\n \t function call to be done as `bsr foo@PLTPC'.  */\n       /* ??? It's traditional to do this for -mpcrel too, but it isn't\n@@ -609,23 +599,15 @@ override_options (void)\n   switch (m68k_symbolic_call_var)\n     {\n     case M68K_SYMBOLIC_CALL_JSR:\n-#if MOTOROLA && !defined (USE_GAS)\n       m68k_symbolic_call = \"jsr %a0\";\n-#else\n-      m68k_symbolic_call = \"jbsr %a0\";\n-#endif\n       break;\n \n     case M68K_SYMBOLIC_CALL_BSR_C:\n-      m68k_symbolic_call = \"bsr.l %c0\";\n+      m68k_symbolic_call = \"bsr%.l %c0\";\n       break;\n \n     case M68K_SYMBOLIC_CALL_BSR_P:\n-#if defined(USE_GAS)\n-      m68k_symbolic_call = \"bsr.l %p0\";\n-#else\n-      m68k_symbolic_call = \"bsr %p0\";\n-#endif\n+      m68k_symbolic_call = \"bsr%.l %p0\";\n       break;\n \n     case M68K_SYMBOLIC_CALL_NONE:\n@@ -1363,73 +1345,43 @@ output_dbcc_and_branch (rtx *operands)\n   switch (GET_CODE (operands[3]))\n     {\n       case EQ:\n-\toutput_asm_insn (MOTOROLA\n-\t\t\t ? \"dbeq %0,%l1\\n\\tjbeq %l2\"\n-\t\t\t : \"dbeq %0,%l1\\n\\tjeq %l2\",\n-\t\t\t operands);\n+\toutput_asm_insn (\"dbeq %0,%l1\\n\\tjeq %l2\", operands);\n \tbreak;\n \n       case NE:\n-\toutput_asm_insn (MOTOROLA\n-\t\t\t ? \"dbne %0,%l1\\n\\tjbne %l2\"\n-\t\t\t : \"dbne %0,%l1\\n\\tjne %l2\",\n-\t\t\t operands);\n+\toutput_asm_insn (\"dbne %0,%l1\\n\\tjne %l2\", operands);\n \tbreak;\n \n       case GT:\n-\toutput_asm_insn (MOTOROLA\n-\t\t\t ? \"dbgt %0,%l1\\n\\tjbgt %l2\"\n-\t\t\t : \"dbgt %0,%l1\\n\\tjgt %l2\",\n-\t\t\t operands);\n+\toutput_asm_insn (\"dbgt %0,%l1\\n\\tjgt %l2\", operands);\n \tbreak;\n \n       case GTU:\n-\toutput_asm_insn (MOTOROLA\n-\t\t\t ? \"dbhi %0,%l1\\n\\tjbhi %l2\"\n-\t\t\t : \"dbhi %0,%l1\\n\\tjhi %l2\",\n-\t\t\t operands);\n+\toutput_asm_insn (\"dbhi %0,%l1\\n\\tjhi %l2\", operands);\n \tbreak;\n \n       case LT:\n-\toutput_asm_insn (MOTOROLA\n-\t\t\t ? \"dblt %0,%l1\\n\\tjblt %l2\"\n-\t\t\t : \"dblt %0,%l1\\n\\tjlt %l2\",\n-\t\t\t operands);\n+\toutput_asm_insn (\"dblt %0,%l1\\n\\tjlt %l2\", operands);\n \tbreak;\n \n       case LTU:\n-\toutput_asm_insn (MOTOROLA\n-\t\t\t ? \"dbcs %0,%l1\\n\\tjbcs %l2\"\n-\t\t\t : \"dbcs %0,%l1\\n\\tjcs %l2\",\n-\t\t\t operands);\n+\toutput_asm_insn (\"dbcs %0,%l1\\n\\tjcs %l2\", operands);\n \tbreak;\n \n       case GE:\n-\toutput_asm_insn (MOTOROLA\n-\t\t\t ? \"dbge %0,%l1\\n\\tjbge %l2\"\n-\t\t\t : \"dbge %0,%l1\\n\\tjge %l2\",\n-\t\t\t operands);\n+\toutput_asm_insn (\"dbge %0,%l1\\n\\tjge %l2\", operands);\n \tbreak;\n \n       case GEU:\n-\toutput_asm_insn (MOTOROLA\n-\t\t\t ? \"dbcc %0,%l1\\n\\tjbcc %l2\"\n-\t\t\t : \"dbcc %0,%l1\\n\\tjcc %l2\",\n-\t\t\t operands);\n+\toutput_asm_insn (\"dbcc %0,%l1\\n\\tjcc %l2\", operands);\n \tbreak;\n \n       case LE:\n-\toutput_asm_insn (MOTOROLA\n-\t\t\t ? \"dble %0,%l1\\n\\tjble %l2\"\n-\t\t\t : \"dble %0,%l1\\n\\tjle %l2\",\n-\t\t\t operands);\n+\toutput_asm_insn (\"dble %0,%l1\\n\\tjle %l2\", operands);\n \tbreak;\n \n       case LEU:\n-\toutput_asm_insn (MOTOROLA\n-\t\t\t ? \"dbls %0,%l1\\n\\tjbls %l2\"\n-\t\t\t : \"dbls %0,%l1\\n\\tjls %l2\",\n-\t\t\t operands);\n+\toutput_asm_insn (\"dbls %0,%l1\\n\\tjls %l2\", operands);\n \tbreak;\n \n       default:\n@@ -1441,10 +1393,7 @@ output_dbcc_and_branch (rtx *operands)\n   switch (GET_MODE (operands[0]))\n     {\n       case SImode:\n-        output_asm_insn (MOTOROLA\n-\t\t\t ? \"clr%.w %0\\n\\tsubq%.l #1,%0\\n\\tjbpl %l1\"\n-\t\t\t : \"clr%.w %0\\n\\tsubq%.l #1,%0\\n\\tjpl %l1\",\n-\t\t\t operands);\n+        output_asm_insn (\"clr%.w %0\\n\\tsubq%.l #1,%0\\n\\tjpl %l1\", operands);\n         break;\n \n       case HImode:\n@@ -1490,20 +1439,15 @@ output_scc_di (rtx op, rtx operand1, rtx operand2, rtx dest)\n     }\n   loperands[4] = gen_label_rtx ();\n   if (operand2 != const0_rtx)\n-    {\n-      output_asm_insn (MOTOROLA\n-\t\t       ? \"cmp%.l %2,%0\\n\\tjbne %l4\\n\\tcmp%.l %3,%1\"\n-\t\t       : \"cmp%.l %2,%0\\n\\tjne %l4\\n\\tcmp%.l %3,%1\",\n-\t\t       loperands);\n-    }\n+    output_asm_insn (\"cmp%.l %2,%0\\n\\tjne %l4\\n\\tcmp%.l %3,%1\", loperands);\n   else\n     {\n       if (TARGET_68020 || TARGET_COLDFIRE || ! ADDRESS_REG_P (loperands[0]))\n \toutput_asm_insn (\"tst%.l %0\", loperands);\n       else\n \toutput_asm_insn (\"cmp%.w #0,%0\", loperands);\n \n-      output_asm_insn (MOTOROLA ? \"jbne %l4\" : \"jne %l4\", loperands);\n+      output_asm_insn (\"jne %l4\", loperands);\n \n       if (TARGET_68020 || TARGET_COLDFIRE || ! ADDRESS_REG_P (loperands[1]))\n \toutput_asm_insn (\"tst%.l %1\", loperands);\n@@ -1529,8 +1473,7 @@ output_scc_di (rtx op, rtx operand1, rtx operand2, rtx dest)\n \n       case GT:\n         loperands[6] = gen_label_rtx ();\n-        output_asm_insn (MOTOROLA ? \"shi %5\\n\\tjbra %l6\" : \"shi %5\\n\\tjra %l6\",\n-\t\t\t loperands);\n+        output_asm_insn (\"shi %5\\n\\tjra %l6\", loperands);\n         (*targetm.asm_out.internal_label) (asm_out_file, \"L\",\n \t\t\t\t\t   CODE_LABEL_NUMBER (loperands[4]));\n         output_asm_insn (\"sgt %5\", loperands);\n@@ -1546,8 +1489,7 @@ output_scc_di (rtx op, rtx operand1, rtx operand2, rtx dest)\n \n       case LT:\n         loperands[6] = gen_label_rtx ();\n-        output_asm_insn (MOTOROLA ? \"scs %5\\n\\tjbra %l6\" : \"scs %5\\n\\tjra %l6\",\n-\t\t\t loperands);\n+        output_asm_insn (\"scs %5\\n\\tjra %l6\", loperands);\n         (*targetm.asm_out.internal_label) (asm_out_file, \"L\",\n \t\t\t\t\t   CODE_LABEL_NUMBER (loperands[4]));\n         output_asm_insn (\"slt %5\", loperands);\n@@ -1563,8 +1505,7 @@ output_scc_di (rtx op, rtx operand1, rtx operand2, rtx dest)\n \n       case GE:\n         loperands[6] = gen_label_rtx ();\n-        output_asm_insn (MOTOROLA ? \"scc %5\\n\\tjbra %l6\" : \"scc %5\\n\\tjra %l6\",\n-\t\t\t loperands);\n+        output_asm_insn (\"scc %5\\n\\tjra %l6\", loperands);\n         (*targetm.asm_out.internal_label) (asm_out_file, \"L\",\n \t\t\t\t\t   CODE_LABEL_NUMBER (loperands[4]));\n         output_asm_insn (\"sge %5\", loperands);\n@@ -1580,8 +1521,7 @@ output_scc_di (rtx op, rtx operand1, rtx operand2, rtx dest)\n \n       case LE:\n         loperands[6] = gen_label_rtx ();\n-        output_asm_insn (MOTOROLA ? \"sls %5\\n\\tjbra %l6\" : \"sls %5\\n\\tjra %l6\",\n-\t\t\t loperands);\n+        output_asm_insn (\"sls %5\\n\\tjra %l6\", loperands);\n         (*targetm.asm_out.internal_label) (asm_out_file, \"L\",\n \t\t\t\t\t   CODE_LABEL_NUMBER (loperands[4]));\n         output_asm_insn (\"sle %5\", loperands);"}, {"sha": "07d40de4f7e3fee7ced2ac7cca404c7f5d4ee50f", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 45, "deletions": 149, "changes": 194, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/da398bb590fc4568f0d00348f793839148ab593e/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/da398bb590fc4568f0d00348f793839148ab593e/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=da398bb590fc4568f0d00348f793839148ab593e", "patch": "@@ -2400,7 +2400,7 @@\n         operands[2] = gen_rtx_MEM (SImode, XEXP (XEXP (operands[0], 0), 0));\n     }\n   output_asm_insn (\"move%.l %1,%0\", operands);\n-  output_asm_insn (MOTOROLA ? \"jbpl %l3\" : \"jpl %l3\", operands);\n+  output_asm_insn (\"jpl %l3\", operands);\n   output_asm_insn (\"addq%.l #1,%2\", operands);\n   (*targetm.asm_out.internal_label) (asm_out_file, \"L\",\n \t\t\t\tCODE_LABEL_NUMBER (operands[3]));\n@@ -6283,19 +6283,14 @@\n {\n   CC_STATUS_INIT;\n   if (which_alternative == 1)\n-    {\n-      if (MOTOROLA)\n-\treturn \"move%.l %0,%2\\;or%.l %0,%2\\;jbeq %l1\";\n-      else\n-\treturn \"move%.l %0,%2\\;or%.l %0,%2\\;jeq %l1\";\n-    }\n+    return \"move%.l %0,%2\\;or%.l %0,%2\\;jeq %l1\";\n   if ((cc_prev_status.value1\n       && rtx_equal_p (cc_prev_status.value1, operands[0]))\n     || (cc_prev_status.value2\n       && rtx_equal_p (cc_prev_status.value2, operands[0])))\n     {\n       cc_status = cc_prev_status;\n-      return MOTOROLA ? \"jbeq %l1\" : \"jeq %l1\";\n+      return \"jeq %l1\";\n     }\n   if (GET_CODE (operands[0]) == REG)\n     operands[3] = gen_rtx_REG (SImode, REGNO (operands[0]) + 1);\n@@ -6306,40 +6301,17 @@\n       if (reg_overlap_mentioned_p (operands[2], operands[0]))\n \t{\n \t  if (reg_overlap_mentioned_p (operands[2], operands[3]))\n-\t    {\n-\t      if (MOTOROLA)\n-\t\treturn \"or%.l %0,%2\\;jbeq %l1\";\n-\t      else\n-\t\treturn \"or%.l %0,%2\\;jeq %l1\";\n-\t    }\n+\t    return \"or%.l %0,%2\\;jeq %l1\";\n \t  else\n-\t    {\n-\t      if (MOTOROLA)\n-\t\treturn \"or%.l %3,%2\\;jbeq %l1\";\n-\t      else\n-\t\treturn \"or%.l %3,%2\\;jeq %l1\";\n-\t    }\n+\t    return \"or%.l %3,%2\\;jeq %l1\";\n \t}\n-      if (MOTOROLA)\n-\treturn \"move%.l %0,%2\\;or%.l %3,%2\\;jbeq %l1\";\n-      else\n-\treturn \"move%.l %0,%2\\;or%.l %3,%2\\;jeq %l1\";\n+      return \"move%.l %0,%2\\;or%.l %3,%2\\;jeq %l1\";\n     }\n   operands[4] = gen_label_rtx();\n   if (TARGET_68020 || TARGET_COLDFIRE)\n-    {\n-      if (MOTOROLA)\n-\toutput_asm_insn (\"tst%.l %0\\;jbne %l4\\;tst%.l %3\\;jbeq %l1\", operands);\n-      else\n-\toutput_asm_insn (\"tst%.l %0\\;jne %l4\\;tst%.l %3\\;jeq %l1\", operands);\n-    }\n+    output_asm_insn (\"tst%.l %0\\;jne %l4\\;tst%.l %3\\;jeq %l1\", operands);\n   else\n-    {\n-      if (MOTOROLA)\n-\toutput_asm_insn (\"cmp%.w #0,%0\\;jbne %l4\\;cmp%.w #0,%3\\;jbeq %l1\", operands);\n-      else\n-\toutput_asm_insn (\"cmp%.w #0,%0\\;jne %l4\\;cmp%.w #0,%3\\;jeq %l1\", operands);\n-    }\n+    output_asm_insn (\"cmp%.w #0,%0\\;jne %l4\\;cmp%.w #0,%3\\;jeq %l1\", operands);\n   (*targetm.asm_out.internal_label) (asm_out_file, \"L\",\n \t\t\t\tCODE_LABEL_NUMBER (operands[4]));\n   return \"\";\n@@ -6360,7 +6332,7 @@\n       && rtx_equal_p (cc_prev_status.value2, operands[0])))\n     {\n       cc_status = cc_prev_status;\n-      return MOTOROLA ? \"jbne %l1\" : \"jne %l1\";\n+      return \"jne %l1\";\n     }\n   CC_STATUS_INIT;\n   if (GET_CODE (operands[0]) == REG)\n@@ -6372,39 +6344,16 @@\n       if (reg_overlap_mentioned_p (operands[2], operands[0]))\n \t{\n \t  if (reg_overlap_mentioned_p (operands[2], operands[3]))\n-\t    {\n-\t      if (MOTOROLA)\n-\t\treturn \"or%.l %0,%2\\;jbne %l1\";\n-\t      else\n-\t\treturn \"or%.l %0,%2\\;jne %l1\";\n-\t    }\n+\t    return \"or%.l %0,%2\\;jne %l1\";\n \t  else\n-\t    {\n-\t      if (MOTOROLA)\n-\t\treturn \"or%.l %3,%2\\;jbne %l1\";\n-\t      else\n-\t\treturn \"or%.l %3,%2\\;jne %l1\";\n-\t    }\n+\t    return \"or%.l %3,%2\\;jne %l1\";\n \t}\n-      if (MOTOROLA)\n-\treturn \"move%.l %0,%2\\;or%.l %3,%2\\;jbne %l1\";\n-      else\n-\treturn \"move%.l %0,%2\\;or%.l %3,%2\\;jne %l1\";\n+      return \"move%.l %0,%2\\;or%.l %3,%2\\;jne %l1\";\n     }\n   if (TARGET_68020 || TARGET_COLDFIRE)\n-    {\n-      if (MOTOROLA)\n-\treturn \"tst%.l %0\\;jbne %l1\\;tst%.l %3\\;jbne %l1\";\n-      else\n-\treturn \"tst%.l %0\\;jne %l1\\;tst%.l %3\\;jne %l1\";\n-    }\n+    return \"tst%.l %0\\;jne %l1\\;tst%.l %3\\;jne %l1\";\n   else\n-    {\n-      if (MOTOROLA)\n-\treturn \"cmp%.w #0,%0\\;jbne %l1\\;cmp%.w #0,%3\\;jbne %l1\";\n-      else\n-\treturn \"cmp%.w #0,%0\\;jne %l1\\;cmp%.w #0,%3\\;jne %l1\";\n-    }\n+    return \"cmp%.w #0,%0\\;jne %l1\\;cmp%.w #0,%3\\;jne %l1\";\n })\n \n (define_insn \"bge0_di\"\n@@ -6421,14 +6370,7 @@\n       && rtx_equal_p (cc_prev_status.value2, operands[0])))\n     {\n       cc_status = cc_prev_status;\n-      if (cc_status.flags & CC_REVERSED)\n-\t{\n-\t  return MOTOROLA ? \"jble %l1\" : \"jle %l1\";\n-\t}\n-      else\n-\t{\n-\t  return MOTOROLA ? \"jbpl %l1\" : \"jpl %l1\";\n-\t}\n+      return cc_status.flags & CC_REVERSED ? \"jle %l1\" : \"jpl %l1\";\n     }\n   CC_STATUS_INIT;\n   if (TARGET_68020 || TARGET_COLDFIRE || ! ADDRESS_REG_P (operands[0]))\n@@ -6438,7 +6380,7 @@\n       /* On an address reg, cmpw may replace cmpl.  */\n       output_asm_insn(\"cmp%.w #0,%0\", operands);\n     }\n-  return MOTOROLA ? \"jbpl %l1\" : \"jpl %l1\";\n+  return \"jpl %l1\";\n })\n \n (define_insn \"blt0_di\"\n@@ -6455,14 +6397,7 @@\n       && rtx_equal_p (cc_prev_status.value2, operands[0])))\n     {\n       cc_status = cc_prev_status;\n-      if (cc_status.flags & CC_REVERSED)\n-\t{\n-\t  return MOTOROLA ? \"jbgt %l1\" : \"jgt %l1\";\n-\t}\n-      else\n-\t{\n-\t  return MOTOROLA ? \"jbmi %l1\" : \"jmi %l1\";\n-\t}\n+      return cc_status.flags & CC_REVERSED ? \"jgt %l1\" : \"jmi %l1\";\n     }\n   CC_STATUS_INIT;\n   if (TARGET_68020 || TARGET_COLDFIRE || ! ADDRESS_REG_P (operands[0]))\n@@ -6472,8 +6407,7 @@\n       /* On an address reg, cmpw may replace cmpl.  */\n       output_asm_insn(\"cmp%.w #0,%0\", operands);\n     }\n-\n-  return MOTOROLA ? \"jbmi %l1\" : \"jmi %l1\";\n+  return \"jmi %l1\";\n })\n \n (define_insn \"beq\"\n@@ -6522,9 +6456,7 @@\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))]\n   \"\"\n-{\n-  return MOTOROLA ? \"jbhi %l0\" : \"jhi %l0\";\n-}\n+  \"jhi %l0\"\n   [(set_attr \"type\" \"bcc\")])\n \n (define_insn \"blt\"\n@@ -6547,9 +6479,7 @@\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))]\n   \"\"\n-{\n-  return MOTOROLA ? \"jbcs %l0\" : \"jcs %l0\";\n-}\n+  \"jcs %l0\"\n   [(set_attr \"type\" \"bcc\")])\n \n (define_insn \"bge\"\n@@ -6570,9 +6500,7 @@\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))]\n   \"\"\n-{\n-  return MOTOROLA ? \"jbcc %l0\" : \"jcc %l0\";\n-}\n+  \"jcc %l0\"\n   [(set_attr \"type\" \"bcc\")])\n \n (define_insn \"ble\"\n@@ -6594,9 +6522,7 @@\n \t\t      (label_ref (match_operand 0 \"\" \"\"))\n \t\t      (pc)))]\n   \"\"\n-{\n-  return MOTOROLA ? \"jbls %l0\" : \"jls %l0\";\n-}\n+  \"jls %l0\"\n   [(set_attr \"type\" \"bcc\")])\n \n (define_insn \"bordered\"\n@@ -6725,16 +6651,14 @@\n }\n   [(set_attr \"type\" \"bcc\")])\n \n-(define_insn \"*bgtu2\"\n+(define_insn \"*bgtu_rev\"\n   [(set (pc)\n \t(if_then_else (gtu (cc0)\n \t\t\t   (const_int 0))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))]\n   \"\"\n-{\n-  return MOTOROLA ? \"jbls %l0\" : \"jls %l0\";\n-}\n+  \"jls %l0\"\n   [(set_attr \"type\" \"bcc\")])\n \n (define_insn \"*blt_rev\"\n@@ -6749,16 +6673,14 @@\n }\n   [(set_attr \"type\" \"bcc\")])\n \n-(define_insn \"*bltu2\"\n+(define_insn \"*bltu_rev\"\n   [(set (pc)\n \t(if_then_else (ltu (cc0)\n \t\t\t   (const_int 0))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))]\n   \"\"\n-{\n-  return MOTOROLA ? \"jbcc %l0\" : \"jcc %l0\";\n-}\n+  \"jcc %l0\"\n   [(set_attr \"type\" \"bcc\")])\n \n (define_insn \"*bge_rev\"\n@@ -6773,16 +6695,14 @@\n }\n   [(set_attr \"type\" \"bcc\")])\n \n-(define_insn \"*bgeu2\"\n+(define_insn \"*bgeu_rev\"\n   [(set (pc)\n \t(if_then_else (geu (cc0)\n \t\t\t   (const_int 0))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))]\n   \"\"\n-{\n-  return MOTOROLA ? \"jbcs %l0\" : \"jcs %l0\";\n-}\n+  \"jcs %l0\"\n   [(set_attr \"type\" \"bcc\")])\n \n (define_insn \"*ble_rev\"\n@@ -6797,16 +6717,14 @@\n }\n   [(set_attr \"type\" \"bcc\")])\n \n-(define_insn \"*bleu2\"\n+(define_insn \"*bleu_rev\"\n   [(set (pc)\n \t(if_then_else (leu (cc0)\n \t\t\t   (const_int 0))\n \t\t      (pc)\n \t\t      (label_ref (match_operand 0 \"\" \"\"))))]\n   \"\"\n-{\n-  return MOTOROLA ? \"jbhi %l0\" : \"jhi %l0\";\n-}\n+  \"jhi %l0\"\n   [(set_attr \"type\" \"bcc\")])\n \n (define_insn \"*bordered_rev\"\n@@ -6902,9 +6820,7 @@\n   [(set (pc)\n \t(label_ref (match_operand 0 \"\" \"\")))]\n   \"\"\n-{\n-  return MOTOROLA ? \"jbra %l0\" : \"jra %l0\";\n-}\n+  \"jra %l0\"\n   [(set_attr \"type\" \"bra\")])\n \n (define_expand \"tablejump\"\n@@ -6954,7 +6870,7 @@\n })\n \n ;; Decrement-and-branch insns.\n-(define_insn \"\"\n+(define_insn \"*dbne_hi\"\n   [(set (pc)\n \t(if_then_else\n \t (ne (match_operand:HI 0 \"nonimmediate_operand\" \"+d*g\")\n@@ -6970,15 +6886,11 @@\n   if (DATA_REG_P (operands[0]))\n     return \"dbra %0,%l1\";\n   if (GET_CODE (operands[0]) == MEM)\n-    return MOTOROLA ?\n-      \"subq%.w #1,%0\\;jbcc %l1\" :\n-      \"subqw #1,%0\\;jcc %l1\";\n-  return MOTOROLA ?\n-    \"subq%.w #1,%0\\;cmp%.w #-1,%0\\;jbne %l1\" :\n-    \"subqw #1,%0\\;cmpw #-1,%0\\;jne %l1\";\n+    return \"subq%.w #1,%0\\;jcc %l1\";\n+  return \"subq%.w #1,%0\\;cmp%.w #-1,%0\\;jne %l1\";\n })\n \n-(define_insn \"\"\n+(define_insn \"*dbne_si\"\n   [(set (pc)\n \t(if_then_else\n \t (ne (match_operand:SI 0 \"nonimmediate_operand\" \"+d*g\")\n@@ -6992,21 +6904,15 @@\n {\n   CC_STATUS_INIT;\n   if (DATA_REG_P (operands[0]))\n-    return MOTOROLA ?\n-      \"dbra %0,%l1\\;clr%.w %0\\;subq%.l #1,%0\\;jbcc %l1\" :\n-      \"dbra %0,%l1\\;clr%.w %0\\;subq%.l #1,%0\\;jcc %l1\";\n+    return \"dbra %0,%l1\\;clr%.w %0\\;subq%.l #1,%0\\;jcc %l1\";\n   if (GET_CODE (operands[0]) == MEM)\n-    return MOTOROLA ?\n-      \"subq%.l #1,%0\\;jbcc %l1\" :\n-      \"subq%.l #1,%0\\;jcc %l1\";\n-  return MOTOROLA ?\n-    \"subq.l #1,%0\\;cmp.l #-1,%0\\;jbne %l1\" :\n-    \"subql #1,%0\\;cmpl #-1,%0\\;jne %l1\";\n+    return \"subq%.l #1,%0\\;jcc %l1\";\n+  return \"subq%.l #1,%0\\;cmp%.l #-1,%0\\;jne %l1\";\n })\n \n ;; Two dbra patterns that use REG_NOTES info generated by strength_reduce.\n \n-(define_insn \"\"\n+(define_insn \"*dbge_hi\"\n   [(set (pc)\n \t(if_then_else\n \t  (ge (plus:HI (match_operand:HI 0 \"nonimmediate_operand\" \"+d*am\")\n@@ -7023,12 +6929,8 @@\n   if (DATA_REG_P (operands[0]))\n     return \"dbra %0,%l1\";\n   if (GET_CODE (operands[0]) == MEM)\n-    return MOTOROLA ?\n-      \"subq%.w #1,%0\\;jbcc %l1\" :\n-      \"subq%.w #1,%0\\;jcc %l1\";\n-  return MOTOROLA ?\n-    \"subq.w #1,%0\\;cmp.w #-1,%0\\;jbne %l1\" :\n-    \"subqw #1,%0\\;cmpw #-1,%0\\;jne %l1\";\n+    return \"subq%.w #1,%0\\;jcc %l1\";\n+  return \"subq%.w #1,%0\\;cmp%.w #-1,%0\\;jne %l1\";\n })\n \n (define_expand \"decrement_and_branch_until_zero\"\n@@ -7045,7 +6947,7 @@\n   \"\"\n   \"\")\n \n-(define_insn \"\"\n+(define_insn \"*dbge_si\"\n   [(set (pc)\n \t(if_then_else\n \t  (ge (plus:SI (match_operand:SI 0 \"nonimmediate_operand\" \"+d*am\")\n@@ -7060,16 +6962,10 @@\n {\n   CC_STATUS_INIT;\n   if (DATA_REG_P (operands[0]))\n-    return MOTOROLA ?\n-      \"dbra %0,%l1\\;clr%.w %0\\;subq%.l #1,%0\\;jbcc %l1\" :\n-      \"dbra %0,%l1\\;clr%.w %0\\;subql #1,%0\\;jcc %l1\";\n+    return \"dbra %0,%l1\\;clr%.w %0\\;subq%.l #1,%0\\;jcc %l1\";\n   if (GET_CODE (operands[0]) == MEM)\n-    return MOTOROLA ?\n-      \"subq%.l #1,%0\\;jbcc %l1\" :\n-      \"subql #1,%0\\;jcc %l1\";\n-  return MOTOROLA ?\n-    \"subq.l #1,%0\\;cmp.l #-1,%0\\;jbne %l1\" :\n-    \"subql #1,%0\\;cmpl #-1,%0\\;jne %l1\";\n+    return \"subq%.l #1,%0\\;jcc %l1\";\n+  return \"subq%.l #1,%0\\;cmp%.l #-1,%0\\;jne %l1\";\n })\n \n (define_expand \"sibcall\""}]}