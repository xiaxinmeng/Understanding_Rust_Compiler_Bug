{"sha": "338725652f84793805c55f08a7607c2f45d5512b", "node_id": "C_kwDOANBUbNoAKDMzODcyNTY1MmY4NDc5MzgwNWM1NWYwOGE3NjA3YzJmNDVkNTUxMmI", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-10-11T12:31:59Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-10-11T14:41:49Z"}, "message": "middle-end/102683 - fix .DEFERRED_INIT expansion\n\nThis avoids using an integer type for which we don't have an\napproprate mode when expanding .DEFERRED_INIT to a non-memory\nentity.\n\n2021-10-11  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/102683\n\t* internal-fn.c (expand_DEFERRED_INIT): Check for mode\n\tavailability before building an integer type for storage\n\tpurposes.", "tree": {"sha": "75e4dce1c0a734ae0cf1cf7ba0221c1ff1cc1c84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75e4dce1c0a734ae0cf1cf7ba0221c1ff1cc1c84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/338725652f84793805c55f08a7607c2f45d5512b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/338725652f84793805c55f08a7607c2f45d5512b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/338725652f84793805c55f08a7607c2f45d5512b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/338725652f84793805c55f08a7607c2f45d5512b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09a0affdb0598a54835ac4bb0dd6b54122c12916", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09a0affdb0598a54835ac4bb0dd6b54122c12916", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09a0affdb0598a54835ac4bb0dd6b54122c12916"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "b3638192fb9062752a699410bda2600eb2c018e2", "filename": "gcc/internal-fn.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/338725652f84793805c55f08a7607c2f45d5512b/gcc%2Finternal-fn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/338725652f84793805c55f08a7607c2f45d5512b/gcc%2Finternal-fn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finternal-fn.c?ref=338725652f84793805c55f08a7607c2f45d5512b", "patch": "@@ -3074,7 +3074,9 @@ expand_DEFERRED_INIT (internal_fn, gcall *stmt)\n       tree init;\n       if (tree_fits_uhwi_p (var_size)\n \t  && (init_type == AUTO_INIT_PATTERN\n-\t      || !is_gimple_reg_type (var_type)))\n+\t      || !is_gimple_reg_type (var_type))\n+\t  && int_mode_for_size (tree_to_uhwi (var_size) * BITS_PER_UNIT,\n+\t\t\t\t0).exists ())\n \t{\n \t  unsigned HOST_WIDE_INT total_bytes = tree_to_uhwi (var_size);\n \t  unsigned char *buf = (unsigned char *) xmalloc (total_bytes);"}]}