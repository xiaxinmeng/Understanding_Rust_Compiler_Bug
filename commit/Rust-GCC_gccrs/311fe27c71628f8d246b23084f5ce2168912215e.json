{"sha": "311fe27c71628f8d246b23084f5ce2168912215e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzExZmUyN2M3MTYyOGY4ZDI0NmIyMzA4NGY1Y2UyMTY4OTEyMjE1ZQ==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@cygnus.co.uk", "date": "1999-11-29T10:51:09Z"}, "committer": {"name": "Bernd Schmidt", "email": "crux@gcc.gnu.org", "date": "1999-11-29T10:51:09Z"}, "message": "Fix abort in loop_iterations\n\nFrom-SVN: r30698", "tree": {"sha": "f08204689c9adc2076a0256c4af56c7c2c60a5c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f08204689c9adc2076a0256c4af56c7c2c60a5c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/311fe27c71628f8d246b23084f5ce2168912215e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/311fe27c71628f8d246b23084f5ce2168912215e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/311fe27c71628f8d246b23084f5ce2168912215e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/311fe27c71628f8d246b23084f5ce2168912215e/comments", "author": null, "committer": null, "parents": [{"sha": "83c23b6c72aaf1554c0cf2b138ae04c018ec5c94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83c23b6c72aaf1554c0cf2b138ae04c018ec5c94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83c23b6c72aaf1554c0cf2b138ae04c018ec5c94"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "717e1e2599df2da58b5102ce78a3838b6b7affa0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/311fe27c71628f8d246b23084f5ce2168912215e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/311fe27c71628f8d246b23084f5ce2168912215e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=311fe27c71628f8d246b23084f5ce2168912215e", "patch": "@@ -1,3 +1,8 @@\n+1999-11-29  Bernd Schmidt  <bernds@cygnus.co.uk>\n+\n+\t* unroll.c (loop_iterations): Don't abort if iteration variable\n+\twas made by loop.\n+\n 1999-11-29  David S. Miller  <davem@redhat.com>\n \n \t* config/sparc/sparc.c (init_cumulative_args): Fix type of third"}, {"sha": "94451e1717bae3c5c74c2ce11e06059645bf3bcf", "filename": "gcc/unroll.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/311fe27c71628f8d246b23084f5ce2168912215e/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/311fe27c71628f8d246b23084f5ce2168912215e/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=311fe27c71628f8d246b23084f5ce2168912215e", "patch": "@@ -3687,11 +3687,9 @@ loop_iterations (loop_start, loop_end, loop_info)\n       return 0;\n     }\n \n-  /* The only new registers that care created before loop iterations are\n-     givs made from biv increments, so this should never occur.  */\n-\n+  /* This can happen due to optimization in load_mems.  */\n   if ((unsigned) REGNO (iteration_var) >= reg_iv_type->num_elements)\n-    abort ();\n+    return 0;\n \n   iteration_info (iteration_var, &initial_value, &increment,\n \t\t  loop_start, loop_end);"}]}