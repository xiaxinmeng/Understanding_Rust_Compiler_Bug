{"sha": "5708155960d0abd5f30e12e9477f946c60da43c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTcwODE1NTk2MGQwYWJkNWYzMGUxMmU5NDc3Zjk0NmM2MGRhNDNjOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-25T10:31:36Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-04-25T10:31:36Z"}, "message": "[multiple changes]\n\n2013-04-25  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch4.adb (Analyze_Quantified_Expression):\n\tAdd local variable Loop_Id. Verify that the loop variable\n\tis used within the condition of the quantified expression.\n\t(Referenced): New routine.\n\n2013-04-25  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_case.adb (Analyze_Choices): Enhance the error message\n\tgiven on a bad use of subtype predicate.\n\t* sem_ch5.adb (Analyze_Loop_Parameter_Specification): Enhance\n\tthe error message given on a bad use of subtype predicate.\n\t* sem_util.adb (Bad_Predicated_Subtype_Use): Add formal parameter\n\tSuggest_Static. Emit an extra error message advising how to\n\tremedy the bad use of the predicate if the context warrants it.\n\t* sem_util.ads (Bad_Predicated_Subtype_Use): Add formal parameter\n\tSuggest_Static along with a comment explaining its usage.\n\n2013-04-25  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_disp.adb (Check_Dispatching_Operation): Further refinement\n\tto checks for AI05-0125: the check for a hidden primitive that\n\tmay be overridden by the new declaration only applies if the\n\thidden operation is never declared. This is not the case if the\n\toperation is declared in a parent unit.\n\nFrom-SVN: r198288", "tree": {"sha": "07a7fa542ef43428eaa03bf75cb41942d3c95bab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07a7fa542ef43428eaa03bf75cb41942d3c95bab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5708155960d0abd5f30e12e9477f946c60da43c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5708155960d0abd5f30e12e9477f946c60da43c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5708155960d0abd5f30e12e9477f946c60da43c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5708155960d0abd5f30e12e9477f946c60da43c8/comments", "author": null, "committer": null, "parents": [{"sha": "0812b84e77d5b5d187ea4c75841e4569f016612f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0812b84e77d5b5d187ea4c75841e4569f016612f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0812b84e77d5b5d187ea4c75841e4569f016612f"}], "stats": {"total": 138, "additions": 117, "deletions": 21}, "files": [{"sha": "a3e8f8325bb93b7218e2f8fb1c5e7d05ea94669d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5708155960d0abd5f30e12e9477f946c60da43c8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5708155960d0abd5f30e12e9477f946c60da43c8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5708155960d0abd5f30e12e9477f946c60da43c8", "patch": "@@ -1,3 +1,30 @@\n+2013-04-25  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch4.adb (Analyze_Quantified_Expression):\n+\tAdd local variable Loop_Id. Verify that the loop variable\n+\tis used within the condition of the quantified expression.\n+\t(Referenced): New routine.\n+\n+2013-04-25  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_case.adb (Analyze_Choices): Enhance the error message\n+\tgiven on a bad use of subtype predicate.\n+\t* sem_ch5.adb (Analyze_Loop_Parameter_Specification): Enhance\n+\tthe error message given on a bad use of subtype predicate.\n+\t* sem_util.adb (Bad_Predicated_Subtype_Use): Add formal parameter\n+\tSuggest_Static. Emit an extra error message advising how to\n+\tremedy the bad use of the predicate if the context warrants it.\n+\t* sem_util.ads (Bad_Predicated_Subtype_Use): Add formal parameter\n+\tSuggest_Static along with a comment explaining its usage.\n+\n+2013-04-25  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_disp.adb (Check_Dispatching_Operation): Further refinement\n+\tto checks for AI05-0125: the check for a hidden primitive that\n+\tmay be overridden by the new declaration only applies if the\n+\thidden operation is never declared. This is not the case if the\n+\toperation is declared in a parent unit.\n+\n 2013-04-25  Robert Dewar  <dewar@adacore.com>\n \n \t* debug.adb: Remove d.X and d.Y entries and documentation."}, {"sha": "515d2a6009e0a28a56a2fa99b8c5cf0de250656b", "filename": "gcc/ada/sem_case.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5708155960d0abd5f30e12e9477f946c60da43c8/gcc%2Fada%2Fsem_case.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5708155960d0abd5f30e12e9477f946c60da43c8/gcc%2Fada%2Fsem_case.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.adb?ref=5708155960d0abd5f30e12e9477f946c60da43c8", "patch": "@@ -1260,7 +1260,8 @@ package body Sem_Case is\n                            then\n                               Bad_Predicated_Subtype_Use\n                                 (\"cannot use subtype& with non-static \"\n-                                 & \"predicate as case alternative\", Choice, E);\n+                                 & \"predicate as case alternative\", Choice, E,\n+                                 Suggest_Static => True);\n \n                               --  Static predicate case\n "}, {"sha": "d54d992e7a1626452b47899d99531201bce44823", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 57, "deletions": 2, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5708155960d0abd5f30e12e9477f946c60da43c8/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5708155960d0abd5f30e12e9477f946c60da43c8/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=5708155960d0abd5f30e12e9477f946c60da43c8", "patch": "@@ -3510,6 +3510,9 @@ package body Sem_Ch4 is\n       --  Determine whether if expression If_Expr lacks an else part or if it\n       --  has one, it evaluates to True.\n \n+      function Referenced (Id : Entity_Id; Expr : Node_Id) return Boolean;\n+      --  Determine whether entity Id is referenced within expression Expr\n+\n       --------------------\n       -- Is_Empty_Range --\n       --------------------\n@@ -3561,9 +3564,44 @@ package body Sem_Ch4 is\n                        and then Is_True (Expr_Value (Else_Expr)));\n       end No_Else_Or_Trivial_True;\n \n+      ----------------\n+      -- Referenced --\n+      ----------------\n+\n+      function Referenced (Id : Entity_Id; Expr : Node_Id) return Boolean is\n+         Seen : Boolean := False;\n+\n+         function Is_Reference (N : Node_Id) return Traverse_Result;\n+         --  Determine whether node N denotes a reference to Id. If this is the\n+         --  case, set global flag Seen to True and stop the traversal.\n+\n+         function Is_Reference (N : Node_Id) return Traverse_Result is\n+         begin\n+            if Is_Entity_Name (N)\n+              and then Present (Entity (N))\n+              and then Entity (N) = Id\n+            then\n+               Seen := True;\n+               return Abandon;\n+            else\n+               return OK;\n+            end if;\n+         end Is_Reference;\n+\n+         procedure Inspect_Expression is new Traverse_Proc (Is_Reference);\n+\n+      --  Start of processing for Referenced\n+\n+      begin\n+         Inspect_Expression (Expr);\n+\n+         return Seen;\n+      end Referenced;\n+\n       --  Local variables\n \n       Cond    : constant Node_Id := Condition (N);\n+      Loop_Id : Entity_Id;\n       QE_Scop : Entity_Id;\n \n    --  Start of processing for Analyze_Quantified_Expression\n@@ -3590,22 +3628,39 @@ package body Sem_Ch4 is\n       if Present (Iterator_Specification (N)) then\n          Preanalyze (Iterator_Specification (N));\n \n+         --  Do not proceed with the analysis when the range of iteration is\n+         --  empty. The appropriate error is issued by Is_Empty_Range.\n+\n          if Is_Entity_Name (Name (Iterator_Specification (N)))\n            and then Is_Empty_Range (Etype (Name (Iterator_Specification (N))))\n          then\n             return;\n          end if;\n \n-      else\n+      else pragma Assert (Present (Loop_Parameter_Specification (N)));\n          Preanalyze (Loop_Parameter_Specification (N));\n       end if;\n \n       Preanalyze_And_Resolve (Cond, Standard_Boolean);\n \n       End_Scope;\n-\n       Set_Etype (N, Standard_Boolean);\n \n+      --  Verify that the loop variable is used within the condition of the\n+      --  quantified expression.\n+\n+      if Present (Iterator_Specification (N)) then\n+         Loop_Id := Defining_Identifier (Iterator_Specification (N));\n+      else\n+         Loop_Id := Defining_Identifier (Loop_Parameter_Specification (N));\n+      end if;\n+\n+      if Warn_On_Suspicious_Contract\n+        and then not Referenced (Loop_Id, Cond)\n+      then\n+         Error_Msg_N (\"?T?unused variable &\", Loop_Id);\n+      end if;\n+\n       --  Diagnose a possible misuse of the \"some\" existential quantifier. When\n       --  we have a quantified expression of the form\n       --"}, {"sha": "5b34ecc347b524df98b1b9240c4470bde09357e7", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5708155960d0abd5f30e12e9477f946c60da43c8/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5708155960d0abd5f30e12e9477f946c60da43c8/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=5708155960d0abd5f30e12e9477f946c60da43c8", "patch": "@@ -2310,7 +2310,7 @@ package body Sem_Ch5 is\n          then\n             Bad_Predicated_Subtype_Use\n               (\"cannot use subtype& with non-static predicate for loop \" &\n-               \"iteration\", DS, Entity (DS));\n+               \"iteration\", DS, Entity (DS), Suggest_Static => True);\n          end if;\n       end if;\n "}, {"sha": "9f80a7dcea1dc8432abd9646df51cbca39135f08", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5708155960d0abd5f30e12e9477f946c60da43c8/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5708155960d0abd5f30e12e9477f946c60da43c8/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=5708155960d0abd5f30e12e9477f946c60da43c8", "patch": "@@ -44,6 +44,7 @@ with Sem;      use Sem;\n with Sem_Aux;  use Sem_Aux;\n with Sem_Ch3;  use Sem_Ch3;\n with Sem_Ch6;  use Sem_Ch6;\n+with Sem_Ch8;  use Sem_Ch8;\n with Sem_Eval; use Sem_Eval;\n with Sem_Type; use Sem_Type;\n with Sem_Util; use Sem_Util;\n@@ -1867,12 +1868,14 @@ package body Sem_Disp is\n       Vis_List  : Elist_Id;\n \n    begin\n-      --  This Ada 2012 rule is valid only for type extensions or private\n-      --  extensions.\n+      --  This Ada 2012 rule applies only for type extensions or private\n+      --  extensions, where the parent type is not in a parent unit, and\n+      --  where an operation is never declared but still inherited.\n \n       if No (Tag_Typ)\n         or else not Is_Record_Type (Tag_Typ)\n         or else Etype (Tag_Typ) = Tag_Typ\n+        or else In_Open_Scopes (Scope (Etype (Tag_Typ)))\n       then\n          return Empty;\n       end if;"}, {"sha": "dbee4fd8fcad8db1842bdd448dcd531a639d20db", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5708155960d0abd5f30e12e9477f946c60da43c8/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5708155960d0abd5f30e12e9477f946c60da43c8/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=5708155960d0abd5f30e12e9477f946c60da43c8", "patch": "@@ -449,9 +449,10 @@ package body Sem_Util is\n    --------------------------------\n \n    procedure Bad_Predicated_Subtype_Use\n-     (Msg : String;\n-      N   : Node_Id;\n-      Typ : Entity_Id)\n+     (Msg            : String;\n+      N              : Node_Id;\n+      Typ            : Entity_Id;\n+      Suggest_Static : Boolean := False)\n    is\n    begin\n       if Has_Predicates (Typ) then\n@@ -465,6 +466,13 @@ package body Sem_Util is\n          else\n             Error_Msg_FE (Msg, N, Typ);\n          end if;\n+\n+         --  Emit an optional suggestion on how to remedy the error if the\n+         --  context warrants it.\n+\n+         if Suggest_Static and then Present (Static_Predicate (Typ)) then\n+            Error_Msg_FE (\"\\predicate of & should be marked static\", N, Typ);\n+         end if;\n       end if;\n    end Bad_Predicated_Subtype_Use;\n "}, {"sha": "c9b5da6c941a8505589766246d30cad9c53c1c34", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5708155960d0abd5f30e12e9477f946c60da43c8/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5708155960d0abd5f30e12e9477f946c60da43c8/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=5708155960d0abd5f30e12e9477f946c60da43c8", "patch": "@@ -122,19 +122,21 @@ package Sem_Util is\n    --  is an error.\n \n    procedure Bad_Predicated_Subtype_Use\n-     (Msg : String;\n-      N   : Node_Id;\n-      Typ : Entity_Id);\n+     (Msg            : String;\n+      N              : Node_Id;\n+      Typ            : Entity_Id;\n+      Suggest_Static : Boolean := False);\n    --  This is called when Typ, a predicated subtype, is used in a context\n-   --  which does not allow the use of a predicated subtype. Msg is passed\n-   --  to Error_Msg_FE to output an appropriate message using N as the\n-   --  location, and Typ as the entity. The caller must set up any insertions\n-   --  other than the & for the type itself. Note that if Typ is a generic\n-   --  actual type, then the message will be output as a warning, and a\n-   --  raise Program_Error is inserted using Insert_Action with node N as\n-   --  the insertion point. Node N also supplies the source location for\n-   --  construction of the raise node. If Typ is NOT a type with predicates\n-   --  this call has no effect.\n+   --  which does not allow the use of a predicated subtype. Msg is passed to\n+   --  Error_Msg_FE to output an appropriate message using N as the location,\n+   --  and Typ as the entity. The caller must set up any insertions other than\n+   --  the & for the type itself. Note that if Typ is a generic actual type,\n+   --  then the message will be output as a warning, and a raise Program_Error\n+   --  is inserted using Insert_Action with node N as the insertion point. Node\n+   --  N also supplies the source location for construction of the raise node.\n+   --  If Typ does not have any predicates, the call has no effect. Set flag\n+   --  Suggest_Static when the context warrants an advice on how to avoid the\n+   --  use error.\n \n    function Build_Actual_Subtype\n      (T : Entity_Id;"}]}