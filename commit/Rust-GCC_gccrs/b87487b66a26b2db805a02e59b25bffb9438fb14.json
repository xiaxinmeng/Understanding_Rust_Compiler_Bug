{"sha": "b87487b66a26b2db805a02e59b25bffb9438fb14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg3NDg3YjY2YTI2YjJkYjgwNWEwMmU1OWIyNWJmZmI5NDM4ZmIxNA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2000-07-28T02:10:47Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2000-07-28T02:10:47Z"}, "message": "Makefile.in (FLAGS_FOR_TARGET): New macro.\n\n* Makefile.in (FLAGS_FOR_TARGET): New macro.\n(GCC_FOR_TARGET): Use it.\n(CC_FOR_TARGET, CXX_FOR_TARGET, CHILL_FOR_TARGET): Now defined...\n* configure.in: ... here.\n(FLAGS_FOR_TARGET): Define.  Add ld build dir to -L path.\n(libstdcxx_flags): Define and append to CXX_FOR_TARGET.\n\nFrom-SVN: r35306", "tree": {"sha": "3d1a7a74ce171691f9aa5cbd7e3e37a1def9e773", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d1a7a74ce171691f9aa5cbd7e3e37a1def9e773"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b87487b66a26b2db805a02e59b25bffb9438fb14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b87487b66a26b2db805a02e59b25bffb9438fb14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b87487b66a26b2db805a02e59b25bffb9438fb14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b87487b66a26b2db805a02e59b25bffb9438fb14/comments", "author": null, "committer": null, "parents": [{"sha": "fff14bb32f496a5f6fbbd49a8343e84e14407f49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fff14bb32f496a5f6fbbd49a8343e84e14407f49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fff14bb32f496a5f6fbbd49a8343e84e14407f49"}], "stats": {"total": 146, "additions": 89, "deletions": 57}, "files": [{"sha": "94bf0e19593df147600fca868e00f71451763e7f", "filename": "ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b87487b66a26b2db805a02e59b25bffb9438fb14/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b87487b66a26b2db805a02e59b25bffb9438fb14/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=b87487b66a26b2db805a02e59b25bffb9438fb14", "patch": "@@ -1,3 +1,12 @@\n+2000-07-27  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* Makefile.in (FLAGS_FOR_TARGET): New macro.\n+\t(GCC_FOR_TARGET): Use it.\n+\t(CC_FOR_TARGET, CXX_FOR_TARGET, CHILL_FOR_TARGET): Now defined...\n+\t* configure.in: ... here.\n+\t(FLAGS_FOR_TARGET): Define.  Add ld build dir to -L path.\n+\t(libstdcxx_flags): Define and append to CXX_FOR_TARGET.\n+\n 2000-07-24  Eric Christopher  <echristo@cygnus.com>\n \n \t* MAINTAINERS: Add self to Write After Approval list."}, {"sha": "cac1bbd9d67046d86241d288f1b32ba10170185b", "filename": "Makefile.in", "status": "modified", "additions": 7, "deletions": 56, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b87487b66a26b2db805a02e59b25bffb9438fb14/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b87487b66a26b2db805a02e59b25bffb9438fb14/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=b87487b66a26b2db805a02e59b25bffb9438fb14", "patch": "@@ -210,66 +210,17 @@ INSTALL_TARGET_CROSS = installdirs \\\n \t$(INSTALL_X11_MODULES) \\\n \t$(INSTALL_DOSREL)\n \n-CC_FOR_TARGET = ` \\\n-  if [ -f $$r/gcc/xgcc ] ; then \\\n-    if [ -f $$r/$(TARGET_SUBDIR)/newlib/Makefile ] ; then \\\n-      case \"$(target_canonical)\" in \\\n-        i[3456]86-*-cygwin*) \\\n-          echo $$r/gcc/xgcc -B$(build_tooldir)/bin/ -B$$r/$(TARGET_SUBDIR)/newlib/ -B$$r/gcc/ -L$$r/$(TARGET_SUBDIR)/winsup -L$$r/$(TARGET_SUBDIR)/winsup/cygwin -L$$r/$(TARGET_SUBDIR)/winsup/w32api/lib -idirafter $$r/$(TARGET_SUBDIR)/newlib/targ-include -idirafter $$s/winsup/include -idirafter $$s/winsup/cygwin/include -idirafter $$s/winsup/w32api/include -idirafter $$s/newlib/libc/include -idirafter $$s/newlib/libc/sys/cygwin -idirafter $$s/newlib/libc/sys/cygwin32 -nostdinc; \\\n-          ;; \\\n-        *) \\\n-          echo $$r/gcc/xgcc -B$(build_tooldir)/bin/ -B$$r/$(TARGET_SUBDIR)/newlib/ -B$$r/gcc/ -idirafter $$r/$(TARGET_SUBDIR)/newlib/targ-include -idirafter $$s/newlib/libc/include -nostdinc; \\\n-\t  ;; \\\n-      esac \\\n-    else \\\n-      echo $$r/gcc/xgcc -B$(build_tooldir)/bin/ -B$(build_tooldir)/lib/ -B$$r/gcc/ -isystem $(build_tooldir)/include; \\\n-    fi; \\\n-  else \\\n-    if [ \"$(host_canonical)\" = \"$(target_canonical)\" ] ; then \\\n-      echo $(CC); \\\n-    else \\\n-      t='$(program_transform_name)'; echo gcc | sed -e 's/x/x/' $$t; \\\n-    fi; \\\n-  fi`\n+# Should be substed by configure.in\n+FLAGS_FOR_TARGET =\n+CC_FOR_TARGET =\n+CHILL_FOR_TARGET =\n+CXX_FOR_TARGET =\n \n-# If CC_FOR_TARGET is not overriden on the command line, then this\n+# If GCC_FOR_TARGET is not overriden on the command line, then this\n # variable is passed down to the gcc Makefile, where it is used to\n # build libgcc2.a.  We define it here so that it can itself be\n # overridden on the command line.\n-GCC_FOR_TARGET = $$r/gcc/xgcc -B$(build_tooldir)/bin/ -B$(build_tooldir)/lib/ -B$$r/gcc/ -isystem $(build_tooldir)/include\n-\n-CHILL_FOR_TARGET = ` \\\n-  if [ -f $$r/gcc/xgcc ] ; then \\\n-    echo $$r/gcc/xgcc -B$(build_tooldir)/bin/ -B$(build_tooldir)/lib/ -B$$r/gcc/ -L$$r/gcc/ch/runtime/; \\\n-  else \\\n-    if [ \"$(host_canonical)\" = \"$(target_canonical)\" ] ; then \\\n-      echo $(CC); \\\n-    else \\\n-      t='$(program_transform_name)'; echo gcc | sed -e 's/x/x/' $$t; \\\n-    fi; \\\n-  fi`\n-\n-CXX_FOR_TARGET = ` \\\n-  if [ -f $$r/gcc/g++ ] ; then \\\n-    if [ -f $$r/$(TARGET_SUBDIR)/newlib/Makefile ] ; then \\\n-      case \"$(target_canonical)\" in \\\n-        i[3456]86-*-cygwin*) \\\n-          echo $$r/gcc/g++ -B$(build_tooldir)/bin/ -B$$r/$(TARGET_SUBDIR)/newlib/ -B$$r/gcc/ -L$$r/$(TARGET_SUBDIR)/winsup -idirafter $$r/$(TARGET_SUBDIR)/newlib/targ-include -idirafter $$s/winsup/cygwin/include -idirafter $$s/winsup/w32api/include -idirafter $$s/newlib/libc/include -idirafter $$s/newlib/libc/sys/cygwin -idirafter $$s/newlib/libc/sys/cygwin32 -nostdinc -L$$r/$(TARGET_SUBDIR)/libstdc++; \\\n-          ;; \\\n-        *) \\\n-          echo $$r/gcc/g++ -B$(build_tooldir)/bin/ -B$$r/$(TARGET_SUBDIR)/newlib/ -B$$r/gcc/ -idirafter $$r/$(TARGET_SUBDIR)/newlib/targ-include -idirafter $$s/newlib/libc/include -nostdinc -L$$r/$(TARGET_SUBDIR)/libstdc++; \\\n-\t  ;; \\\n-      esac \\\n-    else \\\n-      echo $$r/gcc/g++ -B$(build_tooldir)/bin/ -B$(build_tooldir)/lib/ -B$$r/gcc/ -isystem $(build_tooldir)/include -L$$r/$(TARGET_SUBDIR)/libstdc++; \\\n-    fi; \\\n-  else \\\n-    if [ \"$(host_canonical)\" = \"$(target_canonical)\" ] ; then \\\n-      echo $(CXX); \\\n-    else \\\n-      t='$(program_transform_name)'; echo c++ | sed -e 's/x/x/' $$t; \\\n-    fi; \\\n-  fi`\n+GCC_FOR_TARGET = $$r/gcc/xgcc $(FLAGS_FOR_TARGET)\n \n AS_FOR_TARGET = ` \\\n   if [ -f $$r/gas/as-new ] ; then \\"}, {"sha": "0464df9c35f179e323c60684f65666282b1f37af", "filename": "configure.in", "status": "modified", "additions": 73, "deletions": 1, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b87487b66a26b2db805a02e59b25bffb9438fb14/configure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b87487b66a26b2db805a02e59b25bffb9438fb14/configure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.in?ref=b87487b66a26b2db805a02e59b25bffb9438fb14", "patch": "@@ -48,10 +48,13 @@ if [ \"${enable_gdbgui}\" = \"yes\" ] ; then\n fi\n \n # Set up configure/Makefile variables if libstdc++-v3 is to be built.\n-if [ \"${enable_libstdcxx_v3}\" = \"yes\" ] ; then\n+if [ \"${enable_libstdcxx_v3}\" = \"yes\" ] && test -d $srcdir/libstdc++-v3; then\n         libstdcxx_version=\"target-libstdc++-v3\"\n+\t# Don't use libstdc++-v3's flags to configure/build itself.\n+\tlibstdcxx_flags='`test \"x$$dir\" != xlibstdc++-v3 && test -f $$r/$(TARGET_SUBDIR)/libstdc++-v3/mkcheck && $(SHELL) $$r/$(TARGET_SUBDIR)/libstdc++-v3/mkcheck 2 $$r/$(TARGET_SUBDIR)/libstdc++-v3 $$s/libstdc++-v3 | sed -e \"s/-I/-isystem /g\"` -L$$r/$(TARGET_SUBDIR)/libstd++-v3/src -L$$r/$(TARGET_SUBDIR)/libstd++-v3/src/.libs'\n else\n         libstdcxx_version=\"target-libio target-libstdc++\"\n+        libstdcxx_flags='-isystem $$s/libstdc++ -isystem $$s/libstdc++/std -isystem $$s/libstdc++/stl -isystem $$s/libio/ -isystem $$s/libio/stdio -L$$r/$(TARGET_SUBDIR)/libstdc++'\n fi\n \n # these tools are built for the host environment\n@@ -1216,9 +1219,78 @@ else\n   gxx_include_dir=${gxx_include_dir}\n fi\n \n+FLAGS_FOR_TARGET=\n+if test -d ${topsrcdir}/gcc; then\n+  # Directories specified with -B are searched for libraries after those\n+  # specified with -L, but for headers (in sub-directory `include')\n+  # before those specified with -I and -isystem.  Fortunately, we don't\n+  # expect include directories to exist in build_tooldir/{bin,lib} (see\n+  # below), and we want gcc/include to be searched first.\n+  FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -B$$r/gcc/'\n+fi\n+case \" $skipdirs \" in\n+*\" target-newlib \"*) ;;\n+*)\n+   case \"$target\" in\n+   i[3456]86-*-cygwin*)\n+     FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$r/$(TARGET_SUBDIR)/winsup -L$$r/$(TARGET_SUBDIR)/winsup/cygwin -L$$r/$(TARGET_SUBDIR)/winsup/w32api/lib -isystem $$s/winsup/include -isystem $$s/winsup/cygwin/include -isystem $$s/winsup/w32api/include -isystem $$s/newlib/libc/sys/cygwin -isystem $$s/newlib/libc/sys/cygwin32' ;;\n+   esac\n+\n+   # If we're building newlib, use its generic headers last, but search\n+   # for any libc-related directories first (so make it the last -B\n+   # switch).\n+   FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -nostdinc -B$$r/$(TARGET_SUBDIR)/newlib/ -isystem $$r/$(TARGET_SUBDIR)/newlib/targ-include -isystem $$s/newlib/libc/include'\n+   ;;\n+esac\n+if test -d ${topsrcdir}/gcc; then\n+  # Search for pre-installed headers if nothing else fits.\n+  FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -B$(build_tooldir)/bin/ -B$(build_tooldir)/lib/ -isystem $(build_tooldir)/include'\n+fi\n+if test \"x${use_gnu_ld}\" = x && test \"x${with_gnu_ld}\" != xno &&\n+   echo \" ${configdirs} \" | grep \" ld \" > /dev/null &&\n+   test -d ${srcdir}/ld; then\n+  # Arrange for us to find uninstalled linker scripts.\n+  FLAGS_FOR_TARGET=$FLAGS_FOR_TARGET' -L$$r/ld'\n+fi\n+\n+if test -d ${topsrcdir}/gcc; then\n+  CC_FOR_TARGET='$$r/gcc/xgcc'\n+elif test \"$host\" = \"$target\"; then\n+  CC_FOR_TARGET='$(CC)'\n+else\n+  CC_FOR_TARGET=`echo gcc | sed -e 's/x/x/' ${program_transform_name}`\n+fi\n+CC_FOR_TARGET=$CC_FOR_TARGET' $(FLAGS_FOR_TARGET)'\n+\n+if test -d ${topsrcdir}/gcc &&\n+   echo \",${enable_languages-${LANGUAGES-CHILL}},\" |\n+   grep ,CHILL, > /dev/null ; then\n+  CHILL_FOR_TARGET='$$r/gcc/xgcc -L$$r/gcc/ch/runtime/'\n+elif test \"$host\" = \"$target\"; then\n+  CHILL_FOR_TARGET='$(CC)'\n+else\n+  CHILL_FOR_TARGET=`echo gcc | sed -e 's/x/x/' ${program_transform_name}`\n+fi\n+CHILL_FOR_TARGET=$CHILL_FOR_TARGET' $(FLAGS_FOR_TARGET)'\n+\n+if test -d ${topsrcdir}/gcc &&\n+   echo \",${enable_languages-${LANGUAGES-c++}},\" |\n+   grep ',c[+][+],' > /dev/null ; then\n+  CXX_FOR_TARGET='$$r/gcc/g++ -nostdinc++ '$libstdcxx_flags\n+elif test \"$host\" = \"$target\"; then\n+  CXX_FOR_TARGET='$(CXX)'\n+else\n+  CXX_FOR_TARGET=`echo c++ | sed -e 's/x/x/' ${program_transform_name}`\n+fi\n+CXX_FOR_TARGET=$CXX_FOR_TARGET' $(FLAGS_FOR_TARGET)'\n+\n targargs=\"--cache-file=../config.cache --host=${target_alias} --build=${build_alias} ${targargs}\"\n sed -e \"s:^TARGET_CONFIGDIRS[ \t]*=.*$:TARGET_CONFIGDIRS = ${target_configdirs}:\" \\\n     -e \"s%^CONFIG_ARGUMENTS[ \t]*=.*$%CONFIG_ARGUMENTS = ${targargs}%\" \\\n+    -e \"s%^FLAGS_FOR_TARGET[ \t]*=.*$%FLAGS_FOR_TARGET = ${FLAGS_FOR_TARGET}%\" \\\n+    -e \"s%^CC_FOR_TARGET[ \t]*=.*$%CC_FOR_TARGET = ${CC_FOR_TARGET}%\" \\\n+    -e \"s%^CHILL_FOR_TARGET[ \t]*=.*$%CHILL_FOR_TARGET = ${CHILL_FOR_TARGET}%\" \\\n+    -e \"s%^CXX_FOR_TARGET[ \t]*=.*$%CXX_FOR_TARGET = ${CXX_FOR_TARGET}%\" \\\n     -e \"s%^TARGET_SUBDIR[ \t]*=.*$%TARGET_SUBDIR = ${target_subdir}%\" \\\n     -e \"s%^gxx_include_dir[ \t]*=.*$%gxx_include_dir=${gxx_include_dir}%\" \\\n        Makefile > Makefile.tem"}]}