{"sha": "e96fe88c518ddc2d8917355d1781de3f8714c348", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk2ZmU4OGM1MThkZGMyZDg5MTczNTVkMTc4MWRlM2Y4NzE0YzM0OA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-07-21T06:05:33Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-07-21T06:05:33Z"}, "message": "PR c++/71121 - -Waddress, constexpr, and PMFs.\n\n\t* cp-gimplify.c (cp_fully_fold): First call maybe_constant_value.\n\nFrom-SVN: r238559", "tree": {"sha": "a8b779241c8a5d8a3a432003db368fcc95be87ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8b779241c8a5d8a3a432003db368fcc95be87ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e96fe88c518ddc2d8917355d1781de3f8714c348", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e96fe88c518ddc2d8917355d1781de3f8714c348", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e96fe88c518ddc2d8917355d1781de3f8714c348", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e96fe88c518ddc2d8917355d1781de3f8714c348/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f078dc7d269d8afd2874476181ee61662a16a3d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f078dc7d269d8afd2874476181ee61662a16a3d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f078dc7d269d8afd2874476181ee61662a16a3d0"}], "stats": {"total": 42, "additions": 25, "deletions": 17}, "files": [{"sha": "8ff7f758c992f5c94ccb1aa241245a06ba9c8f70", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e96fe88c518ddc2d8917355d1781de3f8714c348/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e96fe88c518ddc2d8917355d1781de3f8714c348/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e96fe88c518ddc2d8917355d1781de3f8714c348", "patch": "@@ -1,3 +1,8 @@\n+2016-07-21  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/71121\n+\t* cp-gimplify.c (cp_fully_fold): First call maybe_constant_value.\n+\n 2016-07-21  Andrew Sutton  <andrew.n.sutton@gmail.com>\n \t    Jason Merrill  <jason@redhat.com>\n "}, {"sha": "ee28ba5738f98bfb2c42e27e5e6984544ba11633", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e96fe88c518ddc2d8917355d1781de3f8714c348/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e96fe88c518ddc2d8917355d1781de3f8714c348/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=e96fe88c518ddc2d8917355d1781de3f8714c348", "patch": "@@ -1954,6 +1954,11 @@ cxx_omp_disregard_value_expr (tree decl, bool shared)\n tree\n cp_fully_fold (tree x)\n {\n+  if (processing_template_decl)\n+    return x;\n+  /* FIXME cp_fold ought to be a superset of maybe_constant_value so we don't\n+     have to call both.  */\n+  x = maybe_constant_value (x);\n   return cp_fold (x);\n }\n "}, {"sha": "a9fdfc48b4dd84ed7bf84afa4e083b00296aa7df", "filename": "gcc/testsuite/g++.dg/warn/Waddress-4.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e96fe88c518ddc2d8917355d1781de3f8714c348/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWaddress-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e96fe88c518ddc2d8917355d1781de3f8714c348/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWaddress-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWaddress-4.C?ref=e96fe88c518ddc2d8917355d1781de3f8714c348", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/71121\n+// { dg-do compile { target c++14 } }\n+// { dg-options -Waddress }\n+\n+struct CC { void mbr(); };\n+\n+constexpr auto getFunc() {\n+    return &CC::mbr;\n+}\n+\n+constexpr bool xxx(void (CC::*_a)())\n+{\n+    constexpr auto f = getFunc();\n+    return (f == _a);\n+}"}, {"sha": "b536563b637dbcfcbeb9389eea5d94cc5c8a9a75", "filename": "gcc/testsuite/g++.dg/warn/overflow-warn-7.C", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f078dc7d269d8afd2874476181ee61662a16a3d0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Foverflow-warn-7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f078dc7d269d8afd2874476181ee61662a16a3d0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Foverflow-warn-7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Foverflow-warn-7.C?ref=f078dc7d269d8afd2874476181ee61662a16a3d0", "patch": "@@ -1,17 +0,0 @@\n-// PR c/62096 - unexpected warning overflow in implicit constant conversion\n-// { dg-do compile { target c++11 } }\n-\n-enum E {\n-    E_val  = 1,\n-};\n-\n-inline constexpr E operator~(E e)\n-{\n-  return E(~static_cast<int>(e));\n-}\n-\n-int main()\n-{\n-  int val = ~E_val;   // { dg-bogus \"overflow in implicit constant conversion\" }\n-  (void) val;\n-}"}]}