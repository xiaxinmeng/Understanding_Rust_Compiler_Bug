{"sha": "b19c922bf471e4202bf4853cab9575d4a924657c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE5YzkyMmJmNDcxZTQyMDJiZjQ4NTNjYWI5NTc1ZDRhOTI0NjU3Yw==", "commit": {"author": {"name": "Vasiliy Fofanov", "email": "fofanov@adacore.com", "date": "2020-05-22T11:22:41Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-07-08T14:55:55Z"}, "message": "[Ada] Optional warning on build-in-place function calls\n\ngcc/ada/\n\n\t* debug.adb: Document new switch.\n\t* exp_ch6.adb (Warn_BIP): New function that warns if the switch\n\tis on.  Call it from Make_Build_In_Place_* functions.  Warn_BIP\n\tis not needed in Make_Build_In_Place_Iface_*, because those call\n\tMake_Build_In_Place_Call_In_Object_Declaration or similar.", "tree": {"sha": "0b2c729b6b94a0345e14979abd23aace1e94cba3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b2c729b6b94a0345e14979abd23aace1e94cba3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b19c922bf471e4202bf4853cab9575d4a924657c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b19c922bf471e4202bf4853cab9575d4a924657c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b19c922bf471e4202bf4853cab9575d4a924657c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b19c922bf471e4202bf4853cab9575d4a924657c/comments", "author": {"login": "t-14", "id": 18482303, "node_id": "MDQ6VXNlcjE4NDgyMzAz", "avatar_url": "https://avatars.githubusercontent.com/u/18482303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/t-14", "html_url": "https://github.com/t-14", "followers_url": "https://api.github.com/users/t-14/followers", "following_url": "https://api.github.com/users/t-14/following{/other_user}", "gists_url": "https://api.github.com/users/t-14/gists{/gist_id}", "starred_url": "https://api.github.com/users/t-14/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/t-14/subscriptions", "organizations_url": "https://api.github.com/users/t-14/orgs", "repos_url": "https://api.github.com/users/t-14/repos", "events_url": "https://api.github.com/users/t-14/events{/privacy}", "received_events_url": "https://api.github.com/users/t-14/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72145c1ee83fc5d7b8f65084442a7397bf154154", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72145c1ee83fc5d7b8f65084442a7397bf154154", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72145c1ee83fc5d7b8f65084442a7397bf154154"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "316a798e58425502a13b56e13ffd4723ee787aa1", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b19c922bf471e4202bf4853cab9575d4a924657c/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b19c922bf471e4202bf4853cab9575d4a924657c/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=b19c922bf471e4202bf4853cab9575d4a924657c", "patch": "@@ -173,7 +173,7 @@ package body Debug is\n    --  d_z  Enable Put_Image on tagged types\n \n    --  d_A  Stop generation of ALI file\n-   --  d_B\n+   --  d_B  Warn on build-in-place function calls\n    --  d_C\n    --  d_D\n    --  d_E\n@@ -1003,6 +1003,10 @@ package body Debug is\n \n    --  d_A  Do not generate ALI files by setting Opt.Disable_ALI_File.\n \n+   --  d_B  Warn on build-in-place function calls. This allows users to\n+   --       inspect their code in case it triggers compiler bugs related\n+   --       to build-in-place calls. See known-problem entries for details.\n+\n    --  d_F  The compiler encodes the full path from an invocation construct to\n    --       an external target, offering additional information to GNATBIND for\n    --       purposes of error diagnostics."}, {"sha": "e3fcbc7afef7f21bef3fb1104d1ed9c7096ea3f6", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b19c922bf471e4202bf4853cab9575d4a924657c/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b19c922bf471e4202bf4853cab9575d4a924657c/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=b19c922bf471e4202bf4853cab9575d4a924657c", "patch": "@@ -306,6 +306,10 @@ package body Exp_Ch6 is\n    --  out of. This ensures that the secondary stack is not released; otherwise\n    --  the function result would be reclaimed before returning to the caller.\n \n+   procedure Warn_BIP (Func_Call : Node_Id);\n+   --  Give a warning on a build-in-place function call if the -gnatd_B switch\n+   --  was given.\n+\n    ----------------------------------------------\n    -- Add_Access_Actual_To_Build_In_Place_Call --\n    ----------------------------------------------\n@@ -8739,6 +8743,8 @@ package body Exp_Ch6 is\n          raise Program_Error;\n       end if;\n \n+      Warn_BIP (Func_Call);\n+\n       Result_Subt := Available_View (Etype (Function_Id));\n \n       --  Create a temp for the function result. In the caller-allocates case,\n@@ -8995,6 +9001,8 @@ package body Exp_Ch6 is\n          raise Program_Error;\n       end if;\n \n+      Warn_BIP (Func_Call);\n+\n       Result_Subt := Etype (Function_Id);\n \n       --  If the build-in-place function returns a controlled object, then the\n@@ -9142,6 +9150,8 @@ package body Exp_Ch6 is\n          raise Program_Error;\n       end if;\n \n+      Warn_BIP (Func_Call);\n+\n       Result_Subt := Etype (Func_Id);\n \n       --  When the result subtype is unconstrained, an additional actual must\n@@ -9286,6 +9296,8 @@ package body Exp_Ch6 is\n \n       Set_Is_Expanded_Build_In_Place_Call (Func_Call);\n \n+      Warn_BIP (Func_Call);\n+\n       --  Create an access type designating the function's result subtype.\n       --  We use the type of the original call because it may be a call to an\n       --  inherited operation, which the expansion has replaced with the parent\n@@ -10330,4 +10342,15 @@ package body Exp_Ch6 is\n       return Unqual_BIP_Function_Call (Expr);\n    end Unqual_BIP_Iface_Function_Call;\n \n+   --------------\n+   -- Warn_BIP --\n+   --------------\n+\n+   procedure Warn_BIP (Func_Call : Node_Id) is\n+   begin\n+      if Debug_Flag_Underscore_BB then\n+         Error_Msg_N (\"build-in-place function call?\", Func_Call);\n+      end if;\n+   end Warn_BIP;\n+\n end Exp_Ch6;"}]}