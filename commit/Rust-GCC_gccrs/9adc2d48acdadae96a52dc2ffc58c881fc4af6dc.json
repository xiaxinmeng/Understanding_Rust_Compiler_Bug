{"sha": "9adc2d48acdadae96a52dc2ffc58c881fc4af6dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFkYzJkNDhhY2RhZGFlOTZhNTJkYzJmZmM1OGM4ODFmYzRhZjZkYw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-04-20T11:07:50Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-04-20T11:07:50Z"}, "message": "concurrency_extensions.xml: Update documentation on atomics.\n\n\t* doc/xml/manual/concurrency_extensions.xml: Update documentation\n\ton atomics.\n\t* doc/xml/manual/using.xml: Likewise. Improve markup.\n\t* doc/html/*: Regenerate.\n\nFrom-SVN: r222230", "tree": {"sha": "0d116a176e90e56a5551826818ff311c22c7a7a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d116a176e90e56a5551826818ff311c22c7a7a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9adc2d48acdadae96a52dc2ffc58c881fc4af6dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9adc2d48acdadae96a52dc2ffc58c881fc4af6dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9adc2d48acdadae96a52dc2ffc58c881fc4af6dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9adc2d48acdadae96a52dc2ffc58c881fc4af6dc/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b66a2d43b6e8c1d8dc2a99aa5b14da6e7e9c10d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b66a2d43b6e8c1d8dc2a99aa5b14da6e7e9c10d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b66a2d43b6e8c1d8dc2a99aa5b14da6e7e9c10d"}], "stats": {"total": 212, "additions": 138, "deletions": 74}, "files": [{"sha": "a82dd923a76bbe8d7db887c542ceee9390e34253", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9adc2d48acdadae96a52dc2ffc58c881fc4af6dc/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9adc2d48acdadae96a52dc2ffc58c881fc4af6dc/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9adc2d48acdadae96a52dc2ffc58c881fc4af6dc", "patch": "@@ -1,3 +1,10 @@\n+2015-04-20  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/xml/manual/concurrency_extensions.xml: Update documentation\n+\ton atomics.\n+\t* doc/xml/manual/using.xml: Likewise. Improve markup.\n+\t* doc/html/*: Regenerate.\n+\n 2015-04-15  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* scripts/extract_symvers.pl: Ignore elfdump error output."}, {"sha": "feaa28c0e42b01213921e3acdcd273d8291db402", "filename": "libstdc++-v3/doc/html/index.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9adc2d48acdadae96a52dc2ffc58c881fc4af6dc/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Findex.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9adc2d48acdadae96a52dc2ffc58c881fc4af6dc/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Findex.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Findex.html?ref=9adc2d48acdadae96a52dc2ffc58c881fc4af6dc", "patch": "@@ -127,7 +127,7 @@\n \t  Text <code class=\"function\">modify</code> Up\n \t</a></span></dt><dt><span class=\"section\"><a href=\"manual/policy_based_data_structures_test.html#performance.priority_queue.text_modify_down\">\n \t  Text <code class=\"function\">modify</code> Down\n-\t</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/policy_based_data_structures_test.html#pbds.test.performance.observations\">Observations</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/policy_based_data_structures_test.html#observations.associative\">Associative</a></span></dt><dt><span class=\"section\"><a href=\"manual/policy_based_data_structures_test.html#observations.priority_queue\">Priority_Queue</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"manual/policy_data_structures_ack.html\">Acknowledgments</a></span></dt><dt><span class=\"bibliography\"><a href=\"manual/policy_data_structures.html#pbds.biblio\">Bibliography</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"manual/ext_containers.html\">23. HP/SGI Extensions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/ext_containers.html#manual.ext.containers.sgi\">Backwards Compatibility</a></span></dt><dt><span class=\"section\"><a href=\"manual/ext_sgi.html\">Deprecated</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"manual/ext_utilities.html\">24. Utilities</a></span></dt><dt><span class=\"chapter\"><a href=\"manual/ext_algorithms.html\">25. Algorithms</a></span></dt><dt><span class=\"chapter\"><a href=\"manual/ext_numerics.html\">26. Numerics</a></span></dt><dt><span class=\"chapter\"><a href=\"manual/ext_iterators.html\">27. Iterators</a></span></dt><dt><span class=\"chapter\"><a href=\"manual/ext_io.html\">28. Input and Output</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/ext_io.html#manual.ext.io.filebuf_derived\">Derived filebufs</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"manual/ext_demangling.html\">29. Demangling</a></span></dt><dt><span class=\"chapter\"><a href=\"manual/ext_concurrency.html\">30. Concurrency</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/ext_concurrency.html#manual.ext.concurrency.design\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/ext_concurrency.html#manual.ext.concurrency.design.threads\">Interface to Locks and Mutexes</a></span></dt><dt><span class=\"section\"><a href=\"manual/ext_concurrency.html#manual.ext.concurrency.design.atomics\">Interface to Atomic Functions</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/ext_concurrency_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/ext_concurrency_impl.html#manual.ext.concurrency.impl.atomic_fallbacks\">Using Builtin Atomic Functions</a></span></dt><dt><span class=\"section\"><a href=\"manual/ext_concurrency_impl.html#manual.ext.concurrency.impl.thread\">Thread Abstraction</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/ext_concurrency_use.html\">Use</a></span></dt></dl></dd></dl></dd><dt><span class=\"part\"><a href=\"manual/appendix.html\">IV. \n+\t</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/policy_based_data_structures_test.html#pbds.test.performance.observations\">Observations</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/policy_based_data_structures_test.html#observations.associative\">Associative</a></span></dt><dt><span class=\"section\"><a href=\"manual/policy_based_data_structures_test.html#observations.priority_queue\">Priority_Queue</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"manual/policy_data_structures_ack.html\">Acknowledgments</a></span></dt><dt><span class=\"bibliography\"><a href=\"manual/policy_data_structures.html#pbds.biblio\">Bibliography</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"manual/ext_containers.html\">23. HP/SGI Extensions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/ext_containers.html#manual.ext.containers.sgi\">Backwards Compatibility</a></span></dt><dt><span class=\"section\"><a href=\"manual/ext_sgi.html\">Deprecated</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"manual/ext_utilities.html\">24. Utilities</a></span></dt><dt><span class=\"chapter\"><a href=\"manual/ext_algorithms.html\">25. Algorithms</a></span></dt><dt><span class=\"chapter\"><a href=\"manual/ext_numerics.html\">26. Numerics</a></span></dt><dt><span class=\"chapter\"><a href=\"manual/ext_iterators.html\">27. Iterators</a></span></dt><dt><span class=\"chapter\"><a href=\"manual/ext_io.html\">28. Input and Output</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/ext_io.html#manual.ext.io.filebuf_derived\">Derived filebufs</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"manual/ext_demangling.html\">29. Demangling</a></span></dt><dt><span class=\"chapter\"><a href=\"manual/ext_concurrency.html\">30. Concurrency</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/ext_concurrency.html#manual.ext.concurrency.design\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/ext_concurrency.html#manual.ext.concurrency.design.threads\">Interface to Locks and Mutexes</a></span></dt><dt><span class=\"section\"><a href=\"manual/ext_concurrency.html#manual.ext.concurrency.design.atomics\">Interface to Atomic Functions</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/ext_concurrency_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"manual/ext_concurrency_impl.html#manual.ext.concurrency.impl.atomic_fallbacks\">Using Built-in Atomic Functions</a></span></dt><dt><span class=\"section\"><a href=\"manual/ext_concurrency_impl.html#manual.ext.concurrency.impl.thread\">Thread Abstraction</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"manual/ext_concurrency_use.html\">Use</a></span></dt></dl></dd></dl></dd><dt><span class=\"part\"><a href=\"manual/appendix.html\">IV. \n   Appendices\n </a></span></dt><dd><dl><dt><span class=\"appendix\"><a href=\"manual/appendix_contributing.html\">A. \n   Contributing"}, {"sha": "688bdd06a9799e59f2dd55b47261544baba8a1fd", "filename": "libstdc++-v3/doc/html/manual/ext_concurrency.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9adc2d48acdadae96a52dc2ffc58c881fc4af6dc/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_concurrency.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9adc2d48acdadae96a52dc2ffc58c881fc4af6dc/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_concurrency.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_concurrency.html?ref=9adc2d48acdadae96a52dc2ffc58c881fc4af6dc", "patch": "@@ -2,7 +2,7 @@\n <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Chapter\u00a030.\u00a0Concurrency</title><meta name=\"generator\" content=\"DocBook XSL-NS Stylesheets V1.78.1\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"extensions.html\" title=\"Part\u00a0III.\u00a0 Extensions\" /><link rel=\"prev\" href=\"ext_demangling.html\" title=\"Chapter\u00a029.\u00a0Demangling\" /><link rel=\"next\" href=\"ext_concurrency_impl.html\" title=\"Implementation\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Chapter\u00a030.\u00a0Concurrency</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_demangling.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Part\u00a0III.\u00a0\n   Extensions\n   \n-</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_concurrency_impl.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.concurrency\"></a>Chapter\u00a030.\u00a0Concurrency</h2></div></div></div><div class=\"toc\"><p><strong>Table of Contents</strong></p><dl class=\"toc\"><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.threads\">Interface to Locks and Mutexes</a></span></dt><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.atomics\">Interface to Atomic Functions</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html#manual.ext.concurrency.impl.atomic_fallbacks\">Using Builtin Atomic Functions</a></span></dt><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html#manual.ext.concurrency.impl.thread\">Thread Abstraction</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"ext_concurrency_use.html\">Use</a></span></dt></dl></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.concurrency.design\"></a>Design</h2></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.concurrency.design.threads\"></a>Interface to Locks and Mutexes</h3></div></div></div><p>The file <code class=\"filename\">&lt;ext/concurrence.h&gt;</code>\n+</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_concurrency_impl.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.ext.concurrency\"></a>Chapter\u00a030.\u00a0Concurrency</h2></div></div></div><div class=\"toc\"><p><strong>Table of Contents</strong></p><dl class=\"toc\"><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.threads\">Interface to Locks and Mutexes</a></span></dt><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.atomics\">Interface to Atomic Functions</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html#manual.ext.concurrency.impl.atomic_fallbacks\">Using Built-in Atomic Functions</a></span></dt><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html#manual.ext.concurrency.impl.thread\">Thread Abstraction</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"ext_concurrency_use.html\">Use</a></span></dt></dl></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.concurrency.design\"></a>Design</h2></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.concurrency.design.threads\"></a>Interface to Locks and Mutexes</h3></div></div></div><p>The file <code class=\"filename\">&lt;ext/concurrence.h&gt;</code>\n contains all the higher-level\n constructs for playing with threads. In contrast to the atomics layer,\n the concurrence layer consists largely of types. All types are defined within <code class=\"code\">namespace __gnu_cxx</code>."}, {"sha": "bb5d144e056e23c8aca3cfda742600975da4b107", "filename": "libstdc++-v3/doc/html/manual/ext_concurrency_impl.html", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9adc2d48acdadae96a52dc2ffc58c881fc4af6dc/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_concurrency_impl.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9adc2d48acdadae96a52dc2ffc58c881fc4af6dc/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_concurrency_impl.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fext_concurrency_impl.html?ref=9adc2d48acdadae96a52dc2ffc58c881fc4af6dc", "patch": "@@ -1,12 +1,20 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n-<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Implementation</title><meta name=\"generator\" content=\"DocBook XSL-NS Stylesheets V1.78.1\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"ext_concurrency.html\" title=\"Chapter\u00a030.\u00a0Concurrency\" /><link rel=\"prev\" href=\"ext_concurrency.html\" title=\"Chapter\u00a030.\u00a0Concurrency\" /><link rel=\"next\" href=\"ext_concurrency_use.html\" title=\"Use\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Implementation</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_concurrency.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a030.\u00a0Concurrency</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_concurrency_use.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.concurrency.impl\"></a>Implementation</h2></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.concurrency.impl.atomic_fallbacks\"></a>Using Builtin Atomic Functions</h3></div></div></div><p>The functions for atomic operations described above are either\n+<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\"><html xmlns=\"http://www.w3.org/1999/xhtml\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" /><title>Implementation</title><meta name=\"generator\" content=\"DocBook XSL-NS Stylesheets V1.78.1\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, library\" /><meta name=\"keywords\" content=\"ISO C++, runtime, library\" /><link rel=\"home\" href=\"../index.html\" title=\"The GNU C++ Library\" /><link rel=\"up\" href=\"ext_concurrency.html\" title=\"Chapter\u00a030.\u00a0Concurrency\" /><link rel=\"prev\" href=\"ext_concurrency.html\" title=\"Chapter\u00a030.\u00a0Concurrency\" /><link rel=\"next\" href=\"ext_concurrency_use.html\" title=\"Use\" /></head><body><div class=\"navheader\"><table width=\"100%\" summary=\"Navigation header\"><tr><th colspan=\"3\" align=\"center\">Implementation</th></tr><tr><td width=\"20%\" align=\"left\"><a accesskey=\"p\" href=\"ext_concurrency.html\">Prev</a>\u00a0</td><th width=\"60%\" align=\"center\">Chapter\u00a030.\u00a0Concurrency</th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_concurrency_use.html\">Next</a></td></tr></table><hr /></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.ext.concurrency.impl\"></a>Implementation</h2></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.ext.concurrency.impl.atomic_fallbacks\"></a>Using Built-in Atomic Functions</h3></div></div></div><p>The functions for atomic operations described above are either\n implemented via compiler intrinsics (if the underlying host is\n capable) or by library fallbacks.</p><p>Compiler intrinsics (builtins) are always preferred.  However, as\n the compiler builtins for atomics are not universally implemented,\n using them directly is problematic, and can result in undefined\n-function calls. (An example of an undefined symbol from the use\n+function calls.\n+</p><p>Prior to GCC 4.7 the older <code class=\"code\">__sync</code> intrinsics were used.\n+An example of an undefined symbol from the use\n of <code class=\"code\">__sync_fetch_and_add</code> on an unsupported host is a\n-missing reference to <code class=\"code\">__sync_fetch_and_add_4</code>.)\n+missing reference to <code class=\"code\">__sync_fetch_and_add_4</code>.\n+</p><p>Current releases use the newer <code class=\"code\">__atomic</code> intrinsics,\n+which are implemented by library calls if the hardware doesn't support them.\n+Undefined references to functions like\n+<code class=\"code\">__atomic_is_lock_free</code> should be resolved by linking to\n+<code class=\"filename\">libatomic</code>, which is usually\n+installed alongside libstdc++.\n </p><p>In addition, on some hosts the compiler intrinsics are enabled\n conditionally, via the <code class=\"code\">-march</code> command line flag. This makes\n usage vary depending on the target hardware and the flags used during"}, {"sha": "ac3e1a96101463a14ce718f080e3dee73a08a241", "filename": "libstdc++-v3/doc/html/manual/extensions.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9adc2d48acdadae96a52dc2ffc58c881fc4af6dc/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fextensions.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9adc2d48acdadae96a52dc2ffc58c881fc4af6dc/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fextensions.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fextensions.html?ref=9adc2d48acdadae96a52dc2ffc58c881fc4af6dc", "patch": "@@ -68,4 +68,4 @@\n \t  Text <code class=\"function\">modify</code> Up\n \t</a></span></dt><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#performance.priority_queue.text_modify_down\">\n \t  Text <code class=\"function\">modify</code> Down\n-\t</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#pbds.test.performance.observations\">Observations</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#observations.associative\">Associative</a></span></dt><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#observations.priority_queue\">Priority_Queue</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"policy_data_structures_ack.html\">Acknowledgments</a></span></dt><dt><span class=\"bibliography\"><a href=\"policy_data_structures.html#pbds.biblio\">Bibliography</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_containers.html\">23. HP/SGI Extensions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_containers.html#manual.ext.containers.sgi\">Backwards Compatibility</a></span></dt><dt><span class=\"section\"><a href=\"ext_sgi.html\">Deprecated</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_utilities.html\">24. Utilities</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_algorithms.html\">25. Algorithms</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_numerics.html\">26. Numerics</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_iterators.html\">27. Iterators</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_io.html\">28. Input and Output</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_io.html#manual.ext.io.filebuf_derived\">Derived filebufs</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_demangling.html\">29. Demangling</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_concurrency.html\">30. Concurrency</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.threads\">Interface to Locks and Mutexes</a></span></dt><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.atomics\">Interface to Atomic Functions</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html#manual.ext.concurrency.impl.atomic_fallbacks\">Using Builtin Atomic Functions</a></span></dt><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html#manual.ext.concurrency.impl.thread\">Thread Abstraction</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"ext_concurrency_use.html\">Use</a></span></dt></dl></dd></dl></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"io_and_c.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"index.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_preface.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Interacting with C\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0</td></tr></table></div></body></html>\n\\ No newline at end of file\n+\t</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#pbds.test.performance.observations\">Observations</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#observations.associative\">Associative</a></span></dt><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#observations.priority_queue\">Priority_Queue</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"policy_data_structures_ack.html\">Acknowledgments</a></span></dt><dt><span class=\"bibliography\"><a href=\"policy_data_structures.html#pbds.biblio\">Bibliography</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_containers.html\">23. HP/SGI Extensions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_containers.html#manual.ext.containers.sgi\">Backwards Compatibility</a></span></dt><dt><span class=\"section\"><a href=\"ext_sgi.html\">Deprecated</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_utilities.html\">24. Utilities</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_algorithms.html\">25. Algorithms</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_numerics.html\">26. Numerics</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_iterators.html\">27. Iterators</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_io.html\">28. Input and Output</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_io.html#manual.ext.io.filebuf_derived\">Derived filebufs</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_demangling.html\">29. Demangling</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_concurrency.html\">30. Concurrency</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.threads\">Interface to Locks and Mutexes</a></span></dt><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.atomics\">Interface to Atomic Functions</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html#manual.ext.concurrency.impl.atomic_fallbacks\">Using Built-in Atomic Functions</a></span></dt><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html#manual.ext.concurrency.impl.thread\">Thread Abstraction</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"ext_concurrency_use.html\">Use</a></span></dt></dl></dd></dl></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"io_and_c.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"index.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"ext_preface.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Interacting with C\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "26f6233ff05dd228047a30cb57f76bc3df861038", "filename": "libstdc++-v3/doc/html/manual/index.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9adc2d48acdadae96a52dc2ffc58c881fc4af6dc/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Findex.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9adc2d48acdadae96a52dc2ffc58c881fc4af6dc/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Findex.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Findex.html?ref=9adc2d48acdadae96a52dc2ffc58c881fc4af6dc", "patch": "@@ -108,7 +108,7 @@\n \t  Text <code class=\"function\">modify</code> Up\n \t</a></span></dt><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#performance.priority_queue.text_modify_down\">\n \t  Text <code class=\"function\">modify</code> Down\n-\t</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#pbds.test.performance.observations\">Observations</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#observations.associative\">Associative</a></span></dt><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#observations.priority_queue\">Priority_Queue</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"policy_data_structures_ack.html\">Acknowledgments</a></span></dt><dt><span class=\"bibliography\"><a href=\"policy_data_structures.html#pbds.biblio\">Bibliography</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_containers.html\">23. HP/SGI Extensions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_containers.html#manual.ext.containers.sgi\">Backwards Compatibility</a></span></dt><dt><span class=\"section\"><a href=\"ext_sgi.html\">Deprecated</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_utilities.html\">24. Utilities</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_algorithms.html\">25. Algorithms</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_numerics.html\">26. Numerics</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_iterators.html\">27. Iterators</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_io.html\">28. Input and Output</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_io.html#manual.ext.io.filebuf_derived\">Derived filebufs</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_demangling.html\">29. Demangling</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_concurrency.html\">30. Concurrency</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.threads\">Interface to Locks and Mutexes</a></span></dt><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.atomics\">Interface to Atomic Functions</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html#manual.ext.concurrency.impl.atomic_fallbacks\">Using Builtin Atomic Functions</a></span></dt><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html#manual.ext.concurrency.impl.thread\">Thread Abstraction</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"ext_concurrency_use.html\">Use</a></span></dt></dl></dd></dl></dd><dt><span class=\"part\"><a href=\"appendix.html\">IV. \n+\t</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#pbds.test.performance.observations\">Observations</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#observations.associative\">Associative</a></span></dt><dt><span class=\"section\"><a href=\"policy_based_data_structures_test.html#observations.priority_queue\">Priority_Queue</a></span></dt></dl></dd></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"policy_data_structures_ack.html\">Acknowledgments</a></span></dt><dt><span class=\"bibliography\"><a href=\"policy_data_structures.html#pbds.biblio\">Bibliography</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_containers.html\">23. HP/SGI Extensions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_containers.html#manual.ext.containers.sgi\">Backwards Compatibility</a></span></dt><dt><span class=\"section\"><a href=\"ext_sgi.html\">Deprecated</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_utilities.html\">24. Utilities</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_algorithms.html\">25. Algorithms</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_numerics.html\">26. Numerics</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_iterators.html\">27. Iterators</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_io.html\">28. Input and Output</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_io.html#manual.ext.io.filebuf_derived\">Derived filebufs</a></span></dt></dl></dd><dt><span class=\"chapter\"><a href=\"ext_demangling.html\">29. Demangling</a></span></dt><dt><span class=\"chapter\"><a href=\"ext_concurrency.html\">30. Concurrency</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design\">Design</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.threads\">Interface to Locks and Mutexes</a></span></dt><dt><span class=\"section\"><a href=\"ext_concurrency.html#manual.ext.concurrency.design.atomics\">Interface to Atomic Functions</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html\">Implementation</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html#manual.ext.concurrency.impl.atomic_fallbacks\">Using Built-in Atomic Functions</a></span></dt><dt><span class=\"section\"><a href=\"ext_concurrency_impl.html#manual.ext.concurrency.impl.thread\">Thread Abstraction</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"ext_concurrency_use.html\">Use</a></span></dt></dl></dd></dl></dd><dt><span class=\"part\"><a href=\"appendix.html\">IV. \n   Appendices\n </a></span></dt><dd><dl><dt><span class=\"appendix\"><a href=\"appendix_contributing.html\">A. \n   Contributing"}, {"sha": "dff5192f5f2fbaeb7b9363a8e81bab69e0f4b1d2", "filename": "libstdc++-v3/doc/html/manual/using.html", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9adc2d48acdadae96a52dc2ffc58c881fc4af6dc/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9adc2d48acdadae96a52dc2ffc58c881fc4af6dc/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing.html?ref=9adc2d48acdadae96a52dc2ffc58c881fc4af6dc", "patch": "@@ -3,12 +3,18 @@\n   Introduction\n   \n </th><td width=\"20%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"using_headers.html\">Next</a></td></tr></table><hr /></div><div class=\"chapter\"><div class=\"titlepage\"><div><div><h2 class=\"title\"><a id=\"manual.intro.using\"></a>Chapter\u00a03.\u00a0Using</h2></div></div></div><div class=\"toc\"><p><strong>Table of Contents</strong></p><dl class=\"toc\"><dt><span class=\"section\"><a href=\"using.html#manual.intro.using.flags\">Command Options</a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html\">Headers</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.all\">Header Files</a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.mixing\">Mixing Headers</a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.cheaders\">The C Headers and <code class=\"code\">namespace std</code></a></span></dt><dt><span class=\"section\"><a href=\"using_headers.html#manual.intro.using.headers.pre\">Precompiled Headers</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_macros.html\">Macros</a></span></dt><dt><span class=\"section\"><a href=\"using_namespaces.html\">Namespaces</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_namespaces.html#manual.intro.using.namespaces.all\">Available Namespaces</a></span></dt><dt><span class=\"section\"><a href=\"using_namespaces.html#manual.intro.using.namespaces.std\">namespace std</a></span></dt><dt><span class=\"section\"><a href=\"using_namespaces.html#manual.intro.using.namespaces.comp\">Using Namespace Composition</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_dynamic_or_shared.html\">Linking</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_dynamic_or_shared.html#manual.intro.using.linkage.freestanding\">Almost Nothing</a></span></dt><dt><span class=\"section\"><a href=\"using_dynamic_or_shared.html#manual.intro.using.linkage.dynamic\">Finding Dynamic or Shared Libraries</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_concurrency.html\">Concurrency</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.prereq\">Prerequisites</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.thread_safety\">Thread Safety</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.atomics\">Atomics</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.io\">IO</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.structure\">Structure</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.defaults\">Defaults</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.future\">Future</a></span></dt><dt><span class=\"section\"><a href=\"using_concurrency.html#concurrency.io.alt\">Alternatives</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_concurrency.html#manual.intro.using.concurrency.containers\">Containers</a></span></dt></dl></dd><dt><span class=\"section\"><a href=\"using_exceptions.html\">Exceptions</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.safety\">Exception Safety</a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.propagating\">Exception Neutrality</a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.no\">Doing without</a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#intro.using.exception.compat\">Compatibility</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"using_exceptions.html#using.exception.compat.c\">With <code class=\"literal\">C</code></a></span></dt><dt><span class=\"section\"><a href=\"using_exceptions.html#using.exception.compat.posix\">With <code class=\"literal\">POSIX</code> thread cancellation</a></span></dt></dl></dd></dl></dd><dt><span class=\"section\"><a href=\"debug.html\">Debugging Support</a></span></dt><dd><dl><dt><span class=\"section\"><a href=\"debug.html#debug.compiler\">Using <span class=\"command\"><strong>g++</strong></span></a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.req\">Debug Versions of Library Binary Files</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.memory\">Memory Leak Hunting</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.races\">Data Race Hunting</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.gdb\">Using <span class=\"command\"><strong>gdb</strong></span></a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.exceptions\">Tracking uncaught exceptions</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.debug_mode\">Debug Mode</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.compile_time_checks\">Compile Time Checking</a></span></dt><dt><span class=\"section\"><a href=\"debug.html#debug.profile_mode\">Profile-based Performance Analysis</a></span></dt></dl></dd></dl></div><div class=\"section\"><div class=\"titlepage\"><div><div><h2 class=\"title\" style=\"clear: both\"><a id=\"manual.intro.using.flags\"></a>Command Options</h2></div></div></div><p>\n-      The set of features available in the GNU C++ library is shaped\n-      by\n+      The set of features available in the GNU C++ library is shaped by\n       several <a class=\"link\" href=\"http://gcc.gnu.org/onlinedocs/gcc-4.3.2/gcc/Invoking-GCC.html\" target=\"_top\">GCC\n       Command Options</a>. Options that impact libstdc++ are\n       enumerated and detailed in the table below.\n     </p><p>\n       By default, <span class=\"command\"><strong>g++</strong></span> is equivalent to  <span class=\"command\"><strong>g++ -std=gnu++98</strong></span>. The standard library also defaults to this dialect.\n-    </p><div class=\"table\"><a id=\"table.cmd_options\"></a><p class=\"title\"><strong>Table\u00a03.1.\u00a0C++ Command Options</strong></p><div class=\"table-contents\"><table summary=\"C++ Command Options\" border=\"1\"><colgroup><col align=\"left\" class=\"c1\" /><col align=\"left\" class=\"c2\" /></colgroup><thead><tr><th align=\"left\">Option Flags</th><th align=\"left\">Description</th></tr></thead><tbody><tr><td align=\"left\"><code class=\"literal\">-std=c++98</code></td><td align=\"left\">Use the 1998 ISO C++ standard plus amendments.</td></tr><tr><td align=\"left\"><code class=\"literal\">-std=gnu++98</code></td><td align=\"left\">As directly above, with GNU extensions.</td></tr><tr><td align=\"left\"><code class=\"literal\">-std=c++11</code></td><td align=\"left\">Use the 2011 ISO C++ standard.</td></tr><tr><td align=\"left\"><code class=\"literal\">-std=gnu++11</code></td><td align=\"left\">As directly above, with GNU extensions.</td></tr><tr><td align=\"left\"><code class=\"literal\">-fexceptions</code></td><td align=\"left\">See <a class=\"link\" href=\"using_exceptions.html#intro.using.exception.no\" title=\"Doing without\">exception-free dialect</a></td></tr><tr><td align=\"left\"><code class=\"literal\">-frtti</code></td><td align=\"left\">As above, but RTTI-free dialect.</td></tr><tr><td align=\"left\"><code class=\"literal\">-pthread</code> or <code class=\"literal\">-pthreads</code></td><td align=\"left\">For ISO C++11 &lt;thread&gt;, &lt;future&gt;,\n-      &lt;mutex&gt;, or &lt;condition_variable&gt;.</td></tr><tr><td align=\"left\"><code class=\"literal\">-fopenmp</code></td><td align=\"left\">For <a class=\"link\" href=\"parallel_mode.html\" title=\"Chapter\u00a018.\u00a0Parallel Mode\">parallel</a> mode.</td></tr></tbody></table></div></div><br class=\"table-break\" /></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"make.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"intro.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"using_headers.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Make\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Headers</td></tr></table></div></body></html>\n\\ No newline at end of file\n+    </p><div class=\"table\"><a id=\"table.cmd_options\"></a><p class=\"title\"><strong>Table\u00a03.1.\u00a0C++ Command Options</strong></p><div class=\"table-contents\"><table summary=\"C++ Command Options\" border=\"1\"><colgroup><col align=\"left\" class=\"c1\" /><col align=\"left\" class=\"c2\" /></colgroup><thead><tr><th align=\"left\">Option Flags</th><th align=\"left\">Description</th></tr></thead><tbody><tr><td align=\"left\"><code class=\"literal\">-std=c++98</code></td><td align=\"left\">Use the 1998 ISO C++ standard plus amendments.</td></tr><tr><td align=\"left\"><code class=\"literal\">-std=gnu++98</code></td><td align=\"left\">As directly above, with GNU extensions.</td></tr><tr><td align=\"left\"><code class=\"literal\">-std=c++11</code></td><td align=\"left\">Use the 2011 ISO C++ standard.</td></tr><tr><td align=\"left\"><code class=\"literal\">-std=gnu++11</code></td><td align=\"left\">As directly above, with GNU extensions.</td></tr><tr><td align=\"left\"><code class=\"literal\">-fexceptions</code></td><td align=\"left\">See <a class=\"link\" href=\"using_exceptions.html#intro.using.exception.no\" title=\"Doing without\">exception-free dialect</a></td></tr><tr><td align=\"left\"><code class=\"literal\">-frtti</code></td><td align=\"left\">As above, but RTTI-free dialect.</td></tr><tr><td align=\"left\"><code class=\"literal\">-pthread</code> or <code class=\"literal\">-pthreads</code></td><td align=\"left\">For ISO C++11\n+        <code class=\"filename\">&lt;thread&gt;</code>,\n+        <code class=\"filename\">&lt;future&gt;</code>,\n+        <code class=\"filename\">&lt;mutex&gt;</code>,\n+        or <code class=\"filename\">&lt;condition_variable&gt;</code>.\n+      </td></tr><tr><td align=\"left\"><code class=\"literal\">-latomic</code></td><td align=\"left\">Linking to <code class=\"filename\">libatomic</code>\n+        is required for some uses of ISO C++11\n+        <code class=\"filename\">&lt;atomic&gt;</code>.\n+      </td></tr><tr><td align=\"left\"><code class=\"literal\">-fopenmp</code></td><td align=\"left\">For <a class=\"link\" href=\"parallel_mode.html\" title=\"Chapter\u00a018.\u00a0Parallel Mode\">parallel</a> mode.</td></tr></tbody></table></div></div><br class=\"table-break\" /></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"make.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"intro.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"using_headers.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Make\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Headers</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "ee3d8f563aa89322cb72b3fee2da5718fefba88a", "filename": "libstdc++-v3/doc/html/manual/using_concurrency.html", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9adc2d48acdadae96a52dc2ffc58c881fc4af6dc/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_concurrency.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9adc2d48acdadae96a52dc2ffc58c881fc4af6dc/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_concurrency.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_concurrency.html?ref=9adc2d48acdadae96a52dc2ffc58c881fc4af6dc", "patch": "@@ -24,13 +24,14 @@\n       all required macros to a compilation (if any such flags are\n       required then you must provide the flag for all compilations not\n       just linking) and link-library additions and/or replacements at\n-      link time.  The documentation is weak.  Here is a quick summary\n-      to display how ad hoc this is: On Solaris, both -pthreads and\n-      -threads (with subtly different meanings) are honored.  \n-      On GNU/Linux x86, -pthread is honored.  On FreeBSD,\n-      -pthread is honored.  Some other ports use other switches.\n-      AFAIK, none of this is properly documented anywhere other than\n-      in ``gcc -dumpspecs'' (look at lib and cpp entries).\n+      link time.  The documentation is weak.  On several targets (including\n+      GNU/Linux, Solaris and various BSDs) -pthread is honored.\n+      Some other ports use other switches.\n+      This is not well documented anywhere other than\n+      in \"gcc -dumpspecs\" (look at the 'lib' and 'cpp' entries).\n+   </p><p>\n+     Some uses of <code class=\"classname\">std::atomic</code> also require linking\n+     to <code class=\"filename\">libatomic</code>.\n    </p></div><div class=\"section\"><div class=\"titlepage\"><div><div><h3 class=\"title\"><a id=\"manual.intro.using.concurrency.thread_safety\"></a>Thread Safety</h3></div></div></div><p>\n In the terms of the 2011 C++ standard a thread-safe program is one which\n does not perform any conflicting non-atomic operations on memory locations\n@@ -59,11 +60,16 @@\n \t Requisite command-line flags are used for atomic operations\n \t and threading. Examples of this include <code class=\"code\">-pthread</code>\n \t and <code class=\"code\">-march=native</code>, although specifics vary\n-\t depending on the host environment. See <a class=\"link\" href=\"http://gcc.gnu.org/onlinedocs/gcc/Option-Summary.html\" target=\"_top\">Machine\n+\t depending on the host environment. See\n+\t <a class=\"link\" href=\"using.html#manual.intro.using.flags\" title=\"Command Options\">Command Options</a> and\n+\t <a class=\"link\" href=\"http://gcc.gnu.org/onlinedocs/gcc/Option-Summary.html\" target=\"_top\">Machine\n \t Dependent Options</a>.\n        </p></li><li class=\"listitem\"><p>\n-\t   An implementation of atomicity.h functions\n-\t   exists for the architecture in question. See the internals documentation for more <a class=\"link\" href=\"internals.html#internals.thread_safety\" title=\"Thread Safety\">details</a>.\n+\t   An implementation of the\n+\t   <code class=\"filename\">atomicity.h</code> functions\n+\t   exists for the architecture in question. See the\n+\t   <a class=\"link\" href=\"internals.html#internals.thread_safety\" title=\"Thread Safety\">internals\n+\t   documentation</a> for more details.\n        </p></li></ul></div><p>The user code must guard against concurrent function calls which\n          access any particular library object's state when one or more of\n          those accesses modifies the state. An object will be modified by"}, {"sha": "bac3f363080b6b0a6ad9a23e67e6575528e33dd5", "filename": "libstdc++-v3/doc/html/manual/using_macros.html", "status": "modified", "additions": 21, "deletions": 18, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9adc2d48acdadae96a52dc2ffc58c881fc4af6dc/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_macros.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9adc2d48acdadae96a52dc2ffc58c881fc4af6dc/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_macros.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fusing_macros.html?ref=9adc2d48acdadae96a52dc2ffc58c881fc4af6dc", "patch": "@@ -7,8 +7,9 @@\n       file <code class=\"filename\">c++config.h</code>, which\n       is generated during the libstdc++ configuration and build\n       process. This file is then included when needed by files part of\n-      the public libstdc++ API, like &lt;ios&gt;. Most of these macros\n-      should not be used by consumers of libstdc++, and are reserved\n+      the public libstdc++ API, like\n+      <code class=\"filename\">&lt;ios&gt;</code>. Most of these\n+      macros should not be used by consumers of libstdc++, and are reserved\n       for internal implementation use. <span class=\"emphasis\"><em>These macros cannot\n       be redefined</em></span>.\n    </p><p>\n@@ -18,21 +19,22 @@\n       general public.\n    </p><p>Below is the macro which users may check for library version\n       information. </p><div class=\"variablelist\"><dl class=\"variablelist\"><dt><span class=\"term\"><code class=\"code\">__GLIBCXX__</code></span></dt><dd><p>The current version of\n-    libstdc++ in compressed ISO date format, form of an unsigned\n+    libstdc++ in compressed ISO date format, as an unsigned\n     long. For details on the value of this particular macro for a\n-    particular release, please consult this <a class=\"link\" href=\"abi.html\" title=\"ABI Policy and Guidelines\">\n-    document</a>.\n+    particular release, please consult the <a class=\"link\" href=\"abi.html\" title=\"ABI Policy and Guidelines\">\n+    ABI Policy and Guidelines</a> appendix.\n     </p></dd></dl></div><p>Below are the macros which users may change with #define/#undef or\n       with -D/-U compiler flags.  The default state of the symbol is\n       listed.</p><p><span class=\"quote\">\u201c<span class=\"quote\">Configurable</span>\u201d</span> (or <span class=\"quote\">\u201c<span class=\"quote\">Not configurable</span>\u201d</span>) means\n       that the symbol is initially chosen (or not) based on\n       --enable/--disable options at library build and configure time\n-      (documented <a class=\"link\" href=\"configure.html\" title=\"Configure\">here</a>), with the\n-      various --enable/--disable choices being translated to\n+      (documented in\n+      <a class=\"link\" href=\"configure.html\" title=\"Configure\">Configure</a>),\n+      with the various --enable/--disable choices being translated to\n       #define/#undef).\n    </p><p> <acronym class=\"acronym\">ABI</acronym> means that changing from the default value may\n-  mean changing the <acronym class=\"acronym\">ABI</acronym> of compiled code. In other words, these\n-  choices control code which has already been compiled (i.e., in a\n+  mean changing the <acronym class=\"acronym\">ABI</acronym> of compiled code. In other words,\n+  these choices control code which has already been compiled (i.e., in a\n   binary such as libstdc++.a/.so).  If you explicitly #define or\n   #undef these macros, the <span class=\"emphasis\"><em>headers</em></span> may see different code\n   paths, but the <span class=\"emphasis\"><em>libraries</em></span> which you link against will not.\n@@ -53,19 +55,20 @@\n \t<code class=\"code\">--enable-concept-checks</code>.  When defined, performs\n \tcompile-time checking on certain template instantiations to\n \tdetect violations of the requirements of the standard.  This\n-\tis described in more detail <a class=\"link\" href=\"ext_compile_checks.html\" title=\"Chapter\u00a016.\u00a0Compile Time Checks\">here</a>.\n+\tis described in more detail in\n+\t<a class=\"link\" href=\"ext_compile_checks.html\" title=\"Chapter\u00a016.\u00a0Compile Time Checks\">Compile Time Checks</a>.\n       </p></dd><dt><span class=\"term\"><code class=\"code\">_GLIBCXX_DEBUG</code></span></dt><dd><p>\n \tUndefined by default. When defined, compiles user code using\n-    the <a class=\"link\" href=\"debug_mode.html\" title=\"Chapter\u00a017.\u00a0Debug Mode\">debug mode</a>.\n+\tthe <a class=\"link\" href=\"debug_mode.html\" title=\"Chapter\u00a017.\u00a0Debug Mode\">debug mode</a>.\n       </p></dd><dt><span class=\"term\"><code class=\"code\">_GLIBCXX_DEBUG_PEDANTIC</code></span></dt><dd><p>\n \tUndefined by default. When defined while compiling with\n-    the <a class=\"link\" href=\"debug_mode.html\" title=\"Chapter\u00a017.\u00a0Debug Mode\">debug mode</a>, makes\n-    the debug mode extremely picky by making the use of libstdc++\n-    extensions and libstdc++-specific behavior into errors.\n+\tthe <a class=\"link\" href=\"debug_mode.html\" title=\"Chapter\u00a017.\u00a0Debug Mode\">debug mode</a>, makes\n+\tthe debug mode extremely picky by making the use of libstdc++\n+\textensions and libstdc++-specific behavior into errors.\n       </p></dd><dt><span class=\"term\"><code class=\"code\">_GLIBCXX_PARALLEL</code></span></dt><dd><p>Undefined by default. When defined, compiles user code\n-    using the <a class=\"link\" href=\"parallel_mode.html\" title=\"Chapter\u00a018.\u00a0Parallel Mode\">parallel\n-    mode</a>.\n+\tusing the <a class=\"link\" href=\"parallel_mode.html\" title=\"Chapter\u00a018.\u00a0Parallel Mode\">parallel\n+\tmode</a>.\n       </p></dd><dt><span class=\"term\"><code class=\"code\">_GLIBCXX_PROFILE</code></span></dt><dd><p>Undefined by default. When defined, compiles user code\n-    using the <a class=\"link\" href=\"profile_mode.html\" title=\"Chapter\u00a019.\u00a0Profile Mode\">profile\n-    mode</a>.\n+\tusing the <a class=\"link\" href=\"profile_mode.html\" title=\"Chapter\u00a019.\u00a0Profile Mode\">profile\n+\tmode</a>.\n       </p></dd></dl></div></div><div class=\"navfooter\"><hr /><table width=\"100%\" summary=\"Navigation footer\"><tr><td width=\"40%\" align=\"left\"><a accesskey=\"p\" href=\"using_headers.html\">Prev</a>\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"u\" href=\"using.html\">Up</a></td><td width=\"40%\" align=\"right\">\u00a0<a accesskey=\"n\" href=\"using_namespaces.html\">Next</a></td></tr><tr><td width=\"40%\" align=\"left\" valign=\"top\">Headers\u00a0</td><td width=\"20%\" align=\"center\"><a accesskey=\"h\" href=\"../index.html\">Home</a></td><td width=\"40%\" align=\"right\" valign=\"top\">\u00a0Namespaces</td></tr></table></div></body></html>\n\\ No newline at end of file"}, {"sha": "cb79c205e6846357d019b9c06849ad47482d7a47", "filename": "libstdc++-v3/doc/xml/manual/concurrency_extensions.xml", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9adc2d48acdadae96a52dc2ffc58c881fc4af6dc/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fconcurrency_extensions.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9adc2d48acdadae96a52dc2ffc58c881fc4af6dc/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fconcurrency_extensions.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fconcurrency_extensions.xml?ref=9adc2d48acdadae96a52dc2ffc58c881fc4af6dc", "patch": "@@ -187,7 +187,7 @@ host hardware and operating system.\n <section xml:id=\"manual.ext.concurrency.impl\" xreflabel=\"Implementation\"><info><title>Implementation</title></info>\n   <?dbhtml filename=\"ext_concurrency_impl.html\"?>\n   \n-  <section xml:id=\"manual.ext.concurrency.impl.atomic_fallbacks\" xreflabel=\"Atomic F\"><info><title>Using Builtin Atomic Functions</title></info>\n+  <section xml:id=\"manual.ext.concurrency.impl.atomic_fallbacks\" xreflabel=\"Atomic F\"><info><title>Using Built-in Atomic Functions</title></info>\n     \n \n <para>The functions for atomic operations described above are either\n@@ -197,9 +197,21 @@ capable) or by library fallbacks.</para>\n <para>Compiler intrinsics (builtins) are always preferred.  However, as\n the compiler builtins for atomics are not universally implemented,\n using them directly is problematic, and can result in undefined\n-function calls. (An example of an undefined symbol from the use\n+function calls.\n+</para>\n+\n+<para>Prior to GCC 4.7 the older <code>__sync</code> intrinsics were used.\n+An example of an undefined symbol from the use\n of <code>__sync_fetch_and_add</code> on an unsupported host is a\n-missing reference to <code>__sync_fetch_and_add_4</code>.)\n+missing reference to <code>__sync_fetch_and_add_4</code>.\n+</para>\n+\n+<para>Current releases use the newer <code>__atomic</code> intrinsics,\n+which are implemented by library calls if the hardware doesn't support them.\n+Undefined references to functions like\n+<code>__atomic_is_lock_free</code> should be resolved by linking to\n+<filename class=\"libraryfile\">libatomic</filename>, which is usually\n+installed alongside libstdc++.\n </para>\n \n <para>In addition, on some hosts the compiler intrinsics are enabled"}, {"sha": "f6f615e17433ef50d1955977ab902dc5b4138ea8", "filename": "libstdc++-v3/doc/xml/manual/using.xml", "status": "modified", "additions": 54, "deletions": 32, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9adc2d48acdadae96a52dc2ffc58c881fc4af6dc/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fusing.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9adc2d48acdadae96a52dc2ffc58c881fc4af6dc/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fusing.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fusing.xml?ref=9adc2d48acdadae96a52dc2ffc58c881fc4af6dc", "patch": "@@ -6,8 +6,7 @@\n   <section xml:id=\"manual.intro.using.flags\" xreflabel=\"Flags\"><info><title>Command Options</title></info>\n     \n     <para>\n-      The set of features available in the GNU C++ library is shaped\n-      by\n+      The set of features available in the GNU C++ library is shaped by\n       several <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://gcc.gnu.org/onlinedocs/gcc-4.3.2/gcc/Invoking-GCC.html\">GCC\n       Command Options</link>. Options that impact libstdc++ are\n       enumerated and detailed in the table below.\n@@ -64,8 +63,20 @@\n \n     <row>\n       <entry><literal>-pthread</literal> or <literal>-pthreads</literal></entry>\n-      <entry>For ISO C++11 &lt;thread&gt;, &lt;future&gt;,\n-      &lt;mutex&gt;, or &lt;condition_variable&gt;.</entry>\n+      <entry>For ISO C++11\n+        <filename class=\"headerfile\">&lt;thread&gt;</filename>,\n+        <filename class=\"headerfile\">&lt;future&gt;</filename>,\n+        <filename class=\"headerfile\">&lt;mutex&gt;</filename>,\n+        or <filename class=\"headerfile\">&lt;condition_variable&gt;</filename>.\n+      </entry>\n+    </row>\n+\n+    <row>\n+      <entry><literal>-latomic</literal></entry>\n+      <entry>Linking to <filename class=\"libraryfile\">libatomic</filename>\n+        is required for some uses of ISO C++11\n+        <filename class=\"headerfile\">&lt;atomic&gt;</filename>.\n+      </entry>\n     </row>\n \n     <row>\n@@ -779,8 +790,9 @@ g++ -Winvalid-pch -I. -include stdc++.h -H -g -O2 hello.cc -o test.exe\n       file <filename class=\"headerfile\">c++config.h</filename>, which\n       is generated during the libstdc++ configuration and build\n       process. This file is then included when needed by files part of\n-      the public libstdc++ API, like &lt;ios&gt;. Most of these macros\n-      should not be used by consumers of libstdc++, and are reserved\n+      the public libstdc++ API, like\n+      <filename class=\"headerfile\">&lt;ios&gt;</filename>. Most of these\n+      macros should not be used by consumers of libstdc++, and are reserved\n       for internal implementation use. <emphasis>These macros cannot\n       be redefined</emphasis>.\n    </para>\n@@ -800,10 +812,10 @@ g++ -Winvalid-pch -I. -include stdc++.h -H -g -O2 hello.cc -o test.exe\n       <term><code>__GLIBCXX__</code></term>\n       <listitem>\n \t<para>The current version of\n-    libstdc++ in compressed ISO date format, form of an unsigned\n+    libstdc++ in compressed ISO date format, as an unsigned\n     long. For details on the value of this particular macro for a\n-    particular release, please consult this <link linkend=\"appendix.porting.abi\">\n-    document</link>.\n+    particular release, please consult the <link linkend=\"appendix.porting.abi\">\n+    ABI Policy and Guidelines</link> appendix.\n     </para>\n     </listitem>\n     </varlistentry>\n@@ -816,14 +828,15 @@ g++ -Winvalid-pch -I. -include stdc++.h -H -g -O2 hello.cc -o test.exe\n    <para><quote>Configurable</quote> (or <quote>Not configurable</quote>) means\n       that the symbol is initially chosen (or not) based on\n       --enable/--disable options at library build and configure time\n-      (documented <link linkend=\"manual.intro.setup.configure\">here</link>), with the\n-      various --enable/--disable choices being translated to\n+      (documented in\n+      <link linkend=\"manual.intro.setup.configure\">Configure</link>),\n+      with the various --enable/--disable choices being translated to\n       #define/#undef).\n    </para>\n \n    <para> <acronym>ABI</acronym> means that changing from the default value may\n-  mean changing the <acronym>ABI</acronym> of compiled code. In other words, these\n-  choices control code which has already been compiled (i.e., in a\n+  mean changing the <acronym>ABI</acronym> of compiled code. In other words,\n+  these choices control code which has already been compiled (i.e., in a\n   binary such as libstdc++.a/.so).  If you explicitly #define or\n   #undef these macros, the <emphasis>headers</emphasis> may see different code\n   paths, but the <emphasis>libraries</emphasis> which you link against will not.\n@@ -854,39 +867,40 @@ g++ -Winvalid-pch -I. -include stdc++.h -H -g -O2 hello.cc -o test.exe\n \t<code>--enable-concept-checks</code>.  When defined, performs\n \tcompile-time checking on certain template instantiations to\n \tdetect violations of the requirements of the standard.  This\n-\tis described in more detail <link linkend=\"manual.ext.compile_checks\">here</link>.\n+\tis described in more detail in\n+\t<link linkend=\"manual.ext.compile_checks\">Compile Time Checks</link>.\n       </para>\n     </listitem></varlistentry>\n \n     <varlistentry><term><code>_GLIBCXX_DEBUG</code></term>\n     <listitem>\n       <para>\n \tUndefined by default. When defined, compiles user code using\n-    the <link linkend=\"manual.ext.debug_mode\">debug mode</link>.\n+\tthe <link linkend=\"manual.ext.debug_mode\">debug mode</link>.\n       </para>\n     </listitem></varlistentry>\n     <varlistentry><term><code>_GLIBCXX_DEBUG_PEDANTIC</code></term>\n     <listitem>\n       <para>\n \tUndefined by default. When defined while compiling with\n-    the <link linkend=\"manual.ext.debug_mode\">debug mode</link>, makes\n-    the debug mode extremely picky by making the use of libstdc++\n-    extensions and libstdc++-specific behavior into errors.\n+\tthe <link linkend=\"manual.ext.debug_mode\">debug mode</link>, makes\n+\tthe debug mode extremely picky by making the use of libstdc++\n+\textensions and libstdc++-specific behavior into errors.\n       </para>\n     </listitem></varlistentry>\n     <varlistentry><term><code>_GLIBCXX_PARALLEL</code></term>\n     <listitem>\n       <para>Undefined by default. When defined, compiles user code\n-    using the <link linkend=\"manual.ext.parallel_mode\">parallel\n-    mode</link>.\n+\tusing the <link linkend=\"manual.ext.parallel_mode\">parallel\n+\tmode</link>.\n       </para>\n     </listitem></varlistentry>\n \n     <varlistentry><term><code>_GLIBCXX_PROFILE</code></term>\n     <listitem>\n       <para>Undefined by default. When defined, compiles user code\n-    using the <link linkend=\"manual.ext.profile_mode\">profile\n-    mode</link>.\n+\tusing the <link linkend=\"manual.ext.profile_mode\">profile\n+\tmode</link>.\n       </para>\n     </listitem></varlistentry>\n     </variablelist>\n@@ -1248,13 +1262,16 @@ A quick read of the relevant part of the GCC\n       all required macros to a compilation (if any such flags are\n       required then you must provide the flag for all compilations not\n       just linking) and link-library additions and/or replacements at\n-      link time.  The documentation is weak.  Here is a quick summary\n-      to display how ad hoc this is: On Solaris, both -pthreads and\n-      -threads (with subtly different meanings) are honored.  \n-      On GNU/Linux x86, -pthread is honored.  On FreeBSD,\n-      -pthread is honored.  Some other ports use other switches.\n-      AFAIK, none of this is properly documented anywhere other than\n-      in ``gcc -dumpspecs'' (look at lib and cpp entries).\n+      link time.  The documentation is weak.  On several targets (including\n+      GNU/Linux, Solaris and various BSDs) -pthread is honored.\n+      Some other ports use other switches.\n+      This is not well documented anywhere other than\n+      in \"gcc -dumpspecs\" (look at the 'lib' and 'cpp' entries).\n+   </para>\n+\n+   <para>\n+     Some uses of <classname>std::atomic</classname> also require linking\n+     to <filename class=\"libraryfile\">libatomic</filename>.\n    </para>\n \n     </section>\n@@ -1305,14 +1322,19 @@ gcc version 4.1.2 20070925 (Red Hat 4.1.2-33)\n \t Requisite command-line flags are used for atomic operations\n \t and threading. Examples of this include <code>-pthread</code>\n \t and <code>-march=native</code>, although specifics vary\n-\t depending on the host environment. See <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://gcc.gnu.org/onlinedocs/gcc/Option-Summary.html\">Machine\n+\t depending on the host environment. See\n+\t <link linkend=\"manual.intro.using.flags\">Command Options</link> and\n+\t <link xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"http://gcc.gnu.org/onlinedocs/gcc/Option-Summary.html\">Machine\n \t Dependent Options</link>.\n        </para>\n        </listitem>\n        <listitem>\n \t <para>\n-\t   An implementation of atomicity.h functions\n-\t   exists for the architecture in question. See the internals documentation for more <link linkend=\"internals.thread_safety\">details</link>.\n+\t   An implementation of the\n+\t   <filename class=\"headerfile\">atomicity.h</filename> functions\n+\t   exists for the architecture in question. See the\n+\t   <link linkend=\"internals.thread_safety\">internals\n+\t   documentation</link> for more details.\n        </para>\n        </listitem>\n "}]}