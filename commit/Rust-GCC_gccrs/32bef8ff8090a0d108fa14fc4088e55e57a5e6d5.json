{"sha": "32bef8ff8090a0d108fa14fc4088e55e57a5e6d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzJiZWY4ZmY4MDkwYTBkMTA4ZmExNGZjNDA4OGU1NWU1N2E1ZTZkNQ==", "commit": {"author": {"name": "Mark Eggleston", "email": "mark.eggleston@codethink.com", "date": "2019-11-25T10:36:25Z"}, "committer": {"name": "Mark Eggleston", "email": "markeggleston@gcc.gnu.org", "date": "2019-11-25T10:36:25Z"}, "message": "DEC comparisons - allow Hollerith constants in comparisons.\n\nThe -fdec option enables the use of Hollerith comparisons in comparisons\nwith INTEGER, COMPLEX, REAL and CHARACTER expressions.\n\n\tMark Eggleston  <mark.eggleston@codethink.com>\n\tJim MacArthur  <jim.macarthur@codethink.co.uk>\n\n\t* gfortran.texi: Update Hollerith constants support for character types\n\tand use in comparisons.\n\t* invoke.texi: Tidy up list of options. Update description of\n\t-fdec-char-conversions.\n\t* resolve.c (is_character_based): New.\n\t(Convert_hollerith_to_character): New.  (convert_to_numeric): New.\n\t(resolve_operator): If both sides are character based and -fdec is\n\tenabled convert Hollerith to character. If an operand is Hollerith, the\n\tother is numeric and -fdec is enabled convert to numeric.\n\t(resolve_ordinary_assign): Add check for -fdec-char-conversions for\n\tassignment of character literals.\n\n\tMark Eggleston <mark.eggleston@codethink.com>\n\tJim MacArthur <jim.macarthur@codethink.co.uk>\n\n\t* gfortran.dg/dec-comparison-character_1.f90: New test.\n\t* gfortran.dg/dec-comparison-character_2.f90: New test.\n\t* gfortran.dg/dec-comparison-character_3.f90: New test.\n\t* gfortran.dg/dec-comparison-complex_1.f90: New test.\n\t* gfortran.dg/dec-comparison-complex_2.f90: New test.\n\t* gfortran.dg/dec-comparison-complex_3.f90: New test.\n\t* gfortran.dg/dec-comparison-int_1.f90: New test.\n\t* gfortran.dg/dec-comparison-int_2.f90: New test.\n\t* gfortran.dg/dec-comparison-int_3.f90: New test.\n\t* gfortran.dg/dec-comparison-real_1.f90: New test.\n\t* gfortran.dg/dec-comparison-real_2.f90: New test.\n\t* gfortran.dg/dec-comparison-real_3.f90: New test.\n\t* gfortran.dg/dec-comparison.f90: New test.\n\n\nCo-Authored-By: Jim MacArthur <jim.macarthur@codethink.co.uk>\n\nFrom-SVN: r278674", "tree": {"sha": "a4574f79a8a1d771a269addff0231d400703b7d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4574f79a8a1d771a269addff0231d400703b7d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/comments", "author": {"login": "markeggleston", "id": 42180582, "node_id": "MDQ6VXNlcjQyMTgwNTgy", "avatar_url": "https://avatars.githubusercontent.com/u/42180582?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markeggleston", "html_url": "https://github.com/markeggleston", "followers_url": "https://api.github.com/users/markeggleston/followers", "following_url": "https://api.github.com/users/markeggleston/following{/other_user}", "gists_url": "https://api.github.com/users/markeggleston/gists{/gist_id}", "starred_url": "https://api.github.com/users/markeggleston/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markeggleston/subscriptions", "organizations_url": "https://api.github.com/users/markeggleston/orgs", "repos_url": "https://api.github.com/users/markeggleston/repos", "events_url": "https://api.github.com/users/markeggleston/events{/privacy}", "received_events_url": "https://api.github.com/users/markeggleston/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ee499b407f6c59fe71c91fa7ad9686d1a4edfce3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee499b407f6c59fe71c91fa7ad9686d1a4edfce3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee499b407f6c59fe71c91fa7ad9686d1a4edfce3"}], "stats": {"total": 426, "additions": 402, "deletions": 24}, "files": [{"sha": "95e22137bcaaa20a30e2817656a83d5f1dd69c58", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=32bef8ff8090a0d108fa14fc4088e55e57a5e6d5", "patch": "@@ -1,4 +1,17 @@\n-2019-11-20  Janne Blomqvist  <jb@gcc.gnu.org>\n+2019-11-25  Mark Eggleston  <mark.eggleston@codethink.com>\n+\t    Jim MacArthur  <jim.macarthur@codethink.co.uk>\n+\n+\t* gfortran.texi: Update Hollerith constants support for character types\n+\tand use in comparisons.\n+\t* invoke.texi: Tidy up list of options. Update description of\n+\t-fdec-char-conversions.\n+\t* resolve.c (is_character_based): New.\n+\t(Convert_hollerith_to_character): New.  (convert_to_numeric): New.\n+\t(resolve_operator): If both sides are character based and -fdec is\n+\tenabled convert Hollerith to character. If an operand is Hollerith, the\n+\tother is numeric and -fdec is enabled convert to numeric.\n+\t(resolve_ordinary_assign): Add check for -fdec-char-conversions for\n+\tassignment of character literals.2019-11-20  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR fortran/92463\n \tRevert r269139"}, {"sha": "96be58b992d72702685338509398a7a0e61485b7", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 22, "deletions": 10, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=32bef8ff8090a0d108fa14fc4088e55e57a5e6d5", "patch": "@@ -1916,14 +1916,14 @@ in I/O operations.\n @subsection Hollerith constants support\n @cindex Hollerith constants\n \n-GNU Fortran supports Hollerith constants in assignments, function\n-arguments, and @code{DATA} statements.  A Hollerith constant is written\n-as a string of characters preceded by an integer constant indicating the\n-character count, and the letter @code{H} or @code{h}, and stored in\n-bytewise fashion in a numeric (@code{INTEGER}, @code{REAL}, or\n-@code{COMPLEX}) or @code{LOGICAL} variable.  The constant will be padded\n-with spaces or truncated to fit the size of the variable in which it is\n-stored.\n+GNU Fortran supports Hollerith constants in assignments, @code{DATA}\n+statements, function and subroutine arguments. A Hollerith constant is\n+written as a string of characters preceded by an integer constant \n+indicating the character count, and the letter @code{H} or\n+@code{h}, and stored in bytewise fashion in a numeric (@code{INTEGER},\n+@code{REAL}, or @code{COMPLEX}), @code{LOGICAL} or @code{CHARACTER} variable.\n+The constant will be padded with spaces or truncated to fit the size of\n+the variable in which it is stored.\n \n Examples of valid uses of Hollerith constants:\n @smallexample\n@@ -1951,10 +1951,22 @@ case where the intent is specifically to initialize a numeric variable\n with a given byte sequence.  In these cases, the same result can be\n obtained by using the @code{TRANSFER} statement, as in this example.\n @smallexample\n-      INTEGER(KIND=4) :: a\n-      a = TRANSFER (\"abcd\", a)     ! equivalent to: a = 4Habcd\n+      integer(kind=4) :: a\n+      a = transfer (\"abcd\", a)     ! equivalent to: a = 4Habcd\n @end smallexample\n \n+The use of the @option{-fdec} option extends support of Hollerith constants\n+to comparisons:\n+@smallexample\n+      integer*4 a\n+      a = 4hABCD\n+      if (a .ne. 4habcd) then\n+        write(*,*) \"no match\"\n+      end if\n+@end smallexample\n+\n+Supported types are numeric (@code{INTEGER}, @code{REAL}, or @code{COMPLEX}),\n+and @code{CHARACTER}.\n \n @node Character conversion\n @subsection Character conversion"}, {"sha": "0bc054f01e548e79c1f0822e45b932803d85eefc", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=32bef8ff8090a0d108fa14fc4088e55e57a5e6d5", "patch": "@@ -117,17 +117,17 @@ by type.  Explanations are in the following sections.\n @item Fortran Language Options\n @xref{Fortran Dialect Options,,Options controlling Fortran dialect}.\n @gccoptlist{-fall-intrinsics -fallow-argument-mismatch -fallow-invalid-boz @gol\n--fbackslash -fcray-pointer -fd-lines-as-code -fd-lines-as-comments -fdec @gol\n--fdec-char-conversions -fdec-structure -fdec-intrinsic-ints -fdec-static @gol\n--fdec-math -fdec-include -fdec-format-defaults -fdec-blank-format-item @gol\n--fdefault-double-8 -fdefault-integer-8 -fdefault-real-8 -fdefault-real-10 @gol\n--fdefault-real-16 -fdollar-ok -ffixed-line-length-@var{n} @gol\n--ffixed-line-length-none -fpad-source -ffree-form @gol\n--ffree-line-length-@var{n} -ffree-line-length-none -fimplicit-none @gol\n--finteger-4-integer-8 -fmax-identifier-length -fmodule-private @gol\n--ffixed-form -fno-range-check -fopenacc -fopenmp -freal-4-real-10 @gol\n--freal-4-real-16 -freal-4-real-8 -freal-8-real-10 -freal-8-real-16 @gol\n--freal-8-real-4 -std=@var{std} -ftest-forall-temp\n+-fbackslash -fcray-pointer -fd-lines-as-code -fd-lines-as-comments @gol\n+-fdec -fdec-char-conversions -fdec-structure -fdec-intrinsic-ints @gol\n+-fdec-static -fdec-math -fdec-include -fdec-format-defaults @gol\n+-fdec-blank-format-item -fdefault-double-8 -fdefault-integer-8 @gol\n+-fdefault-real-8 -fdefault-real-10 -fdefault-real-16 -fdollar-ok @gol\n+-ffixed-line-length-@var{n} -ffixed-line-length-none -fpad-source @gol\n+-ffree-form -ffree-line-length-@var{n} -ffree-line-length-none @gol\n+-fimplicit-none -finteger-4-integer-8 -fmax-identifier-length @gol\n+-fmodule-private -ffixed-form -fno-range-check -fopenacc -fopenmp @gol\n+-freal-4-real-10 -freal-4-real-16 -freal-4-real-8 -freal-8-real-10 @gol\n+-freal-8-real-16 -freal-8-real-4 -std=@var{std} -ftest-forall-temp\n }\n \n @item Preprocessing Options\n@@ -283,7 +283,7 @@ If @option{-fd-lines-as-code}/@option{-fd-lines-as-comments} are unset, then\n \n @item -fdec-char-conversions\n @opindex @code{fdec-char-conversions}\n-Enable the use of character literals in assignments and data statements\n+Enable the use of character literals in assignments and @code{DATA} statements\n for non-character variables.\n \n @item -fdec-structure"}, {"sha": "278dad363fd0c776295fd964c085317b54f95131", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 53, "deletions": 1, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=32bef8ff8090a0d108fa14fc4088e55e57a5e6d5", "patch": "@@ -3900,6 +3900,42 @@ impure_function_callback (gfc_expr **e, int *walk_subtrees ATTRIBUTE_UNUSED,\n   return 0;\n }\n \n+/* Return true if TYPE is character based, false otherwise.  */\n+\n+static int\n+is_character_based (bt type)\n+{\n+  return type == BT_CHARACTER || type == BT_HOLLERITH;\n+}\n+\n+\n+/* If expression is a hollerith, convert it to character and issue a warning\n+   for the conversion.  */\n+\n+static void\n+convert_hollerith_to_character (gfc_expr *e)\n+{\n+  if (e->ts.type == BT_HOLLERITH)\n+    {\n+      gfc_typespec t;\n+      gfc_clear_ts (&t);\n+      t.type = BT_CHARACTER;\n+      t.kind = e->ts.kind;\n+      gfc_convert_type_warn (e, &t, 2, 1);\n+    }\n+}\n+\n+/* Convert to numeric and issue a warning for the conversion.  */\n+\n+static void\n+convert_to_numeric (gfc_expr *a, gfc_expr *b)\n+{\n+  gfc_typespec t;\n+  gfc_clear_ts (&t);\n+  t.type = b->ts.type;\n+  t.kind = b->ts.kind;\n+  gfc_convert_type_warn (a, &t, 2, 1);\n+}\n \n /* Resolve an operator expression node.  This can involve replacing the\n    operation with a user defined function call.  */\n@@ -4100,6 +4136,15 @@ resolve_operator (gfc_expr *e)\n     case INTRINSIC_EQ_OS:\n     case INTRINSIC_NE:\n     case INTRINSIC_NE_OS:\n+\n+      if (flag_dec\n+\t  && is_character_based (op1->ts.type)\n+\t  && is_character_based (op2->ts.type))\n+\t{\n+\t  convert_hollerith_to_character (op1);\n+\t  convert_hollerith_to_character (op2);\n+\t}\n+\n       if (op1->ts.type == BT_CHARACTER && op2->ts.type == BT_CHARACTER\n \t  && op1->ts.kind == op2->ts.kind)\n \t{\n@@ -4137,6 +4182,13 @@ resolve_operator (gfc_expr *e)\n \t  if (op1->ts.type == BT_REAL && !gfc_boz2real (op2, op1->ts.kind))\n \t    return false;\n \t}\n+      if (flag_dec\n+\t  && op1->ts.type == BT_HOLLERITH && gfc_numeric_ts (&op2->ts))\n+\tconvert_to_numeric (op1, op2);\n+\n+      if (flag_dec\n+\t  && gfc_numeric_ts (&op1->ts) && op2->ts.type == BT_HOLLERITH)\n+\tconvert_to_numeric (op2, op1);\n \n       if (gfc_numeric_ts (&op1->ts) && gfc_numeric_ts (&op2->ts))\n \t{\n@@ -10693,7 +10745,7 @@ resolve_ordinary_assign (gfc_code *code, gfc_namespace *ns)\n \n   if ((gfc_numeric_ts (&lhs->ts) || lhs->ts.type == BT_LOGICAL)\n       && rhs->ts.type == BT_CHARACTER\n-      && rhs->expr_type != EXPR_CONSTANT)\n+      && (rhs->expr_type != EXPR_CONSTANT || !flag_dec_char_conversions))\n     {\n       /* Use of -fdec-char-conversions allows assignment of character data\n \t to non-character variables.  This not permited for nonconstant"}, {"sha": "b8558187c57a7a5b5c85b9a66fac3605b63e17e6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=32bef8ff8090a0d108fa14fc4088e55e57a5e6d5", "patch": "@@ -1,3 +1,20 @@\n+2019-11-25  Mark Eggleston <mark.eggleston@codethink.com>\n+\t    Jim MacArthur <jim.macarthur@codethink.co.uk>\n+\n+\t* gfortran.dg/dec-comparison-character_1.f90: New test.\n+\t* gfortran.dg/dec-comparison-character_2.f90: New test.\n+\t* gfortran.dg/dec-comparison-character_3.f90: New test.\n+\t* gfortran.dg/dec-comparison-complex_1.f90: New test.\n+\t* gfortran.dg/dec-comparison-complex_2.f90: New test.\n+\t* gfortran.dg/dec-comparison-complex_3.f90: New test.\n+\t* gfortran.dg/dec-comparison-int_1.f90: New test.\n+\t* gfortran.dg/dec-comparison-int_2.f90: New test.\n+\t* gfortran.dg/dec-comparison-int_3.f90: New test.\n+\t* gfortran.dg/dec-comparison-real_1.f90: New test.\n+\t* gfortran.dg/dec-comparison-real_2.f90: New test.\n+\t* gfortran.dg/dec-comparison-real_3.f90: New test.\n+\t* gfortran.dg/dec-comparison.f90: New test.\n+\n 2019-11-25  Martin Jambor  <mjambor@suse.cz>\n \n \tPR ipa/91956"}, {"sha": "0e542e8354b3c8682e928b12f1d28c4c8dfbe9cd", "filename": "gcc/testsuite/gfortran.dg/dec-comparison-character_1.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-character_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-character_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-character_1.f90?ref=32bef8ff8090a0d108fa14fc4088e55e57a5e6d5", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do run }\n+! { dg-options \"-fdec\" }\n+!\n+! Test case contributed by Mark Eggleston  <mark.eggleston@codethink.com>\n+!\n+\n+program convert\n+  character(4) :: c = 4HJMAC\n+  if (4HJMAC.ne.4HJMAC) stop 1\n+  if (4HJMAC.ne.\"JMAC\") stop 2\n+  if (4HJMAC.eq.\"JMAN\") stop 3\n+  if (\"JMAC\".eq.4HJMAN) stop 4\n+  if (\"AAAA\".eq.5HAAAAA) stop 5\n+  if (\"BBBBB\".eq.5HBBBB ) stop 6\n+  if (4HJMAC.ne.c) stop 7\n+  if (c.ne.4HJMAC) stop 8\n+end program\n+"}, {"sha": "d35eaad17e135a19145ec9b3663bf2d9b9f07abe", "filename": "gcc/testsuite/gfortran.dg/dec-comparison-character_2.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-character_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-character_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-character_2.f90?ref=32bef8ff8090a0d108fa14fc4088e55e57a5e6d5", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do run }\n+! { dg-options \"-fdec -Wconversion\" }\n+!\n+! Test case contributed by Mark Eggleston  <mark.eggleston@codethink.com>\n+!\n+\n+include \"dec-comparison-character_1.f90\"\n+\n+! { dg-warning \"HOLLERITH to CHARACTER\" \" \" { target *-*-* } 8 }\n+! { dg-warning \"HOLLERITH to CHARACTER\" \" \" { target *-*-* } 9 }\n+! { dg-warning \"HOLLERITH to CHARACTER\" \" \" { target *-*-* } 10 }\n+! { dg-warning \"HOLLERITH to CHARACTER\" \" \" { target *-*-* } 11 }\n+! { dg-warning \"HOLLERITH to CHARACTER\" \" \" { target *-*-* } 12 }\n+! { dg-warning \"HOLLERITH to CHARACTER\" \" \" { target *-*-* } 13 }\n+! { dg-warning \"HOLLERITH to CHARACTER\" \" \" { target *-*-* } 14 }\n+! { dg-warning \"HOLLERITH to CHARACTER\" \" \" { target *-*-* } 15 }\n+! { dg-warning \"HOLLERITH to CHARACTER\" \" \" { target *-*-* } 16 }\n+"}, {"sha": "adbb554bfbe6ab30006daffe136a51755aa6c2e0", "filename": "gcc/testsuite/gfortran.dg/dec-comparison-character_3.f90", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-character_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-character_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-character_3.f90?ref=32bef8ff8090a0d108fa14fc4088e55e57a5e6d5", "patch": "@@ -0,0 +1,26 @@\n+! { dg-do compile }\n+!\n+! Test case contributed by Mark Eggleston  <mark.eggleston@codethink.com>\n+!\n+\n+include \"dec-comparison-character_1.f90\"\n+\n+! { dg-warning \"Legacy Extension: Hollerith constant at\" \" \" { target *-*-* } 8 }\n+! { dg-warning \"Legacy Extension: Hollerith constant at\" \" \" { target *-*-* } 9 }\n+! { dg-warning \"Legacy Extension: Hollerith constant at\" \" \" { target *-*-* } 10 }\n+! { dg-warning \"Legacy Extension: Hollerith constant at\" \" \" { target *-*-* } 11 }\n+! { dg-warning \"Legacy Extension: Hollerith constant at\" \" \" { target *-*-* } 12 }\n+! { dg-warning \"Legacy Extension: Hollerith constant at\" \" \" { target *-*-* } 13 }\n+! { dg-warning \"Legacy Extension: Hollerith constant at\" \" \" { target *-*-* } 14 }\n+! { dg-warning \"Legacy Extension: Hollerith constant at\" \" \" { target *-*-* } 15 }\n+! { dg-warning \"Legacy Extension: Hollerith constant at\" \" \" { target *-*-* } 16 }\n+! { dg-warning \"Extension: Conversion from HOLLERITH to CHARACTER\" \" \" { target *-*-* } 8 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 9 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 10 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 11 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 12 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 13 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 14 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 15 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 16 }\n+"}, {"sha": "4bbb9a18b881c45845e6fb9ffbaed30624a0ef2b", "filename": "gcc/testsuite/gfortran.dg/dec-comparison-complex_1.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-complex_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-complex_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-complex_1.f90?ref=32bef8ff8090a0d108fa14fc4088e55e57a5e6d5", "patch": "@@ -0,0 +1,17 @@\n+! { dg-do run }\n+! { dg-options \"-fdec\" }\n+!\n+! Test case contributed by Mark Eggleston  <mark.eggleston@codethink.com>\n+!\n+\n+program convert\n+  complex(4) :: a\n+  complex(4) :: b\n+  a = 8HABCDABCD\n+  b = transfer(\"ABCDABCD\", b);\n+  ! Hollerith constants\n+  if (a.ne.8HABCDABCD) stop 1\n+  if (a.eq.8HABCEABCE) stop 2\n+  if (8HABCDABCD.ne.b) stop 3\n+  if (8HABCEABCE.eq.b) stop 4\n+end program"}, {"sha": "82372095362b6bb0f81d754bf2b71eaf016938c5", "filename": "gcc/testsuite/gfortran.dg/dec-comparison-complex_2.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-complex_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-complex_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-complex_2.f90?ref=32bef8ff8090a0d108fa14fc4088e55e57a5e6d5", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do run }\n+! { dg-options \"-fdec -Wconversion\" }\n+!\n+! Test case contributed by Mark Eggleston  <mark.eggleston@codethink.com>\n+!\n+\n+include \"dec-comparison-complex_1.f90\"\n+\n+! { dg-warning \"Conversion from HOLLERITH\" \" \" { target *-*-* } 10 }\n+! { dg-warning \"Conversion from HOLLERITH\" \" \" { target *-*-* } 13 }\n+! { dg-warning \"Conversion from HOLLERITH\" \" \" { target *-*-* } 14 }\n+! { dg-warning \"Conversion from HOLLERITH\" \" \" { target *-*-* } 15 }\n+! { dg-warning \"Conversion from HOLLERITH\" \" \" { target *-*-* } 16 }\n+"}, {"sha": "9af12d9f8a016421ac0b283a0a64b621c7f47b82", "filename": "gcc/testsuite/gfortran.dg/dec-comparison-complex_3.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-complex_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-complex_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-complex_3.f90?ref=32bef8ff8090a0d108fa14fc4088e55e57a5e6d5", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do compile }\n+!\n+! Test case contributed by Mark Eggleston  <mark.eggleston@codethink.com>\n+!\n+\n+include \"dec-comparison-complex_1.f90\"\n+\n+! { dg-warning \"Legacy Extension: Hollerith constant at\" \" \" { target *-*-* } 10 }\n+! { dg-warning \"Legacy Extension: Hollerith constant at\" \" \" { target *-*-* } 13 }\n+! { dg-warning \"Legacy Extension: Hollerith constant at\" \" \" { target *-*-* } 14 }\n+! { dg-warning \"Legacy Extension: Hollerith constant at\" \" \" { target *-*-* } 15 }\n+! { dg-warning \"Legacy Extension: Hollerith constant at\" \" \" { target *-*-* } 16 }\n+! { dg-warning \"Conversion from HOLLERITH\" \" \" { target *-*-* } 10 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 13 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 14 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 15 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 16 }\n+"}, {"sha": "257cc1ddef706e199842539e2e31d8e5457d43ca", "filename": "gcc/testsuite/gfortran.dg/dec-comparison-int_1.f90", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-int_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-int_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-int_1.f90?ref=32bef8ff8090a0d108fa14fc4088e55e57a5e6d5", "patch": "@@ -0,0 +1,22 @@\n+! { dg-do run }\n+! { dg-options \"-fdec\" }\n+!\n+! Test case contributed by Mark Eggleston  <mark.eggleston@codethink.com>\n+!\n+\n+program convert\n+  integer(4) :: a\n+  integer(4) :: b\n+  a = 4HABCD\n+  b = transfer(\"ABCD\", b)\n+  ! Hollerith constants\n+  if (a.ne.4HABCD) stop 1\n+  if (a.eq.4HABCE) stop 2\n+  if (4HABCD.ne.b) stop 3\n+  if (4HABCE.eq.b) stop 4\n+  if (4HABCE.lt.a) stop 5\n+  if (a.gt.4HABCE) stop 6\n+  if (4HABCE.le.a) stop 7\n+  if (a.ge.4HABCE) stop 8\n+end program\n+"}, {"sha": "10d00071f225ba76d62ccc8b0fcecbcf14a1b802", "filename": "gcc/testsuite/gfortran.dg/dec-comparison-int_2.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-int_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-int_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-int_2.f90?ref=32bef8ff8090a0d108fa14fc4088e55e57a5e6d5", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do run }\n+! { dg-options \"-fdec -Wconversion\" }\n+!\n+! Test case contributed by Mark Eggleston  <mark.eggleston@codethink.com>\n+!\n+\n+include \"dec-comparison-int_1.f90\"\n+\n+! { dg-warning \"Conversion from HOLLERITH\" \" \" { target *-*-* } 10 }\n+! { dg-warning \"Conversion from HOLLERITH\" \" \" { target *-*-* } 13 }\n+! { dg-warning \"Conversion from HOLLERITH\" \" \" { target *-*-* } 14 }\n+! { dg-warning \"Conversion from HOLLERITH\" \" \" { target *-*-* } 15 }\n+! { dg-warning \"Conversion from HOLLERITH\" \" \" { target *-*-* } 16 }\n+! { dg-warning \"Conversion from HOLLERITH\" \" \" { target *-*-* } 17 }\n+! { dg-warning \"Conversion from HOLLERITH\" \" \" { target *-*-* } 18 }\n+! { dg-warning \"Conversion from HOLLERITH\" \" \" { target *-*-* } 19 }\n+! { dg-warning \"Conversion from HOLLERITH\" \" \" { target *-*-* } 20 }\n+"}, {"sha": "bf17272676e1c9351b1be713ee599c66d82403ca", "filename": "gcc/testsuite/gfortran.dg/dec-comparison-int_3.f90", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-int_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-int_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-int_3.f90?ref=32bef8ff8090a0d108fa14fc4088e55e57a5e6d5", "patch": "@@ -0,0 +1,26 @@\n+! { dg-do compile }\n+!\n+! Test case contributed by Mark Eggleston  <mark.eggleston@codethink.com>\n+!\n+\n+include \"dec-comparison-int_1.f90\"\n+\n+! { dg-warning \"Extension: Hollerith constant at\" \" \" { target *-*-* } 10 }\n+! { dg-warning \"Extension: Hollerith constant at\" \" \" { target *-*-* } 13 }\n+! { dg-warning \"Extension: Hollerith constant at\" \" \" { target *-*-* } 14 }\n+! { dg-warning \"Extension: Hollerith constant at\" \" \" { target *-*-* } 15 }\n+! { dg-warning \"Extension: Hollerith constant at\" \" \" { target *-*-* } 16 }\n+! { dg-warning \"Extension: Hollerith constant at\" \" \" { target *-*-* } 17 }\n+! { dg-warning \"Extension: Hollerith constant at\" \" \" { target *-*-* } 18 }\n+! { dg-warning \"Extension: Hollerith constant at\" \" \" { target *-*-* } 19 }\n+! { dg-warning \"Extension: Hollerith constant at\" \" \" { target *-*-* } 20 }\n+! { dg-warning \"HOLLERITH to INTEGER\" \" \" { target *-*-* } 10 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 13 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 14 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 15 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 16 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 17 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 18 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 19 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 20 }\n+"}, {"sha": "a8d08e952cb8d368bd8b419a61ca853fe6714d26", "filename": "gcc/testsuite/gfortran.dg/dec-comparison-real_1.f90", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-real_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-real_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-real_1.f90?ref=32bef8ff8090a0d108fa14fc4088e55e57a5e6d5", "patch": "@@ -0,0 +1,22 @@\n+! { dg-do run }\n+! { dg-options \"-fdec\" }\n+!\n+! Test case contributed by Mark Eggleston  <mark.eggleston@codethink.com>\n+!\n+\n+program convert\n+  real(4) :: a\n+  real(4) :: b\n+  a = 4HABCD\n+  b = transfer(\"ABCD\", b)\n+  ! Hollerith constants\n+  if (a.ne.4HABCD) stop 1\n+  if (a.eq.4HABCE) stop 2\n+  if (4HABCD.ne.b) stop 3\n+  if (4HABCE.eq.b) stop 4\n+  if (4HABCE.lt.a) stop 5\n+  if (a.gt.4HABCE) stop 6\n+  if (4HABCE.le.a) stop 7\n+  if (a.ge.4HABCE) stop 8\n+end program\n+"}, {"sha": "9b65901b92f8a0a14220da647f661060aeaa8938", "filename": "gcc/testsuite/gfortran.dg/dec-comparison-real_2.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-real_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-real_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-real_2.f90?ref=32bef8ff8090a0d108fa14fc4088e55e57a5e6d5", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do run }\n+! { dg-options \"-fdec -Wconversion\" }\n+!\n+! Test case contributed by Mark Eggleston  <mark.eggleston@codethink.com>\n+!\n+\n+include \"dec-comparison-real_1.f90\"\n+\n+! { dg-warning \"Conversion from HOLLERITH\" \" \" { target *-*-* } 10 }\n+! { dg-warning \"Conversion from HOLLERITH\" \" \" { target *-*-* } 13 }\n+! { dg-warning \"Conversion from HOLLERITH\" \" \" { target *-*-* } 14 }\n+! { dg-warning \"Conversion from HOLLERITH\" \" \" { target *-*-* } 15 }\n+! { dg-warning \"Conversion from HOLLERITH\" \" \" { target *-*-* } 16 }\n+! { dg-warning \"Conversion from HOLLERITH\" \" \" { target *-*-* } 17 }\n+! { dg-warning \"Conversion from HOLLERITH\" \" \" { target *-*-* } 18 }\n+! { dg-warning \"Conversion from HOLLERITH\" \" \" { target *-*-* } 19 }\n+! { dg-warning \"Conversion from HOLLERITH\" \" \" { target *-*-* } 20 }\n+"}, {"sha": "1c2d496f9f01d8e18e236176149929ec6cbc7ca7", "filename": "gcc/testsuite/gfortran.dg/dec-comparison-real_3.f90", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-real_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-real_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison-real_3.f90?ref=32bef8ff8090a0d108fa14fc4088e55e57a5e6d5", "patch": "@@ -0,0 +1,26 @@\n+! { dg-do compile }\n+!\n+! Test case contributed by Mark Eggleston  <mark.eggleston@codethink.com>\n+!\n+\n+include \"dec-comparison-real_1.f90\"\n+\n+! { dg-warning \"Legacy Extension: Hollerith constant at\" \" \" { target *-*-* } 10 }\n+! { dg-warning \"Legacy Extension: Hollerith constant at\" \" \" { target *-*-* } 13 }\n+! { dg-warning \"Legacy Extension: Hollerith constant at\" \" \" { target *-*-* } 14 }\n+! { dg-warning \"Legacy Extension: Hollerith constant at\" \" \" { target *-*-* } 15 }\n+! { dg-warning \"Legacy Extension: Hollerith constant at\" \" \" { target *-*-* } 16 }\n+! { dg-warning \"Legacy Extension: Hollerith constant at\" \" \" { target *-*-* } 17 }\n+! { dg-warning \"Legacy Extension: Hollerith constant at\" \" \" { target *-*-* } 18 }\n+! { dg-warning \"Legacy Extension: Hollerith constant at\" \" \" { target *-*-* } 19 }\n+! { dg-warning \"Legacy Extension: Hollerith constant at\" \" \" { target *-*-* } 20 }\n+! { dg-warning \"Conversion from HOLLERITH\" \" \" { target *-*-* } 10 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 13 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 14 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 15 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 16 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 17 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 18 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 19 }\n+! { dg-error \"Operands of comparison operator\" \" \" { target *-*-* } 20 }\n+"}, {"sha": "b0b28e55111772633249764b612b51fd04e68269", "filename": "gcc/testsuite/gfortran.dg/dec-comparison.f90", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32bef8ff8090a0d108fa14fc4088e55e57a5e6d5/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec-comparison.f90?ref=32bef8ff8090a0d108fa14fc4088e55e57a5e6d5", "patch": "@@ -0,0 +1,41 @@\n+! { dg-do run }\n+! { dg-options \"-fdec\" }\n+!\n+! Test case contributed by Mark Eggleston  <mark.eggleston@codethink.com>\n+!\n+! Hollerith constants and character literals are allowed in comparisons,\n+! check that character variables can not be compared with numeric variables.\n+\n+program convert\n+  character(4) :: a = 4hJMAC\n+  integer(4) :: b = \"JMAC\"\n+  real(4) :: c = \"JMAC\"\n+  complex(4) :: d = \"JMACJMAC\"\n+  ! integers\n+  if (a.ne.b) stop 1 ! { dg-error \"Operands of comparison\" }\n+  if (b.eq.a) stop 2 ! { dg-error \"Operands of comparison\" }\n+  if (a.ge.b) stop 3 ! { dg-error \"Operands of comparison\" }\n+  if (b.ge.a) stop 4 ! { dg-error \"Operands of comparison\" }\n+  if (a.gt.b) stop 5 ! { dg-error \"Operands of comparison\" }\n+  if (b.gt.a) stop 6 ! { dg-error \"Operands of comparison\" }\n+  if (a.le.b) stop 3 ! { dg-error \"Operands of comparison\" }\n+  if (b.le.a) stop 4 ! { dg-error \"Operands of comparison\" }\n+  if (a.lt.b) stop 5 ! { dg-error \"Operands of comparison\" }\n+  if (b.lt.a) stop 6 ! { dg-error \"Operands of comparison\" }\n+  ! reals\n+  if (a.ne.c) stop 7 ! { dg-error \"Operands of comparison\" }\n+  if (c.eq.a) stop 8 ! { dg-error \"Operands of comparison\" }\n+  if (a.ge.c) stop 9 ! { dg-error \"Operands of comparison\" }\n+  if (c.ge.a) stop 10 ! { dg-error \"Operands of comparison\" }\n+  if (a.gt.c) stop 11 ! { dg-error \"Operands of comparison\" }\n+  if (c.gt.a) stop 12 ! { dg-error \"Operands of comparison\" }\n+  if (a.le.c) stop 13 ! { dg-error \"Operands of comparison\" }\n+  if (c.le.a) stop 14 ! { dg-error \"Operands of comparison\" }\n+  if (a.lt.c) stop 15 ! { dg-error \"Operands of comparison\" }\n+  if (c.lt.a) stop 16 ! { dg-error \"Operands of comparison\" }\n+  ! complexes\n+  a = \"JMACJMAC\"\n+  if (a.ne.d) stop 17 ! { dg-error \"Operands of comparison\" }\n+  if (d.eq.a) stop 18 ! { dg-error \"Operands of comparison\" }\n+end program\n+"}]}