{"sha": "c2a2650529c07faeb521ac3bdb1453b2938f648a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJhMjY1MDUyOWMwN2ZhZWI1MjFhYzNiZGIxNDUzYjI5MzhmNjQ4YQ==", "commit": {"author": {"name": "Gerald Pfeifer", "email": "pfeifer@dbai.tuwien.ac.at", "date": "1998-12-30T05:28:05Z"}, "committer": {"name": "Gerald Pfeifer", "email": "gerald@gcc.gnu.org", "date": "1998-12-30T05:28:05Z"}, "message": "gcc.texi (Non-bugs): ``Empty'' loops will be optimized away in the future...\n\n\t* gcc.texi (Non-bugs): ``Empty'' loops will be optimized away in\n\tthe future; indeed that already happens in some cases.\n\nFrom-SVN: r24442", "tree": {"sha": "7c67d5b2f70813a6df0a6dcbc953fa4d5b25eead", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c67d5b2f70813a6df0a6dcbc953fa4d5b25eead"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2a2650529c07faeb521ac3bdb1453b2938f648a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2a2650529c07faeb521ac3bdb1453b2938f648a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2a2650529c07faeb521ac3bdb1453b2938f648a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2a2650529c07faeb521ac3bdb1453b2938f648a/comments", "author": null, "committer": null, "parents": [{"sha": "30dfe54ae2534ed75ce025884ead2d09dc85c0ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30dfe54ae2534ed75ce025884ead2d09dc85c0ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30dfe54ae2534ed75ce025884ead2d09dc85c0ce"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "8629ce799f4e5f3746160eb4ccd8dde6beadf620", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a2650529c07faeb521ac3bdb1453b2938f648a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a2650529c07faeb521ac3bdb1453b2938f648a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c2a2650529c07faeb521ac3bdb1453b2938f648a", "patch": "@@ -1,3 +1,8 @@\n+Mon Dec 28 19:26:32 1998  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n+\n+\t* gcc.texi (Non-bugs): ``Empty'' loops will be optimized away in\n+\tthe future; indeed that already happens in some cases.\n+\n Tue Dec 29 11:58:53 1998  Richard Henderson  <rth@cygnus.com>\n \n \t* sparc.c (input_operand): Recognize (const (constant_p_rtx))."}, {"sha": "06551cd036c9651f3afac878b7cc7559b914755c", "filename": "gcc/gcc.texi", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2a2650529c07faeb521ac3bdb1453b2938f648a/gcc%2Fgcc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2a2650529c07faeb521ac3bdb1453b2938f648a/gcc%2Fgcc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.texi?ref=c2a2650529c07faeb521ac3bdb1453b2938f648a", "patch": "@@ -2005,12 +2005,18 @@ test explicitly for C++ as well.\n @item\n Deleting ``empty'' loops.\n \n-GNU CC does not delete ``empty'' loops because the most likely reason\n-you would put one in a program is to have a delay.  Deleting them will\n-not make real programs run any faster, so it would be pointless.\n-\n-It would be different if optimization of a nonempty loop could produce\n-an empty one.  But this generally can't happen.\n+Historically, GNU CC has not deleted ``empty'' loops under the\n+assumption that the most likely reason you would put one in a program is\n+to have a delay, so deleting them will not make real programs run any\n+faster.\n+\n+However, the rationale here is that optimization of a nonempty loop\n+cannot produce an empty one, which holds for C but is not always the\n+case for C++.\n+\n+Moreover, with @samp{-funroll-loops} small ``empty'' loops are already\n+removed, so the current behavior is both sub-optimal and inconsistent\n+and will change in the future.\n \n @item\n Making side effects happen in the same order as in some other compiler."}]}