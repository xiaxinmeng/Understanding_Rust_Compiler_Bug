{"sha": "93e520a2dbc3f73508916e9d41ddcf529cd3d1da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNlNTIwYTJkYmMzZjczNTA4OTE2ZTlkNDFkZGNmNTI5Y2QzZDFkYQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2010-01-29T15:55:13Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2010-01-29T15:55:13Z"}, "message": "inclhack.def (solaris_int_limits_3): New fix.\n\n\t* inclhack.def (solaris_int_limits_3): New fix.\n\t* fixincl.x: Regenerate.\n\t* tests/base/sys/int_limits.h [SOLARIS_INT_LIMITS_3_CHECK]: New\n\ttest.\n\n\t* inclhack.def (solaris_int_const, solaris_int_limits_1,\n\tsolaris_int_limits_2 ): Applies to Solaris 2 in general.\n\tRemove select.\n\tAdd mach for *-*-solaris2*.\n\tChange second c_fix_arg to select.\n\tRemove #pragma ident from test_text.\n\t* fixincl.x: Regenerate.\n\t* tests/base/sys/int_const.h [SOLARIS_INT_CONST_CHECK]: Remove\n\t#pragma trigger text.\n\t* tests/base/sys/int_limits.h [SOLARIS_INT_LIMITS_1_CHECK,\n\tSOLARIS_INT_LIMITS_2_CHECK]: Likewise.\n\nFrom-SVN: r156356", "tree": {"sha": "1fc639db9a3478517e8665766efb4486fccf7d6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fc639db9a3478517e8665766efb4486fccf7d6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93e520a2dbc3f73508916e9d41ddcf529cd3d1da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93e520a2dbc3f73508916e9d41ddcf529cd3d1da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93e520a2dbc3f73508916e9d41ddcf529cd3d1da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93e520a2dbc3f73508916e9d41ddcf529cd3d1da/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "41d1138f79771988badef3ea72e6c4c3dac8bebc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41d1138f79771988badef3ea72e6c4c3dac8bebc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41d1138f79771988badef3ea72e6c4c3dac8bebc"}], "stats": {"total": 144, "additions": 112, "deletions": 32}, "files": [{"sha": "667d3dfe7b8855f3e935a32e78c57c705eee62ca", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93e520a2dbc3f73508916e9d41ddcf529cd3d1da/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93e520a2dbc3f73508916e9d41ddcf529cd3d1da/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=93e520a2dbc3f73508916e9d41ddcf529cd3d1da", "patch": "@@ -1,3 +1,22 @@\n+2010-01-29  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* inclhack.def (solaris_int_limits_3): New fix.\n+\t* fixincl.x: Regenerate.\n+\t* tests/base/sys/int_limits.h [SOLARIS_INT_LIMITS_3_CHECK]: New\n+\ttest.\n+\n+\t* inclhack.def (solaris_int_const, solaris_int_limits_1,\n+\tsolaris_int_limits_2 ): Applies to Solaris 2 in general.\n+\tRemove select.\n+\tAdd mach for *-*-solaris2*.\n+\tChange second c_fix_arg to select.\n+\tRemove #pragma ident from test_text.\n+\t* fixincl.x: Regenerate.\n+\t* tests/base/sys/int_const.h [SOLARIS_INT_CONST_CHECK]: Remove\n+\t#pragma trigger text.\n+\t* tests/base/sys/int_limits.h [SOLARIS_INT_LIMITS_1_CHECK,\n+\tSOLARIS_INT_LIMITS_2_CHECK]: Likewise.\n+\n 2010-01-26  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* inclhack.def (aix_stdint_1): Add stdint-aix.h to files."}, {"sha": "fa05d88eedf66f7438987302cdabacc805623d26", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 63, "deletions": 17, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93e520a2dbc3f73508916e9d41ddcf529cd3d1da/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93e520a2dbc3f73508916e9d41ddcf529cd3d1da/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=93e520a2dbc3f73508916e9d41ddcf529cd3d1da", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Tuesday January 26, 2010 at 08:17:12 PM MET\n+ * It has been AutoGen-ed  Friday January 29, 2010 at 04:49:43 PM MET\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Tue Jan 26 20:17:12 MET 2010\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Fri Jan 29 16:49:43 MET 2010\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 204 fixup descriptions.\n+ * This file contains 205 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -6635,13 +6635,17 @@ tSCC zSolaris_Int_ConstList[] =\n /*\n  *  Machine/OS name selection pattern\n  */\n-#define apzSolaris_Int_ConstMachs (const char**)NULL\n+tSCC* apzSolaris_Int_ConstMachs[] = {\n+        \"*-*-solaris2*\",\n+        (const char*)NULL };\n \n /*\n  *  content selection pattern - do fix if pattern found\n  */\n tSCC zSolaris_Int_ConstSelect0[] =\n-       \"@\\\\(#\\\\)int_const.h[ \\t]+1.[0-9]+[ \\t]+[0-9/]+ SMI\";\n+       \"^#define[ \\t]+UINT8_C\\\\(c\\\\)[ \\t]+__CONCAT__.*\\n\\\n+(/*.**/)\\n\\\n+#define[ \\t]+UINT16_C\\\\(c\\\\)[ \\t]+__CONCAT__.*\";\n \n #define    SOLARIS_INT_CONST_TEST_CT  1\n static tTestDesc aSolaris_Int_ConstTests[] = {\n@@ -6655,9 +6659,6 @@ static const char* apzSolaris_Int_ConstPatch[] = {\n     \"#define\\tUINT8_C(c)\\t(c)\\n\\\n %1\\n\\\n #define\\tUINT16_C(c)\\t(c)\",\n-    \"^#define[ \\t]+UINT8_C\\\\(c\\\\)[ \\t]+__CONCAT__.*\\n\\\n-(/*.**/)\\n\\\n-#define[ \\t]+UINT16_C\\\\(c\\\\)[ \\t]+__CONCAT__.*\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -6675,13 +6676,16 @@ tSCC zSolaris_Int_Limits_1List[] =\n /*\n  *  Machine/OS name selection pattern\n  */\n-#define apzSolaris_Int_Limits_1Machs (const char**)NULL\n+tSCC* apzSolaris_Int_Limits_1Machs[] = {\n+        \"*-*-solaris2*\",\n+        (const char*)NULL };\n \n /*\n  *  content selection pattern - do fix if pattern found\n  */\n tSCC zSolaris_Int_Limits_1Select0[] =\n-       \"@\\\\(#\\\\)int_limits.h[ \\t]+1.[0-9]+[ \\t]+[0-9/]+ SMI\";\n+       \"^#define[ \\t]+UINT8_MAX[ \\t]+\\\\(255U\\\\)\\n\\\n+#define[ \\t]+UINT16_MAX[ \\t]+\\\\(65535U\\\\)\";\n \n #define    SOLARIS_INT_LIMITS_1_TEST_CT  1\n static tTestDesc aSolaris_Int_Limits_1Tests[] = {\n@@ -6694,8 +6698,6 @@ static const char* apzSolaris_Int_Limits_1Patch[] = {\n     \"format\",\n     \"#define\\tUINT8_MAX\\t(255)\\n\\\n #define\\tUINT16_MAX\\t(65535)\",\n-    \"^#define[ \\t]+UINT8_MAX[ \\t]+\\\\(255U\\\\)\\n\\\n-#define[ \\t]+UINT16_MAX[ \\t]+\\\\(65535U\\\\)\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -6713,13 +6715,15 @@ tSCC zSolaris_Int_Limits_2List[] =\n /*\n  *  Machine/OS name selection pattern\n  */\n-#define apzSolaris_Int_Limits_2Machs (const char**)NULL\n+tSCC* apzSolaris_Int_Limits_2Machs[] = {\n+        \"*-*-solaris2*\",\n+        (const char*)NULL };\n \n /*\n  *  content selection pattern - do fix if pattern found\n  */\n tSCC zSolaris_Int_Limits_2Select0[] =\n-       \"@\\\\(#\\\\)int_limits.h[ \\t]+1.[0-9]+[ \\t]+[0-9/]+ SMI\";\n+       \"^#define[ \\t]+(INT|UINT)_FAST16_(MAX|MIN)[ \\t](INT|UINT)16.*\";\n \n #define    SOLARIS_INT_LIMITS_2_TEST_CT  1\n static tTestDesc aSolaris_Int_Limits_2Tests[] = {\n@@ -6731,7 +6735,43 @@ static tTestDesc aSolaris_Int_Limits_2Tests[] = {\n static const char* apzSolaris_Int_Limits_2Patch[] = {\n     \"format\",\n     \"#define\\t%1_FAST16_%2 %132_%2\",\n-    \"^#define[ \\t]+(INT|UINT)_FAST16_(MAX|MIN)[ \\t](INT|UINT)16.*\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Solaris_Int_Limits_3 fix\n+ */\n+tSCC zSolaris_Int_Limits_3Name[] =\n+     \"solaris_int_limits_3\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zSolaris_Int_Limits_3List[] =\n+  \"sys/int_limits.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzSolaris_Int_Limits_3Machs[] = {\n+        \"*-*-solaris2*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zSolaris_Int_Limits_3Select0[] =\n+       \"^#define[ \\t]+SIZE_MAX[ \\t]+4294967295UL\";\n+\n+#define    SOLARIS_INT_LIMITS_3_TEST_CT  1\n+static tTestDesc aSolaris_Int_Limits_3Tests[] = {\n+  { TT_EGREP,    zSolaris_Int_Limits_3Select0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Solaris_Int_Limits_3\n+ */\n+static const char* apzSolaris_Int_Limits_3Patch[] = {\n+    \"format\",\n+    \"#define\\tSIZE_MAX\\t4294967295U\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -8316,9 +8356,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          244\n+#define REGEX_COUNT          245\n #define MACH_LIST_SIZE_LIMIT 181\n-#define FIX_COUNT            204\n+#define FIX_COUNT            205\n \n /*\n  *  Enumerate the fixes\n@@ -8489,6 +8529,7 @@ typedef enum {\n     SOLARIS_INT_CONST_FIXIDX,\n     SOLARIS_INT_LIMITS_1_FIXIDX,\n     SOLARIS_INT_LIMITS_2_FIXIDX,\n+    SOLARIS_INT_LIMITS_3_FIXIDX,\n     SOLARIS_INT_TYPES_FIXIDX,\n     SOLARIS_STDIO_TAG_FIXIDX,\n     STATSSWTCH_FIXIDX,\n@@ -9356,6 +9397,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      SOLARIS_INT_LIMITS_2_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aSolaris_Int_Limits_2Tests,   apzSolaris_Int_Limits_2Patch, 0 },\n \n+  {  zSolaris_Int_Limits_3Name,    zSolaris_Int_Limits_3List,\n+     apzSolaris_Int_Limits_3Machs,\n+     SOLARIS_INT_LIMITS_3_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aSolaris_Int_Limits_3Tests,   apzSolaris_Int_Limits_3Patch, 0 },\n+\n   {  zSolaris_Int_TypesName,    zSolaris_Int_TypesList,\n      apzSolaris_Int_TypesMachs,\n      SOLARIS_INT_TYPES_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "8240b7dcf2b08bdc38386afe7d4596eb2ace4f74", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 25, "deletions": 12, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93e520a2dbc3f73508916e9d41ddcf529cd3d1da/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93e520a2dbc3f73508916e9d41ddcf529cd3d1da/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=93e520a2dbc3f73508916e9d41ddcf529cd3d1da", "patch": "@@ -3522,67 +3522,80 @@ fix = {\n \n \n /*\n- * Sun Solaris 10 has a version of sys/int_const.h that defines\n+ * Sun Solaris 2 has a version of sys/int_const.h that defines\n  * UINT8_C and UINT16_C to unsigned constants.\n  */\n fix = {\n     hackname  = solaris_int_const;\n-    select    = '@\\(#\\)int_const.h' \"[ \\t]+1.[0-9]+[ \\t]+[0-9/]+ SMI\";\n     files     = sys/int_const.h;\n+    mach      = '*-*-solaris2*';\n     c_fix     = format;\n     c_fix_arg = \"#define\\tUINT8_C(c)\\t(c)\\n\"\n                 \"%1\\n\"\n                 \"#define\\tUINT16_C(c)\\t(c)\";\n-    c_fix_arg = \"^#define[ \\t]+UINT8_C\\\\(c\\\\)[ \\t]+__CONCAT__.*\\n\"\n+    select    = \"^#define[ \\t]+UINT8_C\\\\(c\\\\)[ \\t]+__CONCAT__.*\\n\"\n                 \"(/\\*.*\\*/)\\n\"\n                 \"#define[ \\t]+UINT16_C\\\\(c\\\\)[ \\t]+__CONCAT__.*\";\n     test_text =\n-    '#pragma ident\t\"@(#)int_const.h\t1.5\t04/09/28 SMI\"'\"\\n\"\n     \"#define\tUINT8_C(c)\t__CONCAT__(c,u)\\n\"\n     \"/* CSTYLED */\\n\"\n     \"#define\tUINT16_C(c)\t__CONCAT__(c,u)\";\n };\n \n \n /*\n- * Sun Solaris 10 has a version of sys/int_limits.h that defines\n+ * Sun Solaris 2 has a version of sys/int_limits.h that defines\n  * UINT8_MAX and UINT16_MAX to unsigned constants.\n  */\n fix = {\n     hackname  = solaris_int_limits_1;\n-    select    = '@\\(#\\)int_limits.h' \"[ \\t]+1.[0-9]+[ \\t]+[0-9/]+ SMI\";\n     files     = sys/int_limits.h;\n+    mach      = '*-*-solaris2*';\n     c_fix     = format;\n     c_fix_arg = \"#define\\tUINT8_MAX\\t(255)\\n\"\n                 \"#define\\tUINT16_MAX\\t(65535)\";\n-    c_fix_arg = \"^#define[ \\t]+UINT8_MAX[ \\t]+\\\\(255U\\\\)\\n\"\n+    select    = \"^#define[ \\t]+UINT8_MAX[ \\t]+\\\\(255U\\\\)\\n\"\n                 \"#define[ \\t]+UINT16_MAX[ \\t]+\\\\(65535U\\\\)\";\n     test_text =\n-    '#pragma ident\t\"@(#)int_limits.h\t1.9\t04/09/28 SMI\"'\"\\n\"\n     \"#define\tUINT8_MAX\t(255U)\\n\"\n     \"#define\tUINT16_MAX\t(65535U)\";\n };\n \n \n /*\n- * Sun Solaris 10 has a version of sys/int_limits.h that defines\n+ * Sun Solaris 2 has a version of sys/int_limits.h that defines\n  * INT_FAST16 limits to wrong values for sys/int_types.h.\n  */\n fix = {\n     hackname  = solaris_int_limits_2;\n-    select    = '@\\(#\\)int_limits.h' \"[ \\t]+1.[0-9]+[ \\t]+[0-9/]+ SMI\";\n     files     = sys/int_limits.h;\n+    mach      = '*-*-solaris2*';\n     c_fix     = format;\n     c_fix_arg = \"#define\\t%1_FAST16_%2 %132_%2\";\n-    c_fix_arg = \"^#define[ \\t]+(INT|UINT)_FAST16_(MAX|MIN)[ \\t](INT|UINT)16.*\";\n+    select    = \"^#define[ \\t]+(INT|UINT)_FAST16_(MAX|MIN)[ \\t](INT|UINT)16.*\";\n     test_text =\n-    '#pragma ident\t\"@(#)int_limits.h\t1.9\t04/09/28 SMI\"'\"\\n\"\n     \"#define\tINT_FAST16_MAX INT16_MAX\\n\"\n     \"#define\tUINT_FAST16_MAX UINT16_MAX\\n\"\n     \"#define\tINT_FAST16_MIN\tINT16_MIN\";\n };\n \n \n+/*\n+ * Sun Solaris 2 has a version of sys/int_limits.h that defines\n+ * SIZE_MAX as unsigned long.\n+ */\n+fix = {\n+    hackname  = solaris_int_limits_3;\n+    files     = sys/int_limits.h;\n+    mach      = '*-*-solaris2*';\n+    c_fix     = format;\n+    c_fix_arg = \"#define\\tSIZE_MAX\\t4294967295U\";\n+    select    = \"^#define[ \\t]+SIZE_MAX[ \\t]+4294967295UL\";\n+    test_text =\n+    \"#define\tSIZE_MAX\t4294967295UL\";\n+};\n+\n+\n /*\n  * Sun Solaris up to 9 has a version of sys/int_types.h that forbids use\n  * of Standard C99 64-bit types in 32-bit mode."}, {"sha": "6f71a15ecf931a9174f6b041bc76e2ce5a87ff6f", "filename": "fixincludes/tests/base/sys/int_const.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93e520a2dbc3f73508916e9d41ddcf529cd3d1da/fixincludes%2Ftests%2Fbase%2Fsys%2Fint_const.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93e520a2dbc3f73508916e9d41ddcf529cd3d1da/fixincludes%2Ftests%2Fbase%2Fsys%2Fint_const.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fsys%2Fint_const.h?ref=93e520a2dbc3f73508916e9d41ddcf529cd3d1da", "patch": "@@ -10,7 +10,6 @@\n \n \n #if defined( SOLARIS_INT_CONST_CHECK )\n-#pragma ident\t\"@(#)int_const.h\t1.5\t04/09/28 SMI\"\n #define\tUINT8_C(c)\t(c)\n /* CSTYLED */\n #define\tUINT16_C(c)\t(c)"}, {"sha": "bcacd68a9c39828a83e78b06712d8a5fd8147069", "filename": "fixincludes/tests/base/sys/int_limits.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93e520a2dbc3f73508916e9d41ddcf529cd3d1da/fixincludes%2Ftests%2Fbase%2Fsys%2Fint_limits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93e520a2dbc3f73508916e9d41ddcf529cd3d1da/fixincludes%2Ftests%2Fbase%2Fsys%2Fint_limits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fsys%2Fint_limits.h?ref=93e520a2dbc3f73508916e9d41ddcf529cd3d1da", "patch": "@@ -10,15 +10,18 @@\n \n \n #if defined( SOLARIS_INT_LIMITS_1_CHECK )\n-#pragma ident\t\"@(#)int_limits.h\t1.9\t04/09/28 SMI\"\n #define\tUINT8_MAX\t(255)\n #define\tUINT16_MAX\t(65535)\n #endif  /* SOLARIS_INT_LIMITS_1_CHECK */\n \n \n #if defined( SOLARIS_INT_LIMITS_2_CHECK )\n-#pragma ident\t\"@(#)int_limits.h\t1.9\t04/09/28 SMI\"\n #define\tINT_FAST16_MAX INT32_MAX\n #define\tUINT_FAST16_MAX UINT32_MAX\n #define\tINT_FAST16_MIN INT32_MIN\n #endif  /* SOLARIS_INT_LIMITS_2_CHECK */\n+\n+\n+#if defined( SOLARIS_INT_LIMITS_3_CHECK )\n+#define\tSIZE_MAX\t4294967295U\n+#endif  /* SOLARIS_INT_LIMITS_3_CHECK */"}]}