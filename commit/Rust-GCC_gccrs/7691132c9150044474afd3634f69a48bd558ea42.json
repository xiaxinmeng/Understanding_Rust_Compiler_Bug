{"sha": "7691132c9150044474afd3634f69a48bd558ea42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY5MTEzMmM5MTUwMDQ0NDc0YWZkMzYzNGY2OWE0OGJkNTU4ZWE0Mg==", "commit": {"author": {"name": "Jan-Benedict Glaw", "email": "jbglaw@gcc.gnu.org", "date": "2013-09-20T19:00:02Z"}, "committer": {"name": "Jan-Benedict Glaw", "email": "jbglaw@gcc.gnu.org", "date": "2013-09-20T19:00:02Z"}, "message": "Work around buggy gas not properly sign-extending a 64bit value on a 32bit host\n\nPR target/56875\n2013-09-20  Martin Husemann  <martin@NetBSD.org>\n\t    Jan-Benedict Glaw  <jbglaw@lug-owl.de>\n\ngcc/\n\t* config/vax/vax.c (vax_output_int_move): Use D format specifier.\n\t* config/vax/vax.md (ashldi3, <unnamed>): Ditto.\n\ngcc/testsuite/\n\t* gcc.target/vax/vax.exp: New.\n\t* gcc.target/vax/pr56875.c: Ditto.\n\nFrom-SVN: r202796", "tree": {"sha": "539eddc3834c93117f1ffe77c311662e330f8763", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/539eddc3834c93117f1ffe77c311662e330f8763"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7691132c9150044474afd3634f69a48bd558ea42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7691132c9150044474afd3634f69a48bd558ea42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7691132c9150044474afd3634f69a48bd558ea42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7691132c9150044474afd3634f69a48bd558ea42/comments", "author": null, "committer": null, "parents": [{"sha": "bd599dea43ec7cc7b68ec87a6b493aaf3c595589", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd599dea43ec7cc7b68ec87a6b493aaf3c595589", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd599dea43ec7cc7b68ec87a6b493aaf3c595589"}], "stats": {"total": 74, "additions": 70, "deletions": 4}, "files": [{"sha": "d4f56a4773bbba884391756382a36be4cc21cb0f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7691132c9150044474afd3634f69a48bd558ea42/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7691132c9150044474afd3634f69a48bd558ea42/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7691132c9150044474afd3634f69a48bd558ea42", "patch": "@@ -1,3 +1,9 @@\n+2013-09-20  Martin Husemann  <martin@NetBSD.org>\n+\n+\tPR target/56875\n+\t* config/vax/vax.c (vax_output_int_move): Use D format specifier.\n+\t* config/vax/vax.md (ashldi3, <unnamed>): Ditto.\n+\n 2013-09-20  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/58484"}, {"sha": "6b643d1af5de720f0ba4b538c0639fb3c06380d0", "filename": "gcc/config/vax/vax.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7691132c9150044474afd3634f69a48bd558ea42/gcc%2Fconfig%2Fvax%2Fvax.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7691132c9150044474afd3634f69a48bd558ea42/gcc%2Fconfig%2Fvax%2Fvax.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.c?ref=7691132c9150044474afd3634f69a48bd558ea42", "patch": "@@ -1187,7 +1187,7 @@ vax_output_int_move (rtx insn ATTRIBUTE_UNUSED, rtx *operands,\n \t\t{\n \t\t  operands[1] = GEN_INT (lval);\n \t\t  operands[2] = GEN_INT (n);\n-\t\t  return \"ashq %2,%1,%0\";\n+\t\t  return \"ashq %2,%D1,%0\";\n \t\t}\n #if HOST_BITS_PER_WIDE_INT == 32\n \t    }\n@@ -1199,7 +1199,7 @@ vax_output_int_move (rtx insn ATTRIBUTE_UNUSED, rtx *operands,\n \t    {\n \t      operands[1] = GEN_INT (hval >> n);\n \t      operands[2] = GEN_INT (n + 32);\n-\t      return \"ashq %2,%1,%0\";\n+\t      return \"ashq %2,%D1,%0\";\n #endif\n \t    }\n \t}"}, {"sha": "2c05d007dae4e7295c888cc89723d14674475d1d", "filename": "gcc/config/vax/vax.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7691132c9150044474afd3634f69a48bd558ea42/gcc%2Fconfig%2Fvax%2Fvax.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7691132c9150044474afd3634f69a48bd558ea42/gcc%2Fconfig%2Fvax%2Fvax.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.md?ref=7691132c9150044474afd3634f69a48bd558ea42", "patch": "@@ -697,14 +697,14 @@\n \t(ashift:DI (match_operand:DI 1 \"general_operand\" \"g\")\n \t\t   (match_operand:QI 2 \"general_operand\" \"g\")))]\n   \"\"\n-  \"ashq %2,%1,%0\")\n+  \"ashq %2,%D1,%0\")\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=g\")\n \t(ashiftrt:DI (match_operand:DI 1 \"general_operand\" \"g\")\n \t\t     (neg:QI (match_operand:QI 2 \"general_operand\" \"g\"))))]\n   \"\"\n-  \"ashq %2,%1,%0\")\n+  \"ashq %2,%D1,%0\")\n \n ;; We used to have expand_shift handle logical right shifts by using extzv,\n ;; but this make it very difficult to do lshrdi3.  Since the VAX is the"}, {"sha": "cef626ab314e3a59149684cf503b39a65ad7648b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7691132c9150044474afd3634f69a48bd558ea42/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7691132c9150044474afd3634f69a48bd558ea42/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7691132c9150044474afd3634f69a48bd558ea42", "patch": "@@ -1,3 +1,9 @@\n+2013-09-20  Jan-Benedict Glaw  <jbglaw@lug-owl.de>\n+\n+\tPR target/56875\n+\t* gcc.target/vax/vax.exp: New.\n+\t* gcc.target/vax/pr56875.c: Ditto.\n+\n 2013-09-20  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/58484"}, {"sha": "f409afe88e76d40af08d0e4445addfc5c97c801c", "filename": "gcc/testsuite/gcc.target/vax/pr56875.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7691132c9150044474afd3634f69a48bd558ea42/gcc%2Ftestsuite%2Fgcc.target%2Fvax%2Fpr56875.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7691132c9150044474afd3634f69a48bd558ea42/gcc%2Ftestsuite%2Fgcc.target%2Fvax%2Fpr56875.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fvax%2Fpr56875.c?ref=7691132c9150044474afd3634f69a48bd558ea42", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O0\" } */\n+/* { dg-final { scan-assembler     \"ashq .*,\\\\\\$0xffffffffffffffff,\" } } */\n+/* { dg-final { scan-assembler-not \"ashq .*,\\\\\\$-1,\" } } */\n+\n+void\n+a (void)\n+{\n+\tunsigned long i = 1;\n+\tunsigned long long v;\n+\n+\tv = ~ (unsigned long long) 0 << i;\n+}"}, {"sha": "2aec4eec1926881e6b89244cf7da7f6fcb423d09", "filename": "gcc/testsuite/gcc.target/vax/vax.exp", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7691132c9150044474afd3634f69a48bd558ea42/gcc%2Ftestsuite%2Fgcc.target%2Fvax%2Fvax.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7691132c9150044474afd3634f69a48bd558ea42/gcc%2Ftestsuite%2Fgcc.target%2Fvax%2Fvax.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fvax%2Fvax.exp?ref=7691132c9150044474afd3634f69a48bd558ea42", "patch": "@@ -0,0 +1,41 @@\n+# Copyright (C) 2013 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# GCC testsuite that uses the `dg.exp' driver.\n+\n+# Exit immediately if this isn't a VAX target.\n+if ![istarget vax-*-*] then {\n+  return\n+}\n+\n+# Load support procs.\n+load_lib gcc-dg.exp\n+\n+# If a testcase doesn't have special options, use these.\n+global DEFAULT_CFLAGS\n+if ![info exists DEFAULT_CFLAGS] then {\n+    set DEFAULT_CFLAGS \" -ansi -pedantic-errors\"\n+}\n+\n+# Initialize `dg'.\n+dg-init\n+\n+# Main loop.\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \\\n+\t\"\" $DEFAULT_CFLAGS\n+\n+# All done.\n+dg-finish"}]}