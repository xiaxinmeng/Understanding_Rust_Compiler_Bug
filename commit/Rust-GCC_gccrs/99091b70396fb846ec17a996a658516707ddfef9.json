{"sha": "99091b70396fb846ec17a996a658516707ddfef9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTkwOTFiNzAzOTZmYjg0NmVjMTdhOTk2YTY1ODUxNjcwN2RkZmVmOQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-07-19T17:39:49Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-07-19T17:39:49Z"}, "message": "interface.c (compare_parameter, [...]): Fix handling of polymorphic arguments.\n\n2012-07-19  Tobias Burnus  <burnus@net-b.de>\n\n        * interface.c (compare_parameter, compare_actual_formal): Fix\n        handling of polymorphic arguments.\n\nFrom-SVN: r189669", "tree": {"sha": "13e0d6aed459df9c9ef59b67865660db90c60905", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13e0d6aed459df9c9ef59b67865660db90c60905"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99091b70396fb846ec17a996a658516707ddfef9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99091b70396fb846ec17a996a658516707ddfef9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99091b70396fb846ec17a996a658516707ddfef9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99091b70396fb846ec17a996a658516707ddfef9/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "638eeae8042febc7cf5b01b9330558543e874f58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/638eeae8042febc7cf5b01b9330558543e874f58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/638eeae8042febc7cf5b01b9330558543e874f58"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "3d6bf6dce96216f4539dd93e2371c23a98fa1f4c", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99091b70396fb846ec17a996a658516707ddfef9/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99091b70396fb846ec17a996a658516707ddfef9/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=99091b70396fb846ec17a996a658516707ddfef9", "patch": "@@ -1,3 +1,8 @@\n+2012-07-19  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* interface.c (compare_parameter, compare_actual_formal): Fix\n+\thandling of polymorphic arguments.\n+\n 2012-07-17  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/51081"}, {"sha": "2e181c9be878a2ab7796425827f19ebb84537d8a", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99091b70396fb846ec17a996a658516707ddfef9/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99091b70396fb846ec17a996a658516707ddfef9/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=99091b70396fb846ec17a996a658516707ddfef9", "patch": "@@ -1743,7 +1743,7 @@ compare_parameter (gfc_symbol *formal, gfc_expr *actual,\n     }\n \n   /* F2008, 12.5.2.5; IR F08/0073.  */\n-  if (formal->ts.type == BT_CLASS\n+  if (formal->ts.type == BT_CLASS && actual->expr_type != EXPR_NULL\n       && ((CLASS_DATA (formal)->attr.class_pointer\n \t   && !formal->attr.intent == INTENT_IN)\n           || CLASS_DATA (formal)->attr.allocatable))\n@@ -2289,11 +2289,21 @@ compare_actual_formal (gfc_actual_arglist **ap, gfc_formal_arglist *formal,\n \t  return 0;\n \t}\n \n-      if (a->expr->expr_type == EXPR_NULL && !f->sym->attr.pointer\n-\t  && (f->sym->attr.allocatable || !f->sym->attr.optional\n-\t      || (gfc_option.allow_std & GFC_STD_F2008) == 0))\n-\t{\n-\t  if (where && (f->sym->attr.allocatable || !f->sym->attr.optional))\n+      if (a->expr->expr_type == EXPR_NULL\n+\t  && ((f->sym->ts.type != BT_CLASS && !f->sym->attr.pointer\n+\t       && (f->sym->attr.allocatable || !f->sym->attr.optional\n+\t\t   || (gfc_option.allow_std & GFC_STD_F2008) == 0))\n+\t      || (f->sym->ts.type == BT_CLASS\n+\t\t  && !CLASS_DATA (f->sym)->attr.class_pointer\n+\t\t  && (CLASS_DATA (f->sym)->attr.allocatable\n+\t\t      || !f->sym->attr.optional\n+\t\t      || (gfc_option.allow_std & GFC_STD_F2008) == 0))))\n+\t{\n+\t  if (where\n+\t      && (!f->sym->attr.optional\n+\t\t  || (f->sym->ts.type != BT_CLASS && f->sym->attr.allocatable)\n+\t\t  || (f->sym->ts.type == BT_CLASS\n+\t\t\t && CLASS_DATA (f->sym)->attr.allocatable)))\n \t    gfc_error (\"Unexpected NULL() intrinsic at %L to dummy '%s'\",\n \t\t       where, f->sym->name);\n \t  else if (where)"}]}