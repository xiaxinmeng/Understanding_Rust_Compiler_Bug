{"sha": "c0662c74969820fb576c8a2f35e946581c2c6f9d", "node_id": "C_kwDOANBUbNoAKGMwNjYyYzc0OTY5ODIwZmI1NzZjOGEyZjM1ZTk0NjU4MWMyYzZmOWQ", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-11-11T09:11:03Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-11-11T13:52:09Z"}, "message": "[range-ops] Avoid unnecessary intersection in update_known_bitmask.\n\nAll the work for keeping the maybe nonzero masks up to date is being\ndone by the bit-CCP code now.  Any bitmask inherent in the range that\nrange-ops may have calculated has no extra information, so the\nintersection is unnecessary.\n\ngcc/ChangeLog:\n\n\t* range-op.cc (update_known_bitmask): Avoid unnecessary intersection.", "tree": {"sha": "f0422ffc3301d943996f44f4e61f679ec7373d53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0422ffc3301d943996f44f4e61f679ec7373d53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0662c74969820fb576c8a2f35e946581c2c6f9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0662c74969820fb576c8a2f35e946581c2c6f9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0662c74969820fb576c8a2f35e946581c2c6f9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0662c74969820fb576c8a2f35e946581c2c6f9d/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c16c40808331a02947b1ad962e85e1b40e30a707", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c16c40808331a02947b1ad962e85e1b40e30a707", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c16c40808331a02947b1ad962e85e1b40e30a707"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "0b01cf48fdfeeed48f8fe960422ddc7f6c72f6ba", "filename": "gcc/range-op.cc", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0662c74969820fb576c8a2f35e946581c2c6f9d/gcc%2Frange-op.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0662c74969820fb576c8a2f35e946581c2c6f9d/gcc%2Frange-op.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op.cc?ref=c0662c74969820fb576c8a2f35e946581c2c6f9d", "patch": "@@ -89,10 +89,7 @@ update_known_bitmask (irange &r, tree_code code,\n   bit_value_binop (code, sign, prec, &value, &mask,\n \t\t   lh_sign, lh_prec, lh_value, lh_mask,\n \t\t   rh_sign, rh_prec, rh_value, rh_mask);\n-\n-  int_range<2> tmp (type);\n-  tmp.set_nonzero_bits (value | mask);\n-  r.intersect (tmp);\n+  r.set_nonzero_bits (value | mask);\n }\n \n // Return the upper limit for a type."}]}