{"sha": "3db85990dbde7f9c8212fe0fb8a241c5d2993198", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RiODU5OTBkYmRlN2Y5YzgyMTJmZTBmYjhhMjQxYzVkMjk5MzE5OA==", "commit": {"author": {"name": "Sylvia Taylor", "email": "sylvia.taylor@arm.com", "date": "2019-05-30T17:36:52Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-05-30T17:36:52Z"}, "message": "[aarch64]: add support for fabd in sve\n\nThis patch adds support in SVE to combine:\n- fsub and fabs into fabd\n\nfsub    z0.s, z0.s, z1.s\nfabs    z0.s, p1/m, z0.s\n---\nfabd    z0.s, p1/m, z0.s, z1.s\n\n2019-05-30  Sylvia Taylor  <sylvia.taylor@arm.com>\n\ngcc/\n\t* config/aarch64/aarch64-sve.md (*fabd<mode>3): New.\n\ngcc/testsuite/\n\t* gcc.target/aarch64/sve/fabd_1.c: New.\n\nFrom-SVN: r271785", "tree": {"sha": "1b4fb0d12fb2c8f090d63a6da6f00b79b3467372", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b4fb0d12fb2c8f090d63a6da6f00b79b3467372"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3db85990dbde7f9c8212fe0fb8a241c5d2993198", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3db85990dbde7f9c8212fe0fb8a241c5d2993198", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3db85990dbde7f9c8212fe0fb8a241c5d2993198", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3db85990dbde7f9c8212fe0fb8a241c5d2993198/comments", "author": null, "committer": null, "parents": [{"sha": "c9c41a6b1bf681e319b3b3df035eeb9ad754ea0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9c41a6b1bf681e319b3b3df035eeb9ad754ea0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9c41a6b1bf681e319b3b3df035eeb9ad754ea0d"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "caee629653fa354cde6ec0c5b85e47905b8a25cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3db85990dbde7f9c8212fe0fb8a241c5d2993198/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3db85990dbde7f9c8212fe0fb8a241c5d2993198/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3db85990dbde7f9c8212fe0fb8a241c5d2993198", "patch": "@@ -1,3 +1,7 @@\n+2019-05-30  Sylvia Taylor  <sylvia.taylor@arm.com>\n+\n+\t* config/aarch64/aarch64-sve.md (*fabd<mode>3): New.\n+\n 2019-05-30  Bill Schmidt  <wschmidt@linux.ibm.com>\n \t    Michael Meissner  <meissner@linux.ibm.com>\n "}, {"sha": "255058650f9d57d45d6ea2083323faa31048e07b", "filename": "gcc/config/aarch64/aarch64-sve.md", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3db85990dbde7f9c8212fe0fb8a241c5d2993198/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3db85990dbde7f9c8212fe0fb8a241c5d2993198/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md?ref=3db85990dbde7f9c8212fe0fb8a241c5d2993198", "patch": "@@ -2528,6 +2528,19 @@\n   \"<sve_fp_op>\\t%0.<Vetype>, %1/m, %2.<Vetype>\"\n )\n \n+(define_insn \"*fabd<mode>3\"\n+  [(set (match_operand:SVE_F 0 \"register_operand\" \"=w\")\n+\t(unspec:SVE_F\n+\t  [(match_operand:<VPRED> 1 \"register_operand\" \"Upl\")\n+\t   (abs:SVE_F\n+\t    (minus:SVE_F\n+\t\t(match_operand:SVE_F 2 \"register_operand\" \"0\")\n+\t\t(match_operand:SVE_F 3 \"register_operand\" \"w\")))]\n+\tUNSPEC_MERGE_PTRUE))]\n+  \"TARGET_SVE\"\n+  \"fabd\\t%0.<Vetype>, %1/m, %2.<Vetype>, %3.<Vetype>\"\n+)\n+\n ;; Unpredicated FRINTy.\n (define_expand \"<frint_pattern><mode>2\"\n   [(set (match_operand:SVE_F 0 \"register_operand\")"}, {"sha": "1d8b3e85a0fcac5ed49fd6d6d408e42dbc3ada80", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3db85990dbde7f9c8212fe0fb8a241c5d2993198/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3db85990dbde7f9c8212fe0fb8a241c5d2993198/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3db85990dbde7f9c8212fe0fb8a241c5d2993198", "patch": "@@ -1,3 +1,7 @@\n+2019-05-30  Sylvia Taylor  <sylvia.taylor@arm.com>\n+\n+\t* gcc.target/aarch64/sve/fabd_1.c: New.\n+\n 2019-05-30  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* gcc.target/i386/pr86257.c: Require native TLS support."}, {"sha": "13ad83be24ceb0d3319cb3bcfdbd6372b4d1a48e", "filename": "gcc/testsuite/gcc.target/aarch64/sve/fabd_1.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3db85990dbde7f9c8212fe0fb8a241c5d2993198/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Ffabd_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3db85990dbde7f9c8212fe0fb8a241c5d2993198/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Ffabd_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Ffabd_1.c?ref=3db85990dbde7f9c8212fe0fb8a241c5d2993198", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-do assemble { target aarch64_asm_sve_ok } } */\n+/* { dg-options \"-O3 --save-temps\" } */\n+\n+#define N 16\n+\n+typedef float *__restrict__ vnx4sf;\n+typedef double *__restrict__ vnx2df;\n+typedef _Float16 *__restrict__ vnx8hf_a;\n+typedef __fp16 *__restrict__ vnx8hf_b;\n+\n+extern float fabsf (float);\n+extern double fabs (double);\n+\n+#define FABD(type, abs, n)\t\t\t\t\\\n+\tvoid fabd_##type (type res, type a, type b)\t\\\n+\t{\t\t\t\t\t\t\\\n+\t    int i;\t\t\t\t\t\\\n+\t    for (i = 0; i < n; i++)\t\t\t\\\n+\t\tres[i] = abs (a[i] - b[i]);\t\t\\\n+\t}\n+\n+#define TEST_SVE_F_MODES(FUNC)\t\\\n+  FUNC (vnx2df, fabs, N)\t\\\n+  FUNC (vnx4sf, fabsf, N)\t\\\n+  FUNC (vnx8hf_a, fabsf, N)\t\\\n+  FUNC (vnx8hf_b, fabsf, N)\t\\\n+\n+TEST_SVE_F_MODES (FABD)\n+\n+/* { dg-final { scan-assembler \"fabd\" } } */\n+/* { dg-final { scan-assembler-not \"fsub\" } } */\n+/* { dg-final { scan-assembler-not \"fabs\" } } */\n+/* { dg-final { scan-assembler-times {\\tfabd\\tz[0-9]+\\.d, p[0-7]/m, z[0-9]+\\.d, z[0-9]+\\.d\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tfabd\\tz[0-9]+\\.s, p[0-7]/m, z[0-9]+\\.s, z[0-9]+\\.s\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tfabd\\tz[0-9]+\\.h, p[0-7]/m, z[0-9]+\\.h, z[0-9]+\\.h\\n} 4 } } */"}]}