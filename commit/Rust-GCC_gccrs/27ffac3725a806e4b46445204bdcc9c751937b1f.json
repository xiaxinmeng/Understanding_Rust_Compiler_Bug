{"sha": "27ffac3725a806e4b46445204bdcc9c751937b1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdmZmFjMzcyNWE4MDZlNGI0NjQ0NTIwNGJkY2M5Yzc1MTkzN2IxZg==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2005-04-06T06:18:54Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2005-04-06T06:18:54Z"}, "message": "altivec.md (UNSPEC_VSLW, [...]): New constants, used throughout.\n\n2005-04-06  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* config/rs6000/altivec.md (UNSPEC_VSLW, UNSPEC_SUBS,\n\tUNSPEC_SET_VSCR): New constants, used throughout.\n\t(*andc3_v4sf): New.\n\t(altivec_vspltisb, altivec_vsplitish, altivec_vsplitisw):\n\tReplace with...\n\t(altivec_vspltis<VI_char>): ... this pattern, using\n\ta QImode const_int_operand for the immediate.\n\t(abs<mode>2, absv4sf2, altivec_abss_<mode>): Rewrite as\n\tdefine_expands.\n\nFrom-SVN: r97699", "tree": {"sha": "cc774b21dc4bfb2bcbd00439a5b91d0706f9d44d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc774b21dc4bfb2bcbd00439a5b91d0706f9d44d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27ffac3725a806e4b46445204bdcc9c751937b1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27ffac3725a806e4b46445204bdcc9c751937b1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27ffac3725a806e4b46445204bdcc9c751937b1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27ffac3725a806e4b46445204bdcc9c751937b1f/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6d05585b7582f089450927448e7659f62d2bdfab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d05585b7582f089450927448e7659f62d2bdfab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d05585b7582f089450927448e7659f62d2bdfab"}], "stats": {"total": 174, "additions": 102, "deletions": 72}, "files": [{"sha": "74da0bddcccdf47aa784eaa23d07530497881964", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27ffac3725a806e4b46445204bdcc9c751937b1f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27ffac3725a806e4b46445204bdcc9c751937b1f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=27ffac3725a806e4b46445204bdcc9c751937b1f", "patch": "@@ -1,3 +1,15 @@\n+2005-04-06  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* config/rs6000/altivec.md (UNSPEC_VSLW, UNSPEC_SUBS,\n+\tUNSPEC_SET_VSCR): New constants, used throughout.\n+\t(*andc3_v4sf): New.\n+\t(altivec_vspltisb, altivec_vsplitish, altivec_vsplitisw):\n+\tReplace with...\n+\t(altivec_vspltis<VI_char>): ... this pattern, using\n+\ta QImode const_int_operand for the immediate.\n+\t(abs<mode>2, absv4sf2, altivec_abss_<mode>): Rewrite as\n+\tdefine_expands.\n+\n 2005-04-06  Ralf Corsepius  <ralf.corsepius@rtems.org>\n \n \tPR target/17822"}, {"sha": "7eb461135233c32c13f4e0f0ec7c21e13519d4ed", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 90, "deletions": 72, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27ffac3725a806e4b46445204bdcc9c751937b1f/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27ffac3725a806e4b46445204bdcc9c751937b1f/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=27ffac3725a806e4b46445204bdcc9c751937b1f", "patch": "@@ -33,10 +33,13 @@\n    (UNSPEC_VCMPGTUW      60)\n    (UNSPEC_VCMPGTSW      61)\n    (UNSPEC_VCMPGTFP      62)\n+   (UNSPEC_VSLW         109)\n+   (UNSPEC_SUBS         126)\n    (UNSPEC_VSEL4SI      159)\n    (UNSPEC_VSEL4SF      160)\n    (UNSPEC_VSEL8HI      161)\n    (UNSPEC_VSEL16QI     162)\n+   (UNSPEC_SET_VSCR     213)\n    (UNSPEC_VCOND_V4SI   301)\n    (UNSPEC_VCOND_V4SF   302)\n    (UNSPEC_VCOND_V8HI   303)\n@@ -251,7 +254,7 @@\n   [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n         (unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")\n                     (match_operand:VI 2 \"register_operand\" \"v\")] 36))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vaddu<VI_char>s %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n@@ -260,7 +263,7 @@\n   [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n         (unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")\n                     (match_operand:VI 2 \"register_operand\" \"v\")] 37))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vadds<VI_char>s %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n@@ -294,16 +297,16 @@\n   [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n         (unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")\n                     (match_operand:VI 2 \"register_operand\" \"v\")] 125))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vsubu<VI_char>s %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vsubs<VI_char>s\"\n   [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n         (unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")\n-                    (match_operand:VI 2 \"register_operand\" \"v\")] 126))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n+                    (match_operand:VI 2 \"register_operand\" \"v\")] UNSPEC_SUBS))\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vsubs<VI_char>s %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n@@ -516,7 +519,7 @@\n         (unspec:V4SI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n \t\t      (match_operand:V8HI 2 \"register_operand\" \"v\")\n                       (match_operand:V4SI 3 \"register_operand\" \"v\")] 69))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vmsumuhs %0,%1,%2,%3\"\n   [(set_attr \"type\" \"veccomplex\")])\n@@ -526,7 +529,7 @@\n         (unspec:V4SI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n \t\t      (match_operand:V8HI 2 \"register_operand\" \"v\")\n                       (match_operand:V4SI 3 \"register_operand\" \"v\")] 70))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vmsumshs %0,%1,%2,%3\"\n   [(set_attr \"type\" \"veccomplex\")])\n@@ -586,7 +589,7 @@\n         (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n \t\t      (match_operand:V8HI 2 \"register_operand\" \"v\")\n                       (match_operand:V8HI 3 \"register_operand\" \"v\")] 71))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vmhaddshs %0,%1,%2,%3\"\n   [(set_attr \"type\" \"veccomplex\")])\n@@ -595,7 +598,7 @@\n         (unspec:V8HI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n \t\t      (match_operand:V8HI 2 \"register_operand\" \"v\")\n                       (match_operand:V8HI 3 \"register_operand\" \"v\")] 72))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vmhraddshs %0,%1,%2,%3\"\n   [(set_attr \"type\" \"veccomplex\")])\n@@ -832,6 +835,14 @@\n   \"vandc %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n \n+(define_insn \"*andc3_v4sf\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n+        (and:V4SF (not:V4SF (match_operand:V4SF 2 \"register_operand\" \"v\"))\n+                  (match_operand:V4SF 1 \"register_operand\" \"v\")))]\n+  \"TARGET_ALTIVEC\"\n+  \"vandc %0,%1,%2\"\n+  [(set_attr \"type\" \"vecsimple\")])\n+\n (define_insn \"altivec_vpkuhum\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n         (unspec:V16QI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n@@ -860,7 +871,7 @@\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n         (unspec:V16QI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n                        (match_operand:V8HI 2 \"register_operand\" \"v\")] 96))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vpkuhss %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n@@ -869,7 +880,7 @@\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n         (unspec:V16QI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n                        (match_operand:V8HI 2 \"register_operand\" \"v\")] 97))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vpkshss %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n@@ -878,7 +889,7 @@\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n                       (match_operand:V4SI 2 \"register_operand\" \"v\")] 98))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vpkuwss %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n@@ -887,7 +898,7 @@\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n                       (match_operand:V4SI 2 \"register_operand\" \"v\")] 99))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vpkswss %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n@@ -896,7 +907,7 @@\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n         (unspec:V16QI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n                        (match_operand:V8HI 2 \"register_operand\" \"v\")] 100))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vpkuhus %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n@@ -905,7 +916,7 @@\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n         (unspec:V16QI [(match_operand:V8HI 1 \"register_operand\" \"v\")\n                        (match_operand:V8HI 2 \"register_operand\" \"v\")] 101))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vpkshus %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n@@ -914,7 +925,7 @@\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n                       (match_operand:V4SI 2 \"register_operand\" \"v\")] 102))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vpkuwus %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n@@ -923,7 +934,7 @@\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n         (unspec:V8HI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n                       (match_operand:V4SI 2 \"register_operand\" \"v\")] 103))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vpkswus %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n@@ -947,7 +958,7 @@\n (define_insn \"altivec_vslw_v4sf\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n         (unspec:V4SF [(match_operand:V4SF 1 \"register_operand\" \"v\")\n-                      (match_operand:V4SF 2 \"register_operand\" \"v\")] 109))]\n+                      (match_operand:V4SF 2 \"register_operand\" \"v\")] UNSPEC_VSLW))]\n   \"TARGET_ALTIVEC\"\n   \"vslw %0,%1,%2\"\n   [(set_attr \"type\" \"vecsimple\")])\n@@ -1004,7 +1015,7 @@\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V16QI 1 \"register_operand\" \"v\")\n                       (match_operand:V4SI 2 \"register_operand\" \"v\")] 131))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vsum4ubs %0,%1,%2\"\n   [(set_attr \"type\" \"veccomplex\")])\n@@ -1013,7 +1024,7 @@\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:VIshort 1 \"register_operand\" \"v\")\n                       (match_operand:V4SI 2 \"register_operand\" \"v\")] 132))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vsum4s<VI_char>s %0,%1,%2\"\n   [(set_attr \"type\" \"veccomplex\")])\n@@ -1022,7 +1033,7 @@\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n                       (match_operand:V4SI 2 \"register_operand\" \"v\")] 134))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vsum2sws %0,%1,%2\"\n   [(set_attr \"type\" \"veccomplex\")])\n@@ -1031,7 +1042,7 @@\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SI 1 \"register_operand\" \"v\")\n                       (match_operand:V4SI 2 \"register_operand\" \"v\")] 135))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vsumsws %0,%1,%2\"\n   [(set_attr \"type\" \"veccomplex\")])\n@@ -1066,35 +1077,18 @@\n   \"vspltw %0,%1,%2\"\n   [(set_attr \"type\" \"vecperm\")])\n \n-(define_insn \"altivec_vspltisb\"\n-  [(set (match_operand:V16QI 0 \"register_operand\" \"=v\")\n-\t(vec_duplicate:V16QI\n-\t (match_operand:QI 1 \"immediate_operand\" \"i\")))]\n-  \"TARGET_ALTIVEC\"\n-  \"vspltisb %0,%1\"\n-  [(set_attr \"type\" \"vecperm\")])\n-\n-(define_insn \"altivec_vspltish\"\n-  [(set (match_operand:V8HI 0 \"register_operand\" \"=v\")\n-\t(vec_duplicate:V8HI\n-\t (sign_extend:HI (match_operand:QI 1 \"immediate_operand\" \"i\"))))]\n-  \"TARGET_ALTIVEC\"\n-  \"vspltish %0,%1\"\n-  [(set_attr \"type\" \"vecperm\")])\n-\n-(define_insn \"altivec_vspltisw\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n-\t(vec_duplicate:V4SI\n-\t (sign_extend:SI (match_operand:QI 1 \"immediate_operand\" \"i\"))))]\n+(define_insn \"altivec_vspltis<VI_char>\"\n+  [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n+\t(vec_duplicate:VI\n+\t (match_operand:QI 1 \"const_int_operand\" \"i\")))]\n   \"TARGET_ALTIVEC\"\n-  \"vspltisw %0,%1\"\n+  \"vspltis<VI_char> %0,%1\"\n   [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"altivec_vspltisw_v4sf\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n \t(vec_duplicate:V4SF\n-\t (float:SF (sign_extend:SI\n-\t\t    (match_operand:QI 1 \"immediate_operand\" \"i\")))))]\n+\t (float:SF (match_operand:QI 1 \"const_int_operand\" \"i\"))))]\n   \"TARGET_ALTIVEC\"\n   \"vspltisw %0,%1\"\n   [(set_attr \"type\" \"vecperm\")])\n@@ -1165,7 +1159,7 @@\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SF 1 \"register_operand\" \"v\")\n                       (match_operand:QI 2 \"immediate_operand\" \"i\")] 153))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vctuxs %0,%1,%2\"\n   [(set_attr \"type\" \"vecfloat\")])\n@@ -1174,7 +1168,7 @@\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n         (unspec:V4SI [(match_operand:V4SF 1 \"register_operand\" \"v\")\n                       (match_operand:QI 2 \"immediate_operand\" \"i\")] 154))\n-   (set (reg:SI 110) (unspec:SI [(const_int 0)] 213))]\n+   (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))]\n   \"TARGET_ALTIVEC\"\n   \"vctsxs %0,%1,%2\"\n   [(set_attr \"type\" \"vecfloat\")])\n@@ -1624,7 +1618,7 @@\n   [(parallel\n     [(set (match_operand:V4SI 0 \"register_operand\" \"=v\")\n \t  (match_operand:V4SI 1 \"memory_operand\" \"m\"))\n-     (unspec [(const_int 0)] 213)])]\n+     (unspec [(const_int 0)] UNSPEC_SET_VSCR)])]\n   \"TARGET_ALTIVEC\"\n   \"lvxl %0,%y1\"\n   [(set_attr \"type\" \"vecload\")])\n@@ -1663,35 +1657,59 @@\n   \"stve<VI_char>x %1,%y0\"\n   [(set_attr \"type\" \"vecstore\")])\n \n-(define_insn \"abs<mode>2\"\n-  [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n-\t(abs:VI (match_operand:VI 1 \"register_operand\" \"v\")))\n-   (clobber (match_scratch:VI 2 \"=&v\"))\n-   (clobber (match_scratch:VI 3 \"=&v\"))]\n+;; Generate\n+;;    vspltis? SCRATCH0,0\n+;;    vsubu?m SCRATCH2,SCRATCH1,%1\n+;;    vmaxs? %0,%1,SCRATCH2\"\n+(define_expand \"abs<mode>2\"\n+  [(set (match_dup 2) (vec_duplicate:VI (const_int 0)))\n+   (set (match_dup 3)\n+        (minus:VI (match_dup 2)\n+                  (match_operand:VI 1 \"register_operand\" \"v\")))\n+   (set (match_operand:VI 0 \"register_operand\" \"=v\")\n+        (smax:VI (match_dup 1) (match_dup 3)))]\n   \"TARGET_ALTIVEC\"\n-  \"vspltisb %2,0\\;vsubu<VI_char>m %3,%2,%1\\;vmaxs<VI_char> %0,%1,%3\"\n-  [(set_attr \"type\" \"vecsimple\")\n-   (set_attr \"length\" \"12\")])\n+{\n+  operands[2] = gen_reg_rtx (GET_MODE (operands[0]));\n+  operands[3] = gen_reg_rtx (GET_MODE (operands[0]));\n+})\n \n-(define_insn \"absv4sf2\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n-        (abs:V4SF (match_operand:V4SF 1 \"register_operand\" \"v\")))\n-   (clobber (match_scratch:V4SF 2 \"=&v\"))\n-   (clobber (match_scratch:V4SF 3 \"=&v\"))]\n+;; Generate\n+;;    vspltisw SCRATCH1,-1\n+;;    vslw SCRATCH2,SCRATCH1,SCRATCH1\n+;;    vandc %0,%1,SCRATCH2\n+(define_expand \"absv4sf2\"\n+  [(set (match_dup 2)\n+\t(vec_duplicate:V4SF (float:SF (const_int -1))))\n+   (set (match_dup 3)\n+        (unspec:V4SF [(match_dup 2) (match_dup 2)] UNSPEC_VSLW))\n+   (set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n+        (and:V4SF (not:V4SF (match_dup 3))\n+                  (match_operand:V4SF 1 \"register_operand\" \"v\")))]\n   \"TARGET_ALTIVEC\"\n-  \"vspltisw %2,-1\\;vslw %3,%2,%2\\;vandc %0,%1,%3\"\n-  [(set_attr \"type\" \"vecsimple\")\n-   (set_attr \"length\" \"12\")])\n+{\n+  operands[2] = gen_reg_rtx (V4SFmode);\n+  operands[3] = gen_reg_rtx (V4SFmode);\n+})\n \n-(define_insn \"altivec_abss_<mode>\"\n-  [(set (match_operand:VI 0 \"register_operand\" \"=v\")\n-        (unspec:VI [(match_operand:VI 1 \"register_operand\" \"v\")] 210))\n-   (clobber (match_scratch:VI 2 \"=&v\"))\n-   (clobber (match_scratch:VI 3 \"=&v\"))]\n+;; Generate\n+;;    vspltis? SCRATCH0,0\n+;;    vsubs?s SCRATCH2,SCRATCH1,%1\n+;;    vmaxs? %0,%1,SCRATCH2\"\n+(define_expand \"altivec_abss_<mode>\"\n+  [(set (match_dup 2) (vec_duplicate:VI (const_int 0)))\n+   (parallel [(set (match_dup 3)\n+\t\t   (unspec:VI [(match_dup 2)\n+\t\t\t       (match_operand:VI 1 \"register_operand\" \"v\")]\n+\t\t\t      UNSPEC_SUBS))\n+              (set (reg:SI 110) (unspec:SI [(const_int 0)] UNSPEC_SET_VSCR))])\n+   (set (match_operand:VI 0 \"register_operand\" \"=v\")\n+        (smax:VI (match_dup 1) (match_dup 3)))]\n   \"TARGET_ALTIVEC\"\n-  \"vspltisb %2,0\\;vsubs<VI_char>s %3,%2,%1\\;vmaxs<VI_char> %0,%1,%3\"\n-  [(set_attr \"type\" \"vecsimple\")\n-   (set_attr \"length\" \"12\")])\n+{\n+  operands[2] = gen_reg_rtx (GET_MODE (operands[0]));\n+  operands[3] = gen_reg_rtx (GET_MODE (operands[0]));\n+})\n \n (define_insn \"vec_realign_load_v4sf\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")"}]}