{"sha": "ed40285ff6b9ba382020c24c69af8940532f6761", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ0MDI4NWZmNmI5YmEzODIwMjBjMjRjNjlhZjg5NDA1MzJmNjc2MQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-22T14:33:49Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-22T14:33:49Z"}, "message": "Replace use of __objc_xmalloc and free with objc_malloc and objc_free.\n\nFrom-SVN: r12760", "tree": {"sha": "e891dc442cfa889662de16773c7e71809dded4ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e891dc442cfa889662de16773c7e71809dded4ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed40285ff6b9ba382020c24c69af8940532f6761", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed40285ff6b9ba382020c24c69af8940532f6761", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed40285ff6b9ba382020c24c69af8940532f6761", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed40285ff6b9ba382020c24c69af8940532f6761/comments", "author": null, "committer": null, "parents": [{"sha": "f7055b09924e0b93425b3bd01f4dcdd750c47660", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7055b09924e0b93425b3bd01f4dcdd750c47660", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7055b09924e0b93425b3bd01f4dcdd750c47660"}], "stats": {"total": 22, "additions": 8, "deletions": 14}, "files": [{"sha": "c832b466beafa32867812cee999447696cb88be4", "filename": "gcc/objc/archive.c", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed40285ff6b9ba382020c24c69af8940532f6761/gcc%2Fobjc%2Farchive.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed40285ff6b9ba382020c24c69af8940532f6761/gcc%2Fobjc%2Farchive.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Farchive.c?ref=ed40285ff6b9ba382020c24c69af8940532f6761", "patch": "@@ -751,7 +751,7 @@ objc_read_string (struct objc_typed_stream* stream,\n       case _B_SSTR:\n \t{\n \t  int length = buf[0]&_B_VALUE;\n-\t  (*string) = (char*)__objc_xmalloc(length+1);\n+\t  (*string) = (char*)objc_malloc(length+1);\n \t  if (key)\n \t    hash_add (&stream->stream_table, LONG2PTR(key), *string);\n \t  len = (*stream->read)(stream->physical, *string, length);\n@@ -764,7 +764,7 @@ objc_read_string (struct objc_typed_stream* stream,\n \t  char *tmp;\n \t  len = __objc_read_nbyte_ulong(stream, (buf[0] & _B_VALUE), &key);\n \t  tmp = hash_value_for_key (stream->stream_table, LONG2PTR (key));\n-\t  *string = __objc_xmalloc (strlen(tmp) + 1);\n+\t  *string = objc_malloc (strlen(tmp) + 1);\n \t  strcpy (*string, tmp);\n \t}\n \tbreak;\n@@ -774,7 +774,7 @@ objc_read_string (struct objc_typed_stream* stream,\n \t  unsigned int nbytes = buf[0]&_B_VALUE;\n \t  len = __objc_read_nbyte_uint(stream, nbytes, &nbytes);\n \t  if (len) {\n-\t    (*string) = (char*)__objc_xmalloc(nbytes+1);\n+\t    (*string) = (char*)objc_malloc(nbytes+1);\n \t    if (key)\n \t      hash_add (&stream->stream_table, LONG2PTR(key), *string);\n \t    len = (*stream->read)(stream->physical, *string, nbytes);\n@@ -887,7 +887,7 @@ objc_read_class (struct objc_typed_stream* stream, Class* class)\n \t  /* get class */\n \t  len = objc_read_string (stream, &class_name);\n \t  (*class) = objc_get_class(class_name);\n-\t  free (class_name);\n+\t  objc_free(class_name);\n \n \t  /* register */\n \t  if (key)\n@@ -942,7 +942,7 @@ objc_read_selector (struct objc_typed_stream* stream, SEL* selector)\n \t    }\n \t  else \n \t    (*selector) = sel_get_any_uid(selector_name);\n-\t  free (selector_name);\n+\t  objc_free(selector_name);\n \n \t  /* register */\n \t  if (key)\n@@ -1393,12 +1393,6 @@ objc_read_array (TypedStream* stream, const char* type,\n   return 1;\n }\n \n-static void\n-__objc_free (void* p)\n-{\n-  free (p);\n-}\n-\n static int \n __objc_fread(FILE* file, char* data, int len)\n {\n@@ -1484,7 +1478,7 @@ static void __objc_finish_read_root_object(struct objc_typed_stream* stream)\n \t  reflist = reflist->tail;\n \t}\n     }\n-  list_mapcar (free_list, __objc_free);\n+  list_mapcar (free_list, objc_free);\n   list_free (free_list);\n \n   /* empty object reference table */\n@@ -1518,7 +1512,7 @@ static void __objc_finish_read_root_object(struct objc_typed_stream* stream)\n TypedStream* \n objc_open_typed_stream (FILE* physical, int mode)\n {\n-  TypedStream* s = (TypedStream*)__objc_xmalloc(sizeof(TypedStream));\n+  TypedStream* s = (TypedStream*)objc_malloc(sizeof(TypedStream));\n \n   s->mode = mode;\n   s->physical = physical;\n@@ -1605,7 +1599,7 @@ objc_close_typed_stream (TypedStream* stream)\n   if (stream->type == (OBJC_MANAGED_STREAM | OBJC_FILE_STREAM))\n     fclose ((FILE*)stream->physical);\n \n-  free (stream);\n+  objc_free(stream);\n }\n \n BOOL"}]}