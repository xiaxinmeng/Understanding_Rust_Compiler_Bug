{"sha": "20225a9bec9f9fa4813cf52fc34213c952ac1831", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAyMjVhOWJlYzlmOWZhNDgxM2NmNTJmYzM0MjEzYzk1MmFjMTgzMQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-04-28T19:17:45Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-04-28T19:17:45Z"}, "message": "Fix nits\n\nFrom-SVN: r158839", "tree": {"sha": "68127e754ffa737ab33c343f43092c217e3c20f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68127e754ffa737ab33c343f43092c217e3c20f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20225a9bec9f9fa4813cf52fc34213c952ac1831", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20225a9bec9f9fa4813cf52fc34213c952ac1831", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20225a9bec9f9fa4813cf52fc34213c952ac1831", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20225a9bec9f9fa4813cf52fc34213c952ac1831/comments", "author": null, "committer": null, "parents": [{"sha": "8478130d94af3313c5c8a8c3e1d5a8033e949750", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8478130d94af3313c5c8a8c3e1d5a8033e949750", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8478130d94af3313c5c8a8c3e1d5a8033e949750"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "ca56821adea39b4f07ebbdd2a4847d63ceb87e3d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20225a9bec9f9fa4813cf52fc34213c952ac1831/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20225a9bec9f9fa4813cf52fc34213c952ac1831/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=20225a9bec9f9fa4813cf52fc34213c952ac1831", "patch": "@@ -1,17 +1,17 @@\n 2010-04-28  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tUniquization of constants at the Tree level\n-\t* tree.h (DECL_IN_CONSTANT_POOL): New macro\n+\t* tree.h (DECL_IN_CONSTANT_POOL): New macro.\n \t(tree_decl_with_vis): Add in_constant_pool bit, move shadowed_for_var_p\n \tbit to the end.\n \t(tree_output_constant_def): Declare.\n-\t* gimplify.c (gimplify_init_constructor): When using block copy,\n+\t* gimplify.c (gimplify_init_constructor): When using block copy, first\n \tuniquize the constant constructor on the RHS.\n-\t* lto-streamer-in.c (unpack_ts_decl_with_vis_value_fields): Deal\n-\twith DECL_IN_CONSTANT_POOL flag.\n+\t* lto-streamer-in.c (unpack_ts_decl_with_vis_value_fields): Deal with\n+\tDECL_IN_CONSTANT_POOL flag.\n \t* lto-streamer-out.c (pack_ts_decl_with_vis_value_fields): Likewise.\n-\t* varasm.c (make_decl_rtl): Deal with variables belonging to the\n-\tglobal constant pool.\n+\t* varasm.c (make_decl_rtl): Deal with variables belonging to the global\n+\tconstant pool.\n \t(assemble_variable): Deal with symbols belonging to the tree constant\n \tpool.\n \t(get_constant_section): Add ALIGN parameter and simplify.\n@@ -20,8 +20,8 @@\n \t(output_constant_def_contents): Use the alignment of the VAR_DECL.\n \t(tree_output_constant_def): New global function.\n \t(mark_constant): Use the expression of the VAR_DECL.\n-\t(place_block_symbol): Use the alignment of the VAR_DECL and the size\n-\tof its expression.\n+\t(place_block_symbol): Use the alignment of the VAR_DECL and the size of\n+\tits expression.\n \t(output_object_block): Likewise and assemble the expression.\n \n 2010-04-28  Eric Botcazou  <ebotcazou@adacore.com>"}]}