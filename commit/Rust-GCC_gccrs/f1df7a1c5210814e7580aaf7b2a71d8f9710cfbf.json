{"sha": "f1df7a1c5210814e7580aaf7b2a71d8f9710cfbf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFkZjdhMWM1MjEwODE0ZTc1ODBhYWY3YjJhNzFkOGY5NzEwY2ZiZg==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-10-14T08:13:31Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-10-14T08:13:31Z"}, "message": "AVX-512. 58/n.  Add vpmul[u]dq insn patterns.\n\ngcc/\n\t* config/i386/sse.md\n\t(define_expand \"vec_widen_umult_even_v8si<mask_name>\"): Add masking.\n\t(define_insn \"*vec_widen_umult_even_v8si<mask_name>\"): Ditto.\n\t(define_expand \"vec_widen_umult_even_v4si<mask_name>\"): Ditto.\n\t(define_insn \"*vec_widen_umult_even_v4si<mask_name>\"): Ditto.\n\t(define_expand \"vec_widen_smult_even_v8si<mask_name>\"): Ditto.\n\t(define_insn \"*vec_widen_smult_even_v8si<mask_name>\"): Ditto.\n\t(define_expand \"sse4_1_mulv2siv2di3<mask_name>\"): Ditto.\n\t(define_insn \"*sse4_1_mulv2siv2di3<mask_name>\"): Ditto.\n\t(define_insn \"avx512dq_mul<mode>3<mask_name>\"): New.\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r216176", "tree": {"sha": "e841223f58f770564814923b67e3c561676971ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e841223f58f770564814923b67e3c561676971ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1df7a1c5210814e7580aaf7b2a71d8f9710cfbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1df7a1c5210814e7580aaf7b2a71d8f9710cfbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1df7a1c5210814e7580aaf7b2a71d8f9710cfbf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1df7a1c5210814e7580aaf7b2a71d8f9710cfbf/comments", "author": null, "committer": null, "parents": [{"sha": "51e14b05727883f9416be01a46962082328c8309", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51e14b05727883f9416be01a46962082328c8309", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51e14b05727883f9416be01a46962082328c8309"}], "stats": {"total": 103, "additions": 69, "deletions": 34}, "files": [{"sha": "604e34c0aef980cdc36d036d07ba35ab4cd24b37", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1df7a1c5210814e7580aaf7b2a71d8f9710cfbf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1df7a1c5210814e7580aaf7b2a71d8f9710cfbf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1df7a1c5210814e7580aaf7b2a71d8f9710cfbf", "patch": "@@ -1,3 +1,23 @@\n+2014-10-14  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/sse.md\n+\t(define_expand \"vec_widen_umult_even_v8si<mask_name>\"): Add masking.\n+\t(define_insn \"*vec_widen_umult_even_v8si<mask_name>\"): Ditto.\n+\t(define_expand \"vec_widen_umult_even_v4si<mask_name>\"): Ditto.\n+\t(define_insn \"*vec_widen_umult_even_v4si<mask_name>\"): Ditto.\n+\t(define_expand \"vec_widen_smult_even_v8si<mask_name>\"): Ditto.\n+\t(define_insn \"*vec_widen_smult_even_v8si<mask_name>\"): Ditto.\n+\t(define_expand \"sse4_1_mulv2siv2di3<mask_name>\"): Ditto.\n+\t(define_insn \"*sse4_1_mulv2siv2di3<mask_name>\"): Ditto.\n+\t(define_insn \"avx512dq_mul<mode>3<mask_name>\"): New.\n+\n 2014-10-14  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n \t    Anna Tikhonova  <anna.tikhonova@intel.com>"}, {"sha": "70cfa6a99ab0cf4366e14a0c596c69b075f358cf", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 49, "deletions": 34, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1df7a1c5210814e7580aaf7b2a71d8f9710cfbf/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1df7a1c5210814e7580aaf7b2a71d8f9710cfbf/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=f1df7a1c5210814e7580aaf7b2a71d8f9710cfbf", "patch": "@@ -9173,7 +9173,7 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"XI\")])\n \n-(define_expand \"vec_widen_umult_even_v8si\"\n+(define_expand \"vec_widen_umult_even_v8si<mask_name>\"\n   [(set (match_operand:V4DI 0 \"register_operand\")\n \t(mult:V4DI\n \t  (zero_extend:V4DI\n@@ -9186,29 +9186,30 @@\n \t      (match_operand:V8SI 2 \"nonimmediate_operand\")\n \t      (parallel [(const_int 0) (const_int 2)\n \t\t\t (const_int 4) (const_int 6)])))))]\n-  \"TARGET_AVX2\"\n+  \"TARGET_AVX2 && <mask_avx512vl_condition>\"\n   \"ix86_fixup_binary_operands_no_copy (MULT, V8SImode, operands);\")\n \n-(define_insn \"*vec_widen_umult_even_v8si\"\n-  [(set (match_operand:V4DI 0 \"register_operand\" \"=x\")\n+(define_insn \"*vec_widen_umult_even_v8si<mask_name>\"\n+  [(set (match_operand:V4DI 0 \"register_operand\" \"=v\")\n \t(mult:V4DI\n \t  (zero_extend:V4DI\n \t    (vec_select:V4SI\n-\t      (match_operand:V8SI 1 \"nonimmediate_operand\" \"%x\")\n+\t      (match_operand:V8SI 1 \"nonimmediate_operand\" \"%v\")\n \t      (parallel [(const_int 0) (const_int 2)\n \t\t\t (const_int 4) (const_int 6)])))\n \t  (zero_extend:V4DI\n \t    (vec_select:V4SI\n-\t      (match_operand:V8SI 2 \"nonimmediate_operand\" \"xm\")\n+\t      (match_operand:V8SI 2 \"nonimmediate_operand\" \"vm\")\n \t      (parallel [(const_int 0) (const_int 2)\n \t\t\t (const_int 4) (const_int 6)])))))]\n-  \"TARGET_AVX2 && ix86_binary_operator_ok (MULT, V8SImode, operands)\"\n-  \"vpmuludq\\t{%2, %1, %0|%0, %1, %2}\"\n+  \"TARGET_AVX2 && <mask_avx512vl_condition>\n+   && ix86_binary_operator_ok (MULT, V8SImode, operands)\"\n+  \"vpmuludq\\t{%2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2}\"\n   [(set_attr \"type\" \"sseimul\")\n-   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"prefix\" \"maybe_evex\")\n    (set_attr \"mode\" \"OI\")])\n \n-(define_expand \"vec_widen_umult_even_v4si\"\n+(define_expand \"vec_widen_umult_even_v4si<mask_name>\"\n   [(set (match_operand:V2DI 0 \"register_operand\")\n \t(mult:V2DI\n \t  (zero_extend:V2DI\n@@ -9219,28 +9220,29 @@\n \t    (vec_select:V2SI\n \t      (match_operand:V4SI 2 \"nonimmediate_operand\")\n \t      (parallel [(const_int 0) (const_int 2)])))))]\n-  \"TARGET_SSE2\"\n+  \"TARGET_SSE2 && <mask_avx512vl_condition>\"\n   \"ix86_fixup_binary_operands_no_copy (MULT, V4SImode, operands);\")\n \n-(define_insn \"*vec_widen_umult_even_v4si\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x,x\")\n+(define_insn \"*vec_widen_umult_even_v4si<mask_name>\"\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=x,v\")\n \t(mult:V2DI\n \t  (zero_extend:V2DI\n \t    (vec_select:V2SI\n-\t      (match_operand:V4SI 1 \"nonimmediate_operand\" \"%0,x\")\n+\t      (match_operand:V4SI 1 \"nonimmediate_operand\" \"%0,v\")\n \t      (parallel [(const_int 0) (const_int 2)])))\n \t  (zero_extend:V2DI\n \t    (vec_select:V2SI\n-\t      (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm,xm\")\n+\t      (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm,vm\")\n \t      (parallel [(const_int 0) (const_int 2)])))))]\n-  \"TARGET_SSE2 && ix86_binary_operator_ok (MULT, V4SImode, operands)\"\n+  \"TARGET_SSE2 && <mask_avx512vl_condition>\n+   && ix86_binary_operator_ok (MULT, V4SImode, operands)\"\n   \"@\n    pmuludq\\t{%2, %0|%0, %2}\n-   vpmuludq\\t{%2, %1, %0|%0, %1, %2}\"\n+   vpmuludq\\t{%2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2}\"\n   [(set_attr \"isa\" \"noavx,avx\")\n    (set_attr \"type\" \"sseimul\")\n    (set_attr \"prefix_data16\" \"1,*\")\n-   (set_attr \"prefix\" \"orig,vex\")\n+   (set_attr \"prefix\" \"orig,maybe_evex\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_expand \"vec_widen_smult_even_v16si<mask_name>\"\n@@ -9288,7 +9290,7 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"XI\")])\n \n-(define_expand \"vec_widen_smult_even_v8si\"\n+(define_expand \"vec_widen_smult_even_v8si<mask_name>\"\n   [(set (match_operand:V4DI 0 \"register_operand\")\n \t(mult:V4DI\n \t  (sign_extend:V4DI\n@@ -9301,30 +9303,31 @@\n \t      (match_operand:V8SI 2 \"nonimmediate_operand\")\n \t      (parallel [(const_int 0) (const_int 2)\n \t\t\t (const_int 4) (const_int 6)])))))]\n-  \"TARGET_AVX2\"\n+  \"TARGET_AVX2 && <mask_avx512vl_condition>\"\n   \"ix86_fixup_binary_operands_no_copy (MULT, V8SImode, operands);\")\n \n-(define_insn \"*vec_widen_smult_even_v8si\"\n-  [(set (match_operand:V4DI 0 \"register_operand\" \"=x\")\n+(define_insn \"*vec_widen_smult_even_v8si<mask_name>\"\n+  [(set (match_operand:V4DI 0 \"register_operand\" \"=v\")\n \t(mult:V4DI\n \t  (sign_extend:V4DI\n \t    (vec_select:V4SI\n-\t      (match_operand:V8SI 1 \"nonimmediate_operand\" \"x\")\n+\t      (match_operand:V8SI 1 \"nonimmediate_operand\" \"v\")\n \t      (parallel [(const_int 0) (const_int 2)\n \t\t\t (const_int 4) (const_int 6)])))\n \t  (sign_extend:V4DI\n \t    (vec_select:V4SI\n-\t      (match_operand:V8SI 2 \"nonimmediate_operand\" \"xm\")\n+\t      (match_operand:V8SI 2 \"nonimmediate_operand\" \"vm\")\n \t      (parallel [(const_int 0) (const_int 2)\n \t\t\t (const_int 4) (const_int 6)])))))]\n-  \"TARGET_AVX2 && ix86_binary_operator_ok (MULT, V8SImode, operands)\"\n-  \"vpmuldq\\t{%2, %1, %0|%0, %1, %2}\"\n+  \"TARGET_AVX2\n+   && ix86_binary_operator_ok (MULT, V8SImode, operands)\"\n+  \"vpmuldq\\t{%2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2}\"\n   [(set_attr \"type\" \"sseimul\")\n    (set_attr \"prefix_extra\" \"1\")\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"OI\")])\n \n-(define_expand \"sse4_1_mulv2siv2di3\"\n+(define_expand \"sse4_1_mulv2siv2di3<mask_name>\"\n   [(set (match_operand:V2DI 0 \"register_operand\")\n \t(mult:V2DI\n \t  (sign_extend:V2DI\n@@ -9335,24 +9338,25 @@\n \t    (vec_select:V2SI\n \t      (match_operand:V4SI 2 \"nonimmediate_operand\")\n \t      (parallel [(const_int 0) (const_int 2)])))))]\n-  \"TARGET_SSE4_1\"\n+  \"TARGET_SSE4_1 && <mask_avx512vl_condition>\"\n   \"ix86_fixup_binary_operands_no_copy (MULT, V4SImode, operands);\")\n \n-(define_insn \"*sse4_1_mulv2siv2di3\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x,x\")\n+(define_insn \"*sse4_1_mulv2siv2di3<mask_name>\"\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=x,v\")\n \t(mult:V2DI\n \t  (sign_extend:V2DI\n \t    (vec_select:V2SI\n-\t      (match_operand:V4SI 1 \"nonimmediate_operand\" \"%0,x\")\n+\t      (match_operand:V4SI 1 \"nonimmediate_operand\" \"%0,v\")\n \t      (parallel [(const_int 0) (const_int 2)])))\n \t  (sign_extend:V2DI\n \t    (vec_select:V2SI\n-\t      (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm,xm\")\n+\t      (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm,vm\")\n \t      (parallel [(const_int 0) (const_int 2)])))))]\n-  \"TARGET_SSE4_1 && ix86_binary_operator_ok (MULT, V4SImode, operands)\"\n+  \"TARGET_SSE4_1 && <mask_avx512vl_condition>\n+   && ix86_binary_operator_ok (MULT, V4SImode, operands)\"\n   \"@\n    pmuldq\\t{%2, %0|%0, %2}\n-   vpmuldq\\t{%2, %1, %0|%0, %1, %2}\"\n+   vpmuldq\\t{%2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2}\"\n   [(set_attr \"isa\" \"noavx,avx\")\n    (set_attr \"type\" \"sseimul\")\n    (set_attr \"prefix_data16\" \"1,*\")\n@@ -9491,6 +9495,17 @@\n    (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"TI\")])\n \n+(define_insn \"avx512dq_mul<mode>3<mask_name>\"\n+  [(set (match_operand:VI8 0 \"register_operand\" \"=v\")\n+\t(mult:VI8\n+\t  (match_operand:VI8 1 \"register_operand\" \"v\")\n+\t  (match_operand:VI8 2 \"nonimmediate_operand\" \"vm\")))]\n+  \"TARGET_AVX512DQ && <mask_mode512bit_condition>\"\n+  \"vpmullq\\t{%2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2}\"\n+  [(set_attr \"type\" \"sseimul\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n+\n (define_expand \"mul<mode>3<mask_name>\"\n   [(set (match_operand:VI4_AVX512F 0 \"register_operand\")\n \t(mult:VI4_AVX512F"}]}