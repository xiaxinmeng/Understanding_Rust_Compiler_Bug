{"sha": "0be957dc9fdd89afc9e60eb08ad936200b86401f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJlOTU3ZGM5ZmRkODlhZmM5ZTYwZWIwOGFkOTM2MjAwYjg2NDAxZg==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-02-07T19:49:26Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-02-07T19:49:26Z"}, "message": "Call abort for runtime test, always return 0 from main.\n\n2010-02-07  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* gcc.dg/graphite/block-0.c: Call abort for runtime test.  Always\n\treturn 0 from main.\n\t* gcc.dg/graphite/block-1.c: Same.\n\t* gcc.dg/graphite/block-3.c: Same.\n\t* gcc.dg/graphite/block-4.c: Same.\n\t* gcc.dg/graphite/block-5.c: Same.\n\t* gcc.dg/graphite/block-6.c: Same.\n\t* gcc.dg/graphite/block-7.c: Same.\n\t* gcc.dg/graphite/interchange-0.c: Same.\n\t* gcc.dg/graphite/interchange-1.c: Same.\n\t* gcc.dg/graphite/interchange-10.c: Same.\n\t* gcc.dg/graphite/interchange-11.c: Same.\n\t* gcc.dg/graphite/interchange-12.c: Same.\n\t* gcc.dg/graphite/interchange-2.c: Same.\n\t* gcc.dg/graphite/interchange-3.c: Same.\n\t* gcc.dg/graphite/interchange-4.c: Same.\n\t* gcc.dg/graphite/interchange-5.c: Same.\n\t* gcc.dg/graphite/interchange-6.c: Same.\n\t* gcc.dg/graphite/interchange-7.c: Same.\n\t* gcc.dg/graphite/interchange-8.c: Same.\n\t* gcc.dg/graphite/interchange-9.c: Same.\n\t* gcc.dg/graphite/interchange-mvt.c: Same.\n\nFrom-SVN: r156584", "tree": {"sha": "53ba255e09f78cc869d309432fc63a27a359d6d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53ba255e09f78cc869d309432fc63a27a359d6d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0be957dc9fdd89afc9e60eb08ad936200b86401f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0be957dc9fdd89afc9e60eb08ad936200b86401f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0be957dc9fdd89afc9e60eb08ad936200b86401f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0be957dc9fdd89afc9e60eb08ad936200b86401f/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d48441c65d6ceb6311f86beb5999aed2887da84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d48441c65d6ceb6311f86beb5999aed2887da84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d48441c65d6ceb6311f86beb5999aed2887da84"}], "stats": {"total": 178, "additions": 155, "deletions": 23}, "files": [{"sha": "d563ad369a51930c657d4b00a0ba98856e8a08e6", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=0be957dc9fdd89afc9e60eb08ad936200b86401f", "patch": "@@ -1,3 +1,28 @@\n+2010-02-07  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* gcc.dg/graphite/block-0.c: Call abort for runtime test.  Always\n+\treturn 0 from main.\n+\t* gcc.dg/graphite/block-1.c: Same.\n+\t* gcc.dg/graphite/block-3.c: Same.\n+\t* gcc.dg/graphite/block-4.c: Same.\n+\t* gcc.dg/graphite/block-5.c: Same.\n+\t* gcc.dg/graphite/block-6.c: Same.\n+\t* gcc.dg/graphite/block-7.c: Same.\n+\t* gcc.dg/graphite/interchange-0.c: Same.\n+\t* gcc.dg/graphite/interchange-1.c: Same.\n+\t* gcc.dg/graphite/interchange-10.c: Same.\n+\t* gcc.dg/graphite/interchange-11.c: Same.\n+\t* gcc.dg/graphite/interchange-12.c: Same.\n+\t* gcc.dg/graphite/interchange-2.c: Same.\n+\t* gcc.dg/graphite/interchange-3.c: Same.\n+\t* gcc.dg/graphite/interchange-4.c: Same.\n+\t* gcc.dg/graphite/interchange-5.c: Same.\n+\t* gcc.dg/graphite/interchange-6.c: Same.\n+\t* gcc.dg/graphite/interchange-7.c: Same.\n+\t* gcc.dg/graphite/interchange-8.c: Same.\n+\t* gcc.dg/graphite/interchange-9.c: Same.\n+\t* gcc.dg/graphite/interchange-mvt.c: Same.\n+\n 2010-02-07  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* gfortran.dg/graphite/id-19.f: New."}, {"sha": "af023634226f6b27f38ea62a944f34a668801782", "filename": "gcc/testsuite/gcc.dg/graphite/block-0.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fblock-0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fblock-0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fblock-0.c?ref=0be957dc9fdd89afc9e60eb08ad936200b86401f", "patch": "@@ -19,7 +19,10 @@ foo (void)\n   return a[0];\n }\n \n-main()\n+extern void abort ();\n+\n+int\n+main (void)\n {\n   int i, res;\n \n@@ -32,7 +35,10 @@ main()\n   fprintf (stderr, \"res = %d \\n\", res);\n #endif\n \n-  return res != 1999;\n+  if (res != 1999)\n+    abort ();\n+\n+  return 0;\n }\n \n /* { dg-final { scan-tree-dump-times \"will be loop blocked\" 1 \"graphite\" { xfail *-*-* } } } */"}, {"sha": "876d6f083604cc65d24e6ff5703bb68b1e103656", "filename": "gcc/testsuite/gcc.dg/graphite/block-1.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fblock-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fblock-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fblock-1.c?ref=0be957dc9fdd89afc9e60eb08ad936200b86401f", "patch": "@@ -7,7 +7,10 @@\n \n #define MAX 100\n \n-int main()\n+extern void abort ();\n+\n+int\n+main (void)\n {\n   int i, j;\n   int sum = 0;\n@@ -33,7 +36,10 @@ int main()\n   fprintf (stderr, \"sum = %d \\n\", sum);\n #endif\n \n-  return sum != 990000;\n+  if (sum != 990000)\n+    abort ();\n+\n+  return 0;\n }\n \n /* { dg-final { scan-tree-dump-times \"will be loop blocked\" 2 \"graphite\" { xfail *-*-* } } } */ "}, {"sha": "efa14599ed7860e720cdd1cdfc4f81b743d721ce", "filename": "gcc/testsuite/gcc.dg/graphite/block-3.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fblock-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fblock-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fblock-3.c?ref=0be957dc9fdd89afc9e60eb08ad936200b86401f", "patch": "@@ -30,6 +30,8 @@ foo (void)\n   return A[0][0][0] + A[M-1][M-1][M-1];\n }\n \n+extern void abort ();\n+\n int\n main (void)\n {\n@@ -48,7 +50,10 @@ main (void)\n   fprintf (stderr, \"res = %d \\n\", res);\n #endif\n \n-  return res != 9801;\n+  if (res != 9801)\n+    abort ();\n+\n+  return 0;\n }\n \n /* { dg-final { scan-tree-dump-times \"will be loop blocked\" 1 \"graphite\" } } */"}, {"sha": "ac22ec3aff29881643c859f05580ea9b016f17e0", "filename": "gcc/testsuite/gcc.dg/graphite/block-4.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fblock-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fblock-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fblock-4.c?ref=0be957dc9fdd89afc9e60eb08ad936200b86401f", "patch": "@@ -28,6 +28,8 @@ foo (void)\n   return A[0][0] + A[M-1][M-1];\n }\n \n+extern void abort ();\n+\n int\n main (void)\n {\n@@ -46,7 +48,10 @@ main (void)\n   fprintf (stderr, \"res = %d \\n\", res);\n #endif\n \n-  return res != 998001;\n+  if (res != 998001)\n+    abort ();\n+\n+  return 0;\n }\n \n /* { dg-final { scan-tree-dump-times \"will be loop blocked\" 1 \"graphite\" { xfail *-*-* } } } */"}, {"sha": "b577958c57d1598c51049f302fcf9e3667e72d5b", "filename": "gcc/testsuite/gcc.dg/graphite/block-5.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fblock-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fblock-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fblock-5.c?ref=0be957dc9fdd89afc9e60eb08ad936200b86401f", "patch": "@@ -27,6 +27,8 @@ foo (void)\n   return res;\n }\n \n+extern void abort ();\n+\n int\n main (void)\n {\n@@ -45,7 +47,10 @@ main (void)\n   fprintf (stderr, \"res = %d \\n\", res);\n #endif\n \n-  return res != 1333300;\n+  if (res != 1333300)\n+    abort ();\n+\n+  return 0;\n }\n \n /* { dg-final { scan-tree-dump-times \"will be loop blocked\" 1 \"graphite\" } } */"}, {"sha": "8f250db5152514736b96df7184c0e273fd9c6e9d", "filename": "gcc/testsuite/gcc.dg/graphite/block-6.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fblock-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fblock-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fblock-6.c?ref=0be957dc9fdd89afc9e60eb08ad936200b86401f", "patch": "@@ -25,6 +25,8 @@ foo (void)\n   return res;\n }\n \n+extern void abort ();\n+\n int\n main (void)\n {\n@@ -40,7 +42,10 @@ main (void)\n   fprintf (stderr, \"res = %d \\n\", res);\n #endif\n \n-  return res != 204007516;\n+  if (res != 204007516)\n+    abort ();\n+\n+  return 0;\n }\n \n /* { dg-final { scan-tree-dump-times \"will be loop blocked\" 0 \"graphite\" } } */"}, {"sha": "07c626ccd1d0f50b6f3e66524b1b14076ad3241d", "filename": "gcc/testsuite/gcc.dg/graphite/block-7.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fblock-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fblock-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fblock-7.c?ref=0be957dc9fdd89afc9e60eb08ad936200b86401f", "patch": "@@ -23,6 +23,8 @@ matmult (void)\n       }\n }\n \n+extern void abort ();\n+\n int\n main (void)\n {\n@@ -44,7 +46,10 @@ main (void)\n   fprintf (stderr, \"res = %d \\n\", res);\n #endif\n \n-  return res != 529340000;\n+  if (res != 529340000)\n+    abort ();\n+\n+  return 0;\n }\n \n /* { dg-final { scan-tree-dump-times \"will be loop blocked\" 1 \"graphite\" { xfail *-*-* } } } */"}, {"sha": "b6e382c0a6fc84334f2d0870ccf57837f32b6b84", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-0.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-0.c?ref=0be957dc9fdd89afc9e60eb08ad936200b86401f", "patch": "@@ -22,6 +22,8 @@ foo (void)\n   return a[N-1][N-1];\n }\n \n+extern void abort ();\n+\n int\n main (void)\n {\n@@ -38,7 +40,10 @@ main (void)\n   fprintf (stderr, \"res = %d \\n\", res);\n #endif\n \n-  return res != 13;\n+  if (res != 13)\n+    abort ();\n+\n+  return 0;\n }\n \n /* { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" } } */"}, {"sha": "787124f56a4f11f4caebd3da8ffd590f17704697", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-1.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-1.c?ref=0be957dc9fdd89afc9e60eb08ad936200b86401f", "patch": "@@ -26,6 +26,8 @@ foo (int N)\n   return sum + N + u[1336 * 2] + u[1336];\n }\n \n+extern void abort ();\n+\n int\n main (void)\n {\n@@ -40,7 +42,10 @@ main (void)\n   fprintf (stderr, \"res = %d \\n\", res);\n #endif\n \n-  return res != 3565793;\n+  if (res != 3565793)\n+    abort ();\n+\n+  return 0;\n }\n \n "}, {"sha": "51a46d62394533ae58108e991030c34bd0c6e7e1", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-10.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-10.c?ref=0be957dc9fdd89afc9e60eb08ad936200b86401f", "patch": "@@ -24,6 +24,8 @@ foo (int N, int *res)\n   *res = sum + N + u[1336 * 2] + u[1336];\n }\n \n+extern void abort ();\n+\n int\n main (void)\n {\n@@ -38,7 +40,10 @@ main (void)\n   fprintf (stderr, \"res = %d \\n\", res);\n #endif\n \n-  return res != 7130239;\n+  if (res != 7130239)\n+    abort ();\n+\n+  return 0;\n }\n \n /* { dg-final { scan-tree-dump-times \"will be interchanged\" 2 \"graphite\" } } */"}, {"sha": "95b60b86584bae1a827c09f150f681d8ce7c43eb", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-11.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-11.c?ref=0be957dc9fdd89afc9e60eb08ad936200b86401f", "patch": "@@ -23,6 +23,8 @@ foo (int N, int *res)\n   *res = sum;\n }\n \n+extern void abort ();\n+\n int\n main (void)\n {\n@@ -37,7 +39,10 @@ main (void)\n   fprintf (stderr, \"res = %d \\n\", res);\n #endif\n \n-  return res != 3564450;\n+  if (res != 3564450)\n+    abort ();\n+\n+  return 0;\n }\n \n /* { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" { xfail *-*-* } } } */"}, {"sha": "16c0ddbd6c71d8afbf16aa6c79e4d31f7375aac0", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-12.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-12.c?ref=0be957dc9fdd89afc9e60eb08ad936200b86401f", "patch": "@@ -25,6 +25,8 @@ matmult (void)\n   return A[0][0] + A[N-1][N-1];\n }\n \n+extern void abort ();\n+\n int\n main (void)\n {\n@@ -44,7 +46,10 @@ main (void)\n   fprintf (stderr, \"res = %d \\n\", res);\n #endif\n \n-  return res != 2626800;\n+  if (res != 2626800)\n+    abort ();\n+\n+  return 0;\n }\n \n /* { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" { xfail *-*-* } } } */"}, {"sha": "2609a10eb0b5784d9d2174fa2675e7dc5e3facd8", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-2.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-2.c?ref=0be957dc9fdd89afc9e60eb08ad936200b86401f", "patch": "@@ -30,6 +30,8 @@ foo (int N, int *res)\n   *res = sum + N + u[1336 * 2] + u[1336];\n }\n \n+extern void abort ();\n+\n int\n main (void)\n {\n@@ -44,7 +46,10 @@ main (void)\n   fprintf (stderr, \"res = %d \\n\", res);\n #endif\n \n-  return res != 3565793;\n+  if (res != 3565793)\n+    abort ();\n+\n+  return 0;\n }\n \n /* { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" { xfail *-*-* } } } */ "}, {"sha": "26ec4d9d5db0fee086e7134e16b0668499522916", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-3.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-3.c?ref=0be957dc9fdd89afc9e60eb08ad936200b86401f", "patch": "@@ -25,6 +25,8 @@ foo (int N, int *res)\n   *res = sum + N + u[1336 * 2] + u[1336];\n }\n \n+extern void abort ();\n+\n int\n main (void)\n {\n@@ -39,7 +41,10 @@ main (void)\n   fprintf (stderr, \"res = %d \\n\", res);\n #endif\n \n-  return res != 3565789;\n+  if (res != 3565789)\n+    abort ();\n+\n+  return 0;\n }\n \n /* { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" } } */"}, {"sha": "f86391c7f7c30483f2f3071187ac39bbcfc47ba4", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-4.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-4.c?ref=0be957dc9fdd89afc9e60eb08ad936200b86401f", "patch": "@@ -24,6 +24,8 @@ foo (int N, int *res)\n   *res = sum + N + u[1336 * 2] + u[1336];\n }\n \n+extern void abort ();\n+\n int\n main (void)\n {\n@@ -38,7 +40,10 @@ main (void)\n   fprintf (stderr, \"res = %d \\n\", res);\n #endif\n \n-  return res != 3565793;\n+  if (res != 3565793)\n+    abort ();\n+\n+  return 0;\n }\n \n /* { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" } } */"}, {"sha": "1fbc8e6ecb647b0ecfb35ed9ee80463eff4839fd", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-5.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-5.c?ref=0be957dc9fdd89afc9e60eb08ad936200b86401f", "patch": "@@ -23,6 +23,8 @@ foo (void)\n   return A[0][0] + A[N-1][M-1];\n }\n \n+extern void abort ();\n+\n int\n main (void)\n {\n@@ -38,7 +40,10 @@ main (void)\n   fprintf (stderr, \"res = %d \\n\", res);\n #endif\n \n-  return res != 20;\n+  if (res != 20)\n+    abort ();\n+\n+  return 0;\n }\n \n /* { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" } } */"}, {"sha": "9e189050e6f791ba0910e8e16d5571770db78d6d", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-6.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-6.c?ref=0be957dc9fdd89afc9e60eb08ad936200b86401f", "patch": "@@ -23,6 +23,8 @@ foo (int A[N][M])\n   return A[0][0] + A[N-1][M-1];\n }\n \n+extern void abort ();\n+\n int\n main (void)\n {\n@@ -39,7 +41,10 @@ main (void)\n   fprintf (stderr, \"res = %d \\n\", res);\n #endif\n \n-  return res != 8;\n+  if (res != 8)\n+    abort ();\n+\n+  return 0;\n }\n \n /* { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" } } */"}, {"sha": "b3710ad4c9d61b5778f502882a5edd84c9b03e12", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-7.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-7.c?ref=0be957dc9fdd89afc9e60eb08ad936200b86401f", "patch": "@@ -23,6 +23,8 @@ foo (double *a)\n   return r;\n }\n \n+extern void abort ();\n+\n int\n main (void)\n {\n@@ -38,7 +40,10 @@ main (void)\n   fprintf (stderr, \"res = %d \\n\", res);\n #endif\n \n-  return res != 246642;\n+  if (res != 246642)\n+    abort ();\n+\n+  return 0;\n }\n \n /* { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" } } */"}, {"sha": "8c07b6f7ff1d3cc38bbb23a4a7576838fab6bf62", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-8.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-8.c?ref=0be957dc9fdd89afc9e60eb08ad936200b86401f", "patch": "@@ -46,6 +46,8 @@ foo (void)\n   return A[0][1][0][2] + A[0][3][0][3] + A[0][2][0][2] + A[0][1][0][1] + A[3][3][0][2];\n }\n \n+extern void abort ();\n+\n int\n main (void)\n {\n@@ -72,7 +74,10 @@ main (void)\n   fprintf (stderr, \"res = %d \\n\", res);\n #endif\n \n-  return res != 424;\n+  if (res != 424)\n+    abort ();\n+\n+  return 0;\n }\n \n /* Loops K and L should be interchanged.  */"}, {"sha": "7959570e2c099ec3e8c357702e1ce9a53cb1b485", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-9.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-9.c?ref=0be957dc9fdd89afc9e60eb08ad936200b86401f", "patch": "@@ -21,6 +21,8 @@ foo (int *x)\n   return sum;\n }\n \n+extern void abort ();\n+\n int\n main (void)\n {\n@@ -36,7 +38,10 @@ main (void)\n   fprintf (stderr, \"res = %d \\n\", res);\n #endif\n \n-  return res != 2468642;\n+  if (res != 2468642)\n+    abort ();\n+\n+  return 0;\n }\n \n /* { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" } } */"}, {"sha": "62a9c462eb035e66f57d66eb9f04fa49617e16fb", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-mvt.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-mvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0be957dc9fdd89afc9e60eb08ad936200b86401f/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-mvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-mvt.c?ref=0be957dc9fdd89afc9e60eb08ad936200b86401f", "patch": "@@ -26,6 +26,8 @@ mvt (long N)\n   return x1[0] + x2[0];\n }\n \n+extern void abort ();\n+\n int\n main (void)\n {\n@@ -49,7 +51,10 @@ main (void)\n   fprintf (stderr, \"res = %d \\n\", res);\n #endif\n \n-  return res != 199900000;\n+  if (res != 199900000)\n+    abort ();\n+\n+  return 0;\n }\n \n /* { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" { xfail *-*-* } } } */"}]}