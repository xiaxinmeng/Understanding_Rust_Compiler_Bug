{"sha": "6ad972ece13f01f88a699b1a9f784c4166061901", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFkOTcyZWNlMTNmMDFmODhhNjk5YjFhOWY3ODRjNDE2NjA2MTkwMQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-12-13T10:41:07Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-12-13T10:41:07Z"}, "message": "rtlanal: Remove noop_move_p REG_EQUAL condition\n\nnoop_move_p currently keeps any instruction that has a REG_EQUAL\nnote, on the basis that the equality might be useful in future.\nBut this creates a perverse incentive not to add potentially-useful\nREG_EQUAL notes, in case they prevent an instruction from later being\nremoved as dead.\n\nThe condition originates from flow.c:life_analysis_1 and predates\nthe changes tracked by the current repository (1992).  It probably\nmade sense when most optimisations were done on RTL rather than FE\ntrees, but it seems counterproductive now.\n\ngcc/\n\t* rtlanal.c (noop_move_p): Don't check for REG_EQUAL notes.", "tree": {"sha": "7c081d0882b5608a71f30b50d68b0894296a193b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c081d0882b5608a71f30b50d68b0894296a193b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ad972ece13f01f88a699b1a9f784c4166061901", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ad972ece13f01f88a699b1a9f784c4166061901", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ad972ece13f01f88a699b1a9f784c4166061901", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ad972ece13f01f88a699b1a9f784c4166061901/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da40a69c9ef8784d37c968ac37daf6f8883d2755", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da40a69c9ef8784d37c968ac37daf6f8883d2755", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da40a69c9ef8784d37c968ac37daf6f8883d2755"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "6f521503c39d4009b341f052da2fcb1d232697a9", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ad972ece13f01f88a699b1a9f784c4166061901/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ad972ece13f01f88a699b1a9f784c4166061901/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=6ad972ece13f01f88a699b1a9f784c4166061901", "patch": "@@ -1668,10 +1668,6 @@ noop_move_p (const rtx_insn *insn)\n   if (INSN_CODE (insn) == NOOP_MOVE_INSN_CODE)\n     return 1;\n \n-  /* Insns carrying these notes are useful later on.  */\n-  if (find_reg_note (insn, REG_EQUAL, NULL_RTX))\n-    return 0;\n-\n   /* Check the code to be executed for COND_EXEC.  */\n   if (GET_CODE (pat) == COND_EXEC)\n     pat = COND_EXEC_CODE (pat);"}]}