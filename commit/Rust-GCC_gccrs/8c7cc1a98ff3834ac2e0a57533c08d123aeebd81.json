{"sha": "8c7cc1a98ff3834ac2e0a57533c08d123aeebd81", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM3Y2MxYTk4ZmYzODM0YWMyZTBhNTc1MzNjMDhkMTIzYWVlYmQ4MQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2016-12-11T18:59:07Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-12-11T18:59:07Z"}, "message": "re PR target/70799 (STV pass does not convert DImode shifts)\n\n\tPR target/70799\n\t* config/i386/i386.c (dimode_scalar_to_vector_candidate_p)\n\t<case ASHIFT, case LSHIFTRT>: Consider all constant shifts.\n\tAdd FIXME comment.\n\t(dimode_scalar_chain::compute_convert_gain): Reduce gain for\n\tconstant shifts larger or equal than 32.\n\ntestsuite/ChangeLog:\n\n\tPR target/70799\n\t* gcc.target/i386/pr70799-3.c: New test.\n\nFrom-SVN: r243530", "tree": {"sha": "c6056bb1d9d7da9a3538d31b3a9e61536ddac192", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6056bb1d9d7da9a3538d31b3a9e61536ddac192"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c7cc1a98ff3834ac2e0a57533c08d123aeebd81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c7cc1a98ff3834ac2e0a57533c08d123aeebd81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c7cc1a98ff3834ac2e0a57533c08d123aeebd81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c7cc1a98ff3834ac2e0a57533c08d123aeebd81/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a1f7d967aa8425806836bdf291cacecb8a636df0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1f7d967aa8425806836bdf291cacecb8a636df0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1f7d967aa8425806836bdf291cacecb8a636df0"}], "stats": {"total": 41, "additions": 37, "deletions": 4}, "files": [{"sha": "24a7fdd8a979b807d1dd4d8a0ad8c48e3229e5a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c7cc1a98ff3834ac2e0a57533c08d123aeebd81/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c7cc1a98ff3834ac2e0a57533c08d123aeebd81/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c7cc1a98ff3834ac2e0a57533c08d123aeebd81", "patch": "@@ -1,3 +1,12 @@\n+2016-12-11  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/70799\n+\t* config/i386/i386.c (dimode_scalar_to_vector_candidate_p)\n+\t<case ASHIFT, case LSHIFTRT>: Consider all constant shifts.\n+\tAdd FIXME comment.\n+\t(dimode_scalar_chain::compute_convert_gain): Reduce gain for\n+\tconstant shifts larger or equal than 32.\n+\n 2016-12-11  Roger Pau Monn\u00e9  <roger.pau@citrix.com>\n \n \t* config/i386/x86-64.h: Append --32 to the assembler options when"}, {"sha": "152e6bcafd5d9a8129d7fee002c61096a3ca3d04", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c7cc1a98ff3834ac2e0a57533c08d123aeebd81/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c7cc1a98ff3834ac2e0a57533c08d123aeebd81/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=8c7cc1a98ff3834ac2e0a57533c08d123aeebd81", "patch": "@@ -2809,10 +2809,9 @@ dimode_scalar_to_vector_candidate_p (rtx_insn *insn)\n     {\n     case ASHIFT:\n     case LSHIFTRT:\n-      /* Consider only non-variable shifts narrower\n-\t than general register width.  */\n-      if (!(CONST_INT_P (XEXP (src, 1))\n-\t    && IN_RANGE (INTVAL (XEXP (src, 1)), 0, 31)))\n+      /* FIXME: consider also variable shifts.  */\n+      if (!CONST_INT_P (XEXP (src, 1))\n+\t  || !IN_RANGE (INTVAL (XEXP (src, 1)), 0, 63))\n \treturn false;\n       break;\n \n@@ -3409,6 +3408,9 @@ dimode_scalar_chain::compute_convert_gain ()\n \t  gain += ix86_cost->add;\n     \t  if (CONST_INT_P (XEXP (src, 0)))\n \t    gain -= vector_const_cost (XEXP (src, 0));\n+\t  if (CONST_INT_P (XEXP (src, 1))\n+\t      && INTVAL (XEXP (src, 1)) >= 32)\n+\t    gain -= COSTS_N_INSNS (1);\n \t}\n       else if (GET_CODE (src) == PLUS\n \t       || GET_CODE (src) == MINUS"}, {"sha": "aa9aae76e13f0689081eedf6f28bad6b3bea7b1e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c7cc1a98ff3834ac2e0a57533c08d123aeebd81/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c7cc1a98ff3834ac2e0a57533c08d123aeebd81/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8c7cc1a98ff3834ac2e0a57533c08d123aeebd81", "patch": "@@ -1,3 +1,8 @@\n+2016-12-11  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/70799\n+\t* gcc.target/i386/pr70799-3.c: New test.\n+\n 2016-12-11  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/78637"}, {"sha": "92df1c5ea46dc6866f86ca96ab497829baf5914e", "filename": "gcc/testsuite/gcc.target/i386/pr70799-3.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c7cc1a98ff3834ac2e0a57533c08d123aeebd81/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70799-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c7cc1a98ff3834ac2e0a57533c08d123aeebd81/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70799-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr70799-3.c?ref=8c7cc1a98ff3834ac2e0a57533c08d123aeebd81", "patch": "@@ -0,0 +1,17 @@\n+/* PR target/pr70799 */\n+/* { dg-do compile { target { ia32 } } } */\n+/* { dg-options \"-O2 -march=slm -fno-split-wide-types -mno-stackrealign\" } */\n+/* { dg-final { scan-assembler \"psllq\" } } */\n+/* { dg-final { scan-assembler \"psrlq\" } } */\n+\n+unsigned long long a, b, c;\n+\n+void test1 (void)\n+{\n+  a = (b << 55) | c;\n+}\n+\n+void test2 (void)\n+{\n+  a = (b >> 55) | c;\n+}"}]}