{"sha": "7539316943c17368ce5ef876a9baba6b8c2e64f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzUzOTMxNjk0M2MxNzM2OGNlNWVmODc2YTliYWJhNmI4YzJlNjRmNg==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2001-02-19T20:03:42Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2001-02-19T20:03:42Z"}, "message": "Version.c, [...]: Update G77 version number to 0.5.27.\n\nlibf2c:\n\t* libF77/Version.c, libI77/Version.c, libU77/Version.c: Update G77\n\tversion number to 0.5.27.\n\ngcc:\n\t* README, cpp.texi, gcc.texi, version.c: Update version number to\n\t3.1.\n\t* cpp.1, gcov.1, gcc.1: Regenerate.\n\ngcc/f:\n\t* version.c, root.texi: Update GCC version number to 3.1.  Update\n\tG77 version number to 0.5.27.\n\t* BUGS, NEWS: Regenerate.\n\nFrom-SVN: r39901", "tree": {"sha": "f4e7da9c26759f75f5c830b88792fc97cb4ecdb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4e7da9c26759f75f5c830b88792fc97cb4ecdb3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7539316943c17368ce5ef876a9baba6b8c2e64f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7539316943c17368ce5ef876a9baba6b8c2e64f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7539316943c17368ce5ef876a9baba6b8c2e64f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7539316943c17368ce5ef876a9baba6b8c2e64f6/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51d0f328ba4dff5c9e8866a7bca24f45c578314d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51d0f328ba4dff5c9e8866a7bca24f45c578314d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51d0f328ba4dff5c9e8866a7bca24f45c578314d"}], "stats": {"total": 290, "additions": 182, "deletions": 108}, "files": [{"sha": "c3754ccc915c13eabab435319a7d6cf1d6cbea08", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7539316943c17368ce5ef876a9baba6b8c2e64f6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7539316943c17368ce5ef876a9baba6b8c2e64f6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7539316943c17368ce5ef876a9baba6b8c2e64f6", "patch": "@@ -1,3 +1,9 @@\n+2001-02-19  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* README, cpp.texi, gcc.texi, version.c: Update version number to\n+\t3.1.\n+\t* cpp.1, gcov.1, gcc.1: Regenerate.\n+\n 2001-02-19  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n         * cppfiles.c (stack_include_file): Generate dependencies"}, {"sha": "a317c64f0752e57e28c93eec43bcf6e4079253f3", "filename": "gcc/README", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7539316943c17368ce5ef876a9baba6b8c2e64f6/gcc%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7539316943c17368ce5ef876a9baba6b8c2e64f6/gcc%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FREADME?ref=7539316943c17368ce5ef876a9baba6b8c2e64f6", "patch": "@@ -1,4 +1,4 @@\n-This directory contains the GNU Compiler Collection (GCC) version 2.96.\n+This directory contains the GNU Compiler Collection (GCC) version 3.1.\n It includes all of the support for compiling C, C++, Objective C, Fortran,\n Java, and Chill.\n "}, {"sha": "f3e227e6b0509550e1c4906347f2affe63607c0f", "filename": "gcc/cpp.1", "status": "modified", "additions": 36, "deletions": 3, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7539316943c17368ce5ef876a9baba6b8c2e64f6/gcc%2Fcpp.1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7539316943c17368ce5ef876a9baba6b8c2e64f6/gcc%2Fcpp.1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpp.1?ref=7539316943c17368ce5ef876a9baba6b8c2e64f6", "patch": "@@ -1,5 +1,5 @@\n .\\\" Automatically generated by Pod::Man version 1.1\n-.\\\" Wed Jan 24 19:43:25 2001\n+.\\\" Mon Feb 19 19:32:17 2001\n .\\\"\n .\\\" Standard preamble:\n .\\\" ======================================================================\n@@ -138,7 +138,7 @@\n .\\\" ======================================================================\n .\\\"\n .IX Title \"CPP 1\"\n-.TH CPP 1 \"gcc-2.97\" \"2001-01-24\" \"GNU\"\n+.TH CPP 1 \"gcc-3.1\" \"2001-02-19\" \"GNU\"\n .UC\n .SH \"NAME\"\n cpp \\- The C Preprocessor\n@@ -385,6 +385,36 @@ Requests \\fB\\-Wcomment\\fR, \\fB\\-Wtrigraphs\\fR, and \\fB\\-Wwhite-space\\fR\n .IX Item \"-Wtraditional\"\n Warn about certain constructs that behave differently in traditional and\n \\&\\s-1ISO\\s0 C.\n+.RS 4\n+.Ip \"\\(bu\" 4\n+Macro parameters that appear within string literals in the macro body.\n+In traditional C macro replacement takes place within string literals,\n+but does not in \\s-1ISO\\s0 C.\n+.Ip \"\\(bu\" 4\n+In traditional C, some preprocessor directives did not exist.\n+Traditional preprocessors would only consider a line to be a directive\n+if the \\fB#\\fR appeared in column 1 on the line.  Therefore\n+\\&\\fB\\-Wtraditional\\fR warns about directives that traditional C\n+understands but would ignore because the \\fB#\\fR does not appear as the\n+first character on the line.  It also suggests you hide directives like\n+\\&\\fB#pragma\\fR not understood by traditional C by indenting them.  Some\n+traditional implementations would not recognise \\fB#elif\\fR, so it\n+suggests avoiding it altogether.\n+.Ip \"\\(bu\" 4\n+A function-like macro that appears without arguments.\n+.Ip \"\\(bu\" 4\n+The unary plus operator.\n+.Ip \"\\(bu\" 4\n+The `U' integer constant suffix.  (Traditonal C does support the `L'\n+suffix on integer constants.)  Note, these suffixes appear in macros\n+defined in the system headers of most modern systems, e.g. the _MIN/_MAX\n+macros in limits.h.  Use of these macros can lead to spurious warnings\n+as they do not necessarily reflect whether the code in question is any\n+less portable to traditional C given that suitable backup definitions\n+are provided.\n+.RE\n+.RS 4\n+.RE\n .Ip \"\\fB\\-Wundef\\fR\" 4\n .IX Item \"-Wundef\"\n Warn if an undefined identifier is evaluated in an \\fB#if\\fR directive.\n@@ -510,7 +540,10 @@ suitable for \\f(CW\\*(C`make\\*(C'\\fR describing the dependencies of the main sour\n file.  The preprocessor outputs one \\f(CW\\*(C`make\\*(C'\\fR rule containing the\n object file name for that source file, a colon, and the names of all the\n included files, including those coming from \\fB\\-include\\fR or\n-\\&\\fB\\-imacros\\fR command line options.  If there are many included files\n+\\&\\fB\\-imacros\\fR command line options.  Unless specified explicitly (with\n+\\&\\fB\\-MT\\fR or \\fB\\-MQ\\fR), the object file name consists of the basename\n+of the source file with any suffix replaced with object file suffix.\n+If there are many included files\n then the rule is split into several lines using \\fB\\e\\fR\\-newline.\n .Ip \"\\fB\\-MM\\fR\" 4\n .IX Item \"-MM\""}, {"sha": "1c7b5a7cfcc07ef78b617a73626bb632d8c8984a", "filename": "gcc/cpp.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7539316943c17368ce5ef876a9baba6b8c2e64f6/gcc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7539316943c17368ce5ef876a9baba6b8c2e64f6/gcc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpp.texi?ref=7539316943c17368ce5ef876a9baba6b8c2e64f6", "patch": "@@ -43,7 +43,7 @@ into another language, under the above conditions for modified versions.\n @c @finalout\n @title The C Preprocessor\n @subtitle Last revised January 2001\n-@subtitle for GCC version 2\n+@subtitle for GCC version 3\n @author Richard M. Stallman\n @page\n @vskip 2pc"}, {"sha": "fdcb9320f2a155f815c7cc342fa096f8e56abd1a", "filename": "gcc/f/BUGS", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7539316943c17368ce5ef876a9baba6b8c2e64f6/gcc%2Ff%2FBUGS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7539316943c17368ce5ef876a9baba6b8c2e64f6/gcc%2Ff%2FBUGS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FBUGS?ref=7539316943c17368ce5ef876a9baba6b8c2e64f6", "patch": "@@ -2,17 +2,16 @@ _Note:_ This file is automatically generated from the files\n `bugs0.texi' and `bugs.texi'.  `BUGS' is _not_ a source file, although\n it is normally included within source distributions.\n \n-   This file lists known bugs in the GCC-2.97 version of the GNU\n-Fortran compiler.  Copyright (C) 1995,1996,1997,1998,1999,2000 Free\n-Software Foundation, Inc.  You may copy, distribute, and modify it\n-freely as long as you preserve this copyright notice and permission\n-notice.\n+   This file lists known bugs in the GCC-3.1 version of the GNU Fortran\n+compiler.  Copyright (C) 1995,1996,1997,1998,1999,2000 Free Software\n+Foundation, Inc.  You may copy, distribute, and modify it freely as\n+long as you preserve this copyright notice and permission notice.\n \n Known Bugs In GNU Fortran\n *************************\n \n    This section identifies bugs that `g77' _users_ might run into in\n-the GCC-2.97 version of `g77'.  This includes bugs that are actually in\n+the GCC-3.1 version of `g77'.  This includes bugs that are actually in\n the `gcc' back end (GBE) or in `libf2c', because those sets of code are\n at least somewhat under the control of (and necessarily intertwined\n with) `g77', so it isn't worth separating them out.\n@@ -28,8 +27,8 @@ particularly concentrated on any version of this information that is\n distributed as part of a _released_ `g77'.\n \n    In particular, while this information is intended to apply to the\n-GCC-2.97 version of `g77', only an official _release_ of that version\n-is expected to contain documentation that is most consistent with the\n+GCC-3.1 version of `g77', only an official _release_ of that version is\n+expected to contain documentation that is most consistent with the\n `g77' product in that version.\n \n    An online, \"live\" version of this document (derived directly from"}, {"sha": "99634c31ae32a31d8ebd090ede27720b75a34213", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7539316943c17368ce5ef876a9baba6b8c2e64f6/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7539316943c17368ce5ef876a9baba6b8c2e64f6/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=7539316943c17368ce5ef876a9baba6b8c2e64f6", "patch": "@@ -1,3 +1,9 @@\n+2001-02-19  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* version.c, root.texi: Update GCC version number to 3.1.  Update\n+\tG77 version number to 0.5.27.\n+\t* BUGS, NEWS: Regenerate.\n+\n Sun Feb  4 15:52:44 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* com.c (ffecom_init_0): Call fatal_error instead of fatal."}, {"sha": "f9970e341aaadadd4884cebadab7e06c46cef79c", "filename": "gcc/f/NEWS", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7539316943c17368ce5ef876a9baba6b8c2e64f6/gcc%2Ff%2FNEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7539316943c17368ce5ef876a9baba6b8c2e64f6/gcc%2Ff%2FNEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FNEWS?ref=7539316943c17368ce5ef876a9baba6b8c2e64f6", "patch": "@@ -2,7 +2,7 @@ _Note:_ This file is automatically generated from the files\n `news0.texi' and `news.texi'.  `NEWS' is _not_ a source file, although\n it is normally included within source distributions.\n \n-   This file lists news about the GCC-2.97 version (and some other\n+   This file lists news about the GCC-3.1 version (and some other\n versions) of the GNU Fortran compiler.  Copyright (C)\n 1995,1996,1997,1998,1999,2000 Free Software Foundation, Inc.  You may\n copy, distribute, and modify it freely as long as you preserve this\n@@ -52,8 +52,8 @@ particularly concentrated on any version of this information that is\n distributed as part of a _released_ `g77'.\n \n    In particular, while this information is intended to apply to the\n-GCC-2.97 version of `g77', only an official _release_ of that version\n-is expected to contain documentation that is most consistent with the\n+GCC-3.1 version of `g77', only an official _release_ of that version is\n+expected to contain documentation that is most consistent with the\n `g77' product in that version.\n \n    Nevertheless, information on _previous_ releases of `g77', below, is"}, {"sha": "2c588e6d624226decef605616120e491174710d5", "filename": "gcc/f/root.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7539316943c17368ce5ef876a9baba6b8c2e64f6/gcc%2Ff%2Froot.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7539316943c17368ce5ef876a9baba6b8c2e64f6/gcc%2Ff%2Froot.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Froot.texi?ref=7539316943c17368ce5ef876a9baba6b8c2e64f6", "patch": "@@ -3,8 +3,8 @@\n @c (e.g. a release branch in the CVS repository for gcc),\n @c clear this and set the version information correctly.\n @set DEVELOPMENT\n-@set version-g77 0.5.26\n-@set version-gcc 2.97\n+@set version-g77 0.5.27\n+@set version-gcc 3.1\n \n @set email-general gcc@@gcc.gnu.org\n @set email-bugs gcc-bugs@@gcc.gnu.org or bug-gcc@@gnu.org"}, {"sha": "af0a3e85648e794cb5d6912e4c9b41e16245a707", "filename": "gcc/f/version.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7539316943c17368ce5ef876a9baba6b8c2e64f6/gcc%2Ff%2Fversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7539316943c17368ce5ef876a9baba6b8c2e64f6/gcc%2Ff%2Fversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fversion.c?ref=7539316943c17368ce5ef876a9baba6b8c2e64f6", "patch": "@@ -1 +1 @@\n-const char *ffe_version_string = \"0.5.26 20010219 (experimental)\";\n+const char *ffe_version_string = \"0.5.27 20010219 (experimental)\";"}, {"sha": "a8832d069b689fbf013d5610247d7a0bb2092a79", "filename": "gcc/gcc.1", "status": "modified", "additions": 103, "deletions": 78, "changes": 181, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7539316943c17368ce5ef876a9baba6b8c2e64f6/gcc%2Fgcc.1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7539316943c17368ce5ef876a9baba6b8c2e64f6/gcc%2Fgcc.1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.1?ref=7539316943c17368ce5ef876a9baba6b8c2e64f6", "patch": "@@ -1,5 +1,5 @@\n .\\\" Automatically generated by Pod::Man version 1.1\n-.\\\" Wed Jan 24 19:43:11 2001\n+.\\\" Mon Feb 19 19:32:03 2001\n .\\\"\n .\\\" Standard preamble:\n .\\\" ======================================================================\n@@ -138,7 +138,7 @@\n .\\\" ======================================================================\n .\\\"\n .IX Title \"GCC 1\"\n-.TH GCC 1 \"gcc-2.97\" \"2001-01-24\" \"GNU\"\n+.TH GCC 1 \"gcc-3.1\" \"2001-02-19\" \"GNU\"\n .UC\n .SH \"NAME\"\n gcc \\- \\s-1GNU\\s0 project C and \\*(C+ compiler\n@@ -217,9 +217,9 @@ in the following sections.\n \\&\\-fhuge-objects  \\-fno-implicit-templates \n \\&\\-fno-implicit-inline-templates \n \\&\\-fno-implement-inlines  \\-fms-extensions \n-\\&\\-fname-mangling-version-\\fR\\fIn\\fR  \\fB\\-fno-operator-names \n+\\&\\-fno-operator-names \n \\&\\-fno-optional-diags  \\-fpermissive \n-\\&\\-frepo  \\-fno-rtti  \\-fsquangle  \\-ftemplate-depth-\\fR\\fIn\\fR \n+\\&\\-frepo  \\-fno-rtti \\-ftemplate-depth-\\fR\\fIn\\fR \n \\&\\fB\\-fuse-cxa-atexit  \\-fvtable-thunks  \\-nostdinc++ \n \\&\\-fno-default-inline  \\-Wctor-dtor-privacy \n \\&\\-Wnon-virtual-dtor  \\-Wreorder \n@@ -261,8 +261,8 @@ in the following sections.\n \\&\\-Wstrict-prototypes \\-Wtraditional\\fR\n .Ip \"\\fIDebugging Options\\fR\" 4\n .IX Item \"Debugging Options\"\n-\\&\\fB\\-a  \\-ax  \\-d\\fR\\fIletters\\fR  \\fB\\-fdump-unnumbered \\-fdump-translation-unit-\\fR\\fIfile\\fR \n-\\&\\fB\\-fpretend-float \\-fprofile-arcs  \\-ftest-coverage \n+\\&\\fB\\-a  \\-ax  \\-d\\fR\\fIletters\\fR  \\fB\\-fdump-unnumbered \\-fdump-translation-unit=\\fR\\fIfile\\fR \n+\\&\\fB\\-fdump-class-layout=\\fR\\fIfile\\fR \\fB\\-fpretend-float \\-fprofile-arcs  \\-ftest-coverage \n \\&\\-g  \\-g\\fR\\fIlevel\\fR  \\fB\\-gcoff  \\-gdwarf  \\-gdwarf-1  \\-gdwarf-1+  \\-gdwarf-2 \n \\&\\-ggdb  \\-gstabs  \\-gstabs+  \\-gxcoff  \\-gxcoff+ \n \\&\\-p  \\-pg  \\-print-file-name=\\fR\\fIlibrary\\fR  \\fB\\-print-libgcc-file-name \n@@ -290,7 +290,8 @@ in the following sections.\n \\&\\-fsingle-precision-constant  \\-fssa \n \\&\\-fstrength-reduce  \\-fstrict-aliasing  \\-fthread-jumps  \\-ftrapv \n \\&\\-funroll-all-loops  \\-funroll-loops  \n-\\&\\-O  \\-O0  \\-O1  \\-O2  \\-O3  \\-Os\\fR\n+\\&\\-\\-param\\fR \\fIname\\fR\\fB=\\fR\\fIvalue\\fR\n+\\&\\fB\\-O  \\-O0  \\-O1  \\-O2  \\-O3  \\-Os\\fR\n .Ip \"\\fIPreprocessor Options\\fR\" 4\n .IX Item \"Preprocessor Options\"\n \\&\\fB\\-$  \\-A\\fR\\fIquestion\\fR\\fB=\\fR\\fIanswer\\fR  \\fB\\-A-\\fR\\fIquestion\\fR[\\fB=\\fR\\fIanswer\\fR] \n@@ -482,12 +483,11 @@ in the following sections.\n \\&\\fB\\-mintel-syntax \\-mieee-fp  \\-mno-fancy-math-387 \n \\&\\-mno-fp-ret-in-387  \\-msoft-float  \\-msvr3\\-shlib \n \\&\\-mno-wide-multiply  \\-mrtd  \\-malign-double \n-\\&\\-mreg-alloc=\\fR\\fIlist\\fR  \\fB\\-mregparm=\\fR\\fInum\\fR \n-\\&\\fB\\-malign-jumps=\\fR\\fInum\\fR  \\fB\\-malign-loops=\\fR\\fInum\\fR \n+\\&\\-malign-jumps=\\fR\\fInum\\fR  \\fB\\-malign-loops=\\fR\\fInum\\fR \n \\&\\fB\\-malign-functions=\\fR\\fInum\\fR \\fB\\-mpreferred-stack-boundary=\\fR\\fInum\\fR \n \\&\\fB\\-mthreads \\-mno-align-stringops \\-minline-all-stringops \n \\&\\-mpush-args \\-maccumulate-outgoing-args \\-m128bit-long-double \n-\\&\\-m96bit-long-double\\fR\n+\\&\\-m96bit-long-double \\-mregparm=\\fR\\fInum\\fR\n .Sp\n \\&\\fI\\s-1HPPA\\s0 Options\\fR\n .Sp\n@@ -1246,19 +1246,6 @@ errors if these functions are not inlined everywhere they are called.\n .IX Item \"-fms-extensions\"\n Disable pedantic warnings about constructs used in \\s-1MFC\\s0, such as implicit\n int and getting a pointer to member function via non-standard syntax.\n-.Ip \"\\fB\\-fname-mangling-version-\\fR\\fIn\\fR\" 4\n-.IX Item \"-fname-mangling-version-n\"\n-Control the way in which names are mangled.  Version 0 is compatible\n-with versions of g++ before 2.8.  Version 1 is the default.  Version 1\n-will allow correct mangling of function templates.  For example, \n-version 0 mangling does not mangle foo<int, double> and foo<int, char>\n-given this declaration:\n-.Sp\n-.Vb 1\n-\\&        template <class T, class U> void foo(T t);\n-.Ve\n-Like all options that change the \\s-1ABI\\s0, all \\*(C+ code, \\fIincluding\n-libgcc\\fR must be built with the same setting of this option.\n .Ip \"\\fB\\-fno-operator-names\\fR\" 4\n .IX Item \"-fno-operator-names\"\n Do not treat the operator name keywords \\f(CW\\*(C`and\\*(C'\\fR, \\f(CW\\*(C`bitand\\*(C'\\fR,\n@@ -1287,21 +1274,6 @@ functions for use by the \\*(C+ runtime type identification features\n of the language, you can save some space by using this flag.  Note that\n exception handling uses the same information, but it will generate it as\n needed.\n-.Ip \"\\fB\\-fsquangle\\fR\" 4\n-.IX Item \"-fsquangle\"\n-.PD 0\n-.Ip \"\\fB\\-fno-squangle\\fR\" 4\n-.IX Item \"-fno-squangle\"\n-.PD\n-\\&\\fB\\-fsquangle\\fR will enable a compressed form of name mangling for\n-identifiers. In particular, it helps to shorten very long names by recognizing\n-types and class names which occur more than once, replacing them with special\n-short \\s-1ID\\s0 codes.  This option also requires any \\*(C+ libraries being used to\n-be compiled with this option as well.  The compiler has this disabled (the\n-equivalent of \\fB\\-fno-squangle\\fR) by default.\n-.Sp\n-Like all options that change the \\s-1ABI\\s0, all \\*(C+ code, \\fIincluding\n-libgcc.a\\fR must be built with the same setting of this option.\n .Ip \"\\fB\\-ftemplate-depth-\\fR\\fIn\\fR\" 4\n .IX Item \"-ftemplate-depth-n\"\n Set the maximum instantiation depth for template classes to \\fIn\\fR.\n@@ -1402,13 +1374,27 @@ new-style casts (\\fBstatic_cast\\fR, \\fBreinterpret_cast\\fR, and\n \\&\\fBconst_cast\\fR) are less vulnerable to unintended effects.\n .Ip \"\\fB\\-Woverloaded-virtual (\\*(C+ only)\\fR\" 4\n .IX Item \"-Woverloaded-virtual ( only)\"\n-Warn when a derived class function declaration may be an error in\n-defining a virtual function.  In a derived class, the\n-definitions of virtual functions must match the type signature of a\n-virtual function declared in the base class.  With this option, the\n-compiler warns when you define a function with the same name as a\n-virtual function, but with a type signature that does not match any\n-declarations from the base class.\n+Warn when a function declaration hides virtual functions from a\n+base class.  For example, in:\n+.Sp\n+.Vb 3\n+\\&        struct A {\n+\\&          virtual void f();\n+\\&        };\n+.Ve\n+.Vb 3\n+\\&        struct B: public A {\n+\\&          void f(int);\n+\\&        };\n+.Ve\n+the \\f(CW\\*(C`A\\*(C'\\fR class version of \\f(CW\\*(C`f\\*(C'\\fR is hidden in \\f(CW\\*(C`B\\*(C'\\fR, and code\n+like this:\n+.Sp\n+.Vb 2\n+\\&        B* b;\n+\\&        b->f();\n+.Ve\n+will fail to compile.\n .Ip \"\\fB\\-Wno-pmf-conversions (\\*(C+ only)\\fR\" 4\n .IX Item \"-Wno-pmf-conversions ( only)\"\n Disable the diagnostic for converting a bound pointer to member function\n@@ -1941,9 +1927,31 @@ Warn about certain constructs that behave differently in traditional and\n \\&\\s-1ISO\\s0 C.\n .RS 4\n .Ip \"\\(bu\" 4\n-Macro arguments occurring within string constants in the macro body.\n-These would substitute the argument in traditional C, but are part of\n-the constant in \\s-1ISO\\s0 C.\n+Macro parameters that appear within string literals in the macro body.\n+In traditional C macro replacement takes place within string literals,\n+but does not in \\s-1ISO\\s0 C.\n+.Ip \"\\(bu\" 4\n+In traditional C, some preprocessor directives did not exist.\n+Traditional preprocessors would only consider a line to be a directive\n+if the \\fB#\\fR appeared in column 1 on the line.  Therefore\n+\\&\\fB\\-Wtraditional\\fR warns about directives that traditional C\n+understands but would ignore because the \\fB#\\fR does not appear as the\n+first character on the line.  It also suggests you hide directives like\n+\\&\\fB#pragma\\fR not understood by traditional C by indenting them.  Some\n+traditional implementations would not recognise \\fB#elif\\fR, so it\n+suggests avoiding it altogether.\n+.Ip \"\\(bu\" 4\n+A function-like macro that appears without arguments.\n+.Ip \"\\(bu\" 4\n+The unary plus operator.\n+.Ip \"\\(bu\" 4\n+The `U' integer constant suffix, or the `F' or `L' floating point\n+constant suffixes.  (Traditonal C does support the `L' suffix on integer\n+constants.)  Note, these suffixes appear in macros defined in the system\n+headers of most modern systems, e.g. the _MIN/_MAX macros in limits.h.\n+Use of these macros can lead to spurious warnings as they do not\n+necessarily reflect whether the code in question is any less portable to\n+traditional C given that suitable backup definitions are provided.\n .Ip \"\\(bu\" 4\n A function declared external in one block and then used after the end of\n the block.\n@@ -1960,10 +1968,6 @@ typically represent bit patterns, are not warned about.\n .Ip \"\\(bu\" 4\n Usage of \\s-1ISO\\s0 string concatenation is detected.\n .Ip \"\\(bu\" 4\n-A function macro appears without arguments.\n-.Ip \"\\(bu\" 4\n-The unary plus operator.\n-.Ip \"\\(bu\" 4\n Initialization of automatic aggregates.\n .Ip \"\\(bu\" 4\n Identifier conflicts with labels.  Traditional C lacks a separate\n@@ -1974,14 +1978,6 @@ omitted.  This is done under the assumption that the zero initializer in\n user code appears conditioned on e.g. \\f(CW\\*(C`_\\|_STDC_\\|_\\*(C'\\fR to avoid missing\n initializer warnings and relies on default initialization to zero in the\n traditional C case.\n-.Ip \"\\(bu\" 4\n-The `U' integer constant suffix, or the `F' or `L' floating point\n-constant suffixes.  (Traditonal C does support the `L' suffix on integer\n-constants.)  Note, these suffixes appear in macros defined in the system\n-headers of most modern systems, e.g. the _MIN/_MAX macros in limits.h.\n-Use of these macros can lead to spurious warnings as they do not\n-necessarily reflect whether the code in question is any less portable to\n-traditional C given that suitable backup definitions are provided.\n .RE\n .RS 4\n .RE\n@@ -2572,10 +2568,18 @@ When doing debugging dumps (see \\-d option above), suppress instruction\n numbers and line number note output.  This makes it more feasible to\n use diff on debugging dumps for compiler invocations with different\n options, in particular with and without \\-g.\n-.Ip \"\\fB\\-fdump-translation-unit-\\fR\\fIfile\\fR \\fB(C and \\*(C+ only)\\fR\" 4\n-.IX Item \"-fdump-translation-unit-file (C and  only)\"\n+.Ip \"\\fB\\-fdump-translation-unit=\\fR\\fIfile\\fR \\fB(C and \\*(C+ only)\\fR\" 4\n+.IX Item \"-fdump-translation-unit=file (C and  only)\"\n Dump a representation of the tree structure for the entire translation\n unit to \\fIfile\\fR.\n+.Ip \"\\fB\\-fdump-class_layout=\\fR\\fIfile\\fR \\fB(\\*(C+ only)\\fR\" 4\n+.IX Item \"-fdump-class_layout=file ( only)\"\n+.PD 0\n+.Ip \"\\fB\\-fdump-class_layout (\\*(C+ only)\\fR\" 4\n+.IX Item \"-fdump-class_layout ( only)\"\n+.PD\n+Dump a representation of each class's heirarchy to \\fIfile\\fR, or\n+\\&\\f(CW\\*(C`stderr\\*(C'\\fR if not specified.\n .Ip \"\\fB\\-fpretend-float\\fR\" 4\n .IX Item \"-fpretend-float\"\n When running a cross-compiler, pretend that the target machine uses the\n@@ -3130,6 +3134,25 @@ of registers left over after register allocation.  This optimization\n will most benefit processors with lots of registers.  It can, however,\n make debugging impossible, since variables will no longer stay in\n a ``home register''.\n+.Ip \"\\fB\\*(--param\\fR \\fIname\\fR\\fB=\\fR\\fIvalue\\fR\" 4\n+.IX Item \"param name=value\"\n+In some places, \\s-1GCC\\s0 uses various constants to control the amount of\n+optimization that is done.  For example, \\s-1GCC\\s0 will not inline functions\n+that contain more that a certain number of instructions.  You can\n+control some of these constants on the command-line using the\n+\\&\\fB\\*(--param\\fR option.  \n+.Sp\n+In each case, the \\fIvalue\\fR is a integer.  The allowable choices for\n+\\&\\fIname\\fR are given in the following table:\n+.RS 4\n+.Ip \"\\fBmax-inline-insns\\fR\" 4\n+.IX Item \"max-inline-insns\"\n+If an function contains more than this many instructions, it\n+will not be inlined.  This option is precisely equivalent to\n+\\&\\fB\\-finline-limit\\fR.\n+.RE\n+.RS 4\n+.RE\n .Sh \"Options Controlling the Preprocessor\"\n .IX Subsection \"Options Controlling the Preprocessor\"\n These options control the C preprocessor, which is run on each C source\n@@ -3220,8 +3243,10 @@ Instead of outputting the result of preprocessing, output a rule\n suitable for \\f(CW\\*(C`make\\*(C'\\fR describing the dependencies of the main source\n file.  The preprocessor outputs one \\f(CW\\*(C`make\\*(C'\\fR rule containing the\n object file name for that source file, a colon, and the names of all the\n-included files.  If there are many included files then the rule is split\n-into several lines using \\fB\\e\\fR\\-newline.\n+included files.  Unless overridden explicitly, the object file name\n+consists of the basename of the source file with any suffix replaced with\n+object file suffix. If there are many included files then the\n+rule is split into several lines using \\fB\\e\\fR\\-newline.\n .Sp\n \\&\\fB\\-M\\fR implies \\fB\\-E\\fR.\n .Ip \"\\fB\\-MM\\fR\" 4\n@@ -3528,11 +3553,16 @@ of these is when the application wishes to throw and catch exceptions\n across different shared libraries.  In that case, each of the libraries\n as well as the application itself should use the shared \\fIlibgcc\\fR.\n .Sp\n-At present the \\s-1GCC\\s0 driver makes no attempt to recognize the situations\n-in which the shared \\fIlibgcc\\fR should be used, and defaults to using\n-the static \\fIlibgcc\\fR always.  This will likely change in the future,\n-at which time \\fB\\-static-libgcc\\fR becomes useful as a means for \n-overriding \\s-1GCC\\s0's choice.\n+Therefore, whenever you specify the \\fB\\-shared\\fR option, the \\s-1GCC\\s0\n+driver automatically adds \\fB\\-shared-libgcc\\fR, unless you explicitly\n+specify \\fB\\-static-libgcc\\fR.  The G++ driver automatically adds\n+\\&\\fB\\-shared-libgcc\\fR when you build a main executable as well because\n+for \\*(C+ programs that is typically the right thing to do.\n+(Exception-handling will not work reliably otherwise.)\n+.Sp\n+However, when linking a main executable written in C, you must\n+explicitly say \\fB\\-shared-libgcc\\fR if you want to use the shared\n+\\&\\fIlibgcc\\fR.\n .Ip \"\\fB\\-symbolic\\fR\" 4\n .IX Item \"-symbolic\"\n Bind references to global symbols when building a shared object.  Warn\n@@ -3569,8 +3599,10 @@ libraries and for parts of the compiler:\n Add the directory \\fIdir\\fR to the head of the list of directories to be\n searched for header files.  This can be used to override a system header\n file, substituting your own version, since these directories are\n-searched before the system header file directories.  If you use more\n-than one \\fB\\-I\\fR option, the directories are scanned in left-to-right\n+searched before the system header file directories.  However, you should\n+not use this option to add directories that contain vendor-supplied\n+system header files (use \\fB\\-isystem\\fR for that). If you use more than\n+one \\fB\\-I\\fR option, the directories are scanned in left-to-right\n order; the standard system directories come after.\n .Ip \"\\fB\\-I-\\fR\" 4\n .IX Item \"-I-\"\n@@ -5963,13 +5995,6 @@ functions.\n In addition, seriously incorrect code will result if you call a\n function with too many arguments.  (Normally, extra arguments are\n harmlessly ignored.)\n-.Ip \"\\fB\\-mreg-alloc=\\fR\\fIregs\\fR\" 4\n-.IX Item \"-mreg-alloc=regs\"\n-Control the default allocation order of integer registers.  The\n-string \\fIregs\\fR is a series of letters specifying a register.  The\n-supported letters are: \\f(CW\\*(C`a\\*(C'\\fR allocate \\s-1EAX\\s0; \\f(CW\\*(C`b\\*(C'\\fR allocate \\s-1EBX\\s0;\n-\\&\\f(CW\\*(C`c\\*(C'\\fR allocate \\s-1ECX\\s0; \\f(CW\\*(C`d\\*(C'\\fR allocate \\s-1EDX\\s0; \\f(CW\\*(C`S\\*(C'\\fR allocate \\s-1ESI\\s0;\n-\\&\\f(CW\\*(C`D\\*(C'\\fR allocate \\s-1EDI\\s0; \\f(CW\\*(C`B\\*(C'\\fR allocate \\s-1EBP\\s0.\n .Ip \"\\fB\\-mregparm=\\fR\\fInum\\fR\" 4\n .IX Item \"-mregparm=num\"\n Control how many registers are used to pass integer arguments.  By"}, {"sha": "377f5ea6f5027678647d7d9f762578b0c4ba70fe", "filename": "gcc/gcc.texi", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7539316943c17368ce5ef876a9baba6b8c2e64f6/gcc%2Fgcc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7539316943c17368ce5ef876a9baba6b8c2e64f6/gcc%2Fgcc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.texi?ref=7539316943c17368ce5ef876a9baba6b8c2e64f6", "patch": "@@ -170,13 +170,13 @@ instead of in the original English.\n @sp 1\n @c The version number appears five times more in this file.\n \n-@center for gcc-2.97\n+@center for gcc-3.1\n @page\n @vskip 0pt plus 1filll\n Copyright @copyright{} 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1998,\n 1999, 2000, 2001  Free Software Foundation, Inc.\n @sp 2\n-For GCC Version 2.97@*\n+For GCC Version 3.1@*\n @sp 1\n Published by the Free Software Foundation @*\n 59 Temple Place - Suite 330@*\n@@ -213,19 +213,19 @@ instead of in the original English.\n @ifset USING\n This manual documents how to run, install and port the GNU\n compiler, as well as its new features and incompatibilities, and how to\n-report bugs.  It corresponds to GCC version 2.97.\n+report bugs.  It corresponds to GCC version 3.1.\n @end ifset\n @end ifset\n \n @ifclear INTERNALS\n This manual documents how to run and install the GNU compiler,\n as well as its new features and incompatibilities, and how to report\n-bugs.  It corresponds to GCC version 2.97.\n+bugs.  It corresponds to GCC version 3.1.\n @end ifclear\n @ifclear USING\n This manual documents how to port the GNU compiler,\n as well as its new features and incompatibilities, and how to report\n-bugs.  It corresponds to GCC version 2.97.\n+bugs.  It corresponds to GCC version 3.1.\n @end ifclear\n \n @menu"}, {"sha": "633d7546384b9a9e2958154e6b4365f5763d605e", "filename": "gcc/gcov.1", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7539316943c17368ce5ef876a9baba6b8c2e64f6/gcc%2Fgcov.1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7539316943c17368ce5ef876a9baba6b8c2e64f6/gcc%2Fgcov.1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.1?ref=7539316943c17368ce5ef876a9baba6b8c2e64f6", "patch": "@@ -1,5 +1,5 @@\n .\\\" Automatically generated by Pod::Man version 1.1\n-.\\\" Wed Jan  3 20:06:14 2001\n+.\\\" Mon Feb 19 19:31:56 2001\n .\\\"\n .\\\" Standard preamble:\n .\\\" ======================================================================\n@@ -138,7 +138,7 @@\n .\\\" ======================================================================\n .\\\"\n .IX Title \"GCOV 1\"\n-.TH GCOV 1 \"gcc-2.97\" \"2001-01-03\" \"GNU\"\n+.TH GCOV 1 \"gcc-3.1\" \"2001-02-19\" \"GNU\"\n .UC\n .SH \"NAME\"\n gcov \\- coverage testing tool"}, {"sha": "27c9b22f39159376ceefd0db86c9ba28d35d0a25", "filename": "gcc/version.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7539316943c17368ce5ef876a9baba6b8c2e64f6/gcc%2Fversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7539316943c17368ce5ef876a9baba6b8c2e64f6/gcc%2Fversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fversion.c?ref=7539316943c17368ce5ef876a9baba6b8c2e64f6", "patch": "@@ -1,4 +1,4 @@\n #include \"gansidecl.h\"\n #include \"version.h\"\n \n-const char *const version_string = \"2.97 20010219 (experimental)\";\n+const char *const version_string = \"3.1 20010219 (experimental)\";"}, {"sha": "4e86bfcfb429ebff397aa8b62d5226e02931e981", "filename": "libf2c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7539316943c17368ce5ef876a9baba6b8c2e64f6/libf2c%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7539316943c17368ce5ef876a9baba6b8c2e64f6/libf2c%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FChangeLog?ref=7539316943c17368ce5ef876a9baba6b8c2e64f6", "patch": "@@ -1,3 +1,8 @@\n+2001-02-19  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* libF77/Version.c, libI77/Version.c, libU77/Version.c: Update G77\n+\tversion number to 0.5.27.\n+\n 2001-02-08  Geoffrey Keating  <geoffk@redhat.com>\n \n \t* configure.in: Don't run AC_PROG_CC_WORKS, because"}, {"sha": "138f8c36793ef43584fb53a2f1ff74e17e6fd258", "filename": "libf2c/libF77/Version.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7539316943c17368ce5ef876a9baba6b8c2e64f6/libf2c%2FlibF77%2FVersion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7539316943c17368ce5ef876a9baba6b8c2e64f6/libf2c%2FlibF77%2FVersion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2FVersion.c?ref=7539316943c17368ce5ef876a9baba6b8c2e64f6", "patch": "@@ -3,7 +3,7 @@ static char junk[] = \"\\n@(#)LIBF77 VERSION 20000929\\n\";\n /*\n */\n \n-char __G77_LIBF77_VERSION__[] = \"0.5.26 20010219 (experimental)\";\n+char __G77_LIBF77_VERSION__[] = \"0.5.27 20010219 (experimental)\";\n \n /*\n 2.00\t11 June 1980.  File version.c added to library."}, {"sha": "bd11203ae34fa7064440ddf2a43dd4ce004298a4", "filename": "libf2c/libI77/Version.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7539316943c17368ce5ef876a9baba6b8c2e64f6/libf2c%2FlibI77%2FVersion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7539316943c17368ce5ef876a9baba6b8c2e64f6/libf2c%2FlibI77%2FVersion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2FVersion.c?ref=7539316943c17368ce5ef876a9baba6b8c2e64f6", "patch": "@@ -3,7 +3,7 @@ static char junk[] = \"\\n@(#) LIBI77 VERSION pjw,dmg-mods 20001205\\n\";\n /*\n */\n \n-char __G77_LIBI77_VERSION__[] = \"0.5.26 20010219 (experimental)\";\n+char __G77_LIBI77_VERSION__[] = \"0.5.27 20010219 (experimental)\";\n \n /*\n 2.01\t$ format added"}, {"sha": "421a727ef3a827e31a8ef3b86ad0602d1d49cba5", "filename": "libf2c/libU77/Version.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7539316943c17368ce5ef876a9baba6b8c2e64f6/libf2c%2FlibU77%2FVersion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7539316943c17368ce5ef876a9baba6b8c2e64f6/libf2c%2FlibU77%2FVersion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibU77%2FVersion.c?ref=7539316943c17368ce5ef876a9baba6b8c2e64f6", "patch": "@@ -1,6 +1,6 @@\n static char junk[] = \"\\n@(#) LIBU77 VERSION 19980709\\n\";\n \n-char __G77_LIBU77_VERSION__[] = \"0.5.26 20010219 (experimental)\";\n+char __G77_LIBU77_VERSION__[] = \"0.5.27 20010219 (experimental)\";\n \n #include <stdio.h>\n "}]}