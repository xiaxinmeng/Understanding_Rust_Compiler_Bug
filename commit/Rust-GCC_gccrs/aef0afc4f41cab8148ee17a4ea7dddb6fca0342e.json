{"sha": "aef0afc4f41cab8148ee17a4ea7dddb6fca0342e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWVmMGFmYzRmNDFjYWI4MTQ4ZWUxN2E0ZWE3ZGRkYjZmY2EwMzQyZQ==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2004-05-24T16:37:17Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2004-05-24T16:37:17Z"}, "message": "re PR tree-optimization/14197 (Wrong code for bcopy/memmove (string-asm-2.c))\n\n\tPR tree-optimization/14197\n\t* builtins.c: Include \"tree-gimple.h\"\n\t(readonly_data_expr): Use get_base_address.  Make sure to call\n\tdecl_readonly_section only on trees it can handle.\n\t* tree-gimple.c (get_base_address): Accept STRING_CST and\n\tCONSTRUCTOR expressions.\n\t* Makefile.in: Update dependencies.\n\nFrom-SVN: r82209", "tree": {"sha": "f551be5e22d25c37547349ed76c50f067903bb89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f551be5e22d25c37547349ed76c50f067903bb89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aef0afc4f41cab8148ee17a4ea7dddb6fca0342e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aef0afc4f41cab8148ee17a4ea7dddb6fca0342e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aef0afc4f41cab8148ee17a4ea7dddb6fca0342e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aef0afc4f41cab8148ee17a4ea7dddb6fca0342e/comments", "author": null, "committer": null, "parents": [{"sha": "a1db9d9c61bb4c74f5dac30c9d673c84b63c6384", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1db9d9c61bb4c74f5dac30c9d673c84b63c6384", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1db9d9c61bb4c74f5dac30c9d673c84b63c6384"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "ced1a4d5499c2dffa72abd36c4061c0f631ec618", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef0afc4f41cab8148ee17a4ea7dddb6fca0342e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef0afc4f41cab8148ee17a4ea7dddb6fca0342e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aef0afc4f41cab8148ee17a4ea7dddb6fca0342e", "patch": "@@ -1,3 +1,13 @@\n+2004-05-24  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\tPR tree-optimization/14197\n+\t* builtins.c: Include \"tree-gimple.h\"\n+\t(readonly_data_expr): Use get_base_address.  Make sure to call \n+\tdecl_readonly_section only on trees it can handle.\n+\t* tree-gimple.c (get_base_address): Accept STRING_CST and\n+\tCONSTRUCTOR expressions.\n+\t* Makefile.in: Update dependencies.\n+\n 2004-05-23  Paolo Bonzini  <bonzini@gnu.org>\n \n \tMove libcpp to the toplevel."}, {"sha": "641ce2f6068a35408076e5d20ab0bdb2c8183fdf", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef0afc4f41cab8148ee17a4ea7dddb6fca0342e/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef0afc4f41cab8148ee17a4ea7dddb6fca0342e/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=aef0afc4f41cab8148ee17a4ea7dddb6fca0342e", "patch": "@@ -1766,8 +1766,8 @@ dojump.o : dojump.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_\n    flags.h function.h $(EXPR_H) $(OPTABS_H) $(INSN_ATTR_H) insn-config.h \\\n    langhooks.h $(GGC_H) gt-dojump.h\n builtins.o : builtins.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H)\\\n-   flags.h $(TARGET_H) function.h $(REGS_H) $(EXPR_H) $(OPTABS_H) insn-config.h \\\n-   $(RECOG_H) output.h typeclass.h hard-reg-set.h toplev.h hard-reg-set.h \\\n+   $(TREE_GIMPLE_H) flags.h $(TARGET_H) function.h $(REGS_H) $(EXPR_H) $(OPTABS_H) \\\n+   insn-config.h $(RECOG_H) output.h typeclass.h hard-reg-set.h toplev.h hard-reg-set.h \\\n    except.h $(TM_P_H) $(PREDICT_H) libfuncs.h real.h langhooks.h\n calls.o : calls.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) $(TREE_H) flags.h \\\n    $(EXPR_H) $(OPTABS_H) langhooks.h $(TARGET_H) \\"}, {"sha": "d56136a88047fbb4d1368b915cc6af315eff764e", "filename": "gcc/builtins.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef0afc4f41cab8148ee17a4ea7dddb6fca0342e/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef0afc4f41cab8148ee17a4ea7dddb6fca0342e/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=aef0afc4f41cab8148ee17a4ea7dddb6fca0342e", "patch": "@@ -27,6 +27,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"real.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n+#include \"tree-gimple.h\"\n #include \"flags.h\"\n #include \"regs.h\"\n #include \"hard-reg-set.h\"\n@@ -7925,8 +7926,20 @@ readonly_data_expr (tree exp)\n {\n   STRIP_NOPS (exp);\n \n-  if (TREE_CODE (exp) == ADDR_EXPR)\n-    return decl_readonly_section (TREE_OPERAND (exp, 0), 0);\n+  if (TREE_CODE (exp) != ADDR_EXPR)\n+    return false;\n+\n+  exp = get_base_address (TREE_OPERAND (exp, 0));\n+  if (!exp)\n+    return false;\n+\n+  /* Make sure we call decl_readonly_section only for trees it\n+     can handle (since it returns true for everything it doesn't\n+     understand).  */\n+  if (TREE_CODE (exp) == STRING_CST \n+      || TREE_CODE (exp) == CONSTRUCTOR\n+      || (TREE_CODE (exp) == VAR_DECL && TREE_STATIC (exp)))\n+    return decl_readonly_section (exp, 0);\n   else\n     return false;\n }"}, {"sha": "18bc2f8afa36aa57eb3a8be8688df9d8e3343554", "filename": "gcc/tree-gimple.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aef0afc4f41cab8148ee17a4ea7dddb6fca0342e/gcc%2Ftree-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aef0afc4f41cab8148ee17a4ea7dddb6fca0342e/gcc%2Ftree-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-gimple.c?ref=aef0afc4f41cab8148ee17a4ea7dddb6fca0342e", "patch": "@@ -574,6 +574,8 @@ get_base_address (tree t)\n   do\n     {\n       if (SSA_VAR_P (t)\n+\t  || TREE_CODE (t) == STRING_CST\n+\t  || TREE_CODE (t) == CONSTRUCTOR\n \t  || TREE_CODE (t) == INDIRECT_REF)\n \treturn t;\n "}]}