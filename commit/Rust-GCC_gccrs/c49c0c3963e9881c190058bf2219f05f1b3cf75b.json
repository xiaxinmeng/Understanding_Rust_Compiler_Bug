{"sha": "c49c0c3963e9881c190058bf2219f05f1b3cf75b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ5YzBjMzk2M2U5ODgxYzE5MDA1OGJmMjIxOWYwNWYxYjNjZjc1Yg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2006-01-09T16:44:43Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2006-01-09T16:44:43Z"}, "message": "sse.md (*vec_extractv2di_1_sse2): New.\n\n* config/i386/sse.md (*vec_extractv2di_1_sse2): New.\n(*vec_extractv2di_1_sse): New.\n\nFrom-SVN: r109501", "tree": {"sha": "92c8eeda37855cfe42c7584f42b3f622e30ffe08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92c8eeda37855cfe42c7584f42b3f622e30ffe08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c49c0c3963e9881c190058bf2219f05f1b3cf75b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c49c0c3963e9881c190058bf2219f05f1b3cf75b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c49c0c3963e9881c190058bf2219f05f1b3cf75b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c49c0c3963e9881c190058bf2219f05f1b3cf75b/comments", "author": null, "committer": null, "parents": [{"sha": "f7cd797c5b0c050153fc338e62d23ee51268b915", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7cd797c5b0c050153fc338e62d23ee51268b915", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7cd797c5b0c050153fc338e62d23ee51268b915"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "3d9f48e5850c4c09e62937710b6f500d840f3311", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c49c0c3963e9881c190058bf2219f05f1b3cf75b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c49c0c3963e9881c190058bf2219f05f1b3cf75b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c49c0c3963e9881c190058bf2219f05f1b3cf75b", "patch": "@@ -1,3 +1,8 @@\n+2006-01-09  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* config/i386/sse.md (*vec_extractv2di_1_sse2): New.\n+\t(*vec_extractv2di_1_sse): New.\n+\n 2006-01-09  Ben Elliston  <bje@au.ibm.com>\n \n \t* config/rs6000/rs6000.h (GO_IF_LEGITIMATE_ADDRESS): Typo fix."}, {"sha": "bb5ed69e50b15d622ca7a99be0c9a9ad96455697", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c49c0c3963e9881c190058bf2219f05f1b3cf75b/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c49c0c3963e9881c190058bf2219f05f1b3cf75b/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=c49c0c3963e9881c190058bf2219f05f1b3cf75b", "patch": "@@ -3464,6 +3464,34 @@\n   operands[1] = gen_rtx_REG (DImode, REGNO (operands[1]));\n })\n \n+(define_insn \"*vec_extractv2di_1_sse2\"\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=x,m,x\")\n+\t(vec_select:DI\n+\t  (match_operand:V2DI 1 \"nonimmediate_operand\" \"0,x,o\")\n+\t  (parallel [(const_int 1)])))]\n+  \"TARGET_SSE2 && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n+  \"@\n+   psrldq\\t{$4, %0|%0, 4}\n+   movhps\\t{%1, %0|%0, %1}\n+   movq\\t{%H1, %0|%0, %H1}\"\n+  [(set_attr \"type\" \"sseishft,ssemov,ssemov\")\n+   (set_attr \"mode\" \"TI,V4SF,TI\")])\n+\n+;; Not sure this is ever used, but it doesn't hurt to have it. -aoliva\n+(define_insn \"*vec_extractv2di_1_sse\"\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=x,m,x\")\n+\t(vec_select:DI\n+\t  (match_operand:V2DI 1 \"nonimmediate_operand\" \"x,x,o\")\n+\t  (parallel [(const_int 1)])))]\n+  \"!TARGET_SSE2 && TARGET_SSE\n+   && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n+  \"@\n+   movhlps\\t{%1, %0|%0, %1}\n+   movhps\\t{%1, %0|%0, %1}\n+   movlps\\t{%H1, %0|%0, %H1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"mode\" \"V2SF,V4SF,V2SF\")])\n+\n (define_insn \"*vec_dupv4si\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=Y,x\")\n \t(vec_duplicate:V4SI"}]}