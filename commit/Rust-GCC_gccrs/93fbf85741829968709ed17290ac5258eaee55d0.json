{"sha": "93fbf85741829968709ed17290ac5258eaee55d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNmYmY4NTc0MTgyOTk2ODcwOWVkMTcyOTBhYzUyNThlYWVlNTVkMA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2009-09-09T19:50:42Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2009-09-09T19:50:42Z"}, "message": "rs6000.md (bswapdi2_64bit): Fix unnecessarily stringent constraints.\n\n2009-09-08  Segher Boessenkool  <segher@kernel.crashing.org>\n\n\t* config/rs6000/rs6000.md (bswapdi2_64bit): Fix\n\tunnecessarily stringent constraints.  Fix address\n\tcalculation in the splitters.\n\nFrom-SVN: r151575", "tree": {"sha": "23079ebfe511d345572cfeee65407df2eaae5c15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23079ebfe511d345572cfeee65407df2eaae5c15"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93fbf85741829968709ed17290ac5258eaee55d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93fbf85741829968709ed17290ac5258eaee55d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93fbf85741829968709ed17290ac5258eaee55d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93fbf85741829968709ed17290ac5258eaee55d0/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c13e029be40bf6d2203c11dfdd79e3fd6625a102", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c13e029be40bf6d2203c11dfdd79e3fd6625a102", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c13e029be40bf6d2203c11dfdd79e3fd6625a102"}], "stats": {"total": 50, "additions": 30, "deletions": 20}, "files": [{"sha": "43f4870be414b98dae3d4f681b1e73947a442542", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93fbf85741829968709ed17290ac5258eaee55d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93fbf85741829968709ed17290ac5258eaee55d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=93fbf85741829968709ed17290ac5258eaee55d0", "patch": "@@ -1,3 +1,9 @@\n+2009-09-09  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (bswapdi2_64bit): Fix\n+\tunnecessarily stringent constraints.  Fix address\n+\tcalculation in the splitters.\n+\n 2009-09-09  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR rtl-optimization/39779"}, {"sha": "d7f30f84e0d85e0e4b8eadbfc41046fd0b3d5d14", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 24, "deletions": 20, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93fbf85741829968709ed17290ac5258eaee55d0/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93fbf85741829968709ed17290ac5258eaee55d0/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=93fbf85741829968709ed17290ac5258eaee55d0", "patch": "@@ -2421,8 +2421,8 @@\n   [(set (match_operand:DI 0 \"reg_or_mem_operand\" \"=&r,Z,??&r\")\n \t(bswap:DI (match_operand:DI 1 \"reg_or_mem_operand\" \"Z,r,r\")))\n    (clobber (match_scratch:DI 2 \"=&b,&b,&r\"))\n-   (clobber (match_scratch:DI 3 \"=&b,&r,&r\"))\n-   (clobber (match_scratch:DI 4 \"=&b,X,&r\"))]\n+   (clobber (match_scratch:DI 3 \"=&r,&r,&r\"))\n+   (clobber (match_scratch:DI 4 \"=&r,X,&r\"))]\n   \"TARGET_POWERPC64 && !TARGET_LDBRX\n    && (REG_P (operands[0]) || REG_P (operands[1]))\"\n   \"#\"\n@@ -2454,12 +2454,13 @@\n   if (GET_CODE (addr1) == PLUS)\n     {\n       emit_insn (gen_adddi3 (op2, XEXP (addr1, 0), GEN_INT (4)));\n-      addr1 = XEXP (addr1, 1);\n+      addr2 = gen_rtx_PLUS (DImode, op2, XEXP (addr1, 1));\n     }\n   else\n-    emit_move_insn (op2, GEN_INT (4));\n-\n-  addr2 = gen_rtx_PLUS (DImode, op2, addr1);\n+    {\n+      emit_move_insn (op2, GEN_INT (4));\n+      addr2 = gen_rtx_PLUS (DImode, op2, addr1);\n+    }\n \n   if (BYTES_BIG_ENDIAN)\n     {\n@@ -2484,7 +2485,7 @@\n    (clobber (match_operand:DI 2 \"gpc_reg_operand\" \"\"))\n    (clobber (match_operand:DI 3 \"gpc_reg_operand\" \"\"))\n    (clobber (match_operand:DI 4 \"\" \"\"))]\n-  \"TARGET_POWERPC64 && reload_completed && !TARGET_LDBRX\"\n+  \"TARGET_POWERPC64 && !TARGET_LDBRX && reload_completed\"\n   [(const_int 0)]\n   \"\n {\n@@ -2503,12 +2504,13 @@\n   if (GET_CODE (addr1) == PLUS)\n     {\n       emit_insn (gen_adddi3 (op2, XEXP (addr1, 0), GEN_INT (4)));\n-      addr1 = XEXP (addr1, 1);\n+      addr2 = gen_rtx_PLUS (DImode, op2, XEXP (addr1, 1));\n     }\n   else\n-    emit_move_insn (op2, GEN_INT (4));\n-\n-  addr2 = gen_rtx_PLUS (DImode, op2, addr1);\n+    {\n+      emit_move_insn (op2, GEN_INT (4));\n+      addr2 = gen_rtx_PLUS (DImode, op2, addr1);\n+    }\n \n   emit_insn (gen_lshrdi3 (op3, src, GEN_INT (32)));\n   if (BYTES_BIG_ENDIAN)\n@@ -2582,13 +2584,14 @@\n   addr1 = XEXP (src, 0);\n   if (GET_CODE (addr1) == PLUS)\n     {\n-      emit_insn (gen_adddi3 (op2, XEXP (addr1, 0), GEN_INT (4)));\n-      addr1 = XEXP (addr1, 1);\n+      emit_insn (gen_addsi3 (op2, XEXP (addr1, 0), GEN_INT (4)));\n+      addr2 = gen_rtx_PLUS (SImode, op2, XEXP (addr1, 1));\n     }\n   else\n-    emit_move_insn (op2, GEN_INT (4));\n-\n-  addr2 = gen_rtx_PLUS (DImode, op2, addr1);\n+    {\n+      emit_move_insn (op2, GEN_INT (4));\n+      addr2 = gen_rtx_PLUS (SImode, op2, addr1);\n+    }\n \n   if (BYTES_BIG_ENDIAN)\n     {\n@@ -2627,12 +2630,13 @@\n   if (GET_CODE (addr1) == PLUS)\n     {\n       emit_insn (gen_addsi3 (op2, XEXP (addr1, 0), GEN_INT (4)));\n-      addr1 = XEXP (addr1, 1);\n+      addr2 = gen_rtx_PLUS (SImode, op2, XEXP (addr1, 1));\n     }\n   else\n-    emit_move_insn (op2, GEN_INT (4));\n-\n-  addr2 = gen_rtx_PLUS (SImode, op2, addr1);\n+    {\n+      emit_move_insn (op2, GEN_INT (4));\n+      addr2 = gen_rtx_PLUS (SImode, op2, addr1);\n+    }\n \n   if (BYTES_BIG_ENDIAN)\n     {"}]}