{"sha": "9297e013293e4d332fc7c40859ea4dd9616e0d88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI5N2UwMTMyOTNlNGQzMzJmYzdjNDA4NTllYTRkZDk2MTZlMGQ4OA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-09-02T07:06:54Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-09-02T07:06:54Z"}, "message": "Consider also negative edges in cycle detection.\n\n2019-09-02  Martin Liska  <mliska@suse.cz>\n\n\tPR gcov-profile/91601\n\t* gcov.c (path_contains_zero_cycle_arc): Rename to ...\n\t(path_contains_zero_or_negative_cycle_arc): ... this and handle\n\talso negative edges.\n\t(circuit): Handle also negative edges as they can happen\n\tin some situations.\n\nFrom-SVN: r275291", "tree": {"sha": "8b7389e6558c35f4068d435a5cce1f78cf8ad231", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b7389e6558c35f4068d435a5cce1f78cf8ad231"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9297e013293e4d332fc7c40859ea4dd9616e0d88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9297e013293e4d332fc7c40859ea4dd9616e0d88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9297e013293e4d332fc7c40859ea4dd9616e0d88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9297e013293e4d332fc7c40859ea4dd9616e0d88/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ea323e9e926409ea4ea6317d81255b43020e4f1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea323e9e926409ea4ea6317d81255b43020e4f1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea323e9e926409ea4ea6317d81255b43020e4f1c"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "6a4f02dcf3e1e20a299f4eb64af740dd022d3b4b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9297e013293e4d332fc7c40859ea4dd9616e0d88/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9297e013293e4d332fc7c40859ea4dd9616e0d88/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9297e013293e4d332fc7c40859ea4dd9616e0d88", "patch": "@@ -1,3 +1,12 @@\n+2019-09-02  Martin Liska  <mliska@suse.cz>\n+\n+\tPR gcov-profile/91601\n+\t* gcov.c (path_contains_zero_cycle_arc): Rename to ...\n+\t(path_contains_zero_or_negative_cycle_arc): ... this and handle\n+\talso negative edges.\n+\t(circuit): Handle also negative edges as they can happen\n+\tin some situations.\n+\n 2019-09-01  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR target/91472"}, {"sha": "f4e65ee46da842db1029d26660731a40dc4d5376", "filename": "gcc/gcov.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9297e013293e4d332fc7c40859ea4dd9616e0d88/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9297e013293e4d332fc7c40859ea4dd9616e0d88/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=9297e013293e4d332fc7c40859ea4dd9616e0d88", "patch": "@@ -730,10 +730,10 @@ unblock (const block_info *u, block_vector_t &blocked,\n /* Return true when PATH contains a zero cycle arc count.  */\n \n static bool\n-path_contains_zero_cycle_arc (arc_vector_t &path)\n+path_contains_zero_or_negative_cycle_arc (arc_vector_t &path)\n {\n   for (unsigned i = 0; i < path.size (); i++)\n-    if (path[i]->cs_count == 0)\n+    if (path[i]->cs_count <= 0)\n       return true;\n   return false;\n }\n@@ -759,7 +759,7 @@ circuit (block_info *v, arc_vector_t &path, block_info *start,\n     {\n       block_info *w = arc->dst;\n       if (w < start\n-\t  || arc->cs_count == 0\n+\t  || arc->cs_count <= 0\n \t  || !linfo.has_block (w))\n \tcontinue;\n \n@@ -770,7 +770,7 @@ circuit (block_info *v, arc_vector_t &path, block_info *start,\n \t  handle_cycle (path, count);\n \t  loop_found = true;\n \t}\n-      else if (!path_contains_zero_cycle_arc (path)\n+      else if (!path_contains_zero_or_negative_cycle_arc (path)\n \t       &&  find (blocked.begin (), blocked.end (), w) == blocked.end ())\n \tloop_found |= circuit (w, path, start, blocked, block_lists, linfo,\n \t\t\t       count);\n@@ -785,7 +785,7 @@ circuit (block_info *v, arc_vector_t &path, block_info *start,\n       {\n \tblock_info *w = arc->dst;\n \tif (w < start\n-\t    || arc->cs_count == 0\n+\t    || arc->cs_count <= 0\n \t    || !linfo.has_block (w))\n \t  continue;\n "}]}