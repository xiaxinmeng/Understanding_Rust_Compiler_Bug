{"sha": "16bbc875910db480ef1a9207423b78386050fe28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZiYmM4NzU5MTBkYjQ4MGVmMWE5MjA3NDIzYjc4Mzg2MDUwZmUyOA==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2011-10-10T17:25:48Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2011-10-10T17:25:48Z"}, "message": "avr.c (avr_option_override): Set flag_omit_frame_pointer to 0 if frame pointer is needed for unwinding.\n\n\t* config/avr/avr.c (avr_option_override): Set\n\tflag_omit_frame_pointer to 0 if frame pointer is needed for\n\tunwinding.\n\nFrom-SVN: r179765", "tree": {"sha": "401b140b40e5f52e1f44f278bc2e1203f3eb323b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/401b140b40e5f52e1f44f278bc2e1203f3eb323b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16bbc875910db480ef1a9207423b78386050fe28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16bbc875910db480ef1a9207423b78386050fe28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16bbc875910db480ef1a9207423b78386050fe28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16bbc875910db480ef1a9207423b78386050fe28/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19f4664b8da1e50fa56e18a8c5e32ab16bbc7489", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19f4664b8da1e50fa56e18a8c5e32ab16bbc7489", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19f4664b8da1e50fa56e18a8c5e32ab16bbc7489"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "b4bf8978549ecdc58a89b5944c79819a18b8ed96", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16bbc875910db480ef1a9207423b78386050fe28/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16bbc875910db480ef1a9207423b78386050fe28/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=16bbc875910db480ef1a9207423b78386050fe28", "patch": "@@ -1,3 +1,9 @@\n+2011-10-10  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\t* config/avr/avr.c (avr_option_override): Set\n+\tflag_omit_frame_pointer to 0 if frame pointer is needed for\n+\tunwinding.\n+\n 2011-10-10  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR bootstrap/50665"}, {"sha": "d8cc84a6099d71cbcf56f9904d6d2fe25c98be15", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16bbc875910db480ef1a9207423b78386050fe28/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16bbc875910db480ef1a9207423b78386050fe28/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=16bbc875910db480ef1a9207423b78386050fe28", "patch": "@@ -351,6 +351,21 @@ avr_option_override (void)\n {\n   flag_delete_null_pointer_checks = 0;\n \n+  /* Unwind tables currently require a frame pointer for correctness,\n+     see toplev.c:process_options().  */\n+\n+  if ((flag_unwind_tables\n+       || flag_non_call_exceptions\n+       || flag_asynchronous_unwind_tables)\n+      && !ACCUMULATE_OUTGOING_ARGS)\n+    {\n+      flag_omit_frame_pointer = 0;\n+    }\n+  else\n+    {\n+      flag_omit_frame_pointer = (optimize >= 1);\n+    }\n+\n   avr_current_device = &avr_mcu_types[avr_mcu_index];\n   avr_current_arch = &avr_arch_types[avr_current_device->arch];\n   avr_extra_arch_macro = avr_current_device->macro;"}]}