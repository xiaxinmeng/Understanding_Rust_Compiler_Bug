{"sha": "ad1de65225fc1ac05fe6b05b6198dc50a51e4935", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQxZGU2NTIyNWZjMWFjMDVmZTZiMDViNjE5OGRjNTBhNTFlNDkzNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-02-28T22:39:11Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-02-28T22:39:11Z"}, "message": "re PR tree-optimization/79737 (wrong code at -O2 and -O3 on x86_64-linux-gnu (in both 32-bit and 64-bit modes))\n\n\tPR tree-optimization/79737\n\t* gimple-ssa-store-merging.c (encode_tree_to_bitpos): If bitlen is\n\ta multiple of BITS_PER_UNIT and !BYTES_BIG_ENDIAN, clear\n\ttmpbuf[byte_size - 1].  Call natice_encode_expr with byte_size - 1\n\tinstead of byte_size.  Formatting fix.\n\t(shift_bytes_in_array_right): Formatting fix.\n\n\t* gcc.c-torture/execute/pr79737-1.c: New test.\n\t* gcc.c-torture/execute/pr79737-2.c: New test.\n\nFrom-SVN: r245795", "tree": {"sha": "ff4ffb92de5c47b0d5e963ed565075997888b190", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff4ffb92de5c47b0d5e963ed565075997888b190"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad1de65225fc1ac05fe6b05b6198dc50a51e4935", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad1de65225fc1ac05fe6b05b6198dc50a51e4935", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad1de65225fc1ac05fe6b05b6198dc50a51e4935", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad1de65225fc1ac05fe6b05b6198dc50a51e4935/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7efb3707f267d5d47c4e0c929fa269adf32b11bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7efb3707f267d5d47c4e0c929fa269adf32b11bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7efb3707f267d5d47c4e0c929fa269adf32b11bc"}], "stats": {"total": 140, "additions": 118, "deletions": 22}, "files": [{"sha": "dc29c09fd9069c48cc7674b5873fd1d529046451", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1de65225fc1ac05fe6b05b6198dc50a51e4935/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1de65225fc1ac05fe6b05b6198dc50a51e4935/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ad1de65225fc1ac05fe6b05b6198dc50a51e4935", "patch": "@@ -1,3 +1,12 @@\n+2017-02-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/79737\n+\t* gimple-ssa-store-merging.c (encode_tree_to_bitpos): If bitlen is\n+\ta multiple of BITS_PER_UNIT and !BYTES_BIG_ENDIAN, clear\n+\ttmpbuf[byte_size - 1].  Call natice_encode_expr with byte_size - 1\n+\tinstead of byte_size.  Formatting fix.\n+\t(shift_bytes_in_array_right): Formatting fix.\n+\n 2017-02-28  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR target/79749"}, {"sha": "17ac94ab2a7b696add647b33f11a47378612afd1", "filename": "gcc/gimple-ssa-store-merging.c", "status": "modified", "additions": 25, "deletions": 22, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1de65225fc1ac05fe6b05b6198dc50a51e4935/gcc%2Fgimple-ssa-store-merging.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1de65225fc1ac05fe6b05b6198dc50a51e4935/gcc%2Fgimple-ssa-store-merging.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-store-merging.c?ref=ad1de65225fc1ac05fe6b05b6198dc50a51e4935", "patch": "@@ -253,9 +253,9 @@ shift_bytes_in_array_right (unsigned char *ptr, unsigned int sz,\n       unsigned prev_carry_over = carry_over;\n       carry_over = ptr[i] & carry_mask;\n \n-     carry_over <<= (unsigned char) BITS_PER_UNIT - amnt;\n-     ptr[i] >>= amnt;\n-     ptr[i] |= prev_carry_over;\n+      carry_over <<= (unsigned char) BITS_PER_UNIT - amnt;\n+      ptr[i] >>= amnt;\n+      ptr[i] |= prev_carry_over;\n     }\n }\n \n@@ -352,8 +352,9 @@ encode_tree_to_bitpos (tree expr, unsigned char *ptr, int bitlen, int bitpos,\n {\n   unsigned int first_byte = bitpos / BITS_PER_UNIT;\n   tree tmp_int = expr;\n-  bool sub_byte_op_p = (bitlen % BITS_PER_UNIT) || (bitpos % BITS_PER_UNIT)\n-\t\t\t|| mode_for_size (bitlen, MODE_INT, 0) == BLKmode;\n+  bool sub_byte_op_p = ((bitlen % BITS_PER_UNIT)\n+\t\t\t|| (bitpos % BITS_PER_UNIT)\n+\t\t\t|| mode_for_size (bitlen, MODE_INT, 0) == BLKmode);\n \n   if (!sub_byte_op_p)\n     return (native_encode_expr (tmp_int, ptr + first_byte, total_bytes, 0)\n@@ -407,7 +408,7 @@ encode_tree_to_bitpos (tree expr, unsigned char *ptr, int bitlen, int bitpos,\n   memset (tmpbuf, '\\0', byte_size);\n   /* The store detection code should only have allowed constants that are\n      accepted by native_encode_expr.  */\n-  if (native_encode_expr (expr, tmpbuf, byte_size, 0) == 0)\n+  if (native_encode_expr (expr, tmpbuf, byte_size - 1, 0) == 0)\n     gcc_unreachable ();\n \n   /* The native_encode_expr machinery uses TYPE_MODE to determine how many\n@@ -418,25 +419,27 @@ encode_tree_to_bitpos (tree expr, unsigned char *ptr, int bitlen, int bitpos,\n      contain a sign bit due to sign-extension).  */\n   unsigned int padding\n     = byte_size - ROUND_UP (bitlen, BITS_PER_UNIT) / BITS_PER_UNIT - 1;\n-  if (padding != 0\n-      || bitlen % BITS_PER_UNIT != 0)\n+  /* On big-endian the padding is at the 'front' so just skip the initial\n+     bytes.  */\n+  if (BYTES_BIG_ENDIAN)\n+    tmpbuf += padding;\n+\n+  byte_size -= padding;\n+\n+  if (bitlen % BITS_PER_UNIT != 0)\n     {\n-      /* On big-endian the padding is at the 'front' so just skip the initial\n-\t bytes.  */\n       if (BYTES_BIG_ENDIAN)\n-\ttmpbuf += padding;\n-\n-      byte_size -= padding;\n-      if (bitlen % BITS_PER_UNIT != 0)\n-\t{\n-\t  if (BYTES_BIG_ENDIAN)\n-\t    clear_bit_region_be (tmpbuf, BITS_PER_UNIT - 1,\n-\t\t\t\t BITS_PER_UNIT - (bitlen % BITS_PER_UNIT));\n-\t  else\n-\t    clear_bit_region (tmpbuf, bitlen,\n-\t\t\t      byte_size * BITS_PER_UNIT - bitlen);\n-\t}\n+\tclear_bit_region_be (tmpbuf, BITS_PER_UNIT - 1,\n+\t\t\t     BITS_PER_UNIT - (bitlen % BITS_PER_UNIT));\n+      else\n+\tclear_bit_region (tmpbuf, bitlen,\n+\t\t\t  byte_size * BITS_PER_UNIT - bitlen);\n     }\n+  /* Left shifting relies on the last byte being clear if bitlen is\n+     a multiple of BITS_PER_UNIT, which might not be clear if\n+     there are padding bytes.  */\n+  else if (!BYTES_BIG_ENDIAN)\n+    tmpbuf[byte_size - 1] = '\\0';\n \n   /* Clear the bit region in PTR where the bits from TMPBUF will be\n      inserted into.  */"}, {"sha": "483e9030905ddfb73b11b56ceed54e94435a84ce", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1de65225fc1ac05fe6b05b6198dc50a51e4935/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1de65225fc1ac05fe6b05b6198dc50a51e4935/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ad1de65225fc1ac05fe6b05b6198dc50a51e4935", "patch": "@@ -1,3 +1,9 @@\n+2017-02-28  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/79737\n+\t* gcc.c-torture/execute/pr79737-1.c: New test.\n+\t* gcc.c-torture/execute/pr79737-2.c: New test.\n+\n 2017-02-28  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc.target/sparc/20170228-1.c: New test."}, {"sha": "05e392c116d892aaacddf57a64ff82b229a8b29c", "filename": "gcc/testsuite/gcc.c-torture/execute/pr79737-1.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1de65225fc1ac05fe6b05b6198dc50a51e4935/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr79737-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1de65225fc1ac05fe6b05b6198dc50a51e4935/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr79737-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr79737-1.c?ref=ad1de65225fc1ac05fe6b05b6198dc50a51e4935", "patch": "@@ -0,0 +1,37 @@\n+/* PR tree-optimization/79737 */\n+\n+#pragma pack(1)\n+struct S\n+{\n+  int b:18;\n+  int c:1;\n+  int d:24;\n+  int e:15;\n+  int f:14;\n+} i;\n+int g, j, k;\n+static struct S h;\n+\n+void\n+foo ()\n+{\n+  for (j = 0; j < 6; j++)\n+    k = 0;\n+  for (; k < 3; k++)\n+    {\n+      struct S m = { 5, 0, -5, 9, 5 };\n+      h = m;\n+      if (g)\n+\ti = m;\n+      h.e = 0;\n+    }\n+}\n+\n+int\n+main ()\n+{\n+  foo ();\n+  if (h.e != 0)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "37b991e150560528e289a25a0653980db92a2924", "filename": "gcc/testsuite/gcc.c-torture/execute/pr79737-2.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad1de65225fc1ac05fe6b05b6198dc50a51e4935/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr79737-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad1de65225fc1ac05fe6b05b6198dc50a51e4935/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr79737-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr79737-2.c?ref=ad1de65225fc1ac05fe6b05b6198dc50a51e4935", "patch": "@@ -0,0 +1,41 @@\n+/* PR tree-optimization/79737 */\n+\n+#pragma pack(1)\n+struct S\n+{\n+  int b:18;\n+  int c:1;\n+  int d:24;\n+  int e:15;\n+  int f:14;\n+} i, j;\n+\n+void\n+foo ()\n+{\n+  i.e = 0;\n+  i.b = 5;\n+  i.c = 0;\n+  i.d = -5;\n+  i.f = 5;\n+}\n+\n+void\n+bar ()\n+{\n+  j.b = 5;\n+  j.c = 0;\n+  j.d = -5;\n+  j.e = 0;\n+  j.f = 5;\n+}\n+\n+int\n+main ()\n+{\n+  foo ();\n+  bar ();\n+  asm volatile (\"\" : : : \"memory\");\n+  if (i.b != j.b || i.c != j.c || i.d != j.d || i.e != j.e || i.f != j.f)\n+    __builtin_abort ();\n+}"}]}