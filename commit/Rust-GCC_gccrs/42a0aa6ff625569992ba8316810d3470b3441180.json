{"sha": "42a0aa6ff625569992ba8316810d3470b3441180", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJhMGFhNmZmNjI1NTY5OTkyYmE4MzE2ODEwZDM0NzBiMzQ0MTE4MA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2001-02-13T13:18:08Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-02-13T13:18:08Z"}, "message": "i386.md (dummy_extendsfdf2): Support SSE2\n\n\t* i386.md (dummy_extendsfdf2): Support SSE2\n\t(extendsfdf2): Enable if 80387 or SSE2.\n\t(extendsfdf2_1): Support SSE2. Disable if SSE2 is avialble\n\tand no MIX_I387_SSE2\n\t(extendsfdf2_1_sse_only): New pattern.\n\t(truncdfsf2): Enable if SSE2 or 80387; Always use SSE only version\n\tof SSE.\n\t(truncdfsf2_1): Support SSE.\n\t(truncdfsf2_2): Support SSE.\n\t(truncdfsf2_2_1_sse): New pattern.\n\t(fixtruncsfsi2): Always use SSE if available.\n\t(fix_truncsfsi_sse): New pattern.\n\t(fix_truncdfsi_sse): New pattern.\n\t(floatsis?f2): Support SSE.\n\t(floatsidf2_i387): New pattern.\n\t(floatsidf2_sse): Likewise.\n\nFrom-SVN: r39634", "tree": {"sha": "8f29a4c173a7a1a4799507b8a8b09aae9604a9ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f29a4c173a7a1a4799507b8a8b09aae9604a9ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42a0aa6ff625569992ba8316810d3470b3441180", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42a0aa6ff625569992ba8316810d3470b3441180", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42a0aa6ff625569992ba8316810d3470b3441180", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42a0aa6ff625569992ba8316810d3470b3441180/comments", "author": null, "committer": null, "parents": [{"sha": "3b6bd11551ab07b0ae74e5d1e63dfa9b67657c44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b6bd11551ab07b0ae74e5d1e63dfa9b67657c44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b6bd11551ab07b0ae74e5d1e63dfa9b67657c44"}], "stats": {"total": 274, "additions": 234, "deletions": 40}, "files": [{"sha": "c8fec55a11f82a5ae9134145f43e3c796917cf57", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42a0aa6ff625569992ba8316810d3470b3441180/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42a0aa6ff625569992ba8316810d3470b3441180/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=42a0aa6ff625569992ba8316810d3470b3441180", "patch": "@@ -1,3 +1,22 @@\n+Tue Feb 13 14:16:34 CET 2001  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md (dummy_extendsfdf2): Support SSE2\n+\t(extendsfdf2): Enable if 80387 or SSE2.\n+\t(extendsfdf2_1): Support SSE2. Disable if SSE2 is avialble\n+\tand no MIX_I387_SSE2\n+\t(extendsfdf2_1_sse_only): New pattern.\n+\t(truncdfsf2): Enable if SSE2 or 80387; Always use SSE only version\n+\tof SSE.\n+\t(truncdfsf2_1): Support SSE.\n+\t(truncdfsf2_2): Support SSE.\n+\t(truncdfsf2_2_1_sse): New pattern.\n+\t(fixtruncsfsi2): Always use SSE if available.\n+\t(fix_truncsfsi_sse): New pattern.\n+\t(fix_truncdfsi_sse): New pattern.\n+\t(floatsis?f2): Support SSE.\n+\t(floatsidf2_i387): New pattern.\n+\t(floatsidf2_sse): Likewise.\n+\n Tue Feb 13 07:52:04 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* configure.in: Use \"have_gnat\" variable, not \"gnat\"."}, {"sha": "cf2f931b000f77021da676ecfdff4cbd8282e71a", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 215, "deletions": 40, "changes": 255, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42a0aa6ff625569992ba8316810d3470b3441180/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42a0aa6ff625569992ba8316810d3470b3441180/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=42a0aa6ff625569992ba8316810d3470b3441180", "patch": "@@ -3244,7 +3244,7 @@\n ;; %%% Kill these when call knows how to work out a DFmode push earlier. \n (define_insn \"*dummy_extendsfdf2\"\n   [(set (match_operand:DF 0 \"push_operand\" \"=<\")\n-\t(float_extend:DF (match_operand:SF 1 \"nonimmediate_operand\" \"f\")))]\n+\t(float_extend:DF (match_operand:SF 1 \"nonimmediate_operand\" \"fY\")))]\n   \"0\"\n   \"#\")\n \n@@ -3310,17 +3310,17 @@\n (define_expand \"extendsfdf2\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"\")\n         (float_extend:DF (match_operand:SF 1 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_80387\"\n+  \"TARGET_80387 || TARGET_SSE2\"\n   \"\n {\n   if (GET_CODE (operands[0]) == MEM && GET_CODE (operands[1]) == MEM)\n     operands[1] = force_reg (SFmode, operands[1]);\n }\")\n \n (define_insn \"*extendsfdf2_1\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f,m\")\n-        (float_extend:DF (match_operand:SF 1 \"nonimmediate_operand\" \"fm,f\")))]\n-  \"TARGET_80387\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f#Y,mf#Y,Y#f,Ym#f\")\n+        (float_extend:DF (match_operand:SF 1 \"nonimmediate_operand\" \"fm#Y,f#Y,mY#f,Y#f\")))]\n+  \"(TARGET_80387 || TARGET_SSE2)\n    && (GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM)\"\n   \"*\n {\n@@ -3341,13 +3341,25 @@\n \n       else\n         return \\\"fst%z0\\\\t%y0\\\";\n+    case 2:\n+    case 3:\n+      return \\\"cvtss2sd\\\\t{%1, %0|%0, %1}\\\";\n \n     default:\n       abort ();\n     }\n }\"\n-  [(set_attr \"type\" \"fmov\")\n-   (set_attr \"mode\" \"SF,XF\")])\n+  [(set_attr \"type\" \"fmov,fmov,sse,sse\")\n+   (set_attr \"mode\" \"SF,XF,DF,DF\")])\n+\n+(define_insn \"*extendsfdf2_1_sse_only\"\n+  [(set (match_operand:DF 0 \"register_operand\" \"=Y\")\n+        (float_extend:DF (match_operand:SF 1 \"nonimmediate_operand\" \"mY\")))]\n+  \"!TARGET_80387 && TARGET_SSE2\n+   && (GET_CODE (operands[0]) != MEM || GET_CODE (operands[1]) != MEM)\"\n+  \"cvtss2sd\\\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"sse\")\n+   (set_attr \"mode\" \"DF\")])\n \n (define_expand \"extendsfxf2\"\n   [(set (match_operand:XF 0 \"nonimmediate_operand\" \"\")\n@@ -3532,15 +3544,23 @@\n \t\t   (float_truncate:SF\n \t\t    (match_operand:DF 1 \"register_operand\" \"\")))\n \t      (clobber (match_dup 2))])]\n-  \"TARGET_80387\"\n-  \"operands[2] = assign_386_stack_local (SFmode, 0);\")\n+  \"TARGET_80387 || TARGET_SSE2\"\n+  \"\n+   if (TARGET_80387)\n+     operands[2] = assign_386_stack_local (SFmode, 0);\n+   else\n+     {\n+\temit_insn (gen_truncdfsf2_sse_only (operands[0], operands[1]));\n+\tDONE;\n+     }\n+\")\n \n (define_insn \"*truncdfsf2_1\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=m,f\")\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=m,?f\")\n \t(float_truncate:SF\n \t (match_operand:DF 1 \"register_operand\" \"f,0\")))\n-   (clobber (match_operand:SF 2 \"memory_operand\" \"=m,m\"))]\n-  \"TARGET_80387\"\n+   (clobber (match_operand:SF 2 \"memory_operand\" \"=X,m\"))]\n+  \"TARGET_80387 && !TARGET_SSE2\"\n   \"*\n {\n   switch (which_alternative)\n@@ -3556,10 +3576,58 @@\n   abort ();\n }\"\n   [(set_attr \"type\" \"fmov,multi\")\n-   (set_attr \"mode\" \"SF\")])\n+   (set_attr \"mode\" \"SF,SF\")])\n+\n+(define_insn \"*truncdfsf2_1_sse\"\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=m,?f,Y\")\n+\t(float_truncate:SF\n+\t (match_operand:DF 1 \"nonimmediate_operand\" \"f,0,mY\")))\n+   (clobber (match_operand:SF 2 \"memory_operand\" \"=X,m,X\"))]\n+  \"TARGET_80387 && TARGET_SSE2\"\n+  \"*\n+{\n+  switch (which_alternative)\n+    {\n+    case 0:\n+      if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n+\treturn \\\"fstp%z0\\\\t%y0\\\";\n+      else\n+\treturn \\\"fst%z0\\\\t%y0\\\";\n+    case 1:\n+      return \\\"fstp%z2\\\\t%y2\\;fld%z2\\\\t%y2\\\";\n+    case 2:\n+    case 3:\n+      return \\\"cvtsd2ss\\\\t{%1, %0|%0, %1}\\\";\n+    }\n+  abort ();\n+}\"\n+  [(set_attr \"type\" \"fmov,multi,sse\")\n+   (set_attr \"mode\" \"SF,SF,DF\")])\n \n (define_insn \"*truncdfsf2_2\"\n-  [(set (match_operand:SF 0 \"memory_operand\" \"=m\")\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=m,Y\")\n+\t(float_truncate:SF\n+\t (match_operand:DF 1 \"nonimmediate_operand\" \"f,mY\")))]\n+  \"TARGET_80387 && TARGET_SSE2\"\n+  \"*\n+{\n+  switch (which_alternative)\n+    {\n+    case 0:\n+      if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n+\treturn \\\"fstp%z0\\\\t%y0\\\";\n+      else\n+\treturn \\\"fst%z0\\\\t%y0\\\";\n+    case 1:\n+    case 2:\n+      return \\\"cvtsd2ss\\\\t{%1, %0|%0, %1}\\\";\n+    }\n+}\"\n+  [(set_attr \"type\" \"fmov,sse\")\n+   (set_attr \"mode\" \"SF,DF\")])\n+\n+(define_insn \"truncdfsf2_3\"\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=m\")\n \t(float_truncate:SF\n \t (match_operand:DF 1 \"register_operand\" \"f\")))]\n   \"TARGET_80387\"\n@@ -3573,6 +3641,15 @@\n   [(set_attr \"type\" \"fmov\")\n    (set_attr \"mode\" \"SF\")])\n \n+(define_insn \"truncdfsf2_sse_only\"\n+  [(set (match_operand:SF 0 \"register_operand\" \"=Y\")\n+\t(float_truncate:SF\n+\t (match_operand:DF 1 \"nonimmediate_operand\" \"mY\")))]\n+  \"!TARGET_80387 && TARGET_SSE2\"\n+  \"cvtsd2ss\\\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"sse\")\n+   (set_attr \"mode\" \"DF\")])\n+\n (define_split\n   [(set (match_operand:SF 0 \"memory_operand\" \"\")\n \t(float_truncate:SF\n@@ -3582,12 +3659,22 @@\n   [(set (match_dup 0) (float_truncate:SF (match_dup 1)))]\n   \"\")\n \n+(define_split\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"\")\n+\t(float_truncate:SF\n+\t (match_operand:DF 1 \"nonimmediate_operand\" \"\")))\n+   (clobber (match_operand 2 \"\" \"\"))]\n+  \"TARGET_80387 && !FP_REG_P (operands[0]) && !FP_REG_P (operands[1])\"\n+  [(set (match_dup 0) (float_truncate:SF (match_dup 1)))]\n+  \"\")\n+\n (define_split\n   [(set (match_operand:SF 0 \"register_operand\" \"\")\n \t(float_truncate:SF\n \t (match_operand:DF 1 \"register_operand\" \"\")))\n    (clobber (match_operand:SF 2 \"memory_operand\" \"\"))]\n-  \"TARGET_80387 && reload_completed\"\n+  \"TARGET_80387 && reload_completed\n+   && FP_REG_P (operands[0])\"\n   [(set (match_dup 2) (float_truncate:SF (match_dup 1)))\n    (set (match_dup 0) (match_dup 2))]\n   \"\")\n@@ -3957,30 +4044,68 @@\n \t      (clobber (match_dup 2))\n \t      (clobber (match_dup 3))\n \t      (clobber (match_scratch:SI 4 \"\"))])]\n-  \"TARGET_80387\"\n-  \"operands[2] = assign_386_stack_local (SImode, 0);\n-   operands[3] = assign_386_stack_local (SImode, 1);\")\n+  \"TARGET_80387 || TARGET_SSE2\"\n+  \"\n+{\n+  if (TARGET_SSE2)\n+   {\n+     emit_insn (gen_fix_truncdfsi_sse (operands[0], operands[1]));\n+     DONE;\n+   }\n+  else\n+   {\n+     operands[2] = assign_386_stack_local (SImode, 0);\n+     operands[3] = assign_386_stack_local (SImode, 1);\n+   }\n+}\")\n \n (define_expand \"fix_truncsfsi2\"\n   [(parallel [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n \t\t   (fix:SI (match_operand:SF 1 \"register_operand\" \"\")))\n \t      (clobber (match_dup 2))\n \t      (clobber (match_dup 3))\n \t      (clobber (match_scratch:SI 4 \"\"))])]\n-  \"TARGET_80387\"\n-  \"operands[2] = assign_386_stack_local (SImode, 0);\n-   operands[3] = assign_386_stack_local (SImode, 1);\")\n+  \"TARGET_80387 || TARGET_SSE\"\n+  \"\n+{\n+  if (TARGET_SSE2)\n+   {\n+     emit_insn (gen_fix_truncsfsi_sse (operands[0], operands[1]));\n+     DONE;\n+   }\n+  else\n+   {\n+     operands[2] = assign_386_stack_local (SImode, 0);\n+     operands[3] = assign_386_stack_local (SImode, 1);\n+   }\n+}\")\n \n (define_insn \"*fix_truncsi_1\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=m,?r\")\n \t(fix:SI (match_operand 1 \"register_operand\" \"f,f\")))\n    (clobber (match_operand:SI 2 \"memory_operand\" \"=o,o\"))\n    (clobber (match_operand:SI 3 \"memory_operand\" \"=m,m\"))\n    (clobber (match_scratch:SI 4 \"=&r,r\"))]\n-  \"TARGET_80387 && FLOAT_MODE_P (GET_MODE (operands[1]))\"\n+  \"TARGET_80387 && FLOAT_MODE_P (GET_MODE (operands[1]))\n+   && (!TARGET_SSE2 || !SSE_FLOAT_MODE_P (GET_MODE (operands[1])))\"\n   \"* return output_fix_trunc (insn, operands);\"\n   [(set_attr \"type\" \"multi\")])\n \n+;; When SSE available, it is always faster to use it!\n+(define_insn \"fix_truncsfsi_sse\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(fix:SI (match_operand:SF 1 \"nonimmediate_operand\" \"xm\")))]\n+  \"TARGET_SSE\"\n+  \"cvttss2si\\\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"sse\")])\n+\n+(define_insn \"fix_truncdfsi_sse\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+\t(fix:SI (match_operand:DF 1 \"nonimmediate_operand\" \"Ym\")))]\n+  \"TARGET_SSE2\"\n+  \"cvttsd2si\\\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"sse\")])\n+\n (define_split \n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(fix:SI (match_operand 1 \"register_operand\" \"\")))\n@@ -4023,7 +4148,7 @@\n \t      (clobber (match_dup 2))\n \t      (clobber (match_dup 3))\n \t      (clobber (match_scratch:SI 4 \"\"))])]\n-  \"TARGET_80387\"\n+  \"TARGET_80387 && !TARGET_SSE2\"\n   \"operands[2] = assign_386_stack_local (SImode, 0);\n    operands[3] = assign_386_stack_local (HImode, 1);\")\n \n@@ -4033,7 +4158,7 @@\n \t      (clobber (match_dup 2))\n \t      (clobber (match_dup 3))\n \t      (clobber (match_scratch:SI 4 \"\"))])]\n-  \"TARGET_80387\"\n+  \"TARGET_80387 && !TARGET_SSE\"\n   \"operands[2] = assign_386_stack_local (SImode, 0);\n    operands[3] = assign_386_stack_local (HImode, 1);\")\n \n@@ -4043,7 +4168,8 @@\n    (clobber (match_operand:SI 2 \"memory_operand\" \"=o,o\"))\n    (clobber (match_operand:HI 3 \"memory_operand\" \"=m,m\"))\n    (clobber (match_scratch:SI 4 \"=&r,r\"))]\n-  \"TARGET_80387 && FLOAT_MODE_P (GET_MODE (operands[1]))\"\n+  \"TARGET_80387 && FLOAT_MODE_P (GET_MODE (operands[1]))\n+   && (TARGET_SSE2 || !SSE_FLOAT_MODE_P (GET_MODE (operands[1])))\"\n   \"* return output_fix_trunc (insn, operands);\"\n   [(set_attr \"type\" \"multi\")])\n \n@@ -4061,6 +4187,23 @@\n    (set (match_dup 0) (match_dup 3))]\n   \"\")\n \n+;; %%% Kill these when reload knows how to do it.\n+(define_split\n+  [(set (match_operand 0 \"register_operand\" \"\")\n+\t(fix (match_operand 1 \"register_operand\" \"\")))]\n+  \"reload_completed && FLOAT_MODE_P (GET_MODE (operands[1]))\n+   && FP_REG_P (operands[1])\"\n+  [(const_int 0)]\n+  \"\n+{\n+  operands[2] = ix86_force_to_memory (GET_MODE (operands[0]), operands[0]);\n+  operands[2] = gen_rtx_FIX (GET_MODE (operands[2]), operands[1]);\n+  emit_insn (gen_rtx_SET (VOIDmode, operands[2], operands[1]));\n+  emit_move_insn (operands[0], operands[2]);\n+  ix86_free_from_memory (GET_MODE (operands[0]));\n+  DONE;\n+}\")\n+\n ;; %% Not used yet.\n (define_insn \"x86_fnstcw_1\"\n   [(set (match_operand:HI 0 \"memory_operand\" \"=m\")\n@@ -4091,22 +4234,38 @@\n (define_insn \"floathisf2\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n \t(float:SF (match_operand:HI 1 \"nonimmediate_operand\" \"m,r\")))]\n-  \"TARGET_80387\"\n+  \"TARGET_80387 && !TARGET_SSE\"\n   \"@\n    fild%z1\\\\t%1\n    #\"\n   [(set_attr \"type\" \"fmov,multi\")\n    (set_attr \"mode\" \"SF\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n-(define_insn \"floatsisf2\"\n-  [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n-\t(float:SF (match_operand:SI 1 \"nonimmediate_operand\" \"m,r\")))]\n-  \"TARGET_80387\"\n+(define_expand \"floatsisf2\"\n+  [(set (match_operand:SF 0 \"register_operand\" \"\")\n+\t(float:SF (match_operand:SI 1 \"nonimmediate_operand\" \"\")))]\n+  \"TARGET_SSE || TARGET_80387\"\n+  \"\")\n+\n+(define_insn \"*floatsisf2_i387\"\n+  [(set (match_operand:SF 0 \"register_operand\" \"=f,?f,x\")\n+\t(float:SF (match_operand:SI 1 \"nonimmediate_operand\" \"m,r,mr\")))]\n+  \"TARGET_80387 && (!TARGET_SSE || TARGET_MIX_SSE_I387)\"\n   \"@\n    fild%z1\\\\t%1\n-   #\"\n-  [(set_attr \"type\" \"fmov,multi\")\n+   #\n+   cvtsi2ss\\\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"fmov,multi,sse\")\n+   (set_attr \"mode\" \"SF\")\n+   (set_attr \"fp_int_src\" \"true\")])\n+\n+(define_insn \"*floatsisf2_sse\"\n+  [(set (match_operand:SF 0 \"register_operand\" \"=x\")\n+\t(float:SF (match_operand:SI 1 \"nonimmediate_operand\" \"mr\")))]\n+  \"TARGET_80387 && TARGET_SSE\"\n+  \"cvtsi2ss\\\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"sse\")\n    (set_attr \"mode\" \"SF\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n@@ -4124,29 +4283,45 @@\n (define_insn \"floathidf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n \t(float:DF (match_operand:HI 1 \"nonimmediate_operand\" \"m,r\")))]\n-  \"TARGET_80387\"\n+  \"TARGET_80387 && !TARGET_SSE2\"\n   \"@\n    fild%z1\\\\t%1\n    #\"\n   [(set_attr \"type\" \"fmov,multi\")\n    (set_attr \"mode\" \"DF\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n-(define_insn \"floatsidf2\"\n-  [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n-\t(float:DF (match_operand:SI 1 \"nonimmediate_operand\" \"m,r\")))]\n-  \"TARGET_80387\"\n+(define_expand \"floatsidf2\"\n+  [(set (match_operand:DF 0 \"register_operand\" \"\")\n+\t(float:DF (match_operand:SI 1 \"nonimmediate_operand\" \"\")))]\n+  \"\"\n+  \"\")\n+\n+(define_insn \"*floatsidf2_i387\"\n+  [(set (match_operand:DF 0 \"register_operand\" \"=f,?f,Y\")\n+\t(float:DF (match_operand:SI 1 \"nonimmediate_operand\" \"m,r,mr\")))]\n+  \"TARGET_80387 && (!TARGET_SSE2 || TARGET_MIX_SSE_I387)\"\n   \"@\n    fild%z1\\\\t%1\n-   #\"\n-  [(set_attr \"type\" \"fmov,multi\")\n+   #\n+   cvtsi2sd\\\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"fmov,multi,sse\")\n+   (set_attr \"mode\" \"DF\")\n+   (set_attr \"fp_int_src\" \"true\")])\n+\n+(define_insn \"*floatsidf2_sse\"\n+  [(set (match_operand:DF 0 \"register_operand\" \"=Y\")\n+\t(float:DF (match_operand:SI 1 \"nonimmediate_operand\" \"mr\")))]\n+  \"TARGET_SSE2\"\n+  \"cvtsi2sd\\\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"sse\")\n    (set_attr \"mode\" \"DF\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n (define_insn \"floatdidf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n \t(float:DF (match_operand:DI 1 \"nonimmediate_operand\" \"m,r\")))]\n-  \"TARGET_80387\"\n+  \"TARGET_80387 && TARGET_SSE2\"\n   \"@\n    fild%z1\\\\t%1\n    #\""}]}