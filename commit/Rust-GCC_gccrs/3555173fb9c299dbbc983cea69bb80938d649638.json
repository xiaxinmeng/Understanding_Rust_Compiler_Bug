{"sha": "3555173fb9c299dbbc983cea69bb80938d649638", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzU1NTE3M2ZiOWMyOTlkYmJjOTgzY2VhNjliYjgwOTM4ZDY0OTYzOA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-02-04T23:47:21Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-02-04T23:47:21Z"}, "message": "Test for C99 stdlib.h functions with -std=c++98\n\n\tPR libstdc++/69626\n\t* acinclude.m4 (GLIBCXX_ENABLE_C99): Check C99 stdlib.h functions\n\twith -std=c++98 and define _GLIBCXX98_USE_C99_STDLIB.\n\t* config.h.in: Regenerate.\n\t* configure: Regenerate.\n\t* testsuite/21_strings/c_strings/char/69626.cc: New.\n\nFrom-SVN: r233161", "tree": {"sha": "ef1505947ab10943f79a90f6527c3f16af6631dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef1505947ab10943f79a90f6527c3f16af6631dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3555173fb9c299dbbc983cea69bb80938d649638", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3555173fb9c299dbbc983cea69bb80938d649638", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3555173fb9c299dbbc983cea69bb80938d649638", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3555173fb9c299dbbc983cea69bb80938d649638/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "171dc40edefb97b7bf15a7d4b4dbb9981e57987a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/171dc40edefb97b7bf15a7d4b4dbb9981e57987a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/171dc40edefb97b7bf15a7d4b4dbb9981e57987a"}], "stats": {"total": 156, "additions": 156, "deletions": 0}, "files": [{"sha": "b17e5f7ab5d189b58764146b847f453b376879b8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3555173fb9c299dbbc983cea69bb80938d649638/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3555173fb9c299dbbc983cea69bb80938d649638/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3555173fb9c299dbbc983cea69bb80938d649638", "patch": "@@ -1,5 +1,12 @@\n 2016-02-04  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/69626\n+\t* acinclude.m4 (GLIBCXX_ENABLE_C99): Check C99 stdlib.h functions\n+\twith -std=c++98 and define _GLIBCXX98_USE_C99_STDLIB.\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* testsuite/21_strings/c_strings/char/69626.cc: New.\n+\n \t* doc/html/index.html: Regenerate.\n \n \t* doc/xml/manual/containers.xml: Add cross-reference to Dual ABI."}, {"sha": "057b58e054ac137656a2d7b0e798110b7fafd914", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3555173fb9c299dbbc983cea69bb80938d649638/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3555173fb9c299dbbc983cea69bb80938d649638/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=3555173fb9c299dbbc983cea69bb80938d649638", "patch": "@@ -1059,6 +1059,35 @@ AC_DEFUN([GLIBCXX_ENABLE_C99], [\n         in <cstdio> in namespace std for C++98.])\n     fi\n \n+    # Check for the existence in <stdlib.h> of lldiv_t, et. al.\n+    AC_MSG_CHECKING([for ISO C99 support in <stdlib.h> for C++98])\n+    AC_CACHE_VAL(glibcxx_cv_c99_stdlib_cxx98, [\n+      GCC_TRY_COMPILE_OR_LINK(\n+        [#include <stdlib.h>\n+         volatile float f;\n+         volatile long double ld;\n+         volatile unsigned long long ll;\n+         lldiv_t mydivt;],\n+        [char* tmp;\n+         f = strtof(\"gnu\", &tmp);\n+         ld = strtold(\"gnu\", &tmp);\n+         ll = strtoll(\"gnu\", &tmp, 10);\n+         ll = strtoull(\"gnu\", &tmp, 10);\n+         ll = llabs(10);\n+         mydivt = lldiv(10,1);\n+         ll = mydivt.quot;\n+         ll = mydivt.rem;\n+         ll = atoll(\"10\");\n+         _Exit(0);\n+        ], [glibcxx_cv_c99_stdlib_cxx98=yes], [glibcxx_cv_c99_stdlib_cxx98=no])\n+    ])\n+    AC_MSG_RESULT($glibcxx_cv_c99_stdlib_cxx98)\n+    if test x\"$glibcxx_cv_c99_stdlib_cxx98\" = x\"yes\"; then\n+      AC_DEFINE(_GLIBCXX98_USE_C99_STDLIB, 1,\n+        [Define if C99 functions or macros in <stdlib.h> should be imported\n+        in <cstdlib> in namespace std for C++98.])\n+    fi\n+\n     # Check for the existence in <wchar.h> of wcstold, etc.\n     if test x\"$ac_has_wchar_h\" = xyes &&\n        test x\"$ac_has_wctype_h\" = xyes; then"}, {"sha": "701d4796d389a0e895d5cc7e2404f82bff5a3c5d", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3555173fb9c299dbbc983cea69bb80938d649638/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3555173fb9c299dbbc983cea69bb80938d649638/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=3555173fb9c299dbbc983cea69bb80938d649638", "patch": "@@ -771,6 +771,10 @@\n    <cstdio> in namespace std for C++98. */\n #undef _GLIBCXX98_USE_C99_STDIO\n \n+/* Define if C99 functions or macros in <stdlib.h> should be imported in\n+   <cstdlib> in namespace std for C++98. */\n+#undef _GLIBCXX98_USE_C99_STDLIB\n+\n /* Define if C99 functions or macros in <wchar.h> should be imported in\n    <cwchar> in namespace std for C++98. */\n #undef _GLIBCXX98_USE_C99_WCHAR"}, {"sha": "a919a3e8bad6318662746c2510330266d65f21bf", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3555173fb9c299dbbc983cea69bb80938d649638/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3555173fb9c299dbbc983cea69bb80938d649638/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=3555173fb9c299dbbc983cea69bb80938d649638", "patch": "@@ -16970,6 +16970,95 @@ $as_echo \"#define _GLIBCXX98_USE_C99_STDIO 1\" >>confdefs.h\n \n     fi\n \n+    # Check for the existence in <stdlib.h> of lldiv_t, et. al.\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ISO C99 support in <stdlib.h> for C++98\" >&5\n+$as_echo_n \"checking for ISO C99 support in <stdlib.h> for C++98... \" >&6; }\n+    if test \"${glibcxx_cv_c99_stdlib_cxx98+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+\n+      if test x$gcc_no_link = xyes; then\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <stdlib.h>\n+         volatile float f;\n+         volatile long double ld;\n+         volatile unsigned long long ll;\n+         lldiv_t mydivt;\n+int\n+main ()\n+{\n+char* tmp;\n+         f = strtof(\"gnu\", &tmp);\n+         ld = strtold(\"gnu\", &tmp);\n+         ll = strtoll(\"gnu\", &tmp, 10);\n+         ll = strtoull(\"gnu\", &tmp, 10);\n+         ll = llabs(10);\n+         mydivt = lldiv(10,1);\n+         ll = mydivt.quot;\n+         ll = mydivt.rem;\n+         ll = atoll(\"10\");\n+         _Exit(0);\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_cxx_try_compile \"$LINENO\"; then :\n+  glibcxx_cv_c99_stdlib_cxx98=yes\n+else\n+  glibcxx_cv_c99_stdlib_cxx98=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+else\n+  if test x$gcc_no_link = xyes; then\n+  as_fn_error \"Link tests are not allowed after GCC_NO_EXECUTABLES.\" \"$LINENO\" 5\n+fi\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <stdlib.h>\n+         volatile float f;\n+         volatile long double ld;\n+         volatile unsigned long long ll;\n+         lldiv_t mydivt;\n+int\n+main ()\n+{\n+char* tmp;\n+         f = strtof(\"gnu\", &tmp);\n+         ld = strtold(\"gnu\", &tmp);\n+         ll = strtoll(\"gnu\", &tmp, 10);\n+         ll = strtoull(\"gnu\", &tmp, 10);\n+         ll = llabs(10);\n+         mydivt = lldiv(10,1);\n+         ll = mydivt.quot;\n+         ll = mydivt.rem;\n+         ll = atoll(\"10\");\n+         _Exit(0);\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_cxx_try_link \"$LINENO\"; then :\n+  glibcxx_cv_c99_stdlib_cxx98=yes\n+else\n+  glibcxx_cv_c99_stdlib_cxx98=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+fi\n+\n+fi\n+\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_c99_stdlib_cxx98\" >&5\n+$as_echo \"$glibcxx_cv_c99_stdlib_cxx98\" >&6; }\n+    if test x\"$glibcxx_cv_c99_stdlib_cxx98\" = x\"yes\"; then\n+\n+$as_echo \"#define _GLIBCXX98_USE_C99_STDLIB 1\" >>confdefs.h\n+\n+    fi\n+\n     # Check for the existence in <wchar.h> of wcstold, etc.\n     if test x\"$ac_has_wchar_h\" = xyes &&\n        test x\"$ac_has_wctype_h\" = xyes; then"}, {"sha": "be3cdb32f97c54fb28cc79fc5ce9f9d2d66f04ca", "filename": "libstdc++-v3/testsuite/21_strings/c_strings/char/69626.cc", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3555173fb9c299dbbc983cea69bb80938d649638/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fc_strings%2Fchar%2F69626.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3555173fb9c299dbbc983cea69bb80938d649638/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fc_strings%2Fchar%2F69626.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fc_strings%2Fchar%2F69626.cc?ref=3555173fb9c299dbbc983cea69bb80938d649638", "patch": "@@ -0,0 +1,27 @@\n+// Copyright (C) 2016 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++98\" }\n+// { dg-do compile { target *-*-linux-gnu } }\n+\n+#include <cstdlib>\n+\n+long long test01()\n+{\n+  char* ep;\n+  return std::strtoll(\"0\", &ep, 10);\n+}"}]}