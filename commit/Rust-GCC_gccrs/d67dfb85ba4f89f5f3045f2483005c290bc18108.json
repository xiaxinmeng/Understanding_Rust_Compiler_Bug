{"sha": "d67dfb85ba4f89f5f3045f2483005c290bc18108", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY3ZGZiODViYTRmODlmNWYzMDQ1ZjI0ODMwMDVjMjkwYmMxODEwOA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2019-07-14T08:24:38Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2019-07-14T08:24:38Z"}, "message": "rs6000: Shut up -Wformat-diag a little more\n\n\n\tPR target/91148\n\t* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin): Remove\n\tsuperfluous \"builtin function\" phrasing.\n\ngcc/testsuite/\n\t* gcc.target/powerpc/bfp/scalar-extract-exp-2.c: Adjust.\n\t* gcc.target/powerpc/bfp/scalar-extract-sig-2.c: Adjust.\n\t* gcc.target/powerpc/bfp/scalar-insert-exp-2.c: Adjust.\n\t* gcc.target/powerpc/bfp/scalar-insert-exp-5.c: Adjust.\n\t* gcc.target/powerpc/bfp/scalar-insert-exp-8.c: Adjust.\n\t* gcc.target/powerpc/byte-in-set-2.c: Adjust.\n\t* gcc.target/powerpc/cmpb-3.c: Adjust.\n\t* gcc.target/powerpc/vsu/vec-all-nez-7.c: Adjust.\n\t* gcc.target/powerpc/vsu/vec-any-eqz-7.c: Adjust.\n\t* gcc.target/powerpc/vsu/vec-xl-len-13.c: Adjust.\n\t* gcc.target/powerpc/vsu/vec-xst-len-12.c: Adjust.\n\nFrom-SVN: r273475", "tree": {"sha": "8bcc9abf4a6fcb1d62f9c3265dfb5ded128a5343", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bcc9abf4a6fcb1d62f9c3265dfb5ded128a5343"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d67dfb85ba4f89f5f3045f2483005c290bc18108", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d67dfb85ba4f89f5f3045f2483005c290bc18108", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d67dfb85ba4f89f5f3045f2483005c290bc18108", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d67dfb85ba4f89f5f3045f2483005c290bc18108/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d67fe7e009324fbff6c554d590c8c9330fc211a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d67fe7e009324fbff6c554d590c8c9330fc211a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d67fe7e009324fbff6c554d590c8c9330fc211a"}], "stats": {"total": 46, "additions": 33, "deletions": 13}, "files": [{"sha": "9376ab415429f85279c340fcb0ea81856365c9c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d67dfb85ba4f89f5f3045f2483005c290bc18108", "patch": "@@ -1,3 +1,9 @@\n+2019-07-14  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/91148\n+\t* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin): Remove\n+\tsuperfluous \"builtin function\" phrasing.\n+\n 2019-07-13  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* tree-ssa-alias.c (component_ref_to_zero_sized_trailing_array_p):"}, {"sha": "7f0cdc73d9b16268bea74faab5043dcfe2921d0e", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=d67dfb85ba4f89f5f3045f2483005c290bc18108", "patch": "@@ -7036,8 +7036,7 @@ altivec_resolve_overloaded_builtin (location_t loc, tree fndecl,\n \t\t    name, internal_name);\n \t  }\n \telse\n-\t  error (\"builtin function %qs not supported in this compiler \"\n-\t\t \"configuration\", name);\n+\t  error (\"%qs is not supported in this compiler configuration\", name);\n \t/* If an error-representing  result tree was returned from\n \t   altivec_build_resolved_builtin above, use it.  */\n \treturn (result != NULL) ? result : error_mark_node;"}, {"sha": "8993a8184bdefb70939358854054654b74585404", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d67dfb85ba4f89f5f3045f2483005c290bc18108", "patch": "@@ -1,3 +1,18 @@\n+2019-07-14  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/91148\n+\t* gcc.target/powerpc/bfp/scalar-extract-exp-2.c: Adjust.\n+\t* gcc.target/powerpc/bfp/scalar-extract-sig-2.c: Adjust.\n+\t* gcc.target/powerpc/bfp/scalar-insert-exp-2.c: Adjust.\n+\t* gcc.target/powerpc/bfp/scalar-insert-exp-5.c: Adjust.\n+\t* gcc.target/powerpc/bfp/scalar-insert-exp-8.c: Adjust.\n+\t* gcc.target/powerpc/byte-in-set-2.c: Adjust.\n+\t* gcc.target/powerpc/cmpb-3.c: Adjust.\n+\t* gcc.target/powerpc/vsu/vec-all-nez-7.c: Adjust.\n+\t* gcc.target/powerpc/vsu/vec-any-eqz-7.c: Adjust.\n+\t* gcc.target/powerpc/vsu/vec-xl-len-13.c: Adjust.\n+\t* gcc.target/powerpc/vsu/vec-xst-len-12.c: Adjust.\n+\n 2019-07-13  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* gcc.target/powerpc/stabs-attrib-vect-darwin.c: Require stabs"}, {"sha": "922180675fc279e6bdd3fbdea1fcf04cdd83cb34", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-extract-exp-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-exp-2.c?ref=d67dfb85ba4f89f5f3045f2483005c290bc18108", "patch": "@@ -14,7 +14,7 @@ get_exponent (double *p)\n {\n   double source = *p;\n \n-  return scalar_extract_exp (source);\t/* { dg-error \"'__builtin_vec_scalar_extract_exp' not supported in this compiler configuration\" } */\n+  return scalar_extract_exp (source);\t/* { dg-error \"'__builtin_vec_scalar_extract_exp' is not supported in this compiler configuration\" } */\n }\n \n "}, {"sha": "e24d4bd23fe8b84774c4fd9f9260b13ff197bf54", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-extract-sig-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-extract-sig-2.c?ref=d67dfb85ba4f89f5f3045f2483005c290bc18108", "patch": "@@ -12,5 +12,5 @@ get_significand (double *p)\n {\n   double source = *p;\n \n-  return __builtin_vec_scalar_extract_sig (source); /* { dg-error \"'__builtin_vec_scalar_extract_sig' not supported in this compiler configuration\" } */\n+  return __builtin_vec_scalar_extract_sig (source); /* { dg-error \"'__builtin_vec_scalar_extract_sig' is not supported in this compiler configuration\" } */\n }"}, {"sha": "feb943104dab95455e19b7c3d733c5930c0ac48d", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-insert-exp-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-2.c?ref=d67dfb85ba4f89f5f3045f2483005c290bc18108", "patch": "@@ -16,5 +16,5 @@ insert_exponent (unsigned long long int *significand_p,\n   unsigned long long int significand = *significand_p;\n   unsigned long long int exponent = *exponent_p;\n \n-  return scalar_insert_exp (significand, exponent); /* { dg-error \"'__builtin_vec_scalar_insert_exp' not supported in this compiler configuration\" } */\n+  return scalar_insert_exp (significand, exponent); /* { dg-error \"'__builtin_vec_scalar_insert_exp' is not supported in this compiler configuration\" } */\n }"}, {"sha": "0e5683d5d1a38367f21124a4cb9dd126cbf4adbb", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-insert-exp-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-5.c?ref=d67dfb85ba4f89f5f3045f2483005c290bc18108", "patch": "@@ -16,5 +16,5 @@ insert_exponent (double *significand_p,\n   double significand = *significand_p;\n   unsigned long long int exponent = *exponent_p;\n \n-  return scalar_insert_exp (significand, exponent); /* { dg-error \"'__builtin_vec_scalar_insert_exp' not supported in this compiler configuration\" } */\n+  return scalar_insert_exp (significand, exponent); /* { dg-error \"'__builtin_vec_scalar_insert_exp' is not supported in this compiler configuration\" } */\n }"}, {"sha": "bd68f7709856827bebbafed83bc27a2d43ce170e", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/scalar-insert-exp-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fscalar-insert-exp-8.c?ref=d67dfb85ba4f89f5f3045f2483005c290bc18108", "patch": "@@ -16,5 +16,5 @@ insert_exponent (unsigned __int128 *significand_p, /* { dg-error \"'__int128' is\n   unsigned __int128 significand = *significand_p;  /* { dg-error \"'__int128' is not supported on this target\" } */\n   unsigned long long int exponent = *exponent_p;\n \n-  return scalar_insert_exp (significand, exponent); /* { dg-error \"'__builtin_vec_scalar_insert_exp' not supported in this compiler configuration\" } */\n+  return scalar_insert_exp (significand, exponent); /* { dg-error \"'__builtin_vec_scalar_insert_exp' is not supported in this compiler configuration\" } */\n }"}, {"sha": "9a80c27fe26b8ba7be93584c7ccc149b9cbb4158", "filename": "gcc/testsuite/gcc.target/powerpc/byte-in-set-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-set-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-set-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbyte-in-set-2.c?ref=d67dfb85ba4f89f5f3045f2483005c290bc18108", "patch": "@@ -11,5 +11,5 @@\n int\n test_byte_in_set (unsigned char b, unsigned long long set_members)\n {\n-  return __builtin_byte_in_set (b, set_members); /* { dg-error \"'__builtin_byte_in_set' not supported in this compiler configuration\" } */\n+  return __builtin_byte_in_set (b, set_members); /* { dg-error \"'__builtin_byte_in_set' is not supported in this compiler configuration\" } */\n }"}, {"sha": "de111a80144f5eccf1932a789367d1b419fa0e16", "filename": "gcc/testsuite/gcc.target/powerpc/cmpb-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcmpb-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcmpb-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fcmpb-3.c?ref=d67dfb85ba4f89f5f3045f2483005c290bc18108", "patch": "@@ -8,7 +8,7 @@ void abort ();\n long long int\n do_compare (long long int a, long long int b)\n {\n-  return __builtin_cmpb (a, b);\t/* { dg-error \"'__builtin_cmpb' not supported in this compiler configuration\" } */\n+  return __builtin_cmpb (a, b);\t/* { dg-error \"'__builtin_cmpb' is not supported in this compiler configuration\" } */\n }\n \n void expect (long long int pattern, long long int value)"}, {"sha": "0f9badda4f8e0b8f8ae2fa5c4591b17832449ad3", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-all-nez-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-all-nez-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-all-nez-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-all-nez-7.c?ref=d67dfb85ba4f89f5f3045f2483005c290bc18108", "patch": "@@ -11,5 +11,5 @@ test_all_not_equal_and_not_zero (vector unsigned short *arg1_p,\n   vector unsigned short arg_1 = *arg1_p;\n   vector unsigned short arg_2 = *arg2_p;\n \n-  return __builtin_vec_vcmpnez_p (__CR6_LT, arg_1, arg_2);\t/* { dg-error \"'__builtin_vec_vcmpnez_p' not supported in this compiler configuration\" } */\n+  return __builtin_vec_vcmpnez_p (__CR6_LT, arg_1, arg_2);\t/* { dg-error \"'__builtin_vec_vcmpnez_p' is not supported in this compiler configuration\" } */\n }"}, {"sha": "c69dfa6472848b38c198eff403b5f6902c2f74b0", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-any-eqz-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-any-eqz-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-any-eqz-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-any-eqz-7.c?ref=d67dfb85ba4f89f5f3045f2483005c290bc18108", "patch": "@@ -10,5 +10,5 @@ test_any_equal (vector unsigned int *arg1_p, vector unsigned int *arg2_p)\n   vector unsigned int arg_1 = *arg1_p;\n   vector unsigned int arg_2 = *arg2_p;\n \n-  return __builtin_vec_vcmpnez_p (__CR6_LT_REV, arg_1, arg_2);\t/* { dg-error \"'__builtin_vec_vcmpnez_p' not supported in this compiler configuration\" } */\n+  return __builtin_vec_vcmpnez_p (__CR6_LT_REV, arg_1, arg_2);\t/* { dg-error \"'__builtin_vec_vcmpnez_p' is not supported in this compiler configuration\" } */\n }"}, {"sha": "9de6424718c28cacc672eed1d3c1547b90353706", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-xl-len-13.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xl-len-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xl-len-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xl-len-13.c?ref=d67dfb85ba4f89f5f3045f2483005c290bc18108", "patch": "@@ -13,5 +13,5 @@\n __vector float\n fetch_data (float *address, size_t length)\n {\n-  return __builtin_vec_lxvl (address, length);\t/* { dg-error \"'__builtin_vec_lxvl' not supported in this compiler configuration\" } */\n+  return __builtin_vec_lxvl (address, length);\t/* { dg-error \"'__builtin_vec_lxvl' is not supported in this compiler configuration\" } */\n }"}, {"sha": "3a51132a5a2415fcdc1038f1d63d8d1740910b57", "filename": "gcc/testsuite/gcc.target/powerpc/vsu/vec-xst-len-12.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xst-len-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d67dfb85ba4f89f5f3045f2483005c290bc18108/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xst-len-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fvsu%2Fvec-xst-len-12.c?ref=d67dfb85ba4f89f5f3045f2483005c290bc18108", "patch": "@@ -13,5 +13,5 @@ store_data (vector double *datap, double *address, size_t length)\n {\n   vector double data = *datap;\n \n-  __builtin_vec_stxvl (data, address, length); /* { dg-error \"'__builtin_vec_stxvl' not supported in this compiler configuration\" } */\n+  __builtin_vec_stxvl (data, address, length); /* { dg-error \"'__builtin_vec_stxvl' is not supported in this compiler configuration\" } */\n }"}]}