{"sha": "87e0ceb78c9797754f599dda0344a4165da93338", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdlMGNlYjc4Yzk3OTc3NTRmNTk5ZGRhMDM0NGE0MTY1ZGE5MzMzOA==", "commit": {"author": {"name": "Selim Belbachir", "email": "selim.belbachir@fr.thalesgroup.com", "date": "2015-04-20T17:47:10Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2015-04-20T17:47:10Z"}, "message": "reorg.c (try_merge_delay_insns): Improve correctness checking for targets with multiple delay slots.\n\n       * reorg.c (try_merge_delay_insns): Improve correctness checking\n        for targets with multiple delay slots.\n\nFrom-SVN: r222245", "tree": {"sha": "b3f45b4c4042b00885566f173c05553cc18fe5ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3f45b4c4042b00885566f173c05553cc18fe5ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87e0ceb78c9797754f599dda0344a4165da93338", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87e0ceb78c9797754f599dda0344a4165da93338", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87e0ceb78c9797754f599dda0344a4165da93338", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87e0ceb78c9797754f599dda0344a4165da93338/comments", "author": null, "committer": null, "parents": [{"sha": "6581c1cffb859a2d8808f39f4bf1c94d5a638e0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6581c1cffb859a2d8808f39f4bf1c94d5a638e0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6581c1cffb859a2d8808f39f4bf1c94d5a638e0b"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "a46036f43cf0d1e6823505d344a16d701ec93d6a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87e0ceb78c9797754f599dda0344a4165da93338/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87e0ceb78c9797754f599dda0344a4165da93338/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=87e0ceb78c9797754f599dda0344a4165da93338", "patch": "@@ -1,3 +1,8 @@\n+2015-04-20  Selim Belbachir  <selim.belbachir@fr.thalesgroup.com>\n+\n+\t* reorg.c (try_merge_delay_insns): Improve correctness checking\n+\tfor targets with multiple delay slots.\n+\n 2015-04-20  Jeff Law  <law@redhat.com>\n \n \tPR tree-optimization/65658"}, {"sha": "c734a78571ceffaf5571d8b6ad0341f1295079f5", "filename": "gcc/reorg.c", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87e0ceb78c9797754f599dda0344a4165da93338/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87e0ceb78c9797754f599dda0344a4165da93338/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=87e0ceb78c9797754f599dda0344a4165da93338", "patch": "@@ -1338,9 +1338,9 @@ try_merge_delay_insns (rtx insn, rtx_insn *thread)\n   int slot_number = 1;\n   int num_slots = XVECLEN (PATTERN (insn), 0);\n   rtx next_to_match = XVECEXP (PATTERN (insn), 0, slot_number);\n-  struct resources set, needed;\n+  struct resources set, needed, modified;\n   rtx_insn_list *merged_insns = 0;\n-  int i;\n+  int i, j;\n   int flags;\n \n   flags = get_jump_flags (delay_insn, JUMP_LABEL (delay_insn));\n@@ -1432,13 +1432,29 @@ try_merge_delay_insns (rtx insn, rtx_insn *thread)\n \t{\n \t  rtx_insn *dtrial = pat->insn (i);\n \n+\t  CLEAR_RESOURCE (&modified);\n+\t  /* Account for resources set by the the insn following NEXT_TO_MATCH\n+\t     inside INSN's delay list. */\n+\t  for (j = 1; slot_number + j < num_slots; j++)\n+\t    mark_set_resources (XVECEXP (PATTERN (insn), 0, slot_number + j),\n+\t\t\t\t&modified, 0, MARK_SRC_DEST_CALL);\n+\t  /* Account for resources set by the the insn before DTRIAL and inside\n+\t     TRIAL's delay list. */\n+\t  for (j = 1; j < i; j++)\n+\t    mark_set_resources (XVECEXP (pat, 0, j),\n+\t\t\t\t&modified, 0, MARK_SRC_DEST_CALL); \n \t  if (! insn_references_resource_p (dtrial, &set, true)\n \t      && ! insn_sets_resource_p (dtrial, &set, true)\n \t      && ! insn_sets_resource_p (dtrial, &needed, true)\n #ifdef HAVE_cc0\n \t      && ! sets_cc0_p (PATTERN (dtrial))\n #endif\n \t      && rtx_equal_p (PATTERN (next_to_match), PATTERN (dtrial))\n+\t      /* Check that DTRIAL and NEXT_TO_MATCH does not reference a \n+\t         resource modified between them (only dtrial is checked because\n+\t         next_to_match and dtrial shall to be equal in order to hit\n+\t         this line) */\n+\t      && ! insn_references_resource_p (dtrial, &modified, true)\n \t      && eligible_for_delay (delay_insn, slot_number - 1, dtrial, flags))\n \t    {\n \t      if (! annul_p)"}]}