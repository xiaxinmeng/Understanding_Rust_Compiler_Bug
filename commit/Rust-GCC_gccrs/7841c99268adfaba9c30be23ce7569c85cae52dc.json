{"sha": "7841c99268adfaba9c30be23ce7569c85cae52dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg0MWM5OTI2OGFkZmFiYTljMzBiZTIzY2U3NTY5Yzg1Y2FlNTJkYw==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2020-04-30T15:55:42Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-19T08:17:18Z"}, "message": "[Ada] ACATS 4.1G - C760A02 - Near infinite finalization\n\n2020-06-19  Javier Miranda  <miranda@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch3.ads (Ensure_Activation_Chain_And_Master): New\n\tsubprogram.\n\t* exp_ch3.adb (Ensure_Activation_Chain_And_Master): New\n\tsubprogram that factorizes code.\n\t(Expand_N_Object_Declaration): Call new subprogram.\n\t* sem_ch6.adb (Analyze_Function_Return): Returning a\n\tbuild-in-place unconstrained array type defer the full analysis\n\tof the returned object to avoid generating the corresponding\n\tconstrained subtype; otherwise the bounds would be created in\n\tthe stack and a dangling reference would be returned pointing to\n\tthe bounds.", "tree": {"sha": "cdf40bce5eae4592adda8302ff4e15b39ff7a3fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cdf40bce5eae4592adda8302ff4e15b39ff7a3fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7841c99268adfaba9c30be23ce7569c85cae52dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7841c99268adfaba9c30be23ce7569c85cae52dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7841c99268adfaba9c30be23ce7569c85cae52dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7841c99268adfaba9c30be23ce7569c85cae52dc/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6c2ec499709f26af66a5327b1ff0ee345f5fa87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6c2ec499709f26af66a5327b1ff0ee345f5fa87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6c2ec499709f26af66a5327b1ff0ee345f5fa87"}], "stats": {"total": 107, "additions": 77, "deletions": 30}, "files": [{"sha": "7d847329378eedeed99fdf2e5dec5141a1f18d2a", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 42, "deletions": 29, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7841c99268adfaba9c30be23ce7569c85cae52dc/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7841c99268adfaba9c30be23ce7569c85cae52dc/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=7841c99268adfaba9c30be23ce7569c85cae52dc", "patch": "@@ -4764,6 +4764,47 @@ package body Exp_Ch3 is\n       end if;\n    end Clean_Task_Names;\n \n+   ----------------------------------------\n+   -- Ensure_Activation_Chain_And_Master --\n+   ----------------------------------------\n+\n+   procedure Ensure_Activation_Chain_And_Master (Obj_Decl : Node_Id) is\n+      Def_Id : constant Entity_Id := Defining_Identifier (Obj_Decl);\n+      Expr   : constant Node_Id   := Expression (Obj_Decl);\n+      Expr_Q : Node_Id;\n+      Typ    : constant Entity_Id := Etype (Def_Id);\n+\n+   begin\n+      pragma Assert (Nkind (Obj_Decl) = N_Object_Declaration);\n+\n+      if Has_Task (Typ) or else Might_Have_Tasks (Typ) then\n+         Build_Activation_Chain_Entity (Obj_Decl);\n+\n+         if Has_Task (Typ) then\n+            Build_Master_Entity (Def_Id);\n+\n+         --  Handle objects initialized with BIP function calls\n+\n+         elsif Present (Expr) then\n+            if Nkind (Expr) = N_Qualified_Expression then\n+               Expr_Q := Expression (Expr);\n+            else\n+               Expr_Q := Expr;\n+            end if;\n+\n+            if Is_Build_In_Place_Function_Call (Expr_Q)\n+              or else Present (Unqual_BIP_Iface_Function_Call (Expr_Q))\n+              or else\n+                (Nkind (Expr_Q) = N_Reference\n+                   and then\n+                 Is_Build_In_Place_Function_Call (Prefix (Expr_Q)))\n+            then\n+               Build_Master_Entity (Def_Id);\n+            end if;\n+         end if;\n+      end if;\n+   end Ensure_Activation_Chain_And_Master;\n+\n    ------------------------------\n    -- Expand_Freeze_Array_Type --\n    ------------------------------\n@@ -6743,35 +6784,7 @@ package body Exp_Ch3 is\n       --  also that a Master variable is established (and that the appropriate\n       --  enclosing construct is established as a task master).\n \n-      if Has_Task (Typ) or else Might_Have_Tasks (Typ) then\n-         Build_Activation_Chain_Entity (N);\n-\n-         if Has_Task (Typ) then\n-            Build_Master_Entity (Def_Id);\n-\n-         --  Handle objects initialized with BIP function calls\n-\n-         elsif Present (Expr) then\n-            declare\n-               Expr_Q : Node_Id := Expr;\n-\n-            begin\n-               if Nkind (Expr) = N_Qualified_Expression then\n-                  Expr_Q := Expression (Expr);\n-               end if;\n-\n-               if Is_Build_In_Place_Function_Call (Expr_Q)\n-                 or else Present (Unqual_BIP_Iface_Function_Call (Expr_Q))\n-                 or else\n-                   (Nkind (Expr_Q) = N_Reference\n-                      and then\n-                    Is_Build_In_Place_Function_Call (Prefix (Expr_Q)))\n-               then\n-                  Build_Master_Entity (Def_Id);\n-               end if;\n-            end;\n-         end if;\n-      end if;\n+      Ensure_Activation_Chain_And_Master (N);\n \n       --  If No_Implicit_Heap_Allocations or No_Implicit_Task_Allocations\n       --  restrictions are active then default-sized secondary stacks are"}, {"sha": "954b5a24a2ba27a0902f8419d0dd95665734f2a0", "filename": "gcc/ada/exp_ch3.ads", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7841c99268adfaba9c30be23ce7569c85cae52dc/gcc%2Fada%2Fexp_ch3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7841c99268adfaba9c30be23ce7569c85cae52dc/gcc%2Fada%2Fexp_ch3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.ads?ref=7841c99268adfaba9c30be23ce7569c85cae52dc", "patch": "@@ -101,6 +101,13 @@ package Exp_Ch3 is\n    --  Build the body of the equality function Body_Id for the untagged variant\n    --  record Typ with the given parameters specification list.\n \n+   procedure Ensure_Activation_Chain_And_Master (Obj_Decl : Node_Id);\n+   --  If tasks are being declared (or might be declared) by the given object\n+   --  declaration then ensure to have an activation chain defined for the\n+   --  tasks (has no effect if we already have one), and also that a Master\n+   --  variable is established (and that the appropriate enclosing construct\n+   --  is established as a task master).\n+\n    function Freeze_Type (N : Node_Id) return Boolean;\n    --  This function executes the freezing actions associated with the given\n    --  freeze type node N and returns True if the node is to be deleted. We"}, {"sha": "59cbccdafa01f9dc19ed2cb1718c84794460473b", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7841c99268adfaba9c30be23ce7569c85cae52dc/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7841c99268adfaba9c30be23ce7569c85cae52dc/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=7841c99268adfaba9c30be23ce7569c85cae52dc", "patch": "@@ -32,6 +32,7 @@ with Einfo;     use Einfo;\n with Elists;    use Elists;\n with Errout;    use Errout;\n with Expander;  use Expander;\n+with Exp_Ch3;   use Exp_Ch3;\n with Exp_Ch6;   use Exp_Ch6;\n with Exp_Ch7;   use Exp_Ch7;\n with Exp_Ch9;   use Exp_Ch9;\n@@ -1194,7 +1195,33 @@ package body Sem_Ch6 is\n             --  object declaration.\n \n             Set_Is_Return_Object (Defining_Identifier (Obj_Decl));\n-            Analyze (Obj_Decl);\n+\n+            --  Returning a build-in-place unconstrained array type we defer\n+            --  the full analysis of the returned object to avoid generating\n+            --  the corresponding constrained subtype; otherwise the bounds\n+            --  would be created in the stack and a dangling reference would\n+            --  be returned pointing to the bounds. We perform its preanalysis\n+            --  to report errors on the initializing aggregate now (if any);\n+            --  we also ensure its activation chain and Master variable are\n+            --  defined (if tasks are being declared) since they are generated\n+            --  as part of the analysis and expansion of the object declaration\n+            --  at this stage.\n+\n+            if Is_Array_Type (R_Type)\n+              and then not Is_Constrained (R_Type)\n+              and then Is_Build_In_Place_Function (Scope_Id)\n+              and then Needs_BIP_Alloc_Form (Scope_Id)\n+              and then Nkind_In (Expr, N_Aggregate, N_Extension_Aggregate)\n+            then\n+               Preanalyze (Obj_Decl);\n+\n+               if Expander_Active then\n+                  Ensure_Activation_Chain_And_Master (Obj_Decl);\n+               end if;\n+\n+            else\n+               Analyze (Obj_Decl);\n+            end if;\n \n             Check_Return_Subtype_Indication (Obj_Decl);\n "}]}