{"sha": "6948c7c3d29bf5892299550a19ce615a85ef9b2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk0OGM3YzNkMjliZjU4OTIyOTk1NTBhMTljZTYxNWE4NWVmOWIyYg==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-06-23T08:40:37Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-06-25T15:02:45Z"}, "message": "d: Turn on deprecation warnings by default.\n\nThis is the default in the upstream reference compiler, and can reduce\nsome confusion when comparing warning/error messages of gdc and dmd side\nby side.\n\nMerges libphobos with upstream druntime d05ebaad and phobos 021ae0df7.\n\nReviewed-on: https://github.com/dlang/druntime/pull/3127\n\t     https://github.com/dlang/phobos/pull/7521\n\ngcc/d/ChangeLog:\n\n\t* d-lang.cc (d_init_options): Turn on deprecation warnings by default.\n\nlibphobos/ChangeLog:\n\n\t* libdruntime/MERGE: Merge upstream druntime d05ebaad.\n\t* src/MERGE: Merge upstream phobos 021ae0df7.\n\t* testsuite/libphobos.typeinfo/struct-align.d: Remove empty statement.\n\ngcc/testsuite/ChangeLog:\n\n\t* gdc.dg/asm1.d: Don't use deprecated asm syntax.\n\t* gdc.dg/compilable.d: Add public to selective import.\n\t* gdc.dg/lto/ltotests_0.d: Explicitly catch Throwable.\n\t* gdc.dg/runnable.d: Remove empty statement.", "tree": {"sha": "3ab9d80b327c79a5e3f1b611541c181d68949ce7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ab9d80b327c79a5e3f1b611541c181d68949ce7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6948c7c3d29bf5892299550a19ce615a85ef9b2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6948c7c3d29bf5892299550a19ce615a85ef9b2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6948c7c3d29bf5892299550a19ce615a85ef9b2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6948c7c3d29bf5892299550a19ce615a85ef9b2b/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72acf751d8eb41bab7a4d8b4dd74f8165b10cd71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72acf751d8eb41bab7a4d8b4dd74f8165b10cd71"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "24a1125ef8dd690f38b9c14ec3f7d79a9f1f1838", "filename": "gcc/d/d-lang.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6948c7c3d29bf5892299550a19ce615a85ef9b2b/gcc%2Fd%2Fd-lang.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6948c7c3d29bf5892299550a19ce615a85ef9b2b/gcc%2Fd%2Fd-lang.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-lang.cc?ref=6948c7c3d29bf5892299550a19ce615a85ef9b2b", "patch": "@@ -306,7 +306,7 @@ d_init_options (unsigned int, cl_decoded_option *decoded_options)\n   global.params.cplusplus = CppStdRevisionCpp14;\n \n   /* Warnings and deprecations are disabled by default.  */\n-  global.params.useDeprecated = DIAGNOSTICoff;\n+  global.params.useDeprecated = DIAGNOSTICinform;\n   global.params.warnings = DIAGNOSTICoff;\n \n   global.params.imppath = new Strings ();"}, {"sha": "dce36769370411f5a0034b8b0bb6e176b7681927", "filename": "gcc/testsuite/gdc.dg/asm1.d", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6948c7c3d29bf5892299550a19ce615a85ef9b2b/gcc%2Ftestsuite%2Fgdc.dg%2Fasm1.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6948c7c3d29bf5892299550a19ce615a85ef9b2b/gcc%2Ftestsuite%2Fgdc.dg%2Fasm1.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fasm1.d?ref=6948c7c3d29bf5892299550a19ce615a85ef9b2b", "patch": "@@ -13,8 +13,8 @@ void parse2()\n {\n     asm \n     {\n-        \"\" : : \"g\" 1 ? 2 : 3;\n-        \"\" : : \"g\" 1 ? 2 : : 3;\n+        \"\" : : \"g\" (1 ? 2 : 3);\n+        \"\" : : \"g\" (1 ? 2 : :) 3;\n         // { dg-error \"expression expected, not ':'\" \"\" { target *-*-* } .-1 }\n         // { dg-error \"expected constant string constraint for operand\" \"\" { target *-*-* } .-2 }\n     }\n@@ -58,7 +58,7 @@ void semantic1()\n void semantic2a(X...)(X expr)\n {\n     alias X[0] var1;\n-    asm { \"%0\" : \"=m\" var1; }   // { dg-error \"double 'double' is a type, not an lvalue\" }\n+    asm { \"%0\" : \"=m\" (var1); } // { dg-error \"double 'double' is a type, not an lvalue\" }\n }\n \n void semantic2()\n@@ -86,6 +86,6 @@ void semantic4()\n {\n     asm\n     {\n-        \"%0\" : : \"m\" S4.foo;    // { dg-error \"template instance opDispatch!\\\"foo\\\" has no value\" }\n+        \"%0\" : : \"m\" (S4.foo);  // { dg-error \"template instance opDispatch!\\\"foo\\\" has no value\" }\n     }\n }"}, {"sha": "3f92f9b2957403c989fde48b18b43be6ef8a5e75", "filename": "gcc/testsuite/gdc.dg/compilable.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6948c7c3d29bf5892299550a19ce615a85ef9b2b/gcc%2Ftestsuite%2Fgdc.dg%2Fcompilable.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6948c7c3d29bf5892299550a19ce615a85ef9b2b/gcc%2Ftestsuite%2Fgdc.dg%2Fcompilable.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fcompilable.d?ref=6948c7c3d29bf5892299550a19ce615a85ef9b2b", "patch": "@@ -250,7 +250,7 @@ class C204 : I204\n // https://bugzilla.gdcproject.org/show_bug.cgi?id=241\n \n import imports.gdc241a;\n-import imports.gdc241b : S241, C241, E241, N241;\n+public import imports.gdc241b : S241, C241, E241, N241;\n \n /******************************************/\n // https://bugzilla.gdcproject.org/show_bug.cgi?id=242"}, {"sha": "91737609f100bf34f6c427854d4a1d397e81b304", "filename": "gcc/testsuite/gdc.dg/lto/ltotests_0.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6948c7c3d29bf5892299550a19ce615a85ef9b2b/gcc%2Ftestsuite%2Fgdc.dg%2Flto%2Fltotests_0.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6948c7c3d29bf5892299550a19ce615a85ef9b2b/gcc%2Ftestsuite%2Fgdc.dg%2Flto%2Fltotests_0.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Flto%2Fltotests_0.d?ref=6948c7c3d29bf5892299550a19ce615a85ef9b2b", "patch": "@@ -46,7 +46,7 @@ struct S61b\n     {\n         try\n             other.a();\n-        catch\n+        catch (Throwable)\n             other.b();\n     }\n }"}, {"sha": "d974bda8c58fb5dfc4fb797a8d526955cf17a077", "filename": "gcc/testsuite/gdc.dg/runnable.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6948c7c3d29bf5892299550a19ce615a85ef9b2b/gcc%2Ftestsuite%2Fgdc.dg%2Frunnable.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6948c7c3d29bf5892299550a19ce615a85ef9b2b/gcc%2Ftestsuite%2Fgdc.dg%2Frunnable.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Frunnable.d?ref=6948c7c3d29bf5892299550a19ce615a85ef9b2b", "patch": "@@ -243,7 +243,7 @@ void test36b()(char val)\n auto test36c_1()\n {\n     int a;\n-    void c() {};\n+    void c() {}\n     class Result\n     {\n         int b;"}, {"sha": "bcde10514ec685b4d656a7fcab7591752955f8dc", "filename": "libphobos/libdruntime/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6948c7c3d29bf5892299550a19ce615a85ef9b2b/libphobos%2Flibdruntime%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6948c7c3d29bf5892299550a19ce615a85ef9b2b/libphobos%2Flibdruntime%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMERGE?ref=6948c7c3d29bf5892299550a19ce615a85ef9b2b", "patch": "@@ -1,4 +1,4 @@\n-5cc061a8733731d5b40334c0eb7a927b6d6241ce\n+d05ebaad15fbffce6d707c138c84d7b60fcf5ffd\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/druntime repository."}, {"sha": "55869b37c8cb2faf62bae4f808469a1d9674f227", "filename": "libphobos/libdruntime/rt/util/utf.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6948c7c3d29bf5892299550a19ce615a85ef9b2b/libphobos%2Flibdruntime%2Frt%2Futil%2Futf.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6948c7c3d29bf5892299550a19ce615a85ef9b2b/libphobos%2Flibdruntime%2Frt%2Futil%2Futf.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Frt%2Futil%2Futf.d?ref=6948c7c3d29bf5892299550a19ce615a85ef9b2b", "patch": "@@ -651,9 +651,9 @@ string toUTF8(in wchar[] s)\n         else\n         {\n             r.length = i;\n-            foreach (dchar c; s[i .. slen])\n+            foreach (dchar ch; s[i .. slen])\n             {\n-                encode(r, c);\n+                encode(r, ch);\n             }\n             break;\n         }"}, {"sha": "1562f747b74100f0ae3e02592288f55a0df68189", "filename": "libphobos/src/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6948c7c3d29bf5892299550a19ce615a85ef9b2b/libphobos%2Fsrc%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6948c7c3d29bf5892299550a19ce615a85ef9b2b/libphobos%2Fsrc%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2FMERGE?ref=6948c7c3d29bf5892299550a19ce615a85ef9b2b", "patch": "@@ -1,4 +1,4 @@\n-64ed4684fa2a0f2401f5b6df34f6dcb4c3973945\n+021ae0df76727a32809a29887095ab7093489ea3\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/phobos repository."}, {"sha": "13601cb9da9efeacf773be7b055223df8ac9c8ed", "filename": "libphobos/src/std/range/package.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6948c7c3d29bf5892299550a19ce615a85ef9b2b/libphobos%2Fsrc%2Fstd%2Frange%2Fpackage.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6948c7c3d29bf5892299550a19ce615a85ef9b2b/libphobos%2Fsrc%2Fstd%2Frange%2Fpackage.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2Fstd%2Frange%2Fpackage.d?ref=6948c7c3d29bf5892299550a19ce615a85ef9b2b", "patch": "@@ -4874,7 +4874,7 @@ if (allSatisfy!(isInputRange, Ranges))\n     // Just make sure 1-range case instantiates.  This hangs the compiler\n     // when no explicit stopping policy is specified due to Bug 4652.\n     auto stuff = lockstep([1,2,3,4,5], StoppingPolicy.shortest);\n-    foreach (int i, a; stuff)\n+    foreach (i, a; stuff)\n     {\n         assert(stuff[i] == a);\n     }"}, {"sha": "54eaaa6ff5aed94132bdf83617ece4257e19e1c4", "filename": "libphobos/testsuite/libphobos.typeinfo/struct-align.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6948c7c3d29bf5892299550a19ce615a85ef9b2b/libphobos%2Ftestsuite%2Flibphobos.typeinfo%2Fstruct-align.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6948c7c3d29bf5892299550a19ce615a85ef9b2b/libphobos%2Ftestsuite%2Flibphobos.typeinfo%2Fstruct-align.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Ftestsuite%2Flibphobos.typeinfo%2Fstruct-align.d?ref=6948c7c3d29bf5892299550a19ce615a85ef9b2b", "patch": "@@ -2,7 +2,7 @@ module structalign;\n \n void main ()\n {\n-    struct K { int *a; };\n+    struct K { int *a; }\n     K k;\n     auto ti = typeid (k);\n "}]}