{"sha": "75e75a087d4aca27ced05a540a858358301eee92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVlNzVhMDg3ZDRhY2EyN2NlZDA1YTU0MGE4NTgzNTgzMDFlZWU5Mg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2014-05-13T11:18:01Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-05-13T11:18:01Z"}, "message": "re PR libstdc++/60497 (unique_ptr<T> tries to complete its type T even though it's not required to be a complete type)\n\n\tPR libstdc++/60497\n\t* include/std/tuple (get, __tuple_compare): Qualify more calls to\n\tprevent ADL. Cast comparison results to bool.\n\t* testsuite/20_util/tuple/60497.cc: Test accessing rvalues.\n\t* testsuite/20_util/tuple/comparison_operators/overloaded.cc: New.\n\nFrom-SVN: r210366", "tree": {"sha": "bc29694690e0bf0551f94ff7a9cb3edbb5500ee1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc29694690e0bf0551f94ff7a9cb3edbb5500ee1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75e75a087d4aca27ced05a540a858358301eee92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75e75a087d4aca27ced05a540a858358301eee92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75e75a087d4aca27ced05a540a858358301eee92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75e75a087d4aca27ced05a540a858358301eee92/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b77934ee0a2d22031db48fe6ce0f42154ac21dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b77934ee0a2d22031db48fe6ce0f42154ac21dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b77934ee0a2d22031db48fe6ce0f42154ac21dc"}], "stats": {"total": 78, "additions": 72, "deletions": 6}, "files": [{"sha": "9a776d1af62619a428947c9e67efd86a3754d3df", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75e75a087d4aca27ced05a540a858358301eee92/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75e75a087d4aca27ced05a540a858358301eee92/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=75e75a087d4aca27ced05a540a858358301eee92", "patch": "@@ -1,3 +1,11 @@\n+2014-05-13  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/60497\n+\t* include/std/tuple (get, __tuple_compare): Qualify more calls to\n+\tprevent ADL. Cast comparison results to bool.\n+\t* testsuite/20_util/tuple/60497.cc: Test accessing rvalues.\n+\t* testsuite/20_util/tuple/comparison_operators/overloaded.cc: New.\n+\n 2014-05-09  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* config/abi/pre/gnu.ver (GLIBCXX_3.4.20): Correct regex_error export."}, {"sha": "5e8766c3ffdfc5705702aa8589265696abab1160", "filename": "libstdc++-v3/include/std/tuple", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75e75a087d4aca27ced05a540a858358301eee92/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75e75a087d4aca27ced05a540a858358301eee92/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple?ref=75e75a087d4aca27ced05a540a858358301eee92", "patch": "@@ -775,7 +775,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n                     >::type\n     get(tuple<_Elements...>&& __t) noexcept\n     { return std::forward<typename tuple_element<__i,\n-\ttuple<_Elements...>>::type&&>(get<__i>(__t)); }\n+\ttuple<_Elements...>>::type&&>(std::get<__i>(__t)); }\n \n #if __cplusplus > 201103L\n   template<typename _Head, size_t __i, typename... _Tail>\n@@ -815,16 +815,16 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       static constexpr bool \n       __eq(const _Tp& __t, const _Up& __u)\n       {\n-\treturn (get<__i>(__t) == get<__i>(__u) &&\n-\t\t__tuple_compare<0, __i + 1, __j, _Tp, _Up>::__eq(__t, __u));\n+\treturn bool(std::get<__i>(__t) == std::get<__i>(__u))\n+\t  && __tuple_compare<0, __i + 1, __j, _Tp, _Up>::__eq(__t, __u);\n       }\n      \n       static constexpr bool \n       __less(const _Tp& __t, const _Up& __u)\n       {\n-\treturn ((get<__i>(__t) < get<__i>(__u))\n-\t\t|| !(get<__i>(__u) < get<__i>(__t)) &&\n-\t\t__tuple_compare<0, __i + 1, __j, _Tp, _Up>::__less(__t, __u));\n+\treturn bool(std::get<__i>(__t) < std::get<__i>(__u))\n+\t  || !bool(std::get<__i>(__u) < std::get<__i>(__t))\n+\t  && __tuple_compare<0, __i + 1, __j, _Tp, _Up>::__less(__t, __u);\n       }\n     };\n "}, {"sha": "40d053b21681065464dd8decc2252430e1cea2bf", "filename": "libstdc++-v3/testsuite/20_util/tuple/60497.cc", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75e75a087d4aca27ced05a540a858358301eee92/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2F60497.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75e75a087d4aca27ced05a540a858358301eee92/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2F60497.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2F60497.cc?ref=75e75a087d4aca27ced05a540a858358301eee92", "patch": "@@ -35,3 +35,9 @@ auto a = std::get<0>(t);\n auto b = std::get<0>(ct);\n auto c = std::get<element_type>(t);\n auto d = std::get<element_type>(ct);\n+\n+// same again for rvalues\n+auto e = std::get<0>(std::move(t));\n+auto f = std::get<0>(std::move(ct));\n+auto g = std::get<element_type>(std::move(t));\n+auto h = std::get<element_type>(std::move(ct));"}, {"sha": "0a343ae19d5f70909fb2dd1c866d79e9eec989dc", "filename": "libstdc++-v3/testsuite/20_util/tuple/comparison_operators/overloaded.cc", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75e75a087d4aca27ced05a540a858358301eee92/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcomparison_operators%2Foverloaded.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75e75a087d4aca27ced05a540a858358301eee92/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcomparison_operators%2Foverloaded.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftuple%2Fcomparison_operators%2Foverloaded.cc?ref=75e75a087d4aca27ced05a540a858358301eee92", "patch": "@@ -0,0 +1,52 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <tuple>\n+\n+// A type that is contextually convertible to bool but cannot be used with\n+// the usual logical operators, and/or/not.\n+struct TwistedLogic {\n+  bool value;\n+\n+  explicit operator bool() const noexcept { return value; }\n+};\n+\n+template<typename T>\n+bool operator&&(const T&, TwistedLogic) = delete;\n+\n+template<typename T>\n+bool operator&&(TwistedLogic, const T&) = delete;\n+\n+template<typename T>\n+bool operator||(const T&, TwistedLogic) = delete;\n+\n+template<typename T>\n+bool operator||(TwistedLogic, const T&) = delete;\n+\n+bool operator!(TwistedLogic) noexcept = delete;\n+\n+struct Compares {};\n+\n+TwistedLogic operator==(const Compares&, const Compares&) { return {true}; }\n+TwistedLogic operator<(const Compares&, const Compares&) { return {false}; }\n+\n+auto a = std::make_tuple(nullptr, Compares{}, 2, 'U');\n+auto b = a == a;\n+auto c = a < a;"}]}