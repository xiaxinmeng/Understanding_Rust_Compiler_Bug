{"sha": "8256c1bfeb880b42c2ce9744fa1905b4d225d792", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI1NmMxYmZlYjg4MGI0MmMyY2U5NzQ0ZmExOTA1YjRkMjI1ZDc5Mg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-01T13:22:54Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-01T13:22:54Z"}, "message": "[multiple changes]\n\n2011-09-01  Robert Dewar  <dewar@adacore.com>\n\n\t* inline.adb, sem_aggr.adb: Minor reformatting.\n\n2011-09-01  Ed Schonberg  <schonberg@adacore.com>\n\n\t* a-convec.adb: Proper handling of cursors for Ada2012 iterators.\n\nFrom-SVN: r178413", "tree": {"sha": "24c3025319eddf5e9e3deb5b9b0b9724561b5fbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24c3025319eddf5e9e3deb5b9b0b9724561b5fbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8256c1bfeb880b42c2ce9744fa1905b4d225d792", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8256c1bfeb880b42c2ce9744fa1905b4d225d792", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8256c1bfeb880b42c2ce9744fa1905b4d225d792", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8256c1bfeb880b42c2ce9744fa1905b4d225d792/comments", "author": null, "committer": null, "parents": [{"sha": "d1c5f4243e66f7d2c70dcebf88a4d91f2e019bcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1c5f4243e66f7d2c70dcebf88a4d91f2e019bcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1c5f4243e66f7d2c70dcebf88a4d91f2e019bcc"}], "stats": {"total": 29, "additions": 21, "deletions": 8}, "files": [{"sha": "2e1501148c43ae0e195cc5f54dfd5f7087d7015e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8256c1bfeb880b42c2ce9744fa1905b4d225d792/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8256c1bfeb880b42c2ce9744fa1905b4d225d792/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8256c1bfeb880b42c2ce9744fa1905b4d225d792", "patch": "@@ -1,3 +1,11 @@\n+2011-09-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* inline.adb, sem_aggr.adb: Minor reformatting.\n+\n+2011-09-01  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* a-convec.adb: Proper handling of cursors for Ada2012 iterators.\n+\n 2011-09-01  Robert Dewar  <dewar@adacore.com>\n \n \t* prj-proc.adb, exp_ch6.adb, prj-env.adb: Minor reformatting."}, {"sha": "0d39ce15011ac1a831642b8dfb2e1a04cb0fd9c7", "filename": "gcc/ada/a-convec.adb", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8256c1bfeb880b42c2ce9744fa1905b4d225d792/gcc%2Fada%2Fa-convec.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8256c1bfeb880b42c2ce9744fa1905b4d225d792/gcc%2Fada%2Fa-convec.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-convec.adb?ref=8256c1bfeb880b42c2ce9744fa1905b4d225d792", "patch": "@@ -800,9 +800,12 @@ package body Ada.Containers.Vectors is\n    end First;\n \n    function First (Object : Iterator) return Cursor is\n-      C : constant Cursor := (Object.Container, Index_Type'First);\n    begin\n-      return C;\n+      if Is_Empty (Object.Container.all) then\n+         return No_Element;\n+      end if;\n+\n+      return Cursor'(Object.Container, Index_Type'First);\n    end First;\n \n    -------------------\n@@ -2044,8 +2047,7 @@ package body Ada.Containers.Vectors is\n    function Iterate (Container : Vector; Start : Cursor)\n       return Vector_Iterator_Interfaces.Reversible_Iterator'class\n    is\n-      It : constant Iterator :=\n-             (Container'Unchecked_Access, Start.Index);\n+      It : constant Iterator := (Container'Unchecked_Access, Start.Index);\n    begin\n       return It;\n    end Iterate;\n@@ -2064,9 +2066,12 @@ package body Ada.Containers.Vectors is\n    end Last;\n \n    function Last (Object : Iterator) return Cursor is\n-      C : constant Cursor := (Object.Container, Object.Container.Last);\n    begin\n-      return C;\n+      if Is_Empty (Object.Container.all) then\n+         return No_Element;\n+      end if;\n+\n+      return Cursor'(Object.Container, Object.Container.Last);\n    end Last;\n \n    ------------------"}, {"sha": "609c803db692487b6a3c1a43aaaa93de1bacdb77", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8256c1bfeb880b42c2ce9744fa1905b4d225d792/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8256c1bfeb880b42c2ce9744fa1905b4d225d792/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=8256c1bfeb880b42c2ce9744fa1905b4d225d792", "patch": "@@ -341,7 +341,7 @@ package body Inline is\n                if Is_Generic_Instance (Pack) then\n                   null;\n \n-               --  Do not inline the package if the subprogram is an init. proc\n+               --  Do not inline the package if the subprogram is an init proc\n                --  or other internally generated subprogram, because in that\n                --  case the subprogram body appears in the same unit that\n                --  declares the type, and that body is visible to the back end."}, {"sha": "4af133c2367139ef869b65deb5b517f48a5afe58", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8256c1bfeb880b42c2ce9744fa1905b4d225d792/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8256c1bfeb880b42c2ce9744fa1905b4d225d792/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=8256c1bfeb880b42c2ce9744fa1905b4d225d792", "patch": "@@ -1229,7 +1229,7 @@ package body Sem_Aggr is\n \n       elsif Is_Private_Type (Typ)\n         and then Present (Full_View (Typ))\n-        and then (In_Inlined_Body or else In_Instance_Body)\n+        and then (In_Inlined_Body or In_Instance_Body)\n         and then Is_Composite_Type (Full_View (Typ))\n       then\n          Resolve (N, Full_View (Typ));"}]}