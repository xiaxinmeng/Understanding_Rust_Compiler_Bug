{"sha": "0766f2391794b8999026c8b82ce74043fb018e97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc2NmYyMzkxNzk0Yjg5OTkwMjZjOGI4MmNlNzQwNDNmYjAxOGU5Nw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-30T06:03:36Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-30T06:03:36Z"}, "message": "(do_jump): Use do_jump_by_parts_equality for complex compares.\n\nFrom-SVN: r5938", "tree": {"sha": "cd6159ed4dc610860981d4e3f185b0b50988463c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd6159ed4dc610860981d4e3f185b0b50988463c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0766f2391794b8999026c8b82ce74043fb018e97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0766f2391794b8999026c8b82ce74043fb018e97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0766f2391794b8999026c8b82ce74043fb018e97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0766f2391794b8999026c8b82ce74043fb018e97/comments", "author": null, "committer": null, "parents": [{"sha": "22128dafd5382d8c8df73a202f3274a7f6a27e35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22128dafd5382d8c8df73a202f3274a7f6a27e35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22128dafd5382d8c8df73a202f3274a7f6a27e35"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "0b1eb55f71c4d4c028b13d5946330a869c700930", "filename": "gcc/expr.c", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0766f2391794b8999026c8b82ce74043fb018e97/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0766f2391794b8999026c8b82ce74043fb018e97/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=0766f2391794b8999026c8b82ce74043fb018e97", "patch": "@@ -8294,10 +8294,12 @@ do_jump (exp, if_false_label, if_true_label)\n     case EQ_EXPR:\n       if (integer_zerop (TREE_OPERAND (exp, 1)))\n \tdo_jump (TREE_OPERAND (exp, 0), if_true_label, if_false_label);\n-      else if ((GET_MODE_CLASS (TYPE_MODE (TREE_TYPE (TREE_OPERAND (exp, 0))))\n-\t\t== MODE_INT)\n-\t       && \n-\t       !can_compare_p (TYPE_MODE (TREE_TYPE (TREE_OPERAND (exp, 0)))))\n+      else if (((GET_MODE_CLASS (TYPE_MODE (TREE_TYPE (TREE_OPERAND (exp, 0))))\n+\t\t == MODE_INT)\n+\t\t&& \n+\t\t!can_compare_p (TYPE_MODE (TREE_TYPE (TREE_OPERAND (exp, 0)))))\n+\t       || GET_MODE_CLASS (TYPE_MODE (TREE_TYPE (TREE_OPERAND (exp, 0)))) == MODE_COMPLEX_FLOAT\n+\t       || GET_MODE_CLASS (TYPE_MODE (TREE_TYPE (TREE_OPERAND (exp, 0)))) == MODE_COMPLEX_INT)\n \tdo_jump_by_parts_equality (exp, if_false_label, if_true_label);\n       else\n \tcomparison = compare (exp, EQ, EQ);\n@@ -8306,10 +8308,12 @@ do_jump (exp, if_false_label, if_true_label)\n     case NE_EXPR:\n       if (integer_zerop (TREE_OPERAND (exp, 1)))\n \tdo_jump (TREE_OPERAND (exp, 0), if_false_label, if_true_label);\n-      else if ((GET_MODE_CLASS (TYPE_MODE (TREE_TYPE (TREE_OPERAND (exp, 0))))\n-\t\t== MODE_INT)\n-\t       && \n-\t       !can_compare_p (TYPE_MODE (TREE_TYPE (TREE_OPERAND (exp, 0)))))\n+      else if (((GET_MODE_CLASS (TYPE_MODE (TREE_TYPE (TREE_OPERAND (exp, 0))))\n+\t\t == MODE_INT)\n+\t\t&& \n+\t\t!can_compare_p (TYPE_MODE (TREE_TYPE (TREE_OPERAND (exp, 0)))))\n+\t       || GET_MODE_CLASS (TYPE_MODE (TREE_TYPE (TREE_OPERAND (exp, 0)))) == MODE_COMPLEX_FLOAT\n+\t       || GET_MODE_CLASS (TYPE_MODE (TREE_TYPE (TREE_OPERAND (exp, 0)))) == MODE_COMPLEX_INT)\n \tdo_jump_by_parts_equality (exp, if_true_label, if_false_label);\n       else\n \tcomparison = compare (exp, NE, NE);"}]}