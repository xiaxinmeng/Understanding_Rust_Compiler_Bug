{"sha": "fa76f2c63032aaa2214c015d7d5f33257bd3ed66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE3NmYyYzYzMDMyYWFhMjIxNGMwMTVkN2Q1ZjMzMjU3YmQzZWQ2Ng==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2016-08-06T00:07:05Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2016-08-06T00:07:05Z"}, "message": "Harmonize diagnostics for invalid reference binding\n\ngcc/cp:\n\n\t* call.c (convert_like_real): Harmonize diagnostics for invalid\n\treference binding.\n\ngcc/testsuite:\n\n\t* call.c (convert_like_real): Harmonize diagnostics for invalid\n\treference binding.\n\t* g++.dg/conversion/pr16333.C: Adjust dg-error regexp.\n\t* g++.dg/conversion/pr41426.C: Likewise.\n\t* g++.dg/conversion/pr66211.C: Likewise.\n\t* g++.dg/cpp1y/lambda-init9.C: Likewise.\n\t* g++.dg/init/ref8.C: Likewise.\n\t* g++.old-deja/g++.law/cvt20.C: Likewise.\n\t* g++.old-deja/g++.mike/p9732c.C: Likewise.\n\nFrom-SVN: r239184", "tree": {"sha": "ea519a736c6f4389516d7420be5eb3f11c936b41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea519a736c6f4389516d7420be5eb3f11c936b41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa76f2c63032aaa2214c015d7d5f33257bd3ed66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa76f2c63032aaa2214c015d7d5f33257bd3ed66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa76f2c63032aaa2214c015d7d5f33257bd3ed66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa76f2c63032aaa2214c015d7d5f33257bd3ed66/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e9f67e6a2c13e7e78d1e34dadfdc8d96176e9fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e9f67e6a2c13e7e78d1e34dadfdc8d96176e9fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e9f67e6a2c13e7e78d1e34dadfdc8d96176e9fe"}], "stats": {"total": 41, "additions": 28, "deletions": 13}, "files": [{"sha": "4efbc7b153ffebf55328bcbff300baa3216984f2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa76f2c63032aaa2214c015d7d5f33257bd3ed66/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa76f2c63032aaa2214c015d7d5f33257bd3ed66/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fa76f2c63032aaa2214c015d7d5f33257bd3ed66", "patch": "@@ -1,3 +1,8 @@\n+2016-08-06  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* call.c (convert_like_real): Harmonize diagnostics for invalid\n+\treference binding.\n+\n 2016-08-05 Martin Sebor  <msebor@redhat.com>\n \n \t* constexpr.c (cxx_eval_store_expression): Remove hyphen from"}, {"sha": "918661ab786769698e4130ffff5a3af62920ce39", "filename": "gcc/cp/call.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa76f2c63032aaa2214c015d7d5f33257bd3ed66/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa76f2c63032aaa2214c015d7d5f33257bd3ed66/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=fa76f2c63032aaa2214c015d7d5f33257bd3ed66", "patch": "@@ -6710,15 +6710,15 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n \t    tree extype = TREE_TYPE (expr);\n \t    if (TYPE_REF_IS_RVALUE (ref_type)\n \t\t&& lvalue_p (expr))\n-\t      error_at (loc, \"cannot bind %qT lvalue to %qT\",\n-\t\t\textype, totype);\n+\t      error_at (loc, \"cannot bind rvalue reference of type %qT to \"\n+                        \"lvalue of type %qT\", totype, extype);\n \t    else if (!TYPE_REF_IS_RVALUE (ref_type) && !lvalue_p (expr)\n \t\t     && !CP_TYPE_CONST_NON_VOLATILE_P (TREE_TYPE (ref_type)))\n-\t      error_at (loc, \"invalid initialization of non-const reference of \"\n-\t\t\t\"type %qT from an rvalue of type %qT\", totype, extype);\n+\t      error_at (loc, \"cannot bind non-const lvalue reference of \"\n+\t\t\t\"type %qT to an rvalue of type %qT\", totype, extype);\n \t    else if (!reference_compatible_p (TREE_TYPE (totype), extype))\n-\t      error_at (loc, \"binding %qT to reference of type %qT \"\n-\t\t\t\"discards qualifiers\", extype, totype);\n+\t      error_at (loc, \"binding reference of type %qT to %qT \"\n+\t\t\t\"discards qualifiers\", totype, extype);\n \t    else\n \t      gcc_unreachable ();\n \t    maybe_print_user_conv_context (convs);"}, {"sha": "06d6bae6b5a8620bf90c7f836cc79f466fa2f65a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa76f2c63032aaa2214c015d7d5f33257bd3ed66/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa76f2c63032aaa2214c015d7d5f33257bd3ed66/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fa76f2c63032aaa2214c015d7d5f33257bd3ed66", "patch": "@@ -1,3 +1,13 @@\n+2016-08-06  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* g++.dg/conversion/pr16333.C: Adjust dg-error regexp.\n+\t* g++.dg/conversion/pr41426.C: Likewise.\n+\t* g++.dg/conversion/pr66211.C: Likewise.\n+\t* g++.dg/cpp1y/lambda-init9.C: Likewise.\n+\t* g++.dg/init/ref8.C: Likewise.\n+\t* g++.old-deja/g++.law/cvt20.C: Likewise.\n+\t* g++.old-deja/g++.mike/p9732c.C: Likewise.\n+\n 2016-08-05  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \tPR tree-optimization/18046"}, {"sha": "a00bc5c167c4ed6250e4160b2614e742a271b8ee", "filename": "gcc/testsuite/g++.dg/conversion/pr16333.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa76f2c63032aaa2214c015d7d5f33257bd3ed66/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fpr16333.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa76f2c63032aaa2214c015d7d5f33257bd3ed66/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fpr16333.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fpr16333.C?ref=fa76f2c63032aaa2214c015d7d5f33257bd3ed66", "patch": "@@ -7,4 +7,4 @@ struct X {\n int a[3];\n X foo1 () { return a; }\n const X &foo2 () { return a; } // { dg-warning \"returning reference to temporary\" }\n-X &foo3 () { return a; } // { dg-error \"invalid initialization\" }\n+X &foo3 () { return a; } // { dg-error \"cannot bind non-const lvalue ref\" }"}, {"sha": "5493a91ecfad23915fa3ad5ba6c4066e6cdfcd69", "filename": "gcc/testsuite/g++.dg/conversion/pr41426.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa76f2c63032aaa2214c015d7d5f33257bd3ed66/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fpr41426.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa76f2c63032aaa2214c015d7d5f33257bd3ed66/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fpr41426.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fpr41426.C?ref=fa76f2c63032aaa2214c015d7d5f33257bd3ed66", "patch": "@@ -23,7 +23,7 @@ const A<float> &g3()\n A<float> &g4()\n {\n    float f[] = {1.1f, 2.3f};\n-   return f; // { dg-error \"invalid initialization\" }\n+   return f; // { dg-error \"cannot bind non-const lvalue ref\" }\n }\n \n struct B"}, {"sha": "770e8a0e20f26445ee4b34d69263aac7e022d4fa", "filename": "gcc/testsuite/g++.dg/conversion/pr66211.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa76f2c63032aaa2214c015d7d5f33257bd3ed66/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fpr66211.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa76f2c63032aaa2214c015d7d5f33257bd3ed66/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fpr66211.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fpr66211.C?ref=fa76f2c63032aaa2214c015d7d5f33257bd3ed66", "patch": "@@ -7,5 +7,5 @@ int main()\n {\n   int x = 0;\n   double y = 1;\n-  f(1 > 0 ? x : y); // { dg-error \"from an rvalue\" }\n+  f(1 > 0 ? x : y); // { dg-error \"cannot bind .* to an rvalue\" }\n }"}, {"sha": "795d036ca7566a58a70270348489b7035eef8654", "filename": "gcc/testsuite/g++.dg/cpp1y/lambda-init9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa76f2c63032aaa2214c015d7d5f33257bd3ed66/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-init9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa76f2c63032aaa2214c015d7d5f33257bd3ed66/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-init9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-init9.C?ref=fa76f2c63032aaa2214c015d7d5f33257bd3ed66", "patch": "@@ -2,5 +2,5 @@\n \n void f()\n {\n-  [&x=1]{};   // { dg-error \"cannot capture|invalid initialization\" }\n+  [&x=1]{};   // { dg-error \"cannot capture|cannot bind non-const lvalue ref\" }\n }"}, {"sha": "5b68a2f003315de0e06b73a8934273be28173db0", "filename": "gcc/testsuite/g++.dg/init/ref8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa76f2c63032aaa2214c015d7d5f33257bd3ed66/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fref8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa76f2c63032aaa2214c015d7d5f33257bd3ed66/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fref8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fref8.C?ref=fa76f2c63032aaa2214c015d7d5f33257bd3ed66", "patch": "@@ -6,5 +6,5 @@ A operator*(A, A);\n \n A& operator+=(A& a, const A& b)\n {\n-   return a = a * b;            // { dg-error \"non-const reference\" }\n+   return a = a * b;            // { dg-error \"non-const lvalue reference\" }\n }"}, {"sha": "97b465fe06f4fd38c775846fc7ceb2372fb5f03b", "filename": "gcc/testsuite/g++.old-deja/g++.law/cvt20.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa76f2c63032aaa2214c015d7d5f33257bd3ed66/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcvt20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa76f2c63032aaa2214c015d7d5f33257bd3ed66/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcvt20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcvt20.C?ref=fa76f2c63032aaa2214c015d7d5f33257bd3ed66", "patch": "@@ -16,5 +16,5 @@ void f(const char *& x) // { dg-message \"argument\" }\n \n int main()\n {\n-  f (\"foo\"); // { dg-error \"invalid initialization\" }\n+  f (\"foo\"); // { dg-error \"cannot bind non-const lvalue reference\" }\n }"}, {"sha": "247d372de7dcfb7a05df45ef1b7092a6ddd9efc1", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p9732c.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa76f2c63032aaa2214c015d7d5f33257bd3ed66/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp9732c.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa76f2c63032aaa2214c015d7d5f33257bd3ed66/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp9732c.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp9732c.C?ref=fa76f2c63032aaa2214c015d7d5f33257bd3ed66", "patch": "@@ -2,4 +2,4 @@\n // prms-id: 9732\n \n struct foo {};\n-foo& x() { return foo(); }\t// { dg-error \"invalid init\" } \n+foo& x() { return foo(); }\t// { dg-error \"cannot bind non-const lvalue\" } "}]}