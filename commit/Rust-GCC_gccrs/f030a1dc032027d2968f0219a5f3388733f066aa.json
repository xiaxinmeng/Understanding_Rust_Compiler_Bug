{"sha": "f030a1dc032027d2968f0219a5f3388733f066aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjAzMGExZGMwMzIwMjdkMjk2OGYwMjE5YTVmMzM4ODczM2YwNjZhYQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-03-08T22:37:04Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-03-08T22:37:04Z"}, "message": "re PR c++/51412 ([c++0x] Broken diagnostic with invalid lambda expressions)\n\n/cp\n2013-03-08  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/51412\n\t* cxx-pretty-print.c (pp_cxx_expression): Handle LAMBDA_EXPR.\n\t* error.c (dump_expr): Likewise.\n\n/testsuite\n2013-03-08  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/51412\n\t* g++.dg/cpp0x/lambda/lambda-err3.C: New.\n\nFrom-SVN: r196563", "tree": {"sha": "c43dd61b568420d91d076694442c864d4503598c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c43dd61b568420d91d076694442c864d4503598c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f030a1dc032027d2968f0219a5f3388733f066aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f030a1dc032027d2968f0219a5f3388733f066aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f030a1dc032027d2968f0219a5f3388733f066aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f030a1dc032027d2968f0219a5f3388733f066aa/comments", "author": null, "committer": null, "parents": [{"sha": "b7a786830fe9ca83ad84ba17ea657ec847089e3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7a786830fe9ca83ad84ba17ea657ec847089e3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7a786830fe9ca83ad84ba17ea657ec847089e3a"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "f09fa0a8327c5f9cba3ac9db455bb115910c1d66", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f030a1dc032027d2968f0219a5f3388733f066aa/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f030a1dc032027d2968f0219a5f3388733f066aa/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f030a1dc032027d2968f0219a5f3388733f066aa", "patch": "@@ -1,3 +1,9 @@\n+2013-03-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/51412\n+\t* cxx-pretty-print.c (pp_cxx_expression): Handle LAMBDA_EXPR.\n+\t* error.c (dump_expr): Likewise.\n+\n 2013-03-08  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/51884"}, {"sha": "45ad20cd9a996fcd03cff47d2e997b80386e12f7", "filename": "gcc/cp/cxx-pretty-print.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f030a1dc032027d2968f0219a5f3388733f066aa/gcc%2Fcp%2Fcxx-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f030a1dc032027d2968f0219a5f3388733f066aa/gcc%2Fcp%2Fcxx-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcxx-pretty-print.c?ref=f030a1dc032027d2968f0219a5f3388733f066aa", "patch": "@@ -1162,6 +1162,10 @@ pp_cxx_expression (cxx_pretty_printer *pp, tree t)\n \t  }\n       }\n       break;\n+      \n+    case LAMBDA_EXPR:\n+      pp_cxx_ws_string (pp, \"<lambda>\");\n+      break;\n \n     default:\n       pp_c_expression (pp_c_base (pp), t);"}, {"sha": "c2bf54dcb2caa5af739d70fa1bfd9df084235cdc", "filename": "gcc/cp/error.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f030a1dc032027d2968f0219a5f3388733f066aa/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f030a1dc032027d2968f0219a5f3388733f066aa/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=f030a1dc032027d2968f0219a5f3388733f066aa", "patch": "@@ -2494,6 +2494,10 @@ dump_expr (tree t, int flags)\n       dump_expr (resolve_virtual_fun_from_obj_type_ref (t), flags);\n       break;\n \n+    case LAMBDA_EXPR:\n+      pp_string (cxx_pp, M_(\"<lambda>\"));\n+      break;\n+\n       /*  This list is incomplete, but should suffice for now.\n \t  It is very important that `sorry' does not call\n \t  `report_error_function'.  That could cause an infinite loop.  */"}, {"sha": "544d7fc134a2a06b887cffd0deeb2fb387f01c63", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f030a1dc032027d2968f0219a5f3388733f066aa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f030a1dc032027d2968f0219a5f3388733f066aa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f030a1dc032027d2968f0219a5f3388733f066aa", "patch": "@@ -1,3 +1,8 @@\n+2013-03-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/51412\n+\t* g++.dg/cpp0x/lambda/lambda-err3.C: New.\n+\n 2013-03-08  Marek Polacek  <polacek@redhat.com>\n \n \tPR tree-optimization/56478"}, {"sha": "fec01acb6b60cd02339c9e7b84b756667b2d8229", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-err3.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f030a1dc032027d2968f0219a5f3388733f066aa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-err3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f030a1dc032027d2968f0219a5f3388733f066aa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-err3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-err3.C?ref=f030a1dc032027d2968f0219a5f3388733f066aa", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/51412\n+// { dg-do compile { target c++11 } }\n+\n+void foo(int);\n+\n+template<int> void bar()\n+{\n+  foo([]{}...);      // { dg-error \"<lambda>\" }\n+  foo([]{}=0 ...);   // { dg-error \"<lambda>\" }\n+}"}]}