{"sha": "391f61d92883e54552f566538e93330049ee27b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzkxZjYxZDkyODgzZTU0NTUyZjU2NjUzOGU5MzMzMDA0OWVlMjdiNg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-11-28T18:36:14Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-11-28T18:36:14Z"}, "message": "alpha.md (sibcall_osf_1, [...]): Use symbolic_operand as the predicate.\n\n        * config/alpha/alpha.md (sibcall_osf_1, sibcall_value_osf_1): Use\n        symbolic_operand as the predicate.\n\nFrom-SVN: r47424", "tree": {"sha": "3883b5c62010ca1ddeca9de6e4447144ec27b4ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3883b5c62010ca1ddeca9de6e4447144ec27b4ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/391f61d92883e54552f566538e93330049ee27b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/391f61d92883e54552f566538e93330049ee27b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/391f61d92883e54552f566538e93330049ee27b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/391f61d92883e54552f566538e93330049ee27b6/comments", "author": null, "committer": null, "parents": [{"sha": "e6dc3aa0ee1e616a385d12371a6965ab83b2238b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6dc3aa0ee1e616a385d12371a6965ab83b2238b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6dc3aa0ee1e616a385d12371a6965ab83b2238b"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "799e36a1a55ce01ec776fe608395b9d04e82badd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/391f61d92883e54552f566538e93330049ee27b6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/391f61d92883e54552f566538e93330049ee27b6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=391f61d92883e54552f566538e93330049ee27b6", "patch": "@@ -1,3 +1,8 @@\n+2001-11-28  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/alpha/alpha.md (sibcall_osf_1, sibcall_value_osf_1): Use\n+\tsymbolic_operand as the predicate.\n+\n 2001-11-28  Richard Henderson  <rth@redhat.com>\n \n \t* doloop.c (doloop_modify_runtime): Properly select induction"}, {"sha": "c809d6c00f4d2810a36113112f24955e89616b30", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/391f61d92883e54552f566538e93330049ee27b6/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/391f61d92883e54552f566538e93330049ee27b6/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=391f61d92883e54552f566538e93330049ee27b6", "patch": "@@ -4840,11 +4840,10 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi\"\n   [(set_attr \"type\" \"jsr\")\n    (set_attr \"length\" \"12,*,16\")])\n \n-;; Need 's' alternative for OSF/1, which implements profiling via linker\n-;; tricks.  Note that the DEC assembler expands \"jmp foo\" with $at, which\n+;; Note that the DEC assembler expands \"jmp foo\" with $at, which\n ;; doesn't do what we want.\n (define_insn \"*sibcall_osf_1\"\n-  [(call (mem:DI (match_operand:DI 0 \"current_file_function_operand\" \"R,s\"))\n+  [(call (mem:DI (match_operand:DI 0 \"symbolic_operand\" \"R,s\"))\n \t (match_operand 1 \"\" \"\"))\n    (use (reg:DI 29))]\n   \"TARGET_ABI_OSF\"\n@@ -6800,11 +6799,9 @@ fadd,fmul,fcpys,fdiv,fsqrt,misc,mvi,ftoi,itof,multi\"\n   [(set_attr \"type\" \"jsr\")\n    (set_attr \"length\" \"12,*,16\")])\n \n-;; Need 's' alternative for OSF/1, which implements profiling\n-;; via linker tricks.\n (define_insn \"*sibcall_value_osf_1\"\n   [(set (match_operand 0 \"\" \"\")\n-\t(call (mem:DI (match_operand:DI 1 \"current_file_function_operand\" \"R,s\"))\n+\t(call (mem:DI (match_operand:DI 1 \"symbolic_operand\" \"R,s\"))\n \t      (match_operand 2 \"\" \"\")))\n    (use (reg:DI 29))]\n   \"TARGET_ABI_OSF\""}]}