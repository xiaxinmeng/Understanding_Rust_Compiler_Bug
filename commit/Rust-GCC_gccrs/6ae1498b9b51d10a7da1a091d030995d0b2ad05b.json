{"sha": "6ae1498b9b51d10a7da1a091d030995d0b2ad05b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFlMTQ5OGI5YjUxZDEwYTdkYTFhMDkxZDAzMDk5NWQwYjJhZDA1Yg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-05-11T18:34:32Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-05-11T18:34:32Z"}, "message": "(LOCAL_LABEL_PREFIX, USER_LABEL_PREFIX): Define.\n\n(PUT_SDB_BLOCK_START, PUT_SDB_BLOCK_END, ASM_OUTPUT_LABEL_REF,\nASM_OUTPUT_INTERNAL_LABEL, ASM_GENERATE_INTERNAL_LABEL,\nASM_OUTPUT_ADDR_VEC_ELT, ASM_OUTPUT_ADDR_DIFF_ELT): Use them.\n\nFrom-SVN: r9621", "tree": {"sha": "267e3b7bb187c7c431626e8a7baa6be438cab758", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/267e3b7bb187c7c431626e8a7baa6be438cab758"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ae1498b9b51d10a7da1a091d030995d0b2ad05b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ae1498b9b51d10a7da1a091d030995d0b2ad05b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ae1498b9b51d10a7da1a091d030995d0b2ad05b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ae1498b9b51d10a7da1a091d030995d0b2ad05b/comments", "author": null, "committer": null, "parents": [{"sha": "dccc9e8544fc89edb04ed9de2141fe71e70cf3ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dccc9e8544fc89edb04ed9de2141fe71e70cf3ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dccc9e8544fc89edb04ed9de2141fe71e70cf3ae"}], "stats": {"total": 42, "additions": 32, "deletions": 10}, "files": [{"sha": "afe2533568727ec83b26044cd640c9fefdb13a6a", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 32, "deletions": 10, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ae1498b9b51d10a7da1a091d030995d0b2ad05b/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ae1498b9b51d10a7da1a091d030995d0b2ad05b/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=6ae1498b9b51d10a7da1a091d030995d0b2ad05b", "patch": "@@ -755,6 +755,21 @@ while (0)\n #define ASM_STABN_OP\t((TARGET_GAS) ? \".stabn\" : \" #.stabn\")\n #define ASM_STABD_OP\t((TARGET_GAS) ? \".stabd\" : \" #.stabd\")\n \n+/* Local compiler-generated symbols must have a prefix that the assembler\n+   understands.   By default, this is $, although some targets (e.g.,\n+   NetBSD-ELF) need to override this. */\n+\n+#ifndef LOCAL_LABEL_PREFIX\n+#define LOCAL_LABEL_PREFIX\t\"$\"\n+#endif\n+\n+/* By default on the mips, external symbols do not have an underscore\n+   prepended, but some targets (e.g., NetBSD) require this. */\n+\n+#ifndef USER_LABEL_PREFIX\n+#define USER_LABEL_PREFIX\t\"\"\n+#endif\n+\n /* Forward references to tags are allowed.  */\n #define SDB_ALLOW_FORWARD_REFERENCES\n \n@@ -872,9 +887,11 @@ do {\t\t\t\t\t\t\t\\\n do {\t\t\t\t\t\t\t\\\n   extern FILE *asm_out_text_file;\t\t\t\\\n   fprintf (asm_out_text_file,\t\t\t\t\\\n-\t   \"$Lb%d:\\n\\t%s.begin\\t$Lb%d\\t%d\\n\",\t\t\\\n+\t   \"%sLb%d:\\n\\t%s.begin\\t%sLb%d\\t%d\\n\",\t\t\\\n+\t   LOCAL_LABEL_PREFIX,\t\t\t\t\\\n \t   sdb_label_count,\t\t\t\t\\\n \t   (TARGET_GAS) ? \"\" : \"#\",\t\t\t\\\n+\t   LOCAL_LABEL_PREFIX,\t\t\t\t\\\n \t   sdb_label_count,\t\t\t\t\\\n \t   (LINE));\t\t\t\t\t\\\n   sdb_label_count++;\t\t\t\t\t\\\n@@ -884,9 +901,11 @@ do {\t\t\t\t\t\t\t\\\n do {\t\t\t\t\t\t\t\\\n   extern FILE *asm_out_text_file;\t\t\t\\\n   fprintf (asm_out_text_file,\t\t\t\t\\\n-\t   \"$Le%d:\\n\\t%s.bend\\t$Le%d\\t%d\\n\",\t\t\\\n+\t   \"%sLe%d:\\n\\t%s.bend\\t%sLe%d\\t%d\\n\",\t\t\\\n+\t   LOCAL_LABEL_PREFIX,\t\t\t\t\\\n \t   sdb_label_count,\t\t\t\t\\\n \t   (TARGET_GAS) ? \"\" : \"#\",\t\t\t\\\n+\t   LOCAL_LABEL_PREFIX,\t\t\t\t\\\n \t   sdb_label_count,\t\t\t\t\\\n \t   (LINE));\t\t\t\t\t\\\n   sdb_label_count++;\t\t\t\t\t\\\n@@ -3426,21 +3445,22 @@ while (0)\n /* This is how to output a reference to a user-level label named NAME.\n    `assemble_name' uses this.  */\n \n-#define ASM_OUTPUT_LABELREF(STREAM,NAME) fprintf (STREAM, \"%s\", NAME)\n+#define ASM_OUTPUT_LABELREF(STREAM,NAME) \t\t\t\t\\\n+  fprintf (STREAM, \"%s%s\", USER_LABEL_PREFIX, NAME)\n \n /* This is how to output an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */\n \n #define ASM_OUTPUT_INTERNAL_LABEL(STREAM,PREFIX,NUM)\t\t\t\\\n-  fprintf (STREAM, \"$%s%d:\\n\", PREFIX, NUM)\n+  fprintf (STREAM, \"%s%s%d:\\n\", LOCAL_LABEL_PREFIX, PREFIX, NUM)\n \n /* This is how to store into the string LABEL\n    the symbol_ref name of an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.\n    This is suitable for output with `assemble_name'.  */\n \n #define ASM_GENERATE_INTERNAL_LABEL(LABEL,PREFIX,NUM)\t\t\t\\\n-  sprintf (LABEL, \"*$%s%d\", PREFIX, NUM)\n+  sprintf (LABEL, \"*%s%s%d\", LOCAL_LABEL_PREFIX, PREFIX, NUM)\n \n /* This is how to output an assembler line defining a `double' constant.  */\n \n@@ -3504,8 +3524,9 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* This is how to output an element of a case-vector that is absolute.  */\n \n #define ASM_OUTPUT_ADDR_VEC_ELT(STREAM, VALUE)\t\t\t\t\\\n-  fprintf (STREAM, \"\\t%s\\t$L%d\\n\",\t\t\t\t\t\\\n+  fprintf (STREAM, \"\\t%s\\t%sL%d\\n\",\t\t\t\t\t\\\n \t   TARGET_LONG64 ? \".dword\" : \".word\",\t\t\t\t\\\n+\t   LOCAL_LABEL_PREFIX,\t\t\t\t\t\t\\\n \t   VALUE)\n \n /* This is how to output an element of a case-vector that is relative.\n@@ -3515,14 +3536,15 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define ASM_OUTPUT_ADDR_DIFF_ELT(STREAM, VALUE, REL)\t\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n   if (TARGET_EMBEDDED_PIC)\t\t\t\t\t\t\\\n-    fprintf (STREAM, \"\\t%s\\t$L%d-$LS%d\\n\",\t\t\t\t\\\n+    fprintf (STREAM, \"\\t%s\\t%sL%d-%sLS%d\\n\",\t\t\t\t\\\n \t     TARGET_LONG64 ? \".dword\" : \".word\",\t\t\t\\\n-\t     VALUE, REL);\t\t\t\t\t\t\\\n+\t     LOCAL_LABEL_PREFIX, VALUE, LOCAL_LABEL_PREFIX, REL);\t\\\n   else if (! ABI_64BIT)\t\t\t\t\t\t\t\\\n-    fprintf (STREAM, \"\\t%s\\t$L%d\\n\",\t\t\t\t\t\\\n+    fprintf (STREAM, \"\\t%s\\t%sL%d\\n\",\t\t\t\t\t\\\n \t     TARGET_LONG64 ? \".gpdword\" : \".gpword\",\t\t\t\\\n-\t     VALUE);\t\t\t\t\t\t\t\\\n+\t     LOCAL_LABEL_PREFIX, VALUE);\t\t\t\t\\\n   else\t\t\t\t\t\t\t\t\t\\\n+    /* ??? Why does this one use . and not LOCAL_LABEL_PREFIX?  */\t\\\n     fprintf (STREAM, \"\\t%s\\t.L%d\\n\",\t\t\t\t\t\\\n \t     TARGET_LONG64 ? \".dword\" : \".word\",\t\t\t\\\n \t     VALUE);\t\t\t\t\t\t\t\\"}]}