{"sha": "9ef7adc086571bf7d2d3664dc7cdeaee27fc3a9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWVmN2FkYzA4NjU3MWJmN2QyZDM2NjRkYzdjZGVhZWUyN2ZjM2E5Yg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-06-18T14:05:27Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-06-18T14:05:27Z"}, "message": "re PR tree-optimization/53693 (ICE in vect_get_vec_def_for_stmt_copy, at tree-vect-stmts.c:1438)\n\n2012-06-18  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/53693\n\t* tree-vect-patterns.c (vect_operation_fits_smaller_type):\n\tReject operands with more than one use.\n\n\t* g++.dg/torture/pr53693.C: New testcase.\n\nFrom-SVN: r188733", "tree": {"sha": "63fda7b3c2847615a9a2cc1f82d7ccaca1f96618", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63fda7b3c2847615a9a2cc1f82d7ccaca1f96618"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ef7adc086571bf7d2d3664dc7cdeaee27fc3a9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ef7adc086571bf7d2d3664dc7cdeaee27fc3a9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ef7adc086571bf7d2d3664dc7cdeaee27fc3a9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ef7adc086571bf7d2d3664dc7cdeaee27fc3a9b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9b10be32fd3295d086c4a4cef68e9139a7a07f85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b10be32fd3295d086c4a4cef68e9139a7a07f85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b10be32fd3295d086c4a4cef68e9139a7a07f85"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "8355d02452b8ed1f29794d6fa9a0c88085a392d1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef7adc086571bf7d2d3664dc7cdeaee27fc3a9b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef7adc086571bf7d2d3664dc7cdeaee27fc3a9b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9ef7adc086571bf7d2d3664dc7cdeaee27fc3a9b", "patch": "@@ -1,3 +1,9 @@\n+2012-06-18  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/53693\n+\t* tree-vect-patterns.c (vect_operation_fits_smaller_type):\n+\tReject operands with more than one use.\n+\n 2012-06-18  Bill Schmidt  <wschmidt@linux.ibm.com>\n \n \tPR tree-optimization/53703"}, {"sha": "392e603df88b4b5ea2baa2fe59e8a1336689e8d7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef7adc086571bf7d2d3664dc7cdeaee27fc3a9b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef7adc086571bf7d2d3664dc7cdeaee27fc3a9b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9ef7adc086571bf7d2d3664dc7cdeaee27fc3a9b", "patch": "@@ -1,3 +1,8 @@\n+2012-06-18  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/53693\n+\t* g++.dg/torture/pr53693.C: New testcase.\n+\n 2012-06-18  Bill Schmidt  <wschmidt@linux.ibm.com>\n \n \tPR tree-optimization/53703"}, {"sha": "b67a484b9690a4cdabc820eaa95dc1cd25b681c4", "filename": "gcc/testsuite/g++.dg/torture/pr53693.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef7adc086571bf7d2d3664dc7cdeaee27fc3a9b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr53693.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef7adc086571bf7d2d3664dc7cdeaee27fc3a9b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr53693.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr53693.C?ref=9ef7adc086571bf7d2d3664dc7cdeaee27fc3a9b", "patch": "@@ -0,0 +1,21 @@\n+// { dg-do compile }\n+\n+void\n+filter_scanlines (void *src_buffer, void *dst_buffer, int dst_pitch, int width)\n+{\n+  int x;\n+  unsigned short *src, *dst_a, *dst_b;\n+\n+  src = (unsigned short *) src_buffer;\n+  dst_a = (unsigned short *) dst_buffer;\n+  dst_b = ((unsigned short *) dst_buffer) + (dst_pitch >> 1);\n+\n+  for (x = 0; x < width; x++)\n+    {\n+      unsigned char gs, gh;\n+      gs = src[x];\n+      gh = gs + (gs >> 1);\n+      dst_a[x] = (gh << 5) | (gh);\n+      dst_b[x] = ((gs  - gh) << 5)  | (gs  - gh);\n+    }\n+}"}, {"sha": "11a5019985c1d7f882c5c900c1ba4d5b804b03c4", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ef7adc086571bf7d2d3664dc7cdeaee27fc3a9b/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ef7adc086571bf7d2d3664dc7cdeaee27fc3a9b/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=9ef7adc086571bf7d2d3664dc7cdeaee27fc3a9b", "patch": "@@ -991,6 +991,11 @@ vect_operation_fits_smaller_type (gimple stmt, tree def, tree *new_type,\n       || TREE_CODE (const_oprnd) != INTEGER_CST)\n     return false;\n \n+  /* If oprnd has other uses besides that in stmt we cannot mark it\n+     as being part of a pattern only.  */\n+  if (!has_single_use (oprnd))\n+    return false;\n+\n   /* If we are in the middle of a sequence, we use DEF from a previous\n      statement.  Otherwise, OPRND has to be a result of type promotion.  */\n   if (*new_type)"}]}