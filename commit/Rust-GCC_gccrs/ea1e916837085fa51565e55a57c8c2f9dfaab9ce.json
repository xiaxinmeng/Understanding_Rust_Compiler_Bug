{"sha": "ea1e916837085fa51565e55a57c8c2f9dfaab9ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWExZTkxNjgzNzA4NWZhNTE1NjVlNTVhNTdjOGMyZjlkZmFhYjljZQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2014-04-23T15:29:06Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-04-23T15:29:06Z"}, "message": "[ARM][3/3] Recognise bitwise operations leading to SImode rev16\n\n\t* config/arm/arm.md (arm_rev16si2): New pattern.\n\t(arm_rev16si2_alt): Likewise.\n\t* config/arm/arm.c (arm_new_rtx_costs): Handle rev16 case.\n\n\t* gcc.target/arm/rev16.c: New test.\n\nFrom-SVN: r209705", "tree": {"sha": "f864363ded52df8e4d3eafe37f06272f91ea456a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f864363ded52df8e4d3eafe37f06272f91ea456a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea1e916837085fa51565e55a57c8c2f9dfaab9ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea1e916837085fa51565e55a57c8c2f9dfaab9ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea1e916837085fa51565e55a57c8c2f9dfaab9ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea1e916837085fa51565e55a57c8c2f9dfaab9ce/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f7d5cf8df3193f8f6e62501def08e4b0b1baadbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7d5cf8df3193f8f6e62501def08e4b0b1baadbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7d5cf8df3193f8f6e62501def08e4b0b1baadbc"}], "stats": {"total": 94, "additions": 93, "deletions": 1}, "files": [{"sha": "e499b256f6162916721b5797b0eb41bcf3f34d5f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1e916837085fa51565e55a57c8c2f9dfaab9ce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1e916837085fa51565e55a57c8c2f9dfaab9ce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea1e916837085fa51565e55a57c8c2f9dfaab9ce", "patch": "@@ -1,3 +1,9 @@\n+2014-04-23  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.md (arm_rev16si2): New pattern.\n+\t(arm_rev16si2_alt): Likewise.\n+\t* config/arm/arm.c (arm_new_rtx_costs): Handle rev16 case.\n+\n 2014-04-23  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n        * config/aarch64/aarch64.md (rev16<mode>2): New pattern."}, {"sha": "849176346c72ada372c0fda0063ccae14c23d538", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1e916837085fa51565e55a57c8c2f9dfaab9ce/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1e916837085fa51565e55a57c8c2f9dfaab9ce/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=ea1e916837085fa51565e55a57c8c2f9dfaab9ce", "patch": "@@ -9899,8 +9899,17 @@ arm_new_rtx_costs (rtx x, enum rtx_code code, enum rtx_code outer_code,\n       /* Vector mode?  */\n       *cost = LIBCALL_COST (2);\n       return false;\n+    case IOR:\n+      if (mode == SImode && arm_arch6 && aarch_rev16_p (x))\n+        {\n+          *cost = COSTS_N_INSNS (1);\n+          if (speed_p)\n+            *cost += extra_cost->alu.rev;\n \n-    case AND: case XOR: case IOR:\n+          return true;\n+        }\n+    /* Fall through.  */\n+    case AND: case XOR:\n       if (mode == SImode)\n \t{\n \t  enum rtx_code subcode = GET_CODE (XEXP (x, 0));"}, {"sha": "8a949b929fa01eeadc3405e1830617f579bba57c", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1e916837085fa51565e55a57c8c2f9dfaab9ce/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1e916837085fa51565e55a57c8c2f9dfaab9ce/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=ea1e916837085fa51565e55a57c8c2f9dfaab9ce", "patch": "@@ -12690,6 +12690,44 @@\n    (set_attr \"type\" \"rev\")]\n )\n \n+;; There are no canonicalisation rules for the position of the lshiftrt, ashift\n+;; operations within an IOR/AND RTX, therefore we have two patterns matching\n+;; each valid permutation.\n+\n+(define_insn \"arm_rev16si2\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=l,l,r\")\n+        (ior:SI (and:SI (ashift:SI (match_operand:SI 1 \"register_operand\" \"l,l,r\")\n+                                   (const_int 8))\n+                        (match_operand:SI 3 \"const_int_operand\" \"n,n,n\"))\n+                (and:SI (lshiftrt:SI (match_dup 1)\n+                                     (const_int 8))\n+                        (match_operand:SI 2 \"const_int_operand\" \"n,n,n\"))))]\n+  \"arm_arch6\n+   && aarch_rev16_shleft_mask_imm_p (operands[3], SImode)\n+   && aarch_rev16_shright_mask_imm_p (operands[2], SImode)\"\n+  \"rev16\\\\t%0, %1\"\n+  [(set_attr \"arch\" \"t1,t2,32\")\n+   (set_attr \"length\" \"2,2,4\")\n+   (set_attr \"type\" \"rev\")]\n+)\n+\n+(define_insn \"arm_rev16si2_alt\"\n+  [(set (match_operand:SI 0 \"register_operand\" \"=l,l,r\")\n+        (ior:SI (and:SI (lshiftrt:SI (match_operand:SI 1 \"register_operand\" \"l,l,r\")\n+                                     (const_int 8))\n+                        (match_operand:SI 2 \"const_int_operand\" \"n,n,n\"))\n+                (and:SI (ashift:SI (match_dup 1)\n+                                   (const_int 8))\n+                        (match_operand:SI 3 \"const_int_operand\" \"n,n,n\"))))]\n+  \"arm_arch6\n+   && aarch_rev16_shleft_mask_imm_p (operands[3], SImode)\n+   && aarch_rev16_shright_mask_imm_p (operands[2], SImode)\"\n+  \"rev16\\\\t%0, %1\"\n+  [(set_attr \"arch\" \"t1,t2,32\")\n+   (set_attr \"length\" \"2,2,4\")\n+   (set_attr \"type\" \"rev\")]\n+)\n+\n (define_expand \"bswaphi2\"\n   [(set (match_operand:HI 0 \"s_register_operand\" \"=r\")\n \t(bswap:HI (match_operand:HI 1 \"s_register_operand\" \"r\")))]"}, {"sha": "f25a2b7f520313f446eae9cdc66852eb7d01c381", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1e916837085fa51565e55a57c8c2f9dfaab9ce/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1e916837085fa51565e55a57c8c2f9dfaab9ce/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ea1e916837085fa51565e55a57c8c2f9dfaab9ce", "patch": "@@ -1,3 +1,7 @@\n+2014-04-23  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* gcc.target/arm/rev16.c: New test.\n+\n 2014-04-23  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n        * gcc.target/aarch64/rev16_1.c: New test."}, {"sha": "1c869b3067a6992cfb58f2b1a20e4649d2ded184", "filename": "gcc/testsuite/gcc.target/arm/rev16.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea1e916837085fa51565e55a57c8c2f9dfaab9ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Frev16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea1e916837085fa51565e55a57c8c2f9dfaab9ce/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Frev16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Frev16.c?ref=ea1e916837085fa51565e55a57c8c2f9dfaab9ce", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-options \"-O2\" } */\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+\n+typedef unsigned int __u32;\n+\n+__u32\n+__rev16_32_alt (__u32 x)\n+{\n+  return (((__u32)(x) & (__u32)0xff00ff00UL) >> 8)\n+         | (((__u32)(x) & (__u32)0x00ff00ffUL) << 8);\n+}\n+\n+__u32\n+__rev16_32 (__u32 x)\n+{\n+  return (((__u32)(x) & (__u32)0x00ff00ffUL) << 8)\n+         | (((__u32)(x) & (__u32)0xff00ff00UL) >> 8);\n+}\n+\n+int\n+main (void)\n+{\n+  volatile __u32 in32 = 0x12345678;\n+  volatile __u32 expected32 = 0x34127856;\n+\n+  if (__rev16_32 (in32) != expected32)\n+    abort ();\n+\n+  if (__rev16_32_alt (in32) != expected32)\n+    abort ();\n+\n+  return 0;\n+}"}]}