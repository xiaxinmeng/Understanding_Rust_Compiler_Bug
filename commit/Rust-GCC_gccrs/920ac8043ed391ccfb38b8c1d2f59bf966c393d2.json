{"sha": "920ac8043ed391ccfb38b8c1d2f59bf966c393d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTIwYWM4MDQzZWQzOTFjY2ZiMzhiOGMxZDJmNTliZjk2NmMzOTNkMg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-08-11T11:37:02Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-08-11T11:37:02Z"}, "message": "sse.md (xop integer multiply/add insns): Use register_operand for operand 3 predicate.\n\n\t* config/i386/sse.md (xop integer multiply/add insns): Use\n\tregister_operand for operand 3 predicate.\n\t(xop_phadd<u>bq):  Fix vec_select selectors.\n\nFrom-SVN: r190314", "tree": {"sha": "ca235b06d863a3c167f37e0d38e444951a7430d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca235b06d863a3c167f37e0d38e444951a7430d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/920ac8043ed391ccfb38b8c1d2f59bf966c393d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/920ac8043ed391ccfb38b8c1d2f59bf966c393d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/920ac8043ed391ccfb38b8c1d2f59bf966c393d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/920ac8043ed391ccfb38b8c1d2f59bf966c393d2/comments", "author": null, "committer": null, "parents": [{"sha": "8810cc52c9c7af05759a77d5bfe6d46e16b571e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8810cc52c9c7af05759a77d5bfe6d46e16b571e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8810cc52c9c7af05759a77d5bfe6d46e16b571e8"}], "stats": {"total": 53, "additions": 29, "deletions": 24}, "files": [{"sha": "11d323ca32cb2bc13b250a7a3fa8f79d47293811", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/920ac8043ed391ccfb38b8c1d2f59bf966c393d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/920ac8043ed391ccfb38b8c1d2f59bf966c393d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=920ac8043ed391ccfb38b8c1d2f59bf966c393d2", "patch": "@@ -1,3 +1,9 @@\n+2012-08-11  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/sse.md (xop integer multiply/add insns): Use\n+\tregister_operand for operand 3 predicate.\n+\t(xop_phadd<u>bq):  Fix vec_select selectors.\n+\n 2012-08-11  Martin Jambor  <mjambor@suse.cz>\n \n \tPR fortran/48636\n@@ -48,7 +54,8 @@\n \t(produce_asm_for_decls): Likewise.\n \t(lto_output): Use output_symtab.\n \t* lto-section-in.c (lto_section_name): Update.\n-\t* lto-section-out.c (lto_destroy_simple_output_block): Remove section_type.\n+\t* lto-section-out.c (lto_destroy_simple_output_block): Remove\n+\tsection_type.\n \t* lto-streamer.h (enum lto_section_type): Remove LTO_section_varpool;\n \trename LTO_section_cgraph to LTO_section_symtab_nodes.\n \t(struct lto_header): Remove section_type.\n@@ -87,7 +94,7 @@\n \t(add_node_to): Update.\n \t(add_references): Update.\n \t(output_outgoing_cgraph_edges): Update.\n-\t(output_refs): Update.\t\n+\t(output_refs): Update.\n \t(compute_ltrans_boundary): Update.\n \t(output_cgraph): Update; output varpools too.\n \t(input_overwrite_node): Update.\n@@ -124,15 +131,16 @@\n \tadd symtab_node_encoder.\n \t(lto_file_decl_data): Likewise.\n \t(lto_cgraph_encoder_deref, lto_cgraph_encoder_lookup,\n-\tlto_cgraph_encoder_new, lto_cgraph_encoder_encode, lto_cgraph_encoder_delete,\n-\tlto_cgraph_encoder_encode_body_p, lto_varpool_encoder_encode_body_p,\n-\tlto_varpool_encoder_deref, lto_varpool_encoder_lookup, lto_varpool_encoder_new,\n+\tlto_cgraph_encoder_new, lto_cgraph_encoder_encode,\n+\tlto_cgraph_encoder_delete, lto_cgraph_encoder_encode_body_p,\n+\tlto_varpool_encoder_encode_body_p, lto_varpool_encoder_deref,\n+\tlto_varpool_encoder_lookup, lto_varpool_encoder_new,\n \tlto_varpool_encoder_encode, lto_varpool_encoder_delete,\n \tlto_varpool_encoder_encode_initializer_p): Remove.\n \t(lto_symtab_encoder_deref, lto_symtab_encoder_lookup,\n-\tlto_symtab_encoder_t, lto_symtab_encoder_encode, lto_symtab_encoder_delete,\n-\tlto_symtab_encoder_encode_body_p, lto_symtab_encoder_encode_initializer_p):\n-\tNew.\n+\tlto_symtab_encoder_t, lto_symtab_encoder_encode,\n+\tlto_symtab_encoder_delete, lto_symtab_encoder_encode_body_p,\n+\tlto_symtab_encoder_encode_initializer_p): New.\n \n 2012-08-11  Uros Bizjak  <ubizjak@gmail.com>\n "}, {"sha": "51d77e02ec8a67cd45310adc80204b739317bae6", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 13, "deletions": 16, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/920ac8043ed391ccfb38b8c1d2f59bf966c393d2/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/920ac8043ed391ccfb38b8c1d2f59bf966c393d2/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=920ac8043ed391ccfb38b8c1d2f59bf966c393d2", "patch": "@@ -9547,17 +9547,14 @@\n (define_code_attr madcs [(plus \"madcs\") (ss_plus \"madcss\")])\n \n ;; XOP parallel integer multiply/add instructions.\n-;; Note the XOP multiply/add instructions\n-;;     a[i] = b[i] * c[i] + d[i];\n-;; do not allow the value being added to be a memory operation.\n \n (define_insn \"xop_p<macs><ssemodesuffix><ssemodesuffix>\"\n   [(set (match_operand:VI24_128 0 \"register_operand\" \"=x\")\n \t(xop_plus:VI24_128\n \t (mult:VI24_128\n \t  (match_operand:VI24_128 1 \"nonimmediate_operand\" \"%x\")\n \t  (match_operand:VI24_128 2 \"nonimmediate_operand\" \"xm\"))\n-\t (match_operand:VI24_128 3 \"nonimmediate_operand\" \"x\")))]\n+\t (match_operand:VI24_128 3 \"register_operand\" \"x\")))]\n   \"TARGET_XOP\"\n   \"vp<macs><ssemodesuffix><ssemodesuffix>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n@@ -9575,7 +9572,7 @@\n \t   (vec_select:V2SI\n \t    (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm\")\n \t    (parallel [(const_int 0) (const_int 2)]))))\n-\t (match_operand:V2DI 3 \"nonimmediate_operand\" \"x\")))]\n+\t (match_operand:V2DI 3 \"register_operand\" \"x\")))]\n   \"TARGET_XOP\"\n   \"vp<macs>dql\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n@@ -9593,7 +9590,7 @@\n \t   (vec_select:V2SI\n \t    (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm\")\n \t    (parallel [(const_int 1) (const_int 3)]))))\n-\t (match_operand:V2DI 3 \"nonimmediate_operand\" \"x\")))]\n+\t (match_operand:V2DI 3 \"register_operand\" \"x\")))]\n   \"TARGET_XOP\"\n   \"vp<macs>dqh\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n@@ -9614,7 +9611,7 @@\n \t    (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm\")\n \t    (parallel [(const_int 1) (const_int 3)\n \t\t       (const_int 5) (const_int 7)]))))\n-\t (match_operand:V4SI 3 \"nonimmediate_operand\" \"x\")))]\n+\t (match_operand:V4SI 3 \"register_operand\" \"x\")))]\n   \"TARGET_XOP\"\n   \"vp<macs>wd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n@@ -9646,7 +9643,7 @@\n \t     (match_dup 2)\n \t     (parallel [(const_int 1) (const_int 3)\n \t\t\t(const_int 5) (const_int 7)])))))\n-\t (match_operand:V4SI 3 \"nonimmediate_operand\" \"x\")))]\n+\t (match_operand:V4SI 3 \"register_operand\" \"x\")))]\n   \"TARGET_XOP\"\n   \"vp<madcs>wd\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n   [(set_attr \"type\" \"ssemuladd\")\n@@ -9722,39 +9719,39 @@\n \t   (any_extend:V2DI\n \t    (vec_select:V2QI\n \t     (match_operand:V16QI 1 \"nonimmediate_operand\" \"xm\")\n-\t     (parallel [(const_int 0) (const_int 4)])))\n+\t     (parallel [(const_int 0) (const_int 8)])))\n \t   (any_extend:V2DI\n \t    (vec_select:V2QI\n \t     (match_dup 1)\n-\t     (parallel [(const_int 1) (const_int 5)]))))\n+\t     (parallel [(const_int 1) (const_int 9)]))))\n \t  (plus:V2DI\n \t   (any_extend:V2DI\n \t    (vec_select:V2QI\n \t     (match_dup 1)\n-\t     (parallel [(const_int 2) (const_int 6)])))\n+\t     (parallel [(const_int 2) (const_int 10)])))\n \t   (any_extend:V2DI\n \t    (vec_select:V2QI\n \t     (match_dup 1)\n-\t     (parallel [(const_int 3) (const_int 7)])))))\n+\t     (parallel [(const_int 3) (const_int 11)])))))\n \t (plus:V2DI\n \t  (plus:V2DI\n \t   (any_extend:V2DI\n \t    (vec_select:V2QI\n \t     (match_dup 1)\n-\t     (parallel [(const_int 8) (const_int 12)])))\n+\t     (parallel [(const_int 4) (const_int 12)])))\n \t   (any_extend:V2DI\n \t    (vec_select:V2QI\n \t     (match_dup 1)\n-\t     (parallel [(const_int 9) (const_int 13)]))))\n+\t     (parallel [(const_int 5) (const_int 13)]))))\n \t  (plus:V2DI\n \t   (any_extend:V2DI\n \t    (vec_select:V2QI\n \t     (match_dup 1)\n-\t     (parallel [(const_int 10) (const_int 14)])))\n+\t     (parallel [(const_int 6) (const_int 14)])))\n \t   (any_extend:V2DI\n \t    (vec_select:V2QI\n \t     (match_dup 1)\n-\t     (parallel [(const_int 11) (const_int 15)])))))))]\n+\t     (parallel [(const_int 7) (const_int 15)])))))))]\n   \"TARGET_XOP\"\n   \"vphadd<u>bq\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sseiadd1\")])"}]}