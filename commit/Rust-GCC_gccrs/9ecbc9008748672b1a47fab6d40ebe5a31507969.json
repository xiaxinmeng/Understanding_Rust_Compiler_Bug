{"sha": "9ecbc9008748672b1a47fab6d40ebe5a31507969", "node_id": "C_kwDOANBUbNoAKDllY2JjOTAwODc0ODY3MmIxYTQ3ZmFiNmQ0MGViZTVhMzE1MDc5Njk", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-10-19T17:04:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-19T17:04:07Z"}, "message": "Merge #1602\n\n1602: Add check for recursive trait cycles r=philberty a=philberty\n\nThis adds a new RAII style TraitQueryGuard so that we can manage the query lifetime when resolving a trait. This adds in a DefId into a set when we begin to resolve and then finally removes it when completed. This allows us to add in a check at the start if this DefId is already within the set which means this is a trait cycle.\r\n\r\nFixes #1589\r\n\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>", "tree": {"sha": "f5f5a48029b5a03dd651cb78e2ae8c880c74e0e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5f5a48029b5a03dd651cb78e2ae8c880c74e0e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ecbc9008748672b1a47fab6d40ebe5a31507969", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjUC4HCRBK7hj4Ov3rIwAAWL4IAI1XDqt69c5RfK05vwM2aQTa\n2clsONFKZdPQ/lumlr5co9qHbz42jzrdpt9BRVGaZN+kFzxCd7CUdl4F+POkJeD6\nnPT7qYJRMlic7sP+x3uwckMkZVuu2HpVBoWx6wQESiDXJiwJh5hdQYhKY1IxquAD\nqyyp0tlfCbODduJE09R167WHxQi50v2163n30uz+WXfYF4ZBXc3h/Y+Xoxw1u8W/\ncmvrm8HKsv72KxSVGZdwJdgAoG/cxDLkEjwC5Ta/JwUsw74cO6Mk+EDPjunZSCOK\n2ZU+5IueRaYJuMGqroSJ7UsVv8Bg1k52mR8shVaTx/zyQxSscZGrKrv9/OygHCA=\n=joID\n-----END PGP SIGNATURE-----\n", "payload": "tree f5f5a48029b5a03dd651cb78e2ae8c880c74e0e4\nparent 381e061438836b7ca360c7741e9a13ec6d643b1d\nparent 0a52177612f6e855732c6ded77a04ba40dfb0d19\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1666199047 +0000\ncommitter GitHub <noreply@github.com> 1666199047 +0000\n\nMerge #1602\n\n1602: Add check for recursive trait cycles r=philberty a=philberty\n\nThis adds a new RAII style TraitQueryGuard so that we can manage the query lifetime when resolving a trait. This adds in a DefId into a set when we begin to resolve and then finally removes it when completed. This allows us to add in a check at the start if this DefId is already within the set which means this is a trait cycle.\r\n\r\nFixes #1589\r\n\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ecbc9008748672b1a47fab6d40ebe5a31507969", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ecbc9008748672b1a47fab6d40ebe5a31507969", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ecbc9008748672b1a47fab6d40ebe5a31507969/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "381e061438836b7ca360c7741e9a13ec6d643b1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/381e061438836b7ca360c7741e9a13ec6d643b1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/381e061438836b7ca360c7741e9a13ec6d643b1d"}, {"sha": "0a52177612f6e855732c6ded77a04ba40dfb0d19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a52177612f6e855732c6ded77a04ba40dfb0d19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a52177612f6e855732c6ded77a04ba40dfb0d19"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "6bd3cc1a9e948f59767f95135bf4a23608c6124a", "filename": "gcc/rust/typecheck/rust-hir-trait-resolve.cc", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ecbc9008748672b1a47fab6d40ebe5a31507969/gcc%2Frust%2Ftypecheck%2Frust-hir-trait-resolve.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ecbc9008748672b1a47fab6d40ebe5a31507969/gcc%2Frust%2Ftypecheck%2Frust-hir-trait-resolve.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-trait-resolve.cc?ref=9ecbc9008748672b1a47fab6d40ebe5a31507969", "patch": "@@ -141,6 +141,14 @@ TraitResolver::resolve_trait (HIR::Trait *trait_reference)\n       return tref;\n     }\n \n+  DefId trait_id = trait_reference->get_mappings ().get_defid ();\n+  if (context->trait_query_in_progress (trait_id))\n+    {\n+      rust_error_at (trait_reference->get_locus (), \"trait cycle detected\");\n+      return &TraitReference::error_node ();\n+    }\n+\n+  TraitQueryGuard guard (trait_id);\n   TyTy::BaseType *self = nullptr;\n   std::vector<TyTy::SubstitutionParamMapping> substitutions;\n   for (auto &generic_param : trait_reference->get_generic_params ())\n@@ -201,8 +209,10 @@ TraitResolver::resolve_trait (HIR::Trait *trait_reference)\n \t      HIR::TraitBound *b\n \t\t= static_cast<HIR::TraitBound *> (bound.get ());\n \n-\t      // FIXME this might be recursive we need a check for that\n \t      auto predicate = get_predicate_from_bound (b->get_path ());\n+\t      if (predicate.is_error ())\n+\t\treturn &TraitReference::error_node ();\n+\n \t      specified_bounds.push_back (predicate);\n \t      super_traits.push_back (predicate.get ());\n \t    }"}, {"sha": "de3467b27ce08dc67c6357eb427ed957dc5ba2cd", "filename": "gcc/rust/typecheck/rust-hir-type-check.h", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ecbc9008748672b1a47fab6d40ebe5a31507969/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ecbc9008748672b1a47fab6d40ebe5a31507969/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check.h?ref=9ecbc9008748672b1a47fab6d40ebe5a31507969", "patch": "@@ -381,6 +381,19 @@ class TypeCheckContext\n     return querys_in_progress.find (id) != querys_in_progress.end ();\n   }\n \n+  void insert_trait_query (DefId id) { trait_queries_in_progress.insert (id); }\n+\n+  void trait_query_completed (DefId id)\n+  {\n+    trait_queries_in_progress.erase (id);\n+  }\n+\n+  bool trait_query_in_progress (DefId id) const\n+  {\n+    return trait_queries_in_progress.find (id)\n+\t   != trait_queries_in_progress.end ();\n+  }\n+\n private:\n   TypeCheckContext ();\n \n@@ -418,6 +431,7 @@ class TypeCheckContext\n \n   // query context lookups\n   std::set<HirId> querys_in_progress;\n+  std::set<DefId> trait_queries_in_progress;\n };\n \n class TypeResolution\n@@ -426,6 +440,21 @@ class TypeResolution\n   static void Resolve (HIR::Crate &crate);\n };\n \n+class TraitQueryGuard\n+{\n+public:\n+  TraitQueryGuard (DefId id) : id (id), ctx (*TypeCheckContext::get ())\n+  {\n+    ctx.insert_trait_query (id);\n+  }\n+\n+  ~TraitQueryGuard () { ctx.trait_query_completed (id); }\n+\n+private:\n+  DefId id;\n+  TypeCheckContext &ctx;\n+};\n+\n } // namespace Resolver\n } // namespace Rust\n "}, {"sha": "79a5866e4aff1143c8d0a72cb58902b1b5241002", "filename": "gcc/testsuite/rust/compile/issue-1589.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ecbc9008748672b1a47fab6d40ebe5a31507969/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1589.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ecbc9008748672b1a47fab6d40ebe5a31507969/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1589.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1589.rs?ref=9ecbc9008748672b1a47fab6d40ebe5a31507969", "patch": "@@ -0,0 +1,5 @@\n+pub trait A: B {}\n+// { dg-error \"trait cycle detected\" \"\" { target *-*-* } .-1 }\n+\n+pub trait B: A {}\n+// { dg-error \"trait cycle detected\" \"\" { target *-*-* } .-1 }"}]}