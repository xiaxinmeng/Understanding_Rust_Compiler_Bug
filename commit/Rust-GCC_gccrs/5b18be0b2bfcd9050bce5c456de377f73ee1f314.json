{"sha": "5b18be0b2bfcd9050bce5c456de377f73ee1f314", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIxOGJlMGIyYmZjZDkwNTBiY2U1YzQ1NmRlMzc3ZjczZWUxZjMxNA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2020-01-08T18:46:33Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2020-01-08T18:46:33Z"}, "message": "* gcc.dg/Wstringop-overflow-27.c: Make testnames unique.\n\nFrom-SVN: r280016", "tree": {"sha": "8242b81e81fe6d3a86d6a1f454cebc484f4d22eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8242b81e81fe6d3a86d6a1f454cebc484f4d22eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b18be0b2bfcd9050bce5c456de377f73ee1f314", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b18be0b2bfcd9050bce5c456de377f73ee1f314", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b18be0b2bfcd9050bce5c456de377f73ee1f314", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b18be0b2bfcd9050bce5c456de377f73ee1f314/comments", "author": null, "committer": null, "parents": [{"sha": "51f902357c56b3b0e5e902d52affcfb844cb541f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51f902357c56b3b0e5e902d52affcfb844cb541f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51f902357c56b3b0e5e902d52affcfb844cb541f"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "622589e3db62a35c24ddc33d37fed6a213ae6fcb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b18be0b2bfcd9050bce5c456de377f73ee1f314/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b18be0b2bfcd9050bce5c456de377f73ee1f314/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5b18be0b2bfcd9050bce5c456de377f73ee1f314", "patch": "@@ -1,3 +1,7 @@\n+2020-01-08  Jeff Law  <law@redhat.com>\n+\n+\t* gcc.dg/Wstringop-overflow-27.c: Make testnames unique.\n+\n 2020-01-08  Joel Brobecker  <brobecker@adacore.com>\n             Olivier Hainque  <hainque@adacore.com>\n "}, {"sha": "8e2cfe307250c79c9bf51aa4c516e0901ba6c064", "filename": "gcc/testsuite/gcc.dg/Wstringop-overflow-27.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b18be0b2bfcd9050bce5c456de377f73ee1f314/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-27.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b18be0b2bfcd9050bce5c456de377f73ee1f314/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-27.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-27.c?ref=5b18be0b2bfcd9050bce5c456de377f73ee1f314", "patch": "@@ -260,8 +260,8 @@ void test_strcpy_warn (const char *s)\n        that the conversion from signed int to size_t doesn't prevent\n        the detection.  */\n     int n = strlen (a);\n-    char *t = (char*)calloc (n, 1);     // { dg-message \"at offset 0 to an object with size 3 allocated by 'calloc' here\" \"calloc note\" { xfail *-*-* } }\n-                                        // { dg-message \"at offset 0 to an object with size at most 3 allocated by 'calloc' here\" \"calloc note\" { target *-*-* } .-1 }\n+    char *t = (char*)calloc (n, 1);     // { dg-message \"at offset 0 to an object with size 3 allocated by 'calloc' here\" \"calloc note 1\" { xfail *-*-* } }\n+                                        // { dg-message \"at offset 0 to an object with size at most 3 allocated by 'calloc' here\" \"calloc note 2\" { target *-*-* } .-1 }\n     strcpy (t, a);                      // { dg-warning \"writing 4 bytes into a region of size (between 0 and )?3 \" }\n \n     sink (t);\n@@ -270,8 +270,8 @@ void test_strcpy_warn (const char *s)\n   {\n     const char a[] = \"1234\";\n     size_t n = strlen (a);\n-    char *t = (char*)malloc (n);        // { dg-message \"at offset 0 to an object with size 4 allocated by 'malloc' here\" \"malloc note\" { xfail *-*-* } }\n-                                        // { dg-message \"at offset 0 to an object with size at most 4 allocated by 'malloc' here\" \"malloc note\" { target *-*-* } .-1 }\n+    char *t = (char*)malloc (n);        // { dg-message \"at offset 0 to an object with size 4 allocated by 'malloc' here\" \"malloc note 1\" { xfail *-*-* } }\n+                                        // { dg-message \"at offset 0 to an object with size at most 4 allocated by 'malloc' here\" \"malloc note 2\" { target *-*-* } .-1 }\n     strcpy (t, a);                      // { dg-warning \"writing 5 bytes into a region of size (between 0 and )?4 \" }\n     sink (t);\n   }"}]}