{"sha": "0e36f5c7c103e2d897fcbc9728fa98768b386f9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGUzNmY1YzdjMTAzZTJkODk3ZmNiYzk3MjhmYTk4NzY4YjM4NmY5YQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-09-15T17:19:11Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-09-15T17:19:11Z"}, "message": "re PR c/67580 (Improve error message on missing \"struct\" tag)\n\n\tPR c/67580\n\t* c-decl.c (tag_exists_p): New function.\n\t* c-parser.c (c_parser_declaration_or_fndef): Give a hint when\n\tstruct/union/enum keywords are missing.\n\t* c-tree.h (tag_exists_p): Declare.\n\n\t* gcc.dg/pr67580.c: New test.\n\nFrom-SVN: r227803", "tree": {"sha": "ea4ad4601177b57e46c4c68bebdfb4668db9e541", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea4ad4601177b57e46c4c68bebdfb4668db9e541"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e36f5c7c103e2d897fcbc9728fa98768b386f9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e36f5c7c103e2d897fcbc9728fa98768b386f9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e36f5c7c103e2d897fcbc9728fa98768b386f9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e36f5c7c103e2d897fcbc9728fa98768b386f9a/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c33c18cdc6b29a312464cb16996530b47a333c98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c33c18cdc6b29a312464cb16996530b47a333c98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c33c18cdc6b29a312464cb16996530b47a333c98"}], "stats": {"total": 69, "additions": 67, "deletions": 2}, "files": [{"sha": "27659e231c34ede51a2ebc894be68d501435eeda", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e36f5c7c103e2d897fcbc9728fa98768b386f9a/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e36f5c7c103e2d897fcbc9728fa98768b386f9a/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=0e36f5c7c103e2d897fcbc9728fa98768b386f9a", "patch": "@@ -1,3 +1,11 @@\n+2015-09-15  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/67580\n+\t* c-decl.c (tag_exists_p): New function.\n+\t* c-parser.c (c_parser_declaration_or_fndef): Give a hint when\n+\tstruct/union/enum keywords are missing.\n+\t* c-tree.h (tag_exists_p): Declare.\n+\n 2015-09-15  Marek Polacek  <polacek@redhat.com>\n \n \t* c-decl.c (lookup_label): Return NULL_TREE instead of 0."}, {"sha": "a110226d01fa679aef9044dc42164ca64270ac6d", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e36f5c7c103e2d897fcbc9728fa98768b386f9a/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e36f5c7c103e2d897fcbc9728fa98768b386f9a/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=0e36f5c7c103e2d897fcbc9728fa98768b386f9a", "patch": "@@ -3856,6 +3856,18 @@ lookup_tag (enum tree_code code, tree name, bool thislevel_only,\n   return b->decl;\n }\n \n+/* Return true if a definition exists for NAME with code CODE.  */\n+\n+bool\n+tag_exists_p (enum tree_code code, tree name)\n+{\n+  struct c_binding *b = I_TAG_BINDING (name);\n+\n+  if (b == NULL || b->decl == NULL_TREE)\n+    return false;\n+  return TREE_CODE (b->decl) == code;\n+}\n+\n /* Print an error message now\n    for a recent invalid struct, union or enum cross reference.\n    We don't print them immediately because they are not invalid"}, {"sha": "d5de1028ddc7091fe158e660068ef4300d1f859e", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e36f5c7c103e2d897fcbc9728fa98768b386f9a/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e36f5c7c103e2d897fcbc9728fa98768b386f9a/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=0e36f5c7c103e2d897fcbc9728fa98768b386f9a", "patch": "@@ -1539,8 +1539,16 @@ c_parser_declaration_or_fndef (c_parser *parser, bool fndef_ok,\n           || c_parser_peek_2nd_token (parser)->type == CPP_MULT)\n       && (!nested || !lookup_name (c_parser_peek_token (parser)->value)))\n     {\n-      error_at (here, \"unknown type name %qE\",\n-                c_parser_peek_token (parser)->value);\n+      tree name = c_parser_peek_token (parser)->value;\n+      error_at (here, \"unknown type name %qE\", name);\n+      /* Give a hint to the user.  This is not C++ with its implicit\n+\t typedef.  */\n+      if (tag_exists_p (RECORD_TYPE, name))\n+\tinform (here, \"use %<struct%> keyword to refer to the type\");\n+      else if (tag_exists_p (UNION_TYPE, name))\n+\tinform (here, \"use %<union%> keyword to refer to the type\");\n+      else if (tag_exists_p (ENUMERAL_TYPE, name))\n+\tinform (here, \"use %<enum%> keyword to refer to the type\");\n \n       /* Parse declspecs normally to get a correct pointer type, but avoid\n          a further \"fails to be a type name\" error.  Refuse nested functions"}, {"sha": "667529a68c625fa73e52366402af98b490b312bf", "filename": "gcc/c/c-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e36f5c7c103e2d897fcbc9728fa98768b386f9a/gcc%2Fc%2Fc-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e36f5c7c103e2d897fcbc9728fa98768b386f9a/gcc%2Fc%2Fc-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-tree.h?ref=0e36f5c7c103e2d897fcbc9728fa98768b386f9a", "patch": "@@ -701,6 +701,7 @@ extern tree c_omp_reduction_lookup (tree, tree);\n extern tree c_check_omp_declare_reduction_r (tree *, int *, void *);\n extern void c_pushtag (location_t, tree, tree);\n extern void c_bind (location_t, tree, bool);\n+extern bool tag_exists_p (enum tree_code, tree);\n \n /* In c-errors.c */\n extern void pedwarn_c90 (location_t, int opt, const char *, ...)"}, {"sha": "f8593b346fccf43ce985b1abc941ca6672f23433", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e36f5c7c103e2d897fcbc9728fa98768b386f9a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e36f5c7c103e2d897fcbc9728fa98768b386f9a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0e36f5c7c103e2d897fcbc9728fa98768b386f9a", "patch": "@@ -1,3 +1,8 @@\n+2015-09-15  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/67580\n+\t* gcc.dg/pr67580.c: New test.\n+\n 2015-09-15  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/67470"}, {"sha": "90e4b1b113fa6c05990c6e889679621a70d7d043", "filename": "gcc/testsuite/gcc.dg/pr67580.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e36f5c7c103e2d897fcbc9728fa98768b386f9a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67580.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e36f5c7c103e2d897fcbc9728fa98768b386f9a/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67580.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr67580.c?ref=0e36f5c7c103e2d897fcbc9728fa98768b386f9a", "patch": "@@ -0,0 +1,31 @@\n+/* PR c/67580 */\n+/* { dg-do compile } */\n+\n+struct S { int s; };\n+union U { int s; };\n+enum E { A };\n+\n+void\n+f (void)\n+{\n+  S s; /* { dg-error \"unknown type name\" } */\n+/* { dg-message \"use .struct. keyword to refer to the type\" \"\" { target *-*-* } 11 } */\n+  U u; /* { dg-error \"unknown type name\" } */\n+/* { dg-message \"use .union. keyword to refer to the type\" \"\" { target *-*-* } 13 } */\n+  E e; /* { dg-error \"unknown type name\" } */\n+/* { dg-message \"use .enum. keyword to refer to the type\" \"\" { target *-*-* } 15 } */\n+}\n+\n+void\n+g (void)\n+{\n+  struct T { int i; };\n+  union V { int i; };\n+  enum F { J };\n+  T t; /* { dg-error \"unknown type name\" } */\n+/* { dg-message \"use .struct. keyword to refer to the type\" \"\" { target *-*-* } 25 } */\n+  V v; /* { dg-error \"unknown type name\" } */\n+/* { dg-message \"use .union. keyword to refer to the type\" \"\" { target *-*-* } 27 } */\n+  F f; /* { dg-error \"unknown type name\" } */\n+/* { dg-message \"use .enum. keyword to refer to the type\" \"\" { target *-*-* } 29 } */\n+}"}]}