{"sha": "e9125c09d3795c7e490741c5c174df294b5d7cd4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTkxMjVjMDlkMzc5NWM3ZTQ5MDc0MWM1YzE3NGRmMjk0YjVkN2NkNA==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1993-03-23T12:48:05Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1993-03-23T12:48:05Z"}, "message": "(APPLY_RESULT_SIZE): Define.\n\nFrom-SVN: r3836", "tree": {"sha": "9aa3cfbb1898661f69a2cc44965c2159aa0f54f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9aa3cfbb1898661f69a2cc44965c2159aa0f54f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9125c09d3795c7e490741c5c174df294b5d7cd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9125c09d3795c7e490741c5c174df294b5d7cd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9125c09d3795c7e490741c5c174df294b5d7cd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9125c09d3795c7e490741c5c174df294b5d7cd4/comments", "author": null, "committer": null, "parents": [{"sha": "92ea370bfd463eceb6eadfb033f4328f78bfaa66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92ea370bfd463eceb6eadfb033f4328f78bfaa66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92ea370bfd463eceb6eadfb033f4328f78bfaa66"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "29f11136fc9b5b745b19d764aafeac61852ea9df", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9125c09d3795c7e490741c5c174df294b5d7cd4/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9125c09d3795c7e490741c5c174df294b5d7cd4/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=e9125c09d3795c7e490741c5c174df294b5d7cd4", "patch": "@@ -621,6 +621,12 @@ extern enum reg_class regclass_map[FIRST_PSEUDO_REGISTER];\n #define LIBCALL_VALUE(MODE) \\\n   gen_rtx (REG, MODE, VALUE_REGNO (MODE))\n \n+/* Define the size of the result block used for communication between\n+   untyped_call and untyped_return.  The block contains a DImode value\n+   followed by the block used by fnsave and frstor.  */\n+\n+#define APPLY_RESULT_SIZE (8+108)\n+\n /* 1 if N is a possible register number for function argument passing.\n    On the 80386, no registers are used in this way.\n       *NOTE* -mregparm does not work."}]}