{"sha": "b3c336413b3354e4d18e2e8454eee884e3349f99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjNjMzM2NDEzYjMzNTRlNGQxOGUyZTg0NTRlZWU4ODRlMzM0OWY5OQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-10-24T10:31:29Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-10-24T10:31:29Z"}, "message": "[multiple changes]\n\n2011-10-24  Robert Dewar  <dewar@adacore.com>\n\n\t* sem.adb (Initialize): Fix bug that blew up if called a second\n\ttime.\n\n2011-10-24  Robert Dewar  <dewar@adacore.com>\n\n\t* tb-alvxw.c, tracebak.c, expect.c, initflt.c, tb-alvms.c,\n\ttb-ivms.c, tb-gcc.c: Update headers to GPL 3.\n\n2011-10-24  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_prag.adb (Analyze_Pragma, case Debug): Give proper pragma\n\tname in error msg.\n\n2011-10-24  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* gnat_rm.texi Add an entry for restriction No_Finalization.\n\n2011-10-24  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb (Insert_Freeze_Node_For_Instance):  If the\n\tcurrent instance is within the one that contains the generic,\n\tthe freeze node for the current one must appear in the current\n\tdeclarative part. Ditto if the current instance is within another\n\tpackage instance. In both of these cases the freeze node of the\n\tprevious instance is not relevant.\n\n2011-10-24  Gary Dismukes  <dismukes@adacore.com>\n\n\t* switch-m.adb (Normalize_Compiler_Switches): Add recognition\n\tof AAMP-specific switches -univ and -aamp_target.\n\n2011-10-24  Robert Dewar  <dewar@adacore.com>\n\n\t* a-tienau.adb (Put): Deal properly with limited line length.\n\n2011-10-24  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_warn.adb, sem_ch12.adb: Minor reformatting.\n\nFrom-SVN: r180375", "tree": {"sha": "f5d9993ccdabecbc378aaf6eb3b66c313885bdc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5d9993ccdabecbc378aaf6eb3b66c313885bdc5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3c336413b3354e4d18e2e8454eee884e3349f99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3c336413b3354e4d18e2e8454eee884e3349f99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3c336413b3354e4d18e2e8454eee884e3349f99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3c336413b3354e4d18e2e8454eee884e3349f99/comments", "author": null, "committer": null, "parents": [{"sha": "8263e17a8ce651cdaa48dbb725106ae56f3fe47d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8263e17a8ce651cdaa48dbb725106ae56f3fe47d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8263e17a8ce651cdaa48dbb725106ae56f3fe47d"}], "stats": {"total": 357, "additions": 245, "deletions": 112}, "files": [{"sha": "144bff325c59880036da573188b437bab8755359", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b3c336413b3354e4d18e2e8454eee884e3349f99", "patch": "@@ -1,3 +1,44 @@\n+2011-10-24  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem.adb (Initialize): Fix bug that blew up if called a second\n+\ttime.\n+\n+2011-10-24  Robert Dewar  <dewar@adacore.com>\n+\n+\t* tb-alvxw.c, tracebak.c, expect.c, initflt.c, tb-alvms.c,\n+\ttb-ivms.c, tb-gcc.c: Update headers to GPL 3.\n+\n+2011-10-24  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Pragma, case Debug): Give proper pragma\n+\tname in error msg.\n+\n+2011-10-24  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* gnat_rm.texi Add an entry for restriction No_Finalization.\n+\n+2011-10-24  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Insert_Freeze_Node_For_Instance):  If the\n+\tcurrent instance is within the one that contains the generic,\n+\tthe freeze node for the current one must appear in the current\n+\tdeclarative part. Ditto if the current instance is within another\n+\tpackage instance. In both of these cases the freeze node of the\n+\tprevious instance is not relevant.\n+\n+2011-10-24  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* switch-m.adb (Normalize_Compiler_Switches): Add recognition\n+\tof AAMP-specific switches -univ and -aamp_target.\n+\n+2011-10-24  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-tienau.adb (Put): Deal properly with limited line length.\n+\n+2011-10-24  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_warn.adb, sem_ch12.adb: Minor reformatting.\n+\n 2011-10-16  Tristan Gingold  <gingold@adacore.com>\n \n \t* gcc-interface/Makefile.in: Use GNU ld switches to generate map files"}, {"sha": "5498ca4f55d7cb95a0b510025dee8bfb4c50290c", "filename": "gcc/ada/a-tienau.adb", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Fa-tienau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Fa-tienau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tienau.adb?ref=b3c336413b3354e4d18e2e8454eee884e3349f99", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -126,6 +126,25 @@ package body Ada.Text_IO.Enumeration_Aux is\n       Actual_Width : constant Count := Count'Max (Count (Width), Item'Length);\n \n    begin\n+      --  Deal with limited line length\n+\n+      if Line_Length /= 0 then\n+\n+         --  If actual width exceeds line length, raise Layout_Error\n+\n+         if Actual_Width > Line_Length then\n+            raise Layout_Error;\n+         end if;\n+\n+         --  If full width cannot fit on current line move to new line\n+\n+         if Actual_Width + (Col - 1) > Line_Length then\n+            New_Line (File);\n+         end if;\n+      end if;\n+\n+      --  Output in lower case if necessary\n+\n       if Set = Lower_Case and then Item (Item'First) /= ''' then\n          declare\n             Iteml : String (Item'First .. Item'Last);\n@@ -138,10 +157,14 @@ package body Ada.Text_IO.Enumeration_Aux is\n             Put_Item (File, Iteml);\n          end;\n \n+      --  Otherwise output in upper case\n+\n       else\n          Put_Item (File, Item);\n       end if;\n \n+      --  Fill out item with spaces to width\n+\n       for J in 1 .. Actual_Width - Item'Length loop\n          Put (File, ' ');\n       end loop;"}, {"sha": "a40ffa3d29d374f480c70543159feaab38e84676", "filename": "gcc/ada/expect.c", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Fexpect.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Fexpect.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpect.c?ref=b3c336413b3354e4d18e2e8454eee884e3349f99", "patch": "@@ -1,29 +1,28 @@\n /****************************************************************************\n  *                                                                          *\n- *                         GNAT COMPILER COMPONENTS                         *\n+ *                         GNAT RUN-TIME COMPONENTS                         *\n  *                                                                          *\n  *                               E X P E C T                                *\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *                     Copyright (C) 2001-2009, AdaCore                     *\n+ *                     Copyright (C) 2001-2011, AdaCore                     *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n- * ware  Foundation;  either version 2,  or (at your option) any later ver- *\n+ * ware  Foundation;  either version 3,  or (at your option) any later ver- *\n  * sion.  GNAT is distributed in the hope that it will be useful, but WITH- *\n  * OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY *\n- * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License *\n- * for  more details.  You should have  received  a copy of the GNU General *\n- * Public License  distributed with GNAT;  see file COPYING.  If not, write *\n- * to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, *\n- * Boston, MA 02110-1301, USA.                                              *\n+ * or FITNESS FOR A PARTICULAR PURPOSE.                                     *\n  *                                                                          *\n- * As a  special  exception,  if you  link  this file  with other  files to *\n- * produce an executable,  this file does not by itself cause the resulting *\n- * executable to be covered by the GNU General Public License. This except- *\n- * ion does not  however invalidate  any other reasons  why the  executable *\n- * file might be covered by the  GNU Public License.                        *\n+ * As a special exception under Section 7 of GPL version 3, you are granted *\n+ * additional permissions described in the GCC Runtime Library Exception,   *\n+ * version 3.1, as published by the Free Software Foundation.               *\n+ *                                                                          *\n+ * You should have received a copy of the GNU General Public License and    *\n+ * a copy of the GCC Runtime Library Exception along with this program;     *\n+ * see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    *\n+ * <http://www.gnu.org/licenses/>.                                          *\n  *                                                                          *\n  * GNAT was originally developed  by the GNAT team at  New York University. *\n  * Extensive contributions were provided by Ada Core Technologies Inc.      *"}, {"sha": "513bca206426703c920b4593707b300b27dceac8", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=b3c336413b3354e4d18e2e8454eee884e3349f99", "patch": "@@ -9016,6 +9016,32 @@ in a distributed environment. If this exception is active, then the generated\n code is simplified by omitting the otherwise-required global registration\n of exceptions when they are declared.\n \n+@item No_Finalization\n+@findex No_Finalization\n+This restriction disables the language features described in chapter 7.6 of the\n+Ada 2005 RM as well as all form of code generation performed by the compiler to\n+support these features. The following types are no longer considered controlled\n+when this restriction is in effect:\n+@itemize @bullet\n+@item\n+@code{Ada.Finalization.Controlled}\n+@item\n+@code{Ada.Finalization.Limited_Controlled}\n+@item\n+Derivations from @code{Controlled} or @code{Limited_Controlled}\n+@item\n+Class-wide types\n+@item\n+Protected types\n+@item\n+Task types\n+@item\n+Array and record types with controlled components\n+@end itemize\n+The compiler no longer generates code to initialize, finalize or adjust an\n+object or a nested component, either declared on the stack or on the heap. The\n+deallocation of a controlled object no longer finalizes its contents.\n+\n @item No_Implicit_Aliasing\n @findex No_Implicit_Aliasing\n "}, {"sha": "3d912eefee2c5f27d11f0b08735d3865fb75e57e", "filename": "gcc/ada/s-osinte-lynxos-3.ads", "status": "modified", "additions": 16, "deletions": 18, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Fs-osinte-lynxos-3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Fs-osinte-lynxos-3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-lynxos-3.ads?ref=b3c336413b3354e4d18e2e8454eee884e3349f99", "patch": "@@ -1,34 +1,32 @@\n ------------------------------------------------------------------------------\n --                                                                          --\n---                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n+--                          GNAT RUN-TIME COMPONENTS                        --\n --                                                                          --\n --                   S Y S T E M . O S _ I N T E R F A C E                  --\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n --             Copyright (C) 1991-1994, Florida State University            --\n---          Copyright (C) 1995-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion. GNARL is distributed in the hope that it will be useful, but WITH- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n -- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNARL; see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n --                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n --                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n --                                                                          --\n ------------------------------------------------------------------------------\n "}, {"sha": "b463d37a938a741a08e3424a30e1e1623580bd47", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=b3c336413b3354e4d18e2e8454eee884e3349f99", "patch": "@@ -845,21 +845,21 @@ package body Sem is\n          return;\n       end if;\n \n-      --  First search the local entity suppress stack, we search this in\n-      --  reverse order so that we get the innermost entry that applies to\n-      --  this case if there are nested entries. Note that for the purpose\n-      --  of this procedure we are ONLY looking for entries corresponding\n-      --  to a two-argument Suppress, where the second argument matches From.\n+      --  First search the global entity suppress table for a matching entry.\n+      --  We also search this in reverse order so that if there are multiple\n+      --  pragmas for the same entity, the last one applies.\n \n       Search_Stack (Global_Suppress_Stack_Top, Found);\n \n       if Found then\n          return;\n       end if;\n \n-      --  Now search the global entity suppress table for a matching entry.\n-      --  We also search this in reverse order so that if there are multiple\n-      --  pragmas for the same entity, the last one applies.\n+      --  Now search the local entity suppress stack, we search this in\n+      --  reverse order so that we get the innermost entry that applies to\n+      --  this case if there are nested entries. Note that for the purpose\n+      --  of this procedure we are ONLY looking for entries corresponding\n+      --  to a two-argument Suppress, where the second argument matches From.\n \n       Search_Stack (Local_Suppress_Stack_Top, Found);\n    end Copy_Suppress_Status;\n@@ -936,7 +936,6 @@ package body Sem is\n \n       else\n          Scop := Scope (E);\n-\n          while Present (Scop) loop\n             if Scop = Outer_Generic_Scope then\n                return False;\n@@ -966,7 +965,7 @@ package body Sem is\n       --  of the compiler (in the normal case this loop does nothing).\n \n       while Suppress_Stack_Entries /= null loop\n-         Next := Global_Suppress_Stack_Top.Next;\n+         Next := Suppress_Stack_Entries.Next;\n          Free (Suppress_Stack_Entries);\n          Suppress_Stack_Entries := Next;\n       end loop;"}, {"sha": "e62629e2a224c9de1d7232d94eec8e1656820990", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 36, "deletions": 3, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=b3c336413b3354e4d18e2e8454eee884e3349f99", "patch": "@@ -7517,21 +7517,54 @@ package body Sem_Ch12 is\n          Decl  := N;\n \n          --  If this is a package instance, check whether the generic is\n-         --  declared in a previous instance.\n+         --  declared in a previous instance and the current instance is\n+         --  not within the previous one.\n \n          if Present (Generic_Parent (Parent (Inst)))\n            and then Is_In_Main_Unit (N)\n          then\n             declare\n                Par_I : constant Entity_Id :=\n                  Previous_Instance (Generic_Parent (Parent (Inst)));\n+               Scop  : Entity_Id;\n \n             begin\n                if Present (Par_I)\n                  and then Earlier (N, Freeze_Node (Par_I))\n                then\n-                  Insert_After (Freeze_Node (Par_I), F_Node);\n-                  return;\n+                  Scop := Scope (Inst);\n+\n+                  --  If the current instance is within the one that contains\n+                  --  the generic, the freeze node for the current one must\n+                  --  appear in the current declarative part. Ditto, if the\n+                  --  current instance is within another package instance. In\n+                  --  both of these cases the freeze node of the previous\n+                  --  instance is not relevant.\n+\n+                  while Present (Scop)\n+                    and then Scop /= Standard_Standard\n+                  loop\n+                     exit when Scop = Par_I\n+                       or else Is_Generic_Instance (Scop);\n+                     Scop := Scope (Scop);\n+                  end loop;\n+\n+                  if Scop = Par_I then\n+\n+                     --  Previous instance encloses current instance\n+\n+                     null;\n+\n+                  elsif Is_Generic_Instance (Scop) then\n+\n+                     --  Current instance is within an unrelated instance\n+\n+                     null;\n+\n+                  else\n+                     Insert_After (Freeze_Node (Par_I), F_Node);\n+                     return;\n+                  end if;\n                end if;\n             end;\n          end if;"}, {"sha": "9de2f1f032000524b626beba59646b75fc23ece7", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=b3c336413b3354e4d18e2e8454eee884e3349f99", "patch": "@@ -7884,7 +7884,8 @@ package body Sem_Prag is\n                --  All other cases: diagnose error\n \n                Error_Msg\n-                 (\"argument of pragma% is not procedure call\", Sloc (Call));\n+                 (\"argument of pragma \"\"Debug\"\" is not procedure call\",\n+                  Sloc (Call));\n                return;\n             end if;\n "}, {"sha": "9f0b259311cbcd1010b2f8f561a5dccb5a4dde54", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=b3c336413b3354e4d18e2e8454eee884e3349f99", "patch": "@@ -1407,7 +1407,7 @@ package body Sem_Warn is\n \n                      --  Case of warning on any unread OUT parameter (note\n                      --  such indications are only set if the appropriate\n-                     --  warning options were set, so no need to recheck here.\n+                     --  warning options were set, so no need to recheck here.)\n \n                      or else\n                        Referenced_As_Out_Parameter_Check_Spec (E1))"}, {"sha": "3dbecc31cc929578efdcb48bc2dd009708a1c7aa", "filename": "gcc/ada/switch-m.adb", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Fswitch-m.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Fswitch-m.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-m.adb?ref=b3c336413b3354e4d18e2e8454eee884e3349f99", "patch": "@@ -196,6 +196,24 @@ package body Switch.M is\n                      Add_Switch_Component (\"-mrtp\");\n                   end if;\n \n+               --  Switch for universal addressing on AAMP target\n+\n+               elsif Switch_Chars'Length >= 5\n+                 and then\n+                   Switch_Chars\n+                     (Switch_Chars'First .. Switch_Chars'First + 4) = \"-univ\"\n+               then\n+                  Add_Switch_Component (Switch_Chars);\n+\n+               --  Switch for specifying AAMP target library\n+\n+               elsif Switch_Chars'Length > 13\n+                 and then\n+                   Switch_Chars (Switch_Chars'First .. Switch_Chars'First + 12)\n+                     = \"-aamp_target=\"\n+               then\n+                  Add_Switch_Component (Switch_Chars);\n+\n                --  Take only into account switches that are transmitted to\n                --  gnat1 by the gcc driver and stored by gnat1 in the ALI file.\n "}, {"sha": "1fd837e150c74add10a7c0505c55924658357fe0", "filename": "gcc/ada/tb-alvms.c", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Ftb-alvms.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Ftb-alvms.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftb-alvms.c?ref=b3c336413b3354e4d18e2e8454eee884e3349f99", "patch": "@@ -1,29 +1,28 @@\n /****************************************************************************\n  *                                                                          *\n- *                         GNAT COMPILER COMPONENTS                         *\n+ *                         GNAT RUN-TIME COMPONENTS                         *\n  *                                                                          *\n  *                   T R A C E B A C K - A l p h a / V M S                  *\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *                     Copyright (C) 2003-2007, AdaCore                     *\n+ *                     Copyright (C) 2003-2011, AdaCore                     *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n- * ware  Foundation;  either version 2,  or (at your option) any later ver- *\n+ * ware  Foundation;  either version 3,  or (at your option) any later ver- *\n  * sion.  GNAT is distributed in the hope that it will be useful, but WITH- *\n  * OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY *\n- * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License *\n- * for  more details.  You should have  received  a copy of the GNU General *\n- * Public License  distributed with GNAT;  see file COPYING.  If not, write *\n- * to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, *\n- * Boston, MA 02110-1301, USA.                                              *\n+ * or FITNESS FOR A PARTICULAR PURPOSE.                                     *\n  *                                                                          *\n- * As a  special  exception,  if you  link  this file  with other  files to *\n- * produce an executable,  this file does not by itself cause the resulting *\n- * executable to be covered by the GNU General Public License. This except- *\n- * ion does not  however invalidate  any other reasons  why the  executable *\n- * file might be covered by the  GNU Public License.                        *\n+ * As a special exception under Section 7 of GPL version 3, you are granted *\n+ * additional permissions described in the GCC Runtime Library Exception,   *\n+ * version 3.1, as published by the Free Software Foundation.               *\n+ *                                                                          *\n+ * You should have received a copy of the GNU General Public License and    *\n+ * a copy of the GCC Runtime Library Exception along with this program;     *\n+ * see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    *\n+ * <http://www.gnu.org/licenses/>.                                          *\n  *                                                                          *\n  * GNAT was originally developed  by the GNAT team at  New York University. *\n  * Extensive contributions were provided by Ada Core Technologies Inc.      *"}, {"sha": "4f743a110a7fe3f9615e0c49cd1b9052394922ed", "filename": "gcc/ada/tb-alvxw.c", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Ftb-alvxw.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Ftb-alvxw.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftb-alvxw.c?ref=b3c336413b3354e4d18e2e8454eee884e3349f99", "patch": "@@ -1,29 +1,28 @@\n /****************************************************************************\n  *                                                                          *\n- *                         GNAT COMPILER COMPONENTS                         *\n+ *                         GNAT RUN-TIME COMPONENTS                         *\n  *                                                                          *\n  *                T R A C E B A C K - A l p h a / V x W o r k s             *\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *                     Copyright (C) 2000-2006, AdaCore                     *\n+ *                     Copyright (C) 2000-2011, AdaCore                     *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n- * ware  Foundation;  either version 2,  or (at your option) any later ver- *\n+ * ware  Foundation;  either version 3,  or (at your option) any later ver- *\n  * sion.  GNAT is distributed in the hope that it will be useful, but WITH- *\n  * OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY *\n- * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License *\n- * for  more details.  You should have  received  a copy of the GNU General *\n- * Public License  distributed with GNAT;  see file COPYING.  If not, write *\n- * to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, *\n- * Boston, MA 02110-1301, USA.                                              *\n+ * or FITNESS FOR A PARTICULAR PURPOSE.                                     *\n  *                                                                          *\n- * As a  special  exception,  if you  link  this file  with other  files to *\n- * produce an executable,  this file does not by itself cause the resulting *\n- * executable to be covered by the GNU General Public License. This except- *\n- * ion does not  however invalidate  any other reasons  why the  executable *\n- * file might be covered by the  GNU Public License.                        *\n+ * As a special exception under Section 7 of GPL version 3, you are granted *\n+ * additional permissions described in the GCC Runtime Library Exception,   *\n+ * version 3.1, as published by the Free Software Foundation.               *\n+ *                                                                          *\n+ * You should have received a copy of the GNU General Public License and    *\n+ * a copy of the GCC Runtime Library Exception along with this program;     *\n+ * see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    *\n+ * <http://www.gnu.org/licenses/>.                                          *\n  *                                                                          *\n  * GNAT was originally developed  by the GNAT team at  New York University. *\n  * Extensive contributions were provided by Ada Core Technologies Inc.      *"}, {"sha": "7b7c27ad24cca5d27d1fd9b48799a03974d50e36", "filename": "gcc/ada/tb-gcc.c", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Ftb-gcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Ftb-gcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftb-gcc.c?ref=b3c336413b3354e4d18e2e8454eee884e3349f99", "patch": "@@ -1,29 +1,28 @@\n /****************************************************************************\n  *                                                                          *\n- *                         GNAT COMPILER COMPONENTS                         *\n+ *                         GNAT RUN-TIME COMPONENTS                         *\n  *                                                                          *\n  *                   T R A C E B A C K - G C C t a b l e s                  *\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 2004-2009, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 2004-2011, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n- * ware  Foundation;  either version 2,  or (at your option) any later ver- *\n+ * ware  Foundation;  either version 3,  or (at your option) any later ver- *\n  * sion.  GNAT is distributed in the hope that it will be useful, but WITH- *\n  * OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY *\n- * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License *\n- * for  more details.  You should have  received  a copy of the GNU General *\n- * Public License  distributed with GNAT;  see file COPYING.  If not, write *\n- * to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, *\n- * Boston, MA 02110-1301, USA.                                              *\n+ * or FITNESS FOR A PARTICULAR PURPOSE.                                     *\n  *                                                                          *\n- * As a  special  exception,  if you  link  this file  with other  files to *\n- * produce an executable,  this file does not by itself cause the resulting *\n- * executable to be covered by the GNU General Public License. This except- *\n- * ion does not  however invalidate  any other reasons  why the  executable *\n- * file might be covered by the  GNU Public License.                        *\n+ * As a special exception under Section 7 of GPL version 3, you are granted *\n+ * additional permissions described in the GCC Runtime Library Exception,   *\n+ * version 3.1, as published by the Free Software Foundation.               *\n+ *                                                                          *\n+ * You should have received a copy of the GNU General Public License and    *\n+ * a copy of the GCC Runtime Library Exception along with this program;     *\n+ * see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    *\n+ * <http://www.gnu.org/licenses/>.                                          *\n  *                                                                          *\n  * GNAT was originally developed  by the GNAT team at  New York University. *\n  * Extensive contributions were provided by Ada Core Technologies Inc.      *"}, {"sha": "3d55c6e86279ad3b6c7099afa95fcffe723320bf", "filename": "gcc/ada/tb-ivms.c", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Ftb-ivms.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Ftb-ivms.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftb-ivms.c?ref=b3c336413b3354e4d18e2e8454eee884e3349f99", "patch": "@@ -1,29 +1,28 @@\n /****************************************************************************\n  *                                                                          *\n- *                         GNAT COMPILER COMPONENTS                         *\n+ *                         GNAT RUN-TIME COMPONENTS                         *\n  *                                                                          *\n  *                 T R A C E B A C K - I t a n i u m  / V M S               *\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *                     Copyright (C) 2007, AdaCore                          *\n+ *                     Copyright (C) 2007-2011, AdaCore                     *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n- * ware  Foundation;  either version 2,  or (at your option) any later ver- *\n+ * ware  Foundation;  either version 3,  or (at your option) any later ver- *\n  * sion.  GNAT is distributed in the hope that it will be useful, but WITH- *\n  * OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY *\n- * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License *\n- * for  more details.  You should have  received  a copy of the GNU General *\n- * Public License  distributed with GNAT;  see file COPYING.  If not, write *\n- * to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, *\n- * Boston, MA 02110-1301, USA.                                              *\n+ * or FITNESS FOR A PARTICULAR PURPOSE.                                     *\n  *                                                                          *\n- * As a  special  exception,  if you  link  this file  with other  files to *\n- * produce an executable,  this file does not by itself cause the resulting *\n- * executable to be covered by the GNU General Public License. This except- *\n- * ion does not  however invalidate  any other reasons  why the  executable *\n- * file might be covered by the  GNU Public License.                        *\n+ * As a special exception under Section 7 of GPL version 3, you are granted *\n+ * additional permissions described in the GCC Runtime Library Exception,   *\n+ * version 3.1, as published by the Free Software Foundation.               *\n+ *                                                                          *\n+ * You should have received a copy of the GNU General Public License and    *\n+ * a copy of the GCC Runtime Library Exception along with this program;     *\n+ * see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    *\n+ * <http://www.gnu.org/licenses/>.                                          *\n  *                                                                          *\n  * GNAT was originally developed  by the GNAT team at  New York University. *\n  * Extensive contributions were provided by Ada Core Technologies Inc.      *"}, {"sha": "ff2a3b6cfdb0a3b04737f33d182f9dae853d7808", "filename": "gcc/ada/tracebak.c", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Ftracebak.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3c336413b3354e4d18e2e8454eee884e3349f99/gcc%2Fada%2Ftracebak.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftracebak.c?ref=b3c336413b3354e4d18e2e8454eee884e3349f99", "patch": "@@ -1,6 +1,6 @@\n /****************************************************************************\n  *                                                                          *\n- *                         GNAT COMPILER COMPONENTS                         *\n+ *                         GNAT RUN-TIME COMPONENTS                         *\n  *                                                                          *\n  *                            T R A C E B A C K                             *\n  *                                                                          *\n@@ -10,20 +10,19 @@\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n- * ware  Foundation;  either version 2,  or (at your option) any later ver- *\n+ * ware  Foundation;  either version 3,  or (at your option) any later ver- *\n  * sion.  GNAT is distributed in the hope that it will be useful, but WITH- *\n  * OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY *\n- * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License *\n- * for  more details.  You should have  received  a copy of the GNU General *\n- * Public License  distributed with GNAT;  see file COPYING.  If not, write *\n- * to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, *\n- * Boston, MA 02110-1301, USA.                                              *\n+ * or FITNESS FOR A PARTICULAR PURPOSE.                                     *\n  *                                                                          *\n- * As a  special  exception,  if you  link  this file  with other  files to *\n- * produce an executable,  this file does not by itself cause the resulting *\n- * executable to be covered by the GNU General Public License. This except- *\n- * ion does not  however invalidate  any other reasons  why the  executable *\n- * file might be covered by the  GNU Public License.                        *\n+ * As a special exception under Section 7 of GPL version 3, you are granted *\n+ * additional permissions described in the GCC Runtime Library Exception,   *\n+ * version 3.1, as published by the Free Software Foundation.               *\n+ *                                                                          *\n+ * You should have received a copy of the GNU General Public License and    *\n+ * a copy of the GCC Runtime Library Exception along with this program;     *\n+ * see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    *\n+ * <http://www.gnu.org/licenses/>.                                          *\n  *                                                                          *\n  * GNAT was originally developed  by the GNAT team at  New York University. *\n  * Extensive contributions were provided by Ada Core Technologies Inc.      *\n@@ -207,7 +206,7 @@ extern void (*Unlock_Task) (void);\n #if defined (__APPLE__) \\\n     && defined (__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__) \\\n     && __ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__ >= 1040\n- \n+\n #define USE_GCC_UNWINDER\n \n #if defined (__i386__) || defined (__x86_64__)"}]}