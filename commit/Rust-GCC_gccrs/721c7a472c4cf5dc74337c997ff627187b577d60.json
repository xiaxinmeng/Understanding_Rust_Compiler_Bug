{"sha": "721c7a472c4cf5dc74337c997ff627187b577d60", "node_id": "C_kwDOANBUbNoAKDcyMWM3YTQ3MmM0Y2Y1ZGM3NDMzN2M5OTdmZjYyNzE4N2I1NzdkNjA", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-08-31T16:07:09Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-08-31T16:17:03Z"}, "message": "Add extra debugging for method call expressions", "tree": {"sha": "7247d5d2ecf7b18af56e878f37937d70b9186b06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7247d5d2ecf7b18af56e878f37937d70b9186b06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/721c7a472c4cf5dc74337c997ff627187b577d60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/721c7a472c4cf5dc74337c997ff627187b577d60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/721c7a472c4cf5dc74337c997ff627187b577d60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/721c7a472c4cf5dc74337c997ff627187b577d60/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ceb43210f8a6dfec98f634c326964328d1247f57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ceb43210f8a6dfec98f634c326964328d1247f57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ceb43210f8a6dfec98f634c326964328d1247f57"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "9a0d144ab107d1c07c71b18368e1a3f1e8f8b505", "filename": "gcc/rust/typecheck/rust-hir-type-check-expr.cc", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/721c7a472c4cf5dc74337c997ff627187b577d60/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/721c7a472c4cf5dc74337c997ff627187b577d60/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.cc?ref=721c7a472c4cf5dc74337c997ff627187b577d60", "patch": "@@ -1024,6 +1024,11 @@ TypeCheckExpr::visit (HIR::MethodCallExpr &expr)\n       return;\n     }\n \n+  rust_debug_loc (expr.get_method_name ().get_locus (),\n+\t\t  \"resolved method to: {%u} {%s}\",\n+\t\t  candidate.candidate.ty->get_ref (),\n+\t\t  candidate.candidate.ty->debug_str ().c_str ());\n+\n   // Get the adjusted self\n   Adjuster adj (receiver_tyty);\n   TyTy::BaseType *adjusted_self = adj.adjust_type (candidate.adjustments);\n@@ -1120,6 +1125,9 @@ TypeCheckExpr::visit (HIR::MethodCallExpr &expr)\n   // apply any remaining generic arguments\n   if (expr.get_method_name ().has_generic_args ())\n     {\n+      rust_debug_loc (expr.get_method_name ().get_generic_args ().get_locus (),\n+\t\t      \"applying generic arguments to method_call: {%s}\",\n+\t\t      lookup->debug_str ().c_str ());\n       HIR::GenericArgs &args = expr.get_method_name ().get_generic_args ();\n       lookup\n \t= SubstMapper::Resolve (lookup, expr.get_method_name ().get_locus (),\n@@ -1129,10 +1137,14 @@ TypeCheckExpr::visit (HIR::MethodCallExpr &expr)\n     }\n   else if (lookup->needs_generic_substitutions ())\n     {\n+      rust_debug (\"method needs inference: {%s}\",\n+\t\t  lookup->debug_str ().c_str ());\n       lookup = SubstMapper::InferSubst (lookup,\n \t\t\t\t\texpr.get_method_name ().get_locus ());\n     }\n \n+  rust_debug (\"type-checking method_call: {%s}\", lookup->debug_str ().c_str ());\n+\n   TyTy::BaseType *function_ret_tyty\n     = TyTy::TypeCheckMethodCallExpr::go (lookup, expr, adjusted_self, context);\n   if (function_ret_tyty == nullptr"}]}