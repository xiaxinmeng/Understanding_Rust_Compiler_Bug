{"sha": "5f031f9747fdfb04213c20d24f109fb5ffc877df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWYwMzFmOTc0N2ZkZmIwNDIxM2MyMGQyNGYxMDlmYjVmZmM4NzdkZg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-02-19T15:01:41Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-02-19T15:28:45Z"}, "message": "libstdc++: midpoint should not constrain T is complete (LWG 3200)\n\n\t* include/std/numeric (midpoint(T8, T*)): Do not check for complete\n\ttype during overload resolution, use static assert instead (LWG 3200).\n\t* testsuite/26_numerics/midpoint/pointer.cc: Do not test with\n\tincomplete type.\n\t* testsuite/26_numerics/midpoint/pointer_neg.cc: New test.", "tree": {"sha": "658c7d6af15e28d790c40d72f9fc488a0d316e37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/658c7d6af15e28d790c40d72f9fc488a0d316e37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f031f9747fdfb04213c20d24f109fb5ffc877df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f031f9747fdfb04213c20d24f109fb5ffc877df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f031f9747fdfb04213c20d24f109fb5ffc877df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f031f9747fdfb04213c20d24f109fb5ffc877df/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66ae31eb308e5bc90ce6dfd0a67381a0929a6aa0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66ae31eb308e5bc90ce6dfd0a67381a0929a6aa0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66ae31eb308e5bc90ce6dfd0a67381a0929a6aa0"}], "stats": {"total": 39, "additions": 35, "deletions": 4}, "files": [{"sha": "84e5ea98022592c184c8b14dd4ee72f503e78d2d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f031f9747fdfb04213c20d24f109fb5ffc877df/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f031f9747fdfb04213c20d24f109fb5ffc877df/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5f031f9747fdfb04213c20d24f109fb5ffc877df", "patch": "@@ -1,5 +1,11 @@\n 2020-02-19  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/std/numeric (midpoint(T8, T*)): Do not check for complete\n+\ttype during overload resolution, use static assert instead (LWG 3200).\n+\t* testsuite/26_numerics/midpoint/pointer.cc: Do not test with\n+\tincomplete type.\n+\t* testsuite/26_numerics/midpoint/pointer_neg.cc: New test.\n+\n \t* include/std/span (span(T (&)[N])): Use non-deduced context to\n \tprevent first parameter from interfering with class template argument\n \tdeduction (LWG 3369)."}, {"sha": "cf35191cb47aeaea9d68c4297b1dc71d164c9b5b", "filename": "libstdc++-v3/include/std/numeric", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f031f9747fdfb04213c20d24f109fb5ffc877df/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f031f9747fdfb04213c20d24f109fb5ffc877df/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric?ref=5f031f9747fdfb04213c20d24f109fb5ffc877df", "patch": "@@ -208,10 +208,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     }\n \n   template<typename _Tp>\n-    constexpr\n-    enable_if_t<__and_v<is_object<_Tp>, bool_constant<sizeof(_Tp) != 0>>, _Tp*>\n+    constexpr enable_if_t<is_object_v<_Tp>, _Tp*>\n     midpoint(_Tp* __a, _Tp* __b) noexcept\n     {\n+      static_assert( sizeof(_Tp) != 0, \"type must be complete\" );\n       return __a  + (__b - __a) / 2;\n     }\n _GLIBCXX_END_NAMESPACE_VERSION"}, {"sha": "7e75d50663c5634ec36567d1442127a0f521fe7b", "filename": "libstdc++-v3/testsuite/26_numerics/midpoint/pointer.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f031f9747fdfb04213c20d24f109fb5ffc877df/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fmidpoint%2Fpointer.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f031f9747fdfb04213c20d24f109fb5ffc877df/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fmidpoint%2Fpointer.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fmidpoint%2Fpointer.cc?ref=5f031f9747fdfb04213c20d24f109fb5ffc877df", "patch": "@@ -19,7 +19,6 @@\n // { dg-do run { target c++2a } }\n \n #include <numeric>\n-#include <climits>\n #include <testsuite_hooks.h>\n \n const int* p = nullptr;\n@@ -36,7 +35,6 @@ template<typename T> constexpr bool no_midpoint()\n static_assert(no_midpoint<void>());\n static_assert(no_midpoint<int()>());\n static_assert(no_midpoint<int&>());\n-static_assert(no_midpoint<struct Incomplete>());\n \n constexpr int ca[3] = {};\n static_assert( std::midpoint(ca, ca+3) == ca+1 );"}, {"sha": "564b1acfe271c92048a855d378b4a5c70b84b5ef", "filename": "libstdc++-v3/testsuite/26_numerics/midpoint/pointer_neg.cc", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f031f9747fdfb04213c20d24f109fb5ffc877df/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fmidpoint%2Fpointer_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f031f9747fdfb04213c20d24f109fb5ffc877df/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fmidpoint%2Fpointer_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fmidpoint%2Fpointer_neg.cc?ref=5f031f9747fdfb04213c20d24f109fb5ffc877df", "patch": "@@ -0,0 +1,27 @@\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++2a\" }\n+// { dg-do compile { target c++2a } }\n+\n+#include <numeric>\n+\n+// LWG 3200. midpoint should not constrain T is complete\n+struct Incomplete* pinc = 0;\n+auto p1 = std::midpoint(pinc, pinc); // { dg-error \"here\" }\n+\n+// { dg-error \"incomplete type\" \"\" { target *-*-* } 0 }"}]}