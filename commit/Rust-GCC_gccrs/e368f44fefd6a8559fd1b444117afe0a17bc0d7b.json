{"sha": "e368f44fefd6a8559fd1b444117afe0a17bc0d7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM2OGY0NGZlZmQ2YTg1NTlmZDFiNDQ0MTE3YWZlMGExN2JjMGQ3Yg==", "commit": {"author": {"name": "Dehao Chen", "email": "dehao@google.com", "date": "2012-10-10T01:26:30Z"}, "committer": {"name": "Dehao Chen", "email": "dehao@gcc.gnu.org", "date": "2012-10-10T01:26:30Z"}, "message": "tree-eh.c (lower_try_finally_onedest): Set correct location for deallocator.\n\ngcc:\n\t2012-10-10  Dehao Chen  <dehao@google.com>\n\n\t* tree-eh.c (lower_try_finally_onedest): Set correct location for\n\tdeallocator.\n\t* gimplify.c (gimplify_expr): Set correct location for TRY stmt.\n\ngcc/cp:\n\t2012-10-10  Dehao Chen  <dehao@google.com>\n\n\t* cp-gimplify.c (cp_genericize_r): Set location for TRY expr.\n\ntestsuite:\n\t2012-10-10  Dehao Chen  <dehao@google.com>\n\n\t* g++.dg/debug/dwarf2/deallocator.C: Cover more deallocator cases.\n\nFrom-SVN: r192285", "tree": {"sha": "b6320b917e9625d49064449b5ac44f56d88add5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b6320b917e9625d49064449b5ac44f56d88add5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e368f44fefd6a8559fd1b444117afe0a17bc0d7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e368f44fefd6a8559fd1b444117afe0a17bc0d7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e368f44fefd6a8559fd1b444117afe0a17bc0d7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e368f44fefd6a8559fd1b444117afe0a17bc0d7b/comments", "author": {"login": "danielcdh", "id": 694263, "node_id": "MDQ6VXNlcjY5NDI2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/694263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielcdh", "html_url": "https://github.com/danielcdh", "followers_url": "https://api.github.com/users/danielcdh/followers", "following_url": "https://api.github.com/users/danielcdh/following{/other_user}", "gists_url": "https://api.github.com/users/danielcdh/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielcdh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielcdh/subscriptions", "organizations_url": "https://api.github.com/users/danielcdh/orgs", "repos_url": "https://api.github.com/users/danielcdh/repos", "events_url": "https://api.github.com/users/danielcdh/events{/privacy}", "received_events_url": "https://api.github.com/users/danielcdh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2c62c8ec64ac0b3b7a21db4f45d8a8ae6372aa46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c62c8ec64ac0b3b7a21db4f45d8a8ae6372aa46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c62c8ec64ac0b3b7a21db4f45d8a8ae6372aa46"}], "stats": {"total": 56, "additions": 50, "deletions": 6}, "files": [{"sha": "a7d550fa976c31b4921fa82538442eef60dcdb8d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e368f44fefd6a8559fd1b444117afe0a17bc0d7b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e368f44fefd6a8559fd1b444117afe0a17bc0d7b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e368f44fefd6a8559fd1b444117afe0a17bc0d7b", "patch": "@@ -1,3 +1,9 @@\n+2012-10-10  Dehao Chen  <dehao@google.com>\n+\n+\t* tree-eh.c (lower_try_finally_onedest): Set correct location for\n+\tdeallocator.\n+\t* gimplify.c (gimplify_expr): Set correct location for TRY stmt.\n+\n 2012-10-10  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/52480"}, {"sha": "68ebb96a7c3164c90fb2efec1e1a28195434a5ba", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e368f44fefd6a8559fd1b444117afe0a17bc0d7b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e368f44fefd6a8559fd1b444117afe0a17bc0d7b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e368f44fefd6a8559fd1b444117afe0a17bc0d7b", "patch": "@@ -1,3 +1,7 @@\n+2012-10-10  Dehao Chen  <dehao@google.com>\n+\n+\t* cp-gimplify.c (cp_genericize_r): Set location for TRY expr.\n+\n 2012-10-09  Lawrence Crowl  <crowl@google.com>\n \n \t* Make-lang.in (class.o): Add dependence on hash-table.h."}, {"sha": "f715e963c490d665e4c9a5829e8fa74f15653a8f", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e368f44fefd6a8559fd1b444117afe0a17bc0d7b/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e368f44fefd6a8559fd1b444117afe0a17bc0d7b/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=e368f44fefd6a8559fd1b444117afe0a17bc0d7b", "patch": "@@ -948,11 +948,12 @@ cp_genericize_r (tree *stmt_p, int *walk_subtrees, void *data)\n      to lower this construct before scanning it, so we need to lower these\n      before doing anything else.  */\n   else if (TREE_CODE (stmt) == CLEANUP_STMT)\n-    *stmt_p = build2 (CLEANUP_EH_ONLY (stmt) ? TRY_CATCH_EXPR\n-\t\t\t\t\t     : TRY_FINALLY_EXPR,\n-\t\t      void_type_node,\n-\t\t      CLEANUP_BODY (stmt),\n-\t\t      CLEANUP_EXPR (stmt));\n+    *stmt_p = build2_loc (EXPR_LOCATION (stmt),\n+\t\t\t  CLEANUP_EH_ONLY (stmt) ? TRY_CATCH_EXPR\n+\t\t\t\t\t\t : TRY_FINALLY_EXPR,\n+\t\t\t  void_type_node,\n+\t\t\t  CLEANUP_BODY (stmt),\n+\t\t\t  CLEANUP_EXPR (stmt));\n \n   else if (TREE_CODE (stmt) == IF_STMT)\n     {"}, {"sha": "979715ab95e194127fb2325a3098716e38740914", "filename": "gcc/gimplify.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e368f44fefd6a8559fd1b444117afe0a17bc0d7b/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e368f44fefd6a8559fd1b444117afe0a17bc0d7b/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=e368f44fefd6a8559fd1b444117afe0a17bc0d7b", "patch": "@@ -7475,6 +7475,10 @@ gimplify_expr (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p,\n \t\t\t\t     TREE_CODE (*expr_p) == TRY_FINALLY_EXPR\n \t\t\t\t     ? GIMPLE_TRY_FINALLY\n \t\t\t\t     : GIMPLE_TRY_CATCH);\n+\t    if (LOCATION_LOCUS (saved_location) != UNKNOWN_LOCATION)\n+\t      gimple_set_location (try_, saved_location);\n+\t    else\n+\t      gimple_set_location (try_, EXPR_LOCATION (save_expr));\n \t    if (TREE_CODE (*expr_p) == TRY_CATCH_EXPR)\n \t      gimple_try_set_catch_is_cleanup (try_,\n \t\t\t\t\t       TRY_CATCH_IS_CLEANUP (*expr_p));"}, {"sha": "a5a27a87fd31c492ef546efde7e478fc8dd5c681", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e368f44fefd6a8559fd1b444117afe0a17bc0d7b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e368f44fefd6a8559fd1b444117afe0a17bc0d7b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e368f44fefd6a8559fd1b444117afe0a17bc0d7b", "patch": "@@ -1,3 +1,7 @@\n+2012-10-10  Dehao Chen  <dehao@google.com>\n+\n+\t* g++.dg/debug/dwarf2/deallocator.C: Cover more deallocator cases.\n+\n 2012-10-10  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/52480"}, {"sha": "405739311a91c754b5c06eaf49901da827c804cd", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/deallocator.C", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e368f44fefd6a8559fd1b444117afe0a17bc0d7b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fdeallocator.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e368f44fefd6a8559fd1b444117afe0a17bc0d7b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fdeallocator.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fdeallocator.C?ref=e368f44fefd6a8559fd1b444117afe0a17bc0d7b", "patch": "@@ -18,6 +18,7 @@ int bar();\n \n void foo(int i)\n {\n+  t test_outside;\n   for (int j = 0; j < 10; j++)\n     {\n       t test;\n@@ -28,6 +29,18 @@ void foo(int i)\n \t  return;\n \t}\n     }\n+  if (i)\n+    {\n+      t test;\n+      if (i == 10)\n+\t{\n+\t  test.bar();\n+\t}\n+    }\n+  test_outside.foo();\n   return;\n }\n-// { dg-final { scan-assembler \"deallocator.C:28\" } }\n+// { dg-final { scan-assembler \"deallocator.C:29\" } }\n+// { dg-final { scan-assembler \"deallocator.C:31\" } }\n+// { dg-final { scan-assembler \"deallocator.C:38\" } }\n+// { dg-final { scan-assembler \"deallocator.C:41\" } }"}, {"sha": "b4be50c6fd396f190c2ebbf59ad40160e46bc903", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e368f44fefd6a8559fd1b444117afe0a17bc0d7b/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e368f44fefd6a8559fd1b444117afe0a17bc0d7b/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=e368f44fefd6a8559fd1b444117afe0a17bc0d7b", "patch": "@@ -1100,6 +1100,7 @@ lower_try_finally_onedest (struct leh_state *state, struct leh_tf_state *tf)\n   struct goto_queue_node *q, *qe;\n   gimple x;\n   gimple_seq finally;\n+  gimple_stmt_iterator gsi;\n   tree finally_label;\n   location_t loc = gimple_location (tf->try_finally_expr);\n \n@@ -1120,6 +1121,17 @@ lower_try_finally_onedest (struct leh_state *state, struct leh_tf_state *tf)\n \n   lower_eh_constructs_1 (state, &finally);\n \n+  for (gsi = gsi_start (finally); !gsi_end_p (gsi); gsi_next (&gsi))\n+    {\n+      gimple stmt = gsi_stmt (gsi);\n+      if (LOCATION_LOCUS (gimple_location (stmt)) == UNKNOWN_LOCATION)\n+\t{\n+\t  tree block = gimple_block (stmt);\n+\t  gimple_set_location (stmt, gimple_location (tf->try_finally_expr));\n+\t  gimple_set_block (stmt, block);\n+\t}\n+    }\n+\n   if (tf->may_throw)\n     {\n       /* Only reachable via the exception edge.  Add the given label to"}]}