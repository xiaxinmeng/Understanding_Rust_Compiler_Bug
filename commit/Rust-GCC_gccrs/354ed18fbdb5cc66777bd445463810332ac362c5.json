{"sha": "354ed18fbdb5cc66777bd445463810332ac362c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzU0ZWQxOGZiZGI1Y2M2Njc3N2JkNDQ1NDYzODEwMzMyYWMzNjJjNQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2004-11-17T02:19:17Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2004-11-17T02:19:17Z"}, "message": "rs6000.c (rs6000_override_options): Split e500v2 doubles.\n\n        * config/rs6000/rs6000.c (rs6000_override_options): Split e500v2\n        doubles.\n        (rs6000_complex_function_value): Handle e500 v2 variant.\n\nFrom-SVN: r90784", "tree": {"sha": "bf43fd347acb16104c88f8d70e6e2aa236ead1b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf43fd347acb16104c88f8d70e6e2aa236ead1b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/354ed18fbdb5cc66777bd445463810332ac362c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/354ed18fbdb5cc66777bd445463810332ac362c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/354ed18fbdb5cc66777bd445463810332ac362c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/354ed18fbdb5cc66777bd445463810332ac362c5/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "88a40e67adcb05e70e4c816ade1e80fe9fa1d374", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88a40e67adcb05e70e4c816ade1e80fe9fa1d374", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88a40e67adcb05e70e4c816ade1e80fe9fa1d374"}], "stats": {"total": 35, "additions": 26, "deletions": 9}, "files": [{"sha": "def3930b57087b8e74dde070ebca69e7cd355d9b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/354ed18fbdb5cc66777bd445463810332ac362c5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/354ed18fbdb5cc66777bd445463810332ac362c5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=354ed18fbdb5cc66777bd445463810332ac362c5", "patch": "@@ -1,3 +1,9 @@\n+2004-11-16  Aldy Hernandez  <aldyh@redhat.com>\n+\n+        * config/rs6000/rs6000.c (rs6000_override_options): Split e500v2\n+        doubles.\n+        (rs6000_complex_function_value): Handle e500 v2 variant.\n+\n 2004-11-16  Daniel Berlin  <dberlin@dberlin.org>\n \n \tFix PR tree-optimization/18519"}, {"sha": "d67a857a6608a1585493563ac8af87b5f94f7431", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/354ed18fbdb5cc66777bd445463810332ac362c5/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/354ed18fbdb5cc66777bd445463810332ac362c5/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=354ed18fbdb5cc66777bd445463810332ac362c5", "patch": "@@ -1493,7 +1493,7 @@ rs6000_override_options (const char *default_cpu)\n \n   /* We should always be splitting complex arguments, but we can't break\n      Linux and Darwin ABIs at the moment.  For now, only AIX is fixed.  */\n-  if (DEFAULT_ABI != ABI_AIX)\n+  if (DEFAULT_ABI != ABI_AIX && !TARGET_E500_DOUBLE)\n     targetm.calls.split_complex_arg = NULL;\n \n   /* Initialize rs6000_cost with the appropriate target costs.  */\n@@ -18315,20 +18315,31 @@ rs6000_complex_function_value (enum machine_mode mode)\n   enum machine_mode inner = GET_MODE_INNER (mode);\n   unsigned int inner_bytes = GET_MODE_SIZE (inner);\n \n-  if (FLOAT_MODE_P (mode) && TARGET_HARD_FLOAT && TARGET_FPRS)\n-    regno = FP_ARG_RETURN;\n-  else\n+  if (TARGET_E500_DOUBLE)\n     {\n+      /* FIXME: This causes complex values to be returned in the full\n+\t 64-bit GPR.  It works, but is not ABI compatible with\n+\t soft-float.  Complex doubles should be returned in 4\n+\t consecutive 32-bit GPRs.  */\n       regno = GP_ARG_RETURN;\n+    }\n+  else\n+    {\n+      if (FLOAT_MODE_P (mode) && TARGET_HARD_FLOAT && TARGET_FPRS)\n+\tregno = FP_ARG_RETURN;\n+      else\n+\t{\n+\t  regno = GP_ARG_RETURN;\n \n-      /* 32-bit is OK since it'll go in r3/r4.  */\n-      if (TARGET_32BIT && inner_bytes >= 4)\n+\t  /* 32-bit is OK since it'll go in r3/r4.  */\n+\t  if (TARGET_32BIT && inner_bytes >= 4)\n+\t    return gen_rtx_REG (mode, regno);\n+\t}\n+\n+      if (inner_bytes >= 8)\n \treturn gen_rtx_REG (mode, regno);\n     }\n \n-  if (inner_bytes >= 8)\n-    return gen_rtx_REG (mode, regno);\n-\n   r1 = gen_rtx_EXPR_LIST (inner, gen_rtx_REG (inner, regno),\n \t\t\t  const0_rtx);\n   r2 = gen_rtx_EXPR_LIST (inner, gen_rtx_REG (inner, regno + 1),"}]}