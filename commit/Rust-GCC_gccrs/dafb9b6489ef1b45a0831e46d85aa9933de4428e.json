{"sha": "dafb9b6489ef1b45a0831e46d85aa9933de4428e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGFmYjliNjQ4OWVmMWI0NWEwODMxZTQ2ZDg1YWE5OTMzZGU0NDI4ZQ==", "commit": {"author": {"name": "Alex Velenko", "email": "Alex.Velenko@arm.com", "date": "2014-01-23T14:48:40Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-01-23T14:48:40Z"}, "message": "[AArch64_BE 2/4] Big-Endian lane numbering fix\n\n2013-01-23  Alex Velenko  <Alex.Velenko@arm.com>\n\n\t* config/aarch64/aarch64-simd.md\n\t(aarch64_be_checked_get_lane<mode>): New define_expand.\n\t* config/aarch64/aarch64-simd-builtins.def\n\t(BUILTIN_VALL (GETLANE, be_checked_get_lane, 0):\n\tNew builtin definition.\n\t* config/aarch64/arm_neon.h: (__aarch64_vget_lane_any):\n\tUse new safe be builtin.\n\nFrom-SVN: r206970", "tree": {"sha": "3474cbb6a9a7a45a2328c8e4ac4d5d75dd9e6a94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3474cbb6a9a7a45a2328c8e4ac4d5d75dd9e6a94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dafb9b6489ef1b45a0831e46d85aa9933de4428e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dafb9b6489ef1b45a0831e46d85aa9933de4428e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dafb9b6489ef1b45a0831e46d85aa9933de4428e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dafb9b6489ef1b45a0831e46d85aa9933de4428e/comments", "author": null, "committer": null, "parents": [{"sha": "89b4515c8c2a20b743febb65ce3df92ede698222", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89b4515c8c2a20b743febb65ce3df92ede698222", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89b4515c8c2a20b743febb65ce3df92ede698222"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "1670683f9e8a05168a2c20030f9176bc84558eea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dafb9b6489ef1b45a0831e46d85aa9933de4428e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dafb9b6489ef1b45a0831e46d85aa9933de4428e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dafb9b6489ef1b45a0831e46d85aa9933de4428e", "patch": "@@ -1,3 +1,13 @@\n+2013-01-23  Alex Velenko  <Alex.Velenko@arm.com>\n+\n+\t* config/aarch64/aarch64-simd.md\n+\t(aarch64_be_checked_get_lane<mode>): New define_expand.\n+\t* config/aarch64/aarch64-simd-builtins.def\n+\t(BUILTIN_VALL (GETLANE, be_checked_get_lane, 0):\n+\tNew builtin definition.\n+\t* config/aarch64/arm_neon.h: (__aarch64_vget_lane_any):\n+\tUse new safe be builtin.\n+\n 2014-01-23  Alex Velenko  <Alex.Velenko@arm.com>\n \n \t* config/aarch64/aarch64-simd.md (aarch64_be_ld1<mode>):"}, {"sha": "185281ae5e95d54f6854483550629a57f8f9be48", "filename": "gcc/config/aarch64/aarch64-simd-builtins.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dafb9b6489ef1b45a0831e46d85aa9933de4428e/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dafb9b6489ef1b45a0831e46d85aa9933de4428e/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def?ref=dafb9b6489ef1b45a0831e46d85aa9933de4428e", "patch": "@@ -49,6 +49,7 @@\n \n   BUILTIN_VALL (GETLANE, get_lane, 0)\n   VAR1 (GETLANE, get_lane, 0, di)\n+  BUILTIN_VALL (GETLANE, be_checked_get_lane, 0)\n \n   BUILTIN_VD_RE (REINTERP, reinterpretdi, 0)\n   BUILTIN_VDC (REINTERP, reinterpretv8qi, 0)"}, {"sha": "14eb7d08d155b252164e19f79de34aaf6a2e715c", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dafb9b6489ef1b45a0831e46d85aa9933de4428e/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dafb9b6489ef1b45a0831e46d85aa9933de4428e/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=dafb9b6489ef1b45a0831e46d85aa9933de4428e", "patch": "@@ -2062,6 +2062,20 @@\n   [(set_attr \"type\" \"neon_to_gp<q>\")]\n )\n \n+(define_expand \"aarch64_be_checked_get_lane<mode>\"\n+  [(match_operand:<VEL> 0 \"aarch64_simd_nonimmediate_operand\")\n+   (match_operand:VALL 1 \"register_operand\")\n+   (match_operand:SI 2 \"immediate_operand\")]\n+  \"TARGET_SIMD\"\n+  {\n+    operands[2] = GEN_INT (ENDIAN_LANE_N (<MODE>mode, INTVAL (operands[2])));\n+    emit_insn (gen_aarch64_get_lane<mode> (operands[0],\n+\t\t\t\t\t   operands[1],\n+\t\t\t\t\t   operands[2]));\n+    DONE;\n+  }\n+)\n+\n ;; Lane extraction of a value, neither sign nor zero extension\n ;; is guaranteed so upper bits should be considered undefined.\n (define_insn \"aarch64_get_lane<mode>\""}, {"sha": "1dcff675f03fd84f8888186cb1f059f900e740c1", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dafb9b6489ef1b45a0831e46d85aa9933de4428e/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dafb9b6489ef1b45a0831e46d85aa9933de4428e/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=dafb9b6489ef1b45a0831e46d85aa9933de4428e", "patch": "@@ -457,7 +457,7 @@ typedef struct poly16x8x4_t\n \n #define __aarch64_vget_lane_any(__size, __cast_ret, __cast_a, __a, __b) \\\n   (__cast_ret\t\t\t\t\t\t\t\t\\\n-     __builtin_aarch64_get_lane##__size (__cast_a __a, __b))\n+     __builtin_aarch64_be_checked_get_lane##__size (__cast_a __a, __b))\n \n #define __aarch64_vget_lane_f32(__a, __b) \\\n   __aarch64_vget_lane_any (v2sf, , , __a, __b)"}]}