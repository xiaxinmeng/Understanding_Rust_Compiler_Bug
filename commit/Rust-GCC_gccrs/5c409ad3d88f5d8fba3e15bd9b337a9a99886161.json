{"sha": "5c409ad3d88f5d8fba3e15bd9b337a9a99886161", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM0MDlhZDNkODhmNWQ4ZmJhM2UxNWJkOWIzMzdhOWE5OTg4NjE2MQ==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2001-03-06T01:04:28Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2001-03-06T01:04:28Z"}, "message": "TreeSet.java (writeObject): Use a for-loop instead of Iterator.hasNext().\n\n2001-03-06  Bryce McKinlay  <bryce@albatross.co.nz>\n\n\t* java/util/TreeSet.java (writeObject): Use a for-loop instead of\n\tIterator.hasNext().\n\n2001-03-05  Jochen Hoenicke  <jochen@gnu.org>\n\n\t* java/util/TreeMap.java (writeObject): Use defaultWriteObject()\n\tinstead of the new JDK1.2 API.  This is simpler and makes\n\tback-porting the classes to JDK1.1 trivial.\n\t(readObject): likewise.\n\nFrom-SVN: r40252", "tree": {"sha": "01665f375231499424faa1631a007154d43b46a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01665f375231499424faa1631a007154d43b46a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c409ad3d88f5d8fba3e15bd9b337a9a99886161", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c409ad3d88f5d8fba3e15bd9b337a9a99886161", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c409ad3d88f5d8fba3e15bd9b337a9a99886161", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c409ad3d88f5d8fba3e15bd9b337a9a99886161/comments", "author": null, "committer": null, "parents": [{"sha": "d97b75bee3fb323447411a7f2cad05535698d5ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d97b75bee3fb323447411a7f2cad05535698d5ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d97b75bee3fb323447411a7f2cad05535698d5ea"}], "stats": {"total": 30, "additions": 18, "deletions": 12}, "files": [{"sha": "9de90404a17d9680068fa56c43c582a1547bb01d", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c409ad3d88f5d8fba3e15bd9b337a9a99886161/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c409ad3d88f5d8fba3e15bd9b337a9a99886161/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=5c409ad3d88f5d8fba3e15bd9b337a9a99886161", "patch": "@@ -1,7 +1,18 @@\n+2001-03-06  Bryce McKinlay  <bryce@albatross.co.nz>\n+\n+\t* java/util/TreeSet.java (writeObject): Use a for-loop instead of\n+\tIterator.hasNext().\n+\n+2001-03-05  Jochen Hoenicke  <jochen@gnu.org>\n+\n+\t* java/util/TreeMap.java (writeObject): Use defaultWriteObject()\n+\tinstead of the new JDK1.2 API.  This is simpler and makes \n+\tback-porting the classes to JDK1.1 trivial.\n+\t(readObject): likewise.\n+\t\n 2001-03-01  Per Bothner  <per@bothner.com>\n \n \tChanges merged from Kawa's gnu.math.\n-\t* java/math/BigInteger.java \n \t* gnu/gcj/math/MPN.java (rshift0): New method handles zero shift count.\n \t(rshift(int[],int[],int,int):  Removed - not needed.\n \t(gcd):  Use rshift0 rather than rshift."}, {"sha": "59d6079e32ae50c70ade786a60444af52fe80385", "filename": "libjava/java/util/TreeMap.java", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c409ad3d88f5d8fba3e15bd9b337a9a99886161/libjava%2Fjava%2Futil%2FTreeMap.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c409ad3d88f5d8fba3e15bd9b337a9a99886161/libjava%2Fjava%2Futil%2FTreeMap.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FTreeMap.java?ref=5c409ad3d88f5d8fba3e15bd9b337a9a99886161", "patch": "@@ -39,7 +39,7 @@\n  * Comparator object, or by the natural ordering of the keys.\n  *\n  * The algorithms are adopted from Corman, Leiserson,\n- * and Rivest's <i>Introduction to Algorithms.<i>  In other words,\n+ * and Rivest's <i>Introduction to Algorithms.</i>  In other words,\n  * I cribbed from the same pseudocode as Sun.  <em>Any similarity\n  * between my code and Sun's (if there is any -- I have never looked\n  * at Sun's) is a result of this fact.</em>\n@@ -56,7 +56,6 @@\n  *\n  * @author           Jon Zeppieri\n  * @author\t     Bryce McKinlay\n- * @modified         $Id: TreeMap.java,v 1.3 2001/02/16 01:49:40 bryce Exp $\n  */\n public class TreeMap extends AbstractMap\n   implements SortedMap, Cloneable, Serializable\n@@ -777,9 +776,7 @@ else if (comparison < 0)\n \n   private void writeObject(ObjectOutputStream out) throws IOException\n   {\n-    ObjectOutputStream.PutField fields = out.putFields();\n-    fields.put(\"comparator\", comparator);\n-    out.writeFields();\n+    out.defaultWriteObject();\n \n     Node node = firstNode();\n     out.writeInt(size);\n@@ -795,8 +792,7 @@ private void writeObject(ObjectOutputStream out) throws IOException\n   private void readObject(ObjectInputStream in)\n     throws IOException, ClassNotFoundException\n   {\n-    ObjectInputStream.GetField fields = in.readFields();\n-    comparator = (Comparator) fields.get(\"comparator\", null);\n+    in.defaultReadObject();\n     int size = in.readInt();\n     putFromObjStream(in, size, true);\n   }"}, {"sha": "ba852131a13b1dc728863a8495c61c9e74798a12", "filename": "libjava/java/util/TreeSet.java", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c409ad3d88f5d8fba3e15bd9b337a9a99886161/libjava%2Fjava%2Futil%2FTreeSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c409ad3d88f5d8fba3e15bd9b337a9a99886161/libjava%2Fjava%2Futil%2FTreeSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FTreeSet.java?ref=5c409ad3d88f5d8fba3e15bd9b337a9a99886161", "patch": "@@ -44,8 +44,6 @@\n  * TreeSet is a part of the JDK1.2 Collections API.\n  *\n  * @author      Jon Zeppieri\n- * @version     $Revision: 1.2 $\n- * @modified    $Id: TreeSet.java,v 1.2 2001/02/15 03:59:57 bryce Exp $\n  */\n \n public class TreeSet extends AbstractSet\n@@ -269,11 +267,12 @@ public Iterator iterator()\n   private void writeObject(ObjectOutputStream out) throws IOException\n   {\n     Iterator itr = map.keySet().iterator();\n+    int size = map.size();\n \n     out.writeObject(map.comparator());\n-    out.writeInt(map.size());\n+    out.writeInt(size);\n \n-    while (itr.hasNext())\n+    for (int i = 0; i < size; i++)\n       out.writeObject(itr.next());\n   }\n "}]}