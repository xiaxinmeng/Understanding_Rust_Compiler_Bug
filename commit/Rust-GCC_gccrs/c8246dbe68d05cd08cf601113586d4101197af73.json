{"sha": "c8246dbe68d05cd08cf601113586d4101197af73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzgyNDZkYmU2OGQwNWNkMDhjZjYwMTExMzU4NmQ0MTAxMTk3YWY3Mw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2011-06-10T16:48:55Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2011-06-10T16:48:55Z"}, "message": "ipa-prop.c (ipa_write_node_info): Stream jump functions for indirect calls.\n\n\t* ipa-prop.c (ipa_write_node_info): Stream jump functions for indirect\n\tcalls.\n\t(ipa_read_node_info): Likewise.\n\nFrom-SVN: r174915", "tree": {"sha": "6e4ded18f39289785bbbf684a6315fcc74722d06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e4ded18f39289785bbbf684a6315fcc74722d06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8246dbe68d05cd08cf601113586d4101197af73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8246dbe68d05cd08cf601113586d4101197af73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8246dbe68d05cd08cf601113586d4101197af73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8246dbe68d05cd08cf601113586d4101197af73/comments", "author": null, "committer": null, "parents": [{"sha": "d7e2a1c13835e77ea0e8b380f8502c3377dd724e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7e2a1c13835e77ea0e8b380f8502c3377dd724e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7e2a1c13835e77ea0e8b380f8502c3377dd724e"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "b4fc4b2284625f42f7d2c71f847ad307fb10e295", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8246dbe68d05cd08cf601113586d4101197af73/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8246dbe68d05cd08cf601113586d4101197af73/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c8246dbe68d05cd08cf601113586d4101197af73", "patch": "@@ -1,3 +1,9 @@\n+2011-06-10  Jan Hubicka  <jh@suse.cz>\n+\n+\t* ipa-prop.c (ipa_write_node_info): Stream jump functions for indirect\n+\tcalls.\n+\t(ipa_read_node_info): Likewise.\n+\n 2011-06-10  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR lto/49302"}, {"sha": "c4eccbc7fa0cde9a5044c39ba7b75b9fc7472a9f", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8246dbe68d05cd08cf601113586d4101197af73/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8246dbe68d05cd08cf601113586d4101197af73/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=c8246dbe68d05cd08cf601113586d4101197af73", "patch": "@@ -2833,7 +2833,15 @@ ipa_write_node_info (struct output_block *ob, struct cgraph_node *node)\n \tipa_write_jump_function (ob, ipa_get_ith_jump_func (args, j));\n     }\n   for (e = node->indirect_calls; e; e = e->next_callee)\n-    ipa_write_indirect_edge_info (ob, e);\n+    {\n+      struct ipa_edge_args *args = IPA_EDGE_REF (e);\n+\n+      lto_output_uleb128_stream (ob->main_stream,\n+\t\t\t\t ipa_get_cs_argument_count (args));\n+      for (j = 0; j < ipa_get_cs_argument_count (args); j++)\n+\tipa_write_jump_function (ob, ipa_get_ith_jump_func (args, j));\n+      ipa_write_indirect_edge_info (ob, e);\n+    }\n }\n \n /* Stream in NODE info from IB.  */\n@@ -2871,7 +2879,20 @@ ipa_read_node_info (struct lto_input_block *ib, struct cgraph_node *node,\n \tipa_read_jump_function (ib, ipa_get_ith_jump_func (args, k), data_in);\n     }\n   for (e = node->indirect_calls; e; e = e->next_callee)\n-    ipa_read_indirect_edge_info (ib, data_in, e);\n+    {\n+      struct ipa_edge_args *args = IPA_EDGE_REF (e);\n+      int count = lto_input_uleb128 (ib);\n+\n+      ipa_set_cs_argument_count (args, count);\n+      if (count)\n+\t{\n+          args->jump_functions = ggc_alloc_cleared_vec_ipa_jump_func\n+\t    (ipa_get_cs_argument_count (args));\n+          for (k = 0; k < ipa_get_cs_argument_count (args); k++)\n+\t    ipa_read_jump_function (ib, ipa_get_ith_jump_func (args, k), data_in);\n+\t}\n+      ipa_read_indirect_edge_info (ib, data_in, e);\n+    }\n }\n \n /* Write jump functions for nodes in SET.  */"}]}