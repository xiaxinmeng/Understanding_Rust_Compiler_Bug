{"sha": "54890767f6b7de76a56e7cc6bfa2255d64bf9857", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ4OTA3NjdmNmI3ZGU3NmE1NmU3Y2M2YmZhMjI1NWQ2NGJmOTg1Nw==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2013-05-06T00:19:07Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2013-05-06T00:19:07Z"}, "message": "rs6000.md (bswapdi 2nd splitter): Don't swap words twice for little-endian.\n\n\t* config/rs6000/rs6000.md (bswapdi 2nd splitter): Don't swap words\n\ttwice for little-endian.\n\t(ashrdi3_no_power, ashrdi3): Support little-endian.\n\nFrom-SVN: r198618", "tree": {"sha": "a7be3e357f1cfffb597c51ba7a8d89e09bc5a8f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7be3e357f1cfffb597c51ba7a8d89e09bc5a8f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54890767f6b7de76a56e7cc6bfa2255d64bf9857", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54890767f6b7de76a56e7cc6bfa2255d64bf9857", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54890767f6b7de76a56e7cc6bfa2255d64bf9857", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54890767f6b7de76a56e7cc6bfa2255d64bf9857/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2353515dafac6c7999110c09568b3cd0ba779710", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2353515dafac6c7999110c09568b3cd0ba779710", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2353515dafac6c7999110c09568b3cd0ba779710"}], "stats": {"total": 40, "additions": 29, "deletions": 11}, "files": [{"sha": "e2cfb396000c6e9d5a06cdd79d9708883a85a33f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54890767f6b7de76a56e7cc6bfa2255d64bf9857/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54890767f6b7de76a56e7cc6bfa2255d64bf9857/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=54890767f6b7de76a56e7cc6bfa2255d64bf9857", "patch": "@@ -1,3 +1,9 @@\n+2013-05-06  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/rs6000/rs6000.md (bswapdi 2nd splitter): Don't swap words\n+\ttwice for little-endian.\n+\t(ashrdi3_no_power, ashrdi3): Support little-endian.\n+\n 2013-05-06  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/55303"}, {"sha": "1e65ac1cde05422949a41f059580a70ae4b9a345", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 23, "deletions": 11, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54890767f6b7de76a56e7cc6bfa2255d64bf9857/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54890767f6b7de76a56e7cc6bfa2255d64bf9857/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=54890767f6b7de76a56e7cc6bfa2255d64bf9857", "patch": "@@ -2329,16 +2329,14 @@\n     {\n       word_high = change_address (dest, SImode, addr1);\n       word_low  = change_address (dest, SImode, addr2);\n-      emit_insn (gen_bswapsi2 (word_high, src_si));\n-      emit_insn (gen_bswapsi2 (word_low, op3_si));\n     }\n   else\n     {\n       word_high = change_address (dest, SImode, addr2);\n       word_low  = change_address (dest, SImode, addr1);\n-      emit_insn (gen_bswapsi2 (word_low, src_si));\n-      emit_insn (gen_bswapsi2 (word_high, op3_si));\n     }\n+  emit_insn (gen_bswapsi2 (word_high, src_si));\n+  emit_insn (gen_bswapsi2 (word_low, op3_si));\n }\")\n \n (define_split\n@@ -6634,10 +6632,25 @@\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=&r,&r\")\n \t(ashiftrt:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n \t\t     (match_operand:SI 2 \"const_int_operand\" \"M,i\")))]\n-  \"TARGET_32BIT && !TARGET_POWERPC64 && WORDS_BIG_ENDIAN\"\n-  \"@\n-   srawi %0,%1,31\\;srawi %L0,%1,%h2\n-   srwi %L0,%L1,%h2\\;insrwi %L0,%1,%h2,0\\;srawi %0,%1,%h2\"\n+  \"!TARGET_POWERPC64\"\n+  \"*\n+{\n+  switch (which_alternative)\n+    {\n+    default:\n+      gcc_unreachable ();\n+    case 0:\n+      if (WORDS_BIG_ENDIAN)\n+        return \\\"srawi %0,%1,31\\;srawi %L0,%1,%h2\\\";\n+      else\n+        return \\\"srawi %L0,%L1,31\\;srawi %0,%L1,%h2\\\";\n+    case 1:\n+      if (WORDS_BIG_ENDIAN)\n+\treturn \\\"srwi %L0,%L1,%h2\\;insrwi %L0,%1,%h2,0\\;srawi %0,%1,%h2\\\";\n+      else\n+\treturn \\\"srwi %0,%1,%h2\\;insrwi %0,%L1,%h2,0\\;srawi %L0,%L1,%h2\\\";\n+    }\n+}\"\n   [(set_attr \"type\" \"two,three\")\n    (set_attr \"length\" \"8,12\")])\n \n@@ -7734,13 +7747,12 @@\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n \t(ashiftrt:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\")\n \t\t     (match_operand:SI 2 \"reg_or_cint_operand\" \"\")))]\n-  \"WORDS_BIG_ENDIAN\"\n+  \"\"\n   \"\n {\n   if (TARGET_POWERPC64)\n     ;\n-  else if (TARGET_32BIT && GET_CODE (operands[2]) == CONST_INT\n-\t   && WORDS_BIG_ENDIAN)\n+  else if (GET_CODE (operands[2]) == CONST_INT)\n     {\n       emit_insn (gen_ashrdi3_no_power (operands[0], operands[1], operands[2]));\n       DONE;"}]}