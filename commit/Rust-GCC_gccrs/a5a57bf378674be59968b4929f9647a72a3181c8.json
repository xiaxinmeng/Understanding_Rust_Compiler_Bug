{"sha": "a5a57bf378674be59968b4929f9647a72a3181c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVhNTdiZjM3ODY3NGJlNTk5NjhiNDkyOWY5NjQ3YTcyYTMxODFjOA==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2015-07-24T15:00:59Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2015-07-24T15:00:59Z"}, "message": "Add transform_to_exit_first_loop_alt dump success message\n\n2015-07-24  Tom de Vries  <tom@codesourcery.com>\n\n\t* tree-parloops.c (gen_parallel_loop): Add debug print for alternative\n\texit-first loop transform.\n\n\t* gcc.dg/parloops-exit-first-loop-alt-2.c: Use debug print for\n\talternative exit-first loop transform.\n\t* gcc.dg/parloops-exit-first-loop-alt-3.c: Same.\n\t* gcc.dg/parloops-exit-first-loop-alt-4.c: Same.\n\t* gcc.dg/parloops-exit-first-loop-alt-5.c: Same.\n\t* gcc.dg/parloops-exit-first-loop-alt-6.c: Same.\n\t* gcc.dg/parloops-exit-first-loop-alt-7.c: Same.\n\t* gcc.dg/parloops-exit-first-loop-alt-pr66652.c: Same.\n\t* gcc.dg/parloops-exit-first-loop-alt.c: Same.\n\t* gfortran.dg/parloops-exit-first-loop-alt-2.f95: Same.\n\t* gfortran.dg/parloops-exit-first-loop-alt.f95: Same.\n\nFrom-SVN: r226164", "tree": {"sha": "44c6f59896fda806ffc9558aca6f6d329882e8cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44c6f59896fda806ffc9558aca6f6d329882e8cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5a57bf378674be59968b4929f9647a72a3181c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5a57bf378674be59968b4929f9647a72a3181c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5a57bf378674be59968b4929f9647a72a3181c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5a57bf378674be59968b4929f9647a72a3181c8/comments", "author": null, "committer": null, "parents": [{"sha": "68180ebadd0ac19bbf2ce55bd0625d1d001f7d33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68180ebadd0ac19bbf2ce55bd0625d1d001f7d33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68180ebadd0ac19bbf2ce55bd0625d1d001f7d33"}], "stats": {"total": 123, "additions": 51, "deletions": 72}, "files": [{"sha": "59910bf992ff86fd5903e4188094f01e3609825a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a57bf378674be59968b4929f9647a72a3181c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a57bf378674be59968b4929f9647a72a3181c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a5a57bf378674be59968b4929f9647a72a3181c8", "patch": "@@ -1,3 +1,8 @@\n+2015-07-24  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* tree-parloops.c (gen_parallel_loop): Add debug print for alternative\n+\texit-first loop transform.\n+\n 2015-07-24  Cesar Philippidis  <cesar@codesourcery.com>\n \n \tPR 66714"}, {"sha": "9db26430e0763300f687d39f5e3cf986a34fb04a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a57bf378674be59968b4929f9647a72a3181c8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a57bf378674be59968b4929f9647a72a3181c8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a5a57bf378674be59968b4929f9647a72a3181c8", "patch": "@@ -1,3 +1,17 @@\n+2015-07-24  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* gcc.dg/parloops-exit-first-loop-alt-2.c: Use debug print for\n+\talternative exit-first loop transform.\n+\t* gcc.dg/parloops-exit-first-loop-alt-3.c: Same.\n+\t* gcc.dg/parloops-exit-first-loop-alt-4.c: Same.\n+\t* gcc.dg/parloops-exit-first-loop-alt-5.c: Same.\n+\t* gcc.dg/parloops-exit-first-loop-alt-6.c: Same.\n+\t* gcc.dg/parloops-exit-first-loop-alt-7.c: Same.\n+\t* gcc.dg/parloops-exit-first-loop-alt-pr66652.c: Same.\n+\t* gcc.dg/parloops-exit-first-loop-alt.c: Same.\n+\t* gfortran.dg/parloops-exit-first-loop-alt-2.f95: Same.\n+\t* gfortran.dg/parloops-exit-first-loop-alt.f95: Same.\n+\n 2015-07-24  Ilya Enkovich  <enkovich.gnu@gmail.com>\n \n \tPR ipa/66566"}, {"sha": "f1cf75f1f5fd2ab4055f3d0c59274b7d2ff54a9b", "filename": "gcc/testsuite/gcc.dg/parloops-exit-first-loop-alt-2.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a57bf378674be59968b4929f9647a72a3181c8/gcc%2Ftestsuite%2Fgcc.dg%2Fparloops-exit-first-loop-alt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a57bf378674be59968b4929f9647a72a3181c8/gcc%2Ftestsuite%2Fgcc.dg%2Fparloops-exit-first-loop-alt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fparloops-exit-first-loop-alt-2.c?ref=a5a57bf378674be59968b4929f9647a72a3181c8", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target pthread } */\n-/* { dg-options \"-O2 -ftree-parallelize-loops=2 -fdump-tree-parloops\" } */\n+/* { dg-options \"-O2 -ftree-parallelize-loops=2 -fdump-tree-parloops-details\" } */\n \n /* Constant bound, vector addition.  */\n \n@@ -19,9 +19,4 @@ f (void)\n       c[i] = a[i] + b[i];\n }\n \n-/* Three times three array accesses:\n-   - three in f._loopfn.0\n-   - three in the parallel\n-   - three in the low iteration count loop\n-   Crucially, none for a peeled off last iteration following the parallel.  */\n-/* { dg-final { scan-tree-dump-times \"(?n)\\\\\\[i\" 9 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"alternative exit-first loop transform succeeded\" 1 \"parloops\" } } */"}, {"sha": "c7154ba09adbd1dbeae67b86c3c98b3829a55219", "filename": "gcc/testsuite/gcc.dg/parloops-exit-first-loop-alt-3.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a57bf378674be59968b4929f9647a72a3181c8/gcc%2Ftestsuite%2Fgcc.dg%2Fparloops-exit-first-loop-alt-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a57bf378674be59968b4929f9647a72a3181c8/gcc%2Ftestsuite%2Fgcc.dg%2Fparloops-exit-first-loop-alt-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fparloops-exit-first-loop-alt-3.c?ref=a5a57bf378674be59968b4929f9647a72a3181c8", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target pthread } */\n-/* { dg-options \"-O2 -ftree-parallelize-loops=2 -fdump-tree-parloops\" } */\n+/* { dg-options \"-O2 -ftree-parallelize-loops=2 -fdump-tree-parloops-details\" } */\n \n /* Variable bound, reduction.  */\n \n@@ -18,9 +18,4 @@ f (unsigned int n, unsigned int *__restrict__ a)\n   return sum;\n }\n \n-/* Three array accesses:\n-   - one in f._loopfn.0\n-   - one in the parallel\n-   - one in the low iteration count loop\n-   Crucially, none for a peeled off last iteration following the parallel.  */\n-/* { dg-final { scan-tree-dump-times \"(?n)\\\\\\* 4\" 3 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"alternative exit-first loop transform succeeded\" 1 \"parloops\" } } */"}, {"sha": "5f7fe684133ce832f19cd7b4e9c8b551eb2d3cf9", "filename": "gcc/testsuite/gcc.dg/parloops-exit-first-loop-alt-4.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a57bf378674be59968b4929f9647a72a3181c8/gcc%2Ftestsuite%2Fgcc.dg%2Fparloops-exit-first-loop-alt-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a57bf378674be59968b4929f9647a72a3181c8/gcc%2Ftestsuite%2Fgcc.dg%2Fparloops-exit-first-loop-alt-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fparloops-exit-first-loop-alt-4.c?ref=a5a57bf378674be59968b4929f9647a72a3181c8", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target pthread } */\n-/* { dg-options \"-O2 -ftree-parallelize-loops=2 -fdump-tree-parloops\" } */\n+/* { dg-options \"-O2 -ftree-parallelize-loops=2 -fdump-tree-parloops-details\" } */\n \n /* Constant bound, reduction.  */\n \n@@ -20,9 +20,4 @@ f (void)\n   return sum;\n }\n \n-/* Three array accesses:\n-   - one in f._loopfn.0\n-   - one in the parallel\n-   - one in the low iteration count loop\n-   Crucially, none for a peeled off last iteration following the parallel.  */\n-/* { dg-final { scan-tree-dump-times \"(?n)\\\\\\* 4\" 3 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"alternative exit-first loop transform succeeded\" 1 \"parloops\" } } */"}, {"sha": "3c1e99b58acda8981a074b87b0ede04f8e6b3f36", "filename": "gcc/testsuite/gcc.dg/parloops-exit-first-loop-alt-5.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a57bf378674be59968b4929f9647a72a3181c8/gcc%2Ftestsuite%2Fgcc.dg%2Fparloops-exit-first-loop-alt-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a57bf378674be59968b4929f9647a72a3181c8/gcc%2Ftestsuite%2Fgcc.dg%2Fparloops-exit-first-loop-alt-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fparloops-exit-first-loop-alt-5.c?ref=a5a57bf378674be59968b4929f9647a72a3181c8", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target pthread } */\n-/* { dg-options \"-O2 -ftree-parallelize-loops=2 -fdump-tree-parloops\" } */\n+/* { dg-options \"-O2 -ftree-parallelize-loops=2 -fdump-tree-parloops-details\" } */\n \n /* Variable bound, vector addition, unsigned loop counter, unsigned bound.  */\n \n@@ -14,9 +14,4 @@ f (unsigned int n, unsigned int *__restrict__ a, unsigned int *__restrict__ b,\n     c[i] = a[i] + b[i];\n }\n \n-/* Three times a store:\n-   - one in f._loopfn.0\n-   - one in the parallel\n-   - one in the low iteration count loop\n-   Crucially, none for a peeled off last iteration following the parallel.  */\n-/* { dg-final { scan-tree-dump-times \"(?n)^  \\\\*_\\[0-9\\]*\" 3 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"alternative exit-first loop transform succeeded\" 1 \"parloops\" } } */"}, {"sha": "edc60ba5253d82ad71b49b6cdc2c61381cfb3265", "filename": "gcc/testsuite/gcc.dg/parloops-exit-first-loop-alt-6.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a57bf378674be59968b4929f9647a72a3181c8/gcc%2Ftestsuite%2Fgcc.dg%2Fparloops-exit-first-loop-alt-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a57bf378674be59968b4929f9647a72a3181c8/gcc%2Ftestsuite%2Fgcc.dg%2Fparloops-exit-first-loop-alt-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fparloops-exit-first-loop-alt-6.c?ref=a5a57bf378674be59968b4929f9647a72a3181c8", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target pthread } */\n-/* { dg-options \"-O2 -ftree-parallelize-loops=2 -fdump-tree-parloops\" } */\n+/* { dg-options \"-O2 -ftree-parallelize-loops=2 -fdump-tree-parloops-details\" } */\n \n /* Variable bound, vector addition, unsigned loop counter, signed bound.  */\n \n@@ -14,9 +14,4 @@ f (int n, unsigned int *__restrict__ a, unsigned int *__restrict__ b,\n     c[i] = a[i] + b[i];\n }\n \n-/* Three times a store:\n-   - one in f._loopfn.0\n-   - one in the parallel\n-   - one in the low iteration count loop\n-   Crucially, none for a peeled off last iteration following the parallel.  */\n-/* { dg-final { scan-tree-dump-times \"(?n)^  \\\\*_\\[0-9\\]*\" 3 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"alternative exit-first loop transform succeeded\" 1 \"parloops\" } } */"}, {"sha": "38be2e8fee508647bd10c7f530a52d590608586a", "filename": "gcc/testsuite/gcc.dg/parloops-exit-first-loop-alt-7.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a57bf378674be59968b4929f9647a72a3181c8/gcc%2Ftestsuite%2Fgcc.dg%2Fparloops-exit-first-loop-alt-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a57bf378674be59968b4929f9647a72a3181c8/gcc%2Ftestsuite%2Fgcc.dg%2Fparloops-exit-first-loop-alt-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fparloops-exit-first-loop-alt-7.c?ref=a5a57bf378674be59968b4929f9647a72a3181c8", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target pthread } */\n-/* { dg-options \"-O2 -ftree-parallelize-loops=2 -fdump-tree-parloops\" } */\n+/* { dg-options \"-O2 -ftree-parallelize-loops=2 -fdump-tree-parloops-details\" } */\n \n /* Variable bound, vector addition, signed loop counter, signed bound.  */\n \n@@ -14,9 +14,4 @@ f (int n, unsigned int *__restrict__ a, unsigned int *__restrict__ b,\n     c[i] = a[i] + b[i];\n }\n \n-/* Three times a store:\n-   - one in f._loopfn.0\n-   - one in the parallel\n-   - one in the low iteration count loop\n-   Crucially, none for a peeled off last iteration following the parallel.  */\n-/* { dg-final { scan-tree-dump-times \"(?n)^  \\\\*_\\[0-9\\]*\" 3 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"alternative exit-first loop transform succeeded\" 1 \"parloops\" } } */"}, {"sha": "6f3ece59d2e4b69016b17324270817cdcdbbaae4", "filename": "gcc/testsuite/gcc.dg/parloops-exit-first-loop-alt-pr66652.c", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a57bf378674be59968b4929f9647a72a3181c8/gcc%2Ftestsuite%2Fgcc.dg%2Fparloops-exit-first-loop-alt-pr66652.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a57bf378674be59968b4929f9647a72a3181c8/gcc%2Ftestsuite%2Fgcc.dg%2Fparloops-exit-first-loop-alt-pr66652.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fparloops-exit-first-loop-alt-pr66652.c?ref=a5a57bf378674be59968b4929f9647a72a3181c8", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target pthread } */\n-/* { dg-options \"-O2 -ftree-parallelize-loops=2 -fdump-tree-parloops\" } */\n+/* { dg-options \"-O2 -ftree-parallelize-loops=2 -fdump-tree-parloops-details\" } */\n \n #include <stdio.h>\n #include <stdlib.h>\n@@ -22,10 +22,5 @@ f (unsigned int n, unsigned int sum)\n   return sum;\n }\n \n-/* Four times % 13:\n-   - once in f._loopfn.0\n-   - once in the parallel\n-   - once in the low iteration count loop\n-   - once for a peeled off last iteration following the parallel.\n-   In other words, we want try_transform_to_exit_first_loop_alt to fail.  */\n-/* { dg-final { scan-tree-dump-times \"(?n)% 13\" 4 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"parallelizing inner loop\" 1 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"alternative exit-first loop transform succeeded\" 0 \"parloops\" } } */"}, {"sha": "44596e3858a2bfd52196f4035a532fe7ac259720", "filename": "gcc/testsuite/gcc.dg/parloops-exit-first-loop-alt.c", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a57bf378674be59968b4929f9647a72a3181c8/gcc%2Ftestsuite%2Fgcc.dg%2Fparloops-exit-first-loop-alt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a57bf378674be59968b4929f9647a72a3181c8/gcc%2Ftestsuite%2Fgcc.dg%2Fparloops-exit-first-loop-alt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fparloops-exit-first-loop-alt.c?ref=a5a57bf378674be59968b4929f9647a72a3181c8", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target pthread } */\n-/* { dg-options \"-O2 -ftree-parallelize-loops=2 -fdump-tree-parloops\" } */\n+/* { dg-options \"-O2 -ftree-parallelize-loops=2 -fdump-tree-parloops-details\" } */\n \n /* Variable bound, vector addition, signed loop counter, unsigned bound.  */\n \n@@ -14,9 +14,5 @@ f (unsigned int n, unsigned int *__restrict__ a, unsigned int *__restrict__ b,\n     c[i] = a[i] + b[i];\n }\n \n-/* Three times a store:\n-   - one in f._loopfn.0\n-   - one in the parallel\n-   - one in the low iteration count loop\n-   Crucially, none for a peeled off last iteration following the parallel.  */\n-/* { dg-final { scan-tree-dump-times \"(?n)^  \\\\*_\\[0-9\\]*\" 3 \"parloops\" } } */\n+/* { dg-final { scan-tree-dump-times \"alternative exit-first loop transform succeeded\" 1 \"parloops\" } } */\n+"}, {"sha": "52434f2a9e35ddc9d0fd6c4e71e40584066ba44b", "filename": "gcc/testsuite/gfortran.dg/parloops-exit-first-loop-alt-2.f95", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a57bf378674be59968b4929f9647a72a3181c8/gcc%2Ftestsuite%2Fgfortran.dg%2Fparloops-exit-first-loop-alt-2.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a57bf378674be59968b4929f9647a72a3181c8/gcc%2Ftestsuite%2Fgfortran.dg%2Fparloops-exit-first-loop-alt-2.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fparloops-exit-first-loop-alt-2.f95?ref=a5a57bf378674be59968b4929f9647a72a3181c8", "patch": "@@ -1,7 +1,7 @@\n ! { dg-additional-options \"-O2\" }\n ! { dg-require-effective-target pthread }\n ! { dg-additional-options \"-ftree-parallelize-loops=2\" }\n-! { dg-additional-options \"-fdump-tree-parloops\" }\n+! { dg-additional-options \"-fdump-tree-parloops-details\" }\n \n ! Constant bound, vector addition.\n \n@@ -16,9 +16,4 @@ subroutine foo ()\n   end do\n end subroutine foo\n \n-! Three times plus 25:\n-! - once in f._loopfn.0\n-! - once in the parallel\n-! - once in the low iteration count loop\n-! Crucially, none for a peeled off last iteration following the parallel.\n-! { dg-final { scan-tree-dump-times \"(?n) \\\\+ 25;\" 3 \"parloops\" } }\n+! { dg-final { scan-tree-dump-times \"alternative exit-first loop transform succeeded\" 1 \"parloops\" } }"}, {"sha": "1eb9dfd801e0fcfb402f055158dd090ab49d9ab5", "filename": "gcc/testsuite/gfortran.dg/parloops-exit-first-loop-alt.f95", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a57bf378674be59968b4929f9647a72a3181c8/gcc%2Ftestsuite%2Fgfortran.dg%2Fparloops-exit-first-loop-alt.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a57bf378674be59968b4929f9647a72a3181c8/gcc%2Ftestsuite%2Fgfortran.dg%2Fparloops-exit-first-loop-alt.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fparloops-exit-first-loop-alt.f95?ref=a5a57bf378674be59968b4929f9647a72a3181c8", "patch": "@@ -1,7 +1,7 @@\n ! { dg-additional-options \"-O2\" }\n ! { dg-require-effective-target pthread }\n ! { dg-additional-options \"-ftree-parallelize-loops=2\" }\n-! { dg-additional-options \"-fdump-tree-parloops\" }\n+! { dg-additional-options \"-fdump-tree-parloops-details\" }\n \n ! Variable bound, vector addition.\n \n@@ -17,9 +17,5 @@ subroutine foo (nr)\n   end do\n end subroutine foo\n \n-! Three times plus 25:\n-! - once in f._loopfn.0\n-! - once in the parallel\n-! - once in the low iteration count loop\n-! Crucially, none for a peeled off last iteration following the parallel.\n-! { dg-final { scan-tree-dump-times \"(?n) \\\\+ 25;\" 3 \"parloops\" } }\n+! { dg-final { scan-tree-dump-times \"alternative exit-first loop transform succeeded\" 1 \"parloops\" } }\n+"}, {"sha": "6e75cb13648117ad44b1b43801c6421069f0bd90", "filename": "gcc/tree-parloops.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a57bf378674be59968b4929f9647a72a3181c8/gcc%2Ftree-parloops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a57bf378674be59968b4929f9647a72a3181c8/gcc%2Ftree-parloops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-parloops.c?ref=a5a57bf378674be59968b4929f9647a72a3181c8", "patch": "@@ -2246,7 +2246,15 @@ gen_parallel_loop (struct loop *loop,\n      increment) and immediately follows the loop exit test.  Attempt to move the\n      entry of the loop directly before the exit check and increase the number of\n      iterations of the loop by one.  */\n-  if (!try_transform_to_exit_first_loop_alt (loop, reduction_list, nit))\n+  if (try_transform_to_exit_first_loop_alt (loop, reduction_list, nit))\n+    {\n+      if (dump_file\n+\t  && (dump_flags & TDF_DETAILS))\n+\tfprintf (dump_file,\n+\t\t \"alternative exit-first loop transform succeeded\"\n+\t\t \" for loop %d\\n\", loop->num);\n+    }\n+  else\n     {\n       /* Fall back on the method that handles more cases, but duplicates the\n \t loop body: move the exit condition of LOOP to the beginning of its"}]}