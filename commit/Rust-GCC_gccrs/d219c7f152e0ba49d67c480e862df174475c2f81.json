{"sha": "d219c7f152e0ba49d67c480e862df174475c2f81", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDIxOWM3ZjE1MmUwYmE0OWQ2N2M0ODBlODYyZGYxNzQ0NzVjMmY4MQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-02-10T16:45:23Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-02-10T16:45:23Z"}, "message": "flow.c (mark_regs_live_at_end): Delete unused variables.\n\n        * flow.c (mark_regs_live_at_end): Delete unused variables.\n\n        * ggc-page.c (ggc_page_print_statistics): bzero -> memset.\n\n        * integrate.c (copy_rtx_and_substitute): Wrap variable `alignment'\n        in macro FRAME_GROWS_DOWNWARD.\n\n        * stmt.c (expand_end_bindings): Delete unused variable.\n\n        * unroll.c (iteration_info): Mark parameter `loop' with\n        ATTRIBUTE_UNUSED.\n\nFrom-SVN: r31895", "tree": {"sha": "bccf50b76f45ea690463c91544d1c38191833d8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bccf50b76f45ea690463c91544d1c38191833d8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d219c7f152e0ba49d67c480e862df174475c2f81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d219c7f152e0ba49d67c480e862df174475c2f81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d219c7f152e0ba49d67c480e862df174475c2f81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d219c7f152e0ba49d67c480e862df174475c2f81/comments", "author": null, "committer": null, "parents": [{"sha": "d1922b48994d0d83dea181e0725697291a5208ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1922b48994d0d83dea181e0725697291a5208ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1922b48994d0d83dea181e0725697291a5208ad"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "ef31d9af35892397b7cf8d82970cae6b0e8553d1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d219c7f152e0ba49d67c480e862df174475c2f81/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d219c7f152e0ba49d67c480e862df174475c2f81/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d219c7f152e0ba49d67c480e862df174475c2f81", "patch": "@@ -1,3 +1,17 @@\n+2000-02-10  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* flow.c (mark_regs_live_at_end): Delete unused variables.\n+\n+\t* ggc-page.c (ggc_page_print_statistics): bzero -> memset.\n+\n+\t* integrate.c (copy_rtx_and_substitute): Wrap variable `alignment'\n+\tin macro FRAME_GROWS_DOWNWARD.\n+\n+\t* stmt.c (expand_end_bindings): Delete unused variable.\n+\n+\t* unroll.c (iteration_info): Mark parameter `loop' with\n+\tATTRIBUTE_UNUSED.\n+\n 2000-02-10  Alexandre Oliva  <oliva@lsd.ic.unicamp.br>\n \n \t* fixinc/server.c (load_data): Return NULL if the marker line is"}, {"sha": "49b2ae16422400f9a838946e50102d67f7166a38", "filename": "gcc/flow.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d219c7f152e0ba49d67c480e862df174475c2f81/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d219c7f152e0ba49d67c480e862df174475c2f81/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=d219c7f152e0ba49d67c480e862df174475c2f81", "patch": "@@ -2821,7 +2821,6 @@ static void\n mark_regs_live_at_end (set)\n      regset set;\n {\n-  tree result, type;\n   int i;\n \n   /* If exiting needs the right stack value, consider the stack pointer"}, {"sha": "7dcf64edfaea874ca5cf2942747bd08b862982fa", "filename": "gcc/ggc-page.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d219c7f152e0ba49d67c480e862df174475c2f81/gcc%2Fggc-page.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d219c7f152e0ba49d67c480e862df174475c2f81/gcc%2Fggc-page.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-page.c?ref=d219c7f152e0ba49d67c480e862df174475c2f81", "patch": "@@ -1157,7 +1157,7 @@ ggc_page_print_statistics ()\n   unsigned int i;\n \n   /* Clear the statistics.  */\n-  bzero (&stats, sizeof (stats));\n+  memset (&stats, 0, sizeof (stats));\n   \n   /* Make sure collection will really occur.  */\n   G.allocated_last_gc = 0;"}, {"sha": "4e5d80cc2b65dd022692175833ad3ae1bdf168dc", "filename": "gcc/integrate.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d219c7f152e0ba49d67c480e862df174475c2f81/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d219c7f152e0ba49d67c480e862df174475c2f81/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=d219c7f152e0ba49d67c480e862df174475c2f81", "patch": "@@ -1625,11 +1625,11 @@ copy_rtx_and_substitute (orig, map, for_lhs)\n \t    {\n \t      rtx loc, seq;\n \t      int size = get_func_frame_size (DECL_SAVED_INSNS (map->fndecl));\n+#ifdef FRAME_GROWS_DOWNWARD\n \t      int alignment\n \t\t= (DECL_SAVED_INSNS (map->fndecl)->stack_alignment_needed\n \t\t   / BITS_PER_UNIT);\n \n-#ifdef FRAME_GROWS_DOWNWARD\n \t      /* In this case, virtual_stack_vars_rtx points to one byte\n \t\t higher than the top of the frame area.  So make sure we\n \t\t allocate a big enough chunk to keep the frame pointer"}, {"sha": "1b98bb589e83e0f14d7e841b429bed91a946b91d", "filename": "gcc/stmt.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d219c7f152e0ba49d67c480e862df174475c2f81/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d219c7f152e0ba49d67c480e862df174475c2f81/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=d219c7f152e0ba49d67c480e862df174475c2f81", "patch": "@@ -3561,7 +3561,6 @@ expand_end_bindings (vars, mark_ends, dont_jump_in)\n      int dont_jump_in;\n {\n   register struct nesting *thisblock;\n-  register tree decl;\n \n   while (block_stack->data.block.exception_region)\n     {"}, {"sha": "48fa75743c031eaddb87ac1e0ac58b34679ed294", "filename": "gcc/unroll.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d219c7f152e0ba49d67c480e862df174475c2f81/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d219c7f152e0ba49d67c480e862df174475c2f81/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=d219c7f152e0ba49d67c480e862df174475c2f81", "patch": "@@ -2427,7 +2427,7 @@ biv_total_increment (bl)\n \n static void\n iteration_info (loop, iteration_var, initial_value, increment)\n-     const struct loop *loop;\n+     const struct loop *loop ATTRIBUTE_UNUSED;\n      rtx iteration_var, *initial_value, *increment;\n {\n   struct iv_class *bl;"}]}