{"sha": "7b9a5a662b243ee413626bbc14a87bbea25e633c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2I5YTVhNjYyYjI0M2VlNDEzNjI2YmJjMTRhODdiYmVhMjVlNjMzYw==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2003-09-14T13:56:18Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2003-09-14T13:56:18Z"}, "message": "c-ppoutput.c (cb_line_change): Revert 2003-08-04's change.\n\n* c-ppoutput.c (cb_line_change): Revert 2003-08-04's change.\n* c-lex.c (cb_line_change): Skip line changing whenever\nc-ppoutput.c would.\n\nFrom-SVN: r71381", "tree": {"sha": "9e8a30f653fe0373cc5de506dce8b7723a9a14e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e8a30f653fe0373cc5de506dce8b7723a9a14e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b9a5a662b243ee413626bbc14a87bbea25e633c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b9a5a662b243ee413626bbc14a87bbea25e633c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b9a5a662b243ee413626bbc14a87bbea25e633c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b9a5a662b243ee413626bbc14a87bbea25e633c/comments", "author": null, "committer": null, "parents": [{"sha": "aab68b4aba36b6664a150002cfcee50a3186b766", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aab68b4aba36b6664a150002cfcee50a3186b766", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aab68b4aba36b6664a150002cfcee50a3186b766"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "d0e68ae82f032579940aa5c559e67b7781ca3ad3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b9a5a662b243ee413626bbc14a87bbea25e633c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b9a5a662b243ee413626bbc14a87bbea25e633c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b9a5a662b243ee413626bbc14a87bbea25e633c", "patch": "@@ -1,3 +1,9 @@\n+2003-09-14  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\t* c-ppoutput.c (cb_line_change): Revert 2003-08-04's change.\n+\t* c-lex.c (cb_line_change): Skip line changing whenever\n+\tc-ppoutput.c would.\n+\n 2003-09-14  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* ra.c: Convert to ISO C90 prototypes."}, {"sha": "2109eff1da93e5ac9230946914625c8e37542838", "filename": "gcc/c-lex.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b9a5a662b243ee413626bbc14a87bbea25e633c/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b9a5a662b243ee413626bbc14a87bbea25e633c/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=7b9a5a662b243ee413626bbc14a87bbea25e633c", "patch": "@@ -197,8 +197,11 @@ cb_ident (cpp_reader *pfile ATTRIBUTE_UNUSED,\n    lexed token on the line.  Used for diagnostic line numbers.  */\n static void\n cb_line_change (cpp_reader *pfile ATTRIBUTE_UNUSED, const cpp_token *token,\n-\t\tint parsing_args ATTRIBUTE_UNUSED)\n+\t\tint parsing_args)\n {\n+  if (token->type == CPP_EOF || parsing_args)\n+    return;\n+\n   src_lineno = SOURCE_LINE (map, token->line);\n }\n "}, {"sha": "9642f306cace866b421c3ea9e338b7df785521c8", "filename": "gcc/c-ppoutput.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b9a5a662b243ee413626bbc14a87bbea25e633c/gcc%2Fc-ppoutput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b9a5a662b243ee413626bbc14a87bbea25e633c/gcc%2Fc-ppoutput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-ppoutput.c?ref=7b9a5a662b243ee413626bbc14a87bbea25e633c", "patch": "@@ -261,9 +261,9 @@ print_line (const struct line_map *map, unsigned int line, const char *special_f\n    of the line, and at end of file will be CPP_EOF.  */\n static void\n cb_line_change (cpp_reader *pfile, const cpp_token *token,\n-\t\tint parsing_args ATTRIBUTE_UNUSED)\n+\t\tint parsing_args)\n {\n-  if (token->type == CPP_EOF)\n+  if (token->type == CPP_EOF || parsing_args)\n     return;\n \n   maybe_print_line (print.map, token->line);"}]}