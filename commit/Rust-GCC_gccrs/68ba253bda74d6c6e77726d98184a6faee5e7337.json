{"sha": "68ba253bda74d6c6e77726d98184a6faee5e7337", "node_id": "C_kwDOANBUbNoAKDY4YmEyNTNiZGE3NGQ2YzZlNzc3MjZkOTgxODRhNmZhZWU1ZTczMzc", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2023-03-14T17:53:16Z"}, "committer": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2023-03-14T17:56:13Z"}, "message": "ipa-cp: Fix various issues in update_specialized_profile (PR 107925)\n\nThe patch below fixes various issues in function\nupdate_specialized_profile.  The main is removal of the assert which\nis bogus in the case of recursive cloning.  The division of\nunexplained counts is guesswork, which then leads to updates of counts\nof recursive edges, which then can be redirected to the new clone and\ntheir count subtracted from the count and there simply may not be\nenough left in the count of the original node - especially when we\nclone a lot because of using --param ipa-cp-eval-threshold=1.\n\nThe other issue was omission to drop the count of the original node to\nipa count.  And when calculating the remainder, we should use\nlenient_count_portion_handling to account for partial train runs.\nFinally, the patch adds dumping of the original count which I think\nis useful.\n\ngcc/ChangeLog:\n\n2023-02-17  Martin Jambor  <mjambor@suse.cz>\n\n\tPR ipa/107925\n\t* ipa-cp.cc (update_specialized_profile): Drop orig_node_count to\n\tipa count, remove assert, lenient_count_portion_handling, dump\n\talso orig_node_count.", "tree": {"sha": "b859ac40a8b5e034842fe6bdec2cbf8342835ead", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b859ac40a8b5e034842fe6bdec2cbf8342835ead"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68ba253bda74d6c6e77726d98184a6faee5e7337", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE5elVTFt/d09Vsoczv2PBvD+kNUAFAmQQtT0ACgkQv2PBvD+k\nNUDUzBAAtpgzMQ1B9Nu3wpZ0dWPzbjGnH+wPuwTZQ5z2Abr0j76F/53eYEoHtGSY\n3WgUZct9T8sagZsGApC+74S3aD40Po229+AAZuaDX4opmr4g5Il9Nmbzx8UV074h\nzyFPSHuxnRdYh57U8nIyOoxdkqAf58TKsDuBYp29BlAaS6d5Vse0S7tEOMw7l3+9\nvRLAjeJ3esxpuu07Bg7DICMokbBuuC4SVApRl/s6lML1kmgX37mhTb8gSMdNb/k5\n7mWK4dG5yRkGVSJDW1w0hZQE3HOkwPI1NPLgsmrctYY2IXzq7oSWWETDqJqgtE7A\n+/qcBU79MdyamAqRkXysikZ5td7iSs/1UOfkCAFarkyKWXpY4awcnOsig1w+Zm1X\ngtdhwCFcPIxjmKReumyI6w5GI1998LzlmujqHt1zYePY0B+1+N6+8ArYtx/8RTOW\nqiH2rO3rJztDAzD6XkJa2Yvut/Z3ez8+Adf7uOXMJQ5CICP3y2yNlOUkajydD4Hh\nhxfdEzf+keOYuxlJEyn0qPaHiaLcygMi8PlJ4/TD4I4q/udTBlFMmqlZEijd0X3o\nfy9y64WL2/zCJIsurEddnLWj6uip4LlCT8jfVU6SMQ3XQKhPVRDksyeWcrxplmDq\n4ocM0aodJzlBJvahWSo/pp4DlBLidyzypvnKlZQo8sEjShuQzyM=\n=76df\n-----END PGP SIGNATURE-----", "payload": "tree b859ac40a8b5e034842fe6bdec2cbf8342835ead\nparent 4bcc3b5cc87505d13cda82846db2e223a9b41f79\nauthor Martin Jambor <mjambor@suse.cz> 1678816396 +0100\ncommitter Martin Jambor <mjambor@suse.cz> 1678816573 +0100\n\nipa-cp: Fix various issues in update_specialized_profile (PR 107925)\n\nThe patch below fixes various issues in function\nupdate_specialized_profile.  The main is removal of the assert which\nis bogus in the case of recursive cloning.  The division of\nunexplained counts is guesswork, which then leads to updates of counts\nof recursive edges, which then can be redirected to the new clone and\ntheir count subtracted from the count and there simply may not be\nenough left in the count of the original node - especially when we\nclone a lot because of using --param ipa-cp-eval-threshold=1.\n\nThe other issue was omission to drop the count of the original node to\nipa count.  And when calculating the remainder, we should use\nlenient_count_portion_handling to account for partial train runs.\nFinally, the patch adds dumping of the original count which I think\nis useful.\n\ngcc/ChangeLog:\n\n2023-02-17  Martin Jambor  <mjambor@suse.cz>\n\n\tPR ipa/107925\n\t* ipa-cp.cc (update_specialized_profile): Drop orig_node_count to\n\tipa count, remove assert, lenient_count_portion_handling, dump\n\talso orig_node_count.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68ba253bda74d6c6e77726d98184a6faee5e7337", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68ba253bda74d6c6e77726d98184a6faee5e7337", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68ba253bda74d6c6e77726d98184a6faee5e7337/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bcc3b5cc87505d13cda82846db2e223a9b41f79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bcc3b5cc87505d13cda82846db2e223a9b41f79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bcc3b5cc87505d13cda82846db2e223a9b41f79"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "5a6b41cf2d69dc7f291a9c81e618dcc8451fad23", "filename": "gcc/ipa-cp.cc", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68ba253bda74d6c6e77726d98184a6faee5e7337/gcc%2Fipa-cp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68ba253bda74d6c6e77726d98184a6faee5e7337/gcc%2Fipa-cp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.cc?ref=68ba253bda74d6c6e77726d98184a6faee5e7337", "patch": "@@ -5093,22 +5093,24 @@ update_specialized_profile (struct cgraph_node *new_node,\n \t\t\t    profile_count redirected_sum)\n {\n   struct cgraph_edge *cs;\n-  profile_count new_node_count, orig_node_count = orig_node->count;\n+  profile_count new_node_count, orig_node_count = orig_node->count.ipa ();\n \n   if (dump_file)\n     {\n       fprintf (dump_file, \"    the sum of counts of redirected  edges is \");\n       redirected_sum.dump (dump_file);\n+      fprintf (dump_file, \"\\n    old ipa count of the original node is \");\n+      orig_node_count.dump (dump_file);\n       fprintf (dump_file, \"\\n\");\n     }\n   if (!(orig_node_count > profile_count::zero ()))\n     return;\n \n-  gcc_assert (orig_node_count >= redirected_sum);\n-\n   new_node_count = new_node->count;\n   new_node->count += redirected_sum;\n-  orig_node->count -= redirected_sum;\n+  orig_node->count\n+    = lenient_count_portion_handling (orig_node->count - redirected_sum,\n+\t\t\t\t      orig_node);\n \n   for (cs = new_node->callees; cs; cs = cs->next_callee)\n     cs->count += cs->count.apply_scale (redirected_sum, new_node_count);"}]}