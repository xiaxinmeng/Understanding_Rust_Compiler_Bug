{"sha": "3ff79f9970dc8e5728403e800664573c49adb6da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZmNzlmOTk3MGRjOGU1NzI4NDAzZTgwMDY2NDU3M2M0OWFkYjZkYQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.vnet.ibm.com", "date": "2011-01-24T16:47:16Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2011-01-24T16:47:16Z"}, "message": "Fix PR 47408 and 47385\n\nFrom-SVN: r169167", "tree": {"sha": "5fec9cde883cc46123c2cc95d7f260826c0e9737", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fec9cde883cc46123c2cc95d7f260826c0e9737"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ff79f9970dc8e5728403e800664573c49adb6da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ff79f9970dc8e5728403e800664573c49adb6da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ff79f9970dc8e5728403e800664573c49adb6da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ff79f9970dc8e5728403e800664573c49adb6da/comments", "author": null, "committer": null, "parents": [{"sha": "a2e064a9c0363fe0cc68f1bfe2e272f151328833", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2e064a9c0363fe0cc68f1bfe2e272f151328833", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2e064a9c0363fe0cc68f1bfe2e272f151328833"}], "stats": {"total": 57, "additions": 41, "deletions": 16}, "files": [{"sha": "d13b62759754bafce21fa8e8944c2f6716c62fd7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ff79f9970dc8e5728403e800664573c49adb6da", "patch": "@@ -1,3 +1,10 @@\n+2011-01-24  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\tPR target/47385\n+\t* config/rs6000/altivec.md (vector constant splitters): Add\n+\tsupport for creating vector single precision constants if -mvsx is\n+\tused and we would create the constant using Altivec primitives.\n+\n 2011-01-23  Bernd Schmidt  <bernds@codesourcery.com>\n \t    Richard Sandiford  <rdsandiford@googlemail.com>\n "}, {"sha": "d21d5762ce597d5d0e1779852708d7b8f90d3a30", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=3ff79f9970dc8e5728403e800664573c49adb6da", "patch": "@@ -224,7 +224,7 @@\n (define_split\n   [(set (match_operand:VM 0 \"altivec_register_operand\" \"\")\n \t(match_operand:VM 1 \"easy_vector_constant_msb\" \"\"))]\n-  \"VECTOR_UNIT_ALTIVEC_P (<MODE>mode) && reload_completed\"\n+  \"VECTOR_UNIT_ALTIVEC_OR_VSX_P (<MODE>mode) && reload_completed\"\n   [(const_int 0)]\n {\n   rtx dest = operands[0];\n@@ -251,7 +251,7 @@\n (define_split\n   [(set (match_operand:VM 0 \"altivec_register_operand\" \"\")\n \t(match_operand:VM 1 \"easy_vector_constant_add_self\" \"\"))]\n-  \"VECTOR_UNIT_ALTIVEC_P (<MODE>mode) && reload_completed\"\n+  \"VECTOR_UNIT_ALTIVEC_OR_VSX_P (<MODE>mode) && reload_completed\"\n   [(set (match_dup 0) (match_dup 3))\n    (set (match_dup 0) (match_dup 4))]\n {"}, {"sha": "d9b1f19afd6f30b01ac62e49aa93149c3717d499", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3ff79f9970dc8e5728403e800664573c49adb6da", "patch": "@@ -1,3 +1,21 @@\n+2011-01-24  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\tPR target/47408\n+\t* gcc.target/powerpc/altivec-11.c: Add explicit -mno-vsx.\n+\t* gcc.target/powerpc/altivec-14.c: Ditto.\n+\t* gcc.target/powerpc/altivec-33.c: Ditto.\n+\t* gcc.target/powerpc/altivec-types-1.c: Ditto.\n+\t* gcc.target/powerpc/altivec-types-2.c: Ditto.\n+\t* gcc.target/powerpc/altivec-types-3.c: Ditto.\n+\t* gcc.target/powerpc/altivec-types-4.c: Ditto.\n+\t* gcc.target/powerpc/ppc-vector-memcpy.c: Ditto.\n+\t* gcc.target/powerpc/ppc-vector-memset.c: Ditto.\n+\t* g++.dg/ext/altivec-15.C: Ditto.\n+\t* g++.dg/ext/altivec-types-1.C: Ditto.\n+\t* g++.dg/ext/altivec-types-2.C: Ditto.\n+\t* g++.dg/ext/altivec-types-3.C: Ditto.\n+\t* g++.dg/ext/altivec-types-4.C: Ditto.\n+\n 2011-01-24  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* lib/scanasm.exp (dg-function-on-line): Handle mips-sgi-irix*."}, {"sha": "d8e982db4ff67f29154d0e51598212250c4df95c", "filename": "gcc/testsuite/g++.dg/ext/altivec-15.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-15.C?ref=3ff79f9970dc8e5728403e800664573c49adb6da", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile { target powerpc*-*-* } } */\n /* { dg-require-effective-target powerpc_altivec_ok } */\n-/* { dg-options \"-maltivec\" } */\n+/* { dg-options \"-maltivec -mno-vsx\" } */\n \n /* This test was added for an internal compiler error.  The number and\n    content of error messages is irrelevant.  */"}, {"sha": "f54aeec46af5a4451cf364c8ae952f5af522dcd6", "filename": "gcc/testsuite/g++.dg/ext/altivec-types-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-types-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-types-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-types-1.C?ref=3ff79f9970dc8e5728403e800664573c49adb6da", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile { target powerpc*-*-linux* } } */\n /* { dg-require-effective-target powerpc_altivec_ok } */\n-/* { dg-options \"-maltivec -std=c++98\" } */\n+/* { dg-options \"-maltivec -mno-vsx -std=c++98\" } */\n \n /* Valid AltiVec vector types should be accepted with no warnings.  */\n "}, {"sha": "cee6c8f263f48bb7c2f3bd879bfece69a0867e8f", "filename": "gcc/testsuite/g++.dg/ext/altivec-types-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-types-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-types-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-types-2.C?ref=3ff79f9970dc8e5728403e800664573c49adb6da", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile { target powerpc*-*-linux* } } */\n /* { dg-require-effective-target ilp32 } */\n /* { dg-require-effective-target powerpc_altivec_ok } */\n-/* { dg-options \"-maltivec\" } */\n+/* { dg-options \"-maltivec -mno-vsx\" } */\n \n /* These should get warnings for 32-bit code.  */\n "}, {"sha": "6bea9a145c6888f087e501e4ae972dcf9faf79ff", "filename": "gcc/testsuite/g++.dg/ext/altivec-types-3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-types-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-types-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-types-3.C?ref=3ff79f9970dc8e5728403e800664573c49adb6da", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile { target powerpc*-*-linux* } } */\n /* { dg-require-effective-target powerpc_altivec_ok } */\n /* { dg-require-effective-target lp64 } */\n-/* { dg-options \"-maltivec\" } */\n+/* { dg-options \"-maltivec -mno-vsx\" } */\n \n /* These should be rejected for 64-bit code.  */\n "}, {"sha": "b937f3cf1b1edee3d42dc5869b03ba2906fe0936", "filename": "gcc/testsuite/g++.dg/ext/altivec-types-4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-types-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-types-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Faltivec-types-4.C?ref=3ff79f9970dc8e5728403e800664573c49adb6da", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile { target powerpc*-*-linux* } } */\n /* { dg-require-effective-target ilp32 } */\n /* { dg-require-effective-target powerpc_altivec_ok } */\n-/* { dg-options \"-maltivec -mno-warn-altivec-long\" } */\n+/* { dg-options \"-maltivec -mno-vsx -mno-warn-altivec-long\" } */\n \n /* These should not get warnings for 32-bit code when the warning is\n    disabled.  */"}, {"sha": "7e3510c3160a9d34de0aa66ffb18bbd412fe2d50", "filename": "gcc/testsuite/gcc.target/powerpc/altivec-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-11.c?ref=3ff79f9970dc8e5728403e800664573c49adb6da", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile { target powerpc*-*-* } } */\n /* { dg-require-effective-target powerpc_altivec_ok } */\n-/* { dg-options \"-O2 -maltivec -mabi=altivec\" } */\n+/* { dg-options \"-O2 -maltivec -mno-vsx -mabi=altivec\" } */\n /* { dg-final { scan-assembler-not \"lvx\" } } */\n #include <altivec.h>\n "}, {"sha": "55acb0b35ce52350d0a795e1a94dbc7eda86c5c1", "filename": "gcc/testsuite/gcc.target/powerpc/altivec-14.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-14.c?ref=3ff79f9970dc8e5728403e800664573c49adb6da", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile { target { powerpc*-*-* && ilp32 } } } */\n /* { dg-require-effective-target powerpc_altivec_ok } */\n-/* { dg-options \"-maltivec\" } */\n+/* { dg-options \"-maltivec -mno-vsx\" } */\n \n #include <altivec.h>\n "}, {"sha": "8e912679d2f879abde250d4ab25fa526dc428817", "filename": "gcc/testsuite/gcc.target/powerpc/altivec-33.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-33.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-33.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-33.c?ref=3ff79f9970dc8e5728403e800664573c49adb6da", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target powerpc_altivec_ok } */\n-/* { dg-options \"-O2 -maltivec\" } */\n+/* { dg-options \"-O2 -maltivec -mno-vsx\" } */\n \n /* We should only produce one vspltw as we already splatted the value.  */\n /* { dg-final { scan-assembler-times \"vspltw\" 1 } } */"}, {"sha": "9096892ee6ad15a6fed4fc2c676cd8eea6dc2c9d", "filename": "gcc/testsuite/gcc.target/powerpc/altivec-types-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-types-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-types-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-types-1.c?ref=3ff79f9970dc8e5728403e800664573c49adb6da", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile { target powerpc*-*-linux* } } */\n /* { dg-require-effective-target powerpc_altivec_ok } */\n-/* { dg-options \"-maltivec\" } */\n+/* { dg-options \"-maltivec -mno-vsx\" } */\n \n /* Valid AltiVec vector types should be accepted with no warnings.  */\n "}, {"sha": "cee6c8f263f48bb7c2f3bd879bfece69a0867e8f", "filename": "gcc/testsuite/gcc.target/powerpc/altivec-types-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-types-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-types-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-types-2.c?ref=3ff79f9970dc8e5728403e800664573c49adb6da", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile { target powerpc*-*-linux* } } */\n /* { dg-require-effective-target ilp32 } */\n /* { dg-require-effective-target powerpc_altivec_ok } */\n-/* { dg-options \"-maltivec\" } */\n+/* { dg-options \"-maltivec -mno-vsx\" } */\n \n /* These should get warnings for 32-bit code.  */\n "}, {"sha": "ea371ce7730448b926b26b450f96223feebb8c6e", "filename": "gcc/testsuite/gcc.target/powerpc/altivec-types-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-types-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-types-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-types-3.c?ref=3ff79f9970dc8e5728403e800664573c49adb6da", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile { target powerpc*-*-linux* } } */\n /* { dg-require-effective-target lp64 } */\n /* { dg-require-effective-target powerpc_altivec_ok } */\n-/* { dg-options \"-maltivec\" } */\n+/* { dg-options \"-maltivec -mno-vsx\" } */\n \n /* These should be rejected for 64-bit code.  */\n "}, {"sha": "52fa91453d5e595758d853d75c1747ba67d67228", "filename": "gcc/testsuite/gcc.target/powerpc/altivec-types-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-types-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-types-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-types-4.c?ref=3ff79f9970dc8e5728403e800664573c49adb6da", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile { target powerpc*-*-linux* } } */\n /* { dg-require-effective-target ilp32 } */\n /* { dg-require-effective-target powerpc_altivec_ok } */\n-/* { dg-options \"-maltivec -mno-warn-altivec-long\" } */\n+/* { dg-options \"-maltivec -mno-warn-altivec-long -mno-vsx\" } */\n \n /* These should not get warnings for 32-bit code when the warning is\n    disabled.  */"}, {"sha": "797c4074dadb0abf3de31167b6826aeab48f3b2d", "filename": "gcc/testsuite/gcc.target/powerpc/ppc-vector-memcpy.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-vector-memcpy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-vector-memcpy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-vector-memcpy.c?ref=3ff79f9970dc8e5728403e800664573c49adb6da", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile { target powerpc*-*-* } } */\n /* { dg-require-effective-target powerpc_altivec_ok } */\n-/* { dg-options \"-O -maltivec\" } */\n+/* { dg-options \"-O -maltivec -mno-vsx\" } */\n /* { dg-final { scan-assembler \"lvx\" } } */\n \n void foo(void)"}, {"sha": "ad7aadea938555ba2391176f64d44904ac1166d7", "filename": "gcc/testsuite/gcc.target/powerpc/ppc-vector-memset.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-vector-memset.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ff79f9970dc8e5728403e800664573c49adb6da/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-vector-memset.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-vector-memset.c?ref=3ff79f9970dc8e5728403e800664573c49adb6da", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile { target powerpc*-*-* } } */\n /* { dg-require-effective-target powerpc_altivec_ok } */\n-/* { dg-options \"-O -maltivec\" } */\n+/* { dg-options \"-O -maltivec -mno-vsx\" } */\n /* { dg-final { scan-assembler \"stvx\" } } */\n \n #include <string.h>"}]}