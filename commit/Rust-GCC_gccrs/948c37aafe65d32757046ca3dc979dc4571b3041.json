{"sha": "948c37aafe65d32757046ca3dc979dc4571b3041", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ4YzM3YWFmZTY1ZDMyNzU3MDQ2Y2EzZGM5NzlkYzQ1NzFiMzA0MQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-02-12T17:50:48Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-02-12T17:50:48Z"}, "message": "Initial revision\n\nFrom-SVN: r310", "tree": {"sha": "286ed8a10e9ea73398003962ef3fb6d38079e5fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/286ed8a10e9ea73398003962ef3fb6d38079e5fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/948c37aafe65d32757046ca3dc979dc4571b3041", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/948c37aafe65d32757046ca3dc979dc4571b3041", "html_url": "https://github.com/Rust-GCC/gccrs/commit/948c37aafe65d32757046ca3dc979dc4571b3041", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/948c37aafe65d32757046ca3dc979dc4571b3041/comments", "author": null, "committer": null, "parents": [{"sha": "89cf554bda49808feef769fad6dd62fef6223bdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89cf554bda49808feef769fad6dd62fef6223bdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89cf554bda49808feef769fad6dd62fef6223bdf"}], "stats": {"total": 103, "additions": 103, "deletions": 0}, "files": [{"sha": "f224ac58ff3f5b365b56eb6fe6517eaa1477cdf7", "filename": "gcc/make-cccp.com", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/948c37aafe65d32757046ca3dc979dc4571b3041/gcc%2Fmake-cccp.com", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/948c37aafe65d32757046ca3dc979dc4571b3041/gcc%2Fmake-cccp.com", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmake-cccp.com?ref=948c37aafe65d32757046ca3dc979dc4571b3041", "patch": "@@ -0,0 +1,50 @@\n+$! Set the def dir to proper place for use in batch. Works for interactive too.\n+$flnm = f$enviroment(\"PROCEDURE\")     ! get current procedure name\n+$set default 'f$parse(flnm,,,\"DEVICE\")''f$parse(flnm,,,\"DIRECTORY\")'\n+$!\n+$!\tBuild the GNU \"C\" pre-processor on VMS\n+$!\n+$\n+$!\n+$!\tC compiler\n+$!\n+$ CC\t:=\tgcc\n+$ BISON\t:=\tbison\n+$ RENAME :=\trename\n+$!\n+$!\tCompiler options\n+$!\n+$ CFLAGS =\t\"/debug/inc=([],[.config])\"\n+$!\n+$!\tLink options\n+$!\n+$ LDFLAGS :=\t/nomap\n+$!\n+$!\tLink libraries\n+$!\n+$ LIBS :=\tgnu_cc:[000000]gcclib/libr,sys$share:vaxcrtl/libr\n+$ if \"''p1'\" .eqs. \"LINK\" then goto Link\n+$ 'CC 'CFLAGS cccp.c\n+$ t1:='f$search(\"CEXP.C\")'\n+$ if \"''t1'\" .eqs. \"\" then goto 10$\n+$ t1:='f$file_attributes(\"CEXP.Y\",\"RDT\")'\n+$ t1:='f$cvtime(t1)'\n+$ t2:='f$file_attributes(\"CEXP.C\",\"RDT\")'\n+$ t2:='f$cvtime(t2)'\n+$ if t1 .les. t2 then goto 20$\n+$ 10$:\n+$ bison cexp.y\n+$ rename cexp_tab.c cexp.c\n+$ 20$:\n+$!\n+$ 'CC 'CFLAGS cexp.c\n+$ 'CC 'CFLAGS version.c\n+$ Link:\n+$ link 'LDFLAGS /exe=gcc-cpp cccp,cexp,version,version.opt/opt,'LIBS'\n+$!\n+$! CAUTION: If you want to link gcc-cpp to the sharable image library\n+$! VAXCRTL, see the notes in gcc.texinfo (or INSTALL) first.\n+$!\n+$!\tDone\n+$!\n+$ exit"}, {"sha": "154a22ed1f9c444ff1815b6c504866fae62e1cd8", "filename": "gcc/make-l2.com", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/948c37aafe65d32757046ca3dc979dc4571b3041/gcc%2Fmake-l2.com", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/948c37aafe65d32757046ca3dc979dc4571b3041/gcc%2Fmake-l2.com", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmake-l2.com?ref=948c37aafe65d32757046ca3dc979dc4571b3041", "patch": "@@ -0,0 +1,53 @@\n+$! Set the def dir to proper place for use in batch. Works for interactive too.\n+$flnm = f$enviroment(\"PROCEDURE\")     ! get current procedure name\n+$set default 'f$parse(flnm,,,\"DEVICE\")''f$parse(flnm,,,\"DIRECTORY\")'\n+$@$diska:[eric]test_gcc2\n+$!\n+$! Command file to build libgcc2.olb.  You should only run this once you \n+$! have the current compiler installed, otherwise some of the builtins will\n+$! not be recognized.  Once you have built libgcc2.olb, you can merge this\n+$! with gnu_cc:[000000]gcclib.olb\n+$!\n+$lib/create libgcc2.olb\n+$call compile_libgcc2 \"L_muldi3\"\n+$call compile_libgcc2 \"L_divdi3\"\n+$call compile_libgcc2 \"L_moddi3\"\n+$call compile_libgcc2 \"L_udivdi3\"\n+$call compile_libgcc2 \"L_umoddi3\"\n+$call compile_libgcc2 \"L_negdi2\"\n+$call compile_libgcc2 \"L_lshrdi3\"\n+$call compile_libgcc2 \"L_lshldi3\"\n+$call compile_libgcc2 \"L_ashldi3\"\n+$call compile_libgcc2 \"L_ashrdi3\"\n+$call compile_libgcc2 \"L_udivmoddi4\"\n+$call compile_libgcc2 \"L_cmpdi2\"\n+$call compile_libgcc2 \"L_ucmpdi2\"\n+$call compile_libgcc2 \"L_floatdidf\"\n+$call compile_libgcc2 \"L_floatdisf\"\n+$call compile_libgcc2 \"L_fixunsdfsi\"\n+$call compile_libgcc2 \"L_fixunssfsi\"\n+$call compile_libgcc2 \"L_fixunsdfdi\"\n+$call compile_libgcc2 \"L_fixdfdi\"\n+$call compile_libgcc2 \"L_fixunssfdi\"\n+$call compile_libgcc2 \"L_fixsfdi\"\n+$call compile_libgcc2 \"L_varargs\"\n+$call compile_libgcc2 \"L_eprintf\"\n+$call compile_libgcc2 \"L_builtin_new\"\n+$call compile_libgcc2 \"L_builtin_New\" L_builtin_nnew\n+$call compile_libgcc2 \"L_builtin_del\"\n+$call compile_libgcc2 \"L_bb\"\n+$call compile_libgcc2 \"L_shtab\"\n+$call compile_libgcc2 \"L_clear_cache\"\n+$call compile_libgcc2 \"L_trampoline\"\n+$call compile_libgcc2 \"L__main\"\n+$!call compile_libgcc2 \"L_exit\"\n+$exit\n+$!\n+$compile_libgcc2:\n+$subroutine\n+$objname = p1\n+$if p2.nes.\"\" then objname = p2\n+$gcc/machine/include=([],[.config])/debug/define=\"''p1'\" libgcc2.c/obj='objname'.obj\n+$lib libgcc2.olb 'objname'.obj\n+$del 'objname'.obj;/nolog\n+$endsubroutine"}]}