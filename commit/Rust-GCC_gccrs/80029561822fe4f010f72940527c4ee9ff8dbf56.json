{"sha": "80029561822fe4f010f72940527c4ee9ff8dbf56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODAwMjk1NjE4MjJmZTRmMDEwZjcyOTQwNTI3YzRlZTlmZjhkYmY1Ng==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.ibm.com", "date": "2020-07-17T06:49:29Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@linux.ibm.com", "date": "2020-07-17T07:26:49Z"}, "message": "Fix PR96127\n\nIn s390_expand_insv the movstrict patterns are always generated with a\nCC clobber although only movstricthi actually needs one.  The patch\ninvokes the expanders instead of constructing the pattern by hand.\n\nBootstrapped and regression tested on s390x.\n\ngcc/ChangeLog:\n\n\tPR target/96127\n\t* config/s390/s390.c (s390_expand_insv): Invoke the movstrict\n\texpanders to generate the pattern.\n\t* config/s390/s390.md (\"*movstricthi\", \"*movstrictqi\"): Remove the\n\t'*' to have callable expanders.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/96127\n\t* gcc.target/s390/pr96127.c: New test.", "tree": {"sha": "00c6cb16c5cab3cae1cdb2514b7e6bcdb03b7359", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00c6cb16c5cab3cae1cdb2514b7e6bcdb03b7359"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80029561822fe4f010f72940527c4ee9ff8dbf56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80029561822fe4f010f72940527c4ee9ff8dbf56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80029561822fe4f010f72940527c4ee9ff8dbf56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80029561822fe4f010f72940527c4ee9ff8dbf56/comments", "author": {"login": "Andreas-Krebbel", "id": 38103320, "node_id": "MDQ6VXNlcjM4MTAzMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38103320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andreas-Krebbel", "html_url": "https://github.com/Andreas-Krebbel", "followers_url": "https://api.github.com/users/Andreas-Krebbel/followers", "following_url": "https://api.github.com/users/Andreas-Krebbel/following{/other_user}", "gists_url": "https://api.github.com/users/Andreas-Krebbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andreas-Krebbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andreas-Krebbel/subscriptions", "organizations_url": "https://api.github.com/users/Andreas-Krebbel/orgs", "repos_url": "https://api.github.com/users/Andreas-Krebbel/repos", "events_url": "https://api.github.com/users/Andreas-Krebbel/events{/privacy}", "received_events_url": "https://api.github.com/users/Andreas-Krebbel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Andreas-Krebbel", "id": 38103320, "node_id": "MDQ6VXNlcjM4MTAzMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38103320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andreas-Krebbel", "html_url": "https://github.com/Andreas-Krebbel", "followers_url": "https://api.github.com/users/Andreas-Krebbel/followers", "following_url": "https://api.github.com/users/Andreas-Krebbel/following{/other_user}", "gists_url": "https://api.github.com/users/Andreas-Krebbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andreas-Krebbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andreas-Krebbel/subscriptions", "organizations_url": "https://api.github.com/users/Andreas-Krebbel/orgs", "repos_url": "https://api.github.com/users/Andreas-Krebbel/repos", "events_url": "https://api.github.com/users/Andreas-Krebbel/events{/privacy}", "received_events_url": "https://api.github.com/users/Andreas-Krebbel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0757d3660c1c5a63d1e8fbc1350c3ba0bcbf9fdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0757d3660c1c5a63d1e8fbc1350c3ba0bcbf9fdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0757d3660c1c5a63d1e8fbc1350c3ba0bcbf9fdb"}], "stats": {"total": 48, "additions": 41, "deletions": 7}, "files": [{"sha": "22ac5e431214e23139272589eb1a212341cda878", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80029561822fe4f010f72940527c4ee9ff8dbf56/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80029561822fe4f010f72940527c4ee9ff8dbf56/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=80029561822fe4f010f72940527c4ee9ff8dbf56", "patch": "@@ -6436,11 +6436,16 @@ s390_expand_insv (rtx dest, rtx op1, rtx op2, rtx src)\n       /* Emit a strict_low_part pattern if possible.  */\n       if (smode_bsize == bitsize && bitpos == mode_bsize - smode_bsize)\n \t{\n-\t  op = gen_rtx_STRICT_LOW_PART (VOIDmode, gen_lowpart (smode, dest));\n-\t  op = gen_rtx_SET (op, gen_lowpart (smode, src));\n-\t  clobber = gen_rtx_CLOBBER (VOIDmode, gen_rtx_REG (CCmode, CC_REGNUM));\n-\t  emit_insn (gen_rtx_PARALLEL (VOIDmode, gen_rtvec (2, op, clobber)));\n-\t  return true;\n+\t  rtx low_dest = gen_lowpart (smode, dest);\n+\t  rtx low_src = gen_lowpart (smode, src);\n+\n+\t  switch (smode)\n+\t    {\n+\t    case E_QImode: emit_insn (gen_movstrictqi (low_dest, low_src)); return true;\n+\t    case E_HImode: emit_insn (gen_movstricthi (low_dest, low_src)); return true;\n+\t    case E_SImode: emit_insn (gen_movstrictsi (low_dest, low_src)); return true;\n+\t    default: break;\n+\t    }\n \t}\n \n       /* ??? There are more powerful versions of ICM that are not"}, {"sha": "4c3e5400a2be4b02bca8d0a7e3f73f849266d3b0", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80029561822fe4f010f72940527c4ee9ff8dbf56/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80029561822fe4f010f72940527c4ee9ff8dbf56/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=80029561822fe4f010f72940527c4ee9ff8dbf56", "patch": "@@ -2413,7 +2413,7 @@\n ; movstrictqi instruction pattern(s).\n ;\n \n-(define_insn \"*movstrictqi\"\n+(define_insn \"movstrictqi\"\n   [(set (strict_low_part (match_operand:QI 0 \"register_operand\" \"+d,d\"))\n                          (match_operand:QI 1 \"memory_operand\" \"R,T\"))]\n   \"\"\n@@ -2428,7 +2428,7 @@\n ; movstricthi instruction pattern(s).\n ;\n \n-(define_insn \"*movstricthi\"\n+(define_insn \"movstricthi\"\n   [(set (strict_low_part (match_operand:HI 0 \"register_operand\" \"+d,d\"))\n                          (match_operand:HI 1 \"memory_operand\" \"Q,S\"))\n    (clobber (reg:CC CC_REGNUM))]"}, {"sha": "213ed147175ee5c18add798d82df0ab5f1b5b729", "filename": "gcc/testsuite/gcc.target/s390/pr96127.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80029561822fe4f010f72940527c4ee9ff8dbf56/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr96127.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80029561822fe4f010f72940527c4ee9ff8dbf56/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr96127.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr96127.c?ref=80029561822fe4f010f72940527c4ee9ff8dbf56", "patch": "@@ -0,0 +1,29 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -fno-tree-loop-im --param=sccvn-max-alias-queries-per-access=0 -w\" } */\n+\n+int a8;\n+\n+void\n+c1 (int oz, int dk, int ub)\n+{\n+  int *hd = 0;\n+  long int *th = &dk;\n+\n+  while (ub < 1)\n+    {\n+      oz || dk;\n+      ++ub;\n+    }\n+\n+  while (oz < 2)\n+    {\n+      long int *lq = &oz;\n+\n+      (*hd < (*lq = *th)) < oz;\n+\n+      if (oz == 0)\n+        *th = a8 = oz;\n+\n+      *lq = 0;\n+    }\n+}"}]}