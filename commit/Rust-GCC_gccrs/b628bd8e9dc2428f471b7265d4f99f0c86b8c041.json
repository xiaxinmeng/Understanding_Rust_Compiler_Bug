{"sha": "b628bd8e9dc2428f471b7265d4f99f0c86b8c041", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYyOGJkOGU5ZGMyNDI4ZjQ3MWI3MjY1ZDRmOTlmMGM4NmI4YzA0MQ==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2004-11-07T00:01:19Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2004-11-07T00:01:19Z"}, "message": "s390.md (attribute \"op_type\"): Default to \"NN\".\n\n\t* config/s390/s390.md (attribute \"op_type\"): Default to \"NN\".\n\t(attribute \"atype\"): Default to \"agen\".\n\t(attribute \"length\"): Default to 6.\n\t(define_asm_attibutes): Remove.\n\t(\"movti\", \"*movdi_64\", \"*movdi_31\", \"*movsi_zarch\", \"*movsi_esa\",\n\t\"*movhi\", \"*movqi\", \"*movdf_64\", \"*movdf_31\", \"movsf\",\n\t\"*clc\", \"*mvc\", \"*nc\", \"*oc\", \"*xc\", \"*xc_zero\"):\n\tDo not set type attribute to \"cs\" where already default.\n\t(\"*cmpint_si\", \"*cmpint_di\", \"fix_truncdfsi2_ibm\", \"floatsidf2_ibm\",\n\t\"*negdi2_31\"):\n\tDo not set type attribute to \"other\" where already default.\n\t(\"movti\", \"*movdi_64\", \"*movdi_31\", \"*movdf_31\",\n\t\"*strlendi\", \"*strlensi\",\n\t\"*movmem_long_64\", \"*movmem_long_31\",\n\t\"*clrmem_long_64\", \"*clrmem_long_31\",\n\t\"*cmpmem_long_64\", \"*cmpmem_long_31\",\n\t\"*cmpint_si\", \"*cmpint_di\",\n\t\"addti3\", \"*adddi3_31z\", \"*adddi3_31\",\n\t\"subti3\", \"*subdi3_31z\", \"*subdi3_31\", \"*negdi2_31\",\n\t\"*sconddi\", \"*scondsi\", \"*sconddi_neg\", \"*scondsi_neg\",\n\t\"fix_truncdfsi2_ibm\", \"floatsidf2_ibm\", \"extendsfdf2_ibm\",\n\t\"*pool_entry\", \"pool_align\", \"pool_section_start\",\n\t\"pool_section_end\", \"main_pool\", \"reload_base_31\", \"pool\"):\n\tDo not set op_type attribute to \"NN\" where already default.\n\t(\"*extractqi\", \"*extracthi\", \"*zero_extendhisi2_31\",\n\t\"*zero_extendqisi2_31\", \"*zero_extendqihi2_31\",\n\t\"fix_truncdfsi2_ibm\", \"floatsidf2_ibm\"):\n\tDo not set atype attribute to \"agen\" where already default.\n\t(\"*movmem_short\", \"*clrmem_short\", \"*cmpmem_short\"): Don't set op_type.\n\nFrom-SVN: r90208", "tree": {"sha": "8d54aabc43168a257b0c1baf1bb66b09f34d22f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d54aabc43168a257b0c1baf1bb66b09f34d22f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b628bd8e9dc2428f471b7265d4f99f0c86b8c041", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b628bd8e9dc2428f471b7265d4f99f0c86b8c041", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b628bd8e9dc2428f471b7265d4f99f0c86b8c041", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b628bd8e9dc2428f471b7265d4f99f0c86b8c041/comments", "author": null, "committer": null, "parents": [{"sha": "9ec0f3c8f52b3b940a038d8659c39c5f5e4a55f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ec0f3c8f52b3b940a038d8659c39c5f5e4a55f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ec0f3c8f52b3b940a038d8659c39c5f5e4a55f3"}], "stats": {"total": 243, "additions": 111, "deletions": 132}, "files": [{"sha": "ed17a6b5b0dddfa8cb3e7b617104819e1bf056e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b628bd8e9dc2428f471b7265d4f99f0c86b8c041/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b628bd8e9dc2428f471b7265d4f99f0c86b8c041/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b628bd8e9dc2428f471b7265d4f99f0c86b8c041", "patch": "@@ -1,3 +1,35 @@\n+2004-11-06  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/s390.md (attribute \"op_type\"): Default to \"NN\".\n+\t(attribute \"atype\"): Default to \"agen\".\n+\t(attribute \"length\"): Default to 6.\n+\t(define_asm_attibutes): Remove.\n+\t(\"movti\", \"*movdi_64\", \"*movdi_31\", \"*movsi_zarch\", \"*movsi_esa\",\n+\t\"*movhi\", \"*movqi\", \"*movdf_64\", \"*movdf_31\", \"movsf\",\n+\t\"*clc\", \"*mvc\", \"*nc\", \"*oc\", \"*xc\", \"*xc_zero\"):\n+\tDo not set type attribute to \"cs\" where already default.\n+\t(\"*cmpint_si\", \"*cmpint_di\", \"fix_truncdfsi2_ibm\", \"floatsidf2_ibm\",\n+\t\"*negdi2_31\"):\n+\tDo not set type attribute to \"other\" where already default.\n+\t(\"movti\", \"*movdi_64\", \"*movdi_31\", \"*movdf_31\", \n+\t\"*strlendi\", \"*strlensi\",\n+\t\"*movmem_long_64\", \"*movmem_long_31\",\n+\t\"*clrmem_long_64\", \"*clrmem_long_31\",\n+\t\"*cmpmem_long_64\", \"*cmpmem_long_31\",\n+\t\"*cmpint_si\", \"*cmpint_di\", \n+\t\"addti3\", \"*adddi3_31z\", \"*adddi3_31\", \n+\t\"subti3\", \"*subdi3_31z\", \"*subdi3_31\", \"*negdi2_31\",\n+\t\"*sconddi\", \"*scondsi\", \"*sconddi_neg\", \"*scondsi_neg\",\n+\t\"fix_truncdfsi2_ibm\", \"floatsidf2_ibm\", \"extendsfdf2_ibm\",\n+\t\"*pool_entry\", \"pool_align\", \"pool_section_start\",\n+\t\"pool_section_end\", \"main_pool\", \"reload_base_31\", \"pool\"):\n+\tDo not set op_type attribute to \"NN\" where already default.\n+\t(\"*extractqi\", \"*extracthi\", \"*zero_extendhisi2_31\", \n+\t\"*zero_extendqisi2_31\", \"*zero_extendqihi2_31\",\n+\t\"fix_truncdfsi2_ibm\", \"floatsidf2_ibm\"): \n+\tDo not set atype attribute to \"agen\" where already default.\n+\t(\"*movmem_short\", \"*clrmem_short\", \"*cmpmem_short\"): Don't set op_type.\n+\n 2004-11-06  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/t-iris6 (tp-bit.c): Fix target filename."}, {"sha": "744485964c3645e3d1f4fb69d9c0aa0d204395f3", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 79, "deletions": 132, "changes": 211, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b628bd8e9dc2428f471b7265d4f99f0c86b8c041/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b628bd8e9dc2428f471b7265d4f99f0c86b8c041/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=b628bd8e9dc2428f471b7265d4f99f0c86b8c041", "patch": "@@ -148,7 +148,7 @@\n \n (define_attr \"op_type\"\n   \"NN,E,RR,RRE,RX,RS,RSI,RI,SI,S,SS,SSE,RXE,RSE,RIL,RIE,RXY,RSY,SIY\"\n-  (const_string \"RX\"))\n+  (const_string \"NN\"))\n \n ;; Instruction type attribute used for scheduling.\n \n@@ -168,7 +168,7 @@\n ;;   reg: Instruction does not use the agen unit\n \n (define_attr \"atype\" \"agen,reg\"\n-(cond [ (eq_attr \"op_type\" \"E\")    (const_string \"reg\")\n+  (cond [(eq_attr \"op_type\" \"E\")   (const_string \"reg\")\n          (eq_attr \"op_type\" \"RR\")  (const_string \"reg\")\n          (eq_attr \"op_type\" \"RX\")  (const_string \"agen\")\n          (eq_attr \"op_type\" \"RI\")  (const_string \"reg\")\n@@ -185,12 +185,12 @@\n          (eq_attr \"op_type\" \"RXY\") (const_string \"agen\")\n          (eq_attr \"op_type\" \"RSY\") (const_string \"agen\")\n          (eq_attr \"op_type\" \"SIY\") (const_string \"agen\")]\n-  (const_string \"reg\")))\n+    (const_string \"agen\")))\n \n ;; Length in bytes.\n \n (define_attr \"length\" \"\"\n-(cond [ (eq_attr \"op_type\" \"E\")    (const_int 2)\n+  (cond [(eq_attr \"op_type\" \"E\")   (const_int 2)\n          (eq_attr \"op_type\" \"RR\")  (const_int 2)\n          (eq_attr \"op_type\" \"RX\")  (const_int 4)\n          (eq_attr \"op_type\" \"RI\")  (const_int 4)\n@@ -207,12 +207,7 @@\n          (eq_attr \"op_type\" \"RXY\") (const_int 6)\n          (eq_attr \"op_type\" \"RSY\") (const_int 6)\n          (eq_attr \"op_type\" \"SIY\") (const_int 6)]\n-         (const_int 4)))\n-\n-;; Define attributes for `asm' insns.\n-\n-(define_asm_attributes [(set_attr \"type\" \"other\")\n-                        (set_attr \"op_type\" \"NN\")])\n+    (const_int 6)))\n \n \n ;; Processor type.  This attribute must exactly match the processor_type\n@@ -681,8 +676,7 @@\n   \"s390_match_ccmode (insn, CCUmode)\n    && INTVAL (operands[2]) >= 1 && INTVAL (operands[2]) <= 256\"\n   \"clc\\t%O0(%2,%R0),%S1\"\n-  [(set_attr \"op_type\" \"SS\")\n-   (set_attr \"type\"    \"cs\")])\n+  [(set_attr \"op_type\" \"SS\")])\n \n (define_split\n   [(set (reg 33)\n@@ -810,8 +804,8 @@\n    #\n    #\n    #\"\n-  [(set_attr \"op_type\" \"RSY,RSY,NN,NN,SS\")\n-   (set_attr \"type\" \"lm,stm,*,*,cs\")])\n+  [(set_attr \"op_type\" \"RSY,RSY,*,*,SS\")\n+   (set_attr \"type\" \"lm,stm,*,*,*\")])\n \n (define_split\n   [(set (match_operand:TI 0 \"nonimmediate_operand\" \"\")\n@@ -914,9 +908,10 @@\n    stam\\t%1,%N1,%S0\n    lam\\t%0,%N0,%S1\n    #\"\n-  [(set_attr \"op_type\" \"RI,RI,RI,RI,RI,RXY,RRE,RXY,RXY,RR,RX,RXY,RX,RXY,NN,NN,RS,RS,SS\")\n-   (set_attr \"type\" \"*,*,*,*,*,la,lr,load,store,floadd,floadd,floadd,\n-                     fstored,fstored,*,*,*,*,cs\")])\n+  [(set_attr \"op_type\" \"RI,RI,RI,RI,RI,RXY,RRE,RXY,RXY,\n+                        RR,RX,RXY,RX,RXY,*,*,RS,RS,SS\")\n+   (set_attr \"type\" \"*,*,*,*,*,la,lr,load,store,\n+                     floadd,floadd,floadd,fstored,fstored,*,*,*,*,*\")])\n \n (define_split\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n@@ -966,8 +961,8 @@\n    std\\t%1,%0\n    stdy\\t%1,%0\n    #\"\n-  [(set_attr \"op_type\" \"RS,RS,NN,NN,RR,RX,RXY,RX,RXY,SS\")\n-   (set_attr \"type\" \"lm,stm,*,*,floadd,floadd,floadd,fstored,fstored,cs\")])\n+  [(set_attr \"op_type\" \"RS,RS,*,*,RR,RX,RXY,RX,RXY,SS\")\n+   (set_attr \"type\" \"lm,stm,*,*,floadd,floadd,floadd,fstored,fstored,*\")])\n \n (define_split\n   [(set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n@@ -1127,8 +1122,10 @@\n    stam\\t%1,%1,%S0\n    lam\\t%0,%0,%S1\n    #\"\n-  [(set_attr \"op_type\" \"RI,RI,RI,RXY,RR,RX,RXY,RX,RXY,RR,RX,RXY,RX,RXY,RRE,RRE,RS,RS,SS\")\n-   (set_attr \"type\" \"*,*,*,la,lr,load,load,store,store,floads,floads,floads,fstores,fstores,*,*,*,*,cs\")])\n+  [(set_attr \"op_type\" \"RI,RI,RI,RXY,RR,RX,RXY,RX,RXY,\n+                        RR,RX,RXY,RX,RXY,RRE,RRE,RS,RS,SS\")\n+   (set_attr \"type\" \"*,*,*,la,lr,load,load,store,store,\n+                     floads,floads,floads,fstores,fstores,*,*,*,*,*\")])\n \n (define_insn \"*movsi_esa\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d,d,d,R,!*f,!*f,!R,d,t,Q,t,?Q\")\n@@ -1148,7 +1145,7 @@\n    lam\\t%0,%0,%S1\n    #\"\n   [(set_attr \"op_type\" \"RI,RR,RX,RX,RR,RX,RX,RRE,RRE,RS,RS,SS\")\n-   (set_attr \"type\" \"*,lr,load,store,floads,floads,fstores,*,*,*,*,cs\")])\n+   (set_attr \"type\" \"*,lr,load,store,floads,floads,fstores,*,*,*,*,*\")])\n \n (define_peephole2\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n@@ -1276,7 +1273,7 @@\n    sthy\\t%1,%0\n    #\"\n   [(set_attr \"op_type\" \"RR,RI,RX,RXY,RX,RXY,SS\")\n-   (set_attr \"type\" \"lr,*,*,*,store,store,cs\")])\n+   (set_attr \"type\" \"lr,*,*,*,store,store,*\")])\n \n (define_peephole2\n   [(set (match_operand:HI 0 \"register_operand\" \"\")\n@@ -1325,7 +1322,7 @@\n    mviy\\t%S0,%b1\n    #\"\n   [(set_attr \"op_type\" \"RR,RI,RX,RXY,RX,RXY,SI,SIY,SS\")\n-   (set_attr \"type\" \"lr,*,*,*,store,store,store,store,cs\")])\n+   (set_attr \"type\" \"lr,*,*,*,store,store,store,store,*\")])\n \n (define_peephole2\n   [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n@@ -1405,7 +1402,7 @@\n    stg\\t%1,%0\n    #\"\n   [(set_attr \"op_type\" \"RR,RX,RXY,RX,RXY,RRE,RXY,RXY,SS\")\n-   (set_attr \"type\" \"floadd,floadd,floadd,fstored,fstored,lr,load,store,cs\")])\n+   (set_attr \"type\" \"floadd,floadd,floadd,fstored,fstored,lr,load,store,*\")])\n \n (define_insn \"*movdf_31\"\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f,f,f,R,T,d,Q,d,o,Q\")\n@@ -1422,8 +1419,8 @@\n    #\n    #\n    #\"\n-  [(set_attr \"op_type\" \"RR,RX,RXY,RX,RXY,RS,RS,NN,NN,SS\")\n-   (set_attr \"type\" \"floadd,floadd,floadd,fstored,fstored,lm,stm,*,*,cs\")])\n+  [(set_attr \"op_type\" \"RR,RX,RXY,RX,RXY,RS,RS,*,*,SS\")\n+   (set_attr \"type\" \"floadd,floadd,floadd,fstored,fstored,lm,stm,*,*,*\")])\n \n (define_split\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"\")\n@@ -1499,7 +1496,8 @@\n    sty\\t%1,%0\n    #\"\n   [(set_attr \"op_type\" \"RR,RX,RXY,RX,RXY,RR,RX,RXY,RX,RXY,SS\")\n-   (set_attr \"type\" \"floads,floads,floads,fstores,fstores,lr,load,load,store,store,cs\")])\n+   (set_attr \"type\" \"floads,floads,floads,fstores,fstores,\n+                     lr,load,load,store,store,*\")])\n \n ;\n ; movcc instruction pattern\n@@ -1530,8 +1528,7 @@\n    (use (match_operand 2 \"const_int_operand\" \"n\"))]\n   \"INTVAL (operands[2]) >= 1 && INTVAL (operands[2]) <= 256\"\n   \"mvc\\t%O0(%2,%R0),%S1\"\n-  [(set_attr \"op_type\" \"SS\")\n-   (set_attr \"type\"    \"cs\")])\n+  [(set_attr \"op_type\" \"SS\")])\n \n (define_split\n   [(set (match_operand 0 \"memory_operand\" \"\")\n@@ -1804,9 +1801,8 @@\n    (clobber (reg:CC 33))]\n   \"TARGET_64BIT\"\n   \"srst\\t%0,%1\\;jo\\t.-4\"\n-  [(set_attr \"op_type\" \"NN\")\n-   (set_attr \"type\"    \"vs\")\n-   (set_attr \"length\"  \"8\")])\n+  [(set_attr \"length\" \"8\")\n+   (set_attr \"type\" \"vs\")])\n \n (define_expand \"strlensi\"\n   [(set (reg:QI 0) (match_operand:QI 2 \"immediate_operand\" \"\"))\n@@ -1840,9 +1836,8 @@\n    (clobber (reg:CC 33))]\n   \"!TARGET_64BIT\"\n   \"srst\\t%0,%1\\;jo\\t.-4\"\n-  [(set_attr \"op_type\" \"NN\")\n-   (set_attr \"type\"    \"vs\")\n-   (set_attr \"length\"  \"8\")])\n+  [(set_attr \"length\" \"8\")\n+   (set_attr \"type\" \"vs\")])\n \n ;\n ; movmemM instruction pattern(s).\n@@ -1886,8 +1881,7 @@\n   \"(GET_MODE (operands[2]) == Pmode || GET_MODE (operands[2]) == VOIDmode)\n    && GET_MODE (operands[4]) == Pmode\"\n   \"#\"\n-  [(set_attr \"op_type\" \"SS,RX,RX\")\n-   (set_attr \"type\"    \"cs\")])\n+  [(set_attr \"type\" \"cs\")])\n \n (define_split\n   [(set (match_operand:BLK 0 \"memory_operand\" \"\")\n@@ -1975,9 +1969,8 @@\n    (clobber (reg:CC 33))]\n   \"TARGET_64BIT\"\n   \"mvcle\\t%0,%1,0\\;jo\\t.-4\"\n-  [(set_attr \"op_type\" \"NN\")\n-   (set_attr \"type\"    \"vs\")\n-   (set_attr \"length\"  \"8\")])\n+  [(set_attr \"length\" \"8\")\n+   (set_attr \"type\" \"vs\")])\n \n (define_insn \"*movmem_long_31\"\n   [(clobber (match_operand:DI 0 \"register_operand\" \"=d\"))\n@@ -1989,9 +1982,8 @@\n    (clobber (reg:CC 33))]\n   \"!TARGET_64BIT\"\n   \"mvcle\\t%0,%1,0\\;jo\\t.-4\"\n-  [(set_attr \"op_type\" \"NN\")\n-   (set_attr \"type\"    \"vs\")\n-   (set_attr \"length\"  \"8\")])\n+  [(set_attr \"length\" \"8\")\n+   (set_attr \"type\" \"vs\")])\n \n ;\n ; clrmemM instruction pattern(s).\n@@ -2037,8 +2029,7 @@\n   \"(GET_MODE (operands[1]) == Pmode || GET_MODE (operands[1]) == VOIDmode)\n    && GET_MODE (operands[3]) == Pmode\"\n   \"#\"\n-  [(set_attr \"op_type\" \"SS,RX,RX\")\n-   (set_attr \"type\"    \"cs\")])\n+  [(set_attr \"type\" \"cs\")])\n \n (define_split\n   [(set (match_operand:BLK 0 \"memory_operand\" \"\")\n@@ -2125,9 +2116,8 @@\n    (clobber (reg:CC 33))]\n   \"TARGET_64BIT\"\n   \"mvcle\\t%0,%1,0\\;jo\\t.-4\"\n-  [(set_attr \"op_type\" \"NN\")\n-   (set_attr \"type\"    \"vs\")\n-   (set_attr \"length\"  \"8\")])\n+  [(set_attr \"length\" \"8\")\n+   (set_attr \"type\" \"vs\")])\n \n (define_insn \"*clrmem_long_31\"\n   [(clobber (match_operand:DI 0 \"register_operand\" \"=d\"))\n@@ -2138,9 +2128,8 @@\n    (clobber (reg:CC 33))]\n   \"!TARGET_64BIT\"\n   \"mvcle\\t%0,%1,0\\;jo\\t.-4\"\n-  [(set_attr \"op_type\" \"NN\")\n-   (set_attr \"type\"    \"vs\")\n-   (set_attr \"length\"  \"8\")])\n+  [(set_attr \"length\" \"8\")\n+   (set_attr \"type\" \"vs\")])\n \n ;\n ; cmpmemM instruction pattern(s).\n@@ -2180,8 +2169,7 @@\n   \"(GET_MODE (operands[2]) == Pmode || GET_MODE (operands[2]) == VOIDmode)\n    && GET_MODE (operands[4]) == Pmode\"\n   \"#\"\n-  [(set_attr \"op_type\" \"SS,RX,RX\")\n-   (set_attr \"type\"    \"cs\")])\n+  [(set_attr \"type\" \"cs\")])\n \n (define_split\n   [(set (reg:CCU 33)\n@@ -2272,9 +2260,8 @@\n    (use (match_dup 3))]\n   \"TARGET_64BIT\"\n   \"clcle\\t%0,%1,0\\;jo\\t.-4\"\n-  [(set_attr \"op_type\" \"NN\")\n-   (set_attr \"type\"    \"vs\")\n-   (set_attr \"length\"  \"8\")])\n+  [(set_attr \"length\" \"8\")\n+   (set_attr \"type\" \"vs\")])\n \n (define_insn \"*cmpmem_long_31\"\n   [(clobber (match_operand:DI 0 \"register_operand\" \"=d\"))\n@@ -2286,9 +2273,8 @@\n    (use (match_dup 3))]\n   \"!TARGET_64BIT\"\n   \"clcle\\t%0,%1,0\\;jo\\t.-4\"\n-  [(set_attr \"op_type\" \"NN\")\n-   (set_attr \"type\"    \"vs\")\n-   (set_attr \"length\"  \"8\")])\n+  [(set_attr \"length\" \"8\")\n+   (set_attr \"type\" \"vs\")])\n \n ; Convert condition code to integer in range (-1, 0, 1)\n \n@@ -2303,9 +2289,7 @@\n    output_asm_insn (\"sr\\t%0,%0\", operands);\n    return \"lcr\\t%0,%0\";\n }\n-  [(set_attr \"op_type\" \"NN\")\n-   (set_attr \"length\"  \"16\")\n-   (set_attr \"type\"    \"other\")])\n+  [(set_attr \"length\" \"16\")])\n \n (define_insn \"*cmpint_di\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=d\")\n@@ -2318,9 +2302,7 @@\n    output_asm_insn (\"sgr\\t%0,%0\", operands);\n    return \"lcgr\\t%0,%0\";\n }\n-  [(set_attr \"op_type\" \"NN\")\n-   (set_attr \"length\"  \"20\")\n-   (set_attr \"type\"    \"other\")])\n+  [(set_attr \"length\" \"20\")])\n \n \n ;;\n@@ -2382,8 +2364,7 @@\n {\n   operands[2] = GEN_INT (32 - INTVAL (operands[2]));\n   operands[1] = change_address (operands[1], QImode, 0);\n-}\n-  [(set_attr \"atype\"   \"agen\")])\n+})\n \n (define_insn_and_split \"*extracthi\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n@@ -2402,8 +2383,7 @@\n {\n   operands[2] = GEN_INT (32 - INTVAL (operands[2]));\n   operands[1] = change_address (operands[1], HImode, 0);\n-}\n-  [(set_attr \"atype\"   \"agen\")])\n+})\n \n ;\n ; extendsidi2 instruction pattern(s).\n@@ -2786,8 +2766,7 @@\n    (parallel\n     [(set (strict_low_part (match_dup 2)) (match_dup 1))\n      (clobber (reg:CC 33))])]\n-  \"operands[2] = gen_lowpart (HImode, operands[0]);\"\n-  [(set_attr \"atype\" \"agen\")])\n+  \"operands[2] = gen_lowpart (HImode, operands[0]);\")\n \n ;\n ; zero_extendqisi2 instruction pattern(s).\n@@ -2820,8 +2799,7 @@\n   \"&& reload_completed\"\n   [(set (match_dup 0) (const_int 0))\n    (set (strict_low_part (match_dup 2)) (match_dup 1))]\n-  \"operands[2] = gen_lowpart (QImode, operands[0]);\"\n-  [(set_attr \"atype\" \"agen\")])\n+  \"operands[2] = gen_lowpart (QImode, operands[0]);\")\n \n ;\n ; zero_extendqihi2 instruction pattern(s).\n@@ -2854,8 +2832,7 @@\n   \"&& reload_completed\"\n   [(set (match_dup 0) (const_int 0))\n    (set (strict_low_part (match_dup 2)) (match_dup 1))]\n-  \"operands[2] = gen_lowpart (QImode, operands[0]);\"\n-  [(set_attr \"atype\" \"agen\")])\n+  \"operands[2] = gen_lowpart (QImode, operands[0]);\")\n \n \n ;\n@@ -2989,10 +2966,7 @@\n    output_asm_insn (\"xi\\t%N4,128\", operands);\n    return \"l\\t%0,%N4\";\n }\n-  [(set_attr \"op_type\" \"NN\")\n-   (set_attr \"type\"    \"other\")\n-   (set_attr \"atype\"   \"agen\")\n-   (set_attr \"length\"  \"20\")])\n+  [(set_attr \"length\" \"20\")])\n \n ;\n ; fixuns_truncsfdi2 and fix_truncsfdi2 instruction pattern(s).\n@@ -3173,10 +3147,7 @@\n    output_asm_insn (\"ld\\t%0,%3\", operands);\n    return \"sd\\t%0,%2\";\n }\n-  [(set_attr \"op_type\" \"NN\")\n-   (set_attr \"type\"    \"other\" )\n-   (set_attr \"atype\"   \"agen\")\n-   (set_attr \"length\"  \"20\")])\n+  [(set_attr \"length\" \"20\")])\n \n ;\n ; floatsisf2 instruction pattern(s).\n@@ -3266,8 +3237,7 @@\n   \"@\n    sdr\\t%0,%0\\;ler\\t%0,%1\n    sdr\\t%0,%0\\;le\\t%0,%1\"\n-  [(set_attr \"op_type\"  \"NN,NN\")\n-   (set_attr \"length\"   \"4,6\")\n+  [(set_attr \"length\"   \"4,6\")\n    (set_attr \"type\"     \"floads,floads\")])\n \n \n@@ -3308,8 +3278,7 @@\n    operands[5] = operand_subword (operands[2], 0, 0, TImode);\n    operands[6] = operand_subword (operands[0], 1, 0, TImode);\n    operands[7] = operand_subword (operands[1], 1, 0, TImode);\n-   operands[8] = operand_subword (operands[2], 1, 0, TImode);\"\n-  [(set_attr \"op_type\"  \"NN\")])\n+   operands[8] = operand_subword (operands[2], 1, 0, TImode);\")\n \n ;\n ; adddi3 instruction pattern(s).\n@@ -3495,8 +3464,7 @@\n    operands[5] = operand_subword (operands[2], 0, 0, DImode);\n    operands[6] = operand_subword (operands[0], 1, 0, DImode);\n    operands[7] = operand_subword (operands[1], 1, 0, DImode);\n-   operands[8] = operand_subword (operands[2], 1, 0, DImode);\"\n-  [(set_attr \"op_type\"  \"NN\")])\n+   operands[8] = operand_subword (operands[2], 1, 0, DImode);\")\n \n (define_insn_and_split \"*adddi3_31\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=&d\")\n@@ -3528,8 +3496,7 @@\n    operands[6] = operand_subword (operands[0], 1, 0, DImode);\n    operands[7] = operand_subword (operands[1], 1, 0, DImode);\n    operands[8] = operand_subword (operands[2], 1, 0, DImode);\n-   operands[9] = gen_label_rtx ();\"\n-  [(set_attr \"op_type\"  \"NN\")])\n+   operands[9] = gen_label_rtx ();\")\n \n (define_expand \"adddi3\"\n   [(parallel\n@@ -3832,8 +3799,7 @@\n    operands[5] = operand_subword (operands[2], 0, 0, TImode);\n    operands[6] = operand_subword (operands[0], 1, 0, TImode);\n    operands[7] = operand_subword (operands[1], 1, 0, TImode);\n-   operands[8] = operand_subword (operands[2], 1, 0, TImode);\"\n-  [(set_attr \"op_type\"  \"NN\")])\n+   operands[8] = operand_subword (operands[2], 1, 0, TImode);\")\n \n ;\n ; subdi3 instruction pattern(s).\n@@ -3992,8 +3958,7 @@\n    operands[5] = operand_subword (operands[2], 0, 0, DImode);\n    operands[6] = operand_subword (operands[0], 1, 0, DImode);\n    operands[7] = operand_subword (operands[1], 1, 0, DImode);\n-   operands[8] = operand_subword (operands[2], 1, 0, DImode);\"\n-  [(set_attr \"op_type\"  \"NN\")])\n+   operands[8] = operand_subword (operands[2], 1, 0, DImode);\")\n \n (define_insn_and_split \"*subdi3_31\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=&d\")\n@@ -4025,8 +3990,7 @@\n    operands[6] = operand_subword (operands[0], 1, 0, DImode);\n    operands[7] = operand_subword (operands[1], 1, 0, DImode);\n    operands[8] = operand_subword (operands[2], 1, 0, DImode);\n-   operands[9] = gen_label_rtx ();\"\n-  [(set_attr \"op_type\"  \"NN\")])\n+   operands[9] = gen_label_rtx ();\")\n \n (define_expand \"subdi3\"\n   [(parallel\n@@ -4431,8 +4395,7 @@\n     [(set (match_dup 0) (plus:DI (plus:DI (match_dup 0) (match_dup 0))\n                                  (match_dup 1)))\n      (clobber (reg:CC 33))])]\n-  \"\"\n-  [(set_attr \"op_type\"  \"NN\")])\n+  \"\")\n \n (define_insn_and_split \"*scondsi\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=&d\")\n@@ -4446,8 +4409,7 @@\n     [(set (match_dup 0) (plus:SI (plus:SI (match_dup 0) (match_dup 0))\n                                  (match_dup 1)))\n      (clobber (reg:CC 33))])]\n-  \"\"\n-  [(set_attr \"op_type\"  \"NN\")])\n+  \"\")\n \n (define_insn_and_split \"*sconddi_neg\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=&d\")\n@@ -4464,8 +4426,7 @@\n    (parallel\n     [(set (match_dup 0) (neg:DI (match_dup 0)))\n      (clobber (reg:CC 33))])]\n-  \"\"\n-  [(set_attr \"op_type\"  \"NN\")])\n+  \"\")\n \n (define_insn_and_split \"*scondsi_neg\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=&d\")\n@@ -4482,8 +4443,7 @@\n    (parallel\n     [(set (match_dup 0) (neg:SI (match_dup 0)))\n      (clobber (reg:CC 33))])]\n-  \"\"\n-  [(set_attr \"op_type\"  \"NN\")])\n+  \"\")\n \n (define_expand \"sltu\"\n   [(match_operand:SI 0 \"register_operand\" \"\")]\n@@ -5473,8 +5433,7 @@\n    (clobber (reg:CC 33))]\n   \"INTVAL (operands[2]) >= 1 && INTVAL (operands[2]) <= 256\"\n   \"nc\\t%O0(%2,%R0),%S1\"\n-  [(set_attr \"op_type\" \"SS\")\n-   (set_attr \"type\"    \"cs\")])\n+  [(set_attr \"op_type\" \"SS\")])\n \n (define_split\n   [(set (match_operand 0 \"memory_operand\" \"\")\n@@ -5763,8 +5722,7 @@\n    (clobber (reg:CC 33))]\n   \"INTVAL (operands[2]) >= 1 && INTVAL (operands[2]) <= 256\"\n   \"oc\\t%O0(%2,%R0),%S1\"\n-  [(set_attr \"op_type\" \"SS\")\n-   (set_attr \"type\"    \"cs\")])\n+  [(set_attr \"op_type\" \"SS\")])\n \n (define_split\n   [(set (match_operand 0 \"memory_operand\" \"\")\n@@ -6007,8 +5965,7 @@\n    (clobber (reg:CC 33))]\n   \"INTVAL (operands[2]) >= 1 && INTVAL (operands[2]) <= 256\"\n   \"xc\\t%O0(%2,%R0),%S1\"\n-  [(set_attr \"op_type\" \"SS\")\n-   (set_attr \"type\"    \"cs\")])\n+  [(set_attr \"op_type\" \"SS\")])\n \n (define_split\n   [(set (match_operand 0 \"memory_operand\" \"\")\n@@ -6063,8 +6020,7 @@\n    (clobber (reg:CC 33))]\n   \"INTVAL (operands[1]) >= 1 && INTVAL (operands[1]) <= 256\"\n   \"xc\\t%O0(%1,%R0),%S0\"\n-  [(set_attr \"op_type\" \"SS\")\n-   (set_attr \"type\"    \"cs\")])\n+  [(set_attr \"op_type\" \"SS\")])\n \n (define_peephole2\n   [(parallel\n@@ -6127,9 +6083,7 @@\n \t\t\t     CODE_LABEL_NUMBER (xop[0]));\n   return \"\";\n }\n-  [(set_attr \"op_type\"  \"NN\")\n-   (set_attr \"type\"     \"other\")\n-   (set_attr \"length\"   \"10\")])\n+  [(set_attr \"length\" \"10\")])\n \n ;\n ; negsi2 instruction pattern(s).\n@@ -7721,31 +7675,27 @@\n   s390_output_pool_entry (operands[0], mode, align);\n   return \"\";\n }\n-  [(set_attr \"op_type\" \"NN\")\n-   (set (attr \"length\")\n+  [(set (attr \"length\")\n         (symbol_ref \"GET_MODE_SIZE (GET_MODE (PATTERN (insn)))\"))])\n \n (define_insn \"pool_align\"\n   [(unspec_volatile [(match_operand 0 \"const_int_operand\" \"n\")]\n                     UNSPECV_POOL_ALIGN)]\n   \"\"\n   \".align\\t%0\"\n-  [(set_attr \"op_type\" \"NN\")\n-   (set (attr \"length\") (symbol_ref \"INTVAL (operands[0])\"))])\n+  [(set (attr \"length\") (symbol_ref \"INTVAL (operands[0])\"))])\n \n (define_insn \"pool_section_start\"\n   [(unspec_volatile [(const_int 1)] UNSPECV_POOL_SECTION)]\n   \"\"\n   \".section\\t.rodata\"\n-  [(set_attr \"op_type\" \"NN\")\n-   (set_attr \"length\"  \"0\")])\n+  [(set_attr \"length\" \"0\")])\n \n (define_insn \"pool_section_end\"\n   [(unspec_volatile [(const_int 0)] UNSPECV_POOL_SECTION)]\n   \"\"\n   \".previous\"\n-  [(set_attr \"op_type\" \"NN\")\n-   (set_attr \"length\"  \"0\")])\n+  [(set_attr \"length\" \"0\")])\n \n (define_insn \"main_base_31_small\"\n   [(set (match_operand 0 \"register_operand\" \"=a\")\n@@ -7776,8 +7726,7 @@\n         (unspec_volatile [(const_int 0)] UNSPECV_MAIN_POOL))]\n   \"GET_MODE (operands[0]) == Pmode\"\n   \"* abort ();\"\n-  [(set_attr \"op_type\" \"NN\")\n-   (set (attr \"type\") \n+  [(set (attr \"type\") \n         (if_then_else (ne (symbol_ref \"TARGET_CPU_ZARCH\") (const_int 0))\n                       (const_string \"larl\") (const_string \"la\")))])\n \n@@ -7786,9 +7735,8 @@\n         (unspec [(label_ref (match_operand 1 \"\" \"\"))] UNSPEC_RELOAD_BASE))]\n   \"!TARGET_CPU_ZARCH && GET_MODE (operands[0]) == Pmode\"\n   \"basr\\t%0,0\\;la\\t%0,%1-.(%0)\"\n-  [(set_attr \"op_type\" \"NN\")\n-   (set_attr \"type\"    \"la\")\n-   (set_attr \"length\"  \"6\")])\n+  [(set_attr \"length\" \"6\")\n+   (set_attr \"type\" \"la\")])\n \n (define_insn \"reload_base_64\"\n   [(set (match_operand 0 \"register_operand\" \"=a\")\n@@ -7802,8 +7750,7 @@\n   [(unspec_volatile [(match_operand 0 \"const_int_operand\" \"n\")] UNSPECV_POOL)]\n   \"\"\n   \"* abort ();\"\n-  [(set_attr \"op_type\" \"NN\")\n-   (set (attr \"length\") (symbol_ref \"INTVAL (operands[0])\"))])\n+  [(set (attr \"length\") (symbol_ref \"INTVAL (operands[0])\"))])\n \n ;;\n ;; Insns related to generating the function prologue and epilogue."}]}