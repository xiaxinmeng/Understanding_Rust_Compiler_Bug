{"sha": "d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "node_id": "C_kwDOANBUbNoAKGQ1MTQ4ZDRmYWE2ZmIxZTkzYjhlYTFmYWQ0YTY5ODA2NDU0ZjU2ZjU", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-01-18T19:36:27Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-01-19T16:33:53Z"}, "message": "Update per-file selftest and finalization hooks for .c to .cc renaming\n\nThis is mostly a mechanical change, apart from:\n- fix the name of attribute_c_tests to match its filename (attribs.cc)\n- fix the name of opt_proposer_c to match its filename (opt-suggestions.cc)\n- delete a bogus \"modref_c_tests\" decl from ipa-modref-tree.h that's been\n  present since the initial commit of that file\n  (d119f34c952f8718fdbabc63e2f369a16e92fa07)\n\ngcc/ChangeLog:\n\t* attribs.cc (attribute_c_tests): Rename to...\n\t(attribs_cc_tests): ...this.\n\t* bitmap.cc (bitmap_c_tests): Rename to...\n\t(bitmap_cc_tests): ...this.\n\t* cgraph.cc (cgraph_c_finalize): Rename to...\n\t(cgraph_cc_finalize): ...this.\n\t(cgraph_c_tests): Rename to...\n\t(cgraph_cc_tests): ...this.\n\t* cgraph.h (cgraph_c_finalize): Rename to...\n\t(cgraph_cc_finalize): ...this.\n\t(cgraphunit_c_finalize): Rename to...\n\t(cgraphunit_cc_finalize): ...this.\n\t* cgraphunit.cc (cgraphunit_c_finalize): Rename to...\n\t(cgraphunit_cc_finalize): ...this.\n\t* convert.cc (convert_c_tests): Rename to...\n\t(convert_cc_tests): ...this.\n\t* dbgcnt.cc (dbgcnt_c_tests): Rename to...\n\t(dbgcnt_cc_tests): ...this.\n\t* diagnostic-show-locus.cc (diagnostic_show_locus_c_tests): Rename to...\n\t(diagnostic_show_locus_cc_tests): ...this.\n\t* diagnostic.cc (diagnostic_c_tests): Rename to...\n\t(diagnostic_cc_tests): ...this.\n\t* dumpfile.cc (dumpfile_c_tests): Rename to...\n\t(dumpfile_cc_tests): ...this.\n\t* dwarf2out.cc (dwarf2out_c_finalize): Rename to...\n\t(dwarf2out_cc_finalize): ...this.\n\t* dwarf2out.h (dwarf2out_c_finalize): Rename to...\n\t(dwarf2out_cc_finalize): ...this.\n\t* edit-context.cc (edit_context_c_tests): Rename to...\n\t(edit_context_cc_tests): ...this.\n\t* et-forest.cc (et_forest_c_tests): Rename to...\n\t(et_forest_cc_tests): ...this.\n\t* fibonacci_heap.cc (fibonacci_heap_c_tests): Rename to...\n\t(fibonacci_heap_cc_tests): ...this.\n\t* fold-const.cc (fold_const_c_tests): Rename to...\n\t(fold_const_cc_tests): ...this.\n\t* function-tests.cc (function_tests_c_tests): Rename to...\n\t(function_tests_cc_tests): ...this.\n\t* gcse.cc (gcse_c_finalize): Rename to...\n\t(gcse_cc_finalize): ...this.\n\t* gcse.h (gcse_c_finalize): Rename to...\n\t(gcse_cc_finalize): ...this.\n\t* ggc-tests.cc (ggc_tests_c_tests): Rename to...\n\t(ggc_tests_cc_tests): ...this.\n\t* gimple-ssa-store-merging.cc (store_merging_c_tests): Rename to...\n\t(store_merging_cc_tests): ...this.\n\t* gimple.cc (gimple_c_tests): Rename to...\n\t(gimple_cc_tests): ...this.\n\t* hash-map-tests.cc (hash_map_tests_c_tests): Rename to...\n\t(hash_map_tests_cc_tests): ...this.\n\t* hash-set-tests.cc (hash_set_tests_c_tests): Rename to...\n\t(hash_set_tests_cc_tests): ...this.\n\t* input.cc (input_c_tests): Rename to...\n\t(input_cc_tests): ...this.\n\t* ipa-cp.cc (ipa_cp_c_finalize): Rename to...\n\t(ipa_cp_cc_finalize): ...this.\n\t* ipa-fnsummary.cc (ipa_fnsummary_c_finalize): Rename to...\n\t(ipa_fnsummary_cc_finalize): ...this.\n\t* ipa-fnsummary.h (ipa_fnsummary_c_finalize): Rename to...\n\t(ipa_fnsummary_cc_finalize): ...this.\n\t* ipa-modref-tree.cc (ipa_modref_tree_c_tests): Rename to...\n\t(ipa_modref_tree_cc_tests): ...this.\n\t* ipa-modref-tree.h (modref_c_tests): Delete bogus decl.\n\t* ipa-modref.cc (ipa_modref_c_finalize): Rename to...\n\t(ipa_modref_cc_finalize): ...this.\n\t* ipa-modref.h (ipa_modref_c_finalize): Rename to...\n\t(ipa_modref_cc_finalize): ...this.\n\t* ipa-prop.h (ipa_cp_c_finalize): Rename to...\n\t(ipa_cp_cc_finalize): ...this.\n\t* ipa-reference.cc (ipa_reference_c_finalize): Rename to...\n\t(ipa_reference_cc_finalize): ...this.\n\t* ipa-reference.h (ipa_reference_c_finalize): Rename to...\n\t(ipa_reference_cc_finalize): ...this.\n\t* ira-costs.cc (ira_costs_c_finalize): Rename to...\n\t(ira_costs_cc_finalize): ...this.\n\t* ira.h (ira_costs_c_finalize): Rename to...\n\t(ira_costs_cc_finalize): ...this.\n\t* opt-suggestions.cc (opt_proposer_c_tests): Rename to...\n\t(opt_suggestions_cc_tests): ...this.\n\t* opts.cc (opts_c_tests): Rename to...\n\t(opts_cc_tests): ...this.\n\t* predict.cc (predict_c_tests): Rename to...\n\t(predict_cc_tests): ...this.\n\t* pretty-print.cc (pretty_print_c_tests): Rename to...\n\t(pretty_print_cc_tests): ...this.\n\t* read-rtl-function.cc (read_rtl_function_c_tests): Rename to...\n\t(read_rtl_function_cc_tests): ...this.\n\t* rtl-tests.cc (rtl_tests_c_tests): Rename to...\n\t(rtl_tests_cc_tests): ...this.\n\t* sbitmap.cc (sbitmap_c_tests): Rename to...\n\t(sbitmap_cc_tests): ...this.\n\t* selftest-run-tests.cc (selftest::run_tests): Update calls for\n\t_c_ to _cc_ function renamings; fix names of attribs and\n\topt-suggestions tests.\n\t* selftest.cc (selftest_c_tests): Rename to...\n\t(selftest_cc_tests): ...this.\n\t* selftest.h (attribute_c_tests): Rename to...\n\t(attribs_cc_tests): ...this.\n\t(bitmap_c_tests): Rename to...\n\t(bitmap_cc_tests): ...this.\n\t(cgraph_c_tests): Rename to...\n\t(cgraph_cc_tests): ...this.\n\t(convert_c_tests): Rename to...\n\t(convert_cc_tests): ...this.\n\t(diagnostic_c_tests): Rename to...\n\t(diagnostic_cc_tests): ...this.\n\t(diagnostic_show_locus_c_tests): Rename to...\n\t(diagnostic_show_locus_cc_tests): ...this.\n\t(dumpfile_c_tests): Rename to...\n\t(dumpfile_cc_tests): ...this.\n\t(edit_context_c_tests): Rename to...\n\t(edit_context_cc_tests): ...this.\n\t(et_forest_c_tests): Rename to...\n\t(et_forest_cc_tests): ...this.\n\t(fibonacci_heap_c_tests): Rename to...\n\t(fibonacci_heap_cc_tests): ...this.\n\t(fold_const_c_tests): Rename to...\n\t(fold_const_cc_tests): ...this.\n\t(function_tests_c_tests): Rename to...\n\t(function_tests_cc_tests): ...this.\n\t(ggc_tests_c_tests): Rename to...\n\t(ggc_tests_cc_tests): ...this.\n\t(gimple_c_tests): Rename to...\n\t(gimple_cc_tests): ...this.\n\t(hash_map_tests_c_tests): Rename to...\n\t(hash_map_tests_cc_tests): ...this.\n\t(hash_set_tests_c_tests): Rename to...\n\t(hash_set_tests_cc_tests): ...this.\n\t(input_c_tests): Rename to...\n\t(input_cc_tests): ...this.\n\t(opts_c_tests): Rename to...\n\t(opts_cc_tests): ...this.\n\t(predict_c_tests): Rename to...\n\t(predict_cc_tests): ...this.\n\t(pretty_print_c_tests): Rename to...\n\t(pretty_print_cc_tests): ...this.\n\t(read_rtl_function_c_tests): Rename to...\n\t(read_rtl_function_cc_tests): ...this.\n\t(rtl_tests_c_tests): Rename to...\n\t(rtl_tests_cc_tests): ...this.\n\t(sbitmap_c_tests): Rename to...\n\t(sbitmap_cc_tests): ...this.\n\t(selftest_c_tests): Rename to...\n\t(selftest_cc_tests): ...this.\n\t(simplify_rtx_c_tests): Rename to...\n\t(simplify_rtx_cc_tests): ...this.\n\t(spellcheck_c_tests): Rename to...\n\t(spellcheck_cc_tests): ...this.\n\t(spellcheck_tree_c_tests): Rename to...\n\t(spellcheck_tree_cc_tests): ...this.\n\t(sreal_c_tests): Rename to...\n\t(sreal_cc_tests): ...this.\n\t(store_merging_c_tests): Rename to...\n\t(store_merging_cc_tests): ...this.\n\t(tree_c_tests): Rename to...\n\t(tree_cc_tests): ...this.\n\t(tree_cfg_c_tests): Rename to...\n\t(tree_cfg_cc_tests): ...this.\n\t(typed_splay_tree_c_tests): Rename to...\n\t(typed_splay_tree_cc_tests): ...this.\n\t(vec_c_tests): Rename to...\n\t(vec_cc_tests): ...this.\n\t(vec_perm_indices_c_tests): Rename to...\n\t(vec_perm_indices_cc_tests): ..this.\n\t(opt_proposer_c_tests): Rename to...\n\t(opt_suggestions_cc_tests): ...this.\n\t(dbgcnt_c_tests): Rename to...\n\t(dbgcnt_cc_tests): ...this.\n\t(ipa_modref_tree_c_tests): Rename to...\n\t(ipa_modref_tree_cc_tests): ...this.\n\t* simplify-rtx.cc (simplify_rtx_c_tests): Rename to...\n\t(simplify_rtx_cc_tests): ...this.\n\t* spellcheck-tree.cc (spellcheck_tree_c_tests): Rename to...\n\t(spellcheck_tree_cc_tests): ...this.\n\t* spellcheck.cc (spellcheck_c_tests): Rename to...\n\t(spellcheck_cc_tests): ...this.\n\t* sreal.cc (sreal_c_tests): Rename to...\n\t(sreal_cc_tests): ...this.\n\t* toplev.cc (toplev::finalize): Update calls for _c_ to _cc_\n\tfunction renamings.\n\t* tree-cfg.cc (tree_cfg_c_tests): Rename to...\n\t(tree_cfg_cc_tests): ...this.\n\t* tree.cc (tree_c_tests): Rename to...\n\t(tree_cc_tests): ...this.\n\t* typed-splay-tree.cc (typed_splay_tree_c_tests): Rename to...\n\t(typed_splay_tree_cc_tests): ...this.\n\t* vec-perm-indices.cc (vec_perm_indices_c_tests): Rename to...\n\t(vec_perm_indices_cc_tests): ...this.\n\t* vec.cc (vec_c_tests): Rename to...\n\t(vec_cc_tests): ...this.\n\ngcc/c-family/ChangeLog:\n\t* c-common.cc (c_common_c_tests): Rename to...\n\t(c_common_cc_tests): ...this.\n\t(c_family_tests): Update calls for .c to .cc renaming.\n\t* c-common.h (c_format_c_tests): Rename to...\n\t(c_format_cc_tests): ...this.\n\t(c_indentation_c_tests): Rename to...\n\t(c_indentation_cc_tests): ...this.\n\t(c_pretty_print_c_tests): Rename to...\n\t(c_pretty_print_cc_tests): ...this.\n\t* c-format.cc (c_format_c_tests): Rename to...\n\t(c_format_cc_tests): ...this.\n\t* c-indentation.cc (c_indentation_c_tests): Rename to...\n\t(c_indentation_cc_tests): ...this.\n\t* c-pretty-print.cc (c_pretty_print_c_tests): Rename to...\n\t(c_pretty_print_cc_tests): ...this.\n\ngcc/cp/ChangeLog:\n\t* cp-lang.cc (selftest::run_cp_tests): Update calls for .c to .cc\n\trenaming.\n\t* cp-tree.h (cp_pt_c_tests): Rename to...\n\t(cp_pt_cc_tests): ...this.\n\t(cp_tree_c_tests): Rename to...\n\t(cp_tree_cc_tests): ...this.\n\t* pt.cc (cp_pt_c_tests): Rename to...\n\t(cp_pt_cc_tests): ...this.\n\t* tree.cc (cp_tree_c_tests): Rename to...\n\t(cp_tree_cc_tests): ...this.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "38f17d8d9da58c5f0eb00c0c00b1cd96dbead2e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38f17d8d9da58c5f0eb00c0c00b1cd96dbead2e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a26ad67367a889a9fb6d0cc30e1e608e794d298", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a26ad67367a889a9fb6d0cc30e1e608e794d298", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a26ad67367a889a9fb6d0cc30e1e608e794d298"}], "stats": {"total": 314, "additions": 156, "deletions": 158}, "files": [{"sha": "497dcff84dfba709b747a9d0fdc80c5483139328", "filename": "gcc/attribs.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fattribs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fattribs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattribs.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -2655,7 +2655,7 @@ test_attribute_exclusions ()\n }\n \n void\n-attribute_c_tests ()\n+attribs_cc_tests ()\n {\n   test_attribute_exclusions ();\n }"}, {"sha": "88c329f932503e40dd61aa4c15ae42e54f258054", "filename": "gcc/bitmap.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fbitmap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fbitmap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbitmap.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -2976,7 +2976,7 @@ test_aligned_chunk (unsigned num_bits)\n /* Run all of the selftests within this file.  */\n \n void\n-bitmap_c_tests ()\n+bitmap_cc_tests ()\n {\n   test_gc_alloc ();\n   test_set_range ();"}, {"sha": "f56f6df8fe3d4bc7bc2999df1c7ba3b13c2d5726", "filename": "gcc/c-family/c-common.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fc-family%2Fc-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fc-family%2Fc-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -9096,7 +9096,7 @@ test_fold_for_warn ()\n /* Run all of the selftests within this file.  */\n \n static void\n-c_common_c_tests ()\n+c_common_cc_tests ()\n {\n   test_fold_for_warn ();\n }\n@@ -9106,10 +9106,10 @@ c_common_c_tests ()\n void\n c_family_tests (void)\n {\n-  c_common_c_tests ();\n-  c_format_c_tests ();\n-  c_indentation_c_tests ();\n-  c_pretty_print_c_tests ();\n+  c_common_cc_tests ();\n+  c_format_cc_tests ();\n+  c_indentation_cc_tests ();\n+  c_pretty_print_cc_tests ();\n   c_spellcheck_cc_tests ();\n }\n "}, {"sha": "28c73fe2847d1df4dd993a0d48549840fbbfd4f2", "filename": "gcc/c-family/c-common.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fc-family%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fc-family%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.h?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -1512,9 +1512,9 @@ extern tree braced_lists_to_strings (tree, tree);\n namespace selftest {\n   /* Declarations for specific families of tests within c-family,\n      by source file, in alphabetical order.  */\n-  extern void c_format_c_tests (void);\n-  extern void c_indentation_c_tests (void);\n-  extern void c_pretty_print_c_tests (void);\n+  extern void c_format_cc_tests (void);\n+  extern void c_indentation_cc_tests (void);\n+  extern void c_pretty_print_cc_tests (void);\n   extern void c_spellcheck_cc_tests (void);\n \n   /* The entrypoint for running all of the above tests.  */"}, {"sha": "a2affdacd7c36e0b8175b0e2534b89527a564991", "filename": "gcc/c-family/c-format.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fc-family%2Fc-format.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fc-family%2Fc-format.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-format.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -5424,7 +5424,7 @@ test_type_mismatch_range_labels ()\n /* Run all of the selftests within this file.  */\n \n void\n-c_format_c_tests ()\n+c_format_cc_tests ()\n {\n   test_get_modifier_for_format_len ();\n   test_get_format_for_type_printf ();"}, {"sha": "85a3ae1b303839470977dd3fb339d1982133f268", "filename": "gcc/c-family/c-indentation.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fc-family%2Fc-indentation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fc-family%2Fc-indentation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-indentation.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -804,7 +804,7 @@ test_get_visual_column ()\n /* Run all of the selftests within this file.  */\n \n void\n-c_indentation_c_tests ()\n+c_indentation_cc_tests ()\n {\n   test_next_tab_stop ();\n   test_get_visual_column ();"}, {"sha": "ceedaea962adfa2096303afb4ffc512589ac6ff7", "filename": "gcc/c-family/c-pretty-print.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fc-family%2Fc-pretty-print.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fc-family%2Fc-pretty-print.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pretty-print.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -2999,7 +2999,7 @@ test_location_wrappers ()\n /* Run all of the selftests within this file.  */\n \n void\n-c_pretty_print_c_tests ()\n+c_pretty_print_cc_tests ()\n {\n   test_location_wrappers ();\n }"}, {"sha": "b923a59ab0c17a2cf6bc3c8d10590ee1458f0c90", "filename": "gcc/cgraph.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fcgraph.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fcgraph.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -4077,7 +4077,7 @@ cgraph_node::get_fun () const\n    within the same process.  For use by toplev::finalize.  */\n \n void\n-cgraph_c_finalize (void)\n+cgraph_cc_finalize (void)\n {\n   nested_function_info::release ();\n   thunk_info::release ();\n@@ -4261,7 +4261,7 @@ test_symbol_table_test ()\n /* Run all of the selftests within this file.  */\n \n void\n-cgraph_c_tests ()\n+cgraph_cc_tests ()\n {\n   test_symbol_table_test ();\n }"}, {"sha": "8c512b648ee586bf319da23d271d7749673479d2", "filename": "gcc/cgraph.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -2568,7 +2568,7 @@ asmname_hasher::equal (symtab_node *n, const_tree t)\n }\n \n /* In cgraph.cc  */\n-void cgraph_c_finalize (void);\n+void cgraph_cc_finalize (void);\n void release_function_body (tree);\n cgraph_indirect_call_info *cgraph_allocate_init_indirect_info (void);\n \n@@ -2579,7 +2579,7 @@ const char* cgraph_inline_failed_string (cgraph_inline_failed_t);\n cgraph_inline_failed_type_t cgraph_inline_failed_type (cgraph_inline_failed_t);\n \n /* In cgraphunit.cc  */\n-void cgraphunit_c_finalize (void);\n+void cgraphunit_cc_finalize (void);\n int tp_first_run_node_cmp (const void *pa, const void *pb);\n \n /* In symtab-thunks.cc  */"}, {"sha": "01f4e28204e6f04d74b9d2b62e1763257f7eb2ec", "filename": "gcc/cgraphunit.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fcgraphunit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fcgraphunit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -2535,7 +2535,7 @@ symbol_table::finalize_compilation_unit (void)\n    within the same process.  For use by toplev::finalize.  */\n \n void\n-cgraphunit_c_finalize (void)\n+cgraphunit_cc_finalize (void)\n {\n   gcc_assert (cgraph_new_nodes.length () == 0);\n   cgraph_new_nodes.truncate (0);"}, {"sha": "25cc3ff3bd1b4f9d6c5f797a364dc14f0cfac199", "filename": "gcc/convert.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fconvert.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fconvert.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -1199,7 +1199,7 @@ test_convert_to_integer_maybe_fold ()\n /* Run all of the selftests within this file.  */\n \n void\n-convert_c_tests ()\n+convert_cc_tests ()\n {\n   test_convert_to_integer_maybe_fold ();\n }"}, {"sha": "7c8b94741faee952a43d8aaba8d738ef3a7105e4", "filename": "gcc/cp/cp-lang.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fcp%2Fcp-lang.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fcp%2Fcp-lang.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-lang.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -278,8 +278,8 @@ run_cp_tests (void)\n   c_family_tests ();\n \n   /* Additional C++-specific tests.  */\n-  cp_pt_c_tests ();\n-  cp_tree_c_tests ();\n+  cp_pt_cc_tests ();\n+  cp_tree_cc_tests ();\n }\n \n } // namespace selftest"}, {"sha": "186c54424a6322f3a8e8016e22dfa7e160a168ac", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -8641,8 +8641,8 @@ namespace selftest {\n \n   /* Declarations for specific families of tests within cp,\n      by source file, in alphabetical order.  */\n-  extern void cp_pt_c_tests ();\n-  extern void cp_tree_c_tests (void);\n+  extern void cp_pt_cc_tests ();\n+  extern void cp_tree_cc_tests (void);\n } // namespace selftest\n #endif /* #if CHECKING_P */\n "}, {"sha": "60bc35a86366428dcb6feb4b6ee8f73a822fb970", "filename": "gcc/cp/pt.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fcp%2Fpt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fcp%2Fpt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -30581,7 +30581,7 @@ test_type_dependent_expression_p ()\n /* Run all of the selftests within this file.  */\n \n void\n-cp_pt_c_tests ()\n+cp_pt_cc_tests ()\n {\n   test_build_non_dependent_expr ();\n   test_type_dependent_expression_p ();"}, {"sha": "bcd44e739214f9e046fff1ebd35af2adb6ff3e29", "filename": "gcc/cp/tree.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fcp%2Ftree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fcp%2Ftree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -6167,7 +6167,7 @@ test_lvalue_kind ()\n /* Run all of the selftests within this file.  */\n \n void\n-cp_tree_c_tests ()\n+cp_tree_cc_tests ()\n {\n   test_lvalue_kind ();\n }"}, {"sha": "11a8171d9433073fa2c0f996e9bebf51ebaa3c25", "filename": "gcc/dbgcnt.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fdbgcnt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fdbgcnt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbgcnt.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -272,7 +272,7 @@ test_sorted_dbg_counters ()\n }\n \n void\n-dbgcnt_c_tests ()\n+dbgcnt_cc_tests ()\n {\n   test_sorted_dbg_counters ();\n }"}, {"sha": "6eafe19785ffc46dd6f5be4787853ba74a403bdc", "filename": "gcc/diagnostic-show-locus.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fdiagnostic-show-locus.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fdiagnostic-show-locus.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic-show-locus.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -5658,7 +5658,7 @@ test_line_numbers_multiline_range ()\n /* Run all of the selftests within this file.  */\n \n void\n-diagnostic_show_locus_c_tests ()\n+diagnostic_show_locus_cc_tests ()\n {\n   test_line_span ();\n "}, {"sha": "f5f43d5e9a7d60815adaaf781b343d343fb6adb4", "filename": "gcc/diagnostic.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fdiagnostic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fdiagnostic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -2466,7 +2466,7 @@ test_num_digits ()\n /* Run all of the selftests within this file.  */\n \n void\n-diagnostic_c_tests ()\n+diagnostic_cc_tests ()\n {\n   test_print_escaped_string ();\n   test_print_parseable_fixits_none ();"}, {"sha": "ac79aa09245e5c391c10100ee95fb3846b81f6ce", "filename": "gcc/dumpfile.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fdumpfile.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fdumpfile.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdumpfile.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -2766,7 +2766,7 @@ test_pr87025 ()\n /* Run all of the selftests within this file.  */\n \n void\n-dumpfile_c_tests ()\n+dumpfile_cc_tests ()\n {\n   test_impl_location ();\n   for_each_line_table_case (test_capture_of_dump_calls);"}, {"sha": "f3bd322d90186e34a868eb97f0bca9b9ccb5d447", "filename": "gcc/dwarf2out.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fdwarf2out.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fdwarf2out.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -33058,7 +33058,7 @@ dwarf2out_early_finish (const char *filename)\n    within the same process.  For use by toplev::finalize.  */\n \n void\n-dwarf2out_c_finalize (void)\n+dwarf2out_cc_finalize (void)\n {\n   last_var_location_insn = NULL;\n   cached_next_real_insn = NULL;"}, {"sha": "656ef94afde0c064128dcdc0282ff3d1c1ea55c2", "filename": "gcc/dwarf2out.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fdwarf2out.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fdwarf2out.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.h?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -419,7 +419,7 @@ struct fixed_point_type_info\n     } scale_factor;\n };\n \n-void dwarf2out_c_finalize (void);\n+void dwarf2out_cc_finalize (void);\n \n /* Some DWARF internals are exposed for the needs of DWARF-based debug\n    formats.  */"}, {"sha": "6879ddd41b49c7a766a0d1e9c9065fe20c76ac97", "filename": "gcc/edit-context.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fedit-context.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fedit-context.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fedit-context.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -1788,7 +1788,7 @@ test_applying_fixits_column_validation (const line_table_case &case_)\n /* Run all of the selftests within this file.  */\n \n void\n-edit_context_c_tests ()\n+edit_context_cc_tests ()\n {\n   test_get_content ();\n   for_each_line_table_case (test_applying_fixits_insert_before);"}, {"sha": "ebdcccb9f1d98b69f6bb113b0721e75d4f02c87d", "filename": "gcc/et-forest.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fet-forest.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fet-forest.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fet-forest.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -872,7 +872,7 @@ test_disconnected_nodes ()\n /* Run all of the selftests within this file.  */\n \n void\n-et_forest_c_tests ()\n+et_forest_cc_tests ()\n {\n   test_single_node ();\n   test_simple_tree ();"}, {"sha": "f4b52d6e3afb2ddd92382bee94881c9ca15ed8dd", "filename": "gcc/fibonacci_heap.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Ffibonacci_heap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Ffibonacci_heap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffibonacci_heap.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -279,7 +279,7 @@ test_struct_key ()\n /* Run all of the selftests within this file.  */\n \n void\n-fibonacci_heap_c_tests ()\n+fibonacci_heap_cc_tests ()\n {\n   test_empty_heap ();\n   test_basic_heap_operations ();"}, {"sha": "fd9c6352d4f4f18c7bf761e8386c9039343f8899", "filename": "gcc/fold-const.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Ffold-const.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Ffold-const.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -16784,7 +16784,7 @@ test_vec_duplicate_folding ()\n /* Run all of the selftests within this file.  */\n \n void\n-fold_const_c_tests ()\n+fold_const_cc_tests ()\n {\n   test_arithmetic_folding ();\n   test_vector_folding ();"}, {"sha": "7d7761569ad59a6c195fcf4cf62a98c38e2a5772", "filename": "gcc/function-tests.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Ffunction-tests.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Ffunction-tests.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction-tests.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -687,7 +687,7 @@ test_expansion_to_rtl ()\n /* Run all of the selftests within this file.  */\n \n void\n-function_tests_c_tests ()\n+function_tests_cc_tests ()\n {\n   test_fndecl_int_void ();\n   test_fndecl_float_intchar ();"}, {"sha": "b67353143a21450a6068e51ad4e9257a831fe3fc", "filename": "gcc/gcse.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fgcse.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fgcse.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -4128,7 +4128,7 @@ make_pass_rtl_hoist (gcc::context *ctxt)\n    within the same process.  For use by toplev::finalize.  */\n \n void\n-gcse_c_finalize (void)\n+gcse_cc_finalize (void)\n {\n   test_insn = NULL;\n }"}, {"sha": "4a201f34d785f1ae432a74797d239eb7d854d903", "filename": "gcc/gcse.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fgcse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fgcse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.h?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -39,7 +39,7 @@ extern struct target_gcse *this_target_gcse;\n #define this_target_gcse (&default_target_gcse)\n #endif\n \n-void gcse_c_finalize (void);\n+void gcse_cc_finalize (void);\n extern bool gcse_or_cprop_is_too_expensive (const char *);\n \n #endif"}, {"sha": "620989489b69bd7db56ba0763693bdf0602fdbd3", "filename": "gcc/ggc-tests.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fggc-tests.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fggc-tests.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-tests.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -462,7 +462,7 @@ namespace selftest {\n /* Run all of the selftests within this file.  */\n \n void\n-ggc_tests_c_tests ()\n+ggc_tests_cc_tests ()\n {\n   test_basic_struct ();\n   test_length ();"}, {"sha": "eb70d90a45c9ab3a65f2636ba5f2fb3935ced141", "filename": "gcc/gimple-ssa-store-merging.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fgimple-ssa-store-merging.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fgimple-ssa-store-merging.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-store-merging.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -5633,7 +5633,7 @@ verify_clear_bit_region_be (void)\n /* Run all of the selftests within this file.  */\n \n void\n-store_merging_c_tests (void)\n+store_merging_cc_tests (void)\n {\n   verify_shift_bytes_in_array_left ();\n   verify_shift_bytes_in_array_right ();"}, {"sha": "5559e56d460eb460b21081f0aac949373112af5a", "filename": "gcc/gimple.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fgimple.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fgimple.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -3510,7 +3510,7 @@ test_return_without_value ()\n /* Run all of the selftests within this file.  */\n \n void\n-gimple_c_tests ()\n+gimple_cc_tests ()\n {\n   test_assign_single ();\n   test_assign_binop ();"}, {"sha": "c7d3dda8e0303fd90801410ff4f233523ac16c33", "filename": "gcc/hash-map-tests.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fhash-map-tests.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fhash-map-tests.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhash-map-tests.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -467,7 +467,7 @@ test_nonzero_empty_key ()\n /* Run all of the selftests within this file.  */\n \n void\n-hash_map_tests_c_tests ()\n+hash_map_tests_cc_tests ()\n {\n   test_map_of_strings_to_int ();\n   test_map_of_int_to_strings ();"}, {"sha": "de5c0e7a9035a37da13e2eebe26beda1b7fb7768", "filename": "gcc/hash-set-tests.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fhash-set-tests.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fhash-set-tests.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhash-set-tests.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -293,7 +293,7 @@ test_set_of_type_with_ctor_and_dtor ()\n /* Run all of the selftests within this file.  */\n \n void\n-hash_set_tests_c_tests ()\n+hash_set_tests_cc_tests ()\n {\n   test_set_of_strings ();\n   test_set_of_type_with_ctor_and_dtor ();"}, {"sha": "b3970613d812ff571644c3fd944cfeac6d515dac", "filename": "gcc/input.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Finput.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Finput.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finput.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -3885,7 +3885,7 @@ void test_cpp_utf8 ()\n /* Run all of the selftests within this file.  */\n \n void\n-input_c_tests ()\n+input_cc_tests ()\n {\n   test_linenum_comparisons ();\n   test_should_have_column_data_p ();"}, {"sha": "453e9c93cc31d711021498bc745830c368ee88a4", "filename": "gcc/ipa-cp.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fipa-cp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fipa-cp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -6630,7 +6630,7 @@ make_pass_ipa_cp (gcc::context *ctxt)\n    within the same process.  For use by toplev::finalize.  */\n \n void\n-ipa_cp_c_finalize (void)\n+ipa_cp_cc_finalize (void)\n {\n   base_count = profile_count::uninitialized ();\n   overall_size = 0;"}, {"sha": "0d7e395c846a201d325687627c0ee12117c31210", "filename": "gcc/ipa-fnsummary.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fipa-fnsummary.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fipa-fnsummary.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-fnsummary.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -4966,7 +4966,7 @@ make_pass_ipa_fn_summary (gcc::context *ctxt)\n    within the same process.  For use by toplev::finalize.  */\n \n void\n-ipa_fnsummary_c_finalize (void)\n+ipa_fnsummary_cc_finalize (void)\n {\n   ipa_free_fn_summary ();\n }"}, {"sha": "e1f1d1b839cfa2771b5857b1e638ec2c664b4b9c", "filename": "gcc/ipa-fnsummary.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fipa-fnsummary.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fipa-fnsummary.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-fnsummary.h?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -428,7 +428,7 @@ void evaluate_properties_for_edge (struct cgraph_edge *e,\n \t\t\t\t   ipa_auto_call_arg_values *avals,\n \t\t\t\t   bool compute_contexts);\n \n-void ipa_fnsummary_c_finalize (void);\n+void ipa_fnsummary_cc_finalize (void);\n HOST_WIDE_INT ipa_get_stack_frame_offset (struct cgraph_node *node);\n void ipa_remove_from_growth_caches (struct cgraph_edge *edge);\n "}, {"sha": "97e497accf2aacf34f2b1b2cfd63722f9e9ec1b5", "filename": "gcc/ipa-modref-tree.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fipa-modref-tree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fipa-modref-tree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-modref-tree.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -1007,7 +1007,7 @@ test_merge ()\n \n \n void\n-ipa_modref_tree_c_tests ()\n+ipa_modref_tree_cc_tests ()\n {\n   test_insert_search_collapse ();\n   test_merge ();"}, {"sha": "edb3b49374a352db743940e6a505aad2673237ee", "filename": "gcc/ipa-modref-tree.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fipa-modref-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fipa-modref-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-modref-tree.h?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -738,8 +738,6 @@ struct GTY((user)) modref_tree\n   }\n };\n \n-void modref_c_tests ();\n-\n void gt_ggc_mx (modref_tree <int>* const&);\n void gt_ggc_mx (modref_tree <tree_node*>* const&);\n void gt_pch_nx (modref_tree <int>* const&);"}, {"sha": "ad5cfd6507f0626eb6772049f7bb747ab88701fb", "filename": "gcc/ipa-modref.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fipa-modref.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fipa-modref.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-modref.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -5490,7 +5490,7 @@ pass_ipa_modref::execute (function *)\n /* Summaries must stay alive until end of compilation.  */\n \n void\n-ipa_modref_c_finalize ()\n+ipa_modref_cc_finalize ()\n {\n   if (optimization_summaries)\n     ggc_delete (optimization_summaries);"}, {"sha": "642108ae5dd8a0a26265dfb911892b7fea7f32ae", "filename": "gcc/ipa-modref.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fipa-modref.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fipa-modref.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-modref.h?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -73,7 +73,7 @@ struct GTY(()) modref_summary\n \n modref_summary *get_modref_function_summary (cgraph_node *func);\n modref_summary *get_modref_function_summary (gcall *call, bool *interposed);\n-void ipa_modref_c_finalize ();\n+void ipa_modref_cc_finalize ();\n void ipa_merge_modref_summary_after_inlining (cgraph_edge *e);\n \n /* All flags that are implied by the ECF_CONST functions.  */"}, {"sha": "553adfc9f35ccec0bfafa2deaf04a168a6c1857f", "filename": "gcc/ipa-prop.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fipa-prop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fipa-prop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.h?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -1189,6 +1189,6 @@ tree build_ref_for_offset (location_t, tree, poly_int64, bool, tree,\n \t\t\t   gimple_stmt_iterator *, bool);\n \n /* In ipa-cp.cc  */\n-void ipa_cp_c_finalize (void);\n+void ipa_cp_cc_finalize (void);\n \n #endif /* IPA_PROP_H */"}, {"sha": "67e0c85a95e9d957bd740abd3708aaa0fe091fd8", "filename": "gcc/ipa-reference.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fipa-reference.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fipa-reference.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-reference.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -1322,7 +1322,7 @@ make_pass_ipa_reference (gcc::context *ctxt)\n    within the same process.  For use by toplev::finalize.  */\n \n void\n-ipa_reference_c_finalize (void)\n+ipa_reference_cc_finalize (void)\n {\n   if (ipa_ref_opt_sum_summaries != NULL)\n     {"}, {"sha": "2048e4b81b12ade0cb6cbe6745340d2d1aae0604", "filename": "gcc/ipa-reference.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fipa-reference.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fipa-reference.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-reference.h?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -24,7 +24,7 @@ along with GCC; see the file COPYING3.  If not see\n /* In ipa-reference.cc  */\n bitmap ipa_reference_get_read_global (struct cgraph_node *fn);\n bitmap ipa_reference_get_written_global (struct cgraph_node *fn);\n-void ipa_reference_c_finalize (void);\n+void ipa_reference_cc_finalize (void);\n int ipa_reference_var_uid (tree t);\n \n #endif  /* GCC_IPA_REFERENCE_H  */"}, {"sha": "964c94a06ef56e27d0134a66eee7f60700ecfbab", "filename": "gcc/ira-costs.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fira-costs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fira-costs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-costs.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -2411,7 +2411,7 @@ ira_adjust_equiv_reg_cost (unsigned regno, int cost)\n }\n \n void\n-ira_costs_c_finalize (void)\n+ira_costs_cc_finalize (void)\n {\n   this_target_ira_int->free_ira_costs ();\n }"}, {"sha": "c12827378e4321bf25ffcd3c58d2bf70589f5f34", "filename": "gcc/ira.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fira.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fira.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.h?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -216,7 +216,7 @@ extern void ira_restore_scratches (FILE *dump_file);\n extern void ira_nullify_asm_goto (rtx_insn *insn);\n \n /* ira-costs.cc */\n-extern void ira_costs_c_finalize (void);\n+extern void ira_costs_cc_finalize (void);\n \n /* ira-lives.cc */\n extern rtx non_conflicting_reg_copy_p (rtx_insn *);"}, {"sha": "33f298560a1a472d245e1f915a7864e03d36a69d", "filename": "gcc/opt-suggestions.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fopt-suggestions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fopt-suggestions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopt-suggestions.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -396,7 +396,7 @@ test_completion_garbage (option_proposer &proposer)\n /* Run all of the selftests within this file.  */\n \n void\n-opt_proposer_c_tests ()\n+opt_suggestions_cc_tests ()\n {\n   option_proposer proposer;\n "}, {"sha": "dfdc4d7838974f4a6e3cdd1549df232b2c66b895", "filename": "gcc/opts.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fopts.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fopts.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -3712,7 +3712,7 @@ test_get_option_html_page ()\n /* Run all of the selftests within this file.  */\n \n void\n-opts_c_tests ()\n+opts_cc_tests ()\n {\n   test_get_option_html_page ();\n }"}, {"sha": "5734e4c851630c85d66ff751c76f97c04d7f1bdb", "filename": "gcc/predict.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fpredict.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fpredict.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -4557,7 +4557,7 @@ test_prediction_value_range ()\n /* Run all of the selfests within this file.  */\n \n void\n-predict_c_tests ()\n+predict_cc_tests ()\n {\n   test_prediction_value_range ();\n }"}, {"sha": "3ee206d2a42c1695e18337a9dcdcb67612fcfa17", "filename": "gcc/pretty-print.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fpretty-print.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fpretty-print.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpretty-print.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -2613,7 +2613,7 @@ static void test_utf8 ()\n /* Run all of the selftests within this file.  */\n \n void\n-pretty_print_c_tests ()\n+pretty_print_cc_tests ()\n {\n   test_basic_printing ();\n   test_pp_format ();"}, {"sha": "49c88804a2a61e28192375a8d18ac8053d91eb9f", "filename": "gcc/read-rtl-function.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fread-rtl-function.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fread-rtl-function.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fread-rtl-function.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -2204,7 +2204,7 @@ test_loading_repeat ()\n /* Run all of the selftests within this file.  */\n \n void\n-read_rtl_function_c_tests ()\n+read_rtl_function_cc_tests ()\n {\n   test_edge_flags ();\n   test_parsing_regnos ();"}, {"sha": "6957d700cedfe065ff24c03c253f6c20aeab0873", "filename": "gcc/rtl-tests.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Frtl-tests.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Frtl-tests.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl-tests.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -310,7 +310,7 @@ test_dumping_repeat ()\n /* Run all of the selftests within this file.  */\n \n void\n-rtl_tests_c_tests ()\n+rtl_tests_cc_tests ()\n {\n   test_dumping_regs ();\n   test_dumping_insns ();"}, {"sha": "5ac2b6d0f67ec05b9c44b6d44648ef4701e08cf4", "filename": "gcc/sbitmap.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fsbitmap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fsbitmap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsbitmap.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -997,7 +997,7 @@ test_bit_in_range ()\n /* Run all of the selftests within this file.  */\n \n void\n-sbitmap_c_tests ()\n+sbitmap_cc_tests ()\n {\n   test_set_range ();\n   test_bit_in_range ();"}, {"sha": "99c3542325368215dbabe3c0d312c54d9ddff6a1", "filename": "gcc/selftest-run-tests.cc", "status": "modified", "additions": 37, "deletions": 37, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fselftest-run-tests.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fselftest-run-tests.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fselftest-run-tests.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -55,67 +55,67 @@ selftest::run_tests ()\n      run the tests for lowest-level code first.  */\n \n   /* Sanity-check for selftests themselves.  */\n-  selftest_c_tests ();\n+  selftest_cc_tests ();\n \n   /* Low-level data structures.  */\n-  bitmap_c_tests ();\n-  sbitmap_c_tests ();\n-  dumpfile_c_tests ();\n-  et_forest_c_tests ();\n-  hash_map_tests_c_tests ();\n-  hash_set_tests_c_tests ();\n-  vec_c_tests ();\n-  pretty_print_c_tests ();\n+  bitmap_cc_tests ();\n+  sbitmap_cc_tests ();\n+  dumpfile_cc_tests ();\n+  et_forest_cc_tests ();\n+  hash_map_tests_cc_tests ();\n+  hash_set_tests_cc_tests ();\n+  vec_cc_tests ();\n+  pretty_print_cc_tests ();\n   wide_int_cc_tests ();\n-  ggc_tests_c_tests ();\n-  sreal_c_tests ();\n-  fibonacci_heap_c_tests ();\n-  typed_splay_tree_c_tests ();\n-  opt_proposer_c_tests ();\n-  opts_c_tests ();\n+  ggc_tests_cc_tests ();\n+  sreal_cc_tests ();\n+  fibonacci_heap_cc_tests ();\n+  typed_splay_tree_cc_tests ();\n+  opt_suggestions_cc_tests ();\n+  opts_cc_tests ();\n   json_cc_tests ();\n-  cgraph_c_tests ();\n+  cgraph_cc_tests ();\n   optinfo_emit_json_cc_tests ();\n   opt_problem_cc_tests ();\n   ordered_hash_map_tests_cc_tests ();\n   splay_tree_cc_tests ();\n \n   /* Mid-level data structures.  */\n-  input_c_tests ();\n-  vec_perm_indices_c_tests ();\n-  tree_c_tests ();\n-  convert_c_tests ();\n-  gimple_c_tests ();\n-  rtl_tests_c_tests ();\n-  read_rtl_function_c_tests ();\n+  input_cc_tests ();\n+  vec_perm_indices_cc_tests ();\n+  tree_cc_tests ();\n+  convert_cc_tests ();\n+  gimple_cc_tests ();\n+  rtl_tests_cc_tests ();\n+  read_rtl_function_cc_tests ();\n   digraph_cc_tests ();\n   tristate_cc_tests ();\n-  ipa_modref_tree_c_tests ();\n+  ipa_modref_tree_cc_tests ();\n \n   /* Higher-level tests, or for components that other selftests don't\n      rely on.  */\n-  diagnostic_show_locus_c_tests ();\n-  diagnostic_c_tests ();\n+  diagnostic_show_locus_cc_tests ();\n+  diagnostic_cc_tests ();\n   diagnostic_format_json_cc_tests ();\n-  edit_context_c_tests ();\n-  fold_const_c_tests ();\n-  spellcheck_c_tests ();\n-  spellcheck_tree_c_tests ();\n-  tree_cfg_c_tests ();\n+  edit_context_cc_tests ();\n+  fold_const_cc_tests ();\n+  spellcheck_cc_tests ();\n+  spellcheck_tree_cc_tests ();\n+  tree_cfg_cc_tests ();\n   tree_diagnostic_path_cc_tests ();\n-  attribute_c_tests ();\n+  attribs_cc_tests ();\n \n   /* This one relies on most of the above.  */\n-  function_tests_c_tests ();\n+  function_tests_cc_tests ();\n \n   /* Run any target-specific selftests.  */\n   if (targetm.run_target_selftests)\n     targetm.run_target_selftests ();\n \n-  store_merging_c_tests ();\n-  predict_c_tests ();\n-  simplify_rtx_c_tests ();\n-  dbgcnt_c_tests ();\n+  store_merging_cc_tests ();\n+  predict_cc_tests ();\n+  simplify_rtx_cc_tests ();\n+  dbgcnt_cc_tests ();\n \n   /* Run any lang-specific selftests.  */\n   lang_hooks.run_lang_selftests ();"}, {"sha": "89abfba5e80d054ffd7198cbadb6ffe96534f23a", "filename": "gcc/selftest.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fselftest.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fselftest.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fselftest.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -412,7 +412,7 @@ test_locate_file ()\n /* Run all of the selftests within this file.  */\n \n void\n-selftest_c_tests ()\n+selftest_cc_tests ()\n {\n   test_libiberty ();\n   test_assertions ();"}, {"sha": "7a715631c623fa566d2368059874880733f8c550", "filename": "gcc/selftest.h", "status": "modified", "additions": 37, "deletions": 37, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fselftest.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fselftest.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fselftest.h?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -218,56 +218,56 @@ class test_runner\n \n /* Declarations for specific families of tests (by source file), in\n    alphabetical order.  */\n-extern void attribute_c_tests ();\n-extern void bitmap_c_tests ();\n-extern void cgraph_c_tests ();\n-extern void convert_c_tests ();\n-extern void diagnostic_c_tests ();\n+extern void attribs_cc_tests ();\n+extern void bitmap_cc_tests ();\n+extern void cgraph_cc_tests ();\n+extern void convert_cc_tests ();\n+extern void diagnostic_cc_tests ();\n extern void diagnostic_format_json_cc_tests ();\n-extern void diagnostic_show_locus_c_tests ();\n+extern void diagnostic_show_locus_cc_tests ();\n extern void digraph_cc_tests ();\n-extern void dumpfile_c_tests ();\n-extern void edit_context_c_tests ();\n-extern void et_forest_c_tests ();\n-extern void fibonacci_heap_c_tests ();\n-extern void fold_const_c_tests ();\n-extern void function_tests_c_tests ();\n-extern void ggc_tests_c_tests ();\n-extern void gimple_c_tests ();\n-extern void hash_map_tests_c_tests ();\n-extern void hash_set_tests_c_tests ();\n-extern void input_c_tests ();\n+extern void dumpfile_cc_tests ();\n+extern void edit_context_cc_tests ();\n+extern void et_forest_cc_tests ();\n+extern void fibonacci_heap_cc_tests ();\n+extern void fold_const_cc_tests ();\n+extern void function_tests_cc_tests ();\n+extern void ggc_tests_cc_tests ();\n+extern void gimple_cc_tests ();\n+extern void hash_map_tests_cc_tests ();\n+extern void hash_set_tests_cc_tests ();\n+extern void input_cc_tests ();\n extern void json_cc_tests ();\n extern void opt_problem_cc_tests ();\n extern void optinfo_emit_json_cc_tests ();\n-extern void opts_c_tests ();\n+extern void opts_cc_tests ();\n extern void ordered_hash_map_tests_cc_tests ();\n-extern void predict_c_tests ();\n-extern void pretty_print_c_tests ();\n+extern void predict_cc_tests ();\n+extern void pretty_print_cc_tests ();\n extern void range_tests ();\n extern void range_op_tests ();\n extern void gimple_range_tests ();\n-extern void read_rtl_function_c_tests ();\n-extern void rtl_tests_c_tests ();\n-extern void sbitmap_c_tests ();\n-extern void selftest_c_tests ();\n-extern void simplify_rtx_c_tests ();\n-extern void spellcheck_c_tests ();\n-extern void spellcheck_tree_c_tests ();\n+extern void read_rtl_function_cc_tests ();\n+extern void rtl_tests_cc_tests ();\n+extern void sbitmap_cc_tests ();\n+extern void selftest_cc_tests ();\n+extern void simplify_rtx_cc_tests ();\n+extern void spellcheck_cc_tests ();\n+extern void spellcheck_tree_cc_tests ();\n extern void splay_tree_cc_tests ();\n-extern void sreal_c_tests ();\n-extern void store_merging_c_tests ();\n-extern void tree_c_tests ();\n-extern void tree_cfg_c_tests ();\n+extern void sreal_cc_tests ();\n+extern void store_merging_cc_tests ();\n+extern void tree_cc_tests ();\n+extern void tree_cfg_cc_tests ();\n extern void tree_diagnostic_path_cc_tests ();\n extern void tristate_cc_tests ();\n-extern void typed_splay_tree_c_tests ();\n-extern void vec_c_tests ();\n-extern void vec_perm_indices_c_tests ();\n+extern void typed_splay_tree_cc_tests ();\n+extern void vec_cc_tests ();\n+extern void vec_perm_indices_cc_tests ();\n extern void wide_int_cc_tests ();\n-extern void opt_proposer_c_tests ();\n-extern void dbgcnt_c_tests ();\n-extern void ipa_modref_tree_c_tests ();\n+extern void opt_suggestions_cc_tests ();\n+extern void dbgcnt_cc_tests ();\n+extern void ipa_modref_tree_cc_tests ();\n \n extern int num_passes;\n "}, {"sha": "bd176e86adfd7caecc32b5b76aec2203931d4c71", "filename": "gcc/simplify-rtx.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fsimplify-rtx.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fsimplify-rtx.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -8459,7 +8459,7 @@ simplify_const_poly_int_tests<N>::run ()\n /* Run all of the selftests within this file.  */\n \n void\n-simplify_rtx_c_tests ()\n+simplify_rtx_cc_tests ()\n {\n   test_scalar_ops ();\n   test_vector_ops ();"}, {"sha": "0be1e41b15bbfac93ee17c4f8d7e3d95ad142975", "filename": "gcc/spellcheck-tree.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fspellcheck-tree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fspellcheck-tree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fspellcheck-tree.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -104,7 +104,7 @@ test_find_closest_identifier ()\n /* Run all of the selftests within this file.  */\n \n void\n-spellcheck_tree_c_tests ()\n+spellcheck_tree_cc_tests ()\n {\n   test_find_closest_identifier ();\n }"}, {"sha": "3e58344f51001c1c57b7715719232724da04c14f", "filename": "gcc/spellcheck.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fspellcheck.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fspellcheck.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fspellcheck.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -515,7 +515,7 @@ test_metric_conditions ()\n /* Run all of the selftests within this file.  */\n \n void\n-spellcheck_c_tests ()\n+spellcheck_cc_tests ()\n {\n   test_edit_distances ();\n   test_get_edit_distance_cutoff ();"}, {"sha": "75c360e3970d9af9934093994fe8daff189a150c", "filename": "gcc/sreal.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fsreal.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fsreal.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsreal.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -379,7 +379,7 @@ sreal_verify_negative_division (void)\n \n /* Run all of the selftests within this file.  */\n \n-void sreal_c_tests ()\n+void sreal_cc_tests ()\n {\n   sreal_verify_basics ();\n   sreal_verify_arithmetics ();"}, {"sha": "ea27e441a91f5f9bac35e9998a7441fc9f5cd7af", "filename": "gcc/toplev.cc", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Ftoplev.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Ftoplev.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -2355,19 +2355,19 @@ toplev::finalize (void)\n   rtl_initialized = false;\n   this_target_rtl->target_specific_initialized = false;\n \n-  /* Needs to be called before cgraph_c_finalize since it uses symtab.  */\n-  ipa_reference_c_finalize ();\n-  ipa_fnsummary_c_finalize ();\n-  ipa_modref_c_finalize ();\n+  /* Needs to be called before cgraph_cc_finalize since it uses symtab.  */\n+  ipa_reference_cc_finalize ();\n+  ipa_fnsummary_cc_finalize ();\n+  ipa_modref_cc_finalize ();\n   ipa_edge_modifications_finalize ();\n \n-  cgraph_c_finalize ();\n-  cgraphunit_c_finalize ();\n+  cgraph_cc_finalize ();\n+  cgraphunit_cc_finalize ();\n   symtab_thunks_cc_finalize ();\n-  dwarf2out_c_finalize ();\n-  gcse_c_finalize ();\n-  ipa_cp_c_finalize ();\n-  ira_costs_c_finalize ();\n+  dwarf2out_cc_finalize ();\n+  gcse_cc_finalize ();\n+  ipa_cp_cc_finalize ();\n+  ira_costs_cc_finalize ();\n \n   /* save_decoded_options uses opts_obstack, so these must\n      be cleaned up together.  */"}, {"sha": "77178a6bf693f212f4a117278449aec4154516b5", "filename": "gcc/tree-cfg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Ftree-cfg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Ftree-cfg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -10220,7 +10220,7 @@ test_fully_connected ()\n /* Run all of the selftests within this file.  */\n \n void\n-tree_cfg_c_tests ()\n+tree_cfg_cc_tests ()\n {\n   test_linear_chain ();\n   test_diamond ();"}, {"sha": "c4b36619e6a4d1024da2105eaa53fdfb3fdb0029", "filename": "gcc/tree.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Ftree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Ftree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -15203,7 +15203,7 @@ test_escaped_strings (void)\n /* Run all of the selftests within this file.  */\n \n void\n-tree_c_tests ()\n+tree_cc_tests ()\n {\n   test_integer_constants ();\n   test_identifiers ();"}, {"sha": "df4457c16816878f97c5d0a7d9f8ac6efa3de0eb", "filename": "gcc/typed-splay-tree.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Ftyped-splay-tree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Ftyped-splay-tree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftyped-splay-tree.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -72,7 +72,7 @@ test_str_to_int ()\n /* Run all of the selftests within this file.  */\n \n void\n-typed_splay_tree_c_tests ()\n+typed_splay_tree_cc_tests ()\n {\n   test_str_to_int ();\n }"}, {"sha": "acf90225280e5fd1ac0dddba16065467b281b31e", "filename": "gcc/vec-perm-indices.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fvec-perm-indices.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fvec-perm-indices.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvec-perm-indices.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -371,7 +371,7 @@ test_vec_perm_12 (void)\n /* Run selftests for this file.  */\n \n void\n-vec_perm_indices_c_tests ()\n+vec_perm_indices_cc_tests ()\n {\n   test_vec_perm_12 ();\n }"}, {"sha": "af4a5e5d3ad0f5e1dd1fc2fe3f6f8e66e8223cab", "filename": "gcc/vec.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fvec.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5148d4faa6fb1e93b8ea1fad4a69806454f56f5/gcc%2Fvec.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvec.cc?ref=d5148d4faa6fb1e93b8ea1fad4a69806454f56f5", "patch": "@@ -571,7 +571,7 @@ test_auto_delete_vec ()\n /* Run all of the selftests within this file.  */\n \n void\n-vec_c_tests ()\n+vec_cc_tests ()\n {\n   test_init ();\n   test_quick_push ();"}]}