{"sha": "9694c03951602dd1216838de82dc1c2de54d2754", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY5NGMwMzk1MTYwMmRkMTIxNjgzOGRlODJkYzFjMmRlNTRkMjc1NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-11T08:23:31Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-10-11T08:23:31Z"}, "message": "[multiple changes]\n\n2010-10-11  Robert Dewar  <dewar@adacore.com>\n\n\t* a-textio.adb: Minor reformatting\n\n2010-10-11  Robert Dewar  <dewar@adacore.com>\n\n\t* a-suesen.ads, a-suenst.ads,\n\ta-suesen.adb, a-suenst.adb,\n\ta-suewse.adb, a-suewst.adb,\n\ta-suewse.ads, a-suewst.ads,\n\ta-suezse.ads, a-suezst.ads,\n\ta-suezse.adb, a-suezst.adb: New name for string encoding packages.\n\t* impunit.adb: New names for string encoding units\n\t* Makefile.rtl: New names for string encoding units\n\t* rtsfind.ads: Minor code reorganization.\n\n2010-10-11  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch5.adb: Code clean up.\n\n2010-10-11  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Check_Limited_Return): Specialize warning on limited\n\treturns when in a generic context.\n\t(Analyze_Function_Return): ditto.\n\nFrom-SVN: r165276", "tree": {"sha": "683b8604bef46a8c1128c9c36abfc63a9c1e98cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/683b8604bef46a8c1128c9c36abfc63a9c1e98cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9694c03951602dd1216838de82dc1c2de54d2754", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9694c03951602dd1216838de82dc1c2de54d2754", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9694c03951602dd1216838de82dc1c2de54d2754", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9694c03951602dd1216838de82dc1c2de54d2754/comments", "author": null, "committer": null, "parents": [{"sha": "0144fd18d746179a058011b4339dd852a2805dda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0144fd18d746179a058011b4339dd852a2805dda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0144fd18d746179a058011b4339dd852a2805dda"}], "stats": {"total": 175, "additions": 119, "deletions": 56}, "files": [{"sha": "d216fcbe1a4651ac9f3b8943db8052ed31040bcd", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9694c03951602dd1216838de82dc1c2de54d2754/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9694c03951602dd1216838de82dc1c2de54d2754/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9694c03951602dd1216838de82dc1c2de54d2754", "patch": "@@ -1,3 +1,29 @@\n+2010-10-11  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-textio.adb: Minor reformatting\n+\n+2010-10-11  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-suesen.ads, a-suenst.ads,\n+\ta-suesen.adb, a-suenst.adb,\n+\ta-suewse.adb, a-suewst.adb,\n+\ta-suewse.ads, a-suewst.ads,\n+\ta-suezse.ads, a-suezst.ads,\n+\ta-suezse.adb, a-suezst.adb: New name for string encoding packages.\n+\t* impunit.adb: New names for string encoding units\n+\t* Makefile.rtl: New names for string encoding units\n+\t* rtsfind.ads: Minor code reorganization.\n+\n+2010-10-11  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch5.adb: Code clean up.\n+\n+2010-10-11  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Check_Limited_Return): Specialize warning on limited\n+\treturns when in a generic context.\n+\t(Analyze_Function_Return): ditto.\n+\n 2010-10-11  Robert Dewar  <dewar@adacore.com>\n \n \t* s-multip.ads: Fix header."}, {"sha": "4989e7943705bd23c2e672c444ced373d81586d7", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9694c03951602dd1216838de82dc1c2de54d2754/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9694c03951602dd1216838de82dc1c2de54d2754/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=9694c03951602dd1216838de82dc1c2de54d2754", "patch": "@@ -227,9 +227,9 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-stzsup$(objext) \\\n   a-stzunb$(objext) \\\n   a-suenco$(objext) \\\n-  a-suesen$(objext) \\\n-  a-suewse$(objext) \\\n-  a-suezse$(objext) \\\n+  a-suenst$(objext) \\\n+  a-suewst$(objext) \\\n+  a-suezst$(objext) \\\n   a-suteio$(objext) \\\n   a-swbwha$(objext) \\\n   a-swfwha$(objext) \\"}, {"sha": "d4207ed3e30b0f799f596bb0a87da2e351606e03", "filename": "gcc/ada/a-suenst.adb", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9694c03951602dd1216838de82dc1c2de54d2754/gcc%2Fada%2Fa-suenst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9694c03951602dd1216838de82dc1c2de54d2754/gcc%2Fada%2Fa-suenst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-suenst.adb?ref=9694c03951602dd1216838de82dc1c2de54d2754", "patch": "@@ -2,7 +2,7 @@\n --                                                                          --\n --                         GNAT RUN-TIME COMPONENTS                         --\n --                                                                          --\n---                 ADA.STRINGS.UTF_ENCODING.STRING_ENCODING                 --\n+--                     ADA.STRINGS.UTF_ENCODING.STRINGS                     --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n@@ -29,7 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-package body Ada.Strings.UTF_Encoding.String_Encoding is\n+package body Ada.Strings.UTF_Encoding.Strings is\n    use Interfaces;\n \n    ------------\n@@ -338,4 +338,4 @@ package body Ada.Strings.UTF_Encoding.String_Encoding is\n       return Result;\n    end Encode;\n \n-end Ada.Strings.UTF_Encoding.String_Encoding;\n+end Ada.Strings.UTF_Encoding.Strings;", "previous_filename": "gcc/ada/a-suesen.adb"}, {"sha": "1706cd665e68fdac7575a116bc654b27191012c0", "filename": "gcc/ada/a-suenst.ads", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9694c03951602dd1216838de82dc1c2de54d2754/gcc%2Fada%2Fa-suenst.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9694c03951602dd1216838de82dc1c2de54d2754/gcc%2Fada%2Fa-suenst.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-suenst.ads?ref=9694c03951602dd1216838de82dc1c2de54d2754", "patch": "@@ -2,7 +2,7 @@\n --                                                                          --\n --                         GNAT RUN-TIME COMPONENTS                         --\n --                                                                          --\n---                 ADA.STRINGS.UTF_ENCODING.STRING_ENCODING                 --\n+--                     ADA.STRINGS.UTF_ENCODING.STRINGS                 --\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n@@ -17,8 +17,8 @@\n --  and decoding String values using UTF encodings. Note: this package is\n --  consistent with Ada 95, and may be included in Ada 95 implementations.\n \n-package Ada.Strings.UTF_Encoding.String_Encoding is\n-   pragma Pure (String_Encoding);\n+package Ada.Strings.UTF_Encoding.Strings is\n+   pragma Pure (Strings);\n \n    --  The encoding routines take a String as input and encode the result\n    --  using the specified UTF encoding method. The result includes a BOM if\n@@ -62,4 +62,4 @@ package Ada.Strings.UTF_Encoding.String_Encoding is\n      (Item : UTF_16_Wide_String) return String;\n    --  The input is encoded in UTF-16 and returned as a String value\n \n-end Ada.Strings.UTF_Encoding.String_Encoding;\n+end Ada.Strings.UTF_Encoding.Strings;", "previous_filename": "gcc/ada/a-suesen.ads"}, {"sha": "be8677ae67e969d11735ddcf9a046edbc8de8ffd", "filename": "gcc/ada/a-suewst.adb", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9694c03951602dd1216838de82dc1c2de54d2754/gcc%2Fada%2Fa-suewst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9694c03951602dd1216838de82dc1c2de54d2754/gcc%2Fada%2Fa-suewst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-suewst.adb?ref=9694c03951602dd1216838de82dc1c2de54d2754", "patch": "@@ -2,7 +2,7 @@\n --                                                                          --\n --                         GNAT RUN-TIME COMPONENTS                         --\n --                                                                          --\n---               ADA.STRINGS.UTF_ENCODING.WIDE_STRING_ENCODING              --\n+--                   ADA.STRINGS.UTF_ENCODING.WIDE_STRINGS                  --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n@@ -29,7 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-package body Ada.Strings.UTF_Encoding.Wide_String_Encoding is\n+package body Ada.Strings.UTF_Encoding.Wide_Strings is\n    use Interfaces;\n \n    ------------\n@@ -367,4 +367,4 @@ package body Ada.Strings.UTF_Encoding.Wide_String_Encoding is\n       return Result;\n    end Encode;\n \n-end Ada.Strings.UTF_Encoding.Wide_String_Encoding;\n+end Ada.Strings.UTF_Encoding.Wide_Strings;", "previous_filename": "gcc/ada/a-suewse.adb"}, {"sha": "e0f8d4cf5edb49bec9c85c94dd5b5dc4bc03538a", "filename": "gcc/ada/a-suewst.ads", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9694c03951602dd1216838de82dc1c2de54d2754/gcc%2Fada%2Fa-suewst.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9694c03951602dd1216838de82dc1c2de54d2754/gcc%2Fada%2Fa-suewst.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-suewst.ads?ref=9694c03951602dd1216838de82dc1c2de54d2754", "patch": "@@ -2,7 +2,7 @@\n --                                                                          --\n --                         GNAT RUN-TIME COMPONENTS                         --\n --                                                                          --\n---               ADA.STRINGS.UTF_ENCODING.WIDE_STRING_ENCODING              --\n+--                   ADA.STRINGS.UTF_ENCODING.WIDE_STRINGS                  --\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n@@ -17,8 +17,8 @@\n --  and decoding Wide_String values using UTF encodings. Note: this package is\n --  consistent with Ada 95, and may be included in Ada 95 implementations.\n \n-package Ada.Strings.UTF_Encoding.Wide_String_Encoding is\n-   pragma Pure (Wide_String_Encoding);\n+package Ada.Strings.UTF_Encoding.Wide_Strings is\n+   pragma Pure (Wide_Strings);\n \n    --  The encoding routines take a Wide_String as input and encode the result\n    --  using the specified UTF encoding method. The result includes a BOM if\n@@ -64,4 +64,4 @@ package Ada.Strings.UTF_Encoding.Wide_String_Encoding is\n      (Item : UTF_16_Wide_String) return Wide_String;\n    --  The input is encoded in UTF-16 and returned as a Wide_String value\n \n-end Ada.Strings.UTF_Encoding.Wide_String_Encoding;\n+end Ada.Strings.UTF_Encoding.Wide_Strings;", "previous_filename": "gcc/ada/a-suewse.ads"}, {"sha": "0e5bba70a7cb696f443b526ee2cb4d9c4961f2fc", "filename": "gcc/ada/a-suezst.adb", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9694c03951602dd1216838de82dc1c2de54d2754/gcc%2Fada%2Fa-suezst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9694c03951602dd1216838de82dc1c2de54d2754/gcc%2Fada%2Fa-suezst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-suezst.adb?ref=9694c03951602dd1216838de82dc1c2de54d2754", "patch": "@@ -2,7 +2,7 @@\n --                                                                          --\n --                         GNAT RUN-TIME COMPONENTS                         --\n --                                                                          --\n---            ADA.STRINGS.UTF_ENCODING.WIDE_WIDE_STRING_ENCODING            --\n+--                ADA.STRINGS.UTF_ENCODING.WIDE_WIDE_STRINGS                --\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n@@ -29,7 +29,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-package body Ada.Strings.UTF_Encoding.Wide_Wide_String_Encoding is\n+package body Ada.Strings.UTF_Encoding.Wide_Wide_Strings is\n    use Interfaces;\n \n    ------------\n@@ -426,4 +426,4 @@ package body Ada.Strings.UTF_Encoding.Wide_Wide_String_Encoding is\n       return Result (1 .. Len);\n    end Encode;\n \n-end Ada.Strings.UTF_Encoding.Wide_Wide_String_Encoding;\n+end Ada.Strings.UTF_Encoding.Wide_Wide_Strings;", "previous_filename": "gcc/ada/a-suezse.adb"}, {"sha": "86d344d252d90ef323a82100e2d4bc4e6ccd6a5b", "filename": "gcc/ada/a-suezst.ads", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9694c03951602dd1216838de82dc1c2de54d2754/gcc%2Fada%2Fa-suezst.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9694c03951602dd1216838de82dc1c2de54d2754/gcc%2Fada%2Fa-suezst.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-suezst.ads?ref=9694c03951602dd1216838de82dc1c2de54d2754", "patch": "@@ -2,7 +2,7 @@\n --                                                                          --\n --                         GNAT RUN-TIME COMPONENTS                         --\n --                                                                          --\n---            ADA.STRINGS.UTF_ENCODING.WIDE_WIDE_STRING_ENCODING            --\n+--                ADA.STRINGS.UTF_ENCODING.WIDE_WIDE_STRINGS                --\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n@@ -18,8 +18,8 @@\n --  consistent with Ada 2005, and may be used in Ada 2005 mode, but cannot be\n --  used in Ada 95 mode, since Wide_Wide_Character is an Ada 2005 feature.\n \n-package Ada.Strings.UTF_Encoding.Wide_Wide_String_Encoding is\n-   pragma Pure (Wide_Wide_String_Encoding);\n+package Ada.Strings.UTF_Encoding.Wide_Wide_Strings is\n+   pragma Pure (Wide_Wide_Strings);\n \n    --  The encoding routines take a Wide_Wide_String as input and encode the\n    --  result using the specified UTF encoding method. The result includes a\n@@ -61,4 +61,4 @@ package Ada.Strings.UTF_Encoding.Wide_Wide_String_Encoding is\n      (Item : UTF_16_Wide_String) return Wide_Wide_String;\n    --  The input is encoded in UTF-16 and returned as a Wide_String value\n \n-end Ada.Strings.UTF_Encoding.Wide_Wide_String_Encoding;\n+end Ada.Strings.UTF_Encoding.Wide_Wide_Strings;", "previous_filename": "gcc/ada/a-suezse.ads"}, {"sha": "721deca032b8eac1139863f6420b1460de540578", "filename": "gcc/ada/a-textio.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9694c03951602dd1216838de82dc1c2de54d2754/gcc%2Fada%2Fa-textio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9694c03951602dd1216838de82dc1c2de54d2754/gcc%2Fada%2Fa-textio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-textio.adb?ref=9694c03951602dd1216838de82dc1c2de54d2754", "patch": "@@ -684,10 +684,18 @@ package body Ada.Text_IO is\n       Get_Immediate (Current_In, Item, Available);\n    end Get_Immediate;\n \n+   --------------\n+   -- Get_Line --\n+   --------------\n+\n    procedure Get_Line\n      (File : File_Type;\n       Item : out String;\n       Last : out Natural) is separate;\n+   --  The implementation of Ada.Text_IO.Get_Line is split into a subunit so\n+   --  that different implementations can be used on different systems. In\n+   --  particular the standard implementation uses low level stuff that is\n+   --  not appropriate for the JVM and .NET implementations.\n \n    procedure Get_Line\n      (Item : out String;"}, {"sha": "a28c5ab1be0b67d5ddf934f52e0e31732f639f80", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 24, "deletions": 15, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9694c03951602dd1216838de82dc1c2de54d2754/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9694c03951602dd1216838de82dc1c2de54d2754/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=9694c03951602dd1216838de82dc1c2de54d2754", "patch": "@@ -3151,8 +3151,11 @@ package body Exp_Ch5 is\n       else\n          --  We're about to drop Return_Object_Declarations on the floor, so\n          --  we need to insert it, in case it got expanded into useful code.\n+         --  Remove side effects from expression, which may be duplicated in\n+         --  subsequent checks (see Expand_Simple_Function_Return).\n \n          Insert_List_Before (N, Return_Object_Declarations (N));\n+         Remove_Side_Effects (Exp);\n \n          --  Build simple_return_statement that returns the expression directly\n \n@@ -4248,29 +4251,35 @@ package body Exp_Ch5 is\n          end;\n \n       --  AI05-0073: If function has a controlling access result, check that\n-      --  the tag of the return value matches the designated type.\n+      --  the tag of the return value, if it is not null, matches designated\n+      --  type of return type.\n \n       --  The \"or else True\" needs commenting here ???\n \n       elsif Ekind (R_Type) = E_Anonymous_Access_Type\n         and then Has_Controlling_Result (Scope_Id)\n-        and then (Ada_Version >= Ada_12 or else True)\n       then\n-         Insert_Action (Exp,\n+         Insert_Action (N,\n            Make_Raise_Constraint_Error (Loc,\n              Condition =>\n-               Make_Op_Ne (Loc,\n-                 Left_Opnd =>\n-                   Make_Selected_Component (Loc,\n-                     Prefix => Duplicate_Subexpr (Exp),\n-                     Selector_Name =>\n-                       Make_Identifier (Loc, Chars => Name_uTag)),\n-                 Right_Opnd =>\n-                   Make_Attribute_Reference (Loc,\n-                     Prefix =>\n-                       New_Occurrence_Of (Designated_Type (R_Type), Loc),\n-                     Attribute_Name => Name_Tag)),\n-           Reason => CE_Tag_Check_Failed));\n+               Make_And_Then (Loc,\n+                 Left_Opnd  =>\n+                   Make_Op_Ne (Loc,\n+                     Left_Opnd  => Exp,\n+                     Right_Opnd => Make_Null (Loc)),\n+                 Right_Opnd => Make_Op_Ne (Loc,\n+                   Left_Opnd  =>\n+                     Make_Selected_Component (Loc,\n+                       Prefix        => Duplicate_Subexpr (Exp),\n+                       Selector_Name =>\n+                         Make_Identifier (Loc, Chars => Name_uTag)),\n+                   Right_Opnd =>\n+                     Make_Attribute_Reference (Loc,\n+                       Prefix         =>\n+                         New_Occurrence_Of (Designated_Type (R_Type), Loc),\n+                       Attribute_Name => Name_Tag))),\n+             Reason    => CE_Tag_Check_Failed),\n+             Suppress  => All_Checks);\n       end if;\n \n       --  If we are returning an object that may not be bit-aligned, then copy"}, {"sha": "098622eeaf91642b8abbd1b73d4bc070f10ab2b4", "filename": "gcc/ada/impunit.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9694c03951602dd1216838de82dc1c2de54d2754/gcc%2Fada%2Fimpunit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9694c03951602dd1216838de82dc1c2de54d2754/gcc%2Fada%2Fimpunit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fimpunit.adb?ref=9694c03951602dd1216838de82dc1c2de54d2754", "patch": "@@ -180,8 +180,8 @@ package body Impunit is\n      \"a-wichha\",    -- Ada.Wide_Characters.Handling\n      \"a-stuten\",    -- Ada.Strings.UTF_Encoding\n      \"a-suenco\",    -- Ada.Strings.UTF_Encoding.Conversions\n-     \"a-suesen\",    -- Ada.Strings.UTF_Encoding.String_Encoding\n-     \"a-suewse\",    -- Ada.Strings.UTF_Encoding.Wide_String_Encoding\n+     \"a-suenst\",    -- Ada.Strings.UTF_Encoding.Strings\n+     \"a-suewst\",    -- Ada.Strings.UTF_Encoding.Wide_Strings\n \n    ---------------------------\n    -- GNAT Special IO Units --\n@@ -474,7 +474,7 @@ package body Impunit is\n       --  Note: strictly the following should be Ada 2012 units, but it seems\n       --  harmless (and useful) to make then available in Ada 2005 mode.\n \n-     \"a-suezse\",    -- Ada.Strings.UTF_Encoding.Wide_Wide_String_Encoding\n+     \"a-suezst\",    -- Ada.Strings.UTF_Encoding.Wide_Wide_Strings\n \n    ---------------------------\n    -- GNAT Special IO Units --"}, {"sha": "ca61bd120a635187d9031d52da7de886200c61a4", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9694c03951602dd1216838de82dc1c2de54d2754/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9694c03951602dd1216838de82dc1c2de54d2754/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=9694c03951602dd1216838de82dc1c2de54d2754", "patch": "@@ -265,7 +265,6 @@ package Rtsfind is\n       System_Machine_Code,\n       System_Mantissa,\n       System_Memcop,\n-      System_Multiprocessors,\n       System_Pack_03,\n       System_Pack_05,\n       System_Pack_06,"}, {"sha": "f5dcd5c4713a707f6fb81661040c6aa5955620dd", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 34, "deletions": 13, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9694c03951602dd1216838de82dc1c2de54d2754/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9694c03951602dd1216838de82dc1c2de54d2754/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=9694c03951602dd1216838de82dc1c2de54d2754", "patch": "@@ -495,8 +495,16 @@ package body Sem_Ch6 is\n             --  In GNAT mode, this is just a warning, to allow it to be\n             --  evilly turned off. Otherwise it is a real error.\n \n+            --  In a generic context, simplify the warning because it makes\n+            --  no sense to discuss pass-by-reference or copy.\n+\n             elsif Warn_On_Ada_2005_Compatibility or GNAT_Mode then\n-               if Is_Immutably_Limited_Type (R_Type) then\n+               if Inside_A_Generic then\n+                  Error_Msg_N\n+                    (\"return of limited object not permitted in Ada2005 \" &\n+                       \"(RM-2005 6.5(5.5/2))?\", Expr);\n+\n+               elsif Is_Immutably_Limited_Type (R_Type) then\n                   Error_Msg_N\n                     (\"return by reference not permitted in Ada 2005 \" &\n                      \"(RM-2005 6.5(5.5/2))?\", Expr);\n@@ -512,9 +520,11 @@ package body Sem_Ch6 is\n                return; --  skip continuation messages below\n             end if;\n \n-            Error_Msg_N\n-              (\"\\consider switching to return of access type\", Expr);\n-            Explain_Limited_Type (R_Type, Expr);\n+            if not Inside_A_Generic then\n+               Error_Msg_N\n+                 (\"\\consider switching to return of access type\", Expr);\n+               Explain_Limited_Type (R_Type, Expr);\n+            end if;\n          end if;\n       end Check_Limited_Return;\n \n@@ -764,16 +774,25 @@ package body Sem_Ch6 is\n            and then Object_Access_Level (Expr) >\n                       Subprogram_Access_Level (Scope_Id)\n          then\n-            Rewrite (N,\n-              Make_Raise_Program_Error (Loc,\n-                Reason => PE_Accessibility_Check_Failed));\n-            Analyze (N);\n \n-            Error_Msg_N\n-              (\"cannot return a local value by reference?\", N);\n-            Error_Msg_NE\n-              (\"\\& will be raised at run time?\",\n-               N, Standard_Program_Error);\n+            --  Suppress the message in a generic, where the rewriting\n+            --  is irrelevant.\n+\n+            if Inside_A_Generic then\n+               null;\n+\n+            else\n+               Rewrite (N,\n+                 Make_Raise_Program_Error (Loc,\n+                   Reason => PE_Accessibility_Check_Failed));\n+               Analyze (N);\n+\n+               Error_Msg_N\n+                 (\"cannot return a local value by reference?\", N);\n+               Error_Msg_NE\n+                 (\"\\& will be raised at run time?\",\n+                   N, Standard_Program_Error);\n+            end if;\n          end if;\n \n          if Known_Null (Expr)\n@@ -4255,9 +4274,11 @@ package body Sem_Ch6 is\n          declare\n             Typ  : constant Entity_Id := Etype (Designator);\n             Utyp : constant Entity_Id := Underlying_Type (Typ);\n+\n          begin\n             if Is_Immutably_Limited_Type (Typ) then\n                Set_Returns_By_Ref (Designator);\n+\n             elsif Present (Utyp) and then CW_Or_Has_Controlled_Part (Utyp) then\n                Set_Returns_By_Ref (Designator);\n             end if;"}]}