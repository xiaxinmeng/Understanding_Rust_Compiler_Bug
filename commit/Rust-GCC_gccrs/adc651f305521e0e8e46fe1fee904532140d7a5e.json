{"sha": "adc651f305521e0e8e46fe1fee904532140d7a5e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRjNjUxZjMwNTUyMWUwZThlNDZmZTFmZWU5MDQ1MzIxNDBkN2E1ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-08-02T21:08:57Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-08-02T21:08:57Z"}, "message": "re PR c++/49803 ([C++0x] erroneous variant-member initialization in a union containing an anonymous struct)\n\n\tPR c++/49803\n\t* init.c (sort_mem_initializers): Initialize uses_unions_p here.\n\t(build_field_list): Not here.\n\nFrom-SVN: r177213", "tree": {"sha": "85932c48fd6620e32bfa62016f01cc224040919c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85932c48fd6620e32bfa62016f01cc224040919c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/adc651f305521e0e8e46fe1fee904532140d7a5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adc651f305521e0e8e46fe1fee904532140d7a5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adc651f305521e0e8e46fe1fee904532140d7a5e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adc651f305521e0e8e46fe1fee904532140d7a5e/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9f8139900d3b6be84b303ad505cf5899e95d8ea2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f8139900d3b6be84b303ad505cf5899e95d8ea2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f8139900d3b6be84b303ad505cf5899e95d8ea2"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "dc138a187b2a465a445ff26c51e82716bf914c5e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc651f305521e0e8e46fe1fee904532140d7a5e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc651f305521e0e8e46fe1fee904532140d7a5e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=adc651f305521e0e8e46fe1fee904532140d7a5e", "patch": "@@ -1,5 +1,9 @@\n 2011-08-02  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/49803\n+\t* init.c (sort_mem_initializers): Initialize uses_unions_p here.\n+\t(build_field_list): Not here.\n+\n \tPR c++/49834\n \t* parser.c (build_range_temp): Split out from...\n \t(cp_convert_range_for): ...here."}, {"sha": "31171cfa68653de8a7b4f0e687470c48688e1a6d", "filename": "gcc/cp/init.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc651f305521e0e8e46fe1fee904532140d7a5e/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc651f305521e0e8e46fe1fee904532140d7a5e/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=adc651f305521e0e8e46fe1fee904532140d7a5e", "patch": "@@ -655,8 +655,6 @@ build_field_list (tree t, tree list, int *uses_unions_p)\n {\n   tree fields;\n \n-  *uses_unions_p = 0;\n-\n   /* Note whether or not T is a union.  */\n   if (TREE_CODE (t) == UNION_TYPE)\n     *uses_unions_p = 1;\n@@ -710,7 +708,7 @@ sort_mem_initializers (tree t, tree mem_inits)\n   tree next_subobject;\n   VEC(tree,gc) *vbases;\n   int i;\n-  int uses_unions_p;\n+  int uses_unions_p = 0;\n \n   /* Build up a list of initializations.  The TREE_PURPOSE of entry\n      will be the subobject (a FIELD_DECL or BINFO) to initialize.  The"}, {"sha": "6b471694d3ce82abf3187abb53b00561d4f54700", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc651f305521e0e8e46fe1fee904532140d7a5e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc651f305521e0e8e46fe1fee904532140d7a5e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=adc651f305521e0e8e46fe1fee904532140d7a5e", "patch": "@@ -1,3 +1,8 @@\n+2011-08-02  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/49803\n+\t* g++.dg/cpp0x/union5.C: New.\n+\n 2011-08-02  Daniel Kraft  <d@domob.eu>\n \n \tPR fortran/49885"}, {"sha": "423b3482323fdc84a52e38aad3ae4fe648d32b81", "filename": "gcc/testsuite/g++.dg/cpp0x/union5.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adc651f305521e0e8e46fe1fee904532140d7a5e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Funion5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adc651f305521e0e8e46fe1fee904532140d7a5e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Funion5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Funion5.C?ref=adc651f305521e0e8e46fe1fee904532140d7a5e", "patch": "@@ -0,0 +1,23 @@\n+// PR c++/49803\n+// { dg-options -std=c++0x }\n+\n+struct X\n+{\n+  X() = delete;\n+};\n+\n+union Y\n+{\n+  // N3291=11-0061 12.6.2/8 says no initialization of\n+  // of other variant members (i.e. m_x) should\n+  // be performed.\n+  Y() : m_char1{ }\n+  { }\n+\n+  struct\n+  {\n+    char m_char1;\n+  };\n+\n+  X    m_x;\n+};"}]}