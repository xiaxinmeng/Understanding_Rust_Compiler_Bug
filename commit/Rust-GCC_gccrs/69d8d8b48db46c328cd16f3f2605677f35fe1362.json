{"sha": "69d8d8b48db46c328cd16f3f2605677f35fe1362", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjlkOGQ4YjQ4ZGI0NmMzMjhjZDE2ZjNmMjYwNTY3N2YzNWZlMTM2Mg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-16T12:43:21Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-16T12:43:21Z"}, "message": "[multiple changes]\n\n2015-10-16  Arnaud Charlet  <charlet@adacore.com>\n\n\t* s-osprim-mingw.adb, s-osprim-x32.adb, s-taprop-mingw.adb,\n\ts-taprop-posix.adb (Monotonic_Clock): Removed, not used.\n\tRemove remaining references to OS_Primitives.Monotonic_Clock.\n\tKeep it only on windows which is a special case.\n\n2015-10-16  Javier Miranda  <miranda@adacore.com>\n\n\t* a-textio.adb (Get_Line): Fix documentation.\n\t* einfo.ads (Interface_Name): Fix documentation.\n\t* exp_aggr.adb (Backend_Processing_Possible): Fix documentation.\n\t* exp_ch4.adb (Expand_N_In): Fix documentation.\n\nFrom-SVN: r228884", "tree": {"sha": "685b5562572d8060dafeaac4db705e55afc8540e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/685b5562572d8060dafeaac4db705e55afc8540e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69d8d8b48db46c328cd16f3f2605677f35fe1362", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69d8d8b48db46c328cd16f3f2605677f35fe1362", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69d8d8b48db46c328cd16f3f2605677f35fe1362", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69d8d8b48db46c328cd16f3f2605677f35fe1362/comments", "author": null, "committer": null, "parents": [{"sha": "4ef36ac7d0cfd23f8f72744796d2d118fd7f1c7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ef36ac7d0cfd23f8f72744796d2d118fd7f1c7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ef36ac7d0cfd23f8f72744796d2d118fd7f1c7d"}], "stats": {"total": 100, "additions": 46, "deletions": 54}, "files": [{"sha": "7b590421da1dcfc81d96ca864cecad4d7bfa0acb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d8d8b48db46c328cd16f3f2605677f35fe1362/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d8d8b48db46c328cd16f3f2605677f35fe1362/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=69d8d8b48db46c328cd16f3f2605677f35fe1362", "patch": "@@ -1,3 +1,17 @@\n+2015-10-16  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* s-osprim-mingw.adb, s-osprim-x32.adb, s-taprop-mingw.adb,\n+\ts-taprop-posix.adb (Monotonic_Clock): Removed, not used.\n+\tRemove remaining references to OS_Primitives.Monotonic_Clock.\n+\tKeep it only on windows which is a special case.\n+\n+2015-10-16  Javier Miranda  <miranda@adacore.com>\n+\n+\t* a-textio.adb (Get_Line): Fix documentation.\n+\t* einfo.ads (Interface_Name): Fix documentation.\n+\t* exp_aggr.adb (Backend_Processing_Possible): Fix documentation.\n+\t* exp_ch4.adb (Expand_N_In): Fix documentation.\n+\n 2015-10-16  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* inline.adb (Subp_Info): Remove Listed component."}, {"sha": "dc0b45358fe230ccb39f1113966397680ab49aa1", "filename": "gcc/ada/a-textio.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d8d8b48db46c328cd16f3f2605677f35fe1362/gcc%2Fada%2Fa-textio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d8d8b48db46c328cd16f3f2605677f35fe1362/gcc%2Fada%2Fa-textio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-textio.adb?ref=69d8d8b48db46c328cd16f3f2605677f35fe1362", "patch": "@@ -693,9 +693,7 @@ package body Ada.Text_IO is\n       Item : out String;\n       Last : out Natural) is separate;\n    --  The implementation of Ada.Text_IO.Get_Line is split into a subunit so\n-   --  that different implementations can be used on different systems. In\n-   --  particular the standard implementation uses low level stuff that is\n-   --  not appropriate for the VMs.\n+   --  that different implementations can be used on different systems.\n \n    procedure Get_Line\n      (Item : out String;"}, {"sha": "a31951f429df4214932402a1667544f791c2bee6", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 9, "deletions": 23, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d8d8b48db46c328cd16f3f2605677f35fe1362/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d8d8b48db46c328cd16f3f2605677f35fe1362/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=69d8d8b48db46c328cd16f3f2605677f35fe1362", "patch": "@@ -2122,25 +2122,14 @@ package Einfo is\n \n --    Interface_Name (Node21)\n --       Defined in constants, variables, exceptions, functions, procedures,\n---       packages, components (JGNAT only), discriminants (JGNAT only), and\n---       access to subprograms (JGNAT only). Set to Empty unless an export,\n---       import, or interface name pragma has explicitly specified an external\n---       name, in which case it references an N_String_Literal node for the\n---       specified external name. Note that if this field is Empty, and\n---       Is_Imported or Is_Exported is set, then the default interface name\n---       is the name of the entity, cased in a manner that is appropriate to\n---       the system in use. Note that Interface_Name is ignored if an address\n---       clause is present (since it is meaningless in this case).\n---\n---       An additional special case usage of this field is in JGNAT for\n---       E_Component and E_Discriminant. JGNAT allows these entities to be\n---       imported by specifying pragma Import within a component's containing\n---       record definition. This supports interfacing to object fields defined\n---       within Java classes, and such pragmas are generated by the jvm2ada\n---       binding generator tool whenever it processes classes with public\n---       object fields. A pragma Import for a component can define the\n---       External_Name of the imported Java field (which is generally needed,\n---       because Java names are case sensitive).\n+--       and packages. Set to Empty unless an export, import, or interface name\n+--       pragma has explicitly specified an external name, in which case it\n+--       references an N_String_Literal node for the specified external name.\n+--       Note that if this field is Empty, and Is_Imported or Is_Exported is\n+--       set, then the default interface name is the name of the entity, cased\n+--       in a manner that is appropriate to the system in use. Note that\n+--       Interface_Name is ignored if an address clause is present (since it\n+--       is meaningless in this case).\n \n --    Interfaces (Elist25)\n --       Defined in record types and subtypes. List of abstract interfaces\n@@ -3070,7 +3059,7 @@ package Einfo is\n --       vtable (i.e. the one to be extended by derivation).\n \n --    Is_Tagged_Type (Flag55)\n---       Defined in all entities. Set for an entity that is a tagged type\n+--       Defined in all entities. Set for an entity that is a tagged type.\n \n --    Is_Task_Interface (synthesized)\n --       Defined in types that are interfaces. True if interface is declared as\n@@ -5513,7 +5502,6 @@ package Einfo is\n    --  E_Access_Subprogram_Type\n    --    Equivalent_Type                     (Node18)   (remote types only)\n    --    Directly_Designated_Type            (Node20)\n-   --    Interface_Name                      (Node21)   (JGNAT usage only)\n    --    Needs_No_Actuals                    (Flag22)\n    --    Original_Access_Type                (Node28)\n    --    Can_Use_Internal_Rep                (Flag229)\n@@ -5619,7 +5607,6 @@ package Einfo is\n    --    Prival                              (Node17)\n    --    Renamed_Object                      (Node18)   (always Empty)\n    --    Discriminant_Checking_Func          (Node20)\n-   --    Interface_Name                      (Node21)   (JGNAT usage only)\n    --    Original_Record_Component           (Node22)\n    --    DT_Offset_To_Top_Func               (Node25)\n    --    Related_Type                        (Node27)\n@@ -5712,7 +5699,6 @@ package Einfo is\n    --    Renamed_Object                      (Node18)   (always Empty)\n    --    Corresponding_Discriminant          (Node19)\n    --    Discriminant_Default_Value          (Node20)\n-   --    Interface_Name                      (Node21)   (JGNAT usage only)\n    --    Original_Record_Component           (Node22)\n    --    CR_Discriminant                     (Node23)\n    --    Is_Return_Object                    (Flag209)"}, {"sha": "cfb3b4590555e17608b7cb9a43008a7bd36dfada", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d8d8b48db46c328cd16f3f2605677f35fe1362/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d8d8b48db46c328cd16f3f2605677f35fe1362/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=69d8d8b48db46c328cd16f3f2605677f35fe1362", "patch": "@@ -536,8 +536,6 @@ package body Exp_Aggr is\n \n    --   10. No controlled actions need to be generated for components\n \n-   --   11. For a VM back end, the array should have no aliased components\n-\n    function Backend_Processing_Possible (N : Node_Id) return Boolean is\n       Typ : constant Entity_Id := Etype (N);\n       --  Typ is the correct constrained array subtype of the aggregate\n@@ -3657,12 +3655,6 @@ package body Exp_Aggr is\n          --  present we can proceed since the bounds can be obtained from the\n          --  aggregate.\n \n-         --  Note: This case is required in VM platforms since their backends\n-         --  normalize array indexes in the range 0 .. N-1. Hence, if we do\n-         --  not flat an array whose bounds cannot be obtained from the type\n-         --  of the index the backend has no way to properly generate the code.\n-         --  See ACATS c460010 for an example.\n-\n          if Hiv < Lov\n            or else (not Compile_Time_Known_Value (Blo) and then Others_Present)\n          then"}, {"sha": "8cfcb66724f846db12a76ae6c93f55b7821d84ef", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d8d8b48db46c328cd16f3f2605677f35fe1362/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d8d8b48db46c328cd16f3f2605677f35fe1362/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=69d8d8b48db46c328cd16f3f2605677f35fe1362", "patch": "@@ -5806,9 +5806,7 @@ package body Exp_Ch4 is\n             if Is_Tagged_Type (Typ) then\n \n                --  No expansion will be performed for VM targets, as the VM\n-               --  back-ends will handle the membership tests directly (tags\n-               --  are not explicitly represented in VM objects, so the\n-               --  normal tagged membership expansion is not what we want).\n+               --  back-ends will handle the membership tests directly.\n \n                if Tagged_Type_Expansion then\n                   Tagged_Membership (N, SCIL_Node, New_N);\n@@ -6067,9 +6065,7 @@ package body Exp_Ch4 is\n \n                         --  No expansion will be performed for VM targets, as\n                         --  the VM back-ends will handle the membership tests\n-                        --  directly (tags are not explicitly represented in\n-                        --  objects, so the normal tagged membership\n-                        --  expansion is not what we want).\n+                        --  directly.\n \n                         if Tagged_Type_Expansion then\n "}, {"sha": "adda5146bf8f336e54427fac7ccdfb283dbc1b9c", "filename": "gcc/ada/s-osprim-mingw.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d8d8b48db46c328cd16f3f2605677f35fe1362/gcc%2Fada%2Fs-osprim-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d8d8b48db46c328cd16f3f2605677f35fe1362/gcc%2Fada%2Fs-osprim-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-mingw.adb?ref=69d8d8b48db46c328cd16f3f2605677f35fe1362", "patch": "@@ -90,6 +90,14 @@ package body System.OS_Primitives is\n    Signature : Signature_Type := 0;\n    pragma Atomic (Signature);\n \n+   function Monotonic_Clock return Duration;\n+   pragma Export (Ada, Monotonic_Clock, \"__gnat_monotonic_clock\");\n+   --  Return \"absolute\" time, represented as an offset relative to \"the Unix\n+   --  Epoch\", which is Jan 1, 1970 00:00:00 UTC. This clock implementation is\n+   --  immune to the system's clock changes.\n+   --  Export this function so that it can be imported from s-taprop-mingw.adb\n+   --  without changing the shared spec (s-osprim.ads).\n+\n    procedure Get_Base_Time (Data : in out Clock_Data);\n    --  Retrieve the base time and base ticks. These values will be used by\n    --  clock to compute the current time by adding to it a fraction of the"}, {"sha": "b457f5b3201132e6dc931649b1a1e7cf36826600", "filename": "gcc/ada/s-osprim-x32.adb", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d8d8b48db46c328cd16f3f2605677f35fe1362/gcc%2Fada%2Fs-osprim-x32.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d8d8b48db46c328cd16f3f2605677f35fe1362/gcc%2Fada%2Fs-osprim-x32.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osprim-x32.adb?ref=69d8d8b48db46c328cd16f3f2605677f35fe1362", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---             Copyright (C) 2013-2014, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2013-2015, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -88,12 +88,6 @@ package body System.OS_Primitives is\n       return Duration (sec) + Duration (usec) / Micro;\n    end Clock;\n \n-   ---------------------\n-   -- Monotonic_Clock --\n-   ---------------------\n-\n-   function Monotonic_Clock return Duration renames Clock;\n-\n    -----------------\n    -- To_Timespec --\n    -----------------"}, {"sha": "c945e1dfcc7ab424d6f9e9b463943e7055535da0", "filename": "gcc/ada/s-taprop-mingw.adb", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d8d8b48db46c328cd16f3f2605677f35fe1362/gcc%2Fada%2Fs-taprop-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d8d8b48db46c328cd16f3f2605677f35fe1362/gcc%2Fada%2Fs-taprop-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-mingw.adb?ref=69d8d8b48db46c328cd16f3f2605677f35fe1362", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1068,8 +1068,12 @@ package body System.Task_Primitives.Operations is\n    -- Monotonic_Clock --\n    ---------------------\n \n-   function Monotonic_Clock return Duration\n-     renames System.OS_Primitives.Monotonic_Clock;\n+   function Monotonic_Clock return Duration is\n+      function Internal_Clock return Duration;\n+      pragma Import (Ada, Internal_Clock, \"__gnat_monotonic_clock\");\n+   begin\n+      return Internal_Clock;\n+   end Monotonic_Clock;\n \n    -------------------\n    -- RT_Resolution --"}, {"sha": "992f3e7b0029b40d3e8bff72eb2908f84a177fd9", "filename": "gcc/ada/s-taprop-posix.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69d8d8b48db46c328cd16f3f2605677f35fe1362/gcc%2Fada%2Fs-taprop-posix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69d8d8b48db46c328cd16f3f2605677f35fe1362/gcc%2Fada%2Fs-taprop-posix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-taprop-posix.adb?ref=69d8d8b48db46c328cd16f3f2605677f35fe1362", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -293,10 +293,10 @@ package body System.Task_Primitives.Operations is\n \n       else\n          declare\n-            Cal_Check_Time : constant Duration :=\n-                               OS_Primitives.Monotonic_Clock;\n+            Cal_Check_Time : constant Duration := OS_Primitives.Clock;\n             RT_Time        : constant Duration :=\n-                               Time + Check_Time - Cal_Check_Time;\n+              Time + Check_Time - Cal_Check_Time;\n+\n          begin\n             Abs_Time :=\n               Duration'Min (Check_Time + Max_Sensible_Delay, RT_Time);"}]}