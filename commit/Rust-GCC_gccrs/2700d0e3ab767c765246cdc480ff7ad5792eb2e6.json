{"sha": "2700d0e3ab767c765246cdc480ff7ad5792eb2e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjcwMGQwZTNhYjc2N2M3NjUyNDZjZGM0ODBmZjdhZDU3OTJlYjJlNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-12-27T15:17:19Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-12-27T15:17:19Z"}, "message": "gfortran.h (gfc_error): Rename overload with OPT argument to...\n\n\t* gfortran.h (gfc_error): Rename overload with OPT argument to...\n\t(gfc_error_opt): ... this.\n\t* error.c (gfc_error): Rename overloads with OPT argument to...\n\t(gfc_error_opt): ... this.  Adjust callers.\n\t(gfc_notify_std, gfc_error): Adjust callers.\n\t* resolve.c (resolve_structure_cons, resolve_global_procedure): Use\n\tgfc_error_opt instead of gfc_error.\n\t* interface.c (argument_rank_mismatch, compare_parameter,\n\tgfc_check_typebound_override): Likewise.  Fix up formatting.\n\nFrom-SVN: r243941", "tree": {"sha": "adf0e602fa885ee7d93a0b0e4d2f89ece747f58e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/adf0e602fa885ee7d93a0b0e4d2f89ece747f58e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2700d0e3ab767c765246cdc480ff7ad5792eb2e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2700d0e3ab767c765246cdc480ff7ad5792eb2e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2700d0e3ab767c765246cdc480ff7ad5792eb2e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2700d0e3ab767c765246cdc480ff7ad5792eb2e6/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d90866773eab1eb0865af8a00f15651979b1a08f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d90866773eab1eb0865af8a00f15651979b1a08f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d90866773eab1eb0865af8a00f15651979b1a08f"}], "stats": {"total": 90, "additions": 47, "deletions": 43}, "files": [{"sha": "ce640321da0153bc95043efb6d684e3425691641", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2700d0e3ab767c765246cdc480ff7ad5792eb2e6/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2700d0e3ab767c765246cdc480ff7ad5792eb2e6/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2700d0e3ab767c765246cdc480ff7ad5792eb2e6", "patch": "@@ -1,3 +1,15 @@\n+2016-12-27  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gfortran.h (gfc_error): Rename overload with OPT argument to...\n+\t(gfc_error_opt): ... this.\n+\t* error.c (gfc_error): Rename overloads with OPT argument to...\n+\t(gfc_error_opt): ... this.  Adjust callers.\n+\t(gfc_notify_std, gfc_error): Adjust callers.\n+\t* resolve.c (resolve_structure_cons, resolve_global_procedure): Use\n+\tgfc_error_opt instead of gfc_error.\n+\t* interface.c (argument_rank_mismatch, compare_parameter,\n+\tgfc_check_typebound_override): Likewise.  Fix up formatting.\n+\n 2016-12-23  Andre Vehreschild  <vehre@gcc.gnu.org>\n \n \t* trans-expr.c (trans_class_assignment): Allocate memory of _vptr->size"}, {"sha": "801939c3430d57ea887b37bf058bb431ed0d0297", "filename": "gcc/fortran/error.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2700d0e3ab767c765246cdc480ff7ad5792eb2e6/gcc%2Ffortran%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2700d0e3ab767c765246cdc480ff7ad5792eb2e6/gcc%2Ffortran%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ferror.c?ref=2700d0e3ab767c765246cdc480ff7ad5792eb2e6", "patch": "@@ -67,7 +67,7 @@ gfc_push_suppress_errors (void)\n }\n \n static void\n-gfc_error (int opt, const char *gmsgid, va_list ap)  ATTRIBUTE_GCC_GFC(2,0);\n+gfc_error_opt (int opt, const char *gmsgid, va_list ap)  ATTRIBUTE_GCC_GFC(2,0);\n \n static bool\n gfc_warning (int opt, const char *gmsgid, va_list ap) ATTRIBUTE_GCC_GFC(2,0);\n@@ -902,7 +902,7 @@ gfc_notify_std (int std, const char *gmsgid, ...)\n   if (warning)\n     gfc_warning (0, buffer, argp);\n   else\n-    gfc_error (0, buffer, argp);\n+    gfc_error_opt (0, buffer, argp);\n   va_end (argp);\n \n   return (warning && !warnings_are_errors) ? true : false;\n@@ -1252,7 +1252,7 @@ gfc_warning_check (void)\n /* Issue an error.  */\n \n static void\n-gfc_error (int opt, const char *gmsgid, va_list ap)\n+gfc_error_opt (int opt, const char *gmsgid, va_list ap)\n {\n   va_list argp;\n   va_copy (argp, ap);\n@@ -1308,11 +1308,11 @@ gfc_error (int opt, const char *gmsgid, va_list ap)\n \n \n void\n-gfc_error (int opt, const char *gmsgid, ...)\n+gfc_error_opt (int opt, const char *gmsgid, ...)\n {\n   va_list argp;\n   va_start (argp, gmsgid);\n-  gfc_error (opt, gmsgid, argp);\n+  gfc_error_opt (opt, gmsgid, argp);\n   va_end (argp);\n }\n \n@@ -1322,7 +1322,7 @@ gfc_error (const char *gmsgid, ...)\n {\n   va_list argp;\n   va_start (argp, gmsgid);\n-  gfc_error (0, gmsgid, argp);\n+  gfc_error_opt (0, gmsgid, argp);\n   va_end (argp);\n }\n "}, {"sha": "799c2ac31051f3484804369501418ef012e2a2e0", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2700d0e3ab767c765246cdc480ff7ad5792eb2e6/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2700d0e3ab767c765246cdc480ff7ad5792eb2e6/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=2700d0e3ab767c765246cdc480ff7ad5792eb2e6", "patch": "@@ -2793,7 +2793,7 @@ bool gfc_warning_now_at (location_t loc, int opt, const char *gmsgid, ...)\n void gfc_clear_warning (void);\n void gfc_warning_check (void);\n \n-void gfc_error (int opt, const char *, ...) ATTRIBUTE_GCC_GFC(2,3);\n+void gfc_error_opt (int opt, const char *, ...) ATTRIBUTE_GCC_GFC(2,3);\n void gfc_error (const char *, ...) ATTRIBUTE_GCC_GFC(1,2);\n void gfc_error_now (const char *, ...) ATTRIBUTE_GCC_GFC(1,2);\n void gfc_fatal_error (const char *, ...) ATTRIBUTE_NORETURN ATTRIBUTE_GCC_GFC(1,2);"}, {"sha": "465d667d844249d5d8e0cd911d66e41781cbea27", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 21, "deletions": 29, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2700d0e3ab767c765246cdc480ff7ad5792eb2e6/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2700d0e3ab767c765246cdc480ff7ad5792eb2e6/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=2700d0e3ab767c765246cdc480ff7ad5792eb2e6", "patch": "@@ -2125,25 +2125,17 @@ argument_rank_mismatch (const char *name, locus *where,\n \n   /* TS 29113, C407b.  */\n   if (rank2 == -1)\n-    {\n-      gfc_error (\"The assumed-rank array at %L requires that the dummy argument\"\n-\t\t \" %qs has assumed-rank\", where, name);\n-    }\n+    gfc_error (\"The assumed-rank array at %L requires that the dummy argument\"\n+\t       \" %qs has assumed-rank\", where, name);\n   else if (rank1 == 0)\n-    {\n-      gfc_error (OPT_Wargument_mismatch, \"Rank mismatch in argument %qs at %L \"\n-\t\t \"(scalar and rank-%d)\", name, where, rank2);\n-    }\n+    gfc_error_opt (OPT_Wargument_mismatch, \"Rank mismatch in argument %qs \"\n+\t\t   \"at %L (scalar and rank-%d)\", name, where, rank2);\n   else if (rank2 == 0)\n-    {\n-      gfc_error (OPT_Wargument_mismatch, \"Rank mismatch in argument %qs at %L \"\n-\t\t \"(rank-%d and scalar)\", name, where, rank1);\n-    }\n+    gfc_error_opt (OPT_Wargument_mismatch, \"Rank mismatch in argument %qs \"\n+\t\t   \"at %L (rank-%d and scalar)\", name, where, rank1);\n   else\n-    {\n-      gfc_error (OPT_Wargument_mismatch, \"Rank mismatch in argument %qs at %L \"\n-\t\t \"(rank-%d and rank-%d)\", name, where, rank1, rank2);\n-    }\n+    gfc_error_opt (OPT_Wargument_mismatch, \"Rank mismatch in argument %qs \"\n+\t\t   \"at %L (rank-%d and rank-%d)\", name, where, rank1, rank2);\n }\n \n \n@@ -2192,9 +2184,9 @@ compare_parameter (gfc_symbol *formal, gfc_expr *actual,\n \t\t\t\t   sizeof(err), NULL, NULL))\n \t{\n \t  if (where)\n-\t    gfc_error (OPT_Wargument_mismatch,\n-\t\t       \"Interface mismatch in dummy procedure %qs at %L: %s\",\n-\t\t       formal->name, &actual->where, err);\n+\t    gfc_error_opt (OPT_Wargument_mismatch,\n+\t\t\t   \"Interface mismatch in dummy procedure %qs at %L:\"\n+\t\t\t   \" %s\", formal->name, &actual->where, err);\n \t  return false;\n \t}\n \n@@ -2220,9 +2212,9 @@ compare_parameter (gfc_symbol *formal, gfc_expr *actual,\n \t\t\t\t   err, sizeof(err), NULL, NULL))\n \t{\n \t  if (where)\n-\t    gfc_error (OPT_Wargument_mismatch,\n-\t\t       \"Interface mismatch in dummy procedure %qs at %L: %s\",\n-\t\t       formal->name, &actual->where, err);\n+\t    gfc_error_opt (OPT_Wargument_mismatch,\n+\t\t\t   \"Interface mismatch in dummy procedure %qs at %L:\"\n+\t\t\t   \" %s\", formal->name, &actual->where, err);\n \t  return false;\n \t}\n     }\n@@ -2251,10 +2243,10 @@ compare_parameter (gfc_symbol *formal, gfc_expr *actual,\n \t\t\t\t\t CLASS_DATA (actual)->ts.u.derived)))\n     {\n       if (where)\n-\tgfc_error (OPT_Wargument_mismatch,\n-\t\t   \"Type mismatch in argument %qs at %L; passed %s to %s\",\n-\t\t   formal->name, where, gfc_typename (&actual->ts),\n-\t\t   gfc_typename (&formal->ts));\n+\tgfc_error_opt (OPT_Wargument_mismatch,\n+\t\t       \"Type mismatch in argument %qs at %L; passed %s to %s\",\n+\t\t       formal->name, where, gfc_typename (&actual->ts),\n+\t\t       gfc_typename (&formal->ts));\n       return false;\n     }\n \n@@ -4551,9 +4543,9 @@ gfc_check_typebound_override (gfc_symtree* proc, gfc_symtree* old)\n       if (!gfc_check_dummy_characteristics (proc_formal->sym, old_formal->sym,\n \t\t\t\t\tcheck_type, err, sizeof(err)))\n \t{\n-\t  gfc_error (OPT_Wargument_mismatch,\n-\t\t     \"Argument mismatch for the overriding procedure \"\n-\t\t     \"%qs at %L: %s\", proc->name, &where, err);\n+\t  gfc_error_opt (OPT_Wargument_mismatch,\n+\t\t\t \"Argument mismatch for the overriding procedure \"\n+\t\t\t \"%qs at %L: %s\", proc->name, &where, err);\n \t  return false;\n \t}\n "}, {"sha": "7cf7a41be424fb99fe931b0adffc7a1c863875c9", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2700d0e3ab767c765246cdc480ff7ad5792eb2e6/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2700d0e3ab767c765246cdc480ff7ad5792eb2e6/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=2700d0e3ab767c765246cdc480ff7ad5792eb2e6", "patch": "@@ -1312,10 +1312,10 @@ resolve_structure_cons (gfc_expr *expr, int init)\n \t  if (s2 && !gfc_compare_interfaces (comp->ts.interface, s2, name, 0, 1,\n \t\t\t\t\t     err, sizeof (err), NULL, NULL))\n \t    {\n-\t      gfc_error (OPT_Wargument_mismatch,\n-\t\t\t \"Interface mismatch for procedure-pointer component \"\n-\t\t\t \"%qs in structure constructor at %L: %s\",\n-\t\t\t comp->name, &cons->expr->where, err);\n+\t      gfc_error_opt (OPT_Wargument_mismatch,\n+\t\t\t     \"Interface mismatch for procedure-pointer \"\n+\t\t\t     \"component %qs in structure constructor at %L:\"\n+\t\t\t     \" %s\", comp->name, &cons->expr->where, err);\n \t      return false;\n \t    }\n \t}\n@@ -2466,9 +2466,9 @@ resolve_global_procedure (gfc_symbol *sym, locus *where,\n       if (!gfc_compare_interfaces (sym, def_sym, sym->name, 0, 1,\n \t\t\t\t   reason, sizeof(reason), NULL, NULL))\n \t{\n-\t  gfc_error (OPT_Wargument_mismatch,\n-\t\t     \"Interface mismatch in global procedure %qs at %L: %s \",\n-\t\t    sym->name, &sym->declared_at, reason);\n+\t  gfc_error_opt (OPT_Wargument_mismatch,\n+\t\t\t \"Interface mismatch in global procedure %qs at %L:\"\n+\t\t\t \" %s \", sym->name, &sym->declared_at, reason);\n \t  goto done;\n \t}\n "}]}