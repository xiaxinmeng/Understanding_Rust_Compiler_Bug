{"sha": "1510057a32b1646c235117aaed4ab54536d1d18a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTUxMDA1N2EzMmIxNjQ2YzIzNTExN2FhZWQ0YWI1NDUzNmQxZDE4YQ==", "commit": {"author": {"name": "Anthony Green", "email": "green@redhat.com", "date": "2000-11-24T15:29:39Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2000-11-24T15:29:39Z"}, "message": "jcf-parse.c (init_jcf_parse): Register current_file_list root.\n\n        * jcf-parse.c (init_jcf_parse): Register current_file_list root.\n        Move current_file_list out of yyparse and make it static.\n\n        * expr.c: Declare quick_stack and tree_list_free_list as static\n        (init_expr_processing): Register quick_stack and\n        tree_list_free_list roots.\n\nFrom-SVN: r37708", "tree": {"sha": "c613feae29fe58c445b9d9c9150ae1a14e173930", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c613feae29fe58c445b9d9c9150ae1a14e173930"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1510057a32b1646c235117aaed4ab54536d1d18a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1510057a32b1646c235117aaed4ab54536d1d18a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1510057a32b1646c235117aaed4ab54536d1d18a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1510057a32b1646c235117aaed4ab54536d1d18a/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "52a84e42704079b6a1e93fee1215b6d7368f856c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52a84e42704079b6a1e93fee1215b6d7368f856c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52a84e42704079b6a1e93fee1215b6d7368f856c"}], "stats": {"total": 47, "additions": 31, "deletions": 16}, "files": [{"sha": "289b829a2c4f250df1cb3f6ee5a9de8e0c6c1fd6", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1510057a32b1646c235117aaed4ab54536d1d18a/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1510057a32b1646c235117aaed4ab54536d1d18a/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=1510057a32b1646c235117aaed4ab54536d1d18a", "patch": "@@ -1,3 +1,12 @@\n+2000-11-23  Anthony Green  <green@redhat.com>\n+\n+\t* jcf-parse.c (init_jcf_parse): Register current_file_list root.\n+\tMove current_file_list out of yyparse and make it static.\n+\n+\t* expr.c: Declare quick_stack and tree_list_free_list as static\n+\t(init_expr_processing): Register quick_stack and\n+\ttree_list_free_list roots.\n+\n 2000-11-22  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse.y (build_outer_field_access): New local `decl_ctx', use"}, {"sha": "5b9048856ee4dbabcef4af5861302114e2dae9c0", "filename": "gcc/java/expr.c", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1510057a32b1646c235117aaed4ab54536d1d18a/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1510057a32b1646c235117aaed4ab54536d1d18a/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=1510057a32b1646c235117aaed4ab54536d1d18a", "patch": "@@ -93,19 +93,6 @@ tree dtable_ident = NULL_TREE;\n    before static field references.  */\n int always_initialize_class_p;\n \n-void\n-init_expr_processing()\n-{\n-  operand_type[21] = operand_type[54] = int_type_node;\n-  operand_type[22] = operand_type[55] = long_type_node;\n-  operand_type[23] = operand_type[56] = float_type_node;\n-  operand_type[24] = operand_type[57] = double_type_node;\n-  operand_type[25] = operand_type[58] = ptr_type_node;\n-  ggc_add_tree_root (operand_type, 59);\n-  ggc_add_tree_root (&methods_ident, 1);\n-  ggc_add_tree_root (&ncode_ident, 1);\n-}\n-\n /* We store the stack state in two places:\n    Within a basic block, we use the quick_stack, which is a\n    pushdown list (TREE_LISTs) of expression nodes.\n@@ -133,10 +120,10 @@ init_expr_processing()\n    So dup cannot just add an extra element to the quick_stack, but iadd can.\n */\n \n-tree quick_stack = NULL_TREE;\n+static tree quick_stack = NULL_TREE;\n \n /* A free-list of unused permamnet TREE_LIST nodes. */\n-tree tree_list_free_list = NULL_TREE;\n+static tree tree_list_free_list = NULL_TREE;\n \n /* The stack pointer of the Java virtual machine.\n    This does include the size of the quick_stack. */\n@@ -146,6 +133,21 @@ int stack_pointer;\n const unsigned char *linenumber_table;\n int linenumber_count;\n \n+void\n+init_expr_processing()\n+{\n+  operand_type[21] = operand_type[54] = int_type_node;\n+  operand_type[22] = operand_type[55] = long_type_node;\n+  operand_type[23] = operand_type[56] = float_type_node;\n+  operand_type[24] = operand_type[57] = double_type_node;\n+  operand_type[25] = operand_type[58] = ptr_type_node;\n+  ggc_add_tree_root (operand_type, 59);\n+  ggc_add_tree_root (&methods_ident, 1);\n+  ggc_add_tree_root (&ncode_ident, 1);\n+  ggc_add_tree_root (&quick_stack, 1);\n+  ggc_add_tree_root (&tree_list_free_list, 1);\n+}\n+\n tree\n truthvalue_conversion (expr)\n      tree expr;"}, {"sha": "91e8ae072701bfe20e115da4e090da0c0ab8097d", "filename": "gcc/java/jcf-parse.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1510057a32b1646c235117aaed4ab54536d1d18a/gcc%2Fjava%2Fjcf-parse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1510057a32b1646c235117aaed4ab54536d1d18a/gcc%2Fjava%2Fjcf-parse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-parse.c?ref=1510057a32b1646c235117aaed4ab54536d1d18a", "patch": "@@ -76,6 +76,9 @@ static tree current_field = NULL_TREE;\n /* The METHOD_DECL for the current method.  */\n static tree current_method = NULL_TREE;\n \n+/* A list of file names.  */\n+static tree current_file_list = NULL_TREE;\n+\n /* The Java .class file that provides main_class;  the main input file. */\n static struct JCF main_jcf[1];\n \n@@ -807,7 +810,7 @@ yyparse ()\n {\n   int several_files = 0;\n   char *list = xstrdup (input_filename), *next;\n-  tree node, current_file_list = NULL_TREE;\n+  tree node;\n   FILE *finput;\n \n   do \n@@ -1093,4 +1096,5 @@ init_jcf_parse ()\n   /* Register roots with the garbage collector.  */\n   ggc_add_tree_root (&current_field, 1);\n   ggc_add_tree_root (&current_method, 1);\n+  ggc_add_tree_root (&current_file_list, 1);\n }"}]}