{"sha": "614aff0adf8fba5d843ec894603160151c20f0aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE0YWZmMGFkZjhmYmE1ZDg0M2VjODk0NjAzMTYwMTUxYzIwZjBhYQ==", "commit": {"author": {"name": "Ilya Leoshkevich", "email": "iii@linux.ibm.com", "date": "2020-12-03T00:38:47Z"}, "committer": {"name": "Ilya Leoshkevich", "email": "iii@linux.ibm.com", "date": "2020-12-03T09:50:32Z"}, "message": "tree-ssa-threadedge.c (record_temporary_equivalences_from_stmts_at_dest): Do not allow __builtin_constant_p.\n\nThis is the same as commit 70a62009181f (\"tree-ssa-threadbackward.c\n(profitable_jump_thread_path): Do not allow __builtin_constant_p.\"), but\nfor the old forward threader.\n\ngcc/ChangeLog:\n\n2020-12-03  Ilya Leoshkevich  <iii@linux.ibm.com>\n\n\t* tree-ssa-threadedge.c (record_temporary_equivalences_from_stmts_at_dest):\n\tDo not allow __builtin_constant_p on a threading path.", "tree": {"sha": "c94bf0de8dcb1c92564ce0dd5933544e1e108f87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c94bf0de8dcb1c92564ce0dd5933544e1e108f87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/614aff0adf8fba5d843ec894603160151c20f0aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/614aff0adf8fba5d843ec894603160151c20f0aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/614aff0adf8fba5d843ec894603160151c20f0aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/614aff0adf8fba5d843ec894603160151c20f0aa/comments", "author": {"login": "iii-i", "id": 45998171, "node_id": "MDQ6VXNlcjQ1OTk4MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/45998171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iii-i", "html_url": "https://github.com/iii-i", "followers_url": "https://api.github.com/users/iii-i/followers", "following_url": "https://api.github.com/users/iii-i/following{/other_user}", "gists_url": "https://api.github.com/users/iii-i/gists{/gist_id}", "starred_url": "https://api.github.com/users/iii-i/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iii-i/subscriptions", "organizations_url": "https://api.github.com/users/iii-i/orgs", "repos_url": "https://api.github.com/users/iii-i/repos", "events_url": "https://api.github.com/users/iii-i/events{/privacy}", "received_events_url": "https://api.github.com/users/iii-i/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iii-i", "id": 45998171, "node_id": "MDQ6VXNlcjQ1OTk4MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/45998171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iii-i", "html_url": "https://github.com/iii-i", "followers_url": "https://api.github.com/users/iii-i/followers", "following_url": "https://api.github.com/users/iii-i/following{/other_user}", "gists_url": "https://api.github.com/users/iii-i/gists{/gist_id}", "starred_url": "https://api.github.com/users/iii-i/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iii-i/subscriptions", "organizations_url": "https://api.github.com/users/iii-i/orgs", "repos_url": "https://api.github.com/users/iii-i/repos", "events_url": "https://api.github.com/users/iii-i/events{/privacy}", "received_events_url": "https://api.github.com/users/iii-i/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73564433f519ba0db6f1222e829518f16028c0e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73564433f519ba0db6f1222e829518f16028c0e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73564433f519ba0db6f1222e829518f16028c0e2"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "32d63a95af4217aa9917772d0f62cadbf946f06c", "filename": "gcc/tree-ssa-threadedge.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/614aff0adf8fba5d843ec894603160151c20f0aa/gcc%2Ftree-ssa-threadedge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/614aff0adf8fba5d843ec894603160151c20f0aa/gcc%2Ftree-ssa-threadedge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadedge.c?ref=614aff0adf8fba5d843ec894603160151c20f0aa", "patch": "@@ -265,6 +265,12 @@ record_temporary_equivalences_from_stmts_at_dest (edge e,\n \t  && gimple_call_internal_unique_p (stmt))\n \treturn NULL;\n \n+      /* We cannot thread through __builtin_constant_p, because an\n+\t expression that is constant on two threading paths may become\n+\t non-constant (i.e.: phi) when they merge.  */\n+      if (gimple_call_builtin_p (stmt, BUILT_IN_CONSTANT_P))\n+\treturn NULL;\n+\n       /* If duplicating this block is going to cause too much code\n \t expansion, then do not thread through this block.  */\n       stmt_count++;"}]}