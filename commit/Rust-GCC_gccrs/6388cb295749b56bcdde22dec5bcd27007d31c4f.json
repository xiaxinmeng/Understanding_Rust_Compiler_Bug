{"sha": "6388cb295749b56bcdde22dec5bcd27007d31c4f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM4OGNiMjk1NzQ5YjU2YmNkZGUyMmRlYzViY2QyNzAwN2QzMWM0Zg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-11-05T13:34:36Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2018-11-05T13:34:36Z"}, "message": "Fix build on sparc64-linux-gnu.\n\n2018-11-05  Martin Liska  <mliska@suse.cz>\n\n\tPR sanitizer/87860\n\t* sanitizer_common/sanitizer_linux.cc:  Cherry-pick upstream\n\tr346129.\n\nFrom-SVN: r265796", "tree": {"sha": "e60c05a3c5ce9548c06462cfea47873510a787b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e60c05a3c5ce9548c06462cfea47873510a787b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6388cb295749b56bcdde22dec5bcd27007d31c4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6388cb295749b56bcdde22dec5bcd27007d31c4f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6388cb295749b56bcdde22dec5bcd27007d31c4f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6388cb295749b56bcdde22dec5bcd27007d31c4f/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4cc31a3c4ee108d960eb003129f05d5950f08355", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cc31a3c4ee108d960eb003129f05d5950f08355", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cc31a3c4ee108d960eb003129f05d5950f08355"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "122fc022308eca879f5c1b6bcd6e3155f7f6b6ed", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6388cb295749b56bcdde22dec5bcd27007d31c4f/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6388cb295749b56bcdde22dec5bcd27007d31c4f/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=6388cb295749b56bcdde22dec5bcd27007d31c4f", "patch": "@@ -1,3 +1,9 @@\n+2018-11-05  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitizer/87860\n+\t* sanitizer_common/sanitizer_linux.cc:  Cherry-pick upstream\n+\tr346129.\n+\n 2018-10-31  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR bootstrap/82856"}, {"sha": "30d6521f9e90392a601b568b0478a050cb182f75", "filename": "libsanitizer/sanitizer_common/sanitizer_linux.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6388cb295749b56bcdde22dec5bcd27007d31c4f/libsanitizer%2Fsanitizer_common%2Fsanitizer_linux.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6388cb295749b56bcdde22dec5bcd27007d31c4f/libsanitizer%2Fsanitizer_common%2Fsanitizer_linux.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_linux.cc?ref=6388cb295749b56bcdde22dec5bcd27007d31c4f", "patch": "@@ -1944,14 +1944,14 @@ static void GetPcSpBp(void *context, uptr *pc, uptr *sp, uptr *bp) {\n #elif defined(__sparc__)\n   ucontext_t *ucontext = (ucontext_t*)context;\n   uptr *stk_ptr;\n-# if defined (__sparcv9)\n+# if defined(__sparcv9) || defined (__arch64__)\n # ifndef MC_PC\n #  define MC_PC REG_PC\n # endif\n # ifndef MC_O6\n #  define MC_O6 REG_O6\n # endif\n-# ifdef SANITIZER_SOLARIS\n+# if SANITIZER_SOLARIS\n #  define mc_gregs gregs\n # endif\n   *pc = ucontext->uc_mcontext.mc_gregs[MC_PC];"}]}