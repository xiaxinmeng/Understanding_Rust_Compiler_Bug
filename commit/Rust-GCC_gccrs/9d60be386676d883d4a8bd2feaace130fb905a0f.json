{"sha": "9d60be386676d883d4a8bd2feaace130fb905a0f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQ2MGJlMzg2Njc2ZDg4M2Q0YThiZDJmZWFhY2UxMzBmYjkwNWEwZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-01-13T12:33:43Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-01-13T12:33:43Z"}, "message": "re PR fortran/55935 ([OOP] Fortran fronted has ADDR_EXPRs of FUNCTION_DECLs with bogus BLOCK)\n\n\tPR fortran/55935\n\t* gimple-fold.c (get_symbol_constant_value): Call\n\tunshare_expr.\n\t(fold_gimple_assign): Don't call unshare_expr here.\n\t(fold_ctor_reference): Call unshare_expr.\n\n\t* trans-expr.c (gfc_conv_structure): Call\n\tunshare_expr_without_location on the ctor elements.\n\nFrom-SVN: r195136", "tree": {"sha": "190944d72880df83808c66199c3e4f272b8161d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/190944d72880df83808c66199c3e4f272b8161d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d60be386676d883d4a8bd2feaace130fb905a0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d60be386676d883d4a8bd2feaace130fb905a0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d60be386676d883d4a8bd2feaace130fb905a0f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d60be386676d883d4a8bd2feaace130fb905a0f/comments", "author": null, "committer": null, "parents": [{"sha": "e7f49d92ca829a0a51c1cb3ae26ebb0cb08f0fed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7f49d92ca829a0a51c1cb3ae26ebb0cb08f0fed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7f49d92ca829a0a51c1cb3ae26ebb0cb08f0fed"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "59a16bbdf635a4d7636a9a4538837d21df4c4440", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d60be386676d883d4a8bd2feaace130fb905a0f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d60be386676d883d4a8bd2feaace130fb905a0f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9d60be386676d883d4a8bd2feaace130fb905a0f", "patch": "@@ -1,3 +1,11 @@\n+2013-01-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/55935\n+\t* gimple-fold.c (get_symbol_constant_value): Call\n+\tunshare_expr.\n+\t(fold_gimple_assign): Don't call unshare_expr here.\n+\t(fold_ctor_reference): Call unshare_expr.\n+\n 2013-01-13  Terry Guo  <terry.guo@arm.com>\n \n \t* gcc/Makefile.in (s-mlib): New argument MULTILIB_REUSE.\n@@ -57,7 +65,7 @@\n \n 2013-01-10  Vladimir Makarov  <vmakarov@redhat.com>\n \n-\tPR rtl-optimization/pr55672\n+\tPR rtl-optimization/55672\n \t* lra-eliminations.c (mark_not_eliminable): Permit addition with\n \tconst to be eliminable.\n "}, {"sha": "0f62c2aa54dce73b3b8188eab1986fa6760aaae5", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d60be386676d883d4a8bd2feaace130fb905a0f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d60be386676d883d4a8bd2feaace130fb905a0f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=9d60be386676d883d4a8bd2feaace130fb905a0f", "patch": "@@ -1,3 +1,9 @@\n+2013-01-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/55935\n+\t* trans-expr.c (gfc_conv_structure): Call\n+\tunshare_expr_without_location on the ctor elements.\n+\n 2013-01-13  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/54286"}, {"sha": "e3386b18a296e6670d0011e547f85ce314e97cbd", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d60be386676d883d4a8bd2feaace130fb905a0f/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d60be386676d883d4a8bd2feaace130fb905a0f/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=9d60be386676d883d4a8bd2feaace130fb905a0f", "patch": "@@ -6137,6 +6137,7 @@ gfc_conv_structure (gfc_se * se, gfc_expr * expr, int init)\n \t  gfc_symbol *vtabs;\n \t  vtabs = cm->initializer->symtree->n.sym;\n \t  vtab = gfc_build_addr_expr (NULL_TREE, gfc_get_symbol_decl (vtabs));\n+\t  vtab = unshare_expr_without_location (vtab);\n \t  CONSTRUCTOR_APPEND_ELT (v, cm->backend_decl, vtab);\n \t}\n       else if (cm->ts.u.derived && strcmp (cm->name, \"_size\") == 0)\n@@ -6150,6 +6151,7 @@ gfc_conv_structure (gfc_se * se, gfc_expr * expr, int init)\n \t\t\t\t      TREE_TYPE (cm->backend_decl),\n \t\t\t\t      cm->attr.dimension, cm->attr.pointer,\n \t\t\t\t      cm->attr.proc_pointer);\n+\t  val = unshare_expr_without_location (val);\n \n \t  /* Append it to the constructor list.  */\n \t  CONSTRUCTOR_APPEND_ELT (v, cm->backend_decl, val);"}, {"sha": "b9211a9add2716a78e1a946637256e7a308e6938", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d60be386676d883d4a8bd2feaace130fb905a0f/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d60be386676d883d4a8bd2feaace130fb905a0f/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=9d60be386676d883d4a8bd2feaace130fb905a0f", "patch": "@@ -202,7 +202,7 @@ get_symbol_constant_value (tree sym)\n       tree val = DECL_INITIAL (sym);\n       if (val)\n \t{\n-\t  val = canonicalize_constructor_val (val, sym);\n+\t  val = canonicalize_constructor_val (unshare_expr (val), sym);\n \t  if (val && is_gimple_min_invariant (val))\n \t    return val;\n \t  else\n@@ -378,7 +378,7 @@ fold_gimple_assign (gimple_stmt_iterator *si)\n \t  }\n \n \telse if (DECL_P (rhs))\n-\t  return unshare_expr (get_symbol_constant_value (rhs));\n+\t  return get_symbol_constant_value (rhs);\n \n         /* If we couldn't fold the RHS, hand over to the generic\n            fold routines.  */\n@@ -2941,7 +2941,7 @@ fold_ctor_reference (tree type, tree ctor, unsigned HOST_WIDE_INT offset,\n   /* We found the field with exact match.  */\n   if (useless_type_conversion_p (type, TREE_TYPE (ctor))\n       && !offset)\n-    return canonicalize_constructor_val (ctor, from_decl);\n+    return canonicalize_constructor_val (unshare_expr (ctor), from_decl);\n \n   /* We are at the end of walk, see if we can view convert the\n      result.  */\n@@ -2950,7 +2950,7 @@ fold_ctor_reference (tree type, tree ctor, unsigned HOST_WIDE_INT offset,\n       && operand_equal_p (TYPE_SIZE (type),\n \t\t\t  TYPE_SIZE (TREE_TYPE (ctor)), 0))\n     {\n-      ret = canonicalize_constructor_val (ctor, from_decl);\n+      ret = canonicalize_constructor_val (unshare_expr (ctor), from_decl);\n       ret = fold_unary (VIEW_CONVERT_EXPR, type, ret);\n       if (ret)\n \tSTRIP_NOPS (ret);"}]}