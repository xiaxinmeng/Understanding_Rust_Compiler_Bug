{"sha": "56135456a96258e222b48525ae6d0115b1fd4d63", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTYxMzU0NTZhOTYyNThlMjIyYjQ4NTI1YWU2ZDAxMTViMWZkNGQ2Mw==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.vnet.ibm.com", "date": "2017-08-21T20:33:55Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2017-08-21T20:33:55Z"}, "message": "rs6000-cpus.def (-mvsx-scalar-float): Delete undocumented debugging options.\n\n2017-08-21  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\t* config/rs6000/rs6000-cpus.def (-mvsx-scalar-float): Delete\n\tundocumented debugging options.\n\t(-mvsx-scalar-double): Likewise.\n\t(-mallow-df-permute): Likewise.\n\t(-mvectorize-builtins): Likewise.\n\t* config/rs6000/rs6000.c (rs6000_init_hard_regno_mode_ok):\n\tLikewise.\n\t(rs6000_builtin_vectorized_function): Likewise.\n\t(rs6000_builtin_md_vectorized_function): Likewise.\n\t(rs6000_opt_vars): Likewise.\n\nFrom-SVN: r251248", "tree": {"sha": "319fb9bfcb2b84d1c98fe39590fbcf1e4eab3fbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/319fb9bfcb2b84d1c98fe39590fbcf1e4eab3fbb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56135456a96258e222b48525ae6d0115b1fd4d63", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56135456a96258e222b48525ae6d0115b1fd4d63", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56135456a96258e222b48525ae6d0115b1fd4d63", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56135456a96258e222b48525ae6d0115b1fd4d63/comments", "author": null, "committer": null, "parents": [{"sha": "3d9850f4f8a4bcc9b0dcc04ea27b7ad8965096d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d9850f4f8a4bcc9b0dcc04ea27b7ad8965096d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d9850f4f8a4bcc9b0dcc04ea27b7ad8965096d1"}], "stats": {"total": 45, "additions": 17, "deletions": 28}, "files": [{"sha": "f9b07cdbdf6efb1ca8638fb4bea7ae10a7f2c9fb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56135456a96258e222b48525ae6d0115b1fd4d63/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56135456a96258e222b48525ae6d0115b1fd4d63/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=56135456a96258e222b48525ae6d0115b1fd4d63", "patch": "@@ -1,3 +1,16 @@\n+2017-08-21  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/rs6000-cpus.def (-mvsx-scalar-float): Delete\n+\tundocumented debugging options.\n+\t(-mvsx-scalar-double): Likewise.\n+\t(-mallow-df-permute): Likewise.\n+\t(-mvectorize-builtins): Likewise.\n+\t* config/rs6000/rs6000.c (rs6000_init_hard_regno_mode_ok):\n+\tLikewise.\n+\t(rs6000_builtin_vectorized_function): Likewise.\n+\t(rs6000_builtin_md_vectorized_function): Likewise.\n+\t(rs6000_opt_vars): Likewise.\n+\n 2017-08-21  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/46091"}, {"sha": "33581d019d8f8de6b5aa28a2000f36915264865b", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56135456a96258e222b48525ae6d0115b1fd4d63/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56135456a96258e222b48525ae6d0115b1fd4d63/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=56135456a96258e222b48525ae6d0115b1fd4d63", "patch": "@@ -3128,14 +3128,14 @@ rs6000_init_hard_regno_mode_ok (bool global_init_p)\n \n   /* DFmode, see if we want to use the VSX unit.  Memory is handled\n      differently, so don't set rs6000_vector_mem.  */\n-  if (TARGET_VSX && TARGET_VSX_SCALAR_DOUBLE)\n+  if (TARGET_VSX)\n     {\n       rs6000_vector_unit[DFmode] = VECTOR_VSX;\n       rs6000_vector_align[DFmode] = 64;\n     }\n \n   /* SFmode, see if we want to use the VSX unit.  */\n-  if (TARGET_P8_VECTOR && TARGET_VSX_SCALAR_FLOAT)\n+  if (TARGET_P8_VECTOR)\n     {\n       rs6000_vector_unit[SFmode] = VECTOR_VSX;\n       rs6000_vector_align[SFmode] = 32;\n@@ -5909,8 +5909,7 @@ rs6000_builtin_vectorized_function (unsigned int fn, tree type_out,\n \t     GET_MODE_NAME (TYPE_MODE (type_in)));\n \n   if (TREE_CODE (type_out) != VECTOR_TYPE\n-      || TREE_CODE (type_in) != VECTOR_TYPE\n-      || !TARGET_VECTORIZE_BUILTINS)\n+      || TREE_CODE (type_in) != VECTOR_TYPE)\n     return NULL_TREE;\n \n   out_mode = TYPE_MODE (TREE_TYPE (type_out));\n@@ -6041,8 +6040,7 @@ rs6000_builtin_md_vectorized_function (tree fndecl, tree type_out,\n \t     GET_MODE_NAME (TYPE_MODE (type_in)));\n \n   if (TREE_CODE (type_out) != VECTOR_TYPE\n-      || TREE_CODE (type_in) != VECTOR_TYPE\n-      || !TARGET_VECTORIZE_BUILTINS)\n+      || TREE_CODE (type_in) != VECTOR_TYPE)\n     return NULL_TREE;\n \n   out_mode = TYPE_MODE (TREE_TYPE (type_out));\n@@ -36251,9 +36249,6 @@ static struct rs6000_opt_var const rs6000_opt_vars[] =\n   { \"allow-movmisalign\",\n     offsetof (struct gcc_options, x_TARGET_ALLOW_MOVMISALIGN),\n     offsetof (struct cl_target_option, x_TARGET_ALLOW_MOVMISALIGN), },\n-  { \"allow-df-permute\",\n-    offsetof (struct gcc_options, x_TARGET_ALLOW_DF_PERMUTE),\n-    offsetof (struct cl_target_option, x_TARGET_ALLOW_DF_PERMUTE), },\n   { \"sched-groups\",\n     offsetof (struct gcc_options, x_TARGET_SCHED_GROUPS),\n     offsetof (struct cl_target_option, x_TARGET_SCHED_GROUPS), },\n@@ -36263,9 +36258,6 @@ static struct rs6000_opt_var const rs6000_opt_vars[] =\n   { \"align-branch-targets\",\n     offsetof (struct gcc_options, x_TARGET_ALIGN_BRANCH_TARGETS),\n     offsetof (struct cl_target_option, x_TARGET_ALIGN_BRANCH_TARGETS), },\n-  { \"vectorize-builtins\",\n-    offsetof (struct gcc_options, x_TARGET_VECTORIZE_BUILTINS),\n-    offsetof (struct cl_target_option, x_TARGET_VECTORIZE_BUILTINS), },\n   { \"tls-markers\",\n     offsetof (struct gcc_options, x_tls_markers),\n     offsetof (struct cl_target_option, x_tls_markers), },"}, {"sha": "66614a9d0558d9db4e58d8e9ecce41594b996be5", "filename": "gcc/config/rs6000/rs6000.opt", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56135456a96258e222b48525ae6d0115b1fd4d63/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56135456a96258e222b48525ae6d0115b1fd4d63/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.opt?ref=56135456a96258e222b48525ae6d0115b1fd4d63", "patch": "@@ -196,14 +196,6 @@ mvsx\n Target Report Mask(VSX) Var(rs6000_isa_flags)\n Use vector/scalar (VSX) instructions.\n \n-mvsx-scalar-float\n-Target Undocumented Report Var(TARGET_VSX_SCALAR_FLOAT) Init(1)\n-; If -mpower8-vector, use VSX arithmetic instructions for SFmode (on by default)\n-\n-mvsx-scalar-double\n-Target Undocumented Report Var(TARGET_VSX_SCALAR_DOUBLE) Init(1)\n-; If -mvsx, use VSX arithmetic instructions for DFmode (on by default)\n-\n mvsx-align-128\n Target Undocumented Report Var(TARGET_VSX_ALIGN_128) Save\n ; If -mvsx, set alignment to 128 bits instead of 32/64\n@@ -216,10 +208,6 @@ mefficient-unaligned-vsx\n Target Undocumented Report Mask(EFFICIENT_UNALIGNED_VSX) Var(rs6000_isa_flags)\n ; Consider unaligned VSX vector and fp accesses to be efficient\n \n-mallow-df-permute\n-Target Undocumented Var(TARGET_ALLOW_DF_PERMUTE) Save\n-; Allow permutation of DF/DI vectors\n-\n msched-groups\n Target Undocumented Report Var(TARGET_SCHED_GROUPS) Init(-1) Save\n ; Explicitly set rs6000_sched_groups\n@@ -232,10 +220,6 @@ malign-branch-targets\n Target Undocumented Report Var(TARGET_ALIGN_BRANCH_TARGETS) Init(-1) Save\n ; Explicitly set rs6000_align_branch_targets\n \n-mvectorize-builtins\n-Target Undocumented Report Var(TARGET_VECTORIZE_BUILTINS) Init(-1) Save\n-; Explicitly control whether we vectorize the builtins or not.\n-\n mno-update\n Target Report RejectNegative Mask(NO_UPDATE) Var(rs6000_isa_flags)\n Do not generate load/store with update instructions."}]}