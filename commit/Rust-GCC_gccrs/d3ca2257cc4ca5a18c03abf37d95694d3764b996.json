{"sha": "d3ca2257cc4ca5a18c03abf37d95694d3764b996", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNjYTIyNTdjYzRjYTVhMThjMDNhYmYzN2Q5NTY5NGQzNzY0Yjk5Ng==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2016-08-29T19:09:57Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2016-08-29T19:09:57Z"}, "message": "configure.ac (nvptx-*): Hardwire newlib.\n\n\t* configure.ac (nvptx-*): Hardwire newlib.\n\t* configure: Rebuilt.\n\nFrom-SVN: r239836", "tree": {"sha": "a03d0dba5c06721cb253ed6ffdf8f537e8f95964", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a03d0dba5c06721cb253ed6ffdf8f537e8f95964"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3ca2257cc4ca5a18c03abf37d95694d3764b996", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3ca2257cc4ca5a18c03abf37d95694d3764b996", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3ca2257cc4ca5a18c03abf37d95694d3764b996", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3ca2257cc4ca5a18c03abf37d95694d3764b996/comments", "author": null, "committer": null, "parents": [{"sha": "414b7129496a41e3a96220c103fd9f9e8ac0b840", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/414b7129496a41e3a96220c103fd9f9e8ac0b840", "html_url": "https://github.com/Rust-GCC/gccrs/commit/414b7129496a41e3a96220c103fd9f9e8ac0b840"}], "stats": {"total": 54, "additions": 32, "deletions": 22}, "files": [{"sha": "fc9a45416c8d573a24fe31ad833cb2cd430547d3", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 26, "deletions": 20, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3ca2257cc4ca5a18c03abf37d95694d3764b996/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3ca2257cc4ca5a18c03abf37d95694d3764b996/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=d3ca2257cc4ca5a18c03abf37d95694d3764b996", "patch": "@@ -1,21 +1,26 @@\n+2016-08-29  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* configure.ac (nvptx-*): Hardwire newlib.\n+\t* configure: Rebuilt.\n+\n 2016-08-19  Janne Blomqvist  <jb@gcc.gnu.org>\n \n-        * intrinsics/random.c (xor_keys): New array with \"secret\" keys.\n-        (scramble_seed): XOR given seed with xor_keys array rather than\n-        shuffling bytes.\n-        (unscramble_seed): Remove function.\n-        (random_seed_i4): Use new scramble_seed.\n-        (random_seed_i8): Likewise.\n+\t* intrinsics/random.c (xor_keys): New array with \"secret\" keys.\n+\t(scramble_seed): XOR given seed with xor_keys array rather than\n+\tshuffling bytes.\n+\t(unscramble_seed): Remove function.\n+\t(random_seed_i4): Use new scramble_seed.\n+\t(random_seed_i8): Likewise.\n \n 2016-08-19  Janne Blomqvist  <jb@gcc.gnu.org>\n \n-        * intrinsics/random.c (master_init): New variable.\n-        (init_rand_state): Move below getosrandom (), maybe initialize\n-        master_state.\n-        (random_seed_i4): If called with no arguments, set master_init to\n-        false, and reinitialize. If called with PUT=, set master_init to\n-        true.\n-        (random_seed_i8): Likewise.\n+\t* intrinsics/random.c (master_init): New variable.\n+\t(init_rand_state): Move below getosrandom (), maybe initialize\n+\tmaster_state.\n+\t(random_seed_i4): If called with no arguments, set master_init to\n+\tfalse, and reinitialize. If called with PUT=, set master_init to\n+\ttrue.\n+\t(random_seed_i8): Likewise.\n \n 2016-08-11  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n@@ -41,14 +46,15 @@\n \n \tPR libgfortran/48852\n \t* io/write.c: Cleaned up whitespace.\n-\t(write_d, write_e, write_f, write_es, write_en): Use new helper function\n-\twrite_float_0. (write_float_0): New helper function.\n+\t(write_d, write_e, write_f, write_es, write_en): Use new helper\n+\tfunction write_float_0.\n+\t(write_float_0): New helper function.\n \t(get_precision, select_buffer, select_string, write_float_string): New\n-\thelper functions used in remaining float writing functions. Helper function\n-\twrite_float_string now contains code for writing to kind=4 character\n-\tinternal units.\n-\t(write_real): Modified to establish working buffers at this level and to\n-\tuse new helper functions.\n+\thelper functions used in remaining float writing functions.\n+\tHelper function write_float_string now contains code for writing\n+\tto kind=4 character internal units.\n+\t(write_real): Modified to establish working buffers at this level\n+\tand to \tuse new helper functions.\n \t(write_real_g0): Likewise modified.\n \t(write_complex): Likewise modified. Gets both float strings before\n \toutput so that final lengths can be determined which allows right"}, {"sha": "97dc101933567c255441c60257d0ae0be83d77b3", "filename": "libgfortran/configure", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3ca2257cc4ca5a18c03abf37d95694d3764b996/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3ca2257cc4ca5a18c03abf37d95694d3764b996/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=d3ca2257cc4ca5a18c03abf37d95694d3764b996", "patch": "@@ -10308,7 +10308,7 @@ _LT_EOF\n \tif $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n \t  export_symbols_cmds='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n \telse\n-\t  export_symbols_cmds='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n+\t  export_symbols_cmds='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"L\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n \tfi\n \taix_use_runtimelinking=no\n \n@@ -14157,7 +14157,7 @@ _LT_EOF\n \tif $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then\n \t  export_symbols_cmds_FC='$NM -Bpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"W\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n \telse\n-\t  export_symbols_cmds_FC='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n+\t  export_symbols_cmds_FC='$NM -BCpg $libobjs $convenience | awk '\\''{ if (((\\$ 2 == \"T\") || (\\$ 2 == \"D\") || (\\$ 2 == \"B\") || (\\$ 2 == \"L\")) && (substr(\\$ 3,1,1) != \".\")) { print \\$ 3 } }'\\'' | sort -u > $export_symbols'\n \tfi\n \taix_use_runtimelinking=no\n \n@@ -16471,6 +16471,8 @@ fi\n case \"${host}--x${with_newlib}\" in\n   mips*--xyes)\n     hardwire_newlib=1;;\n+  nvptx*--xyes)\n+    hardwire_newlib=1;;\n esac\n \n # Check for library functions."}, {"sha": "3de737dc04f985031ab34038b7bef61b2f902af7", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3ca2257cc4ca5a18c03abf37d95694d3764b996/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3ca2257cc4ca5a18c03abf37d95694d3764b996/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=d3ca2257cc4ca5a18c03abf37d95694d3764b996", "patch": "@@ -276,6 +276,8 @@ AC_CHECK_MEMBERS([struct stat.st_blksize, struct stat.st_blocks, struct stat.st_\n case \"${host}--x${with_newlib}\" in\n   mips*--xyes)\n     hardwire_newlib=1;;\n+  nvptx*--xyes)\n+    hardwire_newlib=1;;\n esac\n \n # Check for library functions."}]}