{"sha": "cd5e8f1fc2a2a1934591a15b27005821886db768", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q1ZThmMWZjMmEyYTE5MzQ1OTFhMTViMjcwMDU4MjE4ODZkYjc2OA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-07-05T23:12:04Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-07-05T23:12:04Z"}, "message": "(can_combine_p): Don't check for replacing arg of function here.\n\n(can_combine_p): Do it here.\n\nFrom-SVN: r7657", "tree": {"sha": "83e352d12562276891e4db0bdba05b61133fdd56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83e352d12562276891e4db0bdba05b61133fdd56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd5e8f1fc2a2a1934591a15b27005821886db768", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd5e8f1fc2a2a1934591a15b27005821886db768", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd5e8f1fc2a2a1934591a15b27005821886db768", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd5e8f1fc2a2a1934591a15b27005821886db768/comments", "author": null, "committer": null, "parents": [{"sha": "325877e17758607740ed3d112050a19c6ee9b38a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/325877e17758607740ed3d112050a19c6ee9b38a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/325877e17758607740ed3d112050a19c6ee9b38a"}], "stats": {"total": 13, "additions": 2, "deletions": 11}, "files": [{"sha": "9e929edad80734b4a83106591544bdb20b6c76a3", "filename": "gcc/combine.c", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd5e8f1fc2a2a1934591a15b27005821886db768/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd5e8f1fc2a2a1934591a15b27005821886db768/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=cd5e8f1fc2a2a1934591a15b27005821886db768", "patch": "@@ -878,6 +878,8 @@ can_combine_p (insn, i3, pred, succ, pdest, psrc)\n       || (rtx_equal_p (src, dest) && find_reg_note (insn, REG_EQUAL, NULL_RTX))\n       /* Can't merge a function call.  */\n       || GET_CODE (src) == CALL\n+      /* Don't eliminate a function call argument.  */\n+      || (GET_CODE (i3) == CALL_INSN && find_reg_fusage (i3, USE, dest))\n       /* Don't substitute into an incremented register.  */\n       || FIND_REG_INC_NOTE (i3, dest)\n       || (succ && FIND_REG_INC_NOTE (succ, dest))\n@@ -1218,17 +1220,6 @@ try_combine (i3, i2, i1)\n       || find_reg_note (i3, REG_LIBCALL, NULL_RTX))\n     return 0;\n \n-  /* If I1 or I2 is an argument set insn, and I3 is the actual\n-     CALL_INSN using it as argument, never combine the two.\n-     This to prevent the elimination of insns that setup a\n-     parameter register for a CALL_INSN.  */\n-  if (GET_CODE (i3) == CALL_INSN\n-      && (((temp = single_set (i2))\n-            && find_reg_fusage (i3, USE, SET_DEST (temp)))\n-\t  || (i1 && (temp = single_set (i1))\n-              && find_reg_fusage (i3, USE, SET_DEST (temp)))))\n-    return 0;\n-\n   combine_attempts++;\n \n   undobuf.num_undo = previous_num_undos = 0;"}]}