{"sha": "0e993e397753503c774c5b411db231b7a8fa1990", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU5OTNlMzk3NzUzNTAzYzc3NGM1YjQxMWRiMjMxYjdhOGZhMTk5MA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-10-20T20:44:23Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2015-10-20T20:44:23Z"}, "message": "compiler: Report errors after evaluating invalid constant.\n\n    \n    The fix for golang/go#11541 made the assertion that getting an invalid\n    Numeric_constant after evaluating an invalid constant must result in\n    an error in a binary expression.  However, a Numeric_constant can be\n    invalid if it is unset, which occurs when either operand cannot be\n    converted to the right type.  These errors are issued after the\n    Numeric_constant is lowered.\n    \n    Fixes golang/go#12615.\n    \n    Reviewed-on: https://go-review.googlesource.com/14646\n\nFrom-SVN: r229098", "tree": {"sha": "7686f63e206673ae55eb2c533d60d9f6d2f58f00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7686f63e206673ae55eb2c533d60d9f6d2f58f00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e993e397753503c774c5b411db231b7a8fa1990", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e993e397753503c774c5b411db231b7a8fa1990", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e993e397753503c774c5b411db231b7a8fa1990", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e993e397753503c774c5b411db231b7a8fa1990/comments", "author": null, "committer": null, "parents": [{"sha": "28c64f64a40843a5951225a2c5949f21a6bc15b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28c64f64a40843a5951225a2c5949f21a6bc15b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28c64f64a40843a5951225a2c5949f21a6bc15b4"}], "stats": {"total": 9, "additions": 1, "deletions": 8}, "files": [{"sha": "6fcd18593a608c7cffe04b28c7f741e971fca12c", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e993e397753503c774c5b411db231b7a8fa1990/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e993e397753503c774c5b411db231b7a8fa1990/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=0e993e397753503c774c5b411db231b7a8fa1990", "patch": "@@ -1,4 +1,4 @@\n-302d8abbc499e28088d758ae8b2c024d8e50b9b3\n+11e249a59e8c627fe9c2938c38e39cb1efefb1fb\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "0d25dda1f4465afe4b74e723e440a62034b1fc48", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e993e397753503c774c5b411db231b7a8fa1990/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e993e397753503c774c5b411db231b7a8fa1990/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=0e993e397753503c774c5b411db231b7a8fa1990", "patch": "@@ -4909,14 +4909,7 @@ Binary_expression::do_lower(Gogo* gogo, Named_object*,\n \t    Numeric_constant nc;\n \t    if (!Binary_expression::eval_constant(op, &left_nc, &right_nc,\n \t\t\t\t\t\t  location, &nc))\n-              {\n-                if (nc.is_invalid())\n-                  {\n-                    go_assert(saw_errors());\n-                    return Expression::make_error(location);\n-                  }\n                 return this;\n-              }\n \t    return nc.expression(location);\n \t  }\n       }"}]}