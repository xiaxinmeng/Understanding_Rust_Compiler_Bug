{"sha": "e49a094d25160e3186f9cc6aee2fdadaf5649b2d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQ5YTA5NGQyNTE2MGUzMTg2ZjljYzZhZWUyZmRhZGFmNTY0OWIyZA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-10T17:00:40Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-10T17:00:40Z"}, "message": "(MAX_BITS_PER_WORD): Define earlier.\n\n(shift_cost, shiftadd_cost, shiftsub_cost): Use MAX_BITS_PER_WORD.\n\nFrom-SVN: r4657", "tree": {"sha": "a7b3f5d314170cf9434780ce85960cb35265b747", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7b3f5d314170cf9434780ce85960cb35265b747"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e49a094d25160e3186f9cc6aee2fdadaf5649b2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e49a094d25160e3186f9cc6aee2fdadaf5649b2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e49a094d25160e3186f9cc6aee2fdadaf5649b2d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e49a094d25160e3186f9cc6aee2fdadaf5649b2d/comments", "author": null, "committer": null, "parents": [{"sha": "35c7a24d6446dffd24ce64310af65b3a5b2f9f03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35c7a24d6446dffd24ce64310af65b3a5b2f9f03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35c7a24d6446dffd24ce64310af65b3a5b2f9f03"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "6fb8579734eb1f064cc491bc9525d2199e599300", "filename": "gcc/expmed.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e49a094d25160e3186f9cc6aee2fdadaf5649b2d/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e49a094d25160e3186f9cc6aee2fdadaf5649b2d/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=e49a094d25160e3186f9cc6aee2fdadaf5649b2d", "patch": "@@ -49,11 +49,19 @@ int mult_is_very_cheap;\n \n static int sdiv_pow2_cheap, smod_pow2_cheap;\n \n+/* For compilers that support multiple targets with different word sizes,\n+   MAX_BITS_PER_WORD contains the biggest value of BITS_PER_WORD.  An example\n+   is the H8/300(H) compiler.  */\n+\n+#ifndef MAX_BITS_PER_WORD\n+#define MAX_BITS_PER_WORD BITS_PER_WORD\n+#endif\n+\n /* Cost of various pieces of RTL.  */\n static int add_cost, mult_cost, negate_cost, zero_cost;\n-static int shift_cost[BITS_PER_WORD];\n-static int shiftadd_cost[BITS_PER_WORD];\n-static int shiftsub_cost[BITS_PER_WORD];\n+static int shift_cost[MAX_BITS_PER_WORD];\n+static int shiftadd_cost[MAX_BITS_PER_WORD];\n+static int shiftsub_cost[MAX_BITS_PER_WORD];\n \n void\n init_expmed ()\n@@ -1791,10 +1799,6 @@ enum alg_code { alg_zero, alg_m, alg_shift,\n \n    The first operand must be either alg_zero or alg_m.  */\n \n-#ifndef MAX_BITS_PER_WORD\n-#define MAX_BITS_PER_WORD BITS_PER_WORD\n-#endif\n-\n struct algorithm\n {\n   short cost;"}]}