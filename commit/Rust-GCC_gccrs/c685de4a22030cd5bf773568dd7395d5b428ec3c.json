{"sha": "c685de4a22030cd5bf773568dd7395d5b428ec3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY4NWRlNGEyMjAzMGNkNWJmNzczNTY4ZGQ3Mzk1ZDViNDI4ZWMzYw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-04-27T15:50:05Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-04-27T15:50:05Z"}, "message": "re PR c/39928 (gimplify_expr failure)\n\n2009-04-27  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/39928\n\t* gimplify.c (gimplify_expr): If we are required to create\n\ta temporary make sure it ends up as register.\n\n\t* gcc.c-torture/compile/pr39928-1.c: New testcase.\n\t* gcc.c-torture/compile/pr39928-2.c: Likewise.\n\nFrom-SVN: r146846", "tree": {"sha": "d2931efd9d30e36b8c46feb3e2e5369830d7614d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2931efd9d30e36b8c46feb3e2e5369830d7614d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c685de4a22030cd5bf773568dd7395d5b428ec3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c685de4a22030cd5bf773568dd7395d5b428ec3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c685de4a22030cd5bf773568dd7395d5b428ec3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c685de4a22030cd5bf773568dd7395d5b428ec3c/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "952fa153c83cd79d30e67ff3c3c321246f7146cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/952fa153c83cd79d30e67ff3c3c321246f7146cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/952fa153c83cd79d30e67ff3c3c321246f7146cc"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "8913e38db5d0da272f51029ab814eaf6c2e7e1f3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c685de4a22030cd5bf773568dd7395d5b428ec3c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c685de4a22030cd5bf773568dd7395d5b428ec3c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c685de4a22030cd5bf773568dd7395d5b428ec3c", "patch": "@@ -1,3 +1,9 @@\n+2009-04-27  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/39928\n+\t* gimplify.c (gimplify_expr): If we are required to create\n+\ta temporary make sure it ends up as register.\n+\n 2009-04-27  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/39903"}, {"sha": "d886784895f0f36dbadb63ffaeb1dd93cef4fce9", "filename": "gcc/gimplify.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c685de4a22030cd5bf773568dd7395d5b428ec3c/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c685de4a22030cd5bf773568dd7395d5b428ec3c/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=c685de4a22030cd5bf773568dd7395d5b428ec3c", "patch": "@@ -7184,7 +7184,12 @@ gimplify_expr (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p,\n \t/* The postqueue might change the value of the expression between\n \t   the initialization and use of the temporary, so we can't use a\n \t   formal temp.  FIXME do we care?  */\n-\t*expr_p = get_initialized_tmp_var (*expr_p, pre_p, post_p);\n+\t{\n+\t  *expr_p = get_initialized_tmp_var (*expr_p, pre_p, post_p);\n+\t  if (TREE_CODE (TREE_TYPE (*expr_p)) == COMPLEX_TYPE\n+\t      || TREE_CODE (TREE_TYPE (*expr_p)) == VECTOR_TYPE)\n+\t    DECL_GIMPLE_REG_P (*expr_p) = 1;\n+\t}\n       else\n \t*expr_p = get_formal_tmp_var (*expr_p, pre_p);\n     }"}, {"sha": "79b0ea129fcd2196affacdd0edc3ffd091bdd8b7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c685de4a22030cd5bf773568dd7395d5b428ec3c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c685de4a22030cd5bf773568dd7395d5b428ec3c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c685de4a22030cd5bf773568dd7395d5b428ec3c", "patch": "@@ -1,3 +1,9 @@\n+2009-04-27  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/39928\n+\t* gcc.c-torture/compile/pr39928-1.c: New testcase.\n+\t* gcc.c-torture/compile/pr39928-2.c: Likewise.\n+\n 2009-04-27  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/39903"}, {"sha": "3bee4380e5b59ba8cba1140d2e9f264243e75b67", "filename": "gcc/testsuite/gcc.c-torture/compile/pr39928-1.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c685de4a22030cd5bf773568dd7395d5b428ec3c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39928-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c685de4a22030cd5bf773568dd7395d5b428ec3c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39928-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39928-1.c?ref=c685de4a22030cd5bf773568dd7395d5b428ec3c", "patch": "@@ -0,0 +1,8 @@\n+typedef float __m128 __attribute__ ((__vector_size__ (16), __may_alias__));\n+extern __m128 _mm_sub_ps (__m128 __A, __m128 __B);\n+extern __m128 _mm_mul_ps (__m128 __A, __m128 __B);\n+__m128\n+vq_nbest(const __m128 *codebook, __m128 d, __m128 in)\n+{\n+  return _mm_sub_ps(d, _mm_mul_ps(in, *codebook++));\n+}"}, {"sha": "6f0d30cc0d194576dd25eb6e81acdc0f42093967", "filename": "gcc/testsuite/gcc.c-torture/compile/pr39928-2.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c685de4a22030cd5bf773568dd7395d5b428ec3c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39928-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c685de4a22030cd5bf773568dd7395d5b428ec3c/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39928-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39928-2.c?ref=c685de4a22030cd5bf773568dd7395d5b428ec3c", "patch": "@@ -0,0 +1,8 @@\n+typedef _Complex float __m128;\n+extern __m128 _mm_sub_ps (__m128 __A, __m128 __B);\n+extern __m128 _mm_mul_ps (__m128 __A, __m128 __B);\n+__m128\n+vq_nbest(const __m128 *codebook, __m128 d, __m128 in)\n+{\n+  return _mm_sub_ps(d, _mm_mul_ps(in, *codebook++));\n+}"}]}