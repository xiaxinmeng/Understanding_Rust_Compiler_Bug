{"sha": "b00e4c238b56689ec1e81a647a0147bf9ff79306", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjAwZTRjMjM4YjU2Njg5ZWMxZTgxYTY0N2EwMTQ3YmY5ZmY3OTMwNg==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2004-11-03T18:56:35Z"}, "committer": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "2004-11-03T18:56:35Z"}, "message": "re PR tree-optimization/18270 (internal compiler error: in tree_redirect_edge_and_branch, at tree-cfg.c:4146)\n\n\n2004-11-03  Andrew MacLeod  <amacleod@redhat.com>\n\n\tPR tree-optimization/18270\n\t* tree-outof-ssa.c (analyze_edges_for_bb): If a block has any incoming\n\tabnormal edges, simply commit any pending stmts on all incoming edges.\n\nFrom-SVN: r90031", "tree": {"sha": "d5b2ead3bc25a2263a17eef69ace1e75f2503ab5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5b2ead3bc25a2263a17eef69ace1e75f2503ab5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b00e4c238b56689ec1e81a647a0147bf9ff79306", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b00e4c238b56689ec1e81a647a0147bf9ff79306", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b00e4c238b56689ec1e81a647a0147bf9ff79306", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b00e4c238b56689ec1e81a647a0147bf9ff79306/comments", "author": null, "committer": null, "parents": [{"sha": "a85a902471ec546f41cd2774c2a339354cc40a50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a85a902471ec546f41cd2774c2a339354cc40a50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a85a902471ec546f41cd2774c2a339354cc40a50"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "e8208f5cc6f2751965e684a9af19197ee14f54c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b00e4c238b56689ec1e81a647a0147bf9ff79306/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b00e4c238b56689ec1e81a647a0147bf9ff79306/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b00e4c238b56689ec1e81a647a0147bf9ff79306", "patch": "@@ -1,3 +1,9 @@\n+2004-11-03  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/18270\n+\t* tree-outof-ssa.c (analyze_edges_for_bb): If a block has incoming\n+\tabnormal edges, commit all pending stmts on incoming edges.\n+\n 2004-11-03  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* tree-ssa-loop-ivopts.c (get_address_cost): Offset zero does not"}, {"sha": "074ca5b28fa1fc36e4f5ccb84441fdf486715364", "filename": "gcc/tree-outof-ssa.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b00e4c238b56689ec1e81a647a0147bf9ff79306/gcc%2Ftree-outof-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b00e4c238b56689ec1e81a647a0147bf9ff79306/gcc%2Ftree-outof-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-outof-ssa.c?ref=b00e4c238b56689ec1e81a647a0147bf9ff79306", "patch": "@@ -2024,6 +2024,25 @@ analyze_edges_for_bb (basic_block bb, FILE *debug_file)\n   bool is_label;\n \n   count = 0;\n+\n+  /* Blocks which contain at least one abnormal edge cannot use \n+     make_forwarder_block.  Look for these blocks, and commit any PENDING_STMTs\n+     found on edges in these block.  */\n+  have_opportunity = true;\n+  FOR_EACH_EDGE (e, ei, bb->preds)\n+    if (e->flags & EDGE_ABNORMAL)\n+      {\n+        have_opportunity = false;\n+\tbreak;\n+      }\n+\n+  if (!have_opportunity)\n+    {\n+      FOR_EACH_EDGE (e, ei, bb->preds)\n+\tif (PENDING_STMT (e))\n+\t  bsi_commit_one_edge_insert (e, NULL);\n+      return false;\n+    }\n   /* Find out how many edges there are with interesting pending stmts on them.  \n      Commit the stmts on edges we are not interested in.  */\n   FOR_EACH_EDGE (e, ei, bb->preds)"}]}