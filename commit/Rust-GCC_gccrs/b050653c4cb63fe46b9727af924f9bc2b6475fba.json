{"sha": "b050653c4cb63fe46b9727af924f9bc2b6475fba", "node_id": "C_kwDOANBUbNoAKGIwNTA2NTNjNGNiNjNmZTQ2Yjk3MjdhZjkyNGY5YmMyYjY0NzVmYmE", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2021-10-08T14:53:42Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2021-11-01T15:52:28Z"}, "message": "contrib: add unicode/utf8-dump.py\n\nThis script may be useful when debugging issues relating to Unicode\nencoding (e.g. when investigating source files with bidirectional control\ncharacters).\n\nIt dumps a UTF-8 file as a list of numbered lines (mimicking GCC's\ndiagnostic output format), interleaved with lines per character showing\nthe Unicode codepoints, the UTF-8 encoding bytes, the name of the\ncharacter, and, where printable, the characters themselves.\nThe lines are printed in logical order, which may help the reader to grok\nthe relationship between visual and logical ordering in bi-di files.\n\nFor example:\n\n$ cat test.c\nint \u0f43;\nconst char *\u05d0\u05d1\u05d2 = \"ALEF-BET-GIMEL\";\n\n$ ./contrib/unicode/utf8-dump.py test.c\n   1 | int \u0f43;\n     |   U+0069            0x69                     LATIN SMALL LETTER I i\n     |   U+006E            0x6e                     LATIN SMALL LETTER N n\n     |   U+0074            0x74                     LATIN SMALL LETTER T t\n     |   U+0020            0x20                                    SPACE (separator)\n     |   U+0F43  0xe0 0xbd 0x83                       TIBETAN LETTER GHA \u0f43\n     |   U+003B            0x3b                                SEMICOLON ;\n     |   U+000A            0x0a                           LINE FEED (LF) (control character)\n   2 | const char *\u05d0\u05d1\u05d2 = \"ALEF-BET-GIMEL\";\n     |   U+0063            0x63                     LATIN SMALL LETTER C c\n     |   U+006F            0x6f                     LATIN SMALL LETTER O o\n     |   U+006E            0x6e                     LATIN SMALL LETTER N n\n     |   U+0073            0x73                     LATIN SMALL LETTER S s\n     |   U+0074            0x74                     LATIN SMALL LETTER T t\n     |   U+0020            0x20                                    SPACE (separator)\n     |   U+0063            0x63                     LATIN SMALL LETTER C c\n     |   U+0068            0x68                     LATIN SMALL LETTER H h\n     |   U+0061            0x61                     LATIN SMALL LETTER A a\n     |   U+0072            0x72                     LATIN SMALL LETTER R r\n     |   U+0020            0x20                                    SPACE (separator)\n     |   U+002A            0x2a                                 ASTERISK *\n     |   U+05D0       0xd7 0x90                       HEBREW LETTER ALEF \u05d0\n     |   U+05D1       0xd7 0x91                        HEBREW LETTER BET \u05d1\n     |   U+05D2       0xd7 0x92                      HEBREW LETTER GIMEL \u05d2\n     |   U+0020            0x20                                    SPACE (separator)\n     |   U+003D            0x3d                              EQUALS SIGN =\n     |   U+0020            0x20                                    SPACE (separator)\n     |   U+0022            0x22                           QUOTATION MARK \"\n     |   U+0041            0x41                   LATIN CAPITAL LETTER A A\n     |   U+004C            0x4c                   LATIN CAPITAL LETTER L L\n     |   U+0045            0x45                   LATIN CAPITAL LETTER E E\n     |   U+0046            0x46                   LATIN CAPITAL LETTER F F\n     |   U+002D            0x2d                             HYPHEN-MINUS -\n     |   U+0042            0x42                   LATIN CAPITAL LETTER B B\n     |   U+0045            0x45                   LATIN CAPITAL LETTER E E\n     |   U+0054            0x54                   LATIN CAPITAL LETTER T T\n     |   U+002D            0x2d                             HYPHEN-MINUS -\n     |   U+0047            0x47                   LATIN CAPITAL LETTER G G\n     |   U+0049            0x49                   LATIN CAPITAL LETTER I I\n     |   U+004D            0x4d                   LATIN CAPITAL LETTER M M\n     |   U+0045            0x45                   LATIN CAPITAL LETTER E E\n     |   U+004C            0x4c                   LATIN CAPITAL LETTER L L\n     |   U+0022            0x22                           QUOTATION MARK \"\n     |   U+003B            0x3b                                SEMICOLON ;\n     |   U+000A            0x0a                           LINE FEED (LF) (control character)\n\nTested with Python 3.8\n\ncontrib/ChangeLog:\n\t* unicode/utf8-dump.py: New file.\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "483cf51829392380b442fd9c9de5fa29f41bd766", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/483cf51829392380b442fd9c9de5fa29f41bd766"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b050653c4cb63fe46b9727af924f9bc2b6475fba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b050653c4cb63fe46b9727af924f9bc2b6475fba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b050653c4cb63fe46b9727af924f9bc2b6475fba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b050653c4cb63fe46b9727af924f9bc2b6475fba/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "429e3b7d8bf6609ddf7c7b1e49244997e9ac76b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/429e3b7d8bf6609ddf7c7b1e49244997e9ac76b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/429e3b7d8bf6609ddf7c7b1e49244997e9ac76b8"}], "stats": {"total": 69, "additions": 69, "deletions": 0}, "files": [{"sha": "f12ee79f9f28d90b7893d3e9046972ab330cb612", "filename": "contrib/unicode/utf8-dump.py", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b050653c4cb63fe46b9727af924f9bc2b6475fba/contrib%2Funicode%2Futf8-dump.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b050653c4cb63fe46b9727af924f9bc2b6475fba/contrib%2Funicode%2Futf8-dump.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Funicode%2Futf8-dump.py?ref=b050653c4cb63fe46b9727af924f9bc2b6475fba", "patch": "@@ -0,0 +1,69 @@\n+#!/usr/bin/env python3\n+#\n+# Script to dump a UTF-8 file as a list of numbered lines (mimicking GCC's\n+# diagnostic output format), interleaved with lines per character showing\n+# the Unicode codepoints, the UTF-8 encoding bytes, the name of the\n+# character, and, where printable, the characters themselves.\n+# The lines are printed in logical order, which may help the reader to grok\n+# the relationship between visual and logical ordering in bi-di files.\n+#\n+# SPDX-License-Identifier: MIT\n+#\n+# Copyright (C) 2021 David Malcolm <dmalcolm@redhat.com>.\n+#\n+# Permission is hereby granted, free of charge, to any person obtaining a\n+# copy of this software and associated documentation files (the \"Software\"),\n+# to deal in the Software without restriction, including without limitation\n+# the rights to use, copy, modify, merge, publish, distribute, sublicense,\n+# and/or sell copies of the Software, and to permit persons to whom the\n+# Software is furnished to do so, subject to the following conditions:\n+#\n+# The above copyright notice and this permission notice shall be included\n+# in all copies or substantial portions of the Software.\n+#\n+# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n+# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT\n+# OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n+# OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n+\n+import sys\n+import unicodedata\n+\n+\n+def get_name(ch):\n+    try:\n+        return unicodedata.name(ch)\n+    except ValueError:\n+        if ch == '\\n':\n+            return 'LINE FEED (LF)'\n+        return '(unknown)'\n+\n+\n+def get_printable(ch):\n+    cat = unicodedata.category(ch)\n+    if cat == 'Cc':\n+        return '(control character)'\n+    elif cat == 'Cf':\n+        return '(format control)'\n+    elif cat[0] == 'Z':\n+        return '(separator)'\n+    return ch\n+\n+\n+def dump_file(f_in):\n+    line_num = 1\n+    for line in f_in:\n+        print('%4i | %s' % (line_num, line.rstrip()))\n+        for ch in line:\n+            utf8_desc = '%15s' % (' '.join(['0x%02x' % b\n+                                            for b in ch.encode('utf-8')]))\n+            print('%4s |   U+%04X %s %40s %s'\n+                  % ('', ord(ch), utf8_desc, get_name(ch), get_printable(ch)))\n+        line_num += 1\n+\n+\n+with open(sys.argv[1], mode='r') as f_in:\n+    dump_file(f_in)"}]}