{"sha": "4a62494df2d37fc03d1778fd69064dc6cd2dc0b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE2MjQ5NGRmMmQzN2ZjMDNkMTc3OGZkNjkwNjRkYzZjZDJkYzBiOQ==", "commit": {"author": {"name": "Jing Yu", "email": "jingyu@google.com", "date": "2010-01-15T21:54:01Z"}, "committer": {"name": "Jing Yu", "email": "jingyu@gcc.gnu.org", "date": "2010-01-15T21:54:01Z"}, "message": "re PR rtl-optimization/42691 (problematic REG_EQUAL note added to SUBREG)\n\n2010-01-15  Jing Yu  <jingyu@google.com>\n\n\tPR rtl-optimization/42691\n        * combine.c (try_combine): Set changed_i3_dest to 1 when I2 and I3 set\n\ta pseudo to a constant and are merged, and adjust comments.\n\n2010-01-15  Jing Yu  <jingyu@google.com>\n\n\tPR rtl-optimization/42691\n\t* gcc.c-torture/execute/pr42691.c: New.\n\nFrom-SVN: r155948", "tree": {"sha": "58ebeac6f70fabacbde6abba8c1de445738f945e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58ebeac6f70fabacbde6abba8c1de445738f945e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a62494df2d37fc03d1778fd69064dc6cd2dc0b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a62494df2d37fc03d1778fd69064dc6cd2dc0b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a62494df2d37fc03d1778fd69064dc6cd2dc0b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a62494df2d37fc03d1778fd69064dc6cd2dc0b9/comments", "author": null, "committer": null, "parents": [{"sha": "5a869057b49f37060b718042d5131e4f8d2da802", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a869057b49f37060b718042d5131e4f8d2da802", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a869057b49f37060b718042d5131e4f8d2da802"}], "stats": {"total": 60, "additions": 58, "deletions": 2}, "files": [{"sha": "f1f6e5ca7f242fbe359044c8f853a37a576e81ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a62494df2d37fc03d1778fd69064dc6cd2dc0b9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a62494df2d37fc03d1778fd69064dc6cd2dc0b9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4a62494df2d37fc03d1778fd69064dc6cd2dc0b9", "patch": "@@ -1,3 +1,9 @@\n+2010-01-15  Jing Yu  <jingyu@google.com>\n+\n+\tPR rtl-optimization/42691\n+\t* combine.c (try_combine): Set changed_i3_dest to 1 when I2 and I3 set\n+\ta pseudo to a constant and are merged, and adjust comments.\n+\n 2010-01-15  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/i386/sse.md (avx_vperm2f128<mode>3): Fix typo."}, {"sha": "e5d4c5aafc2944f854bf8326b87c665feb512359", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a62494df2d37fc03d1778fd69064dc6cd2dc0b9/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a62494df2d37fc03d1778fd69064dc6cd2dc0b9/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=4a62494df2d37fc03d1778fd69064dc6cd2dc0b9", "patch": "@@ -2663,10 +2663,16 @@ try_combine (rtx i3, rtx i2, rtx i1, int *new_direct_jump_p)\n \t  i2dest = SET_DEST (temp);\n \t  i2dest_killed = dead_or_set_p (i2, i2dest);\n \n+\t  /* Replace the source in I2 with the new constant and make the\n+\t     resulting insn the new pattern for I3.  Then skip to where we\n+\t     validate the pattern.  Everything was set up above.  */\n \t  SUBST (SET_SRC (temp),\n \t\t immed_double_const (olo, ohi, GET_MODE (SET_DEST (temp))));\n \n \t  newpat = PATTERN (i2);\n+\n+          /* The dest of I3 has been replaced with the dest of I2.  */\n+          changed_i3_dest = 1;\n \t  goto validate_replacement;\n \t}\n     }\n@@ -3038,8 +3044,6 @@ try_combine (rtx i3, rtx i2, rtx i1, int *new_direct_jump_p)\n \t}\n     }\n \n-  /* We come here when we are replacing a destination in I2 with the\n-     destination of I3.  */\n  validate_replacement:\n \n   /* Note which hard regs this insn has as inputs.  */"}, {"sha": "89469ada88f74c40044d20870f5f3ed6eab5995e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a62494df2d37fc03d1778fd69064dc6cd2dc0b9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a62494df2d37fc03d1778fd69064dc6cd2dc0b9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4a62494df2d37fc03d1778fd69064dc6cd2dc0b9", "patch": "@@ -1,3 +1,8 @@\n+2010-01-15  Jing Yu  <jingyu@google.com>\n+\n+\tPR rtl-optimization/42691\n+\t* gcc.c-torture/execute/pr42691.c: New.\n+\n 2010-01-15  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/42739"}, {"sha": "7eeee99ec2f5103e8179b68b4c5c3d20a6df314f", "filename": "gcc/testsuite/gcc.c-torture/execute/pr42691.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a62494df2d37fc03d1778fd69064dc6cd2dc0b9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr42691.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a62494df2d37fc03d1778fd69064dc6cd2dc0b9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr42691.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr42691.c?ref=4a62494df2d37fc03d1778fd69064dc6cd2dc0b9", "patch": "@@ -0,0 +1,41 @@\n+extern void abort (void);\n+\n+union _D_rep\n+{\n+  unsigned short rep[4];\n+  double val;\n+};\n+\n+int add(double* key, double* table)\n+{\n+  unsigned i = 0;\n+  double* deletedEntry = 0;\n+  while (1) {\n+    double* entry = table + i;\n+\n+    if (*entry == *key)\n+      break;\n+\n+    union _D_rep _D_inf = {{ 0, 0, 0, 0x7ff0 }};\n+    if (*entry != _D_inf.val)\n+      abort ();\n+\n+    union _D_rep _D_inf2 = {{ 0, 0, 0, 0x7ff0 }};\n+    if (!_D_inf2.val)\n+      deletedEntry = entry;\n+\n+    i++;\n+  }\n+  if (deletedEntry)\n+    *deletedEntry = 0.0;\n+  return 0;\n+}\n+\n+int main ()\n+{\n+  union _D_rep infinit = {{ 0, 0, 0, 0x7ff0 }};\n+  double table[2] = { infinit.val, 23 };\n+  double key = 23;\n+  int ret = add (&key, table);\n+  return ret;\n+}"}]}