{"sha": "a4fa02d1b707a31c6d5e5508a9f2c7f0abdbb5ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRmYTAyZDFiNzA3YTMxYzZkNWU1NTA4YTlmMmM3ZjBhYmRiYjVlYQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-06-12T11:09:50Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-06-12T11:09:50Z"}, "message": "data-streamer.h (streamer_write_char_stream): CSE obs->current_pointer.\n\n2013-06-12  Richard Biener  <rguenther@suse.de>\n\n\t* data-streamer.h (streamer_write_char_stream): CSE\n\tobs->current_pointer.\n\t* data-streamer-out.c (streamer_write_uhwi_stream): Inline\n\tstreamer_write_char_stream manually and optimize the resulting loop.\n\t(streamer_write_hwi_stream): Likewise.\n\nFrom-SVN: r199992", "tree": {"sha": "5d0ac2b598eae02f929f24f72597e3783e98c0ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d0ac2b598eae02f929f24f72597e3783e98c0ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4fa02d1b707a31c6d5e5508a9f2c7f0abdbb5ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4fa02d1b707a31c6d5e5508a9f2c7f0abdbb5ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4fa02d1b707a31c6d5e5508a9f2c7f0abdbb5ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4fa02d1b707a31c6d5e5508a9f2c7f0abdbb5ea/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bbf9ad070dd1acea0c60aa531a738c8fc8d410d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbf9ad070dd1acea0c60aa531a738c8fc8d410d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbf9ad070dd1acea0c60aa531a738c8fc8d410d5"}], "stats": {"total": 104, "additions": 89, "deletions": 15}, "files": [{"sha": "25d746afa6c7d8a2c5c68c6f39a3458b8a6ae70e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4fa02d1b707a31c6d5e5508a9f2c7f0abdbb5ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4fa02d1b707a31c6d5e5508a9f2c7f0abdbb5ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a4fa02d1b707a31c6d5e5508a9f2c7f0abdbb5ea", "patch": "@@ -1,3 +1,11 @@\n+2013-06-12  Richard Biener  <rguenther@suse.de>\n+\n+\t* data-streamer.h (streamer_write_char_stream): CSE\n+\tobs->current_pointer.\n+\t* data-streamer-out.c (streamer_write_uhwi_stream): Inline\n+\tstreamer_write_char_stream manually and optimize the resulting loop.\n+\t(streamer_write_hwi_stream): Likewise.\n+\n 2013-06-12  Jan Hubicka  <jh@suse.cz>\n \n \t* lto-symtab.c (lto_symtab_merge_symbols): Populate symtab hashtable."}, {"sha": "247ff636e49214edb8da69dea305aa4f7bdd4a15", "filename": "gcc/data-streamer-out.c", "status": "modified", "additions": 78, "deletions": 13, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4fa02d1b707a31c6d5e5508a9f2c7f0abdbb5ea/gcc%2Fdata-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4fa02d1b707a31c6d5e5508a9f2c7f0abdbb5ea/gcc%2Fdata-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdata-streamer-out.c?ref=a4fa02d1b707a31c6d5e5508a9f2c7f0abdbb5ea", "patch": "@@ -187,6 +187,11 @@ void\n streamer_write_uhwi_stream (struct lto_output_stream *obs,\n                             unsigned HOST_WIDE_INT work)\n {\n+  if (obs->left_in_block == 0)\n+    lto_append_block (obs);\n+  char *current_pointer = obs->current_pointer;\n+  unsigned int left_in_block = obs->left_in_block;\n+  unsigned int size = 0;\n   do\n     {\n       unsigned int byte = (work & 0x7f);\n@@ -195,9 +200,34 @@ streamer_write_uhwi_stream (struct lto_output_stream *obs,\n \t/* More bytes to follow.  */\n \tbyte |= 0x80;\n \n-      streamer_write_char_stream (obs, byte);\n+      *(current_pointer++) = byte;\n+      left_in_block--;\n+      size++;\n     }\n-  while (work != 0);\n+  while (work != 0 && left_in_block > 0);\n+  if (work != 0)\n+    {\n+      obs->left_in_block = 0;\n+      lto_append_block (obs);\n+      current_pointer = obs->current_pointer;\n+      left_in_block = obs->left_in_block;\n+      do\n+\t{\n+\t  unsigned int byte = (work & 0x7f);\n+\t  work >>= 7;\n+\t  if (work != 0)\n+\t    /* More bytes to follow.  */\n+\t    byte |= 0x80;\n+\n+\t  *(current_pointer++) = byte;\n+\t  left_in_block--;\n+\t  size++;\n+\t}\n+      while (work != 0);\n+    }\n+  obs->current_pointer = current_pointer;\n+  obs->left_in_block = left_in_block;\n+  obs->total_size += size;\n }\n \n \n@@ -206,21 +236,56 @@ streamer_write_uhwi_stream (struct lto_output_stream *obs,\n void\n streamer_write_hwi_stream (struct lto_output_stream *obs, HOST_WIDE_INT work)\n {\n-  int more, byte;\n-\n+  if (obs->left_in_block == 0)\n+    lto_append_block (obs);\n+  char *current_pointer = obs->current_pointer;\n+  unsigned int left_in_block = obs->left_in_block;\n+  unsigned int size = 0;\n+  bool more;\n   do\n     {\n-      byte = (work & 0x7f);\n-      /* arithmetic shift */\n-      work >>= 7;\n-      more = !((work == 0 && (byte & 0x40) == 0)\n-\t       || (work == -1 && (byte & 0x40) != 0));\n+      unsigned int byte = (work & 0x7f);\n+      /* If the lower 7-bits are sign-extended 0 or -1 we are finished.  */\n+      work >>= 6;\n+      more = !(work == 0 || work == -1);\n       if (more)\n-\tbyte |= 0x80;\n-\n-      streamer_write_char_stream (obs, byte);\n+\t{\n+\t  /* More bits to follow.  */\n+\t  work >>= 1;\n+\t  byte |= 0x80;\n+\t}\n+\n+      *(current_pointer++) = byte;\n+      left_in_block--;\n+      size++;\n+    }\n+  while (more && left_in_block > 0);\n+  if (more)\n+    {\n+      obs->left_in_block = 0;\n+      lto_append_block (obs);\n+      current_pointer = obs->current_pointer;\n+      left_in_block = obs->left_in_block;\n+      do\n+\t{\n+\t  unsigned int byte = (work & 0x7f);\n+\t  work >>= 6;\n+\t  more = !(work == 0 || work == -1);\n+\t  if (more)\n+\t    {\n+\t      work >>= 1;\n+\t      byte |= 0x80;\n+\t    }\n+\n+\t  *(current_pointer++) = byte;\n+\t  left_in_block--;\n+\t  size++;\n+\t}\n+      while (more);\n     }\n-  while (more);\n+  obs->current_pointer = current_pointer;\n+  obs->left_in_block = left_in_block;\n+  obs->total_size += size;\n }\n \n /* Write a GCOV counter value WORK to OBS.  */"}, {"sha": "c18779ba30ab1368ec2fc6b3f921ea43daa9710d", "filename": "gcc/data-streamer.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4fa02d1b707a31c6d5e5508a9f2c7f0abdbb5ea/gcc%2Fdata-streamer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4fa02d1b707a31c6d5e5508a9f2c7f0abdbb5ea/gcc%2Fdata-streamer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdata-streamer.h?ref=a4fa02d1b707a31c6d5e5508a9f2c7f0abdbb5ea", "patch": "@@ -183,8 +183,9 @@ streamer_write_char_stream (struct lto_output_stream *obs, char c)\n     lto_append_block (obs);\n \n   /* Write the actual character.  */\n-  *obs->current_pointer = c;\n-  obs->current_pointer++;\n+  char *current_pointer = obs->current_pointer;\n+  *(current_pointer++) = c;\n+  obs->current_pointer = current_pointer;\n   obs->total_size++;\n   obs->left_in_block--;\n }"}]}