{"sha": "f68211cd04d4083f4c12542f1b56ac09e995f9fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY4MjExY2QwNGQ0MDgzZjRjMTI1NDJmMWI1NmFjMDllOTk1ZjlmZA==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2009-01-19T17:17:14Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2009-01-19T17:17:14Z"}, "message": "re PR c/38869 (valgrind find problem with -O -mtune=generic)\n\n2009-01-19  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR c/38869\n\t* rtl.h (reinit_regs): New prototype.\n\t* regclass.c: Include ira.h.\n\t(reinit_regs): New.\n\t* Makefile.in (regclass.o): Add ira.h.\n\t* config/i386/i386.c (ix86_maybe_switch_abi): Use reinit_regs.\n\nFrom-SVN: r143498", "tree": {"sha": "636c6c6ae7b7900c93b28174728969e1fb0ea8bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/636c6c6ae7b7900c93b28174728969e1fb0ea8bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f68211cd04d4083f4c12542f1b56ac09e995f9fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f68211cd04d4083f4c12542f1b56ac09e995f9fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f68211cd04d4083f4c12542f1b56ac09e995f9fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f68211cd04d4083f4c12542f1b56ac09e995f9fd/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "be12c33aa43aa2fe86886f4c9e4bb288e7ca7678", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be12c33aa43aa2fe86886f4c9e4bb288e7ca7678", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be12c33aa43aa2fe86886f4c9e4bb288e7ca7678"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "c36c6122fd4a9631c900dfdcf27b74c73030e2a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f68211cd04d4083f4c12542f1b56ac09e995f9fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f68211cd04d4083f4c12542f1b56ac09e995f9fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f68211cd04d4083f4c12542f1b56ac09e995f9fd", "patch": "@@ -1,3 +1,12 @@\n+2009-01-19  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR c/38869\n+\t* rtl.h (reinit_regs): New prototype.\n+\t* regclass.c: Include ira.h.\n+\t(reinit_regs): New.\n+\t* Makefile.in (regclass.o): Add ira.h.\n+\t* config/i386/i386.c (ix86_maybe_switch_abi): Use reinit_regs.\n+\n 2009-01-18  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/38736"}, {"sha": "595366812eac8a8d9f12f432a0b5a51d41aa62b2", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f68211cd04d4083f4c12542f1b56ac09e995f9fd/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f68211cd04d4083f4c12542f1b56ac09e995f9fd/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=f68211cd04d4083f4c12542f1b56ac09e995f9fd", "patch": "@@ -2848,7 +2848,7 @@ regclass.o : regclass.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n    hard-reg-set.h $(FLAGS_H) $(BASIC_BLOCK_H) addresses.h $(REGS_H) insn-config.h \\\n    $(RECOG_H) reload.h $(REAL_H) $(TOPLEV_H) $(FUNCTION_H) output.h $(GGC_H) \\\n    $(TM_P_H) $(EXPR_H) $(TIMEVAR_H) gt-regclass.h $(HASHTAB_H) \\\n-   $(TARGET_H) tree-pass.h $(DF_H)\n+   $(TARGET_H) tree-pass.h $(DF_H) ira.h\n local-alloc.o : local-alloc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(RTL_H) $(FLAGS_H) $(REGS_H) hard-reg-set.h insn-config.h $(RECOG_H) \\\n    output.h $(FUNCTION_H) $(INSN_ATTR_H) $(TOPLEV_H)  except.h reload.h $(TM_P_H) \\"}, {"sha": "d7e56bdd96d5ac74e13ca5a73475105e62f09b88", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f68211cd04d4083f4c12542f1b56ac09e995f9fd/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f68211cd04d4083f4c12542f1b56ac09e995f9fd/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=f68211cd04d4083f4c12542f1b56ac09e995f9fd", "patch": "@@ -4624,7 +4624,7 @@ ix86_maybe_switch_abi (void)\n {\n   if (TARGET_64BIT &&\n       call_used_regs[4 /*RSI*/] ==  (cfun->machine->call_abi == MS_ABI))\n-    init_regs ();\n+    reinit_regs ();\n }\n \n /* Initialize a variable CUM of type CUMULATIVE_ARGS"}, {"sha": "2f665d874a3a5d3068dade460e81d952ba8b7197", "filename": "gcc/regclass.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f68211cd04d4083f4c12542f1b56ac09e995f9fd/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f68211cd04d4083f4c12542f1b56ac09e995f9fd/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=f68211cd04d4083f4c12542f1b56ac09e995f9fd", "patch": "@@ -49,6 +49,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target.h\"\n #include \"tree-pass.h\"\n #include \"df.h\"\n+#include \"ira.h\"\n \n /* Maximum register number used in this function, plus one.  */\n \n@@ -740,6 +741,17 @@ init_regs (void)\n   init_reg_autoinc ();\n }\n \n+/* The same as previous function plus initializing IRA if it is\n+   necessary.  */\n+void\n+reinit_regs (void)\n+{\n+  init_regs ();\n+\n+  if (flag_ira)\n+    ira_init ();\n+}\n+\n /* Initialize some fake stack-frame MEM references for use in\n    memory_move_secondary_cost.  */\n "}, {"sha": "5394ea6f6e21bd832f7d499162f0226454caf779", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f68211cd04d4083f4c12542f1b56ac09e995f9fd/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f68211cd04d4083f4c12542f1b56ac09e995f9fd/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=f68211cd04d4083f4c12542f1b56ac09e995f9fd", "patch": "@@ -2230,6 +2230,7 @@ extern int reg_class_subset_p (enum reg_class, enum reg_class);\n extern void globalize_reg (int);\n extern void init_reg_modes_target (void);\n extern void init_regs (void);\n+extern void reinit_regs (void);\n extern void init_fake_stack_mems (void);\n extern void save_register_info (void);\n extern void init_reg_sets (void);"}]}