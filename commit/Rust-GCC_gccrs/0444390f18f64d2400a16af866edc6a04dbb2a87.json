{"sha": "0444390f18f64d2400a16af866edc6a04dbb2a87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ0NDM5MGYxOGY2NGQyNDAwYTE2YWY4NjZlZGM2YTA0ZGJiMmE4Nw==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2006-02-08T12:26:25Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2006-02-08T12:26:25Z"}, "message": "scanrtl.exp: New.\n\n2006-02-08  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* lib/scanrtl.exp: New.\n\nFrom-SVN: r110754", "tree": {"sha": "2bcbc5b0ff4a4bfa9aaa8da7b5c787a7759a1a9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bcbc5b0ff4a4bfa9aaa8da7b5c787a7759a1a9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0444390f18f64d2400a16af866edc6a04dbb2a87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0444390f18f64d2400a16af866edc6a04dbb2a87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0444390f18f64d2400a16af866edc6a04dbb2a87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0444390f18f64d2400a16af866edc6a04dbb2a87/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "af02935e3ce18008c41de6cceb56a3210087e061", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af02935e3ce18008c41de6cceb56a3210087e061", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af02935e3ce18008c41de6cceb56a3210087e061"}], "stats": {"total": 146, "additions": 145, "deletions": 1}, "files": [{"sha": "927627543b9b3be37eb660c021da7cf4bf3a5f19", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0444390f18f64d2400a16af866edc6a04dbb2a87/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0444390f18f64d2400a16af866edc6a04dbb2a87/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0444390f18f64d2400a16af866edc6a04dbb2a87", "patch": "@@ -6,6 +6,10 @@\n \tPR c++/26070\n \t* g++.dg/other/virtual1.C: New test.\n \n+2006-02-08  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* lib/scanrtl.exp: New.\n+\n 2006-02-08  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* lib/gcc-dg.exp (cleanup-rtl-dump, cleanup-tree-dump,\n@@ -15,7 +19,6 @@\n \t* lib/scanipa.exp (scan-ipa-dump, scan-ipa-dump-times,\n \tscan-ipa-dump-not, scan-ipa-dump-dem): Likewise.\n \n-\t* lib/scanrtl.exp: New.\n \t* lib/gcc-dg.exp: Load it.\n \t* objc.dg/stubify-2.m: Use scan-rtl-dump-not.\n "}, {"sha": "fb89f1b90ef52130a7e9889bf8c9e422a8beb512", "filename": "gcc/testsuite/lib/scanrtl.exp", "status": "added", "additions": 141, "deletions": 0, "changes": 141, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0444390f18f64d2400a16af866edc6a04dbb2a87/gcc%2Ftestsuite%2Flib%2Fscanrtl.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0444390f18f64d2400a16af866edc6a04dbb2a87/gcc%2Ftestsuite%2Flib%2Fscanrtl.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fscanrtl.exp?ref=0444390f18f64d2400a16af866edc6a04dbb2a87", "patch": "@@ -0,0 +1,141 @@\n+#   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2 of the License, or\n+# (at your option) any later version.\n+# \n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.  \n+\n+# Various utilities for scanning rtl dump output, used by gcc-dg.exp and\n+# g++-dg.exp.\n+\n+load_lib scandump.exp\n+\n+# Utility for scanning compiler result, invoked via dg-final.\n+# Call pass if pattern is present, otherwise fail.\n+#\n+# Argument 0 is the regexp to match\n+# Argument 1 is the name of the dumped rtl pass\n+# Argument 2 handles expected failures and the like\n+proc scan-rtl-dump { args } {\n+\n+    if { [llength $args] < 2 } {\n+\terror \"scan-rtl-dump: too few arguments\"\n+\treturn\n+    }\n+    if { [llength $args] > 3 } {\n+\terror \"scan-rtl-dump: too many arguments\"\n+\treturn\n+    }\n+    if { [llength $args] >= 3 } {\n+\tscan-dump \"rtl\" [lindex $args 0] \"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 1]\" [lindex $args 2]\n+    } else {\n+\tscan-dump \"rtl\" [lindex $args 0] \"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 1]\"\n+    }\n+}\n+\n+# Call pass if pattern is present given number of times, otherwise fail.\n+# Argument 0 is the regexp to match\n+# Argument 1 is number of times the regexp must be found\n+# Argument 2 is the name of the dumped rtl pass\n+# Argument 3 handles expected failures and the like\n+proc scan-rtl-dump-times { args } {\n+\n+    if { [llength $args] < 3 } {\n+\terror \"scan-rtl-dump: too few arguments\"\n+\treturn\n+    }\n+    if { [llength $args] > 4 } {\n+\terror \"scan-rtl-dump: too many arguments\"\n+\treturn\n+    }\n+    if { [llength $args] >= 4 } {\n+\tscan-dump-times \"rtl\" [lindex $args 0] [lindex $args 1] \\\n+\t\t\t\"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 2]\" [lindex $args 3]\n+    } else {\n+\tscan-dump-times \"rtl\" [lindex $args 0] [lindex $args 1] \\\n+\t\t\t\"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 2]\"\n+    }\n+}\n+\n+# Call pass if pattern is not present, otherwise fail.\n+#\n+# Argument 0 is the regexp to match\n+# Argument 1 is the name of the dumped rtl pass\n+# Argument 2 handles expected failures and the like\n+proc scan-rtl-dump-not { args } {\n+\n+    if { [llength $args] < 2 } {\n+\terror \"scan-rtl-dump-not: too few arguments\"\n+\treturn\n+    }\n+    if { [llength $args] > 3 } {\n+\terror \"scan-rtl-dump-not: too many arguments\"\n+\treturn\n+    }\n+    if { [llength $args] >= 3 } {\n+\tscan-dump-not \"rtl\" [lindex $args 0] \\\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 1]\" [lindex $args 2]\n+    } else {\n+\tscan-dump-not \"rtl\" [lindex $args 0] \\\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 1]\"\n+    }\n+}\n+\n+# Utility for scanning demangled compiler result, invoked via dg-final.\n+# Call pass if pattern is present, otherwise fail.\n+#\n+# Argument 0 is the regexp to match\n+# Argument 1 is the name of the dumped rtl pass\n+# Argument 2 handles expected failures and the like\n+proc scan-rtl-dump-dem { args } {\n+\n+    if { [llength $args] < 2 } {\n+\terror \"scan-rtl-dump-dem: too few arguments\"\n+\treturn\n+    }\n+    if { [llength $args] > 3 } {\n+\terror \"scan-rtl-dump-dem: too many arguments\"\n+\treturn\n+    }\n+    if { [llength $args] >= 3 } {\n+\tscan-dump-dem \"rtl\" [lindex $args 0] \\\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 1]\" [lindex $args 2]\n+    } else {\n+\tscan-dump-dem \"rtl\" [lindex $args 0] \\\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 1]\"\n+    }\n+}\n+\n+# Call pass if demangled pattern is not present, otherwise fail.\n+#\n+# Argument 0 is the regexp to match\n+# Argument 1 is the name of the dumped rtl pass\n+# Argument 2 handles expected failures and the like\n+proc scan-rtl-dump-dem-not { args } {\n+\n+    if { [llength $args] < 2 } {\n+\terror \"scan-rtl-dump-dem-not: too few arguments\"\n+\treturn\n+    }\n+    if { [llength $args] > 3 } {\n+\terror \"scan-rtl-dump-dem-not: too many arguments\"\n+\treturn\n+    }\n+    if { [llength $args] >= 3 } {\n+\tscan-dump-dem-not \"rtl\" [lindex $args 0] \\\n+\t\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 1]\" \\\n+\t\t\t  [lindex $args 2]\n+    } else {\n+\tscan-dump-dem-not \"rtl\" [lindex $args 0] \\\n+\t\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]r.[lindex $args 1]\"\n+    }\n+}"}]}