{"sha": "a9992f7f6b00e697f46913fdf809366522118b6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk5OTJmN2Y2YjAwZTY5N2Y0NjkxM2ZkZjgwOTM2NjUyMjExOGI2Yg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-11-02T18:25:55Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-11-02T18:25:55Z"}, "message": "syntax_option_type.cc: Avoid -Wall warnings.\n\n2010-11-02  Paolo Carlini  <paolo.carlini@oracle.com\n\n\t* testsuite/28_regex/05_constants/syntax_option_type.cc: Avoid\n\t-Wall warnings.\n\t* testsuite/28_regex/08_basic_regex/requirements/constexpr_data.cc:\n\tLikewise.\n\t* testsuite/18_support/numeric_limits/requirements/\n\tconstexpr_functions.cc: Likewise.\n\t* testsuite/18_support/numeric_limits/requirements/\n\tconstexpr_data.cc: Likewise.\n\t* testsuite/21_strings/char_traits/requirements/\n\tconstexpr_functions.cc: Likewise.\n\t* testsuite/26_numerics/random/independent_bits_engine/requirements/\n\tconstexpr_functions.cc: Likewise.\n\t* testsuite/26_numerics/random/subtract_with_carry_engine/\n\trequirements/constexpr_functions.cc: Likewise.\n\t* testsuite/26_numerics/random/subtract_with_carry_engine/\n\trequirements/constexpr_data.cc: Likewise.\n\t* testsuite/26_numerics/random/discard_block_engine/requirements/\n\tconstexpr_functions.cc: Likewise.\n\t* testsuite/26_numerics/random/discard_block_engine/requirements/\n\tconstexpr_data.cc: Likewise.\n\t* testsuite/26_numerics/random/mersenne_twister_engine/\n\trequirements/constexpr_functions.cc: Likewise.\n\t* testsuite/26_numerics/random/mersenne_twister_engine/\n\trequirements/constexpr_data.cc: Likewise.\n\t* testsuite/26_numerics/random/linear_congruential_engine/\n\trequirements/constexpr_functions.cc: Likewise.\n\t* testsuite/26_numerics/random/linear_congruential_engine/\n\trequirements/constexpr_data.cc: Likewise.\n\t* testsuite/26_numerics/random/shuffle_order_engine/\n\trequirements/constexpr_functions.cc: Likewise.\n\t* testsuite/26_numerics/random/shuffle_order_engine/\n\trequirements/constexpr_data.cc: Likewise.\n\t* testsuite/26_numerics/complex/requirements/\n\tconstexpr_functions.cc: Likewise.\n\t* testsuite/23_containers/bitset/requirements/\n\tconstexpr_functions.cc: Likewise.\n\t* testsuite/23_containers/array/requirements/\n\tconstexpr_functions.cc: Likewise.\n\t* testsuite/util/testsuite_common_types.h: Likewise.\n\t* testsuite/20_util/duration/requirements/\n\tconstexpr_functions.cc: Likewise.\n\t* testsuite/20_util/duration_cast/constexpr.cc: Likewise.\n\t* testsuite/20_util/time_point/requirements/\n\tconstexpr_functions.cc: Likewise.\n\t* testsuite/20_util/ratio/requirements/constexpr_data.cc: Likewise.\n\n\t* testsuite/tr1/4_metaprogramming/integral_constant/\n\trequirements/constexpr_data.cc: Remove.\n\nFrom-SVN: r166210", "tree": {"sha": "c567f332ba859694781753c90bac55a5ab87b548", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c567f332ba859694781753c90bac55a5ab87b548"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9992f7f6b00e697f46913fdf809366522118b6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9992f7f6b00e697f46913fdf809366522118b6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9992f7f6b00e697f46913fdf809366522118b6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9992f7f6b00e697f46913fdf809366522118b6b/comments", "author": null, "committer": null, "parents": [{"sha": "21736ec2f7bec064bdc87f81bb3e2e2f5bdf90c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21736ec2f7bec064bdc87f81bb3e2e2f5bdf90c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21736ec2f7bec064bdc87f81bb3e2e2f5bdf90c9"}], "stats": {"total": 427, "additions": 262, "deletions": 165}, "files": [{"sha": "4fb6895844fb2bcf3bc9c9b55657eecb18665100", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a9992f7f6b00e697f46913fdf809366522118b6b", "patch": "@@ -1,3 +1,54 @@\n+2010-11-02  Paolo Carlini  <paolo.carlini@oracle.com\n+\n+\t* testsuite/28_regex/05_constants/syntax_option_type.cc: Avoid\n+\t-Wall warnings.\n+\t* testsuite/28_regex/08_basic_regex/requirements/constexpr_data.cc:\n+\tLikewise.\n+\t* testsuite/18_support/numeric_limits/requirements/\n+\tconstexpr_functions.cc: Likewise.\n+\t* testsuite/18_support/numeric_limits/requirements/\n+\tconstexpr_data.cc: Likewise.\n+\t* testsuite/21_strings/char_traits/requirements/\n+\tconstexpr_functions.cc: Likewise.\n+\t* testsuite/26_numerics/random/independent_bits_engine/requirements/\n+\tconstexpr_functions.cc: Likewise.\n+\t* testsuite/26_numerics/random/subtract_with_carry_engine/\n+\trequirements/constexpr_functions.cc: Likewise.\n+\t* testsuite/26_numerics/random/subtract_with_carry_engine/\n+\trequirements/constexpr_data.cc: Likewise.\n+\t* testsuite/26_numerics/random/discard_block_engine/requirements/\n+\tconstexpr_functions.cc: Likewise.\n+\t* testsuite/26_numerics/random/discard_block_engine/requirements/\n+\tconstexpr_data.cc: Likewise.\n+\t* testsuite/26_numerics/random/mersenne_twister_engine/\n+\trequirements/constexpr_functions.cc: Likewise.\n+\t* testsuite/26_numerics/random/mersenne_twister_engine/\n+\trequirements/constexpr_data.cc: Likewise.\n+\t* testsuite/26_numerics/random/linear_congruential_engine/\n+\trequirements/constexpr_functions.cc: Likewise.\n+\t* testsuite/26_numerics/random/linear_congruential_engine/\n+\trequirements/constexpr_data.cc: Likewise.\n+\t* testsuite/26_numerics/random/shuffle_order_engine/\n+\trequirements/constexpr_functions.cc: Likewise.\n+\t* testsuite/26_numerics/random/shuffle_order_engine/\n+\trequirements/constexpr_data.cc: Likewise.\n+\t* testsuite/26_numerics/complex/requirements/\n+\tconstexpr_functions.cc: Likewise.\n+\t* testsuite/23_containers/bitset/requirements/\n+\tconstexpr_functions.cc: Likewise.\n+\t* testsuite/23_containers/array/requirements/\n+\tconstexpr_functions.cc: Likewise.\n+\t* testsuite/util/testsuite_common_types.h: Likewise.\n+\t* testsuite/20_util/duration/requirements/\n+\tconstexpr_functions.cc: Likewise.\n+\t* testsuite/20_util/duration_cast/constexpr.cc: Likewise.\n+\t* testsuite/20_util/time_point/requirements/\n+\tconstexpr_functions.cc: Likewise.\n+\t* testsuite/20_util/ratio/requirements/constexpr_data.cc: Likewise.\n+\n+\t* testsuite/tr1/4_metaprogramming/integral_constant/\n+\trequirements/constexpr_data.cc: Remove.\n+\n 2010-11-02  Jason Merrill  <jason@redhat.com>\n \n \t* include/bits/atomic_0.h (_ATOMIC_CMPEXCHNG_): Use C-style cast."}, {"sha": "0b82a75db5589b45d0aaf53377286a954edeb678", "filename": "libstdc++-v3/testsuite/18_support/numeric_limits/requirements/constexpr_data.cc", "status": "modified", "additions": 46, "deletions": 23, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Frequirements%2Fconstexpr_data.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Frequirements%2Fconstexpr_data.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Frequirements%2Fconstexpr_data.cc?ref=a9992f7f6b00e697f46913fdf809366522118b6b", "patch": "@@ -35,29 +35,52 @@ namespace __gnu_test\n \t  { \n \t    using std::float_denorm_style;\n \t    using std::float_round_style;\n-\t    constexpr bool v1(_Ttesttype::is_specialized);\n-\t    constexpr int v2(_Ttesttype::digits);\n-\t    constexpr int v3(_Ttesttype::digits10);\n-\t    constexpr int v4(_Ttesttype::max_digits10);\n-\t    constexpr bool v5(_Ttesttype::is_signed);\n-\t    constexpr bool v6(_Ttesttype::is_integer);\n-\t    constexpr bool v7(_Ttesttype::is_exact);\n-\t    constexpr int v8(_Ttesttype::radix);\n-\t    constexpr int v9(_Ttesttype::min_exponent);\n-\t    constexpr int v10(_Ttesttype::min_exponent10);\n-\t    constexpr int v11(_Ttesttype::max_exponent);\n-\t    constexpr int v12(_Ttesttype::max_exponent10);\n-\t    constexpr bool v13(_Ttesttype::has_infinity);\n-\t    constexpr bool v14(_Ttesttype::has_quiet_NaN);\n-\t    constexpr bool v15(_Ttesttype::has_signaling_NaN);\n-\t    constexpr float_denorm_style v16(_Ttesttype::has_denorm);\n-\t    constexpr bool v17(_Ttesttype::has_denorm_loss);\n-\t    constexpr bool v18(_Ttesttype::is_iec559);\n-\t    constexpr bool v19(_Ttesttype::is_bounded);\n-\t    constexpr bool v20(_Ttesttype::is_modulo);\n-\t    constexpr bool v21(_Ttesttype::traps);\n-\t    constexpr bool v22(_Ttesttype::tinyness_before);\n-\t    constexpr float_round_style v23(_Ttesttype::round_style);\n+\t    constexpr bool v1 __attribute__((unused))\n+\t      = _Ttesttype::is_specialized;\n+\t    constexpr int v2 __attribute__((unused))\n+\t      = _Ttesttype::digits;\n+\t    constexpr int v3 __attribute__((unused))\n+\t      = _Ttesttype::digits10;\n+\t    constexpr int v4 __attribute__((unused))\n+\t      = _Ttesttype::max_digits10;\n+\t    constexpr bool v5 __attribute__((unused))\n+\t      = _Ttesttype::is_signed;\n+\t    constexpr bool v6 __attribute__((unused))\n+\t      = _Ttesttype::is_integer;\n+\t    constexpr bool v7 __attribute__((unused))\n+\t      = _Ttesttype::is_exact;\n+\t    constexpr int v8 __attribute__((unused))\n+\t      = _Ttesttype::radix;\n+\t    constexpr int v9 __attribute__((unused))\n+\t      = _Ttesttype::min_exponent;\n+\t    constexpr int v10 __attribute__((unused))\n+\t      = _Ttesttype::min_exponent10;\n+\t    constexpr int v11 __attribute__((unused))\n+\t      = _Ttesttype::max_exponent;\n+\t    constexpr int v12 __attribute__((unused))\n+\t      = _Ttesttype::max_exponent10;\n+\t    constexpr bool v13 __attribute__((unused))\n+\t      = _Ttesttype::has_infinity;\n+\t    constexpr bool v14 __attribute__((unused))\n+\t      = _Ttesttype::has_quiet_NaN;\n+\t    constexpr bool v15 __attribute__((unused))\n+\t      = _Ttesttype::has_signaling_NaN;\n+\t    constexpr float_denorm_style v16 __attribute__((unused))\n+\t      = _Ttesttype::has_denorm;\n+\t    constexpr bool v17 __attribute__((unused))\n+\t      = _Ttesttype::has_denorm_loss;\n+\t    constexpr bool v18 __attribute__((unused))\n+\t      = _Ttesttype::is_iec559;\n+\t    constexpr bool v19 __attribute__((unused))\n+\t      = _Ttesttype::is_bounded;\n+\t    constexpr bool v20 __attribute__((unused))\n+\t      = _Ttesttype::is_modulo;\n+\t    constexpr bool v21 __attribute__((unused))\n+\t      = _Ttesttype::traps;\n+\t    constexpr bool v22 __attribute__((unused))\n+\t      = _Ttesttype::tinyness_before;\n+\t    constexpr float_round_style v23 __attribute__((unused))\n+\t      = _Ttesttype::round_style;\n \t  }\n \t};\n "}, {"sha": "f1848f218c2927d6776b7c5ca0b936b0aef100ae", "filename": "libstdc++-v3/testsuite/18_support/numeric_limits/requirements/constexpr_functions.cc", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Frequirements%2Fconstexpr_functions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Frequirements%2Fconstexpr_functions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F18_support%2Fnumeric_limits%2Frequirements%2Fconstexpr_functions.cc?ref=a9992f7f6b00e697f46913fdf809366522118b6b", "patch": "@@ -33,15 +33,24 @@ namespace __gnu_test\n \t{\n \t  void __constraint()\n \t  { \n-\t    constexpr _Tbasetype v1(_Ttesttype::min());\n-\t    constexpr _Tbasetype v2(_Ttesttype::max());\n-\t    constexpr _Tbasetype v3(_Ttesttype::lowest());\n-\t    constexpr _Tbasetype v4(_Ttesttype::epsilon());\n-\t    constexpr _Tbasetype v5(_Ttesttype::round_error());\n-\t    constexpr _Tbasetype v6(_Ttesttype::infinity());\n-\t    constexpr _Tbasetype v7(_Ttesttype::quiet_NaN());\n-\t    constexpr _Tbasetype v8(_Ttesttype::signaling_NaN());\n-\t    constexpr _Tbasetype v9(_Ttesttype::denorm_min());\n+\t    constexpr _Tbasetype v1 __attribute__((unused))\n+\t      = _Ttesttype::min();\n+\t    constexpr _Tbasetype v2 __attribute__((unused))\n+\t      = _Ttesttype::max();\n+\t    constexpr _Tbasetype v3 __attribute__((unused))\n+\t      = _Ttesttype::lowest();\n+\t    constexpr _Tbasetype v4 __attribute__((unused))\n+\t      = _Ttesttype::epsilon();\n+\t    constexpr _Tbasetype v5 __attribute__((unused))\n+\t      = _Ttesttype::round_error();\n+\t    constexpr _Tbasetype v6 __attribute__((unused))\n+\t      = _Ttesttype::infinity();\n+\t    constexpr _Tbasetype v7 __attribute__((unused))\n+\t      = _Ttesttype::quiet_NaN();\n+\t    constexpr _Tbasetype v8 __attribute__((unused))\n+\t      = _Ttesttype::signaling_NaN();\n+\t    constexpr _Tbasetype v9 __attribute__((unused))\n+\t      = _Ttesttype::denorm_min();\n \t  }\n \t};\n "}, {"sha": "faeab3b93ec24e242bd7e3bb366966b9f68c3570", "filename": "libstdc++-v3/testsuite/20_util/duration/requirements/constexpr_functions.cc", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Fconstexpr_functions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Fconstexpr_functions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration%2Frequirements%2Fconstexpr_functions.cc?ref=a9992f7f6b00e697f46913fdf809366522118b6b", "patch": "@@ -33,14 +33,20 @@ namespace __gnu_test\n \t{\n \t  void __constraint()\n \t  { \n-\t    constexpr auto v1(_Ttesttype::min());\n-\t    constexpr auto v2(_Ttesttype::max());\n-\t    constexpr auto v3(_Ttesttype::zero());\n+\t    constexpr auto v1 __attribute__((unused))\n+\t      = _Ttesttype::min();\n+\t    constexpr auto v2 __attribute__((unused))\n+\t      = _Ttesttype::max();\n+\t    constexpr auto v3 __attribute__((unused))\n+\t      = _Ttesttype::zero();\n \n \t    constexpr _Ttesttype obj { };\n-\t    constexpr auto v4 = obj.count();\n-\t    constexpr auto v5 = -obj;\n-\t    constexpr auto v6 = +obj;\n+\t    constexpr auto v4 __attribute__((unused))\n+\t      = obj.count();\n+\t    constexpr auto v5 __attribute__((unused))\n+\t      = -obj;\n+\t    constexpr auto v6 __attribute__((unused))\n+\t      = +obj;\n \t  }\n \t};\n "}, {"sha": "b8a89aee9359af29abad8bc5b20f8c1fb9c5d974", "filename": "libstdc++-v3/testsuite/20_util/duration_cast/constexpr.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration_cast%2Fconstexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration_cast%2Fconstexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fduration_cast%2Fconstexpr.cc?ref=a9992f7f6b00e697f46913fdf809366522118b6b", "patch": "@@ -27,11 +27,11 @@ int main()\n \n   // non-constexpr\n   minutes mn1(6000);\n-  hours hr1 = duration_cast<hours>(mn1);\n+  hours hr1 __attribute__((unused)) = duration_cast<hours>(mn1);\n \n   // constexpr\n   constexpr minutes mn2(6000);\n-  constexpr hours hr2 = duration_cast<hours>(mn2);\n+  constexpr hours hr2 __attribute__((unused)) = duration_cast<hours>(mn2);\n \n   return 0;\n }"}, {"sha": "2665a815f4ba848f41fbb0d3a398fc402aacd993", "filename": "libstdc++-v3/testsuite/20_util/ratio/requirements/constexpr_data.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Frequirements%2Fconstexpr_data.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Frequirements%2Fconstexpr_data.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fratio%2Frequirements%2Fconstexpr_data.cc?ref=a9992f7f6b00e697f46913fdf809366522118b6b", "patch": "@@ -33,8 +33,10 @@ namespace __gnu_test\n \t{\n \t  void __constraint()\n \t  {\n-\t    constexpr intmax_t v1(_Ttesttype::num);\n-\t    constexpr intmax_t v2(_Ttesttype::den);\n+\t    constexpr intmax_t v1 __attribute__((unused))\n+\t      = _Ttesttype::num;\n+\t    constexpr intmax_t v2 __attribute__((unused))\n+\t      = _Ttesttype::den;\n \t  }\n \t};\n "}, {"sha": "2beccd4fff686edf4cb653d57360b0806051b8ac", "filename": "libstdc++-v3/testsuite/20_util/time_point/requirements/constexpr_functions.cc", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftime_point%2Frequirements%2Fconstexpr_functions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftime_point%2Frequirements%2Fconstexpr_functions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ftime_point%2Frequirements%2Fconstexpr_functions.cc?ref=a9992f7f6b00e697f46913fdf809366522118b6b", "patch": "@@ -33,11 +33,14 @@ namespace __gnu_test\n \t{\n \t  void __constraint()\n \t  {\n-\t    constexpr auto v1(_Ttesttype::min());\n-\t    constexpr auto v2(_Ttesttype::max());\n+\t    constexpr auto v1 __attribute__((unused))\n+\t      = _Ttesttype::min();\n+\t    constexpr auto v2 __attribute__((unused))\n+\t      = _Ttesttype::max();\n \n \t    constexpr _Ttesttype obj;\n-\t    constexpr auto v3 = obj.time_since_epoch();\n+\t    constexpr auto v3 __attribute__((unused))\n+\t      = obj.time_since_epoch();\n \t  }\n \t};\n "}, {"sha": "df6c52dd45f92df6579f9c6815df2606b42fb3a7", "filename": "libstdc++-v3/testsuite/21_strings/char_traits/requirements/constexpr_functions.cc", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fconstexpr_functions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fconstexpr_functions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fchar_traits%2Frequirements%2Fconstexpr_functions.cc?ref=a9992f7f6b00e697f46913fdf809366522118b6b", "patch": "@@ -38,13 +38,20 @@ namespace __gnu_test\n \t    const char_type c1(0);\n \t    const char_type c2 = c1;\n \t    const int_type i(0);\n-\t    constexpr auto v1(_Ttesttype::eq(c1, c2));\n-\t    constexpr auto v2(_Ttesttype::lt(c1, c2));\n-\t    constexpr auto v3(_Ttesttype::to_char_type(i));\n-\t    constexpr auto v4(_Ttesttype::to_int_type(c1));\n-\t    constexpr auto v5(_Ttesttype::eq_int_type(i, i));\n-\t    constexpr auto v6(_Ttesttype::eof());\n-\t    constexpr auto v7(_Ttesttype::not_eof(i));\n+\t    constexpr auto v1 __attribute__((unused))\n+\t      = _Ttesttype::eq(c1, c2);\n+\t    constexpr auto v2 __attribute__((unused))\n+\t      = _Ttesttype::lt(c1, c2);\n+\t    constexpr auto v3 __attribute__((unused))\n+\t      = _Ttesttype::to_char_type(i);\n+\t    constexpr auto v4 __attribute__((unused))\n+\t      = _Ttesttype::to_int_type(c1);\n+\t    constexpr auto v5 __attribute__((unused))\n+\t      = _Ttesttype::eq_int_type(i, i);\n+\t    constexpr auto v6 __attribute__((unused))\n+\t      = _Ttesttype::eof();\n+\t    constexpr auto v7 __attribute__((unused))\n+\t      = _Ttesttype::not_eof(i);\n \t  }\n \t};\n "}, {"sha": "ef8c5aac723893b607a1bfd3b03857716cff38b9", "filename": "libstdc++-v3/testsuite/23_containers/array/requirements/constexpr_functions.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Fconstexpr_functions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Fconstexpr_functions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Fconstexpr_functions.cc?ref=a9992f7f6b00e697f46913fdf809366522118b6b", "patch": "@@ -34,9 +34,9 @@ namespace __gnu_test\n \t  void __constraint()\n \t  { \n \t    constexpr _Ttesttype a = { };\n-\t    constexpr auto v1 = a.size();\n-\t    constexpr auto v2 = a.max_size();\n-\t    constexpr auto v3 = a.empty();\n+\t    constexpr auto v1 __attribute__((unused)) = a.size();\n+\t    constexpr auto v2 __attribute__((unused)) = a.max_size();\n+\t    constexpr auto v3 __attribute__((unused)) = a.empty();\n \t  }\n \t};\n "}, {"sha": "d5b8b478c4db49fea63dcf60edc295d08252ac20", "filename": "libstdc++-v3/testsuite/23_containers/bitset/requirements/constexpr_functions.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Frequirements%2Fconstexpr_functions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Frequirements%2Fconstexpr_functions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Frequirements%2Fconstexpr_functions.cc?ref=a9992f7f6b00e697f46913fdf809366522118b6b", "patch": "@@ -34,7 +34,7 @@ namespace __gnu_test\n \t  void __constraint()\n \t  { \n             constexpr _Ttesttype obj;\n-            constexpr auto v1 = obj.size();\n+            constexpr auto v1 __attribute__((unused)) = obj.size();\n \t    //\t    constexpr auto v2 = obj[4];\n \t  }\n \t};"}, {"sha": "eae5ee7e89e838f185467524694654b96d3bde47", "filename": "libstdc++-v3/testsuite/26_numerics/complex/requirements/constexpr_functions.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Frequirements%2Fconstexpr_functions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Frequirements%2Fconstexpr_functions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Frequirements%2Fconstexpr_functions.cc?ref=a9992f7f6b00e697f46913fdf809366522118b6b", "patch": "@@ -36,8 +36,8 @@ namespace __gnu_test\n \t    typedef typename _Ttesttype::_ComplexT _ComplexT;\n \t    const _ComplexT cc = { 1.1 };\n \t    constexpr _Ttesttype a(cc);\n-\t    constexpr auto v1 = a.real();\n-\t    constexpr auto v2 = a.imag();\n+\t    constexpr auto v1 __attribute__((unused)) = a.real();\n+\t    constexpr auto v2 __attribute__((unused)) = a.imag();\n \t  }\n \t};\n "}, {"sha": "1c70881fc7c082dd6b9c25e33fe8b736f93b5df1", "filename": "libstdc++-v3/testsuite/26_numerics/random/discard_block_engine/requirements/constexpr_data.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Frequirements%2Fconstexpr_data.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Frequirements%2Fconstexpr_data.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Frequirements%2Fconstexpr_data.cc?ref=a9992f7f6b00e697f46913fdf809366522118b6b", "patch": "@@ -33,8 +33,10 @@ namespace __gnu_test\n \t{\n \t  void __constraint()\n \t  {\n-\t    constexpr auto v1(_Ttesttype::block_size);\n-\t    constexpr auto v2(_Ttesttype::used_block);\n+\t    constexpr auto v1 __attribute__((unused))\n+\t      = _Ttesttype::block_size;\n+\t    constexpr auto v2 __attribute__((unused))\n+\t      = _Ttesttype::used_block;\n \t  }\n \t};\n "}, {"sha": "77f4fb5786dd2d3031feb14d106d998b6b2c5472", "filename": "libstdc++-v3/testsuite/26_numerics/random/discard_block_engine/requirements/constexpr_functions.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Frequirements%2Fconstexpr_functions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Frequirements%2Fconstexpr_functions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fdiscard_block_engine%2Frequirements%2Fconstexpr_functions.cc?ref=a9992f7f6b00e697f46913fdf809366522118b6b", "patch": "@@ -33,8 +33,10 @@ namespace __gnu_test\n \t{\n \t  void __constraint()\n \t  { \n-\t    constexpr auto v1(_Ttesttype::min());\n-\t    constexpr auto v2(_Ttesttype::max());\n+\t    constexpr auto v1 __attribute__((unused))\n+\t      = _Ttesttype::min();\n+\t    constexpr auto v2 __attribute__((unused))\n+\t      = _Ttesttype::max();\n \t  }\n \t};\n "}, {"sha": "b10d36fb7587da3aeae403e8b357ba0796aea523", "filename": "libstdc++-v3/testsuite/26_numerics/random/independent_bits_engine/requirements/constexpr_functions.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Frequirements%2Fconstexpr_functions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Frequirements%2Fconstexpr_functions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Findependent_bits_engine%2Frequirements%2Fconstexpr_functions.cc?ref=a9992f7f6b00e697f46913fdf809366522118b6b", "patch": "@@ -33,8 +33,10 @@ namespace __gnu_test\n \t{\n \t  void __constraint()\n \t  { \n-\t    constexpr auto v1(_Ttesttype::min());\n-\t    constexpr auto v2(_Ttesttype::max());\n+\t    constexpr auto v1 __attribute__((unused))\n+\t      = _Ttesttype::min();\n+\t    constexpr auto v2 __attribute__((unused))\n+\t      = _Ttesttype::max();\n \t  }\n \t};\n "}, {"sha": "1e8171b5c2124b4991077dc430d25915658e92bc", "filename": "libstdc++-v3/testsuite/26_numerics/random/linear_congruential_engine/requirements/constexpr_data.cc", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Frequirements%2Fconstexpr_data.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Frequirements%2Fconstexpr_data.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Frequirements%2Fconstexpr_data.cc?ref=a9992f7f6b00e697f46913fdf809366522118b6b", "patch": "@@ -33,10 +33,14 @@ namespace __gnu_test\n \t{\n \t  void __constraint()\n \t  {\n-\t    constexpr auto v1(_Ttesttype::multiplier);\n-\t    constexpr auto v2(_Ttesttype::increment);\n-\t    constexpr auto v3(_Ttesttype::modulus);\n-\t    constexpr auto v4(_Ttesttype::default_seed);\n+\t    constexpr auto v1 __attribute__((unused))\n+\t      = _Ttesttype::multiplier;\n+\t    constexpr auto v2 __attribute__((unused))\n+\t      = _Ttesttype::increment;\n+\t    constexpr auto v3 __attribute__((unused))\n+\t      = _Ttesttype::modulus;\n+\t    constexpr auto v4 __attribute__((unused))\n+\t      = _Ttesttype::default_seed;\n \t  }\n \t};\n "}, {"sha": "7917a99066af3c484eb99874d8bab08c5da7a667", "filename": "libstdc++-v3/testsuite/26_numerics/random/linear_congruential_engine/requirements/constexpr_functions.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Frequirements%2Fconstexpr_functions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Frequirements%2Fconstexpr_functions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Flinear_congruential_engine%2Frequirements%2Fconstexpr_functions.cc?ref=a9992f7f6b00e697f46913fdf809366522118b6b", "patch": "@@ -33,8 +33,10 @@ namespace __gnu_test\n \t{\n \t  void __constraint()\n \t  { \n-\t    constexpr auto v1(_Ttesttype::min());\n-\t    constexpr auto v2(_Ttesttype::max());\n+\t    constexpr auto v1 __attribute__((unused))\n+\t      = _Ttesttype::min();\n+\t    constexpr auto v2 __attribute__((unused))\n+\t      = _Ttesttype::max();\n \t  }\n \t};\n "}, {"sha": "4a27982b4f54ddf063c3621ba76d0bff7812b150", "filename": "libstdc++-v3/testsuite/26_numerics/random/mersenne_twister_engine/requirements/constexpr_data.cc", "status": "modified", "additions": 28, "deletions": 14, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Frequirements%2Fconstexpr_data.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Frequirements%2Fconstexpr_data.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Frequirements%2Fconstexpr_data.cc?ref=a9992f7f6b00e697f46913fdf809366522118b6b", "patch": "@@ -33,20 +33,34 @@ namespace __gnu_test\n \t{\n \t  void __constraint()\n \t  {\n-\t    constexpr auto v1(_Ttesttype::word_size);\n-\t    constexpr auto v2(_Ttesttype::state_size);\n-\t    constexpr auto v3(_Ttesttype::shift_size);\n-\t    constexpr auto v4(_Ttesttype::mask_bits);\n-\t    constexpr auto v5(_Ttesttype::xor_mask);\n-\t    constexpr auto v6(_Ttesttype::tempering_u);\n-\t    constexpr auto v7(_Ttesttype::tempering_d);\n-\t    constexpr auto v8(_Ttesttype::tempering_s);\n-\t    constexpr auto v9(_Ttesttype::tempering_b);\n-\t    constexpr auto v10(_Ttesttype::tempering_t);\n-\t    constexpr auto v11(_Ttesttype::tempering_c);\n-\t    constexpr auto v12(_Ttesttype::tempering_l);\n-\t    constexpr auto v13(_Ttesttype::initialization_multiplier);\n-\t    constexpr auto v14(_Ttesttype::default_seed);\n+\t    constexpr auto v1 __attribute__((unused))\n+\t      = _Ttesttype::word_size;\n+\t    constexpr auto v2 __attribute__((unused))\n+\t      = _Ttesttype::state_size;\n+\t    constexpr auto v3 __attribute__((unused))\n+\t      = _Ttesttype::shift_size;\n+\t    constexpr auto v4 __attribute__((unused))\n+\t      = _Ttesttype::mask_bits;\n+\t    constexpr auto v5 __attribute__((unused))\n+\t      = _Ttesttype::xor_mask;\n+\t    constexpr auto v6 __attribute__((unused))\n+\t      = _Ttesttype::tempering_u;\n+\t    constexpr auto v7 __attribute__((unused))\n+\t      = _Ttesttype::tempering_d;\n+\t    constexpr auto v8 __attribute__((unused))\n+\t      = _Ttesttype::tempering_s;\n+\t    constexpr auto v9 __attribute__((unused))\n+\t      = _Ttesttype::tempering_b;\n+\t    constexpr auto v10 __attribute__((unused))\n+\t      = _Ttesttype::tempering_t;\n+\t    constexpr auto v11 __attribute__((unused))\n+\t      = _Ttesttype::tempering_c;\n+\t    constexpr auto v12 __attribute__((unused))\n+\t      = _Ttesttype::tempering_l;\n+\t    constexpr auto v13 __attribute__((unused))\n+\t      = _Ttesttype::initialization_multiplier;\n+\t    constexpr auto v14 __attribute__((unused))\n+\t      = _Ttesttype::default_seed;\n \t  }\n \t};\n "}, {"sha": "03513acf8fb324ef2da71d8c96f6daa985f5471d", "filename": "libstdc++-v3/testsuite/26_numerics/random/mersenne_twister_engine/requirements/constexpr_functions.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Frequirements%2Fconstexpr_functions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Frequirements%2Fconstexpr_functions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fmersenne_twister_engine%2Frequirements%2Fconstexpr_functions.cc?ref=a9992f7f6b00e697f46913fdf809366522118b6b", "patch": "@@ -33,8 +33,10 @@ namespace __gnu_test\n \t{\n \t  void __constraint()\n \t  { \n-\t    constexpr auto v1(_Ttesttype::min());\n-\t    constexpr auto v2(_Ttesttype::max());\n+\t    constexpr auto v1 __attribute__((unused))\n+\t      = _Ttesttype::min();\n+\t    constexpr auto v2 __attribute__((unused))\n+\t      = _Ttesttype::max();\n \t  }\n \t};\n "}, {"sha": "dde00063e660f1373a49a439e5be0862d1c8a436", "filename": "libstdc++-v3/testsuite/26_numerics/random/shuffle_order_engine/requirements/constexpr_data.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Frequirements%2Fconstexpr_data.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Frequirements%2Fconstexpr_data.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Frequirements%2Fconstexpr_data.cc?ref=a9992f7f6b00e697f46913fdf809366522118b6b", "patch": "@@ -33,7 +33,8 @@ namespace __gnu_test\n \t{\n \t  void __constraint()\n \t  {\n-\t    constexpr auto v1(_Ttesttype::table_size);\n+\t    constexpr auto v1 __attribute__((unused))\n+\t      = _Ttesttype::table_size;\n \t  }\n \t};\n "}, {"sha": "8829898ff464f6f0c8d9803ce672fb3f86e19e99", "filename": "libstdc++-v3/testsuite/26_numerics/random/shuffle_order_engine/requirements/constexpr_functions.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Frequirements%2Fconstexpr_functions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Frequirements%2Fconstexpr_functions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fshuffle_order_engine%2Frequirements%2Fconstexpr_functions.cc?ref=a9992f7f6b00e697f46913fdf809366522118b6b", "patch": "@@ -33,8 +33,10 @@ namespace __gnu_test\n \t{\n \t  void __constraint()\n \t  { \n-\t    constexpr auto v1(_Ttesttype::min());\n-\t    constexpr auto v2(_Ttesttype::max());\n+\t    constexpr auto v1 __attribute__((unused))\n+\t      = _Ttesttype::min();\n+\t    constexpr auto v2 __attribute__((unused))\n+\t      = _Ttesttype::max();\n \t  }\n \t};\n "}, {"sha": "c22dae0bb7c255e3476cc46658e218bae6da8683", "filename": "libstdc++-v3/testsuite/26_numerics/random/subtract_with_carry_engine/requirements/constexpr_data.cc", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Frequirements%2Fconstexpr_data.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Frequirements%2Fconstexpr_data.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Frequirements%2Fconstexpr_data.cc?ref=a9992f7f6b00e697f46913fdf809366522118b6b", "patch": "@@ -33,10 +33,14 @@ namespace __gnu_test\n \t{\n \t  void __constraint()\n \t  {\n-\t    constexpr auto v1(_Ttesttype::word_size);\n-\t    constexpr auto v2(_Ttesttype::short_lag);\n-\t    constexpr auto v3(_Ttesttype::long_lag);\n-\t    constexpr auto v4(_Ttesttype::default_seed);\n+\t    constexpr auto v1 __attribute__((unused))\n+\t      = _Ttesttype::word_size;\n+\t    constexpr auto v2 __attribute__((unused))\n+\t      = _Ttesttype::short_lag;\n+\t    constexpr auto v3 __attribute__((unused))\n+\t      = _Ttesttype::long_lag;\n+\t    constexpr auto v4 __attribute__((unused))\n+\t      = _Ttesttype::default_seed;\n \t  }\n \t};\n "}, {"sha": "39a3177ab6737fab07cb09f4623bf6ece62f8dff", "filename": "libstdc++-v3/testsuite/26_numerics/random/subtract_with_carry_engine/requirements/constexpr_functions.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Frequirements%2Fconstexpr_functions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Frequirements%2Fconstexpr_functions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fsubtract_with_carry_engine%2Frequirements%2Fconstexpr_functions.cc?ref=a9992f7f6b00e697f46913fdf809366522118b6b", "patch": "@@ -33,8 +33,10 @@ namespace __gnu_test\n \t{\n \t  void __constraint()\n \t  { \n-\t    constexpr auto v1(_Ttesttype::min());\n-\t    constexpr auto v2(_Ttesttype::max());\n+\t    constexpr auto v1 __attribute__((unused))\n+\t      = _Ttesttype::min();\n+\t    constexpr auto v2 __attribute__((unused))\n+\t      = _Ttesttype::max();\n \t  }\n \t};\n "}, {"sha": "1f9876cac120fce57d9079841bcc5e1158dbe552", "filename": "libstdc++-v3/testsuite/28_regex/05_constants/syntax_option_type.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2F05_constants%2Fsyntax_option_type.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2F05_constants%2Fsyntax_option_type.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2F05_constants%2Fsyntax_option_type.cc?ref=a9992f7f6b00e697f46913fdf809366522118b6b", "patch": "@@ -70,15 +70,16 @@ test03()\n   option = ~std::regex_constants::awk;\n   option = ~std::regex_constants::grep;\n   option = ~std::regex_constants::egrep;\n+  option = option;\n }\n \n void\n test04_constexpr()\n {\n   using namespace std::regex_constants;\n-  constexpr auto a1 = icase | awk;\n-  constexpr auto a2 = icase & awk;\n-  constexpr auto a3 = ~grep;\n+  constexpr auto a1 __attribute__((unused)) = icase | awk;\n+  constexpr auto a2 __attribute__((unused)) = icase & awk;\n+  constexpr auto a3 __attribute__((unused)) = ~grep;\n }\n \n int main()"}, {"sha": "82d5c6ff4e283612db1ae79d31ece8e10ff26b3e", "filename": "libstdc++-v3/testsuite/28_regex/08_basic_regex/requirements/constexpr_data.cc", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2F08_basic_regex%2Frequirements%2Fconstexpr_data.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2F08_basic_regex%2Frequirements%2Fconstexpr_data.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2F08_basic_regex%2Frequirements%2Fconstexpr_data.cc?ref=a9992f7f6b00e697f46913fdf809366522118b6b", "patch": "@@ -33,16 +33,26 @@ namespace __gnu_test\n \t{\n \t  void __constraint()\n \t  {\n-\t    constexpr auto v1(_Ttesttype::icase);\n-\t    constexpr auto v2(_Ttesttype::nosubs);\n-\t    constexpr auto v3(_Ttesttype::optimize);\n-\t    constexpr auto v4(_Ttesttype::collate);\n-\t    constexpr auto v5(_Ttesttype::ECMAScript);\n-\t    constexpr auto v6(_Ttesttype::basic);\n-\t    constexpr auto v7(_Ttesttype::extended);\n-\t    constexpr auto v8(_Ttesttype::awk);\n-\t    constexpr auto v9(_Ttesttype::grep);\n-\t    constexpr auto v10(_Ttesttype::egrep);\n+\t    constexpr auto v1 __attribute__((unused))\n+\t      = _Ttesttype::icase;\n+\t    constexpr auto v2 __attribute__((unused))\n+\t      = _Ttesttype::nosubs;\n+\t    constexpr auto v3 __attribute__((unused))\n+\t      = _Ttesttype::optimize;\n+\t    constexpr auto v4 __attribute__((unused))\n+\t      = _Ttesttype::collate;\n+\t    constexpr auto v5 __attribute__((unused))\n+\t      = _Ttesttype::ECMAScript;\n+\t    constexpr auto v6 __attribute__((unused))\n+\t      = _Ttesttype::basic;\n+\t    constexpr auto v7 __attribute__((unused))\n+\t      = _Ttesttype::extended;\n+\t    constexpr auto v8 __attribute__((unused))\n+\t      = _Ttesttype::awk;\n+\t    constexpr auto v9 __attribute__((unused))\n+\t      = _Ttesttype::grep;\n+\t    constexpr auto v10 __attribute__((unused))\n+\t      = _Ttesttype::egrep;\n \t  }\n \t};\n "}, {"sha": "a44cace607c284749ab8ef78997900d021e78426", "filename": "libstdc++-v3/testsuite/tr1/4_metaprogramming/integral_constant/requirements/constexpr_data.cc", "status": "removed", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21736ec2f7bec064bdc87f81bb3e2e2f5bdf90c9/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fintegral_constant%2Frequirements%2Fconstexpr_data.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21736ec2f7bec064bdc87f81bb3e2e2f5bdf90c9/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fintegral_constant%2Frequirements%2Fconstexpr_data.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F4_metaprogramming%2Fintegral_constant%2Frequirements%2Fconstexpr_data.cc?ref=21736ec2f7bec064bdc87f81bb3e2e2f5bdf90c9", "patch": "@@ -1,52 +0,0 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++0x\" }\n-\n-// Copyright (C) 2010 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-#include <type_traits>\n-#include <testsuite_common_types.h>\n-\n-namespace __gnu_test\n-{\n-  struct constexpr_member_data\n-  {\n-    template<typename _Ttesttype>\n-      void\n-      operator()()\n-      {\n-\tstruct _Concept\n-\t{\n-\t  void __constraint()\n-\t  {\n-\t    constexpr auto v(_Ttesttype::value);\n-\t  }\n-\t};\n-\n-\t_Concept c;\n-\tc.__constraint();\n-      }\n-  };\n-}\n-\n-int main()\n-{\n-  __gnu_test::constexpr_member_data test;\n-  test.operator()<std::integral_constant<unsigned short, 69>>();\n-  test.operator()<std::integral_constant<bool, true>>();\n-  return 0;\n-}"}, {"sha": "a402bcf6b4800123eea51b70c913af899ee3bde7", "filename": "libstdc++-v3/testsuite/util/testsuite_common_types.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_common_types.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9992f7f6b00e697f46913fdf809366522118b6b/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_common_types.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_common_types.h?ref=a9992f7f6b00e697f46913fdf809366522118b6b", "patch": "@@ -399,10 +399,10 @@ namespace __gnu_test\n     {\n       constexpr _Tp a = _Tp();\n       constexpr _Tp b = _Tp();\n-      constexpr _Tp c1 = a | b;\n-      constexpr _Tp c2 = a & b;\n-      constexpr _Tp c3 = a ^ b;\n-      constexpr _Tp c4 = ~b;\n+      constexpr _Tp c1 __attribute__((unused)) = a | b;\n+      constexpr _Tp c2 __attribute__((unused)) = a & b;\n+      constexpr _Tp c3 __attribute__((unused)) = a ^ b;\n+      constexpr _Tp c4 __attribute__((unused)) = ~b;\n     }\n #endif\n \n@@ -562,7 +562,7 @@ namespace __gnu_test\n \tstruct _Concept\n \t{\n \t  void __constraint()\n-\t  { _Tp __v; }\n+\t  { _Tp __v __attribute__((unused)); }\n \t};\n \n \tvoid (_Concept::*__x)() __attribute__((unused))"}]}