{"sha": "15471d58fe2e8349c391205338176f3fbdaad70c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU0NzFkNThmZTJlODM0OWMzOTEyMDUzMzgxNzZmM2ZiZGFhZDcwYw==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2019-11-10T21:25:25Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2019-11-10T21:25:25Z"}, "message": "Don't print warning when moving to static with -fno-automatic\n\nAs part of PR 91413, GFortran now prints a warning when a variable is\nmoved from the stack to static storage. However, when the user\nexplicitly specifies that all local variables should be put in static\nstorage with the -fno-automatic option, don't print this warning.\n\nRegtested on x86_64-pc-linux-gnu, committed as obvious.\n\ngcc/fortran/ChangeLog:\n\n2019-11-10  Janne Blomqvist  <jb@gcc.gnu.org>\n\n\tPR fortran/91413\n\t* trans-decl.c (gfc_finish_var_decl): Don't print warning when\n\t-fno-automatic is enabled.\n\nFrom-SVN: r278027", "tree": {"sha": "3ce322b6f55a8520fd1806acbff3746716cbafcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ce322b6f55a8520fd1806acbff3746716cbafcb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15471d58fe2e8349c391205338176f3fbdaad70c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15471d58fe2e8349c391205338176f3fbdaad70c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15471d58fe2e8349c391205338176f3fbdaad70c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15471d58fe2e8349c391205338176f3fbdaad70c/comments", "author": null, "committer": null, "parents": [{"sha": "2806ecbdc8054ef9f3968577806b007baefad4e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2806ecbdc8054ef9f3968577806b007baefad4e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2806ecbdc8054ef9f3968577806b007baefad4e6"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "2031688474b69daa3c5e9f54ae8827061548f891", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15471d58fe2e8349c391205338176f3fbdaad70c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15471d58fe2e8349c391205338176f3fbdaad70c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=15471d58fe2e8349c391205338176f3fbdaad70c", "patch": "@@ -1,3 +1,9 @@\n+2019-11-10  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/91413\n+\t* trans-decl.c (gfc_finish_var_decl): Don't print warning when\n+\t-fno-automatic is enabled.\n+\n 2019-11-10  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/92123"}, {"sha": "76e1c7a845385e69c1dd2e2be151131d25559e1c", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15471d58fe2e8349c391205338176f3fbdaad70c/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15471d58fe2e8349c391205338176f3fbdaad70c/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=15471d58fe2e8349c391205338176f3fbdaad70c", "patch": "@@ -746,15 +746,16 @@ gfc_finish_var_decl (tree decl, gfc_symbol * sym)\n \t  || sym->attr.allocatable)\n       && !DECL_ARTIFICIAL (decl))\n     {\n-      gfc_warning (OPT_Wsurprising,\n-\t\t   \"Array %qs at %L is larger than limit set by\"\n-\t\t   \" %<-fmax-stack-var-size=%>, moved from stack to static\"\n-\t\t   \" storage. This makes the procedure unsafe when called\"\n-\t\t   \" recursively, or concurrently from multiple threads.\"\n-\t\t   \" Consider using %<-frecursive%>, or increase the\"\n-\t\t   \" %<-fmax-stack-var-size=%> limit, or change the code to\"\n-\t\t   \" use an ALLOCATABLE array.\",\n-\t\t   sym->name, &sym->declared_at);\n+      if (flag_max_stack_var_size > 0)\n+\tgfc_warning (OPT_Wsurprising,\n+\t\t     \"Array %qs at %L is larger than limit set by\"\n+\t\t     \" %<-fmax-stack-var-size=%>, moved from stack to static\"\n+\t\t     \" storage. This makes the procedure unsafe when called\"\n+\t\t     \" recursively, or concurrently from multiple threads.\"\n+\t\t     \" Consider using %<-frecursive%>, or increase the\"\n+\t\t     \" %<-fmax-stack-var-size=%> limit, or change the code to\"\n+\t\t     \" use an ALLOCATABLE array.\",\n+\t\t     sym->name, &sym->declared_at);\n \n       TREE_STATIC (decl) = 1;\n "}]}