{"sha": "fb26050409473f5be54465beca114b7e48de43aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmIyNjA1MDQwOTQ3M2Y1YmU1NDQ2NWJlY2ExMTRiN2U0OGRlNDNhYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-02-15T15:20:46Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-02-15T21:20:38Z"}, "message": "c++: Add -std=c++20.\n\nIt's probably past time for this, but definitely now that we're done with\nthe final committee meeting of C++20.  This patch only adds the option and\nadjusts the testsuite to recognize it; more extensive changes can wait for\nthe published standard.\n\ngcc/ChangeLog\n2020-02-15  Jason Merrill  <jason@redhat.com>\n\n\t* doc/invoke.texi (C Dialect Options): Add -std=c++20.\n\ngcc/c-family/ChangeLog\n2020-02-15  Jason Merrill  <jason@redhat.com>\n\n\t* c.opt: Add -std=c++20.\n\ngcc/testsuite/ChangeLog\n2020-02-15  Jason Merrill  <jason@redhat.com>\n\n\t* lib/target-supports.exp (check_effective_target_c++2a_only): Also\n\tlook for -std=*++20.\n\t(check_effective_target_concepts): Use check_effective_target_c++2a.", "tree": {"sha": "8ce13ac9d0c19ecee5e6e83c718b8d901b0da46d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ce13ac9d0c19ecee5e6e83c718b8d901b0da46d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb26050409473f5be54465beca114b7e48de43aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb26050409473f5be54465beca114b7e48de43aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb26050409473f5be54465beca114b7e48de43aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb26050409473f5be54465beca114b7e48de43aa/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b3c2eed35d608d6541ecf004a9576b4eae0b4ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b3c2eed35d608d6541ecf004a9576b4eae0b4ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b3c2eed35d608d6541ecf004a9576b4eae0b4ef"}], "stats": {"total": 39, "additions": 31, "deletions": 8}, "files": [{"sha": "6283e8087b78dc54541b0a01245d2e7f47826361", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb26050409473f5be54465beca114b7e48de43aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb26050409473f5be54465beca114b7e48de43aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb26050409473f5be54465beca114b7e48de43aa", "patch": "@@ -1,3 +1,7 @@\n+2020-02-15  Jason Merrill  <jason@redhat.com>\n+\n+\t* doc/invoke.texi (C Dialect Options): Add -std=c++20.\n+\n 2020-02-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/93744"}, {"sha": "bcab260859f8c90c4efb796cb00c301efd1805db", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb26050409473f5be54465beca114b7e48de43aa/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb26050409473f5be54465beca114b7e48de43aa/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=fb26050409473f5be54465beca114b7e48de43aa", "patch": "@@ -1,3 +1,7 @@\n+2020-02-15  Jason Merrill  <jason@redhat.com>\n+\n+\t* c.opt: Add -std=c++20.\n+\n 2020-02-14  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* c-ada-spec.c: Include bitmap.h."}, {"sha": "b7e4fe146b26ff05159fcc8269ae36eafb6888ae", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb26050409473f5be54465beca114b7e48de43aa/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb26050409473f5be54465beca114b7e48de43aa/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=fb26050409473f5be54465beca114b7e48de43aa", "patch": "@@ -2071,7 +2071,11 @@ Conform to the ISO 2017 C++ standard.\n \n std=c++2a\n C++ ObjC++\n-Conform to the ISO 2020(?) C++ draft standard (experimental and incomplete support).\n+Conform to the ISO 2020 C++ draft standard (experimental and incomplete support).\n+\n+std=c++20\n+C++ ObjC++ Alias(std=c++2a)\n+Conform to the ISO 2020 C++ draft standard (experimental and incomplete support).\n \n std=c11\n C ObjC"}, {"sha": "3e47d06f0d58c403d0e1a1c796d7b96923eaa360", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb26050409473f5be54465beca114b7e48de43aa/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb26050409473f5be54465beca114b7e48de43aa/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=fb26050409473f5be54465beca114b7e48de43aa", "patch": "@@ -2078,13 +2078,15 @@ The name @samp{c++1z} is deprecated.\n GNU dialect of @option{-std=c++17}.\n The name @samp{gnu++1z} is deprecated.\n \n-@item c++2a\n-The next revision of the ISO C++ standard, tentatively planned for\n+@item c++20\n+@itemx c++2a\n+The next revision of the ISO C++ standard, planned for\n 2020.  Support is highly experimental, and will almost certainly\n change in incompatible ways in future releases.\n \n-@item gnu++2a\n-GNU dialect of @option{-std=c++2a}.  Support is highly experimental,\n+@item gnu++20\n+@itemx gnu++2a\n+GNU dialect of @option{-std=c++20}.  Support is highly experimental,\n and will almost certainly change in incompatible ways in future\n releases.\n @end table"}, {"sha": "dca5b150c08e348bc74f65e612984e7f8267e714", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb26050409473f5be54465beca114b7e48de43aa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb26050409473f5be54465beca114b7e48de43aa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fb26050409473f5be54465beca114b7e48de43aa", "patch": "@@ -1,3 +1,9 @@\n+2020-02-15  Jason Merrill  <jason@redhat.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_c++2a_only): Also\n+\tlook for -std=*++20.\n+\t(check_effective_target_concepts): Use check_effective_target_c++2a.\n+\n 2020-02-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/93744"}, {"sha": "ec4623158605a79b9685b4313d889dcc08d46fe7", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb26050409473f5be54465beca114b7e48de43aa/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb26050409473f5be54465beca114b7e48de43aa/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=fb26050409473f5be54465beca114b7e48de43aa", "patch": "@@ -8806,7 +8806,7 @@ proc check_effective_target_c++2a_only { } {\n     if ![check_effective_target_c++] {\n \treturn 0\n     }\n-    if [check-flags { { } { } { -std=c++2a -std=gnu++2a } }] {\n+    if [check-flags { { } { } { -std=c++2a -std=gnu++2a -std=c++20 -std=gnu++20 } }] {\n \treturn 1\n     }\n     if { $cxx_default == \"c++20\" && [check-flags { { } { } { } { -std=* } }] } {\n@@ -8818,9 +8818,12 @@ proc check_effective_target_c++2a { } {\n     return [check_effective_target_c++2a_only]\n }\n \n-# Check for C++ Concepts TS support, i.e. -fconcepts flag.\n+# Check for C++ Concepts support, i.e. -fconcepts flag.\n proc check_effective_target_concepts { } {\n-    return [check-flags { \"\" { } { -fconcepts -std=*2a } }]\n+    if [check_effective_target_c++2a] {\n+\treturn 1\n+    }\n+    return [check-flags { \"\" { } { -fconcepts } }]\n }\n \n # Return 1 if expensive testcases should be run."}]}