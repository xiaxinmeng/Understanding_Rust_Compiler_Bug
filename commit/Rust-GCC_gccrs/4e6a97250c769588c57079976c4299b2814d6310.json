{"sha": "4e6a97250c769588c57079976c4299b2814d6310", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU2YTk3MjUwYzc2OTU4OGM1NzA3OTk3NmM0Mjk5YjI4MTRkNjMxMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-07-14T18:15:35Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-07-14T18:15:35Z"}, "message": "re PR c++/40740 (template-id forgotten with arg-dep lookup)\n\n\tPR c++/40740\n\t* semantics.c (perform_koenig_lookup): Handle empty template args.\n\nFrom-SVN: r149636", "tree": {"sha": "f913131dcfc39f5179b8168f8020117cb96dc13e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f913131dcfc39f5179b8168f8020117cb96dc13e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e6a97250c769588c57079976c4299b2814d6310", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e6a97250c769588c57079976c4299b2814d6310", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e6a97250c769588c57079976c4299b2814d6310", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e6a97250c769588c57079976c4299b2814d6310/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b35c81608887526d18a068f9c84192a7efaf2b25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b35c81608887526d18a068f9c84192a7efaf2b25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b35c81608887526d18a068f9c84192a7efaf2b25"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "67bbc740f6cc247b63d52412b012318a60a3d83a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e6a97250c769588c57079976c4299b2814d6310/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e6a97250c769588c57079976c4299b2814d6310/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4e6a97250c769588c57079976c4299b2814d6310", "patch": "@@ -1,3 +1,8 @@\n+2009-07-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/40740\n+\t* semantics.c (perform_koenig_lookup): Handle empty template args.\n+\n 2009-07-13  Jason Merrill  <jason@redhat.com>\n \n \t* call.c (build_over_call): Use can_trust_pointer_alignment."}, {"sha": "61dff51ba7516e34417cd09e33eaaa231688409f", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e6a97250c769588c57079976c4299b2814d6310/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e6a97250c769588c57079976c4299b2814d6310/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=4e6a97250c769588c57079976c4299b2814d6310", "patch": "@@ -1827,9 +1827,12 @@ perform_koenig_lookup (tree fn, VEC(tree,gc) *args)\n   tree identifier = NULL_TREE;\n   tree functions = NULL_TREE;\n   tree tmpl_args = NULL_TREE;\n+  bool template_id = false;\n \n   if (TREE_CODE (fn) == TEMPLATE_ID_EXPR)\n     {\n+      /* Use a separate flag to handle null args.  */\n+      template_id = true;\n       tmpl_args = TREE_OPERAND (fn, 1);\n       fn = TREE_OPERAND (fn, 0);\n     }\n@@ -1861,8 +1864,8 @@ perform_koenig_lookup (tree fn, VEC(tree,gc) *args)\n \tfn = unqualified_fn_lookup_error (identifier);\n     }\n \n-  if (fn && tmpl_args)\n-    fn = build_nt (TEMPLATE_ID_EXPR, fn, tmpl_args);\n+  if (fn && template_id)\n+    fn = build2 (TEMPLATE_ID_EXPR, unknown_type_node, fn, tmpl_args);\n   \n   return fn;\n }"}, {"sha": "58ce71cf8a09bff64c623b21db95d69c0d09b08e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e6a97250c769588c57079976c4299b2814d6310/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e6a97250c769588c57079976c4299b2814d6310/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4e6a97250c769588c57079976c4299b2814d6310", "patch": "@@ -1,3 +1,8 @@\n+2009-07-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/40740\n+\t* g++.dg/template/koenig8.C: New.\n+\n 2009-07-14  Jack Howarth  <howarth@bromo.med.uc.edu>\n \n \t* testsuite/gcc.c-torture/compile/20000804-1.c: skip for ilp32 on"}, {"sha": "5a49a7066daa186615c92756f7c0878e4830d3b6", "filename": "gcc/testsuite/g++.dg/template/koenig8.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e6a97250c769588c57079976c4299b2814d6310/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fkoenig8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e6a97250c769588c57079976c4299b2814d6310/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fkoenig8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fkoenig8.C?ref=4e6a97250c769588c57079976c4299b2814d6310", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/40740\n+\n+template<class T>\n+T addsome(T v) {\n+  return v+1;\n+}\n+\n+int addsome(int v) {\n+  return v+2;\n+}\n+\n+int main() {\n+  int i = 0;\n+  if (addsome(i) != 2)\n+    return 1;\n+  if (addsome<>(i) != 1)\n+    return 2;\n+  return 0;\n+}\n+"}]}