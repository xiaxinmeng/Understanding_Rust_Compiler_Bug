{"sha": "6d41f7c39cff9fb5ccce8e60b6de1679a1dc092a", "node_id": "C_kwDOANBUbNoAKDZkNDFmN2MzOWNmZjlmYjVjY2NlOGU2MGI2ZGUxNjc5YTFkYzA5MmE", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-08-02T11:27:16Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-08-02T15:42:15Z"}, "message": "Make range_of_ssa_name_with_loop_info type agnostic.\n\ngcc/ChangeLog:\n\n\t* gimple-range-fold.cc (fold_using_range::range_of_phi): Remove\n\tirange check.\n\t(tree_lower_bound): New.\n\t(tree_upper_bound): New.\n\t(fold_using_range::range_of_ssa_name_with_loop_info): Convert to\n\tvrange.\n\t* gimple-range-fold.h (range_of_ssa_name_with_loop_info): Change\n\targument to vrange.", "tree": {"sha": "1c8aff930872d8bb3ff74bccf19ccb5237ad8491", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c8aff930872d8bb3ff74bccf19ccb5237ad8491"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d41f7c39cff9fb5ccce8e60b6de1679a1dc092a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d41f7c39cff9fb5ccce8e60b6de1679a1dc092a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d41f7c39cff9fb5ccce8e60b6de1679a1dc092a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d41f7c39cff9fb5ccce8e60b6de1679a1dc092a/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "353fd1ec3df92fbe66ce1513c5a86bdd5c5e22d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/353fd1ec3df92fbe66ce1513c5a86bdd5c5e22d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/353fd1ec3df92fbe66ce1513c5a86bdd5c5e22d1"}], "stats": {"total": 48, "additions": 36, "deletions": 12}, "files": [{"sha": "923094abd62931dd390b3165268ca55ce27097e6", "filename": "gcc/gimple-range-fold.cc", "status": "modified", "additions": 35, "deletions": 11, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d41f7c39cff9fb5ccce8e60b6de1679a1dc092a/gcc%2Fgimple-range-fold.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d41f7c39cff9fb5ccce8e60b6de1679a1dc092a/gcc%2Fgimple-range-fold.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-fold.cc?ref=6d41f7c39cff9fb5ccce8e60b6de1679a1dc092a", "patch": "@@ -854,13 +854,12 @@ fold_using_range::range_of_phi (vrange &r, gphi *phi, fur_source &src)\n \n   // If SCEV is available, query if this PHI has any knonwn values.\n   if (scev_initialized_p ()\n-      && !POINTER_TYPE_P (TREE_TYPE (phi_def))\n-      && irange::supports_p (TREE_TYPE (phi_def)))\n+      && !POINTER_TYPE_P (TREE_TYPE (phi_def)))\n     {\n       class loop *l = loop_containing_stmt (phi);\n       if (l && loop_outer (l))\n \t{\n-\t  int_range_max loop_range;\n+\t  Value_Range loop_range (type);\n \t  range_of_ssa_name_with_loop_info (loop_range, phi_def, l, phi, src);\n \t  if (!loop_range.varying_p ())\n \t    {\n@@ -1330,35 +1329,60 @@ fold_using_range::range_of_cond_expr  (vrange &r, gassign *s, fur_source &src)\n   return true;\n }\n \n+// Return the lower bound of R as a tree.\n+\n+static inline tree\n+tree_lower_bound (const vrange &r, tree type)\n+{\n+  if (is_a <irange> (r))\n+    return wide_int_to_tree (type, as_a <irange> (r).lower_bound ());\n+  // ?? Handle floats when they contain endpoints.\n+  return NULL;\n+}\n+\n+// Return the upper bound of R as a tree.\n+\n+static inline tree\n+tree_upper_bound (const vrange &r, tree type)\n+{\n+  if (is_a <irange> (r))\n+    return wide_int_to_tree (type, as_a <irange> (r).upper_bound ());\n+  // ?? Handle floats when they contain endpoints.\n+  return NULL;\n+}\n+\n // If SCEV has any information about phi node NAME, return it as a range in R.\n \n void\n-fold_using_range::range_of_ssa_name_with_loop_info (irange &r, tree name,\n+fold_using_range::range_of_ssa_name_with_loop_info (vrange &r, tree name,\n \t\t\t\t\t\t    class loop *l, gphi *phi,\n \t\t\t\t\t\t    fur_source &src)\n {\n   gcc_checking_assert (TREE_CODE (name) == SSA_NAME);\n   tree min, max, type = TREE_TYPE (name);\n   if (bounds_of_var_in_loop (&min, &max, src.query (), l, phi, name))\n     {\n-      if (TREE_CODE (min) != INTEGER_CST)\n+      if (!is_gimple_constant (min))\n \t{\n \t  if (src.query ()->range_of_expr (r, min, phi) && !r.undefined_p ())\n-\t    min = wide_int_to_tree (type, r.lower_bound ());\n+\t    min = tree_lower_bound (r, type);\n \t  else\n \t    min = vrp_val_min (type);\n \t}\n-      if (TREE_CODE (max) != INTEGER_CST)\n+      if (!is_gimple_constant (max))\n \t{\n \t  if (src.query ()->range_of_expr (r, max, phi) && !r.undefined_p ())\n-\t    max = wide_int_to_tree (type, r.upper_bound ());\n+\t    max = tree_upper_bound (r, type);\n \t  else\n \t    max = vrp_val_max (type);\n \t}\n-      r.set (min, max);\n+      if (min && max)\n+\t{\n+\t  r.set (min, max);\n+\t  return;\n+\t}\n     }\n-  else\n-    r.set_varying (type);\n+  r.set_varying (type);\n }\n \n // -----------------------------------------------------------------------"}, {"sha": "c2f381dffec16297706de32baa6f9128182d482a", "filename": "gcc/gimple-range-fold.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d41f7c39cff9fb5ccce8e60b6de1679a1dc092a/gcc%2Fgimple-range-fold.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d41f7c39cff9fb5ccce8e60b6de1679a1dc092a/gcc%2Fgimple-range-fold.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-fold.h?ref=6d41f7c39cff9fb5ccce8e60b6de1679a1dc092a", "patch": "@@ -173,7 +173,7 @@ class fold_using_range\n   void range_of_builtin_ubsan_call (irange &r, gcall *call, tree_code code,\n \t\t\t\t    fur_source &src);\n   bool range_of_phi (vrange &r, gphi *phi, fur_source &src);\n-  void range_of_ssa_name_with_loop_info (irange &, tree, class loop *, gphi *,\n+  void range_of_ssa_name_with_loop_info (vrange &, tree, class loop *, gphi *,\n \t\t\t\t\t fur_source &src);\n   void relation_fold_and_or (irange& lhs_range, gimple *s, fur_source &src);\n };"}]}