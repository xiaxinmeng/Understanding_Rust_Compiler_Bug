{"sha": "b56d093e95221cd2d95b3c030f6102378eeffe69", "node_id": "C_kwDOANBUbNoAKGI1NmQwOTNlOTUyMjFjZDJkOTViM2MwMzBmNjEwMjM3OGVlZmZlNjk", "commit": {"author": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-02-09T09:47:15Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-04-06T08:47:23Z"}, "message": "gccrs: lex: Prevent directories in RAIIFile\n\nRAIIFile constructor was accepting directory filename. This lead to\nunattended directory opening in some part of the code (load_file_bytes)\nwich resulted in ice. Since RAIIFile are used for the lexer, removing\nthe ability to open directories with RAIIFile fixes those issues and\nprevent future mistakes.\n\ngcc/rust/ChangeLog:\n\n\t* lex/rust-lex.h: Add file type check.\n\nSigned-off-by: Pierre-Emmanuel Patry <pierre-emmanuel.patry@embecosm.com>", "tree": {"sha": "f2db1034d1aa7691fc8c069a25e778b6891ecb61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2db1034d1aa7691fc8c069a25e778b6891ecb61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b56d093e95221cd2d95b3c030f6102378eeffe69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b56d093e95221cd2d95b3c030f6102378eeffe69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b56d093e95221cd2d95b3c030f6102378eeffe69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b56d093e95221cd2d95b3c030f6102378eeffe69/comments", "author": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e81f5be60d1ff504f9b1b2c5cfad0a808bec4ff7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e81f5be60d1ff504f9b1b2c5cfad0a808bec4ff7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e81f5be60d1ff504f9b1b2c5cfad0a808bec4ff7"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "50424713df9a090ff0ee1e548188d2139eff9f6c", "filename": "gcc/rust/lex/rust-lex.h", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b56d093e95221cd2d95b3c030f6102378eeffe69/gcc%2Frust%2Flex%2Frust-lex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b56d093e95221cd2d95b3c030f6102378eeffe69/gcc%2Frust%2Flex%2Frust-lex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flex%2Frust-lex.h?ref=b56d093e95221cd2d95b3c030f6102378eeffe69", "patch": "@@ -38,13 +38,37 @@ struct RAIIFile\n       fclose (file);\n   }\n \n+  static bool allowed_filetype (const struct stat &statbuf)\n+  {\n+    // The file could be either\n+    // - a regular file\n+    // - a char device (/dev/null...)\n+    return S_ISREG (statbuf.st_mode) || S_ISCHR (statbuf.st_mode);\n+  }\n+\n public:\n   RAIIFile (const char *filename) : filename (filename)\n   {\n     if (strcmp (filename, \"-\") == 0)\n-      file = stdin;\n+      {\n+\tfile = stdin;\n+      }\n     else\n-      file = fopen (filename, \"r\");\n+      {\n+\tstruct stat statbuf;\n+\tif (!(file = fopen (filename, \"r\")))\n+\t  {\n+\t    return;\n+\t  }\n+\n+\tif (-1 == fstat (fileno (file), &statbuf)\n+\t    || !allowed_filetype (statbuf))\n+\t  {\n+\t    fclose (file);\n+\t    file = nullptr;\n+\t    errno = EISDIR;\n+\t  }\n+      }\n   }\n \n   /**"}]}