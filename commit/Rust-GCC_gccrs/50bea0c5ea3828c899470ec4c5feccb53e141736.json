{"sha": "50bea0c5ea3828c899470ec4c5feccb53e141736", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBiZWEwYzVlYTM4MjhjODk5NDcwZWM0YzVmZWNjYjUzZTE0MTczNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-03-02T21:31:40Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-03-02T21:31:40Z"}, "message": "re PR c++/79782 (ICE: tree check: expected tree_list, have void_type in emit_mem_initializers, at cp/init.c:1225)\n\n\tPR c++/79782\n\t* init.c (mark_exp_read_r): New function.\n\t(emit_mem_initializers): Use cp_walk_tree with mark_exp_read_r on\n\twhole arguments instead of plain mark_exp_read on TREE_LIST values.\n\n\t* g++.dg/warn/Wunused-parm-10.C: New test.\n\nFrom-SVN: r245853", "tree": {"sha": "fb97b540aa1f77b164ab1a7a004df1bd40c30e45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb97b540aa1f77b164ab1a7a004df1bd40c30e45"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50bea0c5ea3828c899470ec4c5feccb53e141736", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50bea0c5ea3828c899470ec4c5feccb53e141736", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50bea0c5ea3828c899470ec4c5feccb53e141736", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50bea0c5ea3828c899470ec4c5feccb53e141736/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2f9221bf7ef34e888ef527bc8e5eb5a8b5df7699", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f9221bf7ef34e888ef527bc8e5eb5a8b5df7699", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f9221bf7ef34e888ef527bc8e5eb5a8b5df7699"}], "stats": {"total": 38, "additions": 36, "deletions": 2}, "files": [{"sha": "04ae0de3260420ea3b036e2d759fa49aeab570f8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50bea0c5ea3828c899470ec4c5feccb53e141736/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50bea0c5ea3828c899470ec4c5feccb53e141736/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=50bea0c5ea3828c899470ec4c5feccb53e141736", "patch": "@@ -1,3 +1,10 @@\n+2017-03-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/79782\n+\t* init.c (mark_exp_read_r): New function.\n+\t(emit_mem_initializers): Use cp_walk_tree with mark_exp_read_r on\n+\twhole arguments instead of plain mark_exp_read on TREE_LIST values.\n+\n 2017-03-01  Jason Merrill  <jason@redhat.com>\n \n \tClass template argument deduction in new-expression"}, {"sha": "e4f038912286a05e28410721bfa03f5f735d04cd", "filename": "gcc/cp/init.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50bea0c5ea3828c899470ec4c5feccb53e141736/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50bea0c5ea3828c899470ec4c5feccb53e141736/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=50bea0c5ea3828c899470ec4c5feccb53e141736", "patch": "@@ -1127,6 +1127,17 @@ sort_mem_initializers (tree t, tree mem_inits)\n   return sorted_inits;\n }\n \n+/* Callback for cp_walk_tree to mark all PARM_DECLs in a tree as read.  */\n+\n+static tree\n+mark_exp_read_r (tree *tp, int *, void *)\n+{\n+  tree t = *tp;\n+  if (TREE_CODE (t) == PARM_DECL)\n+    mark_exp_read (t);\n+  return NULL_TREE;\n+}\n+\n /* Initialize all bases and members of CURRENT_CLASS_TYPE.  MEM_INITS\n    is a TREE_LIST giving the explicit mem-initializer-list for the\n    constructor.  The TREE_PURPOSE of each entry is a subobject (a\n@@ -1221,8 +1232,7 @@ emit_mem_initializers (tree mem_inits)\n \t/* When not constructing vbases of abstract classes, at least mark\n \t   the arguments expressions as read to avoid\n \t   -Wunused-but-set-parameter false positives.  */\n-\tfor (tree arg = arguments; arg; arg = TREE_CHAIN (arg))\n-\t  mark_exp_read (TREE_VALUE (arg));\n+\tcp_walk_tree (&arguments, mark_exp_read_r, NULL, NULL);\n \n       if (inherited_base)\n \tpop_deferring_access_checks ();"}, {"sha": "b0034ed4facaf9ad853246eadd17d6f7a5649909", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50bea0c5ea3828c899470ec4c5feccb53e141736/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50bea0c5ea3828c899470ec4c5feccb53e141736/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=50bea0c5ea3828c899470ec4c5feccb53e141736", "patch": "@@ -1,3 +1,8 @@\n+2017-03-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/79782\n+\t* g++.dg/warn/Wunused-parm-10.C: New test.\n+\n 2017-03-02  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.dg/rtl/x86_64/*.c: Test for"}, {"sha": "e641037141f18734ea748fa09b0d6c33c4f7923b", "filename": "gcc/testsuite/g++.dg/warn/Wunused-parm-10.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50bea0c5ea3828c899470ec4c5feccb53e141736/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWunused-parm-10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50bea0c5ea3828c899470ec4c5feccb53e141736/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWunused-parm-10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWunused-parm-10.C?ref=50bea0c5ea3828c899470ec4c5feccb53e141736", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/79782\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-Wunused-but-set-parameter -Wunused-parameter\" }\n+\n+struct E { virtual E *foo () const = 0; };\n+struct F : virtual public E { };\n+struct G : public virtual F { G (int x) : F () { } };\t\t\t\t// { dg-warning \"unused parameter\" }\n+struct H : virtual public E { H (int x, int y); };\n+struct I : public virtual H { I (int x, int y) : H (x, y) { } };\t\t// { dg-bogus \"set but not used\" }\n+struct J : public virtual H { J (int x, int y) : H { x, y } { } };\t\t// { dg-bogus \"set but not used\" }\n+struct K : public virtual H { K (int x, int y) : H (x * 0, y + 1) { } };\t// { dg-bogus \"set but not used\" }\n+struct L : public virtual H { L (int x, int y) : H { x & 0, y | 1 } { } };\t// { dg-bogus \"set but not used\" }"}]}