{"sha": "35f5b1c1b98f5f7f6b8882614d5b37fe51c845f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVmNWIxYzFiOThmNWY3ZjZiODg4MjYxNGQ1YjM3ZmU1MWM4NDVmNg==", "commit": {"author": {"name": "Lawrence Crowl", "email": "crowl@google.com", "date": "2011-10-13T15:41:52Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2011-10-13T15:41:52Z"}, "message": "lto-streamer-in.c (input_struct_function_base): Factor out of ...\n\n2011-10-12   Lawrence Crowl  <crowl@google.com>\n\t     Diego Novillo  <dnovillo@google.com>\n\n\t* lto-streamer-in.c (input_struct_function_base): Factor out of ...\n\t(input_function): ... here.\n\t* lto-streamer-out.c (output_struct_function_base): Factor out of ...\n\t(output_function): ... here.\n\nCo-Authored-By: Diego Novillo <dnovillo@google.com>\n\nFrom-SVN: r179928", "tree": {"sha": "8e28d4ab7fb32944612ba5b60182e18e7166269b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e28d4ab7fb32944612ba5b60182e18e7166269b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35f5b1c1b98f5f7f6b8882614d5b37fe51c845f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35f5b1c1b98f5f7f6b8882614d5b37fe51c845f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35f5b1c1b98f5f7f6b8882614d5b37fe51c845f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35f5b1c1b98f5f7f6b8882614d5b37fe51c845f6/comments", "author": null, "committer": null, "parents": [{"sha": "a22286c349fb54b55562312c1a5fa0f6e00720e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a22286c349fb54b55562312c1a5fa0f6e00720e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a22286c349fb54b55562312c1a5fa0f6e00720e0"}], "stats": {"total": 163, "additions": 97, "deletions": 66}, "files": [{"sha": "88cbf20a1caa9639b15ad228cbebefd174bfdc33", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35f5b1c1b98f5f7f6b8882614d5b37fe51c845f6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35f5b1c1b98f5f7f6b8882614d5b37fe51c845f6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35f5b1c1b98f5f7f6b8882614d5b37fe51c845f6", "patch": "@@ -1,3 +1,11 @@\n+2011-10-13   Lawrence Crowl  <crowl@google.com>\n+\t     Diego Novillo  <dnovillo@google.com>\n+\n+\t* lto-streamer-in.c (input_struct_function_base): Factor out of ...\n+\t(input_function): ... here.\n+\t* lto-streamer-out.c (output_struct_function_base): Factor out of ...\n+\t(output_function): ... here.\n+\n 2011-10-13  Gabriel Charette  <gchare@google.com>\n \t    Diego Novillo  <dnovillo@google.com>\n "}, {"sha": "1847738fbc3cee0ddd090f4c9ef506253099a5ba", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 47, "deletions": 34, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35f5b1c1b98f5f7f6b8882614d5b37fe51c845f6/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35f5b1c1b98f5f7f6b8882614d5b37fe51c845f6/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=35f5b1c1b98f5f7f6b8882614d5b37fe51c845f6", "patch": "@@ -764,27 +764,40 @@ fixup_call_stmt_edges (struct cgraph_node *orig, gimple *stmts)\n       }\n }\n \n-/* Read the body of function FN_DECL from DATA_IN using input block IB.  */\n+\n+/* Input the base body of struct function FN from DATA_IN\n+   using input block IB.  */\n \n static void\n-input_function (tree fn_decl, struct data_in *data_in,\n-\t\tstruct lto_input_block *ib)\n+input_struct_function_base (struct function *fn, struct data_in *data_in,\n+                            struct lto_input_block *ib)\n {\n-  struct function *fn;\n-  enum LTO_tags tag;\n-  gimple *stmts;\n-  basic_block bb;\n   struct bitpack_d bp;\n-  struct cgraph_node *node;\n-  tree args, narg, oarg;\n   int len;\n \n-  fn = DECL_STRUCT_FUNCTION (fn_decl);\n-  tag = streamer_read_record_start (ib);\n-  clear_line_info (data_in);\n+  /* Read the static chain and non-local goto save area.  */\n+  fn->static_chain_decl = stream_read_tree (ib, data_in);\n+  fn->nonlocal_goto_save_area = stream_read_tree (ib, data_in);\n \n-  gimple_register_cfg_hooks ();\n-  lto_tag_check (tag, LTO_function);\n+  /* Read all the local symbols.  */\n+  len = streamer_read_hwi (ib);\n+  if (len > 0)\n+    {\n+      int i;\n+      VEC_safe_grow (tree, gc, fn->local_decls, len);\n+      for (i = 0; i < len; i++)\n+\t{\n+\t  tree t = stream_read_tree (ib, data_in);\n+\t  VEC_replace (tree, fn->local_decls, i, t);\n+\t}\n+    }\n+\n+  /* Input the function start and end loci.  */\n+  fn->function_start_locus = lto_input_location (ib, data_in);\n+  fn->function_end_locus = lto_input_location (ib, data_in);\n+\n+  /* Input the current IL state of the function.  */\n+  fn->curr_properties = streamer_read_uhwi (ib);\n \n   /* Read all the attributes for FN.  */\n   bp = streamer_read_bitpack (ib);\n@@ -802,30 +815,30 @@ input_function (tree fn_decl, struct data_in *data_in,\n   fn->calls_setjmp = bp_unpack_value (&bp, 1);\n   fn->va_list_fpr_size = bp_unpack_value (&bp, 8);\n   fn->va_list_gpr_size = bp_unpack_value (&bp, 8);\n+}\n \n-  /* Input the function start and end loci.  */\n-  fn->function_start_locus = lto_input_location (ib, data_in);\n-  fn->function_end_locus = lto_input_location (ib, data_in);\n \n-  /* Input the current IL state of the function.  */\n-  fn->curr_properties = streamer_read_uhwi (ib);\n+/* Read the body of function FN_DECL from DATA_IN using input block IB.  */\n \n-  /* Read the static chain and non-local goto save area.  */\n-  fn->static_chain_decl = stream_read_tree (ib, data_in);\n-  fn->nonlocal_goto_save_area = stream_read_tree (ib, data_in);\n+static void\n+input_function (tree fn_decl, struct data_in *data_in,\n+\t\tstruct lto_input_block *ib)\n+{\n+  struct function *fn;\n+  enum LTO_tags tag;\n+  gimple *stmts;\n+  basic_block bb;\n+  struct cgraph_node *node;\n+  tree args, narg, oarg;\n \n-  /* Read all the local symbols.  */\n-  len = streamer_read_hwi (ib);\n-  if (len > 0)\n-    {\n-      int i;\n-      VEC_safe_grow (tree, gc, fn->local_decls, len);\n-      for (i = 0; i < len; i++)\n-\t{\n-\t  tree t = stream_read_tree (ib, data_in);\n-\t  VEC_replace (tree, fn->local_decls, i, t);\n-\t}\n-    }\n+  fn = DECL_STRUCT_FUNCTION (fn_decl);\n+  tag = streamer_read_record_start (ib);\n+  clear_line_info (data_in);\n+\n+  gimple_register_cfg_hooks ();\n+  lto_tag_check (tag, LTO_function);\n+\n+  input_struct_function_base (fn, data_in, ib);\n \n   /* Read all function arguments.  We need to re-map them here to the\n      arguments of the merged function declaration.  */"}, {"sha": "62cf9a1832f10f9872b6b7de7692e056f73b80e8", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 42, "deletions": 32, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35f5b1c1b98f5f7f6b8882614d5b37fe51c845f6/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35f5b1c1b98f5f7f6b8882614d5b37fe51c845f6/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=35f5b1c1b98f5f7f6b8882614d5b37fe51c845f6", "patch": "@@ -719,36 +719,30 @@ produce_asm (struct output_block *ob, tree fn)\n }\n \n \n-/* Output the body of function NODE->DECL.  */\n+/* Output the base body of struct function FN using output block OB.  */\n \n static void\n-output_function (struct cgraph_node *node)\n+output_struct_function_base (struct output_block *ob, struct function *fn)\n {\n   struct bitpack_d bp;\n-  tree function;\n-  struct function *fn;\n-  basic_block bb;\n-  struct output_block *ob;\n   unsigned i;\n   tree t;\n \n-  function = node->decl;\n-  fn = DECL_STRUCT_FUNCTION (function);\n-  ob = create_output_block (LTO_section_function_body);\n-\n-  clear_line_info (ob);\n-  ob->cgraph_node = node;\n-\n-  gcc_assert (current_function_decl == NULL_TREE && cfun == NULL);\n+  /* Output the static chain and non-local goto save area.  */\n+  stream_write_tree (ob, fn->static_chain_decl, true);\n+  stream_write_tree (ob, fn->nonlocal_goto_save_area, true);\n \n-  /* Set current_function_decl and cfun.  */\n-  current_function_decl = function;\n-  push_cfun (fn);\n+  /* Output all the local variables in the function.  */\n+  streamer_write_hwi (ob, VEC_length (tree, fn->local_decls));\n+  FOR_EACH_VEC_ELT (tree, fn->local_decls, i, t)\n+    stream_write_tree (ob, t, true);\n \n-  /* Make string 0 be a NULL string.  */\n-  streamer_write_char_stream (ob->string_stream, 0);\n+  /* Output the function start and end loci.  */\n+  lto_output_location (ob, fn->function_start_locus);\n+  lto_output_location (ob, fn->function_end_locus);\n \n-  streamer_write_record_start (ob, LTO_function);\n+  /* Output current IL state of the function.  */\n+  streamer_write_uhwi (ob, fn->curr_properties);\n \n   /* Write all the attributes for FN.  */\n   bp = bitpack_create (ob->main_stream);\n@@ -767,22 +761,38 @@ output_function (struct cgraph_node *node)\n   bp_pack_value (&bp, fn->va_list_fpr_size, 8);\n   bp_pack_value (&bp, fn->va_list_gpr_size, 8);\n   streamer_write_bitpack (&bp);\n+}\n \n-  /* Output the function start and end loci.  */\n-  lto_output_location (ob, fn->function_start_locus);\n-  lto_output_location (ob, fn->function_end_locus);\n \n-  /* Output current IL state of the function.  */\n-  streamer_write_uhwi (ob, fn->curr_properties);\n+/* Output the body of function NODE->DECL.  */\n \n-  /* Output the static chain and non-local goto save area.  */\n-  stream_write_tree (ob, fn->static_chain_decl, true);\n-  stream_write_tree (ob, fn->nonlocal_goto_save_area, true);\n+static void\n+output_function (struct cgraph_node *node)\n+{\n+  tree function;\n+  struct function *fn;\n+  basic_block bb;\n+  struct output_block *ob;\n \n-  /* Output all the local variables in the function.  */\n-  streamer_write_hwi (ob, VEC_length (tree, fn->local_decls));\n-  FOR_EACH_VEC_ELT (tree, fn->local_decls, i, t)\n-    stream_write_tree (ob, t, true);\n+  function = node->decl;\n+  fn = DECL_STRUCT_FUNCTION (function);\n+  ob = create_output_block (LTO_section_function_body);\n+\n+  clear_line_info (ob);\n+  ob->cgraph_node = node;\n+\n+  gcc_assert (current_function_decl == NULL_TREE && cfun == NULL);\n+\n+  /* Set current_function_decl and cfun.  */\n+  current_function_decl = function;\n+  push_cfun (fn);\n+\n+  /* Make string 0 be a NULL string.  */\n+  streamer_write_char_stream (ob->string_stream, 0);\n+\n+  streamer_write_record_start (ob, LTO_function);\n+\n+  output_struct_function_base (ob, fn);\n \n   /* Output the head of the arguments list.  */\n   stream_write_tree (ob, DECL_ARGUMENTS (function), true);"}]}