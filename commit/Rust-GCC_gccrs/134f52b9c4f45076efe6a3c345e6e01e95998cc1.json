{"sha": "134f52b9c4f45076efe6a3c345e6e01e95998cc1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM0ZjUyYjljNGY0NTA3NmVmZTZhM2MzNDVlNmUwMWU5NTk5OGNjMQ==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2019-07-09T07:54:40Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-07-09T07:54:40Z"}, "message": "[Ada] Minor reformatting\n\n2019-07-09  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch9.adb, exp_util.adb, repinfo.adb, sem_ch12.adb,\n\tsem_prag.adb, sem_res.adb, sem_spark.adb, sem_util.adb: Minor\n\treformatting.\n\nFrom-SVN: r273282", "tree": {"sha": "d36a6a4e5eaaf93560edebb716059d624b4a5735", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d36a6a4e5eaaf93560edebb716059d624b4a5735"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/134f52b9c4f45076efe6a3c345e6e01e95998cc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/134f52b9c4f45076efe6a3c345e6e01e95998cc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/134f52b9c4f45076efe6a3c345e6e01e95998cc1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/134f52b9c4f45076efe6a3c345e6e01e95998cc1/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0ce858310c2bba03fc030f34f4217cb405020bcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ce858310c2bba03fc030f34f4217cb405020bcf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ce858310c2bba03fc030f34f4217cb405020bcf"}], "stats": {"total": 64, "additions": 36, "deletions": 28}, "files": [{"sha": "7d8ea33d5557124b23f414ab24b34486d440f796", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134f52b9c4f45076efe6a3c345e6e01e95998cc1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134f52b9c4f45076efe6a3c345e6e01e95998cc1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=134f52b9c4f45076efe6a3c345e6e01e95998cc1", "patch": "@@ -1,3 +1,9 @@\n+2019-07-09  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch9.adb, exp_util.adb, repinfo.adb, sem_ch12.adb,\n+\tsem_prag.adb, sem_res.adb, sem_spark.adb, sem_util.adb: Minor\n+\treformatting.\n+\n 2019-07-09  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_res.adb (Resolve_Equality_Op): If the node was overloaded,"}, {"sha": "48b4090a836920fea643eed2fb878f1c85ccb3db", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134f52b9c4f45076efe6a3c345e6e01e95998cc1/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134f52b9c4f45076efe6a3c345e6e01e95998cc1/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=134f52b9c4f45076efe6a3c345e6e01e95998cc1", "patch": "@@ -10712,7 +10712,7 @@ package body Exp_Ch9 is\n               Make_Defining_Identifier (Eloc,\n                 New_External_Name (Chars (Ename), 'A', Num_Accept));\n \n-            --  Link the acceptor to the original receiving entry.\n+            --  Link the acceptor to the original receiving entry\n \n             Set_Ekind           (PB_Ent, E_Procedure);\n             Set_Receiving_Entry (PB_Ent, Eent);\n@@ -12666,8 +12666,9 @@ package body Exp_Ch9 is\n       --  to Build_Simple_Entry_Call.\n \n       if Is_Disp_Select then\n-         --  Compute the delay at this stage because the evaluation of\n-         --  its expression must not occur earlier (see ACVC C97302A).\n+\n+         --  Compute the delay at this stage because the evaluation of its\n+         --  expression must not occur earlier (see ACVC C97302A).\n \n          Append_To (Stmts,\n            Make_Assignment_Statement (Loc,\n@@ -14882,8 +14883,8 @@ package body Exp_Ch9 is\n \n          --  Ditto for a package declaration or a full type declaration, etc.\n \n-         elsif\n-           (Nkind (N) = N_Package_Declaration and then N /= Specification (N))\n+         elsif (Nkind (N) = N_Package_Declaration\n+                 and then N /= Specification (N))\n            or else Nkind (N) in N_Declaration\n            or else Nkind (N) in N_Renaming_Declaration\n          then"}, {"sha": "9769d6849226c77061cea847c2366974cb3c3d6d", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134f52b9c4f45076efe6a3c345e6e01e95998cc1/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134f52b9c4f45076efe6a3c345e6e01e95998cc1/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=134f52b9c4f45076efe6a3c345e6e01e95998cc1", "patch": "@@ -5073,9 +5073,7 @@ package body Exp_Util is\n       --  is necessary both for passing legality checks in GNAT and for precise\n       --  analysis in GNATprove.\n \n-      if GNATprove_Mode\n-        and then not Is_Static_Expression (Exp)\n-      then\n+      if GNATprove_Mode and then not Is_Static_Expression (Exp) then\n          return;\n       end if;\n \n@@ -5100,7 +5098,7 @@ package body Exp_Util is\n \n             --  This subtype indication may be used later for constraint checks\n             --  we better make sure that if a variable was used as a bound of\n-            --  of the original slice, its value is frozen.\n+            --  the original slice, its value is frozen.\n \n             Evaluate_Slice_Bounds (Exp);\n          end;\n@@ -11693,7 +11691,7 @@ package body Exp_Util is\n \n       Set_Assignment_OK (Res, Assignment_OK (Exp));\n \n-      --  Preserve the Do_Range_Check flag in all copies.\n+      --  Preserve the Do_Range_Check flag in all copies\n \n       Set_Do_Range_Check (Res, Do_Range_Check (Exp));\n "}, {"sha": "c378fb634a2c670ba96e72ddaf1901370d94ba84", "filename": "gcc/ada/repinfo.adb", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134f52b9c4f45076efe6a3c345e6e01e95998cc1/gcc%2Fada%2Frepinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134f52b9c4f45076efe6a3c345e6e01e95998cc1/gcc%2Fada%2Frepinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.adb?ref=134f52b9c4f45076efe6a3c345e6e01e95998cc1", "patch": "@@ -559,7 +559,9 @@ package body Repinfo is\n \n                --  Note that formals are not annotated so we skip them here\n \n-               elsif Ekind_In (E, E_Variable, E_Constant, E_Loop_Parameter)\n+               elsif Ekind_In (E, E_Constant,\n+                                  E_Loop_Parameter,\n+                                  E_Variable)\n                then\n                   if List_Representation_Info >= 2 then\n                      List_Object_Info (E);\n@@ -577,12 +579,12 @@ package body Repinfo is\n \n                --  Recurse into bodies\n \n-               elsif Ekind_In (E, E_Protected_Type,\n-                                  E_Task_Type,\n+               elsif Ekind_In (E, E_Package_Body,\n+                                  E_Protected_Body,\n+                                  E_Protected_Type,\n                                   E_Subprogram_Body,\n-                                  E_Package_Body,\n                                   E_Task_Body,\n-                                  E_Protected_Body)\n+                                  E_Task_Type)\n                then\n                   List_Entities (E, Bytes_Big_Endian);\n "}, {"sha": "3aa49755b39fcaa4f210284464ffaaaf8c874a93", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134f52b9c4f45076efe6a3c345e6e01e95998cc1/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134f52b9c4f45076efe6a3c345e6e01e95998cc1/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=134f52b9c4f45076efe6a3c345e6e01e95998cc1", "patch": "@@ -10315,7 +10315,7 @@ package body Sem_Ch12 is\n       --  such as a parent generic within the body of a generic child.\n \n       if not Is_Entity_Name (Actual)\n-        or else not Ekind_In (Entity (Actual), E_Package, E_Generic_Package)\n+        or else not Ekind_In (Entity (Actual), E_Generic_Package, E_Package)\n       then\n          Error_Msg_N\n            (\"expect package instance to instantiate formal\", Actual);\n@@ -10354,13 +10354,11 @@ package body Sem_Ch12 is\n               (\"previous error in declaration of formal package\", Actual);\n             Abandon_Instantiation (Actual);\n \n-         elsif\n-           Is_Instance_Of (Parent_Spec, Get_Instance_Of (Gen_Parent))\n-         then\n+         elsif Is_Instance_Of (Parent_Spec, Get_Instance_Of (Gen_Parent)) then\n             null;\n \n-         --  If this is the current instance of an enclosing generic, that\n-         --  unit is the generic package we need.\n+         --  If this is the current instance of an enclosing generic, that unit\n+         --  is the generic package we need.\n \n          elsif In_Open_Scopes (Actual_Pack)\n            and then Ekind (Actual_Pack) = E_Generic_Package\n@@ -10425,7 +10423,7 @@ package body Sem_Ch12 is\n \n             Actual_Ent := First_Entity (Actual_Pack);\n             Actual_Of_Formal :=\n-               First (Visible_Declarations (Specification (Analyzed_Formal)));\n+              First (Visible_Declarations (Specification (Analyzed_Formal)));\n             while Present (Actual_Ent)\n               and then Actual_Ent /= First_Private_Entity (Actual_Pack)\n             loop"}, {"sha": "97cf3fe24569ecc3a58866adfe1df82ee0cf110e", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134f52b9c4f45076efe6a3c345e6e01e95998cc1/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134f52b9c4f45076efe6a3c345e6e01e95998cc1/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=134f52b9c4f45076efe6a3c345e6e01e95998cc1", "patch": "@@ -8963,8 +8963,7 @@ package body Sem_Prag is\n             Mark_Rewrite_Insertion (Decl);\n \n          else\n-            Error_Pragma_Arg (\"no matching type found for pragma%\",\n-            Arg2);\n+            Error_Pragma_Arg (\"no matching type found for pragma%\", Arg2);\n          end if;\n       end Process_Import_Predefined_Type;\n "}, {"sha": "c151e7a39cb75686b7b62fe174e969a52491dfb7", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134f52b9c4f45076efe6a3c345e6e01e95998cc1/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134f52b9c4f45076efe6a3c345e6e01e95998cc1/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=134f52b9c4f45076efe6a3c345e6e01e95998cc1", "patch": "@@ -8446,6 +8446,7 @@ package body Sem_Res is\n             declare\n                I  : Interp_Index;\n                It : Interp;\n+\n             begin\n                Get_First_Interp (N, I, It);\n \n@@ -10086,6 +10087,7 @@ package body Sem_Res is\n               and then Is_Overloaded (Opnd)\n             then\n                Resolve_Equality_Op (Opnd, B_Typ);\n+\n                if Ekind (Entity (Opnd)) = E_Function then\n                   Rewrite_Operator_As_Call (Opnd, Entity (Opnd));\n                end if;"}, {"sha": "70953b5b6da9ba21519f912986917089c67b9d63", "filename": "gcc/ada/sem_spark.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134f52b9c4f45076efe6a3c345e6e01e95998cc1/gcc%2Fada%2Fsem_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134f52b9c4f45076efe6a3c345e6e01e95998cc1/gcc%2Fada%2Fsem_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_spark.adb?ref=134f52b9c4f45076efe6a3c345e6e01e95998cc1", "patch": "@@ -1612,7 +1612,7 @@ package body Sem_SPARK is\n \n                   Move_Expression_List (Expressions (Expr));\n \n-                  --  Handle the named components next.\n+                  --  Handle the named components next\n \n                   while Present (Assoc) loop\n                      CL := Choices (Assoc);\n@@ -1636,8 +1636,9 @@ package body Sem_SPARK is\n                      if Is_Deep (Etype (Expression (Assoc)))\n                        and then not Is_Singleton_Choice (CL)\n                      then\n-                        Error_Msg_F (\"singleton choice required\"\n-                                     & \" to prevent aliasing\", First (CL));\n+                        Error_Msg_F\n+                          (\"singleton choice required to prevent aliasing\",\n+                           First (CL));\n                      end if;\n \n                      --  The subexpressions of an aggregate are moved as part"}, {"sha": "19e0026d6f71b1c71044376aae6efced6871c00e", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134f52b9c4f45076efe6a3c345e6e01e95998cc1/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134f52b9c4f45076efe6a3c345e6e01e95998cc1/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=134f52b9c4f45076efe6a3c345e6e01e95998cc1", "patch": "@@ -24269,8 +24269,9 @@ package body Sem_Util is\n       Outer : Entity_Id) return Boolean\n    is\n       Curr : Entity_Id := Inner;\n+\n    begin\n-      --  Similar to the above, but check for scope identity first.\n+      --  Similar to the above, but check for scope identity first\n \n       while Present (Curr) and then Curr /= Standard_Standard loop\n          if Curr = Outer then"}]}