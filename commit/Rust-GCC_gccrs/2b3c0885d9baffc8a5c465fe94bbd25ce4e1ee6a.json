{"sha": "2b3c0885d9baffc8a5c465fe94bbd25ce4e1ee6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmIzYzA4ODVkOWJhZmZjOGE1YzQ2NWZlOTRiYmQyNWNlNGUxZWU2YQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-10-13T12:07:44Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-10-13T12:07:44Z"}, "message": "re PR middle-end/50712 (invalid argument to gimple call)\n\n2011-10-13  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/50712\n\t* ipa-split.c (split_function): Always re-gimplify parameters\n\twhen they are not gimple vals before passing them.  Properly\n\tcheck for type compatibility.\n\n\t* gcc.target/i386/pr50712.c: New testcase.\n\nFrom-SVN: r179919", "tree": {"sha": "9fd933d033a83db660e820c57dd9f7e20bfb6a5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fd933d033a83db660e820c57dd9f7e20bfb6a5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b3c0885d9baffc8a5c465fe94bbd25ce4e1ee6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b3c0885d9baffc8a5c465fe94bbd25ce4e1ee6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b3c0885d9baffc8a5c465fe94bbd25ce4e1ee6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b3c0885d9baffc8a5c465fe94bbd25ce4e1ee6a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4c8933bce93d7abff81a9b21ace228f62979d8aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c8933bce93d7abff81a9b21ace228f62979d8aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c8933bce93d7abff81a9b21ace228f62979d8aa"}], "stats": {"total": 69, "additions": 54, "deletions": 15}, "files": [{"sha": "6b0423a541eb779549afbfc88da72577a130041a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b3c0885d9baffc8a5c465fe94bbd25ce4e1ee6a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b3c0885d9baffc8a5c465fe94bbd25ce4e1ee6a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2b3c0885d9baffc8a5c465fe94bbd25ce4e1ee6a", "patch": "@@ -1,3 +1,10 @@\n+2011-10-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/50712\n+\t* ipa-split.c (split_function): Always re-gimplify parameters\n+\twhen they are not gimple vals before passing them.  Properly\n+\tcheck for type compatibility.\n+\n 2011-10-13  Tom de Vries  <tom@codesourcery.com>\n \n \t* function.c (gimplify_parameters): Set number of arguments of call to"}, {"sha": "75cc619c042c9d5539529b0690118fa00aeab911", "filename": "gcc/ipa-split.c", "status": "modified", "additions": 9, "deletions": 15, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b3c0885d9baffc8a5c465fe94bbd25ce4e1ee6a/gcc%2Fipa-split.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b3c0885d9baffc8a5c465fe94bbd25ce4e1ee6a/gcc%2Fipa-split.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-split.c?ref=2b3c0885d9baffc8a5c465fe94bbd25ce4e1ee6a", "patch": "@@ -958,7 +958,6 @@ split_function (struct split_point *split_point)\n   tree retval = NULL, real_retval = NULL;\n   bool split_part_return_p = false;\n   gimple last_stmt = NULL;\n-  bool conv_needed = false;\n   unsigned int i;\n   tree arg;\n \n@@ -1000,12 +999,8 @@ split_function (struct split_point *split_point)\n \telse\n \t  arg = parm;\n \n-\tif (TYPE_MAIN_VARIANT (DECL_ARG_TYPE (parm))\n-\t    != TYPE_MAIN_VARIANT (TREE_TYPE (arg)))\n-\t  {\n-\t    conv_needed = true;\n-\t    arg = fold_convert (DECL_ARG_TYPE (parm), arg);\n-\t  }\n+\tif (!useless_type_conversion_p (DECL_ARG_TYPE (parm), TREE_TYPE (arg)))\n+\t  arg = fold_convert (DECL_ARG_TYPE (parm), arg);\n \tVEC_safe_push (tree, heap, args_to_pass, arg);\n       }\n \n@@ -1135,14 +1130,13 @@ split_function (struct split_point *split_point)\n \n   /* Produce the call statement.  */\n   gsi = gsi_last_bb (call_bb);\n-  if (conv_needed)\n-    FOR_EACH_VEC_ELT (tree, args_to_pass, i, arg)\n-      if (!is_gimple_val (arg))\n-\t{\n-\t  arg = force_gimple_operand_gsi (&gsi, arg, true, NULL_TREE,\n-\t\t\t\t\t  false, GSI_NEW_STMT);\n-\t  VEC_replace (tree, args_to_pass, i, arg);\n-\t}\n+  FOR_EACH_VEC_ELT (tree, args_to_pass, i, arg)\n+    if (!is_gimple_val (arg))\n+      {\n+\targ = force_gimple_operand_gsi (&gsi, arg, true, NULL_TREE,\n+\t\t\t\t\tfalse, GSI_NEW_STMT);\n+\tVEC_replace (tree, args_to_pass, i, arg);\n+      }\n   call = gimple_build_call_vec (node->decl, args_to_pass);\n   gimple_set_block (call, DECL_INITIAL (current_function_decl));\n "}, {"sha": "ca2e33a8038e937e151c7dde6fd57ca8cfb1025e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b3c0885d9baffc8a5c465fe94bbd25ce4e1ee6a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b3c0885d9baffc8a5c465fe94bbd25ce4e1ee6a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2b3c0885d9baffc8a5c465fe94bbd25ce4e1ee6a", "patch": "@@ -1,3 +1,8 @@\n+2011-10-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/50712\n+\t* gcc.target/i386/pr50712.c: New testcase.\n+\n 2011-10-13  Tom de Vries  <tom@codesourcery.com>\n \n \t* gcc.dg/memcpy-4.c: New test."}, {"sha": "f08a94453de8e08ab8ddbe37b66c66edd6d9d9cb", "filename": "gcc/testsuite/gcc.target/i386/pr50712.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b3c0885d9baffc8a5c465fe94bbd25ce4e1ee6a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr50712.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b3c0885d9baffc8a5c465fe94bbd25ce4e1ee6a/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr50712.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr50712.c?ref=2b3c0885d9baffc8a5c465fe94bbd25ce4e1ee6a", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target ilp32 } */\n+/* { dg-options \"-O2\" } */\n+\n+typedef __builtin_va_list __va_list;\n+typedef __va_list __gnuc_va_list;\n+typedef __gnuc_va_list va_list;\n+struct MSVCRT__iobuf { };\n+typedef struct MSVCRT__iobuf MSVCRT_FILE;\n+typedef union _printf_arg { } printf_arg;\n+MSVCRT_FILE MSVCRT__iob[20];\n+int pf_print_a (va_list *);\n+int __attribute__((__cdecl__))\n+MSVCRT_vfprintf_s(MSVCRT_FILE* file, const char *format, va_list valist)\n+{\n+  if(!((file != ((void *)0))\n+       || (MSVCRT__invalid_parameter(((void *)0), ((void *)0),\n+\t\t\t\t     ((void *)0), 0, 0),0)))\n+      return -1;\n+  return pf_printf_a(&valist);\n+}\n+int __attribute__((__cdecl__))\n+MSVCRT_vprintf_s(const char *format, va_list valist)\n+{\n+  return MSVCRT_vfprintf_s((MSVCRT__iob+1),format,valist);\n+}\n+int __attribute__((__cdecl__))\n+MSVCRT_fprintf_s(MSVCRT_FILE* file, const char *format, ...)\n+{\n+  va_list valist;\n+  va_start (valist, format);\n+  return MSVCRT_vfprintf_s(file, format, valist);\n+}"}]}