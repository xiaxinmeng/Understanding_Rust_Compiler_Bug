{"sha": "59ba44930fb9d8c1e1c6c3b6de9be7ab77933284", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTliYTQ0OTMwZmI5ZDhjMWUxYzZjM2I2ZGU5YmU3YWI3NzkzMzI4NA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2017-03-25T16:34:09Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-03-25T16:34:09Z"}, "message": "re PR target/80180 (Incorrect codegen from rdseed intrinsic use (CVE-2017-11671))\n\n\tPR target/80180\n\t* config/i386/i386.c (ix86_expand_builtin)\n\t<IX86_BUILTIN_RDSEED{16,32,64}_STEP>: Do not expand arg0 between\n\tflags reg setting and flags reg using instructions.\n\t<IX86_BUILTIN_RDRAND{16,32,64}_STEP>: Ditto.  Use non-flags reg\n\tclobbering instructions to zero extend op2.\n\nFrom-SVN: r246475", "tree": {"sha": "1b6626e248444282f02aea682806c10c497c102d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b6626e248444282f02aea682806c10c497c102d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59ba44930fb9d8c1e1c6c3b6de9be7ab77933284", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59ba44930fb9d8c1e1c6c3b6de9be7ab77933284", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59ba44930fb9d8c1e1c6c3b6de9be7ab77933284", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59ba44930fb9d8c1e1c6c3b6de9be7ab77933284/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7d437dc1a284841dbe752054095bbc4277a85eb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d437dc1a284841dbe752054095bbc4277a85eb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d437dc1a284841dbe752054095bbc4277a85eb4"}], "stats": {"total": 39, "additions": 31, "deletions": 8}, "files": [{"sha": "1e4df00c6952b0bccbea527de1f24abcfc4fedc1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59ba44930fb9d8c1e1c6c3b6de9be7ab77933284/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59ba44930fb9d8c1e1c6c3b6de9be7ab77933284/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=59ba44930fb9d8c1e1c6c3b6de9be7ab77933284", "patch": "@@ -1,3 +1,12 @@\n+2017-03-25  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/80180\n+\t* config/i386/i386.c (ix86_expand_builtin)\n+\t<IX86_BUILTIN_RDSEED{16,32,64}_STEP>: Do not expand arg0 between\n+\tflags reg setting and flags reg using instructions.\n+\t<IX86_BUILTIN_RDRAND{16,32,64}_STEP>: Ditto.  Use non-flags reg\n+\tclobbering instructions to zero extend op2.\n+\n 2017-03-25  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* doc/install.texi (Configuration) <--with-aix-soname>:"}, {"sha": "bb0debf54e1c3a154950ca2847e0593872fd464b", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 22, "deletions": 8, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59ba44930fb9d8c1e1c6c3b6de9be7ab77933284/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59ba44930fb9d8c1e1c6c3b6de9be7ab77933284/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=59ba44930fb9d8c1e1c6c3b6de9be7ab77933284", "patch": "@@ -37572,16 +37572,17 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,\n       mode0 = DImode;\n \n rdrand_step:\n-      op0 = gen_reg_rtx (mode0);\n-      emit_insn (GEN_FCN (icode) (op0));\n-\n       arg0 = CALL_EXPR_ARG (exp, 0);\n       op1 = expand_normal (arg0);\n       if (!address_operand (op1, VOIDmode))\n \t{\n \t  op1 = convert_memory_address (Pmode, op1);\n \t  op1 = copy_addr_to_reg (op1);\n \t}\n+\n+      op0 = gen_reg_rtx (mode0);\n+      emit_insn (GEN_FCN (icode) (op0));\n+\n       emit_move_insn (gen_rtx_MEM (mode0, op1), op0);\n \n       op1 = gen_reg_rtx (SImode);\n@@ -37590,8 +37591,20 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,\n       /* Emit SImode conditional move.  */\n       if (mode0 == HImode)\n \t{\n-\t  op2 = gen_reg_rtx (SImode);\n-\t  emit_insn (gen_zero_extendhisi2 (op2, op0));\n+\t  if (TARGET_ZERO_EXTEND_WITH_AND\n+\t      && optimize_function_for_speed_p (cfun))\n+\t    {\n+\t      op2 = force_reg (SImode, const0_rtx);\n+\n+\t      emit_insn (gen_movstricthi\n+\t\t\t (gen_lowpart (HImode, op2), op0));\n+\t    }\n+\t  else\n+\t    {\n+\t      op2 = gen_reg_rtx (SImode);\n+\n+\t      emit_insn (gen_zero_extendhisi2 (op2, op0));\n+\t    }\n \t}\n       else if (mode0 == SImode)\n \top2 = op0;\n@@ -37623,16 +37636,17 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,\n       mode0 = DImode;\n \n rdseed_step:\n-      op0 = gen_reg_rtx (mode0);\n-      emit_insn (GEN_FCN (icode) (op0));\n-\n       arg0 = CALL_EXPR_ARG (exp, 0);\n       op1 = expand_normal (arg0);\n       if (!address_operand (op1, VOIDmode))\n \t{\n \t  op1 = convert_memory_address (Pmode, op1);\n \t  op1 = copy_addr_to_reg (op1);\n \t}\n+\n+      op0 = gen_reg_rtx (mode0);\n+      emit_insn (GEN_FCN (icode) (op0));\n+\n       emit_move_insn (gen_rtx_MEM (mode0, op1), op0);\n \n       op2 = gen_reg_rtx (QImode);"}]}