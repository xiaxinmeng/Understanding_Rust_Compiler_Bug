{"sha": "ba9119ec894e7151e50cc5889fe3b6381d096e8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE5MTE5ZWM4OTRlNzE1MWU1MGNjNTg4OWZlM2I2MzgxZDA5NmU4Yw==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-01-27T00:49:03Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-01-27T00:49:03Z"}, "message": "c_locale.cc: Fix throw messages to use the __N marker.\n\n2004-01-26  Paolo Carlini  <pcarlini@suse.de>\n\n\t* config/locale/generic/c_locale.cc: Fix throw messages\n\tto use the __N marker.\n\t* config/locale/gnu/c_locale.cc: Likewise.\n\t* config/locale/ieee_1003.1-2001/codecvt_specializations.h:\n\tLikewise.\n\t* docs/html/17_intro/C++STYLE: Likewise.\n\t* include/bits/basic_ios.tcc: Likewise.\n\t* include/bits/fstream.tcc: Likewise.\n\t* include/bits/vector.tcc: Likewise.\n\t* include/ext/ropeimpl.h: Likewise.\n\t* include/std/std_bitset.h: Likewise.\n\t* src/ios.cc: Likewise.\n\t* src/locale.cc: Likewise.\n\t* src/localename.cc: Likewise.\n\nFrom-SVN: r76684", "tree": {"sha": "5ac96d9ed6f5b575800e2c989c91fdf9a70e88ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ac96d9ed6f5b575800e2c989c91fdf9a70e88ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba9119ec894e7151e50cc5889fe3b6381d096e8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba9119ec894e7151e50cc5889fe3b6381d096e8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba9119ec894e7151e50cc5889fe3b6381d096e8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba9119ec894e7151e50cc5889fe3b6381d096e8c/comments", "author": null, "committer": null, "parents": [{"sha": "efc8d3d2728b2b6308b8d440b91335af003e8187", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efc8d3d2728b2b6308b8d440b91335af003e8187", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efc8d3d2728b2b6308b8d440b91335af003e8187"}], "stats": {"total": 85, "additions": 53, "deletions": 32}, "files": [{"sha": "91b866ea47d1b990e2f873183c66555ec960edda", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9119ec894e7151e50cc5889fe3b6381d096e8c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9119ec894e7151e50cc5889fe3b6381d096e8c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ba9119ec894e7151e50cc5889fe3b6381d096e8c", "patch": "@@ -1,3 +1,20 @@\n+2004-01-26  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* config/locale/generic/c_locale.cc: Fix throw messages\n+\tto use the __N marker.\n+\t* config/locale/gnu/c_locale.cc: Likewise.\n+\t* config/locale/ieee_1003.1-2001/codecvt_specializations.h:\n+\tLikewise.\n+\t* docs/html/17_intro/C++STYLE: Likewise.\n+\t* include/bits/basic_ios.tcc: Likewise.\n+\t* include/bits/fstream.tcc: Likewise.\n+\t* include/bits/vector.tcc: Likewise.\n+\t* include/ext/ropeimpl.h: Likewise.\n+\t* include/std/std_bitset.h: Likewise.\n+\t* src/ios.cc: Likewise.\n+\t* src/locale.cc: Likewise.\n+\t* src/localename.cc: Likewise.\n+\n 2004-01-26  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/basic_string.h (_M_replace_aux): Use the"}, {"sha": "730c3662ea6913c0b70686c7f711339b129dbc15", "filename": "libstdc++-v3/config/locale/generic/c_locale.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9119ec894e7151e50cc5889fe3b6381d096e8c/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fc_locale.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9119ec894e7151e50cc5889fe3b6381d096e8c/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fc_locale.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fc_locale.cc?ref=ba9119ec894e7151e50cc5889fe3b6381d096e8c", "patch": "@@ -152,8 +152,8 @@ namespace std\n     // See http://gcc.gnu.org/ml/libstdc++/2003-02/msg00345.html\n     __cloc = NULL;\n     if (strcmp(__s, \"C\"))\n-      __throw_runtime_error(\"locale::facet::_S_create_c_locale \"\n-\t\t\t    \"name not valid\");\n+      __throw_runtime_error(__N(\"locale::facet::_S_create_c_locale \"\n+\t\t\t    \"name not valid\"));\n   }\n \n   void"}, {"sha": "bf975b98bacab6e7f8fd150461993f9d306bf278", "filename": "libstdc++-v3/config/locale/gnu/c_locale.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9119ec894e7151e50cc5889fe3b6381d096e8c/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc_locale.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9119ec894e7151e50cc5889fe3b6381d096e8c/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc_locale.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc_locale.cc?ref=ba9119ec894e7151e50cc5889fe3b6381d096e8c", "patch": "@@ -100,8 +100,8 @@ namespace std\n     if (!__cloc)\n       {\n \t// This named locale is not supported by the underlying OS.\n-\t__throw_runtime_error(\"locale::facet::_S_create_c_locale \"\n-\t\t\t      \"name not valid\");\n+\t__throw_runtime_error(__N(\"locale::facet::_S_create_c_locale \"\n+\t\t\t      \"name not valid\"));\n       }\n   }\n   "}, {"sha": "efa8c3783603f469b435c4a32c637a8a8918c9eb", "filename": "libstdc++-v3/config/locale/ieee_1003.1-2001/codecvt_specializations.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9119ec894e7151e50cc5889fe3b6381d096e8c/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fieee_1003.1-2001%2Fcodecvt_specializations.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9119ec894e7151e50cc5889fe3b6381d096e8c/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fieee_1003.1-2001%2Fcodecvt_specializations.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fieee_1003.1-2001%2Fcodecvt_specializations.h?ref=ba9119ec894e7151e50cc5889fe3b6381d096e8c", "patch": "@@ -130,15 +130,15 @@\n \t{\n \t  _M_in_desc = iconv_open(_M_int_enc, _M_ext_enc);\n \t  if (_M_in_desc == __err)\n-\t    __throw_runtime_error(\"__enc_traits::_M_init \"\n-\t\t\t\t  \"creating iconv input descriptor failed\");\n+\t    __throw_runtime_error(__N(\"__enc_traits::_M_init \"\n+\t\t\t\t  \"creating iconv input descriptor failed\"));\n \t}\n       if (!_M_out_desc)\n \t{\n \t  _M_out_desc = iconv_open(_M_ext_enc, _M_int_enc);\n \t  if (_M_out_desc == __err)\n-\t    __throw_runtime_error(\"__enc_traits::_M_init \"\n-\t\t\t\t  \"creating iconv output descriptor failed\");\n+\t    __throw_runtime_error(__N(\"__enc_traits::_M_init \"\n+\t\t\t\t  \"creating iconv output descriptor failed\"));\n \t}\n     }\n "}, {"sha": "87f53d0ea050cc54d3acdb380b3e77f8e9c386f7", "filename": "libstdc++-v3/docs/html/17_intro/C++STYLE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9119ec894e7151e50cc5889fe3b6381d096e8c/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2FC%2B%2BSTYLE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9119ec894e7151e50cc5889fe3b6381d096e8c/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2FC%2B%2BSTYLE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2FC%2B%2BSTYLE?ref=ba9119ec894e7151e50cc5889fe3b6381d096e8c", "patch": "@@ -210,7 +210,7 @@ Notable areas of divergence from what may be previous local practice\n     All start with the name of the function where the exception is\n     thrown, and then (optional) descriptive text is added. Example:\n \n-    __throw_logic_error(\"basic_string::_S_construct NULL not valid\");\n+    __throw_logic_error(__N(\"basic_string::_S_construct NULL not valid\"));\n \n     Reason: The verbose terminate handler prints out exception::what(),\n     as well as the typeinfo for the thrown exception. As this is the"}, {"sha": "ce7af0d27f6feaf7a360822f665297707ac3dc30", "filename": "libstdc++-v3/include/bits/basic_ios.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9119ec894e7151e50cc5889fe3b6381d096e8c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9119ec894e7151e50cc5889fe3b6381d096e8c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.tcc?ref=ba9119ec894e7151e50cc5889fe3b6381d096e8c", "patch": "@@ -43,7 +43,7 @@ namespace std\n       else\n \t  _M_streambuf_state = __state | badbit;\n       if (this->exceptions() & this->rdstate())\n-\t__throw_ios_failure(\"basic_ios::clear\");\n+\t__throw_ios_failure(__N(\"basic_ios::clear\"));\n     }\n   \n   template<typename _CharT, typename _Traits>"}, {"sha": "f28160cec94951487a1529c7a40d6b56062da2a4", "filename": "libstdc++-v3/include/bits/fstream.tcc", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9119ec894e7151e50cc5889fe3b6381d096e8c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9119ec894e7151e50cc5889fe3b6381d096e8c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc?ref=ba9119ec894e7151e50cc5889fe3b6381d096e8c", "patch": "@@ -255,9 +255,9 @@ namespace std\n \t\t      // codecvt::max_length() is bogus.\n \t\t      if (_M_ext_end - _M_ext_buf + __rlen > _M_ext_buf_size)\n \t\t\t{\n-\t\t\t  __throw_ios_failure(\"basic_filebuf::underflow \"\n+\t\t\t  __throw_ios_failure(__N(\"basic_filebuf::underflow \"\n \t\t\t\t\t      \"codecvt::max_length() \"\n-\t\t\t\t\t      \"is not valid\");\n+\t\t\t\t\t      \"is not valid\"));\n \t\t\t}\n \t\t      streamsize __elen = _M_file.xsgetn(_M_ext_end, __rlen);\n \t\t      if (__elen == 0)\n@@ -309,15 +309,15 @@ namespace std\n \t      // However, reaching it while looping on partial means that\n \t      // the file has got an incomplete character.\n \t      if (__r == codecvt_base::partial)\n-\t\t__throw_ios_failure(\"basic_filebuf::underflow \"\n-\t\t\t\t    \"incomplete character in file\");\n+\t\t__throw_ios_failure(__N(\"basic_filebuf::underflow \"\n+\t\t\t\t    \"incomplete character in file\"));\n \t    }\n \t  else if (__r == codecvt_base::error)\n-\t    __throw_ios_failure(\"basic_filebuf::underflow \"\n-\t\t\t\t\"invalid byte sequence in file\");\n+\t    __throw_ios_failure(__N(\"basic_filebuf::underflow \"\n+\t\t\t\t\"invalid byte sequence in file\"));\n \t  else\n-\t    __throw_ios_failure(\"basic_filebuf::underflow \"\n-\t\t\t\t\"error reading the file\");\t    \n+\t    __throw_ios_failure(__N(\"basic_filebuf::underflow \"\n+\t\t\t\t\"error reading the file\"));\t    \n \t}\n       return __ret;\n     }"}, {"sha": "caa27620ae598a700242ff8c13bdb0342ef1025d", "filename": "libstdc++-v3/include/bits/vector.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9119ec894e7151e50cc5889fe3b6381d096e8c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9119ec894e7151e50cc5889fe3b6381d096e8c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fvector.tcc?ref=ba9119ec894e7151e50cc5889fe3b6381d096e8c", "patch": "@@ -69,7 +69,7 @@ namespace __gnu_norm\n     reserve(size_type __n)\n     {\n       if (__n > this->max_size())\n-\t__throw_length_error(\"vector::reserve\");\n+\t__throw_length_error(__N(\"vector::reserve\"));\n       if (this->capacity() < __n)\n \t{\n \t  const size_type __old_size = size();"}, {"sha": "0c92de4cc4f7646ac893e7bc2a93ccf666b535ad", "filename": "libstdc++-v3/include/ext/ropeimpl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9119ec894e7151e50cc5889fe3b6381d096e8c/libstdc%2B%2B-v3%2Finclude%2Fext%2Fropeimpl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9119ec894e7151e50cc5889fe3b6381d096e8c/libstdc%2B%2B-v3%2Finclude%2Fext%2Fropeimpl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fropeimpl.h?ref=ba9119ec894e7151e50cc5889fe3b6381d096e8c", "patch": "@@ -1121,7 +1121,7 @@ rope<_CharT,_Alloc>::_S_balance(_RopeRep* __r)\n       }\n \n     if (__result->_M_depth > _RopeRep::_S_max_rope_depth)\n-      __throw_length_error(\"rope::_S_balance\");\n+      __throw_length_error(__N(\"rope::_S_balance\"));\n     return(__result);\n }\n "}, {"sha": "04249eca4f8973197b020f71c786e5c3e0101599", "filename": "libstdc++-v3/include/std/std_bitset.h", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9119ec894e7151e50cc5889fe3b6381d096e8c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_bitset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9119ec894e7151e50cc5889fe3b6381d096e8c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_bitset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_bitset.h?ref=ba9119ec894e7151e50cc5889fe3b6381d096e8c", "patch": "@@ -709,7 +709,8 @@ namespace __gnu_norm\n \t\t      size_t __position = 0) : _Base()\n       {\n \tif (__position > __s.size())\n-\t  __throw_out_of_range(\"bitset::bitset initial position not valid\");\n+\t  __throw_out_of_range(__N(\"bitset::bitset initial position \"\n+\t\t\t\t   \"not valid\"));\n \t_M_copy_from_string(__s, __position,\n \t\t\t    basic_string<_CharT, _Traits, _Alloc>::npos);\n       }\n@@ -728,7 +729,8 @@ namespace __gnu_norm\n \t     size_t __position, size_t __n) : _Base()\n       {\n \tif (__position > __s.size())\n-\t  __throw_out_of_range(\"bitset::bitset initial position not valid\");\n+\t __throw_out_of_range(__N(\"bitset::bitset initial position \"\n+\t\t\t\t  \"not valid\"));\n \t_M_copy_from_string(__s, __position, __n);\n       }\n \n@@ -1070,7 +1072,8 @@ namespace __gnu_norm\n   template<size_t _Nb>\n     template<class _CharT, class _Traits, class _Alloc>\n     void\n-    bitset<_Nb>::_M_copy_from_string(const basic_string<_CharT,_Traits,_Alloc>& __s, size_t __pos, size_t __n)\n+    bitset<_Nb>::_M_copy_from_string(const basic_string<_CharT, _Traits,\n+\t\t\t\t     _Alloc>& __s, size_t __pos, size_t __n)\n     {\n       reset();\n       const size_t __nbits = std::min(_Nb, std::min(__n, __s.size() - __pos));\n@@ -1084,15 +1087,16 @@ namespace __gnu_norm\n \t      set(__i);\n \t      break;\n \t    default:\n-\t      __throw_invalid_argument(\"bitset::_M_copy_from_string\");\n+\t      __throw_invalid_argument(__N(\"bitset::_M_copy_from_string\"));\n \t    }\n \t}\n     }\n \n   template<size_t _Nb>\n     template<class _CharT, class _Traits, class _Alloc>\n     void\n-    bitset<_Nb>::_M_copy_to_string(basic_string<_CharT, _Traits, _Alloc>& __s) const\n+    bitset<_Nb>::_M_copy_to_string(basic_string<_CharT, _Traits,\n+\t\t\t\t   _Alloc>& __s) const\n     {\n       __s.assign(_Nb, '0');\n       for (size_t __i = 0; __i < _Nb; ++__i)"}, {"sha": "0dec32358c2fc0317233e95cea7cff3271eebfe6", "filename": "libstdc++-v3/src/ios.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9119ec894e7151e50cc5889fe3b6381d096e8c/libstdc%2B%2B-v3%2Fsrc%2Fios.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9119ec894e7151e50cc5889fe3b6381d096e8c/libstdc%2B%2B-v3%2Fsrc%2Fios.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fios.cc?ref=ba9119ec894e7151e50cc5889fe3b6381d096e8c", "patch": "@@ -163,8 +163,8 @@ namespace std\n \t      {\n \t\t_M_streambuf_state |= badbit;\n \t\tif (_M_streambuf_state & _M_exception)\n-\t\t  __throw_ios_failure(\"ios_base::_M_grow_words \"\n-\t\t\t\t      \"allocation failed\");\n+\t\t  __throw_ios_failure(__N(\"ios_base::_M_grow_words \"\n+\t\t\t\t      \"allocation failed\"));\n \t\treturn _M_word_zero;\n \t      }\n \t    for (int i = 0; i < _M_word_size; i++) \n@@ -179,7 +179,7 @@ namespace std\n \t  {\n \t    _M_streambuf_state |= badbit;\n \t    if (_M_streambuf_state & _M_exception)\n-\t      __throw_ios_failure(\"ios_base::_M_grow_words is not valid\");\n+\t      __throw_ios_failure(__N(\"ios_base::_M_grow_words is not valid\"));\n \t    return _M_word_zero;\n \t  }\n       }"}, {"sha": "4e1aebb486d336f6b29af83f6b39ac54d5516c38", "filename": "libstdc++-v3/src/locale.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9119ec894e7151e50cc5889fe3b6381d096e8c/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9119ec894e7151e50cc5889fe3b6381d096e8c/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc?ref=ba9119ec894e7151e50cc5889fe3b6381d096e8c", "patch": "@@ -141,8 +141,8 @@ namespace std\n \t    __ret = all;\n \t    break;\n \t  default:\n-\t    __throw_runtime_error(\"locale::_S_normalize_category \"\n-\t\t\t\t  \"category not found\");\n+\t    __throw_runtime_error(__N(\"locale::_S_normalize_category \"\n+\t\t\t\t  \"category not found\"));\n \t  }\n       }\n     return __ret;\n@@ -264,7 +264,7 @@ namespace std\n   {\n     size_t __index = __idp->_M_id();\n     if ((__index > (__imp->_M_facets_size - 1)) || !__imp->_M_facets[__index])\n-      __throw_runtime_error(\"locale::_Impl::_M_replace_facet\");\n+      __throw_runtime_error(__N(\"locale::_Impl::_M_replace_facet\"));\n     _M_install_facet(__idp, __imp->_M_facets[__index]); \n   }\n "}, {"sha": "4cd1af189fac6753e31ff58c48c819001f0a72d3", "filename": "libstdc++-v3/src/localename.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba9119ec894e7151e50cc5889fe3b6381d096e8c/libstdc%2B%2B-v3%2Fsrc%2Flocalename.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba9119ec894e7151e50cc5889fe3b6381d096e8c/libstdc%2B%2B-v3%2Fsrc%2Flocalename.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocalename.cc?ref=ba9119ec894e7151e50cc5889fe3b6381d096e8c", "patch": "@@ -144,7 +144,7 @@ namespace std\n \t  }\n       }\n     else\n-      __throw_runtime_error(\"locale::locale NULL not valid\");\n+      __throw_runtime_error(__N(\"locale::locale NULL not valid\"));\n   }\n \n   locale::locale(const locale& __base, const char* __s, category __cat)"}]}