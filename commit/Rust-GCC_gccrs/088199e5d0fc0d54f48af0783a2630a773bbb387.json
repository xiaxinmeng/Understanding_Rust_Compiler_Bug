{"sha": "088199e5d0fc0d54f48af0783a2630a773bbb387", "node_id": "C_kwDOANBUbNoAKDA4ODE5OWU1ZDBmYzBkNTRmNDhhZjA3ODNhMjYzMGE3NzNiYmIzODc", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-08-31T21:30:25Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-11-09T13:40:12Z"}, "message": "Generalize 'gcc/input.h:struct location_hash'\n\nThis is currently only used here ('gcc/input.h:class string_concat_db'), but is\nactually generally useful, so advertize it as such.\n\nPer the rationale given, we may use 'BUILTINS_LOCATION' as spare value for\n'Deleted', in addition to the existing use of 'UNKNOWN_LOCATION' as spare value\nfor 'Empty'.\n\n\tgcc/\n\t* input.h (location_hash): Use 'BUILTINS_LOCATION' as spare value\n\tfor 'Deleted'.  Turn into a '#define'.", "tree": {"sha": "dc4ae7a9887625877b63e213a72b9c55f035e54c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc4ae7a9887625877b63e213a72b9c55f035e54c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/088199e5d0fc0d54f48af0783a2630a773bbb387", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/088199e5d0fc0d54f48af0783a2630a773bbb387", "html_url": "https://github.com/Rust-GCC/gccrs/commit/088199e5d0fc0d54f48af0783a2630a773bbb387", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/088199e5d0fc0d54f48af0783a2630a773bbb387/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fc9b4d7b0cbc88e9986486329abe899a07729de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fc9b4d7b0cbc88e9986486329abe899a07729de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fc9b4d7b0cbc88e9986486329abe899a07729de"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "bc44ba2507faa7c2c7e2c9d79e8db1448e783dce", "filename": "gcc/input.h", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/088199e5d0fc0d54f48af0783a2630a773bbb387/gcc%2Finput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/088199e5d0fc0d54f48af0783a2630a773bbb387/gcc%2Finput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finput.h?ref=088199e5d0fc0d54f48af0783a2630a773bbb387", "patch": "@@ -36,6 +36,28 @@ extern GTY(()) class line_maps *saved_line_table;\n    both UNKNOWN_LOCATION and BUILTINS_LOCATION fit into that.  */\n STATIC_ASSERT (BUILTINS_LOCATION < RESERVED_LOCATION_COUNT);\n \n+/* Hasher for 'location_t' values satisfying '!RESERVED_LOCATION_P', thus able\n+   to use 'UNKNOWN_LOCATION'/'BUILTINS_LOCATION' as spare values for\n+   'Empty'/'Deleted'.  */\n+/* Per PR103157 \"'gengtype': 'typedef' causing infinite-recursion code to be\n+   generated\", don't use\n+       typedef int_hash<location_t, UNKNOWN_LOCATION, BUILTINS_LOCATION>\n+         location_hash;\n+   here.\n+\n+   It works for a single-use case, but when using a 'struct'-based variant\n+       struct location_hash\n+         : int_hash<location_t, UNKNOWN_LOCATION, BUILTINS_LOCATION> {};\n+   in more than one place, 'gengtype' generates duplicate functions (thus:\n+   \"error: redefinition of 'void gt_ggc_mx(location_hash&)'\" etc.).\n+   Attempting to mark that one up with GTY options, we run into a 'gengtype'\n+   \"parse error: expected '{', have '<'\", which probably falls into category\n+   \"understanding of C++ is limited\", as documented in 'gcc/doc/gty.texi'.\n+\n+   Thus, use a plain ol' '#define':\n+*/\n+#define location_hash int_hash<location_t, UNKNOWN_LOCATION, BUILTINS_LOCATION>\n+\n extern bool is_location_from_builtin_token (location_t);\n extern expanded_location expand_location (location_t);\n \n@@ -233,8 +255,6 @@ class GTY(()) string_concat\n   location_t * GTY ((atomic)) m_locs;\n };\n \n-struct location_hash : int_hash <location_t, UNKNOWN_LOCATION> { };\n-\n class GTY(()) string_concat_db\n {\n  public:"}]}