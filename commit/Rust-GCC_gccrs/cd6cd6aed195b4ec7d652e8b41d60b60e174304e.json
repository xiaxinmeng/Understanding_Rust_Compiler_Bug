{"sha": "cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q2Y2Q2YWVkMTk1YjRlYzdkNjUyZThiNDFkNjBiNjBlMTc0MzA0ZQ==", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2020-10-18T18:15:26Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2020-10-18T18:15:26Z"}, "message": "PR libfortran/97063 - Wrong result for vector (step size is negative) * matrix\n\nThe MATMUL intrinsic provided a wrong result for rank-1 times rank-2 array\nwhen a negative stride was used for addressing the elements of the rank-1\narray, because a check on strides was erroneously placed before the check\non the rank.  Interchange order of checks.\n\nlibgfortran/ChangeLog:\n\n\t* m4/matmul_internal.m4: Move check for rank-1 times rank-2 before\n\tchecks on strides for rank-2 times rank-2.\n\t* generated/matmul_c10.c: Regenerated.\n\t* generated/matmul_c16.c: Likewise.\n\t* generated/matmul_c4.c: Likewise.\n\t* generated/matmul_c8.c: Likewise.\n\t* generated/matmul_i1.c: Likewise.\n\t* generated/matmul_i16.c: Likewise.\n\t* generated/matmul_i2.c: Likewise.\n\t* generated/matmul_i4.c: Likewise.\n\t* generated/matmul_i8.c: Likewise.\n\t* generated/matmul_r10.c: Likewise.\n\t* generated/matmul_r16.c: Likewise.\n\t* generated/matmul_r4.c: Likewise.\n\t* generated/matmul_r8.c: Likewise.\n\t* generated/matmulavx128_c10.c: Likewise.\n\t* generated/matmulavx128_c16.c: Likewise.\n\t* generated/matmulavx128_c4.c: Likewise.\n\t* generated/matmulavx128_c8.c: Likewise.\n\t* generated/matmulavx128_i1.c: Likewise.\n\t* generated/matmulavx128_i16.c: Likewise.\n\t* generated/matmulavx128_i2.c: Likewise.\n\t* generated/matmulavx128_i4.c: Likewise.\n\t* generated/matmulavx128_i8.c: Likewise.\n\t* generated/matmulavx128_r10.c: Likewise.\n\t* generated/matmulavx128_r16.c: Likewise.\n\t* generated/matmulavx128_r4.c: Likewise.\n\t* generated/matmulavx128_r8.c: Likewise.\n\ngcc/testsuite/ChangeLog:\n\n\t* gfortran.dg/matmul_20.f90: New test.", "tree": {"sha": "6762feeca0b107bbe4d1a82ac9938a66416214ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6762feeca0b107bbe4d1a82ac9938a66416214ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "019e1c85fe968281ce591322b94e828a4ee668c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/019e1c85fe968281ce591322b94e828a4ee668c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/019e1c85fe968281ce591322b94e828a4ee668c9"}], "stats": {"total": 2623, "additions": 1335, "deletions": 1288}, "files": [{"sha": "7a211a4974d51caba18d741d4dd73a41b24c8eb3", "filename": "gcc/testsuite/gfortran.dg/matmul_20.f90", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_20.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_20.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_20.f90?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -0,0 +1,47 @@\n+! { dg-do run }\n+! PR97063 - Wrong result for vector (step size is negative) * matrix\n+\n+program p\n+  implicit none\n+  integer, parameter :: m = 3, k = 2*m, l = k-1, n = 4\n+  integer :: i, j,  m1, m2, ms\n+  integer :: ai(k), bi(k,n), ci(n), ci_ref(n), c1, c2\n+  real    :: ar(k), br(k,n), cr(n), cr_ref(n)\n+\n+  ai(:)   = [(i,i=0,k-1)]\n+  bi(:,:) = reshape ([(((5*i+j),i=0,k-1),j=0,n-1)],[k,n])\n+\n+  ! Parameters of subscript triplet\n+  m1 = 1; m2 = l; ms =  2\n+\n+  ! Reference values for cross-checks: integer variant\n+  c1 = dot_product (ai(m1:m2: ms), bi(m1:m2: ms,1))\n+  c2 = dot_product (ai(m1:m2: ms), bi(m1:m2: ms,2))\n+  ci_ref = matmul  (ai(m1:m2: ms), bi(m1:m2: ms,:))\n+  ci     = matmul  (ai(m2:m1:-ms), bi(m2:m1:-ms,:))\n+\n+  if (ci_ref(1) /= c1 .or. ci_ref(2) /= c2) stop 1\n+  if (any (ci   /= ci_ref)) stop 2\n+\n+  ! Real variant\n+  ar = real (ai)\n+  br = real (bi)\n+  cr_ref = matmul  (ar(m1:m2: ms), br(m1:m2: ms,:))\n+  cr     = matmul  (ar(m2:m1:-ms), br(m2:m1:-ms,:))\n+\n+  if (any (cr_ref /= real (ci_ref))) stop 3\n+  if (any (cr     /=       cr_ref )) stop 4\n+\n+  ! Mixed variants\n+  cr_ref = matmul  (ar(m1:m2: ms), bi(m1:m2: ms,:))\n+  cr     = matmul  (ar(m2:m1:-ms), bi(m2:m1:-ms,:))\n+\n+  if (any (cr_ref /= real (ci_ref))) stop 5\n+  if (any (cr     /=       cr_ref )) stop 6\n+\n+  cr_ref = matmul  (ai(m1:m2: ms), br(m1:m2: ms,:))\n+  cr     = matmul  (ai(m2:m1:-ms), br(m2:m1:-ms,:))\n+\n+  if (any (cr_ref /= real (ci_ref))) stop 7\n+  if (any (cr     /=       cr_ref )) stop 8\n+end program"}, {"sha": "5bfd61d97ce5faf22fbf4909bd07e2bfe671812b", "filename": "libgfortran/generated/matmul_c10.c", "status": "modified", "additions": 70, "deletions": 70, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmul_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmul_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c10.c?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -590,20 +590,6 @@ matmul_c10_avx (gfc_array_c10 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_10)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_10 *restrict bbase_y;\n@@ -618,6 +604,20 @@ matmul_c10_avx (gfc_array_c10 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_10)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_10 *restrict abase_x;\n@@ -1158,20 +1158,6 @@ matmul_c10_avx2 (gfc_array_c10 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_10)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_10 *restrict bbase_y;\n@@ -1186,6 +1172,20 @@ matmul_c10_avx2 (gfc_array_c10 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_10)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_10 *restrict abase_x;\n@@ -1726,20 +1726,6 @@ matmul_c10_avx512f (gfc_array_c10 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_10)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_10 *restrict bbase_y;\n@@ -1754,6 +1740,20 @@ matmul_c10_avx512f (gfc_array_c10 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_10)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_10 *restrict abase_x;\n@@ -2308,20 +2308,6 @@ matmul_c10_vanilla (gfc_array_c10 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_10)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_10 *restrict bbase_y;\n@@ -2336,6 +2322,20 @@ matmul_c10_vanilla (gfc_array_c10 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_10)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_10 *restrict abase_x;\n@@ -2949,20 +2949,6 @@ matmul_c10 (gfc_array_c10 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_10)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_10 *restrict bbase_y;\n@@ -2977,6 +2963,20 @@ matmul_c10 (gfc_array_c10 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_10)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_10 *restrict abase_x;"}, {"sha": "d7617e31b430c0de8393d848db51278d7b9c4692", "filename": "libgfortran/generated/matmul_c16.c", "status": "modified", "additions": 70, "deletions": 70, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmul_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmul_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c16.c?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -590,20 +590,6 @@ matmul_c16_avx (gfc_array_c16 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_16)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_16 *restrict bbase_y;\n@@ -618,6 +604,20 @@ matmul_c16_avx (gfc_array_c16 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_16)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_16 *restrict abase_x;\n@@ -1158,20 +1158,6 @@ matmul_c16_avx2 (gfc_array_c16 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_16)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_16 *restrict bbase_y;\n@@ -1186,6 +1172,20 @@ matmul_c16_avx2 (gfc_array_c16 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_16)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_16 *restrict abase_x;\n@@ -1726,20 +1726,6 @@ matmul_c16_avx512f (gfc_array_c16 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_16)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_16 *restrict bbase_y;\n@@ -1754,6 +1740,20 @@ matmul_c16_avx512f (gfc_array_c16 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_16)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_16 *restrict abase_x;\n@@ -2308,20 +2308,6 @@ matmul_c16_vanilla (gfc_array_c16 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_16)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_16 *restrict bbase_y;\n@@ -2336,6 +2322,20 @@ matmul_c16_vanilla (gfc_array_c16 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_16)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_16 *restrict abase_x;\n@@ -2949,20 +2949,6 @@ matmul_c16 (gfc_array_c16 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_16)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_16 *restrict bbase_y;\n@@ -2977,6 +2963,20 @@ matmul_c16 (gfc_array_c16 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_16)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_16 *restrict abase_x;"}, {"sha": "9303e6add20ea607759212d12ddc77e0b3d50627", "filename": "libgfortran/generated/matmul_c4.c", "status": "modified", "additions": 70, "deletions": 70, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmul_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmul_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c4.c?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -590,20 +590,6 @@ matmul_c4_avx (gfc_array_c4 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_4)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_4 *restrict bbase_y;\n@@ -618,6 +604,20 @@ matmul_c4_avx (gfc_array_c4 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_4)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_4 *restrict abase_x;\n@@ -1158,20 +1158,6 @@ matmul_c4_avx2 (gfc_array_c4 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_4)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_4 *restrict bbase_y;\n@@ -1186,6 +1172,20 @@ matmul_c4_avx2 (gfc_array_c4 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_4)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_4 *restrict abase_x;\n@@ -1726,20 +1726,6 @@ matmul_c4_avx512f (gfc_array_c4 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_4)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_4 *restrict bbase_y;\n@@ -1754,6 +1740,20 @@ matmul_c4_avx512f (gfc_array_c4 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_4)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_4 *restrict abase_x;\n@@ -2308,20 +2308,6 @@ matmul_c4_vanilla (gfc_array_c4 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_4)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_4 *restrict bbase_y;\n@@ -2336,6 +2322,20 @@ matmul_c4_vanilla (gfc_array_c4 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_4)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_4 *restrict abase_x;\n@@ -2949,20 +2949,6 @@ matmul_c4 (gfc_array_c4 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_4)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_4 *restrict bbase_y;\n@@ -2977,6 +2963,20 @@ matmul_c4 (gfc_array_c4 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_4)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_4 *restrict abase_x;"}, {"sha": "d29c99a5b4a60233244109a0a6ffc888f35c6337", "filename": "libgfortran/generated/matmul_c8.c", "status": "modified", "additions": 70, "deletions": 70, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmul_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmul_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_c8.c?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -590,20 +590,6 @@ matmul_c8_avx (gfc_array_c8 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_8)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_8 *restrict bbase_y;\n@@ -618,6 +604,20 @@ matmul_c8_avx (gfc_array_c8 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_8)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_8 *restrict abase_x;\n@@ -1158,20 +1158,6 @@ matmul_c8_avx2 (gfc_array_c8 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_8)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_8 *restrict bbase_y;\n@@ -1186,6 +1172,20 @@ matmul_c8_avx2 (gfc_array_c8 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_8)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_8 *restrict abase_x;\n@@ -1726,20 +1726,6 @@ matmul_c8_avx512f (gfc_array_c8 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_8)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_8 *restrict bbase_y;\n@@ -1754,6 +1740,20 @@ matmul_c8_avx512f (gfc_array_c8 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_8)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_8 *restrict abase_x;\n@@ -2308,20 +2308,6 @@ matmul_c8_vanilla (gfc_array_c8 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_8)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_8 *restrict bbase_y;\n@@ -2336,6 +2322,20 @@ matmul_c8_vanilla (gfc_array_c8 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_8)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_8 *restrict abase_x;\n@@ -2949,20 +2949,6 @@ matmul_c8 (gfc_array_c8 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_8)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_8 *restrict bbase_y;\n@@ -2977,6 +2963,20 @@ matmul_c8 (gfc_array_c8 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_8)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_8 *restrict abase_x;"}, {"sha": "72c4cee7d184a680474cab0b25221dd84f124553", "filename": "libgfortran/generated/matmul_i1.c", "status": "modified", "additions": 70, "deletions": 70, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmul_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmul_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i1.c?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -590,20 +590,6 @@ matmul_i1_avx (gfc_array_i1 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_1)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_1 *restrict bbase_y;\n@@ -618,6 +604,20 @@ matmul_i1_avx (gfc_array_i1 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_1)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_1 *restrict abase_x;\n@@ -1158,20 +1158,6 @@ matmul_i1_avx2 (gfc_array_i1 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_1)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_1 *restrict bbase_y;\n@@ -1186,6 +1172,20 @@ matmul_i1_avx2 (gfc_array_i1 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_1)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_1 *restrict abase_x;\n@@ -1726,20 +1726,6 @@ matmul_i1_avx512f (gfc_array_i1 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_1)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_1 *restrict bbase_y;\n@@ -1754,6 +1740,20 @@ matmul_i1_avx512f (gfc_array_i1 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_1)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_1 *restrict abase_x;\n@@ -2308,20 +2308,6 @@ matmul_i1_vanilla (gfc_array_i1 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_1)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_1 *restrict bbase_y;\n@@ -2336,6 +2322,20 @@ matmul_i1_vanilla (gfc_array_i1 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_1)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_1 *restrict abase_x;\n@@ -2949,20 +2949,6 @@ matmul_i1 (gfc_array_i1 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_1)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_1 *restrict bbase_y;\n@@ -2977,6 +2963,20 @@ matmul_i1 (gfc_array_i1 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_1)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_1 *restrict abase_x;"}, {"sha": "815868440984879a9d791859d7238f50bcdbadc4", "filename": "libgfortran/generated/matmul_i16.c", "status": "modified", "additions": 70, "deletions": 70, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmul_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmul_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i16.c?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -590,20 +590,6 @@ matmul_i16_avx (gfc_array_i16 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_16)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_16 *restrict bbase_y;\n@@ -618,6 +604,20 @@ matmul_i16_avx (gfc_array_i16 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_16)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_16 *restrict abase_x;\n@@ -1158,20 +1158,6 @@ matmul_i16_avx2 (gfc_array_i16 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_16)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_16 *restrict bbase_y;\n@@ -1186,6 +1172,20 @@ matmul_i16_avx2 (gfc_array_i16 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_16)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_16 *restrict abase_x;\n@@ -1726,20 +1726,6 @@ matmul_i16_avx512f (gfc_array_i16 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_16)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_16 *restrict bbase_y;\n@@ -1754,6 +1740,20 @@ matmul_i16_avx512f (gfc_array_i16 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_16)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_16 *restrict abase_x;\n@@ -2308,20 +2308,6 @@ matmul_i16_vanilla (gfc_array_i16 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_16)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_16 *restrict bbase_y;\n@@ -2336,6 +2322,20 @@ matmul_i16_vanilla (gfc_array_i16 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_16)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_16 *restrict abase_x;\n@@ -2949,20 +2949,6 @@ matmul_i16 (gfc_array_i16 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_16)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_16 *restrict bbase_y;\n@@ -2977,6 +2963,20 @@ matmul_i16 (gfc_array_i16 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_16)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_16 *restrict abase_x;"}, {"sha": "1320a2e3ec24cff6e4992877f3dc2c8bf28f7371", "filename": "libgfortran/generated/matmul_i2.c", "status": "modified", "additions": 70, "deletions": 70, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmul_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmul_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i2.c?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -590,20 +590,6 @@ matmul_i2_avx (gfc_array_i2 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_2)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_2 *restrict bbase_y;\n@@ -618,6 +604,20 @@ matmul_i2_avx (gfc_array_i2 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_2)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_2 *restrict abase_x;\n@@ -1158,20 +1158,6 @@ matmul_i2_avx2 (gfc_array_i2 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_2)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_2 *restrict bbase_y;\n@@ -1186,6 +1172,20 @@ matmul_i2_avx2 (gfc_array_i2 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_2)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_2 *restrict abase_x;\n@@ -1726,20 +1726,6 @@ matmul_i2_avx512f (gfc_array_i2 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_2)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_2 *restrict bbase_y;\n@@ -1754,6 +1740,20 @@ matmul_i2_avx512f (gfc_array_i2 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_2)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_2 *restrict abase_x;\n@@ -2308,20 +2308,6 @@ matmul_i2_vanilla (gfc_array_i2 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_2)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_2 *restrict bbase_y;\n@@ -2336,6 +2322,20 @@ matmul_i2_vanilla (gfc_array_i2 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_2)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_2 *restrict abase_x;\n@@ -2949,20 +2949,6 @@ matmul_i2 (gfc_array_i2 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_2)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_2 *restrict bbase_y;\n@@ -2977,6 +2963,20 @@ matmul_i2 (gfc_array_i2 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_2)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_2 *restrict abase_x;"}, {"sha": "4ee22218d2cafaa1a2927fba8692ceb6b96435a5", "filename": "libgfortran/generated/matmul_i4.c", "status": "modified", "additions": 70, "deletions": 70, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmul_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmul_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i4.c?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -590,20 +590,6 @@ matmul_i4_avx (gfc_array_i4 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_4)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_4 *restrict bbase_y;\n@@ -618,6 +604,20 @@ matmul_i4_avx (gfc_array_i4 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_4)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_4 *restrict abase_x;\n@@ -1158,20 +1158,6 @@ matmul_i4_avx2 (gfc_array_i4 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_4)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_4 *restrict bbase_y;\n@@ -1186,6 +1172,20 @@ matmul_i4_avx2 (gfc_array_i4 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_4)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_4 *restrict abase_x;\n@@ -1726,20 +1726,6 @@ matmul_i4_avx512f (gfc_array_i4 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_4)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_4 *restrict bbase_y;\n@@ -1754,6 +1740,20 @@ matmul_i4_avx512f (gfc_array_i4 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_4)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_4 *restrict abase_x;\n@@ -2308,20 +2308,6 @@ matmul_i4_vanilla (gfc_array_i4 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_4)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_4 *restrict bbase_y;\n@@ -2336,6 +2322,20 @@ matmul_i4_vanilla (gfc_array_i4 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_4)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_4 *restrict abase_x;\n@@ -2949,20 +2949,6 @@ matmul_i4 (gfc_array_i4 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_4)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_4 *restrict bbase_y;\n@@ -2977,6 +2963,20 @@ matmul_i4 (gfc_array_i4 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_4)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_4 *restrict abase_x;"}, {"sha": "b68a27f76ad75387252cc58c37a6fe91cefddc67", "filename": "libgfortran/generated/matmul_i8.c", "status": "modified", "additions": 70, "deletions": 70, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmul_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmul_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_i8.c?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -590,20 +590,6 @@ matmul_i8_avx (gfc_array_i8 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_8)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_8 *restrict bbase_y;\n@@ -618,6 +604,20 @@ matmul_i8_avx (gfc_array_i8 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_8)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_8 *restrict abase_x;\n@@ -1158,20 +1158,6 @@ matmul_i8_avx2 (gfc_array_i8 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_8)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_8 *restrict bbase_y;\n@@ -1186,6 +1172,20 @@ matmul_i8_avx2 (gfc_array_i8 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_8)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_8 *restrict abase_x;\n@@ -1726,20 +1726,6 @@ matmul_i8_avx512f (gfc_array_i8 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_8)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_8 *restrict bbase_y;\n@@ -1754,6 +1740,20 @@ matmul_i8_avx512f (gfc_array_i8 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_8)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_8 *restrict abase_x;\n@@ -2308,20 +2308,6 @@ matmul_i8_vanilla (gfc_array_i8 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_8)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_8 *restrict bbase_y;\n@@ -2336,6 +2322,20 @@ matmul_i8_vanilla (gfc_array_i8 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_8)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_8 *restrict abase_x;\n@@ -2949,20 +2949,6 @@ matmul_i8 (gfc_array_i8 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_8)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_8 *restrict bbase_y;\n@@ -2977,6 +2963,20 @@ matmul_i8 (gfc_array_i8 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_8)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_8 *restrict abase_x;"}, {"sha": "859c5a567470c8fad09e55ea850a34cf3f56928c", "filename": "libgfortran/generated/matmul_r10.c", "status": "modified", "additions": 70, "deletions": 70, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmul_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmul_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r10.c?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -590,20 +590,6 @@ matmul_r10_avx (gfc_array_r10 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_10)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_10 *restrict bbase_y;\n@@ -618,6 +604,20 @@ matmul_r10_avx (gfc_array_r10 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_10)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_10 *restrict abase_x;\n@@ -1158,20 +1158,6 @@ matmul_r10_avx2 (gfc_array_r10 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_10)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_10 *restrict bbase_y;\n@@ -1186,6 +1172,20 @@ matmul_r10_avx2 (gfc_array_r10 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_10)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_10 *restrict abase_x;\n@@ -1726,20 +1726,6 @@ matmul_r10_avx512f (gfc_array_r10 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_10)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_10 *restrict bbase_y;\n@@ -1754,6 +1740,20 @@ matmul_r10_avx512f (gfc_array_r10 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_10)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_10 *restrict abase_x;\n@@ -2308,20 +2308,6 @@ matmul_r10_vanilla (gfc_array_r10 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_10)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_10 *restrict bbase_y;\n@@ -2336,6 +2322,20 @@ matmul_r10_vanilla (gfc_array_r10 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_10)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_10 *restrict abase_x;\n@@ -2949,20 +2949,6 @@ matmul_r10 (gfc_array_r10 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_10)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_10 *restrict bbase_y;\n@@ -2977,6 +2963,20 @@ matmul_r10 (gfc_array_r10 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_10)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_10 *restrict abase_x;"}, {"sha": "b2fc7f86149b8bd3e6af0173f8e27f0225cf558e", "filename": "libgfortran/generated/matmul_r16.c", "status": "modified", "additions": 70, "deletions": 70, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmul_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmul_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r16.c?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -590,20 +590,6 @@ matmul_r16_avx (gfc_array_r16 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_16)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_16 *restrict bbase_y;\n@@ -618,6 +604,20 @@ matmul_r16_avx (gfc_array_r16 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_16)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_16 *restrict abase_x;\n@@ -1158,20 +1158,6 @@ matmul_r16_avx2 (gfc_array_r16 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_16)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_16 *restrict bbase_y;\n@@ -1186,6 +1172,20 @@ matmul_r16_avx2 (gfc_array_r16 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_16)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_16 *restrict abase_x;\n@@ -1726,20 +1726,6 @@ matmul_r16_avx512f (gfc_array_r16 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_16)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_16 *restrict bbase_y;\n@@ -1754,6 +1740,20 @@ matmul_r16_avx512f (gfc_array_r16 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_16)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_16 *restrict abase_x;\n@@ -2308,20 +2308,6 @@ matmul_r16_vanilla (gfc_array_r16 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_16)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_16 *restrict bbase_y;\n@@ -2336,6 +2322,20 @@ matmul_r16_vanilla (gfc_array_r16 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_16)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_16 *restrict abase_x;\n@@ -2949,20 +2949,6 @@ matmul_r16 (gfc_array_r16 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_16)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_16 *restrict bbase_y;\n@@ -2977,6 +2963,20 @@ matmul_r16 (gfc_array_r16 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_16)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_16 *restrict abase_x;"}, {"sha": "11d785f04c4d622b0f5dac0083bdb1e07ae794d4", "filename": "libgfortran/generated/matmul_r4.c", "status": "modified", "additions": 70, "deletions": 70, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmul_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmul_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r4.c?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -590,20 +590,6 @@ matmul_r4_avx (gfc_array_r4 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_4)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_4 *restrict bbase_y;\n@@ -618,6 +604,20 @@ matmul_r4_avx (gfc_array_r4 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_4)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_4 *restrict abase_x;\n@@ -1158,20 +1158,6 @@ matmul_r4_avx2 (gfc_array_r4 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_4)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_4 *restrict bbase_y;\n@@ -1186,6 +1172,20 @@ matmul_r4_avx2 (gfc_array_r4 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_4)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_4 *restrict abase_x;\n@@ -1726,20 +1726,6 @@ matmul_r4_avx512f (gfc_array_r4 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_4)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_4 *restrict bbase_y;\n@@ -1754,6 +1740,20 @@ matmul_r4_avx512f (gfc_array_r4 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_4)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_4 *restrict abase_x;\n@@ -2308,20 +2308,6 @@ matmul_r4_vanilla (gfc_array_r4 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_4)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_4 *restrict bbase_y;\n@@ -2336,6 +2322,20 @@ matmul_r4_vanilla (gfc_array_r4 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_4)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_4 *restrict abase_x;\n@@ -2949,20 +2949,6 @@ matmul_r4 (gfc_array_r4 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_4)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_4 *restrict bbase_y;\n@@ -2977,6 +2963,20 @@ matmul_r4 (gfc_array_r4 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_4)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_4 *restrict abase_x;"}, {"sha": "6aae02f8798485afde5876c8321bb49de41320d6", "filename": "libgfortran/generated/matmul_r8.c", "status": "modified", "additions": 70, "deletions": 70, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmul_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmul_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_r8.c?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -590,20 +590,6 @@ matmul_r8_avx (gfc_array_r8 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_8)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_8 *restrict bbase_y;\n@@ -618,6 +604,20 @@ matmul_r8_avx (gfc_array_r8 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_8)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_8 *restrict abase_x;\n@@ -1158,20 +1158,6 @@ matmul_r8_avx2 (gfc_array_r8 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_8)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_8 *restrict bbase_y;\n@@ -1186,6 +1172,20 @@ matmul_r8_avx2 (gfc_array_r8 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_8)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_8 *restrict abase_x;\n@@ -1726,20 +1726,6 @@ matmul_r8_avx512f (gfc_array_r8 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_8)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_8 *restrict bbase_y;\n@@ -1754,6 +1740,20 @@ matmul_r8_avx512f (gfc_array_r8 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_8)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_8 *restrict abase_x;\n@@ -2308,20 +2308,6 @@ matmul_r8_vanilla (gfc_array_r8 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_8)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_8 *restrict bbase_y;\n@@ -2336,6 +2322,20 @@ matmul_r8_vanilla (gfc_array_r8 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_8)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_8 *restrict abase_x;\n@@ -2949,20 +2949,6 @@ matmul_r8 (gfc_array_r8 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_8)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_8 *restrict bbase_y;\n@@ -2977,6 +2963,20 @@ matmul_r8 (gfc_array_r8 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_8)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_8 *restrict abase_x;"}, {"sha": "d0b417c39fd3ab0fbd769ea02dd96efc67ec9f7b", "filename": "libgfortran/generated/matmulavx128_c10.c", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmulavx128_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmulavx128_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmulavx128_c10.c?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -555,20 +555,6 @@ matmul_c10_avx128_fma3 (gfc_array_c10 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_10)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_10 *restrict bbase_y;\n@@ -583,6 +569,20 @@ matmul_c10_avx128_fma3 (gfc_array_c10 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_10)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_10 *restrict abase_x;\n@@ -1124,20 +1124,6 @@ matmul_c10_avx128_fma4 (gfc_array_c10 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_10)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_10 *restrict bbase_y;\n@@ -1152,6 +1138,20 @@ matmul_c10_avx128_fma4 (gfc_array_c10 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_10)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_10 *restrict abase_x;"}, {"sha": "0137ba550e4a31177a467eab912e14d839a48aa3", "filename": "libgfortran/generated/matmulavx128_c16.c", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmulavx128_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmulavx128_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmulavx128_c16.c?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -555,20 +555,6 @@ matmul_c16_avx128_fma3 (gfc_array_c16 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_16)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_16 *restrict bbase_y;\n@@ -583,6 +569,20 @@ matmul_c16_avx128_fma3 (gfc_array_c16 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_16)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_16 *restrict abase_x;\n@@ -1124,20 +1124,6 @@ matmul_c16_avx128_fma4 (gfc_array_c16 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_16)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_16 *restrict bbase_y;\n@@ -1152,6 +1138,20 @@ matmul_c16_avx128_fma4 (gfc_array_c16 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_16)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_16 *restrict abase_x;"}, {"sha": "850bd2ba1db9a57c2517c55c9d96e9fee4f9d7a0", "filename": "libgfortran/generated/matmulavx128_c4.c", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmulavx128_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmulavx128_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmulavx128_c4.c?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -555,20 +555,6 @@ matmul_c4_avx128_fma3 (gfc_array_c4 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_4)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_4 *restrict bbase_y;\n@@ -583,6 +569,20 @@ matmul_c4_avx128_fma3 (gfc_array_c4 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_4)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_4 *restrict abase_x;\n@@ -1124,20 +1124,6 @@ matmul_c4_avx128_fma4 (gfc_array_c4 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_4)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_4 *restrict bbase_y;\n@@ -1152,6 +1138,20 @@ matmul_c4_avx128_fma4 (gfc_array_c4 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_4)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_4 *restrict abase_x;"}, {"sha": "49d8b446ad9504733da949262de559e7c21b62d5", "filename": "libgfortran/generated/matmulavx128_c8.c", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmulavx128_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmulavx128_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmulavx128_c8.c?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -555,20 +555,6 @@ matmul_c8_avx128_fma3 (gfc_array_c8 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_8)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_8 *restrict bbase_y;\n@@ -583,6 +569,20 @@ matmul_c8_avx128_fma3 (gfc_array_c8 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_8)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_8 *restrict abase_x;\n@@ -1124,20 +1124,6 @@ matmul_c8_avx128_fma4 (gfc_array_c8 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_8)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_COMPLEX_8 *restrict bbase_y;\n@@ -1152,6 +1138,20 @@ matmul_c8_avx128_fma4 (gfc_array_c8 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_COMPLEX_8)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_COMPLEX_8 *restrict abase_x;"}, {"sha": "8fc6d921b00729f92dd31a8cfb8c01eaa43d6125", "filename": "libgfortran/generated/matmulavx128_i1.c", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmulavx128_i1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmulavx128_i1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmulavx128_i1.c?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -555,20 +555,6 @@ matmul_i1_avx128_fma3 (gfc_array_i1 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_1)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_1 *restrict bbase_y;\n@@ -583,6 +569,20 @@ matmul_i1_avx128_fma3 (gfc_array_i1 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_1)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_1 *restrict abase_x;\n@@ -1124,20 +1124,6 @@ matmul_i1_avx128_fma4 (gfc_array_i1 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_1)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_1 *restrict bbase_y;\n@@ -1152,6 +1138,20 @@ matmul_i1_avx128_fma4 (gfc_array_i1 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_1)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_1 *restrict abase_x;"}, {"sha": "a3495570d5288eeaf2cbde39e125bfb0e442de94", "filename": "libgfortran/generated/matmulavx128_i16.c", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmulavx128_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmulavx128_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmulavx128_i16.c?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -555,20 +555,6 @@ matmul_i16_avx128_fma3 (gfc_array_i16 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_16)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_16 *restrict bbase_y;\n@@ -583,6 +569,20 @@ matmul_i16_avx128_fma3 (gfc_array_i16 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_16)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_16 *restrict abase_x;\n@@ -1124,20 +1124,6 @@ matmul_i16_avx128_fma4 (gfc_array_i16 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_16)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_16 *restrict bbase_y;\n@@ -1152,6 +1138,20 @@ matmul_i16_avx128_fma4 (gfc_array_i16 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_16)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_16 *restrict abase_x;"}, {"sha": "944eaf08cd1732f4921e74647106027998823419", "filename": "libgfortran/generated/matmulavx128_i2.c", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmulavx128_i2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmulavx128_i2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmulavx128_i2.c?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -555,20 +555,6 @@ matmul_i2_avx128_fma3 (gfc_array_i2 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_2)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_2 *restrict bbase_y;\n@@ -583,6 +569,20 @@ matmul_i2_avx128_fma3 (gfc_array_i2 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_2)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_2 *restrict abase_x;\n@@ -1124,20 +1124,6 @@ matmul_i2_avx128_fma4 (gfc_array_i2 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_2)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_2 *restrict bbase_y;\n@@ -1152,6 +1138,20 @@ matmul_i2_avx128_fma4 (gfc_array_i2 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_2)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_2 *restrict abase_x;"}, {"sha": "a8e270dd97c13e92f18e773472ebfe86b50ae271", "filename": "libgfortran/generated/matmulavx128_i4.c", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmulavx128_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmulavx128_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmulavx128_i4.c?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -555,20 +555,6 @@ matmul_i4_avx128_fma3 (gfc_array_i4 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_4)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_4 *restrict bbase_y;\n@@ -583,6 +569,20 @@ matmul_i4_avx128_fma3 (gfc_array_i4 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_4)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_4 *restrict abase_x;\n@@ -1124,20 +1124,6 @@ matmul_i4_avx128_fma4 (gfc_array_i4 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_4)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_4 *restrict bbase_y;\n@@ -1152,6 +1138,20 @@ matmul_i4_avx128_fma4 (gfc_array_i4 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_4)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_4 *restrict abase_x;"}, {"sha": "9c7f4925687e1c50307d77504a4687a59f07e840", "filename": "libgfortran/generated/matmulavx128_i8.c", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmulavx128_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmulavx128_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmulavx128_i8.c?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -555,20 +555,6 @@ matmul_i8_avx128_fma3 (gfc_array_i8 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_8)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_8 *restrict bbase_y;\n@@ -583,6 +569,20 @@ matmul_i8_avx128_fma3 (gfc_array_i8 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_8)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_8 *restrict abase_x;\n@@ -1124,20 +1124,6 @@ matmul_i8_avx128_fma4 (gfc_array_i8 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_8)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_INTEGER_8 *restrict bbase_y;\n@@ -1152,6 +1138,20 @@ matmul_i8_avx128_fma4 (gfc_array_i8 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_INTEGER_8)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_INTEGER_8 *restrict abase_x;"}, {"sha": "e2a44cf7e0dd54d8bea1dcc00f3b33913516d418", "filename": "libgfortran/generated/matmulavx128_r10.c", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmulavx128_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmulavx128_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmulavx128_r10.c?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -555,20 +555,6 @@ matmul_r10_avx128_fma3 (gfc_array_r10 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_10)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_10 *restrict bbase_y;\n@@ -583,6 +569,20 @@ matmul_r10_avx128_fma3 (gfc_array_r10 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_10)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_10 *restrict abase_x;\n@@ -1124,20 +1124,6 @@ matmul_r10_avx128_fma4 (gfc_array_r10 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_10)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_10 *restrict bbase_y;\n@@ -1152,6 +1138,20 @@ matmul_r10_avx128_fma4 (gfc_array_r10 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_10)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_10 *restrict abase_x;"}, {"sha": "186b226ebc7e7ece29cb78c43c50e36c76fdad4b", "filename": "libgfortran/generated/matmulavx128_r16.c", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmulavx128_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmulavx128_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmulavx128_r16.c?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -555,20 +555,6 @@ matmul_r16_avx128_fma3 (gfc_array_r16 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_16)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_16 *restrict bbase_y;\n@@ -583,6 +569,20 @@ matmul_r16_avx128_fma3 (gfc_array_r16 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_16)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_16 *restrict abase_x;\n@@ -1124,20 +1124,6 @@ matmul_r16_avx128_fma4 (gfc_array_r16 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_16)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_16 *restrict bbase_y;\n@@ -1152,6 +1138,20 @@ matmul_r16_avx128_fma4 (gfc_array_r16 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_16)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_16 *restrict abase_x;"}, {"sha": "e21ea39f12457384daa027dd84ef7f0b2734f813", "filename": "libgfortran/generated/matmulavx128_r4.c", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmulavx128_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmulavx128_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmulavx128_r4.c?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -555,20 +555,6 @@ matmul_r4_avx128_fma3 (gfc_array_r4 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_4)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_4 *restrict bbase_y;\n@@ -583,6 +569,20 @@ matmul_r4_avx128_fma3 (gfc_array_r4 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_4)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_4 *restrict abase_x;\n@@ -1124,20 +1124,6 @@ matmul_r4_avx128_fma4 (gfc_array_r4 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_4)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_4 *restrict bbase_y;\n@@ -1152,6 +1138,20 @@ matmul_r4_avx128_fma4 (gfc_array_r4 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_4)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_4 *restrict abase_x;"}, {"sha": "e7efd0758899882c2f680eb7dcecde77dd012012", "filename": "libgfortran/generated/matmulavx128_r8.c", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmulavx128_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fgenerated%2Fmatmulavx128_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmulavx128_r8.c?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -555,20 +555,6 @@ matmul_r8_avx128_fma3 (gfc_array_r8 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_8)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_8 *restrict bbase_y;\n@@ -583,6 +569,20 @@ matmul_r8_avx128_fma3 (gfc_array_r8 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_8)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_8 *restrict abase_x;\n@@ -1124,20 +1124,6 @@ matmul_r8_avx128_fma4 (gfc_array_r8 * const restrict retarray,\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = (GFC_REAL_8)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const GFC_REAL_8 *restrict bbase_y;\n@@ -1152,6 +1138,20 @@ matmul_r8_avx128_fma4 (gfc_array_r8 * const restrict retarray,\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = (GFC_REAL_8)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const GFC_REAL_8 *restrict abase_x;"}, {"sha": "13fd7696238b383ab523dd402beab50cecc8158c", "filename": "libgfortran/m4/matmul_internal.m4", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fm4%2Fmatmul_internal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6cd6aed195b4ec7d652e8b41d60b60e174304e/libgfortran%2Fm4%2Fmatmul_internal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fmatmul_internal.m4?ref=cd6cd6aed195b4ec7d652e8b41d60b60e174304e", "patch": "@@ -506,20 +506,6 @@ sinclude(`matmul_asm_'rtype_code`.m4')dnl\n \t    }\n \t}\n     }\n-  else if (axstride < aystride)\n-    {\n-      for (y = 0; y < ycount; y++)\n-\tfor (x = 0; x < xcount; x++)\n-\t  dest[x*rxstride + y*rystride] = ('rtype_name`)0;\n-\n-      for (y = 0; y < ycount; y++)\n-\tfor (n = 0; n < count; n++)\n-\t  for (x = 0; x < xcount; x++)\n-\t    /* dest[x,y] += a[x,n] * b[n,y] */\n-\t    dest[x*rxstride + y*rystride] +=\n-\t\t\t\t\tabase[x*axstride + n*aystride] *\n-\t\t\t\t\tbbase[n*bxstride + y*bystride];\n-    }\n   else if (GFC_DESCRIPTOR_RANK (a) == 1)\n     {\n       const 'rtype_name` *restrict bbase_y;\n@@ -534,6 +520,20 @@ sinclude(`matmul_asm_'rtype_code`.m4')dnl\n \t  dest[y*rxstride] = s;\n \t}\n     }\n+  else if (axstride < aystride)\n+    {\n+      for (y = 0; y < ycount; y++)\n+\tfor (x = 0; x < xcount; x++)\n+\t  dest[x*rxstride + y*rystride] = ('rtype_name`)0;\n+\n+      for (y = 0; y < ycount; y++)\n+\tfor (n = 0; n < count; n++)\n+\t  for (x = 0; x < xcount; x++)\n+\t    /* dest[x,y] += a[x,n] * b[n,y] */\n+\t    dest[x*rxstride + y*rystride] +=\n+\t\t\t\t\tabase[x*axstride + n*aystride] *\n+\t\t\t\t\tbbase[n*bxstride + y*bystride];\n+    }\n   else\n     {\n       const 'rtype_name` *restrict abase_x;"}]}