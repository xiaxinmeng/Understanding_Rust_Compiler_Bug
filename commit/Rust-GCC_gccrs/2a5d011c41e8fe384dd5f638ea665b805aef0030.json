{"sha": "2a5d011c41e8fe384dd5f638ea665b805aef0030", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE1ZDAxMWM0MWU4ZmUzODRkZDVmNjM4ZWE2NjViODA1YWVmMDAzMA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2012-02-15T19:56:07Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2012-02-15T19:56:07Z"}, "message": "re PR libstdc++/51368 (libstdc++ python pretty printers should use --with-python-dir just like libjava)\n\n2012-02-15  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/51368\n\t* acinclude.m4 (GLIBCXX_ENABLE_PYTHON): New.\n\t* configure.ac: Use it.\n\t* python/Makefile.am: Same.\n\t* configure: Regenerate.\n\t* python/Makefile.in: Regenerate.\n\t* Makefile.in: Same.\n\t* doc/Makefile.in: Same.\n\t* include/Makefile.in: Same.\n\t* po/Makefile.in: Same.\n\t* src/Makefile.in: Same.\n\t* src/c++11/Makefile.in: Same.\n\t* src/c++98/Makefile.in: Same.\n\t* testsuite/Makefile.in: Same.\n\nCo-Authored-By: Jonathan Wakely <jwakely.gcc@gmail.com>\n\nFrom-SVN: r184282", "tree": {"sha": "b836a2e7d04d9c84b7355078fd9211e99fc38cf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b836a2e7d04d9c84b7355078fd9211e99fc38cf2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a5d011c41e8fe384dd5f638ea665b805aef0030", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a5d011c41e8fe384dd5f638ea665b805aef0030", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a5d011c41e8fe384dd5f638ea665b805aef0030", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a5d011c41e8fe384dd5f638ea665b805aef0030/comments", "author": null, "committer": null, "parents": [{"sha": "6017aed3043a62f0cc5f0e20804fd0913addc6be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6017aed3043a62f0cc5f0e20804fd0913addc6be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6017aed3043a62f0cc5f0e20804fd0913addc6be"}], "stats": {"total": 189, "additions": 141, "deletions": 48}, "files": [{"sha": "5898d1bfadf22020e95e9536ab7732ceca37cd03", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=2a5d011c41e8fe384dd5f638ea665b805aef0030", "patch": "@@ -1,3 +1,20 @@\n+2012-02-15  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/51368\n+\t* acinclude.m4 (GLIBCXX_ENABLE_PYTHON): New.\n+\t* configure.ac: Use it.\n+\t* python/Makefile.am: Same.\n+\t* configure: Regenerate.\n+\t* python/Makefile.in: Regenerate.\n+\t* Makefile.in: Same.\n+\t* doc/Makefile.in: Same.\n+\t* include/Makefile.in: Same.\n+\t* po/Makefile.in: Same.\n+\t* src/Makefile.in: Same.\n+\t* src/c++11/Makefile.in: Same.\n+\t* src/c++98/Makefile.in: Same.\n+\t* testsuite/Makefile.in: Same.\n+\n 2012-02-14  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* 30_threads/thread/native_handle/typesizes.cc: Do not run on cygwin.\n@@ -30,7 +47,7 @@\n \t* libsupc++/guard.cc (__cxa_guard_acquire): Same.\n \n 2012-02-10  Benjamin Kosnik  <bkoz@redhat.com>\n-            Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\t    Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \tPR libstdc++/51798 continued.\n \t* acinclude.m4 (GLIBCXX_ENABLE_ATOMIC_BUILTINS): Use __atomic_*"}, {"sha": "74fade4ca477c84ab614b741a278e8de6a96ff94", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=2a5d011c41e8fe384dd5f638ea665b805aef0030", "patch": "@@ -264,6 +264,7 @@ port_specific_symbol_files = @port_specific_symbol_files@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n psdir = @psdir@\n+python_mod_dir = @python_mod_dir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n srcdir = @srcdir@"}, {"sha": "61fdb42c66dea1c17a4db58e6c6fe45242d75f55", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 44, "deletions": 23, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=2a5d011c41e8fe384dd5f638ea665b805aef0030", "patch": "@@ -1737,26 +1737,26 @@ AC_DEFUN([GLIBCXX_CHECK_MATH_PROTO], [\n \t     {  return __builtin_fabsf(__x); }\n \t   }\n \t])],\n-        [glibcxx_cv_abs_float=no],\n-        [glibcxx_cv_abs_float=yes]\n+\t[glibcxx_cv_abs_float=no],\n+\t[glibcxx_cv_abs_float=yes]\n       )])\n \n       # autoheader cannot handle indented templates.\n       AH_VERBATIM([__CORRECT_ISO_CPP_MATH_H_PROTO1],\n-        [/* Define if all C++ overloads are available in <math.h>.  */\n+\t[/* Define if all C++ overloads are available in <math.h>.  */\n #if __cplusplus >= 199711L\n #undef __CORRECT_ISO_CPP_MATH_H_PROTO1\n #endif])\n       AH_VERBATIM([__CORRECT_ISO_CPP_MATH_H_PROTO2],\n-        [/* Define if only double std::abs(double) is available in <math.h>.  */\n+\t[/* Define if only double std::abs(double) is available in <math.h>.  */\n #if __cplusplus >= 199711L\n #undef __CORRECT_ISO_CPP_MATH_H_PROTO2\n #endif])\n \n       if test $glibcxx_cv_abs_float = yes; then\n-        AC_DEFINE(__CORRECT_ISO_CPP_MATH_H_PROTO1)\n+\tAC_DEFINE(__CORRECT_ISO_CPP_MATH_H_PROTO1)\n       else\n-        AC_DEFINE(__CORRECT_ISO_CPP_MATH_H_PROTO2)\n+\tAC_DEFINE(__CORRECT_ISO_CPP_MATH_H_PROTO2)\n       fi\n       AC_MSG_RESULT($glibcxx_cv_abs_float)\n       ;;\n@@ -1787,19 +1787,19 @@ AC_DEFUN([GLIBCXX_CHECK_STDLIB_PROTO], [\n \t     inline long\n \t     abs(long __i) { return labs(__i); }\n \t   }\n-        ])],\n-        [glibcxx_cv_abs_long=no],\n-        [glibcxx_cv_abs_long=yes]\n+\t])],\n+\t[glibcxx_cv_abs_long=no],\n+\t[glibcxx_cv_abs_long=yes]\n       )])\n \n       # autoheader cannot handle indented templates.\n       AH_VERBATIM([__CORRECT_ISO_CPP_STDLIB_H_PROTO],\n-        [/* Define if all C++ overloads are available in <stdlib.h>.  */\n+\t[/* Define if all C++ overloads are available in <stdlib.h>.  */\n #if __cplusplus >= 199711L\n #undef __CORRECT_ISO_CPP_STDLIB_H_PROTO\n #endif])\n       if test $glibcxx_cv_abs_long = yes; then\n-        AC_DEFINE(__CORRECT_ISO_CPP_STDLIB_H_PROTO, 1)\n+\tAC_DEFINE(__CORRECT_ISO_CPP_STDLIB_H_PROTO, 1)\n       fi\n       AC_MSG_RESULT($glibcxx_cv_abs_long)\n       ;;\n@@ -2495,7 +2495,7 @@ template<typename T>\n \n int main()\n {\n-  typename same<double, __float128>::type      f1;\t\n+  typename same<double, __float128>::type      f1;\n   typename same<long double, __float128>::type f2;\n }\n EOF\n@@ -2729,7 +2729,7 @@ AC_DEFUN([GLIBCXX_ENABLE_ATOMIC_BUILTINS], [\n        atomic_type c3(0);\n        __atomic_fetch_add(&c1, c2, __ATOMIC_RELAXED);\n        __atomic_compare_exchange_n(&c1, &c2, c3, true, __ATOMIC_ACQ_REL,\n-                                   __ATOMIC_RELAXED);\n+\t\t\t\t   __ATOMIC_RELAXED);\n        __atomic_test_and_set(&c1, __ATOMIC_RELAXED);\n        __atomic_load_n(&c1, __ATOMIC_RELAXED);\n       ],\n@@ -2748,7 +2748,7 @@ AC_DEFUN([GLIBCXX_ENABLE_ATOMIC_BUILTINS], [\n        atomic_type c3(0);\n        __atomic_fetch_add(&c1, c2, __ATOMIC_RELAXED);\n        __atomic_compare_exchange_n(&c1, &c2, c3, true, __ATOMIC_ACQ_REL,\n-                                   __ATOMIC_RELAXED);\n+\t\t\t\t   __ATOMIC_RELAXED);\n        __atomic_test_and_set(&c1, __ATOMIC_RELAXED);\n        __atomic_load_n(&c1, __ATOMIC_RELAXED);\n       ],\n@@ -2767,7 +2767,7 @@ AC_DEFUN([GLIBCXX_ENABLE_ATOMIC_BUILTINS], [\n        atomic_type c3(0);\n        __atomic_fetch_add(&c1, c2, __ATOMIC_RELAXED);\n        __atomic_compare_exchange_n(&c1, &c2, c3, true, __ATOMIC_ACQ_REL,\n-                                   __ATOMIC_RELAXED);\n+\t\t\t\t   __ATOMIC_RELAXED);\n        __atomic_test_and_set(&c1, __ATOMIC_RELAXED);\n        __atomic_load_n(&c1, __ATOMIC_RELAXED);\n       ],\n@@ -2786,7 +2786,7 @@ AC_DEFUN([GLIBCXX_ENABLE_ATOMIC_BUILTINS], [\n        atomic_type c3(0);\n        __atomic_fetch_add(&c1, c2, __ATOMIC_RELAXED);\n        __atomic_compare_exchange_n(&c1, &c2, c3, true, __ATOMIC_ACQ_REL,\n-                                   __ATOMIC_RELAXED);\n+\t\t\t\t   __ATOMIC_RELAXED);\n        __atomic_test_and_set(&c1, __ATOMIC_RELAXED);\n        __atomic_load_n(&c1, __ATOMIC_RELAXED);\n       ],\n@@ -2814,10 +2814,10 @@ int main()\n   atomic_type c3(0);\n   __atomic_fetch_add(&c1, c2, __ATOMIC_RELAXED);\n   __atomic_compare_exchange_n(&c1, &c2, c3, true, __ATOMIC_ACQ_REL,\n-                              __ATOMIC_RELAXED);\n+\t\t\t      __ATOMIC_RELAXED);\n   __atomic_test_and_set(&c1, __ATOMIC_RELAXED);\n   __atomic_load_n(&c1, __ATOMIC_RELAXED);\n- \n+\n   return 0;\n }\n EOF\n@@ -2843,7 +2843,7 @@ int main()\n   atomic_type c3(0);\n   __atomic_fetch_add(&c1, c2, __ATOMIC_RELAXED);\n   __atomic_compare_exchange_n(&c1, &c2, c3, true, __ATOMIC_ACQ_REL,\n-                              __ATOMIC_RELAXED);\n+\t\t\t      __ATOMIC_RELAXED);\n   __atomic_test_and_set(&c1, __ATOMIC_RELAXED);\n   __atomic_load_n(&c1, __ATOMIC_RELAXED);\n \n@@ -2873,7 +2873,7 @@ int main()\n   atomic_type c3(0);\n   __atomic_fetch_add(&c1, c2, __ATOMIC_RELAXED);\n   __atomic_compare_exchange_n(&c1, &c2, c3, true, __ATOMIC_ACQ_REL,\n-                              __ATOMIC_RELAXED);\n+\t\t\t      __ATOMIC_RELAXED);\n   __atomic_test_and_set(&c1, __ATOMIC_RELAXED);\n   __atomic_load_n(&c1, __ATOMIC_RELAXED);\n \n@@ -2902,7 +2902,7 @@ int main()\n   atomic_type c3(0);\n   __atomic_fetch_add(&c1, c2, __ATOMIC_RELAXED);\n   __atomic_compare_exchange_n(&c1, &c2, c3, true, __ATOMIC_ACQ_REL,\n-                              __ATOMIC_RELAXED);\n+\t\t\t      __ATOMIC_RELAXED);\n   __atomic_test_and_set(&c1, __ATOMIC_RELAXED);\n   __atomic_load_n(&c1, __ATOMIC_RELAXED);\n \n@@ -3348,13 +3348,13 @@ AC_DEFUN([GLIBCXX_CHECK_GTHREADS], [\n     [\n       // In case of POSIX threads check _POSIX_TIMEOUTS.\n       #if (defined(_PTHREADS) \\\n-          && (!defined(_POSIX_TIMEOUTS) || _POSIX_TIMEOUTS <= 0))\n+\t  && (!defined(_POSIX_TIMEOUTS) || _POSIX_TIMEOUTS <= 0))\n       #error\n       #endif\n     ], [ac_gthread_use_mutex_timedlock=1], [ac_gthread_use_mutex_timedlock=0])\n \n   AC_DEFINE_UNQUOTED(_GTHREAD_USE_MUTEX_TIMEDLOCK, $ac_gthread_use_mutex_timedlock,\n-                     [Define to 1 if mutex_timedlock is available.])\n+\t\t     [Define to 1 if mutex_timedlock is available.])\n \n   if test $ac_gthread_use_mutex_timedlock = 1 ; then res_mutex_timedlock=yes ;\n   else res_mutex_timedlock=no ; fi\n@@ -3543,6 +3543,27 @@ AC_DEFUN([GLIBCXX_CHECK_SYSCTL_HW_NCPU], [\n   AC_LANG_RESTORE\n ])\n \n+dnl\n+dnl Check to see if python pretty printing can be activated.\n+dnl\n+dnl --with-python-dir=dir\n+dnl installs directory into $prefix/dir\n+AC_DEFUN([GLIBCXX_ENABLE_PYTHON], [\n+\n+AC_MSG_CHECKING([for custom python install directory])\n+AC_ARG_WITH([python-dir],\n+\t    AS_HELP_STRING([--with-python-dir],\n+\t\t\t   [the location to install Python modules. This path is relative starting from the prefix.]),\n+\t    [with_python_dir=$withval], [with_python_dir=\"no\"])\n+AC_MSG_RESULT(${with_python_dir})\n+\n+# Needed for installing Python modules during make install.\n+python_mod_dir=\"${with_python_dir}\"\n+AC_SUBST(python_mod_dir)\n+GLIBCXX_CONDITIONAL(ENABLE_PYTHONDIR, test $python_mod_dir != no)\n+])\n+\n+\n # Macros from the top-level gcc directory.\n m4_include([../config/gc++filt.m4])\n m4_include([../config/tls.m4])"}, {"sha": "3acf5eebe6baf82f9cd6737e8dccaf97b066a346", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 61, "deletions": 22, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=2a5d011c41e8fe384dd5f638ea665b805aef0030", "patch": "@@ -664,6 +664,9 @@ LIBICONV\n OPT_LDFLAGS\n SECTION_LDFLAGS\n GLIBCXX_LIBS\n+ENABLE_PYTHONDIR_FALSE\n+ENABLE_PYTHONDIR_TRUE\n+python_mod_dir\n ENABLE_EXTERN_TEMPLATE_FALSE\n ENABLE_EXTERN_TEMPLATE_TRUE\n EXTRA_CXX_FLAGS\n@@ -856,6 +859,7 @@ enable_libstdcxx_debug\n enable_cxx_flags\n enable_fully_dynamic_string\n enable_extern_template\n+with_python_dir\n enable_libstdcxx_time\n enable_tls\n enable_rpath\n@@ -1568,6 +1572,8 @@ Optional Packages:\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n+  --with-python-dir       the location to install Python modules. This path is\n+                          relative starting from the prefix.\n   --with-gnu-ld           assume the C compiler uses GNU ld default=no\n   --with-libiconv-prefix[=DIR]  search for libiconv in DIR/include and DIR/lib\n   --without-libiconv-prefix     don't search for libiconv in includedir and libdir\n@@ -11486,7 +11492,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11489 \"configure\"\n+#line 11495 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11592,7 +11598,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11595 \"configure\"\n+#line 11601 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14950,7 +14956,7 @@ fi\n     #\n     # Fake what AC_TRY_COMPILE does.  XXX Look at redoing this new-style.\n     cat > conftest.$ac_ext << EOF\n-#line 14953 \"configure\"\n+#line 14959 \"configure\"\n struct S { ~S(); };\n void bar();\n void foo()\n@@ -15128,7 +15134,7 @@ typedef bool atomic_type;\n        atomic_type c3(0);\n        __atomic_fetch_add(&c1, c2, __ATOMIC_RELAXED);\n        __atomic_compare_exchange_n(&c1, &c2, c3, true, __ATOMIC_ACQ_REL,\n-                                   __ATOMIC_RELAXED);\n+\t\t\t\t   __ATOMIC_RELAXED);\n        __atomic_test_and_set(&c1, __ATOMIC_RELAXED);\n        __atomic_load_n(&c1, __ATOMIC_RELAXED);\n \n@@ -15170,7 +15176,7 @@ typedef short atomic_type;\n        atomic_type c3(0);\n        __atomic_fetch_add(&c1, c2, __ATOMIC_RELAXED);\n        __atomic_compare_exchange_n(&c1, &c2, c3, true, __ATOMIC_ACQ_REL,\n-                                   __ATOMIC_RELAXED);\n+\t\t\t\t   __ATOMIC_RELAXED);\n        __atomic_test_and_set(&c1, __ATOMIC_RELAXED);\n        __atomic_load_n(&c1, __ATOMIC_RELAXED);\n \n@@ -15212,7 +15218,7 @@ typedef int atomic_type;\n        atomic_type c3(0);\n        __atomic_fetch_add(&c1, c2, __ATOMIC_RELAXED);\n        __atomic_compare_exchange_n(&c1, &c2, c3, true, __ATOMIC_ACQ_REL,\n-                                   __ATOMIC_RELAXED);\n+\t\t\t\t   __ATOMIC_RELAXED);\n        __atomic_test_and_set(&c1, __ATOMIC_RELAXED);\n        __atomic_load_n(&c1, __ATOMIC_RELAXED);\n \n@@ -15254,7 +15260,7 @@ typedef long long atomic_type;\n        atomic_type c3(0);\n        __atomic_fetch_add(&c1, c2, __ATOMIC_RELAXED);\n        __atomic_compare_exchange_n(&c1, &c2, c3, true, __ATOMIC_ACQ_REL,\n-                                   __ATOMIC_RELAXED);\n+\t\t\t\t   __ATOMIC_RELAXED);\n        __atomic_test_and_set(&c1, __ATOMIC_RELAXED);\n        __atomic_load_n(&c1, __ATOMIC_RELAXED);\n \n@@ -15285,7 +15291,7 @@ $as_echo \"$glibcxx_cv_atomic_long_long\" >&6; }\n   # Fake what AC_TRY_COMPILE does.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15288 \"configure\"\n+#line 15294 \"configure\"\n int main()\n {\n   typedef bool atomic_type;\n@@ -15294,7 +15300,7 @@ int main()\n   atomic_type c3(0);\n   __atomic_fetch_add(&c1, c2, __ATOMIC_RELAXED);\n   __atomic_compare_exchange_n(&c1, &c2, c3, true, __ATOMIC_ACQ_REL,\n-                              __ATOMIC_RELAXED);\n+\t\t\t      __ATOMIC_RELAXED);\n   __atomic_test_and_set(&c1, __ATOMIC_RELAXED);\n   __atomic_load_n(&c1, __ATOMIC_RELAXED);\n \n@@ -15320,7 +15326,7 @@ $as_echo \"$glibcxx_cv_atomic_bool\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15323 \"configure\"\n+#line 15329 \"configure\"\n int main()\n {\n   typedef short atomic_type;\n@@ -15329,7 +15335,7 @@ int main()\n   atomic_type c3(0);\n   __atomic_fetch_add(&c1, c2, __ATOMIC_RELAXED);\n   __atomic_compare_exchange_n(&c1, &c2, c3, true, __ATOMIC_ACQ_REL,\n-                              __ATOMIC_RELAXED);\n+\t\t\t      __ATOMIC_RELAXED);\n   __atomic_test_and_set(&c1, __ATOMIC_RELAXED);\n   __atomic_load_n(&c1, __ATOMIC_RELAXED);\n \n@@ -15355,7 +15361,7 @@ $as_echo \"$glibcxx_cv_atomic_short\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15358 \"configure\"\n+#line 15364 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int.\n@@ -15365,7 +15371,7 @@ int main()\n   atomic_type c3(0);\n   __atomic_fetch_add(&c1, c2, __ATOMIC_RELAXED);\n   __atomic_compare_exchange_n(&c1, &c2, c3, true, __ATOMIC_ACQ_REL,\n-                              __ATOMIC_RELAXED);\n+\t\t\t      __ATOMIC_RELAXED);\n   __atomic_test_and_set(&c1, __ATOMIC_RELAXED);\n   __atomic_load_n(&c1, __ATOMIC_RELAXED);\n \n@@ -15391,7 +15397,7 @@ $as_echo \"$glibcxx_cv_atomic_int\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15394 \"configure\"\n+#line 15400 \"configure\"\n int main()\n {\n   typedef long long atomic_type;\n@@ -15400,7 +15406,7 @@ int main()\n   atomic_type c3(0);\n   __atomic_fetch_add(&c1, c2, __ATOMIC_RELAXED);\n   __atomic_compare_exchange_n(&c1, &c2, c3, true, __ATOMIC_ACQ_REL,\n-                              __ATOMIC_RELAXED);\n+\t\t\t      __ATOMIC_RELAXED);\n   __atomic_test_and_set(&c1, __ATOMIC_RELAXED);\n   __atomic_load_n(&c1, __ATOMIC_RELAXED);\n \n@@ -15471,7 +15477,7 @@ $as_echo \"$as_me: WARNING: Performance of certain classes will degrade as a resu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15474 \"configure\"\n+#line 15480 \"configure\"\n int main()\n {\n   _Decimal32 d1;\n@@ -15513,7 +15519,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15516 \"configure\"\n+#line 15522 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -15547,7 +15553,7 @@ $as_echo \"$enable_int128\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15550 \"configure\"\n+#line 15556 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };\n@@ -17240,6 +17246,26 @@ $as_echo \"$enable_extern_template\" >&6; }\n \n \n \n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for custom python install directory\" >&5\n+$as_echo_n \"checking for custom python install directory... \" >&6; }\n+\n+# Check whether --with-python-dir was given.\n+if test \"${with_python_dir+set}\" = set; then :\n+  withval=$with_python_dir; with_python_dir=$withval\n+else\n+  with_python_dir=\"no\"\n+fi\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${with_python_dir}\" >&5\n+$as_echo \"${with_python_dir}\" >&6; }\n+\n+# Needed for installing Python modules during make install.\n+python_mod_dir=\"${with_python_dir}\"\n+\n+\n+\n+\n # Checks for operating systems support that doesn't require linking.\n \n \n@@ -17286,10 +17312,10 @@ fi\n \n \n       if test $glibcxx_cv_abs_float = yes; then\n-        $as_echo \"#define __CORRECT_ISO_CPP_MATH_H_PROTO1 1\" >>confdefs.h\n+\t$as_echo \"#define __CORRECT_ISO_CPP_MATH_H_PROTO1 1\" >>confdefs.h\n \n       else\n-        $as_echo \"#define __CORRECT_ISO_CPP_MATH_H_PROTO2 1\" >>confdefs.h\n+\t$as_echo \"#define __CORRECT_ISO_CPP_MATH_H_PROTO2 1\" >>confdefs.h\n \n       fi\n       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_abs_float\" >&5\n@@ -17347,7 +17373,7 @@ fi\n       # autoheader cannot handle indented templates.\n \n       if test $glibcxx_cv_abs_long = yes; then\n-        $as_echo \"#define __CORRECT_ISO_CPP_STDLIB_H_PROTO 1\" >>confdefs.h\n+\t$as_echo \"#define __CORRECT_ISO_CPP_STDLIB_H_PROTO 1\" >>confdefs.h\n \n       fi\n       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $glibcxx_cv_abs_long\" >&5\n@@ -19822,7 +19848,7 @@ main ()\n \n       // In case of POSIX threads check _POSIX_TIMEOUTS.\n       #if (defined(_PTHREADS) \\\n-          && (!defined(_POSIX_TIMEOUTS) || _POSIX_TIMEOUTS <= 0))\n+\t  && (!defined(_POSIX_TIMEOUTS) || _POSIX_TIMEOUTS <= 0))\n       #error\n       #endif\n \n@@ -66046,6 +66072,15 @@ else\n fi\n \n \n+    if test $python_mod_dir != no; then\n+  ENABLE_PYTHONDIR_TRUE=\n+  ENABLE_PYTHONDIR_FALSE='#'\n+else\n+  ENABLE_PYTHONDIR_TRUE='#'\n+  ENABLE_PYTHONDIR_FALSE=\n+fi\n+\n+\n     if test $enable_symvers != no; then\n   ENABLE_SYMVERS_TRUE=\n   ENABLE_SYMVERS_FALSE='#'\n@@ -66499,6 +66534,10 @@ if test -z \"${ENABLE_EXTERN_TEMPLATE_TRUE}\" && test -z \"${ENABLE_EXTERN_TEMPLATE\n   as_fn_error \"conditional \\\"ENABLE_EXTERN_TEMPLATE\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${ENABLE_PYTHONDIR_TRUE}\" && test -z \"${ENABLE_PYTHONDIR_FALSE}\"; then\n+  as_fn_error \"conditional \\\"ENABLE_PYTHONDIR\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n if test -z \"${ENABLE_SYMVERS_TRUE}\" && test -z \"${ENABLE_SYMVERS_FALSE}\"; then\n   as_fn_error \"conditional \\\"ENABLE_SYMVERS\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5"}, {"sha": "de5fe95b7e38cd4e89b7e36dca9a3c2ca9708c45", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=2a5d011c41e8fe384dd5f638ea665b805aef0030", "patch": "@@ -130,6 +130,7 @@ GLIBCXX_ENABLE_PARALLEL([yes])\n GLIBCXX_ENABLE_CXX_FLAGS\n GLIBCXX_ENABLE_FULLY_DYNAMIC_STRING([no])\n GLIBCXX_ENABLE_EXTERN_TEMPLATE([yes])\n+GLIBCXX_ENABLE_PYTHON\n \n # Checks for operating systems support that doesn't require linking.\n GLIBCXX_CHECK_MATH_PROTO"}, {"sha": "933893448d6542c73f4c16e3daed6001dd0be0d2", "filename": "libstdc++-v3/doc/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in?ref=2a5d011c41e8fe384dd5f638ea665b805aef0030", "patch": "@@ -248,6 +248,7 @@ port_specific_symbol_files = @port_specific_symbol_files@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n psdir = @psdir@\n+python_mod_dir = @python_mod_dir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n srcdir = @srcdir@"}, {"sha": "b872ef5070380666e0af7b81b7ee58032e6b6ef3", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=2a5d011c41e8fe384dd5f638ea665b805aef0030", "patch": "@@ -238,6 +238,7 @@ port_specific_symbol_files = @port_specific_symbol_files@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n psdir = @psdir@\n+python_mod_dir = @python_mod_dir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n srcdir = @srcdir@"}, {"sha": "4d4aeb71d0f5daee5c9ce8d6b50dfed0e224bdd2", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=2a5d011c41e8fe384dd5f638ea665b805aef0030", "patch": "@@ -298,6 +298,7 @@ port_specific_symbol_files = @port_specific_symbol_files@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n psdir = @psdir@\n+python_mod_dir = @python_mod_dir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n srcdir = @srcdir@"}, {"sha": "2fc769fdcf526238d0a832e1acf5d4bd8b909ab6", "filename": "libstdc++-v3/po/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpo%2FMakefile.in?ref=2a5d011c41e8fe384dd5f638ea665b805aef0030", "patch": "@@ -238,6 +238,7 @@ port_specific_symbol_files = @port_specific_symbol_files@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n psdir = @psdir@\n+python_mod_dir = @python_mod_dir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n srcdir = @srcdir@"}, {"sha": "49d8f86ac23f258f0caa63d3728bd94b5a9fe8ec", "filename": "libstdc++-v3/python/Makefile.am", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2Fpython%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2Fpython%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2FMakefile.am?ref=2a5d011c41e8fe384dd5f638ea665b805aef0030", "patch": "@@ -1,6 +1,6 @@\n ## Makefile for the python subdirectory of the GNU C++ Standard library.\n ##\n-## Copyright (C) 2009 Free Software Foundation, Inc.\n+## Copyright (C) 2009, 2012 Free Software Foundation, Inc.\n ##\n ## This file is part of the libstdc++ version 3 distribution.\n ## Process this file with automake to produce Makefile.in.\n@@ -24,7 +24,11 @@\n include $(top_srcdir)/fragment.am\n \n ## Where to install the module code.\n+if ENABLE_PYTHONDIR\n+pythondir = $(prefix)/$(python_mod_dir)\n+else\n pythondir = $(datadir)/gcc-$(gcc_version)/python\n+endif\n \n all-local: gdb.py\n "}, {"sha": "7dde04f7766f84693236e3c5996f227246e96b50", "filename": "libstdc++-v3/python/Makefile.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2Fpython%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2Fpython%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2FMakefile.in?ref=2a5d011c41e8fe384dd5f638ea665b805aef0030", "patch": "@@ -262,6 +262,7 @@ port_specific_symbol_files = @port_specific_symbol_files@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n psdir = @psdir@\n+python_mod_dir = @python_mod_dir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n srcdir = @srcdir@\n@@ -297,7 +298,8 @@ WARN_CXXFLAGS = \\\n \n # -I/-D flags to pass when compiling.\n AM_CPPFLAGS = $(GLIBCXX_INCLUDES)\n-pythondir = $(datadir)/gcc-$(gcc_version)/python\n+@ENABLE_PYTHONDIR_FALSE@pythondir = $(datadir)/gcc-$(gcc_version)/python\n+@ENABLE_PYTHONDIR_TRUE@pythondir = $(prefix)/$(python_mod_dir)\n nobase_python_DATA = \\\n     libstdcxx/v6/printers.py \\\n     libstdcxx/v6/__init__.py \\"}, {"sha": "9f5a18f260eddb91ccfe26c1ee9e7d377205502f", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=2a5d011c41e8fe384dd5f638ea665b805aef0030", "patch": "@@ -289,6 +289,7 @@ port_specific_symbol_files = @port_specific_symbol_files@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n psdir = @psdir@\n+python_mod_dir = @python_mod_dir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n srcdir = @srcdir@"}, {"sha": "7cc1c8c1a8471214a39f583fc8ddce1a982c31d3", "filename": "libstdc++-v3/src/c++11/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2FMakefile.in?ref=2a5d011c41e8fe384dd5f638ea665b805aef0030", "patch": "@@ -256,6 +256,7 @@ port_specific_symbol_files = @port_specific_symbol_files@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n psdir = @psdir@\n+python_mod_dir = @python_mod_dir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n srcdir = @srcdir@"}, {"sha": "33afea4d5d035338bae9d6551f5530fb2c4e5bb2", "filename": "libstdc++-v3/src/c++98/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B98%2FMakefile.in?ref=2a5d011c41e8fe384dd5f638ea665b805aef0030", "patch": "@@ -275,6 +275,7 @@ port_specific_symbol_files = @port_specific_symbol_files@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n psdir = @psdir@\n+python_mod_dir = @python_mod_dir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n srcdir = @srcdir@"}, {"sha": "fc9b31a42599dc4e388c0579faeb13bc491a2f64", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a5d011c41e8fe384dd5f638ea665b805aef0030/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=2a5d011c41e8fe384dd5f638ea665b805aef0030", "patch": "@@ -238,6 +238,7 @@ port_specific_symbol_files = @port_specific_symbol_files@\n prefix = @prefix@\n program_transform_name = @program_transform_name@\n psdir = @psdir@\n+python_mod_dir = @python_mod_dir@\n sbindir = @sbindir@\n sharedstatedir = @sharedstatedir@\n srcdir = @srcdir@"}]}