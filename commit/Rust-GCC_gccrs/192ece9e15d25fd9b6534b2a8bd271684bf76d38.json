{"sha": "192ece9e15d25fd9b6534b2a8bd271684bf76d38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTkyZWNlOWUxNWQyNWZkOWI2NTM0YjJhOGJkMjcxNjg0YmY3NmQzOA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2019-07-19T17:04:51Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2019-07-19T17:04:51Z"}, "message": "tree-ssa-dse.c (initialize_ao_ref_for_dse): Handle strncpy.\n\n\t* tree-ssa-dse.c (initialize_ao_ref_for_dse): Handle\n\tstrncpy.  Drop some trivial dead code.\n\t(maybe_trim_memstar_call): Handle strncpy.\n\n\t* gcc.dg/tree-ssa/ssa-dse-37.c: New test.\n\t* gcc.dg/tree-ssa/ssa-dse-38.c: New test.\n\nFrom-SVN: r273606", "tree": {"sha": "cafced4d63e287c50081c43251c95d717ea12d4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cafced4d63e287c50081c43251c95d717ea12d4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/192ece9e15d25fd9b6534b2a8bd271684bf76d38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/192ece9e15d25fd9b6534b2a8bd271684bf76d38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/192ece9e15d25fd9b6534b2a8bd271684bf76d38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/192ece9e15d25fd9b6534b2a8bd271684bf76d38/comments", "author": null, "committer": null, "parents": [{"sha": "6b68f00d4c2b375dad66bd6e72c01c309b4085c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b68f00d4c2b375dad66bd6e72c01c309b4085c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b68f00d4c2b375dad66bd6e72c01c309b4085c5"}], "stats": {"total": 93, "additions": 90, "deletions": 3}, "files": [{"sha": "d8f60042ac1fda2fc37688032feb34dd00f60437", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/192ece9e15d25fd9b6534b2a8bd271684bf76d38/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/192ece9e15d25fd9b6534b2a8bd271684bf76d38/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=192ece9e15d25fd9b6534b2a8bd271684bf76d38", "patch": "@@ -1,3 +1,9 @@\n+2019-07-19  Jeff Law  <law@redhat.com>\n+\n+\t* tree-ssa-dse.c (initialize_ao_ref_for_dse): Handle\n+\tstrncpy.  Drop some trivial dead code.\n+\t(maybe_trim_memstar_call): Handle strncpy.\n+\n 2019-07-19  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/91211"}, {"sha": "ce8e3c781b984d82d23900d304c203408ef51a58", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/192ece9e15d25fd9b6534b2a8bd271684bf76d38/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/192ece9e15d25fd9b6534b2a8bd271684bf76d38/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=192ece9e15d25fd9b6534b2a8bd271684bf76d38", "patch": "@@ -1,3 +1,8 @@\n+2019-07-19  Jeff Law  <law@redhat.com>\n+\n+\t* gcc.dg/tree-ssa/ssa-dse-37.c: New test.\n+\t* gcc.dg/tree-ssa/ssa-dse-38.c: New test.\n+\n 2019-07-19  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/91211"}, {"sha": "56251fc340f9df28c0fad94e6e177d77d5dfdc81", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dse-37.c", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/192ece9e15d25fd9b6534b2a8bd271684bf76d38/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-37.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/192ece9e15d25fd9b6534b2a8bd271684bf76d38/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-37.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-37.c?ref=192ece9e15d25fd9b6534b2a8bd271684bf76d38", "patch": "@@ -0,0 +1,60 @@\n+/* { dg-options \"-O2 -fdump-tree-dse-details -fno-tree-fre\" } */\n+\n+\n+#ifndef SCOPE\n+#define SCOPE\n+#endif\n+\n+extern void frob (char *);\n+\n+void g (char *s)\n+{\n+  SCOPE char a[8];\n+  __builtin_strncpy (a, s, sizeof a);\n+  __builtin_memset (a, 0, sizeof a); \n+  frob (a);\n+}\n+\n+void h (char *s)\n+{\n+  SCOPE char a[8];\n+  __builtin_memset (a, 0, sizeof a); \n+  __builtin_strncpy (a, s, sizeof a);\n+  frob (a);\n+}\n+\n+void i (char *s)\n+{\n+  SCOPE char a[8];\n+  __builtin_strncpy (a, s, sizeof a);\n+  __builtin_memset (a, 0, sizeof a - 5); \n+  frob (a);\n+}\n+\n+void j (char *s)\n+{\n+  SCOPE char a[8];\n+  __builtin_memset (a, 0, sizeof a); \n+  __builtin_strncpy (a, s, sizeof a - 5);\n+  frob (a);\n+}\n+\n+void l (char *s)\n+{\n+  SCOPE char a[8];\n+  __builtin_strncpy (a, s, sizeof a);\n+  __builtin_memset (a + 2, 0, sizeof a - 2); \n+  frob (a);\n+}\n+\n+void m (char *s)\n+{\n+  SCOPE char a[8];\n+  __builtin_memset (a, 0, sizeof a); \n+  __builtin_strncpy (a + 2, s, sizeof a - 2);\n+  frob (a);\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"Deleted dead call\" 2 \"dse1\" } } */\n+/* { dg-final { scan-tree-dump-times \"Trimming statement \" 4 \"dse1\" } } */\n+"}, {"sha": "7ae33bfd169db393f03410eaa8d4c7615aa87bfb", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dse-38.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/192ece9e15d25fd9b6534b2a8bd271684bf76d38/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-38.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/192ece9e15d25fd9b6534b2a8bd271684bf76d38/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-38.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-38.c?ref=192ece9e15d25fd9b6534b2a8bd271684bf76d38", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-options \"-O2 -fdump-tree-dse-details -fno-tree-fre\" } */\n+\n+\n+/* This changes the scope of the destination object and exposes\n+   missed optimizations in DSE.  */\n+#define SCOPE extern\n+#include \"ssa-dse-37.c\"\n+\n+/* { dg-final { scan-tree-dump-times \"Deleted dead call\" 2 \"dse1\" { xfail *-*-* } } } */\n+/* { dg-final { scan-tree-dump-times \"Trimming statement \" 4 \"dse1\" { xfail *-*-* } } } */\n+\n+"}, {"sha": "5b7c4fc6d1acd07ae3708350faf89ccc68a01a8d", "filename": "gcc/tree-ssa-dse.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/192ece9e15d25fd9b6534b2a8bd271684bf76d38/gcc%2Ftree-ssa-dse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/192ece9e15d25fd9b6534b2a8bd271684bf76d38/gcc%2Ftree-ssa-dse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dse.c?ref=192ece9e15d25fd9b6534b2a8bd271684bf76d38", "patch": "@@ -113,10 +113,10 @@ initialize_ao_ref_for_dse (gimple *stmt, ao_ref *write)\n \tcase BUILT_IN_MEMCPY_CHK:\n \tcase BUILT_IN_MEMMOVE_CHK:\n \tcase BUILT_IN_MEMSET_CHK:\n+\tcase BUILT_IN_STRNCPY:\n+\tcase BUILT_IN_STRNCPY_CHK:\n \t  {\n-\t    tree size = NULL_TREE;\n-\t    if (gimple_call_num_args (stmt) == 3)\n-\t      size = gimple_call_arg (stmt, 2);\n+\t    tree size = gimple_call_arg (stmt, 2);\n \t    tree ptr = gimple_call_arg (stmt, 0);\n \t    ao_ref_init_from_ptr_and_size (write, ptr, size);\n \t    return true;\n@@ -469,8 +469,10 @@ maybe_trim_memstar_call (ao_ref *ref, sbitmap live, gimple *stmt)\n     {\n     case BUILT_IN_MEMCPY:\n     case BUILT_IN_MEMMOVE:\n+    case BUILT_IN_STRNCPY:\n     case BUILT_IN_MEMCPY_CHK:\n     case BUILT_IN_MEMMOVE_CHK:\n+    case BUILT_IN_STRNCPY_CHK:\n       {\n \tint head_trim, tail_trim;\n \tcompute_trims (ref, live, &head_trim, &tail_trim, stmt);\n@@ -966,9 +968,11 @@ dse_dom_walker::dse_optimize_stmt (gimple_stmt_iterator *gsi)\n \t{\n \tcase BUILT_IN_MEMCPY:\n \tcase BUILT_IN_MEMMOVE:\n+\tcase BUILT_IN_STRNCPY:\n \tcase BUILT_IN_MEMSET:\n \tcase BUILT_IN_MEMCPY_CHK:\n \tcase BUILT_IN_MEMMOVE_CHK:\n+\tcase BUILT_IN_STRNCPY_CHK:\n \tcase BUILT_IN_MEMSET_CHK:\n \t  {\n \t    /* Occasionally calls with an explicit length of zero"}]}