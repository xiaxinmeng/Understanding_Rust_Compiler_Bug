{"sha": "084dc63a0200e60e0fbb7c36b412a158d234f5c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg0ZGM2M2EwMjAwZTYwZTBmYmI3YzM2YjQxMmExNThkMjM0ZjVjMA==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-07-23T15:36:41Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-07-23T15:37:35Z"}, "message": "OpenMP: Support 'lastprivate (conditional:' in Fortran\n\ngcc/fortran/ChangeLog:\n\n\t* gfortran.h (gfc_omp_namelist): Add lastprivate_conditional.\n\t* openmp.c (gfc_match_omp_clauses): Handle 'conditional:'\n\tmodifier of 'lastprivate'.\n\t* trans-openmp.c (gfc_omp_clause_default_ctor): Don't assert\n\ton OMP_CLAUSE__CONDTEMP_ and other OMP_*TEMP_.\n\t(gfc_trans_omp_variable_list): Handle lastprivate_conditional.\n\ngcc/testsuite/ChangeLog:\n\n\t* gfortran.dg/gomp/lastprivate-conditional-1.f90: New test.\n\t* gfortran.dg/gomp/lastprivate-conditional-2.f90: New test.\n\t* gfortran.dg/gomp/lastprivate-conditional-3.f90: New test.\n\t* gfortran.dg/gomp/lastprivate-conditional-4.f90: New test.\n\t* gfortran.dg/gomp/lastprivate-conditional-5.f90: New test.", "tree": {"sha": "1784a06569c8d7ca9735980ef56f4d233ec25cb1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1784a06569c8d7ca9735980ef56f4d233ec25cb1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/084dc63a0200e60e0fbb7c36b412a158d234f5c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/084dc63a0200e60e0fbb7c36b412a158d234f5c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/084dc63a0200e60e0fbb7c36b412a158d234f5c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/084dc63a0200e60e0fbb7c36b412a158d234f5c0/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad1bea3a4b30482686be9245af78f994722f2fec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad1bea3a4b30482686be9245af78f994722f2fec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad1bea3a4b30482686be9245af78f994722f2fec"}], "stats": {"total": 312, "additions": 304, "deletions": 8}, "files": [{"sha": "5fa86aa4e3048f8cdc329b1b207740beb8ee272a", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/084dc63a0200e60e0fbb7c36b412a158d234f5c0/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/084dc63a0200e60e0fbb7c36b412a158d234f5c0/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=084dc63a0200e60e0fbb7c36b412a158d234f5c0", "patch": "@@ -1242,6 +1242,7 @@ typedef struct gfc_omp_namelist\n       gfc_omp_map_op map_op;\n       gfc_omp_linear_op linear_op;\n       struct gfc_common_head *common;\n+      bool lastprivate_conditional;\n     } u;\n   struct gfc_omp_namelist_udr *udr;\n   struct gfc_omp_namelist *next;"}, {"sha": "f8f2439b6e43e3fc7f1318e8babbb91cdf0be271", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/084dc63a0200e60e0fbb7c36b412a158d234f5c0/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/084dc63a0200e60e0fbb7c36b412a158d234f5c0/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=084dc63a0200e60e0fbb7c36b412a158d234f5c0", "patch": "@@ -1355,10 +1355,22 @@ gfc_match_omp_clauses (gfc_omp_clauses **cp, const omp_mask mask,\n \t  break;\n \tcase 'l':\n \t  if ((mask & OMP_CLAUSE_LASTPRIVATE)\n-\t      && gfc_match_omp_variable_list (\"lastprivate (\",\n-\t\t\t\t\t      &c->lists[OMP_LIST_LASTPRIVATE],\n-\t\t\t\t\t      true) == MATCH_YES)\n-\t    continue;\n+\t      && gfc_match (\"lastprivate ( \") == MATCH_YES)\n+\t    {\n+\t      bool conditional = gfc_match (\"conditional : \") == MATCH_YES;\n+\t      head = NULL;\n+\t      if (gfc_match_omp_variable_list (\"\",\n+\t\t\t\t\t       &c->lists[OMP_LIST_LASTPRIVATE],\n+\t\t\t\t\t       false, NULL, &head) == MATCH_YES)\n+\t\t{\n+\t\t  gfc_omp_namelist *n;\n+\t\t  for (n = *head; n; n = n->next)\n+\t\t    n->u.lastprivate_conditional = conditional;\n+\t\t  continue;\n+\t\t}\n+\t      gfc_current_locus = old_loc;\n+\t      break;\n+\t    }\n \t  end_colon = false;\n \t  head = NULL;\n \t  if ((mask & OMP_CLAUSE_LINEAR)"}, {"sha": "d12d7fbddac97b9d7ae5e2cbe81f55366fa2dfce", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/084dc63a0200e60e0fbb7c36b412a158d234f5c0/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/084dc63a0200e60e0fbb7c36b412a158d234f5c0/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=084dc63a0200e60e0fbb7c36b412a158d234f5c0", "patch": "@@ -613,10 +613,21 @@ gfc_omp_clause_default_ctor (tree clause, tree decl, tree outer)\n   tree type = TREE_TYPE (decl), size, ptr, cond, then_b, else_b;\n   stmtblock_t block, cond_block;\n \n-  gcc_assert (OMP_CLAUSE_CODE (clause) == OMP_CLAUSE_PRIVATE\n-\t      || OMP_CLAUSE_CODE (clause) == OMP_CLAUSE_LASTPRIVATE\n-\t      || OMP_CLAUSE_CODE (clause) == OMP_CLAUSE_LINEAR\n-\t      || OMP_CLAUSE_CODE (clause) == OMP_CLAUSE_REDUCTION);\n+  switch (OMP_CLAUSE_CODE (clause))\n+    {\n+    case OMP_CLAUSE__LOOPTEMP_:\n+    case OMP_CLAUSE__REDUCTEMP_:\n+    case OMP_CLAUSE__CONDTEMP_:\n+    case OMP_CLAUSE__SCANTEMP_:\n+      return NULL;\n+    case OMP_CLAUSE_PRIVATE:\n+    case OMP_CLAUSE_LASTPRIVATE:\n+    case OMP_CLAUSE_LINEAR:\n+    case OMP_CLAUSE_REDUCTION:\n+      break;\n+    default:\n+      gcc_unreachable ();\n+    }\n \n   if ((! GFC_DESCRIPTOR_TYPE_P (type)\n        || GFC_TYPE_ARRAY_AKIND (type) != GFC_ARRAY_ALLOCATABLE)\n@@ -1678,6 +1689,10 @@ gfc_trans_omp_variable_list (enum omp_clause_code code,\n \t    tree node = build_omp_clause (input_location, code);\n \t    OMP_CLAUSE_DECL (node) = t;\n \t    list = gfc_trans_add_clause (node, list);\n+\n+\t    if (code == OMP_CLAUSE_LASTPRIVATE\n+\t\t&& namelist->u.lastprivate_conditional)\n+\t      OMP_CLAUSE_LASTPRIVATE_CONDITIONAL (node) = 1;\n \t  }\n       }\n   return list;"}, {"sha": "7a024061ec64184a1e86792dbbcbfa683e109b9c", "filename": "gcc/testsuite/gfortran.dg/gomp/lastprivate-conditional-1.f90", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/084dc63a0200e60e0fbb7c36b412a158d234f5c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Flastprivate-conditional-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/084dc63a0200e60e0fbb7c36b412a158d234f5c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Flastprivate-conditional-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Flastprivate-conditional-1.f90?ref=084dc63a0200e60e0fbb7c36b412a158d234f5c0", "patch": "@@ -0,0 +1,82 @@\n+subroutine foo (p)\n+  implicit none\n+  logical :: p(:)\n+  integer a, b, c, d, e, f, g, h;\n+  integer :: i\n+  a = -1; b = -1; c = -1; d = -1; e = -1; f = -1; g = -1; h = -1\n+  !$omp teams\n+    !$omp distribute lastprivate (conditional: a) ! { dg-error \"conditional 'lastprivate' clause on 'distribute' construct\" }\n+    do i = 1, 32\n+      if (p(i)) &\n+        a = i\n+    end do\n+    !$omp distribute simd lastprivate (conditional: b) ! { dg-error \"conditional 'lastprivate' clause on 'distribute' construct\" }\n+    do i = 1, 32\n+      if (p(i)) &\n+        b = i\n+    end do\n+    !$omp distribute parallel do lastprivate (conditional: c) ! { dg-error \"conditional 'lastprivate' clause on 'distribute' construct\" }\n+    do i = 1, 32\n+      if (p(i)) &\n+        c = i\n+    end do\n+    !$omp distribute parallel do simd lastprivate (conditional: d) ! { dg-error \"conditional 'lastprivate' clause on 'distribute' construct\" }\n+    do i = 1, 32\n+      if (p(i)) &\n+        d = i\n+    end do\n+  !$omp end teams\n+\n+  !$omp teams distribute parallel do lastprivate (conditional: e) ! { dg-error \"conditional 'lastprivate' clause on 'distribute' construct\" }\n+  do i = 1, 32\n+    if (p(i)) &\n+      e = i\n+  end do\n+\n+  !$omp parallel\n+    !$omp master\n+    !$omp taskloop lastprivate (conditional: f) ! { dg-error \"conditional 'lastprivate' clause on 'taskloop' construct\" }\n+    do i = 1, 32\n+      if (p(i)) &\n+        f = i\n+    end do\n+!    !$omp master taskloop simd lastprivate (conditional: g) ! { dg!error \"conditional 'lastprivate' clause on 'taskloop' construct\" }\n+!    do i = 1, 32\n+!      if (p(i)) &\n+!        g = i\n+!    end do\n+    !$omp end master\n+  !$omp end parallel\n+\n+!  !$omp parallel master taskloop simd lastprivate (conditional: h) ! { dg!error \"conditional 'lastprivate' clause on 'taskloop' construct\" }\n+!  do i = 1, 32\n+!    if (p(i)) &\n+!      h = i\n+!  end do\n+!  !$omp end parallel master taskloop simd\n+end subroutine\n+\n+!struct S { int a, b; };\n+\n+subroutine bar (p)\n+  implicit none\n+  logical :: p(:)\n+  type s_t\n+    integer :: a, b\n+  end type s_t\n+  type(s_t) s, t\n+  integer i\n+  s = s_t(-1, -1)\n+  t = s_t( 1, 2)\n+  !$omp parallel do lastprivate (conditional: s) ! { dg-error \"non-scalar variable 's' in conditional 'lastprivate' clause\" }\n+  do i = 1, 32\n+    if (p(i)) then\n+      block\n+       type(s_t) u\n+       u = t\n+       u%b = i\n+       s = u\n+      end block\n+    end if\n+  end do\n+end subroutine"}, {"sha": "5c95d8f77d837620c7bb407d8903d0becd06fafc", "filename": "gcc/testsuite/gfortran.dg/gomp/lastprivate-conditional-2.f90", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/084dc63a0200e60e0fbb7c36b412a158d234f5c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Flastprivate-conditional-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/084dc63a0200e60e0fbb7c36b412a158d234f5c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Flastprivate-conditional-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Flastprivate-conditional-2.f90?ref=084dc63a0200e60e0fbb7c36b412a158d234f5c0", "patch": "@@ -0,0 +1,46 @@\n+! { dg-additional-options \"-fdump-tree-original\" }\n+subroutine foo (p)\n+  logical :: p(:)\n+  integer i\n+  integer a, b, c, d, e, f, g, h\n+  a = -1; b = -1; c = -1; d = -1; e = -1; f = -1; g = -1; h = -1\n+  !$omp parallel\n+  !$omp do lastprivate (conditional: a)\n+  do i = 1, 32\n+    if (p(i)) &\n+      a = i\n+  end do\n+  !$omp end parallel\n+  !$omp simd lastprivate (conditional: b)\n+  do i = 1, 32\n+    if (p(i)) &\n+      b = i\n+  end do\n+  !$omp parallel\n+  !$omp do simd lastprivate (conditional: c)\n+  do i = 1, 32\n+    if (p(i)) &\n+      c = i\n+  end do\n+  !$omp end parallel\n+  !$omp parallel do lastprivate (conditional: d)\n+  do i = 1, 32\n+    if (p(i)) &\n+      d = i\n+  end do\n+  !$omp end parallel do\n+  !$omp parallel do simd lastprivate (conditional: e)\n+  do i = 1, 32\n+    if (p(i)) &\n+      e = i\n+  end do\n+  !$omp end parallel do simd\n+end subroutine\n+\n+! { dg-final { scan-tree-dump-times \"#pragma omp for lastprivate\\\\(conditional:a\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp simd linear\\\\(i:1\\\\) lastprivate\\\\(conditional:b\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp for lastprivate\\\\(conditional:c\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp simd linear\\\\(i:1\\\\) lastprivate\\\\(conditional:c\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp parallel lastprivate\\\\(conditional:d\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp parallel lastprivate\\\\(conditional:e\\\\)\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp simd linear\\\\(i:1\\\\) lastprivate\\\\(conditional:e\\\\)\" 1 \"original\" } }"}, {"sha": "720fe9b64a8c7929a345f24bcc0851f2a481d72a", "filename": "gcc/testsuite/gfortran.dg/gomp/lastprivate-conditional-3.f90", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/084dc63a0200e60e0fbb7c36b412a158d234f5c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Flastprivate-conditional-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/084dc63a0200e60e0fbb7c36b412a158d234f5c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Flastprivate-conditional-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Flastprivate-conditional-3.f90?ref=084dc63a0200e60e0fbb7c36b412a158d234f5c0", "patch": "@@ -0,0 +1,65 @@\n+subroutine foo\n+  integer i, j, k\n+  !$omp parallel\n+    !$omp do lastprivate (conditional: i)\t! { dg-warning \"conditional 'lastprivate' on loop iterator 'i' ignored\" }\n+    do i = 1, 32\n+    end do\n+    !$omp do collapse (3) lastprivate (conditional: i)\t! { dg-warning \"conditional 'lastprivate' on loop iterator 'i' ignored\" }\n+    do i = 1, 32\n+      do j = 1, 32\n+        do k = 1, 32\n+        end do\n+      end do\n+    end do\n+    !$omp do collapse (3) lastprivate (conditional: j)\t! { dg-warning \"conditional 'lastprivate' on loop iterator 'j' ignored\" }\n+    do i = 1, 32\n+      do j = 1, 32\n+        do k = 1, 32\n+        end do\n+      end do\n+    end do\n+    !$omp do collapse (3) lastprivate (conditional: k)\t! { dg-warning \"conditional 'lastprivate' on loop iterator 'k' ignored\" }\n+    do i = 1, 32\n+      do j = 1, 32\n+        do k = 1, 32\n+        end do\n+      end do\n+    end do\n+  !$omp end parallel\n+\n+  ! Error in eqiv. C code: \"conditional 'lastprivate' on loop iterator 'i' ignored\"\n+  !$omp parallel do lastprivate (conditional: i)\n+  do i = 1, 32\n+  end do\n+  !$omp end parallel do\n+\n+  ! Error in eqiv. C code: \"conditional 'lastprivate' on loop iterator 'i' ignored\"\n+  !$omp parallel do collapse (3) lastprivate (conditional: i)\n+  do i = 1, 32\n+    do j = 1, 32\n+      do k = 1, 32\n+      end do\n+    end do\n+  end do\n+  !$omp end parallel do\n+\n+  ! Error in eqiv. C code: \"conditional 'lastprivate' on loop iterator 'j' ignored\"\n+  !$omp parallel do collapse (3) lastprivate (conditional: j)\n+  do i = 1, 32\n+    do j = 1, 32\n+      do k = 1, 32\n+      end do\n+    end do\n+  end do\n+  !$omp end parallel do\n+\n+  ! Error in eqiv. C code: \"conditional 'lastprivate' on loop iterator 'k' ignored\"\n+  !$omp parallel do collapse (3) lastprivate (conditional: k)\n+  do i = 1, 32\n+    do j = 1, 32\n+      do k = 1, 32\n+      end do\n+    end do\n+  end do\n+  !$omp end parallel do\n+end subroutine"}, {"sha": "1e8c6c7e41a66656d5310e26ce3d20172d4d06bd", "filename": "gcc/testsuite/gfortran.dg/gomp/lastprivate-conditional-4.f90", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/084dc63a0200e60e0fbb7c36b412a158d234f5c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Flastprivate-conditional-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/084dc63a0200e60e0fbb7c36b412a158d234f5c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Flastprivate-conditional-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Flastprivate-conditional-4.f90?ref=084dc63a0200e60e0fbb7c36b412a158d234f5c0", "patch": "@@ -0,0 +1,28 @@\n+module m\n+integer x, w\n+end module m\n+\n+subroutine foo\n+  use m\n+  interface\n+    logical function bar(i)\n+      integer i\n+    end function\n+  end interface\n+  integer y, i, z\n+  logical tmp\n+  y = 5\n+  !$omp teams num_teams(1) firstprivate (x) shared (y) shared (w)\n+    !$omp parallel do firstprivate (x, y, z, w) lastprivate (conditional: x, y, z, w)\n+    do i = 1, 64\n+      if (bar (i)) then\n+        x = i;\n+        y = i + 1;\n+        z = i + 2;\n+        w = i + 3;\n+      end if\n+      tmp = bar (y);\n+      tmp = bar (z);\n+    end do\n+  !$omp end teams\n+end"}, {"sha": "e2f3cb7dd9035f86bca080e9c155ccc573fdee59", "filename": "gcc/testsuite/gfortran.dg/gomp/lastprivate-conditional-5.f90", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/084dc63a0200e60e0fbb7c36b412a158d234f5c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Flastprivate-conditional-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/084dc63a0200e60e0fbb7c36b412a158d234f5c0/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Flastprivate-conditional-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Flastprivate-conditional-5.f90?ref=084dc63a0200e60e0fbb7c36b412a158d234f5c0", "patch": "@@ -0,0 +1,47 @@\n+! { dg-do compile }\n+! { dg-options \"-O2 -fopenmp -fdump-tree-ompexp\" }\n+! { dg-final { scan-tree-dump-times \"GOMP_loop_start \" 3 \"ompexp\" } }\n+! { dg-final { scan-tree-dump-times \"GOMP_loop_end_nowait \" 3 \"ompexp\" } }\n+\n+module m\n+  logical r\n+end module m\n+\n+subroutine foo (a)\n+  use m\n+  implicit none\n+  logical a(:)\n+  integer :: i\n+  !$omp do lastprivate(conditional: r)\n+  do i = 1, 64\n+    if (a(i)) &\n+      r = a(i)\n+  end do\n+  !$omp end do nowait\n+end\n+\n+subroutine bar (a)\n+  use m\n+  implicit none\n+  logical a(:)\n+  integer :: i\n+  !$omp do lastprivate(conditional: r) schedule (static, 4)\n+  do i = 1, 64\n+    if (a(i)) &\n+      r = a(i)\n+  end do\n+  !$omp end do nowait\n+end\n+\n+subroutine baz (a)\n+  use m\n+  implicit none\n+  logical a(:)\n+  integer :: i\n+  !$omp do lastprivate(conditional: r) schedule (runtime)\n+  do i = 1, 64\n+    if (a(i)) &\n+      r = a(i)\n+  end do\n+  !$omp end do nowait\n+end"}]}