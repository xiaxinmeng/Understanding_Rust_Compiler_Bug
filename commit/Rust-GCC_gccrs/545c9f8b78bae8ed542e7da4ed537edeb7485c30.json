{"sha": "545c9f8b78bae8ed542e7da4ed537edeb7485c30", "node_id": "C_kwDOANBUbNoAKDU0NWM5ZjhiNzhiYWU4ZWQ1NDJlN2RhNGVkNTM3ZWRlYjc0ODVjMzA", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2023-02-15T08:37:59Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2023-02-15T08:37:59Z"}, "message": "docs: document new --param=asan-kernel-mem-intrinsic-prefix\n\ngcc/ChangeLog:\n\n\t* doc/invoke.texi: Document --param=asan-kernel-mem-intrinsic-prefix.", "tree": {"sha": "7296aa7df546aec2ad98ece371693b671dce1d37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7296aa7df546aec2ad98ece371693b671dce1d37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/545c9f8b78bae8ed542e7da4ed537edeb7485c30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/545c9f8b78bae8ed542e7da4ed537edeb7485c30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/545c9f8b78bae8ed542e7da4ed537edeb7485c30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/545c9f8b78bae8ed542e7da4ed537edeb7485c30/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e7a87dc196ce750caa88f5d207bc4728455cca4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e7a87dc196ce750caa88f5d207bc4728455cca4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e7a87dc196ce750caa88f5d207bc4728455cca4"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "0a43720f6143c0c7822bd3a4478922c4796e7939", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545c9f8b78bae8ed542e7da4ed537edeb7485c30/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545c9f8b78bae8ed542e7da4ed537edeb7485c30/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=545c9f8b78bae8ed542e7da4ed537edeb7485c30", "patch": "@@ -15809,6 +15809,10 @@ is greater or equal to this number, use callbacks instead of inline checks.\n E.g. to disable inline code use\n @option{--param asan-instrumentation-with-call-threshold=0}.\n \n+@item asan-kernel-mem-intrinsic-prefix\n+Prefix calls to memcpy, memset and memmove with __asan_ or __hwasan_\n+for -fsanitize=kernel-address or -fsanitize=kernel-hwaddress.\n+\n @item hwasan-instrument-stack\n Enable hwasan instrumentation of statically sized stack-allocated variables.\n This kind of instrumentation is enabled by default when using"}]}