{"sha": "c1514eb060c72193a17b22467428d5e0d0b76ffb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE1MTRlYjA2MGM3MjE5M2ExN2IyMjQ2NzQyOGQ1ZTBkMGI3NmZmYg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-11-14T11:40:52Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-11-14T11:40:52Z"}, "message": "[Ada] Improper extension of bounds of fixed-point type\n\nIf the given Delta of an ordinariy fixed-point type is not a machine\nnumber and there is no specified 'Small for the type, the compiler\nchooses the actual bounds of the type using the nearest model numbers\nthat include the given bounds, but it is free to exclude those bounds if\na size clause restricts the number of bits to use for the type. This\npatch fixes an error in the case where the bounds of the type can be\nchosen to be larger than the bounds specified in the type declaration:\nprior to this patch the lower bounds could be chosen to be one delta\nsmaller that the given bound, when that given bound was smaller than the\nnearest machine number,\n\nCompiling rep2.adb must yield:\n\n   rep2.adb:7:24:\n       warning: value not in range of type \"Test_Type\" defined at line 4\n   rep2.adb:7:24:\n       warning: \"Constraint_Error\" will be raised at run time\n\n----\nwith Ada.Text_IO; use Ada.Text_IO;\nprocedure Rep2 is\n\n   type    Test_Type is delta 0.1 range 0.1 .. 100.0 with Size => 16;\n   subtype Next_Type is Test_Type range 0.1 .. 100.0;\n\n   Item : Test_Type := 0.0;                        -- Why is this allowed?\n   Next : Next_Type with Address => Item'Address;\n\nbegin\n\n   Put_Line (Item'Img & \" - \" & Item'Valid'Img);  -- Returns \"0.0 - TRUE\"\n   Put_Line (Next'Img & \" - \" & Next'Valid'Img);  -- Returns \"0.0 - FALSE\"\n\nend Rep2;\n\n2018-11-14  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* freeze.adb (Freeze_Fixed_Point_Type): If the given low bound\n\tof the type is less than the nearest model number, do not expand\n\tthe range of the type to include the model number below the\n\tbound. Similar adjustment if the upper bound is larger than the\n\tnearest model number.\n\nFrom-SVN: r266116", "tree": {"sha": "056abc3e15a57f844e180c4e1575bc88da461012", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/056abc3e15a57f844e180c4e1575bc88da461012"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1514eb060c72193a17b22467428d5e0d0b76ffb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1514eb060c72193a17b22467428d5e0d0b76ffb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1514eb060c72193a17b22467428d5e0d0b76ffb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1514eb060c72193a17b22467428d5e0d0b76ffb/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "640ad9c221fe9bac7bff0d60a8aa094f09538bec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/640ad9c221fe9bac7bff0d60a8aa094f09538bec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/640ad9c221fe9bac7bff0d60a8aa094f09538bec"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "ac96e954c8d827f85c9aa300fea34a3029153c5b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1514eb060c72193a17b22467428d5e0d0b76ffb/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1514eb060c72193a17b22467428d5e0d0b76ffb/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c1514eb060c72193a17b22467428d5e0d0b76ffb", "patch": "@@ -1,3 +1,11 @@\n+2018-11-14  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* freeze.adb (Freeze_Fixed_Point_Type): If the given low bound\n+\tof the type is less than the nearest model number, do not expand\n+\tthe range of the type to include the model number below the\n+\tbound. Similar adjustment if the upper bound is larger than the\n+\tnearest model number.\n+\n 2018-11-14  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* checks.adb (Install_Primitive_Elaboration_Check): Do not"}, {"sha": "19b9ca9ecff44f3cc2a0b03ed0072fb76a8a57b2", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1514eb060c72193a17b22467428d5e0d0b76ffb/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1514eb060c72193a17b22467428d5e0d0b76ffb/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=c1514eb060c72193a17b22467428d5e0d0b76ffb", "patch": "@@ -8008,15 +8008,16 @@ package body Freeze is\n                Set_Realval (Lo, Loval);\n             end if;\n \n-            --  Compute the fudged bounds. If the number is a model number,\n+            --  Compute the fudged bounds. If the bound is a model number,\n+            --  (or greater if given low bound, smaller if high bound)\n             --  then we do nothing to include it, but we are allowed to backoff\n             --  to the next adjacent model number when we exclude it. If it is\n             --  not a model number then we straddle the two values with the\n             --  model numbers on either side.\n \n             Model_Num := UR_Trunc (Loval / Small) * Small;\n \n-            if Loval = Model_Num then\n+            if UR_Ge (Loval, Model_Num) then\n                Loval_Incl_EP := Model_Num;\n             else\n                Loval_Incl_EP := Model_Num - Small;\n@@ -8050,7 +8051,7 @@ package body Freeze is\n \n             Model_Num := UR_Trunc (Hival / Small) * Small;\n \n-            if Hival = Model_Num then\n+            if UR_Le (Hival, Model_Num) then\n                Hival_Incl_EP := Model_Num;\n             else\n                Hival_Incl_EP := Model_Num + Small;"}]}