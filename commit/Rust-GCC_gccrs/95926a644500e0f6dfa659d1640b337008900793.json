{"sha": "95926a644500e0f6dfa659d1640b337008900793", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU5MjZhNjQ0NTAwZTBmNmRmYTY1OWQxNjQwYjMzNzAwODkwMDc5Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-09-12T11:59:17Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-09-12T11:59:17Z"}, "message": "a-extiti.ads (Timer): The discriminant is a \"not null access constant\" in the Reference Manual.\n\n\t* a-extiti.ads (Timer): The discriminant is a \"not null access\n\tconstant\" in the Reference Manual.\n\t(Cancel_Handler): Cancelled is an out parameter in the Reference Manual.\n\n\t* a-swuwha.adb: Remove junk RM header\n\n\t* g-bytswa-x86.adb (Swap2, Swap4, Swap8): Remove explicit \"in\" mode\n\tindicator\n\n\t* g-bytswa.ads: Minor reformatting\n\n\t* g-soccon-solaris-64.ads, g-soccon-hpux-ia64.ads: \n\tAdd new constant Thread_Blocking_IO, always True by default, set False\n\ton a per-runtime basis.\n\t(Need_Netdb_Buffer): New constant.\n\n\t* s-dsaser.ads (Get_Local_Partition_Id, Get_Passive_Partition_Id):\n\tAdded renames for corresponding functions in System.Partition_Interface.\n\n\t* Makefile.in: Remove VMS specific System.CRTL packages which are no\n\tlonger needed.\n\n\t* s-crtl-vms64.ads: Removed.\n\nFrom-SVN: r128430", "tree": {"sha": "e7db31d50f4d59f06dae04e8d2af2e5babe721cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7db31d50f4d59f06dae04e8d2af2e5babe721cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95926a644500e0f6dfa659d1640b337008900793", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95926a644500e0f6dfa659d1640b337008900793", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95926a644500e0f6dfa659d1640b337008900793", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95926a644500e0f6dfa659d1640b337008900793/comments", "author": null, "committer": null, "parents": [{"sha": "d409ec50683213c605ea3ed1bc102335fc437706", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d409ec50683213c605ea3ed1bc102335fc437706", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d409ec50683213c605ea3ed1bc102335fc437706"}], "stats": {"total": 98, "additions": 64, "deletions": 34}, "files": [{"sha": "411371dec0eebb1baacf12c08e1a9c5913296ccb", "filename": "gcc/ada/a-extiti.ads", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95926a644500e0f6dfa659d1640b337008900793/gcc%2Fada%2Fa-extiti.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95926a644500e0f6dfa659d1640b337008900793/gcc%2Fada%2Fa-extiti.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-extiti.ads?ref=95926a644500e0f6dfa659d1640b337008900793", "patch": "@@ -28,11 +28,10 @@ package Ada.Execution_Time.Timers is\n \n    pragma Unimplemented_Unit;\n \n-   type Timer (T : access Ada.Task_Identification.Task_Id) is\n+   type Timer (T : not null access constant Ada.Task_Identification.Task_Id) is\n       tagged limited private;\n \n-   type Timer_Handler is\n-      access protected procedure (TM : in out Timer);\n+   type Timer_Handler is access protected procedure (TM : in out Timer);\n \n    Min_Handler_Ceiling : constant System.Any_Priority := System.Priority'Last;\n \n@@ -50,7 +49,7 @@ package Ada.Execution_Time.Timers is\n \n    procedure Cancel_Handler\n      (TM        : in out Timer;\n-      Cancelled : in out Boolean);\n+      Cancelled : out Boolean);\n \n    function Time_Remaining (TM : Timer) return Ada.Real_Time.Time_Span;\n "}, {"sha": "0790faa19b9b146e37f9c52e9da070be53effcb8", "filename": "gcc/ada/a-swuwha.adb", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95926a644500e0f6dfa659d1640b337008900793/gcc%2Fada%2Fa-swuwha.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95926a644500e0f6dfa659d1640b337008900793/gcc%2Fada%2Fa-swuwha.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-swuwha.adb?ref=95926a644500e0f6dfa659d1640b337008900793", "patch": "@@ -6,11 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2005 Free Software Foundation, Inc.          --\n---                                                                          --\n--- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n+--          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "3af95161788e78db5c7081ba18d831af8e393be3", "filename": "gcc/ada/g-bytswa-x86.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95926a644500e0f6dfa659d1640b337008900793/gcc%2Fada%2Fg-bytswa-x86.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95926a644500e0f6dfa659d1640b337008900793/gcc%2Fada%2Fg-bytswa-x86.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-bytswa-x86.adb?ref=95926a644500e0f6dfa659d1640b337008900793", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                      Copyright (C) 2006, AdaCore                         --\n+--                     Copyright (C) 2006-2007, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -98,7 +98,7 @@ package body GNAT.Byte_Swapping is\n       function As_U64 is new Ada.Unchecked_Conversion\n          (Source => Item, Target => Unsigned_64);\n \n-      X : Unsigned_64 renames As_U64 (Input);\n+      X : constant Unsigned_64 := As_U64 (Input);\n \n       type Two_Words is array (0 .. 1) of Unsigned_32;\n       for Two_Words'Component_Size use Unsigned_32'Size;\n@@ -125,7 +125,7 @@ package body GNAT.Byte_Swapping is\n    -- Swap2 --\n    -----------\n \n-   procedure Swap2 (Location : in System.Address) is\n+   procedure Swap2 (Location : System.Address) is\n \n       X : Unsigned_16;\n       for X'Address use Location;\n@@ -140,7 +140,7 @@ package body GNAT.Byte_Swapping is\n    -- Swap4 --\n    -----------\n \n-   procedure Swap4 (Location : in System.Address) is\n+   procedure Swap4 (Location : System.Address) is\n \n       X : Unsigned_32;\n       for X'Address use Location;\n@@ -168,7 +168,7 @@ package body GNAT.Byte_Swapping is\n    -- Swap8 --\n    -----------\n \n-   procedure Swap8 (Location : in System.Address) is\n+   procedure Swap8 (Location : System.Address) is\n \n       X : Unsigned_64;\n       for X'Address use Location;"}, {"sha": "a8d2d9c4d152189ae9cb5f935805453ae402e27f", "filename": "gcc/ada/g-bytswa.ads", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95926a644500e0f6dfa659d1640b337008900793/gcc%2Fada%2Fg-bytswa.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95926a644500e0f6dfa659d1640b337008900793/gcc%2Fada%2Fg-bytswa.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-bytswa.ads?ref=95926a644500e0f6dfa659d1640b337008900793", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                      Copyright (C) 2006, AdaCore                         --\n+--                     Copyright (C) 2006-2007, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,14 +31,14 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  Simple routines for swapping the bytes of 16-, 32-, and 64-bit objects.\n+--  Simple routines for swapping the bytes of 16-, 32-, and 64-bit objects\n \n---  The generic functions should be instantiated with types that\n---  are of a size in bytes corresponding to the name of the generic. For\n---  example, a 2-byte integer type would be compatible with Swapped2, 4-byte\n---  integer with Swapped4, and so on. Failure to do so will result in a\n---  warning when compiling the instantiation; this warning should be heeded.\n---  Ignoring this warning can result in unexpected results.\n+--  The generic functions should be instantiated with types that are of a size\n+--  in bytes corresponding to the name of the generic. For example, a 2-byte\n+--  integer type would be compatible with Swapped2, 4-byte integer with\n+--  Swapped4, and so on. Failure to do so will result in a warning when\n+--  compiling the instantiation; this warning should be heeded. Ignoring this\n+--  warning can result in unexpected results.\n \n --  An example of proper usage follows:\n \n@@ -85,12 +85,12 @@\n --        ...\n --     end;\n \n---  A properly-sized record type will also be acceptable, and so forth.\n+--  A properly-sized record type will also be acceptable, and so forth\n \n---  However, as described, a size mismatch must be avoided. In the following\n---  we instantiate one of the generics with a type that is too large. The\n---  result of the function call is undefined, such that assignment to an\n---  object can result in garbage values.\n+--  However, as described, a size mismatch must be avoided. In the following we\n+--  instantiate one of the generics with a type that is too large. The result\n+--  of the function call is undefined, such that assignment to an object can\n+--  result in garbage values.\n \n --     Wrong: declare\n --        subtype String16 is String (1 .. 16);\n@@ -114,8 +114,8 @@\n --        Put_Line (S);\n --     end Wrong;\n \n---  When the size of the type is larger than 8 bytes, the use of the\n---  non-generic procedures is an alternative because no function result is\n+--  When the size of the type is larger than 8 bytes, the use of the non-\n+--  generic procedures is an alternative because no function result is\n --  involved; manipulation of the object is direct.\n \n --  The procedures are passed the address of an object to manipulate. They will\n@@ -141,8 +141,8 @@\n --        Put_Line (S8);\n --     end;\n \n---  If an object of a type larger than N is passed, the remaining\n---  bytes of the object are undisturbed.  For example:\n+--  If an object of a type larger than N is passed, the remaining bytes of the\n+--  object are undisturbed. For example:\n \n --     declare\n --        subtype String16 is String (1 .. 16);"}, {"sha": "04cfc15a231ed8c5d0e87e191dff94a9beb2e5d8", "filename": "gcc/ada/g-soccon-hpux-ia64.ads", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95926a644500e0f6dfa659d1640b337008900793/gcc%2Fada%2Fg-soccon-hpux-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95926a644500e0f6dfa659d1640b337008900793/gcc%2Fada%2Fg-soccon-hpux-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-hpux-ia64.ads?ref=95926a644500e0f6dfa659d1640b337008900793", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -178,4 +178,17 @@ package GNAT.Sockets.Constants is\n    SIZEOF_tv_sec      : constant :=           8; --  tv_sec\n    SIZEOF_tv_usec     : constant :=           8; --  tv_usec\n \n+   ----------------------------------------\n+   -- Properties of supported interfaces --\n+   ----------------------------------------\n+\n+   Need_Netdb_Buffer  : constant :=           0; --  Need buffer for Netdb ops\n+\n+   ----------------------\n+   -- Additional flags --\n+   ----------------------\n+\n+   Thread_Blocking_IO : constant Boolean := True;\n+   --  Set False for contexts where socket i/o are process blocking\n+\n end GNAT.Sockets.Constants;"}, {"sha": "46300e061e138e16bad216435db1047f4125ba32", "filename": "gcc/ada/g-soccon-solaris-64.ads", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95926a644500e0f6dfa659d1640b337008900793/gcc%2Fada%2Fg-soccon-solaris-64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95926a644500e0f6dfa659d1640b337008900793/gcc%2Fada%2Fg-soccon-solaris-64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-solaris-64.ads?ref=95926a644500e0f6dfa659d1640b337008900793", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2000-2007, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -178,4 +178,17 @@ package GNAT.Sockets.Constants is\n    SIZEOF_tv_sec      : constant :=           8; --  tv_sec\n    SIZEOF_tv_usec     : constant :=           8; --  tv_usec\n \n+   ----------------------------------------\n+   -- Properties of supported interfaces --\n+   ----------------------------------------\n+\n+   Need_Netdb_Buffer  : constant :=           1; --  Need buffer for Netdb ops\n+\n+   ----------------------\n+   -- Additional flags --\n+   ----------------------\n+\n+   Thread_Blocking_IO : constant Boolean := True;\n+   --  Set False for contexts where socket i/o are process blocking\n+\n end GNAT.Sockets.Constants;"}, {"sha": "5275a79bf690e63f4f6c04e517fd1d56ca541af9", "filename": "gcc/ada/s-dsaser.ads", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95926a644500e0f6dfa659d1640b337008900793/gcc%2Fada%2Fs-dsaser.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95926a644500e0f6dfa659d1640b337008900793/gcc%2Fada%2Fs-dsaser.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-dsaser.ads?ref=95926a644500e0f6dfa659d1640b337008900793", "patch": "@@ -42,6 +42,15 @@ package System.DSA_Services is\n    function Get_Active_Partition_ID\n      (Name : Partition_Interface.Unit_Name) return RPC.Partition_ID\n      renames Partition_Interface.Get_Active_Partition_ID;\n-   --  Returns the partition ID of the partition in which Name resides\n+   --  Return the partition ID of the partition in which unit Name resides\n+\n+   function Get_Local_Partition_ID return RPC.Partition_ID\n+     renames Partition_Interface.Get_Local_Partition_ID;\n+   --  Return the Partition_ID of the current partition\n+\n+   function Get_Passive_Partition_ID\n+     (Name : Partition_Interface.Unit_Name) return RPC.Partition_ID\n+     renames Partition_Interface.Get_Passive_Partition_ID;\n+   --  Return the Partition_ID of the given shared passive partition\n \n end System.DSA_Services;"}]}