{"sha": "8e094aa29dcc9d8058a3717617f3fab2ec833919", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUwOTRhYTI5ZGNjOWQ4MDU4YTM3MTc2MTdmM2ZhYjJlYzgzMzkxOQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2009-09-03T13:19:01Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-09-03T13:19:01Z"}, "message": "tree-parloops.c (parallelize_loops): Cast to HOST_WIDE_INT when comparing against estimated_loop_iterations_int return.\n\n2009-09-03  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* tree-parloops.c (parallelize_loops): Cast to HOST_WIDE_INT\n\twhen comparing against estimated_loop_iterations_int return.\n\nFrom-SVN: r151378", "tree": {"sha": "c2c2265280904b35b29e6ef94206a8bcf49ac462", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2c2265280904b35b29e6ef94206a8bcf49ac462"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e094aa29dcc9d8058a3717617f3fab2ec833919", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e094aa29dcc9d8058a3717617f3fab2ec833919", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e094aa29dcc9d8058a3717617f3fab2ec833919", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e094aa29dcc9d8058a3717617f3fab2ec833919/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e20c9328c06295ee94952ee9815c897ccee6ca5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e20c9328c06295ee94952ee9815c897ccee6ca5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e20c9328c06295ee94952ee9815c897ccee6ca5c"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "39323e5ed5189464836e3279938ea6f8e4213bd5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e094aa29dcc9d8058a3717617f3fab2ec833919/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e094aa29dcc9d8058a3717617f3fab2ec833919/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8e094aa29dcc9d8058a3717617f3fab2ec833919", "patch": "@@ -1,3 +1,8 @@\n+2009-09-03  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* tree-parloops.c (parallelize_loops): Cast to HOST_WIDE_INT\n+\twhen comparing against estimated_loop_iterations_int return.\n+\n 2009-09-03  Richard Guenther  <rguenther@suse.de>\n \n \t* dwarf2out.c (dwarf2out_do_cfi_asm): Remove check of"}, {"sha": "12b4ac0171a90eb3b784e1414ab6eb08e9b6dd1e", "filename": "gcc/tree-parloops.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e094aa29dcc9d8058a3717617f3fab2ec833919/gcc%2Ftree-parloops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e094aa29dcc9d8058a3717617f3fab2ec833919/gcc%2Ftree-parloops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-parloops.c?ref=8e094aa29dcc9d8058a3717617f3fab2ec833919", "patch": "@@ -1908,7 +1908,8 @@ parallelize_loops (void)\n       /* FIXME: Bypass this check as graphite doesn't update the\n       count and frequency correctly now.  */\n       if (!flag_loop_parallelize_all\n-\t  && (estimated_loop_iterations_int (loop, false)<= n_threads * MIN_PER_THREAD\n+\t  && ((estimated_loop_iterations_int (loop, false)\n+\t       <= (HOST_WIDE_INT) n_threads * MIN_PER_THREAD)\n \t      /* Do not bother with loops in cold areas.  */\n \t      || optimize_loop_nest_for_size_p (loop)))\n \tcontinue;"}]}