{"sha": "bf05ef76d933199bb7db076d9b0e3b41724053f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmYwNWVmNzZkOTMzMTk5YmI3ZGIwNzZkOWIwZTNiNDE3MjQwNTNmNQ==", "commit": {"author": {"name": "Yvan Roux", "email": "yvan.roux@linaro.org", "date": "2015-05-05T09:31:11Z"}, "committer": {"name": "Yvan Roux", "email": "yroux@gcc.gnu.org", "date": "2015-05-05T09:31:11Z"}, "message": "aarch64-elf-raw.h (CA53_ERR_843419_SPEC): Define.\n\n2015-05-05  Yvan Roux  <yvan.roux@linaro.org>\n\n\t* config/aarch64/aarch64-elf-raw.h (CA53_ERR_843419_SPEC): Define.\n\t(LINK_SPEC): Include CA53_ERR_843419_SPEC.\n\t* config/aarch64/aarch64-linux.h (CA53_ERR_843419_SPEC): Define.\n\t(LINK_SPEC): Include CA53_ERR_843419_SPEC.\n\t* config/aarch64/aarch64.opt (mfix-cortex-a53-843419): New option.\n\t* configure: Regenerate.\n\t* configure.ac: Add --enable-fix-cortex-a53-843419 option.\n\t* doc/install.texi (aarch64*-*-*): Document new\n\t--enable-fix-cortex-a53-843419 option.\n\t* doc/invoke.texi (AArch64 Options): Document -mfix-cortex-a53-843419\n\tand -mno-fix-cortex-a53-843419 options.\n\nFrom-SVN: r222797", "tree": {"sha": "0bba7570e2882bda74b1dead968c2284e95f2240", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bba7570e2882bda74b1dead968c2284e95f2240"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf05ef76d933199bb7db076d9b0e3b41724053f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf05ef76d933199bb7db076d9b0e3b41724053f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf05ef76d933199bb7db076d9b0e3b41724053f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf05ef76d933199bb7db076d9b0e3b41724053f5/comments", "author": {"login": "yroux", "id": 2749479, "node_id": "MDQ6VXNlcjI3NDk0Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/2749479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yroux", "html_url": "https://github.com/yroux", "followers_url": "https://api.github.com/users/yroux/followers", "following_url": "https://api.github.com/users/yroux/following{/other_user}", "gists_url": "https://api.github.com/users/yroux/gists{/gist_id}", "starred_url": "https://api.github.com/users/yroux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yroux/subscriptions", "organizations_url": "https://api.github.com/users/yroux/orgs", "repos_url": "https://api.github.com/users/yroux/repos", "events_url": "https://api.github.com/users/yroux/events{/privacy}", "received_events_url": "https://api.github.com/users/yroux/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a42de35f0d1072fd695244913e354e1a670e9097", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a42de35f0d1072fd695244913e354e1a670e9097", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a42de35f0d1072fd695244913e354e1a670e9097"}], "stats": {"total": 117, "additions": 112, "deletions": 5}, "files": [{"sha": "83509a04b392e0e44e6af7a3358de879d4ebaf2d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf05ef76d933199bb7db076d9b0e3b41724053f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf05ef76d933199bb7db076d9b0e3b41724053f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bf05ef76d933199bb7db076d9b0e3b41724053f5", "patch": "@@ -1,3 +1,17 @@\n+2015-05-05  Yvan Roux  <yvan.roux@linaro.org>\n+\n+\t* config/aarch64/aarch64-elf-raw.h (CA53_ERR_843419_SPEC): Define.\n+\t(LINK_SPEC): Include CA53_ERR_843419_SPEC.\n+\t* config/aarch64/aarch64-linux.h (CA53_ERR_843419_SPEC): Define.\n+\t(LINK_SPEC): Include CA53_ERR_843419_SPEC.\n+\t* config/aarch64/aarch64.opt (mfix-cortex-a53-843419): New option.\n+\t* configure: Regenerate.\n+\t* configure.ac: Add --enable-fix-cortex-a53-843419 option.\n+\t* doc/install.texi (aarch64*-*-*): Document new\n+\t--enable-fix-cortex-a53-843419 option.\n+\t* doc/invoke.texi (AArch64 Options): Document -mfix-cortex-a53-843419\n+\tand -mno-fix-cortex-a53-843419 options.\n+\n 2015-05-05  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/65871"}, {"sha": "bd5e51c8622de7e852fc70e6b0f9452245196208", "filename": "gcc/config/aarch64/aarch64-elf-raw.h", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf05ef76d933199bb7db076d9b0e3b41724053f5/gcc%2Fconfig%2Faarch64%2Faarch64-elf-raw.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf05ef76d933199bb7db076d9b0e3b41724053f5/gcc%2Fconfig%2Faarch64%2Faarch64-elf-raw.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-elf-raw.h?ref=bf05ef76d933199bb7db076d9b0e3b41724053f5", "patch": "@@ -35,10 +35,19 @@\n   \" %{mfix-cortex-a53-835769:--fix-cortex-a53-835769}\"\n #endif\n \n+#ifdef TARGET_FIX_ERR_A53_843419_DEFAULT\n+#define CA53_ERR_843419_SPEC \\\n+  \" %{!mno-fix-cortex-a53-843419:--fix-cortex-a53-843419}\"\n+#else\n+#define CA53_ERR_843419_SPEC \\\n+  \" %{mfix-cortex-a53-843419:--fix-cortex-a53-843419}\"\n+#endif\n+\n #ifndef LINK_SPEC\n #define LINK_SPEC \"%{mbig-endian:-EB} %{mlittle-endian:-EL} -X \\\n   -maarch64elf%{mabi=ilp32*:32}%{mbig-endian:b}\" \\\n-  CA53_ERR_835769_SPEC\n+  CA53_ERR_835769_SPEC \\\n+  CA53_ERR_843419_SPEC\n #endif\n \n #endif /* GCC_AARCH64_ELF_RAW_H */"}, {"sha": "7973268e757f3767d2b9a10b33e9dc289390e85c", "filename": "gcc/config/aarch64/aarch64-linux.h", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf05ef76d933199bb7db076d9b0e3b41724053f5/gcc%2Fconfig%2Faarch64%2Faarch64-linux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf05ef76d933199bb7db076d9b0e3b41724053f5/gcc%2Fconfig%2Faarch64%2Faarch64-linux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-linux.h?ref=bf05ef76d933199bb7db076d9b0e3b41724053f5", "patch": "@@ -49,8 +49,17 @@\n   \" %{mfix-cortex-a53-835769:--fix-cortex-a53-835769}\"\n #endif\n \n+#ifdef TARGET_FIX_ERR_A53_843419_DEFAULT\n+#define CA53_ERR_843419_SPEC \\\n+  \" %{!mno-fix-cortex-a53-843419:--fix-cortex-a53-843419}\"\n+#else\n+#define CA53_ERR_843419_SPEC \\\n+  \" %{mfix-cortex-a53-843419:--fix-cortex-a53-843419}\"\n+#endif\n+\n #define LINK_SPEC LINUX_TARGET_LINK_SPEC \\\n-                  CA53_ERR_835769_SPEC\n+                  CA53_ERR_835769_SPEC \\\n+                  CA53_ERR_843419_SPEC\n \n #define GNU_USER_TARGET_MATHFILE_SPEC \\\n   \"%{Ofast|ffast-math|funsafe-math-optimizations:crtfastmath.o%s}\""}, {"sha": "6d72ac26dd19f1aebfd4781bf257a4a12e23342c", "filename": "gcc/config/aarch64/aarch64.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf05ef76d933199bb7db076d9b0e3b41724053f5/gcc%2Fconfig%2Faarch64%2Faarch64.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf05ef76d933199bb7db076d9b0e3b41724053f5/gcc%2Fconfig%2Faarch64%2Faarch64.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.opt?ref=bf05ef76d933199bb7db076d9b0e3b41724053f5", "patch": "@@ -71,6 +71,10 @@ mfix-cortex-a53-835769\n Target Report Var(aarch64_fix_a53_err835769) Init(2)\n Workaround for ARM Cortex-A53 Erratum number 835769\n \n+mfix-cortex-a53-843419\n+Target Report\n+Workaround for ARM Cortex-A53 Erratum number 843419\n+\n mlittle-endian\n Target Report RejectNegative InverseMask(BIG_END)\n Assume target CPU is configured as little endian"}, {"sha": "e563e94af6fd034e722b6dff6fd06134caaa8443", "filename": "gcc/configure", "status": "modified", "additions": 30, "deletions": 2, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf05ef76d933199bb7db076d9b0e3b41724053f5/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf05ef76d933199bb7db076d9b0e3b41724053f5/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=bf05ef76d933199bb7db076d9b0e3b41724053f5", "patch": "@@ -923,6 +923,7 @@ enable_gnu_indirect_function\n enable_initfini_array\n enable_comdat\n enable_fix_cortex_a53_835769\n+enable_fix_cortex_a53_843419\n with_glibc_version\n enable_gnu_unique_object\n enable_linker_build_id\n@@ -1648,6 +1649,14 @@ Optional Features:\n                           disable workaround for AArch64 Cortex-A53 erratum\n                           835769 by default\n \n+\n+  --enable-fix-cortex-a53-843419\n+                          enable workaround for AArch64 Cortex-A53 erratum\n+                          843419 by default\n+  --disable-fix-cortex-a53-843419\n+                          disable workaround for AArch64 Cortex-A53 erratum\n+                          843419 by default\n+\n   --enable-gnu-unique-object\n                           enable the use of the @gnu_unique_object ELF\n                           extension on glibc systems\n@@ -18153,7 +18162,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18156 \"configure\"\n+#line 18165 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18259,7 +18268,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18262 \"configure\"\n+#line 18271 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -24100,6 +24109,25 @@ if test \"${enable_fix_cortex_a53_835769+set}\" = set; then :\n \n         esac\n \n+fi\n+\n+    # Enable default workaround for AArch64 Cortex-A53 erratum 843419.\n+    # Check whether --enable-fix-cortex-a53-843419 was given.\n+if test \"${enable_fix_cortex_a53_843419+set}\" = set; then :\n+  enableval=$enable_fix_cortex_a53_843419;\n+        case $enableval in\n+          yes)\n+            tm_defines=\"${tm_defines} TARGET_FIX_ERR_A53_843419_DEFAULT=1\"\n+            ;;\n+          no)\n+            ;;\n+          *)\n+            as_fn_error \"'$enableval' is an invalid value for --enable-fix-cortex-a53-843419.\\\n+  Valid choices are 'yes' and 'no'.\" \"$LINENO\" 5\n+            ;;\n+\n+        esac\n+\n fi\n \n     ;;"}, {"sha": "55fe63394fe38fe90d1f3fb2391cc7be7d3a7237", "filename": "gcc/configure.ac", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf05ef76d933199bb7db076d9b0e3b41724053f5/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf05ef76d933199bb7db076d9b0e3b41724053f5/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=bf05ef76d933199bb7db076d9b0e3b41724053f5", "patch": "@@ -3592,6 +3592,29 @@ AS_HELP_STRING([--disable-fix-cortex-a53-835769],\n         esac\n       ],\n     [])\n+    # Enable default workaround for AArch64 Cortex-A53 erratum 843419.\n+    AC_ARG_ENABLE(fix-cortex-a53-843419,\n+    [\n+AS_HELP_STRING([--enable-fix-cortex-a53-843419],\n+        [enable workaround for AArch64 Cortex-A53 erratum 843419 by default])\n+AS_HELP_STRING([--disable-fix-cortex-a53-843419],\n+        [disable workaround for AArch64 Cortex-A53 erratum 843419 by default])\n+    ],\n+      [\n+        case $enableval in\n+          yes)\n+            tm_defines=\"${tm_defines} TARGET_FIX_ERR_A53_843419_DEFAULT=1\"\n+            ;;\n+          no)\n+            ;;\n+          *)\n+            AC_MSG_ERROR(['$enableval' is an invalid value for --enable-fix-cortex-a53-843419.\\\n+  Valid choices are 'yes' and 'no'.])\n+            ;;\n+\n+        esac\n+      ],\n+    [])\n     ;;\n \n   # All TARGET_ABI_OSF targets."}, {"sha": "d8d393985c34343352398d031799cde76bf9d205", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf05ef76d933199bb7db076d9b0e3b41724053f5/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf05ef76d933199bb7db076d9b0e3b41724053f5/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=bf05ef76d933199bb7db076d9b0e3b41724053f5", "patch": "@@ -3408,13 +3408,24 @@ not support option @option{-mabi=ilp32}.\n To enable a workaround for the Cortex-A53 erratum number 835769 by default\n (for all CPUs regardless of -mcpu option given) at configure time use the\n @option{--enable-fix-cortex-a53-835769} option.  This will enable the fix by\n-default and can be explicitly disabled during during compilation by passing the\n+default and can be explicitly disabled during compilation by passing the\n @option{-mno-fix-cortex-a53-835769} option.  Conversely,\n @option{--disable-fix-cortex-a53-835769} will disable the workaround by\n default.  The workaround is disabled by default if neither of\n @option{--enable-fix-cortex-a53-835769} or\n @option{--disable-fix-cortex-a53-835769} is given at configure time.\n \n+To enable a workaround for the Cortex-A53 erratum number 843419 by default\n+(for all CPUs regardless of -mcpu option given) at configure time use the\n+@option{--enable-fix-cortex-a53-843419} option.  This workaround is applied at\n+link time.  Enabling the workaround will cause GCC to pass the relevant option\n+to the linker.  It can be explicitly disabled during compilation by passing the\n+@option{-mno-fix-cortex-a53-843419} option.  Conversely,\n+@option{--disable-fix-cortex-a53-843419} will disable the workaround by default.\n+The workaround is disabled by default if neither of\n+@option{--enable-fix-cortex-a53-843419} or\n+@option{--disable-fix-cortex-a53-843419} is given at configure time.\n+\n @html\n <hr />\n @end html"}, {"sha": "324e517117f20b663d6d6b83c157c4512380377b", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf05ef76d933199bb7db076d9b0e3b41724053f5/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf05ef76d933199bb7db076d9b0e3b41724053f5/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=bf05ef76d933199bb7db076d9b0e3b41724053f5", "patch": "@@ -512,6 +512,7 @@ Objective-C and Objective-C++ Dialects}.\n -momit-leaf-frame-pointer  -mno-omit-leaf-frame-pointer @gol\n -mtls-dialect=desc  -mtls-dialect=traditional @gol\n -mfix-cortex-a53-835769  -mno-fix-cortex-a53-835769 @gol\n+-mfix-cortex-a53-843419  -mno-fix-cortex-a53-843419 @gol\n -march=@var{name}  -mcpu=@var{name}  -mtune=@var{name}}\n \n @emph{Adapteva Epiphany Options}\n@@ -12328,6 +12329,14 @@ Enable or disable the workaround for the ARM Cortex-A53 erratum number 835769.\n This involves inserting a NOP instruction between memory instructions and\n 64-bit integer multiply-accumulate instructions.\n \n+@item -mfix-cortex-a53-843419\n+@itemx -mno-fix-cortex-a53-843419\n+@opindex mfix-cortex-a53-843419\n+@opindex mno-fix-cortex-a53-843419\n+Enable or disable the workaround for the ARM Cortex-A53 erratum number 843419.\n+This erratum workaround is made at link time and this will only pass the\n+corresponding flag to the linker.\n+\n @item -march=@var{name}\n @opindex march\n Specify the name of the target architecture, optionally suffixed by one or"}]}