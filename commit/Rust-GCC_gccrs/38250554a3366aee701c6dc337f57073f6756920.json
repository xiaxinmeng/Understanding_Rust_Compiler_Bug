{"sha": "38250554a3366aee701c6dc337f57073f6756920", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzgyNTA1NTRhMzM2NmFlZTcwMWM2ZGMzMzdmNTcwNzNmNjc1NjkyMA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-03T23:11:49Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-11-03T23:11:49Z"}, "message": "(EXTRA_CONSTRAINT): 'R' matches a SYMBOL_REF for TOC entry.\n\n(PRINT_OPERAND_PUNCT_VALID_P): Recognize '*'.\n(PREDICATE_CODES): input_operand can now match SYMBOL_REF.\n\nFrom-SVN: r8381", "tree": {"sha": "d91a1bb54668a6116a1b1912b8e07188e9c4b5f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d91a1bb54668a6116a1b1912b8e07188e9c4b5f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38250554a3366aee701c6dc337f57073f6756920", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38250554a3366aee701c6dc337f57073f6756920", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38250554a3366aee701c6dc337f57073f6756920", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38250554a3366aee701c6dc337f57073f6756920/comments", "author": null, "committer": null, "parents": [{"sha": "cfaaaf2e4b2ba4652b71933c3a3cff9f3a78f14c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfaaaf2e4b2ba4652b71933c3a3cff9f3a78f14c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfaaaf2e4b2ba4652b71933c3a3cff9f3a78f14c"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "58a7087cb561f03c89d9c383b45cd69709b1f788", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38250554a3366aee701c6dc337f57073f6756920/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38250554a3366aee701c6dc337f57073f6756920/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=38250554a3366aee701c6dc337f57073f6756920", "patch": "@@ -682,6 +682,7 @@ enum reg_class { NO_REGS, BASE_REGS, GENERAL_REGS, FLOAT_REGS,\n \n #define EXTRA_CONSTRAINT(OP, C)\t\t\t\t\t\t\\\n   ((C) == 'Q' ? GET_CODE (OP) == MEM && GET_CODE (XEXP (OP, 0)) == REG\t\\\n+   : (C) == 'R' ? GET_CODE (OP) == SYMBOL_REF && CONSTANT_POOL_ADDRESS_P (OP)\\\n    : 0)\n \n /* Given an rtx X being reloaded into a reg required to be\n@@ -2155,7 +2156,7 @@ toc_section ()\t\t\t\t\t\t\\\n \n /* Define which CODE values are valid.  */\n \n-#define PRINT_OPERAND_PUNCT_VALID_P(CODE)  ((CODE) == '.')\n+#define PRINT_OPERAND_PUNCT_VALID_P(CODE)  ((CODE) == '.' || (CODE) == '*')\n \n /* Print a memory address as an operand to reference that memory location.  */\n \n@@ -2186,7 +2187,7 @@ toc_section ()\t\t\t\t\t\t\\\n   {\"mask_operand\", {CONST_INT}},\t\t\t\t\\\n   {\"call_operand\", {SYMBOL_REF, REG}},\t\t\t\t\\\n   {\"current_file_function_operand\", {SYMBOL_REF}},\t\t\\\n-  {\"input_operand\", {SUBREG, MEM, REG, CONST_INT}},\t\t\\\n+  {\"input_operand\", {SUBREG, MEM, REG, CONST_INT, SYMBOL_REF}},\t\\\n   {\"load_multiple_operation\", {PARALLEL}},\t\t\t\\\n   {\"store_multiple_operation\", {PARALLEL}},\t\t\t\\\n   {\"branch_comparison_operator\", {EQ, NE, LE, LT, GE,\t\t\\"}]}