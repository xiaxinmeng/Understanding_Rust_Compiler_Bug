{"sha": "7c3ed632601bf485335a7fe00d1db34b23ebacd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MzZWQ2MzI2MDFiZjQ4NTMzNWE3ZmUwMGQxZGIzNGIyM2ViYWNkMg==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2019-10-08T19:48:27Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2019-10-08T19:48:27Z"}, "message": "PR middle-end/92026 - gcc.dg/Wstringop-overflow-18.c FAIL\n\nPR middle-end/92026 - gcc.dg/Wstringop-overflow-18.c FAIL\nPR middle-end/92014 - bogus warning: writing 8 bytes into a region of size 1 in timezone/zic.c\n\ngcc/ChangeLog:\n\t* tree-ssa-strlen.c (count_nonzero_bytes): Avoid recursing for MEM_REF\n\tagain once nbytes has been set.  Set the access size when not yet set.\n\ngcc/testsuite/ChangeLog:\n\n\tPR middle-end/92014\n\t* gcc.dg/Wstringop-overflow-19.c: New test.\n\nFrom-SVN: r276711", "tree": {"sha": "fcb0679a35fe62400fe8291b8fae30c2ca980686", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcb0679a35fe62400fe8291b8fae30c2ca980686"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c3ed632601bf485335a7fe00d1db34b23ebacd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c3ed632601bf485335a7fe00d1db34b23ebacd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c3ed632601bf485335a7fe00d1db34b23ebacd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c3ed632601bf485335a7fe00d1db34b23ebacd2/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e86fc0d7a8df5799c195cd5ff0486e0bdbe6c661", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e86fc0d7a8df5799c195cd5ff0486e0bdbe6c661", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e86fc0d7a8df5799c195cd5ff0486e0bdbe6c661"}], "stats": {"total": 67, "additions": 56, "deletions": 11}, "files": [{"sha": "4bf04707b750cbbe0ac51c9b1141328b2e6627cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c3ed632601bf485335a7fe00d1db34b23ebacd2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c3ed632601bf485335a7fe00d1db34b23ebacd2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7c3ed632601bf485335a7fe00d1db34b23ebacd2", "patch": "@@ -1,3 +1,10 @@\n+2019-10-08  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/92026\n+\tPR middle-end/92014\n+\t* tree-ssa-strlen.c (count_nonzero_bytes): Avoid recursing for MEM_REF\n+\tagain once nbytes has been set.  Set the access size when not yet set.\n+\n 2019-10-08  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* config/darwin.c (machopic_select_section): Remove dead code for"}, {"sha": "1b6c04ab122da740b2b11780256aaa67c97fd8d9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c3ed632601bf485335a7fe00d1db34b23ebacd2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c3ed632601bf485335a7fe00d1db34b23ebacd2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7c3ed632601bf485335a7fe00d1db34b23ebacd2", "patch": "@@ -1,3 +1,8 @@\n+2019-10-08  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/92014\n+\t* gcc.dg/Wstringop-overflow-19.c: New test.\n+\n 2019-10-08  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/91801"}, {"sha": "cf866b3f1ee694f7106832fcd24747ab703e1e44", "filename": "gcc/testsuite/gcc.dg/Wstringop-overflow-19.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c3ed632601bf485335a7fe00d1db34b23ebacd2/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c3ed632601bf485335a7fe00d1db34b23ebacd2/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-19.c?ref=7c3ed632601bf485335a7fe00d1db34b23ebacd2", "patch": "@@ -0,0 +1,27 @@\n+/* PR middle-end/92014 - bogus warning: writing 8 bytes into a region\n+   of size 1 in timezone/zic.c\n+   { dg-do compile }\n+   { dg-options \"-O2 -Wall\" } */\n+\n+struct\n+{\n+  char *s1, *s2;\n+  char c;\n+} z;\n+\n+\n+void f (char **a, int i, int j)\n+{\n+  char * cp = __builtin_strchr (a[i], '%');\n+\n+  if (cp && *++cp != 's')\n+    return;\n+\n+  z.s1 = __builtin_strdup (a[i]);\n+  if (!z.s1) __builtin_abort ();\n+\n+  z.s2 = __builtin_strdup (a[j]);\n+  if (!z.s2) __builtin_abort ();\n+\n+  z.c = cp ? *cp : '\\0';    // { dg-bogus \"\\\\\\[-Wstringop-overflow\" }\n+}"}, {"sha": "c2866e01d70b9afc3cf4c04db5c2a74d297a032e", "filename": "gcc/tree-ssa-strlen.c", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c3ed632601bf485335a7fe00d1db34b23ebacd2/gcc%2Ftree-ssa-strlen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c3ed632601bf485335a7fe00d1db34b23ebacd2/gcc%2Ftree-ssa-strlen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-strlen.c?ref=7c3ed632601bf485335a7fe00d1db34b23ebacd2", "patch": "@@ -3741,13 +3741,16 @@ int ssa_name_limit_t::next_ssa_name (tree ssa_name)\n   return 0;\n }\n \n-/* Determine the minimum and maximum number of leading non-zero bytes\n+/* Determines the minimum and maximum number of leading non-zero bytes\n    in the representation of EXP and set LENRANGE[0] and LENRANGE[1]\n-   to each.  Set LENRANGE[2] to the total number of bytes in\n-   the representation.  Set *NULTREM if the representation contains\n-   a zero byte, and set *ALLNUL if all the bytes are zero.  Avoid\n-   recursing deeper than the limits in SNLIM allow.  Return true\n-   on success and false otherwise.  */\n+   to each.  Sets LENRANGE[2] to the total number of bytes in\n+   the representation.  Sets *NULTREM if the representation contains\n+   a zero byte, and sets *ALLNUL if all the bytes are zero.\n+   OFFSET and NBYTES are the offset into the representation and\n+   the size of the access to it determined from a MEM_REF or zero\n+   for other expressions.\n+   Avoid recursing deeper than the limits in SNLIM allow.\n+   Returns true on success and false otherwise.  */\n \n static bool\n count_nonzero_bytes (tree exp, unsigned HOST_WIDE_INT offset,\n@@ -3769,15 +3772,13 @@ count_nonzero_bytes (tree exp, unsigned HOST_WIDE_INT offset,\n \treturn false;\n \n       len -= offset;\n-      size -= offset;\n-\n-      if (size < nbytes)\n-\treturn false;\n \n       if (len < lenrange[0])\n \tlenrange[0] = len;\n       if (lenrange[1] < len)\n \tlenrange[1] = len;\n+      if (lenrange[2] < nbytes)\n+\tlenrange[2] = nbytes;\n \n       if (!si->full_string_p)\n \t*nulterm = false;\n@@ -3843,6 +3844,9 @@ count_nonzero_bytes (tree exp, unsigned HOST_WIDE_INT offset,\n \n   if (TREE_CODE (exp) == MEM_REF)\n     {\n+      if (nbytes)\n+\treturn false;\n+\n       tree arg = TREE_OPERAND (exp, 0);\n       tree off = TREE_OPERAND (exp, 1);\n \n@@ -3910,8 +3914,10 @@ count_nonzero_bytes (tree exp, unsigned HOST_WIDE_INT offset,\n \t  lenrange[0] = 0;\n \t  prep = NULL;\n \t}\n-      else\n+      else if (!nbytes)\n \tnbytes = repsize;\n+      else if (nbytes < repsize)\n+\treturn false;\n     }\n \n   if (!nbytes)"}]}