{"sha": "b70af677f28020e48e4d80a036ad19c25ee8f389", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjcwYWY2NzdmMjgwMjBlNDhlNGQ4MGEwMzZhZDE5YzI1ZWU4ZjM4OQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-24T06:53:13Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-24T06:53:13Z"}, "message": "(readescape): New arg ignore_ptr.\n\n(yylex): Pass new arg, handle result that comes back.\n\nFrom-SVN: r2222", "tree": {"sha": "a78ff9b2cff0800ef5d7a2a3b88afa65427ab6e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a78ff9b2cff0800ef5d7a2a3b88afa65427ab6e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b70af677f28020e48e4d80a036ad19c25ee8f389", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b70af677f28020e48e4d80a036ad19c25ee8f389", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b70af677f28020e48e4d80a036ad19c25ee8f389", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b70af677f28020e48e4d80a036ad19c25ee8f389/comments", "author": null, "committer": null, "parents": [{"sha": "3b647566f77e7f7bac9936132c4d389f69240fea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b647566f77e7f7bac9936132c4d389f69240fea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b647566f77e7f7bac9936132c4d389f69240fea"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "6bae94e655a7c2459e375bced38941d3492cc490", "filename": "gcc/c-lex.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b70af677f28020e48e4d80a036ad19c25ee8f389/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b70af677f28020e48e4d80a036ad19c25ee8f389/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=b70af677f28020e48e4d80a036ad19c25ee8f389", "patch": "@@ -794,10 +794,11 @@ handle_sysv_pragma (input, c)\n #define ENDFILE -1  /* token that represents end-of-file */\n \n /* Read an escape sequence, returning its equivalent as a character,\n-   or -1 if it is backslash-newline.  */\n+   or store 1 in *ignore_ptr if it is backslash-newline.  */\n \n static int\n-readescape ()\n+readescape (ignore_ptr)\n+     int *ignore_ptr;\n {\n   register int c = getc (finput);\n   register int code;\n@@ -868,7 +869,8 @@ readescape ()\n \n     case '\\n':\n       lineno++;\n-      return -1;\n+      *ignore_ptr = 1;\n+      return 0;\n \n     case 'n':\n       return TARGET_NEWLINE;\n@@ -1637,8 +1639,9 @@ yylex ()\n \n \t    if (c == '\\\\')\n \t      {\n-\t\tc = readescape ();\n-\t\tif (c < 0)\n+\t\tint ignore = 0;\n+\t\tc = readescape (&ignore);\n+\t\tif (ignore)\n \t\t  goto tryagain;\n \t\tif (width < HOST_BITS_PER_INT\n \t\t    && (unsigned) c >= (1 << width))\n@@ -1735,8 +1738,9 @@ yylex ()\n \t    /* ignore_escape_flag is set for reading the filename in #line.  */\n \t    if (!ignore_escape_flag && c == '\\\\')\n \t      {\n-\t\tc = readescape ();\n-\t\tif (c < 0)\n+\t\tint ignore;\n+\t\tc = readescape (&ignore);\n+\t\tif (ignore)\n \t\t  goto skipnewline;\n \t\tif (!wide_flag\n \t\t    && TYPE_PRECISION (char_type_node) < HOST_BITS_PER_INT"}]}