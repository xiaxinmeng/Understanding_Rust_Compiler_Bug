{"sha": "8b11645c88adf72510cbb4a7a250c991ae1759c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGIxMTY0NWM4OGFkZjcyNTEwY2JiNGE3YTI1MGM5OTFhZTE3NTljNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-10-03T00:44:08Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-10-03T00:44:08Z"}, "message": "Complete last change.\n\nFrom-SVN: r8207", "tree": {"sha": "dc6ba895da4df3671d8823642fb7b8d3d827beb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc6ba895da4df3671d8823642fb7b8d3d827beb6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b11645c88adf72510cbb4a7a250c991ae1759c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b11645c88adf72510cbb4a7a250c991ae1759c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b11645c88adf72510cbb4a7a250c991ae1759c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b11645c88adf72510cbb4a7a250c991ae1759c7/comments", "author": null, "committer": null, "parents": [{"sha": "cafbaf85f5da81f8c37b54c303601a75bd278001", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cafbaf85f5da81f8c37b54c303601a75bd278001", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cafbaf85f5da81f8c37b54c303601a75bd278001"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "40d3702394e355be582938b4572984f355a0c116", "filename": "gcc/reorg.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b11645c88adf72510cbb4a7a250c991ae1759c7/gcc%2Freorg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b11645c88adf72510cbb4a7a250c991ae1759c7/gcc%2Freorg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freorg.c?ref=8b11645c88adf72510cbb4a7a250c991ae1759c7", "patch": "@@ -3266,7 +3266,11 @@ fill_slots_from_thread (insn, condition, thread, opposite_thread, likely,\n \t\t{\n \t\t  update_block (trial, thread);\n \t\t  if (trial == thread)\n-\t\t    thread = next_active_insn (thread);\n+\t\t    {\n+\t\t      thread = next_active_insn (thread);\n+\t\t      if (new_thread == trial)\n+\t\t\tnew_thread = thread;\n+\t\t    }\n \n \t\t  delete_insn (trial);\n \t\t}"}]}