{"sha": "e78d485eb842bfe4209cec9da3725f5ef6a74abb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc4ZDQ4NWViODQyYmZlNDIwOWNlYzlkYTM3MjVmNWVmNmE3NGFiYg==", "commit": {"author": {"name": "Ramana Radhakrishnan", "email": "ramana.radhakrishnan@arm.com", "date": "2015-11-06T19:00:59Z"}, "committer": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2015-11-06T19:00:59Z"}, "message": "[Patch AArch64] Switch constant pools to separate rodata sections.\n\nProperly apply ..\n\n2015-11-06  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n\n\tProperly apply.\n\t2015-11-05  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n        * config/aarch64/aarch64.c\n        (aarch64_can_use_per_function_literal_pools_p): New.\n        (aarch64_use_blocks_for_constant_p): Adjust declaration\n        and use aarch64_can_use_function_literal_pools_p.\n        (aarch64_select_rtx_section): Update.\n\nFrom-SVN: r229878", "tree": {"sha": "a1bca72a867e35b39aabd8f1da81a85430ceed8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1bca72a867e35b39aabd8f1da81a85430ceed8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e78d485eb842bfe4209cec9da3725f5ef6a74abb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e78d485eb842bfe4209cec9da3725f5ef6a74abb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e78d485eb842bfe4209cec9da3725f5ef6a74abb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e78d485eb842bfe4209cec9da3725f5ef6a74abb/comments", "author": null, "committer": null, "parents": [{"sha": "9a4bbd5dd2f73e60a5b7942599478ab5b71783b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a4bbd5dd2f73e60a5b7942599478ab5b71783b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a4bbd5dd2f73e60a5b7942599478ab5b71783b3"}], "stats": {"total": 42, "additions": 33, "deletions": 9}, "files": [{"sha": "eee5b6c92d9c10aa1bcfc7d87f854b5b2b42f68e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e78d485eb842bfe4209cec9da3725f5ef6a74abb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e78d485eb842bfe4209cec9da3725f5ef6a74abb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e78d485eb842bfe4209cec9da3725f5ef6a74abb", "patch": "@@ -1,3 +1,13 @@\n+2015-11-06  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n+\n+\tProperly apply.\n+\t2015-11-05  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n+        * config/aarch64/aarch64.c\n+        (aarch64_can_use_per_function_literal_pools_p): New.\n+        (aarch64_use_blocks_for_constant_p): Adjust declaration\n+        and use aarch64_can_use_function_literal_pools_p.\n+        (aarch64_select_rtx_section): Update.\n+\n 2015-11-06  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \n \t* config/arm/arm-ldmstm.ml: Rewrite to generate unified asm templates."}, {"sha": "1b7be838c73121bbe9a0a3843bd73342ec691cae", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 23, "deletions": 9, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e78d485eb842bfe4209cec9da3725f5ef6a74abb/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e78d485eb842bfe4209cec9da3725f5ef6a74abb/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=e78d485eb842bfe4209cec9da3725f5ef6a74abb", "patch": "@@ -5237,24 +5237,38 @@ aarch64_uxt_size (int shift, HOST_WIDE_INT mask)\n   return 0;\n }\n \n+/* Constant pools are per function only when PC relative\n+   literal loads are true or we are in the large memory\n+   model.  */\n+\n+static inline bool\n+aarch64_can_use_per_function_literal_pools_p (void)\n+{\n+  return (!aarch64_nopcrelative_literal_loads\n+\t  || aarch64_cmodel == AARCH64_CMODEL_LARGE);\n+}\n+\n static bool\n-aarch64_use_blocks_for_constant_p (machine_mode mode ATTRIBUTE_UNUSED,\n-\t\t\t\t   const_rtx x ATTRIBUTE_UNUSED)\n+aarch64_use_blocks_for_constant_p (machine_mode, const_rtx)\n {\n   /* We can't use blocks for constants when we're using a per-function\n      constant pool.  */\n-  return false;\n+  return !aarch64_can_use_per_function_literal_pools_p ();\n }\n \n+/* Select appropriate section for constants depending\n+   on where we place literal pools.  */\n+\n static section *\n-aarch64_select_rtx_section (machine_mode mode ATTRIBUTE_UNUSED,\n-\t\t\t    rtx x ATTRIBUTE_UNUSED,\n-\t\t\t    unsigned HOST_WIDE_INT align ATTRIBUTE_UNUSED)\n+aarch64_select_rtx_section (machine_mode mode,\n+\t\t\t    rtx x,\n+\t\t\t    unsigned HOST_WIDE_INT align)\n {\n-  /* Force all constant pool entries into the current function section.  */\n-  return function_section (current_function_decl);\n-}\n+  if (aarch64_can_use_per_function_literal_pools_p ())\n+    return function_section (current_function_decl);\n \n+  return default_elf_select_rtx_section (mode, x, align);\n+}\n \n /* Costs.  */\n "}]}