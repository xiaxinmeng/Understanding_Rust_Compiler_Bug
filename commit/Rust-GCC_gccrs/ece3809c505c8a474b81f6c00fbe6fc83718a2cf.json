{"sha": "ece3809c505c8a474b81f6c00fbe6fc83718a2cf", "node_id": "C_kwDOANBUbNoAKGVjZTM4MDljNTA1YzhhNDc0YjgxZjZjMDBmYmU2ZmM4MzcxOGEyY2Y", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-04-12T08:19:11Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-04-12T13:26:11Z"}, "message": "privacy: Keep DefIds in reachability map instead\n\nThis commit also specialized `std::hash<DefId>` to be able to use it as\nkey in {unordered_}maps", "tree": {"sha": "93ad5387b4075d53f5a3e9e9dc8ff711e0419f64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93ad5387b4075d53f5a3e9e9dc8ff711e0419f64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ece3809c505c8a474b81f6c00fbe6fc83718a2cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ece3809c505c8a474b81f6c00fbe6fc83718a2cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ece3809c505c8a474b81f6c00fbe6fc83718a2cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ece3809c505c8a474b81f6c00fbe6fc83718a2cf/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a376e1939e5ced1fc457d6a35c64c5f75d3da976", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a376e1939e5ced1fc457d6a35c64c5f75d3da976", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a376e1939e5ced1fc457d6a35c64c5f75d3da976"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "9ebc86988e9fa4b29560dd9a90d94afa8f17501d", "filename": "gcc/rust/privacy/rust-privacy-ctx.cc", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ece3809c505c8a474b81f6c00fbe6fc83718a2cf/gcc%2Frust%2Fprivacy%2Frust-privacy-ctx.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ece3809c505c8a474b81f6c00fbe6fc83718a2cf/gcc%2Frust%2Fprivacy%2Frust-privacy-ctx.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fprivacy%2Frust-privacy-ctx.cc?ref=ece3809c505c8a474b81f6c00fbe6fc83718a2cf", "patch": "@@ -24,7 +24,7 @@ namespace Privacy {\n \n static ReachLevel\n insert_if_higher (ReachLevel new_level,\n-\t\t  std::unordered_map<HirId, ReachLevel>::iterator &existing)\n+\t\t  std::unordered_map<DefId, ReachLevel>::iterator &existing)\n {\n   if (new_level > existing->second)\n     existing->second = new_level;\n@@ -36,18 +36,19 @@ ReachLevel\n PrivacyContext::update_reachability (const Analysis::NodeMapping &mapping,\n \t\t\t\t     ReachLevel reach)\n {\n-  auto existing_reach = reachability_map.find (mapping.get_hirid ());\n+  auto def_id = mapping.get_defid ();\n+  auto existing_reach = reachability_map.find (def_id);\n   if (existing_reach != reachability_map.end ())\n     return insert_if_higher (reach, existing_reach);\n \n-  reachability_map.insert ({mapping.get_hirid (), reach});\n+  reachability_map.insert ({def_id, reach});\n   return reach;\n }\n \n const ReachLevel *\n PrivacyContext::lookup_reachability (const Analysis::NodeMapping &mapping)\n {\n-  auto existing_reach = reachability_map.find (mapping.get_hirid ());\n+  auto existing_reach = reachability_map.find (mapping.get_defid ());\n   if (existing_reach == reachability_map.end ())\n     return nullptr;\n "}, {"sha": "52d790edf63fd11fc693b3b98061f8bdc0242151", "filename": "gcc/rust/privacy/rust-privacy-ctx.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ece3809c505c8a474b81f6c00fbe6fc83718a2cf/gcc%2Frust%2Fprivacy%2Frust-privacy-ctx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ece3809c505c8a474b81f6c00fbe6fc83718a2cf/gcc%2Frust%2Fprivacy%2Frust-privacy-ctx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fprivacy%2Frust-privacy-ctx.h?ref=ece3809c505c8a474b81f6c00fbe6fc83718a2cf", "patch": "@@ -64,7 +64,7 @@ class PrivacyContext\n   const ReachLevel *lookup_reachability (const Analysis::NodeMapping &mapping);\n \n private:\n-  std::unordered_map<HirId, ReachLevel> reachability_map;\n+  std::unordered_map<DefId, ReachLevel> reachability_map;\n };\n } // namespace Privacy\n } // namespace Rust"}, {"sha": "c440ae98931f90bff69a22664ece5e074bfaeef3", "filename": "gcc/rust/util/rust-mapping-common.h", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ece3809c505c8a474b81f6c00fbe6fc83718a2cf/gcc%2Frust%2Futil%2Frust-mapping-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ece3809c505c8a474b81f6c00fbe6fc83718a2cf/gcc%2Frust%2Futil%2Frust-mapping-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Futil%2Frust-mapping-common.h?ref=ece3809c505c8a474b81f6c00fbe6fc83718a2cf", "patch": "@@ -69,4 +69,17 @@ struct DefId\n \n } // namespace Rust\n \n+namespace std {\n+template <> struct hash<Rust::DefId>\n+{\n+  size_t operator() (const Rust::DefId &id) const noexcept\n+  {\n+    // TODO: Check if we can improve performance by having a better hash\n+    // algorithm for `DefId`s\n+    return hash<uint32_t> () (hash<uint32_t> () (id.crateNum)\n+\t\t\t      + hash<uint32_t> () (id.localDefId));\n+  }\n+};\n+} // namespace std\n+\n #endif // RUST_MAPPING_COMMON"}]}