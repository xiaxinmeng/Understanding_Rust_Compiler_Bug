{"sha": "ca0ae7e0087d34953c974bb8eb4d95f99a3ed50a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2EwYWU3ZTAwODdkMzQ5NTNjOTc0YmI4ZWI0ZDk1Zjk5YTNlZDUwYQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@gnat.com", "date": "2004-10-27T13:05:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-10-27T13:05:51Z"}, "message": "lib-xref.adb (Generate_Reference): Don't complain about reference to entry parameter if pragma Unreferenced set...\n\n2004-10-26  Robert Dewar  <dewar@gnat.com>\n\n\t* lib-xref.adb (Generate_Reference): Don't complain about reference to\n\tentry parameter if pragma Unreferenced set, since we do not properly\n\thandle the case of multiple parameters.\n\nFrom-SVN: r89657", "tree": {"sha": "28b5ee5f10a30b9279dc66550462ba98e871dcd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28b5ee5f10a30b9279dc66550462ba98e871dcd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca0ae7e0087d34953c974bb8eb4d95f99a3ed50a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca0ae7e0087d34953c974bb8eb4d95f99a3ed50a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca0ae7e0087d34953c974bb8eb4d95f99a3ed50a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca0ae7e0087d34953c974bb8eb4d95f99a3ed50a/comments", "author": null, "committer": null, "parents": [{"sha": "07f37402ebf4619b09f8a2886e08ea0dd44b5089", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07f37402ebf4619b09f8a2886e08ea0dd44b5089", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07f37402ebf4619b09f8a2886e08ea0dd44b5089"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "f2158ce9c5821a251e4d921f83cd072440646cad", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca0ae7e0087d34953c974bb8eb4d95f99a3ed50a/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca0ae7e0087d34953c974bb8eb4d95f99a3ed50a/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=ca0ae7e0087d34953c974bb8eb4d95f99a3ed50a", "patch": "@@ -377,6 +377,15 @@ package body Lib.Xref is\n             then\n                null;\n \n+            --  For now, ignore case of parameter to entry, since we don't deal\n+            --  correctly with the case of multiple accepts for the same entry.\n+            --  To deal with this we would have to put the flag on the body\n+            --  entity, but that's not easy, since everyone references the spec\n+            --  entity. To be looked at later to improve this case ???\n+\n+            elsif Ekind (Scope (E)) = E_Entry then\n+               null;\n+\n             --  Here we issue the warning, since this is a real reference\n \n             else"}]}