{"sha": "905969f941d0428665ab2ff1c0826f60b5e41073", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA1OTY5Zjk0MWQwNDI4NjY1YWIyZmYxYzA4MjZmNjBiNWU0MTA3Mw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2019-01-02T17:07:02Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2019-01-02T17:07:02Z"}, "message": "re PR c++/86875 (ICE in tsubst_copy, at cp/pt.c:15478)\n\n\tPR c++/86875\n\t* g++.dg/cpp1y/lambda-generic-86875.C: New test.\n\nFrom-SVN: r267519", "tree": {"sha": "43e6f5393fe9f7f069d1f4468062c37a9b79a6af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43e6f5393fe9f7f069d1f4468062c37a9b79a6af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/905969f941d0428665ab2ff1c0826f60b5e41073", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/905969f941d0428665ab2ff1c0826f60b5e41073", "html_url": "https://github.com/Rust-GCC/gccrs/commit/905969f941d0428665ab2ff1c0826f60b5e41073", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/905969f941d0428665ab2ff1c0826f60b5e41073/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b3e2dc1ed96ff476ed880f151331237c64f9bfe7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3e2dc1ed96ff476ed880f151331237c64f9bfe7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3e2dc1ed96ff476ed880f151331237c64f9bfe7"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "23691cd282de4db0a4654bc08ae6ac0f4b3df910", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/905969f941d0428665ab2ff1c0826f60b5e41073/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/905969f941d0428665ab2ff1c0826f60b5e41073/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=905969f941d0428665ab2ff1c0826f60b5e41073", "patch": "@@ -1,3 +1,8 @@\n+2019-01-02  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/86875\n+\t* g++.dg/cpp1y/lambda-generic-86875.C: New test.\n+\n 2019-01-02  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/48543"}, {"sha": "3a81b00df9632d2959709ebd07012291788123ab", "filename": "gcc/testsuite/g++.dg/cpp1y/lambda-generic-86875.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/905969f941d0428665ab2ff1c0826f60b5e41073/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-86875.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/905969f941d0428665ab2ff1c0826f60b5e41073/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-86875.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-86875.C?ref=905969f941d0428665ab2ff1c0826f60b5e41073", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/86875\n+// { dg-do compile { target c++14 } }\n+\n+template <typename _Tp> using decay_t = _Tp;\n+template <class Fun> class A {\n+  Fun fun_;\n+\n+public:\n+  template <class T> A(T p1) : fun_(p1) {}\n+  auto operator()() { fun_(this); }\n+};\n+\n+template <class Fun> auto y_combinator(Fun p1) { return A<decay_t<Fun>>(p1); }\n+\n+int\n+main()\n+{\n+  const unsigned int w = 1;\n+  auto foo = y_combinator([=](auto) { auto i = +w; });\n+  foo();\n+}"}]}