{"sha": "3e2a2957a078fb0c887fbc5298b9cfdda236a98d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2UyYTI5NTdhMDc4ZmIwYzg4N2ZiYzUyOThiOWNmZGRhMjM2YTk4ZA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "1998-08-27T14:51:55Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "1998-08-27T14:51:55Z"}, "message": "gthr.h: Document __GTHREAD_MUTEX_INIT_FUNCTION.\n\n        * gthr.h: Document __GTHREAD_MUTEX_INIT_FUNCTION.\n        * frame.c (init_object_mutex): New function.\n        (init_object_mutex_once): Likewise.\n        (find_fde): Call it.\n        (__register_frame_info): Likewise.\n        (__register_frame_info_table): Likewise.\n        (__deregister_frame_info): Likewise.\n\nFrom-SVN: r22023", "tree": {"sha": "3d77cb15075a98b5ee87af9c9accc33dd34623e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d77cb15075a98b5ee87af9c9accc33dd34623e3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e2a2957a078fb0c887fbc5298b9cfdda236a98d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e2a2957a078fb0c887fbc5298b9cfdda236a98d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e2a2957a078fb0c887fbc5298b9cfdda236a98d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e2a2957a078fb0c887fbc5298b9cfdda236a98d/comments", "author": null, "committer": null, "parents": [{"sha": "54c3cf4bb924467d56d7d724cf08ef0fad425414", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54c3cf4bb924467d56d7d724cf08ef0fad425414", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54c3cf4bb924467d56d7d724cf08ef0fad425414"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "d73a8cb0f5b4366762a10501277aa5bbfe5f9f65", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2a2957a078fb0c887fbc5298b9cfdda236a98d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2a2957a078fb0c887fbc5298b9cfdda236a98d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3e2a2957a078fb0c887fbc5298b9cfdda236a98d", "patch": "@@ -1,3 +1,13 @@\n+Wed Aug 26 17:13:37 1998  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* gthr.h: Document __GTHREAD_MUTEX_INIT_FUNCTION.\n+\t* frame.c (init_object_mutex): New function.\n+\t(init_object_mutex_once): Likewise.\n+\t(find_fde): Call it.\n+\t(__register_frame_info): Likewise.\n+\t(__register_frame_info_table): Likewise.\n+\t(__deregister_frame_info): Likewise.\n+\n Thu Aug 27 15:14:18 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* haifa-sched.c (sched_analyze_insn): Fix thinko in last change."}, {"sha": "b3d30c86f5ec90e5f376c175c91188b2ddf39250", "filename": "gcc/frame.c", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2a2957a078fb0c887fbc5298b9cfdda236a98d/gcc%2Fframe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2a2957a078fb0c887fbc5298b9cfdda236a98d/gcc%2Fframe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fframe.c?ref=3e2a2957a078fb0c887fbc5298b9cfdda236a98d", "patch": "@@ -1,6 +1,6 @@\n /* Subroutines needed for unwinding stack frames for exception handling.  */\n /* Compile this one with gcc.  */\n-/* Copyright (C) 1997 Free Software Foundation, Inc.\n+/* Copyright (C) 1997, 1998 Free Software Foundation, Inc.\n    Contributed by Jason Merrill <jason@cygnus.com>.\n \n This file is part of GNU CC.\n@@ -114,6 +114,33 @@ struct frame_state_internal\n   struct frame_state s;\n   struct frame_state_internal *saved_state;\n };\n+\f\n+/* This is undefined below if we need it to be an actual function.  */\n+#define init_object_mutex_once()\n+\n+#if __GTHREADS\n+#ifdef __GTHREAD_MUTEX_INIT_FUNCTION\n+\n+/* Helper for init_object_mutex_once.  */\n+\n+static void\n+init_object_mutex (void)\n+{\n+  __GTHREAD_MUTEX_INIT_FUNCTION (&object_mutex);\n+}\n+\n+/* Call this to arrange to initialize the object mutex.  */\n+\n+#undef init_object_mutex_once\n+static void\n+init_object_mutex_once (void)\n+{\n+  static __gthread_once_t once = __GTHREAD_ONCE_INIT;\n+  __gthread_once (&once, init_object_mutex);\n+}\n+\n+#endif /* __GTHREAD_MUTEX_INIT_FUNCTION */\n+#endif /* __GTHREADS */\n \f  \n /* Decode the unsigned LEB128 constant at BUF into the variable pointed to\n    by R, and return the new value of BUF.  */\n@@ -468,6 +495,7 @@ find_fde (void *pc)\n   struct object *ob;\n   size_t lo, hi;\n \n+  init_object_mutex_once ();\n   __gthread_mutex_lock (&object_mutex);\n \n   for (ob = objects; ob; ob = ob->next)\n@@ -685,6 +713,7 @@ __register_frame_info (void *begin, struct object *ob)\n   ob->fde_array = 0;\n   ob->count = 0;\n \n+  init_object_mutex_once ();\n   __gthread_mutex_lock (&object_mutex);\n \n   ob->next = objects;\n@@ -713,6 +742,7 @@ __register_frame_info_table (void *begin, struct object *ob)\n   ob->pc_begin = ob->pc_end = 0;\n   ob->count = 0;\n \n+  init_object_mutex_once ();\n   __gthread_mutex_lock (&object_mutex);\n \n   ob->next = objects;\n@@ -735,6 +765,7 @@ __deregister_frame_info (void *begin)\n {\n   struct object **p;\n \n+  init_object_mutex_once ();\n   __gthread_mutex_lock (&object_mutex);\n \n   p = &objects;"}, {"sha": "7511e35a7ab7ff71693fc9ea0b20d71f6263c6b8", "filename": "gcc/gthr.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2a2957a078fb0c887fbc5298b9cfdda236a98d/gcc%2Fgthr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2a2957a078fb0c887fbc5298b9cfdda236a98d/gcc%2Fgthr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr.h?ref=3e2a2957a078fb0c887fbc5298b9cfdda236a98d", "patch": "@@ -1,6 +1,6 @@\n /* Threads compatibily routines for libgcc2.  */\n /* Compile this one with gcc.  */\n-/* Copyright (C) 1997 Free Software Foundation, Inc.\n+/* Copyright (C) 1997, 1998 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -48,6 +48,12 @@ Boston, MA 02111-1307, USA.  */\n      __GTHREAD_MUTEX_INIT\n      \t\tto initialize __gthread_mutex_t to get a fast\n \t\tnon-recursive mutex.\n+     __GTHREAD_MUTEX_INIT_FUNCTION\n+     \t\tsome systems can't initalize a mutex without a\n+\t\tfunction call.  On such systems, define this to a\n+\t\tfunction which looks like this:\n+\t\t  void __GTHREAD_MUTEX_INIT_FUNCTION (__gthread_mutex_t *)\n+\t\tDon't define __GTHREAD_MUTEX_INIT in this case\n \n    The threads interface must define the following static functions:\n "}]}