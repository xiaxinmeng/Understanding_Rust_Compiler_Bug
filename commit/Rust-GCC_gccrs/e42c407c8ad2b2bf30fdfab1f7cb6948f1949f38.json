{"sha": "e42c407c8ad2b2bf30fdfab1f7cb6948f1949f38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQyYzQwN2M4YWQyYjJiZjMwZmRmYWIxZjdjYjY5NDhmMTk0OWYzOA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-12-01T15:26:10Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-12-01T15:26:10Z"}, "message": "constexpr.c (literal_type_p): Return true for void type in C++14.\n\n\t* constexpr.c (literal_type_p): Return true for void type in C++14.\n\n\t* g++.dg/cpp0x/constexpr-function2.C: Limit dg-error to C++11.\n\t* g++.dg/cpp0x/constexpr-neg1.C: Likewise.\n\t* g++.dg/cpp1y/constexpr-void1.C: New test.\n\nFrom-SVN: r218220", "tree": {"sha": "0cafcc47e67ab0a33504262784e400ad017401b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cafcc47e67ab0a33504262784e400ad017401b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e42c407c8ad2b2bf30fdfab1f7cb6948f1949f38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e42c407c8ad2b2bf30fdfab1f7cb6948f1949f38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e42c407c8ad2b2bf30fdfab1f7cb6948f1949f38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e42c407c8ad2b2bf30fdfab1f7cb6948f1949f38/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7a1811342e2bf412fa3ad4c023342d4aca47cb54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a1811342e2bf412fa3ad4c023342d4aca47cb54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a1811342e2bf412fa3ad4c023342d4aca47cb54"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "77b2b1e771e9b412a136b1439de776349c37a024", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42c407c8ad2b2bf30fdfab1f7cb6948f1949f38/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42c407c8ad2b2bf30fdfab1f7cb6948f1949f38/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e42c407c8ad2b2bf30fdfab1f7cb6948f1949f38", "patch": "@@ -1,3 +1,7 @@\n+2014-12-01  Marek Polacek  <polacek@redhat.com>\n+\n+\t* constexpr.c (literal_type_p): Return true for void type in C++14.\n+\n 2014-12-01  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/60845"}, {"sha": "6fdb9f3657c040b063a4b3e4e3381bae1c1afa3a", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42c407c8ad2b2bf30fdfab1f7cb6948f1949f38/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42c407c8ad2b2bf30fdfab1f7cb6948f1949f38/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=e42c407c8ad2b2bf30fdfab1f7cb6948f1949f38", "patch": "@@ -59,7 +59,8 @@ literal_type_p (tree t)\n {\n   if (SCALAR_TYPE_P (t)\n       || TREE_CODE (t) == VECTOR_TYPE\n-      || TREE_CODE (t) == REFERENCE_TYPE)\n+      || TREE_CODE (t) == REFERENCE_TYPE\n+      || (VOID_TYPE_P (t) && cxx_dialect >= cxx14))\n     return true;\n   if (CLASS_TYPE_P (t))\n     {"}, {"sha": "715ea975b9bf00f34643a47287b73fcfb73f35e7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42c407c8ad2b2bf30fdfab1f7cb6948f1949f38/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42c407c8ad2b2bf30fdfab1f7cb6948f1949f38/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e42c407c8ad2b2bf30fdfab1f7cb6948f1949f38", "patch": "@@ -1,3 +1,9 @@\n+2014-12-01  Marek Polacek  <polacek@redhat.com>\n+\n+\t* g++.dg/cpp0x/constexpr-function2.C: Limit dg-error to C++11.\n+\t* g++.dg/cpp0x/constexpr-neg1.C: Likewise.\n+\t* g++.dg/cpp1y/constexpr-void1.C: New test.\n+\n 2014-12-01  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/60845"}, {"sha": "95ee244e56b761c28210dca3e8c06de58c6a7329", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-function2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42c407c8ad2b2bf30fdfab1f7cb6948f1949f38/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-function2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42c407c8ad2b2bf30fdfab1f7cb6948f1949f38/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-function2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-function2.C?ref=e42c407c8ad2b2bf30fdfab1f7cb6948f1949f38", "patch": "@@ -23,7 +23,7 @@ constexpr int area = squarei(side); // { dg-error \"side|argument\" }\n int next(constexpr int x) // { dg-error \"parameter\" }\n { return x + 1; }\n \n-constexpr void f(int x)       // { dg-error \"return type .void\" }\n+constexpr void f(int x)       // { dg-error \"return type .void\" \"\" { target c++11_only } }\n { /* ... */ }\n \n constexpr int prev(int x)"}, {"sha": "dfa1d6bf12810e95eb0db3426bc1e7b0c09ee610", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-neg1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42c407c8ad2b2bf30fdfab1f7cb6948f1949f38/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-neg1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42c407c8ad2b2bf30fdfab1f7cb6948f1949f38/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-neg1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-neg1.C?ref=e42c407c8ad2b2bf30fdfab1f7cb6948f1949f38", "patch": "@@ -29,7 +29,7 @@ int next(constexpr int x) {\t// { dg-error \"parameter\" }\n extern constexpr int memsz;\t// { dg-error \"definition\" }\n \n // error: return type is void\n-constexpr void f(int x)\t\t// { dg-error \"void\" }\n+constexpr void f(int x)\t\t// { dg-error \"void\" \"\" { target c++11_only } }\n { /* ... */ }\n // error: use of decrement\n constexpr int prev(int x)"}, {"sha": "10ef5bc8a6e8226e66fc32f481622336ca7c47c9", "filename": "gcc/testsuite/g++.dg/cpp1y/constexpr-void1.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e42c407c8ad2b2bf30fdfab1f7cb6948f1949f38/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-void1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e42c407c8ad2b2bf30fdfab1f7cb6948f1949f38/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-void1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-void1.C?ref=e42c407c8ad2b2bf30fdfab1f7cb6948f1949f38", "patch": "@@ -0,0 +1,13 @@\n+// { dg-do compile { target c++14 } }\n+\n+struct S\n+{\n+  int i = 20;\n+\n+  constexpr void\n+  foo (void)\n+  {\n+    if (i > 20)\n+      __builtin_abort ();\n+  }\n+};"}]}