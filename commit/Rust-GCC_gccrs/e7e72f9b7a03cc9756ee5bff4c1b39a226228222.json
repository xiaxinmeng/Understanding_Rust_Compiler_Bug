{"sha": "e7e72f9b7a03cc9756ee5bff4c1b39a226228222", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdlNzJmOWI3YTAzY2M5NzU2ZWU1YmZmNGMxYjM5YTIyNjIyODIyMg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-10-09T15:05:24Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-10-09T15:05:24Z"}, "message": "[Ada] Spurious error message on visibiliy change in aspect expression\n\nThis patch removes an improper error message on a visibility change in\nan aspect expression between the freeze point and the end of the\ndeclaration list, when the expression involves a call to a instance of\nUnchecked_Conversion and the enclosing package declaration has a package\nbody with multiple subprogram bodies.\n\nThe following must compile quietly:\n\n----\npackage body Par.Rep is\n   procedure Nothing is begin null; end;\n   procedure Rien is begin null; end;\nend;\n----\nwith Par.Loc;\npackage Par.Rep is\n   type Rec is record\n      X, Y : Integer;\n   end record\n      with Volatile;\n\n   Thing2 : Unsigned_32 := 15;\n   Thing3 : Rec\n    with Volatile, Address => To_Address (Par.Loc.Flash_Base);\n    procedure Nothing;\nend;\n----\npragma Restrictions (No_Elaboration_Code);\nwith interfaces;  use interfaces;\npragma unreferenced (interfaces);\nwith Tp;       use Tp;\npragma unreferenced (Tp);\npackage Par is\nend Par;\n----\nwith Ada.Unchecked_Conversion;\nwith System;\nwith Interfaces; use Interfaces;\npackage Tp is\nsubtype system_address is unsigned_32;\n   function to_address is new\n      ada.unchecked_conversion (system_address, system.address);\n   function To_32 is new\n      ada.unchecked_conversion (System.Address, System_Address);\nend;\n----\nwith TP; use TP;\npackage Par.Loc is\nFLASH_BASE        : constant system_address := 16#0800_0000#;\nend;\n\n2018-10-09  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch6.adb (Fully_Conformant_Expressions): Handle properly\n\tthe conformance check on an aspect expression that includes a\n\tcall to an instance of Unchecked_Conversion, or more generally a\n\tcall to an intrinsic operation.\n\nFrom-SVN: r264966", "tree": {"sha": "7e026190176104b876c652366d5fa46ad5072d29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e026190176104b876c652366d5fa46ad5072d29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7e72f9b7a03cc9756ee5bff4c1b39a226228222", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7e72f9b7a03cc9756ee5bff4c1b39a226228222", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7e72f9b7a03cc9756ee5bff4c1b39a226228222", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7e72f9b7a03cc9756ee5bff4c1b39a226228222/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "96d268c284c3584a743bb679f06bf3e2bf36b3ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96d268c284c3584a743bb679f06bf3e2bf36b3ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96d268c284c3584a743bb679f06bf3e2bf36b3ed"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "e7ce7ee15dfddb87a22ac7680e8350df22de66de", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7e72f9b7a03cc9756ee5bff4c1b39a226228222/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7e72f9b7a03cc9756ee5bff4c1b39a226228222/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e7e72f9b7a03cc9756ee5bff4c1b39a226228222", "patch": "@@ -1,3 +1,10 @@\n+2018-10-09  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Fully_Conformant_Expressions): Handle properly\n+\tthe conformance check on an aspect expression that includes a\n+\tcall to an instance of Unchecked_Conversion, or more generally a\n+\tcall to an intrinsic operation.\n+\n 2018-10-09  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* repinfo.adb: Remove with/use clause for Stand."}, {"sha": "166987ad016481c600811494401ae695792e249f", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7e72f9b7a03cc9756ee5bff4c1b39a226228222/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7e72f9b7a03cc9756ee5bff4c1b39a226228222/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=e7e72f9b7a03cc9756ee5bff4c1b39a226228222", "patch": "@@ -8932,7 +8932,17 @@ package body Sem_Ch6 is\n               or else\n                 (Chars (Entity (E1)) = Chars (Entity (E2))\n                   and then Ekind (Entity (E1)) = E_Loop_Parameter\n-                  and then Ekind (Entity (E2)) = E_Loop_Parameter);\n+                  and then Ekind (Entity (E2)) = E_Loop_Parameter)\n+\n+              --  A call to an instantiation of Unchecked_Conversion is\n+              --  rewritten with the name of the generated function\n+              --  created for the instance, and this must be special-cased.\n+\n+              or else\n+                 (Ekind (Entity (E1)) = E_Function\n+                   and then Is_Intrinsic_Subprogram (Entity (E1))\n+                   and then Is_Generic_Instance (Entity (E1))\n+                   and then Entity (E2) = Alias (Entity (E1)));\n \n          elsif Nkind (E1) = N_Expanded_Name\n            and then Nkind (E2) = N_Expanded_Name"}]}