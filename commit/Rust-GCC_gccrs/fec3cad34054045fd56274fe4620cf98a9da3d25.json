{"sha": "fec3cad34054045fd56274fe4620cf98a9da3d25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmVjM2NhZDM0MDU0MDQ1ZmQ1NjI3NGZlNDYyMGNmOThhOWRhM2QyNQ==", "commit": {"author": {"name": "Kai Tietz", "email": "ktietz@redhat.com", "date": "2011-07-21T09:42:04Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2011-07-21T09:42:04Z"}, "message": "tree-ssa-propagate.c (substitute_and_fold): Use do_dce flag to deside...\n\n2011-07-21  Kai Tietz  <ktietz@redhat.com>\n\n\t* tree-ssa-propagate.c (substitute_and_fold): Use\n\tdo_dce flag to deside, if BB's statements are scanned\n\tin last to first, or first to last order.\n\nFrom-SVN: r176556", "tree": {"sha": "65239fc507c029f4659438c9ef167e619cbd2d4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65239fc507c029f4659438c9ef167e619cbd2d4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fec3cad34054045fd56274fe4620cf98a9da3d25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fec3cad34054045fd56274fe4620cf98a9da3d25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fec3cad34054045fd56274fe4620cf98a9da3d25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fec3cad34054045fd56274fe4620cf98a9da3d25/comments", "author": null, "committer": null, "parents": [{"sha": "21f3ae2f34dcf2e344c3cbbacb9f0103629ce214", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21f3ae2f34dcf2e344c3cbbacb9f0103629ce214", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21f3ae2f34dcf2e344c3cbbacb9f0103629ce214"}], "stats": {"total": 21, "additions": 17, "deletions": 4}, "files": [{"sha": "2f3578696b9a64c395e2b72749cada25b68220fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fec3cad34054045fd56274fe4620cf98a9da3d25/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fec3cad34054045fd56274fe4620cf98a9da3d25/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fec3cad34054045fd56274fe4620cf98a9da3d25", "patch": "@@ -1,3 +1,9 @@\n+2011-07-21  Kai Tietz  <ktietz@redhat.com>\n+\n+\t* tree-ssa-propagate.c (substitute_and_fold): Use\n+\tdo_dce flag to deside, if BB's statements are scanned\n+\tin last to first, or first to last order.\n+\n 2011-07-21  Georg-Johann Lay  <avr@gjlay.de>\n \t\n \t* config/avr/avr.c (avr_rtx_costs): Set cost of CONST, LABEL_REF to 0."}, {"sha": "7741db886866f396caa634ad75324ac23aba9b1e", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fec3cad34054045fd56274fe4620cf98a9da3d25/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fec3cad34054045fd56274fe4620cf98a9da3d25/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=fec3cad34054045fd56274fe4620cf98a9da3d25", "patch": "@@ -966,6 +966,9 @@ replace_phi_args_in (gimple phi, ssa_prop_get_value_fn get_value)\n \n    DO_DCE is true if trivially dead stmts can be removed.\n \n+   If DO_DCE is true, the statements within a BB are walked from\n+   last to first element.  Otherwise we scan from first to last element.\n+\n    Return TRUE when something changed.  */\n \n bool\n@@ -1046,9 +1049,10 @@ substitute_and_fold (ssa_prop_get_value_fn get_value_fn,\n \tfor (i = gsi_start_phis (bb); !gsi_end_p (i); gsi_next (&i))\n \t  replace_phi_args_in (gsi_stmt (i), get_value_fn);\n \n-      /* Propagate known values into stmts.  Do a backward walk to expose\n-\t more trivially deletable stmts.  */\n-      for (i = gsi_last_bb (bb); !gsi_end_p (i);)\n+      /* Propagate known values into stmts.  Do a backward walk if\n+         do_dce is true. In some case it exposes\n+\t more trivially deletable stmts to walk backward.  */\n+      for (i = (do_dce ? gsi_last_bb (bb) : gsi_start_bb (bb)); !gsi_end_p (i);)\n \t{\n           bool did_replace;\n \t  gimple stmt = gsi_stmt (i);\n@@ -1057,7 +1061,10 @@ substitute_and_fold (ssa_prop_get_value_fn get_value_fn,\n \t  gimple_stmt_iterator oldi;\n \n \t  oldi = i;\n-\t  gsi_prev (&i);\n+\t  if (do_dce)\n+\t    gsi_prev (&i);\n+\t  else\n+\t    gsi_next (&i);\n \n \t  /* Ignore ASSERT_EXPRs.  They are used by VRP to generate\n \t     range information for names and they are discarded"}]}