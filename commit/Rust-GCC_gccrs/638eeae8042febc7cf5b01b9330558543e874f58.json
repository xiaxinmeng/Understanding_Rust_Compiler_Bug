{"sha": "638eeae8042febc7cf5b01b9330558543e874f58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM4ZWVhZTgwNDJmZWJjN2NmNWIwMWI5MzMwNTU4NTQzZTg3NGY1OA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-07-19T15:44:00Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-07-19T15:44:00Z"}, "message": "decl.c (gnat_to_gnu_entity): Do not look up the REP part of the base type in advance.\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Record_Subtype>: Do not\n\tlook up the REP part of the base type in advance.  Deal with that of\n\tthe variant types.\n\t(get_rep_part): Be prepared for record types with fields.\n\nFrom-SVN: r189666", "tree": {"sha": "0267038b3e69b3d7fa32dd94de5363494d3bd72a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0267038b3e69b3d7fa32dd94de5363494d3bd72a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/638eeae8042febc7cf5b01b9330558543e874f58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/638eeae8042febc7cf5b01b9330558543e874f58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/638eeae8042febc7cf5b01b9330558543e874f58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/638eeae8042febc7cf5b01b9330558543e874f58/comments", "author": null, "committer": null, "parents": [{"sha": "9786913b86c31058adf21f8f093a672b9c0170de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9786913b86c31058adf21f8f093a672b9c0170de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9786913b86c31058adf21f8f093a672b9c0170de"}], "stats": {"total": 63, "additions": 57, "deletions": 6}, "files": [{"sha": "be2733b80a0fcf51046f5f435bb4d22aaa8786b3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638eeae8042febc7cf5b01b9330558543e874f58/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638eeae8042febc7cf5b01b9330558543e874f58/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=638eeae8042febc7cf5b01b9330558543e874f58", "patch": "@@ -1,3 +1,10 @@\n+2012-07-19  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Record_Subtype>: Do not\n+\tlook up the REP part of the base type in advance.  Deal with that of\n+\tthe variant types.\n+\t(get_rep_part): Be prepared for record types with fields.\n+\n 2012-07-18  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (stmt_group_may_fallthru): New function."}, {"sha": "2aa20e77a1f70704e59064eafb45a949ad803b11", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638eeae8042febc7cf5b01b9330558543e874f58/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638eeae8042febc7cf5b01b9330558543e874f58/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=638eeae8042febc7cf5b01b9330558543e874f58", "patch": "@@ -3287,9 +3287,6 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t      else\n \t\tgnu_unpad_base_type = gnu_base_type;\n \n-\t      /* Look for a REP part in the base type.  */\n-\t      gnu_rep_part = get_rep_part (gnu_unpad_base_type);\n-\n \t      /* Look for a variant part in the base type.  */\n \t      gnu_variant_part = get_variant_part (gnu_unpad_base_type);\n \n@@ -3415,7 +3412,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t\t       and put the field either in the new type if there is a\n \t\t       selected variant or in one of the new variants.  */\n \t\t    if (gnu_context == gnu_unpad_base_type\n-\t\t        || (gnu_rep_part\n+\t\t        || ((gnu_rep_part = get_rep_part (gnu_unpad_base_type))\n \t\t\t    && gnu_context == TREE_TYPE (gnu_rep_part)))\n \t\t      gnu_cont_type = gnu_type;\n \t\t    else\n@@ -3425,7 +3422,9 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \n \t\t\tt = NULL_TREE;\n \t\t\tFOR_EACH_VEC_ELT (variant_desc, gnu_variant_list, i, v)\n-\t\t\t  if (v->type == gnu_context)\n+\t\t\t  if (gnu_context == v->type\n+\t\t\t      || ((gnu_rep_part = get_rep_part (v->type))\n+\t\t\t\t  && gnu_context == TREE_TYPE (gnu_rep_part)))\n \t\t\t    {\n \t\t\t      t = v->type;\n \t\t\t      break;\n@@ -8172,7 +8171,8 @@ get_rep_part (tree record_type)\n \n   /* The REP part is the first field, internal, another record, and its name\n      starts with an 'R'.  */\n-  if (DECL_INTERNAL_P (field)\n+  if (field\n+      && DECL_INTERNAL_P (field)\n       && TREE_CODE (TREE_TYPE (field)) == RECORD_TYPE\n       && IDENTIFIER_POINTER (DECL_NAME (field)) [0] == 'R')\n     return field;"}, {"sha": "e7aac5f5f08d0761ef104cb111a528301bedac70", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638eeae8042febc7cf5b01b9330558543e874f58/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638eeae8042febc7cf5b01b9330558543e874f58/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=638eeae8042febc7cf5b01b9330558543e874f58", "patch": "@@ -1,3 +1,7 @@\n+2012-07-19  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/discr38.adb: New test.\n+\n 2012-07-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/54017"}, {"sha": "363d2c6f606917e78d84a3fe34b47e0cc53ca615", "filename": "gcc/testsuite/gnat.dg/discr38.adb", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/638eeae8042febc7cf5b01b9330558543e874f58/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr38.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/638eeae8042febc7cf5b01b9330558543e874f58/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr38.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr38.adb?ref=638eeae8042febc7cf5b01b9330558543e874f58", "patch": "@@ -0,0 +1,40 @@\n+-- { dg-do compile }\r\n+\r\n+procedure Discr38 is\r\n+\r\n+   type Enum is (OK,\r\n+                 NOT_CONNECTED,\r\n+                 DISCONNECTED,\r\n+                 REQUEST_Q_EMPTY,\r\n+                 SERVER_UNAVAILABLE,\r\n+                 BUFFER_TOO_SMALL,\r\n+                 NO_FREE_SLOT,\r\n+                 RAISE_EXCEPTION,\r\n+                 REQUEST_CANCELLED,\r\n+                 REQUEST_IN_PROGRESS,\r\n+                 SERVER_BUSY,\r\n+                 BLOCK_ACKNOWLEDGE);\r\n+\r\n+   type R (Status : Enum := OK) is record\r\n+      Status_Block : Integer;\r\n+      case Status is\r\n+      when RAISE_EXCEPTION =>\r\n+         I : Integer;\r\n+      when OK =>\r\n+         Length : Natural;\r\n+         Data   : Integer;\r\n+      when others =>\r\n+         null;\r\n+      end case;\r\n+   end record;\r\n+   for R use record\r\n+      Status        at  0 range 0 .. 7;\r\n+      Status_Block  at  4 range 0 .. 31;\r\n+      Length        at  8 range 0 .. 31;\r\n+   end record;\r\n+\r\n+   Nil : constant R := (OK, 1, 0, 1);\r\n+\r\n+begin\r\n+   null;\r\n+end;\r"}]}