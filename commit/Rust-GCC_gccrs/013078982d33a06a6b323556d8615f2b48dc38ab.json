{"sha": "013078982d33a06a6b323556d8615f2b48dc38ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDEzMDc4OTgyZDMzYTA2YTZiMzIzNTU2ZDg2MTVmMmI0OGRjMzhhYg==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2014-08-09T08:00:59Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2014-08-09T08:00:59Z"}, "message": "re PR libstdc++/61667 (setting max_load_factor of unordered_map cause buckets shrink)\n\n2014-08-09  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n\n\tPR libstdc++/61667\n\t* include/bits/hashtable.h (_Hashtable<>::__rehash_policy): Use\n\t_M_need_rehash to initialize the rehash policy and check if a rehash is\n\tneeded.\n\t* testsuite/23_containers/unordered_map/modifiers/61667.cc: New.\n\nFrom-SVN: r213775", "tree": {"sha": "bfea6221ffb1a89f776738cf631fb37b682fd86f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfea6221ffb1a89f776738cf631fb37b682fd86f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/013078982d33a06a6b323556d8615f2b48dc38ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/013078982d33a06a6b323556d8615f2b48dc38ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/013078982d33a06a6b323556d8615f2b48dc38ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/013078982d33a06a6b323556d8615f2b48dc38ab/comments", "author": null, "committer": null, "parents": [{"sha": "b5bdf598f9a3fa0c883982a95517bf4477796dd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5bdf598f9a3fa0c883982a95517bf4477796dd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5bdf598f9a3fa0c883982a95517bf4477796dd2"}], "stats": {"total": 60, "additions": 56, "deletions": 4}, "files": [{"sha": "bd8677ec4736195f8caa648a0a4714090ad5e418", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/013078982d33a06a6b323556d8615f2b48dc38ab/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/013078982d33a06a6b323556d8615f2b48dc38ab/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=013078982d33a06a6b323556d8615f2b48dc38ab", "patch": "@@ -1,3 +1,11 @@\n+2014-08-09  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\tPR libstdc++/61667\n+\t* include/bits/hashtable.h (_Hashtable<>::__rehash_policy): Use\n+\t_M_need_rehash to initialize the rehash policy and check if a rehash is\n+\tneeded.\n+\t* testsuite/23_containers/unordered_map/modifiers/61667.cc: New.\n+\n 2014-08-07  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/bits/stl_list.h (_List_base::_List_base(_List_base&&)):"}, {"sha": "588e69c9d4d3e0be9b12ee031e9d52fb49615cd6", "filename": "libstdc++-v3/include/bits/hashtable.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/013078982d33a06a6b323556d8615f2b48dc38ab/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/013078982d33a06a6b323556d8615f2b48dc38ab/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h?ref=013078982d33a06a6b323556d8615f2b48dc38ab", "patch": "@@ -1281,10 +1281,10 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t       _H1, _H2, _Hash, _RehashPolicy, _Traits>::\n     __rehash_policy(const _RehashPolicy& __pol)\n     {\n-      size_type __n_bkt = __pol._M_bkt_for_elements(_M_element_count);\n-      __n_bkt = __pol._M_next_bkt(__n_bkt);\n-      if (__n_bkt != _M_bucket_count)\n-\t_M_rehash(__n_bkt, _M_rehash_policy._M_state());\n+      auto __do_rehash =\n+\t__pol._M_need_rehash(_M_bucket_count, _M_element_count, 0);\n+      if (__do_rehash.first)\n+\t_M_rehash(__do_rehash.second, _M_rehash_policy._M_state());\n       _M_rehash_policy = __pol;\n     }\n "}, {"sha": "cb4ad8ecb415a43b67d0b1b5fe82cf731f973353", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/modifiers/61667.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/013078982d33a06a6b323556d8615f2b48dc38ab/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fmodifiers%2F61667.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/013078982d33a06a6b323556d8615f2b48dc38ab/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fmodifiers%2F61667.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Fmodifiers%2F61667.cc?ref=013078982d33a06a6b323556d8615f2b48dc38ab", "patch": "@@ -0,0 +1,44 @@\n+// { dg-options \"-std=gnu++11\" }\n+\n+// Copyright (C) 2011-2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <unordered_map>\n+#include <testsuite_hooks.h>\n+\n+bool test __attribute__((unused)) = true;\n+\n+void test01()\n+{\n+  std::unordered_map<int, int> um(20);\n+\n+  std::size_t bkt_count = um.bucket_count();\n+\n+  um.max_load_factor(um.max_load_factor());\n+\n+  VERIFY( um.bucket_count() >= bkt_count );\n+\n+  um.max_load_factor(um.max_load_factor() * 2.f);\n+\n+  VERIFY( um.bucket_count() >= bkt_count );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}