{"sha": "bbf14e1350d3054e02ac9d83b61b84cc23d2c157", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJmMTRlMTM1MGQzMDU0ZTAyYWM5ZDgzYjYxYjg0Y2MyM2QyYzE1Nw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-10-12T07:50:53Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-25T13:22:26Z"}, "message": "[Ada] Allow debugging finalization-related expanded code\n\ngcc/ada/\n\n\t* exp_ch7.adb (Build_Finalization_Master, Build_Finalizer,\n\tBuild_Object_Declarations, Make_Deep_Array_Body,\n\tWrap_Transient_Expression): Call Set_Debug_Info_Needed on\n\ttemporaries when Debug_Generated_Code is True.", "tree": {"sha": "9c51afc5982fe8e3e6313693473040e49dee166e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c51afc5982fe8e3e6313693473040e49dee166e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbf14e1350d3054e02ac9d83b61b84cc23d2c157", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbf14e1350d3054e02ac9d83b61b84cc23d2c157", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbf14e1350d3054e02ac9d83b61b84cc23d2c157", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbf14e1350d3054e02ac9d83b61b84cc23d2c157/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf4737dcec18336b735a46d524bd8ef056e3d245", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf4737dcec18336b735a46d524bd8ef056e3d245", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf4737dcec18336b735a46d524bd8ef056e3d245"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "411df73328ee4639008d44b6980dd3e5e35eb14e", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 33, "deletions": 1, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf14e1350d3054e02ac9d83b61b84cc23d2c157/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf14e1350d3054e02ac9d83b61b84cc23d2c157/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=bbf14e1350d3054e02ac9d83b61b84cc23d2c157", "patch": "@@ -1273,6 +1273,10 @@ package body Exp_Ch7 is\n              Object_Definition   =>\n                New_Occurrence_Of (RTE (RE_Finalization_Master), Loc)));\n \n+         if Debug_Generated_Code then\n+            Set_Debug_Info_Needed (Fin_Mas_Id);\n+         end if;\n+\n          --  Set the associated pool and primitive Finalize_Address of the new\n          --  finalization master.\n \n@@ -1616,6 +1620,10 @@ package body Exp_Ch7 is\n \n             Set_Etype (Counter_Id, Counter_Typ);\n \n+            if Debug_Generated_Code then\n+               Set_Debug_Info_Needed (Counter_Id);\n+            end if;\n+\n             --  The counter and its type are inserted before the source\n             --  declarations of N.\n \n@@ -1778,7 +1786,11 @@ package body Exp_Ch7 is\n             --  exactly twice (once on the normal path, and once for\n             --  exceptions/abort), so this won't bloat the code too much.\n \n-            Set_Is_Inlined  (Fin_Id);\n+            Set_Is_Inlined (Fin_Id);\n+         end if;\n+\n+         if Debug_Generated_Code then\n+            Set_Debug_Info_Needed (Fin_Id);\n          end if;\n \n          --  Step 2: Creation of the finalizer specification\n@@ -1969,6 +1981,10 @@ package body Exp_Ch7 is\n \n          Body_Id := Make_Defining_Identifier (Loc, Chars (Fin_Id));\n \n+         if Debug_Generated_Code then\n+            Set_Debug_Info_Needed (Body_Id);\n+         end if;\n+\n          if For_Package then\n             Set_Has_Qualified_Name       (Body_Id);\n             Set_Has_Fully_Qualified_Name (Body_Id);\n@@ -2648,6 +2664,10 @@ package body Exp_Ch7 is\n             Set_Finalization_Master     (Ptr_Typ, Fin_Mas_Id);\n             Set_Associated_Storage_Pool (Ptr_Typ, Pool_Id);\n \n+            if Debug_Generated_Code then\n+               Set_Debug_Info_Needed (Pool_Id);\n+            end if;\n+\n             --  Create an explicit free statement. Note that the free uses the\n             --  caller's pool expressed as a renaming.\n \n@@ -3741,6 +3761,10 @@ package body Exp_Ch7 is\n           Defining_Identifier => Data.Raised_Id,\n           Object_Definition   => New_Occurrence_Of (Standard_Boolean, Loc),\n           Expression          => New_Occurrence_Of (Standard_False, Loc)));\n+\n+      if Debug_Generated_Code then\n+         Set_Debug_Info_Needed (Data.Raised_Id);\n+      end if;\n    end Build_Object_Declarations;\n \n    ---------------------------\n@@ -6906,6 +6930,10 @@ package body Exp_Ch7 is\n                  Make_Handled_Sequence_Of_Statements (Loc,\n                    Statements => New_List (Init_Loop)));\n \n+            if Debug_Generated_Code then\n+               Set_Debug_Info_Needed (Counter_Id);\n+            end if;\n+\n          --  Otherwise previous errors or a missing full view may prevent the\n          --  proper freezing of the component type. If this is the case, there\n          --  is no [Deep_]Initialize primitive to call.\n@@ -9681,6 +9709,10 @@ package body Exp_Ch7 is\n               Expression => Expr),\n           Par    => Parent (N))));\n \n+      if Debug_Generated_Code then\n+         Set_Debug_Info_Needed (Temp);\n+      end if;\n+\n       Rewrite (N, New_Occurrence_Of (Temp, Loc));\n       Analyze_And_Resolve (N, Typ);\n    end Wrap_Transient_Expression;"}]}