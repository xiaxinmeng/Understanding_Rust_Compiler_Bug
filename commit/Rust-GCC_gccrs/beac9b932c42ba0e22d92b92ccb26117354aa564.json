{"sha": "beac9b932c42ba0e22d92b92ccb26117354aa564", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVhYzliOTMyYzQyYmEwZTIyZDkyYjkyY2NiMjYxMTczNTRhYTU2NA==", "commit": {"author": {"name": "Alex Samuel", "email": "samuel@codesourcery.com", "date": "2000-11-21T04:38:08Z"}, "committer": {"name": "Alex Samuel", "email": "samuel@gcc.gnu.org", "date": "2000-11-21T04:38:08Z"}, "message": "mangle.c (write_name): Use <unscoped-name> for names directly in function scope.\n\n\t* mangle.c (write_name): Use <unscoped-name> for names directly in\n\tfunction scope.\n\t(write_unscoped_name): Accept names directly in function scope.\n\nFrom-SVN: r37603", "tree": {"sha": "1c89e6bc8283aeae28a745a831bd8892d09de06b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c89e6bc8283aeae28a745a831bd8892d09de06b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/beac9b932c42ba0e22d92b92ccb26117354aa564", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beac9b932c42ba0e22d92b92ccb26117354aa564", "html_url": "https://github.com/Rust-GCC/gccrs/commit/beac9b932c42ba0e22d92b92ccb26117354aa564", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beac9b932c42ba0e22d92b92ccb26117354aa564/comments", "author": null, "committer": null, "parents": [{"sha": "5d81021ea10554480ecd0054a65461675a31b847", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d81021ea10554480ecd0054a65461675a31b847", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d81021ea10554480ecd0054a65461675a31b847"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "c75edb942ccbf501fb55d4b1cd04e7f2089f3bfc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beac9b932c42ba0e22d92b92ccb26117354aa564/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beac9b932c42ba0e22d92b92ccb26117354aa564/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=beac9b932c42ba0e22d92b92ccb26117354aa564", "patch": "@@ -1,3 +1,9 @@\n+2000-11-16  Alex Samuel  <samuel@codesourcery.com>\n+\n+\t* mangle.c (write_name): Use <unscoped-name> for names directly in\n+\tfunction scope.\n+\t(write_unscoped_name): Accept names directly in function scope.\n+\t\n 2000-11-20  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* lex.c (rid_to_yy, RID_EXPORT): Make unique keyword."}, {"sha": "d4ffaff26c5782e1e88cfea0e2ab206251521e5d", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beac9b932c42ba0e22d92b92ccb26117354aa564/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beac9b932c42ba0e22d92b92ccb26117354aa564/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=beac9b932c42ba0e22d92b92ccb26117354aa564", "patch": "@@ -674,10 +674,15 @@ write_name (decl, ignore_local_scope)\n   else\n     context = (DECL_CONTEXT (decl) == NULL) ? NULL : CP_DECL_CONTEXT (decl);\n \n-  /* Decls in :: or ::std scope are treated specially.  */\n+  /* A decl in :: or ::std scope is treated specially.  The former is\n+     mangled using <unscoped-name> or <unscoped-template-name>, the\n+     latter with a special substitution.  Also, a name that is\n+     directly in a local function scope is also mangled with\n+     <unscoped-name> rather than a full <nested-name>.  */\n   if (context == NULL \n       || context == global_namespace \n-      || DECL_NAMESPACE_STD_P (context))\n+      || DECL_NAMESPACE_STD_P (context)\n+      || (ignore_local_scope && TREE_CODE (context) == FUNCTION_DECL))\n     {\n       tree template_info;\n       /* Is this a template instance?  */\n@@ -748,8 +753,11 @@ write_unscoped_name (decl)\n       write_string (\"St\");\n       write_unqualified_name (decl);\n     }\n-  /* If not, it should be in the global namespace.  */\n-  else if (context == global_namespace || context == NULL)\n+  /* If not, it should be either in the global namespace, or directly\n+     in a local function scope.  */\n+  else if (context == global_namespace \n+\t   || context == NULL\n+\t   || TREE_CODE (context) == FUNCTION_DECL)\n     write_unqualified_name (decl);\n   else \n     my_friendly_abort (20000521);"}]}