{"sha": "178b2b9f0f31ed70e30d802db7d0aced8de5fd3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc4YjJiOWYwZjMxZWQ3MGUzMGQ4MDJkYjdkMGFjZWQ4ZGU1ZmQzYw==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2003-08-03T03:23:18Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2003-08-03T03:23:18Z"}, "message": "builtin-types.def (BT_SSIZE): New primitive type.\n\n\n\t* builtin-types.def (BT_SSIZE): New primitive type.\n\t(BT_FN_INT_PTR_CONST_STRING_VALIST_ARG,\n\tBT_FN_STRING_CONST_STRING_CONST_STRING_INT,\n\tBT_FN_SIZE_STRING_SIZE_CONST_STRING_CONST_PTR,\n\tBT_FN_SSIZE_STRING_SIZE_CONST_STRING_VAR): New function types.\n\t* builtins.def (BUILT_IN_DCGETTEXT, BUILT_IN_DGETTEXT,\n\tBUILT_IN_FSCANF, BUILT_IN_GETTEXT, BUILT_IN_STRFMON,\n\tBUILT_IN_STRFTIME, BUILT_IN_VFPRINTF, BUILT_IN_VFSCANF): New builtins.\n\t* builtin-attrs.def: Remove DEF_FN_ATTR construct and the last\n\tfew functions that define default attributes using it.\n\t* c-common.c (c_common_insert_default_attributes): Do nothing.\n\n\t* doc/extend.texi: Document these \"new\" builtins.\n\nFrom-SVN: r70113", "tree": {"sha": "05e22e5ba8a5e2fd79767f7411cf1d5e8b09c93b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05e22e5ba8a5e2fd79767f7411cf1d5e8b09c93b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/178b2b9f0f31ed70e30d802db7d0aced8de5fd3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/178b2b9f0f31ed70e30d802db7d0aced8de5fd3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/178b2b9f0f31ed70e30d802db7d0aced8de5fd3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/178b2b9f0f31ed70e30d802db7d0aced8de5fd3c/comments", "author": null, "committer": null, "parents": [{"sha": "469146c134f35dd015742eb02bc78a580dc9f043", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/469146c134f35dd015742eb02bc78a580dc9f043", "html_url": "https://github.com/Rust-GCC/gccrs/commit/469146c134f35dd015742eb02bc78a580dc9f043"}], "stats": {"total": 125, "additions": 52, "deletions": 73}, "files": [{"sha": "e9e340f8a76d1683a711c99f8dea7739c9efbbd7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178b2b9f0f31ed70e30d802db7d0aced8de5fd3c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178b2b9f0f31ed70e30d802db7d0aced8de5fd3c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=178b2b9f0f31ed70e30d802db7d0aced8de5fd3c", "patch": "@@ -1,3 +1,19 @@\n+2003-08-02  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* builtin-types.def (BT_SSIZE): New primitive type.\n+\t(BT_FN_INT_PTR_CONST_STRING_VALIST_ARG,\n+\tBT_FN_STRING_CONST_STRING_CONST_STRING_INT,\n+\tBT_FN_SIZE_STRING_SIZE_CONST_STRING_CONST_PTR,\n+\tBT_FN_SSIZE_STRING_SIZE_CONST_STRING_VAR): New function types.\n+\t* builtins.def (BUILT_IN_DCGETTEXT, BUILT_IN_DGETTEXT,\n+\tBUILT_IN_FSCANF, BUILT_IN_GETTEXT, BUILT_IN_STRFMON,\n+\tBUILT_IN_STRFTIME, BUILT_IN_VFPRINTF, BUILT_IN_VFSCANF): New builtins.\n+\t* builtin-attrs.def: Remove DEF_FN_ATTR construct and the last\n+\tfew functions that define default attributes using it.\n+\t* c-common.c (c_common_insert_default_attributes): Do nothing.\n+\n+\t* doc/extend.texi: Document these \"new\" builtins.\n+\n 2003-08-02  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* config/sh/linux.h (SUBTARGET_LINK_SPEC): Don't set rpath."}, {"sha": "66f75187ad6c040cbce3b7dd00f8d589e79abb3d", "filename": "gcc/builtin-attrs.def", "status": "modified", "additions": 1, "deletions": 47, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178b2b9f0f31ed70e30d802db7d0aced8de5fd3c/gcc%2Fbuiltin-attrs.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178b2b9f0f31ed70e30d802db7d0aced8de5fd3c/gcc%2Fbuiltin-attrs.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltin-attrs.def?ref=178b2b9f0f31ed70e30d802db7d0aced8de5fd3c", "patch": "@@ -41,13 +41,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n    DEF_ATTR_TREE_LIST (ENUM, PURPOSE, VALUE, CHAIN)\n \n      Constructs a TREE_LIST with given PURPOSE, VALUE and CHAIN (given\n-     as previous ENUM names).\n-\n-   DEF_FN_ATTR (NAME, ATTRS, PREDICATE)\n-\n-     Specifies that the function with name NAME (a previous ENUM for an\n-     IDENTIFIER_NODE) has attributes ATTRS (a previous ENUM) if\n-     PREDICATE is true.  */\n+     as previous ENUM names).  */\n \n DEF_ATTR_NULL_TREE (ATTR_NULL)\n \n@@ -157,43 +151,3 @@ DEF_FORMAT_ARG_ATTRIBUTE(1)\n DEF_FORMAT_ARG_ATTRIBUTE(2)\n #undef DEF_FORMAT_ARG_ATTRIBUTE\n \n-/* Define an attribute for a function, along with the IDENTIFIER_NODE.  */\n-#define DEF_FN_ATTR_IDENT(NAME, ATTRS, PREDICATE)\t\\\n-  DEF_ATTR_IDENT (ATTR_##NAME, #NAME)\t\t\t\\\n-  DEF_FN_ATTR (ATTR_##NAME, ATTRS, PREDICATE)\n-\n-/* The ISO C functions are always checked (whether <stdio.h> is\n-   included or not), since it is common to call printf without\n-   including <stdio.h>.  There shouldn't be a problem with this,\n-   since ISO C reserves these function names whether you include the\n-   header file or not.  In any case, the checking is harmless.  With\n-   -ffreestanding, these default attributes are disabled, and must be\n-   specified manually if desired.  */\n-\n-/* Functions from ISO/IEC 9899:1990.  */\n-#define DEF_C89_ATTR(NAME, ATTRS) DEF_FN_ATTR_IDENT (NAME, ATTRS, flag_hosted)\n-DEF_C89_ATTR (fscanf, ATTR_FORMAT_SCANF_2_3)\n-DEF_C89_ATTR (vfprintf, ATTR_FORMAT_PRINTF_2_0)\n-DEF_C89_ATTR (strftime, ATTR_FORMAT_STRFTIME_3_0)\n-#undef DEF_C89_ATTR\n-\n-/* ISO C99 adds the snprintf and vscanf family functions.  */\n-#define DEF_C99_ATTR(NAME, ATTRS)\t\t\t\t\t    \\\n-  DEF_FN_ATTR_IDENT (NAME, ATTRS,\t\t\t\t\t    \\\n-\t       (flag_hosted\t\t\t\t\t\t    \\\n-\t\t&& (flag_isoc99 || flag_noniso_default_format_attributes)))\n-DEF_C99_ATTR (vfscanf, ATTR_FORMAT_SCANF_2_0)\n-#undef DEF_C99_ATTR\n-\n-/* Functions not in any version of ISO C.  */\n-#define DEF_EXT_ATTR(NAME, ATTRS)\t\t\t\t\t\\\n-  DEF_FN_ATTR_IDENT (NAME, ATTRS,\t\t\t\t\t\\\n-\t       flag_hosted && flag_noniso_default_format_attributes)\n-/* Uniforum/GNU gettext functions.  */\n-DEF_EXT_ATTR (gettext, ATTR_FORMAT_ARG_1)\n-DEF_EXT_ATTR (dgettext, ATTR_FORMAT_ARG_2)\n-DEF_EXT_ATTR (dcgettext, ATTR_FORMAT_ARG_2)\n-/* X/Open strfmon function.  */\n-DEF_EXT_ATTR (strfmon, ATTR_FORMAT_STRFMON_3_4)\n-#undef DEF_EXT_ATTR\n-#undef DEF_FN_ATTR_IDENT"}, {"sha": "c587b757ade04c4d349985d5040f3e1104103dce", "filename": "gcc/builtin-types.def", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178b2b9f0f31ed70e30d802db7d0aced8de5fd3c/gcc%2Fbuiltin-types.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178b2b9f0f31ed70e30d802db7d0aced8de5fd3c/gcc%2Fbuiltin-types.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltin-types.def?ref=178b2b9f0f31ed70e30d802db7d0aced8de5fd3c", "patch": "@@ -76,6 +76,7 @@ DEF_PRIMITIVE_TYPE (BT_PTR, ptr_type_node)\n DEF_PRIMITIVE_TYPE (BT_CONST_PTR, const_ptr_type_node)\n DEF_PRIMITIVE_TYPE (BT_PTRMODE, (*lang_hooks.types.type_for_mode)(ptr_mode, 0))\n DEF_PRIMITIVE_TYPE (BT_SIZE, size_type_node)\n+DEF_PRIMITIVE_TYPE (BT_SSIZE, signed_size_type_node)\n DEF_PRIMITIVE_TYPE (BT_STRING, string_type_node)\n DEF_PRIMITIVE_TYPE (BT_CONST_STRING, const_string_type_node)\n \n@@ -183,11 +184,17 @@ DEF_FUNCTION_TYPE_3 (BT_FN_INT_STRING_CONST_STRING_VALIST_ARG,\n \t\t     BT_INT, BT_STRING, BT_CONST_STRING, BT_VALIST_ARG)\n DEF_FUNCTION_TYPE_3 (BT_FN_INT_CONST_STRING_CONST_STRING_VALIST_ARG,\n \t\t     BT_INT, BT_CONST_STRING, BT_CONST_STRING, BT_VALIST_ARG)\n+DEF_FUNCTION_TYPE_3 (BT_FN_INT_PTR_CONST_STRING_VALIST_ARG,\n+\t\t     BT_INT, BT_PTR, BT_CONST_STRING, BT_VALIST_ARG)\n+DEF_FUNCTION_TYPE_3 (BT_FN_STRING_CONST_STRING_CONST_STRING_INT,\n+\t\t     BT_STRING, BT_CONST_STRING, BT_CONST_STRING, BT_INT)\n \n DEF_FUNCTION_TYPE_4 (BT_FN_SIZE_CONST_PTR_SIZE_SIZE_PTR,\n \t\t     BT_SIZE, BT_CONST_PTR, BT_SIZE, BT_SIZE, BT_PTR)\n DEF_FUNCTION_TYPE_4 (BT_FN_INT_STRING_SIZE_CONST_STRING_VALIST_ARG,\n \t\tBT_INT, BT_STRING, BT_SIZE, BT_CONST_STRING, BT_VALIST_ARG)\n+DEF_FUNCTION_TYPE_4 (BT_FN_SIZE_STRING_SIZE_CONST_STRING_CONST_PTR,\n+\t\tBT_SIZE, BT_STRING, BT_SIZE, BT_CONST_STRING, BT_CONST_PTR)\n \n DEF_FUNCTION_TYPE_VAR_0 (BT_FN_VOID_VAR, BT_VOID)\n DEF_FUNCTION_TYPE_VAR_0 (BT_FN_INT_VAR, BT_INT)\n@@ -209,6 +216,8 @@ DEF_FUNCTION_TYPE_VAR_2 (BT_FN_INT_CONST_STRING_CONST_STRING_VAR,\n \n DEF_FUNCTION_TYPE_VAR_3 (BT_FN_INT_STRING_SIZE_CONST_STRING_VAR,\n \t\t\t BT_INT, BT_STRING, BT_SIZE, BT_CONST_STRING)\n+DEF_FUNCTION_TYPE_VAR_3 (BT_FN_SSIZE_STRING_SIZE_CONST_STRING_VAR,\n+\t\t\t BT_SSIZE, BT_STRING, BT_SIZE, BT_CONST_STRING)\n \n DEF_POINTER_TYPE (BT_PTR_FN_VOID_VAR, BT_FN_VOID_VAR)\n DEF_FUNCTION_TYPE_3 (BT_FN_PTR_PTR_FN_VOID_VAR_PTR_SIZE,"}, {"sha": "6a62257935269808536a43092c3a135ca8e376f3", "filename": "gcc/builtins.def", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178b2b9f0f31ed70e30d802db7d0aced8de5fd3c/gcc%2Fbuiltins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178b2b9f0f31ed70e30d802db7d0aced8de5fd3c/gcc%2Fbuiltins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.def?ref=178b2b9f0f31ed70e30d802db7d0aced8de5fd3c", "patch": "@@ -247,6 +247,7 @@ DEF_LIB_BUILTIN        (BUILT_IN_FPUTC, \"fputc\", BT_FN_INT_INT_PTR, ATTR_NOTHROW\n DEF_EXT_LIB_BUILTIN    (BUILT_IN_FPUTC_UNLOCKED, \"fputc_unlocked\", BT_FN_INT_INT_PTR, ATTR_NOTHROW_NONNULL_2)\n DEF_LIB_BUILTIN        (BUILT_IN_FPUTS, \"fputs\", BT_FN_INT_CONST_STRING_PTR, ATTR_NOTHROW_NONNULL_1_2)\n DEF_EXT_LIB_BUILTIN    (BUILT_IN_FPUTS_UNLOCKED, \"fputs_unlocked\", BT_FN_INT_CONST_STRING_PTR, ATTR_NOTHROW_NONNULL_1_2)\n+DEF_LIB_BUILTIN        (BUILT_IN_FSCANF, \"fscanf\", BT_FN_INT_PTR_CONST_STRING_VAR, ATTR_FORMAT_SCANF_2_3)\n DEF_LIB_BUILTIN        (BUILT_IN_FWRITE, \"fwrite\", BT_FN_SIZE_CONST_PTR_SIZE_SIZE_PTR, ATTR_NOTHROW_NONNULL_1_4)\n DEF_EXT_LIB_BUILTIN    (BUILT_IN_FWRITE_UNLOCKED, \"fwrite_unlocked\", BT_FN_SIZE_CONST_PTR_SIZE_SIZE_PTR, ATTR_NOTHROW_NONNULL_1_4)\n DEF_LIB_BUILTIN        (BUILT_IN_PRINTF, \"printf\", BT_FN_INT_CONST_STRING_VAR, ATTR_FORMAT_PRINTF_1_2)\n@@ -259,6 +260,8 @@ DEF_LIB_BUILTIN        (BUILT_IN_SCANF, \"scanf\", BT_FN_INT_CONST_STRING_VAR, ATT\n DEF_C99_BUILTIN        (BUILT_IN_SNPRINTF, \"snprintf\", BT_FN_INT_STRING_SIZE_CONST_STRING_VAR, ATTR_FORMAT_PRINTF_3_4)\n DEF_LIB_BUILTIN        (BUILT_IN_SPRINTF, \"sprintf\", BT_FN_INT_STRING_CONST_STRING_VAR, ATTR_FORMAT_PRINTF_2_3)\n DEF_LIB_BUILTIN        (BUILT_IN_SSCANF, \"sscanf\", BT_FN_INT_CONST_STRING_CONST_STRING_VAR, ATTR_FORMAT_SCANF_2_3)\n+DEF_LIB_BUILTIN        (BUILT_IN_VFPRINTF, \"vfprintf\", BT_FN_INT_PTR_CONST_STRING_VALIST_ARG, ATTR_FORMAT_PRINTF_2_0)\n+DEF_C99_BUILTIN        (BUILT_IN_VFSCANF, \"vfscanf\", BT_FN_INT_PTR_CONST_STRING_VALIST_ARG, ATTR_FORMAT_SCANF_2_0)\n DEF_LIB_BUILTIN        (BUILT_IN_VPRINTF, \"vprintf\", BT_FN_INT_CONST_STRING_VALIST_ARG, ATTR_FORMAT_PRINTF_1_0)\n DEF_C99_BUILTIN        (BUILT_IN_VSCANF, \"vscanf\", BT_FN_INT_CONST_STRING_VALIST_ARG, ATTR_FORMAT_SCANF_1_0)\n DEF_C99_BUILTIN        (BUILT_IN_VSNPRINTF, \"vsnprintf\", BT_FN_INT_STRING_SIZE_CONST_STRING_VALIST_ARG, ATTR_FORMAT_PRINTF_3_0)\n@@ -283,6 +286,8 @@ DEF_GCC_BUILTIN        (BUILT_IN_CONSTANT_P, \"constant_p\", BT_FN_INT_VAR, ATTR_C\n DEF_GCC_BUILTIN        (BUILT_IN_CTZ, \"ctz\", BT_FN_INT_INT, ATTR_CONST_NOTHROW_LIST)\n DEF_GCC_BUILTIN        (BUILT_IN_CTZL, \"ctzl\", BT_FN_INT_LONG, ATTR_CONST_NOTHROW_LIST)\n DEF_GCC_BUILTIN        (BUILT_IN_CTZLL, \"ctzll\", BT_FN_INT_LONGLONG, ATTR_CONST_NOTHROW_LIST)\n+DEF_EXT_LIB_BUILTIN    (BUILT_IN_DCGETTEXT, \"dcgettext\", BT_FN_STRING_CONST_STRING_CONST_STRING_INT, ATTR_FORMAT_ARG_2)\n+DEF_EXT_LIB_BUILTIN    (BUILT_IN_DGETTEXT, \"dgettext\", BT_FN_STRING_CONST_STRING_CONST_STRING, ATTR_FORMAT_ARG_2)\n DEF_GCC_BUILTIN        (BUILT_IN_DWARF_CFA, \"dwarf_cfa\", BT_FN_PTR, ATTR_NULL)\n DEF_GCC_BUILTIN        (BUILT_IN_DWARF_SP_COLUMN, \"dwarf_sp_column\", BT_FN_UNSIGNED, ATTR_NULL)\n DEF_GCC_BUILTIN        (BUILT_IN_EH_RETURN, \"eh_return\", BT_FN_VOID_PTRMODE_PTR, ATTR_NORETURN_NOTHROW_LIST)\n@@ -292,6 +297,7 @@ DEF_GCC_BUILTIN        (BUILT_IN_EXPECT, \"expect\", BT_FN_LONG_LONG_LONG, ATTR_NU\n DEF_GCC_BUILTIN        (BUILT_IN_EXTRACT_RETURN_ADDR, \"extract_return_addr\", BT_FN_PTR_PTR, ATTR_NULL)\n DEF_GCC_BUILTIN        (BUILT_IN_FRAME_ADDRESS, \"frame_address\", BT_FN_PTR_UNSIGNED, ATTR_NULL)\n DEF_GCC_BUILTIN        (BUILT_IN_FROB_RETURN_ADDR, \"frob_return_addr\", BT_FN_PTR_PTR, ATTR_NULL)\n+DEF_EXT_LIB_BUILTIN    (BUILT_IN_GETTEXT, \"gettext\", BT_FN_STRING_CONST_STRING, ATTR_FORMAT_ARG_1)\n DEF_GCC_BUILTIN        (BUILT_IN_INIT_DWARF_REG_SIZES, \"init_dwarf_reg_size_table\", BT_FN_VOID_PTR, ATTR_NULL)\n DEF_GCC_BUILTIN        (BUILT_IN_ISGREATER, \"isgreater\", BT_FN_INT_VAR, ATTR_CONST_NOTHROW_LIST)\n DEF_GCC_BUILTIN        (BUILT_IN_ISGREATEREQUAL, \"isgreaterequal\", BT_FN_INT_VAR, ATTR_CONST_NOTHROW_LIST)\n@@ -314,6 +320,8 @@ DEF_GCC_BUILTIN        (BUILT_IN_RETURN_ADDRESS, \"return_address\", BT_FN_PTR_UNS\n DEF_GCC_BUILTIN        (BUILT_IN_SAVEREGS, \"saveregs\", BT_FN_PTR_VAR, ATTR_NULL)\n DEF_GCC_BUILTIN        (BUILT_IN_SETJMP, \"setjmp\", BT_FN_INT_PTR, ATTR_NULL)\n DEF_GCC_BUILTIN        (BUILT_IN_STDARG_START, \"stdarg_start\", BT_FN_VOID_VALIST_REF_VAR, ATTR_NULL)\n+DEF_EXT_LIB_BUILTIN    (BUILT_IN_STRFMON, \"strfmon\", BT_FN_SSIZE_STRING_SIZE_CONST_STRING_VAR, ATTR_FORMAT_STRFMON_3_4)\n+DEF_LIB_BUILTIN        (BUILT_IN_STRFTIME, \"strftime\", BT_FN_SIZE_STRING_SIZE_CONST_STRING_CONST_PTR, ATTR_FORMAT_STRFTIME_3_0)\n DEF_GCC_BUILTIN        (BUILT_IN_TRAP, \"trap\", BT_FN_VOID, ATTR_NORETURN_NOTHROW_LIST)\n DEF_GCC_BUILTIN        (BUILT_IN_UNWIND_INIT, \"unwind_init\", BT_FN_VOID, ATTR_NULL)\n DEF_GCC_BUILTIN        (BUILT_IN_VA_COPY, \"va_copy\", BT_FN_VOID_VALIST_REF_VALIST_ARG, ATTR_NULL)"}, {"sha": "5dc87d78849bb4798554e9b609ca52dd663b597a", "filename": "gcc/c-common.c", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178b2b9f0f31ed70e30d802db7d0aced8de5fd3c/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178b2b9f0f31ed70e30d802db7d0aced8de5fd3c/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=178b2b9f0f31ed70e30d802db7d0aced8de5fd3c", "patch": "@@ -4189,27 +4189,8 @@ c_init_attributes (void)\n /* Depending on the name of DECL, apply default attributes to it.  */\n \n void\n-c_common_insert_default_attributes (tree decl)\n+c_common_insert_default_attributes (tree decl ATTRIBUTE_UNUSED)\n {\n-  tree name = DECL_NAME (decl);\n-\n-  if (!c_attrs_initialized)\n-    c_init_attributes ();\n-\n-#define DEF_ATTR_NULL_TREE(ENUM) /* Nothing needed after initialization.  */\n-#define DEF_ATTR_INT(ENUM, VALUE)\n-#define DEF_ATTR_IDENT(ENUM, STRING)\n-#define DEF_ATTR_TREE_LIST(ENUM, PURPOSE, VALUE, CHAIN)\n-#define DEF_FN_ATTR(NAME, ATTRS, PREDICATE)\t\t\t\\\n-  if ((PREDICATE) && name == built_in_attributes[(int) NAME])\t\\\n-    decl_attributes (&decl, built_in_attributes[(int) ATTRS],\t\\\n-\t\t     ATTR_FLAG_BUILT_IN);\n-#include \"builtin-attrs.def\"\n-#undef DEF_ATTR_NULL_TREE\n-#undef DEF_ATTR_INT\n-#undef DEF_ATTR_IDENT\n-#undef DEF_ATTR_TREE_LIST\n-#undef DEF_FN_ATTR\n }\n \n /* Output a -Wshadow warning MSGCODE about NAME, and give the location"}, {"sha": "4ccc68b43e2e1e7661f809afb9b96b9884a2c314", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/178b2b9f0f31ed70e30d802db7d0aced8de5fd3c/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/178b2b9f0f31ed70e30d802db7d0aced8de5fd3c/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=178b2b9f0f31ed70e30d802db7d0aced8de5fd3c", "patch": "@@ -4745,6 +4745,8 @@ v4si f (v4si a, v4si b, v4si c)\n @findex creal\n @findex crealf\n @findex creall\n+@findex dcgettext\n+@findex dgettext\n @findex exit\n @findex _exit\n @findex _Exit\n@@ -4765,6 +4767,8 @@ v4si f (v4si a, v4si b, v4si c)\n @findex fprintf_unlocked\n @findex fputs\n @findex fputs_unlocked\n+@findex fscanf\n+@findex gettext\n @findex imaxabs\n @findex index\n @findex labs\n@@ -4808,6 +4812,8 @@ v4si f (v4si a, v4si b, v4si c)\n @findex strcpy\n @findex strcspn\n @findex strdup\n+@findex strfmon\n+@findex strftime\n @findex strlen\n @findex strncat\n @findex strncmp\n@@ -4822,6 +4828,8 @@ v4si f (v4si a, v4si b, v4si c)\n @findex trunc\n @findex truncf\n @findex truncl\n+@findex vfprintf\n+@findex vfscanf\n @findex vprintf\n @findex vscanf\n @findex vsnprintf\n@@ -4849,9 +4857,11 @@ be emitted.\n @opindex std\n Outside strict ISO C mode (@option{-ansi}, @option{-std=c89} or\n @option{-std=c99}), the functions @code{alloca}, @code{bcmp},\n-@code{bzero}, @code{_exit}, @code{ffs}, @code{fprintf_unlocked},\n-@code{fputs_unlocked}, @code{index}, @code{mempcpy}, @code{printf_unlocked},\n-@code{rindex}, @code{stpcpy} and @code{strdup} \n+@code{bzero}, @code{dcgettext}, @code{dgettext}, @code{_exit},\n+@code{ffs}, @code{fprintf_unlocked},\n+@code{fputs_unlocked}, @code{gettext},\n+@code{index}, @code{mempcpy}, @code{printf_unlocked},\n+@code{rindex}, @code{stpcpy}, @code{strdup} and @code{strfmon}\n may be handled as built-in functions.\n All these functions have corresponding versions\n prefixed with @code{__builtin_}, which may be used even in strict C89\n@@ -4865,7 +4875,7 @@ The ISO C99 functions\n @code{_Exit}, @code{imaxabs}, @code{llabs},\n @code{nearbyint}, @code{nearbyintf}, @code{nearbyintl},\n @code{round}, @code{roundf}, @code{roundl}, @code{snprintf},\n-@code{trunc}, @code{truncf}, @code{truncl},\n+@code{trunc}, @code{truncf}, @code{truncl}, @code{vfscanf},\n @code{vscanf}, @code{vsnprintf} and @code{vsscanf}\n are handled as built-in functions\n except in strict ISO C90 mode (@option{-ansi} or @option{-std=c89}).\n@@ -4885,14 +4895,15 @@ corresponding versions prefixed with @code{__builtin_}.\n The ISO C90 functions @code{abort}, @code{abs}, @code{atan}, @code{atan2},\n @code{calloc}, @code{ceil}, @code{cos}, @code{exit},\n @code{exp}, @code{fabs}, @code{floor}, @code{fmod},\n-@code{fprintf}, @code{fputs}, @code{labs}, @code{log}, @code{malloc},\n+@code{fprintf}, @code{fputs}, @code{fscanf},\n+@code{labs}, @code{log}, @code{malloc},\n @code{memcmp}, @code{memcpy}, @code{memset}, @code{pow}, @code{printf},\n @code{putchar}, @code{puts}, @code{scanf}, @code{sin}, @code{snprintf},\n @code{sprintf}, @code{sqrt}, @code{sscanf},\n @code{strcat}, @code{strchr}, @code{strcmp},\n @code{strcpy}, @code{strcspn}, @code{strlen}, @code{strncat}, @code{strncmp},\n @code{strncpy}, @code{strpbrk}, @code{strrchr}, @code{strspn}, @code{strstr},\n-@code{tan}, @code{vprintf} and @code{vsprintf}\n+@code{tan}, @code{vfprintf}, @code{vprintf} and @code{vsprintf}\n are all recognized as built-in functions unless\n @option{-fno-builtin} is specified (or @option{-fno-builtin-@var{function}}\n is specified for an individual function).  All of these functions have"}]}