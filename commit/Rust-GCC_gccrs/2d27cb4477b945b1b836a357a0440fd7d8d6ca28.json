{"sha": "2d27cb4477b945b1b836a357a0440fd7d8d6ca28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQyN2NiNDQ3N2I5NDViMWI4MzZhMzU3YTA0NDBmZDdkOGQ2Y2EyOA==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2011-08-21T12:02:12Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2011-08-21T12:02:12Z"}, "message": "re PR fortran/50130 (ICE with invalid array slice)\n\n2011-08-21  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/50130\n\t* resolve.c (resolve_array_ref):  Don't calculate upper bound\n\tif the stride is zero.\n\n2011-08-21  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/50130\n\t* gfortran.dg/zero_stride_1.f90:  New test.\n\nFrom-SVN: r177940", "tree": {"sha": "0e5ad03159fa92780d35e2b2498740262aafcf90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e5ad03159fa92780d35e2b2498740262aafcf90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d27cb4477b945b1b836a357a0440fd7d8d6ca28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d27cb4477b945b1b836a357a0440fd7d8d6ca28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d27cb4477b945b1b836a357a0440fd7d8d6ca28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d27cb4477b945b1b836a357a0440fd7d8d6ca28/comments", "author": null, "committer": null, "parents": [{"sha": "5193535841f9a72931e48b9a5b5e4883b736ce0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5193535841f9a72931e48b9a5b5e4883b736ce0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5193535841f9a72931e48b9a5b5e4883b736ce0b"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "0f1f44c53fcca87448b1f561d0cfab9d4a044e89", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d27cb4477b945b1b836a357a0440fd7d8d6ca28/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d27cb4477b945b1b836a357a0440fd7d8d6ca28/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2d27cb4477b945b1b836a357a0440fd7d8d6ca28", "patch": "@@ -1,3 +1,9 @@\n+2011-08-21  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/50130\n+\t* resolve.c (resolve_array_ref):  Don't calculate upper bound\n+\tif the stride is zero.\n+\n 2011-08-20  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/49638"}, {"sha": "85d2091dc88f18313c7db430ee645a582e6c2e5c", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d27cb4477b945b1b836a357a0440fd7d8d6ca28/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d27cb4477b945b1b836a357a0440fd7d8d6ca28/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=2d27cb4477b945b1b836a357a0440fd7d8d6ca28", "patch": "@@ -4569,10 +4569,11 @@ resolve_array_ref (gfc_array_ref *ar)\n       /* Fill in the upper bound, which may be lower than the\n \t specified one for something like a(2:10:5), which is\n \t identical to a(2:7:5).  Only relevant for strides not equal\n-\t to one.  */\n+\t to one.  Don't try a division by zero.  */\n       if (ar->dimen_type[i] == DIMEN_RANGE\n \t  && ar->stride[i] != NULL && ar->stride[i]->expr_type == EXPR_CONSTANT\n-\t  && mpz_cmp_si (ar->stride[i]->value.integer, 1L) != 0)\n+\t  && mpz_cmp_si (ar->stride[i]->value.integer, 1L) != 0\n+\t  && mpz_cmp_si (ar->stride[i]->value.integer, 0L) != 0)\n \t{\n \t  mpz_t size, end;\n "}, {"sha": "8a3d3f2a8a807fc563991f8acba26fcefe57111f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d27cb4477b945b1b836a357a0440fd7d8d6ca28/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d27cb4477b945b1b836a357a0440fd7d8d6ca28/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2d27cb4477b945b1b836a357a0440fd7d8d6ca28", "patch": "@@ -1,3 +1,8 @@\n+2011-08-21  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/50130\n+\t* gfortran.dg/zero_stride_1.f90:  New test.\n+\n 2011-08-20  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/49638"}, {"sha": "c5f6cc724a1bbf050b0deb29d25220a4d88dad0b", "filename": "gcc/testsuite/gfortran.dg/zero_stride_1.f90", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d27cb4477b945b1b836a357a0440fd7d8d6ca28/gcc%2Ftestsuite%2Fgfortran.dg%2Fzero_stride_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d27cb4477b945b1b836a357a0440fd7d8d6ca28/gcc%2Ftestsuite%2Fgfortran.dg%2Fzero_stride_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fzero_stride_1.f90?ref=2d27cb4477b945b1b836a357a0440fd7d8d6ca28", "patch": "@@ -0,0 +1,7 @@\n+! { dg-do compile }\n+!  PR 50130 - this caused an ICE.  Test case supplied by Joost\n+!  VandeVondele.\n+integer, parameter :: a(10)=0\n+integer, parameter :: b(10)=a(1:10:0) ! { dg-error \"Illegal stride of zero\" }\n+END\n+"}]}