{"sha": "7450506b5d48642a71459cfc24efcea6ca58e97e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ1MDUwNmI1ZDQ4NjQyYTcxNDU5Y2ZjMjRlZmNlYTZjYTU4ZTk3ZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-09-30T16:20:48Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-09-30T16:20:48Z"}, "message": "Remove global call sets: haifa-sched.c\n\nThe code patched here is counting how many registers the current\nfunction would need to save in the prologue before it uses them.\nThe code is called per function, so using crtl is OK.\n\n2019-09-30  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* haifa-sched.c: Include function-abi.h.\n\t(alloc_global_sched_pressure_data): Use crtl->abi to check whether\n\tthe function would need to save a register before using it.\n\nFrom-SVN: r276324", "tree": {"sha": "bb5ef760e2227bbfc2748b3d40676f2bf09f9403", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb5ef760e2227bbfc2748b3d40676f2bf09f9403"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7450506b5d48642a71459cfc24efcea6ca58e97e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7450506b5d48642a71459cfc24efcea6ca58e97e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7450506b5d48642a71459cfc24efcea6ca58e97e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7450506b5d48642a71459cfc24efcea6ca58e97e/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a4dfaad2e5594d871fe00a1116005e28f95d644e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4dfaad2e5594d871fe00a1116005e28f95d644e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4dfaad2e5594d871fe00a1116005e28f95d644e"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "12129b611f4718d076352cc398e73dae608500c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7450506b5d48642a71459cfc24efcea6ca58e97e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7450506b5d48642a71459cfc24efcea6ca58e97e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7450506b5d48642a71459cfc24efcea6ca58e97e", "patch": "@@ -1,3 +1,9 @@\n+2019-09-30  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* haifa-sched.c: Include function-abi.h.\n+\t(alloc_global_sched_pressure_data): Use crtl->abi to check whether\n+\tthe function would need to save a register before using it.\n+\n 2019-09-30  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* gcse.c: Include function-abi.h."}, {"sha": "73380502e71affc0c118588ec07552c369ab9ecb", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7450506b5d48642a71459cfc24efcea6ca58e97e/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7450506b5d48642a71459cfc24efcea6ca58e97e/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=7450506b5d48642a71459cfc24efcea6ca58e97e", "patch": "@@ -146,6 +146,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cfgloop.h\"\n #include \"dumpfile.h\"\n #include \"print-rtl.h\"\n+#include \"function-abi.h\"\n \n #ifdef INSN_SCHEDULING\n \n@@ -939,7 +940,8 @@ static bitmap tmp_bitmap;\n /* Effective number of available registers of a given class (see comment\n    in sched_pressure_start_bb).  */\n static int sched_class_regs_num[N_REG_CLASSES];\n-/* Number of call_saved_regs and fixed_regs.  Helpers for calculating of\n+/* The number of registers that the function would need to save before it\n+   uses them, and the number of fixed_regs.  Helpers for calculating of\n    sched_class_regs_num.  */\n static int call_saved_regs_num[N_REG_CLASSES];\n static int fixed_regs_num[N_REG_CLASSES];\n@@ -7207,10 +7209,13 @@ alloc_global_sched_pressure_data (void)\n \t  fixed_regs_num[cl] = 0;\n \n \t  for (int i = 0; i < ira_class_hard_regs_num[cl]; ++i)\n-\t    if (!call_used_or_fixed_reg_p (ira_class_hard_regs[cl][i]))\n-\t      ++call_saved_regs_num[cl];\n-\t    else if (fixed_regs[ira_class_hard_regs[cl][i]])\n-\t      ++fixed_regs_num[cl];\n+\t    {\n+\t      unsigned int regno = ira_class_hard_regs[cl][i];\n+\t      if (fixed_regs[regno])\n+\t\t++fixed_regs_num[cl];\n+\t      else if (!crtl->abi->clobbers_full_reg_p (regno))\n+\t\t++call_saved_regs_num[cl];\n+\t    }\n \t}\n     }\n }"}]}