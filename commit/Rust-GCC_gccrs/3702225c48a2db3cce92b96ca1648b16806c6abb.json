{"sha": "3702225c48a2db3cce92b96ca1648b16806c6abb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzcwMjIyNWM0OGEyZGIzY2NlOTJiOTZjYTE2NDhiMTY4MDZjNmFiYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-05-02T09:12:46Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-05-02T09:12:46Z"}, "message": "Minor reformatting.\n\nFrom-SVN: r235711", "tree": {"sha": "5e49935df989d3007e05504f1f344d12733f4ce5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e49935df989d3007e05504f1f344d12733f4ce5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3702225c48a2db3cce92b96ca1648b16806c6abb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3702225c48a2db3cce92b96ca1648b16806c6abb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3702225c48a2db3cce92b96ca1648b16806c6abb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3702225c48a2db3cce92b96ca1648b16806c6abb/comments", "author": null, "committer": null, "parents": [{"sha": "f96fd197d26faabef756d6cb97d782919685b45e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f96fd197d26faabef756d6cb97d782919685b45e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f96fd197d26faabef756d6cb97d782919685b45e"}], "stats": {"total": 34, "additions": 18, "deletions": 16}, "files": [{"sha": "5377b95086b782e71798a75cb18501deefbf31b9", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3702225c48a2db3cce92b96ca1648b16806c6abb/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3702225c48a2db3cce92b96ca1648b16806c6abb/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=3702225c48a2db3cce92b96ca1648b16806c6abb", "patch": "@@ -2251,24 +2251,24 @@ package body Exp_Ch5 is\n                                Prefix =>\n                                  Unchecked_Convert_To (RTE (RE_Tag_Ptr),\n                                    Make_Attribute_Reference (Loc,\n-                                     Prefix => Duplicate_Subexpr (Lhs),\n+                                     Prefix         => Duplicate_Subexpr (Lhs),\n                                      Attribute_Name => Name_Address)));\n                            Rhs_Tag :=\n                              Make_Explicit_Dereference (Loc,\n                                Prefix =>\n                                  Unchecked_Convert_To (RTE (RE_Tag_Ptr),\n                                    Make_Attribute_Reference (Loc,\n-                                     Prefix => Duplicate_Subexpr (Rhs),\n+                                     Prefix         => Duplicate_Subexpr (Rhs),\n                                      Attribute_Name => Name_Address)));\n                         end if;\n \n                         Append_To (L,\n                           Make_Raise_Constraint_Error (Loc,\n                             Condition =>\n                               Make_Op_Ne (Loc,\n-                                Left_Opnd => Lhs_Tag,\n+                                Left_Opnd  => Lhs_Tag,\n                                 Right_Opnd => Rhs_Tag),\n-                            Reason => CE_Tag_Check_Failed));\n+                            Reason    => CE_Tag_Check_Failed));\n                      end;\n                   end if;\n "}, {"sha": "6d8f8fcb3a1098fc9ad0a1d7443fe543c5bf7997", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3702225c48a2db3cce92b96ca1648b16806c6abb/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3702225c48a2db3cce92b96ca1648b16806c6abb/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=3702225c48a2db3cce92b96ca1648b16806c6abb", "patch": "@@ -4980,7 +4980,6 @@ package body Sem_Attr is\n             --  type may lead to spurious errors if context is a case.\n \n             if not GNATprove_Mode then\n-\n                if not Is_Discrete_Type (Pref_Typ) then\n                   Pref_Typ := Base_Type (Pref_Typ);\n                end if;"}, {"sha": "875c166670081240e9e0fabac540241a708151ec", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3702225c48a2db3cce92b96ca1648b16806c6abb/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3702225c48a2db3cce92b96ca1648b16806c6abb/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=3702225c48a2db3cce92b96ca1648b16806c6abb", "patch": "@@ -4322,8 +4322,8 @@ package body Sem_Ch13 is\n          ----------------------------\n \n          function Valid_Default_Iterator (Subp : Entity_Id) return Boolean is\n-            Formal : Entity_Id;\n             Root_T : constant Entity_Id := Root_Type (Etype (Etype (Subp)));\n+            Formal : Entity_Id;\n \n          begin\n             if not Check_Primitive_Function (Subp) then\n@@ -4422,7 +4422,7 @@ package body Sem_Ch13 is\n                   Set_Is_Overloaded (Expr, False);\n                else\n                   Error_Msg_N\n-                    (\"No interpretation is a valid default iterator!\", Expr);\n+                    (\"no interpretation is a valid default iterator!\", Expr);\n                end if;\n             end;\n          end if;"}, {"sha": "fdefb004a7e4b236da1ff02c834aaa6c616e79fe", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3702225c48a2db3cce92b96ca1648b16806c6abb/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3702225c48a2db3cce92b96ca1648b16806c6abb/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=3702225c48a2db3cce92b96ca1648b16806c6abb", "patch": "@@ -597,13 +597,15 @@ package body Sem_Ch4 is\n                if Is_Tagged_Type (Type_Id)\n                  and then Has_Discriminants (Type_Id)\n                  and then not Is_Constrained (Type_Id)\n-                 and then Present\n-                   (Discriminant_Default_Value (First_Discriminant (Type_Id)))\n+                 and then\n+                   Present\n+                     (Discriminant_Default_Value\n+                       (First_Discriminant (Type_Id)))\n                then\n                   declare\n+                     Constr : constant List_Id    := New_List;\n                      Loc    : constant Source_Ptr := Sloc (E);\n                      Discr  : Entity_Id := First_Discriminant (Type_Id);\n-                     Constr : constant List_Id := New_List;\n \n                   begin\n                      if Present (Discriminant_Default_Value (Discr)) then\n@@ -612,11 +614,12 @@ package body Sem_Ch4 is\n                            Next_Discriminant (Discr);\n                         end loop;\n \n-                        Rewrite (E, Make_Subtype_Indication (Loc,\n-                          Subtype_Mark => New_Occurrence_Of (Type_Id, Loc),\n-                          Constraint   =>\n-                            Make_Index_Or_Discriminant_Constraint (Loc,\n-                              Constr)));\n+                        Rewrite (E,\n+                          Make_Subtype_Indication (Loc,\n+                            Subtype_Mark => New_Occurrence_Of (Type_Id, Loc),\n+                            Constraint   =>\n+                              Make_Index_Or_Discriminant_Constraint (Loc,\n+                                Constraints => Constr)));\n                      end if;\n                   end;\n                end if;\n@@ -638,7 +641,7 @@ package body Sem_Ch4 is\n                      Error_Msg_N (\"constraint not allowed here\", E);\n \n                      if Nkind (Constraint (E)) =\n-                       N_Index_Or_Discriminant_Constraint\n+                          N_Index_Or_Discriminant_Constraint\n                      then\n                         Error_Msg_N -- CODEFIX\n                           (\"\\if qualified expression was meant, \" &"}]}