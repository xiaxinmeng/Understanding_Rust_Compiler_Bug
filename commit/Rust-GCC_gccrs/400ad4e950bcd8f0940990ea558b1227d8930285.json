{"sha": "400ad4e950bcd8f0940990ea558b1227d8930285", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDAwYWQ0ZTk1MGJjZDhmMDk0MDk5MGVhNTU4YjEyMjdkODkzMDI4NQ==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2018-07-16T14:12:28Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-07-16T14:12:28Z"}, "message": "[Ada] Minor reformatting\n\n2018-07-16  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* einfo.adb, exp_ch7.adb, exp_ch9.adb, exp_unst.adb, inline.adb,\n\tsem.adb, sem_ch12.adb, sem_ch13.adb, sem_ch3.adb, sem_eval.adb,\n\tsem_util.adb: Minor reformatting.\n\nFrom-SVN: r262730", "tree": {"sha": "34c990bf91315fc62636fc041e795b493a1d3a69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34c990bf91315fc62636fc041e795b493a1d3a69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/400ad4e950bcd8f0940990ea558b1227d8930285", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/400ad4e950bcd8f0940990ea558b1227d8930285", "html_url": "https://github.com/Rust-GCC/gccrs/commit/400ad4e950bcd8f0940990ea558b1227d8930285", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/400ad4e950bcd8f0940990ea558b1227d8930285/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4af4c79a53886d0807f187f23e066fe4f0265897", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4af4c79a53886d0807f187f23e066fe4f0265897", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4af4c79a53886d0807f187f23e066fe4f0265897"}], "stats": {"total": 244, "additions": 132, "deletions": 112}, "files": [{"sha": "69090661421e4e758d57dd9eb08cb2516e0d0141", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/400ad4e950bcd8f0940990ea558b1227d8930285/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/400ad4e950bcd8f0940990ea558b1227d8930285/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=400ad4e950bcd8f0940990ea558b1227d8930285", "patch": "@@ -1,3 +1,9 @@\n+2018-07-16  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* einfo.adb, exp_ch7.adb, exp_ch9.adb, exp_unst.adb, inline.adb,\n+\tsem.adb, sem_ch12.adb, sem_ch13.adb, sem_ch3.adb, sem_eval.adb,\n+\tsem_util.adb: Minor reformatting.\n+\n 2018-07-16  Arnaud Charlet  <charlet@adacore.com>\n \n \t* frontend.adb: Only unnest subprograms if no previous errors were"}, {"sha": "10a04a360158bda6bece50d477eaec907403cf21", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/400ad4e950bcd8f0940990ea558b1227d8930285/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/400ad4e950bcd8f0940990ea558b1227d8930285/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=400ad4e950bcd8f0940990ea558b1227d8930285", "patch": "@@ -5972,7 +5972,7 @@ package body Einfo is\n    procedure Set_Is_Uplevel_Referenced_Entity (Id : E; V : B := True) is\n    begin\n       pragma Assert\n-        (Ekind_In (Id, E_Constant, E_Variable, E_Loop_Parameter)\n+        (Ekind_In (Id, E_Constant, E_Loop_Parameter, E_Variable)\n           or else Is_Formal (Id)\n           or else Is_Type (Id));\n       Set_Flag283 (Id, V);"}, {"sha": "2f3092d98b10e5faba053e7f23eef2aeebcaf306", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/400ad4e950bcd8f0940990ea558b1227d8930285/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/400ad4e950bcd8f0940990ea558b1227d8930285/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=400ad4e950bcd8f0940990ea558b1227d8930285", "patch": "@@ -3984,9 +3984,9 @@ package body Exp_Ch7 is\n       end if;\n    end Cleanup_Task;\n \n-   -----------------------------------\n+   --------------------------------------\n    -- Check_Unnesting_Elaboration_Code --\n-   -----------------------------------\n+   --------------------------------------\n \n    procedure Check_Unnesting_Elaboration_Code (N : Node_Id) is\n       Loc       : constant Source_Ptr := Sloc (N);"}, {"sha": "6266c613920c8cc353262fbbf1f132c9f8ecbb45", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/400ad4e950bcd8f0940990ea558b1227d8930285/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/400ad4e950bcd8f0940990ea558b1227d8930285/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=400ad4e950bcd8f0940990ea558b1227d8930285", "patch": "@@ -475,9 +475,9 @@ package body Exp_Ch9 is\n    --    <actualN> := P.<formalN>;\n \n    procedure Reset_Scopes_To (Proc_Body : Node_Id; E : Entity_Id);\n-   --  Reset the scope of declarations and blocks at the top level of\n-   --  Proc_Body to be E. Used after expanding entry bodies into their\n-   --  corresponding procedures.\n+   --  Reset the scope of declarations and blocks at the top level of Proc_Body\n+   --  to be E. Used after expanding entry bodies into their corresponding\n+   --  procedures.\n \n    function Trivial_Accept_OK return Boolean;\n    --  If there is no DO-END block for an accept, or if the DO-END block has\n@@ -10557,13 +10557,14 @@ package body Exp_Ch9 is\n          Eloc      : constant Source_Ptr := Sloc (Ename);\n          Eent      : constant Entity_Id  := Entity (Ename);\n          Index     : constant Node_Id    := Entry_Index (Acc_Stm);\n+\n+         Call      : Node_Id;\n+         Expr      : Node_Id;\n          Null_Body : Node_Id;\n-         Proc_Body : Node_Id;\n          PB_Ent    : Entity_Id;\n-         Expr      : Node_Id;\n-         Call      : Node_Id;\n+         Proc_Body : Node_Id;\n \n-         --  Start of processing for Add_Accept\n+      --  Start of processing for Add_Accept\n \n       begin\n          if No (Ann) then\n@@ -10577,9 +10578,7 @@ package body Exp_Ch9 is\n                 Entry_Index_Expression (Eloc, Eent, Index, Scope (Eent)),\n                 New_Occurrence_Of (RTE (RE_Null_Task_Entry), Eloc)));\n          else\n-            Expr :=\n-              Entry_Index_Expression\n-                (Eloc, Eent, Index, Scope (Eent));\n+            Expr := Entry_Index_Expression (Eloc, Eent, Index, Scope (Eent));\n          end if;\n \n          if Present (Handled_Statement_Sequence (Accept_Statement (Alt))) then\n@@ -10603,7 +10602,7 @@ package body Exp_Ch9 is\n               Make_Defining_Identifier (Eloc,\n                 New_External_Name (Chars (Ename), 'A', Num_Accept));\n \n-            --  Link the acceptor to the original receiving entry.\n+            --  Link the acceptor to the original receiving entry\n \n             Set_Ekind           (PB_Ent, E_Procedure);\n             Set_Receiving_Entry (PB_Ent, Eent);\n@@ -14731,12 +14730,10 @@ package body Exp_Ch9 is\n    ---------------------\n \n    procedure Reset_Scopes_To (Proc_Body : Node_Id; E : Entity_Id) is\n-\n       function Reset_Scope (N : Node_Id) return Traverse_Result;\n-      --  Temporaries may have been declared during expansion of the\n-      --  procedure alternative. Indicate that their scope is the new\n-      --  body, to prevent generation of spurious uplevel references\n-      --  for these entities.\n+      --  Temporaries may have been declared during expansion of the procedure\n+      --  alternative. Indicate that their scope is the new body, to prevent\n+      --  generation of spurious uplevel references for these entities.\n \n       procedure Reset_Scopes is new Traverse_Proc (Reset_Scope);\n \n@@ -14748,10 +14745,11 @@ package body Exp_Ch9 is\n          Decl : Node_Id;\n \n       begin\n-         --  If this is a block statement with an Identifier, it forms\n-         --  a scope, so we want to reset its scope but not look inside.\n+         --  If this is a block statement with an Identifier, it forms a scope,\n+         --  so we want to reset its scope but not look inside.\n \n-         if Nkind (N) = N_Block_Statement and then Present (Identifier (N))\n+         if Nkind (N) = N_Block_Statement\n+           and then Present (Identifier (N))\n          then\n             Set_Scope (Entity (Identifier (N)), E);\n             return Skip;\n@@ -14779,6 +14777,8 @@ package body Exp_Ch9 is\n          return OK;\n       end Reset_Scope;\n \n+   --  Start of processing for Reset_Scopes_To\n+\n    begin\n       Reset_Scopes (Proc_Body);\n    end Reset_Scopes_To;"}, {"sha": "12cb9bd656e17a37d3df7571b1a0c1b0f9a7f1ea", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 42, "deletions": 34, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/400ad4e950bcd8f0940990ea558b1227d8930285/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/400ad4e950bcd8f0940990ea558b1227d8930285/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=400ad4e950bcd8f0940990ea558b1227d8930285", "patch": "@@ -526,8 +526,8 @@ package body Exp_Unst is\n                         end loop;\n                      end;\n \n-                  --  Binary operator cases. These can apply\n-                  --  to arrays for which we may need bounds.\n+                  --  Binary operator cases. These can apply to arrays for\n+                  --  which we may need bounds.\n \n                   elsif Nkind (N) in N_Binary_Op then\n                      Note_Uplevel_Bound (Left_Opnd (N),  Ref);\n@@ -944,7 +944,9 @@ package body Exp_Unst is\n                --  and if the lower bound (or an inner bound for a multi-\n                --  dimensional array) is uplevel.\n \n-               when N_Indexed_Component | N_Slice =>\n+               when N_Indexed_Component\n+                  | N_Slice\n+               =>\n                   if Is_Constrained (Etype (Prefix (N))) then\n                      declare\n                         DT : Boolean := False;\n@@ -975,7 +977,9 @@ package body Exp_Unst is\n                --  in order to do the comparison, which means we need the\n                --  bounds.\n \n-               when N_Op_Eq | N_Op_Ne =>\n+               when N_Op_Eq\n+                  | N_Op_Ne\n+               =>\n                   declare\n                      DT : Boolean := False;\n                   begin\n@@ -1075,13 +1079,14 @@ package body Exp_Unst is\n                      return Skip;\n                   end if;\n \n-               --  Pragmas and component declarations can be ignored.\n+               --  Pragmas and component declarations can be ignored\n \n-               when N_Pragma | N_Component_Declaration =>\n+               when N_Component_Declaration\n+                  | N_Pragma\n+               =>\n                   return Skip;\n \n-               --  Otherwise record an uplevel reference in a local\n-               --  identifier.\n+               --  Otherwise record an uplevel reference in a local identifier\n \n                when others =>\n                   if Nkind (N) in N_Has_Entity\n@@ -1103,23 +1108,25 @@ package body Exp_Unst is\n                         --  references to global declarations.\n \n                        and then\n-                         (Ekind_In\n-                           (Ent, E_Constant, E_Variable, E_Loop_Parameter)\n+                         (Ekind_In (Ent, E_Constant,\n+                                         E_Loop_Parameter,\n+                                         E_Variable)\n \n-                        --  Formals are interesting, but not if being used as\n-                        --  mere names of parameters for name notation calls.\n+                           --  Formals are interesting, but not if being used\n+                           --  as mere names of parameters for name notation\n+                           --  calls.\n \n-                        or else\n-                          (Is_Formal (Ent)\n-                            and then not\n-                             (Nkind (Parent (N)) = N_Parameter_Association\n-                               and then Selector_Name (Parent (N)) = N))\n+                           or else\n+                             (Is_Formal (Ent)\n+                               and then not\n+                                 (Nkind (Parent (N)) = N_Parameter_Association\n+                                   and then Selector_Name (Parent (N)) = N))\n \n-                        --  Types other than known Is_Static types are\n-                        --  potentially interesting.\n+                           --  Types other than known Is_Static types are\n+                           --  potentially interesting.\n \n-                        or else (Is_Type (Ent)\n-                                  and then not Is_Static_Type (Ent)))\n+                           or else\n+                             (Is_Type (Ent) and then not Is_Static_Type (Ent)))\n                      then\n                         --  Here we have a potentially interesting uplevel\n                         --  reference to examine.\n@@ -1284,10 +1291,10 @@ package body Exp_Unst is\n                   loop\n                      S := Enclosing_Subprogram (S);\n \n-                     --  if we are at the top level, as can happen with\n+                     --  If we are at the top level, as can happen with\n                      --  references to formals in aspects of nested subprogram\n-                     --  declarations, there are no further subprograms to\n-                     --  mark as requiring activation records.\n+                     --  declarations, there are no further subprograms to mark\n+                     --  as requiring activation records.\n \n                      exit when No (S);\n \n@@ -1298,10 +1305,10 @@ package body Exp_Unst is\n \n                         --  If this entity was marked reachable because it is\n                         --  in a task or protected type, there may not appear\n-                        --  to be any calls to it, which would normally\n-                        --  adjust the levels of the parent subprograms.\n-                        --  So we need to be sure that the uplevel reference\n-                        --  of that entity takes into account possible calls.\n+                        --  to be any calls to it, which would normally adjust\n+                        --  the levels of the parent subprograms. So we need to\n+                        --  be sure that the uplevel reference of that entity\n+                        --  takes into account possible calls.\n \n                         if In_Synchronized_Unit (SUBF.Ent)\n                           and then SUBT.Lev < SUBI.Uplevel_Ref\n@@ -1874,10 +1881,10 @@ package body Exp_Unst is\n                               begin\n                                  --  For parameters, we insert the assignment\n                                  --  right after the declaration of ARECnP.\n-                                 --  For all other entities, we insert\n-                                 --  the assignment immediately after the\n-                                 --  declaration of the entity or after\n-                                 --  the freeze node if present.\n+                                 --  For all other entities, we insert the\n+                                 --  assignment immediately after the\n+                                 --  declaration of the entity or after the\n+                                 --  freeze node if present.\n \n                                  --  Note: we don't need to mark the entity\n                                  --  as being aliased, because the address\n@@ -1928,8 +1935,9 @@ package body Exp_Unst is\n                                  --  N_Loop_Parametrer_Specification.\n \n                                  if Ekind (Ent) = E_Loop_Parameter then\n-                                    Ins := First (Statements\n-                                                    (Parent (Parent (Ins))));\n+                                    Ins :=\n+                                      First\n+                                        (Statements (Parent (Parent (Ins))));\n                                     Insert_Before (Ins, Asn);\n \n                                  else"}, {"sha": "b425094b544afee24ee50e3e442df840cb0dd5e0", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/400ad4e950bcd8f0940990ea558b1227d8930285/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/400ad4e950bcd8f0940990ea558b1227d8930285/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=400ad4e950bcd8f0940990ea558b1227d8930285", "patch": "@@ -3926,12 +3926,12 @@ package body Inline is\n                   end if;\n                end if;\n \n-            --  A return statement within an extended return is a noop\n-            --  after inlining.\n+            --  A return statement within an extended return is a noop after\n+            --  inlining.\n \n             elsif No (Expression (N))\n-              and then\n-                Nkind (Parent (Parent (N))) = N_Extended_Return_Statement\n+              and then Nkind (Parent (Parent (N))) =\n+                         N_Extended_Return_Statement\n             then\n                return OK;\n \n@@ -3970,10 +3970,11 @@ package body Inline is\n          return True;\n \n       else\n-         return Present (Declarations (N))\n-           and then Present (First (Declarations (N)))\n-           and then Entity (Expression (Return_Statement)) =\n-                    Defining_Identifier (First (Declarations (N)));\n+         return\n+           Present (Declarations (N))\n+             and then Present (First (Declarations (N)))\n+             and then Entity (Expression (Return_Statement)) =\n+                        Defining_Identifier (First (Declarations (N)));\n       end if;\n    end Has_Single_Return;\n "}, {"sha": "7fbf7bde1c814da3fc4227da1b5e7f66f8abefbf", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/400ad4e950bcd8f0940990ea558b1227d8930285/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/400ad4e950bcd8f0940990ea558b1227d8930285/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=400ad4e950bcd8f0940990ea558b1227d8930285", "patch": "@@ -2180,6 +2180,7 @@ package body Sem is\n \n             function Is_Subunit_Of_Main (U : Node_Id) return Boolean is\n                Lib : Node_Id;\n+\n             begin\n                if Present (U) and then Nkind (Unit (U)) = N_Subunit then\n                   Lib := Library_Unit (U);"}, {"sha": "98c646d9a6b09b7559207054801a2c5b95a98fc0", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/400ad4e950bcd8f0940990ea558b1227d8930285/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/400ad4e950bcd8f0940990ea558b1227d8930285/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=400ad4e950bcd8f0940990ea558b1227d8930285", "patch": "@@ -4216,15 +4216,19 @@ package body Sem_Ch12 is\n \n             else\n                declare\n-                  ASN1, ASN2 : Node_Id;\n                   Inherited_Aspects : constant List_Id :=\n-                    New_Copy_List_Tree (Aspect_Specifications (Gen_Spec));\n+                                        New_Copy_List_Tree\n+                                          (Aspect_Specifications (Gen_Spec));\n+\n+                  ASN1         : Node_Id;\n+                  ASN2         : Node_Id;\n                   Pool_Present : Boolean := False;\n \n                begin\n                   ASN1 := First (Aspect_Specifications (N));\n                   while Present (ASN1) loop\n-                     if Chars (Identifier (ASN1)) = Name_Default_Storage_Pool\n+                     if Chars (Identifier (ASN1)) =\n+                          Name_Default_Storage_Pool\n                      then\n                         Pool_Present := True;\n                         exit;\n@@ -4234,13 +4238,14 @@ package body Sem_Ch12 is\n                   end loop;\n \n                   if Pool_Present then\n-                     --  If generic carries a default storage pool, remove\n-                     --  it in favor of the instance one.\n+\n+                     --  If generic carries a default storage pool, remove it\n+                     --  in favor of the instance one.\n \n                      ASN2 := First (Inherited_Aspects);\n                      while Present (ASN2) loop\n                         if Chars (Identifier (ASN2)) =\n-                                                 Name_Default_Storage_Pool\n+                             Name_Default_Storage_Pool\n                         then\n                            Remove (ASN2);\n                            exit;"}, {"sha": "28a3dd8fe61e1d1db6170d5f9607595220b5c01f", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/400ad4e950bcd8f0940990ea558b1227d8930285/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/400ad4e950bcd8f0940990ea558b1227d8930285/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=400ad4e950bcd8f0940990ea558b1227d8930285", "patch": "@@ -5331,9 +5331,7 @@ package body Sem_Ch13 is\n                Error_Msg_N\n                  (\"Bit_Order can only be defined for record type\", Nam);\n \n-            elsif Is_Tagged_Type (U_Ent)\n-               and then Is_Derived_Type (U_Ent)\n-            then\n+            elsif Is_Tagged_Type (U_Ent) and then Is_Derived_Type (U_Ent) then\n                Error_Msg_N\n                  (\"Bit_Order cannot be defined for record extensions\", Nam);\n \n@@ -5350,10 +5348,8 @@ package body Sem_Ch13 is\n                   Flag_Non_Static_Expr\n                     (\"Bit_Order requires static expression!\", Expr);\n \n-               else\n-                  if (Expr_Value (Expr) = 0) /= Bytes_Big_Endian then\n-                     Set_Reverse_Bit_Order (Base_Type (U_Ent), True);\n-                  end if;\n+               elsif (Expr_Value (Expr) = 0) /= Bytes_Big_Endian then\n+                  Set_Reverse_Bit_Order (Base_Type (U_Ent), True);\n                end if;\n             end if;\n "}, {"sha": "fce4992cff0557bfefdbff9afb4574538a2caf8b", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/400ad4e950bcd8f0940990ea558b1227d8930285/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/400ad4e950bcd8f0940990ea558b1227d8930285/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=400ad4e950bcd8f0940990ea558b1227d8930285", "patch": "@@ -18621,9 +18621,7 @@ package body Sem_Ch3 is\n       if Is_Itype (Subt) and then Present (Predicate_Function (Par)) then\n          Set_Subprograms_For_Type (Subt, Subprograms_For_Type (Par));\n \n-         if Has_Static_Predicate (Par)\n-           and then Is_Discrete_Type (Par)\n-         then\n+         if Has_Static_Predicate (Par) and then Is_Discrete_Type (Par) then\n             Set_Static_Discrete_Predicate\n               (Subt, Static_Discrete_Predicate (Par));\n          end if;"}, {"sha": "233f24dd48a029814d40e975453d2df1cacf41aa", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 19, "deletions": 18, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/400ad4e950bcd8f0940990ea558b1227d8930285/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/400ad4e950bcd8f0940990ea558b1227d8930285/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=400ad4e950bcd8f0940990ea558b1227d8930285", "patch": "@@ -2688,9 +2688,7 @@ package body Sem_Eval is\n    --  the expander that do not correspond to static expressions.\n \n    procedure Eval_Integer_Literal (N : Node_Id) is\n-      T : constant Entity_Id := Etype (N);\n-\n-      function In_Any_Integer_Context return Boolean;\n+      function In_Any_Integer_Context (Context : Node_Id) return Boolean;\n       --  If the literal is resolved with a specific type in a context where\n       --  the expected type is Any_Integer, there are no range checks on the\n       --  literal. By the time the literal is evaluated, it carries the type\n@@ -2701,22 +2699,25 @@ package body Sem_Eval is\n       -- In_Any_Integer_Context --\n       ----------------------------\n \n-      function In_Any_Integer_Context return Boolean is\n-         Par : constant Node_Id   := Parent (N);\n-         K   : constant Node_Kind := Nkind (Par);\n-\n+      function In_Any_Integer_Context (Context : Node_Id) return Boolean is\n       begin\n          --  Any_Integer also appears in digits specifications for real types,\n          --  but those have bounds smaller that those of any integer base type,\n          --  so we can safely ignore these cases.\n \n-         return Nkind_In (K, N_Number_Declaration,\n-                             N_Attribute_Reference,\n-                             N_Attribute_Definition_Clause,\n-                             N_Modular_Type_Definition,\n-                             N_Signed_Integer_Type_Definition);\n+         return\n+           Nkind_In (Context, N_Attribute_Definition_Clause,\n+                              N_Attribute_Reference,\n+                              N_Modular_Type_Definition,\n+                              N_Number_Declaration,\n+                              N_Signed_Integer_Type_Definition);\n       end In_Any_Integer_Context;\n \n+      --  Local variables\n+\n+      Par : constant Node_Id   := Parent (N);\n+      Typ : constant Entity_Id := Etype (N);\n+\n    --  Start of processing for Eval_Integer_Literal\n \n    begin\n@@ -2732,20 +2733,20 @@ package body Sem_Eval is\n       --  Check_Non_Static_Context on an expanded literal may lead to spurious\n       --  and misleading warnings.\n \n-      if (Nkind_In (Parent (N), N_If_Expression, N_Case_Expression_Alternative)\n+      if (Nkind_In (Par, N_If_Expression, N_Case_Expression_Alternative)\n            or else Nkind (Parent (N)) not in N_Subexpr)\n-        and then (not Nkind_In (Parent (N), N_If_Expression,\n-                                 N_Case_Expression_Alternative)\n+        and then (not Nkind_In (Par, N_Case_Expression_Alternative,\n+                                     N_If_Expression)\n                    or else Comes_From_Source (N))\n-        and then not In_Any_Integer_Context\n+        and then not In_Any_Integer_Context (Par)\n       then\n          Check_Non_Static_Context (N);\n       end if;\n \n       --  Modular integer literals must be in their base range\n \n-      if Is_Modular_Integer_Type (T)\n-        and then Is_Out_Of_Range (N, Base_Type (T), Assume_Valid => True)\n+      if Is_Modular_Integer_Type (Typ)\n+        and then Is_Out_Of_Range (N, Base_Type (Typ), Assume_Valid => True)\n       then\n          Out_Of_Range (N);\n       end if;"}, {"sha": "1c3610c3251eab37893f9261f90e0bcb25ee7bd8", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/400ad4e950bcd8f0940990ea558b1227d8930285/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/400ad4e950bcd8f0940990ea558b1227d8930285/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=400ad4e950bcd8f0940990ea558b1227d8930285", "patch": "@@ -5993,9 +5993,6 @@ package body Sem_Util is\n    -------------------------\n \n    function Denotes_Same_Object (A1, A2 : Node_Id) return Boolean is\n-      Obj1 : Node_Id := A1;\n-      Obj2 : Node_Id := A2;\n-\n       function Is_Renaming (N : Node_Id) return Boolean;\n       --  Return true if N names a renaming entity\n \n@@ -6011,19 +6008,22 @@ package body Sem_Util is\n \n       function Is_Renaming (N : Node_Id) return Boolean is\n       begin\n-         return Is_Entity_Name (N)\n-           and then Present (Renamed_Entity (Entity (N)));\n+         return\n+           Is_Entity_Name (N) and then Present (Renamed_Entity (Entity (N)));\n       end Is_Renaming;\n \n       -----------------------\n       -- Is_Valid_Renaming --\n       -----------------------\n \n       function Is_Valid_Renaming (N : Node_Id) return Boolean is\n-\n          function Check_Renaming (N : Node_Id) return Boolean;\n          --  Recursive function used to traverse all the prefixes of N\n \n+         --------------------\n+         -- Check_Renaming --\n+         --------------------\n+\n          function Check_Renaming (N : Node_Id) return Boolean is\n          begin\n             if Is_Renaming (N)\n@@ -6083,6 +6083,11 @@ package body Sem_Util is\n          return Check_Renaming (N);\n       end Is_Valid_Renaming;\n \n+      --  Local variables\n+\n+      Obj1 : Node_Id := A1;\n+      Obj2 : Node_Id := A2;\n+\n    --  Start of processing for Denotes_Same_Object\n \n    begin\n@@ -11542,14 +11547,13 @@ package body Sem_Util is\n    function Has_Prefix (N : Node_Id) return Boolean is\n    begin\n       return\n-        Nkind_In (N,\n-          N_Attribute_Reference,\n-          N_Expanded_Name,\n-          N_Explicit_Dereference,\n-          N_Indexed_Component,\n-          N_Reference,\n-          N_Selected_Component,\n-          N_Slice);\n+        Nkind_In (N, N_Attribute_Reference,\n+                     N_Expanded_Name,\n+                     N_Explicit_Dereference,\n+                     N_Indexed_Component,\n+                     N_Reference,\n+                     N_Selected_Component,\n+                     N_Slice);\n    end Has_Prefix;\n \n    ---------------------------"}]}