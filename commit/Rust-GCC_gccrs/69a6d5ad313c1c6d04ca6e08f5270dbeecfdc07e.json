{"sha": "69a6d5ad313c1c6d04ca6e08f5270dbeecfdc07e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjlhNmQ1YWQzMTNjMWM2ZDA0Y2E2ZTA4ZjUyNzBkYmVlY2ZkYzA3ZQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2016-05-25T12:25:01Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2016-05-25T12:25:01Z"}, "message": "crt0.s: Delete.\n\n\tlibgcc/\n\t* config/nvptx/crt0.s: Delete.\n\t* config/nvptx/crt0.c: New.\n\t* t-nvptx: Update.\n\n\tgcc/testsuite/\n\t* gcc.c-torture/execute/921110-1.c: Fix abort decl.\n\tadd missing 2016-05-20  Nathan Sidwell  <nathan@acm.org> entry\n\nFrom-SVN: r236702", "tree": {"sha": "0ac5398125a8651c83fd011d8241f26b073208e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ac5398125a8651c83fd011d8241f26b073208e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69a6d5ad313c1c6d04ca6e08f5270dbeecfdc07e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69a6d5ad313c1c6d04ca6e08f5270dbeecfdc07e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69a6d5ad313c1c6d04ca6e08f5270dbeecfdc07e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69a6d5ad313c1c6d04ca6e08f5270dbeecfdc07e/comments", "author": null, "committer": null, "parents": [{"sha": "3072d4ea29f3b6b8b1708bd74428db307ee4976e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3072d4ea29f3b6b8b1708bd74428db307ee4976e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3072d4ea29f3b6b8b1708bd74428db307ee4976e"}], "stats": {"total": 117, "additions": 63, "deletions": 54}, "files": [{"sha": "d41af4e00c48a3c39998ca400262bc7d9664b278", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69a6d5ad313c1c6d04ca6e08f5270dbeecfdc07e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69a6d5ad313c1c6d04ca6e08f5270dbeecfdc07e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=69a6d5ad313c1c6d04ca6e08f5270dbeecfdc07e", "patch": "@@ -1,3 +1,7 @@\n+2016-05-25  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* gcc.c-torture/execute/921110-1.c: Fix abort decl.\n+\n 2016-05-25  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/71261\n@@ -86,8 +90,8 @@\n \n 2016-05-24  Ilya Verbin  <ilya.verbin@intel.com>\n \n-\t* gcc.target/i386/avx-ceil-sfix-2-vec.c: Define __NO_MATH_INLINES before\n-\tmath.h is included.\n+\t* gcc.target/i386/avx-ceil-sfix-2-vec.c: Define __NO_MATH_INLINES\n+\tbefore math.h is included.\n \t* gcc.target/i386/avx-floor-sfix-2-vec.c: Likewise.\n \t* gcc.target/i386/avx-rint-sfix-2-vec.c: Likewise.\n \t* gcc.target/i386/avx-round-sfix-2-vec.c: Likewise.\n@@ -346,8 +350,14 @@\n \n \t* gcc.target/powerpc/vec-adde.c: Change dejagnu options, fix code\n \tformatting.\n-\t* gcc.target/powerpc/vec-adde-int128.c: Change dejagnu options, fix code\n-\tformatting.\n+\t* gcc.target/powerpc/vec-adde-int128.c: Change dejagnu options,\n+\tfix code formatting.\n+\n+2016-05-20  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* gcc.target/nvptx/uninit-decl.c: Force common storage,  add\n+\tnon-common cases.\n+\t* gcc.dg/tree-ssa/ssa-store-ccp-2.c: Add -fcommon.\n \n 2016-05-20  David Malcolm  <dmalcolm@redhat.com>\n "}, {"sha": "b04b84a65f9b92f8d00a0b72785392020aa97e25", "filename": "gcc/testsuite/gcc.c-torture/execute/921110-1.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69a6d5ad313c1c6d04ca6e08f5270dbeecfdc07e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F921110-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69a6d5ad313c1c6d04ca6e08f5270dbeecfdc07e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F921110-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F921110-1.c?ref=69a6d5ad313c1c6d04ca6e08f5270dbeecfdc07e", "patch": "@@ -1,7 +1,8 @@\n-extern int abort();\n-typedef int (*frob)();\n+extern void abort(void);\n+typedef void (*frob)();\n frob f[] = {abort};\n-main()\n+\n+int main(void)\n {\n   exit(0);\n }"}, {"sha": "0b07f0854ee1ee41be871ee77e6b063f96806f3c", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69a6d5ad313c1c6d04ca6e08f5270dbeecfdc07e/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69a6d5ad313c1c6d04ca6e08f5270dbeecfdc07e/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=69a6d5ad313c1c6d04ca6e08f5270dbeecfdc07e", "patch": "@@ -1,3 +1,9 @@\n+2016-05-25  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* config/nvptx/crt0.s: Delete.\n+\t* config/nvptx/crt0.c: New.\n+\t* t-nvptx: Update.\n+\n 2016-05-19  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* config.host [x86_64-*-cygwin*]: Handle tmake_eh_file for mixed "}, {"sha": "3b7382d43afbc2ede19997a2a5db05cf0ad8bd54", "filename": "libgcc/config/nvptx/crt0.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69a6d5ad313c1c6d04ca6e08f5270dbeecfdc07e/libgcc%2Fconfig%2Fnvptx%2Fcrt0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69a6d5ad313c1c6d04ca6e08f5270dbeecfdc07e/libgcc%2Fconfig%2Fnvptx%2Fcrt0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnvptx%2Fcrt0.c?ref=69a6d5ad313c1c6d04ca6e08f5270dbeecfdc07e", "patch": "@@ -0,0 +1,37 @@\n+/* Copyright (C) 2014-2016 Free Software Foundation, Inc.\n+\n+   This file is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published by the\n+   Free Software Foundation; either version 3, or (at your option) any\n+   later version.\n+\n+   This file is distributed in the hope that it will be useful, but\n+   WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   General Public License for more details.\n+\n+   Under Section 7 of GPL version 3, you are granted additional\n+   permissions described in the GCC Runtime Library Exception, version\n+   3.1, as published by the Free Software Foundation.\n+\n+   You should have received a copy of the GNU General Public License and\n+   a copy of the GCC Runtime Library Exception along with this program;\n+   see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+int *__exitval_ptr;\n+\n+extern void __attribute__((noreturn)) exit (int status);\n+extern int main (int, void **);\n+\n+void __attribute__((kernel))\n+__main (int *rval_ptr, int argc, void **argv)\n+{\n+  __exitval_ptr = rval_ptr;\n+  /* Store something non-zero, so the host knows something went wrong,\n+     if we fail to reach exit properly.   */\n+  if (rval_ptr)\n+    *rval_ptr = 255;\n+\n+  exit (main (argc, argv));\n+}"}, {"sha": "38327edcebdd5b847d61939426f44f902e331703", "filename": "libgcc/config/nvptx/crt0.s", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3072d4ea29f3b6b8b1708bd74428db307ee4976e/libgcc%2Fconfig%2Fnvptx%2Fcrt0.s", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3072d4ea29f3b6b8b1708bd74428db307ee4976e/libgcc%2Fconfig%2Fnvptx%2Fcrt0.s", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnvptx%2Fcrt0.s?ref=3072d4ea29f3b6b8b1708bd74428db307ee4976e", "patch": "@@ -1,45 +0,0 @@\n-\t.version 3.1\n-\t.target\tsm_30\n-\t.address_size 64\n-\n-.global .u64 %__exitval;\n-// BEGIN GLOBAL FUNCTION DEF: abort\n-.visible .func abort\n-{\n-        .reg .u64 %rd1;\n-        ld.global.u64   %rd1,[%__exitval];\n-        st.u32   [%rd1], 255;\n-        exit;\n-}\n-// BEGIN GLOBAL FUNCTION DEF: exit\n-.visible .func exit (.param .u32 %arg)\n-{\n-        .reg .u64 %rd1;\n-\t.reg .u32 %val;\n-\tld.param.u32 %val,[%arg];\n-        ld.global.u64   %rd1,[%__exitval];\n-        st.u32   [%rd1], %val;\n-        exit;\n-}\n-\n-.extern .func (.param.u32 retval) main (.param.u32 argc, .param.u64 argv);\n-\n-.visible .entry __main (.param .u64 __retval, .param.u32 __argc, .param.u64 __argv)\n-{\n-        .reg .u32 %r<3>;\n-        .reg .u64 %rd<3>;\n-\t.param.u32 %argc;\n-\t.param.u64 %argp;\n-\t.param.u32 %mainret;\n-        ld.param.u64    %rd0, [__retval];\n-        st.global.u64   [%__exitval], %rd0;\n-\n-\tld.param.u32\t%r1, [__argc];\n-\tld.param.u64\t%rd1, [__argv];\n-\tst.param.u32\t[%argc], %r1;\n-\tst.param.u64\t[%argp], %rd1;\n-        call.uni        (%mainret), main, (%argc, %argp);\n-\tld.param.u32\t%r1,[%mainret];\n-        st.s32   [%rd0], %r1;\n-        exit;\n-}"}, {"sha": "6001021ff2155ce10e2a3922774bbc9cd054f448", "filename": "libgcc/config/nvptx/t-nvptx", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69a6d5ad313c1c6d04ca6e08f5270dbeecfdc07e/libgcc%2Fconfig%2Fnvptx%2Ft-nvptx", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69a6d5ad313c1c6d04ca6e08f5270dbeecfdc07e/libgcc%2Fconfig%2Fnvptx%2Ft-nvptx", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnvptx%2Ft-nvptx?ref=69a6d5ad313c1c6d04ca6e08f5270dbeecfdc07e", "patch": "@@ -6,8 +6,8 @@ LIB2ADD=$(srcdir)/config/nvptx/malloc.asm \\\n LIB2ADDEH=\n LIB2FUNCS_EXCLUDE=__main\n \n-crt0.o: $(srcdir)/config/nvptx/crt0.s\n-\tcp $< $@\n+crt0.o: $(srcdir)/config/nvptx/crt0.c\n+\t$(crt_compile) -c $<\n \n # Prevent building \"advanced\" stuff (for example, gcov support).  We don't\n # support it, and it may cause the build to fail, because of alloca usage, for"}]}