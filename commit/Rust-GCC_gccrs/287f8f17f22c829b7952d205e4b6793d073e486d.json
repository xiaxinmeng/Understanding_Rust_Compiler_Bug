{"sha": "287f8f17f22c829b7952d205e4b6793d073e486d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg3ZjhmMTdmMjJjODI5Yjc5NTJkMjA1ZTRiNjc5M2QwNzNlNDg2ZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-12-01T08:52:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-12-01T08:52:58Z"}, "message": "re PR ada/68590 (FAIL: gnat.dg/loop_optimization19.adb scan-tree-dump-not optimized \"Index_Check\")\n\n2015-12-01  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/68590\n\t* match.pd: Merge (eq @0 @0) and (ge/le @0 @0) patterns.\n\nFrom-SVN: r231100", "tree": {"sha": "482a424d5f60ee0964183bb8a70f29849b3b5144", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/482a424d5f60ee0964183bb8a70f29849b3b5144"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/287f8f17f22c829b7952d205e4b6793d073e486d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/287f8f17f22c829b7952d205e4b6793d073e486d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/287f8f17f22c829b7952d205e4b6793d073e486d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/287f8f17f22c829b7952d205e4b6793d073e486d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a6c5361c08c88e0db15bec581813b8910ba62116", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6c5361c08c88e0db15bec581813b8910ba62116", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6c5361c08c88e0db15bec581813b8910ba62116"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "800645ac4538fc6a8dfaae8f28203bfcfe62e237", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287f8f17f22c829b7952d205e4b6793d073e486d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287f8f17f22c829b7952d205e4b6793d073e486d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=287f8f17f22c829b7952d205e4b6793d073e486d", "patch": "@@ -1,3 +1,8 @@\n+2015-12-01  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/68590\n+\t* match.pd: Merge (eq @0 @0) and (ge/le @0 @0) patterns.\n+\n 2015-12-01  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-devirt.c (type_with_linkage_p, type_in_anonymous_namespace_p,"}, {"sha": "ea512fb20b9903fbb6e7d5e4e6d7ab244ef346af", "filename": "gcc/match.pd", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287f8f17f22c829b7952d205e4b6793d073e486d/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287f8f17f22c829b7952d205e4b6793d073e486d/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=287f8f17f22c829b7952d205e4b6793d073e486d", "patch": "@@ -1828,15 +1828,14 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n  \n /* Simplify comparison of something with itself.  For IEEE\n    floating-point, we can only do some of these simplifications.  */\n-(simplify\n- (eq @0 @0)\n- (if (! FLOAT_TYPE_P (TREE_TYPE (@0))\n-      || ! HONOR_NANS (TYPE_MODE (TREE_TYPE (@0))))\n-  { constant_boolean_node (true, type); }))\n-(for cmp (ge le)\n+(for cmp (eq ge le)\n  (simplify\n   (cmp @0 @0)\n-  (eq @0 @0)))\n+  (if (! FLOAT_TYPE_P (TREE_TYPE (@0))\n+       || ! HONOR_NANS (TYPE_MODE (TREE_TYPE (@0))))\n+   { constant_boolean_node (true, type); }\n+   (if (cmp != EQ_EXPR)\n+    (eq @0 @0)))))\n (for cmp (ne gt lt)\n  (simplify\n   (cmp @0 @0)"}]}