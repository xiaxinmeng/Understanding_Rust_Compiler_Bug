{"sha": "523f0450d78fc40d5231503f4ad4cc5f6bdf8139", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTIzZjA0NTBkNzhmYzQwZDUyMzE1MDNmNGFkNGNjNWY2YmRmODEzOQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2015-04-12T01:08:04Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-04-12T01:08:04Z"}, "message": "Jan Hubicka  <hubicka@ucw.cz>\n\tMartin Liska  <mliska@suse.cz>\n\n\tPR ipa/65722\n\t* g++.dg/ipa/pr65722.C: New testcase.\n\n\t* ipa-icf.c (sem_item::compare_cgraph_references): function and\n\tvariable can not match.\n\t(sem_item::update_hash_by_addr_refs): Fix handling of virtual tables.\n\t(sem_variable::equals_wpa): Fix checking of DECL_FINAL_P patch.\n\nCo-Authored-By: Martin Liska <mliska@suse.cz>\n\nFrom-SVN: r222015", "tree": {"sha": "7e5a1a4540aca33ee526f54f87dd5638bdcd70fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e5a1a4540aca33ee526f54f87dd5638bdcd70fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/523f0450d78fc40d5231503f4ad4cc5f6bdf8139", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/523f0450d78fc40d5231503f4ad4cc5f6bdf8139", "html_url": "https://github.com/Rust-GCC/gccrs/commit/523f0450d78fc40d5231503f4ad4cc5f6bdf8139", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/523f0450d78fc40d5231503f4ad4cc5f6bdf8139/comments", "author": null, "committer": null, "parents": [{"sha": "1dcdafb2e61f1e0d98e50e2fbf5ee00e2893160a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dcdafb2e61f1e0d98e50e2fbf5ee00e2893160a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dcdafb2e61f1e0d98e50e2fbf5ee00e2893160a"}], "stats": {"total": 69, "additions": 54, "deletions": 15}, "files": [{"sha": "19350f358944c7554a91357a750c99d17713b389", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/523f0450d78fc40d5231503f4ad4cc5f6bdf8139/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/523f0450d78fc40d5231503f4ad4cc5f6bdf8139/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=523f0450d78fc40d5231503f4ad4cc5f6bdf8139", "patch": "@@ -1,3 +1,12 @@\n+2015-04-11 Jan Hubicka  <hubicka@ucw.cz>\n+\t   Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/65722\n+\t* ipa-icf.c (sem_item::compare_cgraph_references): function and\n+\tvariable can not match.\n+\t(sem_item::update_hash_by_addr_refs): Fix handling of virtual tables.\n+\t(sem_variable::equals_wpa): Fix checking of DECL_FINAL_P patch.\n+\n 2015-04-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/65735"}, {"sha": "bdce9cd26614ac33b91d411e0b541fe64369a4a4", "filename": "gcc/ipa-icf.c", "status": "modified", "additions": 18, "deletions": 15, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/523f0450d78fc40d5231503f4ad4cc5f6bdf8139/gcc%2Fipa-icf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/523f0450d78fc40d5231503f4ad4cc5f6bdf8139/gcc%2Fipa-icf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.c?ref=523f0450d78fc40d5231503f4ad4cc5f6bdf8139", "patch": "@@ -368,6 +368,10 @@ sem_item::compare_cgraph_references (\n   if (n1 == n2)\n     return true;\n \n+  /* Never match variable and function.  */\n+  if (is_a <varpool_node *> (n1) != is_a <varpool_node *> (n2))\n+    return false;\n+\n   /* Merging two definitions with a reference to equivalent vtables, but\n      belonging to a different type may result in ipa-polymorphic-call analysis\n      giving a wrong answer about the dynamic type of instance.  */\n@@ -587,9 +591,6 @@ void\n sem_item::update_hash_by_addr_refs (hash_map <symtab_node *,\n \t\t\t\t    sem_item *> &m_symtab_node_map)\n {\n-  if (is_a <varpool_node *> (node) && DECL_VIRTUAL_P (node->decl))\n-    return;\n-\n   ipa_ref* ref;\n   inchash::hash hstate (hash);\n   for (unsigned i = 0; i < node->num_references (); i++)\n@@ -627,7 +628,7 @@ sem_item::update_hash_by_local_refs (hash_map <symtab_node *,\n       ref = node->iterate_reference (j, ref);\n       sem_item **result = m_symtab_node_map.get (ref->referring);\n       if (result)\n-\tstate.merge_hash ((*result)->hash);\n+\tstate.add_int (ref->referring->type);\n     }\n \n   if (type == FUNC)\n@@ -1667,17 +1668,19 @@ sem_variable::equals_wpa (sem_item *item,\n \t\t\t\t      ref->address_matters_p ()))\n \treturn false;\n \n-      /* DECL_FINAL_P flag on methods referred by virtual tables is used\n-\t to decide on completeness possible_polymorphic_call_targets lists\n-\t and therefore it must match.  */\n-      if ((DECL_VIRTUAL_P (decl) || DECL_VIRTUAL_P (item->decl))\n-\t  && (DECL_VIRTUAL_P (ref->referred->decl)\n-\t      || DECL_VIRTUAL_P (ref2->referred->decl))\n-\t  && ((DECL_VIRTUAL_P (ref->referred->decl)\n-\t       != DECL_VIRTUAL_P (ref2->referred->decl))\n-\t      || (DECL_FINAL_P (ref->referred->decl)\n-\t\t  != DECL_FINAL_P (ref2->referred->decl))))\n-        return return_false_with_msg (\"virtual or final flag mismatch\");\n+      /* When matching virtual tables, be sure to also match information\n+ \t relevant for polymorphic call analysis.  */\n+      if (DECL_VIRTUAL_P (decl) || DECL_VIRTUAL_P (item->decl))\n+\t{\n+\t  if (DECL_VIRTUAL_P (ref->referred->decl)\n+\t      != DECL_VIRTUAL_P (ref2->referred->decl))\n+            return return_false_with_msg (\"virtual flag mismatch\");\n+\t  if (DECL_VIRTUAL_P (ref->referred->decl)\n+\t      && is_a <cgraph_node *> (ref->referred)\n+\t      && (DECL_FINAL_P (ref->referred->decl)\n+\t\t  != DECL_FINAL_P (ref2->referred->decl)))\n+            return return_false_with_msg (\"final flag mismatch\");\n+\t}\n     }\n \n   return true;"}, {"sha": "401bf14cc55385334f9fa07ffb0bc523768bf8c0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/523f0450d78fc40d5231503f4ad4cc5f6bdf8139/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/523f0450d78fc40d5231503f4ad4cc5f6bdf8139/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=523f0450d78fc40d5231503f4ad4cc5f6bdf8139", "patch": "@@ -1,3 +1,9 @@\n+2015-04-11 Jan Hubicka  <hubicka@ucw.cz>\n+\t   Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/65722\n+\t* g++.dg/ipa/pr65722.C: New testcase.\n+\n 2015-04-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/65735"}, {"sha": "ee4ea24c25cfa62ef8051dd6cfc5ae2d80010e79", "filename": "gcc/testsuite/g++.dg/ipa/pr65722.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/523f0450d78fc40d5231503f4ad4cc5f6bdf8139/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr65722.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/523f0450d78fc40d5231503f4ad4cc5f6bdf8139/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr65722.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr65722.C?ref=523f0450d78fc40d5231503f4ad4cc5f6bdf8139", "patch": "@@ -0,0 +1,21 @@\n+// { dg-do compile }\n+// { dg-options \"-O -fipa-icf -fno-rtti\" }\n+\n+struct A\n+{\n+  virtual void f ()\n+  {\n+    __builtin_abort ();\n+  }\n+  virtual void g ();\n+};\n+\n+struct B : virtual A { };\n+struct C : B, virtual A { };\n+\n+void foo()\n+{\n+  C c;\n+  C *p = &c;\n+  p->f ();\n+}"}]}