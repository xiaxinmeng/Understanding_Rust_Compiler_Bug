{"sha": "7d45fb9420c0d23774e3e34730cd6d847d78a90a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q0NWZiOTQyMGMwZDIzNzc0ZTNlMzQ3MzBjZDZkODQ3ZDc4YTkwYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2009-10-02T18:52:15Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2009-10-02T18:52:15Z"}, "message": "re PR debug/40521 (-g causes GCC to generate .eh_frame)\n\n\tPR debug/40521\n\t* configure.ac (HAVE_GAS_CFI_SECTIONS_DIRECTIVE): New test.\n\t* configure: Regenerated.\n\t* config.in: Regenerated.\n\t* dwarf2out.c (dwarf2out_do_cfi_asm): Return false if\n\t!HAVE_GAS_CFI_SECTIONS_DIRECTIVE and not emitting .eh_frame.\n\t(dwarf2out_init): If HAVE_GAS_CFI_SECTIONS_DIRECTIVE and\n\tnot emitting .eh_frame, emit .cfi_sections .debug_frame\n\tdirective.\n\nFrom-SVN: r152414", "tree": {"sha": "b601d10cfde53e6771be0e872d53e7560bd0ad31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b601d10cfde53e6771be0e872d53e7560bd0ad31"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d45fb9420c0d23774e3e34730cd6d847d78a90a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d45fb9420c0d23774e3e34730cd6d847d78a90a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d45fb9420c0d23774e3e34730cd6d847d78a90a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d45fb9420c0d23774e3e34730cd6d847d78a90a/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ce1cfdbd5170c67adb822ea2d9ea69f53ffa2099", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce1cfdbd5170c67adb822ea2d9ea69f53ffa2099", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce1cfdbd5170c67adb822ea2d9ea69f53ffa2099"}], "stats": {"total": 83, "additions": 83, "deletions": 0}, "files": [{"sha": "f16eff0161af82c2696f0e3df430e4bc949a32d9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d45fb9420c0d23774e3e34730cd6d847d78a90a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d45fb9420c0d23774e3e34730cd6d847d78a90a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7d45fb9420c0d23774e3e34730cd6d847d78a90a", "patch": "@@ -1,5 +1,15 @@\n 2009-10-02  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR debug/40521\n+\t* configure.ac (HAVE_GAS_CFI_SECTIONS_DIRECTIVE): New test.\n+\t* configure: Regenerated.\n+\t* config.in: Regenerated.\n+\t* dwarf2out.c (dwarf2out_do_cfi_asm): Return false if\n+\t!HAVE_GAS_CFI_SECTIONS_DIRECTIVE and not emitting .eh_frame.\n+\t(dwarf2out_init): If HAVE_GAS_CFI_SECTIONS_DIRECTIVE and\n+\tnot emitting .eh_frame, emit .cfi_sections .debug_frame\n+\tdirective.\n+\n \tPR debug/41404\n \tPR debug/41353\n \t* cfgexpand.c (expand_debug_expr) <case STRING_CST>: Don't create"}, {"sha": "12573fd1579346ce2102b7b03c2e0d9f87f36f36", "filename": "gcc/config.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d45fb9420c0d23774e3e34730cd6d847d78a90a/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d45fb9420c0d23774e3e34730cd6d847d78a90a/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=7d45fb9420c0d23774e3e34730cd6d847d78a90a", "patch": "@@ -887,6 +887,12 @@\n #endif\n \n \n+/* Define 0/1 if your assembler supports .cfi_sections. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_GAS_CFI_SECTIONS_DIRECTIVE\n+#endif\n+\n+\n /* Define if your assembler supports the .loc discriminator sub-directive. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_GAS_DISCRIMINATOR"}, {"sha": "a1e28a79e4b0dd7a79a23779f5dfc43d12de23a3", "filename": "gcc/configure", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d45fb9420c0d23774e3e34730cd6d847d78a90a/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d45fb9420c0d23774e3e34730cd6d847d78a90a/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=7d45fb9420c0d23774e3e34730cd6d847d78a90a", "patch": "@@ -21542,6 +21542,42 @@ cat >>confdefs.h <<_ACEOF\n _ACEOF\n \n \n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for cfi sections directive\" >&5\n+$as_echo_n \"checking assembler for cfi sections directive... \" >&6; }\n+if test \"${gcc_cv_as_cfi_sections_directive+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  gcc_cv_as_cfi_sections_directive=no\n+  if test x$gcc_cv_as != x; then\n+    echo '\t.text\n+\t.cfi_sections .debug_frame, .eh_frame\n+\t.cfi_startproc\n+\t.cfi_endproc' > conftest.s\n+    if { ac_try='$gcc_cv_as  -o conftest.o conftest.s >&5'\n+  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; }\n+    then\n+\tgcc_cv_as_cfi_sections_directive=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_cfi_sections_directive\" >&5\n+$as_echo \"$gcc_cv_as_cfi_sections_directive\" >&6; }\n+\n+\n+cat >>confdefs.h <<_ACEOF\n+#define HAVE_GAS_CFI_SECTIONS_DIRECTIVE `if test $gcc_cv_as_cfi_sections_directive = yes;\n+    then echo 1; else echo 0; fi`\n+_ACEOF\n+\n+\n # GAS versions up to and including 2.11.0 may mis-optimize\n # .eh_frame data.\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for eh_frame optimization\" >&5"}, {"sha": "d7597d283411f7d6dff61fb644ae64530da771cc", "filename": "gcc/configure.ac", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d45fb9420c0d23774e3e34730cd6d847d78a90a/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d45fb9420c0d23774e3e34730cd6d847d78a90a/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=7d45fb9420c0d23774e3e34730cd6d847d78a90a", "patch": "@@ -2301,6 +2301,17 @@ AC_DEFINE_UNQUOTED(HAVE_GAS_CFI_PERSONALITY_DIRECTIVE,\n     then echo 1; else echo 0; fi`],\n   [Define 0/1 if your assembler supports .cfi_personality.])\n \n+gcc_GAS_CHECK_FEATURE([cfi sections directive],\n+  gcc_cv_as_cfi_sections_directive, ,,\n+[\t.text\n+\t.cfi_sections .debug_frame, .eh_frame\n+\t.cfi_startproc\n+\t.cfi_endproc])\n+AC_DEFINE_UNQUOTED(HAVE_GAS_CFI_SECTIONS_DIRECTIVE,\n+  [`if test $gcc_cv_as_cfi_sections_directive = yes;\n+    then echo 1; else echo 0; fi`],\n+  [Define 0/1 if your assembler supports .cfi_sections.])\n+\n # GAS versions up to and including 2.11.0 may mis-optimize\n # .eh_frame data.\n gcc_GAS_CHECK_FEATURE(eh_frame optimization, gcc_cv_as_eh_frame,"}, {"sha": "2728cfdbbfbf1c38251a08ee7c49fcbb7242f6c7", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d45fb9420c0d23774e3e34730cd6d847d78a90a/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d45fb9420c0d23774e3e34730cd6d847d78a90a/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=7d45fb9420c0d23774e3e34730cd6d847d78a90a", "patch": "@@ -179,6 +179,16 @@ dwarf2out_do_cfi_asm (void)\n   if ((enc & 0x70) != 0 && (enc & 0x70) != DW_EH_PE_pcrel)\n     return false;\n \n+  if (!HAVE_GAS_CFI_SECTIONS_DIRECTIVE)\n+    {\n+#ifdef TARGET_UNWIND_INFO\n+      return false;\n+#else\n+      if (USING_SJLJ_EXCEPTIONS || (!flag_unwind_tables && !flag_exceptions))\n+\treturn false;\n+#endif\n+    }\n+\n   saved_do_cfi_asm = true;\n   return true;\n }\n@@ -18628,6 +18638,16 @@ dwarf2out_init (const char *filename ATTRIBUTE_UNUSED)\n       switch_to_section (cold_text_section);\n       ASM_OUTPUT_LABEL (asm_out_file, cold_text_section_label);\n     }\n+\n+#ifdef HAVE_GAS_CFI_SECTIONS_DIRECTIVE\n+  if (dwarf2out_do_cfi_asm ())\n+    {\n+#ifndef TARGET_UNWIND_INFO\n+      if (USING_SJLJ_EXCEPTIONS || (!flag_unwind_tables && !flag_exceptions))\n+#endif\n+\tfprintf (asm_out_file, \"\\t.cfi_sections\\t.debug_frame\\n\");\n+    }\n+#endif\n }\n \n /* A helper function for dwarf2out_finish called through"}]}