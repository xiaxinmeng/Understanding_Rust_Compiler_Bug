{"sha": "a92bf1b1c7942a6fb8af77bf8d90382aab60341f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTkyYmYxYjFjNzk0MmE2ZmI4YWY3N2JmOGQ5MDM4MmFhYjYwMzQxZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-11-27T14:22:29Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-11-27T14:22:29Z"}, "message": "re PR middle-end/64088 (ICE: in fold_abs_const, at fold-const.c:15550)\n\n2014-11-27  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/64088\n\t* fold-const.c (const_unop): Re-instantiate missing condition\n\tbefore calling fold_abs_const.\n\n\t* gcc.dg/torture/pr64088.c: New testcase.\n\n\tPR tree-optimization/64088\n\t* tree-ssa-tail-merge.c (update_debug_stmt): After resetting\n\tthe stmt break from the loop over use operands.\n\n\t* gcc.dg/torture/pr64091.c: New testcase.\n\nFrom-SVN: r218128", "tree": {"sha": "5019f45050c3cfff3b6741586bbc44dd2531f212", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5019f45050c3cfff3b6741586bbc44dd2531f212"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a92bf1b1c7942a6fb8af77bf8d90382aab60341f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a92bf1b1c7942a6fb8af77bf8d90382aab60341f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a92bf1b1c7942a6fb8af77bf8d90382aab60341f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a92bf1b1c7942a6fb8af77bf8d90382aab60341f/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c17eac85616572b7e1163cfb87d95a7875c89407", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c17eac85616572b7e1163cfb87d95a7875c89407", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c17eac85616572b7e1163cfb87d95a7875c89407"}], "stats": {"total": 82, "additions": 71, "deletions": 11}, "files": [{"sha": "dad0704a4e24f21a869d9eb54da549e5b87a3ccc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92bf1b1c7942a6fb8af77bf8d90382aab60341f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92bf1b1c7942a6fb8af77bf8d90382aab60341f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a92bf1b1c7942a6fb8af77bf8d90382aab60341f", "patch": "@@ -1,3 +1,13 @@\n+2014-11-27  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/64088\n+\t* fold-const.c (const_unop): Re-instantiate missing condition\n+\tbefore calling fold_abs_const.\n+\n+\tPR tree-optimization/64088\n+\t* tree-ssa-tail-merge.c (update_debug_stmt): After resetting\n+\tthe stmt break from the loop over use operands.\n+\n 2014-11-27  Ilya Tocar  <ilya.tocar@intel.com>\n \n \t* config/i386/cpuid.h (bit_MPX, bit_BNDREGS, bit_BNDCSR):"}, {"sha": "486ca19aa38403ca558f20d98d05742555f19a35", "filename": "gcc/fold-const.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92bf1b1c7942a6fb8af77bf8d90382aab60341f/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92bf1b1c7942a6fb8af77bf8d90382aab60341f/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=a92bf1b1c7942a6fb8af77bf8d90382aab60341f", "patch": "@@ -1481,7 +1481,9 @@ const_unop (enum tree_code code, tree type, tree arg0)\n       }\n \n     case ABS_EXPR:\n-      return fold_abs_const (arg0, type);\n+      if (TREE_CODE (arg0) == INTEGER_CST || TREE_CODE (arg0) == REAL_CST)\n+\treturn fold_abs_const (arg0, type);\n+      break;\n \n     case CONJ_EXPR:\n       if (TREE_CODE (arg0) == COMPLEX_CST)"}, {"sha": "8c40dbd273ff4346dc522859d6497b1b2c33e1dd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92bf1b1c7942a6fb8af77bf8d90382aab60341f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92bf1b1c7942a6fb8af77bf8d90382aab60341f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a92bf1b1c7942a6fb8af77bf8d90382aab60341f", "patch": "@@ -1,3 +1,11 @@\n+2014-11-27  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/64088\n+\t* gcc.dg/torture/pr64088.c: New testcase.\n+\n+\tPR tree-optimization/64088\n+\t* gcc.dg/torture/pr64091.c: New testcase.\n+\n 2014-11-27  Ilya Tocar  <ilya.tocar@intel.com>\n \n \t* g++.dg/ext/mv2.C: Add test for target (\"avx512f\")."}, {"sha": "0ea5fabcc2fc30833d9ab80ce30090f23e46594b", "filename": "gcc/testsuite/gcc.dg/torture/pr64088.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92bf1b1c7942a6fb8af77bf8d90382aab60341f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr64088.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92bf1b1c7942a6fb8af77bf8d90382aab60341f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr64088.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr64088.c?ref=a92bf1b1c7942a6fb8af77bf8d90382aab60341f", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+\n+extern int abs (int);\n+extern void attenuate_curve(int*);\n+int a;\n+void\n+setup_tone_curves_center_boost ()\n+{\n+  int b[0];\n+  a = 0;\n+  for (; a < 6; a++)\n+    {\n+      int c = abs (a);\n+      b[a] = c;\n+    }\n+  attenuate_curve (b);\n+}"}, {"sha": "0cd994aede88b157d5153c30f8d1d840608c985c", "filename": "gcc/testsuite/gcc.dg/torture/pr64091.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92bf1b1c7942a6fb8af77bf8d90382aab60341f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr64091.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92bf1b1c7942a6fb8af77bf8d90382aab60341f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr64091.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr64091.c?ref=a92bf1b1c7942a6fb8af77bf8d90382aab60341f", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-g\" } */\n+\n+extern int foo(void);\n+\n+int main(void)\n+{\n+  int i, a, b;\n+\n+  if (foo())\n+    return 0;\n+\n+  for (i = 0, a = 0, b = 0; i < 3; i++, a++)\n+  {\n+    if (foo())\n+      break;\n+\n+    if (b += a)\n+      a = 0;\n+  }\n+\n+  if (!a)\n+    return 2;\n+\n+  b += a;\n+\n+  return 0;\n+}"}, {"sha": "07814c913e67fc91af1a9adde19fcfcc7fed4983", "filename": "gcc/tree-ssa-tail-merge.c", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a92bf1b1c7942a6fb8af77bf8d90382aab60341f/gcc%2Ftree-ssa-tail-merge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a92bf1b1c7942a6fb8af77bf8d90382aab60341f/gcc%2Ftree-ssa-tail-merge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-tail-merge.c?ref=a92bf1b1c7942a6fb8af77bf8d90382aab60341f", "patch": "@@ -1606,29 +1606,24 @@ update_debug_stmt (gimple stmt)\n {\n   use_operand_p use_p;\n   ssa_op_iter oi;\n-  basic_block bbdef, bbuse;\n-  gimple def_stmt;\n-  tree name;\n+  basic_block bbuse;\n \n   if (!gimple_debug_bind_p (stmt))\n     return;\n \n   bbuse = gimple_bb (stmt);\n   FOR_EACH_PHI_OR_STMT_USE (use_p, stmt, oi, SSA_OP_USE)\n     {\n-      name = USE_FROM_PTR (use_p);\n-      gcc_assert (TREE_CODE (name) == SSA_NAME);\n-\n-      def_stmt = SSA_NAME_DEF_STMT (name);\n-      gcc_assert (def_stmt != NULL);\n-\n-      bbdef = gimple_bb (def_stmt);\n+      tree name = USE_FROM_PTR (use_p);\n+      gimple def_stmt = SSA_NAME_DEF_STMT (name);\n+      basic_block bbdef = gimple_bb (def_stmt);\n       if (bbdef == NULL || bbuse == bbdef\n \t  || dominated_by_p (CDI_DOMINATORS, bbuse, bbdef))\n \tcontinue;\n \n       gimple_debug_bind_reset_value (stmt);\n       update_stmt (stmt);\n+      break;\n     }\n }\n "}]}