{"sha": "1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWYwZDcxYzViYjhiNmRiOTZjMGI5OWNjZmFkOTVkMTU3ZjRmMjA2NA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-01-08T11:45:22Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-01-08T11:45:22Z"}, "message": "class.c (duplicate_tag_error): Adjust diagnostic.\n\ncp:\n\t* class.c (duplicate_tag_error): Adjust diagnostic.\n\t(finish_struct): Locally set location to start of struct.\n\t* decl.c (fixup_anonymous_aggr): Use cp_error_at.\ntestsuite:\n\t* g++.old-deja/g++.benjamin/15309-1.C: Expect diagnostic at\n\tstart of structs.\n\t* g++.old-deja/g++.benjamin/15309-2.C: Likewise.\n\t* g++.old-deja/g++.brendan/crash17.C: Likewise.\n\t* g++.old-deja/g++.brendan/crash29.C: Likewise.\n\t* g++.old-deja/g++.brendan/crash48.C: Likewise.\n\t* g++.old-deja/g++.brendan/ns1.C: Likewise.\n\t* g++.old-deja/g++.brendan/warnings1.C: Likewise.\n\t* g++.old-deja/g++.bugs/900205_04.C: Likewise.\n\t* g++.old-deja/g++.bugs/900514_03.C: Likewise.\n\t* g++.old-deja/g++.eh/spec6.C: Likewise.\n\t* g++.old-deja/g++.jason/crash3.C: Likewise.\n\t* g++.old-deja/g++.law/ctors11.C: Likewise.\n\t* g++.old-deja/g++.law/ctors17.C: Likewise.\n\t* g++.old-deja/g++.law/ctors5.C: Likewise.\n\t* g++.old-deja/g++.law/ctors9.C: Likewise.\n\t* g++.old-deja/g++.mike/ambig1.C: Likewise.\n\t* g++.old-deja/g++.mike/net22.C: Likewise.\n\t* g++.old-deja/g++.mike/p3538a.C: Likewise.\n\t* g++.old-deja/g++.mike/p3538b.C: Likewise.\n\t* g++.old-deja/g++.mike/virt3.C: Likewise.\n\t* g++.old-deja/g++.niklas/t128.C: Likewise.\n\t* g++.old-deja/g++.other/anon4.C: Likewise.\n\t* g++.old-deja/g++.other/using1.C: Likewise.\n\t* g++.old-deja/g++.other/warn3.C: Likewise.\n\t* g++.old-deja/g++.pt/t37.C: Likewise.\n\t* g++.old-deja/g++.robertl/eb69.C: Likewise.\n\t* g++.old-deja/g++.robertl/eb71.C: Likewise.\n\nFrom-SVN: r38798", "tree": {"sha": "72296bcec27421bafd13d8b6ff336a18c5760854", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72296bcec27421bafd13d8b6ff336a18c5760854"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/comments", "author": null, "committer": null, "parents": [{"sha": "5bf15e846bf1aa784d9abc09c5402f309fb0bf46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bf15e846bf1aa784d9abc09c5402f309fb0bf46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bf15e846bf1aa784d9abc09c5402f309fb0bf46"}], "stats": {"total": 196, "additions": 122, "deletions": 74}, "files": [{"sha": "91d53afc9d620eabbbc7ba3b0fd726c4c0337bce", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -1,3 +1,9 @@\n+2001-01-08  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* class.c (duplicate_tag_error): Adjust diagnostic.\n+\t(finish_struct): Locally set location to start of struct.\n+\t* decl.c (fixup_anonymous_aggr): Use cp_error_at.\n+\n 2001-01-08  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* decl.c (struct binding_level): Adjust class_shadowed comments"}, {"sha": "08027ef91d744a93e141b0e11b4b54404db5799d", "filename": "gcc/cp/class.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -1,6 +1,6 @@\n /* Functions related to building classes and their related objects.\n    Copyright (C) 1987, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000 Free Software Foundation, Inc.\n+   1999, 2000, 2001  Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com)\n \n This file is part of GNU CC.\n@@ -2316,7 +2316,7 @@ duplicate_tag_error (t)\n      tree t;\n {\n   cp_error (\"redefinition of `%#T'\", t);\n-  cp_error_at (\"previous definition here\", t);\n+  cp_error_at (\"previous definition of `%#T'\", t);\n \n   /* Pretend we haven't defined this type.  */\n \n@@ -5328,12 +5328,20 @@ tree\n finish_struct (t, attributes)\n      tree t, attributes;\n {\n+  char *saved_filename = input_filename;\n+  int saved_lineno = lineno;\n+\n   /* Now that we've got all the field declarations, reverse everything\n      as necessary.  */\n   unreverse_member_declarations (t);\n \n   cplus_decl_attributes (t, attributes, NULL_TREE);\n \n+  /* Nadger the current location so that diagnostics point to the start of\n+     the struct, not the end.  */\n+  input_filename = DECL_SOURCE_FILE (TYPE_NAME (t));\n+  lineno = DECL_SOURCE_LINE (TYPE_NAME (t));\n+\n   if (processing_template_decl)\n     {\n       finish_struct_methods (t);\n@@ -5342,6 +5350,9 @@ finish_struct (t, attributes)\n   else\n     finish_struct_1 (t);\n \n+  input_filename = saved_filename;\n+  lineno = saved_lineno;\n+\n   TYPE_BEING_DEFINED (t) = 0;\n \n   if (current_class_type)"}, {"sha": "58fa5cda3e22366e430d56935e78c31312d75c3a", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -6837,7 +6837,7 @@ fixup_anonymous_aggr (t)\n \n   /* ISO C++ 9.5.3.  Anonymous unions may not have function members.  */\n   if (TYPE_METHODS (t))\n-    error (\"an anonymous union cannot have function members\");\n+    cp_error_at (\"an anonymous union cannot have function members\", t);\n }\n \n /* Make sure that a declaration with no declarator is well-formed, i.e."}, {"sha": "4be78f2b329615babe4f0dbe4f9c7a136f9ddc22", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -1,3 +1,34 @@\n+2001-01-08  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.old-deja/g++.benjamin/15309-1.C: Expect diagnostic at\n+\tstart of structs.\n+\t* g++.old-deja/g++.benjamin/15309-2.C: Likewise.\n+\t* g++.old-deja/g++.brendan/crash17.C: Likewise.\n+\t* g++.old-deja/g++.brendan/crash29.C: Likewise.\n+\t* g++.old-deja/g++.brendan/crash48.C: Likewise.\n+\t* g++.old-deja/g++.brendan/ns1.C: Likewise.\n+\t* g++.old-deja/g++.brendan/warnings1.C: Likewise.\n+\t* g++.old-deja/g++.bugs/900205_04.C: Likewise.\n+\t* g++.old-deja/g++.bugs/900514_03.C: Likewise.\n+\t* g++.old-deja/g++.eh/spec6.C: Likewise.\n+\t* g++.old-deja/g++.jason/crash3.C: Likewise.\n+\t* g++.old-deja/g++.law/ctors11.C: Likewise.\n+\t* g++.old-deja/g++.law/ctors17.C: Likewise.\n+\t* g++.old-deja/g++.law/ctors5.C: Likewise.\n+\t* g++.old-deja/g++.law/ctors9.C: Likewise.\n+\t* g++.old-deja/g++.mike/ambig1.C: Likewise.\n+\t* g++.old-deja/g++.mike/net22.C: Likewise.\n+\t* g++.old-deja/g++.mike/p3538a.C: Likewise.\n+\t* g++.old-deja/g++.mike/p3538b.C: Likewise.\n+\t* g++.old-deja/g++.mike/virt3.C: Likewise.\n+\t* g++.old-deja/g++.niklas/t128.C: Likewise.\n+\t* g++.old-deja/g++.other/anon4.C: Likewise.\n+\t* g++.old-deja/g++.other/using1.C: Likewise.\n+\t* g++.old-deja/g++.other/warn3.C: Likewise.\n+\t* g++.old-deja/g++.pt/t37.C: Likewise.\n+\t* g++.old-deja/g++.robertl/eb69.C: Likewise.\n+\t* g++.old-deja/g++.robertl/eb71.C: Likewise.\n+\n 2001-01-08  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.old-deja/g++.other/lookup16.C: Remove XFAIL."}, {"sha": "ac3a5ec09716cb4d74b800eb7ecdc51e17d9515d", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/15309-1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15309-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15309-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15309-1.C?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -10,11 +10,11 @@ public:\n };\n \n class miami : public bahamian\n-{\n+{ // WARNING - // WARNING -\n public:\n    miami ();\n    ~miami ();\n-}; // WARNING - // WARNING -        \n+};\n \n \n "}, {"sha": "5a8155a36439fbc9b6123a81c2faa16e5d2471d3", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/15309-2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15309-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15309-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15309-2.C?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -3,8 +3,8 @@\n // Build don't link: \n // Special g++ Options: -Wnon-virtual-dtor -Weffc++\n \n-class bermuda {\n+class bermuda {  // WARNING - // WARNING -\n public:\n   virtual int func1(int); \n   ~bermuda();\n-};  // WARNING - // WARNING -\n+};"}, {"sha": "70da8d50ada92165c451095353f89331bf9699d8", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash17.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash17.C?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -30,6 +30,6 @@ class GnWidget : public GnObject {\n     virtual ~GnWidget();\n };\n \n-class GnOptionGroup : public GnObject, public GnWidget {\n-};// ERROR -  warning\n+class GnOptionGroup : public GnObject, public GnWidget {// ERROR -  warning\n+};\n "}, {"sha": "b6af6a4d9113c816363396f86496d64648795f56", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash29.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash29.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash29.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash29.C?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -7,9 +7,9 @@ union Value\n };\n \n struct GlobalAddress\n-{\n+{// ERROR -  candidates .*\n \tGlobalAddress(Value *nvar){}// ERROR - .*\n-};// ERROR -  candidates .*\n+};\n \n int\n main()"}, {"sha": "86523d82d9c79bf954f753666b5100d7d6060311", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash48.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash48.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash48.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash48.C?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -1,14 +1,14 @@\n // Build don't link: \n // GROUPS passed old-abort\n-class internal {\n+class internal { // ERROR - candidates are\n \tint field;\n \tint anotherfield;\n-}; // ERROR - candidates are\n+};\n \n-class bug {\n+class bug { // ERROR - several errors\n \tinternal* numbers;\n \tbug(int size);\n-}; // ERROR - several errors\n+};\n \n bug::bug(int size)\n { // ERROR - candidates"}, {"sha": "312c93ae618443dababa20e96246b1a642c7d30d", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/ns1.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fns1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fns1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fns1.C?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -7,12 +7,12 @@ struct B\n };\n   \n class C \n-{\n+{ // ERROR -  warning\n   int g();\n-};// ERROR -  warning\n+};\n \n class D2 : public B \n-{\n+{ // ERROR - type C is not a base type for type D2\n   using B::f;  // ok: B is a base of D\n   using C::g;  // error: C isn't a base of D2\n-}; // ERROR - type C is not a base type for type D2\n+};"}, {"sha": "962e718d01c9a98e031229884ea895e6a33fb328", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/warnings1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fwarnings1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fwarnings1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fwarnings1.C?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -1,6 +1,6 @@\n // Build don't link: \n // GROUPS passed warnings\n // there should be a warning about foo only defining private methods\n-class foo {\n+class foo { // ERROR - .*\n   int bar();\n-};// ERROR - .*\n+};"}, {"sha": "976951815cf6a7355b910fae48523dc054da9288", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900205_04.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900205_04.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900205_04.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900205_04.C?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -18,8 +18,8 @@ struct0::struct0 (int, void *)\n {\n }\n \n-struct struct0_derived_struct_0 : public struct0 {\n-};\t\t\t\t\t\t\t// ERROR - \n+struct struct0_derived_struct_0 : public struct0 { // ERROR - \n+};\n \n // struct0_derived_struct_0 object;\t// would give g++ error if compiled\n "}, {"sha": "7c4089a1bbf8953dc5a729897453c43740b680e0", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900514_03.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900514_03.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900514_03.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900514_03.C?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -13,12 +13,12 @@\n \n struct t_0_st_0;\n \n-struct t_0_st_1 {\n+struct t_0_st_1 { // ERROR - \n   int member;\n \n   t_0_st_1 (t_0_st_0&);// ERROR - \n   t_0_st_1 ();\n-};// ERROR - \n+};\n \n struct t_0_st_0 {\n   int member;\n@@ -80,12 +80,12 @@ void t_1_local_init ()\n \n struct t_2_st_0;\n \n-struct t_2_st_1 {\n+struct t_2_st_1 {\t\t// ERROR - candidate\n   int member;\n \n   t_2_st_1 (t_2_st_0);\t\t// ERROR - candidate\n   t_2_st_1 ();\n-};\t\t\t\t// ERROR - candidate\n+};\n \n struct t_2_st_0 {\n   int member;"}, {"sha": "1bde4cb92b85ee526260c65575fc5312adc9d5cb", "filename": "gcc/testsuite/g++.old-deja/g++.eh/spec6.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fspec6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fspec6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fspec6.C?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -123,10 +123,10 @@ struct B1 : A\n };\n \n struct C : A, A1\n-{\n+{ // ERROR - looser throw - A::~A()\n   virtual void foo() throw(int);    // ERROR - looser throw - A::foo\n   virtual void bar() throw(int);    // ERROR - looser throw - A1::bar\n-}; // ERROR - looser throw - A::~A()\n+};\n \n struct D : A, A1\n {"}, {"sha": "bf63291abefc4ea9a887e93be197fa96fd92c018", "filename": "gcc/testsuite/g++.old-deja/g++.jason/crash3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fcrash3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fcrash3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fcrash3.C?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -3,9 +3,9 @@\n // Build don't link:\n \n struct Node\n-{\n+{\t\t\t\t// ERROR - \n   Node* child[2];\n-};\t\t\t\t// ERROR - \n+};\n \n void bug(int i)\n {"}, {"sha": "195a8234560a652ac0af0615d29001aef9583e0d", "filename": "gcc/testsuite/g++.old-deja/g++.law/ctors11.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors11.C?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -10,10 +10,10 @@ public:\n   inline A(int x){printf(\"constructing A with %d\\n\", x);}\n };\n \n-class B:public A{\n+class B:public A{ // ERROR - non-default constructor\n private:\n public:\n-}; // ERROR - non-default constructor\n+};\n \n int main()\n {"}, {"sha": "1f5f0b00c6ce4d299833b801bc6deef2f1885f59", "filename": "gcc/testsuite/g++.old-deja/g++.law/ctors17.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors17.C?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -9,10 +9,10 @@\n \n #include <fstream.h>\n \n-class X : public ifstream {\n+class X : public ifstream { // ERROR - candidate\n     public:\n       X(int a, char *b) {} // ERROR - candidate\n-}; // ERROR - candidate\n+};\n int main()\n {\n     X *y = new X(10, \"123\");"}, {"sha": "faba9ba98b5e2991fdb3534b40d0c75fafc3ed35", "filename": "gcc/testsuite/g++.old-deja/g++.law/ctors5.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors5.C?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -5,13 +5,13 @@\n // Date: Tue, 1 Sep 92 10:38:44 EDT\n \n class X\n-{\n+{ // ERROR - candidate\n   private:\n     int x;\n   public:\n     static const X x0;\n     X( int );\n-}; // ERROR - candidate\n+};\n \n class Y\n {"}, {"sha": "4a7d24c6664d568dc280ebc23b6bb60cd1ff6a05", "filename": "gcc/testsuite/g++.old-deja/g++.law/ctors9.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors9.C?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -21,9 +21,9 @@ Foo::Foo(int aa)\n \n \n struct var_Foo: public Foo\n-{\n+{ // ERROR -  base.*// ERROR -  in class.*\n   var_Foo* operator-> () {return this;}\n-};// ERROR -  base.*// ERROR -  in class.*\n+};\n \n int blort(Foo& f)\n {"}, {"sha": "97200e2a8e79e405a2b63b4057600eb1e63b3c6e", "filename": "gcc/testsuite/g++.old-deja/g++.mike/ambig1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fambig1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fambig1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fambig1.C?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -20,8 +20,8 @@ class lM : public M {\n class rM : public M {\n };\n \n-class D : public lM, rM {\n-} d;\t\t\t\t// ERROR - ambiguous function\n+class D : public lM, rM { // ERROR - ambiguous function\n+} d;\n \n int main() {\n   ((lM*)&d)->i = 1;"}, {"sha": "ff37d872a7824b833139632865123bf2250e95b2", "filename": "gcc/testsuite/g++.old-deja/g++.mike/net22.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet22.C?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -4,8 +4,8 @@ public:\n   Parent( char *s ) {}\n };\n \n-class Child : public Parent {\n-};\t\t\t\t// ERROR - called\n+class Child : public Parent {\t\t// ERROR - called\n+};\n \n int main() {\n   Child c( \"String initializer\" );\t// ERROR - bad"}, {"sha": "6335c9631be48a3736e014bb4419daa79acc1287", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p3538a.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp3538a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp3538a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp3538a.C?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -25,9 +25,9 @@ class ccHandleBase : public ccObjectInfo\n {};\n \n class cc_CircleHdl : public virtual ccHandleBase, public ccObjectInfo\n-{\n+{\t\t\t\t// WARNING - \n public:\n   virtual const ccObjectInfo& ri (int);\n-};\t\t\t\t// WARNING - \n+};\n \n class ccCircleHdl : public ccHandle <cc_CircleHdl> {};"}, {"sha": "b9bead04594061b1e372e0bb80273b4c4f616787", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p3538b.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp3538b.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp3538b.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp3538b.C?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -27,9 +27,9 @@ class ccHandleBase : public ccObjectInfo\n {};\n \n class cc_CircleHdl : public virtual ccHandleBase, public ccObjectInfo\n-{\n+{\t\t\t\t// WARNING - \n public:\n   virtual const ccObjectInfo& repInvariant (int);\n-};\t\t\t\t// WARNING - \n+};\n \n class ccCircleHdl : public ccHandle <cc_CircleHdl> {};"}, {"sha": "3d482feb99245996c5540a2c22fafed1fe53e331", "filename": "gcc/testsuite/g++.old-deja/g++.mike/virt3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fvirt3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fvirt3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fvirt3.C?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -10,8 +10,8 @@ class D : private B {\n   int Di;\n };\n \n-class E : public virtual D, public B {\n+class E : public virtual D, public B {\t// WARNING - direct base inaccessible due to ambiguity\n   int Ei;\n-};\t\t// WARNING - direct base inaccessible due to ambiguity\n+};\n \n E e;"}, {"sha": "9865b8ca8e3731c00fe4cc8dfa6f356949a7b9bf", "filename": "gcc/testsuite/g++.old-deja/g++.niklas/t128.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2Ft128.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2Ft128.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2Ft128.C?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -1,5 +1,5 @@\n // Build don't link: \n // GROUPS niklas uncaught default-construct\n struct A { A (int); };\n-struct B : A {}; // ERROR - \n+struct B : A {}; // ERROR - without ctor // ERROR - candidates\n void f () { B (0); }// ERROR - .*"}, {"sha": "c6d97e14ce5206575b16e8504b527047ad11ade7", "filename": "gcc/testsuite/g++.old-deja/g++.other/anon4.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fanon4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fanon4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fanon4.C?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -10,7 +10,7 @@\n struct A\n {\n   union\n-  {\n+  {  // ERROR - anon union cannot have member fns\n     void bad();\n-  };  // ERROR - anon union cannot have member fns\n+  };\n };"}, {"sha": "a431a957a3927d5810eabf460f0b6462a35b41ce", "filename": "gcc/testsuite/g++.old-deja/g++.other/using1.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fusing1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fusing1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fusing1.C?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -9,18 +9,18 @@ protected:\n   friend class D2;\n };\n \n-class D : public B {\n+class D : public B { // ERROR - within this context\n public:\n   using B::a;\n   using B::b;\n-}; // ERROR - within this context\n+};\n \n-class D2 : public B {\n+class D2 : public B { // ERROR - conflicting access specifications\n public:\n   using B::a;\n   using B::b;\n \n private:\n   using B::b; \n-}; // ERROR - conflicting access specifications\n+};\n  "}, {"sha": "64296306102a391c84f81aff8837f84f3ffda10a", "filename": "gcc/testsuite/g++.old-deja/g++.other/warn3.C", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fwarn3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fwarn3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fwarn3.C?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -4,51 +4,51 @@ class A {\n };\n \n \n-class B {\n+class B { // WARNING - only private constructors\n public:\n   void f();\n \n private:\n   B (); \n   B (const B&);\n-}; // WARNING - only private constructors\n+};\n \n \n-class C { \n+class C {  // WARNING - only private destructors\n public: \n   void f();\n \n private:\n   ~C (); \n-}; // WARNING - only private destructors\n+};\n \n \n-class D {\n+class D { // WARNING - all member functions are private\n private:\n   void f(); \n-}; // WARNING - all member functions are private\n+};\n \n \n template <class T>\n-class X {\n+class X { // WARNING - only private destructors\n private:\n   ~X (); \n-}; // WARNING - only private destructors\n+};\n \n template class X<int>;\n template class X<double>;\n \n \n template <class T>\n-class Y {\n+class Y { // WARNING - only private constructors\n private:\n   Y (); \n   Y (const Y&);\n-}; // WARNING - only private constructors\n+};\n \n \n template <class T>\n-class Z {\n+class Z { // WARNING - all member functions are private\n private:\n   void f(); \n-}; // WARNING - all member functions are private\n+};"}, {"sha": "cb957ecdd2bc91dcf30b42b3f78f85ac3d222707", "filename": "gcc/testsuite/g++.old-deja/g++.pt/t37.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft37.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft37.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft37.C?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -1,11 +1,11 @@\n // Build don't link: \n \n-class A {\n+class A { // ERROR - synthesized copy ctor\n public:\n   A(int);\t\t\t// ERROR - referenced below\n   A(float);\t\t\t// ERROR - referenced below\n   ~A();\n-}; // ERROR - synthesized copy ctor\n+};\n \n A::A() {\t\t// ERROR - \n }"}, {"sha": "2daa5fe3e45be8367c27c0d0a369536d33fb99c6", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb69.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb69.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb69.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb69.C?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -4,9 +4,9 @@\n \n int r = 0;\n \n-struct foo {\n+struct foo {\t\t        // ERROR - candidate\n   foo(int x) { r = 1; }\t\t// ERROR - candidate\n-};\t\t\t\t// ERROR - candidate\n+};\n \n struct bar : foo {\n   typedef int an_int;"}, {"sha": "a9ed56457d1f56c7d62c16c67aa20d1cba98790f", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb71.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb71.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb71.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb71.C?ref=1f0d71c5bb8b6db96c0b99ccfad95d157f4f2064", "patch": "@@ -15,10 +15,10 @@ friend class   D;\n   unsigned      counter;\n };\n \n-class   D {\n+class   D {\t\t//WARNING - only private members\n \n   int                   ins( B*&);\n-};                    //WARNING - only private members\n+};\n \n int\n D::ins( B*& tempN)"}]}