{"sha": "96d8f1d82d37aa4f808a5bf79c33074c0b9929eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZkOGYxZDgyZDM3YWE0ZjgwOGE1YmY3OWMzMzA3NGMwYjk5MjllYg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-03-02T00:26:06Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-03-02T00:26:06Z"}, "message": "(build_binary_op): Pass TREE_TYPE (orig_op0) not\norig_op0 to TREE_UNSIGNED.\n\nFrom-SVN: r6684", "tree": {"sha": "5ff2a59a2f17879b68cfe99bd91d9900329bb4b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ff2a59a2f17879b68cfe99bd91d9900329bb4b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96d8f1d82d37aa4f808a5bf79c33074c0b9929eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96d8f1d82d37aa4f808a5bf79c33074c0b9929eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96d8f1d82d37aa4f808a5bf79c33074c0b9929eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96d8f1d82d37aa4f808a5bf79c33074c0b9929eb/comments", "author": null, "committer": null, "parents": [{"sha": "be1ad04c385fa02ff124ffe38c6b85b7dfbd2c33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be1ad04c385fa02ff124ffe38c6b85b7dfbd2c33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be1ad04c385fa02ff124ffe38c6b85b7dfbd2c33"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "9b56bf920d4b9eae65972826882d3d8fb0ef7776", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96d8f1d82d37aa4f808a5bf79c33074c0b9929eb/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96d8f1d82d37aa4f808a5bf79c33074c0b9929eb/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=96d8f1d82d37aa4f808a5bf79c33074c0b9929eb", "patch": "@@ -1952,7 +1952,7 @@ build_binary_op (code, orig_op0, orig_op1, convert_p)\n \t\t undefined if the quotient can't be represented in the\n \t\t computation mode.  We shorten only if unsigned or if\n \t\t dividing by something we know != -1.  */\n-\t      shorten = (TREE_UNSIGNED (orig_op0)\n+\t      shorten = (TREE_UNSIGNED (TREE_TYPE (orig_op0))\n \t\t\t || (TREE_CODE (op1) == INTEGER_CST\n \t\t\t     && (TREE_INT_CST_LOW (op1) != -1\n \t\t\t\t || TREE_INT_CST_HIGH (op1) != -1)));\n@@ -2000,7 +2000,7 @@ build_binary_op (code, orig_op0, orig_op1, convert_p)\n \t     on some targets, since the modulo instruction is undefined if the\n \t     quotient can't be represented in the computation mode.  We shorten\n \t     only if unsigned or if dividing by something we know != -1.  */\n-\t  shorten = (TREE_UNSIGNED (orig_op0)\n+\t  shorten = (TREE_UNSIGNED (TREE_TYPE (orig_op0))\n \t\t     || (TREE_CODE (op1) == INTEGER_CST\n \t\t\t && (TREE_INT_CST_LOW (op1) != -1\n \t\t\t     || TREE_INT_CST_HIGH (op1) != -1)));"}]}