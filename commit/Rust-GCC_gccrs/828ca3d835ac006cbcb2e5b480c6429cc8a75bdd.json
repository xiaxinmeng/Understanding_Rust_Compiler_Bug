{"sha": "828ca3d835ac006cbcb2e5b480c6429cc8a75bdd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI4Y2EzZDgzNWFjMDA2Y2JjYjJlNWI0ODBjNjQyOWNjOGE3NWJkZA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2015-11-03T00:30:07Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2015-11-03T00:30:07Z"}, "message": "[PR68083] don't introduce undefined behavior in ifcombine\n\nThe ifcombine pass may move a conditional access to an uninitialized\nvalue before the condition that ensures it is always well-defined,\nthus introducing undefined behavior.  Stop it from doing so.\n\nfor  gcc/ChangeLog\n\n\tPR tree-optimization/68083\n\t* tree-ssa-ifcombine.c: Include tree-ssa.h.\n\t(bb_no_side_effects_p): Test for undefined uses too.\n\t* tree-ssa.c (gimple_uses_undefined_value_p): New.\n\t* tree-ssa.h (gimple_uses_undefined_value_p): Declare.\n\nfor  gcc/testsuite/ChangeLog\n\n\tPR tree-optimization/68083\n\t* gcc.dg/torture/pr68083.c: New.  From Zhendong Su.\n\nFrom-SVN: r229690", "tree": {"sha": "97886b9d02ac0ccd0177983b325624a1c00e5f03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97886b9d02ac0ccd0177983b325624a1c00e5f03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/828ca3d835ac006cbcb2e5b480c6429cc8a75bdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/828ca3d835ac006cbcb2e5b480c6429cc8a75bdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/828ca3d835ac006cbcb2e5b480c6429cc8a75bdd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/828ca3d835ac006cbcb2e5b480c6429cc8a75bdd/comments", "author": null, "committer": null, "parents": [{"sha": "dac7e9b81974a69fc437d5115ebb46de11da14de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dac7e9b81974a69fc437d5115ebb46de11da14de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dac7e9b81974a69fc437d5115ebb46de11da14de"}], "stats": {"total": 77, "additions": 77, "deletions": 0}, "files": [{"sha": "a82a792435b8a0a6c71f1e6a7608b2802d8cab57", "filename": "ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828ca3d835ac006cbcb2e5b480c6429cc8a75bdd/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828ca3d835ac006cbcb2e5b480c6429cc8a75bdd/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=828ca3d835ac006cbcb2e5b480c6429cc8a75bdd", "patch": "@@ -1,3 +1,11 @@\n+2015-11-02  Alexandre Oliva <aoliva@redhat.com>\n+\n+\tPR tree-optimization/68083\n+\t* tree-ssa-ifcombine.c: Include tree-ssa.h.\n+\t(bb_no_side_effects_p): Test for undefined uses too.\n+\t* tree-ssa.c (gimple_uses_undefined_value_p): New.\n+\t* tree-ssa.h (gimple_uses_undefined_value_p): Declare.\n+\n 2015-10-23  Steve Ellcey  <sellcey@imgtec.com>\n \n \t* MAINTAINERS: Update email address."}, {"sha": "84cad3f59b75177436693bffb1b1df5758abdf81", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828ca3d835ac006cbcb2e5b480c6429cc8a75bdd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828ca3d835ac006cbcb2e5b480c6429cc8a75bdd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=828ca3d835ac006cbcb2e5b480c6429cc8a75bdd", "patch": "@@ -1,3 +1,11 @@\n+2015-11-02  Alexandre Oliva <aoliva@redhat.com>\n+\n+\tPR tree-optimization/68083\n+\t* tree-ssa-ifcombine.c: Include tree-ssa.h.\n+\t(bb_no_side_effects_p): Test for undefined uses too.\n+\t* tree-ssa.c (gimple_uses_undefined_value_p): New.\n+\t* tree-ssa.h (gimple_uses_undefined_value_p): Declare.\n+\n 2015-11-02  Jeff Law <jeff@redhat.com>\n \n \t* tree-ssa-threadupdate.c (valid_jump_thread_path): Also detect"}, {"sha": "74a0c1aa0b333ae1bfcef55ca3aa4740cf86a9a6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828ca3d835ac006cbcb2e5b480c6429cc8a75bdd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828ca3d835ac006cbcb2e5b480c6429cc8a75bdd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=828ca3d835ac006cbcb2e5b480c6429cc8a75bdd", "patch": "@@ -1,3 +1,8 @@\n+2015-11-02  Alexandre Oliva <aoliva@redhat.com>\n+\n+\tPR tree-optimization/68083\n+\t* gcc.dg/torture/pr68083.c: New.  From Zhendong Su.\n+\n 2015-11-02  Jeff Law  <law@redhat.com>\n \n \t* gcc.dg/tree-ssa/ssa-thread-11.c: Verify that we do not have"}, {"sha": "ae24781cfd7efdf07aa26fe6c85c1b115d4fac35", "filename": "gcc/testsuite/gcc.dg/torture/pr68083.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828ca3d835ac006cbcb2e5b480c6429cc8a75bdd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68083.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828ca3d835ac006cbcb2e5b480c6429cc8a75bdd/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68083.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68083.c?ref=828ca3d835ac006cbcb2e5b480c6429cc8a75bdd", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-do run } */\n+\n+int a = 2, b = 1, c = 1;\n+\n+int\n+fn1 ()\n+{\n+  int d;\n+  for (; a; a--)\n+    {\n+      for (d = 0; d < 4; d++)\n+\t{\n+\t  int k;\n+\t  if (c < 1)\n+\t    if (k)\n+\t      c = 0;\n+\t  if (b)\n+\t    continue;\n+\t  return 0;\n+\t}\n+      b = !1;\n+    }\n+  return 0;\n+}\n+\n+int\n+main ()\n+{\n+  fn1 ();\n+\n+  if (a != 1)\n+    __builtin_abort ();\n+\n+  return 0;\n+}"}, {"sha": "c18de7e607e087a97e9aef77fc73bee3e038f843", "filename": "gcc/tree-ssa-ifcombine.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828ca3d835ac006cbcb2e5b480c6429cc8a75bdd/gcc%2Ftree-ssa-ifcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828ca3d835ac006cbcb2e5b480c6429cc8a75bdd/gcc%2Ftree-ssa-ifcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ifcombine.c?ref=828ca3d835ac006cbcb2e5b480c6429cc8a75bdd", "patch": "@@ -38,6 +38,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-iterator.h\"\n #include \"gimplify-me.h\"\n #include \"tree-cfg.h\"\n+#include \"tree-ssa.h\"\n \n #ifndef LOGICAL_OP_NON_SHORT_CIRCUIT\n #define LOGICAL_OP_NON_SHORT_CIRCUIT \\\n@@ -122,6 +123,7 @@ bb_no_side_effects_p (basic_block bb)\n \tcontinue;\n \n       if (gimple_has_side_effects (stmt)\n+\t  || gimple_uses_undefined_value_p (stmt)\n \t  || gimple_could_trap_p (stmt)\n \t  || gimple_vuse (stmt))\n \treturn false;"}, {"sha": "84a4d5b9495897dc2726decf0df9dd91ecb85c00", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828ca3d835ac006cbcb2e5b480c6429cc8a75bdd/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828ca3d835ac006cbcb2e5b480c6429cc8a75bdd/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=828ca3d835ac006cbcb2e5b480c6429cc8a75bdd", "patch": "@@ -1203,6 +1203,24 @@ ssa_undefined_value_p (tree t, bool partial)\n }\n \n \n+/* Return TRUE iff STMT, a gimple statement, references an undefined\n+   SSA name.  */\n+\n+bool\n+gimple_uses_undefined_value_p (gimple *stmt)\n+{\n+  ssa_op_iter iter;\n+  tree op;\n+\n+  FOR_EACH_SSA_TREE_OPERAND (op, stmt, iter, SSA_OP_USE)\n+    if (ssa_undefined_value_p (op))\n+      return true;\n+\n+  return false;\n+}\n+\n+\n+\n /* If necessary, rewrite the base of the reference tree *TP from\n    a MEM_REF to a plain or converted symbol.  */\n "}, {"sha": "3b5bd706593e2ca57a9230f88221922c78c62a10", "filename": "gcc/tree-ssa.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/828ca3d835ac006cbcb2e5b480c6429cc8a75bdd/gcc%2Ftree-ssa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/828ca3d835ac006cbcb2e5b480c6429cc8a75bdd/gcc%2Ftree-ssa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.h?ref=828ca3d835ac006cbcb2e5b480c6429cc8a75bdd", "patch": "@@ -51,6 +51,7 @@ extern bool tree_ssa_useless_type_conversion (tree);\n extern tree tree_ssa_strip_useless_type_conversions (tree);\n \n extern bool ssa_undefined_value_p (tree, bool = true);\n+extern bool gimple_uses_undefined_value_p (gimple *);\n extern void execute_update_addresses_taken (void);\n \n /* Given an edge_var_map V, return the PHI arg definition.  */"}]}