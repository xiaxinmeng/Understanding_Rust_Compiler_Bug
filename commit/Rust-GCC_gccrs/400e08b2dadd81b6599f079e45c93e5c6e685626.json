{"sha": "400e08b2dadd81b6599f079e45c93e5c6e685626", "node_id": "C_kwDOANBUbNoAKDQwMGUwOGIyZGFkZDgxYjY1OTlmMDc5ZTQ1YzkzZTVjNmU2ODU2MjY", "commit": {"author": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-02-10T11:34:04Z"}, "committer": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-03-30T11:52:28Z"}, "message": "libproc_macro: Add Ident type interface\n\nAdd the rust interface for the Ident type in libproc_macro.\n\nChangeLog:\n\n\t* librust/proc_macro/rust/lib.rs: Add ident type.\n\nSigned-off-by: Pierre-Emmanuel Patry <pierre-emmanuel.patry@embecosm.com>", "tree": {"sha": "d7062f2fcb931b03939db30ed5b4576b52352ccb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7062f2fcb931b03939db30ed5b4576b52352ccb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/400e08b2dadd81b6599f079e45c93e5c6e685626", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/400e08b2dadd81b6599f079e45c93e5c6e685626", "html_url": "https://github.com/Rust-GCC/gccrs/commit/400e08b2dadd81b6599f079e45c93e5c6e685626", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/400e08b2dadd81b6599f079e45c93e5c6e685626/comments", "author": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "committer": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f16aff137ed29caf9db5e362994bdd6944e39d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f16aff137ed29caf9db5e362994bdd6944e39d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f16aff137ed29caf9db5e362994bdd6944e39d5"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "83d84489634661de297ac21178e55f5cebb6949c", "filename": "librust/proc_macro/rust/lib.rs", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/400e08b2dadd81b6599f079e45c93e5c6e685626/librust%2Fproc_macro%2Frust%2Flib.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/400e08b2dadd81b6599f079e45c93e5c6e685626/librust%2Fproc_macro%2Frust%2Flib.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/librust%2Fproc_macro%2Frust%2Flib.rs?ref=400e08b2dadd81b6599f079e45c93e5c6e685626", "patch": "@@ -51,3 +51,44 @@ impl fmt::Debug for Span {\n         todo!(\"Implement this function\")\n     }\n }\n+\n+#[derive(Clone)]\n+pub struct Ident {\n+    // Internal implementation details\n+}\n+\n+impl Ident {\n+    /// Creates a new identifier from a string and a span\n+    pub fn new(string: &str, span: Span) -> Self {\n+        todo!(\"Implement this function\")\n+    }\n+\n+    /// Creates a raw new identifier from a string and a span\n+    pub fn new_raw(string: &str, span: Span) -> Self {\n+        todo!(\"Implement this function\")\n+    }\n+\n+    /// Return the span of the identifier\n+    pub fn span(&self) -> Span {\n+        todo!(\"Implement this function\")\n+    }\n+\n+    /// change the span of the identifier\n+    pub fn set_span(&mut self, span: Span) {\n+        todo!(\"Implement this function\")\n+    }\n+}\n+\n+impl fmt::Display for Ident {\n+    /// Display as lossless converted string\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        todo!(\"Implement this function\")\n+    }\n+}\n+\n+impl fmt::Debug for Ident {\n+    /// display debug friendly version of the Identifier\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        todo!(\"Implement this function\")\n+    }\n+}"}]}