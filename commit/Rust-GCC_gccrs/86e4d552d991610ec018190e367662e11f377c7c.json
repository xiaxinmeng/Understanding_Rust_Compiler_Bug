{"sha": "86e4d552d991610ec018190e367662e11f377c7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZlNGQ1NTJkOTkxNjEwZWMwMTgxOTBlMzY3NjYyZTExZjM3N2M3Yw==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-02-06T17:41:15Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-02-06T17:41:15Z"}, "message": "Add more testcases.\n\n2010-01-20  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* testsuite/gcc.dg/graphite/id-17.c: New.\n\t* testsuite/gcc.dg/graphite/pr41888.c: New.\n\t* testsuite/gcc.dg/graphite/scop-22.c: New.\n\t* testsuite/gfortran.dg/graphite/pr40982.f90: New.\n\nFrom-SVN: r156546", "tree": {"sha": "0cb114fb7f2a772c59236acc0a7b239fb22ec2b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0cb114fb7f2a772c59236acc0a7b239fb22ec2b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86e4d552d991610ec018190e367662e11f377c7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86e4d552d991610ec018190e367662e11f377c7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86e4d552d991610ec018190e367662e11f377c7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86e4d552d991610ec018190e367662e11f377c7c/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3070ac15039fa513f3d40ee3c5838c36f71054b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3070ac15039fa513f3d40ee3c5838c36f71054b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3070ac15039fa513f3d40ee3c5838c36f71054b8"}], "stats": {"total": 136, "additions": 136, "deletions": 0}, "files": [{"sha": "b398dd5667fa2855e071ea1c03a1498b3a55daec", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86e4d552d991610ec018190e367662e11f377c7c/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86e4d552d991610ec018190e367662e11f377c7c/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=86e4d552d991610ec018190e367662e11f377c7c", "patch": "@@ -1,3 +1,10 @@\n+2010-01-20  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* testsuite/gcc.dg/graphite/id-17.c: New.\n+\t* testsuite/gcc.dg/graphite/pr41888.c: New.\n+\t* testsuite/gcc.dg/graphite/scop-22.c: New.\n+\t* testsuite/gfortran.dg/graphite/pr40982.f90: New.\n+\n 2010-01-20  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* graphite-dependences.c: Clarify comments."}, {"sha": "c93c211e459a96f1b025dc2d39ccce0cf1a9a49b", "filename": "gcc/testsuite/gcc.dg/graphite/id-17.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86e4d552d991610ec018190e367662e11f377c7c/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fid-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86e4d552d991610ec018190e367662e11f377c7c/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fid-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fid-17.c?ref=86e4d552d991610ec018190e367662e11f377c7c", "patch": "@@ -0,0 +1,21 @@\n+typedef struct\n+{\n+  int offset_for_ref_frame[256];\n+} seq_parameter_set_rbsp_t;\n+\n+typedef struct\n+{\n+  unsigned int num_ref_frames_in_pic_order_cnt_cycle;\n+  int offset_for_ref_frame[1];\n+  int auto_crop_right;\n+} ImageParameters;\n+\n+ImageParameters *img;\n+\n+void GenerateSequenceParameterSet(seq_parameter_set_rbsp_t *sps)\n+{\n+  unsigned i;\n+  for (i=0; i<img->num_ref_frames_in_pic_order_cnt_cycle; i++)\n+    sps->offset_for_ref_frame[i] = img->offset_for_ref_frame[i];\n+ error(\"foo\");\n+}"}, {"sha": "b262af68e92b4c32756af5a87a4bea75f607042d", "filename": "gcc/testsuite/gcc.dg/graphite/pr41888.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86e4d552d991610ec018190e367662e11f377c7c/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr41888.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86e4d552d991610ec018190e367662e11f377c7c/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr41888.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr41888.c?ref=86e4d552d991610ec018190e367662e11f377c7c", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-g -O2 -ftree-loop-distribution -fgraphite-identity\" } */\n+\n+int\n+foo (int *x)\n+{\n+  int a[10], b[10];\n+  int i;\n+  a[9] = 8;\n+  b[9] = 8;\n+  for (i = 0; i < 9; i++)\n+    {\n+      a[i] = *x++;\n+      b[i] = 1;\n+    }\n+  b[i] = b[i] & !(a[i] ^ *x++);\n+  return b[i] ? i + 1 : 0;\n+}"}, {"sha": "b77be22b14d7205766f333247724a5724fd39e6b", "filename": "gcc/testsuite/gcc.dg/graphite/scop-22.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86e4d552d991610ec018190e367662e11f377c7c/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86e4d552d991610ec018190e367662e11f377c7c/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-22.c?ref=86e4d552d991610ec018190e367662e11f377c7c", "patch": "@@ -0,0 +1,21 @@\n+double u[1782225];\n+\n+void foo(int N, int *res)\n+{\n+  int i;\n+  double a, b;\n+  double sum = 0.0;\n+\n+  for (i = 0; i < N; i++)\n+    {\n+      a = u[i];\n+      u[i] = i * i;\n+      b = u[i];\n+      sum += a + b;\n+    }\n+\n+  *res = sum + N;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"number of SCoPs: 1\" 1 \"graphite\"} } */\n+/* { dg-final { cleanup-tree-dump \"graphite\" } } */"}, {"sha": "b9641aef0311200fb2b4329e00de0121e590b738", "filename": "gcc/testsuite/gfortran.dg/graphite/pr40982.f90", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86e4d552d991610ec018190e367662e11f377c7c/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr40982.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86e4d552d991610ec018190e367662e11f377c7c/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr40982.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr40982.f90?ref=86e4d552d991610ec018190e367662e11f377c7c", "patch": "@@ -0,0 +1,69 @@\n+! { dg-options \"-O3 -fgraphite-identity -floop-interchange \" }\n+\n+module mqc_m\n+\n+\n+implicit none\n+\n+private\n+public :: mutual_ind_quad_cir_coil\n+\n+integer, parameter, private :: longreal = selected_real_kind(15,90)\n+real (kind = longreal), parameter, private :: pi = 3.141592653589793_longreal\n+real (kind = longreal), parameter, private :: small = 1.0e-10_longreal\n+\n+contains\n+\n+      subroutine mutual_ind_quad_cir_coil (r_coil, x_coil, y_coil, z_coil, h_coil, n_coil,  &\n+                                                      rotate_coil, m, mu, l12)\n+      real (kind = longreal), intent(in) :: r_coil, x_coil, y_coil, z_coil, h_coil, n_coil, &\n+                                            mu\n+      real (kind = longreal), dimension(:,:), intent(in) :: rotate_coil\n+      integer, intent(in) :: m\n+      real (kind = longreal), intent(out) :: l12\n+      real (kind = longreal), dimension(3,3) :: rotate_quad\n+      real (kind = longreal), dimension(9), save :: x2gauss, y2gauss, w2gauss, z1gauss,     &\n+                                                    w1gauss\n+      real (kind = longreal) :: xxvec, xyvec, xzvec, yxvec, yyvec, yzvec, zxvec, zyvec,     &\n+                                zzvec, magnitude, l12_lower, l12_upper, dx, dy, dz, theta,  &\n+                                a, b1, b2, numerator, denominator, coefficient, angle\n+      real (kind = longreal), dimension(3) :: c_vector, q_vector, rot_c_vector,             &\n+                                              rot_q_vector, current_vector,                 &\n+                                              coil_current_vec, coil_tmp_vector\n+      integer :: i, j, k\n+      logical, save :: first = .true.\n+\n+      do i = 1, 2*m\n+          theta = pi*real(i,longreal)/real(m,longreal)\n+          c_vector(1) = r_coil * cos(theta)\n+          c_vector(2) = r_coil * sin(theta)\n+          coil_tmp_vector(1) = -sin(theta)\n+          coil_tmp_vector(2) = cos(theta)\n+          coil_tmp_vector(3) = 0.0_longreal\n+          coil_current_vec(1) = dot_product(rotate_coil(1,:),coil_tmp_vector(:))\n+          coil_current_vec(2) = dot_product(rotate_coil(2,:),coil_tmp_vector(:))\n+          coil_current_vec(3) = dot_product(rotate_coil(3,:),coil_tmp_vector(:))\n+          do j = 1, 9\n+              c_vector(3) = 0.5 * h_coil * z1gauss(j)\n+              rot_c_vector(1) = dot_product(rotate_coil(1,:),c_vector(:)) + dx\n+              rot_c_vector(2) = dot_product(rotate_coil(2,:),c_vector(:)) + dy\n+              rot_c_vector(3) = dot_product(rotate_coil(3,:),c_vector(:)) + dz\n+              do k = 1, 9\n+                  q_vector(1) = 0.5_longreal * a * (x2gauss(k) + 1.0_longreal)\n+                  q_vector(2) = 0.5_longreal * b1 * (y2gauss(k) - 1.0_longreal)\n+                  q_vector(3) = 0.0_longreal\n+                  rot_q_vector(1) = dot_product(rotate_quad(1,:),q_vector(:))\n+                  rot_q_vector(2) = dot_product(rotate_quad(2,:),q_vector(:))\n+                  rot_q_vector(3) = dot_product(rotate_quad(3,:),q_vector(:))\n+                  numerator = w1gauss(j) * w2gauss(k) *                                     &\n+                                                 dot_product(coil_current_vec,current_vector)\n+                  denominator = sqrt(dot_product(rot_c_vector-rot_q_vector,                 &\n+                                                                  rot_c_vector-rot_q_vector))\n+                  l12_lower = l12_lower + numerator/denominator\n+              end do\n+          end do\n+      end do\n+      l12 = coefficient * (b1 * l12_lower + b2 * l12_upper)\n+      end subroutine mutual_ind_quad_cir_coil\n+\n+end module mqc_m"}]}