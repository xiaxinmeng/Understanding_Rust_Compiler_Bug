{"sha": "ebcf592c841f47aa38ce0a9d95b4f04af975b0ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJjZjU5MmM4NDFmNDdhYTM4Y2UwYTlkOTViNGYwNGFmOTc1YjBhYw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2015-06-09T14:59:08Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2015-06-09T14:59:08Z"}, "message": "re PR c++/65815 (brace elision doesn't work in NSDMI)\n\n/cp\n2015-06-09  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/65815\n\t* typeck2.c (digest_nsdmi_init): On aggregates use reshape_init.\n\t* init.c (expand_default_init): Likewise.\n\n/testsuite\n2015-06-09  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/65815\n\t* g++.dg/cpp0x/nsdmi-aggr1.C: New.\n\t* g++.dg/cpp0x/mem-init-aggr1.C: Likewise.\n\nFrom-SVN: r224286", "tree": {"sha": "24ff899bb2363b98e2d5dd7f473d28c8b6cd0906", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24ff899bb2363b98e2d5dd7f473d28c8b6cd0906"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebcf592c841f47aa38ce0a9d95b4f04af975b0ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebcf592c841f47aa38ce0a9d95b4f04af975b0ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebcf592c841f47aa38ce0a9d95b4f04af975b0ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebcf592c841f47aa38ce0a9d95b4f04af975b0ac/comments", "author": null, "committer": null, "parents": [{"sha": "a0e4b207defe4bb8844f86ebab30aa2ca8de25d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0e4b207defe4bb8844f86ebab30aa2ca8de25d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0e4b207defe4bb8844f86ebab30aa2ca8de25d1"}], "stats": {"total": 43, "additions": 41, "deletions": 2}, "files": [{"sha": "bf48e969712b26d4bb285c16c17931b8ffe7bfb1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebcf592c841f47aa38ce0a9d95b4f04af975b0ac/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebcf592c841f47aa38ce0a9d95b4f04af975b0ac/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ebcf592c841f47aa38ce0a9d95b4f04af975b0ac", "patch": "@@ -1,3 +1,9 @@\n+2015-06-09  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/65815\n+\t* typeck2.c (digest_nsdmi_init): On aggregates use reshape_init.\n+\t* init.c (expand_default_init): Likewise.\n+\n 2015-06-09  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/66383"}, {"sha": "ef4f0ff65d37b6ad084be73f17400ef1526ac0ca", "filename": "gcc/cp/init.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebcf592c841f47aa38ce0a9d95b4f04af975b0ac/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebcf592c841f47aa38ce0a9d95b4f04af975b0ac/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=ebcf592c841f47aa38ce0a9d95b4f04af975b0ac", "patch": "@@ -1614,7 +1614,10 @@ expand_default_init (tree binfo, tree true_exp, tree exp, tree init, int flags,\n       && CP_AGGREGATE_TYPE_P (type))\n     /* A brace-enclosed initializer for an aggregate.  In C++0x this can\n        happen for direct-initialization, too.  */\n-    init = digest_init (type, init, complain);\n+    {\n+      init = reshape_init (type, init, complain);\n+      init = digest_init (type, init, complain);\n+    }\n \n   /* A CONSTRUCTOR of the target's type is a previously digested\n      initializer, whether that happened just above or in"}, {"sha": "b077f0273d165f4a09bf9f8c0d94dd41a61dc3a4", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebcf592c841f47aa38ce0a9d95b4f04af975b0ac/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebcf592c841f47aa38ce0a9d95b4f04af975b0ac/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=ebcf592c841f47aa38ce0a9d95b4f04af975b0ac", "patch": "@@ -1158,10 +1158,14 @@ digest_nsdmi_init (tree decl, tree init)\n {\n   gcc_assert (TREE_CODE (decl) == FIELD_DECL);\n \n+  tree type = TREE_TYPE (decl);\n   int flags = LOOKUP_IMPLICIT;\n   if (DIRECT_LIST_INIT_P (init))\n     flags = LOOKUP_NORMAL;\n-  init = digest_init_flags (TREE_TYPE (decl), init, flags);\n+  if (BRACE_ENCLOSED_INITIALIZER_P (init)\n+      && CP_AGGREGATE_TYPE_P (type))\n+    init = reshape_init (type, init, tf_warning_or_error);\n+  init = digest_init_flags (type, init, flags);\n   if (TREE_CODE (init) == TARGET_EXPR)\n     /* This represents the whole initialization.  */\n     TARGET_EXPR_DIRECT_INIT_P (init) = true;"}, {"sha": "1443d33478c82521a7b8e968e13c6a1964847eea", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebcf592c841f47aa38ce0a9d95b4f04af975b0ac/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebcf592c841f47aa38ce0a9d95b4f04af975b0ac/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ebcf592c841f47aa38ce0a9d95b4f04af975b0ac", "patch": "@@ -1,3 +1,9 @@\n+2015-06-09  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/65815\n+\t* g++.dg/cpp0x/nsdmi-aggr1.C: New.\n+\t* g++.dg/cpp0x/mem-init-aggr1.C: Likewise.\n+\n 2015-06-09  Marek Polacek  <polacek@redhat.com>\n \n \tPR tree-optimization/66299"}, {"sha": "51a2ede310c04ab814a455232668c9c78544f760", "filename": "gcc/testsuite/g++.dg/cpp0x/mem-init-aggr1.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebcf592c841f47aa38ce0a9d95b4f04af975b0ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fmem-init-aggr1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebcf592c841f47aa38ce0a9d95b4f04af975b0ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fmem-init-aggr1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fmem-init-aggr1.C?ref=ebcf592c841f47aa38ce0a9d95b4f04af975b0ac", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/65815\n+// { dg-do compile { target c++11 } }\n+\n+struct array {\n+  int data [2];\n+};\n+\n+struct X : array {\n+  X() : array{ 1, 2 } { }\n+};"}, {"sha": "e07d392a66477880fbb46c4b852821a194c809d4", "filename": "gcc/testsuite/g++.dg/cpp0x/nsdmi-aggr1.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebcf592c841f47aa38ce0a9d95b4f04af975b0ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi-aggr1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebcf592c841f47aa38ce0a9d95b4f04af975b0ac/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi-aggr1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnsdmi-aggr1.C?ref=ebcf592c841f47aa38ce0a9d95b4f04af975b0ac", "patch": "@@ -0,0 +1,10 @@\n+// PR c++/65815\n+// { dg-do compile { target c++11 } }\n+\n+struct array {\n+  int data [2];\n+};\n+\n+struct X {\n+  array a = { 1, 2 };\n+};"}]}