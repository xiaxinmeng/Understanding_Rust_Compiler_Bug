{"sha": "a3b63299e6974b2f7ac5855e3edcccd6367afc3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNiNjMyOTllNjk3NGIyZjdhYzU4NTVlM2VkY2NjZDYzNjdhZmMzYw==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2001-04-01T21:54:10Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2001-04-01T21:54:10Z"}, "message": "natString.cc (intern): If string's data does not point to this String, make a fresh String that does.\n\n\n\t* java/lang/natString.cc (intern):  If string's data does not point to\n\tthis String, make a fresh String that does.\n\n\t* java/lang/natString.cc (unintern):  Replace by static function.\n\t* java/lang/String.java (unintern):  Remove method.\n\nFrom-SVN: r40990", "tree": {"sha": "9e1f195b291f3f9fb34b91a18a554d4b28f775e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e1f195b291f3f9fb34b91a18a554d4b28f775e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3b63299e6974b2f7ac5855e3edcccd6367afc3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3b63299e6974b2f7ac5855e3edcccd6367afc3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3b63299e6974b2f7ac5855e3edcccd6367afc3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3b63299e6974b2f7ac5855e3edcccd6367afc3c/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f44b63ae02d689ccf33f66022228ee8d7145cfd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f44b63ae02d689ccf33f66022228ee8d7145cfd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f44b63ae02d689ccf33f66022228ee8d7145cfd8"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "177052ffc736f7536bff5a7a9b6ce53aaabc37bc", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3b63299e6974b2f7ac5855e3edcccd6367afc3c/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3b63299e6974b2f7ac5855e3edcccd6367afc3c/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=a3b63299e6974b2f7ac5855e3edcccd6367afc3c", "patch": "@@ -1,3 +1,11 @@\n+2001-04-01  Per Bothner  <per@bothner.com>\n+\n+\t* java/lang/natString.cc (intern):  If string's data does not point to\n+\tthis String, make a fresh String that does.\n+\n+\t* java/lang/natString.cc (unintern):  Replace by static function.\n+\t* java/lang/String.java (unintern):  Remove method.\n+\n 2001-04-01  Per Bothner  <per@bothner.com>\n \n \t* DeflaterOutputStream.java (deflate):  Loop while def.needsInput."}, {"sha": "b985cf4186cb1165fbc6de99741615e0bf0ec6a3", "filename": "libjava/java/lang/String.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3b63299e6974b2f7ac5855e3edcccd6367afc3c/libjava%2Fjava%2Flang%2FString.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3b63299e6974b2f7ac5855e3edcccd6367afc3c/libjava%2Fjava%2Flang%2FString.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FString.java?ref=a3b63299e6974b2f7ac5855e3edcccd6367afc3c", "patch": "@@ -347,6 +347,5 @@ private native void init (char[] chars, int offset, int count,\n   private native void init (byte[] chars, int hibyte, int offset, int count);\n   private native void init (byte[] chars, int offset, int count, String enc)\n     throws UnsupportedEncodingException;\n-  private static native void unintern (Object obj);\n   private static native void rehash ();\n }"}, {"sha": "1c71bfd97e2b0551e1cad4604b154dfa161141cb", "filename": "libjava/java/lang/natString.cc", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3b63299e6974b2f7ac5855e3edcccd6367afc3c/libjava%2Fjava%2Flang%2FnatString.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3b63299e6974b2f7ac5855e3edcccd6367afc3c/libjava%2Fjava%2Flang%2FnatString.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatString.cc?ref=a3b63299e6974b2f7ac5855e3edcccd6367afc3c", "patch": "@@ -29,6 +29,7 @@ details.  */\n #include <gnu/gcj/convert/BytesToUnicode.h>\n #include <jvm.h>\n \n+static void unintern (jobject);\n static jstring* strhash = NULL;\n static int strhash_count = 0;  /* Number of slots used in strhash. */\n static int strhash_size = 0;  /* Number of slots available in strhash.\n@@ -174,17 +175,19 @@ java::lang::String::intern()\n       *ptr = (jstring) MASK_PTR (*ptr);\n       return (jstring) UNMASK_PTR (*ptr);\n     }\n-  SET_STRING_IS_INTERNED(this);\n+  jstring str = this->data == this ? this\n+    : _Jv_NewString(JvGetStringChars(this), this->length());\n+  SET_STRING_IS_INTERNED(str);\n   strhash_count++;\n-  *ptr = this;\n+  *ptr = str;\n   // When string is GC'd, clear the slot in the hash table.\n-  _Jv_RegisterFinalizer ((void *) this, unintern);\n-  return this;\n+  _Jv_RegisterFinalizer ((void *) str, unintern);\n+  return str;\n }\n \n /* Called by String fake finalizer. */\n-void\n-java::lang::String::unintern (jobject obj)\n+static void\n+unintern (jobject obj)\n {\n   JvSynchronize sync (&StringClass);\n   jstring str = reinterpret_cast<jstring> (obj);"}]}