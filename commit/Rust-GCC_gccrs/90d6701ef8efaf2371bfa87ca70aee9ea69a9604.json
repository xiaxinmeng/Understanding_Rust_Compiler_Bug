{"sha": "90d6701ef8efaf2371bfa87ca70aee9ea69a9604", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBkNjcwMWVmOGVmYWYyMzcxYmZhODdjYTcwYWVlOWVhNjlhOTYwNA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2008-04-17T12:45:53Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2008-04-17T12:45:53Z"}, "message": "decl.c (gnat_to_gnu_entity): Promote the alignment of objects by default.\n\n\t* decl.c (gnat_to_gnu_entity) <object>: Promote the alignment of\n\tobjects by default.\n\t* fe.h (Debug_Flag_Dot_A): Delete.\n\t* debug.adb (-gnatd.a): Update documentation.\n\nFrom-SVN: r134390", "tree": {"sha": "8ad885a75002d1b5d7a2f81eda6351af2bba7848", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ad885a75002d1b5d7a2f81eda6351af2bba7848"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90d6701ef8efaf2371bfa87ca70aee9ea69a9604", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90d6701ef8efaf2371bfa87ca70aee9ea69a9604", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90d6701ef8efaf2371bfa87ca70aee9ea69a9604", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90d6701ef8efaf2371bfa87ca70aee9ea69a9604/comments", "author": null, "committer": null, "parents": [{"sha": "e6477eaa4d5524e7d05975188e27e7b1a148df3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6477eaa4d5524e7d05975188e27e7b1a148df3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6477eaa4d5524e7d05975188e27e7b1a148df3b"}], "stats": {"total": 80, "additions": 64, "deletions": 16}, "files": [{"sha": "6bffe2a0076e256893cc286e438a29b46cb3ca90", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d6701ef8efaf2371bfa87ca70aee9ea69a9604/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d6701ef8efaf2371bfa87ca70aee9ea69a9604/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=90d6701ef8efaf2371bfa87ca70aee9ea69a9604", "patch": "@@ -1,3 +1,10 @@\n+2008-04-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* decl.c (gnat_to_gnu_entity) <object>: Promote the alignment of\n+\tobjects by default.\n+\t* fe.h (Debug_Flag_Dot_A): Delete.\n+\t* debug.adb (-gnatd.a): Update documentation.\n+\n 2008-04-17  Samuel Tardieu  <sam@rfc1149.net>\n \n \t* g-socket.ads, g-socket.adb (Get_Address): Make Stream a"}, {"sha": "3a6be98930a1be7adc965895289d64d8e645105a", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d6701ef8efaf2371bfa87ca70aee9ea69a9604/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d6701ef8efaf2371bfa87ca70aee9ea69a9604/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=90d6701ef8efaf2371bfa87ca70aee9ea69a9604", "patch": "@@ -93,7 +93,7 @@ package body Debug is\n    --  dY   Enable configurable run-time mode\n    --  dZ   Generate listing showing the contents of the dispatch tables\n \n-   --  d.a  Enable alignment promotion for non-scalar stand-alone objects\n+   --  d.a\n    --  d.b\n    --  d.c\n    --  d.d\n@@ -500,12 +500,6 @@ package body Debug is\n    --         - In case of abstract subprograms the text \"is abstract\" is\n    --           added at the end of the line.\n \n-   --  d.a  Enable alignment promotion for non-VMS targets. On VMS, by default\n-   --       (in Optimize_Alignment (Off) mode), the alignment of stand-alone\n-   --       objects is increased in some cases to enable the generation of\n-   --       better code. Use of this debug flag enables this transformation\n-   --       on non-VMS targets.\n-\n    --  d.f  Suppress folding of static expressions. This of course results\n    --       in seriously non-conforming behavior, but is useful sometimes\n    --       when tracking down handling of complex expressions."}, {"sha": "d127ca76c878de587adb3a1371f774e1c876994b", "filename": "gcc/ada/decl.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d6701ef8efaf2371bfa87ca70aee9ea69a9604/gcc%2Fada%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d6701ef8efaf2371bfa87ca70aee9ea69a9604/gcc%2Fada%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdecl.c?ref=90d6701ef8efaf2371bfa87ca70aee9ea69a9604", "patch": "@@ -680,8 +680,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t   size, or to the biggest meaningful one, whichever is smaller.  */\n \tif (!gnu_size && align == 0\n \t    && (Is_Atomic (gnat_entity)\n-\t\t|| (Debug_Flag_Dot_A\n-\t\t    && !Optimize_Alignment_Space (gnat_entity)\n+\t\t|| (!Optimize_Alignment_Space (gnat_entity)\n \t\t    && kind == E_Variable\n \t\t    && AGGREGATE_TYPE_P (gnu_type)\n \t\t    && !const_flag && No (Renamed_Object (gnat_entity))"}, {"sha": "2e21af503dee1a1f4636f6d1100a170528815986", "filename": "gcc/ada/fe.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d6701ef8efaf2371bfa87ca70aee9ea69a9604/gcc%2Fada%2Ffe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d6701ef8efaf2371bfa87ca70aee9ea69a9604/gcc%2Fada%2Ffe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffe.h?ref=90d6701ef8efaf2371bfa87ca70aee9ea69a9604", "patch": "@@ -47,10 +47,7 @@ extern char Fold_Lower[], Fold_Upper[];\n /* debug: */\n \n #define Debug_Flag_NN debug__debug_flag_nn\n-#define Debug_Flag_Dot_A debug__debug_flag_dot_a\n-\n extern Boolean Debug_Flag_NN;\n-extern Boolean Debug_Flag_Dot_A;\n \n /* einfo: We will be setting Esize for types, Component_Bit_Offset for fields,\n    Alignment for types and objects, Component_Size for array types, and"}, {"sha": "4b66c95efb5e6d692c8869f70b86e60697b30c68", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d6701ef8efaf2371bfa87ca70aee9ea69a9604/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d6701ef8efaf2371bfa87ca70aee9ea69a9604/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=90d6701ef8efaf2371bfa87ca70aee9ea69a9604", "patch": "@@ -1,3 +1,9 @@\n+2008-04-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/alignment4.adb: New test.\n+\t* gnat.dg/alignment5.adb: Likewise.\n+\t* gnat.dg/frame_overflow.adb: Adjust.\n+\n 2008-04-17  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/tree-ssa/ssa-fre-17.c: New testcase."}, {"sha": "ebc105367cb80698d2b230b9b2298737e02b5200", "filename": "gcc/testsuite/gnat.dg/alignment4.adb", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d6701ef8efaf2371bfa87ca70aee9ea69a9604/gcc%2Ftestsuite%2Fgnat.dg%2Falignment4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d6701ef8efaf2371bfa87ca70aee9ea69a9604/gcc%2Ftestsuite%2Fgnat.dg%2Falignment4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Falignment4.adb?ref=90d6701ef8efaf2371bfa87ca70aee9ea69a9604", "patch": "@@ -0,0 +1,15 @@\n+-- { dg-do compile }\n+-- { dg-options \"-gnatws -fdump-tree-gimple\" }\n+\n+procedure Alignment4 is\n+\n+  type Stream is array (1..3) of Character;\n+\n+  S1, S2 : Stream;\n+\n+begin\n+  S1 := S2;\n+end;\n+\n+-- { dg-final { scan-tree-dump-not \"VIEW_CONVERT_EXPR\" \"gimple\" } }\n+-- { dg-final { cleanup-tree-dump \"gimple\" } }"}, {"sha": "4cc2d18db94d52c67729d6fd7bf32357063104a3", "filename": "gcc/testsuite/gnat.dg/alignment5.adb", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d6701ef8efaf2371bfa87ca70aee9ea69a9604/gcc%2Ftestsuite%2Fgnat.dg%2Falignment5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d6701ef8efaf2371bfa87ca70aee9ea69a9604/gcc%2Ftestsuite%2Fgnat.dg%2Falignment5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Falignment5.adb?ref=90d6701ef8efaf2371bfa87ca70aee9ea69a9604", "patch": "@@ -0,0 +1,31 @@\n+-- { dg-do compile }\n+-- { dg-options \"-gnatws -fdump-tree-gimple\" }\n+\n+procedure Alignment5 is\n+\n+   type MY_REC is\n+     record\n+       A1 : INTEGER range -3 .. 3 ; -- symmetric\n+       A2 : BOOLEAN ;\n+       A3 : INTEGER range 0 .. 15 ; -- positive\n+       A4 : INTEGER range 10 .. 100 ; -- arbitrary\n+       A5 : BOOLEAN ;  --5\n+     end record ;\n+\n+   for MY_REC use\n+     record\n+       A1 at 0 range 0 .. 2 ;\n+       A2 at 0 range 3 .. 3 ;\n+       A3 at 0 range 4 .. 7 ;\n+       A4 at 0 range 8 .. 15 ;\n+       A5 at 0 range 16 .. 16 ;\n+     end record ;\n+\n+   A_REC, B_REC : MY_REC;\n+\n+begin\n+   A_REC := B_REC;\n+end;\n+\n+-- { dg-final { scan-tree-dump-not \"VIEW_CONVERT_EXPR\" \"gimple\" } }\n+-- { dg-final { cleanup-tree-dump \"gimple\" } }"}, {"sha": "a20fdd7379252d6b22755e9a6bc24fcfdb45d403", "filename": "gcc/testsuite/gnat.dg/frame_overflow.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d6701ef8efaf2371bfa87ca70aee9ea69a9604/gcc%2Ftestsuite%2Fgnat.dg%2Fframe_overflow.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d6701ef8efaf2371bfa87ca70aee9ea69a9604/gcc%2Ftestsuite%2Fgnat.dg%2Fframe_overflow.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fframe_overflow.adb?ref=90d6701ef8efaf2371bfa87ca70aee9ea69a9604", "patch": "@@ -14,15 +14,14 @@ procedure frame_overflow is\n    function -- { dg-error \"too large\" }\n      Set_In (Bitmap : Bitmap_T; Bitpos : Bitpos_Range_T)  return Bitmap_T\n    is\n-      Result: Bitmap_T := Bitmap;\n+      Result: Bitmap_T := Bitmap; -- { dg-error \"Storage_Error\" }\n    begin\n       Result.Bits (Bitpos) := True;\n       return Result;\n    end;\n \n-   function -- { dg-error \"too large\" }\n-     Negate (Bitmap : Bitmap_T) return Bitmap_T is\n-      Result: Bitmap_T;\n+   function Negate (Bitmap : Bitmap_T) return Bitmap_T is\n+      Result: Bitmap_T; -- { dg-error \"Storage_Error\" }\n    begin\n       for E in Bitpos_Range_T loop\n         Result.Bits (E) := not Bitmap.Bits (E);"}]}