{"sha": "1f72bfca6602479204a6629ef678ab51c638bb6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY3MmJmY2E2NjAyNDc5MjA0YTY2MjllZjY3OGFiNTFjNjM4YmI2ZQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-10-02T01:05:51Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-10-02T01:05:51Z"}, "message": "Makefile.in (unlibsubdir): Define.\n\n        * Makefile.in (unlibsubdir): Define.\n        (DRIVER_DEFINES): Use unlibsubdir.\n        (cccp.o, cpplib.o, protoize.o, unprotoize.o): Similarly.\n        (stmp-fixinc): Similarly.\nThe infamous unlibsubdir patch.  Makes it somewhat easier to move toolchains\naround.  Helps cygwin folks.\n\nFrom-SVN: r22737", "tree": {"sha": "a4d5621df8aa0882438d0dce4b3b407fbcf008a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4d5621df8aa0882438d0dce4b3b407fbcf008a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f72bfca6602479204a6629ef678ab51c638bb6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f72bfca6602479204a6629ef678ab51c638bb6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f72bfca6602479204a6629ef678ab51c638bb6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f72bfca6602479204a6629ef678ab51c638bb6e/comments", "author": null, "committer": null, "parents": [{"sha": "b47dda3b17d53d5c8f10170df6191ef6d9e0a1af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b47dda3b17d53d5c8f10170df6191ef6d9e0a1af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b47dda3b17d53d5c8f10170df6191ef6d9e0a1af"}], "stats": {"total": 41, "additions": 33, "deletions": 8}, "files": [{"sha": "c80bdc8271885cd142e371a86710c883f5cd865a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f72bfca6602479204a6629ef678ab51c638bb6e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f72bfca6602479204a6629ef678ab51c638bb6e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f72bfca6602479204a6629ef678ab51c638bb6e", "patch": "@@ -1,3 +1,10 @@\n+Fri Oct  2 02:01:59 1998  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* Makefile.in (unlibsubdir): Define.\n+\t(DRIVER_DEFINES): Use unlibsubdir.\n+\t(cccp.o, cpplib.o, protoize.o, unprotoize.o): Similarly.\n+\t(stmp-fixinc): Similarly.\n+\n Thu Oct  1 19:58:30 1998  Bernd Schmidt <crux@Pool.Informatik.RWTH-Aachen.DE>\n \n \t* regmove.c (regmove_optimize): Add variable old_max_uid."}, {"sha": "81e5fc9a13ed368671b723f14926bbcc79bfc01c", "filename": "gcc/Makefile.in", "status": "modified", "additions": 26, "deletions": 8, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f72bfca6602479204a6629ef678ab51c638bb6e/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f72bfca6602479204a6629ef678ab51c638bb6e/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=1f72bfca6602479204a6629ef678ab51c638bb6e", "patch": "@@ -270,6 +270,8 @@ bindir = @bindir@\n libdir = @libdir@\n # Directory in which the compiler finds executables, libraries, etc.\n libsubdir = $(libdir)/gcc-lib/$(target_alias)/$(version)\n+# Used to produce a relative $(tooldir) in gcc.o\n+unlibsubdir = ../../..\n # Directory in which the compiler finds g++ includes.\n gxx_include_dir= @gxx_include_dir@\n # Directory to search for site-specific includes.\n@@ -1338,11 +1340,11 @@ c-common.o : c-common.c $(CONFIG_H) system.h $(TREE_H) c-tree.h c-lex.h \\\n # Language-independent files.\n \n DRIVER_DEFINES = \\\n-  -DSTANDARD_STARTFILE_PREFIX=\\\"$(libdir)/\\\" \\\n+  -DSTANDARD_STARTFILE_PREFIX=\\\"$(unlibsubdir)/\\\" \\\n   -DSTANDARD_EXEC_PREFIX=\\\"$(libdir)/gcc-lib/\\\" \\\n   -DDEFAULT_TARGET_VERSION=\\\"$(version)\\\" \\\n   -DDEFAULT_TARGET_MACHINE=\\\"$(target_alias)\\\" \\\n-  -DTOOLDIR_BASE_PREFIX=\\\"$(exec_prefix)/\\\"\n+  -DTOOLDIR_BASE_PREFIX=\\\"$(unlibsubdir)/../\\\"\n gcc.o: gcc.c $(CONFIG_H) system.h gansidecl.h multilib.h Makefile \\\n \t$(lang_specs_files)\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n@@ -1856,14 +1858,17 @@ cexp.o: $(srcdir)/cexp.c $(CONFIG_H) system.h gansidecl.h\n $(srcdir)/cexp.c: $(srcdir)/cexp.y\n \tcd $(srcdir); $(BISON) -o cexp.c cexp.y\n \n+# We use $(libsubdir)/$(unlibsubdir) to match the\n+# -iprefix argument which gcc will pass if GCC_EXEC_PREFIX is used.\n cccp.o: cccp.c $(CONFIG_H) pcp.h version.c config.status system.h gansidecl.h \\\n            mbchar.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  -DGCC_INCLUDE_DIR=\\\"$(libsubdir)/include\\\" \\\n-\t  -DGPLUSPLUS_INCLUDE_DIR=\\\"$(gxx_include_dir)\\\" \\\n-\t  -DLOCAL_INCLUDE_DIR=\\\"$(includedir)\\\" \\\n-\t  -DCROSS_INCLUDE_DIR=\\\"$(tooldir)/sys-include\\\" \\\n-\t  -DTOOL_INCLUDE_DIR=\\\"$(tooldir)/include\\\" \\\n+\t  -DGPLUSPLUS_INCLUDE_DIR=\\\"$(libsubdir)/$(unlibsubdir)/..`echo $(exec_prefix) | sed -e 's|^$(prefix)||' -e 's|/[^/]*|/..|g'`/include/g++\\\" \\\n+\t  -DLOCAL_INCLUDE_DIR=\\\"$(libsubdir)/$(unlibsubdir)/..`echo $(exec_prefix) | sed -e 's|^$(prefix)||' -e 's|/[^/]*|/..|g'`/include\\\" \\\n+\t  -DCROSS_INCLUDE_DIR=\\\"$(libsubdir)/$(unlibsubdir)/../$(target_alias)/sys-include\\\" \\\n+\t  -DTOOL_INCLUDE_DIR=\\\"$(libsubdir)/$(unlibsubdir)/../$(target_alias)/in\n+clude\\\" \\\n \t  -c `echo $(srcdir)/cccp.c | sed 's,^\\./,,'`\n \n cppmain$(exeext): cppmain.o cpplib.o cpphash.o cppalloc.o cpperror.o cppexp.o \\\n@@ -1913,7 +1918,7 @@ protoize.o: protoize.c $(srcdir)/../include/getopt.h $(CONFIG_H) system.h\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n           -DGCC_INCLUDE_DIR=\\\"$(libsubdir)/include\\\" \\\n \t  -DGPLUSPLUS_INCLUDE_DIR=\\\"$(gxx_include_dir)\\\" \\\n-          -DCROSS_INCLUDE_DIR=\\\"$(tooldir)/sys-include\\\" \\\n+\t  -DCROSS_INCLUDE_DIR=\\\"$(libsubdir)/$(unlibsubdir)/../$(target_alias)/sys-include\\\" \\\n \t  -DTOOL_INCLUDE_DIR=\\\"$(tooldir)/include\\\" \\\n \t  -DLOCAL_INCLUDE_DIR=\\\"$(includedir)\\\" \\\n \t  -DSTD_PROTO_DIR=\\\"$(libsubdir)\\\" \\\n@@ -1923,7 +1928,7 @@ unprotoize.o: unprotoize.c protoize.c $(srcdir)/../include/getopt.h $(CONFIG_H)\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n           -DGCC_INCLUDE_DIR=\\\"$(libsubdir)/include\\\" \\\n \t  -DGPLUSPLUS_INCLUDE_DIR=\\\"$(gxx_include_dir)\\\" \\\n-          -DCROSS_INCLUDE_DIR=\\\"$(tooldir)/sys-include\\\" \\\n+\t  -DCROSS_INCLUDE_DIR=\\\"$(libsubdir)/$(unlibsubdir)/../$(target_alias)/sys-include\\\" \\\n \t  -DTOOL_INCLUDE_DIR=\\\"$(tooldir)/include\\\" \\\n \t  -DLOCAL_INCLUDE_DIR=\\\"$(includedir)\\\" \\\n \t  -DSTD_PROTO_DIR=\\\"$(libsubdir)\\\" \\\n@@ -2051,6 +2056,19 @@ stmp-fixinc: $(FIXINCLUDES) gsyslimits.h\n \t  cp $(srcdir)/gsyslimits.h include/syslimits.h; \\\n \tfi\n \tchmod a+r include/syslimits.h\n+# If $(SYSTEM_HEADER_DIR) is $(tooldir)/sys-include, and\n+# that directory exists, then make sure that $(libsubdir) exists.\n+# This is because cpp is compiled to find $(tooldir)/include via\n+# $(libsubdir)/$(unlibsubdir), which will only work if $(libsubdir)\n+# exists.\n+\tif [ \"$(SYSTEM_HEADER_DIR)\" = \"$(tooldir)/sys-include\" ] \\\n+\t   && [ -d $(tooldir)/sys-include ]; then \\\n+\t  if [ -d $(libdir) ] ; then true ; else mkdir $(libdir) ; fi; \\\n+\t  if [ -d $(libdir)/gcc-lib ] ; then true ; else mkdir $(libdir)/gcc-lib; fi; \\\n+\t  if [ -d $(libdir)/gcc-lib/$(target_alias) ] ; then true ; else mkdir $(libdir)/gcc-lib/$(target_alias) ; fi; \\\n+\t  if [ -d $(libdir)/gcc-lib/$(target_alias)/$(version) ] ; then true ; else mkdir $(libdir)/gcc-lib/$(target_alias)/$(version) ; fi; \\\n+\telse true; fi\n+\n \ttouch stmp-fixinc\n \n # Files related to the fixproto script."}]}