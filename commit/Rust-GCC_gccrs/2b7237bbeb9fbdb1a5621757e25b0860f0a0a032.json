{"sha": "2b7237bbeb9fbdb1a5621757e25b0860f0a0a032", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI3MjM3YmJlYjlmYmRiMWE1NjIxNzU3ZTI1YjA4NjBmMGEwYTAzMg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2010-09-15T05:36:47Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2010-09-15T05:36:47Z"}, "message": "Correct XXX_units_per_simd_word return type.\n\n2010-09-14  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR bootstrap/45672\n\t* config/mips/mips.c (mips_units_per_simd_word): Correct return\n\ttype.\n\t* config/rs6000/rs6000.c (rs6000_units_per_simd_word): Likewise.\n\t* config/sparc/sparc.c (sparc_units_per_simd_word): Likewise.\n\nFrom-SVN: r164296", "tree": {"sha": "a27d6f28d5f0fd9ddb1e10ba31e2542a56b0e63f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a27d6f28d5f0fd9ddb1e10ba31e2542a56b0e63f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b7237bbeb9fbdb1a5621757e25b0860f0a0a032", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b7237bbeb9fbdb1a5621757e25b0860f0a0a032", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b7237bbeb9fbdb1a5621757e25b0860f0a0a032", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b7237bbeb9fbdb1a5621757e25b0860f0a0a032/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "969c37b70d25aa628a3d4b8348dbf42fb6484e1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/969c37b70d25aa628a3d4b8348dbf42fb6484e1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/969c37b70d25aa628a3d4b8348dbf42fb6484e1e"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "59b59bd3bb6f3372f3af240f3b74abe196dc3f41", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b7237bbeb9fbdb1a5621757e25b0860f0a0a032/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b7237bbeb9fbdb1a5621757e25b0860f0a0a032/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2b7237bbeb9fbdb1a5621757e25b0860f0a0a032", "patch": "@@ -1,3 +1,11 @@\n+2010-09-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR bootstrap/45672\n+\t* config/mips/mips.c (mips_units_per_simd_word): Correct return\n+\ttype.\n+\t* config/rs6000/rs6000.c (rs6000_units_per_simd_word): Likewise.\n+\t* config/sparc/sparc.c (sparc_units_per_simd_word): Likewise.\n+\n 2010-09-15  Laurynas Biveinis  <laurynas.biveinis@gmail.com>\n \n \t* c-lang.h (struct lang_type): Add variable_size GTY option."}, {"sha": "d26990e593bae0004e3ab0b62a5720db1aed9b22", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b7237bbeb9fbdb1a5621757e25b0860f0a0a032/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b7237bbeb9fbdb1a5621757e25b0860f0a0a032/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=2b7237bbeb9fbdb1a5621757e25b0860f0a0a032", "patch": "@@ -11142,7 +11142,7 @@ mips_scalar_mode_supported_p (enum machine_mode mode)\n \f\n /* Implement TARGET_VECTORIZE_UNITS_PER_SIMD_WORD.  */\n \n-static bool\n+static unsigned int\n mips_units_per_simd_word (enum machine_mode mode ATTRIBUTE_UNUSED)\n {\n   return TARGET_PAIRED_SINGLE_FLOAT ? 8 : UNITS_PER_WORD;"}, {"sha": "f557dbad6d5cd44376104f5cbc067f8d6780b331", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b7237bbeb9fbdb1a5621757e25b0860f0a0a032/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b7237bbeb9fbdb1a5621757e25b0860f0a0a032/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=2b7237bbeb9fbdb1a5621757e25b0860f0a0a032", "patch": "@@ -1085,7 +1085,7 @@ static bool rs6000_builtin_support_vector_misalignment (enum\n \t\t\t\t\t\t\tint, bool);\n static int rs6000_builtin_vectorization_cost (enum vect_cost_for_stmt,\n                                               tree, int);\n-static int rs6000_units_per_simd_word (enum machine_mode);\n+static unsigned int rs6000_units_per_simd_word (enum machine_mode);\n \n static void def_builtin (int, const char *, tree, int);\n static bool rs6000_vector_alignment_reachable (const_tree, bool);\n@@ -3576,7 +3576,7 @@ rs6000_builtin_vectorization_cost (enum vect_cost_for_stmt type_of_cost,\n \n /* Implement targetm.vectorize.units_per_simd_word.  */\n \n-static int\n+static unsigned int\n rs6000_units_per_simd_word (enum machine_mode mode ATTRIBUTE_UNUSED)\n {\n   return (TARGET_VSX ? UNITS_PER_VSX_WORD"}, {"sha": "f9d4a9092afe27ea11774b5695b0669a9672e0ab", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b7237bbeb9fbdb1a5621757e25b0860f0a0a032/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b7237bbeb9fbdb1a5621757e25b0860f0a0a032/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=2b7237bbeb9fbdb1a5621757e25b0860f0a0a032", "patch": "@@ -434,7 +434,7 @@ static bool sparc_can_eliminate (const int, const int);\n static const char *sparc_mangle_type (const_tree);\n #endif\n static void sparc_trampoline_init (rtx, tree, rtx);\n-static bool sparc_units_per_simd_word (enum machine_mode);\n+static unsigned int sparc_units_per_simd_word (enum machine_mode);\n \f\n #ifdef SUBTARGET_ATTRIBUTE_TABLE\n /* Table of valid machine attributes.  */\n@@ -6239,7 +6239,7 @@ sparc_vector_mode_supported_p (enum machine_mode mode)\n \f\n /* Implement the TARGET_VECTORIZE_UNITS_PER_SIMD_WORD target hook.  */\n \n-static bool\n+static unsigned int\n sparc_units_per_simd_word (enum machine_mode mode ATTRIBUTE_UNUSED)\n {\n   return TARGET_VIS ? 8 : UNITS_PER_WORD;"}]}