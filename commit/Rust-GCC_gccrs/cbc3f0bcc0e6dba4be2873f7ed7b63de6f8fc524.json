{"sha": "cbc3f0bcc0e6dba4be2873f7ed7b63de6f8fc524", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2JjM2YwYmNjMGU2ZGJhNGJlMjg3M2Y3ZWQ3YjYzZGU2ZjhmYzUyNA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-11-04T23:55:54Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-11-05T13:31:32Z"}, "message": "libstdc++: Adjust whitespace in <sstream>\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/sstream: Adjust whitespace.", "tree": {"sha": "fa8bfc4e038da7dd6e4375802c6226724f7c5b25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa8bfc4e038da7dd6e4375802c6226724f7c5b25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cbc3f0bcc0e6dba4be2873f7ed7b63de6f8fc524", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbc3f0bcc0e6dba4be2873f7ed7b63de6f8fc524", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbc3f0bcc0e6dba4be2873f7ed7b63de6f8fc524", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbc3f0bcc0e6dba4be2873f7ed7b63de6f8fc524/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "403f0dac0cb24184631e175836766a3a1da165a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/403f0dac0cb24184631e175836766a3a1da165a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/403f0dac0cb24184631e175836766a3a1da165a5"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "276badfd965739b455a94356687e80454d9f3e32", "filename": "libstdc++-v3/include/std/sstream", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cbc3f0bcc0e6dba4be2873f7ed7b63de6f8fc524/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsstream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cbc3f0bcc0e6dba4be2873f7ed7b63de6f8fc524/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsstream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fsstream?ref=cbc3f0bcc0e6dba4be2873f7ed7b63de6f8fc524", "patch": "@@ -179,15 +179,15 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n \n       explicit\n       basic_stringbuf(__string_type&& __s,\n-\t              ios_base::openmode __mode = ios_base::in\n-\t\t\t\t\t\t  | ios_base::out )\n+\t\t      ios_base::openmode __mode = ios_base::in\n+\t\t\t\t\t\t  | ios_base::out)\n       : __streambuf_type(), _M_mode(__mode), _M_string(std::move(__s))\n       { _M_stringbuf_init(__mode); }\n \n       template<typename _SAlloc>\n       basic_stringbuf(const basic_string<_CharT, _Traits, _SAlloc>& __s,\n-\t\t      const allocator_type& __a )\n-      : basic_stringbuf(__s, ios_base::in | std::ios_base::out, __a )\n+\t\t      const allocator_type& __a)\n+      : basic_stringbuf(__s, ios_base::in | std::ios_base::out, __a)\n       { }\n \n       template<typename _SAlloc>\n@@ -201,7 +201,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       template<typename _SAlloc>\n \texplicit\n \tbasic_stringbuf(const basic_string<_CharT, _Traits, _SAlloc>& __s,\n-\t                ios_base::openmode __mode = ios_base::in\n+\t\t\tios_base::openmode __mode = ios_base::in\n \t\t\t\t\t\t    | ios_base::out)\n \t: basic_stringbuf(__s, __mode, allocator_type{})\n \t{ }\n@@ -584,7 +584,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n \n       explicit\n       basic_istringstream(__string_type&& __str,\n-\t                  ios_base::openmode __mode = ios_base::in )\n+\t\t\t  ios_base::openmode __mode = ios_base::in)\n       : __istream_type(), _M_stringbuf(std::move(__str), __mode | ios_base::in)\n       { this->init(std::__addressof(_M_stringbuf)); }\n \n@@ -606,7 +606,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       template<typename _SAlloc>\n \texplicit\n \tbasic_istringstream(const basic_string<_CharT, _Traits, _SAlloc>& __str,\n-\t                    ios_base::openmode __mode = ios_base::in)\n+\t\t\t    ios_base::openmode __mode = ios_base::in)\n \t: basic_istringstream(__str, __mode, allocator_type())\n \t{ }\n #endif\n@@ -782,7 +782,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n \n       explicit\n       basic_ostringstream(__string_type&& __str,\n-\t                  ios_base::openmode __mode = ios_base::out )\n+\t\t\t  ios_base::openmode __mode = ios_base::out)\n       : __ostream_type(), _M_stringbuf(std::move(__str), __mode | ios_base::out)\n       { this->init(std::__addressof(_M_stringbuf)); }\n \n@@ -804,7 +804,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       template<typename _SAlloc>\n \texplicit\n \tbasic_ostringstream(const basic_string<_CharT, _Traits, _SAlloc>& __str,\n-\t                    ios_base::openmode __mode = ios_base::out)\n+\t\t\t    ios_base::openmode __mode = ios_base::out)\n \t: basic_ostringstream(__str, __mode, allocator_type())\n \t{ }\n #endif\n@@ -976,7 +976,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n \n       explicit\n       basic_stringstream(__string_type&& __str,\n-\t                 ios_base::openmode __mode = ios_base::in\n+\t\t\t ios_base::openmode __mode = ios_base::in\n \t\t\t\t\t\t     | ios_base::out)\n       : __iostream_type(), _M_stringbuf(std::move(__str), __mode)\n       { this->init(std::__addressof(_M_stringbuf)); }\n@@ -989,15 +989,16 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n \n       template<typename _SAlloc>\n \tbasic_stringstream(const basic_string<_CharT, _Traits, _SAlloc>& __str,\n-\t\t\t   ios_base::openmode __mode, const allocator_type& __a)\n+\t\t\t   ios_base::openmode __mode,\n+\t\t\t   const allocator_type& __a)\n \t: __iostream_type(),\n \t_M_stringbuf(__string_type(__str.data(), __str.size()), __mode, __a)\n \t{ this->init(std::__addressof(_M_stringbuf)); }\n \n       template<typename _SAlloc>\n \texplicit\n \tbasic_stringstream(const basic_string<_CharT, _Traits, _SAlloc>& __str,\n-\t                   ios_base::openmode __mode = ios_base::in\n+\t\t\t   ios_base::openmode __mode = ios_base::in\n \t\t\t\t\t\t       | ios_base::out)\n \t: basic_stringstream(__str, __mode, allocator_type())\n \t{ }"}]}