{"sha": "79d22165ea45e89283ccf147d65cbf66548838da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzlkMjIxNjVlYTQ1ZTg5MjgzY2NmMTQ3ZDY1Y2JmNjY1NDg4MzhkYQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2017-08-30T11:20:47Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2017-08-30T11:20:47Z"}, "message": "[74/77] Various small scalar_mode changes\n\nThis patch uses scalar_mode in a few miscellaneous places:\n\n- Previous patches mean mode_to_vector can take a scalar_mode without\n  further changes.\n\n- Implicit promotion is limited to scalar types (affects promote_mode\n  and sdbout_parms)\n\n2017-08-30  Richard Sandiford  <richard.sandiford@linaro.org>\n\t    Alan Hayward  <alan.hayward@arm.com>\n\t    David Sherwood  <david.sherwood@arm.com>\n\ngcc/\n\t* machmode.h (mode_for_vector): Take a scalar_mode instead\n\tof a machine_mode.\n\t* stor-layout.c (mode_for_vector): Likewise.\n\t* explow.c (promote_mode): Use as_a <scalar_mode>.\n\t* sdbout.c (sdbout_parms): Use is_a <scalar_mode>.\n\nCo-Authored-By: Alan Hayward <alan.hayward@arm.com>\nCo-Authored-By: David Sherwood <david.sherwood@arm.com>\n\nFrom-SVN: r251525", "tree": {"sha": "812a87db01df4c4e3e81d00d580cdff5c4ba3814", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/812a87db01df4c4e3e81d00d580cdff5c4ba3814"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79d22165ea45e89283ccf147d65cbf66548838da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79d22165ea45e89283ccf147d65cbf66548838da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79d22165ea45e89283ccf147d65cbf66548838da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79d22165ea45e89283ccf147d65cbf66548838da/comments", "author": null, "committer": null, "parents": [{"sha": "005ba29c18d3f9a2c9a3dd40c6dee0b87ff504c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/005ba29c18d3f9a2c9a3dd40c6dee0b87ff504c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/005ba29c18d3f9a2c9a3dd40c6dee0b87ff504c5"}], "stats": {"total": 33, "additions": 25, "deletions": 8}, "files": [{"sha": "bc704067bf063cf04f9c426dd04cda86a3293cf1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79d22165ea45e89283ccf147d65cbf66548838da/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79d22165ea45e89283ccf147d65cbf66548838da/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=79d22165ea45e89283ccf147d65cbf66548838da", "patch": "@@ -1,3 +1,13 @@\n+2017-08-30  Richard Sandiford  <richard.sandiford@linaro.org>\n+\t    Alan Hayward  <alan.hayward@arm.com>\n+\t    David Sherwood  <david.sherwood@arm.com>\n+\n+\t* machmode.h (mode_for_vector): Take a scalar_mode instead\n+\tof a machine_mode.\n+\t* stor-layout.c (mode_for_vector): Likewise.\n+\t* explow.c (promote_mode): Use as_a <scalar_mode>.\n+\t* sdbout.c (sdbout_parms): Use is_a <scalar_mode>.\n+\n 2017-08-30  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "82380f31093c629e6d676b81521e56cb61d10ad3", "filename": "gcc/explow.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79d22165ea45e89283ccf147d65cbf66548838da/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79d22165ea45e89283ccf147d65cbf66548838da/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=79d22165ea45e89283ccf147d65cbf66548838da", "patch": "@@ -787,6 +787,7 @@ promote_mode (const_tree type ATTRIBUTE_UNUSED, machine_mode mode,\n #ifdef PROMOTE_MODE\n   enum tree_code code;\n   int unsignedp;\n+  scalar_mode smode;\n #endif\n \n   /* For libcalls this is invoked without TYPE from the backends\n@@ -806,9 +807,11 @@ promote_mode (const_tree type ATTRIBUTE_UNUSED, machine_mode mode,\n     {\n     case INTEGER_TYPE:   case ENUMERAL_TYPE:   case BOOLEAN_TYPE:\n     case REAL_TYPE:      case OFFSET_TYPE:     case FIXED_POINT_TYPE:\n-      PROMOTE_MODE (mode, unsignedp, type);\n+      /* Values of these types always have scalar mode.  */\n+      smode = as_a <scalar_mode> (mode);\n+      PROMOTE_MODE (smode, unsignedp, type);\n       *punsignedp = unsignedp;\n-      return mode;\n+      return smode;\n \n #ifdef POINTERS_EXTEND_UNSIGNED\n     case REFERENCE_TYPE:"}, {"sha": "b3e79ca4df6850170269b1053e6cee82f099c394", "filename": "gcc/machmode.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79d22165ea45e89283ccf147d65cbf66548838da/gcc%2Fmachmode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79d22165ea45e89283ccf147d65cbf66548838da/gcc%2Fmachmode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmachmode.h?ref=79d22165ea45e89283ccf147d65cbf66548838da", "patch": "@@ -650,7 +650,7 @@ extern machine_mode bitwise_mode_for_mode (machine_mode);\n /* Return a mode that is suitable for representing a vector,\n    or BLKmode on failure.  */\n \n-extern machine_mode mode_for_vector (machine_mode, unsigned);\n+extern machine_mode mode_for_vector (scalar_mode, unsigned);\n \n /* A class for iterating through possible bitfield modes.  */\n class bit_field_mode_iterator"}, {"sha": "acd25a3c7658eae14609fffabab9963da2d53965", "filename": "gcc/sdbout.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79d22165ea45e89283ccf147d65cbf66548838da/gcc%2Fsdbout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79d22165ea45e89283ccf147d65cbf66548838da/gcc%2Fsdbout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsdbout.c?ref=79d22165ea45e89283ccf147d65cbf66548838da", "patch": "@@ -1281,11 +1281,15 @@ sdbout_parms (tree parms)\n \t\t   the parm with the variable's declared type, and adjust\n \t\t   the address if the least significant bytes (which we are\n \t\t   using) are not the first ones.  */\n+\t\tscalar_mode from_mode, to_mode;\n \t\tif (BYTES_BIG_ENDIAN\n-\t\t    && TREE_TYPE (parms) != DECL_ARG_TYPE (parms))\n-\t\t  current_sym_value +=\n-\t\t    (GET_MODE_SIZE (TYPE_MODE (DECL_ARG_TYPE (parms)))\n-\t\t     - GET_MODE_SIZE (GET_MODE (DECL_RTL (parms))));\n+\t\t    && TREE_TYPE (parms) != DECL_ARG_TYPE (parms)\n+\t\t    && is_a <scalar_mode> (TYPE_MODE (DECL_ARG_TYPE (parms)),\n+\t\t\t\t\t   &from_mode)\n+\t\t    && is_a <scalar_mode> (GET_MODE (DECL_RTL (parms)),\n+\t\t\t\t\t   &to_mode))\n+\t\t  current_sym_value += (GET_MODE_SIZE (from_mode)\n+\t\t\t\t\t- GET_MODE_SIZE (to_mode));\n \n \t\tif (MEM_P (DECL_RTL (parms))\n \t\t    && GET_CODE (XEXP (DECL_RTL (parms), 0)) == PLUS"}, {"sha": "6414545d138aadb075385a595539c38aca444ea5", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79d22165ea45e89283ccf147d65cbf66548838da/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79d22165ea45e89283ccf147d65cbf66548838da/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=79d22165ea45e89283ccf147d65cbf66548838da", "patch": "@@ -478,7 +478,7 @@ bitwise_type_for_mode (machine_mode mode)\n    is no suitable mode.  */\n \n machine_mode\n-mode_for_vector (machine_mode innermode, unsigned nunits)\n+mode_for_vector (scalar_mode innermode, unsigned nunits)\n {\n   machine_mode mode;\n "}]}