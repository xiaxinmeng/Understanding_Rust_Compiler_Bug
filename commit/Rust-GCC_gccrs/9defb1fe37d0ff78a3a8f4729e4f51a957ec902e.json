{"sha": "9defb1fe37d0ff78a3a8f4729e4f51a957ec902e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWRlZmIxZmUzN2QwZmY3OGEzYThmNDcyOWU0ZjUxYTk1N2VjOTAyZQ==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2008-05-16T13:36:26Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2008-05-16T13:36:26Z"}, "message": "[multiple changes]\n\n2008-05-16  Nathan Froyd  <froydnj@codesourcery.com>\n\n\t* tree-flow.h (init_empty_tree_cfg_for_function): Declare.\n\t* tree-cfg.c (init_empty_tree_cfg_for_function): Define.\n\t(init_empty_tree_cfg): Call it.\n\n2008-05-16  Kenneth Zadeck <zadeck@naturalbridge.com>\n\n\t* cfg.c (init_flow): Add argument THE_FUN.  Use it\n\tinstead of cfun.  Update all users.\n\nFrom-SVN: r135418", "tree": {"sha": "83954b55280032f81a5047d421f35181d5f9ce50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83954b55280032f81a5047d421f35181d5f9ce50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9defb1fe37d0ff78a3a8f4729e4f51a957ec902e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9defb1fe37d0ff78a3a8f4729e4f51a957ec902e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9defb1fe37d0ff78a3a8f4729e4f51a957ec902e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9defb1fe37d0ff78a3a8f4729e4f51a957ec902e/comments", "author": null, "committer": null, "parents": [{"sha": "3e894af1569a84c5bb6eb730266248e6a4cae2de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e894af1569a84c5bb6eb730266248e6a4cae2de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e894af1569a84c5bb6eb730266248e6a4cae2de"}], "stats": {"total": 81, "additions": 57, "deletions": 24}, "files": [{"sha": "50eb528a9e97e77e51b6af35b16637de09575110", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9defb1fe37d0ff78a3a8f4729e4f51a957ec902e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9defb1fe37d0ff78a3a8f4729e4f51a957ec902e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9defb1fe37d0ff78a3a8f4729e4f51a957ec902e", "patch": "@@ -1,3 +1,14 @@\n+2008-05-16  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* tree-flow.h (init_empty_tree_cfg_for_function): Declare.\n+\t* tree-cfg.c (init_empty_tree_cfg_for_function): Define.\n+\t(init_empty_tree_cfg): Call it.\n+\n+2008-05-16  Kenneth Zadeck <zadeck@naturalbridge.com>\n+\n+\t* cfg.c (init_flow): Add argument THE_FUN.  Use it\n+\tinstead of cfun.  Update all users.\n+\n 2008-05-16  Kenneth Zadeck <zadeck@naturalbridge.com>\n \n \t* doc/invoke.text (-fdump-tree-*-verbose): New option."}, {"sha": "53e8a8b5685d92b77f1ae641743d5214f0e8d124", "filename": "gcc/basic-block.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9defb1fe37d0ff78a3a8f4729e4f51a957ec902e/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9defb1fe37d0ff78a3a8f4729e4f51a957ec902e/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=9defb1fe37d0ff78a3a8f4729e4f51a957ec902e", "patch": "@@ -414,9 +414,12 @@ struct control_flow_graph GTY(())\n #define n_edges_for_function(FN)\t     ((FN)->cfg->x_n_edges)\n #define last_basic_block_for_function(FN)    ((FN)->cfg->x_last_basic_block)\n #define label_to_block_map_for_function(FN)  ((FN)->cfg->x_label_to_block_map)\n+#define profile_status_for_function(FN)\t     ((FN)->cfg->x_profile_status)\n \n #define BASIC_BLOCK_FOR_FUNCTION(FN,N) \\\n   (VEC_index (basic_block, basic_block_info_for_function(FN), (N)))\n+#define SET_BASIC_BLOCK_FOR_FUNCTION(FN,N,BB) \\\n+  (VEC_replace (basic_block, basic_block_info_for_function(FN), (N), (BB)))\n \n /* Defines for textual backward source compatibility.  */\n #define ENTRY_BLOCK_PTR\t\t(cfun->cfg->x_entry_block_ptr)\n@@ -839,7 +842,7 @@ extern bool br_prob_note_reliable_p (const_rtx);\n /* In cfg.c  */\n extern void dump_regset (regset, FILE *);\n extern void debug_regset (regset);\n-extern void init_flow (void);\n+extern void init_flow (struct function *);\n extern void debug_bb (basic_block);\n extern basic_block debug_bb_n (int);\n extern void dump_regset (regset, FILE *);"}, {"sha": "e8bf789480bf9129745428e0a2aed8c917f535a3", "filename": "gcc/cfg.c", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9defb1fe37d0ff78a3a8f4729e4f51a957ec902e/gcc%2Fcfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9defb1fe37d0ff78a3a8f4729e4f51a957ec902e/gcc%2Fcfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfg.c?ref=9defb1fe37d0ff78a3a8f4729e4f51a957ec902e", "patch": "@@ -81,17 +81,21 @@ static void free_edge (edge);\n /* Called once at initialization time.  */\n \n void\n-init_flow (void)\n+init_flow (struct function *the_fun)\n {\n-  if (!cfun->cfg)\n-    cfun->cfg = GGC_CNEW (struct control_flow_graph);\n-  n_edges = 0;\n-  ENTRY_BLOCK_PTR = GGC_CNEW (struct basic_block_def);\n-  ENTRY_BLOCK_PTR->index = ENTRY_BLOCK;\n-  EXIT_BLOCK_PTR = GGC_CNEW (struct basic_block_def);\n-  EXIT_BLOCK_PTR->index = EXIT_BLOCK;\n-  ENTRY_BLOCK_PTR->next_bb = EXIT_BLOCK_PTR;\n-  EXIT_BLOCK_PTR->prev_bb = ENTRY_BLOCK_PTR;\n+  if (!the_fun->cfg)\n+    the_fun->cfg = GGC_CNEW (struct control_flow_graph);\n+  n_edges_for_function (the_fun) = 0;\n+  ENTRY_BLOCK_PTR_FOR_FUNCTION (the_fun)\n+    = GGC_CNEW (struct basic_block_def);\n+  ENTRY_BLOCK_PTR_FOR_FUNCTION (the_fun)->index = ENTRY_BLOCK;\n+  EXIT_BLOCK_PTR_FOR_FUNCTION (the_fun)\n+    = GGC_CNEW (struct basic_block_def);\n+  EXIT_BLOCK_PTR_FOR_FUNCTION (the_fun)->index = EXIT_BLOCK;\n+  ENTRY_BLOCK_PTR_FOR_FUNCTION (the_fun)->next_bb \n+    = EXIT_BLOCK_PTR_FOR_FUNCTION (the_fun);\n+  EXIT_BLOCK_PTR_FOR_FUNCTION (the_fun)->prev_bb \n+    = ENTRY_BLOCK_PTR_FOR_FUNCTION (the_fun);\n }\n \f\n /* Helper function for remove_edge and clear_edges.  Frees edge structure"}, {"sha": "4eab1fd449ef7603ef1f5ff9a9d99b67ec415bd8", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 28, "deletions": 13, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9defb1fe37d0ff78a3a8f4729e4f51a957ec902e/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9defb1fe37d0ff78a3a8f4729e4f51a957ec902e/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=9defb1fe37d0ff78a3a8f4729e4f51a957ec902e", "patch": "@@ -114,26 +114,41 @@ static edge find_taken_edge_switch_expr (basic_block, tree);\n static tree find_case_label_for_value (tree, tree);\n \n void\n-init_empty_tree_cfg (void)\n+init_empty_tree_cfg_for_function (struct function *fn)\n {\n   /* Initialize the basic block array.  */\n-  init_flow ();\n-  profile_status = PROFILE_ABSENT;\n-  n_basic_blocks = NUM_FIXED_BLOCKS;\n-  last_basic_block = NUM_FIXED_BLOCKS;\n-  basic_block_info = VEC_alloc (basic_block, gc, initial_cfg_capacity);\n-  VEC_safe_grow_cleared (basic_block, gc, basic_block_info,\n+  init_flow (fn);\n+  profile_status_for_function (fn) = PROFILE_ABSENT;\n+  n_basic_blocks_for_function (fn) = NUM_FIXED_BLOCKS;\n+  last_basic_block_for_function (fn) = NUM_FIXED_BLOCKS;\n+  basic_block_info_for_function (fn)\n+    = VEC_alloc (basic_block, gc, initial_cfg_capacity);\n+  VEC_safe_grow_cleared (basic_block, gc,\n+\t\t\t basic_block_info_for_function (fn),\n \t\t\t initial_cfg_capacity);\n \n   /* Build a mapping of labels to their associated blocks.  */\n-  label_to_block_map = VEC_alloc (basic_block, gc, initial_cfg_capacity);\n-  VEC_safe_grow_cleared (basic_block, gc, label_to_block_map,\n+  label_to_block_map_for_function (fn)\n+    = VEC_alloc (basic_block, gc, initial_cfg_capacity);\n+  VEC_safe_grow_cleared (basic_block, gc,\n+\t\t\t label_to_block_map_for_function (fn),\n \t\t\t initial_cfg_capacity);\n \n-  SET_BASIC_BLOCK (ENTRY_BLOCK, ENTRY_BLOCK_PTR);\n-  SET_BASIC_BLOCK (EXIT_BLOCK, EXIT_BLOCK_PTR);\n-  ENTRY_BLOCK_PTR->next_bb = EXIT_BLOCK_PTR;\n-  EXIT_BLOCK_PTR->prev_bb = ENTRY_BLOCK_PTR;\n+  SET_BASIC_BLOCK_FOR_FUNCTION (fn, ENTRY_BLOCK, \n+\t\t\t\tENTRY_BLOCK_PTR_FOR_FUNCTION (fn));\n+  SET_BASIC_BLOCK_FOR_FUNCTION (fn, EXIT_BLOCK, \n+\t\t   EXIT_BLOCK_PTR_FOR_FUNCTION (fn));\n+\n+  ENTRY_BLOCK_PTR_FOR_FUNCTION (fn)->next_bb\n+    = EXIT_BLOCK_PTR_FOR_FUNCTION (fn);\n+  EXIT_BLOCK_PTR_FOR_FUNCTION (fn)->prev_bb\n+    = ENTRY_BLOCK_PTR_FOR_FUNCTION (fn);\n+}\n+\n+void\n+init_empty_tree_cfg (void)\n+{\n+  init_empty_tree_cfg_for_function (cfun);\n }\n \n /*---------------------------------------------------------------------------"}]}