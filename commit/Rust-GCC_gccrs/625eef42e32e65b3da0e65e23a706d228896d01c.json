{"sha": "625eef42e32e65b3da0e65e23a706d228896d01c", "node_id": "C_kwDOANBUbNoAKDYyNWVlZjQyZTMyZTY1YjNkYTBlNjVlMjNhNzA2ZDIyODg5NmQwMWM", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-11-15T08:30:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-11-15T08:30:08Z"}, "message": "i386: Fix up x86 atomic_bit_test* expanders for !TARGET_HIMODE_MATH [PR103205]\n\nWith !TARGET_HIMODE_MATH, the OPTAB_DIRECT expand_simple_binop fail and so\nwe ICE.  We don't really care if they are done promoted in SImode instead.\n\n2021-11-15  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/103205\n\t* config/i386/sync.md (atomic_bit_test_and_set<mode>,\n\tatomic_bit_test_and_complement<mode>,\n\tatomic_bit_test_and_reset<mode>): Use OPTAB_WIDEN instead of\n\tOPTAB_DIRECT.\n\n\t* gcc.target/i386/pr103205.c: New test.", "tree": {"sha": "834d66c2b2865cca0c10c861ef14ea04149f2a4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/834d66c2b2865cca0c10c861ef14ea04149f2a4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/625eef42e32e65b3da0e65e23a706d228896d01c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/625eef42e32e65b3da0e65e23a706d228896d01c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/625eef42e32e65b3da0e65e23a706d228896d01c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/625eef42e32e65b3da0e65e23a706d228896d01c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fa72756d90e0d9edadf6e6f5f56476029925788", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fa72756d90e0d9edadf6e6f5f56476029925788", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fa72756d90e0d9edadf6e6f5f56476029925788"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "9716a0b2f2c1b95ca353a5a212fe07322e20402c", "filename": "gcc/config/i386/sync.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/625eef42e32e65b3da0e65e23a706d228896d01c/gcc%2Fconfig%2Fi386%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/625eef42e32e65b3da0e65e23a706d228896d01c/gcc%2Fconfig%2Fi386%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsync.md?ref=625eef42e32e65b3da0e65e23a706d228896d01c", "patch": "@@ -726,7 +726,7 @@\n   rtx result = convert_modes (<MODE>mode, QImode, tem, 1);\n   if (operands[4] == const0_rtx)\n     result = expand_simple_binop (<MODE>mode, ASHIFT, result,\n-\t\t\t\t  operands[2], operands[0], 0, OPTAB_DIRECT);\n+\t\t\t\t  operands[2], operands[0], 0, OPTAB_WIDEN);\n   if (result != operands[0])\n     emit_move_insn (operands[0], result);\n   DONE;\n@@ -763,7 +763,7 @@\n   rtx result = convert_modes (<MODE>mode, QImode, tem, 1);\n   if (operands[4] == const0_rtx)\n     result = expand_simple_binop (<MODE>mode, ASHIFT, result,\n-\t\t\t\t  operands[2], operands[0], 0, OPTAB_DIRECT);\n+\t\t\t\t  operands[2], operands[0], 0, OPTAB_WIDEN);\n   if (result != operands[0])\n     emit_move_insn (operands[0], result);\n   DONE;\n@@ -801,7 +801,7 @@\n   rtx result = convert_modes (<MODE>mode, QImode, tem, 1);\n   if (operands[4] == const0_rtx)\n     result = expand_simple_binop (<MODE>mode, ASHIFT, result,\n-\t\t\t\t  operands[2], operands[0], 0, OPTAB_DIRECT);\n+\t\t\t\t  operands[2], operands[0], 0, OPTAB_WIDEN);\n   if (result != operands[0])\n     emit_move_insn (operands[0], result);\n   DONE;"}, {"sha": "eaeea82fee2d77fea75c04c6bf2656aea1054d37", "filename": "gcc/testsuite/gcc.target/i386/pr103205.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/625eef42e32e65b3da0e65e23a706d228896d01c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr103205.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/625eef42e32e65b3da0e65e23a706d228896d01c/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr103205.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr103205.c?ref=625eef42e32e65b3da0e65e23a706d228896d01c", "patch": "@@ -0,0 +1,11 @@\n+/* PR target/103205 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mtune-ctrl=^himode_math\" } */\n+\n+unsigned short a;\n+\n+unsigned short\n+foo (void)\n+{\n+  return __sync_fetch_and_and (&a, ~1) & 1;\n+}"}]}