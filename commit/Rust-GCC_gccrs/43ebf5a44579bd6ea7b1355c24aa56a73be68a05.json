{"sha": "43ebf5a44579bd6ea7b1355c24aa56a73be68a05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNlYmY1YTQ0NTc5YmQ2ZWE3YjEzNTVjMjRhYTU2YTczYmU2OGEwNQ==", "commit": {"author": {"name": "Dave Love", "email": "fx@gcc.gnu.org", "date": "1998-05-22T10:55:21Z"}, "committer": {"name": "Dave Love", "email": "fx@gcc.gnu.org", "date": "1998-05-22T10:55:21Z"}, "message": "JCB update.\n\nFrom-SVN: r19958", "tree": {"sha": "31fec69735e89d3e68dd43bcc7f1120418634fc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31fec69735e89d3e68dd43bcc7f1120418634fc0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43ebf5a44579bd6ea7b1355c24aa56a73be68a05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43ebf5a44579bd6ea7b1355c24aa56a73be68a05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43ebf5a44579bd6ea7b1355c24aa56a73be68a05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43ebf5a44579bd6ea7b1355c24aa56a73be68a05/comments", "author": null, "committer": null, "parents": [{"sha": "2929d7a2a0b6d5d3be66a4261b958104030077bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2929d7a2a0b6d5d3be66a4261b958104030077bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2929d7a2a0b6d5d3be66a4261b958104030077bf"}], "stats": {"total": 226, "additions": 199, "deletions": 27}, "files": [{"sha": "dfd0c6b408b983578010743314873d49456ac3cd", "filename": "gcc/f/g77.texi", "status": "modified", "additions": 143, "deletions": 18, "changes": 161, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ebf5a44579bd6ea7b1355c24aa56a73be68a05/gcc%2Ff%2Fg77.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ebf5a44579bd6ea7b1355c24aa56a73be68a05/gcc%2Ff%2Fg77.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fg77.texi?ref=43ebf5a44579bd6ea7b1355c24aa56a73be68a05", "patch": "@@ -14,7 +14,7 @@\n @c %**start of header \n @setfilename g77.info\n \n-@set last-up-date 1998-05-19\n+@set last-up-date 1998-05-22\n @set version-g77 0.5.23\n \n @c @setfilename useg77.info\n@@ -8119,23 +8119,148 @@ avoid clashes with C++ reserved words in addition to those in C@.\n @cindex startup code\n @cindex runtime initialization\n @cindex initialization, runtime\n-Unlike with some runtime systems, it shouldn't be necessary (unless there are\n-bugs) to use a Fortran main program to ensure the\n-runtime---specifically the i/o system---is initialized.\n-However, to use\n-the @code{g77} intrinsics @code{GETARG()} and @code{IARGC()} the\n-@code{main()} routine from the @file{libf2c} library must be used, either\n-explicitly or implicitly by using a Fortran main program.\n-This\n-@code{main()} program calls @code{MAIN__()} (where the names are C-type\n-@code{extern} names, i.e.@ not mangled).\n-You need to provide this\n-nullary procedure as the entry point for your C code if using\n-@file{libf2c}'s @code{main}.\n-In some cases it might be necessary to\n-provide a dummy version of this to avoid linkers complaining about\n-failure to resolve @code{MAIN__()} if linking against @file{libf2c} and\n-not using @code{main()} from it.\n+Unlike with some runtime systems,\n+it shouldn't be necessary\n+(unless there are bugs)\n+to use a Fortran main program unit to ensure the\n+runtime---specifically the I/O system---is initialized.\n+\n+However, to use the @code{g77} intrinsics @code{GETARG} and @code{IARGC},\n+either the @code{main} routine from the @file{libg2c} library must be used,\n+or the @code{f_setarg} routine\n+(new as of @code{egcs} version 1.1 and @code{g77} version 0.5.23)\n+must be called with the appropriate @code{argc} and @code{argv} arguments\n+prior to the program calling @code{GETARG} or @code{IARGC}.\n+\n+To provide more flexibility for mixed-language programming\n+involving @code{g77} while allowing for shared libraries,\n+as of @code{egcs} version 1.1 and @code{g77} version 0.5.23,\n+@code{g77}'s @code{main} routine in @code{libg2c}\n+does the following, in order:\n+\n+@enumerate\n+@item\n+Calls @code{f_setarg}\n+with the incoming @code{argc} and @code{argv} arguments,\n+in the same order as for @code{main} itself.\n+\n+This sets up the command-line environment\n+for @code{GETARG} and @code{IARGC}.\n+\n+@item\n+Calls @code{f_setsig} (with no arguments).\n+\n+This sets up the signaling and exception environment.\n+\n+@item\n+Calls @code{f_init} (with no arguments).\n+\n+This initializes the I/O environment,\n+though that should not be necessary,\n+as all I/O functions in @code{libf2c}\n+are believed to call @code{f_init} automatically,\n+if necessary.\n+\n+(A future version of @code{g77} might skip this explicit step,\n+to speed up normal exit of a program.)\n+\n+@item\n+Arranges for @code{f_exit} to be called (with no arguments)\n+when the program exits.\n+\n+This ensures that the I/O environment is properly shut down\n+before the program exits normally.\n+Otherwise, output buffers might not be fully flushed,\n+scratch files might not be deleted, and so on.\n+\n+The simple way @code{main} does this is\n+to call @code{f_exit} itself after calling\n+@code{MAIN__} (in the next step).\n+\n+However, this does not catch the cases where the program\n+might call @code{exit} directly,\n+instead of using the @code{EXIT} intrinsic\n+(implemented as @code{exit_} in @code{libf2c}).\n+\n+So, @code{main} attempts to use\n+the operating environment's @code{onexit} or @code{atexit}\n+facility, if available,\n+to cause @code{f_exit} to be called automatically\n+upon any invocation of @code{exit}.\n+\n+@item\n+Calls @code{MAIN__} (with no arguments).\n+\n+This starts executing the Fortran main program unit for\n+the application.\n+(Both @code{g77} and @code{f2c} currently compile a main\n+program unit so that its global name is @code{MAIN__}.)\n+\n+@item\n+If no @code{onexit} or @code{atexit} is provided by the system,\n+calls @code{f_exit}.\n+\n+@item\n+Calls @code{exit} with a zero argument,\n+to signal a successful program termination.\n+\n+@item\n+Returns a zero value to the caller,\n+to signal a successful program termination,\n+in case @code{exit} doesn't exit on the system.\n+@end enumerate\n+\n+All of the above names are C @code{extern} names,\n+i.e.@: not mangled.\n+\n+When using the @code{main} procedure provided by @code{g77}\n+without a Fortran main program unit,\n+you need to provide @code{MAIN__}\n+as the entry point for your C code.\n+(Make sure you link the object file that defines that\n+entry point with the rest of your program.)\n+\n+To provide your own @code{main} procedure\n+in place of @code{g77}'s,\n+make sure you specify the object file defining that procedure\n+@emph{before} @samp{-lg2c} on the @code{g77} command line.\n+Since the @samp{-lg2c} option is implicitly provided,\n+this is usually straightforward.\n+(Use the @samp{--verbose} option to see how and where\n+@code{g77} implicitly adds @samp{-lg2c} in a command line\n+that will link the program.\n+Feel free to specify @samp{-lg2c} explicitly,\n+as appropriate.)\n+\n+However, when providing your own @code{main},\n+make sure you perform the appropriate tasks in the\n+appropriate order.\n+For example, if your @code{main} does not call @code{f_setarg},\n+make sure the rest of your application does not call\n+@code{GETARG} or @code{IARGC}.\n+\n+And, if your @code{main} fails to ensure that @code{f_exit}\n+is called upon program exit,\n+some files might end up incompletely written,\n+some scratch files might be left lying around,\n+and some existing files being written might be left\n+with old data not properly truncated at the end.\n+\n+Note that, generally, the @code{g77} operating environment\n+does not depend on a procedure named @code{MAIN__} actually\n+being called prior to any other @code{g77}-compiled code.\n+That is, @code{MAIN__} does not, itself,\n+set up any important operating-environment characteristics\n+upon which other code might depend.\n+This might change in future versions of @code{g77},\n+with appropriate notification in the release notes.\n+\n+For more information, consult the source code for the above routines.\n+These are in @file{egcs/libf2c/libF77/}, named @file{main.c},\n+@file{setarg.c}, @file{setsig.c}, @file{getarg_.c}, and @file{iargc_.c}.\n+\n+Also, the file @file{egcs/gcc/f/com.c} contains the code @code{g77}\n+uses to open-code (inline) references to @code{IARGC}.\n \n @include g77install.texi\n "}, {"sha": "7dfa316cae507a06d22d756659b0cbafa6be8a6a", "filename": "gcc/f/news.texi", "status": "modified", "additions": 56, "deletions": 9, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ebf5a44579bd6ea7b1355c24aa56a73be68a05/gcc%2Ff%2Fnews.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ebf5a44579bd6ea7b1355c24aa56a73be68a05/gcc%2Ff%2Fnews.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fnews.texi?ref=43ebf5a44579bd6ea7b1355c24aa56a73be68a05", "patch": "@@ -5,7 +5,7 @@\n @c The text of this file appears in the file BUGS\n @c in the G77 distribution, as well as in the G77 manual.\n \n-@c 1998-04-20\n+@c 1998-05-19\n \n @ifclear NEWSONLY\n @node News\n@@ -33,14 +33,6 @@ New features\n @item\n Fixes and enhancements to existing features\n \n-@item\n-@code{CASE DEFAULT} no longer crashes @code{g77}.\n-\n-@item\n-The @samp{-Wunused} option no longer issues a spurious\n-warning about the ``master'' procedure generated by\n-@code{g77} for procedures containing @code{ENTRY} statements.\n-\n @item\n New diagnostics\n \n@@ -100,8 +92,25 @@ because the defaults are optimized for @code{g77} users.)\n @item\n Support for the @samp{-W} option warning about\n integer division by zero.\n+\n+@item\n+The Intel x86-specific option @samp{-malign-double}\n+applying to stack-allocated data\n+as well as statically-allocate data.\n @end itemize\n \n+Note that the @file{gcc/f/gbe/} subdirectory has been removed\n+from this distribution as a result of @code{g77} no longer\n+including patches for the @code{gcc} back end.\n+\n+@item\n+Fix bugs in the @code{libU77} intrinsic @samp{HostNm}\n+that wrote one byte beyond the end of its @samp{CHARACTER}\n+argument,\n+and in the @code{libU77} intrinsics\n+@samp{GMTime} and @samp{LTime}\n+that overwrote their arguments.\n+\n @item\n Support @code{gcc} version 2.8,\n and remove support for prior versions of @code{gcc}.\n@@ -117,6 +126,15 @@ just like @code{gcc}.\n @item\n @code{CASE DEFAULT} no longer crashes @code{g77}.\n \n+@item\n+Valid combinations of @code{EXTERNAL},\n+passing that external as a dummy argument\n+without explicitly giving it a type,\n+and, in a subsequent program unit,\n+referencing that external as\n+an external function with a different type\n+no longer crash @code{g77}.\n+\n @item\n @code{g77} no longer installs the @file{f77} command\n and @file{f77.1} man page\n@@ -164,6 +182,18 @@ The @samp{-Wunused} option no longer issues a spurious\n warning about the ``master'' procedure generated by\n @code{g77} for procedures containing @code{ENTRY} statements.\n \n+@item\n+@code{g77}'s version of @code{libf2c} separates out\n+the setting of global state\n+(such as command-line arguments and signal handling)\n+from @file{main.o} into distinct, new library\n+archive members.\n+\n+This should make it easier to write portable applications\n+that have their own (non-Fortran) @code{main()} routine\n+to properly set up the @code{libf2c} environment, even\n+when @code{libf2c} (now @code{libg2c}) is a shared library.\n+\n @item\n During the configuration and build process,\n @code{g77} creates subdirectories it needs only as it\n@@ -172,6 +202,23 @@ needs them, thus avoiding unnecessary creation of, for example,\n Other cleaning up of the configuration and build process\n has been performed as well.\n \n+@item\n+Use @code{install-info} to update the directory of\n+Info documentation to contain an entry for @code{g77}\n+(during installation).\n+\n+@item\n+Some diagnostics have been changed from warnings to errors,\n+to prevent inadvertent use of the resulting, probably buggy,\n+programs.\n+These mostly include diagnostics about use of unsupported features\n+in the @code{OPEN}, @code{INQUIRE}, @code{READ}, and\n+@code{WRITE} statements,\n+and about truncations of various sorts of constants.\n+\n+@item\n+Improve documentation and indexing.\n+\n @item\n Upgrade to @code{libf2c} as of 1998-04-20.\n "}]}