{"sha": "8281e3b8ea4fe692c92c8781636a36e81f4e038f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI4MWUzYjhlYTRmZTY5MmM5MmM4NzgxNjM2YTM2ZTgxZjRlMDM4Zg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-04-26T14:04:45Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-04-26T14:04:45Z"}, "message": "Reduce code instantiated by filesystem::path::_S_convert_loc\n\nJakub noted in https://gcc.gnu.org/ml/libstdc++/2019-04/msg00140.html\nthat an unwanted std::wstring::_M_replace_dispatch symbol has started to\nbe exported from the Fedora shared library. This symbol is triggered by\nthe instantiation of std::wstring::assign(const char*, const char*) from\nstd::__str_codecvt_in which is called from path::_S_convert_loc. The\nbranch that triggers that instantiation can't actually happen in that\ncase, because codecvt facets will only return noconv when the input and\noutput types are the same. Guarding the assign call with an if-constexpr\ncheck that the types are the same avoids instantiating template\nspecializations that will never actually be needed.\n\n\t* config/abi/pre/gnu.ver (GLIBCXX_3.4): Replace wildcard that matches\n\twstring::_M_replace_dispatch with more specific patterns.\n\t* include/bits/fs_path.h (path::_S_convert_loc<_InputIterator>):\n\tCreate const std::string to avoid redundant call to _S_convert_loc\n\twith non-const pointers.\n\t* include/bits/locale_conv.h (__do_str_codecvt): Use if-constexpr to\n\tavoid unnecessary basic_string::assign instantiations.\n\nFrom-SVN: r270602", "tree": {"sha": "fbfb8aa99ea6a9acdf78561de7e7747ac2b47856", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbfb8aa99ea6a9acdf78561de7e7747ac2b47856"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8281e3b8ea4fe692c92c8781636a36e81f4e038f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8281e3b8ea4fe692c92c8781636a36e81f4e038f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8281e3b8ea4fe692c92c8781636a36e81f4e038f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8281e3b8ea4fe692c92c8781636a36e81f4e038f/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3addb7b937c614101cd3bb7a7e91cd3fc84d30b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3addb7b937c614101cd3bb7a7e91cd3fc84d30b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3addb7b937c614101cd3bb7a7e91cd3fc84d30b5"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "61841e87ce824e661e95533c068fcd4835892b75", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8281e3b8ea4fe692c92c8781636a36e81f4e038f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8281e3b8ea4fe692c92c8781636a36e81f4e038f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8281e3b8ea4fe692c92c8781636a36e81f4e038f", "patch": "@@ -1,5 +1,13 @@\n 2019-04-26  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* config/abi/pre/gnu.ver (GLIBCXX_3.4): Replace wildcard that matches\n+\twstring::_M_replace_dispatch with more specific patterns.\n+\t* include/bits/fs_path.h (path::_S_convert_loc<_InputIterator>):\n+\tCreate const std::string to avoid redundant call to _S_convert_loc\n+\twith non-const pointers.\n+\t* include/bits/locale_conv.h (__do_str_codecvt): Use if-constexpr to\n+\tavoid unnecessary basic_string::assign instantiations.\n+\n \t* include/std/memory (__uses_alloc_args): Add string-literal to\n \tstatic_assert, to match the one in __uses_alloc.\n \t[__cpp_concepts] (_Std_pair): Use C++2a syntax for concept."}, {"sha": "7eff4e983f3fd4e84542bc81da42b3a2c3f04bb0", "filename": "libstdc++-v3/config/abi/pre/gnu.ver", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8281e3b8ea4fe692c92c8781636a36e81f4e038f/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8281e3b8ea4fe692c92c8781636a36e81f4e038f/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver?ref=8281e3b8ea4fe692c92c8781636a36e81f4e038f", "patch": "@@ -299,7 +299,8 @@ GLIBCXX_3.4 {\n     _ZNSbIwSt11char_traitsIwESaIwEE12_S_constructE[jmy]wRKS1_;\n     _ZNSbIwSt11char_traitsIwESaIwEE12_S_empty_repEv;\n     _ZNSbIwSt11char_traitsIwESaIwEE13_S_copy_chars*;\n-    _ZNSbIwSt11char_traitsIwESaIwEE[0-9][0-9]_M_replace*;\n+    _ZNSbIwSt11char_traitsIwESaIwEE14_M_replace_aux*;\n+    _ZNSbIwSt11char_traitsIwESaIwEE15_M_replace_safe*;\n     _ZNSbIwSt11char_traitsIwESaIwEE4_Rep10_M_destroy*;\n     _ZNSbIwSt11char_traitsIwESaIwEE4_Rep10_M_dispose*;\n     _ZNSbIwSt11char_traitsIwESaIwEE4_Rep10_M_refcopyEv;"}, {"sha": "28878c627a7c191cd1d2f80ada661bb1be4fa5be", "filename": "libstdc++-v3/include/bits/fs_path.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8281e3b8ea4fe692c92c8781636a36e81f4e038f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8281e3b8ea4fe692c92c8781636a36e81f4e038f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h?ref=8281e3b8ea4fe692c92c8781636a36e81f4e038f", "patch": "@@ -539,7 +539,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       _S_convert_loc(_InputIterator __src, __null_terminated,\n \t\t     const std::locale& __loc)\n       {\n-\tstd::string __s = _S_string_from_iter(__src);\n+\tconst std::string __s = _S_string_from_iter(__src);\n \treturn _S_convert_loc(__s.data(), __s.data() + __s.size(), __loc);\n       }\n "}, {"sha": "4cb9c39ebb46c8d36362079edd9e2a5d5bda461d", "filename": "libstdc++-v3/include/bits/locale_conv.h", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8281e3b8ea4fe692c92c8781636a36e81f4e038f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_conv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8281e3b8ea4fe692c92c8781636a36e81f4e038f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_conv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_conv.h?ref=8281e3b8ea4fe692c92c8781636a36e81f4e038f", "patch": "@@ -88,8 +88,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       if (__result == codecvt_base::noconv)\n \t{\n-\t  __outstr.assign(__first, __last);\n-\t  __count = __last - __first;\n+\t  // The codecvt facet will only return noconv when the types are\n+\t  // the same, so avoid instantiating basic_string::assign otherwise\n+\t  if _GLIBCXX17_CONSTEXPR (is_same<typename _Codecvt::intern_type,\n+\t\t\t\t\t   typename _Codecvt::extern_type>())\n+\t    {\n+\t      __outstr.assign(__first, __last);\n+\t      __count = __last - __first;\n+\t    }\n \t}\n       else\n \t{"}]}