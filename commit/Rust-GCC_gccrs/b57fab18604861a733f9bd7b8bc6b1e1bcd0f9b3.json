{"sha": "b57fab18604861a733f9bd7b8bc6b1e1bcd0f9b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjU3ZmFiMTg2MDQ4NjFhNzMzZjliZDdiOGJjNmIxZTFiY2QwZjliMw==", "commit": {"author": {"name": "Jiufu Guo", "email": "guojiufu@linux.ibm.com", "date": "2019-12-24T13:27:33Z"}, "committer": {"name": "Jiufu Guo", "email": "guojiufu@gcc.gnu.org", "date": "2019-12-24T13:27:33Z"}, "message": "rs6000: re-enable web and rnreg with -funroll-loops\n\nPreviously, limited unrolling was enabled at O2 for powerpc in r278034.  At that\ntime, -fweb and -frename-registers were not enabled together with -funroll-loops\neven for -O3.  After that, we notice there are some performance degradations on\nSPEC2006fp which caused by without web and rnreg.  This patch enable -fweb\nand -frename-registers for -funroll-loops to align original behavior before\nr278034.\n\ngcc/\n2019-12-23  Jiufu Guo  <guojiufu@linux.ibm.com>\n\n\t* config/rs6000/rs6000.c (rs6000_option_override_internal): Enable\n\t-fweb and -frename-registers with -funroll-loops\n\nFrom-SVN: r279725", "tree": {"sha": "cd28fb2667fc0f3af395522f97ab11435a664f4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd28fb2667fc0f3af395522f97ab11435a664f4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b57fab18604861a733f9bd7b8bc6b1e1bcd0f9b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b57fab18604861a733f9bd7b8bc6b1e1bcd0f9b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b57fab18604861a733f9bd7b8bc6b1e1bcd0f9b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b57fab18604861a733f9bd7b8bc6b1e1bcd0f9b3/comments", "author": null, "committer": null, "parents": [{"sha": "f2a879930992085ca4e4f6b0cdd8d4debc6f4a47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2a879930992085ca4e4f6b0cdd8d4debc6f4a47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2a879930992085ca4e4f6b0cdd8d4debc6f4a47"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "525a8f013d819f7847f37dd68596d5a8374ac8c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b57fab18604861a733f9bd7b8bc6b1e1bcd0f9b3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b57fab18604861a733f9bd7b8bc6b1e1bcd0f9b3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b57fab18604861a733f9bd7b8bc6b1e1bcd0f9b3", "patch": "@@ -1,3 +1,8 @@\n+2019-12-24  Jiufu Guo  <guojiufu@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_option_override_internal): Enable\n+\t-fweb and -frename-registers with -funroll-loops\n+\n 2019-12-22  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* doc/invoke.texi (-flto): Use \"compile time\" as a noun."}, {"sha": "5ee426cb1da271abb7cd0298b8d9d78c7fe2c468", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b57fab18604861a733f9bd7b8bc6b1e1bcd0f9b3/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b57fab18604861a733f9bd7b8bc6b1e1bcd0f9b3/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=b57fab18604861a733f9bd7b8bc6b1e1bcd0f9b3", "patch": "@@ -4538,12 +4538,19 @@ rs6000_option_override_internal (bool global_init_p)\n \t\t\t   param_sched_pressure_algorithm,\n \t\t\t   SCHED_PRESSURE_MODEL);\n \n-      /* Explicit -funroll-loops turns -munroll-only-small-loops off.  */\n-      if (((global_options_set.x_flag_unroll_loops && flag_unroll_loops)\n+      /* Explicit -funroll-loops turns -munroll-only-small-loops off, and\n+\t turns -fweb and -frename-registers on.  */\n+      if ((global_options_set.x_flag_unroll_loops && flag_unroll_loops)\n \t   || (global_options_set.x_flag_unroll_all_loops\n \t       && flag_unroll_all_loops))\n-\t  && !global_options_set.x_unroll_only_small_loops)\n-\tunroll_only_small_loops = 0;\n+\t{\n+\t  if (!global_options_set.x_unroll_only_small_loops)\n+\t    unroll_only_small_loops = 0;\n+\t  if (!global_options_set.x_flag_rename_registers)\n+\t    flag_rename_registers = 1;\n+\t  if (!global_options_set.x_flag_web)\n+\t    flag_web = 1;\n+\t}\n \n       /* If using typedef char *va_list, signal that\n \t __builtin_va_start (&ap, 0) can be optimized to"}]}