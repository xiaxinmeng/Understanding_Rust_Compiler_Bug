{"sha": "35e2be9fc91767188cad3448f8a1434e8461e199", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVlMmJlOWZjOTE3NjcxODhjYWQzNDQ4ZjhhMTQzNGU4NDYxZTE5OQ==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2015-11-02T12:39:31Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2015-11-02T12:39:31Z"}, "message": "Revert: tree-scalar-evolution.c: Handle LSHIFT by constant\n\n\tgcc/:\n\n\t\ttree-scalar-evolution.c (interpret_rhs_expr): Handle some\n\t\tLSHIFT_EXPRs as equivalent MULT_EXPRs.\n\n\tgcc/testsuite/:\n\n\t\tgcc.dg/vect/vect-strided-shift.c: New.\n\nFrom-SVN: r229660", "tree": {"sha": "85a69d806b80a8d611381bc98bddc6367780a53c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85a69d806b80a8d611381bc98bddc6367780a53c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35e2be9fc91767188cad3448f8a1434e8461e199", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35e2be9fc91767188cad3448f8a1434e8461e199", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35e2be9fc91767188cad3448f8a1434e8461e199", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35e2be9fc91767188cad3448f8a1434e8461e199/comments", "author": null, "committer": null, "parents": [{"sha": "f4155d214e283f70e7a397577473443e2968f4a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4155d214e283f70e7a397577473443e2968f4a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4155d214e283f70e7a397577473443e2968f4a7"}], "stats": {"total": 63, "additions": 16, "deletions": 47}, "files": [{"sha": "e293ad22a1088ae398310374e7f2580f69324751", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35e2be9fc91767188cad3448f8a1434e8461e199/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35e2be9fc91767188cad3448f8a1434e8461e199/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35e2be9fc91767188cad3448f8a1434e8461e199", "patch": "@@ -1,3 +1,12 @@\n+2015-11-02  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\tRevert:\n+\t2015-10-27  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\tPR tree-optimization/65963\n+\t* tree-scalar-evolution.c (interpret_rhs_expr): Handle some LSHIFT_EXPRs\n+\tas equivalent MULT_EXPRs.\n+\n 2015-11-02  Thomas Schwinge  <thomas@codesourcery.com>\n \n \tPR middle-end/68166"}, {"sha": "a86920a02ecb41927849eb82d8b6ae11706e8c05", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35e2be9fc91767188cad3448f8a1434e8461e199/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35e2be9fc91767188cad3448f8a1434e8461e199/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=35e2be9fc91767188cad3448f8a1434e8461e199", "patch": "@@ -1,3 +1,10 @@\n+2015-11-02  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\tRevert:\n+\t2015-10-27  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* gcc.dg/vect/vect-strided-shift-1.c: New.\n+\n 2015-11-01  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR target/67929"}, {"sha": "b1ce2ece1707ef23d4aa81b715f8ac7dfcbeafe6", "filename": "gcc/testsuite/gcc.dg/vect/vect-strided-shift-1.c", "status": "removed", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4155d214e283f70e7a397577473443e2968f4a7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-shift-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4155d214e283f70e7a397577473443e2968f4a7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-shift-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fvect-strided-shift-1.c?ref=f4155d214e283f70e7a397577473443e2968f4a7", "patch": "@@ -1,33 +0,0 @@\n-/* PR tree-optimization/65963.  */\n-#include \"tree-vect.h\"\n-\n-#define N 512\n-\n-int in[2*N], out[N];\n-\n-__attribute__ ((noinline)) void\n-loop (void)\n-{\n-  for (int i = 0; i < N; i++)\n-    out[i] = in[i << 1] + 7;\n-}\n-\n-int\n-main (int argc, char **argv)\n-{\n-  check_vect ();\n-  for (int i = 0; i < 2*N; i++)\n-    {\n-      in[i] = i;\n-      __asm__ volatile (\"\" : : : \"memory\");\n-    }\n-  loop ();\n-  __asm__ volatile (\"\" : : : \"memory\");\n-  for (int i = 0; i < N; i++)\n-    {\n-      if (out[i] != i*2 + 7)\n-\tabort ();\n-    }\n-  return 0;\n-}\n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops in function\" 1 \"vect\" { target { vect_strided2 } } } } */"}, {"sha": "bb27b070dba306d896a678e296fde6172d3d541f", "filename": "gcc/tree-scalar-evolution.c", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35e2be9fc91767188cad3448f8a1434e8461e199/gcc%2Ftree-scalar-evolution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35e2be9fc91767188cad3448f8a1434e8461e199/gcc%2Ftree-scalar-evolution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-scalar-evolution.c?ref=35e2be9fc91767188cad3448f8a1434e8461e199", "patch": "@@ -1827,20 +1827,6 @@ interpret_rhs_expr (struct loop *loop, gimple *at_stmt,\n       res = chrec_fold_multiply (type, chrec1, chrec2);\n       break;\n \n-    case LSHIFT_EXPR:\n-      /* Handle A<<B as A * (1<<B).  */\n-      chrec1 = analyze_scalar_evolution (loop, rhs1);\n-      chrec2 = analyze_scalar_evolution (loop, rhs2);\n-      chrec1 = chrec_convert (type, chrec1, at_stmt);\n-      chrec1 = instantiate_parameters (loop, chrec1);\n-      chrec2 = instantiate_parameters (loop, chrec2);\n-\n-      chrec2 = fold_build2 (LSHIFT_EXPR, type,\n-\t\t\t    build_int_cst (TREE_TYPE (rhs1), 1),\n-\t\t\t    chrec2);\n-      res = chrec_fold_multiply (type, chrec1, chrec2);\n-      break;\n-\n     CASE_CONVERT:\n       /* In case we have a truncation of a widened operation that in\n          the truncated type has undefined overflow behavior analyze"}]}