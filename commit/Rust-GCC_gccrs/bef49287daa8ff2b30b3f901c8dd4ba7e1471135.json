{"sha": "bef49287daa8ff2b30b3f901c8dd4ba7e1471135", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVmNDkyODdkYWE4ZmYyYjMwYjNmOTAxYzhkZDRiYTdlMTQ3MTEzNQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2013-11-01T11:59:51Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2013-11-01T11:59:51Z"}, "message": "* include/bits/stl_function.h (logical_not<void>): Add noexcept.\n\nFrom-SVN: r204293", "tree": {"sha": "2d7024af7ec4aebddfeeb9bcd8f18f96ba1d3212", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d7024af7ec4aebddfeeb9bcd8f18f96ba1d3212"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bef49287daa8ff2b30b3f901c8dd4ba7e1471135", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bef49287daa8ff2b30b3f901c8dd4ba7e1471135", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bef49287daa8ff2b30b3f901c8dd4ba7e1471135", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bef49287daa8ff2b30b3f901c8dd4ba7e1471135/comments", "author": null, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7115d32a362ccb1eb74ebe024549c46468d52b70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7115d32a362ccb1eb74ebe024549c46468d52b70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7115d32a362ccb1eb74ebe024549c46468d52b70"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "a7b19ac97a747426a0fd3c972ddef8815e12fffb", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bef49287daa8ff2b30b3f901c8dd4ba7e1471135/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bef49287daa8ff2b30b3f901c8dd4ba7e1471135/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=bef49287daa8ff2b30b3f901c8dd4ba7e1471135", "patch": "@@ -1,3 +1,7 @@\n+2013-11-01  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* include/bits/stl_function.h (logical_not<void>): Add noexcept.\n+\n 2013-11-01  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/58952"}, {"sha": "e5eed0698ab93d0d379ec576d57de33d8e02a455", "filename": "libstdc++-v3/include/bits/stl_function.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bef49287daa8ff2b30b3f901c8dd4ba7e1471135/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_function.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bef49287daa8ff2b30b3f901c8dd4ba7e1471135/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_function.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_function.h?ref=bef49287daa8ff2b30b3f901c8dd4ba7e1471135", "patch": "@@ -554,7 +554,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     {\n       template <typename _Tp>\n \tauto\n-\toperator()(_Tp&& __t) const -> decltype(!std::forward<_Tp>(__t))\n+\toperator()(_Tp&& __t) const\n+\tnoexcept(noexcept(!std::forward<_Tp>(__t)))\n+\t-> decltype(!std::forward<_Tp>(__t))\n \t{ return !std::forward<_Tp>(__t); }\n \n       typedef __is_transparent is_transparent;"}]}