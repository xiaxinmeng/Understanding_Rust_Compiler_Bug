{"sha": "e7385332a07dc8254dfffcdc4958179a4f9ef121", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTczODUzMzJhMDdkYzgyNTRkZmZmY2RjNDk1ODE3OWE0ZjllZjEyMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-05-06T10:11:07Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-05-06T10:11:07Z"}, "message": "re PR fortran/48894 (generic omp_get_ancestor_thread_num(l(i)) produces incorrect output)\n\n\tPR fortran/48894\n\t* fortran.c: Include limits.h.\n\t(TO_INT): Define.\n\t(omp_set_dynamic_8_, omp_set_num_threads_8_): Use !!*set instead of\n\t*set.\n\t(omp_set_num_threads_8_, omp_set_schedule_8_,\n\tomp_set_max_active_levels_8_, omp_get_ancestor_thread_num_8_,\n\tomp_get_team_size_8_): Use TO_INT macro.\n\t* testsuite/libgomp.fortran/pr48894.f90: New test.\n\nFrom-SVN: r173476", "tree": {"sha": "fd10006d63337a38cba7d72185525ab15e220257", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd10006d63337a38cba7d72185525ab15e220257"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7385332a07dc8254dfffcdc4958179a4f9ef121", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7385332a07dc8254dfffcdc4958179a4f9ef121", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7385332a07dc8254dfffcdc4958179a4f9ef121", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7385332a07dc8254dfffcdc4958179a4f9ef121/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9ef58464306f1e753efa88aea41f4ea7eb7f2c61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ef58464306f1e753efa88aea41f4ea7eb7f2c61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ef58464306f1e753efa88aea41f4ea7eb7f2c61"}], "stats": {"total": 54, "additions": 46, "deletions": 8}, "files": [{"sha": "416ddc412da1dd761a96de3f11a3699c6fe167b5", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7385332a07dc8254dfffcdc4958179a4f9ef121/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7385332a07dc8254dfffcdc4958179a4f9ef121/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=e7385332a07dc8254dfffcdc4958179a4f9ef121", "patch": "@@ -1,3 +1,15 @@\n+2011-05-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/48894\n+\t* fortran.c: Include limits.h.\n+\t(TO_INT): Define.\n+\t(omp_set_dynamic_8_, omp_set_num_threads_8_): Use !!*set instead of\n+\t*set.\n+\t(omp_set_num_threads_8_, omp_set_schedule_8_,\n+\tomp_set_max_active_levels_8_, omp_get_ancestor_thread_num_8_,\n+\tomp_get_team_size_8_): Use TO_INT macro.\n+\t* testsuite/libgomp.fortran/pr48894.f90: New test.\n+\n 2011-04-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/48591"}, {"sha": "39bd7486b07e13dca6560a1a88d45a90bb6c31f2", "filename": "libgomp/fortran.c", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7385332a07dc8254dfffcdc4958179a4f9ef121/libgomp%2Ffortran.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7385332a07dc8254dfffcdc4958179a4f9ef121/libgomp%2Ffortran.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ffortran.c?ref=e7385332a07dc8254dfffcdc4958179a4f9ef121", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2005, 2007, 2008, 2009 Free Software Foundation, Inc.\n+/* Copyright (C) 2005, 2007, 2008, 2009, 2011 Free Software Foundation, Inc.\n    Contributed by Jakub Jelinek <jakub@redhat.com>.\n \n    This file is part of the GNU OpenMP Library (libgomp).\n@@ -27,6 +27,7 @@\n #include \"libgomp.h\"\n #include \"libgomp_f.h\"\n #include <stdlib.h>\n+#include <limits.h>\n \n #ifdef HAVE_ATTRIBUTE_ALIAS\n /* Use internal aliases if possible.  */\n@@ -244,6 +245,8 @@ omp_lock_symver (omp_unset_nest_lock_)\n omp_lock_symver (omp_test_nest_lock_)\n #endif\n \n+#define TO_INT(x) ((x) > INT_MIN ? (x) < INT_MAX ? (x) : INT_MAX : INT_MIN)\n+\n void\n omp_set_dynamic_ (const int32_t *set)\n {\n@@ -253,7 +256,7 @@ omp_set_dynamic_ (const int32_t *set)\n void\n omp_set_dynamic_8_ (const int64_t *set)\n {\n-  omp_set_dynamic (*set);\n+  omp_set_dynamic (!!*set);\n }\n \n void\n@@ -265,7 +268,7 @@ omp_set_nested_ (const int32_t *set)\n void\n omp_set_nested_8_ (const int64_t *set)\n {\n-  omp_set_nested (*set);\n+  omp_set_nested (!!*set);\n }\n \n void\n@@ -277,7 +280,7 @@ omp_set_num_threads_ (const int32_t *set)\n void\n omp_set_num_threads_8_ (const int64_t *set)\n {\n-  omp_set_num_threads (*set);\n+  omp_set_num_threads (TO_INT (*set));\n }\n \n int32_t\n@@ -343,7 +346,7 @@ omp_set_schedule_ (const int32_t *kind, const int32_t *modifier)\n void\n omp_set_schedule_8_ (const int32_t *kind, const int64_t *modifier)\n {\n-  omp_set_schedule (*kind, *modifier);\n+  omp_set_schedule (*kind, TO_INT (*modifier));\n }\n \n void\n@@ -381,7 +384,7 @@ omp_set_max_active_levels_ (const int32_t *levels)\n void\n omp_set_max_active_levels_8_ (const int64_t *levels)\n {\n-  omp_set_max_active_levels (*levels);\n+  omp_set_max_active_levels (TO_INT (*levels));\n }\n \n int32_t\n@@ -405,7 +408,7 @@ omp_get_ancestor_thread_num_ (const int32_t *level)\n int32_t\n omp_get_ancestor_thread_num_8_ (const int64_t *level)\n {\n-  return omp_get_ancestor_thread_num (*level);\n+  return omp_get_ancestor_thread_num (TO_INT (*level));\n }\n \n int32_t\n@@ -417,7 +420,7 @@ omp_get_team_size_ (const int32_t *level)\n int32_t\n omp_get_team_size_8_ (const int64_t *level)\n {\n-  return omp_get_team_size (*level);\n+  return omp_get_team_size (TO_INT (*level));\n }\n \n int32_t"}, {"sha": "af35112ad32d9d8add8c77069e50e713505b3531", "filename": "libgomp/testsuite/libgomp.fortran/pr48894.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7385332a07dc8254dfffcdc4958179a4f9ef121/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr48894.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7385332a07dc8254dfffcdc4958179a4f9ef121/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr48894.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fpr48894.f90?ref=e7385332a07dc8254dfffcdc4958179a4f9ef121", "patch": "@@ -0,0 +1,23 @@\n+! PR fortran/48894\n+! { dg-do run }\n+! { dg-options \"-fdefault-integer-8\" }\n+\n+  use omp_lib\n+  integer, parameter :: zero = 0\n+  integer :: err\n+  logical :: l\n+  err = 0\n+  !$omp parallel\n+    !$omp parallel private (l)\n+      l = omp_get_ancestor_thread_num (-HUGE (zero)) .ne. -1\n+      l = l .or. (omp_get_ancestor_thread_num (HUGE (zero)) .ne. -1)\n+      l = l .or. (omp_get_team_size (-HUGE (zero)) .ne. -1)\n+      l = l .or. (omp_get_team_size (HUGE (zero)) .ne. -1)\n+      if (l) then\n+        !$omp atomic\n+          err = err + 1\n+      endif\n+    !$omp end parallel\n+  !$omp end parallel\n+  if (err .ne. 0) call abort\n+end"}]}