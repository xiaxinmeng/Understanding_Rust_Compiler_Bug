{"sha": "5e2be41f37d39b91e27c4d129a5861cfe80809ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWUyYmU0MWYzN2QzOWI5MWUyN2M0ZDEyOWE1ODYxY2ZlODA4MDllYw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2008-07-19T18:29:18Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2008-07-19T18:29:18Z"}, "message": "re PR fortran/36795 (crash with character allocatable array argument)\n\n2008-07-19  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/36795\n        * matchexp.c (gfc_get_parentheses): Remove obsolete workaround,\n        which caused the generation of wrong code.\n\n2008-07-19  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/36795\n        * char_expr_1.f90: New.\n        * char_expr_2.f90: New.\n\nFrom-SVN: r137986", "tree": {"sha": "7e56dd4f2c521e0c9b24826bf7475fda87f7a473", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e56dd4f2c521e0c9b24826bf7475fda87f7a473"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e2be41f37d39b91e27c4d129a5861cfe80809ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e2be41f37d39b91e27c4d129a5861cfe80809ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e2be41f37d39b91e27c4d129a5861cfe80809ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e2be41f37d39b91e27c4d129a5861cfe80809ec/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e513a086f036e9d3951fa7c184fdc323feefbae1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e513a086f036e9d3951fa7c184fdc323feefbae1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e513a086f036e9d3951fa7c184fdc323feefbae1"}], "stats": {"total": 54, "additions": 47, "deletions": 7}, "files": [{"sha": "9325c45ff238943e145fe6e8f1e3509f5403d591", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e2be41f37d39b91e27c4d129a5861cfe80809ec/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e2be41f37d39b91e27c4d129a5861cfe80809ec/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5e2be41f37d39b91e27c4d129a5861cfe80809ec", "patch": "@@ -1,3 +1,9 @@\n+2008-07-19  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/36795\n+\t* matchexp.c (gfc_get_parentheses): Remove obsolete workaround,\n+\twhich caused the generation of wrong code.\n+\n 2008-07-19  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/36342"}, {"sha": "0092f4086bb10077c5f6862c13ce5ebfe52085b0", "filename": "gcc/fortran/matchexp.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e2be41f37d39b91e27c4d129a5861cfe80809ec/gcc%2Ffortran%2Fmatchexp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e2be41f37d39b91e27c4d129a5861cfe80809ec/gcc%2Ffortran%2Fmatchexp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatchexp.c?ref=5e2be41f37d39b91e27c4d129a5861cfe80809ec", "patch": "@@ -130,13 +130,6 @@ gfc_get_parentheses (gfc_expr *e)\n {\n   gfc_expr *e2;\n \n-  /* This is a temporary fix, awaiting the patch for various\n-     other character problems.  The resolution and translation\n-     of substrings and concatenations are so kludged up that\n-     putting parentheses around them breaks everything.  */\n-  if (e->ts.type == BT_CHARACTER && e->ref)\n-    return e;\n-\n   e2 = gfc_get_expr();\n   e2->expr_type = EXPR_OP;\n   e2->ts = e->ts;"}, {"sha": "6ac4232c026e9d83cf6ea29933afa8d71ac1105f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e2be41f37d39b91e27c4d129a5861cfe80809ec/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e2be41f37d39b91e27c4d129a5861cfe80809ec/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5e2be41f37d39b91e27c4d129a5861cfe80809ec", "patch": "@@ -1,3 +1,9 @@\n+2008-07-19  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/36795\n+\t* char_expr_1.f90: New.\n+\t* char_expr_2.f90: New.\n+\n 2008-07-19  Olivier Hainque  <hainque@adacore.com>\n \n \t* gcc.dg/mallign.c: New test."}, {"sha": "ba0e1f23350c1e4dcf086f33630879c91abdff1d", "filename": "gcc/testsuite/gfortran.dg/char_expr_1.f90", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e2be41f37d39b91e27c4d129a5861cfe80809ec/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_expr_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e2be41f37d39b91e27c4d129a5861cfe80809ec/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_expr_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_expr_1.f90?ref=5e2be41f37d39b91e27c4d129a5861cfe80809ec", "patch": "@@ -0,0 +1,20 @@\n+! { dg-do \"run\" }\n+! PR fortran/36795\n+! \"(str)\" (= an expression) was regarded as \"str\" (= a variable)\n+! and thus when yy was deallocated so was xx. Result: An invalid\n+! memory access.\n+!\n+program main\n+  implicit none\n+  character (len=10), allocatable :: str(:)\n+  allocate (str(1))\n+  str(1)      = \"dog\"\n+  if (size(str) /= 1 .or. str(1) /= \"dog\") call abort()\n+contains\n+  subroutine foo(xx,yy)\n+    character (len=*), intent(in)               :: xx(:)\n+    character (len=*), intent(out), allocatable :: yy(:)\n+    allocate (yy(size(xx)))\n+    yy = xx\n+  end subroutine foo\n+end program main"}, {"sha": "86499eb454c616e5d4920da62999effbc49ce3c7", "filename": "gcc/testsuite/gfortran.dg/char_expr_2.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e2be41f37d39b91e27c4d129a5861cfe80809ec/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_expr_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e2be41f37d39b91e27c4d129a5861cfe80809ec/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_expr_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_expr_2.f90?ref=5e2be41f37d39b91e27c4d129a5861cfe80809ec", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do compile }\n+! PR fortran/36803\n+! PR fortran/36795\n+!\n+! \"(n)\" was simplified to the EXPR_VARIABLE \"n\"\n+! and thus \"(n)\" was judged as definable.\n+!\n+interface\n+  subroutine foo(x)\n+    character, intent(out) :: x(:)  ! or INTENT(INOUT)\n+  end subroutine foo\n+end interface\n+character :: n(5)\n+call foo( (n) ) ! { dg-error \"must be definable\" }\n+end"}]}