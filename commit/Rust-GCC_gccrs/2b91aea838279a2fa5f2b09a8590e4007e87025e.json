{"sha": "2b91aea838279a2fa5f2b09a8590e4007e87025e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI5MWFlYTgzODI3OWEyZmE1ZjJiMDlhODU5MGU0MDA3ZTg3MDI1ZQ==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2015-03-25T10:15:46Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2015-03-25T10:15:46Z"}, "message": "Fix regression introduced at revision 221586.\n\n\tPR fortran/64952\n\tPR fortran/65532\nfortran/\n\t* gfortran.h (struct gfc_namespace): New field 'types_resolved'.\n\t* resolve.c (resolve_types): Return early if field 'types_resolved'\n\tis set.  Set 'types_resolved' at the end.\ntestsuite/\n\t* gfortran.dg/data_initialized_3.f90: New.\n\nFrom-SVN: r221657", "tree": {"sha": "c467d63d03b1866427667378fe81a4fc6ad7d7ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c467d63d03b1866427667378fe81a4fc6ad7d7ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b91aea838279a2fa5f2b09a8590e4007e87025e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b91aea838279a2fa5f2b09a8590e4007e87025e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b91aea838279a2fa5f2b09a8590e4007e87025e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b91aea838279a2fa5f2b09a8590e4007e87025e/comments", "author": null, "committer": null, "parents": [{"sha": "bbf043c2d27b67d949912a3cdb2f9eb6fabcd51f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbf043c2d27b67d949912a3cdb2f9eb6fabcd51f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbf043c2d27b67d949912a3cdb2f9eb6fabcd51f"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "fb3a83d83d3f48c3a2369f6312c63f7e98edce69", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b91aea838279a2fa5f2b09a8590e4007e87025e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b91aea838279a2fa5f2b09a8590e4007e87025e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2b91aea838279a2fa5f2b09a8590e4007e87025e", "patch": "@@ -1,3 +1,11 @@\n+2015-03-25  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/64952\n+\tPR fortran/65532\n+\t* gfortran.h (struct gfc_namespace): New field 'types_resolved'.\n+\t* resolve.c (resolve_types): Return early if field 'types_resolved'\n+\tis set.  Set 'types_resolved' at the end.\n+\n 2015-03-24  Andre Vehreschild  <vehre@gmx.de>\n \n \tPR fortran/55901"}, {"sha": "24d56c08b7ab07f4ca4482f45684fecf4497bc56", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b91aea838279a2fa5f2b09a8590e4007e87025e/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b91aea838279a2fa5f2b09a8590e4007e87025e/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=2b91aea838279a2fa5f2b09a8590e4007e87025e", "patch": "@@ -1691,6 +1691,9 @@ typedef struct gfc_namespace\n      Holds -1 during resolution.  */\n   signed resolved:2;\n \n+  /* Set when resolve_types has been called for this namespace.  */\n+  unsigned types_resolved:1;\n+\n   /* Set to 1 if code has been generated for this namespace.  */\n   unsigned translated:1;\n "}, {"sha": "316b413d756e714b792be61d575db9b6fc65d5fd", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b91aea838279a2fa5f2b09a8590e4007e87025e/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b91aea838279a2fa5f2b09a8590e4007e87025e/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=2b91aea838279a2fa5f2b09a8590e4007e87025e", "patch": "@@ -14942,6 +14942,9 @@ resolve_types (gfc_namespace *ns)\n   gfc_equiv *eq;\n   gfc_namespace* old_ns = gfc_current_ns;\n \n+  if (ns->types_resolved)\n+    return;\n+\n   /* Check that all IMPLICIT types are ok.  */\n   if (!ns->seen_implicit_none)\n     {\n@@ -15016,6 +15019,8 @@ resolve_types (gfc_namespace *ns)\n \n   gfc_resolve_omp_udrs (ns->omp_udr_root);\n \n+  ns->types_resolved = 1;\n+\n   gfc_current_ns = old_ns;\n }\n "}, {"sha": "cf3b288b06452d333e3ead592e609a5b7a7380cc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b91aea838279a2fa5f2b09a8590e4007e87025e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b91aea838279a2fa5f2b09a8590e4007e87025e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2b91aea838279a2fa5f2b09a8590e4007e87025e", "patch": "@@ -1,3 +1,9 @@\n+2015-03-25  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/64952\n+\tPR fortran/65532\n+\t* gfortran.dg/data_initialized_3.f90: New.\n+\n 2015-03-25  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/65519"}, {"sha": "c3ca4b334ee91ec7b873c1997530a343f13e2d52", "filename": "gcc/testsuite/gfortran.dg/data_initialized_3.f90", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b91aea838279a2fa5f2b09a8590e4007e87025e/gcc%2Ftestsuite%2Fgfortran.dg%2Fdata_initialized_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b91aea838279a2fa5f2b09a8590e4007e87025e/gcc%2Ftestsuite%2Fgfortran.dg%2Fdata_initialized_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdata_initialized_3.f90?ref=2b91aea838279a2fa5f2b09a8590e4007e87025e", "patch": "@@ -0,0 +1,43 @@\n+! { dg-do compile }\n+!\n+! PR fortran/65532\n+! The partial initialization through data statements was producing\n+! shape mismatch errors.\n+!\n+! Contributed by Harald Anlauf  <anlauf@gmx.de>\n+\n+module gfcbug131\n+  implicit none\n+contains\n+  DOUBLE PRECISION FUNCTION d1mach(i)\n+    INTEGER, INTENT(IN)         :: i\n+\n+    INTEGER :: small(4)\n+    INTEGER :: large(4)\n+    INTEGER :: right(4)\n+    INTEGER :: diver(4)\n+    INTEGER :: LOG10(4)\n+    DOUBLE PRECISION :: dmach(5)\n+\n+    EQUIVALENCE (dmach(1),small(1))\n+    EQUIVALENCE (dmach(2),large(1))\n+    EQUIVALENCE (dmach(3),right(1))\n+    EQUIVALENCE (dmach(4),diver(1))\n+    EQUIVALENCE (dmach(5),LOG10(1))\n+\n+    DATA small(1),small(2) /          0,    1048576 /\n+    DATA large(1),large(2) /         -1, 2146435071 /\n+    DATA right(1),right(2) /          0, 1017118720 /\n+    DATA diver(1),diver(2) /          0, 1018167296 /\n+    DATA LOG10(1),LOG10(2) / 1352628735, 1070810131 /\n+\n+    d1mach = dmach(i)\n+  END FUNCTION d1mach\n+\n+  DOUBLE PRECISION FUNCTION foo (x)\n+    DOUBLE PRECISION, INTENT(IN) :: x\n+    foo = SQRT (d1mach(4))\n+  END FUNCTION foo\n+\n+end module gfcbug131\n+"}]}