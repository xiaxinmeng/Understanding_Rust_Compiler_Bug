{"sha": "21af490baa734a901fb798bc2ac4df62109bc895", "node_id": "C_kwDOANBUbNoAKDIxYWY0OTBiYWE3MzRhOTAxZmI3OThiYzJhYzRkZjYyMTA5YmM4OTU", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-01-24T09:03:47Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas_schwinge@mentor.com", "date": "2022-01-24T09:06:43Z"}, "message": "Merge commit '490e23032baaece71f2ec09fa1805064b150fbc2' [#247]", "tree": {"sha": "a292dc4ac7de999d47f20ab9a2dff597afadea2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a292dc4ac7de999d47f20ab9a2dff597afadea2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21af490baa734a901fb798bc2ac4df62109bc895", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21af490baa734a901fb798bc2ac4df62109bc895", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21af490baa734a901fb798bc2ac4df62109bc895", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21af490baa734a901fb798bc2ac4df62109bc895/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cce6b8919ce16acd37a7a203049a52925a7e295", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cce6b8919ce16acd37a7a203049a52925a7e295", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cce6b8919ce16acd37a7a203049a52925a7e295"}, {"sha": "490e23032baaece71f2ec09fa1805064b150fbc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/490e23032baaece71f2ec09fa1805064b150fbc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/490e23032baaece71f2ec09fa1805064b150fbc2"}], "stats": {"total": 1190771, "additions": 803300, "deletions": 387471}, "files": [{"sha": "4d5e8c3a9c64c5bd5c1436df87e5e48ac33271ab", "filename": "ChangeLog", "status": "modified", "additions": 218, "deletions": 0, "changes": 218, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -1,3 +1,221 @@\n+2022-01-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* Makefile.am: Remove.\n+\n+2022-01-11  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\t* Makefile.am: New file.\n+\n+2022-01-11  Martin Liska  <mliska@suse.cz>\n+\n+\t* MAINTAINERS: Sort 2 names.\n+\n+2022-01-10  Martin Liska  <mliska@suse.cz>\n+\n+\t* MAINTAINERS: Fix obvious issues with sorting.\n+\n+2022-01-07  liuhongt  <hongtao.liu@intel.com>\n+\n+\t* build.log: New file.\n+\n+2022-01-05  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* MAINTAINERS: Add DCO entry.  Sort that list.\n+\n+2022-01-04  Gaius Mulley  <gaiusmod2@gmail.com>\n+\n+\t* MAINTAINERS: Change of email address in both DCO and\n+\tWrite After Approval list.\n+\n+2021-12-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* configure: Regenerate.\n+\n+2021-12-21  Martin Liska  <mliska@suse.cz>\n+\n+\t* config.sub: Change mode back to 755.\n+\n+2021-12-17  Martin Liska  <mliska@suse.cz>\n+\n+\t* config.sub: Sync from master.\n+\n+2021-12-17  Martin Liska  <mliska@suse.cz>\n+\n+\tRevert:\n+\t2021-12-16  Matthias Seidel  <mseidel@apache.org>\n+\n+\t* config.sub: Fix typo.\n+\n+2021-12-16  Matthias Seidel  <mseidel@apache.org>\n+\n+\t* config.sub: Fix typo.\n+\n+2021-12-16  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tRevert:\n+\t2021-12-15  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\t* Makefile.tpl (AR): Add @AR_PLUGIN_OPTION@\n+\t(RANLIB): Add @RANLIB_PLUGIN_OPTION@.\n+\t* configure.ac: Include config/gcc-plugin.m4.\n+\tAC_SUBST AR_PLUGIN_OPTION and RANLIB_PLUGIN_OPTION.\n+\t* libtool.m4 (_LT_CMD_OLD_ARCHIVE): Pass --plugin to AR and\n+\tRANLIB if possible.\n+\t* Makefile.in: Regenerated.\n+\t* configure: Likewise.\n+\n+2021-12-15  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\t* Makefile.tpl (BUILD_CFLAGS): New.\n+\t(CFLAGS): Append $(BUILD_CFLAGS).\n+\t(CXXFLAGS): Likewise.\n+\t(PGO_BUILD_GEN_FLAGS_TO_PASS): New.\n+\t(PGO_BUILD_TRAINING_CFLAGS): Likewise.\n+\t(PGO_BUILD_TRAINING_CXXFLAGS): Likewise.\n+\t(PGO_BUILD_TRAINING_FLAGS_TO_PASS): Likewise.\n+\t(PGO_BUILD_TRAINING_MFLAGS): Likewise.\n+\t(PGO_BUILD_USE_FLAGS_TO_PASS): Likewise.\n+\t(PGO-TRAINING-TARGETS): Likewise.\n+\t(PGO_BUILD_TRAINING): Likewise.\n+\t(all): Add '+' to the command line for recursive make.  Support\n+\tthe PGO build.\n+\t* configure.ac: Add --enable-pgo-build[=lto].\n+\tAC_SUBST PGO_BUILD_GEN_CFLAGS, PGO_BUILD_USE_CFLAGS and\n+\tPGO_BUILD_LTO_CFLAGS.  Enable the PGO build in Makefile.\n+\t* Makefile.in: Regenerated.\n+\t* configure: Likewise.\n+\n+2021-12-15  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\t* Makefile.tpl (AR): Add @AR_PLUGIN_OPTION@\n+\t(RANLIB): Add @RANLIB_PLUGIN_OPTION@.\n+\t* configure.ac: Include config/gcc-plugin.m4.\n+\tAC_SUBST AR_PLUGIN_OPTION and RANLIB_PLUGIN_OPTION.\n+\t* libtool.m4 (_LT_CMD_OLD_ARCHIVE): Pass --plugin to AR and\n+\tRANLIB if possible.\n+\t* Makefile.in: Regenerated.\n+\t* configure: Likewise.\n+\n+2021-12-14  Marc Poulhi\u00e8s  <poulhies@adacore.com>\n+\n+\t* MAINTAINERS: Add myself to write after approval.\n+\n+2021-12-06  Navid Rahimi  <navidrahimi@microsoft.com>\n+\n+\t* MAINTAINERS: Adding myself.\n+\n+2021-12-02  Pekka Sepp\u00e4nen  <pexu@gcc.mail.kapsi.fi>\n+\n+\t* configure: Regenerate.\n+\t* configure.ac: For CPP_FOR_BUILD use $(CC_FOR_BUILD) -E instead of\n+\t$(CPP).\n+\n+2021-11-30  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Makefile.def: Add bootstrap to libbacktrace, libphobos, zlib, and\n+\tlibatomic.\n+\t* Makefile.in: Regenerate.\n+\t* Makefile.tpl (POSTSTAGE1_HOST_EXPORTS): Fix command for GDC.\n+\t(STAGE1_CONFIGURE_FLAGS): Add --with-libphobos-druntime-only if\n+\ttarget-libphobos-bootstrap.\n+\t(STAGE2_CONFIGURE_FLAGS): Likewise.\n+\t* configure: Regenerate.\n+\t* configure.ac: Add support for bootstrapping D front-end.\n+\n+2021-11-16  Martin Uecker  <uecker@gcc.gnu.org>\n+\n+\t* MAINTAINERS: Add myself to DCO section and update email address.\n+\n+2021-11-16  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* configure: Regenerate.\n+\t* configure.ac: Ensure that PIC (shared) defaults are set\n+\tcorrectly for Darwin.\n+\n+2021-11-16  Jim Wilson  <jim.wilson.gcc@gmail.com>\n+\n+\t* MAINTAINERS: Update my address.\n+\n+2021-11-12  Alan Modra  <amodra@gmail.com>\n+\n+\t* Makefile.def (configure-opcodes): Depend on configure-bfd.\n+\t* Makefile.in: Regenerate.\n+\n+2021-11-03  Maciej W. Rozycki  <macro@embecosm.com>\n+\n+\t* MAINTAINERS: Clarify the policy WRT the Write After Approval\n+\tlist.\n+\n+2021-11-02  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* MAINTAINERS (Reviewers, arc): Remove my entry.\n+\t(Write After Approval): Add an entry for myself.\n+\n+2021-10-28  Richard Purdie  <richard.purdie@linuxfoundation.org>\n+\n+\t* Makefile.tpl: Add CPP_FOR_BUILD and CPPFLAGS_FOR_BUILD support\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* configure.ac: Add CPP_FOR_BUILD and CPPFLAGS_FOR_BUILD support\n+\n+2021-10-26  Jeff Law  <jeffreyalaw@gmail.com>\n+\n+\t* MAINTAINERS: Fix up Maciej's entries.\n+\n+2021-10-26  Maciej W. Rozycki  <macro@embecosm.com>\n+\n+\t* MAINTAINERS (CPU Port Maintainers): Add myself as a VAX port\n+\tmaintainer.\n+\n+2021-10-22  Eric Gallager  <egallager@gcc.gnu.org>\n+\n+\tPR other/102663\n+\t* Makefile.def: Handle install-dvi target.\n+\t* Makefile.tpl: Likewise.\n+\t* Makefile.in: Regenerate.\n+\n+2021-10-19  Cl\u00e9ment Chigot  <clement.chigot@atos.net>\n+\n+\t* MAINTAINERS: Add myself for write after approval.\n+\n+2021-10-12  Eric Gallager  <egallager@gcc.gnu.org>\n+\n+\t* Makefile.def: Mark libcody, libdecnumber,\n+\tc++tools, libgcc, and libobjc as missing TAGS\n+\ttargets.\n+\t* Makefile.in: Regenerate.\n+\n+2021-10-07  Siddhesh Poyarekar  <siddhesh@gotplt.org>\n+\n+\t* MAINTAINERS: Add myself to DCO section and update email\n+\taddress.\n+\n+2021-09-29  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* MAINTAINERS: Add myself to DCO section.\n+\n+2021-09-28  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* configure: Regenerate.\n+\t* configure.ac (skipdirs): Add the contents of target_configdirs if\n+\twe are not building gcc.\n+\n+2021-09-24  Andrew Burgess  <andrew.burgess@embecosm.com>\n+\n+\t* Makefile.def: Back-port commits ba4d88ad892f and\n+\t755ba58ebef0 from binutils-gdb repository.\n+\t* Makefile.in: Regenerated.\n+\n+2021-09-20  Harald Anlauf  <anlauf@gmx.de>\n+\n+\t* MAINTAINERS (Reviewers): Add myself as Fortran reviewer.\n+\n+2021-09-17  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* Makefile.def: Add a jit check target for the jit\n+\tlanguage.\n+\t* Makefile.in: Regenerate.\n+\n 2021-09-16  Andrew Pinski  <apinski@marvell.com>\n \n \tPR bootstrap/67102"}, {"sha": "9b5945c048d269041b98a7d83609352031bdebb4", "filename": "MAINTAINERS", "status": "modified", "additions": 35, "deletions": 21, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/MAINTAINERS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/MAINTAINERS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/MAINTAINERS?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -15,13 +15,19 @@ To report problems in GCC, please visit:\n \n   http://gcc.gnu.org/bugs/\n \n+Note: when adding someone to a more specific section please remove any\n+corresponding entry from the Write After Approval list.\n+\n+Note: please verify that sorting is correct with:\n+./contrib/check-MAINTAINERS.py MAINTAINERS\n+\n Maintainers\n ===========\n \n \t\t\tGlobal Reviewers\n \n-Richard Earnshaw\t\t\t\t<richard.earnshaw@arm.com>\n Richard Biener\t\t\t\t\t<rguenther@suse.de>\n+Richard Earnshaw\t\t\t\t<richard.earnshaw@arm.com>\n Jakub Jelinek\t\t\t\t\t<jakub@redhat.com>\n Richard Kenner\t\t\t\t\t<kenner@nyu.edu>\n Jeff Law\t\t\t\t\t<jlaw@tachyum.com>\n@@ -101,7 +107,7 @@ pru port\t\tDimitar Dimitrov\t<dimitar@dinux.eu>\n riscv port\t\tKito Cheng\t\t<kito.cheng@gmail.com>\n riscv port\t\tPalmer Dabbelt\t\t<palmer@dabbelt.com>\n riscv port\t\tAndrew Waterman\t\t<andrew@sifive.com>\n-riscv port\t\tJim Wilson\t\t<jimw@sifive.com>\n+riscv port\t\tJim Wilson\t\t<jim.wilson.gcc@gmail.com>\n rs6000/powerpc port\tDavid Edelsohn\t\t<dje.gcc@gmail.com>\n rs6000/powerpc port\tSegher Boessenkool\t<segher@kernel.crashing.org>\n rs6000 vector extns\tAldy Hernandez\t\t<aldyh@redhat.com>\n@@ -117,6 +123,7 @@ tilegx port\t\tWalter Lee\t\t<walt@tilera.com>\n tilepro port\t\tWalter Lee\t\t<walt@tilera.com>\n v850 port\t\tNick Clifton\t\t<nickc@redhat.com>\n vax port\t\tMatt Thomas\t\t<matt@3am-software.com>\n+vax port\t\tMaciej W. Rozycki\t<macro@embecosm.com>\n visium port\t\tEric Botcazou\t\t<ebotcazou@libertysurf.fr>\n x86-64 port\t\tJan Hubicka\t\t<hubicka@ucw.cz>\n xstormy16 port\t\tNick Clifton\t\t<nickc@redhat.com>\n@@ -256,7 +263,6 @@ check in changes outside of the parts of the compiler they maintain.\n \n \t\t\tReviewers\n \n-arc port\t\tAndrew Burgess\t\t<andrew.burgess@embecosm.com>\n arc port\t\tClaudiu Zissulescu\t<claziss@synopsys.com>\n callgraph\t\tMartin Liska\t\t<mliska@suse.cz>\n callgraph\t\tMartin Jambor\t\t<mjambor@suse.cz>\n@@ -265,6 +271,7 @@ dataflow\t\tPaolo Bonzini\t\t<bonzini@gnu.org>\n dataflow\t\tSeongbae Park\t\t<seongbae.park@gmail.com>\n dataflow\t\tKenneth Zadeck\t\t<zadeck@naturalbridge.com>\n driver\t\t\tJoseph Myers\t\t<joseph@codesourcery.com>\n+Fortran\t\t\tHarald Anlauf\t\t<anlauf@gmx.de>\n Fortran\t\t\tJanne Blomqvist\t\t<jb@gcc.gnu.org>\n Fortran\t\t\tTobias Burnus\t\t<tobias@codesourcery.com>\n Fortran\t\t\tFran\u00e7ois-Xavier Coudert\t<fxcoudert@gcc.gnu.org>\n@@ -307,7 +314,6 @@ from other maintainers or reviewers.\n \n Mark G. Adams\t\t\t\t\t<mark.g.adams@sympatico.ca>\n Pedro Alves\t\t\t\t\t<palves@redhat.com>\n-Harald Anlauf\t\t\t\t\t<anlauf@gmx.de>\n Raksit Ashok\t\t\t\t\t<raksit@google.com>\n Matt Austern\t\t\t\t\t<austern@google.com>\n David Ayers\t\t\t\t\t<ayers@fsfe.org>\n@@ -344,6 +350,7 @@ Joel Brobecker\t\t\t\t\t<brobecker@gnat.com>\n Dave Brolley\t\t\t\t\t<brolley@redhat.com>\n Christian Bruel\t\t\t\t\t<christian.bruel@st.com>\n Kevin Buettner\t\t\t\t\t<kevinb@redhat.com>\n+Andrew Burgess\t\t\t\t\t<aburgess@redhat.com>\n Adam Butcher\t\t\t\t\t<adam@jessamine.co.uk>\n Andrew Cagney\t\t\t\t\t<cagney@gnu.org>\n Daniel Carrera\t\t\t\t\t<dcarrera@gmail.com>\n@@ -352,6 +359,7 @@ Gabriel Charette\t\t\t\t<gchare@google.com>\n Chandra Chavva\t\t\t\t\t<cchavva@redhat.com>\n Dehao Chen\t\t\t\t\t<dehao@google.com>\n Fabien Ch\u00eane\t\t\t\t\t<fabien@gcc.gnu.org>\n+Cl\u00e9ment Chigot\t\t\t\t\t<clement.chigot@atos.net>\n Harshit Chopra\t\t\t\t\t<harshit@google.com>\n Tamar Christina\t\t\t\t\t<tamar.christina@arm.com>\n Eric Christopher\t\t\t\t<echristo@gmail.com>\n@@ -417,6 +425,7 @@ Haochen Gui\t\t\t\t\t<guihaoc@gcc.gnu.org>\n Jiufu Guo\t\t\t\t\t<guojiufu@linux.ibm.com>\n Xuepeng Guo\t\t\t\t\t<terry.xpguo@gmail.com>\n Wei Guozhi\t\t\t\t\t<carrot@google.com>\n+Naveen H.S\t\t\t\t\t<naveenh@marvell.com>\n Mostafa Hagog\t\t\t\t\t<hagog@gcc.gnu.org>\n Andrew Haley\t\t\t\t\t<aph@redhat.com>\n Frederik Harwath\t\t\t\t<frederik@codesourcery.com>\n@@ -442,7 +451,6 @@ Dominique d'Humieres\t\t\t\t<dominiq@lps.ens.fr>\n Andy Hutchinson\t\t\t\t\t<hutchinsonandy@aim.com>\n Joel Hutton\t\t\t\t\t<joel.hutton@arm.com>\n Lewis Hyatt\t\t\t\t\t<lhyatt@gmail.com>\n-Naveen H.S\t\t\t\t\t<naveenh@marvell.com>\n Roland Illig\t\t\t\t\t<roland.illig@gmx.de>\n Meador Inge\t\t\t\t\t<meadori@codesourcery.com>\n Bernardo Innocenti\t\t\t\t<bernie@develer.com>\n@@ -464,8 +472,8 @@ Tim Josling\t\t\t\t\t<tej@melbpc.org.au>\n Victor Kaplansky\t\t\t\t<victork@il.ibm.com>\n Geoffrey Keating\t\t\t\t<geoffk@geoffk.org>\n Brendan Kehoe\t\t\t\t\t<brendan@zen.org>\n-Matthias Klose\t\t\t\t\t<doko@debian.org>\n Andi Kleen\t\t\t\t\t<andi@firstfloor.org>\n+Matthias Klose\t\t\t\t\t<doko@debian.org>\n Jeff Knaggs\t\t\t\t\t<jknaggs@redhat.com>\n Michael Koch\t\t\t\t\t<konqueror@gmx.de>\n Nicolas Koenig\t\t\t\t\t<koenigni@student.ethz.ch>\n@@ -479,10 +487,10 @@ Louis Krupp\t\t\t\t\t<louis.krupp@zoho.com>\n Prathamesh Kulkarni\t\t\t\t<prathamesh.kulkarni@linaro.org>\n Venkataramanan Kumar\t\t\t\t<venkataramanan.kumar@amd.com>\n Doug Kwan\t\t\t\t\t<dougkwan@google.com>\n+Aaron W. LaFramboise\t\t\t\t<aaronavay62@aaronwl.com>\n Scott Robert Ladd\t\t\t\t<scott.ladd@coyotegulch.com>\n Razya Ladelsky\t\t\t\t\t<razya@gcc.gnu.org>\n Thierry Lafage\t\t\t\t\t<thierry.lafage@inria.fr>\n-Aaron W. LaFramboise\t\t\t\t<aaronavay62@aaronwl.com>\n Rask Ingemann Lambertsen\t\t\t<ccc94453@vip.cybercity.dk>\n Jerome Lambourg\t\t\t\t\t<lambourg@adacore.com>\n Asher Langton\t\t\t\t\t<langton2@llnl.gov>\n@@ -512,6 +520,7 @@ H.J. Lu\t\t\t\t\t\t<hjl.tools@gmail.com>\n Xiong Hu Luo\t\t\t\t\t<luoxhu@linux.vnet.ibm.com>\n Bin Bin Lv\t\t\t\t\t<shlb@linux.ibm.com>\n Christophe Lyon\t\t\t\t\t<christophe.lyon@st.com>\n+Jun Ma\t\t\t\t\t\t<junma@linux.alibaba.com>\n Luis Machado\t\t\t\t\t<luisgpm@br.ibm.com>\n Ziga Mahkovec\t\t\t\t\t<ziga.mahkovec@klika.si>\n Matthew Malcomson\t\t\t\t<matthew.malcomson@arm.com>\n@@ -538,9 +547,8 @@ James A. Morrison\t\t\t\t<phython@gcc.gnu.org>\n Brooks Moses\t\t\t\t\t<bmoses@google.com>\n Dirk Mueller\t\t\t\t\t<dmueller@suse.de>\n Phil Muldoon\t\t\t\t\t<pmuldoon@redhat.com>\n-Gaius Mulley\t\t\t\t\t<gaius.mulley@southwales.ac.uk>\n+Gaius Mulley\t\t\t\t\t<gaiusmod2@gmail.com>\n Steven Munroe\t\t\t\t\t<munroesj52@gmail.com>\n-Jun Ma\t\t\t\t\t\t<junma@linux.alibaba.com>\n Szabolcs Nagy\t\t\t\t\t<szabolcs.nagy@arm.com>\n Quentin Neill\t\t\t\t\t<quentin.neill.gnu@gmail.com>\n Adam Nemet\t\t\t\t\t<adambnemet@gmail.com>\n@@ -551,9 +559,9 @@ James Norris\n Diego Novillo\t\t\t\t\t<dnovillo@google.com>\n Dorit Nuzman\t\t\t\t\t<dorit@il.ibm.com>\n David O'Brien\t\t\t\t\t<obrien@FreeBSD.org>\n-Braden Obrzut\t\t\t\t\t<admin@maniacsvault.net>\n Carlos O'Donell\t\t\t\t\t<carlos@redhat.com>\n Peter O'Gorman\t\t\t\t\t<pogma@thewrittenword.com>\n+Braden Obrzut\t\t\t\t\t<admin@maniacsvault.net>\n Andrea Ornstein\t\t\t\t\t<andrea.ornstein@st.com>\n Maxim Ostapenko\t\t\t\t\t<m.ostapenko@samsung.com>\n Patrick Palka\t\t\t\t\t<ppalka@gcc.gnu.org>\n@@ -569,13 +577,15 @@ Nicolas Pitre\t\t\t\t\t<nico@cam.org>\n Michael Ploujnikov\t\t\t\t<michael.ploujnikov@oracle.com>\n Paul Pluzhnikov\t\t\t\t\t<ppluzhnikov@google.com>\n Antoniu Pop\t\t\t\t\t<antoniu.pop@gmail.com>\n-Siddhesh Poyarekar\t\t\t\t<siddhesh@sourceware.org>\n+Marc Poulhi\u00e8s\t\t\t\t\t<poulhies@adacore.com>\n+Siddhesh Poyarekar\t\t\t\t<siddhesh@gotplt.org>\n Vidya Praveen\t\t\t\t\t<vidyapraveen@arm.com>\n Thomas Preud'homme\t\t\t\t<thomas.preudhomme@celest.fr>\n Vladimir Prus\t\t\t\t\t<vladimir@codesourcery.com>\n Hafiz Abid Qadeer\t\t\t\t<abidh@codesourcery.com>\n Yao Qi\t\t\t\t\t\t<yao@codesourcery.com>\n Jerry Quinn\t\t\t\t\t<jlquinn@optonline.net>\n+Navid Rahimi\t\t\t\t\t<navidrahimi@microsoft.com>\n Easwaran Raman\t\t\t\t\t<eraman@google.com>\n Joe Ramsay\t\t\t\t\t<joe.ramsay@arm.com>\n Rolf Rasmussen\t\t\t\t\t<rolfwr@gcc.gnu.org>\n@@ -589,7 +599,6 @@ Erven Rohou\t\t\t\t\t<erven.rohou@inria.fr>\n Ira Rosen\t\t\t\t\t<irar@il.ibm.com>\n Yvan Roux\t\t\t\t\t<yvan.roux@linaro.org>\n Eugene Rozenfeld\t\t\t\t<erozen@microsoft.com>\n-Maciej W. Rozycki\t\t\t\t<macro@orcam.me.uk>\n Silvius Rus\t\t\t\t\t<rus@google.com>\n Matthew Sachs\t\t\t\t\t<msachs@apple.com>\n Ankur Saini\t\t\t\t\t<arsenic@sourceware.org>\n@@ -615,14 +624,15 @@ Franz Sirl\t\t\t\t\t<franz.sirl-kernel@lauterbach.com>\n Jan Sjodin\t\t\t\t\t<jan.sjodin@amd.com>\n Trevor Smigiel\t\t\t\t\t<trevor_smigiel@playstation.sony.com>\n Edward Smith-Rowland\t\t\t\t<3dw4rd@verizon.net>\n-Jayant Sonar\t\t\t\t\t<rsonar.jayant@gmail.com>\n Anatoly Sokolov\t\t\t\t\t<aesok@dol.ru>\n Michael Sokolov\t\t\t\t\t<msokolov@ivan.Harhan.ORG>\n+Jayant Sonar\t\t\t\t\t<rsonar.jayant@gmail.com>\n Richard Stallman\t\t\t\t<rms@gnu.org>\n Basile Starynkevitch\t\t\t\t<basile@starynkevitch.net>\n Jakub Staszak\t\t\t\t\t<kuba@et.pl>\n Graham Stott\t\t\t\t\t<graham.stott@btinternet.com>\n Jeff Sturm\t\t\t\t\t<jsturm@gcc.gnu.org>\n+YunQiang Su\t\t\t\t\t<yunqiang.su@cipunited.com>\n Robert Suchanek\t\t\t\t\t<rsuchy84@gmail.com>\n Andrew Sutton\t\t\t\t\t<andrew.n.sutton@gmail.com>\n Gabriele Svelto\t\t\t\t\t<gabriele.svelto@st.com>\n@@ -642,7 +652,7 @@ Konrad Trifunovic\t\t\t\t<konrad.trifunovic@inria.fr>\n Markus Trippelsdorf\t\t\t\t<markus@trippelsdorf.de>\n Sergei Trofimovich\t\t\t\t<slyfox@gcc.gnu.org>\n Igor Tsimbalist\t\t\t\t\t<igor.v.tsimbalist@intel.com>\n-Martin Uecker\t\t\t\t\t<muecker@gwdg.de>\n+Martin Uecker\t\t\t\t\t<uecker@gcc.gnu.org>\n David Ung\t\t\t\t\t<davidu@mips.com>\n Neil Vachharajani\t\t\t\t<nvachhar@gmail.com>\n Kris Van Hees\t\t\t\t\t<kris.van.hees@oracle.com>\n@@ -689,7 +699,6 @@ Shujing Zhao\t\t\t\t\t<pearly.zhao@oracle.com>\n Jon Ziegler\t\t\t\t\t<jonz@apple.com>\n Roman Zippel\t\t\t\t\t<zippel@linux-m68k.org>\n Josef Zlomek\t\t\t\t\t<josef.zlomek@email.cz>\n-YunQiang Su\t\t\t\t\t<yunqiang.su@cipunited.com>\n \n \t\t\tBug database only accounts\n \n@@ -705,9 +714,14 @@ Certificate of Origin Version 1.1.  See https://gcc.gnu.org/dco.html for more\n information.\n \n \n- Matthias Kretz\t\t\t\t\t<m.kretz@gsi.de>\n- Jeff Law\t\t\t\t\t<jeffreyalaw@gmail.com>\n- Jeff Law\t\t\t\t\t<jlaw@tachyum.com>\n- Gaius Mulley\t\t\t\t\t<gaius.mulley@southwales.ac.uk>\n- Trevor Saunders\t\t\t\t<tbsaunde+gcc@tbsaunde.org>\n- Petter Tomner\t\t\t\t\t<tomner@kth.se>\n\\ No newline at end of file\n+Matthias Kretz\t\t\t\t\t<m.kretz@gsi.de>\n+Jeff Law\t\t\t\t\t<jeffreyalaw@gmail.com>\n+Jeff Law\t\t\t\t\t<jlaw@tachyum.com>\n+Gaius Mulley\t\t\t\t\t<gaiusmod2@gmail.com>\n+Siddhesh Poyarekar\t\t\t\t<siddhesh@gotplt.org>\n+Navid Rahimi\t\t\t\t\t<navidrahimi@microsoft.com>\n+Trevor Saunders\t\t\t\t\t<tbsaunde+gcc@tbsaunde.org>\n+Nathan Sidwell\t\t\t\t\t<nathan@acm.org>\n+Petter Tomner\t\t\t\t\t<tomner@kth.se>\n+Martin Uecker\t\t\t\t\t<uecker@gcc.gnu.org>\n+Jonathan Wakely\t\t\t\t\t<jwakely@redhat.com>"}, {"sha": "b38e4c79318fac2b207d174c7feb6ee9d1cde7a5", "filename": "Makefile.def", "status": "modified", "additions": 39, "deletions": 11, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/Makefile.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/Makefile.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.def?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -4,7 +4,7 @@ AutoGen definitions Makefile.tpl;\n // Makefile.in is generated from Makefile.tpl by 'autogen Makefile.def'.\n // This file was originally written by Nathanael Nerode.\n //\n-//   Copyright 2002-2019 Free Software Foundation\n+//   Copyright 2002-2021 Free Software Foundation\n //\n // This file is free software; you can redistribute it and/or modify\n // it under the terms of the GNU General Public License as published by\n@@ -42,7 +42,8 @@ host_modules= { module= dejagnu; };\n host_modules= { module= etc; };\n host_modules= { module= fastjar; no_check_cross= true; };\n host_modules= { module= fixincludes; bootstrap=true;\n-\t\tmissing= TAGS; };\n+\t\tmissing= TAGS;\n+\t\tmissing= install-dvi; };\n host_modules= { module= flex; no_check_cross= true; };\n host_modules= { module= gas; bootstrap=true; };\n host_modules= { module= gcc; bootstrap=true; \n@@ -87,10 +88,14 @@ host_modules= { module= libcody; bootstrap=true;\n \t\tmissing= pdf;\n \t\tmissing= html;\n \t\tmissing= info;\n+\t\tmissing= dvi;\n \t\tmissing= install-pdf;\n \t\tmissing= install-html;\n-\t\tmissing= install-info; };\n-host_modules= { module= libdecnumber; bootstrap=true; };\n+\t\tmissing= install-info;\n+\t\tmissing= install-dvi;\n+\t\tmissing=TAGS; };\n+host_modules= { module= libdecnumber; bootstrap=true;\n+\t\tmissing=TAGS; };\n host_modules= { module= libgui; };\n host_modules= { module= libiberty; bootstrap=true;\n \t        extra_configure_flags='@extra_host_libiberty_configure_flags@';};\n@@ -134,7 +139,8 @@ host_modules= { module= libtermcap; no_check=true;\n                 missing=distclean;\n                 missing=maintainer-clean; };\n host_modules= { module= utils; no_check=true; };\n-host_modules= { module= c++tools; };\n+host_modules= { module= c++tools;\n+                missing=TAGS; };\n host_modules= { module= gnattools; };\n host_modules= { module= lto-plugin; bootstrap=true;\n \t\textra_configure_flags='--enable-shared @extra_linker_plugin_flags@ @extra_linker_plugin_configure_flags@';\n@@ -160,13 +166,17 @@ target_modules = { module= liboffloadmic;\n \t\t   extra_configure_flags='@extra_liboffloadmic_configure_flags@'; };\n target_modules = { module= libssp; lib_path=.libs; };\n target_modules = { module= newlib; };\n-target_modules = { module= libgcc; bootstrap=true; no_check=true; };\n-target_modules = { module= libbacktrace; };\n+target_modules = { module= libgcc; bootstrap=true; no_check=true;\n+\t\t  missing=TAGS;\n+\t\t  missing=install-dvi; };\n+target_modules = { module= libbacktrace; bootstrap=true; };\n target_modules = { module= libquadmath; };\n target_modules = { module= libgfortran; };\n-target_modules = { module= libobjc; };\n+target_modules = { module= libobjc;\n+\t\t  missing=TAGS;\n+\t\t  missing=install-dvi; };\n target_modules = { module= libgo; };\n-target_modules = { module= libphobos;\n+target_modules = { module= libphobos; bootstrap=true;\n \t\t   lib_path=src/.libs; };\n target_modules = { module= libtermcap; no_check=true;\n                    missing=mostlyclean;\n@@ -176,12 +186,12 @@ target_modules = { module= libtermcap; no_check=true;\n target_modules = { module= winsup; };\n target_modules = { module= libgloss; no_check=true; };\n target_modules = { module= libffi; no_install=true; };\n-target_modules = { module= zlib; };\n+target_modules = { module= zlib; bootstrap=true; };\n target_modules = { module= rda; };\n target_modules = { module= libada; };\n target_modules = { module= libgomp; bootstrap= true; lib_path=.libs; };\n target_modules = { module= libitm; lib_path=.libs; };\n-target_modules = { module= libatomic; lib_path=.libs; };\n+target_modules = { module= libatomic; bootstrap=true; lib_path=.libs; };\n \n // These are (some of) the make targets to be done in each subdirectory.\n // Not all; these are the ones which don't have special options.\n@@ -200,6 +210,9 @@ recursive_targets = { make_target= TAGS;\n recursive_targets = { make_target= install-info; \n                       depend=configure;\n                       depend=info; };\n+recursive_targets = { make_target= install-dvi;\n+                      depend=configure;\n+                      depend=dvi; };\n recursive_targets = { make_target= install-pdf; \n                       depend=configure;\n                       depend=pdf; };\n@@ -471,7 +484,16 @@ dependencies = { module=all-ld; on=all-libctf; };\n dependencies = { module=install-binutils; on=install-opcodes; };\n dependencies = { module=install-strip-binutils; on=install-strip-opcodes; };\n \n+// Likewise for ld, libctf, and bfd.\n+dependencies = { module=install-libctf; on=install-bfd; };\n+dependencies = { module=install-ld; on=install-bfd; };\n+dependencies = { module=install-ld; on=install-libctf; };\n+dependencies = { module=install-strip-libctf; on=install-strip-bfd; };\n+dependencies = { module=install-strip-ld; on=install-strip-bfd; };\n+dependencies = { module=install-strip-ld; on=install-strip-libctf; };\n+\n // libopcodes depends on libbfd\n+dependencies = { module=configure-opcodes; on=configure-bfd; hard=true; };\n dependencies = { module=install-opcodes; on=install-bfd; };\n dependencies = { module=install-strip-opcodes; on=install-strip-bfd; };\n \n@@ -564,6 +586,12 @@ dependencies = { module=configure-libctf; on=all-zlib; };\n dependencies = { module=configure-libctf; on=all-libiconv; };\n dependencies = { module=check-libctf; on=all-ld; };\n \n+// The Makefiles in gdb and gdbserver pull in a file that configure\n+// generates in the gnulib directory, so distclean gnulib only after\n+// gdb and gdbserver.\n+dependencies = { module=distclean-gnulib; on=distclean-gdb; };\n+dependencies = { module=distclean-gnulib; on=distclean-gdbserver; };\n+\n // Warning, these are not well tested.\n dependencies = { module=all-bison; on=all-intl; };\n dependencies = { module=all-bison; on=all-build-texinfo; };"}, {"sha": "bf6f30a78e5db54ea242343bcde02977f2749805", "filename": "Makefile.in", "status": "modified", "additions": 5610, "deletions": 324, "changes": 5934, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "ef58fac2b9a8b38a990371f2619c04a3c1c5a9d4", "filename": "Makefile.tpl", "status": "modified", "additions": 80, "deletions": 5, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -157,6 +157,8 @@ BUILD_EXPORTS = \\\n \tCC=\"$(CC_FOR_BUILD)\"; export CC; \\\n \tCFLAGS=\"$(CFLAGS_FOR_BUILD)\"; export CFLAGS; \\\n \tCONFIG_SHELL=\"$(SHELL)\"; export CONFIG_SHELL; \\\n+\tCPP=\"$(CPP_FOR_BUILD)\"; export CPP; \\\n+\tCPPFLAGS=\"$(CPPFLAGS_FOR_BUILD)\"; export CPPFLAGS; \\\n \tCXX=\"$(CXX_FOR_BUILD)\"; export CXX; \\\n \tCXXFLAGS=\"$(CXXFLAGS_FOR_BUILD)\"; export CXXFLAGS; \\\n \tGFORTRAN=\"$(GFORTRAN_FOR_BUILD)\"; export GFORTRAN; \\\n@@ -205,6 +207,8 @@ HOST_EXPORTS = \\\n \tAR=\"$(AR)\"; export AR; \\\n \tAS=\"$(AS)\"; export AS; \\\n \tCC_FOR_BUILD=\"$(CC_FOR_BUILD)\"; export CC_FOR_BUILD; \\\n+\tCPP_FOR_BUILD=\"$(CPP_FOR_BUILD)\"; export CPP_FOR_BUILD; \\\n+\tCPPFLAGS_FOR_BUILD=\"$(CPPFLAGS_FOR_BUILD)\"; export CPPFLAGS_FOR_BUILD; \\\n \tCXX_FOR_BUILD=\"$(CXX_FOR_BUILD)\"; export CXX_FOR_BUILD; \\\n \tDLLTOOL=\"$(DLLTOOL)\"; export DLLTOOL; \\\n \tDSYMUTIL=\"$(DSYMUTIL)\"; export DSYMUTIL; \\\n@@ -272,11 +276,14 @@ POSTSTAGE1_HOST_EXPORTS = \\\n \t$(POSTSTAGE1_CXX_EXPORT) \\\n \t$(LTO_EXPORTS) \\\n \tGDC=\"$$r/$(HOST_SUBDIR)/prev-gcc/gdc$(exeext) -B$$r/$(HOST_SUBDIR)/prev-gcc/ \\\n-\t  -B$(build_tooldir)/bin/ $(GDC_FLAGS_FOR_TARGET) \\\n+\t  -B$(build_tooldir)/bin/ $(GDCFLAGS_FOR_TARGET) \\\n+\t  -B$$r/prev-$(TARGET_SUBDIR)/libphobos/libdruntime/gcc \\\n \t  -B$$r/prev-$(TARGET_SUBDIR)/libphobos/src \\\n+\t  -B$$r/prev-$(TARGET_SUBDIR)/libphobos/src/.libs \\\n \t  -I$$r/prev-$(TARGET_SUBDIR)/libphobos/libdruntime -I$$s/libphobos/libdruntime \\\n \t  -L$$r/prev-$(TARGET_SUBDIR)/libphobos/src/.libs \\\n-\t  -L$$r/prev-$(TARGET_SUBDIR)/libphobos/libdruntime/.libs\"; \\\n+\t  -B$$r/prev-$(TARGET_SUBDIR)/libstdc++-v3/src/.libs \\\n+\t  -L$$r/prev-$(TARGET_SUBDIR)/libstdc++-v3/src/.libs\"; \\\n \texport GDC; \\\n \tGDC_FOR_BUILD=\"$$GDC\"; export GDC_FOR_BUILD; \\\n \tGNATBIND=\"$$r/$(HOST_SUBDIR)/prev-gcc/gnatbind\"; export GNATBIND; \\\n@@ -363,6 +370,8 @@ AR_FOR_BUILD = @AR_FOR_BUILD@\n AS_FOR_BUILD = @AS_FOR_BUILD@\n CC_FOR_BUILD = @CC_FOR_BUILD@\n CFLAGS_FOR_BUILD = @CFLAGS_FOR_BUILD@\n+CPP_FOR_BUILD = @CPP_FOR_BUILD@\n+CPPFLAGS_FOR_BUILD = @CPPFLAGS_FOR_BUILD@\n CXXFLAGS_FOR_BUILD = @CXXFLAGS_FOR_BUILD@\n CXX_FOR_BUILD = @CXX_FOR_BUILD@\n DLLTOOL_FOR_BUILD = @DLLTOOL_FOR_BUILD@\n@@ -441,6 +450,49 @@ LIBCXXFLAGS = $(CXXFLAGS) -fno-implicit-templates\n GOCFLAGS = $(CFLAGS)\n GDCFLAGS = $(CFLAGS)\n \n+# Pass additional PGO and LTO compiler options to the PGO build.\n+BUILD_CFLAGS = $(PGO_BUILD_CFLAGS) $(PGO_BUILD_LTO_CFLAGS)\n+override CFLAGS += $(BUILD_CFLAGS)\n+override CXXFLAGS += $(BUILD_CFLAGS)\n+\n+# Additional PGO and LTO compiler options to generate profiling data\n+# for the PGO build.\n+PGO_BUILD_GEN_FLAGS_TO_PASS = \\\n+\tPGO_BUILD_CFLAGS=\"@PGO_BUILD_GEN_CFLAGS@\" \\\n+\tPGO_BUILD_LTO_CFLAGS=\"@PGO_BUILD_LTO_CFLAGS@\"\n+\n+# NB: Filter out any compiler options which may fail PGO training runs.\n+PGO_BUILD_TRAINING_CFLAGS:= \\\n+\t$(filter-out -Werror=%,$(CFLAGS))\n+PGO_BUILD_TRAINING_CXXFLAGS:=\\\n+\t$(filter-out -Werror=%,$(CXXFLAGS))\n+PGO_BUILD_TRAINING_CFLAGS:= \\\n+\t$(filter-out -Wall,$(PGO_BUILD_TRAINING_CFLAGS))\n+PGO_BUILD_TRAINING_CXXFLAGS:= \\\n+\t$(filter-out -Wall,$(PGO_BUILD_TRAINING_CXXFLAGS))\n+PGO_BUILD_TRAINING_CFLAGS:= \\\n+\t$(filter-out -specs=%,$(PGO_BUILD_TRAINING_CFLAGS))\n+PGO_BUILD_TRAINING_CXXFLAGS:= \\\n+\t$(filter-out -specs=%,$(PGO_BUILD_TRAINING_CXXFLAGS))\n+PGO_BUILD_TRAINING_FLAGS_TO_PASS = \\\n+\tPGO_BUILD_TRAINING=yes \\\n+\tCFLAGS_FOR_TARGET=\"$(PGO_BUILD_TRAINING_CFLAGS)\" \\\n+\tCXXFLAGS_FOR_TARGET=\"$(PGO_BUILD_TRAINING_CXXFLAGS)\"\n+\n+# Ignore \"make check\" errors in PGO training runs.\n+PGO_BUILD_TRAINING_MFLAGS = -i\n+\n+# Additional PGO and LTO compiler options to use profiling data for the\n+# PGO build.\n+PGO_BUILD_USE_FLAGS_TO_PASS = \\\n+\tPGO_BUILD_CFLAGS=\"@PGO_BUILD_USE_CFLAGS@\" \\\n+\tPGO_BUILD_LTO_CFLAGS=\"@PGO_BUILD_LTO_CFLAGS@\"\n+\n+# PGO training targets for the PGO build.  FIXME: Add gold tests to\n+# training.\n+PGO-TRAINING-TARGETS = binutils gas gdb ld sim\n+PGO_BUILD_TRAINING = $(addprefix maybe-check-,$(PGO-TRAINING-TARGETS))\n+\n CREATE_GCOV = create_gcov\n \n TFLAGS =\n@@ -481,6 +533,11 @@ STAGE1_CONFIGURE_FLAGS = --disable-intermodule $(STAGE1_CHECKING) \\\n \t  --disable-coverage --enable-languages=\"$(STAGE1_LANGUAGES)\" \\\n \t  --disable-build-format-warnings\n \n+@if target-libphobos-bootstrap\n+STAGE1_CONFIGURE_FLAGS += --with-libphobos-druntime-only\n+STAGE2_CONFIGURE_FLAGS += --with-libphobos-druntime-only\n+@endif target-libphobos-bootstrap\n+\n # When using the slow stage1 compiler disable IL verification and forcefully\n # enable it when using the stage2 compiler instead.  As we later compare\n # stage2 and stage3 we are merely avoid doing redundant work, plus we apply\n@@ -770,6 +827,12 @@ configure-target: [+\n \n # The target built for a native non-bootstrap build.\n .PHONY: all\n+\n+# --enable-pgo-build enables the PGO build.\n+# 1. First build with -fprofile-generate.\n+# 2. Use \"make maybe-check-*\" to generate profiling data.\n+# 3. Use \"make clean\" to remove the previous build.\n+# 4. Rebuild with -fprofile-use.\n all:\n @if gcc-bootstrap\n \t[ -f stage_final ] || echo stage3 > stage_final\n@@ -778,15 +841,25 @@ all:\n \t$(MAKE) $(RECURSE_FLAGS_TO_PASS) `cat stage_final`-bubble\n @endif gcc-bootstrap\n \t@: $(MAKE); $(unstage)\n-\t@r=`${PWD_COMMAND}`; export r; \\\n+\t+@r=`${PWD_COMMAND}`; export r; \\\n \ts=`cd $(srcdir); ${PWD_COMMAND}`; export s; \\\n @if gcc-bootstrap\n \tif [ -f stage_last ]; then \\\n \t  TFLAGS=\"$(STAGE$(shell test ! -f stage_last || sed s,^stage,, stage_last)_TFLAGS)\"; \\\n \t  $(MAKE) $(TARGET_FLAGS_TO_PASS) all-host all-target; \\\n \telse \\\n @endif gcc-bootstrap\n-\t  $(MAKE) $(RECURSE_FLAGS_TO_PASS) all-host all-target \\\n+\t  $(MAKE) $(RECURSE_FLAGS_TO_PASS) \\\n+\t\t$(PGO_BUILD_GEN_FLAGS_TO_PASS) all-host all-target \\\n+@if pgo-build\n+\t&& $(MAKE) $(RECURSE_FLAGS_TO_PASS) \\\n+\t\t$(PGO_BUILD_TRAINING_MFLAGS) \\\n+\t\t$(PGO_BUILD_TRAINING_FLAGS_TO_PASS) \\\n+\t\t$(PGO_BUILD_TRAINING) \\\n+\t&& $(MAKE) $(RECURSE_FLAGS_TO_PASS) clean \\\n+\t&& $(MAKE) $(RECURSE_FLAGS_TO_PASS) \\\n+\t\t$(PGO_BUILD_USE_FLAGS_TO_PASS) all-host all-target \\\n+@endif pgo-build\n @if gcc-bootstrap\n \t    ; \\\n \tfi \\\n@@ -836,7 +909,7 @@ do-[+make_target+]:\n # Here are the targets which correspond to the do-X targets.\n \n .PHONY: info installcheck dvi pdf html\n-.PHONY: install-info install-pdf install-html\n+.PHONY: install-info install-dvi install-pdf install-html\n .PHONY: clean distclean mostlyclean maintainer-clean realclean\n .PHONY: local-clean local-distclean local-maintainer-clean\n info: do-info\n@@ -855,6 +928,8 @@ install-info: do-install-info dir.info\n \t  $(INSTALL_DATA) dir.info $(DESTDIR)$(infodir)/dir.info; \\\n \telse true; fi\n \n+install-dvi: do-install-dvi\n+\n install-pdf: do-install-pdf\n \n install-html: do-install-html"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "build.log", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/build.log", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/build.log", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/build.log?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "1255136b2be1fd081e0936414f22486b146b9f28", "filename": "c++tools/ChangeLog", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/c%2B%2Btools%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/c%2B%2Btools%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2FChangeLog?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -1,3 +1,13 @@\n+2021-10-26  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* resolver.cc (module_resolver::read_tuple_file): Use unique_ptr\n+\tto ensure memory is freed before returning.\n+\n+2021-10-22  Eric Gallager  <egallager@gcc.gnu.org>\n+\n+\tPR other/102663\n+\t* Makefile.in: Add dummy install-dvi target.\n+\n 2021-09-14  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* resolver.cc (module_resolver::ModuleCompiledRequest):\n@@ -124,7 +134,7 @@\n \t* server.cc: New.\n \n \f\n-Copyright (C) 2020-2021 Free Software Foundation, Inc.\n+Copyright (C) 2020-2022 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"}, {"sha": "d6a3361373292e994a25c1645185c89180639e8d", "filename": "c++tools/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/c%2B%2Btools%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/c%2B%2Btools%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2FMakefile.in?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -1,5 +1,5 @@\n # Makefile for c++tools\n-#   Copyright (C) 2020-2021 Free Software Foundation, Inc.\n+#   Copyright (C) 2020-2022 Free Software Foundation, Inc.\n #\n # This file is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -59,6 +59,7 @@ html::\n info::\n install-info::\n install-pdf::\n+install-dvi::\n install-man::\n install-html::\n "}, {"sha": "6662b5ad7c99dc00d33ffa8aad9421b1160b2a61", "filename": "c++tools/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/c%2B%2Btools%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/c%2B%2Btools%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2Fconfigure.ac?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -1,5 +1,5 @@\n # Configure script for c++tools\n-#   Copyright (C) 2020-2021 Free Software Foundation, Inc.\n+#   Copyright (C) 2020-2022 Free Software Foundation, Inc.\n #   Written by Nathan Sidwell <nathan@acm.org> while at FaceBook\n #\n # This file is free software; you can redistribute it and/or modify it"}, {"sha": "1fe9c17e0fea2eb32e5f5ca103fb86b30ba5e0f2", "filename": "c++tools/resolver.cc", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/c%2B%2Btools%2Fresolver.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/c%2B%2Btools%2Fresolver.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2Fresolver.cc?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -1,5 +1,5 @@\n /* C++ modules.  Experimental!\t-*- c++ -*-\n-   Copyright (C) 2017-2021 Free Software Foundation, Inc.\n+   Copyright (C) 2017-2022 Free Software Foundation, Inc.\n    Written by Nathan Sidwell <nathan@acm.org> while at FaceBook\n \n    This file is part of GCC.\n@@ -23,6 +23,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"resolver.h\"\n // C++\n #include <algorithm>\n+#include <memory>\n // C\n #include <cstring>\n // OS\n@@ -114,10 +115,17 @@ module_resolver::read_tuple_file (int fd, char const *prefix, bool force)\n   buffer = mmap (nullptr, stat.st_size, PROT_READ, MAP_PRIVATE, fd, 0);\n   if (buffer == MAP_FAILED)\n     return -errno;\n+  struct Deleter {\n+    void operator()(void* p) const { munmap(p, size); }\n+    size_t size;\n+  };\n+  std::unique_ptr<void, Deleter> guard(buffer, Deleter{(size_t)stat.st_size});\n #else\n   buffer = xmalloc (stat.st_size);\n   if (!buffer)\n     return -errno;\n+  struct Deleter { void operator()(void* p) const { free(p); } };\n+  std::unique_ptr<void, Deleter> guard(buffer);\n   if (read (fd, buffer, stat.st_size) != stat.st_size)\n     return -errno;\n #endif\n@@ -179,12 +187,6 @@ module_resolver::read_tuple_file (int fd, char const *prefix, bool force)\n \t}\n     }\n \n-#if MAPPED_READING\n-  munmap (buffer, stat.st_size);\n-#else\n-  free (buffer);\n-#endif\n-\n   return 0;\n }\n "}, {"sha": "b3f912eff79a2c7a4222b5dada0ff61a21092baf", "filename": "c++tools/resolver.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/c%2B%2Btools%2Fresolver.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/c%2B%2Btools%2Fresolver.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2Fresolver.h?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -1,5 +1,5 @@\n /* C++ modules.  Experimental!\t-*- c++ -*-\n-   Copyright (C) 2017-2021 Free Software Foundation, Inc.\n+   Copyright (C) 2017-2022 Free Software Foundation, Inc.\n    Written by Nathan Sidwell <nathan@acm.org> while at FaceBook\n \n    This file is part of GCC."}, {"sha": "8c6ad314886e31a7e2052ad816bb3d199cf98adf", "filename": "c++tools/server.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/c%2B%2Btools%2Fserver.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/c%2B%2Btools%2Fserver.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/c%2B%2Btools%2Fserver.cc?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -1,5 +1,5 @@\n /* C++ modules.  Experimental!\n-   Copyright (C) 2018-2021 Free Software Foundation, Inc.\n+   Copyright (C) 2018-2022 Free Software Foundation, Inc.\n    Written by Nathan Sidwell <nathan@acm.org> while at FaceBook\n \n    This file is part of GCC.\n@@ -319,7 +319,7 @@ static void ATTRIBUTE_NORETURN\n print_version (void)\n {\n   fnotice (stdout, \"%s %s%s\\n\", progname, pkgversion_string, version_string);\n-  fprintf (stdout, \"Copyright %s 2018-2021 Free Software Foundation, Inc.\\n\",\n+  fprintf (stdout, \"Copyright %s 2018-2022 Free Software Foundation, Inc.\\n\",\n \t   (\"(C)\"));\n   fnotice (stdout,\n \t   (\"This is free software; see the source for copying conditions.\\n\""}, {"sha": "38f3d037a785f54fb6a5e946d83fc29a2085757c", "filename": "config.sub", "status": "modified", "additions": 53, "deletions": 28, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/config.sub", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/config.sub", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config.sub?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -2,7 +2,9 @@\n # Configuration validation subroutine script.\n #   Copyright 1992-2021 Free Software Foundation, Inc.\n \n-timestamp='2021-01-08'\n+# shellcheck disable=SC2006,SC2268 # see below for rationale\n+\n+timestamp='2021-10-27'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -50,7 +52,14 @@ timestamp='2021-01-08'\n #\tCPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM\n # It is wrong to echo any other type of specification.\n \n-me=$(echo \"$0\" | sed -e 's,.*/,,')\n+# The \"shellcheck disable\" line above the timestamp inhibits complaints\n+# about features and limitations of the classic Bourne shell that were\n+# superseded or lifted in POSIX.  However, this script identifies a wide\n+# variety of pre-POSIX systems that do not have POSIX shells at all, and\n+# even some reasonably current systems (Solaris 10 as case-in-point) still\n+# have a pre-POSIX /bin/sh.\n+\n+me=`echo \"$0\" | sed -e 's,.*/,,'`\n \n usage=\"\\\n Usage: $0 [OPTION] CPU-MFR-OPSYS or ALIAS\n@@ -112,9 +121,11 @@ esac\n \n # Split fields of configuration type\n # shellcheck disable=SC2162\n+saved_IFS=$IFS\n IFS=\"-\" read field1 field2 field3 field4 <<EOF\n $1\n EOF\n+IFS=$saved_IFS\n \n # Separate into logical components for further validation\n case $1 in\n@@ -163,6 +174,10 @@ case $1 in\n \t\t\t\t\t\tbasic_machine=$field1\n \t\t\t\t\t\tbasic_os=$field2\n \t\t\t\t\t\t;;\n+\t\t\t\t\tzephyr*)\n+\t\t\t\t\t\tbasic_machine=$field1-unknown\n+\t\t\t\t\t\tbasic_os=$field2\n+\t\t\t\t\t\t;;\n \t\t\t\t\t# Manufacturers\n \t\t\t\t\tdec* | mips* | sequent* | encore* | pc533* | sgi* | sony* \\\n \t\t\t\t\t| att* | 7300* | 3300* | delta* | motorola* | sun[234]* \\\n@@ -769,22 +784,22 @@ case $basic_machine in\n \t\tvendor=hp\n \t\t;;\n \ti*86v32)\n-\t\tcpu=$(echo \"$1\" | sed -e 's/86.*/86/')\n+\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n \t\tvendor=pc\n \t\tbasic_os=sysv32\n \t\t;;\n \ti*86v4*)\n-\t\tcpu=$(echo \"$1\" | sed -e 's/86.*/86/')\n+\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n \t\tvendor=pc\n \t\tbasic_os=sysv4\n \t\t;;\n \ti*86v)\n-\t\tcpu=$(echo \"$1\" | sed -e 's/86.*/86/')\n+\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n \t\tvendor=pc\n \t\tbasic_os=sysv\n \t\t;;\n \ti*86sol2)\n-\t\tcpu=$(echo \"$1\" | sed -e 's/86.*/86/')\n+\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n \t\tvendor=pc\n \t\tbasic_os=solaris2\n \t\t;;\n@@ -917,14 +932,16 @@ case $basic_machine in\n \t\t;;\n \tleon-*|leon[3-9]-*)\n \t\tcpu=sparc\n-\t\tvendor=$(echo \"$basic_machine\" | sed 's/-.*//')\n+\t\tvendor=`echo \"$basic_machine\" | sed 's/-.*//'`\n \t\t;;\n \n \t*-*)\n \t\t# shellcheck disable=SC2162\n+\t\tsaved_IFS=$IFS\n \t\tIFS=\"-\" read cpu vendor <<EOF\n $basic_machine\n EOF\n+\t\tIFS=$saved_IFS\n \t\t;;\n \t# We use `pc' rather than `unknown'\n \t# because (1) that's what they normally are, and\n@@ -1084,7 +1101,7 @@ case $cpu-$vendor in\n \t\tcpu=mipsisa64sb1el\n \t\t;;\n \tsh5e[lb]-*)\n-\t\tcpu=$(echo \"$cpu\" | sed 's/^\\(sh.\\)e\\(.\\)$/\\1\\2e/')\n+\t\tcpu=`echo \"$cpu\" | sed 's/^\\(sh.\\)e\\(.\\)$/\\1\\2e/'`\n \t\t;;\n \tspur-*)\n \t\tcpu=spur\n@@ -1102,7 +1119,7 @@ case $cpu-$vendor in\n \t\tcpu=x86_64\n \t\t;;\n \txscale-* | xscalee[bl]-*)\n-\t\tcpu=$(echo \"$cpu\" | sed 's/^xscale/arm/')\n+\t\tcpu=`echo \"$cpu\" | sed 's/^xscale/arm/'`\n \t\t;;\n \tarm64-*)\n \t\tcpu=aarch64\n@@ -1165,7 +1182,7 @@ case $cpu-$vendor in\n \t\t\t| alphapca5[67] | alpha64pca5[67] \\\n \t\t\t| am33_2.0 \\\n \t\t\t| amdgcn \\\n-\t\t\t| arc | arceb \\\n+\t\t\t| arc | arceb | arc32 | arc64 \\\n \t\t\t| arm | arm[lb]e | arme[lb] | armv* \\\n \t\t\t| avr | avr32 \\\n \t\t\t| asmjs \\\n@@ -1204,9 +1221,13 @@ case $cpu-$vendor in\n \t\t\t| mips64vr5900 | mips64vr5900el \\\n \t\t\t| mipsisa32 | mipsisa32el \\\n \t\t\t| mipsisa32r2 | mipsisa32r2el \\\n+\t\t\t| mipsisa32r3 | mipsisa32r3el \\\n+\t\t\t| mipsisa32r5 | mipsisa32r5el \\\n \t\t\t| mipsisa32r6 | mipsisa32r6el \\\n \t\t\t| mipsisa64 | mipsisa64el \\\n \t\t\t| mipsisa64r2 | mipsisa64r2el \\\n+\t\t\t| mipsisa64r3 | mipsisa64r3el \\\n+\t\t\t| mipsisa64r5 | mipsisa64r5el \\\n \t\t\t| mipsisa64r6 | mipsisa64r6el \\\n \t\t\t| mipsisa64sb1 | mipsisa64sb1el \\\n \t\t\t| mipsisa64sr71k | mipsisa64sr71kel \\\n@@ -1283,35 +1304,37 @@ esac\n if test x$basic_os != x\n then\n \n-# First recognize some ad-hoc caes, or perhaps split kernel-os, or else just\n+# First recognize some ad-hoc cases, or perhaps split kernel-os, or else just\n # set os.\n case $basic_os in\n \tgnu/linux*)\n \t\tkernel=linux\n-\t\tos=$(echo $basic_os | sed -e 's|gnu/linux|gnu|')\n+\t\tos=`echo \"$basic_os\" | sed -e 's|gnu/linux|gnu|'`\n \t\t;;\n \tos2-emx)\n \t\tkernel=os2\n-\t\tos=$(echo $basic_os | sed -e 's|os2-emx|emx|')\n+\t\tos=`echo \"$basic_os\" | sed -e 's|os2-emx|emx|'`\n \t\t;;\n \tnto-qnx*)\n \t\tkernel=nto\n-\t\tos=$(echo $basic_os | sed -e 's|nto-qnx|qnx|')\n+\t\tos=`echo \"$basic_os\" | sed -e 's|nto-qnx|qnx|'`\n \t\t;;\n \t*-*)\n \t\t# shellcheck disable=SC2162\n+\t\tsaved_IFS=$IFS\n \t\tIFS=\"-\" read kernel os <<EOF\n $basic_os\n EOF\n+\t\tIFS=$saved_IFS\n \t\t;;\n \t# Default OS when just kernel was specified\n \tnto*)\n \t\tkernel=nto\n-\t\tos=$(echo $basic_os | sed -e 's|nto|qnx|')\n+\t\tos=`echo \"$basic_os\" | sed -e 's|nto|qnx|'`\n \t\t;;\n \tlinux*)\n \t\tkernel=linux\n-\t\tos=$(echo $basic_os | sed -e 's|linux|gnu|')\n+\t\tos=`echo \"$basic_os\" | sed -e 's|linux|gnu|'`\n \t\t;;\n \t*)\n \t\tkernel=\n@@ -1332,7 +1355,7 @@ case $os in\n \t\tos=cnk\n \t\t;;\n \tsolaris1 | solaris1.*)\n-\t\tos=$(echo $os | sed -e 's|solaris1|sunos4|')\n+\t\tos=`echo \"$os\" | sed -e 's|solaris1|sunos4|'`\n \t\t;;\n \tsolaris)\n \t\tos=solaris2\n@@ -1361,7 +1384,7 @@ case $os in\n \t\tos=sco3.2v4\n \t\t;;\n \tsco3.2.[4-9]*)\n-\t\tos=$(echo $os | sed -e 's/sco3.2./sco3.2v/')\n+\t\tos=`echo \"$os\" | sed -e 's/sco3.2./sco3.2v/'`\n \t\t;;\n \tsco*v* | scout)\n \t\t# Don't match below\n@@ -1391,7 +1414,7 @@ case $os in\n \t\tos=lynxos\n \t\t;;\n \tmac[0-9]*)\n-\t\tos=$(echo \"$os\" | sed -e 's|mac|macos|')\n+\t\tos=`echo \"$os\" | sed -e 's|mac|macos|'`\n \t\t;;\n \topened*)\n \t\tos=openedition\n@@ -1400,10 +1423,10 @@ case $os in\n \t\tos=os400\n \t\t;;\n \tsunos5*)\n-\t\tos=$(echo \"$os\" | sed -e 's|sunos5|solaris2|')\n+\t\tos=`echo \"$os\" | sed -e 's|sunos5|solaris2|'`\n \t\t;;\n \tsunos6*)\n-\t\tos=$(echo \"$os\" | sed -e 's|sunos6|solaris3|')\n+\t\tos=`echo \"$os\" | sed -e 's|sunos6|solaris3|'`\n \t\t;;\n \twince*)\n \t\tos=wince\n@@ -1437,7 +1460,7 @@ case $os in\n \t\t;;\n \t# Preserve the version number of sinix5.\n \tsinix5.*)\n-\t\tos=$(echo $os | sed -e 's|sinix|sysv|')\n+\t\tos=`echo \"$os\" | sed -e 's|sinix|sysv|'`\n \t\t;;\n \tsinix*)\n \t\tos=sysv4\n@@ -1684,7 +1707,7 @@ fi\n # Now, validate our (potentially fixed-up) OS.\n case $os in\n \t# Sometimes we do \"kernel-libc\", so those need to count as OSes.\n-\tmusl* | newlib* | uclibc*)\n+\tmusl* | newlib* | relibc* | uclibc*)\n \t\t;;\n \t# Likewise for \"kernel-abi\"\n \teabi* | gnueabi*)\n@@ -1707,12 +1730,12 @@ case $os in\n \t     | nindy* | vxsim* | vxworks* | ebmon* | hms* | mvs* \\\n \t     | clix* | riscos* | uniplus* | iris* | isc* | rtu* | xenix* \\\n \t     | mirbsd* | netbsd* | dicos* | openedition* | ose* \\\n-\t     | bitrig* | openbsd* | solidbsd* | libertybsd* | os108* \\\n+\t     | bitrig* | openbsd* | secbsd* | solidbsd* | libertybsd* | os108* \\\n \t     | ekkobsd* | freebsd* | riscix* | lynxos* | os400* \\\n \t     | bosx* | nextstep* | cxux* | aout* | elf* | oabi* \\\n \t     | ptx* | coff* | ecoff* | winnt* | domain* | vsta* \\\n \t     | udi* | lites* | ieee* | go32* | aux* | hcos* \\\n-\t     | chorusrdb* | cegcc* | glidix* \\\n+\t     | chorusrdb* | cegcc* | glidix* | serenity* \\\n \t     | cygwin* | msys* | pe* | moss* | proelf* | rtems* \\\n \t     | midipix* | mingw32* | mingw64* | mint* \\\n \t     | uxpv* | beos* | mpeix* | udk* | moxiebox* \\\n@@ -1725,7 +1748,8 @@ case $os in\n \t     | skyos* | haiku* | rdos* | toppers* | drops* | es* \\\n \t     | onefs* | tirtos* | phoenix* | fuchsia* | redox* | bme* \\\n \t     | midnightbsd* | amdhsa* | unleashed* | emscripten* | wasi* \\\n-\t     | nsk* | powerunix* | genode* | zvmoe* | qnx* | emx*)\n+\t     | nsk* | powerunix* | genode* | zvmoe* | qnx* | emx* | zephyr* \\\n+\t     | fiwix* )\n \t\t;;\n \t# This one is extra strict with allowed versions\n \tsco3.2v2 | sco3.2v[4-9]* | sco5v6*)\n@@ -1742,11 +1766,12 @@ esac\n # As a final step for OS-related things, validate the OS-kernel combination\n # (given a valid OS), if there is a kernel.\n case $kernel-$os in\n-\tlinux-gnu* | linux-dietlibc* | linux-android* | linux-newlib* | linux-musl* | linux-uclibc* )\n+\tlinux-gnu* | linux-dietlibc* | linux-android* | linux-newlib* \\\n+\t\t   | linux-musl* | linux-relibc* | linux-uclibc* )\n \t\t;;\n \tuclinux-uclibc* )\n \t\t;;\n-\t-dietlibc* | -newlib* | -musl* | -uclibc* )\n+\t-dietlibc* | -newlib* | -musl* | -relibc* | -uclibc* )\n \t\t# These are just libc implementations, not actual OSes, and thus\n \t\t# require a kernel.\n \t\techo \"Invalid configuration \\`$1': libc \\`$os' needs explicit kernel.\" 1>&2"}, {"sha": "066c01f9b56de58e14d84a5add275c6982b26dc7", "filename": "config/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -1,3 +1,33 @@\n+2021-12-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/103528\n+\t* acx.m4 (ACX_PROG_GDC): Add check whether D compiler works.\n+\n+2021-12-16  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\tRevert:\n+\t2021-12-16  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\t* gcc-plugin.m4 (GCC_PLUGIN_OPTION): New.\n+\n+2021-12-15  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\t* gcc-plugin.m4 (GCC_PLUGIN_OPTION): New.\n+\n+2021-12-15  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* gcc-plugin.m4: Save and process CXXFLAGS.\n+\n+2021-11-30  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* acx.m4 (ACX_PROG_GDC): New m4 function.\n+\n+2021-09-19  Andrew Pinski  <apinski@marvell.com>\n+\n+\tPR bootstrap/102389\n+\t* bootstrap-lto-lean.mk: Handle NM like RANLIB AND AR.\n+\t* bootstrap-lto.mk: Likewise.\n+\n 2021-08-18  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* mh-darwin: Require a non-shared host configuration to"}, {"sha": "b86c4f9e51d6a336103e80e53afb10ec8c9d1282", "filename": "config/acx.m4", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/config%2Facx.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/config%2Facx.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Facx.m4?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -420,6 +420,31 @@ else\n fi\n ])\n \n+# Test for D.\n+AC_DEFUN([ACX_PROG_GDC],\n+[AC_REQUIRE([AC_CHECK_TOOL_PREFIX])\n+AC_REQUIRE([AC_PROG_CC])\n+AC_CHECK_TOOL(GDC, gdc, no)\n+AC_CACHE_CHECK([whether the D compiler works],\n+\t\t acx_cv_d_compiler_works,\n+[cat >conftest.d <<EOF\n+module conftest; int main() { return 0; }\n+EOF\n+acx_cv_d_compiler_works=no\n+if test \"x$GDC\" != xno; then\n+  errors=`(${GDC} $1[]m4_ifval([$1], [ ])-c conftest.d) 2>&1 || echo failure`\n+  if test x\"$errors\" = x && test -f conftest.$ac_objext; then\n+    acx_cv_d_compiler_works=yes\n+  fi\n+  rm -f conftest.*\n+fi])\n+if test \"x$GDC\" != xno && test x$acx_cv_d_compiler_works != xno; then\n+  have_gdc=yes\n+else\n+  have_gdc=no\n+fi\n+])\n+\n dnl 'make compare' can be significantly faster, if cmp itself can\n dnl skip bytes instead of using tail.  The test being performed is\n dnl \"if cmp --ignore-initial=2 t1 t2 && ! cmp --ignore-initial=1 t1 t2\""}, {"sha": "42cb3394c70be967eb102c63d74ad65f490ba4e6", "filename": "config/bootstrap-lto-lean.mk", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/config%2Fbootstrap-lto-lean.mk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/config%2Fbootstrap-lto-lean.mk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fbootstrap-lto-lean.mk?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -9,9 +9,11 @@ STAGEfeedback_CFLAGS += -flto=jobserver\n # assumes the host supports the linker plugin\n LTO_AR = $$r/$(HOST_SUBDIR)/prev-gcc/gcc-ar$(exeext) -B$$r/$(HOST_SUBDIR)/prev-gcc/\n LTO_RANLIB = $$r/$(HOST_SUBDIR)/prev-gcc/gcc-ranlib$(exeext) -B$$r/$(HOST_SUBDIR)/prev-gcc/\n+LTO_NM = $$r/$(HOST_SUBDIR)/prev-gcc/gcc-nm$(exeext) -B$$r/$(HOST_SUBDIR)/prev-gcc/\n \n LTO_EXPORTS = AR=\"$(LTO_AR)\"; export AR; \\\n-\t      RANLIB=\"$(LTO_RANLIB)\"; export RANLIB;\n-LTO_FLAGS_TO_PASS = AR=\"$(LTO_AR)\" RANLIB=\"$(LTO_RANLIB)\"\n+\t      RANLIB=\"$(LTO_RANLIB)\"; export RANLIB; \\\n+\t      NM=\"$(LTO_NM)\"; export NM;\n+LTO_FLAGS_TO_PASS = AR=\"$(LTO_AR)\" RANLIB=\"$(LTO_RANLIB)\" NM=\"$(LTO_NM)\"\n \n do-compare = /bin/true"}, {"sha": "1ddb1d870bab42bd3f7cfa1031995978d195fc4d", "filename": "config/bootstrap-lto.mk", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/config%2Fbootstrap-lto.mk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/config%2Fbootstrap-lto.mk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fbootstrap-lto.mk?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -9,10 +9,12 @@ STAGEfeedback_CFLAGS += -flto=jobserver -frandom-seed=1\n # assumes the host supports the linker plugin\n LTO_AR = $$r/$(HOST_SUBDIR)/prev-gcc/gcc-ar$(exeext) -B$$r/$(HOST_SUBDIR)/prev-gcc/\n LTO_RANLIB = $$r/$(HOST_SUBDIR)/prev-gcc/gcc-ranlib$(exeext) -B$$r/$(HOST_SUBDIR)/prev-gcc/\n+LTO_NM = $$r/$(HOST_SUBDIR)/prev-gcc/gcc-nm$(exeext) -B$$r/$(HOST_SUBDIR)/prev-gcc/\n \n LTO_EXPORTS = AR=\"$(LTO_AR)\"; export AR; \\\n-\t      RANLIB=\"$(LTO_RANLIB)\"; export RANLIB;\n-LTO_FLAGS_TO_PASS = AR=\"$(LTO_AR)\" RANLIB=\"$(LTO_RANLIB)\"\n+\t      RANLIB=\"$(LTO_RANLIB)\"; export RANLIB; \\\n+\t      NM=\"$(LTO_NM)\"; export NM;\n+LTO_FLAGS_TO_PASS = AR=\"$(LTO_AR)\" RANLIB=\"$(LTO_RANLIB)\" NM=\"$(LTO_NM)\"\n \n do-compare = $(SHELL) $(srcdir)/contrib/compare-lto $$f1 $$f2\n extra-compare = gcc/lto1$(exeext)"}, {"sha": "7ee342fe5fead4dd48f12d184b7a0e28baa25e74", "filename": "config/gcc-plugin.m4", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/config%2Fgcc-plugin.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/config%2Fgcc-plugin.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fgcc-plugin.m4?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -91,14 +91,18 @@ AC_DEFUN([GCC_ENABLE_PLUGINS],\n      # Check that we can build shared objects with -fPIC -shared\n      saved_LDFLAGS=\"$LDFLAGS\"\n      saved_CFLAGS=\"$CFLAGS\"\n+     saved_CXXFLAGS=\"$CXXFLAGS\"\n      case \"${host}\" in\n        *-*-darwin*)\n \t CFLAGS=`echo $CFLAGS | sed s/-mdynamic-no-pic//g`\n \t CFLAGS=\"$CFLAGS -fPIC\"\n+\t CXXFLAGS=`echo $CXXFLAGS | sed s/-mdynamic-no-pic//g`\n+\t CXXFLAGS=\"$CXXFLAGS -fPIC\"\n \t LDFLAGS=\"$LDFLAGS -shared -undefined dynamic_lookup\"\n        ;;\n        *)\n \t CFLAGS=\"$CFLAGS -fPIC\"\n+\t CXXFLAGS=\"$CXXFLAGS -fPIC\"\n \t LDFLAGS=\"$LDFLAGS -fPIC -shared\"\n        ;;\n      esac\n@@ -113,6 +117,7 @@ AC_DEFUN([GCC_ENABLE_PLUGINS],\n      fi\n      LDFLAGS=\"$saved_LDFLAGS\"\n      CFLAGS=\"$saved_CFLAGS\"\n+     CXXFLAGS=\"$saved_CXXFLAGS\"\n \n      # If plugin support had been requested but not available, fail.\n      if test x\"$enable_plugin\" = x\"no\" ; then"}, {"sha": "9c2d7df1bb22d802f2dc838d8c6d85fe414803e8", "filename": "configure", "status": "modified", "additions": 278, "deletions": 4, "changes": 282, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -619,6 +619,7 @@ GFORTRAN_FOR_TARGET\n GCC_FOR_TARGET\n CXX_FOR_TARGET\n CC_FOR_TARGET\n+GDCFLAGS\n READELF\n OTOOL\n OBJDUMP\n@@ -655,6 +656,8 @@ DSYMUTIL_FOR_BUILD\n DLLTOOL_FOR_BUILD\n CXX_FOR_BUILD\n CXXFLAGS_FOR_BUILD\n+CPPFLAGS_FOR_BUILD\n+CPP_FOR_BUILD\n CFLAGS_FOR_BUILD\n CC_FOR_BUILD\n AS_FOR_BUILD\n@@ -697,9 +700,13 @@ extra_mpc_gmp_configure_flags\n extra_mpfr_configure_flags\n gmpinc\n gmplibs\n+PGO_BUILD_LTO_CFLAGS\n+PGO_BUILD_USE_CFLAGS\n+PGO_BUILD_GEN_CFLAGS\n HAVE_CXX11_FOR_BUILD\n HAVE_CXX11\n do_compare\n+GDC\n GNATMAKE\n GNATBIND\n ac_ct_CXX\n@@ -800,6 +807,7 @@ enable_libssp\n enable_libstdcxx\n enable_liboffloadmic\n enable_bootstrap\n+enable_pgo_build\n with_mpc\n with_mpc_include\n with_mpc_lib\n@@ -1540,6 +1548,8 @@ Optional Features:\n   --enable-liboffloadmic=ARG\n                           build liboffloadmic [ARG={no,host,target}]\n   --enable-bootstrap      enable bootstrapping [yes if native build]\n+  --enable-pgo-build[=lto]\n+                          enable the PGO build\n   --disable-isl-version-check\n                           disable check for isl version\n   --enable-lto            enable link time optimization support\n@@ -4090,6 +4100,7 @@ if test \"${build}\" != \"${host}\" ; then\n   AR_FOR_BUILD=${AR_FOR_BUILD-ar}\n   AS_FOR_BUILD=${AS_FOR_BUILD-as}\n   CC_FOR_BUILD=${CC_FOR_BUILD-gcc}\n+  CPP_FOR_BUILD=\"${CPP_FOR_BUILD-\\$(CC_FOR_BUILD) -E}\"\n   CXX_FOR_BUILD=${CXX_FOR_BUILD-g++}\n   DSYMUTIL_FOR_BUILD=${DSYMUTIL_FOR_BUILD-dsymutil}\n   GFORTRAN_FOR_BUILD=${GFORTRAN_FOR_BUILD-gfortran}\n@@ -5622,6 +5633,125 @@ else\n   have_gnat=no\n fi\n \n+\n+\n+if test -n \"$ac_tool_prefix\"; then\n+  # Extract the first word of \"${ac_tool_prefix}gdc\", so it can be a program name with args.\n+set dummy ${ac_tool_prefix}gdc; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_prog_GDC+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$GDC\"; then\n+  ac_cv_prog_GDC=\"$GDC\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_GDC=\"${ac_tool_prefix}gdc\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+GDC=$ac_cv_prog_GDC\n+if test -n \"$GDC\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $GDC\" >&5\n+$as_echo \"$GDC\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+\n+fi\n+if test -z \"$ac_cv_prog_GDC\"; then\n+  ac_ct_GDC=$GDC\n+  # Extract the first word of \"gdc\", so it can be a program name with args.\n+set dummy gdc; ac_word=$2\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n+$as_echo_n \"checking for $ac_word... \" >&6; }\n+if ${ac_cv_prog_ac_ct_GDC+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -n \"$ac_ct_GDC\"; then\n+  ac_cv_prog_ac_ct_GDC=\"$ac_ct_GDC\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_ac_ct_GDC=\"gdc\"\n+    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+  done\n+IFS=$as_save_IFS\n+\n+fi\n+fi\n+ac_ct_GDC=$ac_cv_prog_ac_ct_GDC\n+if test -n \"$ac_ct_GDC\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_GDC\" >&5\n+$as_echo \"$ac_ct_GDC\" >&6; }\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+fi\n+\n+  if test \"x$ac_ct_GDC\" = x; then\n+    GDC=\"no\"\n+  else\n+    case $cross_compiling:$ac_tool_warned in\n+yes:)\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n+$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\n+ac_tool_warned=yes ;;\n+esac\n+    GDC=$ac_ct_GDC\n+  fi\n+else\n+  GDC=\"$ac_cv_prog_GDC\"\n+fi\n+\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the D compiler works\" >&5\n+$as_echo_n \"checking whether the D compiler works... \" >&6; }\n+if ${acx_cv_d_compiler_works+:} false; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  cat >conftest.d <<EOF\n+module conftest; int main() { return 0; }\n+EOF\n+acx_cv_d_compiler_works=no\n+if test \"x$GDC\" != xno; then\n+  errors=`(${GDC} -c conftest.d) 2>&1 || echo failure`\n+  if test x\"$errors\" = x && test -f conftest.$ac_objext; then\n+    acx_cv_d_compiler_works=yes\n+  fi\n+  rm -f conftest.*\n+fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_d_compiler_works\" >&5\n+$as_echo \"$acx_cv_d_compiler_works\" >&6; }\n+if test \"x$GDC\" != xno && test x$acx_cv_d_compiler_works != xno; then\n+  have_gdc=yes\n+else\n+  have_gdc=no\n+fi\n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking how to compare bootstrapped objects\" >&5\n $as_echo_n \"checking how to compare bootstrapped objects... \" >&6; }\n if ${gcc_cv_prog_cmp_skip+:} false; then :\n@@ -7705,6 +7835,91 @@ $as_echo \"#define HAVE_CXX11_FOR_BUILD 1\" >>confdefs.h\n   fi\n fi\n \n+# Check whether --enable-pgo-build was given.\n+if test \"${enable_pgo_build+set}\" = set; then :\n+  enableval=$enable_pgo_build; enable_pgo_build=$enableval\n+else\n+  enable_pgo_build=no\n+fi\n+\n+\n+# Issue errors and warnings for invalid/strange PGO build combinations.\n+case \"$have_compiler:$host:$target:$enable_pgo_build\" in\n+  *:*:*:no) ;;\n+\n+  # Allow the PGO build only if we aren't building a compiler and\n+  # we are in a native configuration.\n+  no:$build:$build:yes | no:$build:$build:lto) ;;\n+\n+  # Disallow the PGO bootstrap if we are building a compiler.\n+  yes:*:*:yes | yes:*:*:lto)\n+    as_fn_error $? \"cannot perform the PGO bootstrap when building a compiler\" \"$LINENO\" 5 ;;\n+\n+  *)\n+    as_fn_error $? \"invalid option for --enable-pgo-build\" \"$LINENO\" 5\n+    ;;\n+esac\n+\n+if test \"$enable_pgo_build\" != \"no\"; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the compiler supports -fprofile-generate\" >&5\n+$as_echo_n \"checking whether the compiler supports -fprofile-generate... \" >&6; }\n+  old_CFLAGS=\"$CFLAGS\"\n+  PGO_BUILD_GEN_CFLAGS=\"-fprofile-generate\"\n+  CFLAGS=\"$CFLAGS $PGO_BUILD_CFLAGS\"\n+\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+int foo;\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+else\n+  PGO_BUILD_GEN_CFLAGS=\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+  CFLAGS=\"$old_CFLAGS\"\n+  if test -n \"$PGO_BUILD_GEN_CFLAGS\"; then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+    PGO_BUILD_USE_CFLAGS=\"-fprofile-use\"\n+  else\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+    as_fn_error $? \"cannot perform the PGO build without -fprofile-generate\" \"$LINENO\" 5\n+  fi\n+\n+  if test \"$enable_pgo_build\" = \"lto\"; then\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the compiler supports -flto=jobserver -ffat-lto-objects\" >&5\n+$as_echo_n \"checking whether the compiler supports -flto=jobserver -ffat-lto-objects... \" >&6; }\n+    old_CFLAGS=\"$CFLAGS\"\n+    PGO_BUILD_LTO_CFLAGS=\"-flto=jobserver -ffat-lto-objects\"\n+    CFLAGS=\"$CFLAGS $PGO_BUILD_LTO_CFLAGS\"\n+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+int foo;\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+else\n+  PGO_BUILD_LTO_CFLAGS=\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+    CFLAGS=\"$old_CFLAGS\"\n+    if test -n \"$PGO_BUILD_LTO_CFLAGS\"; then\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n+$as_echo \"yes\" >&6; }\n+    else\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n+$as_echo \"no\" >&6; }\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: LTO is disabled for the PGO build\" >&5\n+$as_echo \"$as_me: WARNING: LTO is disabled for the PGO build\" >&2;}\n+    fi\n+  fi\n+fi\n+\n+\n+\n+\n # Used for setting $lt_cv_objdir\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for objdir\" >&5\n $as_echo_n \"checking for objdir... \" >&6; }\n@@ -7894,8 +8109,7 @@ if test -d ${srcdir}/gcc && test \"x$have_gmp\" = xno; then\n   # Check for the recommended and required versions of GMP.\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for the correct version of gmp.h\" >&5\n $as_echo_n \"checking for the correct version of gmp.h... \" >&6; }\n-\n-cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n #include \"gmp.h\"\n int\n@@ -8444,8 +8658,20 @@ fi\n # Check whether --enable-host-shared was given.\n if test \"${enable_host_shared+set}\" = set; then :\n   enableval=$enable_host_shared; host_shared=$enableval\n+ case $target in\n+   x86_64-*-darwin* | aarch64-*-darwin*)\n+     if test x$host_shared != xyes ; then\n+       # PIC is the default, and actually cannot be switched off.\n+       echo configure.ac: warning: PIC code is required for the configured target, host-shared setting ignored. 1>&2\n+       host_shared=yes\n+     fi ;;\n+  *) ;;\n+ esac\n else\n-  host_shared=no\n+  case $target in\n+  x86_64-*-darwin* | aarch64-*-darwin*) host_shared=yes ;;\n+  *) host_shared=no ;;\n+ esac\n fi\n \n \n@@ -8664,6 +8890,23 @@ $as_echo \"$as_me: WARNING: GNAT is required to build $language\" >&2;}\n             ;;\n         esac\n \n+        # Disable D if no preexisting GDC is available.\n+        case ${add_this_lang}:${language}:${have_gdc} in\n+          yes:d:no)\n+            # Specifically requested language; tell them.\n+            as_fn_error $? \"GDC is required to build $language\" \"$LINENO\" 5\n+           ;;\n+          all:d:no)\n+            { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: GDC is required to build $language\" >&5\n+$as_echo \"$as_me: WARNING: GDC is required to build $language\" >&2;}\n+            add_this_lang=unsupported\n+            ;;\n+          *:d:no)\n+            # Silently disable.\n+            add_this_lang=unsupported\n+            ;;\n+        esac\n+\n         # Disable jit if -enable-host-shared not specified\n         # but not if building for Mingw. All code in Windows\n         # is position independent code (PIC).\n@@ -8733,7 +8976,7 @@ $as_echo \"$as_me: WARNING: ${language} not supported for this target\" >&2;}\n \t\t  *) stage1_languages=\"${stage1_languages}${language},\" ;;\n \t\tesac\n \t\t# We need to bootstrap any supporting libraries.\n-\t\tbootstrap_target_libs=\"${bootstrap_target_libs}${target_libs},\"\n+\t\tbootstrap_target_libs=`echo \"${bootstrap_target_libs}${target_libs},\" | sed \"s/ /,/g\"`\n \t\t;;\n \t    esac\n \t    ;;\n@@ -8874,6 +9117,16 @@ case ,${enable_languages}, in\n     ;;\n esac\n \n+# If gcc/ is not in the source tree then we'll not be building a\n+# target compiler, assume in that case we don't want to build any\n+# target libraries or tools.\n+#\n+# This was added primarily for the benefit for binutils-gdb who reuse\n+# this configure script, but don't always have target tools available.\n+if test ! -d ${srcdir}/gcc; then\n+   skipdirs=\"${skipdirs} ${target_configdirs}\"\n+fi\n+\n # Remove the entries in $skipdirs and $noconfigdirs from $configdirs,\n # $build_configdirs and $target_configdirs.\n # If we have the source for $noconfigdirs entries, add them to $notsupp.\n@@ -9492,6 +9745,16 @@ if echo \" ${target_configdirs} \" | grep \" libvtv \" > /dev/null 2>&1 &&\n   bootstrap_target_libs=${bootstrap_target_libs}target-libvtv,\n fi\n \n+# If we are building libatomic and the list of enabled languages includes the\n+# D frontend, bootstrap it.\n+if echo \" ${target_configdirs} \" | grep \" libatomic \" > /dev/null 2>&1; then\n+  case ,${enable_languages}, in\n+    *,d,*)\n+      bootstrap_target_libs=${bootstrap_target_libs}target-libatomic,\n+      ;;\n+  esac\n+fi\n+\n # Determine whether gdb needs tk/tcl or not.\n # Use 'maybe' since enable_gdbtk might be true even if tk isn't available\n # and in that case we want gdb to be built without tk.  Ugh!\n@@ -9624,6 +9887,12 @@ extrasub_target=\"$extrasub_target\n /^@unless /d\n /^@endunless /d\"\n \n+if test \"$enable_pgo_build\" != \"no\"; then\n+  extrasub_build=\"$extrasub_build\n+/^@if pgo-build\\$/d\n+/^@endif pgo-build\\$/d\"\n+fi\n+\n # Create the serialization dependencies.  This uses a temporary file.\n \n # Check whether --enable-serial-configure was given.\n@@ -9989,6 +10258,7 @@ esac\n # our build compiler if desired.\n if test x\"${build}\" = x\"${host}\" ; then\n   CFLAGS_FOR_BUILD=${CFLAGS_FOR_BUILD-${CFLAGS}}\n+  CPPFLAGS_FOR_BUILD=${CPPFLAGS_FOR_BUILD-${CPPFLAGS}}\n   CXXFLAGS_FOR_BUILD=${CXXFLAGS_FOR_BUILD-${CXXFLAGS}}\n   LDFLAGS_FOR_BUILD=${LDFLAGS_FOR_BUILD-${LDFLAGS}}\n fi\n@@ -10069,6 +10339,8 @@ done\n \n \n \n+\n+\n # Generate default definitions for YACC, M4, LEX and other programs that run\n # on the build machine.  These are used if the Makefile can't locate these\n # programs in objdir.\n@@ -12586,6 +12858,8 @@ fi\n \n \n \n+\n+\n # Target tools.\n \n # Check whether --with-build-time-tools was given."}, {"sha": "68cc5cc31fe91d6abf497bf5aa981ca1749c1662", "filename": "configure.ac", "status": "modified", "additions": 123, "deletions": 2, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -1334,6 +1334,7 @@ if test \"${build}\" != \"${host}\" ; then\n   AR_FOR_BUILD=${AR_FOR_BUILD-ar}\n   AS_FOR_BUILD=${AS_FOR_BUILD-as}\n   CC_FOR_BUILD=${CC_FOR_BUILD-gcc}\n+  CPP_FOR_BUILD=\"${CPP_FOR_BUILD-\\$(CC_FOR_BUILD) -E}\"\n   CXX_FOR_BUILD=${CXX_FOR_BUILD-g++}\n   DSYMUTIL_FOR_BUILD=${DSYMUTIL_FOR_BUILD-dsymutil}\n   GFORTRAN_FOR_BUILD=${GFORTRAN_FOR_BUILD-gfortran}\n@@ -1405,6 +1406,7 @@ int main() {}])],\n fi\n \n ACX_PROG_GNAT\n+ACX_PROG_GDC\n ACX_PROG_CMP_IGNORE_INITIAL\n \n AC_ARG_ENABLE([bootstrap],\n@@ -1463,6 +1465,65 @@ elif test \"$have_compiler\" = yes; then\n   fi\n fi\n \n+AC_ARG_ENABLE([pgo-build],\n+[AS_HELP_STRING([--enable-pgo-build[[=lto]]],\n+\t\t[enable the PGO build])],\n+[enable_pgo_build=$enableval],\n+[enable_pgo_build=no])\n+\n+# Issue errors and warnings for invalid/strange PGO build combinations.\n+case \"$have_compiler:$host:$target:$enable_pgo_build\" in\n+  *:*:*:no) ;;\n+\n+  # Allow the PGO build only if we aren't building a compiler and\n+  # we are in a native configuration.\n+  no:$build:$build:yes | no:$build:$build:lto) ;;\n+\n+  # Disallow the PGO bootstrap if we are building a compiler.\n+  yes:*:*:yes | yes:*:*:lto)\n+    AC_MSG_ERROR([cannot perform the PGO bootstrap when building a compiler]) ;;\n+\n+  *)\n+    AC_MSG_ERROR([invalid option for --enable-pgo-build])\n+    ;;\n+esac\n+\n+if test \"$enable_pgo_build\" != \"no\"; then\n+  AC_MSG_CHECKING([whether the compiler supports -fprofile-generate])\n+  old_CFLAGS=\"$CFLAGS\"\n+  PGO_BUILD_GEN_CFLAGS=\"-fprofile-generate\"\n+  CFLAGS=\"$CFLAGS $PGO_BUILD_CFLAGS\"\n+  AC_COMPILE_IFELSE([AC_LANG_SOURCE([int foo;])],,\n+\t\t    [PGO_BUILD_GEN_CFLAGS=])\n+  CFLAGS=\"$old_CFLAGS\"\n+  if test -n \"$PGO_BUILD_GEN_CFLAGS\"; then\n+    AC_MSG_RESULT([yes])\n+    PGO_BUILD_USE_CFLAGS=\"-fprofile-use\"\n+  else\n+    AC_MSG_RESULT([no])\n+    AC_MSG_ERROR([cannot perform the PGO build without -fprofile-generate])\n+  fi\n+\n+  if test \"$enable_pgo_build\" = \"lto\"; then\n+    AC_MSG_CHECKING([whether the compiler supports -flto=jobserver -ffat-lto-objects])\n+    old_CFLAGS=\"$CFLAGS\"\n+    PGO_BUILD_LTO_CFLAGS=\"-flto=jobserver -ffat-lto-objects\"\n+    CFLAGS=\"$CFLAGS $PGO_BUILD_LTO_CFLAGS\"\n+    AC_COMPILE_IFELSE([AC_LANG_SOURCE([int foo;])],,\n+\t\t      [PGO_BUILD_LTO_CFLAGS=])\n+    CFLAGS=\"$old_CFLAGS\"\n+    if test -n \"$PGO_BUILD_LTO_CFLAGS\"; then\n+      AC_MSG_RESULT([yes])\n+    else\n+      AC_MSG_RESULT([no])\n+      AC_MSG_WARN([LTO is disabled for the PGO build])\n+    fi\n+  fi\n+fi\n+AC_SUBST(PGO_BUILD_GEN_CFLAGS)\n+AC_SUBST(PGO_BUILD_USE_CFLAGS)\n+AC_SUBST(PGO_BUILD_LTO_CFLAGS)\n+\n # Used for setting $lt_cv_objdir\n _LT_CHECK_OBJDIR\n \n@@ -1858,7 +1919,20 @@ AC_SUBST(extra_linker_plugin_flags)\n AC_ARG_ENABLE(host-shared,\n [AS_HELP_STRING([--enable-host-shared],\n \t\t[build host code as shared libraries])],\n-[host_shared=$enableval], [host_shared=no])\n+[host_shared=$enableval\n+ case $target in\n+   x86_64-*-darwin* | aarch64-*-darwin*)\n+     if test x$host_shared != xyes ; then\n+       # PIC is the default, and actually cannot be switched off.\n+       echo configure.ac: warning: PIC code is required for the configured target, host-shared setting ignored. 1>&2\n+       host_shared=yes\n+     fi ;;\n+  *) ;;\n+ esac],\n+[case $target in\n+  x86_64-*-darwin* | aarch64-*-darwin*) host_shared=yes ;;\n+  *) host_shared=no ;;\n+ esac])\n AC_SUBST(host_shared)\n \n # By default, C and C++ are the only stage 1 languages.\n@@ -2073,6 +2147,22 @@ if test -d ${srcdir}/gcc; then\n             ;;\n         esac\n \n+        # Disable D if no preexisting GDC is available.\n+        case ${add_this_lang}:${language}:${have_gdc} in\n+          yes:d:no)\n+            # Specifically requested language; tell them.\n+            AC_MSG_ERROR([GDC is required to build $language])\n+           ;;\n+          all:d:no)\n+            AC_MSG_WARN([GDC is required to build $language])\n+            add_this_lang=unsupported\n+            ;;\n+          *:d:no)\n+            # Silently disable.\n+            add_this_lang=unsupported\n+            ;;\n+        esac\n+\n         # Disable jit if -enable-host-shared not specified\n         # but not if building for Mingw. All code in Windows\n         # is position independent code (PIC).\n@@ -2140,7 +2230,7 @@ directories, to avoid imposing the performance cost of\n \t\t  *) stage1_languages=\"${stage1_languages}${language},\" ;;\n \t\tesac\n \t\t# We need to bootstrap any supporting libraries.\n-\t\tbootstrap_target_libs=\"${bootstrap_target_libs}${target_libs},\"\n+\t\tbootstrap_target_libs=`echo \"${bootstrap_target_libs}${target_libs},\" | sed \"s/ /,/g\"`\n \t\t;;\n \t    esac\n \t    ;;\n@@ -2272,6 +2362,16 @@ case ,${enable_languages}, in\n     ;;\n esac\n \n+# If gcc/ is not in the source tree then we'll not be building a\n+# target compiler, assume in that case we don't want to build any\n+# target libraries or tools.\n+#\n+# This was added primarily for the benefit for binutils-gdb who reuse\n+# this configure script, but don't always have target tools available.\n+if test ! -d ${srcdir}/gcc; then\n+   skipdirs=\"${skipdirs} ${target_configdirs}\"\n+fi\n+\n # Remove the entries in $skipdirs and $noconfigdirs from $configdirs,\n # $build_configdirs and $target_configdirs.\n # If we have the source for $noconfigdirs entries, add them to $notsupp.\n@@ -2813,6 +2913,16 @@ if echo \" ${target_configdirs} \" | grep \" libvtv \" > /dev/null 2>&1 &&\n   bootstrap_target_libs=${bootstrap_target_libs}target-libvtv,\n fi\n \n+# If we are building libatomic and the list of enabled languages includes the\n+# D frontend, bootstrap it.\n+if echo \" ${target_configdirs} \" | grep \" libatomic \" > /dev/null 2>&1; then\n+  case ,${enable_languages}, in\n+    *,d,*)\n+      bootstrap_target_libs=${bootstrap_target_libs}target-libatomic,\n+      ;;\n+  esac\n+fi\n+\n # Determine whether gdb needs tk/tcl or not.\n # Use 'maybe' since enable_gdbtk might be true even if tk isn't available\n # and in that case we want gdb to be built without tk.  Ugh!\n@@ -2945,6 +3055,12 @@ extrasub_target=\"$extrasub_target\n /^@unless /d\n /^@endunless /d\"\n \n+if test \"$enable_pgo_build\" != \"no\"; then\n+  extrasub_build=\"$extrasub_build\n+/^@if pgo-build\\$/d\n+/^@endif pgo-build\\$/d\"\n+fi\n+\n # Create the serialization dependencies.  This uses a temporary file.\n \n AC_ARG_ENABLE([serial-configure],\n@@ -3313,6 +3429,7 @@ esac\n # our build compiler if desired.\n if test x\"${build}\" = x\"${host}\" ; then\n   CFLAGS_FOR_BUILD=${CFLAGS_FOR_BUILD-${CFLAGS}}\n+  CPPFLAGS_FOR_BUILD=${CPPFLAGS_FOR_BUILD-${CPPFLAGS}}\n   CXXFLAGS_FOR_BUILD=${CXXFLAGS_FOR_BUILD-${CXXFLAGS}}\n   LDFLAGS_FOR_BUILD=${LDFLAGS_FOR_BUILD-${LDFLAGS}}\n fi\n@@ -3379,6 +3496,8 @@ AC_SUBST(AR_FOR_BUILD)\n AC_SUBST(AS_FOR_BUILD)\n AC_SUBST(CC_FOR_BUILD)\n AC_SUBST(CFLAGS_FOR_BUILD)\n+AC_SUBST(CPP_FOR_BUILD)\n+AC_SUBST(CPPFLAGS_FOR_BUILD)\n AC_SUBST(CXXFLAGS_FOR_BUILD)\n AC_SUBST(CXX_FOR_BUILD)\n AC_SUBST(DLLTOOL_FOR_BUILD)\n@@ -3478,6 +3597,8 @@ AC_SUBST(CC)\n AC_SUBST(CXX)\n AC_SUBST(CFLAGS)\n AC_SUBST(CXXFLAGS)\n+AC_SUBST(GDC)\n+AC_SUBST(GDCFLAGS)\n \n # Target tools.\n AC_ARG_WITH([build-time-tools], "}, {"sha": "89ca7fd681e5e46c15d27c6d194198bea75b1d9f", "filename": "contrib/ChangeLog", "status": "modified", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -1,3 +1,87 @@\n+2022-01-13  Martin Liska  <mliska@suse.cz>\n+\n+\t* git-backport.py: Simplify the script as pre-auto-ChangeLog era\n+\tis 14 months old.\n+\n+2022-01-11  Martin Liska  <mliska@suse.cz>\n+\n+\t* check-MAINTAINERS.py: Use sys.argv[1] as path to MAINTAINERS.\n+\n+2022-01-11  Martin Liska  <mliska@suse.cz>\n+\n+\t* check-MAINTAINERS.py: New file.\n+\n+2022-01-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* update-copyright.py: Add University of Illinois as external author.\n+\n+2021-12-16  Xionghu Luo  <luoxhu@linux.ibm.com>\n+\n+\t* analyze_brprob_spec.py: Add verbose argument.\n+\n+2021-12-06  Martin Liska  <mliska@suse.cz>\n+\n+\t* filter-clang-warnings.py: Filter out one warning.\n+\n+2021-11-24  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* download_prerequisites: Update to gmp-6.2.1, mpfr-4.1.0,\n+\tmpc-1.2.1 and isl-0.24.\n+\t* prerequisites.md5: Update hash.\n+\t* prerequisites.sha512: Likewise.\n+\n+2021-11-23  Martin Liska  <mliska@suse.cz>\n+\n+\t* filter-clang-warnings.py: Filter -Wc++20-extensions as it does\n+\tnot respect proper attribute detection.\n+\n+2021-11-23  Martin Liska  <mliska@suse.cz>\n+\n+\t* check-params-in-docs.py: Support @itemx in param documentation\n+\tand support multi-line documentation for parameters.\n+\n+2021-11-08  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* update-copyright.py (class BadYear): Derive from 'Exception'.\n+\n+2021-11-05  Bernhard Reutner-Fischer  <aldot@gcc.gnu.org>\n+\n+\t* testsuite-management/validate_failures.py: 2to3\n+\n+2021-11-04  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_check_commit.py: Add -v option.\n+\t* gcc-changelog/git_commit.py: Print verbose diff for wrong\n+\tfilename.\n+\n+2021-11-02  Martin Liska  <mliska@suse.cz>\n+\n+\t* check-internal-format-escaping.py: Fix flake8 errors.\n+\n+2021-11-01  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* unicode/utf8-dump.py: New file.\n+\n+2021-10-20  H.J. Lu  <hjl.tools@gmail.com>\n+\n+\t* gcc-changelog/git_commit.py (ignored_prefixes): Add libffi/.\n+\n+2021-10-18  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Update location of\n+\t'bad parentheses wrapping'.\n+\t* gcc-changelog/test_email.py: Test it.\n+\n+2021-10-02  Martin Liska  <mliska@suse.cz>\n+\n+\t* filter-clang-warnings.py: Filter out -Wtautological-compare\n+\tfor the file.\n+\n+2021-09-20  Richard Biener  <rguenther@suse.de>\n+\n+\t* config-list.mk: --enable-obsolete for hppa2.0-hpux10.1 and\n+\thppa2.0-hpux11.9.\n+\n 2021-09-15  Martin Liska  <mliska@suse.cz>\n \n \t* gcc-changelog/git_commit.py: Add FIXME note."}, {"sha": "063bd11d99c0c4057eefafbbd070e7a5371a29fd", "filename": "contrib/analyze_brprob_spec.py", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Fanalyze_brprob_spec.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Fanalyze_brprob_spec.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fanalyze_brprob_spec.py?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -31,6 +31,7 @@\n     choices = ['branches', 'branch-hitrate', 'hitrate', 'coverage', 'name'],\n     default = 'branches')\n parser.add_argument('-d', '--def-file', help = 'path to predict.def')\n+parser.add_argument('-v', '--verbose', action = 'store_true', help = 'Print verbose informations')\n \n args = parser.parse_args()\n "}, {"sha": "08fc8e48fd5210fee409884f95d6e66766178768", "filename": "contrib/check-MAINTAINERS.py", "status": "added", "additions": 113, "deletions": 0, "changes": 113, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Fcheck-MAINTAINERS.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Fcheck-MAINTAINERS.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcheck-MAINTAINERS.py?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -0,0 +1,113 @@\n+#!/usr/bin/env python3\n+\n+# Copyright (C) 2022 Free Software Foundation, Inc.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+#\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING.  If not, write to\n+# the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+# Boston, MA 02110-1301, USA.\n+\n+# Check that names in the file are sorted\n+# alphabetically by surname.\n+\n+import locale\n+import sys\n+from difflib import ndiff\n+from itertools import dropwhile, takewhile\n+\n+import unidecode\n+\n+locale.setlocale(locale.LC_ALL, 'en_US.utf8')\n+\n+exit_code = 0\n+\n+if len(sys.argv) != 2:\n+    print('Usage: ./check-MAINTAINERS.py path-to/MAINTAINERS')\n+    sys.exit(1)\n+\n+\n+def sort_by_surname(line):\n+    name = line.split('\\t')[0]\n+    parts = name.split()\n+    surname = parts[-1]\n+\n+    # Special-case some names\n+    if name == 'Stefan Schulze Frielinghaus':\n+        surname = parts[1]\n+    elif name == 'Kris Van Hees':\n+        surname = parts[1]\n+    elif surname == \"d'Humieres\":\n+        surname = 'Humieres'\n+\n+    # Remove accents\n+    return (unidecode.unidecode(surname), line)\n+\n+\n+def has_tab(line):\n+    return '\\t' in line\n+\n+\n+def is_empty(line):\n+    return line\n+\n+\n+def check_group(name, lines):\n+    global exit_code\n+\n+    for line in lines:\n+        if line.startswith(' '):\n+            print(f'Line should not start with space: \"{line}\"')\n+            exit_code = 2\n+\n+    lines = [line + '\\n' for line in lines]\n+    sorted_lines = sorted(lines, key=sort_by_surname)\n+    if lines != sorted_lines:\n+        exit_code = 1\n+        diff = ndiff(lines, sorted_lines)\n+        print(f'Wrong order for {name}:\\n')\n+        print(''.join(diff))\n+    else:\n+        print(f'{name} are fine!')\n+\n+\n+lines = open(sys.argv[1]).read().splitlines()\n+\n+needle = 'Global Reviewers'\n+lines = list(dropwhile(lambda x: x.strip() != needle, lines))\n+lines = lines[2:]\n+\n+chunk = list(takewhile(is_empty, lines))\n+check_group(needle, chunk)\n+\n+needle = 'Write After Approval'\n+lines = list(dropwhile(lambda x: needle not in x, lines))\n+lines = lines[2:]\n+\n+chunk = list(takewhile(is_empty, lines))\n+check_group(needle, chunk)\n+\n+needle = 'Bug database only accounts'\n+lines = list(dropwhile(lambda x: needle not in x, lines))\n+lines = lines[2:]\n+\n+chunk = list(takewhile(is_empty, lines))\n+check_group(needle, chunk)\n+\n+needle = 'Contributing under the DCO'\n+lines = list(dropwhile(lambda x: needle not in x, lines))[1:]\n+lines = list(dropwhile(lambda x: not has_tab(x), lines))\n+check_group(needle, lines)\n+\n+sys.exit(exit_code)"}, {"sha": "8bd54d88c74b80365843c950def94a4b08c00065", "filename": "contrib/check-internal-format-escaping.py", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Fcheck-internal-format-escaping.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Fcheck-internal-format-escaping.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcheck-internal-format-escaping.py?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -66,7 +66,7 @@ def lint_gcc_internal_format(msg: polib.POEntry):\n \n     def outside_quotes(m: Match[str]):\n         before = msgid[:m.start(0)]\n-        return before.count(\"%<\") == before.count(\"%>\")\n+        return before.count('%<') == before.count('%>')\n \n     def lint_matching_placeholders():\n         \"\"\"\n@@ -127,7 +127,7 @@ def lint_space_before_quote():\n         to separate the words.\n         \"\"\"\n \n-        for match in re.finditer(\"(.?[a-zA-Z0-9])%<\", msgid):\n+        for match in re.finditer('(.?[a-zA-Z0-9])%<', msgid):\n             if match.group(1) != '%s':\n                 warn(msg,\n                      'no-space-before-quote',\n@@ -143,7 +143,7 @@ def lint_underscore_outside_quotes():\n         * static_cast and the like (which are legitimate)\n         \"\"\"\n \n-        for match in re.finditer(\"_\", msgid):\n+        for match in re.finditer('_', msgid):\n             if outside_quotes(match):\n                 warn(msg,\n                      'underscore-outside-quotes',\n@@ -163,13 +163,13 @@ def lint_may_not():\n                  'the term \"may not\" is ambiguous')\n \n     def lint_unbalanced_quotes():\n-        if msgid.count(\"%<\") != msgid.count(\"%>\"):\n+        if msgid.count('%<') != msgid.count('%>'):\n             warn(msg,\n                  'unbalanced-quotes',\n                  'unbalanced %< and %> quotes')\n \n         if msg.translated():\n-            if msg.msgstr.count(\"%<\") != msg.msgstr.count(\"%>\"):\n+            if msg.msgstr.count('%<') != msg.msgstr.count('%>'):\n                 warn(msg,\n                      'unbalanced-quotes',\n                      'unbalanced %< and %> quotes')"}, {"sha": "d57055088b70464b2892398feb1cc79e48598698", "filename": "contrib/check-params-in-docs.py", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Fcheck-params-in-docs.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Fcheck-params-in-docs.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcheck-params-in-docs.py?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -47,7 +47,7 @@ def get_param_tuple(line):\n params = {}\n \n for line in open(args.params_output).readlines():\n-    if line.startswith('  '):\n+    if line.startswith(' ' * 2) and not line.startswith(' ' * 8):\n         r = get_param_tuple(line)\n         params[r[0]] = r[1]\n \n@@ -57,15 +57,20 @@ def get_param_tuple(line):\n texi = takewhile(lambda x: '@node Instrumentation Options' not in x, texi)\n texi = list(texi)[1:]\n \n-token = '@item '\n-texi = [x[len(token):] for x in texi if x.startswith(token)]\n+texi_params = []\n+for line in texi:\n+    for token in ('@item ', '@itemx '):\n+        if line.startswith(token):\n+            texi_params.append(line[len(token):])\n+            break\n+\n # skip digits\n-texi = [x for x in texi if not x[0].isdigit()]\n+texi_params = [x for x in texi_params if not x[0].isdigit()]\n # skip aarch64 params\n-texi = [x for x in texi if not x.startswith('aarch64')]\n-sorted_texi = sorted(texi)\n+texi_params = [x for x in texi_params if not x.startswith('aarch64')]\n+sorted_params = sorted(texi_params)\n \n-texi_set = set(texi) - ignored\n+texi_set = set(texi_params) - ignored\n params_set = set(params.keys()) - ignored\n \n success = True\n@@ -84,7 +89,4 @@ def get_param_tuple(line):\n         print()\n     success = False\n \n-if texi != sorted_texi:\n-    print('WARNING: not sorted alphabetically!')\n-\n sys.exit(0 if success else 1)"}, {"sha": "3e1d132186142e8bd75bcce84c31017b37366823", "filename": "contrib/config-list.mk", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Fconfig-list.mk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Fconfig-list.mk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fconfig-list.mk?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -45,8 +45,9 @@ LIST = aarch64-elf aarch64-linux-gnu aarch64-rtems \\\n   epiphany-elf epiphany-elfOPT-with-stack-offset=16 fido-elf \\\n   fr30-elf frv-elf frv-linux ft32-elf h8300-elf hppa-linux-gnu \\\n   hppa-linux-gnuOPT-enable-sjlj-exceptions=yes hppa64-linux-gnu \\\n-  hppa2.0-hpux10.1 hppa64-hpux11.3 \\\n-  hppa64-hpux11.0OPT-enable-sjlj-exceptions=yes hppa2.0-hpux11.9 \\\n+  hppa2.0-hpux10.1OPT-enable-obsolete hppa64-hpux11.3 \\\n+  hppa64-hpux11.0OPT-enable-sjlj-exceptions=yes \\\n+  hppa2.0-hpux11.9OPT-enable-obsolete \\\n   i686-pc-linux-gnu i686-apple-darwin i686-apple-darwin9 i686-apple-darwin10 \\\n   i486-freebsd4 i686-freebsd6 i686-kfreebsd-gnu \\\n   i686-netbsdelf9 \\"}, {"sha": "5c90d889bc652d42db39fe68a7d46c783b098c39", "filename": "contrib/download_prerequisites", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Fdownload_prerequisites", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Fdownload_prerequisites", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fdownload_prerequisites?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -5,7 +5,7 @@\n # Run this from the top level of the GCC source tree and the GCC build will do\n # the right thing.  Run it with the `--help` option for more information.\n #\n-# (C) 2010-2016 Free Software Foundation\n+# (C) 2010-2021 Free Software Foundation\n #\n # This program is free software: you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -27,10 +27,10 @@ version='(unversioned)'\n # remember to also update the files `contrib/prerequisites.sha512` and\n # `contrib/prerequisites.md5` with the new checksums.\n \n-gmp='gmp-6.1.0.tar.bz2'\n-mpfr='mpfr-3.1.6.tar.bz2'\n-mpc='mpc-1.0.3.tar.gz'\n-isl='isl-0.18.tar.bz2'\n+gmp='gmp-6.2.1.tar.bz2'\n+mpfr='mpfr-4.1.0.tar.bz2'\n+mpc='mpc-1.2.1.tar.gz'\n+isl='isl-0.24.tar.bz2'\n \n base_url='http://gcc.gnu.org/pub/gcc/infrastructure/'\n \n@@ -77,7 +77,7 @@ The following options are available:\n \"\n \n versiontext=\"${program} ${version}\n-Copyright (C) 2016 Free Software Foundation, Inc.\n+Copyright (C) 2016-2021 Free Software Foundation, Inc.\n This is free software; see the source for copying conditions.  There is NO\n warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n "}, {"sha": "5b82dadedb3d6c983ba2fa75b4e81e440b3a5056", "filename": "contrib/filter-clang-warnings.py", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Ffilter-clang-warnings.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Ffilter-clang-warnings.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ffilter-clang-warnings.py?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -38,7 +38,7 @@ def skip_warning(filename, message):\n                  'when in C++ mode, this behavior is deprecated',\n                  '-Wignored-attributes', '-Wgnu-zero-variadic-macro-arguments',\n                  '-Wformat-security', '-Wundefined-internal',\n-                 '-Wunknown-warning-option'],\n+                 '-Wunknown-warning-option', '-Wc++20-extensions'],\n             'insn-modes.c': ['-Wshift-count-overflow'],\n             'insn-emit.c': ['-Wtautological-compare'],\n             'insn-attrtab.c': ['-Wparentheses-equality'],\n@@ -47,7 +47,9 @@ def skip_warning(filename, message):\n             'i386.md': ['-Wparentheses-equality', '-Wtautological-compare',\n                         '-Wtautological-overlap-compare'],\n             'sse.md': ['-Wparentheses-equality', '-Wtautological-compare'],\n+            'mmx.md': ['-Wtautological-compare'],\n             'genautomata.c': ['-Wstring-plus-int'],\n+            'fold-const-call.c': ['-Wreturn-type'],\n             'gfortran.texi': [''],\n             'libtool': ['']\n     }"}, {"sha": "d6aff3cef918d295072f82c372b53aef7b0a124d", "filename": "contrib/gcc-changelog/git_check_commit.py", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Fgcc-changelog%2Fgit_check_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Fgcc-changelog%2Fgit_check_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_check_commit.py?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -29,6 +29,8 @@\n                     help='Path to git repository')\n parser.add_argument('-p', '--print-changelog', action='store_true',\n                     help='Print final changelog entires')\n+parser.add_argument('-v', '--verbose', action='store_true',\n+                    help='Print verbose information')\n args = parser.parse_args()\n \n retval = 0\n@@ -41,6 +43,8 @@\n     else:\n         for error in git_commit.errors:\n             print('ERR: %s' % error)\n+            if args.verbose and error.details:\n+                print(error.details)\n         retval = 1\n \n exit(retval)"}, {"sha": "27a1d59b211f47aa595f5d5292abb96bc35fa1c2", "filename": "contrib/gcc-changelog/git_commit.py", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Fgcc-changelog%2Fgit_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Fgcc-changelog%2Fgit_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_commit.py?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -134,6 +134,7 @@\n     'gcc/go/gofrontend/',\n     'gcc/testsuite/gdc.test/',\n     'gcc/testsuite/go.test/test/',\n+    'libffi/',\n     'libgo/',\n     'libphobos/libdruntime/',\n     'libphobos/src/',\n@@ -196,9 +197,10 @@ def decode_path(path):\n \n \n class Error:\n-    def __init__(self, message, line=None):\n+    def __init__(self, message, line=None, details=None):\n         self.message = message\n         self.line = line\n+        self.details = details\n \n     def __repr__(self):\n         s = self.message\n@@ -217,7 +219,7 @@ def __init__(self, folder, authors, prs):\n         self.lines = []\n         self.files = []\n         self.file_patterns = []\n-        self.opened_parentheses = 0\n+        self.parentheses_stack = []\n \n     def parse_file_names(self):\n         # Whether the content currently processed is between a star prefix the\n@@ -551,7 +553,7 @@ def parse_changelog(self):\n                     m = star_prefix_regex.match(line)\n                     if m:\n                         if (len(m.group('spaces')) != 1 and\n-                                last_entry.opened_parentheses == 0):\n+                                not last_entry.parentheses_stack):\n                             msg = 'one space should follow asterisk'\n                             self.errors.append(Error(msg, line))\n                         else:\n@@ -576,13 +578,13 @@ def parse_changelog(self):\n     def process_parentheses(self, last_entry, line):\n         for c in line:\n             if c == '(':\n-                last_entry.opened_parentheses += 1\n+                last_entry.parentheses_stack.append(line)\n             elif c == ')':\n-                if last_entry.opened_parentheses == 0:\n+                if not last_entry.parentheses_stack:\n                     msg = 'bad wrapping of parenthesis'\n                     self.errors.append(Error(msg, line))\n                 else:\n-                    last_entry.opened_parentheses -= 1\n+                    del last_entry.parentheses_stack[-1]\n \n     def parse_file_names(self):\n         for entry in self.changelog_entries:\n@@ -608,9 +610,9 @@ def check_for_empty_description(self):\n \n     def check_for_broken_parentheses(self):\n         for entry in self.changelog_entries:\n-            if entry.opened_parentheses != 0:\n+            if entry.parentheses_stack:\n                 msg = 'bad parentheses wrapping'\n-                self.errors.append(Error(msg, entry.lines[0]))\n+                self.errors.append(Error(msg, entry.parentheses_stack[-1]))\n \n     def get_file_changelog_location(self, changelog_file):\n         for file in self.info.modified_files:\n@@ -686,9 +688,11 @@ def check_mentioned_files(self):\n         for file in sorted(mentioned_files - changed_files):\n             msg = 'unchanged file mentioned in a ChangeLog'\n             candidates = difflib.get_close_matches(file, changed_files, 1)\n+            details = None\n             if candidates:\n                 msg += f' (did you mean \"{candidates[0]}\"?)'\n-            self.errors.append(Error(msg, file))\n+                details = '\\n'.join(difflib.Differ().compare([file], [candidates[0]])).rstrip()\n+            self.errors.append(Error(msg, file, details))\n         for file in sorted(changed_files - mentioned_files):\n             if not self.in_ignored_location(file):\n                 if file in self.new_files:"}, {"sha": "a4796dbbe94fbc0d51fd75d5e1fcc7e99ae3340f", "filename": "contrib/gcc-changelog/test_email.py", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Fgcc-changelog%2Ftest_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Fgcc-changelog%2Ftest_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_email.py?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -415,6 +415,7 @@ def test_multiline_parentheses(self):\n     def test_multiline_bad_parentheses(self):\n         email = self.from_patch_glob('0002-Wrong-macro-changelog.patch')\n         assert email.errors[0].message == 'bad parentheses wrapping'\n+        assert email.errors[0].line == '\t* config/i386/i386.md (*fix_trunc<mode>_i387_1,'\n \n     def test_changelog_removal(self):\n         email = self.from_patch_glob('0001-ChangeLog-removal.patch')"}, {"sha": "bc2907a14ede7798fdc136e8dee2912bee062f77", "filename": "contrib/git-backport.py", "status": "modified", "additions": 2, "deletions": 37, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Fgit-backport.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Fgit-backport.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgit-backport.py?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -23,43 +23,8 @@\n import subprocess\n \n if __name__ == '__main__':\n-    parser = argparse.ArgumentParser(description='Backport a git revision and '\n-                                     'stash all ChangeLog files.')\n+    parser = argparse.ArgumentParser(description='Backport a git revision.')\n     parser.add_argument('revision', help='Revision')\n     args = parser.parse_args()\n \n-    r = subprocess.run('git cherry-pick -x %s' % args.revision, shell=True)\n-    if r.returncode == 0:\n-        cmd = 'git show --name-only --pretty=\"\" -- \"*ChangeLog\"'\n-        changelogs = subprocess.check_output(cmd, shell=True, encoding='utf8')\n-        changelogs = changelogs.strip()\n-        if changelogs:\n-            for changelog in changelogs.split('\\n'):\n-                subprocess.check_output('git checkout HEAD~ %s' % changelog,\n-                                        shell=True)\n-        subprocess.check_output('git commit --amend --no-edit', shell=True)\n-    else:\n-        # 1) remove all ChangeLog files from conflicts\n-        out = subprocess.check_output('git diff --name-only --diff-filter=U',\n-                                      shell=True,\n-                                      encoding='utf8')\n-        conflicts = out.strip().split('\\n')\n-        changelogs = [c for c in conflicts if c.endswith('ChangeLog')]\n-        if changelogs:\n-            cmd = 'git checkout --theirs %s' % ' '.join(changelogs)\n-            subprocess.check_output(cmd, shell=True)\n-        # 2) remove all ChangeLog files from index\n-        cmd = 'git diff --name-only --diff-filter=M HEAD'\n-        out = subprocess.check_output(cmd, shell=True, encoding='utf8')\n-        out = out.strip().split('\\n')\n-        modified = [c for c in out if c.endswith('ChangeLog')]\n-        for m in modified:\n-            subprocess.check_output('git reset %s' % m, shell=True)\n-            subprocess.check_output('git checkout %s' % m, shell=True)\n-\n-        # try to continue\n-        if len(conflicts) == len(changelogs):\n-            cmd = 'git -c core.editor=true cherry-pick --continue'\n-            subprocess.check_output(cmd, shell=True)\n-        else:\n-            print('Please resolve all remaining file conflicts.')\n+    subprocess.run('git cherry-pick -x %s' % args.revision, shell=True)"}, {"sha": "226c158fdaaa7f3b306ab71bca1378c318779046", "filename": "contrib/maintainers-verify.sh", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cce6b8919ce16acd37a7a203049a52925a7e295/contrib%2Fmaintainers-verify.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cce6b8919ce16acd37a7a203049a52925a7e295/contrib%2Fmaintainers-verify.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fmaintainers-verify.sh?ref=2cce6b8919ce16acd37a7a203049a52925a7e295", "patch": "@@ -1,45 +0,0 @@\n-#!/bin/sh\n-\n-# Copyright (C) 2018 Free Software Foundation, Inc.\n-#\n-# This file is part of GCC.\n-#\n-# GCC is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 3, or (at your option)\n-# any later version.\n-#\n-# GCC is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with GCC; see the file COPYING.  If not, write to\n-# the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n-# Boston, MA 02110-1301, USA.\n-\n-if [ \"$1\" != \"\" ]; then\n-    f=\"$1\"\n-else\n-    f=./MAINTAINERS\n-fi\n-\n-grep @ $f \\\n-    | sed 's/[\\t][\\t]*/\\t/g' \\\n-    | awk -F '\\t' \\\n-\t  \"\n-{\n-  if (NF == 2) {\n-    name=\\$1\n-    email=\\$2\n-    if (names[name] == 1) {\n-        printf \\\"Redundant in write approval: %s\\n\\\", name\n-    }\n-  } else if (NF == 3 ) {\n-    name=\\$2\n-    email=\\$3\n-    names[name] = 1\n-  }\n-}\n-\""}, {"sha": "a20f986c2e05caab1480c2fbfd0cf0469c451ff5", "filename": "contrib/prerequisites.md5", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Fprerequisites.md5", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Fprerequisites.md5", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fprerequisites.md5?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -1,4 +1,4 @@\n-86ee6e54ebfc4a90b643a65e402c4048  gmp-6.1.0.tar.bz2\n-320c28198def956aeacdb240b46b8969  mpfr-3.1.6.tar.bz2\n-d6a1d5f8ddea3abd2cc3e98f58352d26  mpc-1.0.3.tar.gz\n-11436d6b205e516635b666090b94ab32  isl-0.18.tar.bz2\n+28971fc21cf028042d4897f02fd355ea  gmp-6.2.1.tar.bz2\n+44b892bc5a45bafb4294d134e13aad1d  mpfr-4.1.0.tar.bz2\n+9f16c976c25bb0f76b50be749cd7a3a8  mpc-1.2.1.tar.gz\n+dd2f7b78e118c25bd96134a52aae7f4d  isl-0.24.tar.bz2"}, {"sha": "89541b9ad4dc4c606b2ae9b173a4b4ae67806572", "filename": "contrib/prerequisites.sha512", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Fprerequisites.sha512", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Fprerequisites.sha512", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fprerequisites.sha512?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -1,4 +1,4 @@\n-3c82aeab9c1596d4da8afac2eec38e429e84f3211e1a572cf8fd2b546493c44c039b922a1133eaaa48bd7f3e11dbe795a384e21ed95cbe3ecc58d7ac02246117  gmp-6.1.0.tar.bz2\n-0c310dd7956be527884f8059c195a5aca1042b089d0927ac6341e6310b1250a7059bc61aaaab4dfb76c6ab8b67e440878ca203f72674529bbcb46770ed9b6885  mpfr-3.1.6.tar.bz2\n-0028b76df130720c1fad7de937a0d041224806ce5ef76589f19c7b49d956071a683e2f20d154c192a231e69756b19e48208f2889b0c13950ceb7b3cfaf059a43  mpc-1.0.3.tar.gz\n-85d0b40f4dbf14cb99d17aa07048cdcab2dc3eb527d2fbb1e84c41b2de5f351025370e57448b63b2b8a8cf8a0843a089c3263f9baee1542d5c2e1cb37ed39d94  isl-0.18.tar.bz2\n+8904334a3bcc5c896ececabc75cda9dec642e401fb5397c4992c4fabea5e962c9ce8bd44e8e4233c34e55c8010cc28db0545f5f750cbdbb5f00af538dc763be9  gmp-6.2.1.tar.bz2\n+410208ee0d48474c1c10d3d4a59decd2dfa187064183b09358ec4c4666e34d74383128436b404123b831e585d81a9176b24c7ced9d913967c5fce35d4040a0b4  mpfr-4.1.0.tar.bz2\n+3279f813ab37f47fdcc800e4ac5f306417d07f539593ca715876e43e04896e1d5bceccfb288ef2908a3f24b760747d0dbd0392a24b9b341bc3e12082e5c836ee  mpc-1.2.1.tar.gz\n+aab3bddbda96b801d0f56d2869f943157aad52a6f6e6a61745edd740234c635c38231af20bc3f1a08d416a5e973a90e18249078ed8e4ae2f1d5de57658738e95  isl-0.24.tar.bz2"}, {"sha": "925ba22ea0f915aa2f9f9589696b6f579110ad0b", "filename": "contrib/testsuite-management/validate_failures.py", "status": "modified", "additions": 20, "deletions": 24, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Ftestsuite-management%2Fvalidate_failures.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Ftestsuite-management%2Fvalidate_failures.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ftestsuite-management%2Fvalidate_failures.py?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -1,11 +1,7 @@\n-#!/usr/bin/python\n+#!/usr/bin/env python3\n \n # Script to compare testsuite failures against a list of known-to-fail\n # tests.\n-#\n-# NOTE: This script is used in installations that are running Python 2.4.\n-#       Please stick to syntax features available in 2.4 and earlier\n-#       versions.\n \n # Contributed by Diego Novillo <dnovillo@google.com>\n #\n@@ -82,7 +78,7 @@\n _OPTIONS = None\n \n def Error(msg):\n-  print >>sys.stderr, 'error: %s' % msg\n+  print('error: %s' % msg, file=sys.stderr)\n   sys.exit(1)\n \n \n@@ -126,7 +122,7 @@ def __init__(self, summary_line, ordinal=-1):\n          self.description) = re.match(r'([A-Z]+):\\s*(\\S+)\\s*(.*)',\n                                       summary_line).groups()\n       except:\n-        print 'Failed to parse summary line: \"%s\"' % summary_line\n+        print('Failed to parse summary line: \"%s\"' % summary_line)\n         raise\n       self.ordinal = ordinal\n     except ValueError:\n@@ -180,7 +176,7 @@ def HasExpired(self):\n \n def GetMakefileValue(makefile_name, value_name):\n   if os.path.exists(makefile_name):\n-    makefile = open(makefile_name)\n+    makefile = open(makefile_name, encoding='latin-1', mode='r')\n     for line in makefile:\n       if line.startswith(value_name):\n         (_, value) = line.split('=', 1)\n@@ -246,8 +242,8 @@ def GetNegativeResult(line):\n def ParseManifestWorker(result_set, manifest_path):\n   \"\"\"Read manifest_path, adding the contents to result_set.\"\"\"\n   if _OPTIONS.verbosity >= 1:\n-    print 'Parsing manifest file %s.' % manifest_path\n-  manifest_file = open(manifest_path)\n+    print('Parsing manifest file %s.' % manifest_path)\n+  manifest_file = open(manifest_path, encoding='latin-1', mode='r')\n   for line in manifest_file:\n     line = line.strip()\n     if line == \"\":\n@@ -278,7 +274,7 @@ def ParseSummary(sum_fname):\n   # ordinal is used when sorting the results so that tests within each\n   # .exp file are kept sorted.\n   ordinal=0\n-  sum_file = open(sum_fname)\n+  sum_file = open(sum_fname, encoding='latin-1', mode='r')\n   for line in sum_file:\n     if IsInterestingResult(line):\n       result = TestResult(line, ordinal)\n@@ -287,7 +283,7 @@ def ParseSummary(sum_fname):\n         # Tests that have expired are not added to the set of expected\n         # results. If they are still present in the set of actual results,\n         # they will cause an error to be reported.\n-        print 'WARNING: Expected failure \"%s\" has expired.' % line.strip()\n+        print('WARNING: Expected failure \"%s\" has expired.' % line.strip())\n         continue\n       result_set.add(result)\n   sum_file.close()\n@@ -324,7 +320,7 @@ def GetResults(sum_files):\n   \"\"\"Collect all the test results from the given .sum files.\"\"\"\n   build_results = set()\n   for sum_fname in sum_files:\n-    print '\\t%s' % sum_fname\n+    print('\\t%s' % sum_fname)\n     build_results |= ParseSummary(sum_fname)\n   return build_results\n \n@@ -387,23 +383,23 @@ def GetBuildData():\n       return None, None\n   srcdir = GetMakefileValue('%s/Makefile' % _OPTIONS.build_dir, 'srcdir =')\n   target = GetMakefileValue('%s/Makefile' % _OPTIONS.build_dir, 'target_alias=')\n-  print 'Source directory: %s' % srcdir\n-  print 'Build target:     %s' % target\n+  print('Source directory: %s' % srcdir)\n+  print('Build target:     %s' % target)\n   return srcdir, target\n \n \n def PrintSummary(msg, summary):\n-  print '\\n\\n%s' % msg\n+  print('\\n\\n%s' % msg)\n   for result in sorted(summary):\n-    print result\n+    print(result)\n \n \n def GetSumFiles(results, build_dir):\n   if not results:\n-    print 'Getting actual results from build directory %s' % build_dir\n+    print('Getting actual results from build directory %s' % build_dir)\n     sum_files = CollectSumFiles(build_dir)\n   else:\n-    print 'Getting actual results from user-provided results'\n+    print('Getting actual results from user-provided results')\n     sum_files = results.split()\n   return sum_files\n \n@@ -425,15 +421,15 @@ def PerformComparison(expected, actual, ignore_missing_failures):\n                  expected_vs_actual)\n \n   if tests_ok:\n-    print '\\nSUCCESS: No unexpected failures.'\n+    print('\\nSUCCESS: No unexpected failures.')\n \n   return tests_ok\n \n \n def CheckExpectedResults():\n   srcdir, target = GetBuildData()\n   manifest_path = GetManifestPath(srcdir, target, True)\n-  print 'Manifest:         %s' % manifest_path\n+  print('Manifest:         %s' % manifest_path)\n   manifest = GetManifest(manifest_path)\n   sum_files = GetSumFiles(_OPTIONS.results, _OPTIONS.build_dir)\n   actual = GetResults(sum_files)\n@@ -448,16 +444,16 @@ def CheckExpectedResults():\n def ProduceManifest():\n   (srcdir, target) = GetBuildData()\n   manifest_path = GetManifestPath(srcdir, target, False)\n-  print 'Manifest:         %s' % manifest_path\n+  print('Manifest:         %s' % manifest_path)\n   if os.path.exists(manifest_path) and not _OPTIONS.force:\n     Error('Manifest file %s already exists.\\nUse --force to overwrite.' %\n           manifest_path)\n \n   sum_files = GetSumFiles(_OPTIONS.results, _OPTIONS.build_dir)\n   actual = GetResults(sum_files)\n-  manifest_file = open(manifest_path, 'w')\n+  manifest_file = open(manifest_path, encoding='latin-1', mode='w')\n   for result in sorted(actual):\n-    print result\n+    print(result)\n     manifest_file.write('%s\\n' % result)\n   manifest_file.close()\n "}, {"sha": "f12ee79f9f28d90b7893d3e9046972ab330cb612", "filename": "contrib/unicode/utf8-dump.py", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Funicode%2Futf8-dump.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Funicode%2Futf8-dump.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Funicode%2Futf8-dump.py?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -0,0 +1,69 @@\n+#!/usr/bin/env python3\n+#\n+# Script to dump a UTF-8 file as a list of numbered lines (mimicking GCC's\n+# diagnostic output format), interleaved with lines per character showing\n+# the Unicode codepoints, the UTF-8 encoding bytes, the name of the\n+# character, and, where printable, the characters themselves.\n+# The lines are printed in logical order, which may help the reader to grok\n+# the relationship between visual and logical ordering in bi-di files.\n+#\n+# SPDX-License-Identifier: MIT\n+#\n+# Copyright (C) 2021 David Malcolm <dmalcolm@redhat.com>.\n+#\n+# Permission is hereby granted, free of charge, to any person obtaining a\n+# copy of this software and associated documentation files (the \"Software\"),\n+# to deal in the Software without restriction, including without limitation\n+# the rights to use, copy, modify, merge, publish, distribute, sublicense,\n+# and/or sell copies of the Software, and to permit persons to whom the\n+# Software is furnished to do so, subject to the following conditions:\n+#\n+# The above copyright notice and this permission notice shall be included\n+# in all copies or substantial portions of the Software.\n+#\n+# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n+# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT\n+# OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n+# OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n+\n+import sys\n+import unicodedata\n+\n+\n+def get_name(ch):\n+    try:\n+        return unicodedata.name(ch)\n+    except ValueError:\n+        if ch == '\\n':\n+            return 'LINE FEED (LF)'\n+        return '(unknown)'\n+\n+\n+def get_printable(ch):\n+    cat = unicodedata.category(ch)\n+    if cat == 'Cc':\n+        return '(control character)'\n+    elif cat == 'Cf':\n+        return '(format control)'\n+    elif cat[0] == 'Z':\n+        return '(separator)'\n+    return ch\n+\n+\n+def dump_file(f_in):\n+    line_num = 1\n+    for line in f_in:\n+        print('%4i | %s' % (line_num, line.rstrip()))\n+        for ch in line:\n+            utf8_desc = '%15s' % (' '.join(['0x%02x' % b\n+                                            for b in ch.encode('utf-8')]))\n+            print('%4s |   U+%04X %s %40s %s'\n+                  % ('', ord(ch), utf8_desc, get_name(ch), get_printable(ch)))\n+        line_num += 1\n+\n+\n+with open(sys.argv[1], mode='r') as f_in:\n+    dump_file(f_in)"}, {"sha": "2ec2a60f5d0209dd4b6df2fe4c0b0b886258753c", "filename": "contrib/update-copyright.py", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Fupdate-copyright.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/contrib%2Fupdate-copyright.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fupdate-copyright.py?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -1,6 +1,6 @@\n #!/usr/bin/env python3\n #\n-# Copyright (C) 2013-2020 Free Software Foundation, Inc.\n+# Copyright (C) 2013-2022 Free Software Foundation, Inc.\n #\n # This script is free software; you can redistribute it and/or modify\n # it under the terms of the GNU General Public License as published by\n@@ -233,7 +233,7 @@ def add_package_author (self, holder, canon_form = None):\n     def add_external_author (self, holder):\n         self.holders[holder] = None\n \n-    class BadYear():\n+    class BadYear (Exception):\n         def __init__ (self, year):\n             self.year = year\n \n@@ -726,6 +726,7 @@ def __init__ (self, errors):\n         self.add_external_author ('The Regents of the University of California.')\n         self.add_external_author ('Ulf Adams')\n         self.add_external_author ('Unicode, Inc.')\n+        self.add_external_author ('University of Illinois at Urbana-Champaign.')\n         self.add_external_author ('University of Toronto.')\n         self.add_external_author ('Yoshinori Sato')\n "}, {"sha": "d379673b6cd6e33c711323401df6cc0ee55e297f", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -1,3 +1,53 @@\n+2022-01-16  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* inclhack.def (vxworks_posix_open): New hack.\n+\t* tests/base/fcntl.h: Update.\n+\t* fixincl.x: Regenerate.\n+\n+2022-01-16  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* inclhack.def (vxworks_time_h_syslib): New hack.\n+\t* tests/base/time.h: Update.\n+\t* fixincl.x: Regenerate.\n+\n+2022-01-16  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* inclhack.def (vxworks_math_h_fp_c99): New hack.\n+\t* tests/base/math.h: Update.\n+\t* fixincl.x: Regenerate.\n+\n+2022-01-06  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* inclhack.def (vxworks_next_yvals): New hack.\n+\t* tests/base/yvals.h: New expected test result.\n+\t* fixincl.x: Regenerate.\n+\n+2022-01-04  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* inclhack.def (vxworks_posix_mkdir): Refine to expose a\n+\tvarargs interface.\n+\t* tests/base/sys/stat.h: Update expected results.\n+\t* fixincl.x: Regenerate.\n+\n+2022-01-01  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* inclhack.def: Add new fix on darwin.\n+\t* fixincl.x: Regenerate.\n+\t* tests/base/math.h: Regenerate.\n+\n+2021-11-23  Xi Ruoyao  <xry111@mengyan1223.wang>\n+\n+\tPR bootstrap/103306\n+\t* fixincl.c (process): Don't call abort().\n+\n+2021-11-13  Xi Ruoyao  <xry111@mengyan1223.wang>\n+\n+\tPR other/21823\n+\tPR bootstrap/80047\n+\t* fixincl.c (process): Simplify the handling for highly\n+\t  unlikely access() failure, to avoid using non-standard\n+\t  extensions.\n+\n 2021-08-30  John David Anglin  <danglin@gcc.gnu.org>\n \n \t* inclhack.def (hpux_c99_inttypes5): New hack to define PRIdPTR, etc."}, {"sha": "92909baf85f6b865bb21619a930f7737c0df9b56", "filename": "fixincludes/fixincl.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/fixincludes%2Ffixincl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/fixincludes%2Ffixincl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.c?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -1352,10 +1352,18 @@ process (void)\n \n   if (access (pz_curr_file, R_OK) != 0)\n     {\n-      int erno = errno;\n-      fprintf (stderr, \"Cannot access %s from %s\\n\\terror %d (%s)\\n\",\n-               pz_curr_file, getcwd ((char *) NULL, MAXPATHLEN),\n-               erno, xstrerror (erno));\n+      /* It may happens if for e. g. the distro ships some broken symlinks\n+\t in /usr/include.  */\n+\n+      /* \"INPUT\" is exported in fixinc.sh, which is the pwd where fixincl\n+\t runs.  It's used instead of getcwd to avoid allocating a buffer\n+\t with unknown length.  */\n+      const char *cwd = getenv (\"INPUT\");\n+      if (!cwd)\n+\tcwd = \"the working directory\";\n+\n+      fprintf (stderr, \"Cannot access %s from %s: %s\\n\", pz_curr_file, cwd,\n+\t       xstrerror (errno));\n       return;\n     }\n "}, {"sha": "b5cea5a43afce0f019d4d91888c11fcb6eed7f0b", "filename": "fixincludes/fixincl.x", "status": "modified", "additions": 281, "deletions": 21, "changes": 302, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/fixincludes%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/fixincludes%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ffixincl.x?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -2,11 +2,11 @@\n  *\n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  *\n- * It has been AutoGen-ed  August 30, 2021 at 07:31:11 PM by AutoGen 5.18.16\n+ * It has been AutoGen-ed  January 15, 2022 at 10:54:24 PM by AutoGen 5.18.16\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT SVN-MERGE THIS FILE, EITHER Mon Aug 30 19:31:11 UTC 2021\n+/* DO NOT SVN-MERGE THIS FILE, EITHER Sat Jan 15 22:54:24 UTC 2022\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 261 fixup descriptions.\n+ * This file contains 266 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -3564,6 +3564,43 @@ static const char* apzDarwin_Ucred__AtomicPatch[] = {\n #endif\\n\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Darwin_Flt_Eval_Method fix\n+ */\n+tSCC zDarwin_Flt_Eval_MethodName[] =\n+     \"darwin_flt_eval_method\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zDarwin_Flt_Eval_MethodList[] =\n+  \"math.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzDarwin_Flt_Eval_MethodMachs[] = {\n+        \"*-*-darwin*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zDarwin_Flt_Eval_MethodSelect0[] =\n+       \"^#if __FLT_EVAL_METHOD__ == 0$\";\n+\n+#define    DARWIN_FLT_EVAL_METHOD_TEST_CT  1\n+static tTestDesc aDarwin_Flt_Eval_MethodTests[] = {\n+  { TT_EGREP,    zDarwin_Flt_Eval_MethodSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Darwin_Flt_Eval_Method\n+ */\n+static const char* apzDarwin_Flt_Eval_MethodPatch[] = {\n+    \"format\",\n+    \"#if __FLT_EVAL_METHOD__ == 0 || __FLT_EVAL_METHOD__ == 16\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Dec_Intern_Asm fix\n@@ -10177,32 +10214,97 @@ static const char* apzVxworks_Ioctl_MacroPatch[] = {\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n- *  Description of Vxworks_Mkdir_Macro fix\n+ *  Description of Vxworks_Math_H_Fp_C99 fix\n+ */\n+tSCC zVxworks_Math_H_Fp_C99Name[] =\n+     \"vxworks_math_h_fp_c99\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zVxworks_Math_H_Fp_C99List[] =\n+  \"math.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzVxworks_Math_H_Fp_C99Machs[] = {\n+        \"*-*-vxworks*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zVxworks_Math_H_Fp_C99Select0[] =\n+       \"#define HUGE_VAL[ \\t]*_ARCH.*\";\n+\n+/*\n+ *  content bypass pattern - skip fix if pattern found\n+ */\n+tSCC zVxworks_Math_H_Fp_C99Bypass0[] =\n+       \"#define[ \\t]+FP_INFINITE\";\n+\n+#define    VXWORKS_MATH_H_FP_C99_TEST_CT  2\n+static tTestDesc aVxworks_Math_H_Fp_C99Tests[] = {\n+  { TT_NEGREP,   zVxworks_Math_H_Fp_C99Bypass0, (regex_t*)NULL },\n+  { TT_EGREP,    zVxworks_Math_H_Fp_C99Select0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Vxworks_Math_H_Fp_C99\n+ */\n+static const char* apzVxworks_Math_H_Fp_C99Patch[] = {\n+    \"format\",\n+    \"\\n\\\n+%0\\n\\n\\\n+#if _C99\\n\\n\\\n+#define FP_INFINITE  1\\n\\\n+#define FP_NAN       2\\n\\\n+#define FP_NORMAL    (-1)\\n\\\n+#define FP_SUBNORMAL (-2)\\n\\\n+#define FP_ZERO      0\\n\\n\\\n+#define fpclassify(x) \\\\\\n\\\n+  __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL, \\\\\\n\\\n+\\t\\t       FP_SUBNORMAL, FP_ZERO, (x))\\n\\n\\\n+#define signbit(x) __builtin_signbit(x)\\n\\\n+#define isfinite(x) __builtin_isfinite(x)\\n\\\n+#define isnormal(x) __builtin_isnormal(x)\\n\\\n+#define isnan(x) __builtin_isnan(x)\\n\\\n+#define isinf(x) __builtin_isinf(x)\\n\\n\\\n+#define isgreater(x, y) __builtin_isgreater((x),(y))\\n\\\n+#define isgreaterequal(x, y) __builtin_isgreaterequal((x),(y))\\n\\\n+#define isless(x, y) __builtin_isless((x),(y))\\n\\\n+#define islessequal(x, y) __builtin_islessequal((x),(y))\\n\\\n+#define islessgreater(x, y) __builtin_islessgreater((x),(y))\\n\\\n+#define isunordered(x, y) __builtin_isunordered((x),(y))\\n\\n\\\n+#endif /* _C99 */\\n\",\n+    (char*)NULL };\n+\n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Vxworks_Posix_Mkdir fix\n  */\n-tSCC zVxworks_Mkdir_MacroName[] =\n-     \"vxworks_mkdir_macro\";\n+tSCC zVxworks_Posix_MkdirName[] =\n+     \"vxworks_posix_mkdir\";\n \n /*\n  *  File name selection pattern\n  */\n-tSCC zVxworks_Mkdir_MacroList[] =\n+tSCC zVxworks_Posix_MkdirList[] =\n   \"sys/stat.h\\0\";\n /*\n  *  Machine/OS name selection pattern\n  */\n-tSCC* apzVxworks_Mkdir_MacroMachs[] = {\n+tSCC* apzVxworks_Posix_MkdirMachs[] = {\n         \"*-*-vxworks*\",\n         (const char*)NULL };\n-#define VXWORKS_MKDIR_MACRO_TEST_CT  0\n-#define aVxworks_Mkdir_MacroTests   (tTestDesc*)NULL\n+#define VXWORKS_POSIX_MKDIR_TEST_CT  0\n+#define aVxworks_Posix_MkdirTests   (tTestDesc*)NULL\n \n /*\n- *  Fix Command Arguments for Vxworks_Mkdir_Macro\n+ *  Fix Command Arguments for Vxworks_Posix_Mkdir\n  */\n-static const char* apzVxworks_Mkdir_MacroPatch[] = {\n+static const char* apzVxworks_Posix_MkdirPatch[] = {\n     \"format\",\n-    \"%0\\n\\\n-#define mkdir(dir, ...) ((void)0, ##__VA_ARGS__, (mkdir)(dir))\\n\",\n+    \"extern STATUS mkdir(const char *dir, ...);\",\n     \"extern[\\t ]+STATUS[\\t ]+mkdir[\\t ]*\\\\([\\t ]*const[\\t ]+char[\\t ]*\\\\*[\\t ]*(|[_[:alpha:]][_[:alnum:]]*)\\\\)[\\t ]*;\",\n     (char*)NULL };\n \n@@ -10289,6 +10391,48 @@ static const char* apzVxworks_Needs_VxworksPatch[] = { sed_cmd_z,\n #include <types/vxTypesOld.h>\\n\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Vxworks_Next_Yvals fix\n+ */\n+tSCC zVxworks_Next_YvalsName[] =\n+     \"vxworks_next_yvals\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zVxworks_Next_YvalsList[] =\n+  \"yvals.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzVxworks_Next_YvalsMachs[] = {\n+        \"*-*-vxworks*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zVxworks_Next_YvalsSelect0[] =\n+       \"#include_next <yvals.h>\";\n+\n+#define    VXWORKS_NEXT_YVALS_TEST_CT  1\n+static tTestDesc aVxworks_Next_YvalsTests[] = {\n+  { TT_EGREP,    zVxworks_Next_YvalsSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Vxworks_Next_Yvals\n+ */\n+static const char* apzVxworks_Next_YvalsPatch[] = {\n+    \"format\",\n+    \"#if 0 /* GCC does not provide yvals.h.  */\\n\\\n+%1\",\n+    \"#if .*\\n\\\n+/\\\\* .*\\n\\\n+(#include_next <yvals.h>\\n\\\n+)\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Vxworks_Regs fix\n@@ -10325,6 +10469,53 @@ static const char* apzVxworks_RegsPatch[] = {\n     \"#include <arch/../regs.h>\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Vxworks_Posix_Open fix\n+ */\n+tSCC zVxworks_Posix_OpenName[] =\n+     \"vxworks_posix_open\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zVxworks_Posix_OpenList[] =\n+  \"fcntl.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzVxworks_Posix_OpenMachs[] = {\n+        \"*-*-vxworks*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zVxworks_Posix_OpenSelect0[] =\n+       \"extern int.*open \\\\(const char \\\\*[ a-z]*, int[ a-z]*, int[ a-z]*\\\\);\";\n+\n+#define    VXWORKS_POSIX_OPEN_TEST_CT  1\n+static tTestDesc aVxworks_Posix_OpenTests[] = {\n+  { TT_EGREP,    zVxworks_Posix_OpenSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Vxworks_Posix_Open\n+ */\n+static const char* apzVxworks_Posix_OpenPatch[] = {\n+    \"format\",\n+    \"%0\\n\\n\\\n+#if defined(__cplusplus)\\n\\\n+extern \\\"C++\\\" {\\n\\\n+  inline int open (const char *, int) __attribute__((__always_inline__));\\n\\n\\\n+  inline int\\n\\\n+  open (const char *name, int flags)\\n\\\n+  {\\n\\\n+    return open (name, flags, 0);\\n\\\n+  }\\n\\\n+}\\n\\\n+#endif\\n\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Vxworks_Time fix\n@@ -10442,6 +10633,45 @@ static const char* apzVxworks_Iolib_Include_UnistdPatch[] = {\n     \"#include <unistd.h>\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Vxworks_Time_H_Syslib fix\n+ */\n+tSCC zVxworks_Time_H_SyslibName[] =\n+     \"vxworks_time_h_syslib\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zVxworks_Time_H_SyslibList[] =\n+  \"time.h\\0\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzVxworks_Time_H_SyslibMachs[] = {\n+        \"*-*-vxworks*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zVxworks_Time_H_SyslibSelect0[] =\n+       \"[ \\t]*#define[ \\t]+CLOCKS_PER_SEC[ \\t]+sysClkRateGet.*\";\n+\n+#define    VXWORKS_TIME_H_SYSLIB_TEST_CT  1\n+static tTestDesc aVxworks_Time_H_SyslibTests[] = {\n+  { TT_EGREP,    zVxworks_Time_H_SyslibSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Vxworks_Time_H_Syslib\n+ */\n+static const char* apzVxworks_Time_H_SyslibPatch[] = {\n+    \"format\",\n+    \"%0\\n\\\n+#include <sysLib.h>\",\n+    \"#include <vxWorks.h>|#endif.* _YVALS.*\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of X11_Class fix\n@@ -10612,9 +10842,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          299\n+#define REGEX_COUNT          305\n #define MACH_LIST_SIZE_LIMIT 187\n-#define FIX_COUNT            261\n+#define FIX_COUNT            266\n \n /*\n  *  Enumerate the fixes\n@@ -10704,6 +10934,7 @@ typedef enum {\n     DARWIN_STDINT_6_FIXIDX,\n     DARWIN_STDINT_7_FIXIDX,\n     DARWIN_UCRED__ATOMIC_FIXIDX,\n+    DARWIN_FLT_EVAL_METHOD_FIXIDX,\n     DEC_INTERN_ASM_FIXIDX,\n     DJGPP_WCHAR_H_FIXIDX,\n     ECD_CURSOR_FIXIDX,\n@@ -10870,13 +11101,17 @@ typedef enum {\n     VOID_NULL_FIXIDX,\n     VXWORKS_GCC_PROBLEM_FIXIDX,\n     VXWORKS_IOCTL_MACRO_FIXIDX,\n-    VXWORKS_MKDIR_MACRO_FIXIDX,\n+    VXWORKS_MATH_H_FP_C99_FIXIDX,\n+    VXWORKS_POSIX_MKDIR_FIXIDX,\n     VXWORKS_NEEDS_VXTYPES_FIXIDX,\n     VXWORKS_NEEDS_VXWORKS_FIXIDX,\n+    VXWORKS_NEXT_YVALS_FIXIDX,\n     VXWORKS_REGS_FIXIDX,\n+    VXWORKS_POSIX_OPEN_FIXIDX,\n     VXWORKS_TIME_FIXIDX,\n     VXWORKS_WRITE_CONST_FIXIDX,\n     VXWORKS_IOLIB_INCLUDE_UNISTD_FIXIDX,\n+    VXWORKS_TIME_H_SYSLIB_FIXIDX,\n     X11_CLASS_FIXIDX,\n     X11_CLASS_USAGE_FIXIDX,\n     X11_NEW_FIXIDX,\n@@ -11304,6 +11539,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      DARWIN_UCRED__ATOMIC_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aDarwin_Ucred__AtomicTests,   apzDarwin_Ucred__AtomicPatch, 0 },\n \n+  {  zDarwin_Flt_Eval_MethodName,    zDarwin_Flt_Eval_MethodList,\n+     apzDarwin_Flt_Eval_MethodMachs,\n+     DARWIN_FLT_EVAL_METHOD_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aDarwin_Flt_Eval_MethodTests,   apzDarwin_Flt_Eval_MethodPatch, 0 },\n+\n   {  zDec_Intern_AsmName,    zDec_Intern_AsmList,\n      apzDec_Intern_AsmMachs,\n      DEC_INTERN_ASM_TEST_CT, FD_MACH_ONLY,\n@@ -12134,10 +12374,15 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      VXWORKS_IOCTL_MACRO_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aVxworks_Ioctl_MacroTests,   apzVxworks_Ioctl_MacroPatch, 0 },\n \n-  {  zVxworks_Mkdir_MacroName,    zVxworks_Mkdir_MacroList,\n-     apzVxworks_Mkdir_MacroMachs,\n-     VXWORKS_MKDIR_MACRO_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aVxworks_Mkdir_MacroTests,   apzVxworks_Mkdir_MacroPatch, 0 },\n+  {  zVxworks_Math_H_Fp_C99Name,    zVxworks_Math_H_Fp_C99List,\n+     apzVxworks_Math_H_Fp_C99Machs,\n+     VXWORKS_MATH_H_FP_C99_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aVxworks_Math_H_Fp_C99Tests,   apzVxworks_Math_H_Fp_C99Patch, 0 },\n+\n+  {  zVxworks_Posix_MkdirName,    zVxworks_Posix_MkdirList,\n+     apzVxworks_Posix_MkdirMachs,\n+     VXWORKS_POSIX_MKDIR_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aVxworks_Posix_MkdirTests,   apzVxworks_Posix_MkdirPatch, 0 },\n \n   {  zVxworks_Needs_VxtypesName,    zVxworks_Needs_VxtypesList,\n      apzVxworks_Needs_VxtypesMachs,\n@@ -12149,11 +12394,21 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      VXWORKS_NEEDS_VXWORKS_TEST_CT, FD_MACH_ONLY,\n      aVxworks_Needs_VxworksTests,   apzVxworks_Needs_VxworksPatch, 0 },\n \n+  {  zVxworks_Next_YvalsName,    zVxworks_Next_YvalsList,\n+     apzVxworks_Next_YvalsMachs,\n+     VXWORKS_NEXT_YVALS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aVxworks_Next_YvalsTests,   apzVxworks_Next_YvalsPatch, 0 },\n+\n   {  zVxworks_RegsName,    zVxworks_RegsList,\n      apzVxworks_RegsMachs,\n      VXWORKS_REGS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aVxworks_RegsTests,   apzVxworks_RegsPatch, 0 },\n \n+  {  zVxworks_Posix_OpenName,    zVxworks_Posix_OpenList,\n+     apzVxworks_Posix_OpenMachs,\n+     VXWORKS_POSIX_OPEN_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aVxworks_Posix_OpenTests,   apzVxworks_Posix_OpenPatch, 0 },\n+\n   {  zVxworks_TimeName,    zVxworks_TimeList,\n      apzVxworks_TimeMachs,\n      VXWORKS_TIME_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n@@ -12169,6 +12424,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      VXWORKS_IOLIB_INCLUDE_UNISTD_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aVxworks_Iolib_Include_UnistdTests,   apzVxworks_Iolib_Include_UnistdPatch, 0 },\n \n+  {  zVxworks_Time_H_SyslibName,    zVxworks_Time_H_SyslibList,\n+     apzVxworks_Time_H_SyslibMachs,\n+     VXWORKS_TIME_H_SYSLIB_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aVxworks_Time_H_SyslibTests,   apzVxworks_Time_H_SyslibPatch, 0 },\n+\n   {  zX11_ClassName,    zX11_ClassList,\n      apzX11_ClassMachs,\n      X11_CLASS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "8400d0c696b529c1bb882ba750ea6bab7601ac8c", "filename": "fixincludes/inclhack.def", "status": "modified", "additions": 163, "deletions": 5, "changes": 168, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/fixincludes%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/fixincludes%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Finclhack.def?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -1767,6 +1767,17 @@ fix = {\n     test_text = \"\"; /* Don't provide this for wrap fixes.  */\n };\n \n+/*  The darwin headers don't accept __FLT_EVAL_METHOD__ == 16.  */\n+fix = {\n+    hackname  = darwin_flt_eval_method;\n+    mach      = \"*-*-darwin*\";\n+    files     = math.h;\n+    select    = \"^#if __FLT_EVAL_METHOD__ == 0$\";\n+    c_fix     = format;\n+    c_fix_arg = \"#if __FLT_EVAL_METHOD__ == 0 || __FLT_EVAL_METHOD__ == 16\";\n+    test_text = \"#if __FLT_EVAL_METHOD__ == 0\";\n+};\n+\n /*\n  *  Fix <c_asm.h> on Digital UNIX V4.0:\n  *  It contains a prototype for a DEC C internal asm() function,\n@@ -5146,23 +5157,75 @@ fix = {\n         \n     test_text   = \"extern int ioctl ( int asdf1234, int jkl , int qwerty ) ;\";\n };\n+ \n+/*\n+ * Provide C99 FP classification support in VxWorks math.h if\n+ * not already there. Note the strict expectation on #define without\n+ * whitespaces in the bypass expression, which \"works\" for\n+ * the system headers we have met and doesn't match test texts for\n+ * other hacks, found in the test baseline.\n+ */\n+fix = {\n+    hackname  = vxworks_math_h_fp_c99;\n+    mach      = \"*-*-vxworks*\";\n+    files     = math.h;\n+    bypass    = \"#define[ \\t]+FP_INFINITE\";\n+    select    = \"#define HUGE_VAL[ \\t]*_ARCH.*\";\n+    c_fix     = format;\n+    c_fix_arg = << _EOArg_\n+\n+%0\n+\n+#if _C99\n+\n+#define FP_INFINITE  1\n+#define FP_NAN       2\n+#define FP_NORMAL    (-1)\n+#define FP_SUBNORMAL (-2)\n+#define FP_ZERO      0\n+\n+#define fpclassify(x) \\\n+  __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL, \\\n+\t\t       FP_SUBNORMAL, FP_ZERO, (x))\n+\n+#define signbit(x) __builtin_signbit(x)\n+#define isfinite(x) __builtin_isfinite(x)\n+#define isnormal(x) __builtin_isnormal(x)\n+#define isnan(x) __builtin_isnan(x)\n+#define isinf(x) __builtin_isinf(x)\n+\n+#define isgreater(x, y) __builtin_isgreater((x),(y))\n+#define isgreaterequal(x, y) __builtin_isgreaterequal((x),(y))\n+#define isless(x, y) __builtin_isless((x),(y))\n+#define islessequal(x, y) __builtin_islessequal((x),(y))\n+#define islessgreater(x, y) __builtin_islessgreater((x),(y))\n+#define isunordered(x, y) __builtin_isunordered((x),(y))\n+\n+#endif /* _C99 */\n+\n+_EOArg_;\n+\n+    test_text  = \"#define HUGE_VAL _ARCH_HUGH_VAL\";\n+};\n \n /*\n- *  Wrap VxWorks mkdir to be posix compliant\n+ *  mkdir's posix interface expects two arguments.  While the RTP VxWorks\n+ *  API is fine, the kernel version handles only one.  We used to expose\n+ *  a macro and this didn't play nice with uses such as posix:mkdir(x, y)\n+ *  in libstdc++, so we expose a vararg prototype instead.\n  */\n fix = {\n-    hackname    = vxworks_mkdir_macro;\n+    hackname    = vxworks_posix_mkdir;\n     files       = sys/stat.h;\n     mach        = \"*-*-vxworks*\";\n \n     c_fix       = format;\n-    c_fix_arg   = \"%0\\n\"\n-                \"#define mkdir(dir, ...) ((void)0, ##__VA_ARGS__, (mkdir)(dir))\\n\";\n+    c_fix_arg   = \"extern STATUS mkdir(const char *dir, ...);\";\n     c_fix_arg   = \"extern[\\t ]+STATUS[\\t ]+mkdir[\\t ]*\"\n                 \"\\\\([\\t ]*const[\\t ]+char[\\t ]*\\\\*[\\t ]*\" /* arg type */\n                 \"(|[_[:alpha:]][_[:alnum:]]*)\" /* arg name (optional) */\n                 \"\\\\)[\\t ]*;\";\n-        \n+\n     test_text   = \"extern STATUS mkdir (const char * _qwerty) ;\";\n };\n \n@@ -5197,6 +5260,28 @@ fix = {\n     \"# define\\t__INCstath <sys/stat.h>\";\n };\n \n+/*\n+ * yvals.h on VxWorks-6 expects the toolchain to provide its own\n+ * version of the header, which we don't do.  Arrange to fallback\n+ * on the system definition.\n+ */\n+fix = {\n+    hackname  = vxworks_next_yvals;\n+    mach      = \"*-*-vxworks*\";\n+    files     = yvals.h;\n+    select    = \"#include_next <yvals.h>\";\n+    c_fix     = format;\n+    c_fix_arg = \"#if 0 /* GCC does not provide yvals.h.  */\\n%1\";\n+    c_fix_arg = \"#if .*\\n\"\n+                \"/\\\\* .*\\n\"\n+                \"(#include_next <yvals.h>\\n)\";\n+\n+    test_text = \"#if (defined(__cplusplus) && defined(__GNUC__))\\n\"\n+                \"/* GCC C++ has it's own yvals.h */\\n\"\n+                \"#include_next <yvals.h>\\n\"\n+                \"#else\\n\";\n+};\n+\n /*\n  *  Make it so VxWorks does not include gcc/regs.h accidentally\n  */\n@@ -5211,6 +5296,47 @@ fix = {\n     test_text   = \"#include <regs.h>\\n\";\n };\n \n+/*\n+ * Likewise, open's posix interface allows two or three arguments and\n+ * some VxWorks headers expose only a strict 3 arguments version.  Merely\n+ * changing the prototype into a varargs one is risky as the implementation\n+ * would receive garbage in the third arg for calls providing only two,\n+ * which libstdc++ does.  We simply provide an always inline overload for C++\n+ * instead.\n+ *\n+ * Both fcntl.h and ioLib.h might \"feature\" such a prototype for _WRS_KERNEL.\n+ * The latter #includes the former though (since 1992 according to the embedded\n+ * log), so just leave ioLib.h alone.\n+ */\n+fix = {\n+    hackname    = vxworks_posix_open;\n+    mach        = \"*-*-vxworks*\";\n+    files       = fcntl.h;\n+\n+    select      = \"extern int.*open \\\\(const char \\\\*[ a-z]*, int[ a-z]*, int[ a-z]*\\\\);\";\n+    c_fix       = format;\n+    c_fix_arg = << _EOArg_\n+%0\n+\n+#if defined(__cplusplus)\n+extern \"C++\" {\n+  inline int open (const char *, int) __attribute__((__always_inline__));\n+\n+  inline int\n+  open (const char *name, int flags)\n+  {\n+    return open (name, flags, 0);\n+  }\n+}\n+#endif\n+\n+_EOArg_;\n+\n+    test_text   =\n+      \"extern int open (const char *, int, int);\\n\"\n+      \"extern int open (const char *name, int flags, int mode );\\n\";\n+};\n+\n /*\n  *  Another bad dependency in VxWorks 5.2 <time.h>.\n  */\n@@ -5271,6 +5397,38 @@ fix = {\n     test_text       = \"#include \\\"unistd.h\\\"\";\n };\n \n+/*\n+ *  Make sure there is a visible prototype of sysClkRateGet() when\n+ *  CLOCKS_PER_SEC is #defined to that in time.h for VxWorks.  This would\n+ *  typically be provided by sysLib.h.\n+ *\n+ *  The new #include has to come after the one for vxWorks.h in kernel headers\n+ *  and vxWorks.h is typically not #included in RTP headers. yvals.h is\n+ *  conditionally included in the latter, instead, and new #include are better\n+ *  inserted after that.\n+ */\n+fix = {\n+    hackname    = vxworks_time_h_syslib;\n+    files       = time.h;\n+    mach        = \"*-*-vxworks*\";\n+    select      = \"[ \\t]*#define[ \\t]+CLOCKS_PER_SEC[ \\t]+sysClkRateGet.*\";\n+\n+    c_fix       = format;\n+    c_fix_arg   = \"%0\\n#include <sysLib.h>\";\n+    c_fix_arg   = \"#include <vxWorks.h>|#endif.* _YVALS.*\";\n+\n+    test_text   =\n+    \"/* kernel header pattern:  */\\n\"\n+    \"#include <vxWorks.h>\\n\"\n+    \"\\n\"\n+    \"/* rtp header pattern:  */\\n\"\n+    \"#ifndef _YVALS\\n\"\n+    \"#include <yvals.h>\\n\"\n+    \"#endif /* _YVALS */\\n\"\n+    \"\\n\"\n+    \"#define CLOCKS_PER_SEC  sysClkRateGet()\";\n+};\n+\n /*\n  *  There are several name conflicts with C++ reserved words in X11 header\n  *  files.  These are fixed in some versions, so don't do the fixes if"}, {"sha": "fe0e56a99f80c8fb9b5b5e9da8208c119d764be1", "filename": "fixincludes/tests/base/fcntl.h", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/fixincludes%2Ftests%2Fbase%2Ffcntl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/fixincludes%2Ftests%2Fbase%2Ffcntl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Ffcntl.h?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -18,6 +18,39 @@ extern \"C\" {\n #if defined( AAB_AIX_FCNTL_CHECK )\n \n #endif  /* AAB_AIX_FCNTL_CHECK */\n+\n+\n+#if defined( VXWORKS_POSIX_OPEN_CHECK )\n+extern int open (const char *, int, int);\n+\n+#if defined(__cplusplus)\n+extern \"C++\" {\n+  inline int open (const char *, int) __attribute__((__always_inline__));\n+\n+  inline int\n+  open (const char *name, int flags)\n+  {\n+    return open (name, flags, 0);\n+  }\n+}\n+#endif\n+\n+extern int open (const char *name, int flags, int mode );\n+\n+#if defined(__cplusplus)\n+extern \"C++\" {\n+  inline int open (const char *, int) __attribute__((__always_inline__));\n+\n+  inline int\n+  open (const char *name, int flags)\n+  {\n+    return open (name, flags, 0);\n+  }\n+}\n+#endif\n+\n+\n+#endif  /* VXWORKS_POSIX_OPEN_CHECK */\n #ifdef __cplusplus\n }\n #endif"}, {"sha": "7525fd82ecf055f0ae4f81738cf7699e075a394a", "filename": "fixincludes/tests/base/math.h", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/fixincludes%2Ftests%2Fbase%2Fmath.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/fixincludes%2Ftests%2Fbase%2Fmath.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fmath.h?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -30,6 +30,11 @@\n #endif  /* DARWIN_9_LONG_DOUBLE_FUNCS_2_CHECK */\n \n \n+#if defined( DARWIN_FLT_EVAL_METHOD_CHECK )\n+#if __FLT_EVAL_METHOD__ == 0 || __FLT_EVAL_METHOD__ == 16\n+#endif  /* DARWIN_FLT_EVAL_METHOD_CHECK */\n+\n+\n #if defined( HPPA_HPUX_FP_MACROS_CHECK )\n #endif /* _INCLUDE_HPUX_SOURCE */\n \n@@ -99,6 +104,40 @@ extern int class();\n int foo;\n #endif\n #endif  /* STRICT_ANSI_NOT_CTD_CHECK */\n+\n+\n+#if defined( VXWORKS_MATH_H_FP_C99_CHECK )\n+\n+#define HUGE_VAL _ARCH_HUGH_VAL\n+\n+#if _C99\n+\n+#define FP_INFINITE  1\n+#define FP_NAN       2\n+#define FP_NORMAL    (-1)\n+#define FP_SUBNORMAL (-2)\n+#define FP_ZERO      0\n+\n+#define fpclassify(x) \\\n+  __builtin_fpclassify(FP_NAN, FP_INFINITE, FP_NORMAL, \\\n+\t\t       FP_SUBNORMAL, FP_ZERO, (x))\n+\n+#define signbit(x) __builtin_signbit(x)\n+#define isfinite(x) __builtin_isfinite(x)\n+#define isnormal(x) __builtin_isnormal(x)\n+#define isnan(x) __builtin_isnan(x)\n+#define isinf(x) __builtin_isinf(x)\n+\n+#define isgreater(x, y) __builtin_isgreater((x),(y))\n+#define isgreaterequal(x, y) __builtin_isgreaterequal((x),(y))\n+#define isless(x, y) __builtin_isless((x),(y))\n+#define islessequal(x, y) __builtin_islessequal((x),(y))\n+#define islessgreater(x, y) __builtin_islessgreater((x),(y))\n+#define isunordered(x, y) __builtin_isunordered((x),(y))\n+\n+#endif /* _C99 */\n+\n+#endif  /* VXWORKS_MATH_H_FP_C99_CHECK */\n #ifdef __cplusplus\n #undef exception\n #endif"}, {"sha": "cf86e5d169e660ba4e9d69a497d344d65d15a466", "filename": "fixincludes/tests/base/sys/stat.h", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/fixincludes%2Ftests%2Fbase%2Fsys%2Fstat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/fixincludes%2Ftests%2Fbase%2Fsys%2Fstat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fsys%2Fstat.h?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -28,11 +28,9 @@ extern int fchmod(int, mode_t);\n #endif  /* RS6000_FCHMOD_CHECK */\n \n \n-#if defined( VXWORKS_MKDIR_MACRO_CHECK )\n-extern STATUS mkdir (const char * _qwerty) ;\n-#define mkdir(dir, ...) ((void)0, ##__VA_ARGS__, (mkdir)(dir))\n-\n-#endif  /* VXWORKS_MKDIR_MACRO_CHECK */\n+#if defined( VXWORKS_POSIX_MKDIR_CHECK )\n+extern STATUS mkdir(const char *dir, ...);\n+#endif  /* VXWORKS_POSIX_MKDIR_CHECK */\n \n \n #if defined( VXWORKS_NEEDS_VXWORKS_CHECK )"}, {"sha": "e0252bd85d14836498d800c28cc96abc87510057", "filename": "fixincludes/tests/base/time.h", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/fixincludes%2Ftests%2Fbase%2Ftime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/fixincludes%2Ftests%2Fbase%2Ftime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Ftime.h?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -25,3 +25,18 @@ typedef void (*__gcc_VOIDFUNCPTR) ();\n #endif\n #define VOIDFUNCPTR __gcc_VOIDFUNCPTR\n #endif  /* VXWORKS_TIME_CHECK */\n+\n+\n+#if defined( VXWORKS_TIME_H_SYSLIB_CHECK )\n+/* kernel header pattern:  */\n+#include <vxWorks.h>\n+#include <sysLib.h>\n+\n+/* rtp header pattern:  */\n+#ifndef _YVALS\n+#include <yvals.h>\n+#endif /* _YVALS */\n+#include <sysLib.h>\n+\n+#define CLOCKS_PER_SEC  sysClkRateGet()\n+#endif  /* VXWORKS_TIME_H_SYSLIB_CHECK */"}, {"sha": "ea384d9cf9e351856885b2ad97ca8a8b9c7229b1", "filename": "fixincludes/tests/base/yvals.h", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/fixincludes%2Ftests%2Fbase%2Fyvals.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/fixincludes%2Ftests%2Fbase%2Fyvals.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2Ftests%2Fbase%2Fyvals.h?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -0,0 +1,17 @@\n+/*  DO NOT EDIT THIS FILE.\n+\n+    It has been auto-edited by fixincludes from:\n+\n+\t\"fixinc/tests/inc/yvals.h\"\n+\n+    This had to be done to correct non-standard usages in the\n+    original, manufacturer supplied header file.  */\n+\n+\n+\n+#if defined( VXWORKS_NEXT_YVALS_CHECK )\n+#if 0 /* GCC does not provide yvals.h.  */\n+#include_next <yvals.h>\n+#else\n+\n+#endif  /* VXWORKS_NEXT_YVALS_CHECK */"}, {"sha": "cf70fb4be179ae97032afa8d703ed817fe616cbb", "filename": "gcc/ABOUT-GCC-NLS", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2FABOUT-GCC-NLS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2FABOUT-GCC-NLS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FABOUT-GCC-NLS?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -49,7 +49,7 @@ configure GCC with --enable-maintainer-mode to get the master catalog\n rebuilt.\n \n \f\n-Copyright (C) 1998-2021 Free Software Foundation, Inc.\n+Copyright (C) 1998-2022 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"}, {"sha": "b700dc1d471e7a9523f986739c34919269abbb74", "filename": "gcc/BASE-VER", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2FBASE-VER", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2FBASE-VER", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FBASE-VER?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -1 +1 @@\n-12.0.0\n+12.0.1"}, {"sha": "440e3368a950e8a52b8e92d443bb7ec565f5b756", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1011, "deletions": 22554, "changes": 23565, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "3d36cb70da39ebe529494fd0dd2ed0c0b13bca18", "filename": "gcc/ChangeLog-2021", "status": "added", "additions": 35692, "deletions": 0, "changes": 35692, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2FChangeLog-2021", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2FChangeLog-2021", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog-2021?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "2ee45af2ad017a7dcb63454d3dcfe45eb8f09bba", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -1 +1 @@\n-20210917\n+20220117"}, {"sha": "40970a753d9c05139097246f6a301c613bfbfbf7", "filename": "gcc/LANGUAGES", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2FLANGUAGES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2FLANGUAGES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FLANGUAGES?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -57,7 +57,7 @@ Feb 1, 1998:\n     DEFTREECODE (CLASS_METHOD_DECL, \"class_method_decl\", 'd', 0)\n \n \f\n-Copyright (C) 1998-2021 Free Software Foundation, Inc.\n+Copyright (C) 1998-2022 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"}, {"sha": "84f9209dce51d1c19acb58a024b98b2aae629162", "filename": "gcc/Makefile.in", "status": "modified", "additions": 37, "deletions": 10, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -1,7 +1,7 @@\n # Makefile for GNU Compiler Collection\n # Run 'configure' to generate Makefile from Makefile.in\n \n-# Copyright (C) 1987-2021 Free Software Foundation, Inc.\n+# Copyright (C) 1987-2022 Free Software Foundation, Inc.\n \n #This file is part of GCC.\n \n@@ -452,6 +452,7 @@ USER_H_INC_NEXT_POST = @user_headers_inc_next_post@\n \n # Enable target overriding of this fragment, as in config/t-vxworks.\n T_GLIMITS_H = $(srcdir)/glimits.h\n+T_STDINT_GCC_H = $(srcdir)/ginclude/stdint-gcc.h\n \n # The GCC to use for compiling crt*.o.\n # Usually the one we just built.\n@@ -715,6 +716,8 @@ tmpdir = /tmp\n \n datarootdir = @datarootdir@\n docdir = @docdir@\n+# Directory in which to put DVIs\n+dvidir = @dvidir@\n # Directory in which to build HTML\n build_htmldir = $(objdir)/HTML/gcc-$(version)\n # Directory in which to put HTML\n@@ -1094,6 +1097,10 @@ SYSLIBS = @GNAT_LIBEXC@\n GNATBIND = @GNATBIND@\n GNATMAKE = @GNATMAKE@\n \n+# Used from d/Make-lang.in\n+GDC = @GDC@\n+GDCFLAGS = @GDCFLAGS@\n+\n # Libs needed (at present) just for jcf-dump.\n LDEXP_LIB = @LDEXP_LIB@\n \n@@ -1396,11 +1403,13 @@ OBJS = \\\n \tgimple-if-to-switch.o \\\n \tgimple-iterator.o \\\n \tgimple-fold.o \\\n+\tgimple-harden-conditionals.o \\\n \tgimple-laddress.o \\\n \tgimple-loop-interchange.o \\\n \tgimple-loop-jam.o \\\n \tgimple-loop-versioning.o \\\n \tgimple-low.o \\\n+\tgimple-predicate-analysis.o \\\n \tgimple-pretty-print.o \\\n \tgimple-range.o \\\n \tgimple-range-cache.o \\\n@@ -1423,6 +1432,7 @@ OBJS = \\\n \tgimple-streamer-in.o \\\n \tgimple-streamer-out.o \\\n \tgimple-walk.o \\\n+\tgimple-warn-recursion.o \\\n \tgimplify.o \\\n \tgimplify-me.o \\\n \tgodump.o \\\n@@ -1696,7 +1706,6 @@ OBJS = \\\n \ttree.o \\\n \ttristate.o \\\n \ttyped-splay-tree.o \\\n-\tunique-ptr-tests.o \\\n \tvaltrack.o \\\n \tvalue-pointer-equiv.o \\\n \tvalue-query.o \\\n@@ -2990,7 +2999,7 @@ build/gengtype$(build_exeext) : build/gengtype-lex.o build/gengtype-parse.o \\\n gengtype$(exeext) : gengtype.o gengtype-lex.o gengtype-parse.o \\\n               gengtype-state.o errors.o $(LIBDEPS)\n \t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n-\t    $(filter-out ($LIBDEPS), $^) $(LIBS)\n+\t    $(filter-out $(LIBDEPS), $^) $(LIBS)\n \n # Rule for the generator programs:\n $(genprog:%=build/gen%$(build_exeext)): build/gen%$(build_exeext): build/gen%.o $(BUILD_LIBDEPS)\n@@ -3119,7 +3128,7 @@ gcov-tool$(exeext): $(GCOV_TOOL_OBJS) $(LIBDEPS)\n # be rebuilt.\n \n # Build the include directories.\n-stmp-int-hdrs: $(STMP_FIXINC) $(T_GLIMITS_H) $(USER_H) fixinc_list\n+stmp-int-hdrs: $(STMP_FIXINC) $(T_GLIMITS_H) $(T_STDINT_GCC_H) $(USER_H) fixinc_list\n # Copy in the headers provided with gcc.\n #\n # The sed command gets just the last file name component;\n@@ -3165,7 +3174,7 @@ stmp-int-hdrs: $(STMP_FIXINC) $(T_GLIMITS_H) $(USER_H) fixinc_list\n \t  cp $(srcdir)/ginclude/stdint-wrap.h include/stdint.h; \\\n \t  chmod a+r include/stdint.h; \\\n \telif [ $(USE_GCC_STDINT) = provide ]; then \\\n-\t  cp $(srcdir)/ginclude/stdint-gcc.h include/stdint.h; \\\n+\t  cp $(T_STDINT_GCC_H) include/stdint.h; \\\n \t  chmod a+r include/stdint.h; \\\n \tfi\n \tset -e; for ml in `cat fixinc_list`; do \\\n@@ -3414,8 +3423,10 @@ $(build_htmldir)/gcc/index.html: $(TEXI_GCC_FILES)\n $(build_htmldir)/gccint/index.html: $(TEXI_GCCINT_FILES)\n $(build_htmldir)/cppinternals/index.html: $(TEXI_CPPINT_FILES)\n \n-dvi:: doc/gcc.dvi doc/gccint.dvi doc/gccinstall.dvi doc/cpp.dvi \\\n-      doc/cppinternals.dvi lang.dvi\n+DVIFILES = doc/gcc.dvi doc/gccint.dvi doc/gccinstall.dvi doc/cpp.dvi \\\n+           doc/cppinternals.dvi\n+\n+dvi:: $(DVIFILES) lang.dvi\n \n doc/%.dvi: %.texi\n \t$(TEXI2DVI) -I . -I $(abs_docdir) -I $(abs_docdir)/include -o $@ $<\n@@ -3709,7 +3720,7 @@ install-plugin: installdirs lang.install-plugin s-header-vars install-gengtype\n # We keep the directory structure for files in config, common/config or\n # c-family and .def files. All other files are flattened to a single directory.\n \t$(mkinstalldirs) $(DESTDIR)$(plugin_includedir)\n-\theaders=`echo $(PLUGIN_HEADERS) $$(cd $(srcdir); echo *.h *.def) | tr ' ' '\\012' | sort -u`; \\\n+\theaders=`echo $(sort $(PLUGIN_HEADERS)) $$(cd $(srcdir); echo *.h *.def) | tr ' ' '\\012' | sort -u`; \\\n \tsrcdirstrip=`echo \"$(srcdir)\" | sed 's/[].[^$$\\\\*|]/\\\\\\\\&/g'`; \\\n \tfor file in $$headers; do \\\n \t  if [ -f $$file ] ; then \\\n@@ -3825,6 +3836,18 @@ $(DESTDIR)$(infodir)/%.info: doc/%.info installdirs\n \t  else true; fi; \\\n \telse true; fi;\n \n+dvi__strip_dir = `echo $$p | sed -e 's|^.*/||'`;\n+\n+install-dvi: $(DVIFILES) lang.install-dvi\n+\t@$(NORMAL_INSTALL)\n+\ttest -z \"$(dvidir)/gcc\" || $(mkinstalldirs) \"$(DESTDIR)$(dvidir)/gcc\"\n+\t@list='$(DVIFILES)'; for p in $$list; do \\\n+\t  if test -f \"$$p\"; then d=; else d=\"$(srcdir)/\"; fi; \\\n+\t  f=$(dvi__strip_dir) \\\n+\t  echo \" $(INSTALL_DATA) '$$d$$p' '$(DESTDIR)$(dvidir)/gcc/$$f'\"; \\\n+\t  $(INSTALL_DATA) \"$$d$$p\" \"$(DESTDIR)$(dvidir)/gcc/$$f\"; \\\n+\tdone\n+\n pdf__strip_dir = `echo $$p | sed -e 's|^.*/||'`;\n \n install-pdf: $(PDFFILES) lang.install-pdf\n@@ -4329,6 +4352,10 @@ paranoia: paranoia.o real.o $(LIBIBERTY)\n \n # These exist for maintenance purposes.\n \n+CTAGS=@CTAGS@\n+ETAGS=@ETAGS@\n+CSCOPE=@CSCOPE@\n+\n # Update the tags table.\n TAGS: lang.tags\n \t(cd $(srcdir);\t\t\t\t\t\\\n@@ -4338,14 +4365,14 @@ TAGS: lang.tags\n \t    incs=\"$$incs --include $$dir/TAGS.sub\";\t\\\n \t  fi;\t\t\t\t\t\t\\\n \tdone;\t\t\t\t\t\t\\\n-\tetags -o TAGS.sub c-family/*.h c-family/*.c c-family/*.cc \\\n+\t$(ETAGS) -o TAGS.sub c-family/*.h c-family/*.c c-family/*.cc \\\n \t      *.h *.c *.cc \\\n \t      ../include/*.h ../libiberty/*.c \\\n \t      ../libcpp/*.c ../libcpp/include/*.h \\\n \t      --language=none --regex=\"/\\(char\\|unsigned int\\|int\\|bool\\|void\\|HOST_WIDE_INT\\|enum [A-Za-z_0-9]+\\) [*]?\\([A-Za-z_0-9]+\\)/\\2/\" common.opt\t\\\n \t      --language=none --regex=\"/\\(DEF_RTL_EXPR\\|DEFTREECODE\\|DEFGSCODE\\|DEFTIMEVAR\\|DEFPARAM\\|DEFPARAMENUM5\\)[ ]?(\\([A-Za-z_0-9]+\\)/\\2/\" rtl.def tree.def gimple.def timevar.def \\\n \t\t; \\\n-\tetags --include TAGS.sub $$incs)\n+\t$(ETAGS) --include TAGS.sub $$incs)\n \n # -----------------------------------------------------\n # Rules for generating translated message descriptions."}, {"sha": "cd03da7216008b8ca8e2149b2d22dd96007d7b7d", "filename": "gcc/README.Portability", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2FREADME.Portability", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2FREADME.Portability", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FREADME.Portability?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -1,4 +1,4 @@\n-Copyright (C) 2000-2021 Free Software Foundation, Inc.\n+Copyright (C) 2000-2022 Free Software Foundation, Inc.\n \n This file is intended to contain a few notes about writing C code\n within GCC so that it compiles without error on the full range of"}, {"sha": "39ad1139a15f94e912cde30ae2609df0912b931a", "filename": "gcc/acinclude.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Facinclude.m4?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -1,4 +1,4 @@\n-dnl Copyright (C) 2005-2021 Free Software Foundation, Inc.\n+dnl Copyright (C) 2005-2022 Free Software Foundation, Inc.\n dnl\n dnl This file is part of GCC.\n dnl"}, {"sha": "6fc5e6eb9b1981ebe22486e6feaa60480616f276", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 1131, "deletions": 5710, "changes": 6841, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "451d7b20c43c31ad697f5af01d227134154a7661", "filename": "gcc/ada/ChangeLog-2021", "status": "added", "additions": 12135, "deletions": 0, "changes": 12135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2FChangeLog-2021", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2FChangeLog-2021", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog-2021?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "1b066ad6b1448e2ebcb179d4d115eadb1127a0b4", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 62, "deletions": 181, "changes": 243, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -56,6 +56,9 @@ GNATRTL_TASKING_OBJS= \\\n   s-putaim$(objext) \\\n   s-solita$(objext) \\\n   s-stusta$(objext) \\\n+  s-taasde$(objext) \\\n+  s-tadeca$(objext) \\\n+  s-tadert$(objext) \\\n   s-taenca$(objext) \\\n   s-taprob$(objext) \\\n   s-taprop$(objext) \\\n@@ -66,13 +69,10 @@ GNATRTL_TASKING_OBJS= \\\n   s-taskin$(objext) \\\n   s-taspri$(objext) \\\n   s-tasque$(objext) \\\n-  s-tasres$(objext) \\\n   s-tasren$(objext) \\\n+  s-tasres$(objext) \\\n   s-tassta$(objext) \\\n   s-tasuti$(objext) \\\n-  s-taasde$(objext) \\\n-  s-tadeca$(objext) \\\n-  s-tadert$(objext) \\\n   s-tataat$(objext) \\\n   s-tpinop$(objext) \\\n   s-tpoben$(objext) \\\n@@ -91,7 +91,7 @@ GNATRTL_ALTIVEC_OBJS= \\\n   g-alvety$(objext) \\\n   g-alvevi$(objext)\n \n-# Objects needed for non-tasking.\n+# Objects needed for non-tasking\n GNATRTL_NONTASKING_OBJS= \\\n   a-assert$(objext) \\\n   a-btgbso$(objext) \\\n@@ -162,6 +162,7 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-coormu$(objext) \\\n   a-coorse$(objext) \\\n   a-coprnu$(objext) \\\n+  a-costso$(objext) \\\n   a-coteio$(objext) \\\n   a-crbltr$(objext) \\\n   a-crbtgk$(objext) \\\n@@ -210,6 +211,12 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-lllwti$(objext) \\\n   a-lllzti$(objext) \\\n   a-locale$(objext) \\\n+  a-nagefl$(objext) \\\n+  a-naliop$(objext) \\\n+  a-nallfl$(objext) \\\n+  a-nalofl$(objext) \\\n+  a-nashfl$(objext) \\\n+  a-nbnbig$(objext) \\\n   a-nbnbin$(objext) \\\n   a-nbnbre$(objext) \\\n   a-ncelfu$(objext) \\\n@@ -231,19 +238,14 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-nscefu$(objext) \\\n   a-nscoty$(objext) \\\n   a-nselfu$(objext) \\\n+  a-nuauco$(objext) \\\n+  a-nuaufl$(objext) \\\n   a-nubinu$(objext) \\\n   a-nucoar$(objext) \\\n   a-nucoty$(objext) \\\n   a-nudira$(objext) \\\n   a-nuelfu$(objext) \\\n   a-nuflra$(objext) \\\n-  a-nagefl$(objext) \\\n-  a-nallfl$(objext) \\\n-  a-nalofl$(objext) \\\n-  a-nuaufl$(objext) \\\n-  a-nashfl$(objext) \\\n-  a-nuauco$(objext) \\\n-  a-naliop$(objext) \\\n   a-numaux$(objext) \\\n   a-numeri$(objext) \\\n   a-nurear$(objext) \\\n@@ -273,28 +275,28 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-ssiwti$(objext) \\\n   a-ssizti$(objext) \\\n   a-stboha$(objext) \\\n+  a-stbubo$(objext) \\\n+  a-stbufi$(objext) \\\n+  a-stbufo$(objext) \\\n+  a-stbuun$(objext) \\\n+  a-stbuut$(objext) \\\n   a-stfiha$(objext) \\\n   a-stmaco$(objext) \\\n   a-storio$(objext) \\\n   a-strbou$(objext) \\\n   a-stream$(objext) \\\n-  a-strsto$(objext) \\\n-  a-ststbo$(objext) \\\n-  a-ststun$(objext) \\\n   a-strfix$(objext) \\\n   a-strhas$(objext) \\\n   a-string$(objext) \\\n   a-strmap$(objext) \\\n   a-strsea$(objext) \\\n+  a-strsto$(objext) \\\n   a-strsup$(objext) \\\n   a-strunb$(objext) \\\n+  a-ststbo$(objext) \\\n   a-ststio$(objext) \\\n+  a-ststun$(objext) \\\n   a-sttebu$(objext) \\\n-  a-stbuun$(objext) \\\n-  a-stbubo$(objext) \\\n-  a-stbuut$(objext) \\\n-  a-stbufi$(objext) \\\n-  a-stbufo$(objext) \\\n   a-stunau$(objext) \\\n   a-stunha$(objext) \\\n   a-stuten$(objext) \\\n@@ -581,8 +583,8 @@ GNATRTL_NONTASKING_OBJS= \\\n   s-except$(objext) \\\n   s-exctab$(objext) \\\n   s-exctra$(objext) \\\n-  s-exnint$(objext) \\\n   s-exnflt$(objext) \\\n+  s-exnint$(objext) \\\n   s-exnlfl$(objext) \\\n   s-exnllf$(objext) \\\n   s-exnlli$(objext) \\\n@@ -638,8 +640,8 @@ GNATRTL_NONTASKING_OBJS= \\\n   s-imgflt$(objext) \\\n   s-imgint$(objext) \\\n   s-imglfl$(objext) \\\n-  s-imgllf$(objext) \\\n   s-imgllb$(objext) \\\n+  s-imgllf$(objext) \\\n   s-imglli$(objext) \\\n   s-imgllu$(objext) \\\n   s-imgllw$(objext) \\\n@@ -745,12 +747,12 @@ GNATRTL_NONTASKING_OBJS= \\\n   s-spsufi$(objext) \\\n   s-stache$(objext) \\\n   s-stalib$(objext) \\\n+  s-statxd$(objext) \\\n   s-stausa$(objext) \\\n   s-stoele$(objext) \\\n   s-stopoo$(objext) \\\n   s-stposu$(objext) \\\n   s-stratt$(objext) \\\n-  s-statxd$(objext) \\\n   s-strhas$(objext) \\\n   s-string$(objext) \\\n   s-ststop$(objext) \\\n@@ -760,15 +762,15 @@ GNATRTL_NONTASKING_OBJS= \\\n   s-trasym$(objext) \\\n   s-unstyp$(objext) \\\n   s-utf_32$(objext) \\\n-  s-valboo$(objext) \\\n-  s-valcha$(objext) \\\n   s-vade32$(objext) \\\n   s-vade64$(objext) \\\n   s-vaen16$(objext) \\\n   s-vaen32$(objext) \\\n   s-vaenu8$(objext) \\\n   s-vafi32$(objext) \\\n   s-vafi64$(objext) \\\n+  s-valboo$(objext) \\\n+  s-valcha$(objext) \\\n   s-valflt$(objext) \\\n   s-valint$(objext) \\\n   s-vallfl$(objext) \\\n@@ -896,7 +898,7 @@ ATOMICS_BUILTINS_TARGET_PAIRS = \\\n \n X86_TARGET_PAIRS = \\\n   a-nuauco.ads<libgnat/a-nuauco__x86.ads \\\n-  s-atocou.adb<libgnat/s-atocou__x86.adb\n+  s-atocou.adb<libgnat/s-atocou__builtin.adb\n \n X86_64_TARGET_PAIRS = \\\n   a-nuauco.ads<libgnat/a-nuauco__x86.ads \\\n@@ -1083,7 +1085,7 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworks vxworksspe vxworks7% vxworks7spe\n   a-nuaufl.ads<libgnat/a-nuaufl__wraplf.ads \\\n   a-nashfl.ads<libgnat/a-nashfl__wraplf.ads \\\n   s-dorepr.adb<libgnat/s-dorepr__fma.adb \\\n-  s-inmaop.adb<libgnarl/s-inmaop__vxworks.adb \\\n+  s-inmaop.adb<libgnarl/s-inmaop__hwint.adb \\\n   s-intman.ads<libgnarl/s-intman__vxworks.ads \\\n   s-intman.adb<libgnarl/s-intman__vxworks.adb \\\n   s-osinte.ads<libgnarl/s-osinte__vxworks.ads \\\n@@ -1165,9 +1167,6 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworks vxworksspe vxworks7% vxworks7spe\n           s-vxwext.ads<libgnarl/s-vxwext__kernel.ads \\\n           s-vxwext.adb<libgnarl/s-vxwext__kernel.adb \\\n           system.ads<libgnat/$(SVX)-$(ARCH_STR)-kernel.ads\n-        else\n-          LIBGNAT_TARGET_PAIRS += \\\n-          system.ads<libgnat/system-vxworks-ppc.ads\n         endif\n       endif\n       EXTRA_GNATRTL_NONTASKING_OBJS+=i-vxinco.o i-vxwork.o i-vxwoio.o\n@@ -1187,144 +1186,14 @@ ifeq ($(strip $(filter-out powerpc% wrs vxworks vxworksspe vxworks7% vxworks7spe\n     else\n       GCC_SPEC_FILES+=vxworks7-rtp-base-link.spec\n     endif\n-    GCC_SPEC_FILES+=vxworks7-cert-rtp-link.spec\n+    GCC_SPEC_FILES+=vxworks7-cert-rtp-link__ppcXX.spec\n   else\n     GCC_SPEC_FILES+=vxworks-$(ARCH_STR)-link.spec\n     GCC_SPEC_FILES+=vxworks-cert-$(ARCH_STR)-link.spec\n     GCC_SPEC_FILES+=vxworks-smp-$(ARCH_STR)-link.spec\n   endif\n endif\n \n-# PowerPC and e500v2 VxWorks 653\n-ifeq ($(strip $(filter-out powerpc% wrs vxworksae vxworksaespe,$(target_cpu) $(target_vendor) $(target_os))),)\n-\n-  ifeq ($(strip $(filter-out e500%, $(target_alias))),)\n-     ARCH_STR=e500\n-     # gcc config translates the target e500v2-wrs-vxworks to\n-     # powerpc-wrs-vxworksspe. Let's keep the original alias here when\n-     # generating s-oscons.ads.\n-     target=$(target_alias)\n-  else\n-     ARCH_STR=ppc\n-  endif\n-\n-  # target pairs for vthreads runtime\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-elchha.adb<libgnat/a-elchha__vxworks-ppc-full.adb \\\n-  a-intnam.ads<libgnarl/a-intnam__vxworks.ads \\\n-  a-naliop.ads<libgnat/a-naliop__nolibm.ads \\\n-  a-nuaufl.ads<libgnat/a-nuaufl__wraplf.ads \\\n-  a-nashfl.ads<libgnat/a-nashfl__wraplf.ads \\\n-  g-io.adb<hie/g-io__vxworks-cert.adb \\\n-  s-dorepr.adb<libgnat/s-dorepr__fma.adb \\\n-  s-inmaop.adb<libgnarl/s-inmaop__vxworks.adb \\\n-  s-interr.adb<libgnarl/s-interr__vxworks.adb \\\n-  s-intman.ads<libgnarl/s-intman__vxworks.ads \\\n-  s-intman.adb<libgnarl/s-intman__vxworks.adb \\\n-  s-osinte.adb<libgnarl/s-osinte__vxworks.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__vxworks.ads \\\n-  s-osprim.adb<libgnat/s-osprim__vxworks.adb \\\n-  s-parame.ads<libgnat/s-parame__ae653.ads \\\n-  s-parame.adb<libgnat/s-parame__vxworks.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__vxworks.adb \\\n-  s-tasinf.ads<libgnarl/s-tasinf__vxworks.ads \\\n-  s-taspri.ads<libgnarl/s-taspri__vxworks.ads \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__vxworks.adb \\\n-  s-vxwext.adb<libgnarl/s-vxwext__noints.adb \\\n-  s-vxwext.ads<libgnarl/s-vxwext__vthreads.ads \\\n-  s-vxwork.ads<libgnarl/s-vxwork__ppc.ads \\\n-  $(ATOMICS_TARGET_PAIRS) \\\n-  $(ATOMICS_BUILTINS_TARGET_PAIRS) \\\n-  system.ads<libgnat/system-vxworks-$(ARCH_STR)-vthread.ads\n-\n-  EH_MECHANISM=-gcc\n-\n-  TOOLS_TARGET_PAIRS=indepsw.adb<indepsw-gnu.adb\n-\n-  EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o\n-  EXTRA_GNATRTL_TASKING_OBJS=i-vxinco.o s-vxwork.o s-vxwext.o\n-\n-  EXTRA_LIBGNAT_OBJS+=sigtramp-vxworks.o\n-  EXTRA_LIBGNAT_SRCS+=$(VX_SIGTRAMP_EXTRA_SRCS)\n-\n-  # Extra pairs for the vthreads runtime\n-  ifeq ($(strip $(filter-out vthreads,$(THREAD_KIND))),)\n-    LIBGNAT_TARGET_PAIRS += \\\n-    s-thread.adb<libgnat/s-thread__ae653.adb \\\n-    s-osvers.ads<libgnat/s-osvers__vxworks-653.ads \\\n-    $(DUMMY_SOCKETS_TARGET_PAIRS)\n-\n-    GNATRTL_SOCKETS_OBJS =\n-    EXTRA_GNATRTL_NONTASKING_OBJS += s-thread.o s-osvers.o\n-  else\n-    LIBGNAT_TARGET_PAIRS += \\\n-    g-socthi.ads<libgnat/g-socthi__vxworks.ads \\\n-    g-socthi.adb<libgnat/g-socthi__vxworks.adb \\\n-    g-sopowa.adb<libgnat/g-sopowa__posix.adb \\\n-    g-stsifd.adb<libgnat/g-stsifd__sockets.adb\n-  endif\n-\n-endif\n-\n-# VxWorksae / VxWorks 653 for x86 (vxsim) - ?? VxWorks mils not implemented\n-ifeq ($(strip $(filter-out %86 wrs vxworksae,$(target_cpu) $(target_vendor) $(target_os))),)\n-  # target pairs for kernel + vthreads runtime\n-  LIBGNAT_TARGET_PAIRS = \\\n-  a-elchha.adb<libgnat/a-elchha__vxworks-ppc-full.adb \\\n-  a-intnam.ads<libgnarl/a-intnam__vxworks.ads \\\n-  a-naliop.ads<libgnat/a-naliop__nolibm.ads \\\n-  a-nuaufl.ads<libgnat/a-nuaufl__wraplf.ads \\\n-  a-nashfl.ads<libgnat/a-nashfl__wraplf.ads \\\n-  g-io.adb<hie/g-io__vxworks-cert.adb \\\n-  s-inmaop.adb<libgnarl/s-inmaop__vxworks.adb \\\n-  s-interr.adb<libgnarl/s-interr__vxworks.adb \\\n-  s-intman.ads<libgnarl/s-intman__vxworks.ads \\\n-  s-intman.adb<libgnarl/s-intman__vxworks.adb \\\n-  s-osinte.adb<libgnarl/s-osinte__vxworks.adb \\\n-  s-osinte.ads<libgnarl/s-osinte__vxworks.ads \\\n-  s-osprim.adb<libgnat/s-osprim__vxworks.adb \\\n-  s-parame.ads<libgnat/s-parame__ae653.ads \\\n-  s-parame.adb<libgnat/s-parame__vxworks.adb \\\n-  s-taprop.adb<libgnarl/s-taprop__vxworks.adb \\\n-  s-tasinf.ads<libgnarl/s-tasinf__vxworks.ads \\\n-  s-taspri.ads<libgnarl/s-taspri__vxworks.ads \\\n-  s-tpopsp.adb<libgnarl/s-tpopsp__vxworks.adb \\\n-  s-vxwext.adb<libgnarl/s-vxwext__noints.adb \\\n-  s-vxwext.ads<libgnarl/s-vxwext__vthreads.ads \\\n-  s-vxwork.ads<libgnarl/s-vxwork__x86.ads \\\n-  system.ads<libgnat/system-vxworks-x86-vthread.ads \\\n-  $(ATOMICS_TARGET_PAIRS) \\\n-  $(ATOMICS_BUILTINS_TARGET_PAIRS)\n-\n-  EH_MECHANISM=-gcc\n-\n-  TOOLS_TARGET_PAIRS=indepsw.adb<indepsw-gnu.adb\n-\n-  EXTRA_GNATRTL_NONTASKING_OBJS=i-vxwork.o i-vxwoio.o s-thread.o\n-  EXTRA_GNATRTL_TASKING_OBJS=i-vxinco.o s-vxwork.o s-vxwext.o\n-\n-  EXTRA_LIBGNAT_OBJS+=vx_stack_info.o\n-  GNATRTL_SOCKETS_OBJS =\n-\n-  # Extra pairs for the vthreads runtime\n-  ifeq ($(strip $(filter-out vthreads,$(THREAD_KIND))),)\n-    LIBGNAT_TARGET_PAIRS += \\\n-    s-thread.adb<libgnat/s-thread__ae653.adb \\\n-    s-osvers.ads<libgnat/s-osvers__vxworks-653.ads \\\n-    $(DUMMY_SOCKETS_TARGET_PAIRS)\n-\n-    GNATRTL_SOCKETS_OBJS =\n-    EXTRA_GNATRTL_NONTASKING_OBJS += s-thread.o s-osvers.o\n-  else\n-    LIBGNAT_TARGET_PAIRS += \\\n-    g-socthi.ads<libgnat/g-socthi__vxworks.ads \\\n-    g-socthi.adb<libgnat/g-socthi__vxworks.adb \\\n-    g-sopowa.adb<libgnat/g-sopowa__posix.adb \\\n-    g-stsifd.adb<libgnat/g-stsifd__sockets.adb\n-  endif\n-\n-endif\n-\n # x86/x86_64 VxWorks\n ifeq ($(strip $(filter-out %86 x86_64 wrs vxworks vxworks7%,$(target_cpu) $(target_vendor) $(target_os))),)\n \n@@ -1336,7 +1205,7 @@ ifeq ($(strip $(filter-out %86 x86_64 wrs vxworks vxworks7%,$(target_cpu) $(targ\n   a-nashfl.ads<libgnat/a-nashfl__wraplf.ads \\\n   s-osinte.adb<libgnarl/s-osinte__vxworks.adb \\\n   s-osinte.ads<libgnarl/s-osinte__vxworks.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__vxworks.adb \\\n+  s-inmaop.adb<libgnarl/s-inmaop__hwint.adb \\\n   s-intman.ads<libgnarl/s-intman__vxworks.ads \\\n   s-intman.adb<libgnarl/s-intman__vxworks.adb \\\n   s-osprim.adb<libgnat/s-osprim__posix.adb \\\n@@ -1444,9 +1313,6 @@ ifeq ($(strip $(filter-out %86 x86_64 wrs vxworks vxworks7%,$(target_cpu) $(targ\n           s-vxwext.ads<libgnarl/s-vxwext__kernel.ads \\\n           s-vxwext.adb<libgnarl/s-vxwext__kernel.adb \\\n           system.ads<libgnat/$(SVX)-x86-kernel.ads\n-        else\n-          LIBGNAT_TARGET_PAIRS += \\\n-          system.ads<libgnat/system-vxworks-x86.ads\n         endif\n       endif\n \n@@ -1480,7 +1346,7 @@ ifeq ($(strip $(filter-out aarch64 arm% coff wrs vx%,$(target_cpu) $(target_vend\n   a-naliop.ads<libgnat/a-naliop__nolibm.ads \\\n   a-nuaufl.ads<libgnat/a-nuaufl__wraplf.ads \\\n   a-nashfl.ads<libgnat/a-nashfl__wraplf.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__vxworks.adb \\\n+  s-inmaop.adb<libgnarl/s-inmaop__hwint.adb \\\n   s-interr.adb<libgnarl/s-interr__vxworks.adb \\\n   s-intman.ads<libgnarl/s-intman__vxworks.ads \\\n   s-intman.adb<libgnarl/s-intman__vxworks.adb \\\n@@ -1497,7 +1363,9 @@ ifeq ($(strip $(filter-out aarch64 arm% coff wrs vx%,$(target_cpu) $(target_vend\n   g-socthi.ads<libgnat/g-socthi__vxworks.ads \\\n   g-socthi.adb<libgnat/g-socthi__vxworks.adb \\\n   g-sopowa.adb<libgnat/g-sopowa__posix.adb \\\n-  g-stsifd.adb<libgnat/g-stsifd__sockets.adb\n+  g-stsifd.adb<libgnat/g-stsifd__sockets.adb \\\n+  $(ATOMICS_TARGET_PAIRS) \\\n+  $(ATOMICS_BUILTINS_TARGET_PAIRS)\n \n   ifeq ($(strip $(filter-out aarch64, $(target_cpu))),)\n     ARCH_STR=aarch64\n@@ -2176,28 +2044,42 @@ ifeq ($(strip $(filter-out rtems%,$(target_os))),)\n   LIBGNAT_TARGET_PAIRS = \\\n   system.ads<libgnat/system-rtems.ads \\\n   a-intnam.ads<libgnarl/a-intnam__rtems.ads \\\n-  s-inmaop.adb<libgnarl/s-inmaop__posix.adb \\\n-  s-intman.adb<libgnarl/s-intman__posix.adb \\\n+  s-inmaop.adb<libgnarl/s-inmaop__hwint.adb \\\n+  s-intman.adb<libgnarl/s-intman__rtems.adb \\\n+  s-intman.ads<libgnarl/s-intman__rtems.ads \\\n   s-osinte.adb<libgnarl/s-osinte__rtems.adb \\\n   s-osinte.ads<libgnarl/s-osinte__rtems.ads \\\n   s-osprim.adb<libgnat/s-osprim__rtems.adb \\\n   s-parame.adb<libgnat/s-parame__rtems.adb \\\n   s-parame.ads<libgnat/s-parame__posix2008.ads \\\n-  s-taprop.adb<libgnarl/s-taprop__posix.adb \\\n+  s-taprop.adb<libgnarl/s-taprop__rtems.adb \\\n   s-taspri.ads<libgnarl/s-taspri__posix.ads \\\n   s-tpopsp.adb<libgnarl/s-tpopsp__tls.adb \\\n-  s-stchop.adb<libgnat/s-stchop__rtems.adb \\\n   s-interr.adb<libgnarl/s-interr__hwint.adb\n \n+  EXTRA_GNATRTL_NONTASKING_OBJS += s-stchop.o\n+\n   ifeq ($(strip $(filter-out arm%, $(target_cpu))),)\n     EH_MECHANISM=-arm\n   else\n     EH_MECHANISM=-gcc\n   endif\n \n+  ifeq ($(strip $(filter-out aarch64%,$(target_cpu))),)\n+    LIBGNAT_TARGET_PAIRS += $(GNATRTL_128BIT_PAIRS)\n+    EXTRA_GNATRTL_NONTASKING_OBJS += $(GNATRTL_128BIT_OBJS)\n+  endif\n+\n   ifeq ($(strip $(filter-out aarch64% riscv%,$(target_cpu))),)\n     LIBGNAT_TARGET_PAIRS += a-nallfl.ads<libgnat/a-nallfl__wraplf.ads\n   endif\n+\n+  # Target CPUs that support atomic primitives\n+  ifeq ($(strip $(filter-out aarch64%,$(target_cpu))),)\n+     LIBGNAT_TARGET_PAIRS += \\\n+       $(ATOMICS_TARGET_PAIRS) \\\n+       $(ATOMICS_BUILTINS_TARGET_PAIRS)\n+  endif\n endif\n \n # PikeOS\n@@ -3024,8 +2906,7 @@ ADA_EXCLUDE_SRCS =\\\n   g-intpri.ads g-regist.adb g-regist.ads g-sse.ads    g-ssvety.ads \\\n   i-vxinco.adb i-vxinco.ads i-vxwoio.adb i-vxwoio.ads i-vxwork.ads \\\n   s-linux.ads  s-vxwext.adb s-vxwext.ads s-win32.ads  s-winext.ads \\\n-  s-sopco3.adb s-sopco3.ads s-sopco4.adb s-sopco4.ads \\\n-  s-sopco5.adb s-sopco5.ads s-stchop.ads s-stchop.adb \\\n+  s-stchop.ads s-stchop.adb \\\n   s-strcom.adb s-strcom.ads s-thread.ads \\\n \n # ADA_EXCLUDE_SRCS without the sources used by the target\n@@ -3088,7 +2969,7 @@ setup-rts: force\n \n ADA_TARGET_PROPERTIES = -gnatet=ada_target_properties\n \n-system.o  : system.ads\n+system.o: system.ads\n \t$(ADAC) -c $(ALL_ADAFLAGS) $(ADA_INCLUDES) $< \\\n \t  $(ADA_TARGET_PROPERTIES) \\\n \t  $(OUTPUT_OPTION)\n@@ -3097,15 +2978,15 @@ system.o  : system.ads\n # frames to be skipped when computing a call chain is not modified by\n # optimization. We don't want inlining, either.\n \n-s-traceb.o  : s-traceb.adb s-traceb.ads\n+s-traceb.o: s-traceb.adb s-traceb.ads\n \t$(ADAC) -c $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) \\\n \t  $(NO_INLINE_ADAFLAGS) $(NO_SIBLING_ADAFLAGS) $(ADA_INCLUDES) $< \\\n \t  $(OUTPUT_OPTION)\n \n # Compile s-tasdeb.o without optimization and with debug info so that it is\n # always possible to set conditional breakpoints on tasks.\n \n-s-tasdeb.o  : s-tasdeb.adb s-tasdeb.ads\n+s-tasdeb.o: s-tasdeb.adb s-tasdeb.ads\n \t$(ADAC) -c $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) -O0 $(ADA_INCLUDES) \\\n \t  $< $(OUTPUT_OPTION)\n \n@@ -3115,7 +2996,7 @@ s-tasdeb.o  : s-tasdeb.adb s-tasdeb.ads\n # possible to set conditional breakpoints on exceptions.\n # use -O1 otherwise gdb isn't able to get a full backtrace on mips targets.\n \n-a-except.o  : a-except.adb a-except.ads\n+a-except.o: a-except.adb a-except.ads\n \t$(ADAC) -c $(ALL_ADAFLAGS) -O1 $(FORCE_DEBUG_ADAFLAGS) \\\n \t  $(NO_INLINE_ADAFLAGS) $(NO_REORDER_ADAFLAGS) $(ADA_INCLUDES) \\\n \t  $< $(OUTPUT_OPTION)\n@@ -3124,28 +3005,28 @@ a-except.o  : a-except.adb a-except.ads\n # debugger set breakpoints and inspect subprogram parameters on exception\n # related events.\n \n-s-excdeb.o  : s-excdeb.adb s-excdeb.ads s-except.ads\n+s-excdeb.o: s-excdeb.adb s-excdeb.ads s-except.ads\n \t$(ADAC) -c $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) -O0 \\\n \t  $(ADA_INCLUDES) $< $(OUTPUT_OPTION)\n \n # Force debugging information on s-assert.o so that it is always\n # possible to set breakpoint on assert failures.\n \n-s-assert.o  : s-assert.adb s-assert.ads\n+s-assert.o: s-assert.adb s-assert.ads\n \t$(ADAC) -c $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) $(ADA_INCLUDES) \\\n \t  $< $(OUTPUT_OPTION)\n \n # Force debugging information on a-tags.o so that the debugger can find\n # the description of Ada.Tags.Type_Specific_Data.\n \n-a-tags.o  : a-tags.adb a-tags.ads\n+a-tags.o: a-tags.adb a-tags.ads\n \t$(ADAC) -c $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) $(ADA_INCLUDES) \\\n \t  $< $(OUTPUT_OPTION)\n \n # Force no sibling call optimization on s-memory.o to avoid turning the\n # tail recursion in Alloc into a loop that confuses branch prediction.\n \n-s-memory.o  : s-memory.adb s-memory.ads\n+s-memory.o: s-memory.adb s-memory.ads\n \t$(ADAC) -c $(ALL_ADAFLAGS) $(NO_SIBLING_ADAFLAGS) $(ADA_INCLUDES) \\\n \t  $< $(OUTPUT_OPTION)\n "}, {"sha": "8922c64730223548cec86efdbb57cf95e5ff6b20", "filename": "gcc/ada/ada_get_targ.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fada_get_targ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fada_get_targ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fada_get_targ.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "3adbfd0cff47f3512ace9164e673e63c43048e90", "filename": "gcc/ada/adabkend.adb", "status": "modified", "additions": 12, "deletions": 48, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fadabkend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fadabkend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadabkend.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 2001-2021, AdaCore                     --\n+--                     Copyright (C) 2001-2022, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -22,15 +22,16 @@\n \n --  This is the version of the Back_End package for back ends written in Ada\n \n-with Atree;    use Atree;\n+with Atree;         use Atree;\n+with Backend_Utils; use Backend_Utils;\n with Debug;\n with Lib;\n-with Opt;      use Opt;\n-with Output;   use Output;\n-with Osint;    use Osint;\n-with Osint.C;  use Osint.C;\n-with Switch.C; use Switch.C;\n-with Types;    use Types;\n+with Opt;           use Opt;\n+with Output;        use Output;\n+with Osint;         use Osint;\n+with Osint.C;       use Osint.C;\n+with Switch.C;      use Switch.C;\n+with Types;         use Types;\n \n with System.OS_Lib; use System.OS_Lib;\n \n@@ -182,48 +183,11 @@ package body Adabkend is\n \n             return;\n \n-         --  Special check, the back-end switch -fno-inline also sets the\n-         --  front end flags to entirely inhibit all inlining. So we store it\n-         --  and set the appropriate flags.\n-\n-         elsif Switch_Chars (First .. Last) = \"fno-inline\" then\n-            Lib.Store_Compilation_Switch (Switch_Chars);\n-            Opt.Disable_FE_Inline := True;\n-            return;\n-\n-         --  Similar processing for -fpreserve-control-flow\n-\n-         elsif Switch_Chars (First .. Last) = \"fpreserve-control-flow\" then\n-            Lib.Store_Compilation_Switch (Switch_Chars);\n-            Opt.Suppress_Control_Flow_Optimizations := True;\n-            return;\n-\n-         --  Recognize -gxxx switches\n-\n-         elsif Switch_Chars (First) = 'g' then\n-            Debugger_Level := 2;\n-\n-            if First < Last then\n-               case Switch_Chars (First + 1) is\n-                  when '0' =>\n-                     Debugger_Level := 0;\n-                  when '1' =>\n-                     Debugger_Level := 1;\n-                  when '2' =>\n-                     Debugger_Level := 2;\n-                  when '3' =>\n-                     Debugger_Level := 3;\n-                  when others =>\n-                     null;\n-               end case;\n-            end if;\n-\n-         elsif Switch_Chars (First .. Last) = \"S\" then\n-            Generate_Asm := True;\n-\n          --  Ignore all other back-end switches\n \n-         elsif Is_Back_End_Switch (Switch_Chars) then\n+         elsif Scan_Common_Back_End_Switch (Switch_Chars)\n+            or else Is_Back_End_Switch (Switch_Chars)\n+         then\n             null;\n \n          --  Give error for junk switch"}, {"sha": "a5cecef9f1d1bccf5bfd98bbcf41ff539c18d000", "filename": "gcc/ada/adabkend.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fadabkend.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fadabkend.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadabkend.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "d2270a218758f1eaf05d9d935196ca67a59ec757", "filename": "gcc/ada/adadecode.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fadadecode.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fadadecode.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadadecode.c?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *           Copyright (C) 2001-2021, Free Software Foundation, Inc.        *\n+ *           Copyright (C) 2001-2022, Free Software Foundation, Inc.        *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "53b708cdec470657b322560d770ba25a1c03c5d7", "filename": "gcc/ada/adadecode.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fadadecode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fadadecode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadadecode.h?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *           Copyright (C) 2001-2021, Free Software Foundation, Inc.        *\n+ *           Copyright (C) 2001-2022, Free Software Foundation, Inc.        *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "591d033fbca17373a02af768ea805b205ab21caf", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 27, "deletions": 21, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2021, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2022, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -98,6 +98,7 @@\n \n #ifdef __QNX__\n #include <sys/syspage.h>\n+#include <sys/time.h>\n #endif\n \n #ifdef IN_RTS\n@@ -2423,8 +2424,10 @@ __gnat_portable_spawn (char *args[] ATTRIBUTE_UNUSED)\n   if (pid == 0)\n     {\n       /* The child. */\n-      if (execv (args[0], MAYBE_TO_PTR32 (args)) != 0)\n-\t_exit (1);\n+      execv (args[0], MAYBE_TO_PTR32 (args));\n+\n+      /* execv() returns only on error */\n+      _exit (1);\n     }\n \n   /* The parent.  */\n@@ -2821,8 +2824,10 @@ __gnat_portable_no_block_spawn (char *args[] ATTRIBUTE_UNUSED)\n   if (pid == 0)\n     {\n       /* The child.  */\n-      if (execv (args[0], MAYBE_TO_PTR32 (args)) != 0)\n-\t_exit (1);\n+      execv (args[0], MAYBE_TO_PTR32 (args));\n+\n+      /* execv() returns only on error */\n+      _exit (1);\n     }\n \n   return pid;\n@@ -3542,6 +3547,9 @@ __gnat_get_executable_load_address (void)\n \n   return (const void *)map->l_addr;\n \n+#elif defined (_WIN32)\n+  return GetModuleHandle (NULL);\n+\n #else\n   return NULL;\n #endif\n@@ -3551,23 +3559,21 @@ void\n __gnat_kill (int pid, int sig, int close ATTRIBUTE_UNUSED)\n {\n #if defined(_WIN32)\n-  HANDLE h = OpenProcess (PROCESS_ALL_ACCESS, FALSE, pid);\n-  if (h == NULL)\n-    return;\n-  if (sig == 9)\n-    {\n-      TerminateProcess (h, 1);\n-    }\n-  else if (sig == SIGINT)\n-    GenerateConsoleCtrlEvent (CTRL_C_EVENT, pid);\n-  else if (sig == SIGBREAK)\n-    GenerateConsoleCtrlEvent (CTRL_BREAK_EVENT, pid);\n-  /* ??? The last two alternatives don't really work. SIGBREAK requires setting\n-     up process groups at start time which we don't do; treating SIGINT is just\n-     not possible apparently. So we really only support signal 9. Fortunately\n-     that's all we use in GNAT.Expect */\n+  HANDLE h;\n+\n+  switch (sig) {\n+    case 9: // SIGKILL is not declared in Windows headers\n+    case SIGINT:\n+    case SIGBREAK:\n+    case SIGTERM:\n+    case SIGABRT:\n+      h = OpenProcess (PROCESS_ALL_ACCESS, FALSE, pid);\n+      if (h != NULL) {\n+        TerminateProcess (h, sig);\n+        CloseHandle (h);\n+      }\n+  }\n \n-  CloseHandle (h);\n #elif defined (__vxworks)\n   /* Not implemented */\n #else"}, {"sha": "2631be5ad3ed47604ff7d697d6bbe53320ace210", "filename": "gcc/ada/adaint.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fadaint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fadaint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.h?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 1992-2021, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2022, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "5d4a2242b21f2d64cf3b9db59d02c085ff0e396b", "filename": "gcc/ada/affinity.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Faffinity.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Faffinity.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faffinity.c?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *            Copyright (C) 2005-2021, Free Software Foundation, Inc.       *\n+ *            Copyright (C) 2005-2022, Free Software Foundation, Inc.       *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "bb1fc41f09b8984650174b111ab5cdd5923ed66e", "filename": "gcc/ada/ali-util.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fali-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fali-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali-util.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -249,7 +249,6 @@ package body ALI.Util is\n                     Scan_ALI\n                       (F         => Afile,\n                        T         => Text,\n-                       Ignore_ED => False,\n                        Err       => False);\n \n                   Free (Text);"}, {"sha": "7cc6b7afc3a4f3f1843ec3116fa2c62e820b9fa3", "filename": "gcc/ada/ali-util.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fali-util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fali-util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali-util.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "1c3b5cc725c43feab5c7ce4d77efc6888dbaf467", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 13, "deletions": 26, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -892,7 +892,6 @@ package body ALI is\n    function Scan_ALI\n      (F                : File_Name_Type;\n       T                : Text_Buffer_Ptr;\n-      Ignore_ED        : Boolean;\n       Err              : Boolean;\n       Ignore_Lines     : String  := \"X\";\n       Ignore_Errors    : Boolean := False;\n@@ -964,19 +963,18 @@ package body ALI is\n       --  special characters are included in the returned name.\n \n       function Get_Name\n-        (Ignore_Spaces  : Boolean := False;\n-         Ignore_Special : Boolean := False;\n+        (Ignore_Special : Boolean := False;\n          May_Be_Quoted  : Boolean := False) return Name_Id;\n       --  Skip blanks, then scan out a name (name is left in Name_Buffer with\n       --  length in Name_Len, as well as being returned in Name_Id form).\n       --  If Lower is set to True then the Name_Buffer will be converted to\n       --  all lower case, for systems where file names are not case sensitive.\n       --  This ensures that gnatbind works correctly regardless of the case\n-      --  of the file name on all systems. The termination condition depends\n-      --  on the settings of Ignore_Spaces and Ignore_Special:\n+      --  of the file name on all systems.\n       --\n-      --    If Ignore_Spaces is False (normal case), then scan is terminated\n-      --    by the normal end of field condition (EOL, space, horizontal tab)\n+      --  The scan is terminated by the normal end of field condition\n+      --  (EOL, space, horizontal tab). Furthermore, the termination condition\n+      --  depends on the setting of Ignore_Special:\n       --\n       --    If Ignore_Special is False (normal case), the scan is terminated by\n       --    a typeref bracket or an equal sign except for the special case of\n@@ -987,7 +985,6 @@ package body ALI is\n       --    the name is 'unquoted'. In this case Ignore_Special is ignored and\n       --    assumed to be True.\n       --\n-      --  It is an error to set both Ignore_Spaces and Ignore_Special to True.\n       --  This function handles wide characters properly.\n \n       function Get_Nat return Nat;\n@@ -1241,8 +1238,7 @@ package body ALI is\n       --------------\n \n       function Get_Name\n-        (Ignore_Spaces  : Boolean := False;\n-         Ignore_Special : Boolean := False;\n+        (Ignore_Special : Boolean := False;\n          May_Be_Quoted  : Boolean := False) return Name_Id\n       is\n          Char : Character;\n@@ -1299,7 +1295,7 @@ package body ALI is\n             loop\n                Add_Char_To_Name_Buffer (Getc);\n \n-               exit when At_End_Of_Field and then not Ignore_Spaces;\n+               exit when At_End_Of_Field;\n \n                if not Ignore_Special then\n                   if Name_Buffer (1) = '\"' then\n@@ -1319,8 +1315,7 @@ package body ALI is\n                      exit when Nextc = ',';\n \n                      --  Terminate if left bracket not part of wide char\n-                     --  sequence Note that we only recognize brackets\n-                     --  notation so far ???\n+                     --  sequence.\n \n                      exit when Nextc = '[' and then T (P + 1) /= '\"';\n \n@@ -2938,9 +2933,7 @@ package body ALI is\n \n                         --  Store AD indication unless ignore required\n \n-                        if not Ignore_ED then\n-                           Withs.Table (Withs.Last).Elab_All_Desirable := True;\n-                        end if;\n+                        Withs.Table (Withs.Last).Elab_All_Desirable := True;\n \n                      elsif Nextc = 'E' then\n                         P := P + 1;\n@@ -2957,12 +2950,9 @@ package body ALI is\n                            Checkc ('D');\n                            Check_At_End_Of_Field;\n \n-                           --  Store ED indication unless ignore required\n+                           --  Store ED indication\n \n-                           if not Ignore_ED then\n-                              Withs.Table (Withs.Last).Elab_Desirable :=\n-                                True;\n-                           end if;\n+                           Withs.Table (Withs.Last).Elab_Desirable := True;\n                         end if;\n \n                      else\n@@ -3213,13 +3203,10 @@ package body ALI is\n             Skip_Space;\n             Sdep.Increment_Last;\n \n-            --  In the following call, Lower is not set to True, this is either\n-            --  a bug, or it deserves a special comment as to why this is so???\n-\n             --  The file/path name may be quoted\n \n             Sdep.Table (Sdep.Last).Sfile :=\n-              Get_File_Name (May_Be_Quoted => True);\n+              Get_File_Name (Lower => True, May_Be_Quoted => True);\n \n             Sdep.Table (Sdep.Last).Stamp := Get_Stamp;\n             Sdep.Table (Sdep.Last).Dummy_Entry :="}, {"sha": "8d6dd90043db0beb5d5615bb0bd38ebe43b1f764", "filename": "gcc/ada/ali.ads", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1389,7 +1389,6 @@ package ALI is\n    function Scan_ALI\n      (F                : File_Name_Type;\n       T                : Text_Buffer_Ptr;\n-      Ignore_ED        : Boolean;\n       Err              : Boolean;\n       Ignore_Lines     : String  := \"X\";\n       Ignore_Errors    : Boolean := False;\n@@ -1399,11 +1398,6 @@ package ALI is\n    --  table. Switch settings may be modified as described above in the\n    --  switch description settings.\n    --\n-   --    Ignore_ED is normally False. If set to True, it indicates that\n-   --    all AD/ED (elaboration desirable) indications in the ALI file are\n-   --    to be ignored. This parameter is obsolete now that the -f switch\n-   --    is removed from gnatbind, and should be removed ???\n-   --\n    --    Err determines the action taken on an incorrectly formatted file.\n    --    If Err is False, then an error message is output, and the program\n    --    is terminated. If Err is True, then no error message is output,"}, {"sha": "04fa8f56f82d26da0ec2500628ca56bbbf5b72ee", "filename": "gcc/ada/alloc.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Falloc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Falloc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Falloc.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "644c83b664df491474a756b337be9458ded91d2b", "filename": "gcc/ada/argv-lynxos178-raven-cert.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fargv-lynxos178-raven-cert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fargv-lynxos178-raven-cert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fargv-lynxos178-raven-cert.c?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *         Copyright (C) 1992-2021, Free Software Foundation, Inc.          *\n+ *         Copyright (C) 1992-2022, Free Software Foundation, Inc.          *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "82d58476e86b5af94b406d22b619fd8d7fd838d0", "filename": "gcc/ada/argv.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fargv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fargv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fargv.c?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *         Copyright (C) 1992-2021, Free Software Foundation, Inc.          *\n+ *         Copyright (C) 1992-2022, Free Software Foundation, Inc.          *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "62603d6b4ba818d07a4a2e7dc2a1eebedadd649a", "filename": "gcc/ada/aspects.adb", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Faspects.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Faspects.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2010-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2010-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -323,6 +323,16 @@ package body Aspects is\n       return Present (Find_Aspect (Id, A, Class_Present => Class_Present));\n    end Has_Aspect;\n \n+   ------------------\n+   -- Is_Aspect_Id --\n+   ------------------\n+\n+   function Is_Aspect_Id (Aspect : Name_Id) return Boolean is\n+     (Get_Aspect_Id (Aspect) /= No_Aspect);\n+\n+   function Is_Aspect_Id (Aspect : Node_Id) return Boolean is\n+     (Get_Aspect_Id (Aspect) /= No_Aspect);\n+\n    ------------------\n    -- Move_Aspects --\n    ------------------"}, {"sha": "658a85991532a67302885bb7cb792636a3b33f6e", "filename": "gcc/ada/aspects.ads", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Faspects.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Faspects.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2010-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2010-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -89,6 +89,7 @@ package Aspects is\n       Aspect_Default_Storage_Pool,\n       Aspect_Default_Value,\n       Aspect_Depends,                       -- GNAT\n+      Aspect_Designated_Storage_Model,      -- GNAT\n       Aspect_Dimension,                     -- GNAT\n       Aspect_Dimension_System,              -- GNAT\n       Aspect_Dispatching_Domain,\n@@ -147,6 +148,7 @@ package Aspects is\n       Aspect_SPARK_Mode,                    -- GNAT\n       Aspect_Stable_Properties,\n       Aspect_Static_Predicate,\n+      Aspect_Storage_Model_Type,            -- GNAT\n       Aspect_Storage_Pool,\n       Aspect_Storage_Size,\n       Aspect_Stream_Size,\n@@ -187,6 +189,7 @@ package Aspects is\n       Aspect_Atomic_Components,\n       Aspect_Disable_Controlled,            -- GNAT\n       Aspect_Discard_Names,\n+      Aspect_CUDA_Device,                   -- GNAT\n       Aspect_CUDA_Global,                   -- GNAT\n       Aspect_Exclusive_Functions,\n       Aspect_Export,\n@@ -233,7 +236,7 @@ package Aspects is\n        Aspect_Implicit_Dereference | Aspect_Constant_Indexing |\n        Aspect_Variable_Indexing | Aspect_Aggregate |\n        Aspect_Max_Entry_Queue_Length\n-       --  | Aspect_No_Controlled_Parts\n+        | Aspect_No_Controlled_Parts\n        --  ??? No_Controlled_Parts not yet in Aspect_Id enumeration\n        ;  --  see RM 13.1.1(18.7)\n \n@@ -379,6 +382,7 @@ package Aspects is\n       Aspect_Default_Storage_Pool       => Expression,\n       Aspect_Default_Value              => Expression,\n       Aspect_Depends                    => Expression,\n+      Aspect_Designated_Storage_Model   => Name,\n       Aspect_Dimension                  => Expression,\n       Aspect_Dimension_System           => Expression,\n       Aspect_Dispatching_Domain         => Expression,\n@@ -437,6 +441,7 @@ package Aspects is\n       Aspect_SPARK_Mode                 => Optional_Name,\n       Aspect_Stable_Properties          => Expression,\n       Aspect_Static_Predicate           => Expression,\n+      Aspect_Storage_Model_Type         => Expression,\n       Aspect_Storage_Pool               => Name,\n       Aspect_Storage_Size               => Expression,\n       Aspect_Stream_Size                => Expression,\n@@ -476,13 +481,15 @@ package Aspects is\n       Aspect_Contract_Cases               => False,\n       Aspect_Convention                   => True,\n       Aspect_CPU                          => False,\n+      Aspect_CUDA_Device                  => False,\n       Aspect_CUDA_Global                  => False,\n       Aspect_Default_Component_Value      => True,\n       Aspect_Default_Initial_Condition    => False,\n       Aspect_Default_Iterator             => False,\n       Aspect_Default_Storage_Pool         => True,\n       Aspect_Default_Value                => True,\n       Aspect_Depends                      => False,\n+      Aspect_Designated_Storage_Model     => True,\n       Aspect_Dimension                    => False,\n       Aspect_Dimension_System             => False,\n       Aspect_Dispatching_Domain           => False,\n@@ -542,6 +549,7 @@ package Aspects is\n       Aspect_SPARK_Mode                   => False,\n       Aspect_Stable_Properties            => False,\n       Aspect_Static_Predicate             => False,\n+      Aspect_Storage_Model_Type           => False,\n       Aspect_Storage_Pool                 => True,\n       Aspect_Storage_Size                 => True,\n       Aspect_Stream_Size                  => True,\n@@ -627,13 +635,15 @@ package Aspects is\n       Aspect_Contract_Cases               => Name_Contract_Cases,\n       Aspect_Convention                   => Name_Convention,\n       Aspect_CPU                          => Name_CPU,\n+      Aspect_CUDA_Device                  => Name_CUDA_Device,\n       Aspect_CUDA_Global                  => Name_CUDA_Global,\n       Aspect_Default_Component_Value      => Name_Default_Component_Value,\n       Aspect_Default_Initial_Condition    => Name_Default_Initial_Condition,\n       Aspect_Default_Iterator             => Name_Default_Iterator,\n       Aspect_Default_Storage_Pool         => Name_Default_Storage_Pool,\n       Aspect_Default_Value                => Name_Default_Value,\n       Aspect_Depends                      => Name_Depends,\n+      Aspect_Designated_Storage_Model     => Name_Designated_Storage_Model,\n       Aspect_Dimension                    => Name_Dimension,\n       Aspect_Dimension_System             => Name_Dimension_System,\n       Aspect_Disable_Controlled           => Name_Disable_Controlled,\n@@ -723,6 +733,7 @@ package Aspects is\n       Aspect_Stable_Properties            => Name_Stable_Properties,\n       Aspect_Static                       => Name_Static,\n       Aspect_Static_Predicate             => Name_Static_Predicate,\n+      Aspect_Storage_Model_Type           => Name_Storage_Model_Type,\n       Aspect_Storage_Pool                 => Name_Storage_Pool,\n       Aspect_Storage_Size                 => Name_Storage_Size,\n       Aspect_Stream_Size                  => Name_Stream_Size,\n@@ -762,6 +773,14 @@ package Aspects is\n    --  Given an aspect specification, return the corresponding aspect_id value.\n    --  If the name does not match any aspect, return No_Aspect.\n \n+   function Is_Aspect_Id (Aspect : Name_Id) return Boolean;\n+   pragma Inline (Is_Aspect_Id);\n+   --  Return True if a corresponding aspect id exists\n+\n+   function Is_Aspect_Id (Aspect : Node_Id) return Boolean;\n+   pragma Inline (Is_Aspect_Id);\n+   --  Return True if a corresponding aspect id exists\n+\n    ------------------------------------\n    -- Delaying Evaluation of Aspects --\n    ------------------------------------\n@@ -872,11 +891,13 @@ package Aspects is\n       Aspect_Attach_Handler               => Always_Delay,\n       Aspect_Constant_Indexing            => Always_Delay,\n       Aspect_CPU                          => Always_Delay,\n+      Aspect_CUDA_Device                  => Always_Delay,\n       Aspect_CUDA_Global                  => Always_Delay,\n       Aspect_Default_Iterator             => Always_Delay,\n       Aspect_Default_Storage_Pool         => Always_Delay,\n       Aspect_Default_Value                => Always_Delay,\n       Aspect_Default_Component_Value      => Always_Delay,\n+      Aspect_Designated_Storage_Model     => Always_Delay,\n       Aspect_Discard_Names                => Always_Delay,\n       Aspect_Dispatching_Domain           => Always_Delay,\n       Aspect_Dynamic_Predicate            => Always_Delay,\n@@ -928,6 +949,7 @@ package Aspects is\n       Aspect_Simple_Storage_Pool          => Always_Delay,\n       Aspect_Simple_Storage_Pool_Type     => Always_Delay,\n       Aspect_Static_Predicate             => Always_Delay,\n+      Aspect_Storage_Model_Type           => Always_Delay,\n       Aspect_Storage_Pool                 => Always_Delay,\n       Aspect_Stream_Size                  => Always_Delay,\n       Aspect_String_Literal               => Always_Delay,"}, {"sha": "e6dc4199ae6f3323143eb4e76d86aa004585ab95", "filename": "gcc/ada/atree.adb", "status": "modified", "additions": 743, "deletions": 220, "changes": 963, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fatree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fatree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -23,20 +23,12 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  Assertions in this package are too slow, and are mostly needed when working\n---  on this package itself, or on gen_il, so we disable them.\n---  To debug low-level bugs in this area, comment out the following pragma,\n---  and run with -gnatd_v.\n-\n-pragma Assertion_Policy (Ignore);\n-\n with Aspects;        use Aspects;\n with Debug;          use Debug;\n with Namet;          use Namet;\n with Nlists;         use Nlists;\n with Opt;            use Opt;\n with Output;         use Output;\n-with Seinfo;         use Seinfo;\n with Sinfo.Utils;    use Sinfo.Utils;\n with System.Storage_Elements;\n \n@@ -96,12 +88,29 @@ package body Atree is\n       Table_Increment      => Alloc.Node_Offsets_Increment,\n       Table_Name           => \"Orig_Nodes\");\n \n+   ------------------\n+   -- Parent Stack --\n+   ------------------\n+\n+   --  A separate table is used to traverse trees. It passes the parent field\n+   --  of each node to the called process subprogram. It is defined global to\n+   --  avoid adding performance overhead if allocated each time the traversal\n+   --  functions are invoked.\n+\n+   package Parents_Stack is new Table.Table\n+     (Table_Component_Type => Node_Id,\n+      Table_Index_Type     => Nat,\n+      Table_Low_Bound      => 1,\n+      Table_Initial        => 256,\n+      Table_Increment      => 100,\n+      Table_Name           => \"Parents_Stack\");\n+\n    --------------------------\n    -- Paren_Count Handling --\n    --------------------------\n \n    --  The Small_Paren_Count field has range 0 .. 3. If the Paren_Count is\n-   --  in the range 0 .. 2, then it is stoed as Small_Paren_Count. Otherwise,\n+   --  in the range 0 .. 2, then it is stored as Small_Paren_Count. Otherwise,\n    --  Small_Paren_Count = 3, and the actual Paren_Count is stored in the\n    --  Paren_Counts table.\n    --\n@@ -143,6 +152,20 @@ package body Atree is\n    --  Fix up parent pointers for the children of Fix_Node after a copy,\n    --  setting them to Fix_Node when they pointed to Ref_Node.\n \n+   generic\n+      with function Process\n+        (Parent_Node : Node_Id;\n+         Node        : Node_Id) return Traverse_Result is <>;\n+   function Internal_Traverse_With_Parent\n+     (Node : Node_Id) return Traverse_Final_Result;\n+   pragma Inline (Internal_Traverse_With_Parent);\n+   --  Internal function that provides a functionality similar to Traverse_Func\n+   --  but extended to pass the Parent node to the called Process subprogram;\n+   --  delegates to Traverse_Func_With_Parent the initialization of the stack\n+   --  data structure which stores the parent nodes (cf. Parents_Stack).\n+   --  ??? Could we factorize the common code of Internal_Traverse_Func and\n+   --  Traverse_Func?\n+\n    procedure Mark_New_Ghost_Node (N : Node_Or_Entity_Id);\n    --  Mark arbitrary node or entity N as Ghost when it is created within a\n    --  Ghost region.\n@@ -153,43 +176,59 @@ package body Atree is\n \n    function Size_In_Slots (N : Node_Or_Entity_Id) return Slot_Count;\n    --  Number of slots belonging to N. This can be less than\n-   --  Size_In_Slots_To_Alloc for entities.\n+   --  Size_In_Slots_To_Alloc for entities. Includes both header\n+   --  and dynamic slots.\n+\n+   function Size_In_Slots_Dynamic (N : Node_Or_Entity_Id) return Slot_Count;\n+   --  Just counts the number of dynamic slots\n \n    function Size_In_Slots_To_Alloc (N : Node_Or_Entity_Id) return Slot_Count;\n    function Size_In_Slots_To_Alloc (Kind : Node_Kind) return Slot_Count;\n    --  Number of slots to allocate for a node or entity. For entities, we have\n    --  to allocate the max, because we don't know the Ekind when this is\n    --  called.\n \n-   function Off_0 (N : Node_Id) return Node_Offset;\n-   --  Offset of the first slot of N (offset 0) in Slots.Table\n+   function Off_F (N : Node_Id) return Node_Offset with Inline;\n+   --  Offset of the first dynamic slot of N in Slots.Table.\n+   --  The actual offset of this slot from the start of the node\n+   --  is not 0; this is logically the first slot after the header\n+   --  slots.\n \n-   function Off_L (N : Node_Id) return Node_Offset;\n+   function Off_0 (N : Node_Id) return Node_Offset'Base with Inline;\n+   --  This is for zero-origin addressing of the dynamic slots.\n+   --  It points to slot 0 of N in Slots.Table, which does not exist,\n+   --  because the first few slots are stored in the header.\n+\n+   function Off_L (N : Node_Id) return Node_Offset with Inline;\n    --  Offset of the last slot of N in Slots.Table\n \n-   procedure Zero_Slots (First, Last : Node_Offset) with Inline;\n-   --  Set slots in the range F..L to zero\n+   procedure Zero_Dynamic_Slots (First, Last : Node_Offset'Base) with Inline;\n+   --  Set dynamic slots in the range First..Last to zero\n+\n+   procedure Zero_Header_Slots (N : Node_Or_Entity_Id) with Inline;\n+   --  Zero the header slots belonging to N\n \n    procedure Zero_Slots (N : Node_Or_Entity_Id) with Inline;\n-   --  Zero the slots belonging to N\n+   --  Zero the slots belonging to N (both header and dynamic)\n \n-   procedure Copy_Slots (From, To : Node_Offset; Num_Slots : Slot_Count)\n+   procedure Copy_Dynamic_Slots\n+     (From, To : Node_Offset; Num_Slots : Slot_Count)\n      with Inline;\n    --  Copy Num_Slots slots from From to To. Caller is responsible for ensuring\n    --  that the Num_Slots at To are a reasonable place to copy to.\n \n    procedure Copy_Slots (Source, Destination : Node_Id) with Inline;\n-   --  Copies the slots of Source to Destination; uses the node kind to\n-   --  determine the Num_Slots.\n+   --  Copies the slots (both header and dynamic) of Source to Destination;\n+   --  uses the node kind to determine the Num_Slots.\n \n    function Get_Field_Value\n-     (N : Node_Id; Field : Node_Field) return Field_Size_32_Bit;\n+     (N : Node_Id; Field : Node_Or_Entity_Field) return Field_Size_32_Bit;\n    --  Get any field value as a Field_Size_32_Bit. If the field is smaller than\n    --  32 bits, convert it to Field_Size_32_Bit. The Field must be present in\n    --  the Nkind of N.\n \n    procedure Set_Field_Value\n-     (N : Node_Id; Field : Node_Field; Val : Field_Size_32_Bit);\n+     (N : Node_Id; Field : Node_Or_Entity_Field; Val : Field_Size_32_Bit);\n    --  Set any field value as a Field_Size_32_Bit. If the field is smaller than\n    --  32 bits, convert it from Field_Size_32_Bit, and Val had better be small\n    --  enough. The Field must be present in the Nkind of N.\n@@ -199,10 +238,6 @@ package body Atree is\n    --  Called whenever Nkind is modified. Raises an exception if not all\n    --  vanishing fields are in their initial zero state.\n \n-   function Get_Field_Value\n-     (N : Entity_Id; Field : Entity_Field) return Field_Size_32_Bit;\n-   procedure Set_Field_Value\n-     (N : Entity_Id; Field : Entity_Field; Val : Field_Size_32_Bit);\n    procedure Check_Vanishing_Fields\n      (Old_N : Entity_Id; New_Kind : Entity_Kind);\n    --  Above are the same as the ones for nodes, but for entities\n@@ -405,7 +440,8 @@ package body Atree is\n \n             pragma Assert (N'Valid);\n             pragma Assert (N <= Node_Offsets.Last);\n-            pragma Assert (Off_0 (N) <= Off_L (N));\n+            pragma Assert (Off_L (N) >= Off_0 (N));\n+            pragma Assert (Off_L (N) >= Off_F (N) - 1);\n             pragma Assert (Off_L (N) <= Slots.Last);\n             pragma Assert (Nkind (N)'Valid);\n             pragma Assert (Nkind (N) /= N_Unused_At_End);\n@@ -469,8 +505,9 @@ package body Atree is\n \n          function Cast is new\n            Unchecked_Conversion (Field_Size_1_Bit, Field_Type);\n+         Val : constant Field_Size_1_Bit := Get_1_Bit_Val (N, Offset);\n       begin\n-         return Cast (Get_1_Bit_Val (N, Offset));\n+         return Cast (Val);\n       end Get_1_Bit_Field;\n \n       function Get_2_Bit_Field\n@@ -480,8 +517,9 @@ package body Atree is\n \n          function Cast is new\n            Unchecked_Conversion (Field_Size_2_Bit, Field_Type);\n+         Val : constant Field_Size_2_Bit := Get_2_Bit_Val (N, Offset);\n       begin\n-         return Cast (Get_2_Bit_Val (N, Offset));\n+         return Cast (Val);\n       end Get_2_Bit_Field;\n \n       function Get_4_Bit_Field\n@@ -491,8 +529,9 @@ package body Atree is\n \n          function Cast is new\n            Unchecked_Conversion (Field_Size_4_Bit, Field_Type);\n+         Val : constant Field_Size_4_Bit := Get_4_Bit_Val (N, Offset);\n       begin\n-         return Cast (Get_4_Bit_Val (N, Offset));\n+         return Cast (Val);\n       end Get_4_Bit_Field;\n \n       function Get_8_Bit_Field\n@@ -502,8 +541,9 @@ package body Atree is\n \n          function Cast is new\n            Unchecked_Conversion (Field_Size_8_Bit, Field_Type);\n+         Val : constant Field_Size_8_Bit := Get_8_Bit_Val (N, Offset);\n       begin\n-         return Cast (Get_8_Bit_Val (N, Offset));\n+         return Cast (Val);\n       end Get_8_Bit_Field;\n \n       function Get_32_Bit_Field\n@@ -513,8 +553,14 @@ package body Atree is\n \n          function Cast is new\n            Unchecked_Conversion (Field_Size_32_Bit, Field_Type);\n+\n+         Val : constant Field_Size_32_Bit := Get_32_Bit_Val (N, Offset);\n+         Result : constant Field_Type := Cast (Val);\n+         --  Note: declaring Result here instead of directly returning\n+         --  Cast (...) helps CodePeer understand that there are no issues\n+         --  around uninitialized variables.\n       begin\n-         return Cast (Get_32_Bit_Val (N, Offset));\n+         return Result;\n       end Get_32_Bit_Field;\n \n       function Get_32_Bit_Field_With_Default\n@@ -607,165 +653,258 @@ package body Atree is\n          Set_32_Bit_Val (N, Offset, Cast (Val));\n       end Set_32_Bit_Field;\n \n+      pragma Style_Checks (\"M90\");\n+\n+      -----------------------------------\n+      -- Low-level getters and setters --\n+      -----------------------------------\n+\n+      --  In the getters and setters below, we use shifting and masking to\n+      --  simulate packed arrays. F_Size is the field size in bits. Mask is\n+      --  that number of 1 bits in the low-order bits. F_Per_Slot is the number\n+      --  of fields per slot. Slot_Off is the offset of the slot of interest.\n+      --  S is the slot at that offset. V is the amount to shift by.\n+\n+      function In_NH (Slot_Off : Field_Offset) return Boolean is\n+        (Slot_Off < N_Head);\n+      --  In_NH stands for \"in Node_Header\", not \"in New Hampshire\"\n+\n+      function Get_Slot\n+        (N : Node_Or_Entity_Id; Slot_Off : Field_Offset)\n+         return Slot is\n+         (if In_NH (Slot_Off) then\n+            Node_Offsets.Table (N).Slots (Slot_Off)\n+          else Slots.Table (Node_Offsets.Table (N).Offset + Slot_Off));\n+      --  Get the slot value, either directly from the node header, or\n+      --  indirectly from the Slots table.\n+\n+      procedure Set_Slot\n+        (N : Node_Or_Entity_Id; Slot_Off : Field_Offset; S : Slot);\n+      --  Set the slot value, either directly from the node header, or\n+      --  indirectly from the Slots table, to S.\n+\n       function Get_1_Bit_Val\n         (N : Node_Or_Entity_Id; Offset : Field_Offset) return Field_Size_1_Bit\n       is\n-         --  We wish we were using packed arrays, but instead we're simulating\n-         --  them with modular integers. L here (and elsewhere) is the 'Length\n-         --  of that simulated array.\n-         L : constant Field_Offset := Slot_Size / 1;\n-\n-         pragma Debug (Validate_Node_And_Offset (N, Offset / L));\n-\n-         S : Slot renames Slots.Table (Node_Offsets.Table (N) + Offset / L);\n-         V : constant Natural := Natural ((Offset mod L) * (Slot_Size / L));\n+         F_Size : constant := 1;\n+         Mask : constant := 2**F_Size - 1;\n+         F_Per_Slot : constant Field_Offset := Slot_Size / F_Size;\n+         Slot_Off : constant Field_Offset := Offset / F_Per_Slot;\n+         S : constant Slot := Get_Slot (N, Slot_Off);\n+         V : constant Natural := Natural ((Offset mod F_Per_Slot) * F_Size);\n+         pragma Debug (Validate_Node_And_Offset (N, Slot_Off));\n+         Raw : constant Field_Size_1_Bit :=\n+           Field_Size_1_Bit (Shift_Right (S, V) and Mask);\n       begin\n-         return Field_Size_1_Bit (Shift_Right (S, V) and 1);\n+         return Raw;\n       end Get_1_Bit_Val;\n \n       function Get_2_Bit_Val\n         (N : Node_Or_Entity_Id; Offset : Field_Offset) return Field_Size_2_Bit\n       is\n-         L : constant Field_Offset := Slot_Size / 2;\n-\n-         pragma Debug (Validate_Node_And_Offset (N, Offset / L));\n-\n-         S : Slot renames Slots.Table (Node_Offsets.Table (N) + Offset / L);\n-         V : constant Natural := Natural ((Offset mod L) * (Slot_Size / L));\n+         F_Size : constant := 2;\n+         Mask : constant := 2**F_Size - 1;\n+         F_Per_Slot : constant Field_Offset := Slot_Size / F_Size;\n+         Slot_Off : constant Field_Offset := Offset / F_Per_Slot;\n+         S : constant Slot := Get_Slot (N, Slot_Off);\n+         V : constant Natural := Natural ((Offset mod F_Per_Slot) * F_Size);\n+         pragma Debug (Validate_Node_And_Offset (N, Slot_Off));\n+         Raw : constant Field_Size_2_Bit :=\n+           Field_Size_2_Bit (Shift_Right (S, V) and Mask);\n       begin\n-         return Field_Size_2_Bit (Shift_Right (S, V) and 3);\n+         return Raw;\n       end Get_2_Bit_Val;\n \n       function Get_4_Bit_Val\n         (N : Node_Or_Entity_Id; Offset : Field_Offset) return Field_Size_4_Bit\n       is\n-         L : constant Field_Offset := Slot_Size / 4;\n-\n-         pragma Debug (Validate_Node_And_Offset (N, Offset / L));\n-\n-         S : Slot renames Slots.Table (Node_Offsets.Table (N) + Offset / L);\n-         V : constant Natural := Natural ((Offset mod L) * (Slot_Size / L));\n+         F_Size : constant := 4;\n+         Mask : constant := 2**F_Size - 1;\n+         F_Per_Slot : constant Field_Offset := Slot_Size / F_Size;\n+         Slot_Off : constant Field_Offset := Offset / F_Per_Slot;\n+         S : constant Slot := Get_Slot (N, Slot_Off);\n+         V : constant Natural := Natural ((Offset mod F_Per_Slot) * F_Size);\n+         pragma Debug (Validate_Node_And_Offset (N, Slot_Off));\n+         Raw : constant Field_Size_4_Bit :=\n+           Field_Size_4_Bit (Shift_Right (S, V) and Mask);\n       begin\n-         return Field_Size_4_Bit (Shift_Right (S, V) and 15);\n+         return Raw;\n       end Get_4_Bit_Val;\n \n       function Get_8_Bit_Val\n         (N : Node_Or_Entity_Id; Offset : Field_Offset) return Field_Size_8_Bit\n       is\n-         L : constant Field_Offset := Slot_Size / 8;\n-\n-         pragma Debug (Validate_Node_And_Offset (N, Offset / L));\n-\n-         S : Slot renames Slots.Table (Node_Offsets.Table (N) + Offset / L);\n-         V : constant Natural := Natural ((Offset mod L) * (Slot_Size / L));\n+         F_Size : constant := 8;\n+         Mask : constant := 2**F_Size - 1;\n+         F_Per_Slot : constant Field_Offset := Slot_Size / F_Size;\n+         Slot_Off : constant Field_Offset := Offset / F_Per_Slot;\n+         S : constant Slot := Get_Slot (N, Slot_Off);\n+         V : constant Natural := Natural ((Offset mod F_Per_Slot) * F_Size);\n+         pragma Debug (Validate_Node_And_Offset (N, Slot_Off));\n+         Raw : constant Field_Size_8_Bit :=\n+           Field_Size_8_Bit (Shift_Right (S, V) and Mask);\n       begin\n-         return Field_Size_8_Bit (Shift_Right (S, V) and 255);\n+         return Raw;\n       end Get_8_Bit_Val;\n \n       function Get_32_Bit_Val\n         (N : Node_Or_Entity_Id; Offset : Field_Offset) return Field_Size_32_Bit\n       is\n-         pragma Debug (Validate_Node_And_Offset (N, Offset));\n-\n-         S : Slot renames Slots.Table (Node_Offsets.Table (N) + Offset);\n+         F_Size : constant := 32;\n+         --  No Mask needed\n+         F_Per_Slot : constant Field_Offset := Slot_Size / F_Size;\n+         Slot_Off : constant Field_Offset := Offset / F_Per_Slot;\n+         S : constant Slot := Get_Slot (N, Slot_Off);\n+         pragma Debug (Validate_Node_And_Offset (N, Slot_Off));\n+         Raw : constant Field_Size_32_Bit :=\n+           Field_Size_32_Bit (S);\n       begin\n-         return Field_Size_32_Bit (S);\n+         return Raw;\n       end Get_32_Bit_Val;\n \n+      procedure Set_Slot\n+        (N : Node_Or_Entity_Id; Slot_Off : Field_Offset; S : Slot) is\n+      begin\n+         if In_NH (Slot_Off) then\n+            Node_Offsets.Table (N).Slots (Slot_Off) := S;\n+         else\n+            Slots.Table (Node_Offsets.Table (N).Offset + Slot_Off) := S;\n+         end if;\n+      end Set_Slot;\n+\n       procedure Set_1_Bit_Val\n         (N : Node_Or_Entity_Id; Offset : Field_Offset; Val : Field_Size_1_Bit)\n       is\n-         L : constant Field_Offset := Slot_Size / 1;\n-\n-         pragma Debug (Validate_Node_And_Offset_Write (N, Offset / L));\n-\n-         S : Slot renames Slots.Table (Node_Offsets.Table (N) + Offset / L);\n-         V : constant Natural := Natural ((Offset mod L) * (Slot_Size / L));\n+         F_Size : constant := 1;\n+         Mask : constant := 2**F_Size - 1;\n+         F_Per_Slot : constant Field_Offset := Slot_Size / F_Size;\n+         Slot_Off : constant Field_Offset := Offset / F_Per_Slot;\n+         S : constant Slot := Get_Slot (N, Slot_Off);\n+         V : constant Natural := Natural ((Offset mod F_Per_Slot) * F_Size);\n+         pragma Debug (Validate_Node_And_Offset_Write (N, Slot_Off));\n       begin\n-         S := (S and not Shift_Left (1, V)) or Shift_Left (Slot (Val), V);\n+         Set_Slot\n+           (N, Slot_Off,\n+            (S and not Shift_Left (Mask, V)) or Shift_Left (Slot (Val), V));\n       end Set_1_Bit_Val;\n \n       procedure Set_2_Bit_Val\n         (N : Node_Or_Entity_Id; Offset : Field_Offset; Val : Field_Size_2_Bit)\n       is\n-         L : constant Field_Offset := Slot_Size / 2;\n-\n-         pragma Debug (Validate_Node_And_Offset_Write (N, Offset / L));\n-\n-         S : Slot renames Slots.Table (Node_Offsets.Table (N) + Offset / L);\n-         V : constant Natural := Natural ((Offset mod L) * (Slot_Size / L));\n+         F_Size : constant := 2;\n+         Mask : constant := 2**F_Size - 1;\n+         F_Per_Slot : constant Field_Offset := Slot_Size / F_Size;\n+         Slot_Off : constant Field_Offset := Offset / F_Per_Slot;\n+         S : constant Slot := Get_Slot (N, Slot_Off);\n+         V : constant Natural := Natural ((Offset mod F_Per_Slot) * F_Size);\n+         pragma Debug (Validate_Node_And_Offset_Write (N, Slot_Off));\n       begin\n-         S := (S and not Shift_Left (3, V)) or Shift_Left (Slot (Val), V);\n+         Set_Slot\n+           (N, Slot_Off,\n+            (S and not Shift_Left (Mask, V)) or Shift_Left (Slot (Val), V));\n       end Set_2_Bit_Val;\n \n       procedure Set_4_Bit_Val\n         (N : Node_Or_Entity_Id; Offset : Field_Offset; Val : Field_Size_4_Bit)\n       is\n-         L : constant Field_Offset := Slot_Size / 4;\n-\n-         pragma Debug (Validate_Node_And_Offset_Write (N, Offset / L));\n-\n-         S : Slot renames Slots.Table (Node_Offsets.Table (N) + Offset / L);\n-         V : constant Natural := Natural ((Offset mod L) * (Slot_Size / L));\n+         F_Size : constant := 4;\n+         Mask : constant := 2**F_Size - 1;\n+         F_Per_Slot : constant Field_Offset := Slot_Size / F_Size;\n+         Slot_Off : constant Field_Offset := Offset / F_Per_Slot;\n+         S : constant Slot := Get_Slot (N, Slot_Off);\n+         V : constant Natural := Natural ((Offset mod F_Per_Slot) * F_Size);\n+         pragma Debug (Validate_Node_And_Offset_Write (N, Slot_Off));\n       begin\n-         S := (S and not Shift_Left (15, V)) or Shift_Left (Slot (Val), V);\n+         Set_Slot\n+           (N, Slot_Off,\n+            (S and not Shift_Left (Mask, V)) or Shift_Left (Slot (Val), V));\n       end Set_4_Bit_Val;\n \n       procedure Set_8_Bit_Val\n         (N : Node_Or_Entity_Id; Offset : Field_Offset; Val : Field_Size_8_Bit)\n       is\n-         L : constant Field_Offset := Slot_Size / 8;\n-\n-         pragma Debug (Validate_Node_And_Offset_Write (N, Offset / L));\n-\n-         S : Slot renames Slots.Table (Node_Offsets.Table (N) + Offset / L);\n-         V : constant Natural := Natural ((Offset mod L) * (Slot_Size / L));\n+         F_Size : constant := 8;\n+         Mask : constant := 2**F_Size - 1;\n+         F_Per_Slot : constant Field_Offset := Slot_Size / F_Size;\n+         Slot_Off : constant Field_Offset := Offset / F_Per_Slot;\n+         S : constant Slot := Get_Slot (N, Slot_Off);\n+         V : constant Natural := Natural ((Offset mod F_Per_Slot) * F_Size);\n+         pragma Debug (Validate_Node_And_Offset_Write (N, Slot_Off));\n       begin\n-         S := (S and not Shift_Left (255, V)) or Shift_Left (Slot (Val), V);\n+         Set_Slot\n+           (N, Slot_Off,\n+            (S and not Shift_Left (Mask, V)) or Shift_Left (Slot (Val), V));\n       end Set_8_Bit_Val;\n \n       procedure Set_32_Bit_Val\n         (N : Node_Or_Entity_Id; Offset : Field_Offset; Val : Field_Size_32_Bit)\n       is\n-         pragma Debug (Validate_Node_And_Offset_Write (N, Offset));\n-\n-         S : Slot renames Slots.Table (Node_Offsets.Table (N) + Offset);\n+         F_Size : constant := 32;\n+         --  No Mask needed; this one doesn't do read-modify-write\n+         F_Per_Slot : constant Field_Offset := Slot_Size / F_Size;\n+         Slot_Off : constant Field_Offset := Offset / F_Per_Slot;\n+         pragma Debug (Validate_Node_And_Offset_Write (N, Slot_Off));\n       begin\n-         S := Slot (Val);\n+         Set_Slot (N, Slot_Off, Slot (Val));\n       end Set_32_Bit_Val;\n \n+      ----------------------\n+      -- Print_Atree_Info --\n+      ----------------------\n+\n+      procedure Print_Atree_Info (N : Node_Or_Entity_Id) is\n+         function Cast is new Unchecked_Conversion (Slot, Int);\n+      begin\n+         Write_Int (Int (Size_In_Slots (N)));\n+         Write_Str (\" slots (\");\n+         Write_Int (Int (Off_0 (N)));\n+         Write_Str (\" .. \");\n+         Write_Int (Int (Off_L (N)));\n+         Write_Str (\"):\");\n+\n+         for Off in Off_0 (N) .. Off_L (N) loop\n+            Write_Str (\" \");\n+            Write_Int (Cast (Get_Slot (N, Off)));\n+         end loop;\n+\n+         Write_Eol;\n+      end Print_Atree_Info;\n+\n    end Atree_Private_Part;\n \n-   ---------------\n-   -- Set_Field --\n-   ---------------\n+   ---------------------\n+   -- Get_Field_Value --\n+   ---------------------\n \n    function Get_Node_Field_Union is new Get_32_Bit_Field (Union_Id)\n      with Inline;\n    --  Called when we don't know whether a field is a Node_Id or a List_Id,\n    --  etc.\n \n    function Get_Field_Value\n-     (N : Node_Id; Field : Node_Field) return Field_Size_32_Bit\n+     (N : Node_Id; Field : Node_Or_Entity_Field) return Field_Size_32_Bit\n    is\n-      pragma Assert (Field_Checking.Field_Present (Nkind (N), Field));\n-      Desc : Field_Descriptor renames Node_Field_Descriptors (Field);\n+      Desc : Field_Descriptor renames Field_Descriptors (Field);\n+      NN : constant Node_Or_Entity_Id := Node_To_Fetch_From (N, Field);\n \n    begin\n       case Field_Size (Desc.Kind) is\n-         when 1 => return Field_Size_32_Bit (Get_1_Bit_Val (N, Desc.Offset));\n-         when 2 => return Field_Size_32_Bit (Get_2_Bit_Val (N, Desc.Offset));\n-         when 4 => return Field_Size_32_Bit (Get_4_Bit_Val (N, Desc.Offset));\n-         when 8 => return Field_Size_32_Bit (Get_8_Bit_Val (N, Desc.Offset));\n-         when others => return Get_32_Bit_Val (N, Desc.Offset);  -- 32\n+         when 1 => return Field_Size_32_Bit (Get_1_Bit_Val (NN, Desc.Offset));\n+         when 2 => return Field_Size_32_Bit (Get_2_Bit_Val (NN, Desc.Offset));\n+         when 4 => return Field_Size_32_Bit (Get_4_Bit_Val (NN, Desc.Offset));\n+         when 8 => return Field_Size_32_Bit (Get_8_Bit_Val (NN, Desc.Offset));\n+         when others => return Get_32_Bit_Val (NN, Desc.Offset);  -- 32\n       end case;\n    end Get_Field_Value;\n \n+   ---------------------\n+   -- Set_Field_Value --\n+   ---------------------\n+\n    procedure Set_Field_Value\n-     (N : Node_Id; Field : Node_Field; Val : Field_Size_32_Bit)\n+     (N : Node_Id; Field : Node_Or_Entity_Field; Val : Field_Size_32_Bit)\n    is\n-      pragma Assert (Field_Checking.Field_Present (Nkind (N), Field));\n-      Desc : Field_Descriptor renames Node_Field_Descriptors (Field);\n+      Desc : Field_Descriptor renames Field_Descriptors (Field);\n \n    begin\n       case Field_Size (Desc.Kind) is\n@@ -777,13 +916,15 @@ package body Atree is\n       end case;\n    end Set_Field_Value;\n \n-   procedure Reinit_Field_To_Zero (N : Node_Id; Field : Node_Field) is\n+   procedure Reinit_Field_To_Zero\n+     (N : Node_Id; Field : Node_Or_Entity_Field)\n+   is\n    begin\n       Set_Field_Value (N, Field, 0);\n    end Reinit_Field_To_Zero;\n \n    function Field_Is_Initial_Zero\n-     (N : Node_Id; Field : Node_Field) return Boolean is\n+     (N : Node_Id; Field : Node_Or_Entity_Field) return Boolean is\n    begin\n       return Get_Field_Value (N, Field) = 0;\n    end Field_Is_Initial_Zero;\n@@ -809,7 +950,7 @@ package body Atree is\n       Old_Kind : constant Node_Kind := Nkind (Old_N);\n \n       --  If this fails, it means you need to call Reinit_Field_To_Zero before\n-      --  calling Set_Nkind.\n+      --  calling Mutate_Nkind.\n \n    begin\n       for J in Node_Field_Table (Old_Kind)'Range loop\n@@ -834,47 +975,6 @@ package body Atree is\n       end loop;\n    end Check_Vanishing_Fields;\n \n-   function Get_Field_Value\n-     (N : Entity_Id; Field : Entity_Field) return Field_Size_32_Bit\n-   is\n-      pragma Assert (Field_Checking.Field_Present (Ekind (N), Field));\n-      Desc : Field_Descriptor renames Entity_Field_Descriptors (Field);\n-   begin\n-      case Field_Size (Desc.Kind) is\n-         when 1 => return Field_Size_32_Bit (Get_1_Bit_Val (N, Desc.Offset));\n-         when 2 => return Field_Size_32_Bit (Get_2_Bit_Val (N, Desc.Offset));\n-         when 4 => return Field_Size_32_Bit (Get_4_Bit_Val (N, Desc.Offset));\n-         when 8 => return Field_Size_32_Bit (Get_8_Bit_Val (N, Desc.Offset));\n-         when others => return Get_32_Bit_Val (N, Desc.Offset);  -- 32\n-      end case;\n-   end Get_Field_Value;\n-\n-   procedure Set_Field_Value\n-     (N : Entity_Id; Field : Entity_Field; Val : Field_Size_32_Bit)\n-   is\n-      pragma Assert (Field_Checking.Field_Present (Ekind (N), Field));\n-      Desc : Field_Descriptor renames Entity_Field_Descriptors (Field);\n-   begin\n-      case Field_Size (Desc.Kind) is\n-         when 1 => Set_1_Bit_Val (N, Desc.Offset, Field_Size_1_Bit (Val));\n-         when 2 => Set_2_Bit_Val (N, Desc.Offset, Field_Size_2_Bit (Val));\n-         when 4 => Set_4_Bit_Val (N, Desc.Offset, Field_Size_4_Bit (Val));\n-         when 8 => Set_8_Bit_Val (N, Desc.Offset, Field_Size_8_Bit (Val));\n-         when others => Set_32_Bit_Val (N, Desc.Offset, Val);  -- 32\n-      end case;\n-   end Set_Field_Value;\n-\n-   procedure Reinit_Field_To_Zero (N : Node_Id; Field : Entity_Field) is\n-   begin\n-      Set_Field_Value (N, Field, 0);\n-   end Reinit_Field_To_Zero;\n-\n-   function Field_Is_Initial_Zero\n-     (N : Entity_Id; Field : Entity_Field) return Boolean is\n-   begin\n-      return Get_Field_Value (N, Field) = 0;\n-   end Field_Is_Initial_Zero;\n-\n    procedure Check_Vanishing_Fields\n      (Old_N : Entity_Id; New_Kind : Entity_Kind)\n    is\n@@ -913,13 +1013,17 @@ package body Atree is\n    end Check_Vanishing_Fields;\n \n    Nkind_Offset : constant Field_Offset :=\n-     Node_Field_Descriptors (F_Nkind).Offset;\n+     Field_Descriptors (F_Nkind).Offset;\n \n    procedure Set_Node_Kind_Type is new Set_8_Bit_Field (Node_Kind) with Inline;\n \n    procedure Init_Nkind (N : Node_Id; Val : Node_Kind) is\n       pragma Assert (Field_Is_Initial_Zero (N, F_Nkind));\n    begin\n+      if Atree_Statistics_Enabled then\n+         Set_Count (F_Nkind) := Set_Count (F_Nkind) + 1;\n+      end if;\n+\n       Set_Node_Kind_Type (N, Nkind_Offset, Val);\n    end Init_Nkind;\n \n@@ -938,35 +1042,47 @@ package body Atree is\n       if Old_Size < New_Size then\n          declare\n             Old_Last_Slot : constant Node_Offset := Slots.Last;\n-            Old_Off_0 : constant Node_Offset := Off_0 (N);\n+            Old_Off_F : constant Node_Offset := Off_F (N);\n          begin\n-            if Old_Last_Slot = Old_Off_0 + Old_Size - 1 then\n+            if Old_Last_Slot = Old_Off_F + Old_Size - 1 then\n                --  In this case, the slots are at the end of Slots.Table, so we\n                --  don't need to move them.\n                Slots.Set_Last (Old_Last_Slot + New_Size - Old_Size);\n \n             else\n                --  Move the slots\n-               All_Node_Offsets (N) := Alloc_Slots (New_Size);\n-               Copy_Slots (Old_Off_0, Off_0 (N), Old_Size);\n-               pragma Debug (Zero_Slots (Old_Off_0, Old_Off_0 + Old_Size - 1));\n+\n+               declare\n+                  New_Off_F : constant Node_Offset := Alloc_Slots (New_Size);\n+               begin\n+                  All_Node_Offsets (N).Offset := New_Off_F - N_Head;\n+                  Copy_Dynamic_Slots (Old_Off_F, New_Off_F, Old_Size);\n+                  pragma Debug\n+                    (Zero_Dynamic_Slots (Old_Off_F, Old_Off_F + Old_Size - 1));\n+               end;\n             end if;\n          end;\n \n-         Zero_Slots (Off_0 (N) + Old_Size, Slots.Last);\n+         Zero_Dynamic_Slots (Off_F (N) + Old_Size, Slots.Last);\n+      end if;\n+\n+      if Atree_Statistics_Enabled then\n+         Set_Count (F_Nkind) := Set_Count (F_Nkind) + 1;\n       end if;\n \n       Set_Node_Kind_Type (N, Nkind_Offset, Val);\n       pragma Debug (Validate_Node_Write (N));\n+\n+      New_Node_Debugging_Output (N);\n    end Mutate_Nkind;\n \n    procedure Mutate_Nkind (N : Node_Id; Val : Node_Kind) is\n    begin\n-      Mutate_Nkind (N, Val, Old_Size => Size_In_Slots (N));\n+      Mutate_Nkind (N, Val, Old_Size => Size_In_Slots_Dynamic (N));\n    end Mutate_Nkind;\n \n    Ekind_Offset : constant Field_Offset :=\n-     Entity_Field_Descriptors (F_Ekind).Offset;\n+     Field_Descriptors (F_Ekind).Offset;\n \n    procedure Set_Entity_Kind_Type is new Set_8_Bit_Field (Entity_Kind)\n      with Inline;\n@@ -986,8 +1102,14 @@ package body Atree is\n       --  For now, we are allocating all entities with the same size, so we\n       --  don't need to reallocate slots here.\n \n+      if Atree_Statistics_Enabled then\n+         Set_Count (F_Nkind) := Set_Count (F_Ekind) + 1;\n+      end if;\n+\n       Set_Entity_Kind_Type (N, Ekind_Offset, Val);\n       pragma Debug (Validate_Node_Write (N));\n+\n+      New_Node_Debugging_Output (N);\n    end Mutate_Ekind;\n \n    -----------------------\n@@ -1001,8 +1123,9 @@ package body Atree is\n             Sz : constant Slot_Count := Size_In_Slots_To_Alloc (Kind);\n             Sl : constant Node_Offset := Alloc_Slots (Sz);\n          begin\n-            Node_Offsets.Table (Result) := Sl;\n-            Zero_Slots (Sl, Sl + Sz - 1);\n+            Node_Offsets.Table (Result).Offset := Sl - N_Head;\n+            Zero_Dynamic_Slots (Sl, Sl + Sz - 1);\n+            Zero_Header_Slots (Result);\n          end;\n \n          Init_Nkind (Result, Kind);\n@@ -1040,7 +1163,7 @@ package body Atree is\n       pragma Assert (Nkind (N) not in N_Entity);\n       pragma Assert (New_Kind not in N_Entity);\n \n-      Old_Size : constant Slot_Count := Size_In_Slots (N);\n+      Old_Size : constant Slot_Count := Size_In_Slots_Dynamic (N);\n       New_Size : constant Slot_Count := Size_In_Slots_To_Alloc (New_Kind);\n \n       Save_Sloc    : constant Source_Ptr := Sloc (N);\n@@ -1063,15 +1186,16 @@ package body Atree is\n             New_Offset : constant Field_Offset := Alloc_Slots (New_Size);\n          begin\n             pragma Debug (Zero_Slots (N));\n-            Node_Offsets.Table (N) := New_Offset;\n-            Zero_Slots (New_Offset, New_Offset + New_Size - 1);\n+            Node_Offsets.Table (N).Offset := New_Offset - N_Head;\n+            Zero_Dynamic_Slots (New_Offset, New_Offset + New_Size - 1);\n+            Zero_Header_Slots (N);\n          end;\n \n       else\n          Zero_Slots (N);\n       end if;\n \n-      Mutate_Nkind (N, New_Kind, Old_Size);\n+      Init_Nkind (N, New_Kind); -- Not Mutate, because of Zero_Slots above\n \n       Set_Sloc (N, Save_Sloc);\n       Set_In_List (N, Save_In_List);\n@@ -1090,8 +1214,10 @@ package body Atree is\n    -- Copy_Slots --\n    ----------------\n \n-   procedure Copy_Slots (From, To : Node_Offset; Num_Slots : Slot_Count) is\n-      pragma Assert (From /= To);\n+   procedure Copy_Dynamic_Slots\n+     (From, To : Node_Offset; Num_Slots : Slot_Count)\n+   is\n+      pragma Assert (if Num_Slots /= 0 then From /= To);\n \n       All_Slots : Slots.Table_Type renames\n         Slots.Table (Slots.First .. Slots.Last);\n@@ -1104,21 +1230,21 @@ package body Atree is\n \n    begin\n       Destination_Slots := Source_Slots;\n-   end Copy_Slots;\n+   end Copy_Dynamic_Slots;\n \n    procedure Copy_Slots (Source, Destination : Node_Id) is\n       pragma Debug (Validate_Node (Source));\n-      pragma Debug (Validate_Node_Write (Destination));\n       pragma Assert (Source /= Destination);\n \n-      S_Size : constant Slot_Count := Size_In_Slots (Source);\n+      S_Size : constant Slot_Count := Size_In_Slots_Dynamic (Source);\n \n       All_Node_Offsets : Node_Offsets.Table_Type renames\n         Node_Offsets.Table (Node_Offsets.First .. Node_Offsets.Last);\n \n    begin\n-      Copy_Slots\n-        (All_Node_Offsets (Source), All_Node_Offsets (Destination), S_Size);\n+      Copy_Dynamic_Slots\n+        (Off_F (Source), Off_F (Destination), S_Size);\n+      All_Node_Offsets (Destination).Slots := All_Node_Offsets (Source).Slots;\n    end Copy_Slots;\n \n    ---------------\n@@ -1147,14 +1273,14 @@ package body Atree is\n \n       if D_Size < S_Size then\n          pragma Debug (Zero_Slots (Destination)); -- destroy old slots\n-         Node_Offsets.Table (Destination) := Alloc_Slots (S_Size);\n+         Node_Offsets.Table (Destination).Offset :=\n+           Alloc_Slots (S_Size) - N_Head;\n       end if;\n \n       Copy_Slots (Source, Destination);\n \n       Set_In_List (Destination, Save_In_List);\n       Set_Link (Destination, Save_Link);\n-\n       Set_Paren_Count_Of_Copy (Target => Destination, Source => Source);\n    end Copy_Node;\n \n@@ -1366,7 +1492,7 @@ package body Atree is\n         (Is_Entity (E1) and then Is_Entity (E2)\n            and then not In_List (E1) and then not In_List (E2));\n \n-      Old_E1 : constant Node_Offset := Node_Offsets.Table (E1);\n+      Old_E1 : constant Node_Header := Node_Offsets.Table (E1);\n \n    begin\n       Node_Offsets.Table (E1) := Node_Offsets.Table (E2);\n@@ -1399,6 +1525,7 @@ package body Atree is\n       pragma Assert (not Is_Entity (Source));\n \n       Old_Kind : constant Node_Kind := Nkind (Source);\n+      pragma Assert (Old_Kind in N_Direct_Name);\n       New_Kind : constant Node_Kind :=\n         (case Old_Kind is\n            when N_Character_Literal => N_Defining_Character_Literal,\n@@ -1464,8 +1591,7 @@ package body Atree is\n    begin\n       for J in Fields'Range loop\n          declare\n-            Desc : Field_Descriptor renames\n-              Node_Field_Descriptors (Fields (J));\n+            Desc : Field_Descriptor renames Field_Descriptors (Fields (J));\n          begin\n             if Desc.Kind in Node_Id_Field | List_Id_Field then\n                Fix_Parent (Get_Node_Field_Union (Fix_Node, Desc.Offset));\n@@ -1615,7 +1741,8 @@ package body Atree is\n       end if;\n \n       return New_Id : constant Node_Id := Alloc_Node_Id do\n-         Node_Offsets.Table (New_Id) := Alloc_Slots (S_Size);\n+         Node_Offsets.Table (New_Id).Offset :=\n+           Alloc_Slots (S_Size) - N_Head;\n          Orig_Nodes.Append (New_Id);\n          Copy_Slots (Source, New_Id);\n \n@@ -1671,7 +1798,7 @@ package body Atree is\n       --  source nodes, then reset Current_Error_Node. This is useful\n       --  if we bomb during parsing to get a error location for the bomb.\n \n-      if  New_Sloc > No_Location and then Comes_From_Source_Default then\n+      if New_Sloc > No_Location and then Comes_From_Source_Default then\n          Current_Error_Node := New_Id;\n       end if;\n \n@@ -1760,15 +1887,24 @@ package body Atree is\n    -- Off_0 --\n    -----------\n \n-   function Off_0 (N : Node_Id) return Node_Offset is\n+   function Off_0 (N : Node_Id) return Node_Offset'Base is\n       pragma Debug (Validate_Node (N));\n \n       All_Node_Offsets : Node_Offsets.Table_Type renames\n         Node_Offsets.Table (Node_Offsets.First .. Node_Offsets.Last);\n    begin\n-      return All_Node_Offsets (N);\n+      return All_Node_Offsets (N).Offset;\n    end Off_0;\n \n+   -----------\n+   -- Off_F --\n+   -----------\n+\n+   function Off_F (N : Node_Id) return Node_Offset is\n+   begin\n+      return Off_0 (N) + N_Head;\n+   end Off_F;\n+\n    -----------\n    -- Off_L --\n    -----------\n@@ -1779,7 +1915,7 @@ package body Atree is\n       All_Node_Offsets : Node_Offsets.Table_Type renames\n         Node_Offsets.Table (Node_Offsets.First .. Node_Offsets.Last);\n    begin\n-      return All_Node_Offsets (N) + Size_In_Slots (N) - 1;\n+      return All_Node_Offsets (N).Offset + Size_In_Slots (N) - 1;\n    end Off_L;\n \n    -------------------\n@@ -1789,6 +1925,9 @@ package body Atree is\n    function Original_Node (Node : Node_Id) return Node_Id is\n    begin\n       pragma Debug (Validate_Node (Node));\n+      if Atree_Statistics_Enabled then\n+         Get_Original_Node_Count := Get_Original_Node_Count + 1;\n+      end if;\n \n       return Orig_Nodes.Table (Node);\n    end Original_Node;\n@@ -1823,7 +1962,7 @@ package body Atree is\n \n    function Parent (N : Node_Or_Entity_Id) return Node_Or_Entity_Id is\n    begin\n-      pragma Assert (Atree.Present (N));\n+      pragma Assert (Present (N));\n \n       if Is_List_Member (N) then\n          return Parent (List_Containing (N));\n@@ -1850,28 +1989,6 @@ package body Atree is\n       Set_Comes_From_Source (NewN, Comes_From_Source (OldN));\n    end Preserve_Comes_From_Source;\n \n-   ----------------------\n-   -- Print_Atree_Info --\n-   ----------------------\n-\n-   procedure Print_Atree_Info (N : Node_Or_Entity_Id) is\n-      function Cast is new Unchecked_Conversion (Slot, Int);\n-   begin\n-      Write_Int (Int (Size_In_Slots (N)));\n-      Write_Str (\" slots (\");\n-      Write_Int (Int (Off_0 (N)));\n-      Write_Str (\" .. \");\n-      Write_Int (Int (Off_L (N)));\n-      Write_Str (\"):\");\n-\n-      for Off in Off_0 (N) .. Off_L (N) loop\n-         Write_Str (\" \");\n-         Write_Int (Cast (Slots.Table (Off)));\n-      end loop;\n-\n-      Write_Eol;\n-   end Print_Atree_Info;\n-\n    -------------------\n    -- Relocate_Node --\n    -------------------\n@@ -1903,6 +2020,22 @@ package body Atree is\n          Set_Original_Node (New_Node, Original_Node (Source));\n       end if;\n \n+      --  If we're relocating a subprogram call and we're doing\n+      --  unnesting, be sure we make a new copy of any parameter associations\n+      --  so that we don't share them.\n+\n+      if Nkind (Source) in N_Subprogram_Call\n+        and then Opt.Unnest_Subprogram_Mode\n+        and then Present (Parameter_Associations (Source))\n+      then\n+         declare\n+            New_Assoc : constant List_Id := Parameter_Associations (Source);\n+         begin\n+            Set_Parent (New_Assoc, New_Node);\n+            Set_Parameter_Associations (New_Node, New_Assoc);\n+         end;\n+      end if;\n+\n       return New_Node;\n    end Relocate_Node;\n \n@@ -1921,7 +2054,7 @@ package body Atree is\n       procedure Destroy_New_Node is\n       begin\n          Zero_Slots (New_Node);\n-         Node_Offsets.Table (New_Node) := Field_Offset'Base'Last;\n+         Node_Offsets.Table (New_Node).Offset := Field_Offset'Base'Last;\n       end Destroy_New_Node;\n \n    begin\n@@ -2020,10 +2153,16 @@ package body Atree is\n \n          --  Both the old and new copies of the node will share the same list\n          --  of aspect specifications if aspect specifications are present.\n+         --  Restore the parent link of the aspect list to the old node, which\n+         --  is the one linked in the tree.\n \n          if Old_Has_Aspects then\n-            Set_Aspect_Specifications\n-              (Sav_Node, Aspect_Specifications (Old_Node));\n+            declare\n+               Aspects : constant List_Id := Aspect_Specifications (Old_Node);\n+            begin\n+               Set_Aspect_Specifications (Sav_Node, Aspects);\n+               Set_Parent (Aspects, Old_Node);\n+            end;\n          end if;\n       end if;\n \n@@ -2084,6 +2223,9 @@ package body Atree is\n    procedure Set_Original_Node (N : Node_Id; Val : Node_Id) is\n    begin\n       pragma Debug (Validate_Node_Write (N));\n+      if Atree_Statistics_Enabled then\n+         Set_Original_Node_Count := Set_Original_Node_Count + 1;\n+      end if;\n \n       Orig_Nodes.Table (N) := Val;\n    end Set_Original_Node;\n@@ -2146,7 +2288,7 @@ package body Atree is\n \n    procedure Set_Parent (N : Node_Or_Entity_Id; Val : Node_Or_Entity_Id) is\n    begin\n-      pragma Assert (Atree.Present (N));\n+      pragma Assert (Present (N));\n       pragma Assert (not In_List (N));\n       Set_Link (N, Union_Id (Val));\n    end Set_Parent;\n@@ -2171,11 +2313,15 @@ package body Atree is\n       Rewriting_Proc := Proc;\n    end Set_Rewriting_Proc;\n \n+   ----------------------------\n+   -- Size_In_Slots_To_Alloc --\n+   ----------------------------\n+\n    function Size_In_Slots_To_Alloc (Kind : Node_Kind) return Slot_Count is\n    begin\n       return\n         (if Kind in N_Entity then Einfo.Entities.Max_Entity_Size\n-         else Sinfo.Nodes.Size (Kind));\n+         else Sinfo.Nodes.Size (Kind)) - N_Head;\n       --  Unfortunately, we don't know the Entity_Kind, so we have to use the\n       --  max.\n    end Size_In_Slots_To_Alloc;\n@@ -2186,6 +2332,10 @@ package body Atree is\n       return Size_In_Slots_To_Alloc (Nkind (N));\n    end Size_In_Slots_To_Alloc;\n \n+   -------------------\n+   -- Size_In_Slots --\n+   -------------------\n+\n    function Size_In_Slots (N : Node_Or_Entity_Id) return Slot_Count is\n    begin\n       pragma Assert (Nkind (N) /= N_Unused_At_Start);\n@@ -2194,6 +2344,176 @@ package body Atree is\n          else Sinfo.Nodes.Size (Nkind (N)));\n    end Size_In_Slots;\n \n+   ---------------------------\n+   -- Size_In_Slots_Dynamic --\n+   ---------------------------\n+\n+   function Size_In_Slots_Dynamic (N : Node_Or_Entity_Id) return Slot_Count is\n+   begin\n+      return Size_In_Slots (N) - N_Head;\n+   end Size_In_Slots_Dynamic;\n+\n+   -----------------------------------\n+   -- Internal_Traverse_With_Parent --\n+   -----------------------------------\n+\n+   function Internal_Traverse_With_Parent\n+      (Node : Node_Id) return Traverse_Final_Result\n+   is\n+      Tail_Recursion_Counter : Natural := 0;\n+\n+      procedure Pop_Parents;\n+      --  Pop enclosing nodes of tail recursion plus the current parent.\n+\n+      function Traverse_Field (Fld : Union_Id) return Traverse_Final_Result;\n+      --  Fld is one of the Traversed fields of Nod, which is necessarily a\n+      --  Node_Id or List_Id. It is traversed, and the result is the result of\n+      --  this traversal.\n+\n+      -----------------\n+      -- Pop_Parents --\n+      -----------------\n+\n+      procedure Pop_Parents is\n+      begin\n+         --  Pop the enclosing nodes of the tail recursion\n+\n+         for J in 1 .. Tail_Recursion_Counter loop\n+            Parents_Stack.Decrement_Last;\n+         end loop;\n+\n+         --  Pop the current node\n+\n+         pragma Assert (Parents_Stack.Table (Parents_Stack.Last) = Node);\n+         Parents_Stack.Decrement_Last;\n+      end Pop_Parents;\n+\n+      --------------------\n+      -- Traverse_Field --\n+      --------------------\n+\n+      function Traverse_Field (Fld : Union_Id) return Traverse_Final_Result is\n+      begin\n+         if Fld /= Union_Id (Empty) then\n+\n+            --  Descendant is a node\n+\n+            if Fld in Node_Range then\n+               return Internal_Traverse_With_Parent (Node_Id (Fld));\n+\n+            --  Descendant is a list\n+\n+            elsif Fld in List_Range then\n+               declare\n+                  Elmt : Node_Id := First (List_Id (Fld));\n+               begin\n+                  while Present (Elmt) loop\n+                     if Internal_Traverse_With_Parent (Elmt) = Abandon then\n+                        return Abandon;\n+                     end if;\n+\n+                     Next (Elmt);\n+                  end loop;\n+               end;\n+\n+            else\n+               raise Program_Error;\n+            end if;\n+         end if;\n+\n+         return OK;\n+      end Traverse_Field;\n+\n+      --  Local variables\n+\n+      Parent_Node : Node_Id := Parents_Stack.Table (Parents_Stack.Last);\n+      Cur_Node    : Node_Id := Node;\n+\n+   --  Start of processing for Internal_Traverse_With_Parent\n+\n+   begin\n+      --  If the last field is a node, we eliminate the tail recursion by\n+      --  jumping back to this label. This is because concatenations are\n+      --  sometimes deeply nested, as in X1&X2&...&Xn. Gen_IL ensures that the\n+      --  Left_Opnd field of N_Op_Concat comes last in Traversed_Fields, so the\n+      --  tail recursion is eliminated in that case. This trick prevents us\n+      --  from running out of stack memory in that case. We don't bother\n+      --  eliminating the tail recursion if the last field is a list.\n+\n+      <<Tail_Recurse>>\n+\n+      Parents_Stack.Append (Cur_Node);\n+\n+      case Process (Parent_Node, Cur_Node) is\n+         when Abandon =>\n+            Pop_Parents;\n+            return Abandon;\n+\n+         when Skip =>\n+            Pop_Parents;\n+            return OK;\n+\n+         when OK =>\n+            null;\n+\n+         when OK_Orig =>\n+            Cur_Node := Original_Node (Cur_Node);\n+      end case;\n+\n+      --  Check for empty Traversed_Fields before entering loop below, so the\n+      --  tail recursive step won't go past the end.\n+\n+      declare\n+         Cur_Field : Offset_Array_Index := Traversed_Offset_Array'First;\n+         Offsets : Traversed_Offset_Array renames\n+           Traversed_Fields (Nkind (Cur_Node));\n+\n+      begin\n+         if Offsets (Traversed_Offset_Array'First) /= No_Field_Offset then\n+            while Offsets (Cur_Field + 1) /= No_Field_Offset loop\n+               declare\n+                  F : constant Union_Id :=\n+                    Get_Node_Field_Union (Cur_Node, Offsets (Cur_Field));\n+\n+               begin\n+                  if Traverse_Field (F) = Abandon then\n+                     Pop_Parents;\n+                     return Abandon;\n+                  end if;\n+               end;\n+\n+               Cur_Field := Cur_Field + 1;\n+            end loop;\n+\n+            declare\n+               F : constant Union_Id :=\n+                 Get_Node_Field_Union (Cur_Node, Offsets (Cur_Field));\n+\n+            begin\n+               if F not in Node_Range then\n+                  if Traverse_Field (F) = Abandon then\n+                     Pop_Parents;\n+                     return Abandon;\n+                  end if;\n+\n+               elsif F /= Empty_List_Or_Node then\n+                  --  Here is the tail recursion step, we reset Cur_Node and\n+                  --  jump back to the start of the procedure, which has the\n+                  --  same semantic effect as a call.\n+\n+                  Tail_Recursion_Counter := Tail_Recursion_Counter + 1;\n+                  Parent_Node := Cur_Node;\n+                  Cur_Node := Node_Id (F);\n+                  goto Tail_Recurse;\n+               end if;\n+            end;\n+         end if;\n+      end;\n+\n+      Pop_Parents;\n+      return OK;\n+   end Internal_Traverse_With_Parent;\n+\n    -------------------\n    -- Traverse_Func --\n    -------------------\n@@ -2326,6 +2646,32 @@ package body Atree is\n       return OK;\n    end Traverse_Func;\n \n+   -------------------------------\n+   -- Traverse_Func_With_Parent --\n+   -------------------------------\n+\n+   function Traverse_Func_With_Parent\n+     (Node : Node_Id) return Traverse_Final_Result\n+   is\n+      function Traverse is new Internal_Traverse_With_Parent (Process);\n+      Result : Traverse_Final_Result;\n+   begin\n+      --  Ensure that the Parents stack is not currently in use; required since\n+      --  it is global and hence a tree traversal with parents must be finished\n+      --  before the next tree traversal with parents starts.\n+\n+      pragma Assert (Parents_Stack.Last = 0);\n+      Parents_Stack.Set_Last (0);\n+\n+      Parents_Stack.Append (Parent (Node));\n+      Result := Traverse (Node);\n+      Parents_Stack.Decrement_Last;\n+\n+      pragma Assert (Parents_Stack.Last = 0);\n+\n+      return Result;\n+   end Traverse_Func_With_Parent;\n+\n    -------------------\n    -- Traverse_Proc --\n    -------------------\n@@ -2338,6 +2684,18 @@ package body Atree is\n       Discard := Traverse (Node);\n    end Traverse_Proc;\n \n+   -------------------------------\n+   -- Traverse_Proc_With_Parent --\n+   -------------------------------\n+\n+   procedure Traverse_Proc_With_Parent (Node : Node_Id) is\n+      function Traverse is new Traverse_Func_With_Parent (Process);\n+      Discard : Traverse_Final_Result;\n+      pragma Warnings (Off, Discard);\n+   begin\n+      Discard := Traverse (Node);\n+   end Traverse_Proc_With_Parent;\n+\n    ------------\n    -- Unlock --\n    ------------\n@@ -2361,14 +2719,179 @@ package body Atree is\n    -- Zero_Slots --\n    ----------------\n \n-   procedure Zero_Slots (First, Last : Node_Offset) is\n+   procedure Zero_Dynamic_Slots (First, Last : Node_Offset'Base) is\n    begin\n       Slots.Table (First .. Last) := (others => 0);\n-   end Zero_Slots;\n+   end Zero_Dynamic_Slots;\n+\n+   procedure Zero_Header_Slots (N : Node_Or_Entity_Id) is\n+      All_Node_Offsets : Node_Offsets.Table_Type renames\n+        Node_Offsets.Table (Node_Offsets.First .. Node_Offsets.Last);\n+   begin\n+      All_Node_Offsets (N).Slots := (others => 0);\n+   end Zero_Header_Slots;\n \n    procedure Zero_Slots (N : Node_Or_Entity_Id) is\n    begin\n-      Zero_Slots (Off_0 (N), Off_L (N));\n+      Zero_Dynamic_Slots (Off_F (N), Off_L (N));\n+      Zero_Header_Slots (N);\n    end Zero_Slots;\n \n+   ----------------------\n+   -- Print_Statistics --\n+   ----------------------\n+\n+   procedure Print_Node_Statistics;\n+   procedure Print_Field_Statistics;\n+   --  Helpers for Print_Statistics\n+\n+   procedure Write_Ratio (X : Nat_64; Y : Pos_64);\n+   --  Write the value of (X/Y) without using 'Image (approximately)\n+\n+   procedure Write_Ratio (X : Nat_64; Y : Pos_64) is\n+      pragma Assert (X <= Y);\n+      Ratio : constant Nat := Nat ((Long_Float (X) / Long_Float (Y)) * 1000.0);\n+   begin\n+      Write_Str (\" (\");\n+\n+      if Ratio = 0 then\n+         Write_Str (\"0.000\");\n+      elsif Ratio in 1 .. 9 then\n+         Write_Str (\"0.00\");\n+         Write_Int (Ratio);\n+      elsif Ratio in 10 .. 99 then\n+         Write_Str (\"0.0\");\n+         Write_Int (Ratio);\n+      elsif Ratio in 100 .. 999 then\n+         Write_Str (\"0.\");\n+         Write_Int (Ratio);\n+      else\n+         Write_Int (Ratio / 1000);\n+      end if;\n+\n+      Write_Str (\")\");\n+   end Write_Ratio;\n+\n+   procedure Print_Node_Statistics is\n+      subtype Count is Nat_64;\n+      Node_Counts : array (Node_Kind) of Count := (others => 0);\n+      Entity_Counts : array (Entity_Kind) of Count := (others => 0);\n+\n+      All_Node_Offsets : Node_Offsets.Table_Type renames\n+        Node_Offsets.Table (Node_Offsets.First .. Node_Offsets.Last);\n+   begin\n+      Write_Int (Int (Node_Offsets.Last));\n+      Write_Line (\" nodes (including entities)\");\n+      Write_Int (Int (Slots.Last));\n+      Write_Line (\" non-header slots\");\n+\n+      for N in All_Node_Offsets'Range loop\n+         declare\n+            K : constant Node_Kind := Nkind (N);\n+\n+         begin\n+            Node_Counts (K) := Node_Counts (K) + 1;\n+\n+            if K in N_Entity then\n+               Entity_Counts (Ekind (N)) := Entity_Counts (Ekind (N)) + 1;\n+            end if;\n+         end;\n+      end loop;\n+\n+      for K in Node_Kind loop\n+         declare\n+            Count : constant Nat_64 := Node_Counts (K);\n+         begin\n+            Write_Int_64 (Count);\n+            Write_Ratio (Count, Int_64 (Node_Offsets.Last));\n+            Write_Str (\" \");\n+            Write_Str (Node_Kind'Image (K));\n+            Write_Str (\" \");\n+            Write_Int (Int (Sinfo.Nodes.Size (K)));\n+            Write_Str (\" slots\");\n+            Write_Eol;\n+         end;\n+      end loop;\n+\n+      for K in Entity_Kind loop\n+         declare\n+            Count : constant Nat_64 := Entity_Counts (K);\n+         begin\n+            Write_Int_64 (Count);\n+            Write_Ratio (Count, Int_64 (Node_Offsets.Last));\n+            Write_Str (\" \");\n+            Write_Str (Entity_Kind'Image (K));\n+            Write_Str (\" \");\n+            Write_Int (Int (Einfo.Entities.Size (K)));\n+            Write_Str (\" slots\");\n+            Write_Eol;\n+         end;\n+      end loop;\n+   end Print_Node_Statistics;\n+\n+   procedure Print_Field_Statistics is\n+      Total, G_Total, S_Total : Call_Count := 0;\n+   begin\n+      Write_Int_64 (Get_Original_Node_Count);\n+      Write_Str (\" + \");\n+      Write_Int_64 (Set_Original_Node_Count);\n+      Write_Eol;\n+      Write_Line (\" Original_Node_Count getter and setter calls\");\n+      Write_Eol;\n+\n+      Write_Line (\"Frequency of field getter and setter calls:\");\n+\n+      for Field in Node_Or_Entity_Field loop\n+         G_Total := G_Total + Get_Count (Field);\n+         S_Total := S_Total + Set_Count (Field);\n+         Total := G_Total + S_Total;\n+      end loop;\n+\n+      --  This assertion helps CodePeer understand that Total cannot be 0 (this\n+      --  is true because GNAT does not attempt to compile empty files).\n+      pragma Assert (Total > 0);\n+\n+      Write_Int_64 (Total);\n+      Write_Str (\" (100%) = \");\n+      Write_Int_64 (G_Total);\n+      Write_Str (\" + \");\n+      Write_Int_64 (S_Total);\n+      Write_Line (\" total getter and setter calls\");\n+\n+      for Field in Node_Or_Entity_Field loop\n+         declare\n+            G : constant Call_Count := Get_Count (Field);\n+            S : constant Call_Count := Set_Count (Field);\n+            GS : constant Call_Count := G + S;\n+\n+            Desc : Field_Descriptor renames Field_Descriptors (Field);\n+            Slot : constant Field_Offset :=\n+              (Field_Size (Desc.Kind) * Desc.Offset) / Slot_Size;\n+\n+         begin\n+            Write_Int_64 (GS);\n+            Write_Ratio (GS, Total);\n+            Write_Str (\" = \");\n+            Write_Int_64 (G);\n+            Write_Str (\" + \");\n+            Write_Int_64 (S);\n+            Write_Str (\" \");\n+            Write_Str (Node_Or_Entity_Field'Image (Field));\n+            Write_Str (\" in slot \");\n+            Write_Int (Int (Slot));\n+            Write_Str (\" size \");\n+            Write_Int (Int (Field_Size (Desc.Kind)));\n+            Write_Eol;\n+         end;\n+      end loop;\n+   end Print_Field_Statistics;\n+\n+   procedure Print_Statistics is\n+   begin\n+      Write_Eol;\n+      Write_Eol;\n+      Print_Node_Statistics;\n+      Print_Field_Statistics;\n+   end Print_Statistics;\n+\n end Atree;"}, {"sha": "417a7ab6f82f59ac2d6fbf896d057b7e3520e19a", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 113, "deletions": 42, "changes": 155, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -47,7 +47,9 @@\n with Alloc;\n with Sinfo.Nodes;    use Sinfo.Nodes;\n with Einfo.Entities; use Einfo.Entities;\n+with Einfo.Utils;    use Einfo.Utils;\n with Types;          use Types;\n+with Seinfo;         use Seinfo;\n with System;         use System;\n with Table;\n with Unchecked_Conversion;\n@@ -229,11 +231,18 @@ package Atree is\n    function New_Node\n      (New_Node_Kind : Node_Kind;\n       New_Sloc      : Source_Ptr) return Node_Id;\n-   --  Allocates a completely new node with the given node type and source\n-   --  location values. All other fields are set to their standard defaults:\n+   --  Allocates a new node with the given node type and source location\n+   --  values. Fields have defaults depending on their type:\n+\n+   --    Flag: False\n+   --    Node_Id: Empty\n+   --    List_Id: Empty\n+   --    Elist_Id: No_Elist\n+   --    Uint: No_Uint\n    --\n-   --    Empty for all FieldN fields\n-   --    False for all FlagN fields\n+   --    Name_Id, String_Id, Valid_Uint, Unat, Upos, Nonzero_Uint, Ureal:\n+   --      No default. This means it is an error to call the getter before\n+   --      calling the setter.\n    --\n    --  The usual approach is to build a new node using this function and\n    --  then, using the value returned, use the Set_xxx functions to set\n@@ -287,16 +296,16 @@ package Atree is\n    --  with copying aspect specifications where this is required.\n \n    function New_Copy (Source : Node_Id) return Node_Id;\n-   --  This function allocates a completely new node, and then initializes\n-   --  it by copying the contents of the source node into it. The contents of\n-   --  the source node is not affected. The target node is always marked as\n-   --  not being in a list (even if the source is a list member), and not\n-   --  overloaded. The new node will have an extension if the source has\n-   --  an extension. New_Copy (Empty) returns Empty, and New_Copy (Error)\n-   --  returns Error. Note that, unlike Copy_Separate_Tree, New_Copy does not\n-   --  recursively copy any descendants, so in general parent pointers are not\n-   --  set correctly for the descendants of the copied node. Both normal and\n-   --  extended nodes (entities) may be copied using New_Copy.\n+   --  This function allocates a new node, and then initializes it by copying\n+   --  the contents of the source node into it. The contents of the source node\n+   --  is not affected. The target node is always marked as not being in a list\n+   --  (even if the source is a list member), and not overloaded. The new node\n+   --  will have an extension if the source has an extension. New_Copy (Empty)\n+   --  returns Empty, and New_Copy (Error) returns Error. Note that, unlike\n+   --  Copy_Separate_Tree, New_Copy does not recursively copy any descendants,\n+   --  so in general parent pointers are not set correctly for the descendants\n+   --  of the copied node. Both normal and extended nodes (entities) may be\n+   --  copied using New_Copy.\n \n    function Relocate_Node (Source : Node_Id) return Node_Id;\n    --  Source is a non-entity node that is to be relocated. A new node is\n@@ -339,11 +348,11 @@ package Atree is\n    --  Exchange the contents of two entities. The parent pointers are switched\n    --  as well as the Defining_Identifier fields in the parents, so that the\n    --  entities point correctly to their original parents. The effect is thus\n-   --  to leave the tree completely unchanged in structure, except that the\n-   --  entity ID values of the two entities are interchanged. Neither of the\n-   --  two entities may be list members. Note that entities appear on two\n-   --  semantic chains: Homonym and Next_Entity: the corresponding links must\n-   --  be adjusted by the caller, according to context.\n+   --  to leave the tree unchanged in structure, except that the entity ID\n+   --  values of the two entities are interchanged. Neither of the two entities\n+   --  may be list members. Note that entities appear on two semantic chains:\n+   --  Homonym and Next_Entity: the corresponding links must be adjusted by the\n+   --  caller, according to context.\n \n    procedure Extend_Node (Source : Node_Id);\n    --  This turns a node into an entity; it function is used only by Sinfo.CN.\n@@ -400,13 +409,32 @@ package Atree is\n    --  by a call to Process returning Abandon, otherwise it is OK (meaning that\n    --  all calls to process returned either OK, OK_Orig, or Skip).\n \n+   generic\n+      with function Process\n+        (Parent_Node : Node_Id;\n+         Node        : Node_Id) return Traverse_Result is <>;\n+   function Traverse_Func_With_Parent\n+     (Node : Node_Id) return Traverse_Final_Result;\n+   pragma Inline (Traverse_Func_With_Parent);\n+   --  Same as Traverse_Func except that the called function Process receives\n+   --  also the Parent_Node of Node.\n+\n    generic\n       with function Process (N : Node_Id) return Traverse_Result is <>;\n    procedure Traverse_Proc (Node : Node_Id);\n    pragma Inline (Traverse_Proc);\n    --  This is the same as Traverse_Func except that no result is returned,\n    --  i.e. Traverse_Func is called and the result is simply discarded.\n \n+   generic\n+      with function Process\n+        (Parent_Node : Node_Id;\n+         Node        : Node_Id) return Traverse_Result is <>;\n+   procedure Traverse_Proc_With_Parent (Node : Node_Id);\n+   pragma Inline (Traverse_Proc_With_Parent);\n+   --  Same as Traverse_Proc except that the called function Process receives\n+   --  also the Parent_Node of Node.\n+\n    ---------------------------\n    -- Node Access Functions --\n    ---------------------------\n@@ -501,6 +529,7 @@ package Atree is\n    --  the contents of these two nodes fixing up the parent pointers of the\n    --  replaced node (we do not attempt to preserve parent pointers for the\n    --  original node). Neither Old_Node nor New_Node can be extended nodes.\n+   --  ??? The above explanation is incorrect, instead Copy_Node is called.\n    --\n    --  Note: New_Node may not contain references to Old_Node, for example as\n    --  descendants, since the rewrite would make such references invalid. If\n@@ -565,10 +594,9 @@ package Atree is\n \n    type Entity_Field_Set is array (Entity_Field) of Boolean with Pack;\n \n-   procedure Reinit_Field_To_Zero (N : Node_Id; Field : Node_Field);\n-   procedure Reinit_Field_To_Zero (N : Node_Id; Field : Entity_Field);\n+   procedure Reinit_Field_To_Zero (N : Node_Id; Field : Node_Or_Entity_Field);\n    --  When a node is created, all fields are initialized to zero, even if zero\n-   --  is not a valid value of the field type. These procedures put the field\n+   --  is not a valid value of the field type. This procedure puts the field\n    --  back to its initial zero value. Note that you can't just do something\n    --  like Set_Some_Field (N, 0), if Some_Field is of (say) type Uintp,\n    --  because Uintp is a subrange that does not include 0.\n@@ -582,9 +610,7 @@ package Atree is\n    --  this.\n \n    function Field_Is_Initial_Zero\n-     (N : Node_Id; Field : Node_Field) return Boolean;\n-   function Field_Is_Initial_Zero\n-     (N : Entity_Id; Field : Entity_Field) return Boolean;\n+     (N : Node_Id; Field : Node_Or_Entity_Field) return Boolean;\n    --  True if the field value is the initial zero value\n \n    procedure Mutate_Nkind (N : Node_Id; Val : Node_Kind) with Inline;\n@@ -610,9 +636,19 @@ package Atree is\n    --  always the same; for example we change from E_Void, to E_Variable, to\n    --  E_Void, to E_Constant.\n \n-   procedure Print_Atree_Info (N : Node_Or_Entity_Id);\n-   --  Called from Treepr to print out information about N that is private to\n-   --  Atree.\n+   function Node_To_Fetch_From\n+     (N : Node_Or_Entity_Id; Field : Node_Or_Entity_Field)\n+     return Node_Or_Entity_Id is\n+      (case Field_Descriptors (Field).Type_Only is\n+         when No_Type_Only => N,\n+         when Base_Type_Only => Base_Type (N),\n+         when Impl_Base_Type_Only => Implementation_Base_Type (N),\n+         when Root_Type_Only => Root_Type (N));\n+   --  This is analogous to the same-named function in Gen_IL.Gen. Normally,\n+   --  Type_Only is No_Type_Only, and we fetch the field from the node N. But\n+   --  if Type_Only = Base_Type_Only, we need to go to the Base_Type, and\n+   --  similarly for the other two cases. This can return something other\n+   --  than N only if N is an Entity.\n \n    -----------------------------\n    -- Private Part Subpackage --\n@@ -638,7 +674,7 @@ package Atree is\n       --  The nodes of the tree are stored in two tables (i.e. growable\n       --  arrays).\n \n-      --  A Node_Id points to an element of Nodes, which contains a\n+      --  A Node_Id points to an element of Node_Offsets, which contains a\n       --  Field_Offset that points to an element of Slots. Each slot can\n       --  contain a single 32-bit field, or multiple smaller fields.\n       --  An n-bit field is aligned on an n-bit boundary. The size of a node is\n@@ -648,12 +684,40 @@ package Atree is\n       --  The reason for the extra level of indirection is that Copy_Node,\n       --  Exchange_Entities, and Rewrite all assume that nodes can be modified\n       --  in place.\n+      --\n+      --  As an optimization, we store a few slots directly in the Node_Offsets\n+      --  table (see type Node_Header) rather than requiring the extra level of\n+      --  indirection for accessing those slots. N_Head is the number of slots\n+      --  stored in the Node_Header. N_Head can be adjusted by modifying\n+      --  Gen_IL.Gen. If N_Head is (say) 3, then a node containing 7 slots will\n+      --  have slots 0..2 in the header, and 3..6 stored indirect in the Slots\n+      --  table. We use zero-origin addressing, so the Offset into the Slots\n+      --  table will point 3 slots before slot 3.\n+\n+      pragma Assert (N_Head <= Min_Node_Size);\n+      pragma Assert (N_Head <= Min_Entity_Size);\n+\n+      Slot_Size : constant := 32;\n+      type Slot is mod 2**Slot_Size;\n+      for Slot'Size use Slot_Size;\n \n-      subtype Node_Offset is Field_Offset'Base\n-        range 1 .. Field_Offset'Base'Last;\n+      --  The type Slot is defined in Types as a 32-bit modular integer. It\n+      --  is logically split into the appropriate numbers of components of\n+      --  appropriate size, but this splitting is not explicit because packed\n+      --  arrays cannot be properly interfaced in C/C++ and packed records are\n+      --  way too slow.\n+\n+      type Node_Header_Slots is\n+        array (Field_Offset range 0 .. N_Head - 1) of Slot;\n+      type Node_Header is record\n+         Slots : Node_Header_Slots;\n+         Offset : Node_Offset'Base;\n+      end record;\n+      pragma Assert (Node_Header'Size = (N_Head + 1) * Slot_Size);\n+      pragma Assert (Node_Header'Size = 16 * 8);\n \n       package Node_Offsets is new Table.Table\n-        (Table_Component_Type => Node_Offset,\n+        (Table_Component_Type => Node_Header,\n          Table_Index_Type     => Node_Id'Base,\n          Table_Low_Bound      => First_Node_Id,\n          Table_Initial        => Alloc.Node_Offsets_Initial,\n@@ -667,15 +731,6 @@ package Atree is\n       --  Short names for use in gdb, not used in real code. Note that gdb\n       --  can't find Node_Offsets.Table without a full expanded name.\n \n-      --  We define the type Slot as a 32-bit modular integer. It is logically\n-      --  split into the appropriate numbers of components of appropriate size,\n-      --  but this splitting is not explicit because packed arrays cannot be\n-      --  properly interfaced in C/C++ and packed records are way too slow.\n-\n-      Slot_Size : constant := 32;\n-      type Slot is mod 2**Slot_Size;\n-      for Slot'Size use Slot_Size;\n-\n       function Shift_Left (S : Slot; V : Natural) return Slot;\n       pragma Import (Intrinsic, Shift_Left);\n \n@@ -855,6 +910,22 @@ package Atree is\n       function Is_Valid_Node (U : Union_Id) return Boolean;\n       --  True if U is within the range of Node_Offsets\n \n+      procedure Print_Atree_Info (N : Node_Or_Entity_Id);\n+      --  Called from Treepr to print out information about N that is private\n+      --  to Atree.\n+\n    end Atree_Private_Part;\n \n+   --  Statistics:\n+\n+   subtype Call_Count is Nat_64;\n+   Get_Count, Set_Count : array (Node_Or_Entity_Field) of Call_Count :=\n+     (others => 0);\n+   --  Number of calls to each getter and setter. See documentaton for\n+   --  -gnatd.A.\n+\n+   Get_Original_Node_Count, Set_Original_Node_Count : Call_Count := 0;\n+\n+   procedure Print_Statistics;\n+\n end Atree;"}, {"sha": "3b736caa49990fef73fa07267284a41fb4446167", "filename": "gcc/ada/atree.h", "status": "modified", "additions": 1, "deletions": 72, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fatree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fatree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.h?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 1992-2021, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2022, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -65,77 +65,6 @@ Present (Tree_Id N)\n #define Current_Error_Node atree__current_error_node\n extern Node_Id Current_Error_Node;\n \n-/* The following code corresponds to the Get_n_Bit_Field functions (for\n-   various n) in package Atree.  The low-level getters in sinfo.h call\n-   these even-lower-level getters.  */\n-\n-extern Field_Offset *Node_Offsets_Ptr;\n-extern any_slot *Slots_Ptr;\n-\n-INLINE unsigned int Get_1_Bit_Field (Node_Id, Field_Offset);\n-INLINE unsigned int Get_2_Bit_Field (Node_Id, Field_Offset);\n-INLINE unsigned int Get_4_Bit_Field (Node_Id, Field_Offset);\n-INLINE unsigned int Get_8_Bit_Field (Node_Id, Field_Offset);\n-INLINE unsigned int Get_32_Bit_Field (Node_Id, Field_Offset);\n-INLINE unsigned int Get_32_Bit_Field_With_Default (Node_Id, Field_Offset,\n-\t\t\t\t\t\t   unsigned int);\n-INLINE unsigned int Get_Valid_32_Bit_Field (Node_Id, Field_Offset);\n-\n-INLINE unsigned int\n-Get_1_Bit_Field (Node_Id N, Field_Offset Offset)\n-{\n-  const Field_Offset L = Slot_Size / 1;\n-  any_slot slot = *(Slots_Ptr + Node_Offsets_Ptr[N] + Offset / L);\n-  return (slot >> (Offset % L) * (Slot_Size / L)) & 1;\n-}\n-\n-INLINE unsigned int\n-Get_2_Bit_Field (Node_Id N, Field_Offset Offset)\n-{\n-  const Field_Offset L = Slot_Size / 2;\n-  any_slot slot = *(Slots_Ptr + Node_Offsets_Ptr[N] + Offset / L);\n-  return (slot >> (Offset % L) * (Slot_Size / L)) & 3;\n-}\n-\n-INLINE unsigned int\n-Get_4_Bit_Field (Node_Id N, Field_Offset Offset)\n-{\n-  const Field_Offset L = Slot_Size / 4;\n-  any_slot slot = *(Slots_Ptr + Node_Offsets_Ptr[N] + Offset / L);\n-  return (slot >> (Offset % L) * (Slot_Size / L)) & 15;\n-}\n-\n-INLINE unsigned int\n-Get_8_Bit_Field (Node_Id N, Field_Offset Offset)\n-{\n-  const Field_Offset L = Slot_Size / 8;\n-  any_slot slot = *(Slots_Ptr + Node_Offsets_Ptr[N] + Offset / L);\n-  return (slot >> (Offset % L) * (Slot_Size / L)) & 255;\n-}\n-\n-INLINE unsigned int\n-Get_32_Bit_Field (Node_Id N, Field_Offset Offset)\n-{\n-  any_slot slot = *(Slots_Ptr + Node_Offsets_Ptr[N] + Offset);\n-  return slot;\n-}\n-\n-INLINE unsigned int\n-Get_32_Bit_Field_With_Default (Node_Id N, Field_Offset Offset,\n-\t\t\t       unsigned int Default_Value)\n-{\n-  any_slot slot = *(Slots_Ptr + Node_Offsets_Ptr[N] + Offset);\n-  return slot == Empty ? Default_Value : slot;\n-}\n-\n-INLINE unsigned int\n-Get_Valid_32_Bit_Field (Node_Id N, Field_Offset Offset)\n-{\n-  any_slot slot = *(Slots_Ptr + Node_Offsets_Ptr[N] + Offset);\n-  gcc_assert (slot != Empty);\n-  return slot;\n-}\n-\n #ifdef __cplusplus\n }\n #endif"}, {"sha": "d842051238a6f231842dff6b50f6fed7b1e438f6", "filename": "gcc/ada/aux-io.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Faux-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Faux-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faux-io.c?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *           Copyright (C) 1992-2021, Free Software Foundation, Inc.        *\n+ *           Copyright (C) 1992-2022, Free Software Foundation, Inc.        *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "833d6b9c10c2e4f4436420c1e2b027bb5033f431", "filename": "gcc/ada/back_end.adb", "status": "modified", "additions": 33, "deletions": 64, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fback_end.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fback_end.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fback_end.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -25,23 +25,24 @@\n \n --  This is the version of the Back_End package for GCC back ends\n \n-with Atree;    use Atree;\n-with Debug;    use Debug;\n-with Elists;   use Elists;\n-with Errout;   use Errout;\n-with Lib;      use Lib;\n-with Osint;    use Osint;\n-with Opt;      use Opt;\n-with Osint.C;  use Osint.C;\n-with Namet;    use Namet;\n-with Nlists;   use Nlists;\n-with Stand;    use Stand;\n-with Sinput;   use Sinput;\n-with Stringt;  use Stringt;\n-with Switch;   use Switch;\n-with Switch.C; use Switch.C;\n-with System;   use System;\n-with Types;    use Types;\n+with Atree;         use Atree;\n+with Backend_Utils; use Backend_Utils;\n+with Debug;         use Debug;\n+with Elists;        use Elists;\n+with Errout;        use Errout;\n+with Lib;           use Lib;\n+with Osint;         use Osint;\n+with Opt;           use Opt;\n+with Osint.C;       use Osint.C;\n+with Namet;         use Namet;\n+with Nlists;        use Nlists;\n+with Stand;         use Stand;\n+with Sinput;        use Sinput;\n+with Stringt;       use Stringt;\n+with Switch;        use Switch;\n+with Switch.C;      use Switch.C;\n+with System;        use System;\n+with Types;         use Types;\n \n with System.OS_Lib; use System.OS_Lib;\n \n@@ -266,52 +267,20 @@ package body Back_End is\n          --  specific switches that the Ada front-end knows about.\n \n          else\n-            Store_Compilation_Switch (Switch_Chars);\n-\n-            --  For gcc back ends, -fno-inline disables Inline pragmas only,\n-            --  not Inline_Always to remain consistent with the always_inline\n-            --  attribute behavior.\n-\n-            if Switch_Chars (First .. Last) = \"fno-inline\" then\n-               Opt.Disable_FE_Inline := True;\n-\n-            --  Back end switch -fpreserve-control-flow also sets the front end\n-            --  flag that inhibits improper control flow transformations.\n-\n-            elsif Switch_Chars (First .. Last) = \"fpreserve-control-flow\" then\n-               Opt.Suppress_Control_Flow_Optimizations := True;\n-\n-            --  Back end switch -fdiagnostics-format=json tells the frontend to\n-            --  output its error and warning messages in the same format GCC\n-            --  uses when passed -fdiagnostics-format=json.\n-\n-            elsif Switch_Chars (First .. Last) = \"fdiagnostics-format=json\"\n-            then\n-               Opt.JSON_Output := True;\n-\n-            --  Back end switch -fdump-scos, which exists primarily for C, is\n-            --  also accepted for Ada as a synonym of -gnateS.\n-\n-            elsif Switch_Chars (First .. Last) = \"fdump-scos\" then\n-               Opt.Generate_SCO := True;\n-               Opt.Generate_SCO_Instance_Table := True;\n-\n-            elsif Switch_Chars (First) = 'g' then\n-               Debugger_Level := 2;\n-\n-               if First < Last then\n-                  case Switch_Chars (First + 1) is\n-                     when '0' =>\n-                        Debugger_Level := 0;\n-                     when '1' =>\n-                        Debugger_Level := 1;\n-                     when '2' =>\n-                        Debugger_Level := 2;\n-                     when '3' =>\n-                        Debugger_Level := 3;\n-                     when others =>\n-                        null;\n-                  end case;\n+\n+            if not Scan_Common_Back_End_Switch (Switch_Chars) then\n+\n+               --  Store compilation switch, as Scan_Common_Back_End_Switch\n+               --  only stores switches it recognizes.\n+\n+               Store_Compilation_Switch (Switch_Chars);\n+\n+               --  Back end switch -fdump-scos, which exists primarily for C,\n+               --  is also accepted for Ada as a synonym of -gnateS.\n+\n+               if Switch_Chars (First .. Last) = \"fdump-scos\" then\n+                  Opt.Generate_SCO := True;\n+                  Opt.Generate_SCO_Instance_Table := True;\n                end if;\n             end if;\n          end if;"}, {"sha": "3febcf9a0d8b623882432eb419a38aa352faf139", "filename": "gcc/ada/back_end.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fback_end.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fback_end.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fback_end.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "011b8b2ce947cd1f44e42ea04252b0ec0276b7bf", "filename": "gcc/ada/backend_utils.adb", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbackend_utils.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbackend_utils.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbackend_utils.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -0,0 +1,96 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                         B A C K E N D _ U T I L S                        --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--          Copyright (C) 2021-2022, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT; see file COPYING3.  If not, go to --\n+-- http://www.gnu.org/licenses for a complete copy of the license.          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+with Lib;\n+with Opt;    use Opt;\n+with Switch; use Switch;\n+\n+package body Backend_Utils is\n+\n+   ---------------------------------\n+   -- Scan_Common_Back_End_Switch --\n+   ---------------------------------\n+\n+   function Scan_Common_Back_End_Switch (Switch_Chars : String) return Boolean\n+   is\n+      First : constant Positive := Switch_Chars'First + 1;\n+      Last  : constant Natural  := Switch_Last (Switch_Chars);\n+   begin\n+\n+      --  Recognize -gxxx switches\n+\n+      if Switch_Chars (First) = 'g' then\n+         Debugger_Level := 2;\n+\n+         if First < Last then\n+            case Switch_Chars (First + 1) is\n+               when '0' =>\n+                  Debugger_Level := 0;\n+               when '1' =>\n+                  Debugger_Level := 1;\n+               when '2' =>\n+                  Debugger_Level := 2;\n+               when '3' =>\n+                  Debugger_Level := 3;\n+               when others =>\n+                  null;\n+            end case;\n+         end if;\n+\n+      --  Back end switch -fdiagnostics-format=json tells the frontend to\n+      --  output its error and warning messages in the same format GCC\n+      --  uses when passed -fdiagnostics-format=json.\n+\n+      elsif Switch_Chars (First .. Last) = \"fdiagnostics-format=json\" then\n+         Opt.JSON_Output := True;\n+\n+      --  Back-end switch -fno-inline also sets the front end flags to entirely\n+      --  inhibit all inlining. So we store it and set the appropriate\n+      --  flags.\n+      --  For gcc back ends, -fno-inline disables Inline pragmas only,\n+      --  not Inline_Always to remain consistent with the always_inline\n+      --  attribute behavior.\n+\n+      elsif Switch_Chars (First .. Last) = \"fno-inline\" then\n+         Opt.Disable_FE_Inline := True;\n+\n+      --  Back end switch -fpreserve-control-flow also sets the front end\n+      --  flag that inhibits improper control flow transformations.\n+\n+      elsif Switch_Chars (First .. Last) = \"fpreserve-control-flow\" then\n+         Opt.Suppress_Control_Flow_Optimizations := True;\n+\n+      elsif Switch_Chars (First .. Last) = \"S\" then\n+         Generate_Asm := True;\n+\n+      else\n+         return False;\n+      end if;\n+\n+      Lib.Store_Compilation_Switch (Switch_Chars);\n+      return True;\n+   end Scan_Common_Back_End_Switch;\n+\n+end Backend_Utils;"}, {"sha": "11c9fc33d6f06307bf7459db8bc180c4daf08c6b", "filename": "gcc/ada/backend_utils.ads", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbackend_utils.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbackend_utils.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbackend_utils.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -0,0 +1,36 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                         B A C K E N D _ U T I L S                        --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--          Copyright (C) 2021-2022, Free Software Foundation, Inc.         --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT; see file COPYING3.  If not, go to --\n+-- http://www.gnu.org/licenses for a complete copy of the license.          --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- Extensive contributions were provided by Ada Core Technologies Inc.      --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  Procedures and functions used by both the Adabkend and Back_End packages.\n+\n+package Backend_Utils is\n+\n+   function Scan_Common_Back_End_Switch (Switch_Chars : String) return Boolean;\n+   --  Scan back-end switches which are common to all back-ends and have an\n+   --  effect in the front-end. Call Store_Compilation_Switch and return True\n+   --  if Switch_Chars is recognized as a common back end switch. Return False\n+   --  otherwise.\n+\n+end Backend_Utils;"}, {"sha": "f773778e77c81c06f12c07ab615106eb9b4d8621", "filename": "gcc/ada/bcheck.adb", "status": "modified", "additions": 131, "deletions": 5, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbcheck.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbcheck.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbcheck.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -29,6 +29,7 @@ with Binderr;  use Binderr;\n with Butil;    use Butil;\n with Casing;   use Casing;\n with Fname;    use Fname;\n+with Gnatvsn;\n with Namet;    use Namet;\n with Opt;      use Opt;\n with Osint;\n@@ -1324,11 +1325,136 @@ package body Bcheck is\n            or else ALIs.Table (A).Ver          (1 .. VL) /=\n                    ALIs.Table (ALIs.First).Ver (1 .. VL)\n          then\n-            Error_Msg_File_1 := ALIs.Table (A).Sfile;\n-            Error_Msg_File_2 := ALIs.Table (ALIs.First).Sfile;\n+            --  Version mismatch found; generate error message.\n \n-            Consistency_Error_Msg\n-               (\"{ and { compiled with different GNAT versions\");\n+            declare\n+               use Gnatvsn;\n+\n+               Prefix : constant String :=\n+                 Verbose_Library_Version\n+                   (1 .. Verbose_Library_Version'Length\n+                           - Library_Version'Length);\n+\n+               type ALI_Version is record\n+                  Primary, Secondary : Int range -1 .. Int'Last;\n+               end record;\n+\n+               No_Version : constant ALI_Version := (-1, -1);\n+\n+               function Remove_Prefix (S : String) return String is\n+                 (S (S'First + Prefix'Length .. S'Last));\n+\n+               function Extract_Version (S : String) return ALI_Version;\n+               --  Attempts to extract and return a pair of nonnegative library\n+               --  version numbers from the given string; if unsuccessful,\n+               --  then returns No_Version.\n+\n+               ---------------------\n+               -- Extract_Version --\n+               ---------------------\n+\n+               function Extract_Version (S : String) return ALI_Version is\n+                  pragma Assert (S'First = 1);\n+\n+                  function Int_Value (Img : String) return Int;\n+                  --  Using Int'Value leads to complications in\n+                  --  building the binder, so DIY.\n+\n+                  ---------------\n+                  -- Int_Value --\n+                  ---------------\n+\n+                  function Int_Value (Img : String) return Int is\n+                     Result : Nat := 0;\n+                  begin\n+                     if Img'Length in 1 .. 9\n+                       and then (for all C of Img => C in '0' .. '9')\n+                     then\n+                        for C of Img loop\n+                           Result := (10 * Result) +\n+                             (Character'Pos (C) - Character'Pos ('0'));\n+                        end loop;\n+                        return Result;\n+                     else\n+                        return -1;\n+                     end if;\n+                  end Int_Value;\n+\n+               begin\n+                  if S'Length > Prefix'Length\n+                    and then S (1 .. Prefix'Length) = Prefix\n+                  then\n+                     declare\n+                        Suffix    : constant String := Remove_Prefix (S);\n+                        Dot_Found : Boolean := False;\n+                        Primary, Secondary : Int;\n+                     begin\n+                        for Dot_Index in Suffix'Range loop\n+                           if Suffix (Dot_Index) = '.' then\n+                              Dot_Found := True;\n+                              Primary :=\n+                                Int_Value (Suffix (Suffix'First\n+                                                   .. Dot_Index - 1));\n+                              Secondary :=\n+                                Int_Value (Suffix (Dot_Index + 1\n+                                                   .. Suffix'Last));\n+                              exit;\n+                           end if;\n+                        end loop;\n+\n+                        if not Dot_Found then\n+                           Primary   := Int_Value (Suffix);\n+                           Secondary := 0;\n+                        end if;\n+\n+                        if (Primary /= -1) and (Secondary /= -1) then\n+                           return (Primary   => Primary,\n+                                   Secondary => Secondary);\n+                        end if;\n+                     end;\n+                  end if;\n+                  return No_Version;\n+               end Extract_Version;\n+\n+               --  Local constants\n+\n+               V1_Text : constant String :=\n+                 ALIs.Table (A).Ver (1 .. ALIs.Table (A).Ver_Len);\n+               V2_Text : constant String :=\n+                 ALIs.Table (ALIs.First).Ver (1 .. VL);\n+               V1      : constant ALI_Version := Extract_Version (V1_Text);\n+               V2      : constant ALI_Version := Extract_Version (V2_Text);\n+\n+               Include_Version_Numbers_In_Message : constant Boolean :=\n+                 (V1 /= V2) and (V1 /= No_Version) and (V2 /= No_Version);\n+            begin\n+               Error_Msg_File_1 := ALIs.Table (A).Sfile;\n+               Error_Msg_File_2 := ALIs.Table (ALIs.First).Sfile;\n+\n+               if Include_Version_Numbers_In_Message then\n+                  if V1.Secondary = V2.Secondary then\n+                     --  Excluding equal secondary values from error\n+                     --  message text matters for generating reproducible\n+                     --  regression test outputs.\n+\n+                     Error_Msg_Nat_1 := V1.Primary;\n+                     Error_Msg_Nat_2 := V2.Primary;\n+                     Consistency_Error_Msg\n+                       (\"{ and { compiled with different GNAT versions\"\n+                        & \", v# and v#\");\n+                  else\n+                     Consistency_Error_Msg\n+                       (\"{ and { compiled with different GNAT versions\"\n+                        & \", v\"\n+                        & Remove_Prefix (V1_Text)\n+                        & \" and v\"\n+                        & Remove_Prefix (V2_Text));\n+                  end if;\n+               else\n+                  Consistency_Error_Msg\n+                    (\"{ and { compiled with different GNAT versions\");\n+               end if;\n+            end;\n          end if;\n       end loop;\n    end Check_Versions;"}, {"sha": "5475c1975c140e3a26e20fb6abe62aa6c74efdf7", "filename": "gcc/ada/bcheck.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbcheck.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbcheck.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbcheck.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "156960469f018c3d5ba081dfce4d12d8f68a288f", "filename": "gcc/ada/binde.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbinde.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbinde.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbinde.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "30bf0a801a65771cdad7150aa2c1644b3567981e", "filename": "gcc/ada/binde.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbinde.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbinde.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbinde.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "71b98f5e3e022d433e5ae84b3a9f56bfaae495bc", "filename": "gcc/ada/binderr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbinderr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbinderr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbinderr.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "57cbd64874c160fd784522a05965b9fa8fe7fc36", "filename": "gcc/ada/binderr.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbinderr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbinderr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbinderr.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "eec9dd5fbb6bd9942aaa6fa8046ec2667c219598", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -588,6 +588,27 @@ package body Bindgen is\n             WBI (\"\");\n          end if;\n \n+         --  Import the default stack object if a size has been provided to the\n+         --  binder.\n+\n+         if Opt.Default_Stack_Size /= Opt.No_Stack_Size then\n+            WBI (\"      Default_Stack_Size : Integer;\");\n+            WBI (\"      pragma Import (C, Default_Stack_Size, \" &\n+                 \"\"\"__gl_default_stack_size\"\");\");\n+         end if;\n+\n+         --  Initialize stack limit variable of the environment task if the\n+         --  stack check method is stack limit and stack check is enabled.\n+\n+         if Stack_Check_Limits_On_Target\n+           and then (Stack_Check_Default_On_Target or Stack_Check_Switch_Set)\n+         then\n+            WBI (\"\");\n+            WBI (\"      procedure Initialize_Stack_Limit;\");\n+            WBI (\"      pragma Import (C, Initialize_Stack_Limit, \" &\n+                 \"\"\"__gnat_initialize_stack_limit\"\");\");\n+         end if;\n+\n          if System_Secondary_Stack_Package_In_Closure then\n             --  System.Secondary_Stack is in the closure of the program\n             --  because the program uses the secondary stack or the restricted\n@@ -619,6 +640,15 @@ package body Bindgen is\n \n          WBI (\"   begin\");\n \n+         --  Set the default stack size if provided to the binder\n+\n+         if Opt.Default_Stack_Size /= Opt.No_Stack_Size then\n+            Set_String (\"      Default_Stack_Size := \");\n+            Set_Int (Default_Stack_Size);\n+            Set_String (\";\");\n+            Write_Statement_Buffer;\n+         end if;\n+\n          if Main_Priority /= No_Main_Priority then\n             Set_String (\"      Main_Priority := \");\n             Set_Int    (Main_Priority);\n@@ -643,6 +673,7 @@ package body Bindgen is\n          end if;\n \n          if Main_Priority = No_Main_Priority\n+           and then Opt.Default_Stack_Size = Opt.No_Stack_Size\n            and then Main_CPU = No_Main_CPU\n            and then not System_Tasking_Restricted_Stages_Used\n          then"}, {"sha": "65563ec83d8f7b55dc456546625c1425a4ca21b0", "filename": "gcc/ada/bindgen.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindgen.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindgen.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "d2f3c8a25b3ed638df839aa4a1d86a89eeaa78b9", "filename": "gcc/ada/bindo-augmentors.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-augmentors.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-augmentors.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-augmentors.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2019-2021, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "da3c7867305e1423dd0ed1cffd4535b50dc2371e", "filename": "gcc/ada/bindo-augmentors.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-augmentors.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-augmentors.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-augmentors.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2019-2021, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "3ef092a7c1af853c179e4906bb17a045c4ce649d", "filename": "gcc/ada/bindo-builders.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-builders.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-builders.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-builders.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2019-2021, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "7259bb04f272aacaa3d84843abf81c27afea342e", "filename": "gcc/ada/bindo-builders.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-builders.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-builders.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-builders.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2019-2021, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "657f04920bf52971b7649a397893ffc19162a7d5", "filename": "gcc/ada/bindo-diagnostics.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-diagnostics.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-diagnostics.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-diagnostics.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2019-2021, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "9f6a0ea3eef1b103752a2895b5c3f2af112bdfd3", "filename": "gcc/ada/bindo-diagnostics.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-diagnostics.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-diagnostics.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-diagnostics.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2019-2021, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "9220a7c3e4609f09d23d8ee12c08c4987b56d69d", "filename": "gcc/ada/bindo-elaborators.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-elaborators.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-elaborators.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-elaborators.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2019-2021, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "b13b3737931dbabeef49f3e54b53ed72f73fa231", "filename": "gcc/ada/bindo-elaborators.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-elaborators.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-elaborators.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-elaborators.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2019-2021, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "e33f2ce6595022e67fb558271927436af629a139", "filename": "gcc/ada/bindo-graphs.adb", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-graphs.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-graphs.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-graphs.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2019-2021, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -4903,11 +4903,10 @@ package body Bindo.Graphs is\n \n       procedure Set_Is_Existing_Source_Target_Relation\n         (G   : Invocation_Graph;\n-         Rel : Source_Target_Relation;\n-         Val : Boolean := True);\n+         Rel : Source_Target_Relation);\n       pragma Inline (Set_Is_Existing_Source_Target_Relation);\n       --  Mark a source vertex and a target vertex described by relation Rel as\n-      --  already related in invocation graph G depending on value Val.\n+      --  already related in invocation graph G.\n \n       procedure Set_IGE_Attributes\n         (G    : Invocation_Graph;\n@@ -5636,19 +5635,14 @@ package body Bindo.Graphs is\n \n       procedure Set_Is_Existing_Source_Target_Relation\n         (G   : Invocation_Graph;\n-         Rel : Source_Target_Relation;\n-         Val : Boolean := True)\n+         Rel : Source_Target_Relation)\n       is\n       begin\n          pragma Assert (Present (G));\n          pragma Assert (Present (Rel.Source));\n          pragma Assert (Present (Rel.Target));\n \n-         if Val then\n-            Relation_Sets.Insert (G.Relations, Rel);\n-         else\n-            Relation_Sets.Delete (G.Relations, Rel);\n-         end if;\n+         Relation_Sets.Insert (G.Relations, Rel);\n       end Set_Is_Existing_Source_Target_Relation;\n \n       ------------------------"}, {"sha": "9f2d469472e16cfbfc98eee57c6542ba0673ee79", "filename": "gcc/ada/bindo-graphs.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-graphs.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-graphs.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-graphs.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2019-2021, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "d0df8b053df0f6bb688a4ce08ccfa9f9a4e758a4", "filename": "gcc/ada/bindo-units.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-units.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-units.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-units.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2019-2021, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "2817b26cced6a3ae60679b5465ef1d35fb5781ca", "filename": "gcc/ada/bindo-units.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-units.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-units.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-units.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2019-2021, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "c913e3fc0d124773566808106ff8598f2df4770b", "filename": "gcc/ada/bindo-validators.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-validators.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-validators.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-validators.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2019-2021, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "319fc85a195ebfe08d129cd51791c427e65d1fba", "filename": "gcc/ada/bindo-validators.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-validators.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-validators.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-validators.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2019-2021, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "019cdebcabe7a00ecfbc04bf506467a728fc9f6e", "filename": "gcc/ada/bindo-writers.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-writers.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-writers.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-writers.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2019-2021, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "1a91454d399a707524eab4407e35ee4bce1ff42b", "filename": "gcc/ada/bindo-writers.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-writers.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo-writers.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo-writers.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2019-2021, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "46aa6cc9fb609036d300c09cde9c57bc6c0cb5c6", "filename": "gcc/ada/bindo.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2019-2021, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "c8bbaff8c5f560522a0dedfd846c2304318ee410", "filename": "gcc/ada/bindo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindo.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2019-2021, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2019-2022, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "bfab985339d00b64cc987c1d325dff648f939597", "filename": "gcc/ada/bindusg.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindusg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindusg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindusg.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "e48bfd37222c60f8ef13b888112dda80354f17fd", "filename": "gcc/ada/bindusg.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindusg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbindusg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindusg.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "d6e21df97a7e34e01cc2392c0bd8c68d3b16e5c8", "filename": "gcc/ada/butil.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbutil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbutil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbutil.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "4789726786e4d530e92851962dbd84920bb15f2c", "filename": "gcc/ada/butil.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbutil.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fbutil.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbutil.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "e1ab6922b89b588c9f90c7f00f230e4a1383f9ae", "filename": "gcc/ada/cal.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fcal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fcal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcal.c?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2021, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2022, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "1df58779bffa3095c8f048322f3adb0964315f7d", "filename": "gcc/ada/casing.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fcasing.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fcasing.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcasing.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "24e3ef670f806c670b370a014d902dbfc97b8e9d", "filename": "gcc/ada/casing.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fcasing.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fcasing.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcasing.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "e1a1b0cfec1b62b80d7623a5bc87c99e0a7df5b8", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 58, "deletions": 28, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -847,7 +847,7 @@ package body Checks is\n             else\n                Error_Msg_N\n                  (\"\\address value may be incompatible with alignment of \"\n-                  & \"object?X?\", AC);\n+                  & \"object?.x?\", AC);\n             end if;\n          end if;\n \n@@ -1388,6 +1388,8 @@ package body Checks is\n \n          if Nkind (N) = N_Aggregate\n            and then No (Expressions (N))\n+           and then Nkind (First (Component_Associations (N))) =\n+             N_Component_Association\n            and then Nkind\n             (First (Choices (First (Component_Associations (N)))))\n               = N_Others_Choice\n@@ -2171,7 +2173,7 @@ package body Checks is\n          Lo_OK := (Ifirst > 0);\n \n       else\n-         Lo := Machine (Expr_Type, UR_From_Uint (Ifirst), Round_Even, Expr);\n+         Lo := Machine_Number (Expr_Type, UR_From_Uint (Ifirst), Expr);\n          Lo_OK := (Lo >= UR_From_Uint (Ifirst));\n       end if;\n \n@@ -2214,7 +2216,7 @@ package body Checks is\n          Hi := UR_From_Uint (Ilast) + Ureal_Half;\n          Hi_OK := (Ilast < 0);\n       else\n-         Hi := Machine (Expr_Type, UR_From_Uint (Ilast), Round_Even, Expr);\n+         Hi := Machine_Number (Expr_Type, UR_From_Uint (Ilast), Expr);\n          Hi_OK := (Hi <= UR_From_Uint (Ilast));\n       end if;\n \n@@ -3552,9 +3554,12 @@ package body Checks is\n    -- Apply_Subscript_Validity_Checks --\n    -------------------------------------\n \n-   procedure Apply_Subscript_Validity_Checks (Expr : Node_Id) is\n+   procedure Apply_Subscript_Validity_Checks\n+     (Expr            : Node_Id;\n+      No_Check_Needed : Dimension_Set := Empty_Dimension_Set) is\n       Sub : Node_Id;\n \n+      Dimension : Pos := 1;\n    begin\n       pragma Assert (Nkind (Expr) = N_Indexed_Component);\n \n@@ -3568,11 +3573,16 @@ package body Checks is\n          --  for the subscript, and that convert will do the necessary validity\n          --  check.\n \n-         Ensure_Valid (Sub, Holes_OK => True);\n+         if (No_Check_Needed = Empty_Dimension_Set)\n+           or else not No_Check_Needed.Elements (Dimension)\n+         then\n+            Ensure_Valid (Sub, Holes_OK => True);\n+         end if;\n \n          --  Move to next subscript\n \n          Next (Sub);\n+         Dimension := Dimension + 1;\n       end loop;\n    end Apply_Subscript_Validity_Checks;\n \n@@ -4445,8 +4455,8 @@ package body Checks is\n \n             Discard_Node\n               (Compile_Time_Constraint_Error\n-                 (N      => N,\n-                  Msg    =>\n+                 (N   => N,\n+                  Msg =>\n                     \"(Ada 2005) null-excluding component % of object % must \"\n                     & \"be initialized??\",\n                   Ent => Defining_Identifier (Comp)));\n@@ -4457,8 +4467,8 @@ package body Checks is\n          elsif Array_Comp then\n             Discard_Node\n               (Compile_Time_Constraint_Error\n-                 (N      => N,\n-                  Msg    =>\n+                 (N   => N,\n+                  Msg =>\n                     \"(Ada 2005) null-excluding array components must \"\n                     & \"be initialized??\",\n                   Ent => Defining_Identifier (N)));\n@@ -5555,7 +5565,7 @@ package body Checks is\n       --  the results in Lo_Right, Hi_Right, Lo_Left, Hi_Left.\n \n       function Round_Machine (B : Ureal) return Ureal;\n-      --  B is a real bound. Round it using mode Round_Even.\n+      --  B is a real bound. Round it to the nearest machine number.\n \n       -----------------\n       -- OK_Operands --\n@@ -5581,7 +5591,7 @@ package body Checks is\n \n       function Round_Machine (B : Ureal) return Ureal is\n       begin\n-         return Machine (Typ, B, Round_Even, N);\n+         return Machine_Number (Typ, B, N);\n       end Round_Machine;\n \n    --  Start of processing for Determine_Range_R\n@@ -6668,8 +6678,9 @@ package body Checks is\n       elsif not Comes_From_Source (Expr)\n         and then not\n           (Nkind (Expr) = N_Identifier\n-            and then Present (Renamed_Object (Entity (Expr)))\n-            and then Comes_From_Source (Renamed_Object (Entity (Expr))))\n+            and then Present (Renamed_Entity_Or_Object (Entity (Expr)))\n+            and then\n+              Comes_From_Source (Renamed_Entity_Or_Object (Entity (Expr))))\n         and then not Force_Validity_Checks\n         and then (Nkind (Expr) /= N_Unchecked_Type_Conversion\n                     or else Kill_Range_Check (Expr))\n@@ -6892,6 +6903,7 @@ package body Checks is\n       elsif Is_Known_Valid (Typ) then\n          if Is_Entity_Name (Expr)\n            and then Ekind (Entity (Expr)) = E_Variable\n+           and then Known_Esize (Entity (Expr))\n            and then Esize (Entity (Expr)) > Esize (Typ)\n          then\n             return False;\n@@ -7232,7 +7244,10 @@ package body Checks is\n    -- Generate_Index_Checks --\n    ---------------------------\n \n-   procedure Generate_Index_Checks (N : Node_Id) is\n+   procedure Generate_Index_Checks\n+     (N                : Node_Id;\n+      Checks_Generated : out Dimension_Set)\n+   is\n \n       function Entity_Of_Prefix return Entity_Id;\n       --  Returns the entity of the prefix of N (or Empty if not found)\n@@ -7267,6 +7282,8 @@ package body Checks is\n    --  Start of processing for Generate_Index_Checks\n \n    begin\n+      Checks_Generated.Elements := (others => False);\n+\n       --  Ignore call if the prefix is not an array since we have a serious\n       --  error in the sources. Ignore it also if index checks are suppressed\n       --  for array object or type.\n@@ -7329,6 +7346,8 @@ package body Checks is\n                          Prefix         => New_Occurrence_Of (Etype (A), Loc),\n                          Attribute_Name => Name_Range)),\n                 Reason => CE_Index_Check_Failed));\n+\n+            Checks_Generated.Elements (1) := True;\n          end if;\n \n       --  General case\n@@ -7415,6 +7434,8 @@ package body Checks is\n                                Duplicate_Subexpr_Move_Checks (Sub)),\n                            Right_Opnd => Range_N),\n                       Reason => CE_Index_Check_Failed));\n+\n+                  Checks_Generated.Elements (Ind) := True;\n                end if;\n \n                Next_Index (A_Idx);\n@@ -8059,7 +8080,7 @@ package body Checks is\n       Is_High_Bound : Boolean   := False)\n    is\n       Loc : constant Source_Ptr := Sloc (Expr);\n-      Typ : constant Entity_Id  := Etype (Expr);\n+      Typ : Entity_Id           := Etype (Expr);\n       Exp : Node_Id;\n \n    begin\n@@ -8119,6 +8140,7 @@ package body Checks is\n       while Nkind (Exp) = N_Type_Conversion loop\n          Exp := Expression (Exp);\n       end loop;\n+      Typ := Etype (Exp);\n \n       --  Do not generate a check for a variable which already validates the\n       --  value of an assignable object.\n@@ -8199,6 +8221,14 @@ package body Checks is\n                Set_Do_Range_Check (Validated_Object (Var_Id), False);\n             end if;\n \n+            --  In case of a type conversion, an expansion of the expr may be\n+            --  needed (eg. fixed-point as actual).\n+\n+            if Exp /= Expr then\n+               pragma Assert (Nkind (Expr) = N_Type_Conversion);\n+               Analyze_And_Resolve (Expr);\n+            end if;\n+\n             PV := New_Occurrence_Of (Var_Id, Loc);\n \n          --  Otherwise the expression does not denote a variable. Force its\n@@ -9059,7 +9089,7 @@ package body Checks is\n \n       function In_Result_Range return Boolean is\n       begin\n-         if Lo = No_Uint or else Hi = No_Uint then\n+         if No (Lo) or else No (Hi) then\n             return False;\n \n          elsif Is_OK_Static_Subtype (Etype (N)) then\n@@ -9080,7 +9110,7 @@ package body Checks is\n \n       procedure Max (A : in out Uint; B : Uint) is\n       begin\n-         if A = No_Uint or else B > A then\n+         if No (A) or else B > A then\n             A := B;\n          end if;\n       end Max;\n@@ -9091,7 +9121,7 @@ package body Checks is\n \n       procedure Min (A : in out Uint; B : Uint) is\n       begin\n-         if A = No_Uint or else B < A then\n+         if No (A) or else B < A then\n             A := B;\n          end if;\n       end Min;\n@@ -9197,14 +9227,14 @@ package body Checks is\n             Minimize_Eliminate_Overflows\n               (Then_DE, Lo, Hi, Top_Level => False);\n \n-            if Lo = No_Uint then\n+            if No (Lo) then\n                Bignum_Operands := True;\n             end if;\n \n             Minimize_Eliminate_Overflows\n               (Else_DE, Rlo, Rhi, Top_Level => False);\n \n-            if Rlo = No_Uint then\n+            if No (Rlo) then\n                Bignum_Operands := True;\n             else\n                Long_Long_Integer_Operands :=\n@@ -9279,7 +9309,7 @@ package body Checks is\n                   Minimize_Eliminate_Overflows\n                     (Aexp, Lo, Hi, Top_Level => False);\n \n-                  if Lo = No_Uint then\n+                  if No (Lo) then\n                      Bignum_Operands := True;\n                   elsif Etype (Aexp) = LLIB then\n                      Long_Long_Integer_Operands := True;\n@@ -9368,7 +9398,7 @@ package body Checks is\n       --  numbers at compile time for very little gain (the number of cases\n       --  in which we could slip back from bignum mode is small).\n \n-      if Rlo = No_Uint or else (Binary and then Llo = No_Uint) then\n+      if No (Rlo) or else (Binary and then No (Llo)) then\n          Lo := No_Uint;\n          Hi := No_Uint;\n          Bignum_Operands := True;\n@@ -9441,7 +9471,7 @@ package body Checks is\n       --  0 .. 1, but the cases are rare and it is not worth the effort.\n       --  Failing to do this switching back is only an efficiency issue.\n \n-      elsif Lo = No_Uint or else Lo < LLLo or else Hi > LLHi then\n+      elsif No (Lo) or else Lo < LLLo or else Hi > LLHi then\n \n          --  OK, we are definitely outside the range of Long_Long_Integer. The\n          --  question is whether to move to Bignum mode, or stay in the domain\n@@ -10382,7 +10412,7 @@ package body Checks is\n       Exptyp      : Entity_Id;\n       Cond        : Node_Id := Empty;\n       Do_Access   : Boolean := False;\n-      Wnode       : Node_Id  := Warn_Node;\n+      Wnode       : Node_Id := Warn_Node;\n       Ret_Result  : Check_Result := (Empty, Empty);\n       Num_Checks  : Natural := 0;\n \n@@ -10866,8 +10896,8 @@ package body Checks is\n                   Add_Check\n                     (Compile_Time_Constraint_Error\n                        ((if Present (Warn_Node)\n-                        then Warn_Node else Low_Bound (Expr)),\n-                        \"static value does not equal lower bound of}??\",\n+                         then Warn_Node else Low_Bound (Expr)),\n+                         \"static value does not equal lower bound of}??\",\n                         T_Typ));\n                   Check_Added := True;\n                end if;\n@@ -11306,7 +11336,7 @@ package body Checks is\n                     renames Alignment_Warnings.Table (J);\n          begin\n             if Known_Alignment (AWR.E)\n-              and then ((AWR.A /= No_Uint\n+              and then ((Present (AWR.A)\n                           and then AWR.A mod Alignment (AWR.E) = 0)\n                         or else (Present (AWR.P)\n                                   and then Has_Compatible_Alignment"}, {"sha": "48678cd01df83bd9b1f212034d624a7f04324a68", "filename": "gcc/ada/checks.ads", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fchecks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fchecks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -44,6 +44,14 @@ with Urealp; use Urealp;\n \n package Checks is\n \n+   type Bit_Vector is array (Pos range <>) of Boolean;\n+   type Dimension_Set (Dimensions : Nat) is\n+      record\n+         Elements : Bit_Vector (1 .. Dimensions);\n+      end record;\n+   Empty_Dimension_Set : constant Dimension_Set\n+     := (Dimensions => 0, Elements => (others => <>));\n+\n    procedure Initialize;\n    --  Called for each new main source program, to initialize internal\n    --  variables used in the package body of the Checks unit.\n@@ -721,11 +729,16 @@ package Checks is\n    --  Do_Range_Check flag, and if it is set, this routine is called, which\n    --  turns the flag off in code-generation mode.\n \n-   procedure Generate_Index_Checks (N : Node_Id);\n+   procedure Generate_Index_Checks\n+     (N                : Node_Id;\n+      Checks_Generated : out Dimension_Set);\n    --  This procedure is called to generate index checks on the subscripts for\n    --  the indexed component node N. Each subscript expression is examined, and\n    --  if the Do_Range_Check flag is set, an appropriate index check is\n    --  generated and the flag is reset.\n+   --  The out-mode parameter Checks_Generated indicates the dimensions for\n+   --  which checks were generated. Checks_Generated.Dimensions must match\n+   --  the number of dimensions of the array type.\n \n    --  Similarly, we set the flag Do_Discriminant_Check in the semantic\n    --  analysis to indicate that a discriminant check is required for selected\n@@ -858,10 +871,14 @@ package Checks is\n \n    --  The following procedures are used in handling validity checking\n \n-   procedure Apply_Subscript_Validity_Checks (Expr : Node_Id);\n+   procedure Apply_Subscript_Validity_Checks\n+     (Expr            : Node_Id;\n+      No_Check_Needed : Dimension_Set := Empty_Dimension_Set);\n    --  Expr is the node for an indexed component. If validity checking and\n-   --  range checking are enabled, all subscripts for this indexed component\n-   --  are checked for validity.\n+   --  range checking are enabled, each subscript for this indexed component\n+   --  whose dimension does not belong to the No_Check_Needed set is checked\n+   --  for validity. No_Check_Needed.Dimensions must match the number of\n+   --  dimensions of the array type or be zero.\n \n    procedure Check_Valid_Lvalue_Subscripts (Expr : Node_Id);\n    --  Expr is a lvalue, i.e. an expression representing the target of an"}, {"sha": "fa731ca68dd9ecc6dabe399a9a3f70a51d8c9a8c", "filename": "gcc/ada/cio.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fcio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fcio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcio.c?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2021, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2022, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "50a4fb4745e3f559e45c13fd5e3c761e0413fe8d", "filename": "gcc/ada/clean.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -217,7 +217,7 @@ package body Clean is\n \n                if Text /= null then\n                   The_ALI :=\n-                    Scan_ALI (Lib_File, Text, Ignore_ED => False, Err => True);\n+                    Scan_ALI (Lib_File, Text, Err => True);\n                   Free (Text);\n \n                   --  If no error was produced while loading this ALI file,"}, {"sha": "0383c4b9c7326df4bbdd94391b4d94da47779e17", "filename": "gcc/ada/clean.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fclean.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fclean.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fclean.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2003-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "90944ac89aebf4d5691fde96083695f64b365864", "filename": "gcc/ada/comperr.adb", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fcomperr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fcomperr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcomperr.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -424,7 +424,7 @@ package body Comperr is\n       Unit_Name : Node_Id;\n \n       Success : Boolean;\n-      pragma Unreferenced (Success);\n+      pragma Warnings (Off, \"modified by call\");\n \n       procedure Decode_Name_Buffer;\n       --  Replace \"__\" by \".\" in Name_Buffer, and adjust Name_Len accordingly\n@@ -478,6 +478,7 @@ package body Comperr is\n          when N_Package_Declaration\n             | N_Subprogram_Body\n             | N_Subprogram_Declaration\n+            | N_Subprogram_Renaming_Declaration\n          =>\n             Unit_Name := Defining_Unit_Name (Specification (Main));\n \n@@ -489,10 +490,10 @@ package body Comperr is\n          =>\n             Unit_Name := Defining_Unit_Name (Main);\n \n-         --  No SCIL file generated for generic package declarations\n+         --  No SCIL file generated for generic unit declarations\n \n-         when N_Generic_Package_Declaration\n-            | N_Generic_Package_Renaming_Declaration\n+         when N_Generic_Declaration\n+            | N_Generic_Renaming_Declaration\n          =>\n             return;\n "}, {"sha": "d7b2dd1877d13238f380019ab471f89952aa7df1", "filename": "gcc/ada/comperr.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fcomperr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fcomperr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcomperr.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "3cda36aaa39ab3ee4bb48534cf18437f3cc55857", "filename": "gcc/ada/contracts.adb", "status": "modified", "additions": 1497, "deletions": 310, "changes": 1807, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fcontracts.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fcontracts.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2015-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2015-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -47,6 +47,8 @@ with Sem_Ch12;       use Sem_Ch12;\n with Sem_Ch13;       use Sem_Ch13;\n with Sem_Disp;       use Sem_Disp;\n with Sem_Prag;       use Sem_Prag;\n+with Sem_Res;        use Sem_Res;\n+with Sem_Type;       use Sem_Type;\n with Sem_Util;       use Sem_Util;\n with Sinfo;          use Sinfo;\n with Sinfo.Nodes;    use Sinfo.Nodes;\n@@ -66,6 +68,16 @@ package body Contracts is\n    --\n    --    Part_Of\n \n+   procedure Check_Class_Condition\n+     (Cond            : Node_Id;\n+      Subp            : Entity_Id;\n+      Par_Subp        : Entity_Id;\n+      Is_Precondition : Boolean);\n+   --  Perform checking of class-wide pre/postcondition Cond inherited by Subp\n+   --  from Par_Subp. Is_Precondition enables check specific for preconditions.\n+   --  In SPARK_Mode, an inherited operation that is not overridden but has\n+   --  inherited modified conditions pre/postconditions is illegal.\n+\n    procedure Check_Type_Or_Object_External_Properties\n      (Type_Or_Obj_Id : Entity_Id);\n    --  Perform checking of external properties pragmas that is common to both\n@@ -77,6 +89,12 @@ package body Contracts is\n    --  well as Contract_Cases, Subprogram_Variant, invariants and predicates.\n    --  Body_Id denotes the entity of the subprogram body.\n \n+   procedure Set_Class_Condition\n+     (Kind : Condition_Kind;\n+      Subp : Entity_Id;\n+      Cond : Node_Id);\n+   --  Set the class-wide Kind condition of Subp\n+\n    -----------------------\n    -- Add_Contract_Item --\n    -----------------------\n@@ -144,7 +162,13 @@ package body Contracts is\n       --    Part_Of\n \n       if Ekind (Id) = E_Constant then\n-         if Prag_Nam = Name_Part_Of then\n+         if Prag_Nam in Name_Async_Readers\n+                      | Name_Async_Writers\n+                      | Name_Effective_Reads\n+                      | Name_Effective_Writes\n+                      | Name_No_Caching\n+                      | Name_Part_Of\n+         then\n             Add_Classification;\n \n          --  The pragma is not a proper contract item\n@@ -380,23 +404,7 @@ package body Contracts is\n                           | N_Generic_Subprogram_Declaration\n                           | N_Subprogram_Declaration\n          then\n-            declare\n-               Subp_Id : constant Entity_Id := Defining_Entity (Decl);\n-\n-            begin\n-               Analyze_Entry_Or_Subprogram_Contract (Subp_Id);\n-\n-               --  If analysis of a class-wide pre/postcondition indicates\n-               --  that a class-wide clone is needed, analyze its declaration\n-               --  now. Its body is created when the body of the original\n-               --  operation is analyzed (and rewritten).\n-\n-               if Is_Subprogram (Subp_Id)\n-                 and then Present (Class_Wide_Clone (Subp_Id))\n-               then\n-                  Analyze (Unit_Declaration_Node (Class_Wide_Clone (Subp_Id)));\n-               end if;\n-            end;\n+            Analyze_Entry_Or_Subprogram_Contract (Defining_Entity (Decl));\n \n          --  Entry or subprogram bodies\n \n@@ -778,25 +786,9 @@ package body Contracts is\n    procedure Check_Type_Or_Object_External_Properties\n      (Type_Or_Obj_Id : Entity_Id)\n    is\n-      function Decl_Kind (Is_Type     : Boolean;\n-                          Object_Kind : String) return String;\n-      --  Returns \"type\" or Object_Kind, depending on Is_Type\n-\n-      ---------------\n-      -- Decl_Kind --\n-      ---------------\n-\n-      function Decl_Kind (Is_Type     : Boolean;\n-                          Object_Kind : String) return String is\n-      begin\n-         if Is_Type then\n-            return \"type\";\n-         else\n-            return Object_Kind;\n-         end if;\n-      end Decl_Kind;\n-\n       Is_Type_Id : constant Boolean := Is_Type (Type_Or_Obj_Id);\n+      Decl_Kind  : constant String :=\n+        (if Is_Type_Id then \"type\" else \"object\");\n \n       --  Local variables\n \n@@ -923,8 +915,7 @@ package body Contracts is\n             if not Is_Library_Level_Entity (Type_Or_Obj_Id) then\n                Error_Msg_N\n                  (\"effectively volatile \"\n-                    & Decl_Kind (Is_Type     => Is_Type_Id,\n-                                 Object_Kind => \"variable\")\n+                    & Decl_Kind\n                     & \" & must be declared at library level \"\n                     & \"(SPARK RM 7.1.3(3))\", Type_Or_Obj_Id);\n \n@@ -935,10 +926,7 @@ package body Contracts is\n               and then not Is_Protected_Type (Obj_Typ)\n             then\n                Error_Msg_N\n-                (\"discriminated \"\n-                   & Decl_Kind (Is_Type     => Is_Type_Id,\n-                                Object_Kind => \"object\")\n-                   & \" & cannot be volatile\",\n+                (\"discriminated \" & Decl_Kind & \" & cannot be volatile\",\n                  Type_Or_Obj_Id);\n             end if;\n \n@@ -1019,7 +1007,7 @@ package body Contracts is\n       Saved_SMP : constant Node_Id         := SPARK_Mode_Pragma;\n       --  Save the SPARK_Mode-related data to restore on exit\n \n-      NC_Val   : Boolean := False;\n+      NC_Val   : Boolean;\n       Items    : Node_Id;\n       Prag     : Node_Id;\n       Ref_Elmt : Elmt_Id;\n@@ -1056,6 +1044,19 @@ package body Contracts is\n          Set_SPARK_Mode (Obj_Id);\n       end if;\n \n+      --  Checks related to external properties, same for constants and\n+      --  variables.\n+\n+      Check_Type_Or_Object_External_Properties (Type_Or_Obj_Id => Obj_Id);\n+\n+      --  Analyze the non-external volatility property No_Caching\n+\n+      Prag := Get_Pragma (Obj_Id, Pragma_No_Caching);\n+\n+      if Present (Prag) then\n+         Analyze_External_Property_In_Decl_Part (Prag, NC_Val);\n+      end if;\n+\n       --  Constant-related checks\n \n       if Ekind (Obj_Id) = E_Constant then\n@@ -1071,35 +1072,10 @@ package body Contracts is\n             Check_Missing_Part_Of (Obj_Id);\n          end if;\n \n-         --  A constant cannot be effectively volatile (SPARK RM 7.1.3(4)).\n-         --  This check is relevant only when SPARK_Mode is on, as it is not\n-         --  a standard Ada legality rule. Internally-generated constants that\n-         --  map generic formals to actuals in instantiations are allowed to\n-         --  be volatile.\n-\n-         if SPARK_Mode = On\n-           and then Comes_From_Source (Obj_Id)\n-           and then Is_Effectively_Volatile (Obj_Id)\n-           and then No (Corresponding_Generic_Association (Parent (Obj_Id)))\n-         then\n-            Error_Msg_N (\"constant cannot be volatile\", Obj_Id);\n-         end if;\n-\n       --  Variable-related checks\n \n       else pragma Assert (Ekind (Obj_Id) = E_Variable);\n \n-         Check_Type_Or_Object_External_Properties\n-           (Type_Or_Obj_Id => Obj_Id);\n-\n-         --  Analyze the non-external volatility property No_Caching\n-\n-         Prag := Get_Pragma (Obj_Id, Pragma_No_Caching);\n-\n-         if Present (Prag) then\n-            Analyze_External_Property_In_Decl_Part (Prag, NC_Val);\n-         end if;\n-\n          --  The anonymous object created for a single task type carries\n          --  pragmas Depends and Global of the type.\n \n@@ -1517,6 +1493,141 @@ package body Contracts is\n         (Type_Or_Obj_Id => Type_Id);\n    end Analyze_Type_Contract;\n \n+   ---------------------------\n+   -- Check_Class_Condition --\n+   ---------------------------\n+\n+   procedure Check_Class_Condition\n+     (Cond            : Node_Id;\n+      Subp            : Entity_Id;\n+      Par_Subp        : Entity_Id;\n+      Is_Precondition : Boolean)\n+   is\n+      function Check_Entity (N : Node_Id) return Traverse_Result;\n+      --  Check reference to formal of inherited operation or to primitive\n+      --  operation of root type.\n+\n+      ------------------\n+      -- Check_Entity --\n+      ------------------\n+\n+      function Check_Entity (N : Node_Id) return Traverse_Result is\n+         New_E  : Entity_Id;\n+         Orig_E : Entity_Id;\n+\n+      begin\n+         if Nkind (N) = N_Identifier\n+           and then Present (Entity (N))\n+           and then\n+             (Is_Formal (Entity (N)) or else Is_Subprogram (Entity (N)))\n+           and then\n+             (Nkind (Parent (N)) /= N_Attribute_Reference\n+               or else Attribute_Name (Parent (N)) /= Name_Class)\n+         then\n+            --  These checks do not apply to dispatching calls within the\n+            --  condition, but only to calls whose static tag is that of\n+            --  the parent type.\n+\n+            if Is_Subprogram (Entity (N))\n+              and then Nkind (Parent (N)) = N_Function_Call\n+              and then Present (Controlling_Argument (Parent (N)))\n+            then\n+               return OK;\n+            end if;\n+\n+            --  Determine whether entity has a renaming\n+\n+            Orig_E := Entity (N);\n+            New_E  := Get_Mapped_Entity (Orig_E);\n+\n+            if Present (New_E) then\n+\n+               --  AI12-0166: A precondition for a protected operation\n+               --  cannot include an internal call to a protected function\n+               --  of the type. In the case of an inherited condition for an\n+               --  overriding operation, both the operation and the function\n+               --  are given by primitive wrappers.\n+\n+               if Is_Precondition\n+                 and then Ekind (New_E) = E_Function\n+                 and then Is_Primitive_Wrapper (New_E)\n+                 and then Is_Primitive_Wrapper (Subp)\n+                 and then Scope (Subp) = Scope (New_E)\n+               then\n+                  Error_Msg_Node_2 := Wrapped_Entity (Subp);\n+                  Error_Msg_NE\n+                    (\"internal call to& cannot appear in inherited \"\n+                     & \"precondition of protected operation&\",\n+                     Subp, Wrapped_Entity (New_E));\n+               end if;\n+            end if;\n+\n+            --  Check that there are no calls left to abstract operations if\n+            --  the current subprogram is not abstract.\n+\n+            if Present (New_E)\n+              and then Nkind (Parent (N)) = N_Function_Call\n+              and then N = Name (Parent (N))\n+            then\n+               if not Is_Abstract_Subprogram (Subp)\n+                 and then Is_Abstract_Subprogram (New_E)\n+               then\n+                  Error_Msg_Sloc   := Sloc (Current_Scope);\n+                  Error_Msg_Node_2 := Subp;\n+\n+                  if Comes_From_Source (Subp) then\n+                     Error_Msg_NE\n+                       (\"cannot call abstract subprogram & in inherited \"\n+                        & \"condition for&#\", Subp, New_E);\n+                  else\n+                     Error_Msg_NE\n+                       (\"cannot call abstract subprogram & in inherited \"\n+                        & \"condition for inherited&#\", Subp, New_E);\n+                  end if;\n+\n+               --  In SPARK mode, report error on inherited condition for an\n+               --  inherited operation if it contains a call to an overriding\n+               --  operation, because this implies that the pre/postconditions\n+               --  of the inherited operation have changed silently.\n+\n+               elsif SPARK_Mode = On\n+                 and then Warn_On_Suspicious_Contract\n+                 and then Present (Alias (Subp))\n+                 and then Present (New_E)\n+                 and then Comes_From_Source (New_E)\n+               then\n+                  Error_Msg_N\n+                    (\"cannot modify inherited condition (SPARK RM 6.1.1(1))\",\n+                     Parent (Subp));\n+                  Error_Msg_Sloc   := Sloc (New_E);\n+                  Error_Msg_Node_2 := Subp;\n+                  Error_Msg_NE\n+                    (\"\\overriding of&# forces overriding of&\",\n+                     Parent (Subp), New_E);\n+               end if;\n+            end if;\n+         end if;\n+\n+         return OK;\n+      end Check_Entity;\n+\n+      procedure Check_Condition_Entities is\n+        new Traverse_Proc (Check_Entity);\n+\n+   --  Start of processing for Check_Class_Condition\n+\n+   begin\n+      --  No check required if the subprograms match\n+\n+      if Par_Subp = Subp then\n+         return;\n+      end if;\n+\n+      Update_Primitives_Mapping (Par_Subp, Subp);\n+      Map_Formals (Par_Subp, Subp);\n+      Check_Condition_Entities (Cond);\n+   end Check_Class_Condition;\n+\n    -----------------------------\n    -- Create_Generic_Contract --\n    -----------------------------\n@@ -1926,7 +2037,7 @@ package body Contracts is\n       procedure Add_Stable_Property_Contracts\n         (Subp_Id : Entity_Id; Class_Present : Boolean)\n       is\n-         Loc         : constant Source_Ptr := Sloc (Subp_Id);\n+         Loc : constant Source_Ptr := Sloc (Subp_Id);\n \n          procedure Insert_Stable_Property_Check\n            (Formal : Entity_Id; Property_Function : Entity_Id);\n@@ -2578,13 +2689,38 @@ package body Contracts is\n          ---------------------------------\n \n          procedure Process_Spec_Postconditions is\n-            Subps   : constant Subprogram_List :=\n-                        Inherited_Subprograms (Spec_Id);\n+            Subps : constant Subprogram_List :=\n+                      Inherited_Subprograms (Spec_Id);\n+            Seen  : Subprogram_List (Subps'Range) := (others => Empty);\n+\n+            function Seen_Subp (Subp_Id : Entity_Id) return Boolean;\n+            --  Return True if the contract of subprogram Subp_Id has been\n+            --  processed.\n+\n+            ---------------\n+            -- Seen_Subp --\n+            ---------------\n+\n+            function Seen_Subp (Subp_Id : Entity_Id) return Boolean is\n+            begin\n+               for Index in Seen'Range loop\n+                  if Seen (Index) = Subp_Id then\n+                     return True;\n+                  end if;\n+               end loop;\n+\n+               return False;\n+            end Seen_Subp;\n+\n+            --  Local variables\n+\n             Item    : Node_Id;\n             Items   : Node_Id;\n             Prag    : Node_Id;\n             Subp_Id : Entity_Id;\n \n+         --  Start of processing for Process_Spec_Postconditions\n+\n          begin\n             --  Process the contract\n \n@@ -2615,7 +2751,7 @@ package body Contracts is\n                   Subp_Id := Ultimate_Alias (Subp_Id);\n                end if;\n \n-               --  Wrappers of class-wide pre/post conditions reference the\n+               --  Wrappers of class-wide pre/postconditions reference the\n                --  parent primitive that has the inherited contract.\n \n                if Is_Wrapper (Subp_Id)\n@@ -2626,7 +2762,9 @@ package body Contracts is\n \n                Items := Contract (Subp_Id);\n \n-               if Present (Items) then\n+               if not Seen_Subp (Subp_Id) and then Present (Items) then\n+                  Seen (Index) := Subp_Id;\n+\n                   Prag := Pre_Post_Conditions (Items);\n                   while Present (Prag) loop\n                      if Pragma_Name (Prag) = Name_Postcondition\n@@ -2683,10 +2821,6 @@ package body Contracts is\n       ---------------------------\n \n       procedure Process_Preconditions is\n-         Class_Pre : Node_Id := Empty;\n-         --  The sole [inherited] class-wide precondition pragma that applies\n-         --  to the subprogram.\n-\n          Insert_Node : Node_Id := Empty;\n          --  The insertion node after which all pragma Check equivalents are\n          --  inserted.\n@@ -2695,21 +2829,12 @@ package body Contracts is\n          --  Determine whether arbitrary declaration Decl denotes a renaming of\n          --  a discriminant or protection field _object.\n \n-         procedure Merge_Preconditions (From : Node_Id; Into : Node_Id);\n-         --  Merge two class-wide preconditions by \"or else\"-ing them. The\n-         --  changes are accumulated in parameter Into. Update the error\n-         --  message of Into.\n-\n          procedure Prepend_To_Decls (Item : Node_Id);\n          --  Prepend a single item to the declarations of the subprogram body\n \n-         procedure Prepend_To_Decls_Or_Save (Prag : Node_Id);\n-         --  Save a class-wide precondition into Class_Pre, or prepend a normal\n-         --  precondition to the declarations of the body and analyze it.\n-\n-         procedure Process_Inherited_Preconditions;\n-         --  Collect all inherited class-wide preconditions and merge them into\n-         --  one big precondition to be evaluated as pragma Check.\n+         procedure Prepend_Pragma_To_Decls (Prag : Node_Id);\n+         --  Prepend a normal precondition to the declarations of the body and\n+         --  analyze it.\n \n          procedure Process_Preconditions_For (Subp_Id : Entity_Id);\n          --  Collect all preconditions of subprogram Subp_Id and prepend their\n@@ -2763,78 +2888,6 @@ package body Contracts is\n             return False;\n          end Is_Prologue_Renaming;\n \n-         -------------------------\n-         -- Merge_Preconditions --\n-         -------------------------\n-\n-         procedure Merge_Preconditions (From : Node_Id; Into : Node_Id) is\n-            function Expression_Arg (Prag : Node_Id) return Node_Id;\n-            --  Return the boolean expression argument of a precondition while\n-            --  updating its parentheses count for the subsequent merge.\n-\n-            function Message_Arg (Prag : Node_Id) return Node_Id;\n-            --  Return the message argument of a precondition\n-\n-            --------------------\n-            -- Expression_Arg --\n-            --------------------\n-\n-            function Expression_Arg (Prag : Node_Id) return Node_Id is\n-               Args : constant List_Id := Pragma_Argument_Associations (Prag);\n-               Arg  : constant Node_Id := Get_Pragma_Arg (Next (First (Args)));\n-\n-            begin\n-               if Paren_Count (Arg) = 0 then\n-                  Set_Paren_Count (Arg, 1);\n-               end if;\n-\n-               return Arg;\n-            end Expression_Arg;\n-\n-            -----------------\n-            -- Message_Arg --\n-            -----------------\n-\n-            function Message_Arg (Prag : Node_Id) return Node_Id is\n-               Args : constant List_Id := Pragma_Argument_Associations (Prag);\n-            begin\n-               return Get_Pragma_Arg (Last (Args));\n-            end Message_Arg;\n-\n-            --  Local variables\n-\n-            From_Expr : constant Node_Id := Expression_Arg (From);\n-            From_Msg  : constant Node_Id := Message_Arg    (From);\n-            Into_Expr : constant Node_Id := Expression_Arg (Into);\n-            Into_Msg  : constant Node_Id := Message_Arg    (Into);\n-            Loc       : constant Source_Ptr := Sloc (Into);\n-\n-         --  Start of processing for Merge_Preconditions\n-\n-         begin\n-            --  Merge the two preconditions by \"or else\"-ing them\n-\n-            Rewrite (Into_Expr,\n-              Make_Or_Else (Loc,\n-                Right_Opnd => Relocate_Node (Into_Expr),\n-                Left_Opnd  => From_Expr));\n-\n-            --  Merge the two error messages to produce a single message of the\n-            --  form:\n-\n-            --    failed precondition from ...\n-            --      also failed inherited precondition from ...\n-\n-            if not Exception_Locations_Suppressed then\n-               Start_String (Strval (Into_Msg));\n-               Store_String_Char (ASCII.LF);\n-               Store_String_Chars (\"  also \");\n-               Store_String_Chars (Strval (From_Msg));\n-\n-               Set_Strval (Into_Msg, End_String);\n-            end if;\n-         end Merge_Preconditions;\n-\n          ----------------------\n          -- Prepend_To_Decls --\n          ----------------------\n@@ -2855,28 +2908,27 @@ package body Contracts is\n             Prepend_To (Decls, Item);\n          end Prepend_To_Decls;\n \n-         ------------------------------\n-         -- Prepend_To_Decls_Or_Save --\n-         ------------------------------\n+         -----------------------------\n+         -- Prepend_Pragma_To_Decls --\n+         -----------------------------\n \n-         procedure Prepend_To_Decls_Or_Save (Prag : Node_Id) is\n+         procedure Prepend_Pragma_To_Decls (Prag : Node_Id) is\n             Check_Prag : Node_Id;\n \n          begin\n-            Check_Prag := Build_Pragma_Check_Equivalent (Prag);\n-\n-            --  Save the sole class-wide precondition (if any) for the next\n-            --  step, where it will be merged with inherited preconditions.\n+            --  Skip the sole class-wide precondition (if any) since it is\n+            --  processed by Merge_Class_Conditions.\n \n             if Class_Present (Prag) then\n-               pragma Assert (No (Class_Pre));\n-               Class_Pre := Check_Prag;\n+               null;\n \n             --  Accumulate the corresponding Check pragmas at the top of the\n             --  declarations. Prepending the items ensures that they will be\n             --  evaluated in their original order.\n \n             else\n+               Check_Prag := Build_Pragma_Check_Equivalent (Prag);\n+\n                if Present (Insert_Node) then\n                   Insert_After (Insert_Node, Check_Prag);\n                else\n@@ -2885,87 +2937,7 @@ package body Contracts is\n \n                Analyze (Check_Prag);\n             end if;\n-         end Prepend_To_Decls_Or_Save;\n-\n-         -------------------------------------\n-         -- Process_Inherited_Preconditions --\n-         -------------------------------------\n-\n-         procedure Process_Inherited_Preconditions is\n-            Subps : constant Subprogram_List :=\n-                      Inherited_Subprograms (Spec_Id);\n-\n-            Item    : Node_Id;\n-            Items   : Node_Id;\n-            Prag    : Node_Id;\n-            Subp_Id : Entity_Id;\n-\n-         begin\n-            --  Process the contracts of all inherited subprograms, looking for\n-            --  class-wide preconditions.\n-\n-            for Index in Subps'Range loop\n-               Subp_Id := Subps (Index);\n-\n-               if Present (Alias (Subp_Id)) then\n-                  Subp_Id := Ultimate_Alias (Subp_Id);\n-               end if;\n-\n-               --  Wrappers of class-wide pre/post conditions reference the\n-               --  parent primitive that has the inherited contract.\n-\n-               if Is_Wrapper (Subp_Id)\n-                 and then Present (LSP_Subprogram (Subp_Id))\n-               then\n-                  Subp_Id := LSP_Subprogram (Subp_Id);\n-               end if;\n-\n-               Items := Contract (Subp_Id);\n-\n-               if Present (Items) then\n-                  Prag := Pre_Post_Conditions (Items);\n-                  while Present (Prag) loop\n-                     if Pragma_Name (Prag) = Name_Precondition\n-                       and then Class_Present (Prag)\n-                     then\n-                        Item :=\n-                          Build_Pragma_Check_Equivalent\n-                            (Prag     => Prag,\n-                             Subp_Id  => Spec_Id,\n-                             Inher_Id => Subp_Id);\n-\n-                        --  The pragma Check equivalent of the class-wide\n-                        --  precondition is still created even though the\n-                        --  pragma may be ignored because the equivalent\n-                        --  performs semantic checks.\n-\n-                        if Is_Checked (Prag) then\n-\n-                           --  The spec of an inherited subprogram already\n-                           --  yielded a class-wide precondition. Merge the\n-                           --  existing precondition with the current one\n-                           --  using \"or else\".\n-\n-                           if Present (Class_Pre) then\n-                              Merge_Preconditions (Item, Class_Pre);\n-                           else\n-                              Class_Pre := Item;\n-                           end if;\n-                        end if;\n-                     end if;\n-\n-                     Prag := Next_Pragma (Prag);\n-                  end loop;\n-               end if;\n-            end loop;\n-\n-            --  Add the merged class-wide preconditions\n-\n-            if Present (Class_Pre) then\n-               Prepend_To_Decls (Class_Pre);\n-               Analyze (Class_Pre);\n-            end if;\n-         end Process_Inherited_Preconditions;\n+         end Prepend_Pragma_To_Decls;\n \n          -------------------------------\n          -- Process_Preconditions_For --\n@@ -3009,7 +2981,7 @@ package body Contracts is\n                            N      => Body_Decl);\n                      end if;\n \n-                     Prepend_To_Decls_Or_Save (Prag);\n+                     Prepend_Pragma_To_Decls (Prag);\n                   end if;\n \n                   Prag := Next_Pragma (Prag);\n@@ -3034,7 +3006,7 @@ package body Contracts is\n                      if Pragma_Name (Decl) = Name_Precondition\n                        and then Is_Checked (Decl)\n                      then\n-                        Prepend_To_Decls_Or_Save (Decl);\n+                        Prepend_Pragma_To_Decls (Decl);\n                      end if;\n \n                   --  Skip internally generated code\n@@ -3099,22 +3071,21 @@ package body Contracts is\n \n                Next (Decl);\n             end loop;\n-         end if;\n \n-         --  The processing of preconditions is done in reverse order (body\n-         --  first), because each pragma Check equivalent is inserted at the\n-         --  top of the declarations. This ensures that the final order is\n-         --  consistent with following diagram:\n+            --  The processing of preconditions is done in reverse order (body\n+            --  first), because each pragma Check equivalent is inserted at the\n+            --  top of the declarations. This ensures that the final order is\n+            --  consistent with following diagram:\n \n-         --    <inherited preconditions>\n-         --    <preconditions from spec>\n-         --    <preconditions from body>\n+            --    <inherited preconditions>\n+            --    <preconditions from spec>\n+            --    <preconditions from body>\n \n-         Process_Preconditions_For (Body_Id);\n+            Process_Preconditions_For (Body_Id);\n+         end if;\n \n          if Present (Spec_Id) then\n             Process_Preconditions_For (Spec_Id);\n-            Process_Inherited_Preconditions;\n          end if;\n       end Process_Preconditions;\n \n@@ -3165,6 +3136,12 @@ package body Contracts is\n       elsif Is_Ignored_Ghost_Entity (Subp_Id) then\n          return;\n \n+      --  No action needed for helpers and indirect-call wrapper built to\n+      --  support class-wide preconditions.\n+\n+      elsif Present (Class_Preconditions_Subprogram (Subp_Id)) then\n+         return;\n+\n       --  Do not re-expand the same contract. This scenario occurs when a\n       --  construct is rewritten into something else during its analysis\n       --  (expression functions for instance).\n@@ -3466,7 +3443,7 @@ package body Contracts is\n    -- Get_Postcond_Enabled --\n    --------------------------\n \n-   function Get_Postcond_Enabled (Subp : Entity_Id) return Node_Id is\n+   function Get_Postcond_Enabled (Subp : Entity_Id) return Entity_Id is\n       Decl : Node_Id;\n    begin\n       Decl :=\n@@ -3491,7 +3468,7 @@ package body Contracts is\n    ------------------------------------\n \n    function Get_Result_Object_For_Postcond\n-     (Subp : Entity_Id) return Node_Id\n+     (Subp : Entity_Id) return Entity_Id\n    is\n       Decl : Node_Id;\n    begin\n@@ -3516,7 +3493,7 @@ package body Contracts is\n    -- Get_Return_Success_For_Postcond --\n    -------------------------------------\n \n-   function Get_Return_Success_For_Postcond (Subp : Entity_Id) return Node_Id\n+   function Get_Return_Success_For_Postcond (Subp : Entity_Id) return Entity_Id\n    is\n       Decl : Node_Id;\n    begin\n@@ -3631,61 +3608,1271 @@ package body Contracts is\n       end if;\n    end Instantiate_Subprogram_Contract;\n \n-   ----------------------------------------\n-   -- Save_Global_References_In_Contract --\n-   ----------------------------------------\n+   -----------------------------------\n+   -- Make_Class_Precondition_Subps --\n+   -----------------------------------\n \n-   procedure Save_Global_References_In_Contract\n-     (Templ  : Node_Id;\n-      Gen_Id : Entity_Id)\n+   procedure Make_Class_Precondition_Subps\n+     (Subp_Id         : Entity_Id;\n+      Late_Overriding : Boolean := False)\n    is\n-      procedure Save_Global_References_In_List (First_Prag : Node_Id);\n-      --  Save all global references in contract-related source pragmas found\n-      --  in the list, starting with pragma First_Prag.\n+      Loc         : constant Source_Ptr := Sloc (Subp_Id);\n+      Tagged_Type : constant Entity_Id := Find_Dispatching_Type (Subp_Id);\n \n-      ------------------------------------\n-      -- Save_Global_References_In_List --\n-      ------------------------------------\n+      procedure Add_Indirect_Call_Wrapper;\n+      --  Build the indirect-call wrapper and append it to the freezing actions\n+      --  of Tagged_Type.\n \n-      procedure Save_Global_References_In_List (First_Prag : Node_Id) is\n-         Prag : Node_Id;\n+      procedure Add_Call_Helper\n+        (Helper_Id  : Entity_Id;\n+         Is_Dynamic : Boolean);\n+      --  Factorizes code for building a call helper with the given identifier\n+      --  and append it to the freezing actions of Tagged_Type. Is_Dynamic\n+      --  controls building the static or dynamic version of the helper.\n \n-      begin\n-         Prag := First_Prag;\n-         while Present (Prag) loop\n-            if Is_Generic_Contract_Pragma (Prag) then\n-               Save_Global_References (Prag);\n-            end if;\n+      -------------------------------\n+      -- Add_Indirect_Call_Wrapper --\n+      -------------------------------\n \n-            Prag := Next_Pragma (Prag);\n-         end loop;\n-      end Save_Global_References_In_List;\n+      procedure Add_Indirect_Call_Wrapper is\n \n-      --  Local variables\n+         function Build_ICW_Body return Node_Id;\n+         --  Build the body of the indirect call wrapper\n \n-      Items : constant Node_Id := Contract (Defining_Entity (Templ));\n+         function Build_ICW_Decl return Node_Id;\n+         --  Build the declaration of the indirect call wrapper\n \n-   --  Start of processing for Save_Global_References_In_Contract\n+         --------------------\n+         -- Build_ICW_Body --\n+         --------------------\n \n-   begin\n-      --  The entity of the analyzed generic copy must be on the scope stack\n-      --  to ensure proper detection of global references.\n+         function Build_ICW_Body return Node_Id is\n+            ICW_Id    : constant Entity_Id := Indirect_Call_Wrapper (Subp_Id);\n+            Spec      : constant Node_Id   := Parent (ICW_Id);\n+            Body_Spec : Node_Id;\n+            Call      : Node_Id;\n+            ICW_Body  : Node_Id;\n \n-      Push_Scope (Gen_Id);\n+         begin\n+            Body_Spec := Copy_Subprogram_Spec (Spec);\n \n-      if Permits_Aspect_Specifications (Templ)\n-        and then Has_Aspects (Templ)\n-      then\n-         Save_Global_References_In_Aspects (Templ);\n-      end if;\n+            --  Build call to wrapped subprogram\n \n-      if Present (Items) then\n-         Save_Global_References_In_List (Pre_Post_Conditions (Items));\n-         Save_Global_References_In_List (Contract_Test_Cases (Items));\n-         Save_Global_References_In_List (Classifications     (Items));\n-      end if;\n+            declare\n+               Actuals     : constant List_Id := Empty_List;\n+               Formal_Spec : Entity_Id :=\n+                               First (Parameter_Specifications (Spec));\n+            begin\n+               --  Build parameter association & call\n \n-      Pop_Scope;\n-   end Save_Global_References_In_Contract;\n+               while Present (Formal_Spec) loop\n+                  Append_To (Actuals,\n+                    New_Occurrence_Of\n+                      (Defining_Identifier (Formal_Spec), Loc));\n+                  Next (Formal_Spec);\n+               end loop;\n+\n+               if Ekind (ICW_Id) = E_Procedure then\n+                  Call :=\n+                    Make_Procedure_Call_Statement (Loc,\n+                      Name => New_Occurrence_Of (Subp_Id, Loc),\n+                      Parameter_Associations => Actuals);\n+               else\n+                  Call :=\n+                    Make_Simple_Return_Statement (Loc,\n+                      Expression =>\n+                        Make_Function_Call (Loc,\n+                          Name => New_Occurrence_Of (Subp_Id, Loc),\n+                          Parameter_Associations => Actuals));\n+               end if;\n+            end;\n+\n+            ICW_Body :=\n+              Make_Subprogram_Body (Loc,\n+                Specification              => Body_Spec,\n+                Declarations               => New_List,\n+                Handled_Statement_Sequence =>\n+                  Make_Handled_Sequence_Of_Statements (Loc,\n+                    Statements => New_List (Call)));\n+\n+            --  The new operation is internal and overriding indicators do not\n+            --  apply.\n+\n+            Set_Must_Override (Body_Spec, False);\n+\n+            return ICW_Body;\n+         end Build_ICW_Body;\n+\n+         --------------------\n+         -- Build_ICW_Decl --\n+         --------------------\n+\n+         function Build_ICW_Decl return Node_Id is\n+            ICW_Id : constant Entity_Id  :=\n+                       Make_Defining_Identifier (Loc,\n+                         New_External_Name (Chars (Subp_Id),\n+                           Suffix       => \"ICW\",\n+                           Suffix_Index => Source_Offset (Loc)));\n+            Decl   : Node_Id;\n+            Spec   : Node_Id;\n+\n+         begin\n+            Spec := Copy_Subprogram_Spec (Parent (Subp_Id));\n+            Set_Must_Override      (Spec, False);\n+            Set_Must_Not_Override  (Spec, False);\n+            Set_Defining_Unit_Name (Spec, ICW_Id);\n+            Mutate_Ekind  (ICW_Id, Ekind (Subp_Id));\n+            Set_Is_Public (ICW_Id);\n+\n+            --  The indirect call wrapper is commonly used for indirect calls\n+            --  but inlined for direct calls performed from the DTW.\n+\n+            Set_Is_Inlined (ICW_Id);\n+\n+            if Nkind (Spec) = N_Procedure_Specification then\n+               Set_Null_Present (Spec, False);\n+            end if;\n+\n+            Decl := Make_Subprogram_Declaration (Loc, Spec);\n+\n+            --  Link original subprogram to indirect wrapper and vice versa\n+\n+            Set_Indirect_Call_Wrapper (Subp_Id, ICW_Id);\n+            Set_Class_Preconditions_Subprogram (ICW_Id, Subp_Id);\n+\n+            --  Inherit debug info flag to allow debugging the wrapper\n+\n+            if Needs_Debug_Info (Subp_Id) then\n+               Set_Debug_Info_Needed (ICW_Id);\n+            end if;\n+\n+            return Decl;\n+         end Build_ICW_Decl;\n+\n+         --  Local Variables\n+\n+         ICW_Body : Node_Id;\n+         ICW_Decl : Node_Id;\n+\n+      --  Start of processing for Add_Indirect_Call_Wrapper\n+\n+      begin\n+         pragma Assert (No (Indirect_Call_Wrapper (Subp_Id)));\n+\n+         ICW_Decl := Build_ICW_Decl;\n+\n+         Append_Freeze_Action (Tagged_Type, ICW_Decl);\n+         Analyze (ICW_Decl);\n+\n+         ICW_Body := Build_ICW_Body;\n+         Append_Freeze_Action (Tagged_Type, ICW_Body);\n+\n+         --  We cannot defer the analysis of this ICW wrapper when it is\n+         --  built as a consequence of building its partner DTW wrapper\n+         --  at the freezing point of the tagged type.\n+\n+         if Is_Dispatch_Table_Wrapper (Subp_Id) then\n+            Analyze (ICW_Body);\n+         end if;\n+      end Add_Indirect_Call_Wrapper;\n+\n+      ---------------------\n+      -- Add_Call_Helper --\n+      ---------------------\n+\n+      procedure Add_Call_Helper\n+        (Helper_Id  : Entity_Id;\n+         Is_Dynamic : Boolean)\n+      is\n+         function Build_Call_Helper_Body return Node_Id;\n+         --  Build the body of a call helper\n+\n+         function Build_Call_Helper_Decl return Node_Id;\n+         --  Build the declaration of a call helper\n+\n+         function Build_Call_Helper_Spec (Spec_Id : Entity_Id) return Node_Id;\n+         --  Build the specification of the helper\n+\n+         ----------------------------\n+         -- Build_Call_Helper_Body --\n+         ----------------------------\n+\n+         function Build_Call_Helper_Body return Node_Id is\n+\n+            function Copy_And_Update_References\n+              (Expr : Node_Id) return Node_Id;\n+            --  Copy Expr updating references to formals of Helper_Id; update\n+            --  also references to loop identifiers of quantified expressions.\n+\n+            --------------------------------\n+            -- Copy_And_Update_References --\n+            --------------------------------\n+\n+            function Copy_And_Update_References\n+              (Expr : Node_Id) return Node_Id\n+            is\n+               Assoc_List : constant Elist_Id := New_Elmt_List;\n+\n+               procedure Map_Quantified_Expression_Loop_Identifiers;\n+               --  Traverse Expr and append to Assoc_List the mapping of loop\n+               --  identifers of quantified expressions with its new copy.\n+\n+               ------------------------------------------------\n+               -- Map_Quantified_Expression_Loop_Identifiers --\n+               ------------------------------------------------\n+\n+               procedure Map_Quantified_Expression_Loop_Identifiers is\n+                  function Map_Loop_Param (N : Node_Id) return Traverse_Result;\n+                  --  Append to Assoc_List the mapping of loop identifers of\n+                  --  quantified expressions with its new copy.\n+\n+                  --------------------\n+                  -- Map_Loop_Param --\n+                  --------------------\n+\n+                  function Map_Loop_Param (N : Node_Id) return Traverse_Result\n+                  is\n+                  begin\n+                     if Nkind (N) = N_Loop_Parameter_Specification\n+                       and then Nkind (Parent (N)) = N_Quantified_Expression\n+                     then\n+                        declare\n+                           Def_Id : constant Entity_Id :=\n+                                      Defining_Identifier (N);\n+                        begin\n+                           Append_Elmt (Def_Id, Assoc_List);\n+                           Append_Elmt (New_Copy (Def_Id), Assoc_List);\n+                        end;\n+                     end if;\n+\n+                     return OK;\n+                  end Map_Loop_Param;\n+\n+                  procedure Map_Quantified_Expressions is\n+                     new Traverse_Proc (Map_Loop_Param);\n+\n+               begin\n+                  Map_Quantified_Expressions (Expr);\n+               end Map_Quantified_Expression_Loop_Identifiers;\n+\n+               --  Local variables\n+\n+               Subp_Formal_Id   : Entity_Id := First_Formal (Subp_Id);\n+               Helper_Formal_Id : Entity_Id := First_Formal (Helper_Id);\n+\n+            --  Start of processing for Copy_And_Update_References\n+\n+            begin\n+               while Present (Subp_Formal_Id) loop\n+                  Append_Elmt (Subp_Formal_Id,   Assoc_List);\n+                  Append_Elmt (Helper_Formal_Id, Assoc_List);\n+\n+                  Next_Formal (Subp_Formal_Id);\n+                  Next_Formal (Helper_Formal_Id);\n+               end loop;\n+\n+               Map_Quantified_Expression_Loop_Identifiers;\n+\n+               return New_Copy_Tree (Expr, Map => Assoc_List);\n+            end Copy_And_Update_References;\n+\n+            --  Local variables\n+\n+            Helper_Decl : constant Node_Id := Parent (Parent (Helper_Id));\n+            Body_Id     : Entity_Id;\n+            Body_Spec   : Node_Id;\n+            Body_Stmts  : Node_Id;\n+            Helper_Body : Node_Id;\n+            Return_Expr : Node_Id;\n+\n+         --  Start of processing for Build_Call_Helper_Body\n+\n+         begin\n+            pragma Assert (Analyzed (Unit_Declaration_Node (Helper_Id)));\n+            pragma Assert (No (Corresponding_Body (Helper_Decl)));\n+\n+            Body_Id   := Make_Defining_Identifier (Loc, Chars (Helper_Id));\n+            Body_Spec := Build_Call_Helper_Spec (Body_Id);\n+\n+            Set_Corresponding_Body (Helper_Decl, Body_Id);\n+            Set_Must_Override (Body_Spec, False);\n+\n+            if Present (Class_Preconditions (Subp_Id)) then\n+               Return_Expr :=\n+                 Copy_And_Update_References (Class_Preconditions (Subp_Id));\n+\n+            --  When the subprogram is compiled with assertions disabled the\n+            --  helper just returns True; done to avoid reporting errors at\n+            --  link time since a unit may be compiled with assertions disabled\n+            --  and another (which depends on it) compiled with assertions\n+            --  enabled.\n+\n+            else\n+               pragma Assert (Present (Ignored_Class_Preconditions (Subp_Id)));\n+               Return_Expr := New_Occurrence_Of (Standard_True, Loc);\n+            end if;\n+\n+            Body_Stmts :=\n+              Make_Handled_Sequence_Of_Statements (Loc,\n+                Statements => New_List (\n+                  Make_Simple_Return_Statement (Loc, Return_Expr)));\n+\n+            Helper_Body :=\n+              Make_Subprogram_Body (Loc,\n+                Specification              => Body_Spec,\n+                Declarations               => New_List,\n+                Handled_Statement_Sequence => Body_Stmts);\n+\n+            return Helper_Body;\n+         end Build_Call_Helper_Body;\n+\n+         ----------------------------\n+         -- Build_Call_Helper_Decl --\n+         ----------------------------\n+\n+         function Build_Call_Helper_Decl return Node_Id is\n+            Decl : Node_Id;\n+            Spec : Node_Id;\n+\n+         begin\n+            Spec := Build_Call_Helper_Spec (Helper_Id);\n+            Set_Must_Override      (Spec, False);\n+            Set_Must_Not_Override  (Spec, False);\n+            Set_Is_Inlined (Helper_Id);\n+            Set_Is_Public  (Helper_Id);\n+\n+            Decl := Make_Subprogram_Declaration (Loc, Spec);\n+\n+            --  Inherit debug info flag from Subp_Id to Helper_Id to allow\n+            --  debugging of the helper subprogram.\n+\n+            if Needs_Debug_Info (Subp_Id) then\n+               Set_Debug_Info_Needed (Helper_Id);\n+            end if;\n+\n+            return Decl;\n+         end Build_Call_Helper_Decl;\n+\n+         ----------------------------\n+         -- Build_Call_Helper_Spec --\n+         ----------------------------\n+\n+         function Build_Call_Helper_Spec (Spec_Id : Entity_Id) return Node_Id\n+         is\n+            Spec         : constant Node_Id := Parent (Subp_Id);\n+            Def_Id       : constant Node_Id := Defining_Unit_Name (Spec);\n+            Formal       : Entity_Id;\n+            Func_Formals : constant List_Id := New_List;\n+            P_Spec       : constant List_Id := Parameter_Specifications (Spec);\n+            Par_Formal   : Node_Id;\n+            Param        : Node_Id;\n+            Param_Type   : Node_Id;\n+\n+         begin\n+            --  Create a list of formal parameters with the same types as the\n+            --  original subprogram but changing the controlling formal.\n+\n+            Param  := First (P_Spec);\n+            Formal := First_Formal (Def_Id);\n+            while Present (Formal) loop\n+               Par_Formal := Parent (Formal);\n+\n+               if Is_Dynamic and then Is_Controlling_Formal (Formal) then\n+                  if Nkind (Parameter_Type (Par_Formal))\n+                    = N_Access_Definition\n+                  then\n+                     Param_Type :=\n+                       Copy_Separate_Tree (Parameter_Type (Par_Formal));\n+                     Rewrite (Subtype_Mark (Param_Type),\n+                       Make_Attribute_Reference (Loc,\n+                         Prefix => Relocate_Node (Subtype_Mark (Param_Type)),\n+                         Attribute_Name => Name_Class));\n+\n+                  else\n+                     Param_Type :=\n+                       Make_Attribute_Reference (Loc,\n+                         Prefix => New_Occurrence_Of (Etype (Formal), Loc),\n+                         Attribute_Name => Name_Class);\n+                  end if;\n+               else\n+                  Param_Type := New_Occurrence_Of (Etype (Formal), Loc);\n+               end if;\n+\n+               Append_To (Func_Formals,\n+                 Make_Parameter_Specification (Loc,\n+                   Defining_Identifier    =>\n+                     Make_Defining_Identifier (Loc, Chars (Formal)),\n+                   In_Present             => In_Present (Par_Formal),\n+                   Out_Present            => Out_Present (Par_Formal),\n+                   Null_Exclusion_Present => Null_Exclusion_Present\n+                                               (Par_Formal),\n+                   Parameter_Type         => Param_Type));\n+\n+               Next (Param);\n+               Next_Formal (Formal);\n+            end loop;\n+\n+            return\n+              Make_Function_Specification (Loc,\n+                Defining_Unit_Name       => Spec_Id,\n+                Parameter_Specifications => Func_Formals,\n+                Result_Definition        =>\n+                  New_Occurrence_Of (Standard_Boolean, Loc));\n+         end Build_Call_Helper_Spec;\n+\n+         --  Local variables\n+\n+         Helper_Body : Node_Id;\n+         Helper_Decl : Node_Id;\n+\n+      --  Start of processing for Add_Call_Helper\n+\n+      begin\n+         Helper_Decl := Build_Call_Helper_Decl;\n+         Mutate_Ekind (Helper_Id, Ekind (Subp_Id));\n+\n+         --  Add the helper to the freezing actions of the tagged type\n+\n+         Append_Freeze_Action (Tagged_Type, Helper_Decl);\n+         Analyze (Helper_Decl);\n+\n+         Helper_Body := Build_Call_Helper_Body;\n+         Append_Freeze_Action (Tagged_Type, Helper_Body);\n+\n+         --  If this helper is built as part of building the DTW at the\n+         --  freezing point of its tagged type then we cannot defer\n+         --  its analysis.\n+\n+         if Late_Overriding then\n+            pragma Assert (Is_Dispatch_Table_Wrapper (Subp_Id));\n+            Analyze (Helper_Body);\n+         end if;\n+      end Add_Call_Helper;\n+\n+      --  Local variables\n+\n+      Helper_Id : Entity_Id;\n+\n+   --  Start of processing for Make_Class_Precondition_Subps\n+\n+   begin\n+      if Present (Class_Preconditions (Subp_Id))\n+        or Present (Ignored_Class_Preconditions (Subp_Id))\n+      then\n+         pragma Assert\n+           (Comes_From_Source (Subp_Id)\n+              or else Is_Dispatch_Table_Wrapper (Subp_Id));\n+\n+         if No (Dynamic_Call_Helper (Subp_Id)) then\n+\n+            --  Build and add to the freezing actions of Tagged_Type its\n+            --  dynamic-call helper.\n+\n+            Helper_Id :=\n+              Make_Defining_Identifier (Loc,\n+                New_External_Name (Chars (Subp_Id),\n+                Suffix       => \"DP\",\n+                Suffix_Index => Source_Offset (Loc)));\n+            Add_Call_Helper (Helper_Id, Is_Dynamic => True);\n+\n+            --  Link original subprogram to helper and vice versa\n+\n+            Set_Dynamic_Call_Helper (Subp_Id, Helper_Id);\n+            Set_Class_Preconditions_Subprogram (Helper_Id, Subp_Id);\n+         end if;\n+\n+         if not Is_Abstract_Subprogram (Subp_Id)\n+           and then No (Static_Call_Helper (Subp_Id))\n+         then\n+            --  Build and add to the freezing actions of Tagged_Type its\n+            --  static-call helper.\n+\n+            Helper_Id :=\n+              Make_Defining_Identifier (Loc,\n+                New_External_Name (Chars (Subp_Id),\n+                Suffix       => \"SP\",\n+                Suffix_Index => Source_Offset (Loc)));\n+\n+            Add_Call_Helper (Helper_Id, Is_Dynamic => False);\n+\n+            --  Link original subprogram to helper and vice versa\n+\n+            Set_Static_Call_Helper (Subp_Id, Helper_Id);\n+            Set_Class_Preconditions_Subprogram (Helper_Id, Subp_Id);\n+\n+            --  Build and add to the freezing actions of Tagged_Type the\n+            --  indirect-call wrapper.\n+\n+            Add_Indirect_Call_Wrapper;\n+         end if;\n+      end if;\n+   end Make_Class_Precondition_Subps;\n+\n+   ----------------------------------------------\n+   -- Process_Class_Conditions_At_Freeze_Point --\n+   ----------------------------------------------\n+\n+   procedure Process_Class_Conditions_At_Freeze_Point (Typ : Entity_Id) is\n+\n+      procedure Check_Class_Conditions (Spec_Id : Entity_Id);\n+      --  Check class-wide pre/postconditions of Spec_Id\n+\n+      function Has_Class_Postconditions_Subprogram\n+        (Spec_Id : Entity_Id) return Boolean;\n+      --  Return True if Spec_Id has (or inherits) a postconditions subprogram.\n+\n+      function Has_Class_Preconditions_Subprogram\n+        (Spec_Id : Entity_Id) return Boolean;\n+      --  Return True if Spec_Id has (or inherits) a preconditions subprogram.\n+\n+      ----------------------------\n+      -- Check_Class_Conditions --\n+      ----------------------------\n+\n+      procedure Check_Class_Conditions (Spec_Id : Entity_Id) is\n+         Par_Subp : Entity_Id;\n+\n+      begin\n+         for Kind in Condition_Kind loop\n+            Par_Subp := Nearest_Class_Condition_Subprogram (Kind, Spec_Id);\n+\n+            if Present (Par_Subp) then\n+               Check_Class_Condition\n+                 (Cond            => Class_Condition (Kind, Par_Subp),\n+                  Subp            => Spec_Id,\n+                  Par_Subp        => Par_Subp,\n+                  Is_Precondition => Kind in Ignored_Class_Precondition\n+                                           | Class_Precondition);\n+            end if;\n+         end loop;\n+      end Check_Class_Conditions;\n+\n+      -----------------------------------------\n+      -- Has_Class_Postconditions_Subprogram --\n+      -----------------------------------------\n+\n+      function Has_Class_Postconditions_Subprogram\n+        (Spec_Id : Entity_Id) return Boolean is\n+      begin\n+         return\n+           Present (Nearest_Class_Condition_Subprogram\n+                     (Spec_Id => Spec_Id,\n+                      Kind    => Class_Postcondition))\n+             or else\n+           Present (Nearest_Class_Condition_Subprogram\n+                     (Spec_Id => Spec_Id,\n+                      Kind    => Ignored_Class_Postcondition));\n+      end Has_Class_Postconditions_Subprogram;\n+\n+      ----------------------------------------\n+      -- Has_Class_Preconditions_Subprogram --\n+      ----------------------------------------\n+\n+      function Has_Class_Preconditions_Subprogram\n+        (Spec_Id : Entity_Id) return Boolean is\n+      begin\n+         return\n+           Present (Nearest_Class_Condition_Subprogram\n+                     (Spec_Id => Spec_Id,\n+                      Kind    => Class_Precondition))\n+             or else\n+           Present (Nearest_Class_Condition_Subprogram\n+                     (Spec_Id => Spec_Id,\n+                      Kind    => Ignored_Class_Precondition));\n+      end Has_Class_Preconditions_Subprogram;\n+\n+      --  Local variables\n+\n+      Prim_Elmt : Elmt_Id := First_Elmt (Primitive_Operations (Typ));\n+      Prim      : Entity_Id;\n+\n+   --  Start of processing for Process_Class_Conditions_At_Freeze_Point\n+\n+   begin\n+      while Present (Prim_Elmt) loop\n+         Prim := Node (Prim_Elmt);\n+\n+         if Has_Class_Preconditions_Subprogram (Prim)\n+           or else Has_Class_Postconditions_Subprogram (Prim)\n+         then\n+            if Comes_From_Source (Prim) then\n+               if Has_Significant_Contract (Prim) then\n+                  Merge_Class_Conditions (Prim);\n+               end if;\n+\n+            --  Handle wrapper of protected operation\n+\n+            elsif Is_Primitive_Wrapper (Prim) then\n+               Merge_Class_Conditions (Prim);\n+\n+            --  Check inherited class-wide conditions, excluding internal\n+            --  entities built for mapping of interface primitives.\n+\n+            elsif Is_Derived_Type (Typ)\n+              and then Present (Alias (Prim))\n+              and then No (Interface_Alias (Prim))\n+            then\n+               Check_Class_Conditions (Prim);\n+            end if;\n+         end if;\n+\n+         Next_Elmt (Prim_Elmt);\n+      end loop;\n+   end Process_Class_Conditions_At_Freeze_Point;\n+\n+   ----------------------------\n+   -- Merge_Class_Conditions --\n+   ----------------------------\n+\n+   procedure Merge_Class_Conditions (Spec_Id : Entity_Id) is\n+\n+      procedure Preanalyze_Condition\n+        (Subp : Entity_Id;\n+         Expr : Node_Id);\n+      --  Preanalyze the class-wide condition Expr of Subp\n+\n+      procedure Process_Inherited_Conditions (Kind : Condition_Kind);\n+      --  Collect all inherited class-wide conditions of Spec_Id and merge\n+      --  them into one big condition.\n+\n+      --------------------------\n+      -- Preanalyze_Condition --\n+      --------------------------\n+\n+      procedure Preanalyze_Condition\n+        (Subp : Entity_Id;\n+         Expr : Node_Id)\n+      is\n+         procedure Clear_Unset_References;\n+         --  Clear unset references on formals of Subp since preanalysis\n+         --  occurs in a place unrelated to the actual code.\n+\n+         procedure Remove_Controlling_Arguments;\n+         --  Traverse Expr and clear the Controlling_Argument of calls to\n+         --  nonabstract functions.\n+\n+         procedure Remove_Formals (Id : Entity_Id);\n+         --  Remove formals from homonym chains and make them not visible\n+\n+         procedure Restore_Original_Selected_Component;\n+         --  Traverse Expr searching for dispatching calls to functions whose\n+         --  original node was a selected component, and replace them with\n+         --  their original node.\n+\n+         ----------------------------\n+         -- Clear_Unset_References --\n+         ----------------------------\n+\n+         procedure Clear_Unset_References is\n+            F : Entity_Id := First_Formal (Subp);\n+\n+         begin\n+            while Present (F) loop\n+               Set_Unset_Reference (F, Empty);\n+               Next_Formal (F);\n+            end loop;\n+         end Clear_Unset_References;\n+\n+         ----------------------------------\n+         -- Remove_Controlling_Arguments --\n+         ----------------------------------\n+\n+         procedure Remove_Controlling_Arguments is\n+            function Remove_Ctrl_Arg (N : Node_Id) return Traverse_Result;\n+            --  Reset the Controlling_Argument of calls to nonabstract\n+            --  function calls.\n+\n+            ---------------------\n+            -- Remove_Ctrl_Arg --\n+            ---------------------\n+\n+            function Remove_Ctrl_Arg (N : Node_Id) return Traverse_Result is\n+            begin\n+               if Nkind (N) = N_Function_Call\n+                 and then Present (Controlling_Argument (N))\n+                 and then not Is_Abstract_Subprogram (Entity (Name (N)))\n+               then\n+                  Set_Controlling_Argument (N, Empty);\n+               end if;\n+\n+               return OK;\n+            end Remove_Ctrl_Arg;\n+\n+            procedure Remove_Ctrl_Args is new Traverse_Proc (Remove_Ctrl_Arg);\n+         begin\n+            Remove_Ctrl_Args (Expr);\n+         end Remove_Controlling_Arguments;\n+\n+         --------------------\n+         -- Remove_Formals --\n+         --------------------\n+\n+         procedure Remove_Formals (Id : Entity_Id) is\n+            F : Entity_Id := First_Formal (Id);\n+\n+         begin\n+            while Present (F) loop\n+               Set_Is_Immediately_Visible (F, False);\n+               Remove_Homonym (F);\n+               Next_Formal (F);\n+            end loop;\n+         end Remove_Formals;\n+\n+         -----------------------------------------\n+         -- Restore_Original_Selected_Component --\n+         -----------------------------------------\n+\n+         procedure Restore_Original_Selected_Component is\n+            Restored_Nodes_List : Elist_Id := No_Elist;\n+\n+            procedure Fix_Parents (N : Node_Id);\n+            --  Traverse the subtree of N fixing the Parent field of all the\n+            --  nodes.\n+\n+            function Restore_Node (N : Node_Id) return Traverse_Result;\n+            --  Process dispatching calls to functions whose original node was\n+            --  a selected component, and replace them with their original\n+            --  node. Restored nodes are stored in the Restored_Nodes_List\n+            --  to fix the parent fields of their subtrees in a separate\n+            --  tree traversal.\n+\n+            -----------------\n+            -- Fix_Parents --\n+            -----------------\n+\n+            procedure Fix_Parents (N : Node_Id) is\n+\n+               function Fix_Parent\n+                 (Parent_Node : Node_Id;\n+                  Node        : Node_Id) return Traverse_Result;\n+               --  Process a single node\n+\n+               ----------------\n+               -- Fix_Parent --\n+               ----------------\n+\n+               function Fix_Parent\n+                 (Parent_Node : Node_Id;\n+                  Node        : Node_Id) return Traverse_Result\n+               is\n+                  Par : constant Node_Id := Parent (Node);\n+\n+               begin\n+                  if Par /= Parent_Node then\n+                     pragma Assert (not Is_List_Member (Node));\n+                     Set_Parent (Node, Parent_Node);\n+                  end if;\n+\n+                  return OK;\n+               end Fix_Parent;\n+\n+               procedure Fix_Parents is\n+                  new Traverse_Proc_With_Parent (Fix_Parent);\n+\n+            begin\n+               Fix_Parents (N);\n+            end Fix_Parents;\n+\n+            ------------------\n+            -- Restore_Node --\n+            ------------------\n+\n+            function Restore_Node (N : Node_Id) return Traverse_Result is\n+            begin\n+               if Nkind (N) = N_Function_Call\n+                 and then Nkind (Original_Node (N)) = N_Selected_Component\n+                 and then Is_Dispatching_Operation (Entity (Name (N)))\n+               then\n+                  Rewrite (N, Original_Node (N));\n+                  Set_Original_Node (N, N);\n+\n+                  --  Save the restored node in the Restored_Nodes_List to fix\n+                  --  the parent fields of their subtrees in a separate tree\n+                  --  traversal.\n+\n+                  Append_New_Elmt (N, Restored_Nodes_List);\n+               end if;\n+\n+               return OK;\n+            end Restore_Node;\n+\n+            procedure Restore_Nodes is new Traverse_Proc (Restore_Node);\n+\n+         --  Start of processing for Restore_Original_Selected_Component\n+\n+         begin\n+            Restore_Nodes (Expr);\n+\n+            --  After restoring the original node we must fix the decoration\n+            --  of the Parent attribute to ensure tree consistency; required\n+            --  because when the class-wide condition is inherited, calls to\n+            --  New_Copy_Tree will perform copies of this subtree, and formal\n+            --  occurrences with wrong Parent field cannot be mapped to the\n+            --  new formals.\n+\n+            if Present (Restored_Nodes_List) then\n+               declare\n+                  Elmt : Elmt_Id := First_Elmt (Restored_Nodes_List);\n+\n+               begin\n+                  while Present (Elmt) loop\n+                     Fix_Parents (Node (Elmt));\n+                     Next_Elmt (Elmt);\n+                  end loop;\n+               end;\n+            end if;\n+         end Restore_Original_Selected_Component;\n+\n+      --  Start of processing for Preanalyze_Condition\n+\n+      begin\n+         pragma Assert (Present (Expr));\n+         pragma Assert (Inside_Class_Condition_Preanalysis = False);\n+\n+         Push_Scope (Subp);\n+         Install_Formals (Subp);\n+         Inside_Class_Condition_Preanalysis := True;\n+\n+         Preanalyze_And_Resolve (Expr, Standard_Boolean);\n+\n+         Inside_Class_Condition_Preanalysis := False;\n+         Remove_Formals (Subp);\n+         Pop_Scope;\n+\n+         --  If this preanalyzed condition has occurrences of dispatching calls\n+         --  using the Object.Operation notation, during preanalysis such calls\n+         --  are rewritten as dispatching function calls; if at later stages\n+         --  this condition is inherited we must have restored the original\n+         --  selected-component node to ensure that the preanalysis of the\n+         --  inherited condition rewrites these dispatching calls in the\n+         --  correct context to avoid reporting spurious errors.\n+\n+         Restore_Original_Selected_Component;\n+\n+         --  Traverse Expr and clear the Controlling_Argument of calls to\n+         --  nonabstract functions. Required since the preanalyzed condition\n+         --  is not yet installed on its definite context and will be cloned\n+         --  and extended in derivations with additional conditions.\n+\n+         Remove_Controlling_Arguments;\n+\n+         --  Clear also attribute Unset_Reference; again because preanalysis\n+         --  occurs in a place unrelated to the actual code.\n+\n+         Clear_Unset_References;\n+      end Preanalyze_Condition;\n+\n+      ----------------------------------\n+      -- Process_Inherited_Conditions --\n+      ----------------------------------\n+\n+      procedure Process_Inherited_Conditions (Kind : Condition_Kind) is\n+         Tag_Typ : constant Entity_Id       := Find_Dispatching_Type (Spec_Id);\n+         Subps   : constant Subprogram_List := Inherited_Subprograms (Spec_Id);\n+         Seen    : Subprogram_List (Subps'Range) := (others => Empty);\n+\n+         function Inherit_Condition\n+           (Par_Subp : Entity_Id;\n+            Subp     : Entity_Id) return Node_Id;\n+         --  Inherit the class-wide condition from Par_Subp to Subp and adjust\n+         --  all the references to formals in the inherited condition.\n+\n+         procedure Merge_Conditions (From : Node_Id; Into : Node_Id);\n+         --  Merge two class-wide preconditions or postconditions (the former\n+         --  are merged using \"or else\", and the latter are merged using \"and-\n+         --  then\"). The changes are accumulated in parameter Into.\n+\n+         function Seen_Subp (Id : Entity_Id) return Boolean;\n+         --  Return True if the contract of subprogram Id has been processed\n+\n+         -----------------------\n+         -- Inherit_Condition --\n+         -----------------------\n+\n+         function Inherit_Condition\n+           (Par_Subp : Entity_Id;\n+            Subp     : Entity_Id) return Node_Id\n+         is\n+            function Check_Condition (Expr : Node_Id) return Boolean;\n+            --  Used in assertion to check that Expr has no reference to the\n+            --  formals of Par_Subp.\n+\n+            ---------------------\n+            -- Check_Condition --\n+            ---------------------\n+\n+            function Check_Condition (Expr : Node_Id) return Boolean is\n+               Par_Formal_Id : Entity_Id;\n+\n+               function Check_Entity (N : Node_Id) return Traverse_Result;\n+               --  Check occurrence of Par_Formal_Id\n+\n+               ------------------\n+               -- Check_Entity --\n+               ------------------\n+\n+               function Check_Entity (N : Node_Id) return Traverse_Result is\n+               begin\n+                  if Nkind (N) = N_Identifier\n+                    and then Present (Entity (N))\n+                    and then Entity (N) = Par_Formal_Id\n+                  then\n+                     return Abandon;\n+                  end if;\n+\n+                  return OK;\n+               end Check_Entity;\n+\n+               function Check_Expression is new Traverse_Func (Check_Entity);\n+\n+            --  Start of processing for Check_Condition\n+\n+            begin\n+               Par_Formal_Id := First_Formal (Par_Subp);\n+\n+               while Present (Par_Formal_Id) loop\n+                  if Check_Expression (Expr) = Abandon then\n+                     return False;\n+                  end if;\n+\n+                  Next_Formal (Par_Formal_Id);\n+               end loop;\n+\n+               return True;\n+            end Check_Condition;\n+\n+            --  Local variables\n+\n+            Assoc_List     : constant Elist_Id := New_Elmt_List;\n+            Par_Formal_Id  : Entity_Id := First_Formal (Par_Subp);\n+            Subp_Formal_Id : Entity_Id := First_Formal (Subp);\n+            New_Condition  : Node_Id;\n+\n+         begin\n+            while Present (Par_Formal_Id) loop\n+               Append_Elmt (Par_Formal_Id,  Assoc_List);\n+               Append_Elmt (Subp_Formal_Id, Assoc_List);\n+\n+               Next_Formal (Par_Formal_Id);\n+               Next_Formal (Subp_Formal_Id);\n+            end loop;\n+\n+            --  Check that Parent field of all the nodes have their correct\n+            --  decoration; required because otherwise mapped nodes with\n+            --  wrong Parent field are left unmodified in the copied tree\n+            --  and cause reporting wrong errors at later stages.\n+\n+            pragma Assert\n+              (Check_Parents (Class_Condition (Kind, Par_Subp), Assoc_List));\n+\n+            New_Condition :=\n+              New_Copy_Tree\n+                (Source => Class_Condition (Kind, Par_Subp),\n+                 Map    => Assoc_List);\n+\n+            --  Ensure that the inherited condition has no reference to the\n+            --  formals of the parent subprogram.\n+\n+            pragma Assert (Check_Condition (New_Condition));\n+\n+            return New_Condition;\n+         end Inherit_Condition;\n+\n+         ----------------------\n+         -- Merge_Conditions --\n+         ----------------------\n+\n+         procedure Merge_Conditions (From : Node_Id; Into : Node_Id) is\n+            function Expression_Arg (Expr : Node_Id) return Node_Id;\n+            --  Return the boolean expression argument of a condition while\n+            --  updating its parentheses count for the subsequent merge.\n+\n+            --------------------\n+            -- Expression_Arg --\n+            --------------------\n+\n+            function Expression_Arg (Expr : Node_Id) return Node_Id is\n+            begin\n+               if Paren_Count (Expr) = 0 then\n+                  Set_Paren_Count (Expr, 1);\n+               end if;\n+\n+               return Expr;\n+            end Expression_Arg;\n+\n+            --  Local variables\n+\n+            From_Expr : constant Node_Id := Expression_Arg (From);\n+            Into_Expr : constant Node_Id := Expression_Arg (Into);\n+            Loc       : constant Source_Ptr := Sloc (Into);\n+\n+         --  Start of processing for Merge_Conditions\n+\n+         begin\n+            case Kind is\n+\n+               --  Merge the two preconditions by \"or else\"-ing them\n+\n+               when Ignored_Class_Precondition\n+                  | Class_Precondition\n+               =>\n+                  Rewrite (Into_Expr,\n+                    Make_Or_Else (Loc,\n+                      Right_Opnd => Relocate_Node (Into_Expr),\n+                      Left_Opnd  => From_Expr));\n+\n+               --  Merge the two postconditions by \"and then\"-ing them\n+\n+               when Ignored_Class_Postcondition\n+                  | Class_Postcondition\n+               =>\n+                  Rewrite (Into_Expr,\n+                    Make_And_Then (Loc,\n+                      Right_Opnd => Relocate_Node (Into_Expr),\n+                      Left_Opnd  => From_Expr));\n+            end case;\n+         end Merge_Conditions;\n+\n+         ---------------\n+         -- Seen_Subp --\n+         ---------------\n+\n+         function Seen_Subp (Id : Entity_Id) return Boolean is\n+         begin\n+            for Index in Seen'Range loop\n+               if Seen (Index) = Id then\n+                  return True;\n+               end if;\n+            end loop;\n+\n+            return False;\n+         end Seen_Subp;\n+\n+         --  Local variables\n+\n+         Class_Cond      : Node_Id;\n+         Cond            : Node_Id;\n+         Subp_Id         : Entity_Id;\n+         Par_Prim        : Entity_Id := Empty;\n+         Par_Iface_Prims : Elist_Id  := No_Elist;\n+\n+      --  Start of processing for Process_Inherited_Conditions\n+\n+      begin\n+         Class_Cond := Class_Condition (Kind, Spec_Id);\n+\n+         --  Process parent primitives looking for nearest ancestor with\n+         --  class-wide conditions.\n+\n+         for Index in Subps'Range loop\n+            Subp_Id := Subps (Index);\n+\n+            if No (Par_Prim)\n+              and then Is_Ancestor (Find_Dispatching_Type (Subp_Id), Tag_Typ)\n+            then\n+               if Present (Alias (Subp_Id)) then\n+                  Subp_Id := Ultimate_Alias (Subp_Id);\n+               end if;\n+\n+               --  Wrappers of class-wide pre/postconditions reference the\n+               --  parent primitive that has the inherited contract and help\n+               --  us to climb fast.\n+\n+               if Is_Wrapper (Subp_Id)\n+                 and then Present (LSP_Subprogram (Subp_Id))\n+               then\n+                  Subp_Id := LSP_Subprogram (Subp_Id);\n+               end if;\n+\n+               if not Seen_Subp (Subp_Id)\n+                 and then Present (Class_Condition (Kind, Subp_Id))\n+               then\n+                  Seen (Index)    := Subp_Id;\n+                  Par_Prim        := Subp_Id;\n+                  Par_Iface_Prims := Covered_Interface_Primitives (Par_Prim);\n+\n+                  Cond := Inherit_Condition\n+                            (Subp     => Spec_Id,\n+                             Par_Subp => Subp_Id);\n+\n+                  if Present (Class_Cond) then\n+                     Merge_Conditions (Cond, Class_Cond);\n+                  else\n+                     Class_Cond := Cond;\n+                  end if;\n+\n+                  Check_Class_Condition\n+                    (Cond            => Class_Cond,\n+                     Subp            => Spec_Id,\n+                     Par_Subp        => Subp_Id,\n+                     Is_Precondition => Kind in Ignored_Class_Precondition\n+                                              | Class_Precondition);\n+                  Build_Class_Wide_Expression\n+                    (Pragma_Or_Expr  => Class_Cond,\n+                     Subp            => Spec_Id,\n+                     Par_Subp        => Subp_Id,\n+                     Adjust_Sloc     => False);\n+\n+                  --  We are done as soon as we process the nearest ancestor\n+\n+                  exit;\n+               end if;\n+            end if;\n+         end loop;\n+\n+         --  Process the contract of interface primitives not covered by\n+         --  the nearest ancestor.\n+\n+         for Index in Subps'Range loop\n+            Subp_Id := Subps (Index);\n+\n+            if Is_Interface (Find_Dispatching_Type (Subp_Id)) then\n+               if Present (Alias (Subp_Id)) then\n+                  Subp_Id := Ultimate_Alias (Subp_Id);\n+               end if;\n+\n+               if not Seen_Subp (Subp_Id)\n+                 and then Present (Class_Condition (Kind, Subp_Id))\n+                 and then not Contains (Par_Iface_Prims, Subp_Id)\n+               then\n+                  Seen (Index) := Subp_Id;\n+\n+                  Cond := Inherit_Condition\n+                            (Subp     => Spec_Id,\n+                             Par_Subp => Subp_Id);\n+\n+                  Check_Class_Condition\n+                    (Cond            => Cond,\n+                     Subp            => Spec_Id,\n+                     Par_Subp        => Subp_Id,\n+                     Is_Precondition => Kind in Ignored_Class_Precondition\n+                                              | Class_Precondition);\n+                  Build_Class_Wide_Expression\n+                    (Pragma_Or_Expr  => Cond,\n+                     Subp            => Spec_Id,\n+                     Par_Subp        => Subp_Id,\n+                     Adjust_Sloc     => False);\n+\n+                  if Present (Class_Cond) then\n+                     Merge_Conditions (Cond, Class_Cond);\n+                  else\n+                     Class_Cond := Cond;\n+                  end if;\n+               end if;\n+            end if;\n+         end loop;\n+\n+         Set_Class_Condition (Kind, Spec_Id, Class_Cond);\n+      end Process_Inherited_Conditions;\n+\n+      --  Local variables\n+\n+      Cond : Node_Id;\n+\n+   --  Start of processing for Merge_Class_Conditions\n+\n+   begin\n+      for Kind in Condition_Kind loop\n+         Cond := Class_Condition (Kind, Spec_Id);\n+\n+         --  If this subprogram has class-wide conditions then preanalyze\n+         --  them before processing inherited conditions since conditions\n+         --  are checked and merged from right to left.\n+\n+         if Present (Cond) then\n+            Preanalyze_Condition (Spec_Id, Cond);\n+         end if;\n+\n+         Process_Inherited_Conditions (Kind);\n+\n+         --  Preanalyze merged inherited conditions\n+\n+         if Cond /= Class_Condition (Kind, Spec_Id) then\n+            Preanalyze_Condition (Spec_Id,\n+              Class_Condition (Kind, Spec_Id));\n+         end if;\n+      end loop;\n+   end Merge_Class_Conditions;\n+\n+   ----------------------------------------\n+   -- Save_Global_References_In_Contract --\n+   ----------------------------------------\n+\n+   procedure Save_Global_References_In_Contract\n+     (Templ  : Node_Id;\n+      Gen_Id : Entity_Id)\n+   is\n+      procedure Save_Global_References_In_List (First_Prag : Node_Id);\n+      --  Save all global references in contract-related source pragmas found\n+      --  in the list, starting with pragma First_Prag.\n+\n+      ------------------------------------\n+      -- Save_Global_References_In_List --\n+      ------------------------------------\n+\n+      procedure Save_Global_References_In_List (First_Prag : Node_Id) is\n+         Prag : Node_Id := First_Prag;\n+\n+      begin\n+         while Present (Prag) loop\n+            if Is_Generic_Contract_Pragma (Prag) then\n+               Save_Global_References (Prag);\n+            end if;\n+\n+            Prag := Next_Pragma (Prag);\n+         end loop;\n+      end Save_Global_References_In_List;\n+\n+      --  Local variables\n+\n+      Items : constant Node_Id := Contract (Defining_Entity (Templ));\n+\n+   --  Start of processing for Save_Global_References_In_Contract\n+\n+   begin\n+      --  The entity of the analyzed generic copy must be on the scope stack\n+      --  to ensure proper detection of global references.\n+\n+      Push_Scope (Gen_Id);\n+\n+      if Permits_Aspect_Specifications (Templ)\n+        and then Has_Aspects (Templ)\n+      then\n+         Save_Global_References_In_Aspects (Templ);\n+      end if;\n+\n+      if Present (Items) then\n+         Save_Global_References_In_List (Pre_Post_Conditions (Items));\n+         Save_Global_References_In_List (Contract_Test_Cases (Items));\n+         Save_Global_References_In_List (Classifications     (Items));\n+      end if;\n+\n+      Pop_Scope;\n+   end Save_Global_References_In_Contract;\n+\n+   -------------------------\n+   -- Set_Class_Condition --\n+   -------------------------\n+\n+   procedure Set_Class_Condition\n+     (Kind : Condition_Kind;\n+      Subp : Entity_Id;\n+      Cond : Node_Id)\n+   is\n+   begin\n+      case Kind is\n+         when Class_Postcondition =>\n+            Set_Class_Postconditions (Subp, Cond);\n+\n+         when Class_Precondition =>\n+            Set_Class_Preconditions (Subp, Cond);\n+\n+         when Ignored_Class_Postcondition =>\n+            Set_Ignored_Class_Postconditions (Subp, Cond);\n+\n+         when Ignored_Class_Precondition =>\n+            Set_Ignored_Class_Preconditions (Subp, Cond);\n+      end case;\n+   end Set_Class_Condition;\n \n end Contracts;"}, {"sha": "adbb0e6eb67a0fd203c76441496b9cae7057bfef", "filename": "gcc/ada/contracts.ads", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fcontracts.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fcontracts.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2015-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2015-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -216,6 +216,31 @@ package Contracts is\n    --  subprogram declaration template denoted by Templ. The instantiated\n    --  pragmas are added to list L.\n \n+   procedure Make_Class_Precondition_Subps\n+     (Subp_Id         : Entity_Id;\n+      Late_Overriding : Boolean := False);\n+   --  Build helpers that at run time evaluate statically and dynamically the\n+   --  class-wide preconditions of Subp_Id; build also the indirect-call\n+   --  wrapper (ICW) required to check class-wide preconditions when the\n+   --  subprogram is invoked through an access-to-subprogram, or when it\n+   --  overrides an inherited class-wide precondition (see AI12-0195-1).\n+   --  Late_Overriding enables special handling required for late-overriding\n+   --  subprograms.\n+\n+   procedure Merge_Class_Conditions (Spec_Id : Entity_Id);\n+   --  Merge and preanalyze all class-wide conditions of Spec_Id (class-wide\n+   --  preconditions merged with operator or-else; class-wide postconditions\n+   --  merged with operator and-then). Ignored pre/postconditions are also\n+   --  merged since, although they are not required to generate code, their\n+   --  preanalysis is required to perform semantic checks. Resulting merged\n+   --  expressions are later installed by the expander in helper subprograms\n+   --  which are invoked from the caller side; they are also used to build\n+   --  the dispatch-table wrapper (DTW), if required.\n+\n+   procedure Process_Class_Conditions_At_Freeze_Point (Typ : Entity_Id);\n+   --  Merge, preanalyze, and check class-wide pre/postconditions of Typ\n+   --  primitives.\n+\n    procedure Save_Global_References_In_Contract\n      (Templ  : Node_Id;\n       Gen_Id : Entity_Id);"}, {"sha": "d36b815e5273b0284bce17b74e9e9ae52b3c4200", "filename": "gcc/ada/csets.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fcsets.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fcsets.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcsets.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "2affb568f627953cb05f52ff11531cf0faaee6ef", "filename": "gcc/ada/csets.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fcsets.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fcsets.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcsets.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "b2e6ef9e5de3b2c01897b2b141f6c5db0b5dc69e", "filename": "gcc/ada/cstand.adb", "status": "modified", "additions": 53, "deletions": 49, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fcstand.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fcstand.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstand.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -149,8 +149,7 @@ package body CStand is\n    function New_Operator (Op : Name_Id; Typ : Entity_Id) return Entity_Id;\n    --  Build entity for standard operator with given name and type\n \n-   function New_Standard_Entity\n-     (New_Node_Kind : Node_Kind := N_Defining_Identifier) return Entity_Id;\n+   function New_Standard_Entity return Entity_Id;\n    --  Builds a new entity for Standard\n \n    function New_Standard_Entity (Nam : String) return Entity_Id;\n@@ -205,7 +204,7 @@ package body CStand is\n \n       Mutate_Ekind                   (E, E_Floating_Point_Type);\n       Set_Etype                      (E, E);\n-      Init_Digits_Value              (E, Digs);\n+      Set_Digits_Value               (E, UI_From_Int (Digs));\n       Set_Float_Rep                  (E, Rep);\n       Init_Size                      (E, Siz);\n       Set_Elem_Alignment             (E, Align);\n@@ -578,6 +577,8 @@ package body CStand is\n          Set_Has_Pragma_Pack (String_Type, True);\n       end Pack_String_Type;\n \n+      Char_Size : constant Unat := UI_From_Int (Standard_Character_Size);\n+\n    --  Start of processing for Create_Standard\n \n    begin\n@@ -652,8 +653,8 @@ package body CStand is\n       Mutate_Ekind       (Standard_Boolean, E_Enumeration_Type);\n       Set_First_Literal  (Standard_Boolean, Standard_False);\n       Set_Etype          (Standard_Boolean, Standard_Boolean);\n-      Init_Esize         (Standard_Boolean, Standard_Character_Size);\n-      Init_RM_Size       (Standard_Boolean, 1);\n+      Set_Esize          (Standard_Boolean, Char_Size);\n+      Set_RM_Size        (Standard_Boolean, Uint_1);\n       Set_Elem_Alignment (Standard_Boolean);\n \n       Set_Is_Unsigned_Type           (Standard_Boolean);\n@@ -757,8 +758,8 @@ package body CStand is\n \n       Mutate_Ekind       (Standard_Character, E_Enumeration_Type);\n       Set_Etype          (Standard_Character, Standard_Character);\n-      Init_Esize         (Standard_Character, Standard_Character_Size);\n-      Init_RM_Size       (Standard_Character, 8);\n+      Set_Esize          (Standard_Character, Char_Size);\n+      Set_RM_Size        (Standard_Character, Uint_8);\n       Set_Elem_Alignment (Standard_Character);\n \n       Set_Has_Pragma_Ordered         (Standard_Character);\n@@ -912,7 +913,7 @@ package body CStand is\n       Set_Etype           (Standard_String, Standard_String);\n       Set_Component_Type  (Standard_String, Standard_Character);\n       Set_Component_Size  (Standard_String, Uint_8);\n-      Init_Size_Align     (Standard_String);\n+      Reinit_Size_Align   (Standard_String);\n       Set_Alignment       (Standard_String, Uint_1);\n       Pack_String_Type    (Standard_String);\n \n@@ -956,7 +957,7 @@ package body CStand is\n       Set_Etype           (Standard_Wide_String, Standard_Wide_String);\n       Set_Component_Type  (Standard_Wide_String, Standard_Wide_Character);\n       Set_Component_Size  (Standard_Wide_String, Uint_16);\n-      Init_Size_Align     (Standard_Wide_String);\n+      Reinit_Size_Align   (Standard_Wide_String);\n       Pack_String_Type    (Standard_Wide_String);\n \n       --  Set index type of Wide_String\n@@ -993,7 +994,7 @@ package body CStand is\n       Set_Component_Type   (Standard_Wide_Wide_String,\n                             Standard_Wide_Wide_Character);\n       Set_Component_Size   (Standard_Wide_Wide_String, Uint_32);\n-      Init_Size_Align      (Standard_Wide_Wide_String);\n+      Reinit_Size_Align    (Standard_Wide_Wide_String);\n       Set_Is_Ada_2005_Only (Standard_Wide_Wide_String);\n       Pack_String_Type     (Standard_Wide_Wide_String);\n \n@@ -1009,10 +1010,10 @@ package body CStand is\n \n       --  Setup entity for Natural\n \n-      Mutate_Ekind       (Standard_Natural, E_Signed_Integer_Subtype);\n-      Set_Etype          (Standard_Natural, Base_Type (Standard_Integer));\n-      Init_Esize         (Standard_Natural, Standard_Integer_Size);\n-      Init_RM_Size       (Standard_Natural, Standard_Integer_Size - 1);\n+      Mutate_Ekind (Standard_Natural, E_Signed_Integer_Subtype);\n+      Set_Etype (Standard_Natural, Base_Type (Standard_Integer));\n+      Set_Esize (Standard_Natural, UI_From_Int (Standard_Integer_Size));\n+      Set_RM_Size  (Standard_Natural, UI_From_Int (Standard_Integer_Size - 1));\n       Set_Elem_Alignment (Standard_Natural);\n       Set_Size_Known_At_Compile_Time\n                          (Standard_Natural);\n@@ -1024,10 +1025,11 @@ package body CStand is\n \n       --  Setup entity for Positive\n \n-      Mutate_Ekind       (Standard_Positive, E_Signed_Integer_Subtype);\n-      Set_Etype          (Standard_Positive, Base_Type (Standard_Integer));\n-      Init_Esize         (Standard_Positive, Standard_Integer_Size);\n-      Init_RM_Size       (Standard_Positive, Standard_Integer_Size - 1);\n+      Mutate_Ekind (Standard_Positive, E_Signed_Integer_Subtype);\n+      Set_Etype (Standard_Positive, Base_Type (Standard_Integer));\n+      Set_Esize  (Standard_Positive, UI_From_Int (Standard_Integer_Size));\n+      Set_RM_Size\n+        (Standard_Positive, UI_From_Int (Standard_Integer_Size - 1));\n       Set_Elem_Alignment (Standard_Positive);\n \n       Set_Size_Known_At_Compile_Time (Standard_Positive);\n@@ -1132,7 +1134,7 @@ package body CStand is\n          Init_Size   (Standard_A_String, System_Address_Size * 2);\n       end if;\n \n-      Init_Alignment (Standard_A_String);\n+      pragma Assert (not Known_Alignment (Standard_A_String));\n \n       Set_Directly_Designated_Type\n                      (Standard_A_String, Standard_String);\n@@ -1156,14 +1158,14 @@ package body CStand is\n       Mutate_Ekind (Standard_Debug_Renaming_Type, E_Signed_Integer_Subtype);\n       Set_Scope (Standard_Debug_Renaming_Type, Standard_Standard);\n       Set_Etype (Standard_Debug_Renaming_Type, Base_Type (Standard_Integer));\n-      Init_Esize          (Standard_Debug_Renaming_Type, 0);\n-      Init_RM_Size        (Standard_Debug_Renaming_Type, 0);\n+      Set_Esize (Standard_Debug_Renaming_Type, Uint_0);\n+      Set_RM_Size (Standard_Debug_Renaming_Type, Uint_0);\n       Set_Size_Known_At_Compile_Time (Standard_Debug_Renaming_Type);\n-      Set_Integer_Bounds  (Standard_Debug_Renaming_Type,\n-        Typ => Base_Type  (Standard_Debug_Renaming_Type),\n+      Set_Integer_Bounds (Standard_Debug_Renaming_Type,\n+        Typ => Base_Type (Standard_Debug_Renaming_Type),\n         Lb  => Uint_1,\n         Hb  => Uint_0);\n-      Set_Is_Constrained  (Standard_Debug_Renaming_Type);\n+      Set_Is_Constrained (Standard_Debug_Renaming_Type);\n       Set_Has_Size_Clause (Standard_Debug_Renaming_Type);\n \n       --  Note on type names. The type names for the following special types\n@@ -1186,26 +1188,17 @@ package body CStand is\n       Mutate_Ekind          (Any_Id, E_Variable);\n       Set_Scope             (Any_Id, Standard_Standard);\n       Set_Etype             (Any_Id, Any_Type);\n-      Init_Esize            (Any_Id);\n-      Init_Alignment        (Any_Id);\n-\n-      Any_Access := New_Standard_Entity (\"an access type\");\n-      Mutate_Ekind          (Any_Access, E_Access_Type);\n-      Set_Scope             (Any_Access, Standard_Standard);\n-      Set_Etype             (Any_Access, Any_Access);\n-      Init_Size             (Any_Access, System_Address_Size);\n-      Set_Elem_Alignment    (Any_Access);\n-      Set_Directly_Designated_Type\n-                            (Any_Access, Any_Type);\n+      pragma Assert (not Known_Esize (Any_Id));\n+      pragma Assert (not Known_Alignment (Any_Id));\n \n       Any_Character := New_Standard_Entity (\"a character type\");\n       Mutate_Ekind          (Any_Character, E_Enumeration_Type);\n       Set_Scope             (Any_Character, Standard_Standard);\n       Set_Etype             (Any_Character, Any_Character);\n       Set_Is_Unsigned_Type  (Any_Character);\n       Set_Is_Character_Type (Any_Character);\n-      Init_Esize            (Any_Character, Standard_Character_Size);\n-      Init_RM_Size          (Any_Character, 8);\n+      Set_Esize             (Any_Character, Char_Size);\n+      Set_RM_Size           (Any_Character, Uint_8);\n       Set_Elem_Alignment    (Any_Character);\n       Set_Scalar_Range      (Any_Character, Scalar_Range (Standard_Character));\n \n@@ -1214,15 +1207,15 @@ package body CStand is\n       Set_Scope             (Any_Array, Standard_Standard);\n       Set_Etype             (Any_Array, Any_Array);\n       Set_Component_Type    (Any_Array, Any_Character);\n-      Init_Size_Align       (Any_Array);\n+      Reinit_Size_Align     (Any_Array);\n       Make_Dummy_Index      (Any_Array);\n \n       Any_Boolean := New_Standard_Entity (\"a boolean type\");\n       Mutate_Ekind          (Any_Boolean, E_Enumeration_Type);\n       Set_Scope             (Any_Boolean, Standard_Standard);\n       Set_Etype             (Any_Boolean, Standard_Boolean);\n-      Init_Esize            (Any_Boolean, Standard_Character_Size);\n-      Init_RM_Size          (Any_Boolean, 1);\n+      Set_Esize             (Any_Boolean, Char_Size);\n+      Set_RM_Size           (Any_Boolean, Uint_1);\n       Set_Elem_Alignment    (Any_Boolean);\n       Set_Is_Unsigned_Type  (Any_Boolean);\n       Set_Scalar_Range      (Any_Boolean, Scalar_Range (Standard_Boolean));\n@@ -1231,9 +1224,10 @@ package body CStand is\n       Mutate_Ekind          (Any_Composite, E_Array_Type);\n       Set_Scope             (Any_Composite, Standard_Standard);\n       Set_Etype             (Any_Composite, Any_Composite);\n-      Set_Component_Size    (Any_Composite, Uint_0);\n       Set_Component_Type    (Any_Composite, Standard_Integer);\n-      Init_Size_Align       (Any_Composite);\n+      Reinit_Size_Align     (Any_Composite);\n+\n+      pragma Assert (not Known_Component_Size (Any_Composite));\n \n       Any_Discrete := New_Standard_Entity (\"a discrete type\");\n       Mutate_Ekind          (Any_Discrete, E_Signed_Integer_Type);\n@@ -1297,7 +1291,7 @@ package body CStand is\n       Set_Scope             (Any_String, Standard_Standard);\n       Set_Etype             (Any_String, Any_String);\n       Set_Component_Type    (Any_String, Any_Character);\n-      Init_Size_Align       (Any_String);\n+      Reinit_Size_Align     (Any_String);\n       Make_Dummy_Index      (Any_String);\n \n       Raise_Type := New_Standard_Entity (\"raise type\");\n@@ -1413,6 +1407,16 @@ package body CStand is\n       Set_Size_Known_At_Compile_Time\n                            (Universal_Fixed);\n \n+      Universal_Access := New_Standard_Entity (\"universal_access\");\n+      Decl := New_Node (N_Full_Type_Declaration, Stloc);\n+      Set_Defining_Identifier (Decl, Universal_Access);\n+      Mutate_Ekind                 (Universal_Access, E_Access_Type);\n+      Set_Etype                    (Universal_Access, Universal_Access);\n+      Set_Scope                    (Universal_Access, Standard_Standard);\n+      Init_Size                    (Universal_Access, System_Address_Size);\n+      Set_Elem_Alignment           (Universal_Access);\n+      Set_Directly_Designated_Type (Universal_Access, Any_Type);\n+\n       --  Create type declaration for Duration, using a 64-bit size. The\n       --  delta and size values depend on the mode set in system.ads.\n \n@@ -1506,10 +1510,11 @@ package body CStand is\n          Set_Scope       (Standard_Exception_Type, Standard_Standard);\n          Set_Stored_Constraint\n                          (Standard_Exception_Type, No_Elist);\n-         Init_Size_Align (Standard_Exception_Type);\n          Set_Size_Known_At_Compile_Time\n                          (Standard_Exception_Type, True);\n \n+         pragma Assert (not Known_RM_Size (Standard_Exception_Type));\n+\n          Make_Aliased_Component (Standard_Exception_Type, Standard_Boolean,\n                          \"Not_Handled_By_Others\");\n          Make_Aliased_Component (Standard_Exception_Type, Standard_Character,\n@@ -1726,7 +1731,7 @@ package body CStand is\n       Mutate_Ekind                  (Id, E_Component);\n       Set_Etype                     (Id, Typ);\n       Set_Scope                     (Id, Rec);\n-      Init_Component_Location       (Id);\n+      Reinit_Component_Location     (Id);\n       Set_Original_Record_Component (Id, Id);\n       Set_Is_Aliased                (Id);\n       Set_Is_Independent            (Id);\n@@ -1790,10 +1795,9 @@ package body CStand is\n    -- New_Standard_Entity --\n    -------------------------\n \n-   function New_Standard_Entity\n-     (New_Node_Kind : Node_Kind := N_Defining_Identifier) return Entity_Id\n+   function New_Standard_Entity return Entity_Id\n    is\n-      E : constant Entity_Id := New_Entity (New_Node_Kind, Stloc);\n+      E : constant Entity_Id := New_Entity (N_Defining_Identifier, Stloc);\n \n    begin\n       --  All standard entities are Pure and Public"}, {"sha": "9159f32d45fea44e2648840f30133517e8069327", "filename": "gcc/ada/cstand.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fcstand.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fcstand.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstand.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "e714162e1a81641973ba0eb26724c3f70cca7b96", "filename": "gcc/ada/cstreams.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fcstreams.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fcstreams.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstreams.c?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *              Auxiliary C functions for Interfaces.C.Streams              *\n  *                                                                          *\n- *          Copyright (C) 1992-2021, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2022, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "eeec3e64f7088a2470ad1dfa76d36a1ad9c58340", "filename": "gcc/ada/ctrl_c.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fctrl_c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fctrl_c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fctrl_c.c?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *        Copyright (C) 2002-2021, Free Software Foundation, Inc.           *\n+ *        Copyright (C) 2002-2022, Free Software Foundation, Inc.           *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "8a0ba0213bbd832f6009c473c67a3b74c30fda8d", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 25, "deletions": 6, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -112,7 +112,7 @@ package body Debug is\n    --  d.y  Disable implicit pragma Elaborate_All on task bodies\n    --  d.z  Restore previous support for frontend handling of Inline_Always\n \n-   --  d.A\n+   --  d.A  Enable statistics printing in Atree\n    --  d.B  Generate a bug box on abort_statement\n    --  d.C  Generate concatenation call, do not generate inline code\n    --  d.D  Disable errors on use of overriding keyword in Ada 95 mode\n@@ -158,8 +158,8 @@ package body Debug is\n    --  d_q\n    --  d_r\n    --  d_s  Stop elaboration checks on synchronous suspension\n-   --  d_t\n-   --  d_u\n+   --  d_t  In LLVM-based CCG, dump LLVM IR after transformations are done\n+   --  d_u  In LLVM-based CCG, dump flows\n    --  d_v  Enable additional checks and debug printouts in Atree\n    --  d_w\n    --  d_x  Disable inline expansion of Image attribute for enumeration types\n@@ -183,7 +183,7 @@ package body Debug is\n    --  d_O\n    --  d_P\n    --  d_Q\n-   --  d_R\n+   --  d_R  For LLVM, dump the representation of records\n    --  d_S\n    --  d_T  Output trace information on invocation path recording\n    --  d_U  Disable prepending messages with \"error:\".\n@@ -210,7 +210,7 @@ package body Debug is\n    --  d.5  Do not generate imported subprogram definitions in C code\n    --  d.6  Do not avoid declaring unreferenced types in C code\n    --  d.7  Disable unsound heuristics in gnat2scil (for CP as SPARK prover)\n-   --  d.8\n+   --  d.8  Disable unconditional inlining of expression functions\n    --  d.9  Disable build-in-place for nonlimited types\n \n    --  d_1\n@@ -830,6 +830,11 @@ package body Debug is\n    --       handling of Inline_Always by the front end on such targets. For the\n    --       targets that do not use the GCC back end, this switch is ignored.\n \n+   --  d.A  Enable statistics printing in Atree. First set Statistics_Enabled\n+   --       in gen_il-gen.adb to True, then rebuild, then run the compiler\n+   --       with -gnatd.A. You might want to apply \"sort -nr\" to parts of the\n+   --       output.\n+\n    --  d.B  Generate a bug box when we see an abort_statement, even though\n    --       there is no bug. Useful for testing Comperr.Compiler_Abort: write\n    --       some code containing an abort_statement, and compile it with\n@@ -992,6 +997,13 @@ package body Debug is\n    --       a call to routine Ada.Synchronous_Task_Control.Suspend_Until_True\n    --       or Ada.Synchronous_Barriers.Wait_For_Release.\n \n+   --  d_t  In the LLVM-based CCG, do an additional dump of the LLVM IR\n+   --       after the pass that does transformations to the IR into a\n+   --       filename ending with .trans.ll.\n+\n+   --  d_u  In the LLVM-based CCG, dump flows, both when originally created\n+   --       and after transformations.\n+\n    --  d_v  Enable additional checks and debug printouts in Atree\n \n    --  d_x  The compiler does not expand in line the Image attribute for user-\n@@ -1015,6 +1027,9 @@ package body Debug is\n    --       it is checked, and the progress of the recursive trace through\n    --       elaboration calls at compile time.\n \n+   --  d_R  In the LLVM backend, output the internal representation of\n+   --       each record\n+\n    --  d_T  The compiler outputs trace information to standard output whenever\n    --       an invocation path is recorded.\n \n@@ -1101,6 +1116,10 @@ package body Debug is\n    --       issues (e.g., assuming that a low bound of an array parameter\n    --       of an unconstrained subtype belongs to the index subtype).\n \n+   --  d.8  By default calls to expression functions are always inlined.\n+   --       This debug flag turns off this behavior, making them subject\n+   --       to the usual inlining heuristics of the code generator.\n+\n    --  d.9  Disable build-in-place for function calls returning nonlimited\n    --       types.\n "}, {"sha": "1a07ec6006ced0f475a641c06c84cd5d97d428ff", "filename": "gcc/ada/debug.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdebug.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdebug.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "9ed193914a83cfdaf249ac5d5f5ae287bd0642f9", "filename": "gcc/ada/debug_a.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdebug_a.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdebug_a.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug_a.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "427d4a3f4ae3aad5f1cbcaa4edc0073452f152f2", "filename": "gcc/ada/debug_a.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdebug_a.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdebug_a.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug_a.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "7743ef8b5f437cbe6858bd1c55cd6af65e979f2f", "filename": "gcc/ada/doc/gnat_rm.rst", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdoc%2Fgnat_rm.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdoc%2Fgnat_rm.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm.rst?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -55,6 +55,7 @@ GNAT Reference Manual\n    gnat_rm/specialized_needs_annexes\n    gnat_rm/implementation_of_specific_ada_features\n    gnat_rm/implementation_of_ada_2012_features\n+   gnat_rm/security_hardening_features\n    gnat_rm/obsolescent_features\n    gnat_rm/compatibility_and_porting_guide\n "}, {"sha": "9defee818aca366caeae2bd18348313cd50bdb15", "filename": "gcc/ada/doc/gnat_rm/about_this_guide.rst", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fabout_this_guide.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fabout_this_guide.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fabout_this_guide.rst?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -96,6 +96,9 @@ This reference manual contains the following chapters:\n * :ref:`Implementation_of_Ada_2012_Features`, describes the status of the\n   GNAT implementation of the Ada 2012 language standard.\n \n+* :ref:`Security_Hardening_Features` documents GNAT extensions aimed\n+  at security hardening.\n+\n * :ref:`Obsolescent_Features` documents implementation dependent features,\n   including pragmas and attributes, which are considered obsolescent, since\n   there are other preferred ways of achieving the same results. These"}, {"sha": "c5c7dfb9fbc4307460c5ab6f4510b97c07ad1607", "filename": "gcc/ada/doc/gnat_rm/implementation_defined_characteristics.rst", "status": "modified", "additions": 385, "deletions": 317, "changes": 702, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_characteristics.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_characteristics.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_characteristics.rst?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -53,7 +53,8 @@ Any *code_statement* can potentially cause external interactions.\n See separate section on source representation.\n \n *\n-  \"The control functions allowed in comments.  See 2.1(14).\"\n+  \"The semantics of an Ada program whose text is not in\n+   Normalization Form C.  See 2.1(4).\"\n \n See separate section on source representation.\n \n@@ -86,14 +87,14 @@ parameter, checks that the optimization flag is set, and aborts if it is\n not.\n \n *\n-  \"The sequence of characters of the value returned by\n-  ``S'Image`` when some of the graphic characters of\n-  ``S'Wide_Image`` are not defined in ``Character``.  See\n-  3.5(37).\"\n+  \"The message string associated with the Assertion_Error exception raised\n+  by the failure of a predicate check if there is no applicable\n+  Predicate_Failure aspect.  See 3.2.4(31).\"\n \n-The sequence of characters is as defined by the wide character encoding\n-method used for the source.  See section on source representation for\n-further details.\n+In the case of a Dynamic_Predicate aspect, the string is\n+\"Dynamic_Predicate failed at <source position>\", where\n+\"<source position>\" might be something like \"foo.adb:123\".\n+The Static_Predicate case is handled analogously.\n \n *\n   \"The predefined integer types declared in\n@@ -146,12 +147,12 @@ Type                   Representation\n                        IEEE 80-bit Extended on x86 architecture\n ====================== ===============================================\n \n-The default rounding mode specified by the IEEE 754 Standard is assumed for\n-static computations, i.e. round to nearest, ties to even. The input routines\n-yield correctly rounded values for Short_Float, Float and Long_Float at least.\n-The output routines can compute up to twice as many exact digits as the value\n-of ``T'Digits`` for any type, for example 30 digits for Long_Float; if more\n-digits are requested, zeros are printed.\n+The default rounding mode specified by the IEEE 754 Standard is assumed both\n+for static and dynamic computations (that is, round to nearest, ties to even).\n+The input routines yield correctly rounded values for Short_Float, Float, and\n+Long_Float at least. The output routines can compute up to twice as many exact\n+digits as the value of ``T'Digits`` for any type, for example 30 digits for\n+Long_Float; if more digits are requested, zeros are printed.\n \n *\n   \"The small of an ordinary fixed point type.  See 3.5.9(8).\"\n@@ -191,25 +192,80 @@ small must lie in 1.0E-38 .. 1.0E+38 and the digits in 1 .. 38.\n Block numbers of the form :samp:`B{nnn}`, where *nnn* is a\n decimal integer are allocated.\n \n+*\n+  \"The sequence of characters of the value returned by Tags.Expanded_Name\n+  (respectively, Tags.Wide_Expanded_Name) when some of the graphic\n+  characters of Tags.Wide_Wide_Expanded_Name are not defined in Character\n+  (respectively, Wide_Character).  See 3.9(10.1).\"\n+\n+This is handled in the same way as the implementation-defined behavior\n+referenced in A.4.12(34).\n+\n *\n   \"Implementation-defined attributes.  See 4.1.4(12).\"\n \n See :ref:`Implementation_Defined_Attributes`.\n \n+*\n+  \"The value of the parameter to Empty for some container aggregates.\n+  See 4.3.5(40).\"\n+\n+As per the suggestion given in the Annotated Ada RM, the default value\n+of the formal parameter is used if one exists and zero is used otherwise.\n+\n+*\n+  \"The maximum number of chunks for a parallel reduction expression without\n+  a chunk_specification.  See 4.5.10(21).\"\n+\n+Feature unimplemented.\n+\n+*\n+  \"Rounding of real static expressions which are exactly half-way between\n+  two machine numbers.  See 4.9(38).\"\n+\n+Round to even is used in all such cases.\n+\n+*\n+  \"The maximum number of chunks for a parallel generalized iterator without\n+   a chunk_specification.  See 5.5.2(10).\"\n+\n+Feature unimplemented.\n+\n+*\n+  \"The number of chunks for an array component iterator.  See 5.5.2(11).\"\n+\n+Feature unimplemented.\n+\n+*\n+  \"Any extensions of the Global aspect.  See 6.1.2(43).\"\n+\n+Feature unimplemented.\n+\n+*\n+  \"The circumstances the implementation passes in the null value for a view\n+  conversion of an access type used as an out parameter.  See 6.4.1(19).\"\n+\n+Difficult to characterize.\n+\n+*\n+  \"Any extensions of the Default_Initial_Condition aspect.  See 7.3.3(11).\"\n+\n+SPARK allows specifying *null* as the Default_Initial_Condition\n+aspect of a type. See the SPARK reference manual for further details.\n+\n *\n   \"Any implementation-defined time types.  See 9.6(6).\"\n \n There are no implementation-defined time types.\n \n *\n-  \"The time base associated with relative delays.\"\n+  \"The time base associated with relative delays.  See 9.6(20).\"\n \n See 9.6(20).  The time base used is that provided by the C library\n function ``gettimeofday``.\n \n *\n-  \"The time base of the type ``Calendar.Time``.  See\n-  9.6(23).\"\n+  \"The time base of the type ``Calendar.Time``.  See 9.6(23).\"\n \n The time base used is that provided by the C library function\n ``gettimeofday``.\n@@ -229,13 +285,15 @@ setting for local time, as accessed by the C library function\n There are no such limits.\n \n *\n-  \"Whether or not two non-overlapping parts of a composite\n-  object are independently addressable, in the case where packing, record\n-  layout, or ``Component_Size`` is specified for the object.  See\n-  9.10(1).\"\n+  \"The result of Calendar.Formatting.Image if its argument represents more\n+   than 100 hours.  See 9.6.1(86).\"\n+\n+Calendar.Time_Error is raised.\n+\n+*\n+  \"Implementation-defined conflict check policies.  See 9.10.1(5).\"\n \n-Separate components are independently addressable if they do not share\n-overlapping storage units.\n+There are no implementation-defined conflict check policies.\n \n *\n   \"The representation for a compilation.  See 10.1(2).\"\n@@ -281,9 +339,8 @@ options, refer to *GNAT Make Program gnatmake* in the\n :title:`GNAT User's Guide`.\n \n *\n-  \"The implementation-defined means, if any, of specifying\n-  which compilation units are needed by a given compilation unit.  See\n-  10.2(2).\"\n+  \"The implementation-defined means, if any, of specifying which compilation\n+  units are needed by a given compilation unit.  See 10.2(2).\"\n \n The units needed by a given compilation unit are as defined in\n the Ada Reference Manual section 10.2(2-6).  There are no\n@@ -298,17 +355,13 @@ The main program is designated by providing the name of the\n corresponding :file:`ALI` file as the input parameter to the binder.\n \n *\n-  \"The order of elaboration of *library_items*.  See\n-  10.2(18).\"\n+  \"The order of elaboration of *library_items*.  See 10.2(18).\"\n \n The first constraint on ordering is that it meets the requirements of\n Chapter 10 of the Ada Reference Manual.  This still leaves some\n-implementation dependent choices, which are resolved by first\n-elaborating bodies as early as possible (i.e., in preference to specs\n-where there is a choice), and second by evaluating the immediate with\n-clauses of a unit to determine the probably best choice, and\n-third by elaborating in alphabetical order of unit names\n-where a choice still remains.\n+implementation-dependent choices, which are resolved by analyzing\n+the elaboration code of each unit and identifying implicit\n+elaboration-order dependencies.\n \n *\n   \"Parameter passing and function return for the main\n@@ -320,13 +373,12 @@ value is the return code of the program (overriding any value that\n may have been set by a call to ``Ada.Command_Line.Set_Exit_Status``).\n \n *\n-  \"The mechanisms for building and running partitions.  See\n-  10.2(24).\"\n+  \"The mechanisms for building and running partitions.  See 10.2(24).\"\n \n-GNAT itself supports programs with only a single partition.  The GNATDIST\n+GNAT itself supports programs with only a single partition. The GNATDIST\n tool provided with the GLADE package (which also includes an implementation\n of the PCS) provides a completely flexible method for building and running\n-programs consisting of multiple partitions.  See the separate GLADE manual\n+programs consisting of multiple partitions. See the separate GLADE manual\n for details.\n \n *\n@@ -340,12 +392,11 @@ See separate section on compilation model.\n   implementation.  See 10.2(28).\"\n \n Passive partitions are supported on targets where shared memory is\n-provided by the operating system.  See the GLADE reference manual for\n+provided by the operating system. See the GLADE reference manual for\n further details.\n \n *\n-  \"The information returned by ``Exception_Message``.  See\n-  11.4.1(10).\"\n+  \"The information returned by ``Exception_Message``.  See 11.4.1(10).\"\n \n Exception message returns the null string unless a specific message has\n been passed by the program.\n@@ -390,6 +441,38 @@ where\n      The line terminator sequence at the end of each line, including\n      the last line is a single ``LF`` character (``16#0A#``).\n \n+*\n+  \"The sequence of characters of the value returned by\n+  Exceptions.Exception_Name (respectively, Exceptions.Wide_Exception_Name)\n+  when some of the graphic characters of Exceptions.Wide_Wide_Exception_Name\n+  are not defined in Character (respectively, Wide_Character).\n+  See 11.4.1(12.1).\"\n+\n+This is handled in the same way as the implementation-defined behavior\n+referenced in A.4.12(34).\n+\n+*\n+  \"The information returned by Exception_Information.  See 11.4.1(13).\"\n+\n+The exception name and the source location at which the exception was\n+raised are included.\n+\n+*\n+  \"Implementation-defined policy_identifiers and assertion_aspect_marks\n+  allowed in a pragma Assertion_Policy.  See 11.4.2(9).\"\n+\n+Implementation-defined assertion_aspect_marks include Assert_And_Cut,\n+Assume, Contract_Cases, Debug, Ghost, Initial_Condition, Loop_Invariant,\n+Loop_Variant, Postcondition, Precondition, Predicate, Refined_Post,\n+Statement_Assertions, and Subprogram_Variant. Implementation-defined\n+policy_identifiers include Ignore and Suppressible.\n+\n+*\n+  \"The default assertion policy.  See 11.4.2(10).\"\n+\n+The default assertion policy is Ignore, although this can be overridden\n+via compiler switches such as \"-gnata\".\n+\n *\n   \"Implementation-defined check names.  See 11.5(27).\"\n \n@@ -400,28 +483,54 @@ program can add implementation-defined check names by means of the pragma\n Check_Name. See the description of pragma ``Suppress`` for full details.\n \n *\n-  \"The interpretation of each aspect of representation.  See\n-  13.1(20).\"\n+  \"Existence and meaning of second parameter of pragma Unsuppress.\n+  See 11.5(27.1).\"\n+\n+The legality rules for and semantics of the second parameter of pragma\n+Unsuppress match those for the second argument of pragma Suppress.\n+\n+*\n+  \"The cases that cause conflicts between the representation of the\n+   ancestors of a type_declaration.  See 13.1(13.1).\"\n+\n+No such cases exist.\n+\n+*\n+  \"The interpretation of each representation aspect.  See 13.1(20).\"\n \n See separate section on data representations.\n \n *\n-  \"Any restrictions placed upon representation items.  See\n-  13.1(20).\"\n+  \"Any restrictions placed upon the specification of representation aspects.\n+  See 13.1(20).\"\n \n See separate section on data representations.\n \n *\n-  \"The meaning of ``Size`` for indefinite subtypes.  See\n-  13.3(48).\"\n+  \"Implementation-defined aspects, including the syntax for specifying\n+  such aspects and the legality rules for such aspects.  See 13.1.1(38).\"\n+\n+See :ref:`Implementation_Defined_Aspects`.\n+\n+*\n+  \"The set of machine scalars.  See 13.3(8.1).\"\n+\n+See separate section on data representations.\n+\n+*\n+  \"The meaning of ``Size`` for indefinite subtypes.  See 13.3(48).\"\n+\n+The Size attribute of an indefinite subtype is not less than the Size\n+attribute of any object of that type.\n+\n+*\n+  \"The meaning of Object_Size for indefinite subtypes.  See 13.3(58).\"\n \n-Size for an indefinite subtype is the maximum possible size, except that\n-for the case of a subprogram parameter, the size of the parameter object\n-is the actual size.\n+The Object_Size attribute of an indefinite subtype is not less than the\n+Object_Size attribute of any object of that type.\n \n *\n-  \"The default external representation for a type tag.  See\n-  13.3(75).\"\n+  \"The default external representation for a type tag.  See 13.3(75).\"\n \n The default external representation for a type tag is the fully expanded\n name of the type in upper case letters.\n@@ -448,27 +557,32 @@ implementation, so no non-default bit ordering is supported.  The default\n bit ordering corresponds to the natural endianness of the target architecture.\n \n *\n-  \"The contents of the visible part of package ``System``\n-  and its language-defined children.  See 13.7(2).\"\n+  \"The contents of the visible part of package ``System``.  See 13.7(2).\"\n \n-See the definition of these packages in files :file:`system.ads` and\n-:file:`s-stoele.ads`. Note that two declarations are added to package\n-System.\n+See the definition of package System in :file:`system.ads`.\n+Note that two declarations are added to package System.\n \n .. code-block:: ada\n \n   Max_Priority           : constant Positive := Priority'Last;\n   Max_Interrupt_Priority : constant Positive := Interrupt_Priority'Last;\n \n *\n-  \"The contents of the visible part of package\n-  ``System.Machine_Code``, and the meaning of\n-  *code_statements*.  See 13.8(7).\"\n+  \"The range of Storage_Elements.Storage_Offset, the modulus of\n+  Storage_Elements.Storage_Element, and the declaration of\n+  Storage_Elements.Integer_Address.  See 13.7.1(11).\"\n+\n+See the definition of package System.Storage_Elements in :file:`s-stoele.ads`.\n+\n+*\n+  \"The contents of the visible part of package ``System.Machine_Code``,\n+  and the meaning of *code_statements*.  See 13.8(7).\"\n \n See the definition and documentation in file :file:`s-maccod.ads`.\n \n *\n-  \"The effect of unchecked conversion.  See 13.9(11).\"\n+  \"The result of unchecked conversion for instances with scalar result\n+  types whose result is not defined by the language.  See 13.9(11).\"\n \n Unchecked conversion between types of the same size\n results in an uninterpreted transmission of the bits from one type\n@@ -485,84 +599,63 @@ greater than the source alignment, then a copy of the result is\n made with appropriate alignment\n \n *\n-  \"The semantics of operations on invalid representations.\n-  See 13.9.2(10-11).\"\n-\n-For assignments and other operations where the use of invalid values cannot\n-result in erroneous behavior, the compiler ignores the possibility of invalid\n-values. An exception is raised at the point where an invalid value would\n-result in erroneous behavior. For example executing:\n+  \"The result of unchecked conversion for instances with nonscalar result\n+  types whose result is not defined by the language.  See 13.9(11).\"\n \n-.. code-block:: ada\n-\n-  procedure invalidvals is\n-    X : Integer := -1;\n-    Y : Natural range 1 .. 10;\n-    for Y'Address use X'Address;\n-    Z : Natural range 1 .. 10;\n-    A : array (Natural range 1 .. 10) of Integer;\n-  begin\n-    Z := Y;     -- no exception\n-    A (Z) := 3; -- exception raised;\n-  end;\n-\n-As indicated, an exception is raised on the array assignment, but not\n-on the simple assignment of the invalid negative value from Y to Z.\n+See preceding definition for the scalar result case.\n \n *\n-  \"The manner of choosing a storage pool for an access type\n-  when ``Storage_Pool`` is not specified for the type.  See 13.11(17).\"\n+  \"Whether or not the implementation provides user-accessible\n+  names for the standard pool type(s).  See 13.11(17).\"\n \n There are 3 different standard pools used by the compiler when\n ``Storage_Pool`` is not specified depending whether the type is local\n to a subprogram or defined at the library level and whether\n-``Storage_Size``is specified or not.  See documentation in the runtime\n+``Storage_Size``is specified or not. See documentation in the runtime\n library units ``System.Pool_Global``, ``System.Pool_Size`` and\n ``System.Pool_Local`` in files :file:`s-poosiz.ads`,\n :file:`s-pooglo.ads` and :file:`s-pooloc.ads` for full details on the\n-default pools used.\n-\n-*\n-  \"Whether or not the implementation provides user-accessible\n-  names for the standard pool type(s).  See 13.11(17).\"\n-\n-See documentation in the sources of the run time mentioned in the previous\n-paragraph.  All these pools are accessible by means of `with`\\ ing\n+default pools used.  All these pools are accessible by means of `with`\\ ing\n these units.\n \n *\n-  \"The meaning of ``Storage_Size``.  See 13.11(18).\"\n+  \"The meaning of ``Storage_Size`` when neither the Storage_Size nor the\n+  Storage_Pool is specified for an access type.  See 13.11(18).\"\n \n ``Storage_Size`` is measured in storage units, and refers to the\n total space available for an access type collection, or to the primary\n stack space for a task.\n \n *\n-  \"Implementation-defined aspects of storage pools.  See\n-  13.11(22).\"\n+  \"The effect of specifying aspect Default_Storage_Pool on an instance\n+  of a language-defined generic unit.  See 13.11.3(5).\"\n \n-See documentation in the sources of the run time mentioned in the\n-paragraph about standard storage pools above\n-for details on GNAT-defined aspects of storage pools.\n+Instances of language-defined generic units are treated the same as other\n+instances with respect to the Default_Storage_Pool aspect.\n \n *\n-  \"The set of restrictions allowed in a pragma\n-  ``Restrictions``.  See 13.12(7).\"\n+  \"Implementation-defined restrictions allowed in a pragma\n+  ``Restrictions``.  See 13.12(8.7).\"\n \n See :ref:`Standard_and_Implementation_Defined_Restrictions`.\n \n *\n   \"The consequences of violating limitations on\n   ``Restrictions`` pragmas.  See 13.12(9).\"\n \n-Restrictions that can be checked at compile time result in illegalities\n-if violated.  Currently there are no other consequences of violating\n-restrictions.\n+Restrictions that can be checked at compile time are enforced at\n+compile time; violations are illegal. For other restrictions, any\n+violation during program execution results in erroneous execution.\n \n *\n-  \"The representation used by the ``Read`` and\n-  ``Write`` attributes of elementary types in terms of stream\n-  elements.  See 13.13.2(9).\"\n+  \"Implementation-defined usage profiles allowed in a pragma Profile.\n+  See 13.12(15).\"\n+\n+See :ref:`Implementation_Defined_Pragmas`.\n+\n+*\n+  \"The contents of the stream elements read and written by the Read and\n+  Write attributes of elementary types.  See 13.13.2(9).\"\n \n The representation is the in-memory representation of the base type of\n the type, using the number of bits corresponding to the\n@@ -575,12 +668,29 @@ the type, using the number of bits corresponding to the\n See items describing the integer and floating-point types supported.\n \n *\n-  \"The string returned by ``Character_Set_Version``.\n-  See A.3.5(3).\"\n+  \"The values returned by Strings.Hash.  See A.4.9(3).\"\n+\n+This hash function has predictable collisions and is subject to\n+equivalent substring attacks. It is not suitable for construction of a\n+hash table keyed on possibly malicious user input.\n+\n+*\n+  \"The value returned by a call to a Text_Buffer Get procedure if any\n+  character in the returned sequence is not defined in Character.\n+  See A.4.12(34).\"\n+\n+The contents of a buffer is represented internally as a UTF_8 string.\n+The value return by Text_Buffer.Get is the result of passing that\n+UTF_8 string to UTF_Encoding.Strings.Decode.\n+\n+*\n+  \"The value returned by a call to a Text_Buffer Wide_Get procedure if\n+  any character in the returned sequence is not defined in Wide_Character.\n+  See A.4.12(34).\"\n \n-``Ada.Wide_Characters.Handling.Character_Set_Version`` returns\n-the string \"Unicode 4.0\", referring to version 4.0 of the\n-Unicode specification.\n+The contents of a buffer is represented internally as a UTF_8 string.\n+The value return by Text_Buffer.Wide_Get is the result of passing that\n+UTF_8 string to UTF_Encoding.Wide_Strings.Decode.\n \n *\n   \"The accuracy actually achieved by the elementary\n@@ -609,14 +719,6 @@ Maximum image width is 6864, see library file :file:`s-rannum.ads`.\n \n Maximum image width is 6864, see library file :file:`s-rannum.ads`.\n \n-*\n-  \"The algorithms for random number generation.  See\n-  A.5.2(32).\"\n-\n-The algorithm is the Mersenne Twister, as documented in the source file\n-:file:`s-rannum.adb`. This version of the algorithm has a period of\n-2**19937-1.\n-\n *\n   \"The string representation of a random number generator's\n   state.  See A.5.2(38).\"\n@@ -625,33 +727,17 @@ The value returned by the Image function is the concatenation of\n the fixed-width decimal representations of the 624 32-bit integers\n of the state vector.\n \n-*\n-  \"The minimum time interval between calls to the\n-  time-dependent Reset procedure that are guaranteed to initiate different\n-  random number sequences.  See A.5.2(45).\"\n-\n-The minimum period between reset calls to guarantee distinct series of\n-random numbers is one microsecond.\n-\n *\n   \"The values of the ``Model_Mantissa``,\n   ``Model_Emin``, ``Model_Epsilon``, ``Model``,\n   ``Safe_First``, and ``Safe_Last`` attributes, if the Numerics\n   Annex is not supported.  See A.5.3(72).\"\n \n-Run the compiler with *-gnatS* to produce a listing of package\n-``Standard``, has the values of all numeric attributes.\n+Running the compiler with *-gnatS* to produce a listing of package\n+``Standard`` displays the values of these attributes.\n \n *\n-  \"Any implementation-defined characteristics of the\n-  input-output packages.  See A.7(14).\"\n-\n-There are no special implementation defined characteristics for these\n-packages.\n-\n-*\n-  \"The value of ``Buffer_Size`` in ``Storage_IO``.  See\n-  A.9(10).\"\n+  \"The value of ``Buffer_Size`` in ``Storage_IO``.  See A.9(10).\"\n \n All type representations are contiguous, and the ``Buffer_Size`` is\n the value of ``type'Size`` rounded up to the next storage unit\n@@ -662,16 +748,21 @@ boundary.\n   standard error See A.10(5).\"\n \n These files are mapped onto the files provided by the C streams\n-libraries.  See source file :file:`i-cstrea.ads` for further details.\n+libraries. See source file :file:`i-cstrea.ads` for further details.\n \n *\n-  \"The accuracy of the value produced by ``Put``.  See\n-  A.10.9(36).\"\n+  \"The accuracy of the value produced by ``Put``.  See A.10.9(36).\"\n \n If more digits are requested in the output than are represented by the\n precision of the value, zeroes are output in the corresponding least\n significant digit positions.\n \n+*\n+  \"Current size for a stream file for which positioning is not supported.\n+  See A.12.1(1.1).\"\n+\n+Positioning is supported.\n+\n *\n   \"The meaning of ``Argument_Count``, ``Argument``, and\n   ``Command_Name``.  See A.15(1).\"\n@@ -680,80 +771,66 @@ These are mapped onto the ``argv`` and ``argc`` parameters of the\n main program in the natural manner.\n \n *\n-  \"The interpretation of the ``Form`` parameter in procedure\n-  ``Create_Directory``.  See A.16(56).\"\n+  \"The interpretation of file names and directory names.  See A.16(46).\"\n \n-The ``Form`` parameter is not used.\n+These names are interpreted consistently with the underlying file system.\n \n *\n-  \"The interpretation of the ``Form`` parameter in procedure\n-  ``Create_Path``.  See A.16(60).\"\n+  \"The maxium value for a file size in Directories.  See A.16(87).\"\n \n-The ``Form`` parameter is not used.\n+Directories.File_Size'Last is equal to Long_Long_Integer'Last .\n \n *\n-  \"The interpretation of the ``Form`` parameter in procedure\n-  ``Copy_File``.  See A.16(68).\"\n+  \"The result for Directories.Size for a directory or special file.\n+   See A.16(93).\"\n \n-The ``Form`` parameter is case-insensitive.\n-Two fields are recognized in the ``Form`` parameter::\n+Name_Error is raised.\n \n-  *preserve=<value>*\n-  *mode=<value>*\n+*\n+  \"The result for Directories.Modification_Time for a directory or special file.\n+   See A.16(93).\"\n \n-<value> starts immediately after the character '=' and ends with the\n-character immediately preceding the next comma (',') or with the last\n-character of the parameter.\n+Name_Error is raised.\n \n-The only possible values for preserve= are:\n+*\n+  \"The interpretation of a nonnull search pattern in Directories.\n+   See A.16(104).\"\n \n-================== ===================================================================\n-Value              Meaning\n-================== ===================================================================\n-*no_attributes*    Do not try to preserve any file attributes. This is the\n-                   default if no preserve= is found in Form.\n-*all_attributes*   Try to preserve all file attributes (timestamps, access rights).\n-*timestamps*       Preserve the timestamp of the copied file, but not the other\n-                   file attributes.\n-================== ===================================================================\n+When the ``Pattern`` parameter is not the null string, it is interpreted\n+according to the syntax of regular expressions as defined in the\n+``GNAT.Regexp`` package.\n \n-The only possible values for mode= are:\n+See :ref:`GNAT.Regexp_(g-regexp.ads)`.\n \n-============== ===============================================================================\n-Value          Meaning\n-============== ===============================================================================\n-*copy*         Only do the copy if the destination file does not already exist.\n-               If it already exists, Copy_File fails.\n-*overwrite*    Copy the file in all cases. Overwrite an already existing destination file.\n-*append*       Append the original file to the destination file. If the destination file\n-               does not exist, the destination file is a copy of the source file.\n-               When mode=append, the field preserve=, if it exists, is not taken into account.\n-============== ===============================================================================\n+*\n+  \"The results of a Directories search if the contents of the directory are\n+   altered while a search is in progress.  See A.16(110).\"\n \n-If the Form parameter includes one or both of the fields and the value or\n-values are incorrect, Copy_file fails with Use_Error.\n+The effect of a call to Get_Next_Entry is determined by the current\n+state of the directory.\n \n-Examples of correct Forms::\n+*\n+  \"The definition and meaning of an environment variable.  See A.17(1).\"\n \n-  Form => \"preserve=no_attributes,mode=overwrite\" (the default)\n-  Form => \"mode=append\"\n-  Form => \"mode=copy, preserve=all_attributes\"\n+This definition is determined by the underlying operating system.\n \n-Examples of incorrect Forms::\n+*\n+  \"The circumstances where an environment variable cannot be defined.\n+  See A.17(16).\"\n \n-  Form => \"preserve=junk\"\n-  Form => \"mode=internal, preserve=timestamps\"\n+  There are no such implementation-defined circumstances.\n \n *\n-  \"The interpretation of the ``Pattern`` parameter, when not the null string,\n-  in the ``Start_Search`` and ``Search`` procedures.\n-  See A.16(104) and A.16(112).\"\n+  \"Environment names for which Set has the effect of Clear.  See A.17(17).\"\n \n-When the ``Pattern`` parameter is not the null string, it is interpreted\n-according to the syntax of regular expressions as defined in the\n-``GNAT.Regexp`` package.\n+There are no such names.\n \n-See :ref:`GNAT.Regexp_(g-regexp.ads)`.\n+*\n+  \"The value of Containers.Hash_Type'Modulus. The value of\n+  Containers.Count_Type'Last.  See A.18.1(7).\"\n+\n+Containers.Hash_Type'Modulus is 2**32.\n+Containers.Count_Type'Last is 2**31 - 1.\n \n *\n   \"Implementation-defined convention names.  See B.1(11).\"\n@@ -806,9 +883,8 @@ Convention Name         Interpretation\n Link names are the actual names used by the linker.\n \n *\n-  \"The manner of choosing link names when neither the link\n-  name nor the address of an imported or exported entity is specified.  See\n-  B.1(36).\"\n+  \"The manner of choosing link names when neither the link name nor the\n+  address of an imported or exported entity is specified.  See B.1(36).\"\n \n The default linker name is that which would be assigned by the relevant\n external language, interpreting the Ada name as being in all lower case\n@@ -844,6 +920,12 @@ See files with prefix :file:`i-` in the distributed library.\n \n See files with prefix :file:`i-` in the distributed library.\n \n+*\n+  \"The definitions of certain types and constants in Interfaces.C.\n+  See B.3(41).\"\n+\n+See source file :file:`i-c.ads`.\n+\n *\n   \"The types ``Floating``, ``Long_Floating``,\n   ``Binary``, ``Long_Binary``, ``Decimal_ Element``, and\n@@ -865,44 +947,53 @@ COBOL                 Ada\n For initialization, see the file :file:`i-cobol.ads` in the distributed library.\n \n *\n-  \"Support for access to machine instructions.  See C.1(1).\"\n+  \"The types Fortran_Integer, Real, Double_Precision, and Character_Set\n+  in Interfaces.Fortran.  See B.5(17).\"\n \n-See documentation in file :file:`s-maccod.ads` in the distributed library.\n+See source file :file:`i-fortra.ads`. These types are derived, respectively,\n+from Integer, Float, Long_Float, and Character.\n \n *\n-  \"Implementation-defined aspects of access to machine\n-  operations.  See C.1(9).\"\n+  \"Implementation-defined intrinsic subprograms.  See C.1(1).\"\n \n-See documentation in file :file:`s-maccod.ads` in the distributed library.\n+See separate section on Intrinsic Subprograms.\n \n *\n-  \"Implementation-defined aspects of interrupts.  See C.3(2).\"\n+  \"Any restrictions on a protected procedure or its containing type when an\n+  aspect Attach_handler or Interrupt_Handler is specified.  See C.3.1(17).\"\n \n-Interrupts are mapped to signals or conditions as appropriate.  See\n-definition of unit\n-``Ada.Interrupt_Names`` in source file :file:`a-intnam.ads` for details\n-on the interrupts supported on a particular target.\n+There are no such restrictions.\n \n *\n-  \"Implementation-defined aspects of pre-elaboration.  See\n-  C.4(13).\"\n+  \"Any other forms of interrupt handler supported by the Attach_Handler and\n+  Interrupt_Handler aspects.  See C.3.1(19).\"\n \n-GNAT does not permit a partition to be restarted without reloading,\n-except under control of the debugger.\n+There are no such forms.\n \n *\n-  \"The semantics of pragma ``Discard_Names``.  See C.5(7).\"\n+  \"The semantics of some attributes and functions of an entity for which\n+   aspect Discard_Names is True.  See C.5(7).\"\n \n-Pragma ``Discard_Names`` causes names of enumeration literals to\n-be suppressed.  In the presence of this pragma, the Image attribute\n+If Discard_Names is True for an enumeration type, the Image attribute\n provides the image of the Pos of the literal, and Value accepts\n Pos values.\n \n-For tagged types, when pragmas ``Discard_Names`` and ``No_Tagged_Streams``\n-simultaneously apply, their Expanded_Name and External_Tag are initialized\n-with empty strings. This is useful to avoid exposing entity names at binary\n+If both of the aspects``Discard_Names`` and ``No_Tagged_Streams`` are true\n+for a tagged type, its Expanded_Name and External_Tag values are\n+empty strings. This is useful to avoid exposing entity names at binary\n level.\n \n+*\n+  \"The modulus and size of Test_and_Set_Flag.  See C.6.3(8).\"\n+\n+The modulus is 2**8. The size is 8.\n+\n+*\n+  \"The value used to represent the set value for Atomic_Test_and_Set.\n+  See C.6.3(10).\"\n+\n+The value is 1.\n+\n *\n   \"The result of the ``Task_Identification.Image``\n   attribute.  See C.7.1(7).\"\n@@ -939,32 +1030,11 @@ Protected entries or interrupt handlers can be executed by any\n convenient thread, so the value of ``Current_Task`` is undefined.\n \n *\n-  \"The effect of calling ``Current_Task`` from an entry\n-  body or interrupt handler.  See C.7.1(19).\"\n+  \"Granularity of locking for Task_Attributes.  See C.7.2(16).\"\n \n-When GNAT can determine statically that ``Current_Task`` is called directly in\n-the body of an entry (or barrier) then a warning is emitted and ``Program_Error``\n-is raised at run time. Otherwise, the effect of calling ``Current_Task`` from an\n-entry body or interrupt handler is to return the identification of the task\n-currently executing the code.\n-\n-*\n-  \"Implementation-defined aspects of\n-  ``Task_Attributes``.  See C.7.2(19).\"\n-\n-There are no implementation-defined aspects of ``Task_Attributes``.\n-\n-*\n-  \"Values of all ``Metrics``.  See D(2).\"\n-\n-The metrics information for GNAT depends on the performance of the\n-underlying operating system.  The sources of the run-time for tasking\n-implementation, together with the output from *-gnatG* can be\n-used to determine the exact sequence of operating systems calls made\n-to implement various tasking constructs.  Together with appropriate\n-information on the performance of the underlying operating system,\n-on the exact target in use, this information can be used to determine\n-the required metrics.\n+No locking is needed if the formal type Attribute has the size and\n+alignment of either Integer or System.Address and the bit representation\n+of Initial_Value is all zeroes. Otherwise, locking is performed.\n \n *\n   \"The declarations of ``Any_Priority`` and\n@@ -993,23 +1063,14 @@ and appropriate, these threads correspond to native threads of the\n underlying operating system.\n \n *\n-  \"Implementation-defined *policy_identifiers* allowed\n-  in a pragma ``Task_Dispatching_Policy``.  See D.2.2(3).\"\n-\n-There are no implementation-defined policy-identifiers allowed in this\n-pragma.\n-\n-*\n-  \"Implementation-defined aspects of priority inversion.  See\n-  D.2.2(16).\"\n+  \"Implementation-defined task dispatching policies.  See D.2.2(3).\"\n \n-Execution of a task cannot be preempted by the implementation processing\n-of delay expirations for lower priority tasks.\n+There are no implementation-defined task dispatching policies.\n \n *\n-  \"Implementation-defined task dispatching.  See D.2.2(18).\"\n+  \"The value of Default_Quantum in Dispatching.Round_Robin.  See D.2.5(4).\"\n \n-The policy is the same as that of the underlying threads implementation.\n+The value is 10 milliseconds.\n \n *\n   \"Implementation-defined *policy_identifiers* allowed\n@@ -1045,12 +1106,9 @@ The ceiling priority of internal protected objects is\n There are no implementation-defined queuing policies.\n \n *\n-  \"On a multiprocessor, any conditions that cause the\n-  completion of an aborted construct to be delayed later than what is\n-  specified for a single processor.  See D.6(3).\"\n+  \"Implementation-defined admission policies.  See D.4.1(1).\"\n \n-The semantics for abort on a multi-processor is the same as on a single\n-processor, there are no further delays.\n+There are no implementation-defined admission policies.\n \n *\n   \"Any operations that implicitly require heap storage\n@@ -1060,43 +1118,75 @@ The only operation that implicitly requires heap storage allocation is\n task creation.\n \n *\n-  \"What happens when a task terminates in the presence of\n-  pragma ``No_Task_Termination``. See D.7(15).\"\n+  \"When restriction No_Dynamic_CPU_Assignment applies to a partition, the\n+  processor on which a task with a CPU value of a Not_A_Specific_CPU will\n+  execute.  See D.7(10).\"\n+\n+Unknown.\n+\n+*\n+  \"When restriction No_Task_Termination applies to a partition, what happens\n+   when a task terminates.  See D.7(15.1).\"\n+\n+Execution is erroneous in that case.\n+\n+*\n+  \"The behavior when restriction Max_Storage_At_Blocking is violated.\n+   See D.7(17).\"\n+\n+Execution is erroneous in that case.\n+\n+*\n+  \"The behavior when restriction Max_Asynchronous_Select_Nesting is violated.\n+  See D.7(18).\"\n+\n+Execution is erroneous in that case.\n+\n+*\n+  \"The behavior when restriction Max_Tasks is violated.  See D.7(19).\"\n \n Execution is erroneous in that case.\n \n+* \"Whether the use of pragma Restrictions results in a reduction in program\n+   code or data size or execution time.  See D.7(20).\"\n+\n+   Yes it can, but the precise circumstances and properties of such reductions\n+   are difficult to characterize.\n+\n+*\n+  \"The value of Barrier_Limit'Last in Synchronous_Barriers.  See D.10.1(4).\"\n+\n+Synchronous_Barriers.Barrier_Limit'Last is Integer'Last .\n+\n *\n-  \"Implementation-defined aspects of pragma\n-  ``Restrictions``.  See D.7(20).\"\n+  \"When an aborted task that is waiting on a Synchronous_Barrier is aborted.\n+  See D.10.1(13).\"\n \n-There are no such implementation-defined aspects.\n+Difficult to characterize.\n \n *\n-  \"Implementation-defined aspects of package\n-  ``Real_Time``.  See D.8(17).\"\n+  \"The value of Min_Handler_Ceiling in Execution_Time.Group_Budgets.\n+   See D.14.2(7).\"\n \n-There are no implementation defined aspects of package ``Real_Time``.\n+See source file :file:`a-etgrbu.ads`.\n \n *\n-  \"Implementation-defined aspects of\n-  *delay_statements*.  See D.9(8).\"\n+  \"The value of CPU_Range'Last in System.Multiprocessors.  See D.16(4).\"\n \n-Any difference greater than one microsecond will cause the task to be\n-delayed (see D.9(7)).\n+See source file :file:`s-multip.ads`.\n \n *\n-  \"The upper bound on the duration of interrupt blocking\n-  caused by the implementation.  See D.12(5).\"\n+  \"The processor on which the environment task executes in the absence\n+  of a value for the aspect CPU.  See D.16(13).\"\n \n-The upper bound is determined by the underlying operating system.  In\n-no cases is it more than 10 milliseconds.\n+Unknown.\n \n *\n   \"The means for creating and executing distributed\n   programs.  See E(5).\"\n \n The GLADE package provides a utility GNATDIST for creating and executing\n-distributed programs.  See the GLADE reference manual for further details.\n+distributed programs. See the GLADE reference manual for further details.\n \n *\n   \"Any events that can result in a partition becoming\n@@ -1105,23 +1195,12 @@ distributed programs.  See the GLADE reference manual for further details.\n See the GLADE reference manual for full details on such events.\n \n *\n-  \"The scheduling policies, treatment of priorities, and\n-  management of shared resources between partitions in certain cases.  See\n-  E.1(11).\"\n+  \"The scheduling policies, treatment of priorities, and management of\n+  shared resources between partitions in certain cases.  See E.1(11).\"\n \n See the GLADE reference manual for full details on these aspects of\n multi-partition execution.\n \n-*\n-  \"Events that cause the version of a compilation unit to\n-  change.  See E.3(5).\"\n-\n-Editing the source file of a compilation unit, or the source files of\n-any units on which it is dependent in a significant way cause the version\n-to change.  No other actions cause the version number to change.  All changes\n-are significant except those which affect only layout, capitalization or\n-comments.\n-\n *\n   \"Whether the execution of the remote subprogram is\n   immediately aborted as a result of cancellation.  See E.4(13).\"\n@@ -1130,14 +1209,12 @@ See the GLADE reference manual for details on the effect of abort in\n a distributed application.\n \n *\n-  \"Implementation-defined aspects of the PCS.  See E.5(25).\"\n+  \"The range of type System.RPC.Partition_Id.  See E.5(14).\"\n \n-See the GLADE reference manual for a full description of all implementation\n-defined aspects of the PCS.\n+System.RPC.Partion_ID'Last is Integer'Last. See source file :file:`s-rpc.ads`.\n \n *\n-  \"Implementation-defined interfaces in the PCS.  See\n-  E.5(26).\"\n+  \"Implementation-defined interfaces in the PCS.  See E.5(26).\"\n \n See the GLADE reference manual for a full description of all\n implementation defined interfaces.\n@@ -1228,9 +1305,8 @@ properly generated.\n Not relevant, division is IEEE exact.\n \n *\n-  \"The definition of close result set, which determines the\n-  accuracy of certain fixed point multiplications and divisions.  See\n-  G.2.3(5).\"\n+  \"The definition of close result set, which determines the accuracy of\n+  certain fixed point multiplications and divisions.  See G.2.3(5).\"\n \n Operations in the close result set are performed using IEEE long format\n floating-point arithmetic.  The input operands are converted to\n@@ -1291,28 +1367,20 @@ IEEE infinite and Nan values are produced as appropriate.\n Information on those subjects is not yet available.\n \n *\n-  \"Information regarding bounded errors and erroneous\n-  execution.  See H.2(1).\"\n-\n-Information on this subject is not yet available.\n-\n-*\n-  \"Implementation-defined aspects of pragma\n-  ``Inspection_Point``.  See H.3.2(8).\"\n+  \"The accuracy requirements for the subprograms Solve, Inverse,\n+   Determinant, Eigenvalues and Eigensystem for type Real_Matrix.\n+   See G.3.1(81).\"\n \n-Pragma ``Inspection_Point`` ensures that the variable is live and can\n-be examined by the debugger at the inspection point.\n+Information on those subjects is not yet available.\n \n *\n-  \"Implementation-defined aspects of pragma\n-  ``Restrictions``.  See H.4(25).\"\n+  \"The accuracy requirements for the subprograms Solve, Inverse,\n+   Determinant, Eigenvalues and Eigensystem for type Complex_Matrix.\n+   See G.3.2(149).\"\n \n-There are no implementation-defined aspects of pragma ``Restrictions``.  The\n-use of pragma ``Restrictions [No_Exceptions]`` has no effect on the\n-generated code.  Checks must suppressed by use of pragma ``Suppress``.\n+Information on those subjects is not yet available.\n \n *\n-  \"Any restrictions on pragma ``Restrictions``.  See\n-  H.4(27).\"\n+  \"The consequences of violating No_Hidden_Indirect_Globals.  See H.4(23.9).\"\n \n-There are no restrictions on pragma ``Restrictions``.\n+Execution is erroneous in that case."}, {"sha": "fbd60eba12693d99afc8d558655a0057634f2ba1", "filename": "gcc/ada/doc/gnat_rm/implementation_defined_pragmas.rst", "status": "modified", "additions": 92, "deletions": 76, "changes": 168, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fimplementation_defined_pragmas.rst?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -1003,39 +1003,6 @@ Compile_Time_Warning resulted in a fatal error. Now the compiler always emits\n a warning. You can use :ref:`Compile_Time_Error` to force the generation of\n an error.\n \n-Pragma Compiler_Unit\n-====================\n-\n-Syntax:\n-\n-\n-.. code-block:: ada\n-\n-  pragma Compiler_Unit;\n-\n-\n-This pragma is obsolete. It is equivalent to Compiler_Unit_Warning. It is\n-retained so that old versions of the GNAT run-time that use this pragma can\n-be compiled with newer versions of the compiler.\n-\n-Pragma Compiler_Unit_Warning\n-============================\n-\n-Syntax:\n-\n-\n-.. code-block:: ada\n-\n-  pragma Compiler_Unit_Warning;\n-\n-\n-This pragma is intended only for internal use in the GNAT run-time library.\n-It indicates that the unit is used as part of the compiler build. The effect\n-is to generate warnings for the use of constructs (for example, conditional\n-expressions) that would cause trouble when bootstrapping using an older\n-version of GNAT. For the exact list of restrictions, see the compiler sources\n-and references to Check_Compiler_Unit.\n-\n Pragma Complete_Representation\n ==============================\n \n@@ -2268,10 +2235,32 @@ of GNAT specific extensions are recognized as follows:\n   set shall be a proper subset of the second (and the later alternative\n   will not be executed if the earlier alternative \"matches\"). All possible\n   values of the composite type shall be covered. The composite type of the\n-  selector shall be a nonlimited untagged (but possibly discriminated)\n-  record type, all of whose subcomponent subtypes are either static discrete\n-  subtypes or record types that meet the same restrictions. Support for arrays\n-  is planned, but not yet implemented.\n+  selector shall be an array or record type that is neither limited\n+  class-wide.\n+\n+  If a subcomponent's subtype does not meet certain restrictions, then\n+  the only value that can be specified for that subcomponent in a case\n+  choice expression is a \"box\" component association (which matches all\n+  possible values for the subcomponent). This restriction applies if\n+\n+  - the component subtype is not a record, array, or discrete type; or\n+\n+  - the component subtype is subject to a non-static constraint or\n+    has a predicate; or\n+\n+  - the component type is an enumeration type that is subject to an\n+    enumeration representation clause; or\n+\n+  - the component type is a multidimensional array type or an\n+    array type with a nonstatic index subtype.\n+\n+  Support for casing on arrays (and on records that contain arrays) is\n+  currently subject to some restrictions. Non-positional\n+  array aggregates are not supported as (or within) case choices. Likewise\n+  for array type and subtype names. The current implementation exceeds\n+  compile-time capacity limits in some annoyingly common scenarios; the\n+  message generated in such cases is usually \"Capacity exceeded in compiling\n+  case statement with composite selector type\".\n \n   In addition, pattern bindings are supported. This is a mechanism\n   for binding a name to a component of a matching value for use within\n@@ -2280,7 +2269,8 @@ of GNAT specific extensions are recognized as follows:\n   \"is <identifier>\". In the special case of a \"box\" component association,\n   the identifier may instead be provided within the box. Either of these\n   indicates that the given identifer denotes (a constant view of) the matching\n-  subcomponent of the case selector.\n+  subcomponent of the case selector. Binding is not yet supported for arrays\n+  or subcomponents thereof.\n \n   Consider this example (which uses type Rec from the previous example):\n \n@@ -2378,6 +2368,30 @@ of GNAT specific extensions are recognized as follows:\n   name, preference is given to the component in a selected_component\n   (as is currently the case for tagged types with such component names).\n \n+* Expression defaults for generic formal functions\n+\n+  The declaration of a generic formal function is allowed to specify\n+  an expression as a default, using the syntax of an expression function.\n+\n+  Here is an example of this feature:\n+\n+  .. code-block:: ada\n+\n+      generic\n+         type T is private;\n+         with function Copy (Item : T) return T is (Item); -- Defaults to Item\n+      package Stacks is\n+\n+         type Stack is limited private;\n+\n+         procedure Push (S : in out Stack; X : T); -- Calls Copy on X\n+\n+         function Pop (S : in out Stack) return T; -- Calls Copy to return item\n+\n+      private\n+         -- ...\n+      end Stacks;\n+\n .. _Pragma-Extensions_Visible:\n \n Pragma Extensions_Visible\n@@ -4908,43 +4922,6 @@ aspects, but is prepared to ignore the pragmas. The assertion\n policy that controls this pragma is ``Post'Class``, not\n ``Post_Class``.\n \n-Pragma Rename_Pragma\n-============================\n-.. index:: Pragmas, synonyms\n-\n-Syntax:\n-\n-\n-::\n-\n-  pragma Rename_Pragma (\n-           [New_Name =>] IDENTIFIER,\n-           [Renamed  =>] pragma_IDENTIFIER);\n-\n-This pragma provides a mechanism for supplying new names for existing\n-pragmas. The ``New_Name`` identifier can subsequently be used as a synonym for\n-the Renamed pragma. For example, suppose you have code that was originally\n-developed on a compiler that supports Inline_Only as an implementation defined\n-pragma. And suppose the semantics of pragma Inline_Only are identical to (or at\n-least very similar to) the GNAT implementation defined pragma\n-Inline_Always. You could globally replace Inline_Only with Inline_Always.\n-\n-However, to avoid that source modification, you could instead add a\n-configuration pragma:\n-\n-.. code-block:: ada\n-\n-  pragma Rename_Pragma (\n-           New_Name => Inline_Only,\n-           Renamed  => Inline_Always);\n-\n-\n-Then GNAT will treat \"pragma Inline_Only ...\" as if you had written\n-\"pragma Inline_Always ...\".\n-\n-Pragma Inline_Only will not necessarily mean the same thing as the other Ada\n-compiler; it's up to you to make sure the semantics are close enough.\n-\n Pragma Pre\n ==========\n .. index:: Pre\n@@ -5729,6 +5706,43 @@ In the generic unit, the formal type is subject to all restrictions\n pertaining to remote access to class-wide types. At instantiation, the\n actual type must be a remote access to class-wide type.\n \n+Pragma Rename_Pragma\n+============================\n+.. index:: Pragmas, synonyms\n+\n+Syntax:\n+\n+\n+::\n+\n+  pragma Rename_Pragma (\n+           [New_Name =>] IDENTIFIER,\n+           [Renamed  =>] pragma_IDENTIFIER);\n+\n+This pragma provides a mechanism for supplying new names for existing\n+pragmas. The ``New_Name`` identifier can subsequently be used as a synonym for\n+the Renamed pragma. For example, suppose you have code that was originally\n+developed on a compiler that supports Inline_Only as an implementation defined\n+pragma. And suppose the semantics of pragma Inline_Only are identical to (or at\n+least very similar to) the GNAT implementation defined pragma\n+Inline_Always. You could globally replace Inline_Only with Inline_Always.\n+\n+However, to avoid that source modification, you could instead add a\n+configuration pragma:\n+\n+.. code-block:: ada\n+\n+  pragma Rename_Pragma (\n+           New_Name => Inline_Only,\n+           Renamed  => Inline_Always);\n+\n+\n+Then GNAT will treat \"pragma Inline_Only ...\" as if you had written\n+\"pragma Inline_Always ...\".\n+\n+Pragma Inline_Only will not necessarily mean the same thing as the other Ada\n+compiler; it's up to you to make sure the semantics are close enough.\n+\n Pragma Restricted_Run_Time\n ==========================\n \n@@ -7123,7 +7137,9 @@ or not to be given individually for each accept statement.\n \n The left hand side of an assignment does not count as a reference for the\n purpose of this pragma. Thus it is fine to assign to an entity for which\n-pragma Unreferenced is given.\n+pragma Unreferenced is given. However, use of an entity as an actual for\n+an out parameter does count as a reference unless warnings for unread output\n+parameters are enabled via :switch:`-gnatw.o`.\n \n Note that if a warning is desired for all calls to a given subprogram,\n regardless of whether they occur in the same unit as the subprogram"}, {"sha": "bdcfd99ad865405b03efac9e090cb08921d11406", "filename": "gcc/ada/doc/gnat_rm/security_hardening_features.rst", "status": "added", "additions": 162, "deletions": 0, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fsecurity_hardening_features.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fsecurity_hardening_features.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fsecurity_hardening_features.rst?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -0,0 +1,162 @@\n+.. _Security_Hardening_Features:\n+\n+***************************\n+Security Hardening Features\n+***************************\n+\n+This chapter describes Ada extensions aimed at security hardening that\n+are provided by GNAT.\n+\n+.. Register Scrubbing:\n+\n+Register Scrubbing\n+==================\n+\n+GNAT can generate code to zero-out hardware registers before returning\n+from a subprogram.\n+\n+It can be enabled with the *-fzero-call-used-regs* command line\n+option, to affect all subprograms in a compilation, and with a\n+:samp:`Machine_Attribute` pragma, to affect only specific subprograms.\n+\n+.. code-block:: ada\n+\n+     procedure Foo;\n+     pragma Machine_Attribute (Foo, \"zero_call_used_regs\", \"used\");\n+     --  Before returning, Foo scrubs only call-clobbered registers\n+     --  that it uses itself.\n+\n+     function Bar return Integer;\n+     pragma Machine_Attribute (Bar, \"zero_call_used_regs\", \"all\");\n+     --  Before returning, Bar scrubs all call-clobbered registers.\n+\n+\n+For usage and more details on the command line option, and on the\n+``zero_call_used_regs`` attribute, see :title:`Using the GNU Compiler\n+Collection (GCC)`.\n+\n+\n+.. Stack Scrubbing:\n+\n+Stack Scrubbing\n+===============\n+\n+GNAT can generate code to zero-out stack frames used by subprograms.\n+\n+It can be activated with the :samp:`Machine_Attribute` pragma, on\n+specific subprograms and variables.\n+\n+.. code-block:: ada\n+\n+     function Foo returns Integer;\n+     pragma Machine_Attribute (Foo, \"strub\");\n+     --  Foo and its callers are modified so as to scrub the stack\n+     --  space used by Foo after it returns.\n+\n+     procedure Bar;\n+     pragma Machine_Attribute (Bar, \"strub\", \"internal\");\n+     --  Bar is turned into a wrapper for its original body,\n+     --  and they scrub the stack used by the original body.\n+\n+     Var : Integer;\n+     pragma Machine_Attribute (Var, \"strub\");\n+     --  Reading from Var in a subprogram enables stack scrubbing\n+     --  of the stack space used by the subprogram.\n+\n+\n+There are also *-fstrub* command line options to control default\n+settings.  For usage and more details on the command line option, and\n+on the ``strub`` attribute, see :title:`Using the GNU Compiler\n+Collection (GCC)`.\n+\n+Note that Ada secondary stacks are not scrubbed.  The restriction\n+``No_Secondary_Stack`` avoids their use, and thus their accidental\n+preservation of data that should be scrubbed.\n+\n+Attributes ``Access`` and ``Unconstrained_Access`` of variables and\n+constants with ``strub`` enabled require types with ``strub`` enabled;\n+there is no way to express an access-to-strub type otherwise.\n+``Unchecked_Access`` bypasses this constraint, but the resulting\n+access type designates a non-strub type.\n+\n+.. code-block:: ada\n+\n+     VI : Integer;\n+     XsVI : access Integer := VI'Access; -- Error.\n+     UXsVI : access Integer := VI'Unchecked_Access; -- OK,\n+     -- UXsVI.all does not enable strub in the enclosing subprogram.\n+\n+     type Strub_Int is new Integer;\n+     pragma Machine_Attribute (Strub_Int, \"strub\");\n+     VSI : Strub_Int;\n+     XsVSI : access Strub_Int := VSI'Access; -- OK.\n+     -- XsVSI.all enables strub in the enclosing subprogram.\n+\n+\n+Every access-to-subprogram type, renaming, and overriding and\n+overridden dispatching operations that may refer to a subprogram with\n+an attribute-modified interface must be annotated with the same\n+interface-modifying attribute.  Access-to-subprogram types can be\n+explicitly converted to different strub modes, as long as they are\n+interface-compatible (i.e., adding or removing ``at-calls`` is not\n+allowed).  For example, a ``strub``-``disabled`` subprogram can be\n+turned ``callable`` through such an explicit conversion:\n+\n+.. code-block:: ada\n+\n+     type TBar is access procedure;\n+\n+     type TBar_Callable is access procedure;\n+     pragma Machine_Attribute (TBar_Callable, \"strub\", \"callable\");\n+\n+     Bar_Callable_Ptr : constant TBar_Callable\n+\t\t:= TBar_Callable (TBar'(Bar'Access));\n+\n+     procedure Bar_Callable renames Bar_Callable_Ptr.all;\n+     pragma Machine_Attribute (Bar_Callable, \"strub\", \"callable\");\n+\n+Note that the renaming declaration is expanded to a full subprogram\n+body, it won't be just an alias.  Only if it is inlined will it be as\n+efficient as a call by dereferencing the access-to-subprogram constant\n+Bar_Callable_Ptr.\n+\n+\n+.. Hardened Conditionals:\n+\n+Hardened Conditionals\n+=====================\n+\n+GNAT can harden conditionals to protect against control flow attacks.\n+\n+This is accomplished by two complementary transformations, each\n+activated by a separate command-line option.\n+\n+The option *-fharden-compares* enables hardening of compares that\n+compute results stored in variables, adding verification that the\n+reversed compare yields the opposite result.\n+\n+The option *-fharden-conditional-branches* enables hardening of\n+compares that guard conditional branches, adding verification of the\n+reversed compare to both execution paths.\n+\n+These transformations are introduced late in the compilation pipeline,\n+long after boolean expressions are decomposed into separate compares,\n+each one turned into either a conditional branch or a compare whose\n+result is stored in a boolean variable or temporary.  Compiler\n+optimizations, if enabled, may also turn conditional branches into\n+stored compares, and vice-versa, or into operations with implied\n+conditionals (e.g. MIN and MAX).  Conditionals may also be optimized\n+out entirely, if their value can be determined at compile time, and\n+occasionally multiple compares can be combined into one.\n+\n+It is thus difficult to predict which of these two options will affect\n+a specific compare operation expressed in source code.  Using both\n+options ensures that every compare that is neither optimized out nor\n+optimized into implied conditionals will be hardened.\n+\n+The addition of reversed compares can be observed by enabling the dump\n+files of the corresponding passes, through command line options\n+*-fdump-tree-hardcmp* and *-fdump-tree-hardcbr*, respectively.\n+\n+They are separate options, however, because of the significantly\n+different performance impact of the hardening transformations."}, {"sha": "69efc00d4934f74a6ce69efae1a628cadf817efe", "filename": "gcc/ada/doc/gnat_rm/standard_and_implementation_defined_restrictions.rst", "status": "modified", "additions": 51, "deletions": 2, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fstandard_and_implementation_defined_restrictions.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fstandard_and_implementation_defined_restrictions.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fstandard_and_implementation_defined_restrictions.rst?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -239,7 +239,7 @@ The following example indicates constructs that violate this restriction.\n   with Pkg; use Pkg;\n   procedure Example is\n     procedure Test (O : T'Class) is\n-      N : Natural  := O'Size;--  Error: Dispatching call\n+      N : Natural := O'Size; --  Error: Dispatching call\n       C : T'Class := O;      --  Error: implicit Dispatching Call\n     begin\n       if O in DT'Class then  --  OK   : Membership test\n@@ -656,6 +656,18 @@ To take maximum advantage of this space-saving optimization, any\n unit declaring a tagged type should be compiled with the restriction,\n though this is not required.\n \n+No_Tagged_Type_Registration\n+---------------------------\n+.. index:: No_Tagged_Type_Registration\n+\n+[GNAT] If this restriction is active, then class-wide streaming\n+attributes are not supported. In addition, the subprograms in\n+Ada.Tags are not supported.\n+If this restriction is active, the generated code is simplified by\n+omitting the otherwise-required global registration of tagged types when they\n+are declared. This restriction may be necessary in order to also apply\n+the No_Elaboration_Code restriction.\n+\n No_Task_Allocators\n ------------------\n .. index:: No_Task_Allocators\n@@ -870,6 +882,44 @@ used, the compiler is allowed to suppress the elaboration counter normally\n associated with the unit. This counter is typically used to check for access\n before elaboration and to control multiple elaboration attempts.\n \n+No_Dynamic_Accessibility_Checks\n+-------------------------------\n+.. index:: No_Dynamic_Accessibility_Checks\n+\n+[GNAT] No dynamic accessibility checks are generated when this restriction is\n+in effect. Instead, dangling references are prevented via more conservative\n+compile-time checking. More specifically, existing compile-time checks are\n+enforced but with more conservative assumptions about the accessibility levels\n+of the relevant entities. These conservative assumptions eliminate the need for\n+dynamic accessibility checks.\n+\n+These new rules for computing (at compile-time) the accessibility level of an\n+anonymous access type T are as follows:\n+\n+*\n+ If T is a function result type then, from the caller's perspective, its level\n+ is that of the innermost master enclosing the function call. From the callee's\n+ perspective, the level of parameters and local variables of the callee is\n+ statically deeper than the level of T.\n+\n+ For any other accessibility level L such that the level of parameters and local\n+ variables of the callee is statically deeper than L, the level of T (from the\n+ callee's perspective) is also statically deeper than L.\n+*\n+ If T is the type of a formal parameter then, from the caller's perspective,\n+ its level is at least as deep as that of the type of the corresponding actual\n+ parameter (whatever that actual parameter might be). From the callee's\n+ perspective, the level of parameters and local variables of the callee is\n+ statically deeper than the level of T.\n+*\n+ If T is the type of a discriminant then its level is that of the discriminated\n+ type.\n+*\n+ If T is the type of a stand-alone object then its level is the level of the\n+ object.\n+*\n+ In all other cases, the level of T is as defined by the existing rules of Ada.\n+\n No_Dynamic_Sized_Objects\n ------------------------\n .. index:: No_Dynamic_Sized_Objects\n@@ -1011,4 +1061,3 @@ follows::\n or equivalently::\n \n   gnatprove -P project.gpr --mode=check_all\n-"}, {"sha": "de1c83ec25e3450d7c3cc3437840b70838a23cbc", "filename": "gcc/ada/doc/gnat_rm/the_gnat_library.rst", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fthe_gnat_library.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fthe_gnat_library.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_rm%2Fthe_gnat_library.rst?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -2163,7 +2163,7 @@ This package provides the declaration of an atomic counter type,\n together with efficient routines (using hardware\n synchronization primitives) for incrementing, decrementing,\n and testing of these counters. This package is implemented\n-on most targets, including all Alpha, ia64, PowerPC, SPARC V9,\n+on most targets, including all Alpha, AARCH64, ARM, ia64, PowerPC, SPARC V9,\n x86, and x86_64 platforms.\n \n .. _`System.Memory_(s-memory.ads)`:"}, {"sha": "97fb3dfb8df145ced76aedab5c07ddf5c2d0af91", "filename": "gcc/ada/doc/gnat_ugn/building_executable_programs_with_gnat.rst", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -1497,9 +1497,10 @@ Alphabetical List of All Switches\n \n :switch:`-gnateA`\n   Check that the actual parameters of a subprogram call are not aliases of one\n-  another. To qualify as aliasing, the actuals must denote objects of a composite\n-  type, their memory locations must be identical or overlapping, and at least one\n-  of the corresponding formal parameters must be of mode OUT or IN OUT.\n+  another. To qualify as aliasing, their memory locations must be identical or\n+  overlapping, at least one of the corresponding formal parameters must be of\n+  mode OUT or IN OUT, and at least one of the corresponding formal parameters\n+  must have its parameter passing mechanism not specified.\n \n \n   .. code-block:: ada\n@@ -3581,6 +3582,25 @@ of the pragma in the :title:`GNAT_Reference_manual`).\n   ordering.\n \n \n+.. index:: -gnatw_p  (gcc)\n+\n+:switch:`-gnatw_p`\n+  *Activate warnings for pedantic checks.*\n+\n+  This switch activates warnings for the failure of certain pedantic checks.\n+  The only case currently supported is a check that the subtype_marks given\n+  for corresponding formal parameter and function results in a subprogram\n+  declaration and its body denote the same subtype declaration. The default\n+  is that such warnings are not given.\n+\n+.. index:: -gnatw_P  (gcc)\n+\n+:switch:`-gnatw_P`\n+  *Suppress warnings for pedantic checks.*\n+\n+  This switch suppresses warnings on violations of pedantic checks.\n+\n+\n .. index:: -gnatwq  (gcc)\n .. index:: Parentheses, warnings\n \n@@ -3683,6 +3703,8 @@ of the pragma in the :title:`GNAT_Reference_manual`).\n   * Comparison of an object or (unary or binary) operation of boolean type to\n     an explicit True value.\n \n+  * Import of parent package.\n+\n   The default is that warnings for redundant constructs are not given.\n \n "}, {"sha": "24ef9d6ca41ea697ecb90209ef7c088a7e00ab06", "filename": "gcc/ada/doc/gnat_ugn/gnat_and_program_execution.rst", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_and_program_execution.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_and_program_execution.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_and_program_execution.rst?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -3680,8 +3680,9 @@ execution of this erroneous program:\n   The ``gnatmem`` utility monitors dynamic allocation and\n   deallocation activity in a program, and displays information about\n   incorrect deallocations and possible sources of memory leaks.\n-  It is designed to work in association with a static runtime library\n-  only and in this context provides three types of information:\n+  It is designed to work for fixed-position executables in association\n+  with a static runtime library only and in this context provides three\n+  types of information:\n \n   * General information concerning memory management, such as the total\n     number of allocations and deallocations, the amount of allocated\n@@ -3711,15 +3712,16 @@ execution of this erroneous program:\n \n        $ gnatmem [ switches ] [ DEPTH ] user_program\n \n-  The program must have been linked with the instrumented version of the\n+  The user program must be linked with the instrumented version of the\n   allocation and deallocation routines. This is done by linking with the\n   :file:`libgmem.a` library. For correct symbolic backtrace information,\n-  the user program should be compiled with debugging options\n-  (see :ref:`Switches_for_gcc`). For example to build :file:`my_program`:\n+  the user program should also both be compiled with debugging options\n+  (see :ref:`Switches_for_gcc`) and be linked at a fixed position. For\n+  example to build :file:`my_program` with ``gnatmake``:\n \n     ::\n \n-       $ gnatmake -g my_program -largs -lgmem\n+       $ gnatmake -g my_program -largs -lgmem -no-pie\n \n   As library :file:`libgmem.a` contains an alternate body for package\n   ``System.Memory``, :file:`s-memory.adb` should not be compiled and linked"}, {"sha": "d030cd40839ea85a05b63fab99554378e2e518e2", "filename": "gcc/ada/doc/gnat_ugn/gnat_utility_programs.rst", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_utility_programs.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_utility_programs.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fgnat_utility_programs.rst?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -4294,10 +4294,13 @@ building specialized scripts.\n     Standard Output. Has no effect otherwise.\n \n   :switch:`--count={N}`\n-    If specified, compute the symbolic traceback ``N`` times in a row.\n-    This option is mostly useful for measuring the performance of\n-    ``gnatsymbolize``, particularly in the case where the cache is\n-    being used.\n+    Compute the symbolic traceback ``N`` times in a row. This option\n+    is mostly useful for measuring the performance of ``gnatsymbolize``,\n+    particularly in the case where the cache is being used.\n+\n+  :switch:`--load`\n+    Interpret the first address as the load address of the executable.\n+    This is needed for position-independent executables on Windows.\n \n   Requirements for Correct Operation\n   ----------------------------------\n@@ -4311,12 +4314,7 @@ building specialized scripts.\n   This program provides a functionality similar to ``addr2line``.\n   It has fewer options to tailor its output, but has been designed\n   to require fewer of the DWARF sections to be present in the\n-  executable. In particular, the following sections can be\n-  stripped from the executable without impact to ``gnatsymbolize``'s\n-  functionality:\n-\n-    * ``.debug_str``\n-    * ``.debug_ranges``\n+  executable. In particular, it works for code compiled with ``-g1``.\n \n \n .. only:: PRO or GPL"}, {"sha": "fd2c6bd7f502a039c17e4cfa0694da23a6a41fe1", "filename": "gcc/ada/doc/gnat_ugn/platform_specific_information.rst", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fplatform_specific_information.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fplatform_specific_information.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fplatform_specific_information.rst?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -217,7 +217,10 @@ this in a library package body in your application:\n        (if geteuid = 0 then True else raise Program_Error with \"must be root\");\n \n It gets the effective user id, and if it's not 0 (i.e. root), it raises\n-Program_Error.\n+Program_Error. Note that if you re running the code in a container, this may\n+not be sufficient, as you may have sufficient priviledge on the container,\n+but not on the host machine running the container, so check that you also\n+have sufficient priviledge for running the container image.\n \n .. index:: Linux\n .. index:: GNU/Linux\n@@ -230,6 +233,7 @@ GNU/Linux Topics\n This section describes topics that are specific to GNU/Linux platforms.\n \n .. _Required_packages_on_GNU_Linux:\n+.. _A_GNU_Linux_debug_quirk:\n \n Required Packages on GNU/Linux\n ------------------------------\n@@ -249,6 +253,22 @@ you'll need the 32-bit version of the following packages:\n Other GNU/Linux distributions might be choosing a different name\n for those packages.\n \n+A GNU/Linux Debug Quirk\n+-----------------------\n+\n+On SuSE 15, some kernels have a defect causing issues when debugging\n+programs using threads or Ada tasks. Due to the lack of documentation\n+found regarding this kernel issue, we can only provide limited\n+information about which kernels are impacted: kernel version 5.3.18 is\n+known to be impacted, and kernels in the 5.14 range or newer are\n+believed to fix this problem.\n+\n+The bug affects the debugging of 32-bit processes on a 64-bit system.\n+Symptoms can vary: Unexpected ``SIGABRT`` signals being received by\n+the program, \"The futex facility returned an unexpected error code\"\n+error message, and inferior programs hanging indefinitely range among\n+the symptoms most commonly observed.\n+\n .. index:: Windows\n \n .. _Microsoft_Windows_Topics:"}, {"sha": "4a3b84d754da2ca27b92f63979cf25956f3b8122", "filename": "gcc/ada/doc/gnat_ugn/the_gnat_compilation_model.rst", "status": "modified", "additions": 16, "deletions": 55, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fthe_gnat_compilation_model.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fthe_gnat_compilation_model.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fthe_gnat_compilation_model.rst?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -1409,16 +1409,12 @@ recognized by GNAT::\n      Check_Float_Overflow\n      Check_Name\n      Check_Policy\n-     Compile_Time_Error\n-     Compile_Time_Warning\n-     Compiler_Unit\n-     Compiler_Unit_Warning\n      Component_Alignment\n      Convention_Identifier\n      Debug_Policy\n-     Detect_Blocking\n      Default_Scalar_Storage_Order\n      Default_Storage_Pool\n+     Detect_Blocking\n      Disable_Atomic_Synchronization\n      Discard_Names\n      Elaboration_Checks\n@@ -1437,7 +1433,6 @@ recognized by GNAT::\n      Locking_Policy\n      No_Component_Reordering\n      No_Heap_Finalization\n-     No_Run_Time\n      No_Strict_Aliasing\n      Normalize_Scalars\n      Optimize_Alignment\n@@ -1449,17 +1444,12 @@ recognized by GNAT::\n      Priority_Specific_Dispatching\n      Profile\n      Profile_Warnings\n-     Propagate_Exceptions\n      Queuing_Policy\n-     Rational\n-     Ravenscar\n      Rename_Pragma\n-     Restricted_Run_Time\n      Restrictions\n-     Restrictions_Warnings\n+     Restriction_Warnings\n      Reviewable\n      Short_Circuit_And_Or\n-     Short_Descriptors\n      Source_File_Name\n      Source_File_Name_Project\n      SPARK_Mode\n@@ -1468,7 +1458,6 @@ recognized by GNAT::\n      Suppress_Exception_Locations\n      Task_Dispatching_Policy\n      Unevaluated_Use_Of_Old\n-     Universal_Data\n      Unsuppress\n      Use_VADS_Size\n      Validity_Checks\n@@ -1514,7 +1503,7 @@ only to the unit in which the pragma appears, and not to any other units.\n The exception is No_Elaboration_Code which always applies to the entire\n object file from a compilation, i.e. to the body, spec, and all subunits.\n This restriction can be specified in a configuration pragma file, or it\n-can be on the body and/or the spec (in eithe case it applies to all the\n+can be on the body and/or the spec (in either case it applies to all the\n relevant units). It can appear on a subunit only if it has previously\n appeared in the body of spec.\n \n@@ -4526,8 +4515,8 @@ Some of the known limitations include:\n   constants. Function macros (macros with arguments) are partially translated\n   as comments, to be completed manually if needed.\n * some extensions (e.g. vector types) are not supported\n-* pointers to pointers or complex structures are mapped to System.Address\n-* identifiers with identical name (except casing) will generate compilation\n+* pointers to pointers are mapped to System.Address\n+* identifiers with identical name (except casing) may generate compilation\n   errors (e.g. ``shm_get`` vs ``SHM_GET``).\n \n The code is generated using Ada 2012 syntax, which makes it easier to interface\n@@ -4546,14 +4535,17 @@ header files needed by these files transitively. For example:\n \n .. code-block:: sh\n \n-      $ g++ -c -fdump-ada-spec -C /usr/include/time.h\n+      $ gcc -c -fdump-ada-spec -C /usr/include/time.h\n       $ gcc -c *.ads\n \n will generate, under GNU/Linux, the following files: :file:`time_h.ads`,\n :file:`bits_time_h.ads`, :file:`stddef_h.ads`, :file:`bits_types_h.ads` which\n correspond to the files :file:`/usr/include/time.h`,\n-:file:`/usr/include/bits/time.h`, etc..., and will then compile these Ada specs\n-in Ada 2005 mode.\n+:file:`/usr/include/bits/time.h`, etc..., and then compile these Ada specs.\n+That is to say, the name of the Ada specs is in keeping with the relative path\n+under :file:`/usr/include/` of the header files. This behavior is specific to\n+paths ending with :file:`/include/`; in all the other cases, the name of the\n+Ada specs is derived from the simple name of the header files instead.\n \n The :switch:`-C` switch tells ``gcc`` to extract comments from headers,\n and will attempt to generate corresponding Ada comments.\n@@ -4564,47 +4556,16 @@ can use instead the :switch:`-fdump-ada-spec-slim` switch.\n You can optionally specify a parent unit, of which all generated units will\n be children, using :switch:`-fada-spec-parent={unit}`.\n \n-Note that we recommend when possible to use the *g++* driver to\n-generate bindings, even for most C headers, since this will in general\n-generate better Ada specs. For generating bindings for C++ headers, it is\n-mandatory to use the *g++* command, or *gcc -x c++* which\n-is equivalent in this case. If *g++* cannot work on your C headers\n-because of incompatibilities between C and C++, then you can fallback to\n-``gcc`` instead.\n-\n-For an example of better bindings generated from the C++ front-end,\n-the name of the parameters (when available) are actually ignored by the C\n-front-end. Consider the following C header:\n-\n-.. code-block:: c\n-\n-     extern void foo (int variable);\n-\n-with the C front-end, ``variable`` is ignored, and the above is handled as:\n-\n-.. code-block:: c\n-\n-     extern void foo (int);\n-\n-generating a generic:\n-\n-.. code-block:: ada\n-\n-     procedure foo (param1 : int);\n-\n-with the C++ front-end, the name is available, and we generate:\n-\n-.. code-block:: ada\n-\n-     procedure foo (variable : int);\n+The simple ``gcc```-based command works only for C headers. For C++ headers\n+you need to use either the ``g++`` command or the combination ``gcc -x c++```.\n \n In some cases, the generated bindings will be more complete or more meaningful\n when defining some macros, which you can do via the :switch:`-D` switch. This\n is for example the case with :file:`Xlib.h` under GNU/Linux:\n \n .. code-block:: sh\n \n-      $ g++ -c -fdump-ada-spec -DXLIB_ILLEGAL_ACCESS -C /usr/include/X11/Xlib.h\n+      $ gcc -c -fdump-ada-spec -DXLIB_ILLEGAL_ACCESS -C /usr/include/X11/Xlib.h\n \n The above will generate more complete bindings than a straight call without\n the :switch:`-DXLIB_ILLEGAL_ACCESS` switch.\n@@ -4626,7 +4587,7 @@ and then generate Ada bindings from this file:\n \n .. code-block:: sh\n \n-      $ g++ -c -fdump-ada-spec readline1.h\n+      $ gcc -c -fdump-ada-spec readline1.h\n \n \n .. _Generating_bindings_for_C++_headers:\n@@ -4851,7 +4812,7 @@ GNAT and Other Compilation Models\n =================================\n \n This section compares the GNAT model with the approaches taken in\n-other environents, first the C/C++ model and then the mechanism that\n+other environments, first the C/C++ model and then the mechanism that\n has been used in other Ada systems, in particular those traditionally\n used for Ada 83.\n "}, {"sha": "0235545155f4025a7f197b7378542a2ec2dfe163", "filename": "gcc/ada/doc/share/gnu_free_documentation_license.rst", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdoc%2Fshare%2Fgnu_free_documentation_license.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fdoc%2Fshare%2Fgnu_free_documentation_license.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fshare%2Fgnu_free_documentation_license.rst?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -7,7 +7,7 @@ GNU Free Documentation License\n Version 1.3, 3 November 2008\n \n Copyright  2000, 2001, 2002, 2007, 2008  Free Software Foundation, Inc\n-http://fsf.org/\n+https://fsf.org/\n \n Everyone is permitted to copy and distribute verbatim copies of this\n license document, but changing it is not allowed.\n@@ -383,7 +383,7 @@ The Free Software Foundation may publish new, revised versions\n of the GNU Free Documentation License from time to time.  Such new\n versions will be similar in spirit to the present version, but may\n differ in detail to address new problems or concerns.  See\n-http://www.gnu.org/copyleft/.\n+https://www.gnu.org/copyleft/.\n \n Each version of the License is given a distinguishing version number.\n If the Document specifies that a particular numbered version of this"}, {"sha": "31d261a7ef3ace06e8ab05370341057c7a6c5572", "filename": "gcc/ada/einfo-utils.adb", "status": "modified", "additions": 239, "deletions": 222, "changes": 461, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Feinfo-utils.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Feinfo-utils.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo-utils.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---           Copyright (C) 2020-2021, Free Software Foundation, Inc.        --\n+--           Copyright (C) 2020-2022, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,24 +43,87 @@ package body Einfo.Utils is\n    --  Determine whether abstract state State_Id has particular option denoted\n    --  by the name Option_Nam.\n \n-   -----------------------------------\n-   -- Renamings of Renamed_Or_Alias --\n-   -----------------------------------\n+   -------------------------------------------\n+   -- Aliases/Renamings of Renamed_Or_Alias --\n+   -------------------------------------------\n \n-   function Alias (N : Entity_Id) return Node_Id is\n+   function Alias (N : Entity_Id) return Entity_Id is\n    begin\n-      pragma Assert\n-        (Is_Overloadable (N) or else Ekind (N) = E_Subprogram_Type);\n-      return Renamed_Or_Alias (N);\n+      return Val : constant Entity_Id := Renamed_Or_Alias (N) do\n+         pragma Assert\n+           (Is_Overloadable (N) or else Ekind (N) = E_Subprogram_Type);\n+         pragma Assert (Val in N_Entity_Id | N_Empty_Id);\n+      end return;\n    end Alias;\n \n-   procedure Set_Alias (N : Entity_Id; Val : Node_Id) is\n+   procedure Set_Alias (N : Entity_Id; Val : Entity_Id) is\n    begin\n       pragma Assert\n         (Is_Overloadable (N) or else Ekind (N) = E_Subprogram_Type);\n+      pragma Assert (Val in N_Entity_Id | N_Empty_Id);\n+\n       Set_Renamed_Or_Alias (N, Val);\n    end Set_Alias;\n \n+   function Renamed_Entity (N : Entity_Id) return Entity_Id is\n+   begin\n+      return Val : constant Entity_Id := Renamed_Or_Alias (N) do\n+         pragma Assert (not Is_Object (N) or else Etype (N) = Any_Type);\n+         pragma Assert (Val in N_Entity_Id | N_Empty_Id);\n+      end return;\n+   end Renamed_Entity;\n+\n+   procedure Set_Renamed_Entity (N : Entity_Id; Val : Entity_Id) is\n+   begin\n+      pragma Assert (not Is_Object (N));\n+      pragma Assert (Val in N_Entity_Id);\n+\n+      Set_Renamed_Or_Alias (N, Val);\n+   end Set_Renamed_Entity;\n+\n+   function Renamed_Object (N : Entity_Id) return Node_Id is\n+   begin\n+      return Val : constant Node_Id := Renamed_Or_Alias (N) do\n+         --  Formal_Kind uses the entity, not a name of it. This happens\n+         --  in front-end inlining, which also sets to Empty. Also in\n+         --  Exp_Ch9, where formals are renamed for the benefit of gdb.\n+\n+         if Ekind (N) not in Formal_Kind then\n+            pragma Assert (Is_Object (N));\n+            pragma Assert (Val in N_Subexpr_Id | N_Empty_Id);\n+            null;\n+         end if;\n+      end return;\n+   end Renamed_Object;\n+\n+   procedure Set_Renamed_Object (N : Entity_Id; Val : Node_Id) is\n+   begin\n+      if Ekind (N) not in Formal_Kind then\n+         pragma Assert (Is_Object (N));\n+         pragma Assert (Val in N_Subexpr_Id | N_Empty_Id);\n+         null;\n+      end if;\n+\n+      Set_Renamed_Or_Alias (N, Val);\n+   end Set_Renamed_Object;\n+\n+   function Renamed_Entity_Or_Object (N : Entity_Id) return Node_Id is\n+   begin\n+      if Is_Object (N) then\n+         return Renamed_Object (N);\n+      else\n+         return Renamed_Entity (N);\n+      end if;\n+   end Renamed_Entity_Or_Object;\n+\n+   procedure Set_Renamed_Object_Of_Possibly_Void\n+     (N : Entity_Id; Val : Node_Id)\n+   is\n+   begin\n+      pragma Assert (Val in N_Subexpr_Id);\n+      Set_Renamed_Or_Alias (N, Val);\n+   end Set_Renamed_Object_Of_Possibly_Void;\n+\n    ----------------\n    -- Has_Option --\n    ----------------\n@@ -358,131 +421,147 @@ package body Einfo.Utils is\n       return Ekind (Id) in Type_Kind;\n    end Is_Type;\n \n-   -----------------------------------\n-   -- Field Initialization Routines --\n-   -----------------------------------\n+   ------------------------------------------\n+   -- Type Representation Attribute Fields --\n+   ------------------------------------------\n \n-   procedure Init_Alignment (Id : E) is\n+   function Known_Alignment (E : Entity_Id) return B is\n    begin\n-      Reinit_Field_To_Zero (Id, F_Alignment);\n-   end Init_Alignment;\n+      --  For some reason, Empty is passed to this sometimes\n+\n+      return No (E) or else not Field_Is_Initial_Zero (E, F_Alignment);\n+   end Known_Alignment;\n \n-   procedure Init_Alignment (Id : E; V : Int) is\n+   procedure Reinit_Alignment (Id : E) is\n    begin\n-      Set_Alignment (Id, UI_From_Int (V));\n-   end Init_Alignment;\n+      Reinit_Field_To_Zero (Id, F_Alignment);\n+   end Reinit_Alignment;\n \n-   procedure Init_Component_Bit_Offset (Id : E) is\n+   procedure Copy_Alignment (To, From : E) is\n    begin\n-      Set_Component_Bit_Offset (Id, No_Uint);\n-   end Init_Component_Bit_Offset;\n+      if Known_Alignment (From) then\n+         Set_Alignment (To, Alignment (From));\n+      else\n+         Reinit_Alignment (To);\n+      end if;\n+   end Copy_Alignment;\n \n-   procedure Init_Component_Bit_Offset (Id : E; V : Int) is\n+   function Known_Component_Bit_Offset (E : Entity_Id) return B is\n    begin\n-      Set_Component_Bit_Offset (Id, UI_From_Int (V));\n-   end Init_Component_Bit_Offset;\n+      return Present (Component_Bit_Offset (E));\n+   end Known_Component_Bit_Offset;\n \n-   procedure Init_Component_Size (Id : E) is\n+   function Known_Static_Component_Bit_Offset (E : Entity_Id) return B is\n    begin\n-      Set_Component_Size (Id, Uint_0);\n-   end Init_Component_Size;\n+      return Known_Component_Bit_Offset (E)\n+        and then Component_Bit_Offset (E) >= Uint_0;\n+   end Known_Static_Component_Bit_Offset;\n \n-   procedure Init_Component_Size (Id : E; V : Int) is\n+   function Known_Component_Size (E : Entity_Id) return B is\n    begin\n-      Set_Component_Size (Id, UI_From_Int (V));\n-   end Init_Component_Size;\n+      return Present (Component_Size (E));\n+   end Known_Component_Size;\n \n-   procedure Init_Digits_Value (Id : E) is\n+   function Known_Static_Component_Size (E : Entity_Id) return B is\n    begin\n-      Set_Digits_Value (Id, Uint_0);\n-   end Init_Digits_Value;\n+      return Known_Component_Size (E) and then Component_Size (E) >= Uint_0;\n+   end Known_Static_Component_Size;\n \n-   procedure Init_Digits_Value (Id : E; V : Int) is\n+   function Known_Esize (E : Entity_Id) return B is\n    begin\n-      Set_Digits_Value (Id, UI_From_Int (V));\n-   end Init_Digits_Value;\n+      return Present (Esize (E));\n+   end Known_Esize;\n \n-   procedure Init_Esize (Id : E) is\n+   function Known_Static_Esize (E : Entity_Id) return B is\n    begin\n-      Set_Esize (Id, Uint_0);\n-   end Init_Esize;\n+      return Known_Esize (E)\n+        and then Esize (E) >= Uint_0\n+        and then not Is_Generic_Type (E);\n+   end Known_Static_Esize;\n \n-   procedure Init_Esize (Id : E; V : Int) is\n+   procedure Reinit_Esize (Id : E) is\n    begin\n-      Set_Esize (Id, UI_From_Int (V));\n-   end Init_Esize;\n+      Reinit_Field_To_Zero (Id, F_Esize);\n+   end Reinit_Esize;\n \n-   procedure Init_Normalized_First_Bit (Id : E) is\n+   procedure Copy_Esize (To, From : E) is\n    begin\n-      Set_Normalized_First_Bit (Id, No_Uint);\n-   end Init_Normalized_First_Bit;\n+      if Known_Esize (From) then\n+         Set_Esize (To, Esize (From));\n+      else\n+         Reinit_Esize (To);\n+      end if;\n+   end Copy_Esize;\n \n-   procedure Init_Normalized_First_Bit (Id : E; V : Int) is\n+   function Known_Normalized_First_Bit (E : Entity_Id) return B is\n    begin\n-      Set_Normalized_First_Bit (Id, UI_From_Int (V));\n-   end Init_Normalized_First_Bit;\n+      return Present (Normalized_First_Bit (E));\n+   end Known_Normalized_First_Bit;\n \n-   procedure Init_Normalized_Position (Id : E) is\n+   function Known_Static_Normalized_First_Bit (E : Entity_Id) return B is\n    begin\n-      Set_Normalized_Position (Id, No_Uint);\n-   end Init_Normalized_Position;\n+      return Known_Normalized_First_Bit (E)\n+        and then Normalized_First_Bit (E) >= Uint_0;\n+   end Known_Static_Normalized_First_Bit;\n \n-   procedure Init_Normalized_Position (Id : E; V : Int) is\n+   function Known_Normalized_Position (E : Entity_Id) return B is\n    begin\n-      Set_Normalized_Position (Id, UI_From_Int (V));\n-   end Init_Normalized_Position;\n+      return Present (Normalized_Position (E));\n+   end Known_Normalized_Position;\n \n-   procedure Init_Normalized_Position_Max (Id : E) is\n+   function Known_Static_Normalized_Position (E : Entity_Id) return B is\n    begin\n-      Set_Normalized_Position_Max (Id, No_Uint);\n-   end Init_Normalized_Position_Max;\n+      return Known_Normalized_Position (E)\n+        and then Normalized_Position (E) >= Uint_0;\n+   end Known_Static_Normalized_Position;\n \n-   procedure Init_Normalized_Position_Max (Id : E; V : Int) is\n+   function Known_RM_Size (E : Entity_Id) return B is\n    begin\n-      Set_Normalized_Position_Max (Id, UI_From_Int (V));\n-   end Init_Normalized_Position_Max;\n+      return Present (RM_Size (E));\n+   end Known_RM_Size;\n \n-   procedure Init_RM_Size (Id : E) is\n+   function Known_Static_RM_Size (E : Entity_Id) return B is\n    begin\n-      Set_RM_Size (Id, Uint_0);\n-   end Init_RM_Size;\n+      return Known_RM_Size (E)\n+        and then RM_Size (E) >= Uint_0\n+        and then not Is_Generic_Type (E);\n+   end Known_Static_RM_Size;\n \n-   procedure Init_RM_Size (Id : E; V : Int) is\n+   procedure Reinit_RM_Size (Id : E) is\n    begin\n-      Set_RM_Size (Id, UI_From_Int (V));\n-   end Init_RM_Size;\n+      Reinit_Field_To_Zero (Id, F_RM_Size);\n+   end Reinit_RM_Size;\n \n-   procedure Copy_Alignment (To, From : E) is\n+   procedure Copy_RM_Size (To, From : E) is\n    begin\n-      if Known_Alignment (From) then\n-         Set_Alignment (To, Alignment (From));\n+      if Known_RM_Size (From) then\n+         Set_RM_Size (To, RM_Size (From));\n       else\n-         Init_Alignment (To);\n+         Reinit_RM_Size (To);\n       end if;\n-   end Copy_Alignment;\n+   end Copy_RM_Size;\n \n-   -----------------------------\n-   -- Init_Component_Location --\n-   -----------------------------\n+   -------------------------------\n+   -- Reinit_Component_Location --\n+   -------------------------------\n \n-   procedure Init_Component_Location (Id : E) is\n+   procedure Reinit_Component_Location (Id : E) is\n    begin\n-      Set_Normalized_First_Bit  (Id, No_Uint);\n-      Set_Normalized_Position_Max (Id, No_Uint);\n+      Set_Normalized_First_Bit (Id, No_Uint);\n       Set_Component_Bit_Offset (Id, No_Uint);\n-      Set_Esize (Id, Uint_0);\n+      Reinit_Esize (Id);\n       Set_Normalized_Position (Id, No_Uint);\n-   end Init_Component_Location;\n+   end Reinit_Component_Location;\n \n-   ----------------------------\n-   -- Init_Object_Size_Align --\n-   ----------------------------\n+   ------------------------------\n+   -- Reinit_Object_Size_Align --\n+   ------------------------------\n \n-   procedure Init_Object_Size_Align (Id : E) is\n+   procedure Reinit_Object_Size_Align (Id : E) is\n    begin\n-      Init_Esize (Id);\n-      Init_Alignment (Id);\n-   end Init_Object_Size_Align;\n+      Reinit_Esize (Id);\n+      Reinit_Alignment (Id);\n+   end Reinit_Object_Size_Align;\n \n    ---------------\n    -- Init_Size --\n@@ -491,120 +570,24 @@ package body Einfo.Utils is\n    procedure Init_Size (Id : E; V : Int) is\n    begin\n       pragma Assert (Is_Type (Id));\n-      pragma Assert\n-        (not Known_Esize (Id) or else Esize (Id) = V);\n-      pragma Assert\n-        (RM_Size (Id) = No_Uint\n-           or else RM_Size (Id) = Uint_0\n-           or else RM_Size (Id) = V);\n+      pragma Assert (not Known_Esize (Id) or else Esize (Id) = V);\n+      pragma Assert (not Known_RM_Size (Id) or else RM_Size (Id) = V);\n+\n       Set_Esize (Id, UI_From_Int (V));\n       Set_RM_Size (Id, UI_From_Int (V));\n    end Init_Size;\n \n-   ---------------------\n-   -- Init_Size_Align --\n-   ---------------------\n+   -----------------------\n+   -- Reinit_Size_Align --\n+   -----------------------\n \n-   procedure Init_Size_Align (Id : E) is\n+   procedure Reinit_Size_Align (Id : E) is\n    begin\n       pragma Assert (Ekind (Id) in Type_Kind | E_Void);\n-      Init_Esize (Id);\n-      Init_RM_Size (Id);\n-      Init_Alignment (Id);\n-   end Init_Size_Align;\n-\n-   ----------------------------------------------\n-   -- Type Representation Attribute Predicates --\n-   ----------------------------------------------\n-\n-   function Known_Alignment                       (E : Entity_Id) return B is\n-      Result : constant B := not Field_Is_Initial_Zero (E, F_Alignment);\n-   begin\n-      return Result;\n-   end Known_Alignment;\n-\n-   function Known_Component_Bit_Offset            (E : Entity_Id) return B is\n-   begin\n-      return Component_Bit_Offset (E) /= No_Uint;\n-   end Known_Component_Bit_Offset;\n-\n-   function Known_Component_Size                  (E : Entity_Id) return B is\n-   begin\n-      return Component_Size (E) /= Uint_0\n-        and then Component_Size (E) /= No_Uint;\n-   end Known_Component_Size;\n-\n-   function Known_Esize                           (E : Entity_Id) return B is\n-   begin\n-      return Esize (E) /= Uint_0\n-        and then Esize (E) /= No_Uint;\n-   end Known_Esize;\n-\n-   function Known_Normalized_First_Bit            (E : Entity_Id) return B is\n-   begin\n-      return Normalized_First_Bit (E) /= No_Uint;\n-   end Known_Normalized_First_Bit;\n-\n-   function Known_Normalized_Position             (E : Entity_Id) return B is\n-   begin\n-      return Normalized_Position (E) /= No_Uint;\n-   end Known_Normalized_Position;\n-\n-   function Known_Normalized_Position_Max         (E : Entity_Id) return B is\n-   begin\n-      return Normalized_Position_Max (E) /= No_Uint;\n-   end Known_Normalized_Position_Max;\n-\n-   function Known_RM_Size                         (E : Entity_Id) return B is\n-   begin\n-      return RM_Size (E) /= No_Uint\n-        and then (RM_Size (E) /= Uint_0\n-                    or else Is_Discrete_Type (E)\n-                    or else Is_Fixed_Point_Type (E));\n-   end Known_RM_Size;\n-\n-   function Known_Static_Component_Bit_Offset     (E : Entity_Id) return B is\n-   begin\n-      return Component_Bit_Offset (E) /= No_Uint\n-        and then Component_Bit_Offset (E) >= Uint_0;\n-   end Known_Static_Component_Bit_Offset;\n-\n-   function Known_Static_Component_Size           (E : Entity_Id) return B is\n-   begin\n-      return Component_Size (E) > Uint_0;\n-   end Known_Static_Component_Size;\n-\n-   function Known_Static_Esize                    (E : Entity_Id) return B is\n-   begin\n-      return Esize (E) > Uint_0\n-        and then not Is_Generic_Type (E);\n-   end Known_Static_Esize;\n-\n-   function Known_Static_Normalized_First_Bit     (E : Entity_Id) return B is\n-   begin\n-      return Normalized_First_Bit (E) /= No_Uint\n-        and then Normalized_First_Bit (E) >= Uint_0;\n-   end Known_Static_Normalized_First_Bit;\n-\n-   function Known_Static_Normalized_Position      (E : Entity_Id) return B is\n-   begin\n-      return Normalized_Position (E) /= No_Uint\n-        and then Normalized_Position (E) >= Uint_0;\n-   end Known_Static_Normalized_Position;\n-\n-   function Known_Static_Normalized_Position_Max  (E : Entity_Id) return B is\n-   begin\n-      return Normalized_Position_Max (E) /= No_Uint\n-        and then Normalized_Position_Max (E) >= Uint_0;\n-   end Known_Static_Normalized_Position_Max;\n-\n-   function Known_Static_RM_Size                  (E : Entity_Id) return B is\n-   begin\n-      return (RM_Size (E) > Uint_0\n-                or else Is_Discrete_Type (E)\n-                or else Is_Fixed_Point_Type (E))\n-        and then not Is_Generic_Type (E);\n-   end Known_Static_RM_Size;\n+      Reinit_Esize (Id);\n+      Reinit_RM_Size (Id);\n+      Reinit_Alignment (Id);\n+   end Reinit_Size_Align;\n \n    --------------------\n    -- Address_Clause --\n@@ -701,16 +684,45 @@ package body Einfo.Utils is\n          P := Parent (Id);\n       end if;\n \n+      while Nkind (P) in N_Selected_Component | N_Expanded_Name\n+        or else (Nkind (P) = N_Defining_Program_Unit_Name\n+                   and then Is_Child_Unit (Id))\n       loop\n-         if Nkind (P) in N_Selected_Component | N_Expanded_Name\n-           or else (Nkind (P) = N_Defining_Program_Unit_Name\n-                     and then Is_Child_Unit (Id))\n-         then\n-            P := Parent (P);\n-         else\n-            return P;\n-         end if;\n+         P := Parent (P);\n       end loop;\n+\n+      if Is_Itype (Id)\n+        and then Nkind (P) not in\n+          N_Full_Type_Declaration | N_Subtype_Declaration\n+      then\n+         P := Empty;\n+      end if;\n+\n+      --  Declarations are sometimes removed by replacing them with other\n+      --  irrelevant nodes. For example, a declare expression can be turned\n+      --  into a literal by constant folding. In these cases we want to\n+      --  return Empty.\n+\n+      if Nkind (P) in\n+          N_Assignment_Statement\n+        | N_Integer_Literal\n+        | N_Procedure_Call_Statement\n+        | N_Subtype_Indication\n+        | N_Type_Conversion\n+      then\n+         P := Empty;\n+      end if;\n+\n+      --  The following Assert indicates what kinds of nodes can be returned;\n+      --  they are not all \"declarations\".\n+\n+      if Serious_Errors_Detected = 0 then\n+         pragma Assert\n+           (Nkind (P) in N_Is_Decl | N_Empty,\n+            \"Declaration_Node incorrect kind: \" & Node_Kind'Image (Nkind (P)));\n+      end if;\n+\n+      return P;\n    end Declaration_Node;\n \n    ---------------------\n@@ -749,7 +761,7 @@ package body Einfo.Utils is\n    -- Entry_Index_Type --\n    ----------------------\n \n-   function Entry_Index_Type (Id : E) return N is\n+   function Entry_Index_Type (Id : E) return E is\n    begin\n       pragma Assert (Ekind (Id) = E_Entry_Family);\n       return Etype (Discrete_Subtype_Definition (Parent (Id)));\n@@ -1471,26 +1483,19 @@ package body Einfo.Utils is\n \n    function Is_Dynamic_Scope (Id : E) return B is\n    begin\n-      return\n-        Ekind (Id) = E_Block\n-          or else\n-        Ekind (Id) = E_Function\n-          or else\n-        Ekind (Id) = E_Procedure\n-          or else\n-        Ekind (Id) = E_Subprogram_Body\n+      return Ekind (Id) in E_Block\n+      --  Including an E_Block that came from an N_Expression_With_Actions\n+                         | E_Entry\n+                         | E_Entry_Family\n+                         | E_Function\n+                         | E_Procedure\n+                         | E_Return_Statement\n+                         | E_Subprogram_Body\n+                         | E_Task_Type\n           or else\n-        Ekind (Id) = E_Task_Type\n-          or else\n-       (Ekind (Id) = E_Limited_Private_Type\n-         and then Present (Full_View (Id))\n-         and then Ekind (Full_View (Id)) = E_Task_Type)\n-          or else\n-        Ekind (Id) = E_Entry\n-          or else\n-        Ekind (Id) = E_Entry_Family\n-          or else\n-        Ekind (Id) = E_Return_Statement;\n+        (Ekind (Id) = E_Limited_Private_Type\n+          and then Present (Full_View (Id))\n+          and then Ekind (Full_View (Id)) = E_Task_Type);\n    end Is_Dynamic_Scope;\n \n    --------------------\n@@ -1793,7 +1798,7 @@ package body Einfo.Utils is\n    -- Link_Entities --\n    -------------------\n \n-   procedure Link_Entities (First : Entity_Id; Second : Node_Id) is\n+   procedure Link_Entities (First, Second : Entity_Id) is\n    begin\n       if Present (Second) then\n          Set_Prev_Entity (Second, First);  --  First <-- Second\n@@ -2022,6 +2027,8 @@ package body Einfo.Utils is\n \n    function Next_Index (Id : Node_Id) return Node_Id is\n    begin\n+      pragma Assert (Nkind (Id) in N_Is_Index);\n+      pragma Assert (No (Next (Id)) or else Nkind (Next (Id)) in N_Is_Index);\n       return Next (Id);\n    end Next_Index;\n \n@@ -2639,6 +2646,16 @@ package body Einfo.Utils is\n       return Scope_Depth_Value (Scop);\n    end Scope_Depth;\n \n+   function Scope_Depth_Default_0 (Id : E) return U is\n+   begin\n+      if Scope_Depth_Set (Id) then\n+         return Scope_Depth (Id);\n+\n+      else\n+         return Uint_0;\n+      end if;\n+   end Scope_Depth_Default_0;\n+\n    ---------------------\n    -- Scope_Depth_Set --\n    ---------------------"}, {"sha": "f914de7cc8375098b22b1b9edf8decb11f119989", "filename": "gcc/ada/einfo-utils.ads", "status": "modified", "additions": 128, "deletions": 169, "changes": 297, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Feinfo-utils.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Feinfo-utils.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo-utils.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---           Copyright (C) 2020-2021, Free Software Foundation, Inc.        --\n+--           Copyright (C) 2020-2022, Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -27,32 +27,46 @@ with Einfo.Entities; use Einfo.Entities;\n \n package Einfo.Utils is\n \n-   -----------------------------------\n-   -- Renamings of Renamed_Or_Alias --\n-   -----------------------------------\n+   -------------------------------------------\n+   -- Aliases/Renamings of Renamed_Or_Alias --\n+   -------------------------------------------\n \n    --  See the comment in einfo.ads, \"Renaming and Aliasing\", which is somewhat\n-   --  incorrect. In fact, the compiler uses Alias, Renamed_Entity, and\n-   --  Renamed_Object more-or-less interchangeably, so we rename them here.\n-   --  Alias isn't really renamed, because we want an assertion in the body.\n-\n-   function Alias (N : Entity_Id) return Node_Id;\n-   procedure Set_Alias (N : Entity_Id; Val : Node_Id);\n-   function Renamed_Entity\n-     (N : Entity_Id) return Node_Id renames Renamed_Or_Alias;\n-   procedure Set_Renamed_Entity\n-     (N : Entity_Id; Val : Node_Id) renames Set_Renamed_Or_Alias;\n-   function Renamed_Object\n-     (N : Entity_Id) return Node_Id renames Renamed_Or_Alias;\n-   procedure Set_Renamed_Object\n-     (N : Entity_Id; Val : Node_Id) renames Set_Renamed_Or_Alias;\n+   --  incorrect. Each of the following calls [Set_]Renamed_Or_Alias. Alias and\n+   --  Renamed_Entity are fields of nonobject Entity_Ids, and the value of the\n+   --  field is Entity_Id. Alias is only for callable entities and subprogram\n+   --  types. We sometimes call Set_Renamed_Entity and then expect Alias to\n+   --  return the value set. Renamed_Object is a field of Entity_Ids that are\n+   --  objects, and it returns an expression, because you can rename things\n+   --  like \"X.all(J).Y\". Renamings of entries and subprograms can also be\n+   --  expressions, but those use different mechanisms; the fields here are not\n+   --  used.\n+\n+   function Alias (N : Entity_Id) return Entity_Id;\n+   procedure Set_Alias (N : Entity_Id; Val : Entity_Id);\n+   function Renamed_Entity (N : Entity_Id) return Entity_Id;\n+   procedure Set_Renamed_Entity (N : Entity_Id; Val : Entity_Id);\n+   function Renamed_Object (N : Entity_Id) return Node_Id;\n+   procedure Set_Renamed_Object (N : Entity_Id; Val : Node_Id);\n+\n+   function Renamed_Entity_Or_Object (N : Entity_Id) return Node_Id;\n+   --  This getter is used when we don't know statically whether we want to\n+   --  call Renamed_Entity or Renamed_Object.\n+\n+   procedure Set_Renamed_Object_Of_Possibly_Void\n+     (N : Entity_Id; Val : Node_Id);\n+   --  Set_Renamed_Object doesn't allow Void; this is used in the rare cases\n+   --  where we set the field of an entity that might be Void. It might be a\n+   --  good idea to get rid of calls to this.\n \n    pragma Inline (Alias);\n    pragma Inline (Set_Alias);\n    pragma Inline (Renamed_Entity);\n    pragma Inline (Set_Renamed_Entity);\n    pragma Inline (Renamed_Object);\n    pragma Inline (Set_Renamed_Object);\n+   pragma Inline (Renamed_Entity_Or_Object);\n+   pragma Inline (Set_Renamed_Object_Of_Possibly_Void);\n \n    -------------------\n    -- Type Synonyms --\n@@ -274,14 +288,21 @@ package Einfo.Utils is\n    function Safe_Emax_Value                     (Id : E) return U;\n    function Safe_First_Value                    (Id : E) return R;\n    function Safe_Last_Value                     (Id : E) return R;\n-   function Scope_Depth                         (Id : E) return U;\n-   function Scope_Depth_Set                     (Id : E) return B;\n    function Size_Clause                         (Id : E) return N;\n    function Stream_Size_Clause                  (Id : E) return N;\n    function Type_High_Bound                     (Id : E) return N;\n    function Type_Low_Bound                      (Id : E) return N;\n    function Underlying_Type                     (Id : E) return E;\n \n+   function Scope_Depth                         (Id : E) return U;\n+   function Scope_Depth_Set                     (Id : E) return B;\n+\n+   function Scope_Depth_Default_0               (Id : E) return U;\n+   --  In rare cases, the Scope_Depth_Value (queried by Scope_Depth) is\n+   --  not correctly set before querying it; this may be used instead of\n+   --  Scope_Depth in such cases. It returns Uint_0 if the Scope_Depth_Value\n+   --  has not been set. See documentation in Einfo.\n+\n    pragma Inline (Address_Clause);\n    pragma Inline (Alignment_Clause);\n    pragma Inline (Base_Type);\n@@ -310,75 +331,96 @@ package Einfo.Utils is\n    pragma Inline (Type_High_Bound);\n    pragma Inline (Type_Low_Bound);\n \n-   ----------------------------------------------\n-   -- Type Representation Attribute Predicates --\n-   ----------------------------------------------\n+   ------------------------------------------\n+   -- Type Representation Attribute Fields --\n+   ------------------------------------------\n+\n+   function Known_Alignment (E : Entity_Id) return B with Inline;\n+   procedure Reinit_Alignment (Id : E) with Inline;\n+   procedure Copy_Alignment (To, From : E);\n+\n+   function Known_Component_Bit_Offset (E : Entity_Id) return B with Inline;\n+   function Known_Static_Component_Bit_Offset (E : Entity_Id) return B\n+     with Inline;\n+\n+   function Known_Component_Size (E : Entity_Id) return B with Inline;\n+   function Known_Static_Component_Size (E : Entity_Id) return B with Inline;\n+\n+   function Known_Esize (E : Entity_Id) return B with Inline;\n+   function Known_Static_Esize (E : Entity_Id) return B with Inline;\n+   procedure Reinit_Esize (Id : E) with Inline;\n+   procedure Copy_Esize (To, From : E);\n \n-   --  These predicates test the setting of the indicated attribute. The\n-   --  Known predicate is True if and only if the value has been set. The\n-   --  Known_Static predicate is True only if the value is set (Known) and is\n-   --  set to a compile time known value. Note that in the case of Alignment\n-   --  and Normalized_First_Bit, dynamic values are not possible, so we do not\n-   --  need a separate Known_Static calls in these cases. The not set (unknown)\n-   --  values are as follows:\n-\n-   --    Alignment               Uint_0 or No_Uint\n-   --    Component_Size          Uint_0 or No_Uint\n-   --    Component_Bit_Offset    No_Uint\n-   --    Digits_Value            Uint_0 or No_Uint\n-   --    Esize                   Uint_0 or No_Uint\n-   --    Normalized_First_Bit    No_Uint\n-   --    Normalized_Position     No_Uint\n-   --    Normalized_Position_Max No_Uint\n-   --    RM_Size                 Uint_0 or No_Uint\n-\n-   --  It would be cleaner to use No_Uint in all these cases, but historically\n-   --  we chose to use Uint_0 at first, and the change over will take time ???\n-   --  This is particularly true for the RM_Size field, where a value of zero\n-   --  is legitimate. We deal with this by a considering that the value is\n-   --  always known static for discrete types (and no other types can have\n-   --  an RM_Size value of zero).\n+   function Known_Normalized_First_Bit (E : Entity_Id) return B with Inline;\n+   function Known_Static_Normalized_First_Bit (E : Entity_Id) return B\n+     with Inline;\n \n+   function Known_Normalized_Position (E : Entity_Id) return B with Inline;\n+   function Known_Static_Normalized_Position (E : Entity_Id) return B\n+     with Inline;\n+\n+   function Known_RM_Size (E : Entity_Id) return B with Inline;\n+   function Known_Static_RM_Size (E : Entity_Id) return B with Inline;\n+   procedure Reinit_RM_Size (Id : E) with Inline;\n+   procedure Copy_RM_Size (To, From : E);\n+\n+   --  NOTE: \"known\" here does not mean \"known at compile time\". It means that\n+   --  the compiler has computed the value of the field (either by default, or\n+   --  by noting some representation clauses), and the field has not been\n+   --  reinitialized.\n+   --\n+   --  We document the Esize functions here; the others above are analogous:\n+   --\n+   --     Known_Esize: True if Set_Esize has been called without a subsequent\n+   --     Reinit_Esize.\n+   --\n+   --     Known_Static_Esize: True if Known_Esize and the Esize is known at\n+   --     compile time. (We're not using \"static\" in the Ada RM sense here. We\n+   --     are using it to mean \"known at compile time\".)\n+   --\n+   --     Reinit_Esize: Set the Esize field to its initial unknown state.\n+   --\n+   --     Copy_Esize: Copies the Esize from From to To; Known_Esize (From) may\n+   --     be False, in which case Known_Esize (To) becomes False.\n+   --\n+   --     Esize: This is the normal automatically-generated getter for Esize,\n+   --     declared elsewhere. Returns No_Uint if not Known_Esize.\n+   --\n+   --     Set_Esize: This is the normal automatically-generated setter for\n+   --     Esize. After a call to this, Known_Esize is True. It is an error\n+   --     to call this with a No_Uint value.\n+   --\n+   --  Normally, we call Set_Esize first, and then query Esize (and similarly\n+   --  for other fields). However in some cases, we need to check Known_Esize\n+   --  before calling Esize, because the code is written in such a way that we\n+   --  don't know whether Set_Esize has already been called.\n+   --\n    --  In two cases, Known_Static_Esize and Known_Static_RM_Size, there is one\n    --  more consideration, which is that we always return False for generic\n-   --  types. Within a template, the size can look known, because of the fake\n-   --  size values we put in template types, but they are not really known and\n-   --  anyone testing if they are known within the template should get False as\n-   --  a result to prevent incorrect assumptions.\n-\n-   function Known_Alignment                       (E : Entity_Id) return B;\n-   function Known_Component_Bit_Offset            (E : Entity_Id) return B;\n-   function Known_Component_Size                  (E : Entity_Id) return B;\n-   function Known_Esize                           (E : Entity_Id) return B;\n-   function Known_Normalized_First_Bit            (E : Entity_Id) return B;\n-   function Known_Normalized_Position             (E : Entity_Id) return B;\n-   function Known_Normalized_Position_Max         (E : Entity_Id) return B;\n-   function Known_RM_Size                         (E : Entity_Id) return B;\n-\n-   function Known_Static_Component_Bit_Offset     (E : Entity_Id) return B;\n-   function Known_Static_Component_Size           (E : Entity_Id) return B;\n-   function Known_Static_Esize                    (E : Entity_Id) return B;\n-   function Known_Static_Normalized_First_Bit     (E : Entity_Id) return B;\n-   function Known_Static_Normalized_Position      (E : Entity_Id) return B;\n-   function Known_Static_Normalized_Position_Max  (E : Entity_Id) return B;\n-   function Known_Static_RM_Size                  (E : Entity_Id) return B;\n-\n-   pragma Inline (Known_Alignment);\n-   pragma Inline (Known_Component_Bit_Offset);\n-   pragma Inline (Known_Component_Size);\n-   pragma Inline (Known_Esize);\n-   pragma Inline (Known_Normalized_First_Bit);\n-   pragma Inline (Known_Normalized_Position);\n-   pragma Inline (Known_Normalized_Position_Max);\n-   pragma Inline (Known_RM_Size);\n-\n-   pragma Inline (Known_Static_Component_Bit_Offset);\n-   pragma Inline (Known_Static_Component_Size);\n-   pragma Inline (Known_Static_Esize);\n-   pragma Inline (Known_Static_Normalized_First_Bit);\n-   pragma Inline (Known_Static_Normalized_Position);\n-   pragma Inline (Known_Static_Normalized_Position_Max);\n-   pragma Inline (Known_Static_RM_Size);\n+   --  types. Within a template, the size can look Known_Static, because of the\n+   --  fake size values we put in template types, but they are not really\n+   --  Known_Static and anyone testing if they are Known_Static within the\n+   --  template should get False as a result to prevent incorrect assumptions.\n+\n+   ---------------------------------------------------------\n+   -- Procedures for setting multiple of the above fields --\n+   ---------------------------------------------------------\n+\n+   procedure Reinit_Component_Location (Id : E);\n+   --  Initializes all fields describing the location of a component\n+   --  (Normalized_Position, Component_Bit_Offset, Normalized_First_Bit,\n+   --  Esize) to all be Unknown.\n+\n+   procedure Init_Size (Id : E; V : Int);\n+   --  Initialize both the Esize and RM_Size fields of E to V\n+\n+   procedure Reinit_Size_Align (Id : E);\n+   --  This procedure initializes both size fields and the alignment\n+   --  field to all be Unknown.\n+\n+   procedure Reinit_Object_Size_Align (Id : E);\n+   --  Same as Reinit_Size_Align except RM_Size field (which is only for types)\n+   --  is unaffected.\n \n    ---------------------------------------------------\n    -- Access to Subprograms in Subprograms_For_Type --\n@@ -404,89 +446,6 @@ package Einfo.Utils is\n    procedure Set_Predicate_Function              (Id : E; V : E);\n    procedure Set_Predicate_Function_M            (Id : E; V : E);\n \n-   -----------------------------------\n-   -- Field Initialization Routines --\n-   -----------------------------------\n-\n-   --  These routines are overloadings of some of the above Set procedures\n-   --  where the argument is normally a Uint. The overloadings take an Int\n-   --  parameter instead, and appropriately convert it. There are also\n-   --  versions that implicitly initialize to the appropriate \"not set\"\n-   --  value. The not set (unknown) values are as follows:\n-\n-   --    Alignment                 Uint_0\n-   --    Component_Size            Uint_0\n-   --    Component_Bit_Offset      No_Uint\n-   --    Digits_Value              Uint_0\n-   --    Esize                     Uint_0\n-   --    Normalized_First_Bit      No_Uint\n-   --    Normalized_Position       No_Uint\n-   --    Normalized_Position_Max   No_Uint\n-   --    RM_Size                   Uint_0\n-\n-   --  It would be cleaner to use No_Uint in all these cases, but historically\n-   --  we chose to use Uint_0 at first, and the change over will take time ???\n-   --  This is particularly true for the RM_Size field, where a value of zero\n-   --  is legitimate and causes some special tests around the code.\n-\n-   --  Contrary to the corresponding Set procedures above, these routines\n-   --  do NOT check the entity kind of their argument, instead they set the\n-   --  underlying Uint fields directly (this allows them to be used for\n-   --  entities whose Ekind has not been set yet).\n-\n-   procedure Init_Alignment                (Id : E; V : Int);\n-   procedure Init_Component_Bit_Offset     (Id : E; V : Int);\n-   procedure Init_Component_Size           (Id : E; V : Int);\n-   procedure Init_Digits_Value             (Id : E; V : Int);\n-   procedure Init_Esize                    (Id : E; V : Int);\n-   procedure Init_Normalized_First_Bit     (Id : E; V : Int);\n-   procedure Init_Normalized_Position      (Id : E; V : Int);\n-   procedure Init_Normalized_Position_Max  (Id : E; V : Int);\n-   procedure Init_RM_Size                  (Id : E; V : Int);\n-\n-   procedure Init_Alignment                (Id : E);\n-   procedure Init_Component_Bit_Offset     (Id : E);\n-   procedure Init_Component_Size           (Id : E);\n-   procedure Init_Digits_Value             (Id : E);\n-   procedure Init_Esize                    (Id : E);\n-   procedure Init_Normalized_First_Bit     (Id : E);\n-   procedure Init_Normalized_Position      (Id : E);\n-   procedure Init_Normalized_Position_Max  (Id : E);\n-   procedure Init_RM_Size                  (Id : E);\n-\n-   --  The following Copy_xxx procedures copy the value of xxx from From to\n-   --  To. If xxx is set to its initial invalid (zero-bits) value, then it is\n-   --  reset to invalid in To. We only have Copy_Alignment so far, but more are\n-   --  planned.\n-\n-   procedure Copy_Alignment (To, From : E);\n-\n-   pragma Inline (Init_Alignment);\n-   pragma Inline (Init_Component_Bit_Offset);\n-   pragma Inline (Init_Component_Size);\n-   pragma Inline (Init_Digits_Value);\n-   pragma Inline (Init_Esize);\n-   pragma Inline (Init_Normalized_First_Bit);\n-   pragma Inline (Init_Normalized_Position);\n-   pragma Inline (Init_Normalized_Position_Max);\n-   pragma Inline (Init_RM_Size);\n-\n-   procedure Init_Component_Location (Id : E);\n-   --  Initializes all fields describing the location of a component\n-   --  (Normalized_Position, Component_Bit_Offset, Normalized_First_Bit,\n-   --  Normalized_Position_Max, Esize) to all be Unknown.\n-\n-   procedure Init_Size (Id : E; V : Int);\n-   --  Initialize both the Esize and RM_Size fields of E to V\n-\n-   procedure Init_Size_Align (Id : E);\n-   --  This procedure initializes both size fields and the alignment\n-   --  field to all be Unknown.\n-\n-   procedure Init_Object_Size_Align (Id : E);\n-   --  Same as Init_Size_Align except RM_Size field (which is only for types)\n-   --  is unaffected.\n-\n    ---------------\n    -- Iterators --\n    ---------------\n@@ -668,7 +627,7 @@ package Einfo.Utils is\n \n    --  WARNING: There is a matching C declaration of this subprogram in fe.h\n \n-   procedure Link_Entities (First : Entity_Id; Second : Entity_Id);\n+   procedure Link_Entities (First, Second : Entity_Id);\n    --  Link entities First and Second in one entity chain.\n    --\n    --  NOTE: No updates are done to the First_Entity and Last_Entity fields"}, {"sha": "e7be24f69f6137efa8e92fabd3de5de9a1f66637", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "c709a1f56fdf3b6fc173015a9bc7e4662a06eb62", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 108, "deletions": 54, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -610,12 +610,23 @@ package Einfo is\n --       tables must be consulted to determine if there actually is an active\n --       Suppress or Unsuppress pragma that applies to the entity.\n \n---    Class_Wide_Clone\n---       Defined on subprogram entities. Set if the subprogram has a class-wide\n---       pre- or postcondition, and the expression contains calls to other\n---       primitive funtions of the type. Used to implement properly the\n---       semantics of inherited operations whose class-wide condition may\n---       be different from that of the ancestor (See AI012-0195).\n+--    Class_Postconditions\n+--       Defined on subprogram entities. Set if the subprogram has class-wide\n+--       postconditions. Denotes the (and-then) expression built by merging\n+--       inherited class-wide postconditions with its own class-wide\n+--       postconditions.\n+\n+--    Class_Preconditions\n+--       Defined on subprogram entities. Set if the subprogram has class-wide\n+--       preconditions. Denotes the (or-else) expression built by merging\n+--       inherited class-wide preconditions with its own class-wide\n+--       preconditions.\n+\n+--    Class_Preconditions_Subprogram\n+--       Defined on subprogram entities. Set on subprogram helpers and also on\n+--       the indirect-call wrapper internally built for subprograms that have\n+--       class-wide preconditions. References the subprogram that has the\n+--       class-wide preconditions.\n \n --    Class_Wide_Type\n --       Defined in all type entities. For a tagged type or subtype, returns\n@@ -746,9 +757,9 @@ package Einfo is\n \n --    Corresponding_Record_Component\n --       Defined in components of a derived untagged record type, including\n---       discriminants. For a regular component or a girder discriminant,\n+--       discriminants. For a regular component or a stored discriminant,\n --       points to the corresponding component in the parent type. Set to\n---       Empty for a non-girder discriminant. It is used by the back end to\n+--       Empty for a non-stored discriminant. It is used by the back end to\n --       ensure the layout of the derived type matches that of the parent\n --       type when there is no representation clause on the derived type.\n \n@@ -818,7 +829,9 @@ package Einfo is\n --       a private type, then we obtain the declaration node denoted by the\n --       full type, i.e. the full type declaration node. Also note that for\n --       subprograms, this returns the {function,procedure}_specification, not\n---       the subprogram_declaration.\n+--       the subprogram_declaration. If the parent of an Itype is a type or\n+--       subtype declaration, we return the declaration node as for any other\n+--       type. For other Itypes, we return Empty.\n \n --    Default_Aspect_Component_Value [base type only]\n --       Defined in array types. Holds the static value specified in a\n@@ -933,16 +946,17 @@ package Einfo is\n \n --    Direct_Primitive_Operations\n --       Defined in tagged types and subtypes (including synchronized types),\n---       in tagged private types, and in tagged incomplete types. However, when\n---       Extensions_Allowed is True (-gnatX), also defined for untagged types\n---       (for support of the extension feature of prefixed calls for untagged\n---       types). This field is an element list of entities for primitive\n---       operations of the type. For incomplete types the list is always empty.\n---       In order to follow the C++ ABI, entities of primitives that come from\n---       source must be stored in this list in the order of their occurrence in\n---       the sources. When expansion is disabled, the corresponding record type\n---       of a synchronized type is not constructed. In that case, such types\n---       carry this attribute directly.\n+--       in tagged private types, and in tagged incomplete types. Moreover, it\n+--       is also defined for untagged types, both when Extensions_Allowed is\n+--       True (-gnatX) to support the extension feature of prefixed calls for\n+--       untagged types, and when Extensions_Allowed is False to get better\n+--       error messages. This field is an element list of entities for\n+--       primitive operations of the type. For incomplete types the list is\n+--       always empty. In order to follow the C++ ABI, entities of primitives\n+--       that come from source must be stored in this list in the order of\n+--       their occurrence in the sources. When expansion is disabled, the\n+--       corresponding record type of a synchronized type is not constructed.\n+--       In that case, such types carry this attribute directly.\n \n --    Directly_Designated_Type\n --       Defined in access types. This field points to the type that is\n@@ -1029,6 +1043,11 @@ package Einfo is\n --       associated with the tagged type. For an untagged record, contains\n --       No_Elist.\n \n+--    Dynamic_Call_Helper\n+--       Defined on subprogram entities. Set if the subprogram has class-wide\n+--       preconditions. Denotes the helper that evaluates at run time the\n+--       class-wide preconditions performing dispatching calls.\n+\n --    DTC_Entity\n --       Defined in function and procedure entities. Set to Empty unless\n --       the subprogram is dispatching in which case it references the\n@@ -2182,6 +2201,18 @@ package Einfo is\n --       \"off\" and indicates that all SPARK_Mode pragmas found within must\n --       be ignored.\n \n+--    Ignored_Class_Postconditions\n+--       Defined on subprogram entities. Set if the subprogram has class-wide\n+--       postconditions. Denotes the (and-then) expression built by merging\n+--       inherited ignored class-wide postconditions with its own ignored\n+--       class-wide postconditions.\n+\n+--    Ignored_Class_Preconditions\n+--       Defined on subprogram entities. Set if the subprogram has class-wide\n+--       preconditions. Denotes the (or-else) expression built by merging\n+--       inherited ignored class-wide preconditions with its own ignored\n+--       class-wide preconditions.\n+\n --    Implementation_Base_Type (synthesized)\n --       Applies to all entities. For types, similar to Base_Type, but never\n --       returns a private type when applied to a non-private type. Instead in\n@@ -2216,6 +2247,12 @@ package Einfo is\n --       is relocated to the corresponding package body, which must have a\n --       corresponding nonlimited with_clause.\n \n+--    Indirect_Call_Wrapper\n+--       Defined on subprogram entities. Set if the subprogram has class-wide\n+--       preconditions. Denotes the internal wrapper that checks preconditions\n+--       and invokes the subprogram body. Subp'Access points to the indirect\n+--       call wrapper if available.\n+\n --    Initialization_Statements\n --       Defined in constants and variables. For a composite object initialized\n --       with an aggregate that has been converted to a sequence of\n@@ -2393,18 +2430,23 @@ package Einfo is\n --    Is_Class_Wide_Type (synthesized)\n --       Applies to all entities, true for class wide types and subtypes\n \n+--    Is_Class_Wide_Wrapper\n+--       Defined in subprogram entities. Indicates that it has been created as\n+--       a wrapper in a generic/instance scenario involving a formal type and\n+--       a generic primitive operation when the actual is a class-wide type.\n+\n --    Is_Compilation_Unit\n --       Defined in all entities. Set if the entity is a package or subprogram\n --       entity for a compilation unit other than a subunit (since we treat\n --       subunits as part of the same compilation operation as the ultimate\n --       parent, we do not consider them to be separate units for this flag).\n \n --    Is_Completely_Hidden\n---       Defined on discriminants. Only set on girder discriminants of\n---       untagged types. When set, the entity is a girder discriminant of a\n+--       Defined on discriminants. Only set on stored discriminants of\n+--       untagged types. When set, the entity is a stored discriminant of a\n --       derived untagged type which is not directly visible in the derived\n --       type because the derived type or one of its ancestors have renamed the\n---       discriminants in the root type. Note: there are girder discriminants\n+--       discriminants in the root type. Note: there are stored discriminants\n --       which are not Completely_Hidden (e.g. discriminants of a root type).\n \n --    Is_Composite_Type (synthesized)\n@@ -2507,6 +2549,11 @@ package Einfo is\n --       Applies to all entities. Set to indicate to the backend that this\n --       entity is associated with a dispatch table.\n \n+--    Is_Dispatch_Table_Wrapper\n+--       Applies to all entities. Set on wrappers built when the subprogram has\n+--       class-wide preconditions or class-wide postconditions affected by\n+--       overriding (AI12-0195).\n+\n --    Is_Dispatching_Operation\n --       Defined in all entities. Set for procedures, functions, generic\n --       procedures, and generic functions if the corresponding operation\n@@ -3652,7 +3699,7 @@ package Einfo is\n \n --    Next_Discriminant (synthesized)\n --       Applies to discriminants returned by First/Next_Discriminant. Returns\n---       the next language-defined (i.e. perhaps non-girder) discriminant by\n+--       the next language-defined (i.e. perhaps non-stored) discriminant by\n --       following the chain of declared entities as long as the kind of the\n --       entity corresponds to a discriminant. Note that the discriminants\n --       might be the only components of the record. Returns Empty if there\n@@ -3698,7 +3745,7 @@ package Einfo is\n \n --    No_Dynamic_Predicate_On_Actual\n --       Defined in discrete types. Set for generic formal types that are used\n---       in loops and quantified expressions. The corresponing actual cannot\n+--       in loops and quantified expressions. The corresponding actual cannot\n --       have dynamic predicates.\n \n --    No_Pool_Assigned [root type only]\n@@ -3762,17 +3809,6 @@ package Einfo is\n --       units from the start of the record to the lowest addressed storage\n --       unit containing part or all of the field.\n \n---    Normalized_Position_Max\n---       Defined in components and discriminants. For almost all cases, this\n---       is the same as Normalized_Position. The one exception is for the case\n---       of a discriminated record containing one or more arrays whose length\n---       depends on discriminants. In this case, the Normalized_Position_Max\n---       field represents the maximum possible value of Normalized_Position\n---       assuming min/max values for discriminant subscripts in all fields.\n---       This is used by Layout in front end layout mode to properly compute\n---       the maximum size of such records (needed for allocation purposes when\n---       there are default discriminants, and also for the 'Size value).\n-\n --    Number_Dimensions (synthesized)\n --       Applies to array types and subtypes. Returns the number of dimensions\n --       of the array type or subtype as a value of type Pos.\n@@ -3853,8 +3889,8 @@ package Einfo is\n --            Rec_Ext.Comp -> Rec_Ext.Parent. ... .Parent.Comp\n --\n --       In base untagged types:\n---         Always points to itself except for non-girder discriminants, where\n---         it points to the girder discriminant it renames.\n+--         Always points to itself except for non-stored discriminants, where\n+--         it points to the stored discriminant it renames.\n --\n --       In subtypes (tagged and untagged):\n --         Points to the component in the base type.\n@@ -4288,7 +4324,8 @@ package Einfo is\n --       Indicates the number of scopes that statically enclose the declaration\n --       of the unit or type. Library units have a depth of zero. Note that\n --       record types can act as scopes but do NOT have this field set (see\n---       Scope_Depth above).\n+--       Scope_Depth above). Queries should normally be via Scope_Depth,\n+--       and not call Scope_Depth_Value directly.\n \n --    Scope_Depth_Set (synthesized)\n --       Applies to a special predicate function that returns a Boolean value\n@@ -4412,6 +4449,11 @@ package Einfo is\n --       Default_Scalar_Storage_Order (High_Order_First) was active at the time\n --       the record or array was declared and therefore applies to it.\n \n+--    Static_Call_Helper\n+--       Defined on subprogram entities. Set if the subprogram has class-wide\n+--       preconditions. Denotes the helper that evaluates at runtime the\n+--       class-wide preconditions performing static calls.\n+\n --    Static_Discrete_Predicate\n --       Defined in discrete types/subtypes with static predicates (with the\n --       two flags Has_Predicates and Has_Static_Predicate set). Set if the\n@@ -4515,7 +4557,7 @@ package Einfo is\n --       in inheritance of subprograms between views of the same type.\n \n --    Subps_Index\n---       Present in subprogram entries. Set if the subprogram contains nested\n+--       Present in subprogram entities. Set if the subprogram contains nested\n --       subprograms, or is a subprogram nested within such a subprogram. Holds\n --       the index in the Exp_Unst.Subps table for the subprogram. Note that\n --       for the outer level subprogram, this is the starting index in the Subp\n@@ -4721,7 +4763,7 @@ package Einfo is\n \n --  Several entity attributes relate to renaming constructs, and to the use of\n --  different names to refer to the same entity. The following is a summary of\n---  these constructs and their prefered uses.\n+--  these constructs and their preferred uses.\n \n --  There are three related attributes:\n \n@@ -4734,7 +4776,7 @@ package Einfo is\n \n --  a) Renamed_Entity applies to entities in renaming declarations that rename\n --  an entity, so the value of the attribute IS an entity. This applies to\n---  generic renamings, package renamings, exception renamings, and subprograms\n+--  generic renamings, package renamings, exception renamings, and subprogram\n --  renamings that rename a subprogram (rather than an attribute, an entry, a\n --  protected operation, etc).\n \n@@ -4756,9 +4798,9 @@ package Einfo is\n --  in a few cases we need to use a loop to trace a chain of object renamings\n --  where all of them happen to be entities. So:\n \n---    X : integer;\n---    Y : integer renames X;   -- renamed object is the identifier X\n---    Z : integer renames Y;   -- renamed object is the identifier Y\n+--    X : Integer;\n+--    Y : Integer renames X;   -- renamed object is the identifier X\n+--    Z : Integer renames Y;   -- renamed object is the identifier Y\n \n --  The front-end does not store explicitly the fact that Z renames X.\n \n@@ -4822,10 +4864,6 @@ package Einfo is\n --  associated with an access attribute. After resolution a specific access\n --  type will be established as determined by the context.\n \n---  Finally, the type Any_Access is used to label -null- during type\n---  resolution. Any_Access is also replaced by the context type after\n---  resolution.\n-\n    --------------------------------------------------------\n    -- Description of Defined Attributes for Entity_Kinds --\n    --------------------------------------------------------\n@@ -4889,6 +4927,7 @@ package Einfo is\n    --    Is_Discrim_SO_Function\n    --    Is_Discriminant_Check_Function\n    --    Is_Dispatch_Table_Entity\n+   --    Is_Dispatch_Table_Wrapper\n    --    Is_Dispatching_Operation\n    --    Is_Entry_Formal\n    --    Is_Exported\n@@ -5228,7 +5267,6 @@ package Einfo is\n    --    Linker_Section_Pragma $$$\n    --    Normalized_First_Bit\n    --    Current_Value                         (always Empty)\n-   --    Normalized_Position_Max\n    --    Component_Bit_Offset\n    --    Esize\n    --    Component_Clause\n@@ -5311,7 +5349,7 @@ package Einfo is\n    --    Size_Clause                           (synth)\n \n    --  E_Decimal_Fixed_Point_Type\n-   --  E_Decimal_Fixed_Subtype$$$no such thing\n+   --  E_Decimal_Fixed_Point_Subtype\n    --    Scale_Value\n    --    Digits_Value\n    --    Scalar_Range\n@@ -5328,7 +5366,6 @@ package Einfo is\n    --  E_Discriminant\n    --    Normalized_First_Bit\n    --    Current_Value                         (always Empty)\n-   --    Normalized_Position_Max\n    --    Component_Bit_Offset\n    --    Esize\n    --    Component_Clause\n@@ -5497,7 +5534,14 @@ package Einfo is\n    --    Linker_Section_Pragma\n    --    Contract\n    --    Import_Pragma                        (non-generic case only)\n-   --    Class_Wide_Clone\n+   --    Class_Postconditions\n+   --    Class_Preconditions\n+   --    Class_Preconditions_Subprogram\n+   --    Dynamic_Call_Helper\n+   --    Ignored_Class_Preconditions\n+   --    Ignored_Class_Postconditions\n+   --    Indirect_Call_Wrapper\n+   --    Static_Call_Helper\n    --    Protected_Subprogram                 (non-generic case only)\n    --    SPARK_Pragma\n    --    Original_Protected_Subprogram\n@@ -5521,6 +5565,7 @@ package Einfo is\n    --    Ignore_SPARK_Mode_Pragmas\n    --    Is_Abstract_Subprogram               (non-generic case only)\n    --    Is_Called                            (non-generic case only)\n+   --    Is_Class_Wide_Wrapper\n    --    Is_Constructor\n    --    Is_CUDA_Kernel                       (non-generic case only)\n    --    Is_DIC_Procedure                     (non-generic case only)\n@@ -5693,6 +5738,7 @@ package Einfo is\n    --    Default_Expressions_Processed\n    --    Has_Nested_Subprogram\n    --    Ignore_SPARK_Mode_Pragmas\n+   --    Is_Class_Wide_Wrapper\n    --    Is_Elaboration_Checks_OK_Id\n    --    Is_Elaboration_Warnings_OK_Id\n    --    Is_Intrinsic_Subprogram\n@@ -5853,7 +5899,14 @@ package Einfo is\n    --    Linker_Section_Pragma\n    --    Contract\n    --    Import_Pragma                        (non-generic case only)\n-   --    Class_Wide_Clone\n+   --    Class_Postconditions\n+   --    Class_Preconditions\n+   --    Class_Preconditions_Subprogram\n+   --    Dynamic_Call_Helper\n+   --    Ignored_Class_Preconditions\n+   --    Ignored_Class_Postconditions\n+   --    Indirect_Call_Wrapper\n+   --    Static_Call_Helper\n    --    Protected_Subprogram                 (non-generic case only)\n    --    SPARK_Pragma\n    --    Original_Protected_Subprogram\n@@ -5876,6 +5929,7 @@ package Einfo is\n    --    Is_Abstract_Subprogram               (non-generic case only)\n    --    Is_Asynchronous\n    --    Is_Called                            (non-generic case only)\n+   --    Is_Class_Wide_Wrapper\n    --    Is_Constructor\n    --    Is_CUDA_Kernel\n    --    Is_DIC_Procedure                     (non-generic case only)"}, {"sha": "f75c1269383ee1dbe29fb5a9ae40665b9baa70a2", "filename": "gcc/ada/elists.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Felists.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Felists.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Felists.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "4b07f21ebfacc481c436245853c612ed45b2c225", "filename": "gcc/ada/elists.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Felists.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Felists.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Felists.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "7f99b633ea71e453c406986e1de7697be3ee8594", "filename": "gcc/ada/elists.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Felists.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Felists.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Felists.h?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *            Copyright (C) 1992-2021, Free Software Foundation, Inc.       *\n+ *            Copyright (C) 1992-2022, Free Software Foundation, Inc.       *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "7af436e4139b160552515eca4a1e819f74405043", "filename": "gcc/ada/env.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fenv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fenv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fenv.c?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *            Copyright (C) 2005-2021, Free Software Foundation, Inc.       *\n+ *            Copyright (C) 2005-2022, Free Software Foundation, Inc.       *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "5df7dc1a5368a856f3450ef108002e01ed8aab42", "filename": "gcc/ada/env.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fenv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fenv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fenv.h?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 2009-2021, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 2009-2022, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "105f46788e02e54eb5e4e74b274a45930287007d", "filename": "gcc/ada/err_vars.ads", "status": "modified", "additions": 11, "deletions": 16, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ferr_vars.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ferr_vars.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferr_vars.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -61,14 +61,6 @@ package Err_Vars is\n    --  not get reset by any Error_Msg call, so the caller is responsible\n    --  for resetting it.\n \n-   Warn_On_Instance : Boolean := False;\n-   --  Normally if a warning is generated in a generic template from the\n-   --  analysis of the template, then the warning really belongs in the\n-   --  template, and the default value of False for this Boolean achieves\n-   --  that effect. If Warn_On_Instance is set True, then the warnings are\n-   --  generated on the instantiation (referring to the template) rather\n-   --  than on the template itself.\n-\n    Raise_Exception_On_Error : Nat := 0;\n    --  If this value is non-zero, then any attempt to generate an error\n    --  message raises the exception Error_Msg_Exception, and the error\n@@ -105,12 +97,15 @@ package Err_Vars is\n    --  of the following global variables to appropriate values before making a\n    --  call to one of the error message routines with a string containing the\n    --  insertion character to get the value inserted in an appropriate format.\n+   --\n+   --  Some of these are initialized below, because they are read before being\n+   --  set by clients.\n \n    Error_Msg_Col : Column_Number;\n    --  Column for @ insertion character in message\n \n    Error_Msg_Uint_1 : Uint;\n-   Error_Msg_Uint_2 : Uint;\n+   Error_Msg_Uint_2 : Uint := No_Uint;\n    --  Uint values for ^ insertion characters in message\n \n    --  WARNING: There is a matching C declaration of these variables in fe.h\n@@ -119,21 +114,21 @@ package Err_Vars is\n    --  Source location for # insertion character in message\n \n    Error_Msg_Name_1 : Name_Id;\n-   Error_Msg_Name_2 : Name_Id;\n-   Error_Msg_Name_3 : Name_Id;\n+   Error_Msg_Name_2 : Name_Id := No_Name;\n+   Error_Msg_Name_3 : Name_Id := No_Name;\n    --  Name_Id values for % insertion characters in message\n \n    Error_Msg_File_1 : File_Name_Type;\n-   Error_Msg_File_2 : File_Name_Type;\n-   Error_Msg_File_3 : File_Name_Type;\n+   Error_Msg_File_2 : File_Name_Type := No_File;\n+   Error_Msg_File_3 : File_Name_Type := No_File;\n    --  File_Name_Type values for { insertion characters in message\n \n    Error_Msg_Unit_1 : Unit_Name_Type;\n-   Error_Msg_Unit_2 : Unit_Name_Type;\n+   Error_Msg_Unit_2 : Unit_Name_Type := No_Unit_Name;\n    --  Unit_Name_Type values for $ insertion characters in message\n \n    Error_Msg_Node_1 : Node_Id;\n-   Error_Msg_Node_2 : Node_Id;\n+   Error_Msg_Node_2 : Node_Id := Empty;\n    --  Node_Id values for & insertion characters in message\n \n    Error_Msg_Warn : Boolean;"}, {"sha": "d3062a41b3021395ddae3a9fb4edbc39eeb54b9c", "filename": "gcc/ada/errno.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ferrno.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ferrno.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrno.c?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *           Copyright (C) 1992-2021, Free Software Foundation, Inc.        *\n+ *           Copyright (C) 1992-2022, Free Software Foundation, Inc.        *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "b8626376b0c367ad672cf1d2ffb5d82764ac39e8", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 143, "deletions": 175, "changes": 318, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -106,15 +106,15 @@ package body Errout is\n       Opan     : Source_Span;\n       Msg_Cont : Boolean;\n       Node     : Node_Id);\n-   --  This is the low level routine used to post messages after dealing with\n+   --  This is the low-level routine used to post messages after dealing with\n    --  the issue of messages placed on instantiations (which get broken up\n-   --  into separate calls in Error_Msg). Sptr is the location on which the\n+   --  into separate calls in Error_Msg). Span is the location on which the\n    --  flag will be placed in the output. In the case where the flag is on\n    --  the template, this points directly to the template, not to one of the\n-   --  instantiation copies of the template. Optr is the original location\n+   --  instantiation copies of the template. Opan is the original location\n    --  used to flag the error, and this may indeed point to an instantiation\n-   --  copy. So typically we can see Optr pointing to the template location\n-   --  in an instantiation copy when Sptr points to the source location of\n+   --  copy. So typically we can see Opan pointing to the template location\n+   --  in an instantiation copy when Span points to the source location of\n    --  the actual instantiation (i.e the line with the new). Msg_Cont is\n    --  set true if this is a continuation message. Node is the relevant\n    --  Node_Id for this message, to be used to compute the enclosing entity if\n@@ -211,12 +211,9 @@ package body Errout is\n    --  This is called for warning messages only (so Warning_Msg_Char is set)\n    --  and returns a corresponding string to use at the beginning of generated\n    --  auxiliary messages, such as \"in instantiation at ...\".\n-   --    'a' .. 'z'   returns \"?x?\"\n-   --    'A' .. 'Z'   returns \"?X?\"\n-   --    '*'          returns \"?*?\"\n-   --    '$'          returns \"?$?info: \"\n-   --    ' '          returns \" \"\n-   --  No other settings are valid\n+   --    \"?\"     returns \"??\"\n+   --    \" \"     returns \"?\"\n+   --    other   trimmed, prefixed and suffixed with \"?\".\n \n    -----------------------\n    -- Change_Error_Text --\n@@ -443,6 +440,28 @@ package body Errout is\n         and then Warnings_Detected >= Maximum_Messages\n       then\n          return;\n+\n+      --  Suppress warnings inside a loop that is known to be null or is\n+      --  probably null (i.e. when loop executes only if invalid values\n+      --  present). In either case warnings in the loop are likely to be junk.\n+\n+      elsif Is_Warning_Msg and then Present (N) then\n+\n+         declare\n+            P : Node_Id;\n+\n+         begin\n+            P := Parent (N);\n+            while Present (P) loop\n+               if Nkind (P) = N_Loop_Statement\n+                 and then Suppress_Loop_Warnings (P)\n+               then\n+                  return;\n+               end if;\n+\n+               P := Parent (P);\n+            end loop;\n+         end;\n       end if;\n \n       --  The idea at this stage is that we have two kinds of messages\n@@ -808,27 +827,14 @@ package body Errout is\n    -------------------\n \n    procedure Error_Msg_CRT (Feature : String; N : Node_Id) is\n-      CNRT : constant String := \" not allowed in no run time mode\";\n-      CCRT : constant String := \" not supported by configuration>\";\n-\n-      S : String (1 .. Feature'Length + 1 + CCRT'Length);\n-      L : Natural;\n-\n    begin\n-      S (1) := '|';\n-      S (2 .. Feature'Length + 1) := Feature;\n-      L := Feature'Length + 2;\n-\n       if No_Run_Time_Mode then\n-         S (L .. L + CNRT'Length - 1) := CNRT;\n-         L := L + CNRT'Length - 1;\n+         Error_Msg_N ('|' & Feature & \" not allowed in no run time mode\", N);\n \n       else pragma Assert (Configurable_Run_Time_Mode);\n-         S (L .. L + CCRT'Length - 1) := CCRT;\n-         L := L + CCRT'Length - 1;\n+         Error_Msg_N ('|' & Feature & \" not supported by configuration>\", N);\n       end if;\n \n-      Error_Msg_N (S (1 .. L), N);\n       Configurable_Run_Time_Violations := Configurable_Run_Time_Violations + 1;\n    end Error_Msg_CRT;\n \n@@ -1052,7 +1058,7 @@ package body Errout is\n          elsif No (Cunit (Main_Unit)) then\n             null;\n \n-         --  If the flag location is not in the main extended source unit, then\n+         --  If the flag location is not in the extended main source unit, then\n          --  we want to eliminate the warning, unless it is in the extended\n          --  main code unit and we want warnings on the instance.\n \n@@ -1177,7 +1183,7 @@ package body Errout is\n                   Errors.Table (Cur_Msg).Warn := True;\n                   Errors.Table (Cur_Msg).Warn_Chr := Warning_Msg_Char;\n \n-               elsif Warning_Msg_Char /= ' ' then\n+               elsif Warning_Msg_Char /= \"  \" then\n                   Errors.Table (Cur_Msg).Warn_Chr := Warning_Msg_Char;\n                end if;\n             end if;\n@@ -1205,6 +1211,7 @@ package body Errout is\n           Check               => Is_Check_Msg,\n           Warn_Err            => False, -- reset below\n           Warn_Chr            => Warning_Msg_Char,\n+          Warn_Runtime_Raise  => Is_Runtime_Raise,\n           Style               => Is_Style_Msg,\n           Serious             => Is_Serious_Error,\n           Uncond              => Is_Unconditional_Msg,\n@@ -1221,10 +1228,15 @@ package body Errout is\n                       or else\n                     Warning_Treated_As_Error (Get_Warning_Tag (Cur_Msg)));\n \n-      --  Propagate Warn_Err to this message and preceding continuations\n+      --  Propagate Warn_Err to this message and preceding continuations.\n+      --  Likewise, propagate Is_Warning_Msg and Is_Runtime_Raise, because the\n+      --  current continued message could have been escalated from warning to\n+      --  error.\n \n       for J in reverse 1 .. Errors.Last loop\n-         Errors.Table (J).Warn_Err := Warn_Err;\n+         Errors.Table (J).Warn_Err           := Warn_Err;\n+         Errors.Table (J).Warn               := Is_Warning_Msg;\n+         Errors.Table (J).Warn_Runtime_Raise := Is_Runtime_Raise;\n          exit when not Errors.Table (J).Msg_Cont;\n       end loop;\n \n@@ -1493,26 +1505,6 @@ package body Errout is\n             Last_Killed := True;\n             return;\n          end if;\n-\n-         --  Suppress if inside loop that is known to be null or is probably\n-         --  null (case where loop executes only if invalid values present).\n-         --  In either case warnings in the loop are likely to be junk.\n-\n-         declare\n-            P : Node_Id;\n-\n-         begin\n-            P := Parent (N);\n-            while Present (P) loop\n-               if Nkind (P) = N_Loop_Statement\n-                 and then Suppress_Loop_Warnings (P)\n-               then\n-                  return;\n-               end if;\n-\n-               P := Parent (P);\n-            end loop;\n-         end;\n       end if;\n \n       --  Test for message to be output\n@@ -2473,7 +2465,8 @@ package body Errout is\n          function Get_Line_End\n            (Buf : Source_Buffer_Ptr;\n             Loc : Source_Ptr) return Source_Ptr;\n-         --  Get the source location for the end of the line in Buf for Loc\n+         --  Get the source location for the end of the line in Buf for Loc. If\n+         --  Loc is past the end of Buf already, return Buf'Last.\n \n          function Get_Line_Start\n            (Buf : Source_Buffer_Ptr;\n@@ -2515,9 +2508,9 @@ package body Errout is\n            (Buf : Source_Buffer_Ptr;\n             Loc : Source_Ptr) return Source_Ptr\n          is\n-            Cur_Loc : Source_Ptr := Loc;\n+            Cur_Loc : Source_Ptr := Source_Ptr'Min (Loc, Buf'Last);\n          begin\n-            while Cur_Loc <= Buf'Last\n+            while Cur_Loc < Buf'Last\n               and then Buf (Cur_Loc) /= ASCII.LF\n             loop\n                Cur_Loc := Cur_Loc + 1;\n@@ -2692,9 +2685,7 @@ package body Errout is\n                      Write_Buffer_Char (Buf, Cur_Loc);\n                   end if;\n \n-                  Cur_Loc := Cur_Loc + 1;\n-\n-                  if Buf (Cur_Loc - 1) = ASCII.LF then\n+                  if Buf (Cur_Loc) = ASCII.LF then\n                      Cur_Line := Cur_Line + 1;\n \n                      --  Output ... for skipped lines\n@@ -2719,6 +2710,8 @@ package body Errout is\n                            Width);\n                      end if;\n                   end if;\n+\n+                  Cur_Loc := Cur_Loc + 1;\n                end loop;\n             end;\n \n@@ -3256,7 +3249,7 @@ package body Errout is\n       function Check_For_Warning (N : Node_Id) return Traverse_Result;\n       --  This function checks one node for a possible warning message\n \n-      function Check_All_Warnings is new Traverse_Func (Check_For_Warning);\n+      procedure Check_All_Warnings is new Traverse_Proc (Check_For_Warning);\n       --  This defines the traversal operation\n \n       -----------------------\n@@ -3287,13 +3280,17 @@ package body Errout is\n                --  not remove style messages here. They are warning messages\n                --  but not ones we want removed in this context.\n \n-               and then Errors.Table (E).Warn\n+               and then (Errors.Table (E).Warn\n+                           or else\n+                         Errors.Table (E).Warn_Runtime_Raise)\n \n                --  Don't remove unconditional messages\n \n                and then not Errors.Table (E).Uncond\n             then\n-               Warnings_Detected := Warnings_Detected - 1;\n+               if Errors.Table (E).Warn then\n+                  Warnings_Detected := Warnings_Detected - 1;\n+               end if;\n \n                if Errors.Table (E).Info then\n                   Warning_Info_Messages := Warning_Info_Messages - 1;\n@@ -3343,50 +3340,34 @@ package body Errout is\n             --  the current tree. Given that we are in unreachable code, this\n             --  modification to the tree is harmless.\n \n-            declare\n-               Status : Traverse_Final_Result;\n-\n-            begin\n-               if Is_List_Member (N) then\n-                  Set_Condition (N, Original_Node (N));\n-                  Status := Check_All_Warnings (Condition (N));\n-               else\n-                  Rewrite (N, Original_Node (N));\n-                  Status := Check_All_Warnings (N);\n-               end if;\n-\n-               return Status;\n-            end;\n-\n-         else\n-            return OK;\n+            if Is_List_Member (N) then\n+               Set_Condition (N, Original_Node (N));\n+               Check_All_Warnings (Condition (N));\n+            else\n+               Rewrite (N, Original_Node (N));\n+               Check_All_Warnings (N);\n+            end if;\n          end if;\n+\n+         return OK;\n       end Check_For_Warning;\n \n    --  Start of processing for Remove_Warning_Messages\n \n    begin\n       if Warnings_Detected /= 0 then\n-         declare\n-            Discard : Traverse_Final_Result;\n-            pragma Warnings (Off, Discard);\n-\n-         begin\n-            Discard := Check_All_Warnings (N);\n-         end;\n+         Check_All_Warnings (N);\n       end if;\n    end Remove_Warning_Messages;\n \n    procedure Remove_Warning_Messages (L : List_Id) is\n       Stat : Node_Id;\n    begin\n-      if Is_Non_Empty_List (L) then\n-         Stat := First (L);\n-         while Present (Stat) loop\n-            Remove_Warning_Messages (Stat);\n-            Next (Stat);\n-         end loop;\n-      end if;\n+      Stat := First (L);\n+      while Present (Stat) loop\n+         Remove_Warning_Messages (Stat);\n+         Next (Stat);\n+      end loop;\n    end Remove_Warning_Messages;\n \n    --------------------\n@@ -3409,60 +3390,57 @@ package body Errout is\n      (Buf : in out Bounded_String;\n       Loc : Source_Ptr)\n    is\n+      Src_Ind : constant Source_File_Index := Get_Source_File_Index (Loc);\n+      Sbuffer : Source_Buffer_Ptr;\n+      Ref_Ptr : Integer;\n+      Src_Ptr : Source_Ptr;\n+\n    begin\n       --  We have an all lower case name from Namet, and now we want to set\n       --  the appropriate case. If possible we copy the actual casing from\n       --  the source. If not we use standard identifier casing.\n \n-      declare\n-         Src_Ind : constant Source_File_Index := Get_Source_File_Index (Loc);\n-         Sbuffer : Source_Buffer_Ptr;\n-         Ref_Ptr : Integer;\n-         Src_Ptr : Source_Ptr;\n+      Ref_Ptr := 1;\n+      Src_Ptr := Loc;\n \n-      begin\n-         Ref_Ptr := 1;\n-         Src_Ptr := Loc;\n+      --  For standard locations, always use mixed case\n \n-         --  For standard locations, always use mixed case\n+      if Loc <= No_Location then\n+         Set_Casing (Buf, Mixed_Case);\n \n-         if Loc <= No_Location then\n-            Set_Casing (Buf, Mixed_Case);\n+      else\n+         --  Determine if the reference we are dealing with corresponds to text\n+         --  at the point of the error reference. This will often be the case\n+         --  for simple identifier references, and is the case where we can\n+         --  copy the casing from the source.\n+\n+         Sbuffer := Source_Text (Src_Ind);\n+\n+         while Ref_Ptr <= Buf.Length loop\n+            exit when\n+              Fold_Lower (Sbuffer (Src_Ptr)) /=\n+                Fold_Lower (Buf.Chars (Ref_Ptr));\n+            Ref_Ptr := Ref_Ptr + 1;\n+            Src_Ptr := Src_Ptr + 1;\n+         end loop;\n \n-         else\n-            --  Determine if the reference we are dealing with corresponds to\n-            --  text at the point of the error reference. This will often be\n-            --  the case for simple identifier references, and is the case\n-            --  where we can copy the casing from the source.\n+         --  If we get through the loop without a mismatch, then output the\n+         --  name the way it is cased in the source program.\n \n-            Sbuffer := Source_Text (Src_Ind);\n+         if Ref_Ptr > Buf.Length then\n+            Src_Ptr := Loc;\n \n-            while Ref_Ptr <= Buf.Length loop\n-               exit when\n-                 Fold_Lower (Sbuffer (Src_Ptr)) /=\n-                   Fold_Lower (Buf.Chars (Ref_Ptr));\n-               Ref_Ptr := Ref_Ptr + 1;\n+            for J in 1 .. Buf.Length loop\n+               Buf.Chars (J) := Sbuffer (Src_Ptr);\n                Src_Ptr := Src_Ptr + 1;\n             end loop;\n \n-            --  If we get through the loop without a mismatch, then output the\n-            --  name the way it is cased in the source program\n-\n-            if Ref_Ptr > Buf.Length then\n-               Src_Ptr := Loc;\n-\n-               for J in 1 .. Buf.Length loop\n-                  Buf.Chars (J) := Sbuffer (Src_Ptr);\n-                  Src_Ptr := Src_Ptr + 1;\n-               end loop;\n-\n-            --  Otherwise set the casing using the default identifier casing\n+         --  Otherwise set the casing using the default identifier casing\n \n-            else\n-               Set_Casing (Buf, Identifier_Casing (Src_Ind));\n-            end if;\n+         else\n+            Set_Casing (Buf, Identifier_Casing (Src_Ind));\n          end if;\n-      end;\n+      end if;\n    end Adjust_Name_Case;\n \n    ---------------------------\n@@ -3601,15 +3579,9 @@ package body Errout is\n       end if;\n \n       --  The following assignment ensures that a second ampersand insertion\n-      --  character will correspond to the Error_Msg_Node_2 parameter. We\n-      --  suppress possible validity checks in case operating in -gnatVa mode,\n-      --  and Error_Msg_Node_2 is not needed and has not been set.\n+      --  character will correspond to the Error_Msg_Node_2 parameter.\n \n-      declare\n-         pragma Suppress (Range_Check);\n-      begin\n-         Error_Msg_Node_1 := Error_Msg_Node_2;\n-      end;\n+      Error_Msg_Node_1 := Error_Msg_Node_2;\n    end Set_Msg_Insertion_Node;\n \n    --------------------------------------\n@@ -3630,8 +3602,7 @@ package body Errout is\n          Set_Msg_Str (\"exception name\");\n          return;\n \n-      elsif     Error_Msg_Node_1 = Any_Access\n-        or else Error_Msg_Node_1 = Any_Array\n+      elsif Error_Msg_Node_1 = Any_Array\n         or else Error_Msg_Node_1 = Any_Boolean\n         or else Error_Msg_Node_1 = Any_Character\n         or else Error_Msg_Node_1 = Any_Composite\n@@ -3648,17 +3619,21 @@ package body Errout is\n          Set_Msg_Name_Buffer;\n          return;\n \n-      elsif Error_Msg_Node_1 = Universal_Real then\n-         Set_Msg_Str (\"type universal real\");\n-         return;\n-\n       elsif Error_Msg_Node_1 = Universal_Integer then\n          Set_Msg_Str (\"type universal integer\");\n          return;\n \n+      elsif Error_Msg_Node_1 = Universal_Real then\n+         Set_Msg_Str (\"type universal real\");\n+         return;\n+\n       elsif Error_Msg_Node_1 = Universal_Fixed then\n          Set_Msg_Str (\"type universal fixed\");\n          return;\n+\n+      elsif Error_Msg_Node_1 = Universal_Access then\n+         Set_Msg_Str (\"type universal access\");\n+         return;\n       end if;\n \n       --  Special case of anonymous array\n@@ -3789,15 +3764,9 @@ package body Errout is\n       end if;\n \n       --  The following assignment ensures that a second percent insertion\n-      --  character will correspond to the Error_Msg_Unit_2 parameter. We\n-      --  suppress possible validity checks in case operating in -gnatVa mode,\n-      --  and Error_Msg_Unit_2 is not needed and has not been set.\n+      --  character will correspond to the Error_Msg_Unit_2 parameter.\n \n-      declare\n-         pragma Suppress (Range_Check);\n-      begin\n-         Error_Msg_Unit_1 := Error_Msg_Unit_2;\n-      end;\n+      Error_Msg_Unit_1 := Error_Msg_Unit_2;\n    end Set_Msg_Insertion_Unit_Name;\n \n    ------------------\n@@ -3938,12 +3907,15 @@ package body Errout is\n       P : Natural;     -- Current index;\n \n       procedure Skip_Msg_Insertion_Warning (C : Character);\n-      --  Deal with ? ?? ?x? ?X? ?*? ?$? insertion sequences (and the same\n+      --  Skip the ? ?? ?x? ?*? ?$? insertion sequences (and the same\n       --  sequences using < instead of ?). The caller has already bumped\n       --  the pointer past the initial ? or < and C is set to this initial\n       --  character (? or <). This procedure skips past the rest of the\n       --  sequence. We do not need to set Msg_Insertion_Char, since this\n       --  was already done during the message prescan.\n+      --  No validity check is performed as the insertion sequence is\n+      --  supposed to be sane. See Prescan_Message.Parse_Message_Class in\n+      --  erroutc.adb for the validity checks.\n \n       --------------------------------\n       -- Skip_Msg_Insertion_Warning --\n@@ -3954,17 +3926,16 @@ package body Errout is\n          if P <= Text'Last and then Text (P) = C then\n             P := P + 1;\n \n-         elsif P + 1 <= Text'Last\n-           and then (Text (P) in 'a' .. 'z'\n-                       or else\n-                     Text (P) in 'A' .. 'Z'\n-                       or else\n-                     Text (P) = '*'\n-                       or else\n-                     Text (P) = '$')\n-           and then Text (P + 1) = C\n+         elsif P < Text'Last and then Text (P + 1) = C\n+           and then Text (P) in 'a' .. 'z' | '*' | '$'\n          then\n             P := P + 2;\n+\n+         elsif P + 1 < Text'Last and then Text (P + 2) = C\n+           and then Text (P) in '.' | '_'\n+           and then Text (P + 1) in 'a' .. 'z'\n+         then\n+            P := P + 3;\n          end if;\n       end Skip_Msg_Insertion_Warning;\n \n@@ -4095,7 +4066,8 @@ package body Errout is\n                if Is_Warning_Msg\n                  and then Warning_Mode = Treat_Run_Time_Warnings_As_Errors\n                then\n-                  Is_Warning_Msg := False;\n+                  Is_Warning_Msg   := False;\n+                  Is_Runtime_Raise := True;\n                end if;\n \n                if Is_Warning_Msg then\n@@ -4415,19 +4387,15 @@ package body Errout is\n \n    function Warn_Insertion return String is\n    begin\n-      case Warning_Msg_Char is\n-         when '?' =>\n-            return \"??\";\n-\n-         when 'a' .. 'z' | 'A' .. 'Z' | '*' | '$' =>\n-            return '?' & Warning_Msg_Char & '?';\n-\n-         when ' ' =>\n-            return \"?\";\n-\n-         when others =>\n-            raise Program_Error;\n-      end case;\n+      if Warning_Msg_Char = \"? \" then\n+         return \"??\";\n+      elsif Warning_Msg_Char = \"  \" then\n+         return \"?\";\n+      elsif Warning_Msg_Char (2) = ' ' then\n+         return '?' & Warning_Msg_Char (1) & '?';\n+      else\n+         return '?' & Warning_Msg_Char & '?';\n+      end if;\n    end Warn_Insertion;\n \n end Errout;"}, {"sha": "950dd5574f191373e6d17f4e731bc7a2b27d257e", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 22, "deletions": 28, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -60,13 +60,13 @@ package Errout is\n    --  Exception raised if Raise_Exception_On_Error is true\n \n    Warning_Doc_Switch : Boolean renames Err_Vars.Warning_Doc_Switch;\n-   --  If this is set True, then the ??/?*?/?$?/?x?/?X? insertion sequences in\n-   --  error messages generate appropriate tags for the output error messages.\n-   --  If this switch is False, then these sequences are still recognized (for\n-   --  the purposes of implementing the pattern matching in pragmas Warnings\n-   --  (Off,..) and Warning_As_Pragma(...) but do not result in adding the\n-   --  error message tag. The -gnatw.d switch sets this flag True, -gnatw.D\n-   --  sets this flag False.\n+   --  If this is set True, then the ??/?*?/?$?/?x?/?.x?/?_x? insertion\n+   --  sequences in error messages generate appropriate tags for the output\n+   --  error messages. If this switch is False, then these sequences are still\n+   --  recognized (for the purposes of implementing the pattern matching in\n+   --  pragmas Warnings (Off,..) and Warning_As_Pragma(...) but do not result\n+   --  in adding the error message tag. The -gnatw.d switch sets this flag\n+   --  True, -gnatw.D sets this flag False.\n \n    Current_Node : Node_Id := Empty;\n    --  Used by Error_Msg as a default Node_Id.\n@@ -272,10 +272,9 @@ package Errout is\n    --      avoided. This is currently used by the Compile_Time_Warning pragma\n    --      to ensure the message for a with'ed unit is output, and for warnings\n    --      on ineffective back-end inlining, which is detected in units that\n-   --      contain subprograms to be inlined in the main program. It is also\n-   --      used by the Compiler_Unit_Warning pragma for similar reasons.\n+   --      contain subprograms to be inlined in the main program.\n \n-   --    Insertion character ? (Question: warning message)\n+   --    Insertion character ? (Question: warning message -- OBSOLETE)\n    --      The character ? appearing anywhere in a message makes the message\n    --      warning instead of a normal error message, and the text of the\n    --      message will be preceded by \"warning:\" in the normal case. The\n@@ -302,28 +301,23 @@ package Errout is\n    --      clear that the continuation is part of a warning message, but it is\n    --      not necessary to go through any computational effort to include it.\n    --\n-   --      Note: this usage is obsolete, use ?? ?*? ?$? ?x? ?X? to specify\n-   --      the string to be added when Warn_Doc_Switch is set to True. If this\n-   --      switch is True, then for simple ? messages it has no effect. This\n-   --      simple form is to ease transition and may be removed later except\n-   --      for GNATprove-specific messages (info and warnings) which are not\n-   --      subject to the same GNAT warning switches.\n+   --      Note: this usage is obsolete; use ?? ?*? ?$? ?x? ?.x? ?_x? to\n+   --      specify the string to be added when Warn_Doc_Switch is set to True.\n+   --      If this switch is True, then for simple ? messages it has no effect.\n+   --      This simple form is to ease transition and may be removed later\n+   --      except for GNATprove-specific messages (info and warnings) which are\n+   --      not subject to the same GNAT warning switches.\n \n    --    Insertion character ?? (Two question marks: default warning)\n    --      Like ?, but if the flag Warn_Doc_Switch is True, adds the string\n    --      \"[enabled by default]\" at the end of the warning message. For\n    --      continuations, use this in each continuation message.\n \n-   --    Insertion character ?x? (warning with switch)\n+   --    Insertion character ?x? ?.x? ?_x? (warning with switch)\n    --      Like ?, but if the flag Warn_Doc_Switch is True, adds the string\n-   --      \"[-gnatwx]\" at the end of the warning message. x is a lower case\n-   --      letter. For continuations, use this on each continuation message.\n-\n-   --    Insertion character ?X? (warning with dot switch)\n-   --      Like ?, but if the flag Warn_Doc_Switch is True, adds the string\n-   --      \"[-gnatw.x]\" at the end of the warning message. X is an upper case\n-   --      letter corresponding to the lower case letter x in the message.\n-   --      For continuations, use this on each continuation message.\n+   --      \"[-gnatwx]\", \"[-gnatw.x]\", or \"[-gnatw_x]\", at the end of the\n+   --      warning message. x must be lower case. For continuations, use this\n+   --      on each continuation message.\n \n    --    Insertion character ?*? (restriction warning)\n    --      Like ?, but if the flag Warn_Doc_Switch is True, adds the string\n@@ -339,8 +333,8 @@ package Errout is\n    --    Insertion character < (Less Than: conditional warning message)\n    --      The character < appearing anywhere in a message is used for a\n    --      conditional error message. If Error_Msg_Warn is True, then the\n-   --      effect is the same as ? described above, and in particular << <X<\n-   --      <x< <$< <*< have the effect of ?? ?X? ?x? ?$? ?*? respectively. If\n+   --      effect is the same as ? described above, and in particular << <x<\n+   --      <$< <*< have the effect of ?? ?x? ?$? ?*? respectively. If\n    --      Error_Msg_Warn is False, then the < << or <X< sequence is ignored\n    --      and the message is treated as a error rather than a warning.\n "}, {"sha": "c18f4180250b4feab9b680c34357382caedbdfc2", "filename": "gcc/ada/erroutc.adb", "status": "modified", "additions": 75, "deletions": 71, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ferroutc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ferroutc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -277,7 +277,9 @@ package body Erroutc is\n    begin\n       for J in 1 .. Errors.Last loop\n          begin\n-            if Errors.Table (J).Warn and Errors.Table (J).Compile_Time_Pragma\n+            if Errors.Table (J).Warn\n+               and then Errors.Table (J).Compile_Time_Pragma\n+               and then not Errors.Table (J).Deleted\n             then\n                Result := Result + 1;\n             end if;\n@@ -362,20 +364,20 @@ package body Erroutc is\n    ---------------------\n \n    function Get_Warning_Tag (Id : Error_Msg_Id) return String is\n-      Warn     : constant Boolean    := Errors.Table (Id).Warn;\n-      Warn_Chr : constant Character  := Errors.Table (Id).Warn_Chr;\n+      Warn     : constant Boolean         := Errors.Table (Id).Warn;\n+      Warn_Chr : constant String (1 .. 2) := Errors.Table (Id).Warn_Chr;\n    begin\n-      if Warn and then Warn_Chr /= ' ' then\n-         if Warn_Chr = '?' then\n+      if Warn and then Warn_Chr /= \"  \" then\n+         if Warn_Chr = \"? \" then\n             return \"[enabled by default]\";\n-         elsif Warn_Chr = '*' then\n+         elsif Warn_Chr = \"* \" then\n             return \"[restriction warning]\";\n-         elsif Warn_Chr = '$' then\n+         elsif Warn_Chr = \"$ \" then\n             return \"[-gnatel]\";\n-         elsif Warn_Chr in 'a' .. 'z' then\n+         elsif Warn_Chr (2) = ' ' then\n+            return \"[-gnatw\" & Warn_Chr (1) & ']';\n+         else\n             return \"[-gnatw\" & Warn_Chr & ']';\n-         else pragma Assert (Warn_Chr in 'A' .. 'Z');\n-            return \"[-gnatw.\" & Fold_Lower (Warn_Chr) & ']';\n          end if;\n       else\n          return \"\";\n@@ -839,14 +841,59 @@ package body Erroutc is\n    procedure Prescan_Message (Msg : String) is\n       J : Natural;\n \n+      function Parse_Message_Class return String;\n+      --  Convert the warning insertion sequence to a warning class represented\n+      --  as a length-two string padded, if necessary, with spaces.\n+      --  Return the Message class and set the iterator J to the character\n+      --  following the sequence.\n+      --  Raise a Program_Error if the insertion sequence is not valid.\n+\n+      -------------------------\n+      -- Parse_Message_Class --\n+      -------------------------\n+\n+      function Parse_Message_Class return String is\n+         C : constant Character := Msg (J - 1);\n+         Message_Class : String (1 .. 2) := \"  \";\n+      begin\n+         if J <= Msg'Last and then Msg (J) = C then\n+            Message_Class := \"? \";\n+            J := J + 1;\n+\n+         elsif J < Msg'Last and then Msg (J + 1) = C\n+           and then Msg (J) in 'a' .. 'z' | '*' | '$'\n+         then\n+            Message_Class := Msg (J) & \" \";\n+            J := J + 2;\n+\n+         elsif J + 1 < Msg'Last and then Msg (J + 2) = C\n+           and then Msg (J) in '.' | '_'\n+           and then Msg (J + 1) in 'a' .. 'z'\n+         then\n+            Message_Class := Msg (J .. J + 1);\n+            J := J + 3;\n+         elsif (J < Msg'Last and then Msg (J + 1) = C) or else\n+            (J + 1 < Msg'Last and then Msg (J + 2) = C)\n+         then\n+            raise Program_Error;\n+         end if;\n+\n+         --  In any other cases, this is not a warning insertion sequence\n+         --  and the default \"  \" value is returned.\n+\n+         return Message_Class;\n+      end Parse_Message_Class;\n+\n+   --  Start of processing for Prescan_Message\n+\n    begin\n       --  Nothing to do for continuation line, unless -gnatdF is set\n \n       if not Debug_Flag_FF and then Msg (Msg'First) = '\\' then\n          return;\n \n       --  Some global variables are not set for continuation messages, as they\n-      --  only make sense for the initial mesage.\n+      --  only make sense for the initial message.\n \n       elsif Msg (Msg'First) /= '\\' then\n \n@@ -855,6 +902,7 @@ package body Erroutc is\n          Is_Serious_Error     := True;\n          Is_Unconditional_Msg := False;\n          Is_Warning_Msg       := False;\n+         Is_Runtime_Raise     := False;\n \n          --  Check style message\n \n@@ -898,29 +946,10 @@ package body Erroutc is\n \n          elsif Msg (J) = '?' or else Msg (J) = '<' then\n             Is_Warning_Msg := Msg (J) = '?' or else Error_Msg_Warn;\n-            Warning_Msg_Char := ' ';\n             J := J + 1;\n \n             if Is_Warning_Msg then\n-               declare\n-                  C : constant Character := Msg (J - 1);\n-               begin\n-                  if J <= Msg'Last then\n-                     if Msg (J) = C then\n-                        Warning_Msg_Char := '?';\n-                        J := J + 1;\n-\n-                     elsif J < Msg'Last and then Msg (J + 1) = C\n-                       and then (Msg (J) in 'a' .. 'z' or else\n-                                 Msg (J) in 'A' .. 'Z' or else\n-                                 Msg (J) = '*'         or else\n-                                 Msg (J) = '$')\n-                     then\n-                        Warning_Msg_Char := Msg (J);\n-                        J := J + 2;\n-                     end if;\n-                  end if;\n-               end;\n+               Warning_Msg_Char := Parse_Message_Class;\n             end if;\n \n             --  Bomb if untagged warning message. This code can be uncommented\n@@ -1119,17 +1148,11 @@ package body Erroutc is\n       end if;\n \n       --  The following assignments ensure that the second and third {\n-      --  insertion characters will correspond to the Error_Msg_File_2 and\n-      --  Error_Msg_File_3 values and We suppress possible validity checks in\n-      --  case operating in -gnatVa mode, and Error_Msg_File_2 or\n-      --  Error_Msg_File_3 is not needed and has not been set.\n+      --  insertion characters will correspond to the Error_Msg_File_2\n+      --  and Error_Msg_File_3 values.\n \n-      declare\n-         pragma Suppress (Range_Check);\n-      begin\n-         Error_Msg_File_1 := Error_Msg_File_2;\n-         Error_Msg_File_2 := Error_Msg_File_3;\n-      end;\n+      Error_Msg_File_1 := Error_Msg_File_2;\n+      Error_Msg_File_2 := Error_Msg_File_3;\n    end Set_Msg_Insertion_File_Name;\n \n    -----------------------------------\n@@ -1204,7 +1227,6 @@ package body Erroutc is\n          else\n             Set_At;\n             Set_Msg_Str (\"line \");\n-            Int_File := False;\n             Set_Msg_Int (Int (Get_Logical_Line_Number (Loc)));\n          end if;\n \n@@ -1299,16 +1321,10 @@ package body Erroutc is\n \n       --  The following assignments ensure that the second and third percent\n       --  insertion characters will correspond to the Error_Msg_Name_2 and\n-      --  Error_Msg_Name_3 as required. We suppress possible validity checks in\n-      --  case operating in -gnatVa mode, and Error_Msg_Name_1/2 is not needed\n-      --  and has not been set.\n+      --  Error_Msg_Name_3 as required.\n \n-      declare\n-         pragma Suppress (Range_Check);\n-      begin\n-         Error_Msg_Name_1 := Error_Msg_Name_2;\n-         Error_Msg_Name_2 := Error_Msg_Name_3;\n-      end;\n+      Error_Msg_Name_1 := Error_Msg_Name_2;\n+      Error_Msg_Name_2 := Error_Msg_Name_3;\n    end Set_Msg_Insertion_Name;\n \n    ------------------------------------\n@@ -1334,16 +1350,10 @@ package body Erroutc is\n \n       --  The following assignments ensure that the second and third % or %%\n       --  insertion characters will correspond to the Error_Msg_Name_2 and\n-      --  Error_Msg_Name_3 values and We suppress possible validity checks in\n-      --  case operating in -gnatVa mode, and Error_Msg_Name_2 or\n-      --  Error_Msg_Name_3 is not needed and has not been set.\n+      --  Error_Msg_Name_3 values.\n \n-      declare\n-         pragma Suppress (Range_Check);\n-      begin\n-         Error_Msg_Name_1 := Error_Msg_Name_2;\n-         Error_Msg_Name_2 := Error_Msg_Name_3;\n-      end;\n+      Error_Msg_Name_1 := Error_Msg_Name_2;\n+      Error_Msg_Name_2 := Error_Msg_Name_3;\n    end Set_Msg_Insertion_Name_Literal;\n \n    -------------------------------------\n@@ -1427,15 +1437,9 @@ package body Erroutc is\n       end loop;\n \n       --  The following assignment ensures that a second caret insertion\n-      --  character will correspond to the Error_Msg_Uint_2 parameter. We\n-      --  suppress possible validity checks in case operating in -gnatVa mode,\n-      --  and Error_Msg_Uint_2 is not needed and has not been set.\n+      --  character will correspond to the Error_Msg_Uint_2 parameter.\n \n-      declare\n-         pragma Suppress (Range_Check);\n-      begin\n-         Error_Msg_Uint_1 := Error_Msg_Uint_2;\n-      end;\n+      Error_Msg_Uint_1 := Error_Msg_Uint_2;\n    end Set_Msg_Insertion_Uint;\n \n    -----------------\n@@ -1709,7 +1713,7 @@ package body Erroutc is\n \n                if SWE.Open then\n                   Eproc.all\n-                    (\"?W?pragma Warnings Off with no matching Warnings On\",\n+                    (\"?.w?pragma Warnings Off with no matching Warnings On\",\n                      SWE.Start);\n \n                --  Warn for ineffective Warnings (Off, ..)\n@@ -1724,7 +1728,7 @@ package body Erroutc is\n                    (SWE.Msg'Length > 3 and then SWE.Msg (2 .. 3) = \"-W\")\n                then\n                   Eproc.all\n-                    (\"?W?no warning suppressed by this pragma\", SWE.Start);\n+                    (\"?.w?no warning suppressed by this pragma\", SWE.Start);\n                end if;\n             end if;\n          end;"}, {"sha": "d4d4443e633569d8aa3bba7e5ad23045dba83991", "filename": "gcc/ada/erroutc.ads", "status": "modified", "additions": 21, "deletions": 20, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ferroutc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ferroutc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferroutc.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -69,7 +69,12 @@ package Erroutc is\n \n    Is_Warning_Msg : Boolean := False;\n    --  Set True to indicate if current message is warning message (contains ?\n-   --  or contains < and Error_Msg_Warn is True.\n+   --  or contains < and Error_Msg_Warn is True).\n+\n+   Is_Runtime_Raise : Boolean := False;\n+   --  Set to True to indicate that the current message is a warning about a\n+   --  constraint error that will be raised at runtime (contains [ and switch\n+   --  -gnatwE was given).\n \n    Is_Info_Msg : Boolean := False;\n    --  Set True to indicate that the current message starts with the characters\n@@ -80,14 +85,14 @@ package Erroutc is\n    --  Set True to indicate that the current message starts with one of\n    --  \"high: \", \"medium: \", \"low: \" and is to be treated as a check message.\n \n-   Warning_Msg_Char : Character;\n-   --  Warning character, valid only if Is_Warning_Msg is True\n-   --    ' '      -- ?   or <   appeared on its own in message\n-   --    '?'      -- ??  or <<  appeared in message\n-   --    'x'      -- ?x? or <x< appeared in message (x = a .. z)\n-   --    'X'      -- ?X? or <X< appeared in message (X = A .. Z)\n-   --    '*'      -- ?*? or <*< appeared in message\n-   --    '$'      -- ?$? or <$< appeared in message\n+   Warning_Msg_Char : String (1 .. 2);\n+   --  Warning switch, valid only if Is_Warning_Msg is True\n+   --    \"  \"      -- ?   or <   appeared on its own in message\n+   --    \"? \"      -- ??  or <<  appeared in message\n+   --    \"x \"      -- ?x? or <x< appeared in message\n+   --              -- (x = a .. z | A .. Z | * | $)\n+   --    \".x\"      -- ?.x? appeared in message (x = a .. z | A .. Z)\n+   --    \"_x\"      -- ?_x? appeared in message (x = a .. z | A .. Z)\n    --  In the case of the < sequences, this is set only if the message is\n    --  actually a warning, i.e. if Error_Msg_Warn is True\n \n@@ -239,16 +244,12 @@ package Erroutc is\n       --  True if this is a warning message which is to be treated as an error\n       --  as a result of a match with a Warning_As_Error pragma.\n \n-      Warn_Chr : Character;\n-      --  Warning character (note: set even if Warning_Doc_Switch is False)\n-      --    ' '      -- ?   or <   appeared on its own in message\n-      --    '?'      -- ??  or <<  appeared in message\n-      --    'x'      -- ?x? or <x< appeared in message (x = a .. z)\n-      --    'X'      -- ?X? or <X< appeared in message (X = A .. Z)\n-      --    '*'      -- ?*? or <*< appeared in message\n-      --    '$'      -- ?$? or <$< appeared in message\n-      --  In the case of the < sequences, this is set only if the message is\n-      --  actually a warning, i.e. if Error_Msg_Warn is True\n+      Warn_Runtime_Raise : Boolean;\n+      --  True if this a warning about a constraint error that will be raised\n+      --  at runtime.\n+\n+      Warn_Chr : String (1 .. 2);\n+      --  See Warning_Msg_Char\n \n       Style : Boolean;\n       --  True if style message (starts with \"(style)\")"}, {"sha": "921de319f39713100ef0821ecfcc86fc5a4f9226", "filename": "gcc/ada/errutil.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ferrutil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ferrutil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrutil.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1991-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1991-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -217,6 +217,7 @@ package body Errutil is\n             Info                => Is_Info_Msg,\n             Check               => Is_Check_Msg,\n             Warn_Err            => Warning_Mode = Treat_As_Error,\n+            Warn_Runtime_Raise  => Is_Runtime_Raise,\n             Warn_Chr            => Warning_Msg_Char,\n             Style               => Is_Style_Msg,\n             Serious             => Is_Serious_Error,"}, {"sha": "c5a69bc51bcfcd65dbbb094d8662e4c30962ce1a", "filename": "gcc/ada/errutil.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ferrutil.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ferrutil.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrutil.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2002-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2002-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "5370ef632e4b2caf5ae780e93fe971cd4aa50873", "filename": "gcc/ada/eval_fat.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Feval_fat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Feval_fat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feval_fat.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "7264e806a36ca2e6b876d0f1064a1b4c11757881", "filename": "gcc/ada/eval_fat.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Feval_fat.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Feval_fat.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feval_fat.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "bb902c7082803f4b26106aa6af282a4e65815818", "filename": "gcc/ada/exit.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexit.c?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *          Copyright (C) 1992-2021, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2022, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *"}, {"sha": "e360baa6683af4ba8a1233e59a2b0ef9c98a0856", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 307, "deletions": 85, "changes": 392, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -124,7 +124,8 @@ package body Exp_Aggr is\n    --  constants that are done in place.\n \n    function Must_Slide\n-     (Obj_Type : Entity_Id;\n+     (Aggr     : Node_Id;\n+      Obj_Type : Entity_Id;\n       Typ      : Entity_Id) return Boolean;\n    --  A static array aggregate in an object declaration can in most cases be\n    --  expanded in place. The one exception is when the aggregate is given\n@@ -168,9 +169,9 @@ package body Exp_Aggr is\n    --  Subsidiary to the expansion of array and record aggregates. Generate\n    --  part of the necessary code to finalize a transient component. Aggr is\n    --  the related aggregate. Fin_Clear is the finalization call used to clean\n-   --  up the transient component. Hook_Clear is the hook reset statment. Stmts\n-   --  is the initialization statement list for the component. All generated\n-   --  code is added to Stmts.\n+   --  up the transient component. Hook_Clear is the hook reset statement.\n+   --  Stmts is the initialization statement list for the component. All\n+   --  generated code is added to Stmts.\n \n    procedure Sort_Case_Table (Case_Table : in out Case_Table_Type);\n    --  Sort the Case Table using the Lower Bound of each Choice as the key.\n@@ -489,7 +490,7 @@ package body Exp_Aggr is\n          --  Fat pointers are rejected as they are not really elementary\n          --  for the backend.\n \n-         if Csiz /= System_Address_Size then\n+         if No (Csiz) or else Csiz /= System_Address_Size then\n             return False;\n          end if;\n \n@@ -503,8 +504,7 @@ package body Exp_Aggr is\n \n       --  Scalar types are OK if their size is a multiple of Storage_Unit\n \n-      elsif Is_Scalar_Type (Ctyp) then\n-         pragma Assert (Csiz /= No_Uint);\n+      elsif Is_Scalar_Type (Ctyp) and then Present (Csiz) then\n \n          if Csiz mod System_Storage_Unit /= 0 then\n             return False;\n@@ -1021,7 +1021,7 @@ package body Exp_Aggr is\n \n    --  2. If the aggregate contains positional elements we\n \n-   --     (a) translate the positional elements in a series of assignments\n+   --     (a) Translate the positional elements in a series of assignments\n \n    --     (b) Generate a final loop to cover the others choice if any.\n    --         Note that this final loop has to be a while loop since the case\n@@ -1032,7 +1032,7 @@ package body Exp_Aggr is\n \n    --         cannot be handled by a for loop. Thus for the following\n \n-   --             array (L .. H) := (.. positional elements.., others =>E);\n+   --             array (L .. H) := (.. positional elements.., others => E);\n \n    --         we always generate something like:\n \n@@ -1776,7 +1776,7 @@ package body Exp_Aggr is\n                if Nkind (Parent (N)) = N_Assignment_Statement\n                  and then Is_Array_Type (Comp_Typ)\n                  and then Present (Component_Associations (Expr_Q))\n-                 and then Must_Slide (Comp_Typ, Etype (Expr_Q))\n+                 and then Must_Slide (N, Comp_Typ, Etype (Expr_Q))\n                then\n                   Set_Expansion_Delayed (Expr_Q, False);\n                   Set_Analyzed (Expr_Q, False);\n@@ -1872,12 +1872,6 @@ package body Exp_Aggr is\n                   Set_Etype (Indexed_Comp, Ctype);\n                   Append_To (Stmts, Make_Invariant_Call (Indexed_Comp));\n                end if;\n-\n-            elsif Is_Access_Type (Ctype) then\n-               Append_To (Stmts,\n-                 Make_Assignment_Statement (Loc,\n-                   Name       => New_Copy_Tree (Indexed_Comp),\n-                   Expression => Make_Null (Loc)));\n             end if;\n \n             if Needs_Finalization (Ctype) then\n@@ -2069,11 +2063,9 @@ package body Exp_Aggr is\n          --  Construct \"for L_J in Index_Base range L .. H\"\n \n          L_Iteration_Scheme :=\n-           Make_Iteration_Scheme\n-             (Loc,\n+           Make_Iteration_Scheme (Loc,\n               Loop_Parameter_Specification =>\n-                Make_Loop_Parameter_Specification\n-                  (Loc,\n+                Make_Loop_Parameter_Specification (Loc,\n                    Defining_Identifier         => L_J,\n                    Discrete_Subtype_Definition => L_Range));\n \n@@ -2212,15 +2204,10 @@ package body Exp_Aggr is\n \n       begin\n          if Box_Present (Assoc) then\n-            if Is_Scalar_Type (Ctype) then\n-               if Present (Default_Aspect_Component_Value (Typ)) then\n-                  return Default_Aspect_Component_Value (Typ);\n-               elsif Present (Default_Aspect_Value (Ctype)) then\n-                  return Default_Aspect_Value (Ctype);\n-               else\n-                  return Empty;\n-               end if;\n-\n+            if Present (Default_Aspect_Component_Value (Typ)) then\n+               return Default_Aspect_Component_Value (Typ);\n+            elsif Needs_Simple_Initialization (Ctype) then\n+               return Get_Simple_Init_Val (Ctype, N);\n             else\n                return Empty;\n             end if;\n@@ -3208,6 +3195,8 @@ package body Exp_Aggr is\n          Init_Stmt : Node_Id;\n \n       begin\n+         pragma Assert (Nkind (Init_Expr) in N_Subexpr);\n+\n          --  Protect the initialization statements from aborts. Generate:\n \n          --    Abort_Defer;\n@@ -3792,6 +3781,26 @@ package body Exp_Aggr is\n                 With_Default_Init => True,\n                 Constructor_Ref   => Expression (Comp)));\n \n+         elsif Box_Present (Comp)\n+           and then Needs_Simple_Initialization (Etype (Selector))\n+         then\n+            Comp_Expr :=\n+              Make_Selected_Component (Loc,\n+                Prefix        => New_Copy_Tree (Target),\n+                Selector_Name => New_Occurrence_Of (Selector, Loc));\n+\n+            Initialize_Record_Component\n+              (Rec_Comp  => Comp_Expr,\n+               Comp_Typ  => Etype (Selector),\n+               Init_Expr => Get_Simple_Init_Val\n+                              (Typ  => Etype (Selector),\n+                               N    => Comp,\n+                               Size =>\n+                                 (if Known_Esize (Selector)\n+                                  then Esize (Selector)\n+                                  else Uint_0)),\n+               Stmts     => L);\n+\n          --  Ada 2005 (AI-287): For each default-initialized component generate\n          --  a call to the corresponding IP subprogram if available.\n \n@@ -4003,7 +4012,7 @@ package body Exp_Aggr is\n                  and then Present (First_Index (Etype (Expr_Q)))\n                then\n                   declare\n-                     Expr_Q_Type : constant Node_Id := Etype (Expr_Q);\n+                     Expr_Q_Type : constant Entity_Id := Etype (Expr_Q);\n                   begin\n                      Append_List_To (L,\n                        Build_Array_Aggr_Code\n@@ -5718,6 +5727,15 @@ package body Exp_Aggr is\n       --  built directly into the target of the assignment it must be free\n       --  of side effects. N is the LHS of an assignment.\n \n+      procedure Two_Pass_Aggregate_Expansion (N : Node_Id);\n+      --  If the aggregate consists only of iterated associations then the\n+      --  aggregate is constructed in two steps:\n+      --  a) Build an expression to compute the number of elements\n+      --     generated by each iterator, and use the expression to allocate\n+      --     the destination aggregate.\n+      --  b) Generate the loops corresponding to each iterator to insert\n+      --     the elements in their proper positions.\n+\n       ----------------------------\n       -- Build_Constrained_Type --\n       ----------------------------\n@@ -6334,6 +6352,197 @@ package body Exp_Aggr is\n          end if;\n       end Safe_Left_Hand_Side;\n \n+      ----------------------------------\n+      -- Two_Pass_Aggregate_Expansion --\n+      ----------------------------------\n+\n+      procedure Two_Pass_Aggregate_Expansion (N : Node_Id) is\n+         Loc        : constant Source_Ptr := Sloc (N);\n+         Comp_Type  : constant Entity_Id := Etype (N);\n+         Index_Id   : constant Entity_Id := Make_Temporary (Loc, 'I', N);\n+         Index_Type : constant Entity_Id := Etype (First_Index (Etype (N)));\n+         Size_Id    : constant Entity_Id := Make_Temporary (Loc, 'I', N);\n+         TmpE       : constant Entity_Id := Make_Temporary (Loc, 'A', N);\n+\n+         Assoc    : Node_Id := First (Component_Associations (N));\n+         Incr     : Node_Id;\n+         Iter     : Node_Id;\n+         New_Comp : Node_Id;\n+         One_Loop : Node_Id;\n+\n+         Size_Expr_Code : List_Id;\n+         Insertion_Code : List_Id := New_List;\n+\n+      begin\n+         Size_Expr_Code := New_List (\n+           Make_Object_Declaration (Loc,\n+             Defining_Identifier => Size_Id,\n+             Object_Definition   => New_Occurrence_Of (Standard_Integer, Loc),\n+             Expression          => Make_Integer_Literal (Loc, 0)));\n+\n+         --  First pass: execute the iterators to count the number of elements\n+         --  that will be generated.\n+\n+         while Present (Assoc) loop\n+            Iter := Iterator_Specification (Assoc);\n+            Incr := Make_Assignment_Statement (Loc,\n+                      Name => New_Occurrence_Of (Size_Id, Loc),\n+                      Expression =>\n+                        Make_Op_Add (Loc,\n+                         Left_Opnd  => New_Occurrence_Of (Size_Id, Loc),\n+                         Right_Opnd => Make_Integer_Literal (Loc, 1)));\n+\n+            One_Loop := Make_Loop_Statement (Loc,\n+              Iteration_Scheme =>\n+                Make_Iteration_Scheme (Loc,\n+                  Iterator_Specification => New_Copy_Tree (Iter)),\n+                Statements => New_List (Incr));\n+\n+            Append (One_Loop, Size_Expr_Code);\n+            Next (Assoc);\n+         end loop;\n+\n+         Insert_Actions (N, Size_Expr_Code);\n+\n+         --  Build a constrained subtype with the calculated length\n+         --  and declare the proper bounded aggregate object.\n+         --  The index type is some discrete type, so the bounds of the\n+         --  constructed array are computed as T'Val (T'Pos (ineger bound));\n+\n+         declare\n+            Pos_Lo : constant Node_Id :=\n+              Make_Attribute_Reference (Loc,\n+                Prefix => New_Occurrence_Of (Index_Type, Loc),\n+                Attribute_Name => Name_Pos,\n+                Expressions => New_List (\n+                  Make_Attribute_Reference (Loc,\n+                    Prefix => New_Occurrence_Of (Index_Type, Loc),\n+                    Attribute_Name => Name_First)));\n+\n+            Aggr_Lo : constant Node_Id :=\n+               Make_Attribute_Reference (Loc,\n+                 Prefix => New_Occurrence_Of (Index_Type, Loc),\n+                 Attribute_Name => Name_Val,\n+                 Expressions => New_List (New_Copy_Tree (Pos_Lo)));\n+\n+            --  Hi = Index_type'Pos (Lo + Size -1).\n+\n+            Pos_Hi : constant Node_Id :=\n+               Make_Op_Add (Loc,\n+                 Left_Opnd => New_Copy_Tree (Pos_Lo),\n+                 Right_Opnd =>\n+                   Make_Op_Subtract (Loc,\n+                     Left_Opnd  => New_Occurrence_Of (Size_Id, Loc),\n+                     Right_Opnd => Make_Integer_Literal (Loc, 1)));\n+\n+            --  Corresponding index value\n+\n+            Aggr_Hi : constant Node_Id :=\n+               Make_Attribute_Reference (Loc,\n+                 Prefix => New_Occurrence_Of (Index_Type, Loc),\n+                 Attribute_Name => Name_Val,\n+                 Expressions => New_List (New_Copy_Tree (Pos_Hi)));\n+\n+            SubE : constant Entity_Id := Make_Temporary (Loc, 'T');\n+            SubD : constant Node_Id :=\n+              Make_Subtype_Declaration (Loc,\n+                Defining_Identifier => SubE,\n+                Subtype_Indication  =>\n+                  Make_Subtype_Indication (Loc,\n+                    Subtype_Mark =>\n+                      New_Occurrence_Of (Etype (Comp_Type), Loc),\n+                    Constraint =>\n+                      Make_Index_Or_Discriminant_Constraint\n+                        (Loc,\n+                         Constraints =>\n+                           New_List (Make_Range (Loc, Aggr_Lo, Aggr_Hi)))));\n+\n+               --  Create a temporary array of the above subtype which\n+               --  will be used to capture the aggregate assignments.\n+\n+               TmpD : constant Node_Id :=\n+                 Make_Object_Declaration (Loc,\n+                   Defining_Identifier => TmpE,\n+                   Object_Definition   => New_Occurrence_Of (SubE, Loc));\n+         begin\n+            Insert_Actions (N, New_List (SubD, TmpD));\n+         end;\n+\n+         --  Second pass: use the iterators to generate the elements of the\n+         --  aggregate. Insertion index starts at Index_Type'First. We\n+         --  assume that the second evaluation of each iterator generates\n+         --  the same number of elements as the first pass, and consider\n+         --  that the execution is erroneous (even if the RM does not state\n+         --  this explicitly) if the number of elements generated differs\n+         --  between first and second pass.\n+\n+         Assoc := First (Component_Associations (N));\n+\n+         --  Initialize insertion position to first array component.\n+\n+         Insertion_Code := New_List (\n+           Make_Object_Declaration (Loc,\n+             Defining_Identifier => Index_Id,\n+             Object_Definition   =>\n+               New_Occurrence_Of (Index_Type, Loc),\n+             Expression =>\n+               Make_Attribute_Reference (Loc,\n+                 Prefix => New_Occurrence_Of (Index_Type, Loc),\n+                 Attribute_Name => Name_First)));\n+\n+         while Present (Assoc) loop\n+            Iter := Iterator_Specification (Assoc);\n+            New_Comp := Make_Assignment_Statement (Loc,\n+               Name =>\n+                 Make_Indexed_Component (Loc,\n+                    Prefix => New_Occurrence_Of (TmpE, Loc),\n+                    Expressions =>\n+                      New_List (New_Occurrence_Of (Index_Id, Loc))),\n+               Expression => New_Copy_Tree (Expression (Assoc)));\n+\n+            --  Advance index position for insertion.\n+\n+            Incr := Make_Assignment_Statement (Loc,\n+                      Name => New_Occurrence_Of (Index_Id, Loc),\n+                      Expression =>\n+                        Make_Attribute_Reference (Loc,\n+                          Prefix =>\n+                            New_Occurrence_Of (Index_Type, Loc),\n+                          Attribute_Name => Name_Succ,\n+                          Expressions =>\n+                            New_List (New_Occurrence_Of (Index_Id, Loc))));\n+\n+            --  Add guard to skip last increment when upper bound is reached.\n+\n+            Incr := Make_If_Statement (Loc,\n+               Condition =>\n+                  Make_Op_Ne (Loc,\n+                  Left_Opnd  => New_Occurrence_Of (Index_Id, Loc),\n+                  Right_Opnd =>\n+                    Make_Attribute_Reference (Loc,\n+                      Prefix => New_Occurrence_Of (Index_Type, Loc),\n+                      Attribute_Name => Name_Last)),\n+               Then_Statements => New_List (Incr));\n+\n+            One_Loop := Make_Loop_Statement (Loc,\n+              Iteration_Scheme =>\n+                Make_Iteration_Scheme (Loc,\n+                  Iterator_Specification => Copy_Separate_Tree (Iter)),\n+                Statements => New_List (New_Comp, Incr));\n+\n+            Append (One_Loop, Insertion_Code);\n+            Next (Assoc);\n+         end loop;\n+\n+         Insert_Actions (N, Insertion_Code);\n+\n+         --  Depending on context this may not work for build-in-place\n+         --  arrays ???\n+\n+         Rewrite (N, New_Occurrence_Of (TmpE, Loc));\n+\n+      end Two_Pass_Aggregate_Expansion;\n+\n       --  Local variables\n \n       Tmp : Entity_Id;\n@@ -6371,6 +6580,15 @@ package body Exp_Aggr is\n       then\n          return;\n \n+      elsif Present (Component_Associations (N))\n+        and then Nkind (First (Component_Associations (N))) =\n+                 N_Iterated_Component_Association\n+        and then\n+          Present (Iterator_Specification (First (Component_Associations (N))))\n+      then\n+         Two_Pass_Aggregate_Expansion (N);\n+         return;\n+\n       --  Do not attempt expansion if error already detected. We may reach this\n       --  point in spite of previous errors when compiling with -gnatq, to\n       --  force all possible errors (this is the usual ACATS mode).\n@@ -6657,7 +6875,7 @@ package body Exp_Aggr is\n         and then Parent_Kind = N_Object_Declaration\n         and then Present (Expression (Parent_Node))\n         and then not\n-          Must_Slide (Etype (Defining_Identifier (Parent_Node)), Typ)\n+          Must_Slide (N, Etype (Defining_Identifier (Parent_Node)), Typ)\n         and then not Is_Bit_Packed_Array (Typ)\n       then\n          In_Place_Assign_OK_For_Declaration := True;\n@@ -6701,7 +6919,7 @@ package body Exp_Aggr is\n \n       --  In the remaining cases the aggregate appears in the RHS of an\n       --  assignment, which may be part of the expansion of an object\n-      --  delaration. If the aggregate is an actual in a call, itself\n+      --  declaration. If the aggregate is an actual in a call, itself\n       --  possibly in a RHS, building it in the target is not possible.\n \n       elsif Maybe_In_Place_OK\n@@ -7038,6 +7256,9 @@ package body Exp_Aggr is\n       --  or Element_Association with non-static bounds, build an expression\n       --  to be used as the allocated size of the container. This may be an\n       --  overestimate if a filter is present, but is a safe approximation.\n+      --  If bounds are dynamic the aggregate is created in two passes, and\n+      --  the first generates a loop for the sole purpose of computing the\n+      --  number of elements that will be generated on the second pass.\n \n       procedure Expand_Iterated_Component (Comp : Node_Id);\n       --  Handle iterated_component_association and iterated_Element\n@@ -7185,7 +7406,11 @@ package body Exp_Aggr is\n             return Build_Siz_Exp (First (Discrete_Choices (Comp)));\n \n          elsif Nkind (Comp) = N_Iterated_Element_Association then\n-            return -1;    --  ??? build expression for size of the domain\n+            return -1;\n+\n+            --  ??? Need to create code for a loop and add to generated code,\n+            --  as is done for array aggregates with iterated element\n+            --  associations, instead of using Append operations.\n \n          else\n             return -1;\n@@ -7217,7 +7442,7 @@ package body Exp_Aggr is\n \n             if Present (Iterator_Specification (Comp)) then\n \n-               --  Either an Iterator_Specification of a Loop_Parameter_\n+               --  Either an Iterator_Specification or a Loop_Parameter_\n                --  Specification is present.\n \n                L_Iteration_Scheme :=\n@@ -7257,7 +7482,7 @@ package body Exp_Aggr is\n                    Iterator_Specification => Iterator_Specification (Comp));\n \n             else\n-               --  Loop_Parameter_Specifcation is parsed with a choice list.\n+               --  Loop_Parameter_Specification is parsed with a choice list.\n                --  where the range is the first (and only) choice.\n \n                L_Range := Relocate_Node (First (Discrete_Choices (Comp)));\n@@ -7308,11 +7533,11 @@ package body Exp_Aggr is\n                  Parameter_Associations => Params));\n          end if;\n \n-         Loop_Stat :=  Make_Implicit_Loop_Statement\n-                         (Node             => N,\n-                          Identifier       => Empty,\n-                          Iteration_Scheme => L_Iteration_Scheme,\n-                          Statements       => Stats);\n+         Loop_Stat := Make_Implicit_Loop_Statement\n+                        (Node             => N,\n+                         Identifier       => Empty,\n+                         Iteration_Scheme => L_Iteration_Scheme,\n+                         Statements       => Stats);\n          Append (Loop_Stat, Aggr_Code);\n \n       end Expand_Iterated_Component;\n@@ -7587,7 +7812,7 @@ package body Exp_Aggr is\n                --  required size for the aggregwte : call the provided\n                --  constructor rather than the Empty aggregate.\n \n-               Index :=  Make_Op_Add (Loc,\n+               Index := Make_Op_Add (Loc,\n                  Left_Opnd => New_Copy_Tree (Type_Low_Bound (Index_Type)),\n                  Right_Opnd => Make_Integer_Literal (Loc, Siz - 1));\n \n@@ -8046,7 +8271,7 @@ package body Exp_Aggr is\n                Discr    : Entity_Id;\n                Decl     : Node_Id;\n                Num_Disc : Nat := 0;\n-               Num_Gird : Nat := 0;\n+               Num_Stor : Nat := 0;\n \n             --  Start of processing for Generate_Aggregate_For_Derived_Type\n \n@@ -8082,13 +8307,13 @@ package body Exp_Aggr is\n \n                Discr := First_Stored_Discriminant (Base_Type (Typ));\n                while Present (Discr) loop\n-                  Num_Gird := Num_Gird + 1;\n+                  Num_Stor := Num_Stor + 1;\n                   Next_Stored_Discriminant (Discr);\n                end loop;\n \n                --  Case of more stored discriminants than new discriminants\n \n-               if Num_Gird > Num_Disc then\n+               if Num_Stor > Num_Disc then\n \n                   --  Create a proper subtype of the parent type, which is the\n                   --  proper implementation type for the aggregate, and convert\n@@ -8330,10 +8555,6 @@ package body Exp_Aggr is\n          Expr_Q : Node_Id;\n \n       begin\n-         if No (Comps) then\n-            return True;\n-         end if;\n-\n          C := First (Comps);\n          while Present (C) loop\n \n@@ -8684,46 +8905,41 @@ package body Exp_Aggr is\n    ----------------------------\n \n    function Has_Default_Init_Comps (N : Node_Id) return Boolean is\n-      Comps : constant List_Id := Component_Associations (N);\n-      C     : Node_Id;\n+      Assoc : Node_Id;\n       Expr  : Node_Id;\n+      --  Component association and expression, respectively\n \n    begin\n       pragma Assert (Nkind (N) in N_Aggregate | N_Extension_Aggregate);\n \n-      if No (Comps) then\n-         return False;\n-      end if;\n-\n       if Has_Self_Reference (N) then\n          return True;\n       end if;\n \n-      --  Check if any direct component has default initialized components\n+      Assoc := First (Component_Associations (N));\n+      while Present (Assoc) loop\n+         --  Each component association has either a box or an expression\n \n-      C := First (Comps);\n-      while Present (C) loop\n-         if Box_Present (C) then\n-            return True;\n-         end if;\n+         pragma Assert (Box_Present (Assoc) xor Present (Expression (Assoc)));\n \n-         Next (C);\n-      end loop;\n+         --  Check if any direct component has default initialized components\n \n-      --  Recursive call in case of aggregate expression\n+         if Box_Present (Assoc) then\n+            return True;\n \n-      C := First (Comps);\n-      while Present (C) loop\n-         Expr := Expression (C);\n+         --  Recursive call in case of aggregate expression\n \n-         if Present (Expr)\n-           and then Nkind (Expr) in N_Aggregate | N_Extension_Aggregate\n-           and then Has_Default_Init_Comps (Expr)\n-         then\n-            return True;\n+         else\n+            Expr := Expression (Assoc);\n+\n+            if Nkind (Expr) in N_Aggregate | N_Extension_Aggregate\n+              and then Has_Default_Init_Comps (Expr)\n+            then\n+               return True;\n+            end if;\n          end if;\n \n-         Next (C);\n+         Next (Assoc);\n       end loop;\n \n       return False;\n@@ -8770,11 +8986,8 @@ package body Exp_Aggr is\n          Kind := Nkind (Node);\n       end if;\n \n-      if Kind not in N_Aggregate | N_Extension_Aggregate then\n-         return False;\n-      else\n-         return Expansion_Delayed (Node);\n-      end if;\n+      return Kind in N_Aggregate | N_Extension_Aggregate\n+        and then Expansion_Delayed (Node);\n    end Is_Delayed_Aggregate;\n \n    --------------------------------\n@@ -8871,11 +9084,11 @@ package body Exp_Aggr is\n    -----------------------------\n \n    function Is_Two_Dim_Packed_Array (Typ : Entity_Id) return Boolean is\n-      C : constant Int := UI_To_Int (Component_Size (Typ));\n+      C : constant Uint := Component_Size (Typ);\n    begin\n       return Number_Dimensions (Typ) = 2\n         and then Is_Bit_Packed_Array (Typ)\n-        and then (C = 1 or else C = 2 or else C = 4);\n+        and then C in Uint_1 | Uint_2 | Uint_4; -- False if No_Uint\n    end Is_Two_Dim_Packed_Array;\n \n    --------------------\n@@ -9022,7 +9235,7 @@ package body Exp_Aggr is\n \n             when N_Object_Declaration =>\n                return not Constant_Present (C)\n-                 and then Ekind (Current_Scope) in Subprogram_Kind;\n+                 and then Is_Subprogram (Current_Scope);\n \n             --  False for all other contexts\n \n@@ -9162,7 +9375,7 @@ package body Exp_Aggr is\n          -----------------------\n \n          function Get_Component_Val (N : Node_Id) return Uint is\n-            Val  : Uint;\n+            Val : Uint;\n \n          begin\n             --  We have to analyze the expression here before doing any further\n@@ -9411,13 +9624,16 @@ package body Exp_Aggr is\n    ----------------\n \n    function Must_Slide\n-     (Obj_Type : Entity_Id;\n+     (Aggr     : Node_Id;\n+      Obj_Type : Entity_Id;\n       Typ      : Entity_Id) return Boolean\n    is\n    begin\n       --  No sliding if the type of the object is not established yet, if it is\n       --  an unconstrained type whose actual subtype comes from the aggregate,\n-      --  or if the two types are identical.\n+      --  or if the two types are identical. If the aggregate contains only\n+      --  an Others_Clause it gets its type from the context and no sliding\n+      --  is involved either.\n \n       if not Is_Array_Type (Obj_Type) then\n          return False;\n@@ -9428,8 +9644,13 @@ package body Exp_Aggr is\n       elsif Typ = Obj_Type then\n          return False;\n \n+      elsif Is_Others_Aggregate (Aggr) then\n+         return False;\n+\n       else\n          --  Sliding can only occur along the first dimension\n+         --  If any the bounds of non-static sliding is required\n+         --  to force potential range checks.\n \n          declare\n             Bounds1 : constant Range_Nodes :=\n@@ -9443,7 +9664,8 @@ package body Exp_Aggr is\n                not Is_OK_Static_Expression (Bounds1.Last) or else\n                not Is_OK_Static_Expression (Bounds2.Last)\n             then\n-               return False;\n+               return True;\n+\n             else\n                return Expr_Value (Bounds1.First) /= Expr_Value (Bounds2.First)\n                         or else"}, {"sha": "b105175fb23802d65a7611648fd82244001021cf", "filename": "gcc/ada/exp_aggr.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_aggr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_aggr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "d2de2c9ddbc13de125d87118b1ca52159980ba37", "filename": "gcc/ada/exp_atag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_atag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_atag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_atag.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2006-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2006-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "cfdde34b1253b7a4f0357a5e71146e9db253dec7", "filename": "gcc/ada/exp_atag.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_atag.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_atag.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_atag.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2006-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2006-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "5374dd4d7e9ded5d4fcb0fe5ec73271857f4d9cd", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 40, "deletions": 13, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -67,6 +67,7 @@ with Sinfo.Utils;    use Sinfo.Utils;\n with Snames;         use Snames;\n with Stand;          use Stand;\n with Stringt;        use Stringt;\n+with Strub;          use Strub;\n with Tbuild;         use Tbuild;\n with Ttypes;         use Ttypes;\n with Uintp;          use Uintp;\n@@ -165,8 +166,7 @@ package body Exp_Attr is\n    --  the appropriate instantiation of System.Fat_Gen. Float arguments in Args\n    --  have already been converted to the floating-point type for which Pkg was\n    --  instantiated. The Nam argument is the relevant attribute processing\n-   --  routine to be called. This is the same as the attribute name, except in\n-   --  the Unaligned_Valid case.\n+   --  routine to be called. This is the same as the attribute name.\n \n    procedure Expand_Fpt_Attribute_R (N : Node_Id);\n    --  This procedure expands a call to a floating-point attribute function\n@@ -404,8 +404,6 @@ package body Exp_Attr is\n               Parameter_Specifications => New_List (\n                 Make_Parameter_Specification (Loc,\n                   Defining_Identifier => Obj_Id,\n-                  In_Present          => True,\n-                  Out_Present         => False,\n                   Parameter_Type      => New_Occurrence_Of (Formal_Typ, Loc))),\n               Result_Definition        =>\n                 New_Occurrence_Of (Standard_Boolean, Loc)),\n@@ -2163,6 +2161,7 @@ package body Exp_Attr is\n \n                   begin\n                      Subp_Typ := Create_Itype (E_Subprogram_Type, N);\n+                     Copy_Strub_Mode (Subp_Typ, Subp);\n                      Set_Etype (Subp_Typ, Etype (Subp));\n                      Set_Returns_By_Ref (Subp_Typ, Returns_By_Ref (Subp));\n \n@@ -2216,6 +2215,20 @@ package body Exp_Attr is\n             if Is_Access_Protected_Subprogram_Type (Btyp) then\n                Expand_Access_To_Protected_Op (N, Pref, Typ);\n \n+            --  If prefix is a subprogram that has class-wide preconditions and\n+            --  an indirect-call wrapper (ICW) of such subprogram is available\n+            --  then replace the prefix by the ICW.\n+\n+            elsif Is_Access_Subprogram_Type (Btyp)\n+              and then Is_Entity_Name (Pref)\n+              and then Present (Class_Preconditions (Entity (Pref)))\n+              and then Present (Indirect_Call_Wrapper (Entity (Pref)))\n+            then\n+               Rewrite (Pref,\n+                 New_Occurrence_Of\n+                   (Indirect_Call_Wrapper (Entity (Pref)), Loc));\n+               Analyze_And_Resolve (N, Typ);\n+\n             --  If prefix is a type name, this is a reference to the current\n             --  instance of the type, within its initialization procedure.\n \n@@ -3771,7 +3784,7 @@ package body Exp_Attr is\n       --------------\n \n       when Attribute_From_Any => From_Any : declare\n-         Decls  : constant List_Id   := New_List;\n+         Decls : constant List_Id := New_List;\n \n       begin\n          Rewrite (N,\n@@ -3885,8 +3898,8 @@ package body Exp_Attr is\n          if Ptyp = Standard_Exception_Type then\n             Id_Kind := RTE (RE_Exception_Id);\n \n-            if Present (Renamed_Object (Entity (Pref))) then\n-               Set_Entity (Pref, Renamed_Object (Entity (Pref)));\n+            if Present (Renamed_Entity (Entity (Pref))) then\n+               Set_Entity (Pref, Renamed_Entity (Entity (Pref)));\n             end if;\n \n             Rewrite (N,\n@@ -5530,6 +5543,21 @@ package body Exp_Attr is\n          end if;\n       end Pred;\n \n+      ----------------------------------\n+      -- Preelaborable_Initialization --\n+      ----------------------------------\n+\n+      when Attribute_Preelaborable_Initialization =>\n+\n+         --  This attribute should already be folded during analysis, but if\n+         --  for some reason it hasn't been, we fold it now.\n+\n+         Fold_Uint\n+           (N,\n+            UI_From_Int\n+              (Boolean'Pos (Has_Preelaborable_Initialization (Ptyp))),\n+            Static => False);\n+\n       --------------\n       -- Priority --\n       --------------\n@@ -6266,7 +6294,7 @@ package body Exp_Attr is\n                --  size. This applies to both types and objects. The size of an\n                --  object can be specified in the following ways:\n \n-               --    An explicit size object is given for an object\n+               --    An explicit size clause is given for an object\n                --    A component size is specified for an indexed component\n                --    A component clause is specified for a selected component\n                --    The object is a component of a packed composite object\n@@ -6282,7 +6310,7 @@ package body Exp_Attr is\n                                 or else Is_Packed (Etype (Prefix (Pref)))))\n                  or else\n                    (Nkind (Pref) = N_Indexed_Component\n-                     and then (Component_Size (Etype (Prefix (Pref))) /= 0\n+                     and then (Known_Component_Size (Etype (Prefix (Pref)))\n                                 or else Is_Packed (Etype (Prefix (Pref)))))\n                then\n                   Set_Attribute_Name (N, Name_Size);\n@@ -7339,7 +7367,7 @@ package body Exp_Attr is\n                if Nkind (P) in N_Has_Entity\n                  and then Present (Entity (P))\n                  and then Is_Object (Entity (P))\n-                 and then Esize (Entity (P)) /= Uint_0\n+                 and then Known_Esize (Entity (P))\n                then\n                   if Esize (Entity (P)) <= System_Max_Integer_Size then\n                      Size := Esize (Entity (P));\n@@ -7942,7 +7970,6 @@ package body Exp_Attr is\n       elsif Id = Attribute_Size\n         and then Is_Entity_Name (Pref)\n         and then Is_Object (Entity (Pref))\n-        and then Known_Esize (Entity (Pref))\n         and then Known_Static_Esize (Entity (Pref))\n       then\n          Siz := Esize (Entity (Pref));\n@@ -8028,7 +8055,7 @@ package body Exp_Attr is\n \n       --  Common processing for record and array component case\n \n-      if Siz /= No_Uint and then Siz /= 0 then\n+      if Present (Siz) and then Siz /= 0 then\n          declare\n             CS : constant Boolean := Comes_From_Source (N);\n "}, {"sha": "855247ef3c2a70cd2c6325050b65aa16e0fb0df9", "filename": "gcc/ada/exp_attr.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_attr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_attr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "2285e79f5858d6d2a750d92bb26f79d629c02370", "filename": "gcc/ada/exp_cg.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_cg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_cg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_cg.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2010-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2010-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "d82d3549a571440297af09cce2e4e118f6da6241", "filename": "gcc/ada/exp_cg.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_cg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_cg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_cg.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2010-2021, Free Software Foundation, Inc.      --\n+--             Copyright (C) 2010-2022, Free Software Foundation, Inc.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "c9ff1db0d866c2465732d6b1a979d9689cfc686f", "filename": "gcc/ada/exp_ch10.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch10.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch10.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch10.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "b2eff312bafeffba3c8cfae75c75a0aa440b7ff3", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1089,7 +1089,7 @@ package body Exp_Ch11 is\n    --  (protecting test only needed if not at library level)\n \n    --     exceptF : aliased System.Atomic_Operations.Test_And_Set.\n-   --                         .Test_And_Set_Flag := 0; --  static data\n+   --                         .Test_And_Set_Flag; --  static data\n    --     if not Atomic_Test_And_Set (exceptF) then\n    --        Register_Exception (except'Unrestricted_Access);\n    --     end if;\n@@ -1321,9 +1321,7 @@ package body Exp_Ch11 is\n                       Defining_Identifier => Flag_Id,\n                       Aliased_Present     => True,\n                       Object_Definition   =>\n-                        New_Occurrence_Of (RTE (RE_Test_And_Set_Flag), Loc),\n-                      Expression          =>\n-                        Make_Integer_Literal (Loc, 0));\n+                        New_Occurrence_Of (RTE (RE_Test_And_Set_Flag), Loc));\n                else\n                   Flag_Decl :=\n                     Make_Object_Declaration (Loc,\n@@ -1667,8 +1665,8 @@ package body Exp_Ch11 is\n             --  If the exception is a renaming, use the exception that it\n             --  renames (which might be a predefined exception, e.g.).\n \n-            if Present (Renamed_Object (Id)) then\n-               Id := Renamed_Object (Id);\n+            if Present (Renamed_Entity (Id)) then\n+               Id := Renamed_Entity (Id);\n             end if;\n \n             --  Build a C-compatible string in case of no exception handlers,\n@@ -1861,10 +1859,10 @@ package body Exp_Ch11 is\n \n             if Configurable_Run_Time_Mode then\n                Error_Msg_NE\n-                 (\"\\?X?& may call Last_Chance_Handler\", N, E);\n+                 (\"\\?.x?& may call Last_Chance_Handler\", N, E);\n             else\n                Error_Msg_NE\n-                 (\"\\?X?& may result in unhandled exception\", N, E);\n+                 (\"\\?.x?& may result in unhandled exception\", N, E);\n             end if;\n          end if;\n       end;\n@@ -2163,7 +2161,7 @@ package body Exp_Ch11 is\n          Warn_No_Exception_Propagation_Active (N);\n \n          Error_Msg_N\n-           (\"\\?X?this handler can never be entered, and has been removed\", N);\n+           (\"\\?.x?this handler can never be entered, and has been removed\", N);\n       end if;\n    end Warn_If_No_Local_Raise;\n \n@@ -2180,10 +2178,10 @@ package body Exp_Ch11 is\n \n          if Configurable_Run_Time_Mode then\n             Error_Msg_N\n-              (\"\\?X?Last_Chance_Handler will be called on exception\", N);\n+              (\"\\?.x?Last_Chance_Handler will be called on exception\", N);\n          else\n             Error_Msg_N\n-              (\"\\?X?execution may raise unhandled exception\", N);\n+              (\"\\?.x?execution may raise unhandled exception\", N);\n          end if;\n       end if;\n    end Warn_If_No_Propagation;\n@@ -2195,7 +2193,7 @@ package body Exp_Ch11 is\n    procedure Warn_No_Exception_Propagation_Active (N : Node_Id) is\n    begin\n       Error_Msg_N\n-        (\"?X?pragma Restrictions (No_Exception_Propagation) in effect\", N);\n+        (\"?.x?pragma Restrictions (No_Exception_Propagation) in effect\", N);\n    end Warn_No_Exception_Propagation_Active;\n \n end Exp_Ch11;"}, {"sha": "e9d9a1013d24bb887058dcada3f0ea3bb0a55eb5", "filename": "gcc/ada/exp_ch11.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch11.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch11.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "6a381092017158d173fd44477065baf29e5dcee4", "filename": "gcc/ada/exp_ch12.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch12.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1997-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1997-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "1e76518f606ffc2b604a34ecd4355162077974d7", "filename": "gcc/ada/exp_ch12.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch12.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch12.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch12.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "d3765e25543e8cb3a4b636e49a332abf0059b2f3", "filename": "gcc/ada/exp_ch13.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch13.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -491,7 +491,7 @@ package body Exp_Ch13 is\n       --  a constrained type extension with inherited discriminants.\n \n       if Is_Type (E_Scope)\n-        and then Ekind (E_Scope) not in Concurrent_Kind\n+        and then not Is_Concurrent_Type (E_Scope)\n       then\n          E_Scope := Scope (E_Scope);\n "}, {"sha": "b20934d604c78866fe05b1e5dee83b832b610a88", "filename": "gcc/ada/exp_ch13.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch13.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch13.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch13.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,6 +32,9 @@ package Exp_Ch13 is\n    procedure Expand_N_Attribute_Definition_Clause  (N : Node_Id);\n    procedure Expand_N_Free_Statement               (N : Node_Id);\n    procedure Expand_N_Freeze_Entity                (N : Node_Id);\n+   --  Note: for GNATprove we have a minimal variant of this routine in\n+   --  Exp_SPARK.Expand_SPARK_N_Freeze_Entity. They need to be kept in sync.\n+\n    procedure Expand_N_Record_Representation_Clause (N : Node_Id);\n \n end Exp_Ch13;"}, {"sha": "921a8b767544723d76831e81d6798bd9074c44f3", "filename": "gcc/ada/exp_ch2.adb", "status": "modified", "additions": 4, "deletions": 49, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch2.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -144,7 +144,7 @@ package body Exp_Ch2 is\n \n          --  Do not replace lvalues\n \n-         and then not May_Be_Lvalue (N)\n+         and then not Known_To_Be_Assigned (N)\n \n          --  Check that entity is suitable for replacement\n \n@@ -423,7 +423,7 @@ package body Exp_Ch2 is\n         and then Is_Scalar_Type (Etype (N))\n         and then (Is_Assignable (E) or else Is_Constant_Object (E))\n         and then Comes_From_Source (N)\n-        and then Is_LHS (N) = No\n+        and then not Known_To_Be_Assigned (N)\n         and then not Is_Actual_Out_Parameter (N)\n         and then (Nkind (Parent (N)) /= N_Attribute_Reference\n                    or else Attribute_Name (Parent (N)) /= Name_Valid)\n@@ -541,51 +541,6 @@ package body Exp_Ch2 is\n       Addr_Ent   : constant Entity_Id  := Node (Last_Elmt (Acc_Stack));\n       P_Comp_Ref : Entity_Id;\n \n-      function In_Assignment_Context (N : Node_Id) return Boolean;\n-      --  Check whether this is a context in which the entry formal may be\n-      --  assigned to.\n-\n-      ---------------------------\n-      -- In_Assignment_Context --\n-      ---------------------------\n-\n-      function In_Assignment_Context (N : Node_Id) return Boolean is\n-      begin\n-         --  Case of use in a call\n-\n-         --  ??? passing a formal as actual for a mode IN formal is\n-         --  considered as an assignment?\n-\n-         if Nkind (Parent (N)) in\n-              N_Procedure_Call_Statement | N_Entry_Call_Statement\n-           or else (Nkind (Parent (N)) = N_Assignment_Statement\n-                      and then N = Name (Parent (N)))\n-         then\n-            return True;\n-\n-         --  Case of a parameter association: climb up to enclosing call\n-\n-         elsif Nkind (Parent (N)) = N_Parameter_Association then\n-            return In_Assignment_Context (Parent (N));\n-\n-         --  Case of a selected component, indexed component or slice prefix:\n-         --  climb up the tree, unless the prefix is of an access type (in\n-         --  which case there is an implicit dereference, and the formal itself\n-         --  is not being assigned to).\n-\n-         elsif Nkind (Parent (N)) in\n-                 N_Selected_Component | N_Indexed_Component | N_Slice\n-           and then N = Prefix (Parent (N))\n-           and then not Is_Access_Type (Etype (N))\n-           and then In_Assignment_Context (Parent (N))\n-         then\n-            return True;\n-\n-         else\n-            return False;\n-         end if;\n-      end In_Assignment_Context;\n-\n    --  Start of processing for Expand_Entry_Parameter\n \n    begin\n@@ -604,7 +559,7 @@ package body Exp_Ch2 is\n          --  done during semantic processing so it is called in -gnatc mode???\n \n          if Ekind (Entity (N)) /= E_In_Parameter\n-           and then In_Assignment_Context (N)\n+           and then Known_To_Be_Assigned (N)\n          then\n             Note_Possible_Modification (N, Sure => True);\n          end if;"}, {"sha": "8845aa7a775d1c66ca403b062fa7a2f724ce871b", "filename": "gcc/ada/exp_ch2.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch2.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "50f46fb479eb5b11b2a3a75bebf5514f2a70a72c", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 501, "deletions": 398, "changes": 899, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,6 +26,7 @@\n with Aspects;        use Aspects;\n with Atree;          use Atree;\n with Checks;         use Checks;\n+with Contracts;      use Contracts;\n with Einfo;          use Einfo;\n with Einfo.Entities; use Einfo.Entities;\n with Einfo.Utils;    use Einfo.Utils;\n@@ -286,30 +287,13 @@ package body Exp_Ch3 is\n    --  controlled components that require finalization actions (the deep\n    --  in the name refers to the fact that the action applies to components).\n    --\n-   --  The list is returned in Predef_List. The Parameter Renamed_Eq either\n-   --  returns the value Empty, or else the defining unit name for the\n-   --  predefined equality function in the case where the type has a primitive\n-   --  operation that is a renaming of predefined equality (but only if there\n-   --  is also an overriding user-defined equality function). The returned\n-   --  Renamed_Eq will be passed to the corresponding parameter of\n-   --  Predefined_Primitive_Bodies.\n+   --  The list of specs is returned in Predef_List\n \n    function Has_New_Non_Standard_Rep (T : Entity_Id) return Boolean;\n    --  Returns True if there are representation clauses for type T that are not\n    --  inherited. If the result is false, the init_proc and the discriminant\n    --  checking functions of the parent can be reused by a derived type.\n \n-   procedure Make_Controlling_Function_Wrappers\n-     (Tag_Typ   : Entity_Id;\n-      Decl_List : out List_Id;\n-      Body_List : out List_Id);\n-   --  Ada 2005 (AI-391): Makes specs and bodies for the wrapper functions\n-   --  associated with inherited functions with controlling results which\n-   --  are not overridden. The body of each wrapper function consists solely\n-   --  of a return statement whose expression is an extension aggregate\n-   --  invoking the inherited subprogram's parent subprogram and extended\n-   --  with a null association list.\n-\n    function Make_Null_Procedure_Specs (Tag_Typ : Entity_Id) return List_Id;\n    --  Ada 2005 (AI-251): Makes specs for null procedures associated with any\n    --  null procedures inherited from an interface type that have not been\n@@ -331,10 +315,9 @@ package body Exp_Ch3 is\n    --  no declarations and no statements.\n \n    function Predef_Stream_Attr_Spec\n-     (Loc      : Source_Ptr;\n-      Tag_Typ  : Entity_Id;\n-      Name     : TSS_Name_Type;\n-      For_Body : Boolean := False) return Node_Id;\n+     (Loc     : Source_Ptr;\n+      Tag_Typ : Entity_Id;\n+      Name    : TSS_Name_Type) return Node_Id;\n    --  Specialized version of Predef_Spec_Or_Body that apply to read, write,\n    --  input and output attribute whose specs are constructed in Exp_Strm.\n \n@@ -586,8 +569,7 @@ package body Exp_Ch3 is\n \n       --  Place body in list of freeze actions for the type.\n \n-      Ensure_Freeze_Node (Type_Id);\n-      Append_Freeze_Actions (Type_Id, New_List (Body_Node));\n+      Append_Freeze_Action (Type_Id, Body_Node);\n    end Build_Access_Subprogram_Wrapper_Body;\n \n    ---------------------------\n@@ -942,11 +924,11 @@ package body Exp_Ch3 is\n         (Case_Id : Entity_Id;\n          Variant : Node_Id) return Node_Id;\n       --  Build a case statement containing only two alternatives. The first\n-      --  alternative corresponds exactly to the discrete choices given on the\n-      --  variant with contains the components that we are generating the\n-      --  checks for. If the discriminant is one of these return False. The\n-      --  second alternative is an OTHERS choice that will return True\n-      --  indicating the discriminant did not match.\n+      --  alternative corresponds to the discrete choices given on the variant\n+      --  that contains the components that we are generating the checks\n+      --  for. If the discriminant is one of these return False. The second\n+      --  alternative is an OTHERS choice that returns True indicating the\n+      --  discriminant did not match.\n \n       function Build_Dcheck_Function\n         (Case_Id : Entity_Id;\n@@ -976,6 +958,7 @@ package body Exp_Ch3 is\n \n       begin\n          Case_Node := New_Node (N_Case_Statement, Loc);\n+         Set_End_Span (Case_Node, Uint_0);\n \n          --  Replace the discriminant which controls the variant with the name\n          --  of the formal of the checking function.\n@@ -1051,10 +1034,10 @@ package body Exp_Ch3 is\n         (Case_Id : Entity_Id;\n          Variant : Node_Id) return Entity_Id\n       is\n-         Body_Node           : Node_Id;\n-         Func_Id             : Entity_Id;\n-         Parameter_List      : List_Id;\n-         Spec_Node           : Node_Id;\n+         Body_Node      : Node_Id;\n+         Func_Id        : Entity_Id;\n+         Parameter_List : List_Id;\n+         Spec_Node      : Node_Id;\n \n       begin\n          Body_Node := New_Node (N_Subprogram_Body, Loc);\n@@ -2039,6 +2022,25 @@ package body Exp_Ch3 is\n                          Elmt2 => Defining_Identifier (First\n                                    (Parameter_Specifications\n                                       (Parent (Proc_Id)))));\n+\n+               --  If the type has an incomplete view, a current instance\n+               --  may have an incomplete type. In that case, it must also be\n+               --  replaced by the formal of the Init_Proc.\n+\n+               if Nkind (Parent (Rec_Type)) = N_Full_Type_Declaration\n+                 and then Present (Incomplete_View (Parent (Rec_Type)))\n+               then\n+                  Append_Elmt (\n+                    N  => Defining_Identifier\n+                            (Incomplete_View (Parent (Rec_Type))),\n+                    To => Map);\n+                  Append_Elmt (\n+                    N  => Defining_Identifier\n+                            (First\n+                              (Parameter_Specifications\n+                                (Parent (Proc_Id)))),\n+                    To => Map);\n+               end if;\n             end if;\n \n             Exp := New_Copy_Tree (Exp, New_Scope => Proc_Id, Map => Map);\n@@ -2883,9 +2885,7 @@ package body Exp_Ch3 is\n                   Fixed_Comps    => False,\n                   Variable_Comps => True);\n \n-               if Is_Non_Empty_List (Init_Tags_List) then\n-                  Append_List_To (Body_Stmts, Init_Tags_List);\n-               end if;\n+               Append_List_To (Body_Stmts, Init_Tags_List);\n             end if;\n          end if;\n \n@@ -3205,9 +3205,7 @@ package body Exp_Ch3 is\n          --  types moving any expanded code from the spec to the body of the\n          --  init procedure.\n \n-         if Is_Task_Record_Type (Rec_Type)\n-           or else Is_Protected_Record_Type (Rec_Type)\n-         then\n+         if Is_Concurrent_Record_Type (Rec_Type) then\n             declare\n                Decl : constant Node_Id :=\n                         Parent (Corresponding_Concurrent_Type (Rec_Type));\n@@ -3421,7 +3419,8 @@ package body Exp_Ch3 is\n \n                   Clean_Task_Names (Typ, Proc_Id);\n \n-               --  Simple initialization\n+               --  Simple initialization. If the Esize is not yet set, we pass\n+               --  Uint_0 as expected by Get_Simple_Init_Val.\n \n                elsif Component_Needs_Simple_Initialization (Typ) then\n                   Actions :=\n@@ -3431,7 +3430,9 @@ package body Exp_Ch3 is\n                          Get_Simple_Init_Val\n                            (Typ  => Typ,\n                             N    => N,\n-                            Size => Esize (Id)));\n+                            Size =>\n+                              (if Known_Esize (Id) then Esize (Id)\n+                               else Uint_0)));\n \n                --  Nothing needed for this case\n \n@@ -3585,12 +3586,11 @@ package body Exp_Ch3 is\n                   end loop;\n                end if;\n             end;\n-         end if;\n \n          --  For a protected type, add statements generated by\n          --  Make_Initialize_Protection.\n \n-         if Is_Protected_Record_Type (Rec_Type) then\n+         elsif Is_Protected_Record_Type (Rec_Type) then\n             Append_List_To (Stmts,\n               Make_Initialize_Protection (Rec_Type));\n          end if;\n@@ -4139,7 +4139,7 @@ package body Exp_Ch3 is\n                Set_Static_Initialization (Proc_Id, Agg);\n \n                declare\n-                  Comp  : Node_Id;\n+                  Comp : Node_Id;\n                begin\n                   Comp := First (Component_Associations (Agg));\n                   while Present (Comp) loop\n@@ -5349,10 +5349,66 @@ package body Exp_Ch3 is\n    -------------------------------\n \n    procedure Expand_Freeze_Record_Type (N : Node_Id) is\n+\n+      procedure Build_Class_Condition_Subprograms (Typ : Entity_Id);\n+      --  Create internal subprograms of Typ primitives that have class-wide\n+      --  preconditions or postconditions; they are invoked by the caller to\n+      --  evaluate the conditions.\n+\n       procedure Build_Variant_Record_Equality (Typ  : Entity_Id);\n       --  Create An Equality function for the untagged variant record Typ and\n       --  attach it to the TSS list.\n \n+      procedure Register_Dispatch_Table_Wrappers (Typ : Entity_Id);\n+      --  Register dispatch-table wrappers in the dispatch table of Typ\n+\n+      ---------------------------------------\n+      -- Build_Class_Condition_Subprograms --\n+      ---------------------------------------\n+\n+      procedure Build_Class_Condition_Subprograms (Typ : Entity_Id) is\n+         Prim_List : constant Elist_Id := Primitive_Operations (Typ);\n+         Prim_Elmt : Elmt_Id           := First_Elmt (Prim_List);\n+         Prim      : Entity_Id;\n+\n+      begin\n+         while Present (Prim_Elmt) loop\n+            Prim := Node (Prim_Elmt);\n+\n+            --  Primitive with class-wide preconditions\n+\n+            if Comes_From_Source (Prim)\n+              and then Has_Significant_Contract (Prim)\n+              and then\n+                (Present (Class_Preconditions (Prim))\n+                   or else Present (Ignored_Class_Preconditions (Prim)))\n+            then\n+               if Expander_Active then\n+                  Make_Class_Precondition_Subps (Prim);\n+               end if;\n+\n+            --  Wrapper of a primitive that has or inherits class-wide\n+            --  preconditions.\n+\n+            elsif Is_Primitive_Wrapper (Prim)\n+              and then\n+                (Present (Nearest_Class_Condition_Subprogram\n+                           (Spec_Id => Prim,\n+                            Kind    => Class_Precondition))\n+                   or else\n+                 Present (Nearest_Class_Condition_Subprogram\n+                           (Spec_Id => Prim,\n+                            Kind    => Ignored_Class_Precondition)))\n+            then\n+               if Expander_Active then\n+                  Make_Class_Precondition_Subps (Prim);\n+               end if;\n+            end if;\n+\n+            Next_Elmt (Prim_Elmt);\n+         end loop;\n+      end Build_Class_Condition_Subprograms;\n+\n       -----------------------------------\n       -- Build_Variant_Record_Equality --\n       -----------------------------------\n@@ -5414,6 +5470,27 @@ package body Exp_Ch3 is\n          end if;\n       end Build_Variant_Record_Equality;\n \n+      --------------------------------------\n+      -- Register_Dispatch_Table_Wrappers --\n+      --------------------------------------\n+\n+      procedure Register_Dispatch_Table_Wrappers (Typ : Entity_Id) is\n+         Elmt : Elmt_Id := First_Elmt (Primitive_Operations (Typ));\n+         Subp : Entity_Id;\n+\n+      begin\n+         while Present (Elmt) loop\n+            Subp := Node (Elmt);\n+\n+            if Is_Dispatch_Table_Wrapper (Subp) then\n+               Append_Freeze_Actions (Typ,\n+                 Register_Primitive (Sloc (Subp), Subp));\n+            end if;\n+\n+            Next_Elmt (Elmt);\n+         end loop;\n+      end Register_Dispatch_Table_Wrappers;\n+\n       --  Local variables\n \n       Typ      : constant Node_Id := Entity (N);\n@@ -5423,7 +5500,7 @@ package body Exp_Ch3 is\n       Comp_Typ    : Entity_Id;\n       Predef_List : List_Id;\n \n-      Wrapper_Decl_List : List_Id := No_List;\n+      Wrapper_Decl_List : List_Id;\n       Wrapper_Body_List : List_Id := No_List;\n \n       Renamed_Eq : Node_Id := Empty;\n@@ -5663,6 +5740,13 @@ package body Exp_Ch3 is\n \n                if not Building_Static_DT (Typ) then\n                   Append_Freeze_Actions (Typ, Make_DT (Typ));\n+\n+                  --  Register dispatch table wrappers in the dispatch table.\n+                  --  It could not be done when these wrappers were built\n+                  --  because, at that stage, the dispatch table was not\n+                  --  available.\n+\n+                  Register_Dispatch_Table_Wrappers (Typ);\n                end if;\n             end if;\n \n@@ -5827,9 +5911,7 @@ package body Exp_Ch3 is\n          --  Ada 2005 (AI-391): If any wrappers were created for nonoverridden\n          --  inherited functions, then add their bodies to the freeze actions.\n \n-         if Present (Wrapper_Body_List) then\n-            Append_Freeze_Actions (Typ, Wrapper_Body_List);\n-         end if;\n+         Append_Freeze_Actions (Typ, Wrapper_Body_List);\n \n          --  Create extra formals for the primitive operations of the type.\n          --  This must be done before analyzing the body of the initialization\n@@ -5854,6 +5936,13 @@ package body Exp_Ch3 is\n             end loop;\n          end;\n       end if;\n+\n+      --  Build internal subprograms of primitives with class-wide\n+      --  pre/postconditions.\n+\n+      if Is_Tagged_Type (Typ) then\n+         Build_Class_Condition_Subprograms (Typ);\n+      end if;\n    end Expand_Freeze_Record_Type;\n \n    ------------------------------------\n@@ -6507,7 +6596,8 @@ package body Exp_Ch3 is\n                     Get_Simple_Init_Val\n                       (Typ  => Typ,\n                        N    => Obj_Def,\n-                       Size => Esize (Def_Id)));\n+                       Size => (if Known_Esize (Def_Id) then Esize (Def_Id)\n+                                else Uint_0)));\n \n                   Analyze_And_Resolve\n                     (Expression (N), Typ, Suppress => All_Checks);\n@@ -6534,7 +6624,8 @@ package body Exp_Ch3 is\n               Get_Simple_Init_Val\n                 (Typ  => Typ,\n                  N    => Obj_Def,\n-                 Size => Esize (Def_Id)));\n+                 Size =>\n+                   (if Known_Esize (Def_Id) then Esize (Def_Id) else Uint_0)));\n \n             Analyze_And_Resolve (Expression (N), Typ);\n          end if;\n@@ -6817,9 +6908,7 @@ package body Exp_Ch3 is\n                New_Nodes := Make_DT (Base_Typ, N);\n             end if;\n \n-            if not Is_Empty_List (New_Nodes) then\n-               Insert_List_Before (N, New_Nodes);\n-            end if;\n+            Insert_List_Before (N, New_Nodes);\n          end;\n       end if;\n \n@@ -8506,15 +8595,15 @@ package body Exp_Ch3 is\n             if Compile_Time_Known_Value (Lo) then\n                Lo_Val := Expr_Value (Lo);\n \n-               if Lo_Bound = No_Uint or else Lo_Bound < Lo_Val then\n+               if No (Lo_Bound) or else Lo_Bound < Lo_Val then\n                   Lo_Bound := Lo_Val;\n                end if;\n             end if;\n \n             if Compile_Time_Known_Value (Hi) then\n                Hi_Val := Expr_Value (Hi);\n \n-               if Hi_Bound = No_Uint or else Hi_Bound > Hi_Val then\n+               if No (Hi_Bound) or else Hi_Bound > Hi_Val then\n                   Hi_Bound := Hi_Val;\n                end if;\n             end if;\n@@ -8643,7 +8732,7 @@ package body Exp_Ch3 is\n          --  If zero is invalid, it is a convenient value to use that is for\n          --  sure an appropriate invalid value in all situations.\n \n-         elsif Lo_Bound /= No_Uint and then Lo_Bound > Uint_0 then\n+         elsif Present (Lo_Bound) and then Lo_Bound > Uint_0 then\n             return Make_Integer_Literal (Loc, 0);\n \n          --  Unsigned types\n@@ -8702,7 +8791,7 @@ package body Exp_Ch3 is\n          --  If zero is invalid, it is a convenient value to use that is for\n          --  sure an appropriate invalid value in all situations.\n \n-         if Lo_Bound /= No_Uint and then Lo_Bound > Uint_0 then\n+         if Present (Lo_Bound) and then Lo_Bound > Uint_0 then\n             Expr := Make_Integer_Literal (Loc, 0);\n \n          --  Cases where all one bits is the appropriate invalid value\n@@ -8741,7 +8830,7 @@ package body Exp_Ch3 is\n \n             --  For this exceptional case, use largest positive value\n \n-            if Lo_Bound /= No_Uint and then Hi_Bound /= No_Uint\n+            if Present (Lo_Bound) and then Present (Hi_Bound)\n               and then Lo_Bound <= (-(2 ** Signed_Size))\n               and then Hi_Bound < 2 ** Signed_Size\n             then\n@@ -8811,7 +8900,7 @@ package body Exp_Ch3 is\n          --  Determine the size of the object. This is either the size provided\n          --  by the caller, or the Esize of the scalar type.\n \n-         if Size = No_Uint or else Size <= Uint_0 then\n+         if No (Size) or else Size <= Uint_0 then\n             Size_To_Use := UI_Max (Uint_1, Esize (Typ));\n          else\n             Size_To_Use := Size;\n@@ -8821,7 +8910,7 @@ package body Exp_Ch3 is\n          --  will create values of type Long_Long_Long_Unsigned and the range\n          --  must fit this type.\n \n-         if Size_To_Use /= No_Uint\n+         if Present (Size_To_Use)\n            and then Size_To_Use > System_Max_Integer_Size\n          then\n             Size_To_Use := UI_From_Int (System_Max_Integer_Size);\n@@ -9506,18 +9595,40 @@ package body Exp_Ch3 is\n       Decl_List : out List_Id;\n       Body_List : out List_Id)\n    is\n-      Loc         : constant Source_Ptr := Sloc (Tag_Typ);\n+      Loc : constant Source_Ptr := Sloc (Tag_Typ);\n+\n+      function Make_Wrapper_Specification (Subp : Entity_Id) return Node_Id;\n+      --  Returns a function specification with the same profile as Subp\n+\n+      --------------------------------\n+      -- Make_Wrapper_Specification --\n+      --------------------------------\n+\n+      function Make_Wrapper_Specification (Subp : Entity_Id) return Node_Id is\n+      begin\n+         return\n+           Make_Function_Specification (Loc,\n+             Defining_Unit_Name       =>\n+               Make_Defining_Identifier (Loc,\n+                 Chars => Chars (Subp)),\n+             Parameter_Specifications =>\n+               Copy_Parameter_List (Subp),\n+             Result_Definition        =>\n+               New_Occurrence_Of (Etype (Subp), Loc));\n+      end Make_Wrapper_Specification;\n+\n       Prim_Elmt   : Elmt_Id;\n       Subp        : Entity_Id;\n       Actual_List : List_Id;\n-      Formal_List : List_Id;\n       Formal      : Entity_Id;\n       Par_Formal  : Entity_Id;\n+      Ext_Aggr    : Node_Id;\n       Formal_Node : Node_Id;\n       Func_Body   : Node_Id;\n       Func_Decl   : Node_Id;\n-      Func_Spec   : Node_Id;\n-      Return_Stmt : Node_Id;\n+      Func_Id     : Entity_Id;\n+\n+   --  Start of processing for Make_Controlling_Function_Wrappers\n \n    begin\n       Decl_List := New_List;\n@@ -9589,43 +9700,10 @@ package body Exp_Ch3 is\n                end;\n             end if;\n \n-            Formal_List := No_List;\n-            Formal := First_Formal (Subp);\n-\n-            if Present (Formal) then\n-               Formal_List := New_List;\n-\n-               while Present (Formal) loop\n-                  Append\n-                    (Make_Parameter_Specification\n-                       (Loc,\n-                        Defining_Identifier =>\n-                          Make_Defining_Identifier (Sloc (Formal),\n-                            Chars => Chars (Formal)),\n-                        In_Present  => In_Present (Parent (Formal)),\n-                        Out_Present => Out_Present (Parent (Formal)),\n-                        Null_Exclusion_Present =>\n-                          Null_Exclusion_Present (Parent (Formal)),\n-                        Parameter_Type =>\n-                          New_Occurrence_Of (Etype (Formal), Loc),\n-                        Expression =>\n-                          New_Copy_Tree (Expression (Parent (Formal)))),\n-                     Formal_List);\n-\n-                  Next_Formal (Formal);\n-               end loop;\n-            end if;\n-\n-            Func_Spec :=\n-              Make_Function_Specification (Loc,\n-                Defining_Unit_Name       =>\n-                  Make_Defining_Identifier (Loc,\n-                    Chars => Chars (Subp)),\n-                Parameter_Specifications => Formal_List,\n-                Result_Definition        =>\n-                  New_Occurrence_Of (Etype (Subp), Loc));\n+            Func_Decl :=\n+              Make_Subprogram_Declaration (Loc,\n+                Specification => Make_Wrapper_Specification (Subp));\n \n-            Func_Decl := Make_Subprogram_Declaration (Loc, Func_Spec);\n             Append_To (Decl_List, Func_Decl);\n \n             --  Build a wrapper body that calls the parent function. The body\n@@ -9638,69 +9716,81 @@ package body Exp_Ch3 is\n \n             Formal      := First_Formal (Subp);\n             Par_Formal  := First_Formal (Alias (Subp));\n-            Formal_Node := First (Formal_List);\n+            Formal_Node :=\n+              First (Parameter_Specifications (Specification (Func_Decl)));\n \n             if Present (Formal) then\n                Actual_List := New_List;\n-            else\n-               Actual_List := No_List;\n-            end if;\n \n-            while Present (Formal) loop\n-               if Is_Controlling_Formal (Formal) then\n-                  Append_To (Actual_List,\n-                    Make_Type_Conversion (Loc,\n-                      Subtype_Mark =>\n-                        New_Occurrence_Of (Etype (Par_Formal), Loc),\n-                      Expression   =>\n+               while Present (Formal) loop\n+                  if Is_Controlling_Formal (Formal) then\n+                     Append_To (Actual_List,\n+                       Make_Type_Conversion (Loc,\n+                         Subtype_Mark =>\n+                           New_Occurrence_Of (Etype (Par_Formal), Loc),\n+                         Expression   =>\n+                           New_Occurrence_Of\n+                             (Defining_Identifier (Formal_Node), Loc)));\n+                  else\n+                     Append_To\n+                       (Actual_List,\n                         New_Occurrence_Of\n-                          (Defining_Identifier (Formal_Node), Loc)));\n-               else\n-                  Append_To\n-                    (Actual_List,\n-                     New_Occurrence_Of\n-                       (Defining_Identifier (Formal_Node), Loc));\n-               end if;\n+                          (Defining_Identifier (Formal_Node), Loc));\n+                  end if;\n \n-               Next_Formal (Formal);\n-               Next_Formal (Par_Formal);\n-               Next (Formal_Node);\n-            end loop;\n+                  Next_Formal (Formal);\n+                  Next_Formal (Par_Formal);\n+                  Next (Formal_Node);\n+               end loop;\n+            else\n+               Actual_List := No_List;\n+            end if;\n \n-            Return_Stmt :=\n-              Make_Simple_Return_Statement (Loc,\n-                Expression =>\n-                  Make_Extension_Aggregate (Loc,\n-                    Ancestor_Part       =>\n-                      Make_Function_Call (Loc,\n-                        Name                   =>\n-                          New_Occurrence_Of (Alias (Subp), Loc),\n-                        Parameter_Associations => Actual_List),\n-                    Null_Record_Present => True));\n-\n-            Func_Body :=\n-              Make_Subprogram_Body (Loc,\n-                Specification              => New_Copy_Tree (Func_Spec),\n-                Declarations               => Empty_List,\n-                Handled_Statement_Sequence =>\n-                  Make_Handled_Sequence_Of_Statements (Loc,\n-                    Statements => New_List (Return_Stmt)));\n-\n-            Set_Defining_Unit_Name\n-              (Specification (Func_Body),\n-                Make_Defining_Identifier (Loc, Chars (Subp)));\n+            Ext_Aggr :=\n+              Make_Extension_Aggregate (Loc,\n+                Ancestor_Part       =>\n+                  Make_Function_Call (Loc,\n+                    Name                   =>\n+                      New_Occurrence_Of (Alias (Subp), Loc),\n+                    Parameter_Associations => Actual_List),\n+                Null_Record_Present => True);\n+\n+            --  GNATprove will use expression of an expression function as an\n+            --  implicit postcondition. GNAT will not benefit from expression\n+            --  function (and would struggle if we add an expression function\n+            --  to freezing actions).\n+\n+            if GNATprove_Mode then\n+               Func_Body :=\n+                 Make_Expression_Function (Loc,\n+                   Specification =>\n+                     Make_Wrapper_Specification (Subp),\n+                   Expression => Ext_Aggr);\n+            else\n+               Func_Body :=\n+                 Make_Subprogram_Body (Loc,\n+                   Specification              =>\n+                     Make_Wrapper_Specification (Subp),\n+                   Declarations               => Empty_List,\n+                   Handled_Statement_Sequence =>\n+                     Make_Handled_Sequence_Of_Statements (Loc,\n+                       Statements => New_List (\n+                         Make_Simple_Return_Statement (Loc,\n+                           Expression => Ext_Aggr))));\n+            end if;\n \n             Append_To (Body_List, Func_Body);\n \n             --  Replace the inherited function with the wrapper function in the\n             --  primitive operations list. We add the minimum decoration needed\n             --  to override interface primitives.\n \n-            Mutate_Ekind (Defining_Unit_Name (Func_Spec), E_Function);\n-            Set_Is_Wrapper (Defining_Unit_Name (Func_Spec));\n+            Func_Id := Defining_Unit_Name (Specification (Func_Decl));\n+\n+            Mutate_Ekind (Func_Id, E_Function);\n+            Set_Is_Wrapper (Func_Id);\n \n-            Override_Dispatching_Operation\n-              (Tag_Typ, Subp, New_Op => Defining_Unit_Name (Func_Spec));\n+            Override_Dispatching_Operation (Tag_Typ, Subp, New_Op => Func_Id);\n          end if;\n \n       <<Next_Prim>>\n@@ -9727,9 +9817,9 @@ package body Exp_Ch3 is\n    begin\n       Decl :=\n         Predef_Spec_Or_Body (Loc,\n-          Tag_Typ => Typ,\n-          Name    => Eq_Name,\n-          Profile => New_List (\n+          Tag_Typ  => Typ,\n+          Name     => Eq_Name,\n+          Profile  => New_List (\n             Make_Parameter_Specification (Loc,\n               Defining_Identifier =>\n                 Make_Defining_Identifier (Loc, Name_X),\n@@ -9770,10 +9860,9 @@ package body Exp_Ch3 is\n              Expression =>\n                Expand_Record_Equality\n                  (Typ,\n-                  Typ    => Typ,\n-                  Lhs    => Make_Identifier (Loc, Name_X),\n-                  Rhs    => Make_Identifier (Loc, Name_Y),\n-                  Bodies => Declarations (Decl))));\n+                  Typ => Typ,\n+                  Lhs => Make_Identifier (Loc, Name_X),\n+                  Rhs => Make_Identifier (Loc, Name_Y))));\n       end if;\n \n       Set_Handled_Statement_Sequence\n@@ -10045,7 +10134,6 @@ package body Exp_Ch3 is\n       --  Local variables\n \n       Loc           : constant Source_Ptr := Sloc (Parent (Tag_Typ));\n-      Stmts         : constant List_Id    := New_List;\n       Decl          : Node_Id;\n       Eq_Prim       : Entity_Id;\n       Left_Op       : Entity_Id;\n@@ -10061,7 +10149,7 @@ package body Exp_Ch3 is\n       --  the body executed is that of the overriding declaration, even if the\n       --  overriding declaration is not visible at the place of the renaming;\n       --  otherwise, the inherited or predefined subprogram is called, see\n-      --  (RM 8.5.4(8))\n+      --  (RM 8.5.4(8)).\n \n       --  Stage 1: Search for a renaming of the inequality primitive and also\n       --  search for an overriding of the equality primitive located before the\n@@ -10122,9 +10210,9 @@ package body Exp_Ch3 is\n \n       Decl :=\n         Predef_Spec_Or_Body (Loc,\n-          Tag_Typ => Tag_Typ,\n-          Name    => Chars (Renaming_Prim),\n-          Profile => New_List (\n+          Tag_Typ  => Tag_Typ,\n+          Name     => Chars (Renaming_Prim),\n+          Profile  => New_List (\n             Make_Parameter_Specification (Loc,\n               Defining_Identifier =>\n                 Make_Defining_Identifier (Loc, Chars (Left_Op)),\n@@ -10171,18 +10259,18 @@ package body Exp_Ch3 is\n          end;\n       end if;\n \n-      Append_To (Stmts,\n-        Make_Simple_Return_Statement (Loc,\n-          Expression =>\n-            Make_Op_Not (Loc,\n-              Make_Function_Call (Loc,\n-                Name                   => New_Occurrence_Of (Target, Loc),\n-                Parameter_Associations => New_List (\n-                  Make_Identifier (Loc, Chars (Left_Op)),\n-                  Make_Identifier (Loc, Chars (Right_Op)))))));\n-\n       Set_Handled_Statement_Sequence\n-        (Decl, Make_Handled_Sequence_Of_Statements (Loc, Stmts));\n+        (Decl,\n+         Make_Handled_Sequence_Of_Statements (Loc, New_List (\n+           Make_Simple_Return_Statement (Loc,\n+              Expression =>\n+                Make_Op_Not (Loc,\n+                  Make_Function_Call (Loc,\n+                  Name                   => New_Occurrence_Of (Target, Loc),\n+                  Parameter_Associations => New_List (\n+                    Make_Identifier (Loc, Chars (Left_Op)),\n+                    Make_Identifier (Loc, Chars (Right_Op)))))))));\n+\n       return Decl;\n    end Make_Neq_Body;\n \n@@ -10194,8 +10282,8 @@ package body Exp_Ch3 is\n       Decl_List      : constant List_Id    := New_List;\n       Loc            : constant Source_Ptr := Sloc (Tag_Typ);\n       Formal         : Entity_Id;\n-      Formal_List    : List_Id;\n       New_Param_Spec : Node_Id;\n+      New_Spec       : Node_Id;\n       Parent_Subp    : Entity_Id;\n       Prim_Elmt      : Elmt_Id;\n       Subp           : Entity_Id;\n@@ -10214,58 +10302,47 @@ package body Exp_Ch3 is\n          if Present (Parent_Subp)\n            and then Is_Null_Interface_Primitive (Parent_Subp)\n          then\n-            Formal_List := No_List;\n-            Formal := First_Formal (Subp);\n+            --  The null procedure spec is copied from the inherited procedure,\n+            --  except for the IS NULL (which must be added) and the overriding\n+            --  indicators (which must be removed, if present).\n \n-            if Present (Formal) then\n-               Formal_List := New_List;\n-\n-               while Present (Formal) loop\n+            New_Spec :=\n+              Copy_Subprogram_Spec (Subprogram_Specification (Subp), Loc);\n \n-                  --  Copy the parameter spec including default expressions\n+            Set_Null_Present      (New_Spec, True);\n+            Set_Must_Override     (New_Spec, False);\n+            Set_Must_Not_Override (New_Spec, False);\n \n-                  New_Param_Spec :=\n-                    New_Copy_Tree (Parent (Formal), New_Sloc => Loc);\n-\n-                  --  Generate a new defining identifier for the new formal.\n-                  --  required because New_Copy_Tree does not duplicate\n-                  --  semantic fields (except itypes).\n+            Formal := First_Formal (Subp);\n+            New_Param_Spec := First (Parameter_Specifications (New_Spec));\n \n-                  Set_Defining_Identifier (New_Param_Spec,\n-                    Make_Defining_Identifier (Sloc (Formal),\n-                      Chars => Chars (Formal)));\n+            while Present (Formal) loop\n \n-                  --  For controlling arguments we must change their\n-                  --  parameter type to reference the tagged type (instead\n-                  --  of the interface type)\n+               --  For controlling arguments we must change their parameter\n+               --  type to reference the tagged type (instead of the interface\n+               --  type).\n \n-                  if Is_Controlling_Formal (Formal) then\n-                     if Nkind (Parameter_Type (Parent (Formal))) = N_Identifier\n-                     then\n-                        Set_Parameter_Type (New_Param_Spec,\n-                          New_Occurrence_Of (Tag_Typ, Loc));\n-\n-                     else pragma Assert\n-                            (Nkind (Parameter_Type (Parent (Formal))) =\n-                                                        N_Access_Definition);\n-                        Set_Subtype_Mark (Parameter_Type (New_Param_Spec),\n-                          New_Occurrence_Of (Tag_Typ, Loc));\n-                     end if;\n+               if Is_Controlling_Formal (Formal) then\n+                  if Nkind (Parameter_Type (Parent (Formal))) = N_Identifier\n+                  then\n+                     Set_Parameter_Type (New_Param_Spec,\n+                       New_Occurrence_Of (Tag_Typ, Loc));\n+\n+                  else pragma Assert\n+                         (Nkind (Parameter_Type (Parent (Formal))) =\n+                                                     N_Access_Definition);\n+                     Set_Subtype_Mark (Parameter_Type (New_Param_Spec),\n+                       New_Occurrence_Of (Tag_Typ, Loc));\n                   end if;\n+               end if;\n \n-                  Append (New_Param_Spec, Formal_List);\n-\n-                  Next_Formal (Formal);\n-               end loop;\n-            end if;\n+               Next_Formal (Formal);\n+               Next (New_Param_Spec);\n+            end loop;\n \n             Append_To (Decl_List,\n               Make_Subprogram_Declaration (Loc,\n-                Make_Procedure_Specification (Loc,\n-                  Defining_Unit_Name       =>\n-                    Make_Defining_Identifier (Loc, Chars (Subp)),\n-                  Parameter_Specifications => Formal_List,\n-                  Null_Present             => True)));\n+                Specification => New_Spec));\n          end if;\n \n          Next_Elmt (Prim_Elmt);\n@@ -10274,13 +10351,13 @@ package body Exp_Ch3 is\n       return Decl_List;\n    end Make_Null_Procedure_Specs;\n \n-   -------------------------------------\n-   -- Make_Predefined_Primitive_Specs --\n-   -------------------------------------\n+   ---------------------------------------\n+   -- Make_Predefined_Primitive_Eq_Spec --\n+   ---------------------------------------\n \n-   procedure Make_Predefined_Primitive_Specs\n+   procedure Make_Predefined_Primitive_Eq_Spec\n      (Tag_Typ     : Entity_Id;\n-      Predef_List : out List_Id;\n+      Predef_List : List_Id;\n       Renamed_Eq  : out Entity_Id)\n    is\n       function Is_Predefined_Eq_Renaming (Prim : Node_Id) return Boolean;\n@@ -10302,30 +10379,161 @@ package body Exp_Ch3 is\n \n       --  Local variables\n \n-      Loc       : constant Source_Ptr := Sloc (Tag_Typ);\n-      Res       : constant List_Id    := New_List;\n-      Eq_Name   : Name_Id             := Name_Op_Eq;\n-      Eq_Needed : Boolean;\n+      Loc : constant Source_Ptr := Sloc (Tag_Typ);\n+\n+      Eq_Name   : Name_Id := Name_Op_Eq;\n+      Eq_Needed : Boolean := True;\n       Eq_Spec   : Node_Id;\n       Prim      : Elmt_Id;\n \n       Has_Predef_Eq_Renaming : Boolean := False;\n       --  Set to True if Tag_Typ has a primitive that renames the predefined\n       --  equality operator. Used to implement (RM 8-5-4(8)).\n \n-      use Exp_Put_Image;\n-\n    --  Start of processing for Make_Predefined_Primitive_Specs\n \n+   begin\n+      Renamed_Eq := Empty;\n+\n+      Prim := First_Elmt (Primitive_Operations (Tag_Typ));\n+      while Present (Prim) loop\n+\n+         --  If a primitive is encountered that renames the predefined equality\n+         --  operator before reaching any explicit equality primitive, then we\n+         --  still need to create a predefined equality function, because calls\n+         --  to it can occur via the renaming. A new name is created for the\n+         --  equality to avoid conflicting with any user-defined equality.\n+         --  (Note that this doesn't account for renamings of equality nested\n+         --  within subpackages???)\n+\n+         if Is_Predefined_Eq_Renaming (Node (Prim)) then\n+            Has_Predef_Eq_Renaming := True;\n+            Eq_Name := New_External_Name (Chars (Node (Prim)), 'E');\n+\n+         --  User-defined equality\n+\n+         elsif Is_User_Defined_Equality (Node (Prim)) then\n+            if No (Alias (Node (Prim)))\n+              or else Nkind (Unit_Declaration_Node (Node (Prim))) =\n+                        N_Subprogram_Renaming_Declaration\n+            then\n+               Eq_Needed := False;\n+               exit;\n+\n+            --  If the parent is not an interface type and has an abstract\n+            --  equality function explicitly defined in the sources, then the\n+            --  inherited equality is abstract as well, and no body can be\n+            --  created for it.\n+\n+            elsif not Is_Interface (Etype (Tag_Typ))\n+              and then Present (Alias (Node (Prim)))\n+              and then Comes_From_Source (Alias (Node (Prim)))\n+              and then Is_Abstract_Subprogram (Alias (Node (Prim)))\n+            then\n+               Eq_Needed := False;\n+               exit;\n+\n+            --  If the type has an equality function corresponding with a\n+            --  primitive defined in an interface type, the inherited equality\n+            --  is abstract as well, and no body can be created for it.\n+\n+            elsif Present (Alias (Node (Prim)))\n+              and then Comes_From_Source (Ultimate_Alias (Node (Prim)))\n+              and then\n+                Is_Interface\n+                  (Find_Dispatching_Type (Ultimate_Alias (Node (Prim))))\n+            then\n+               Eq_Needed := False;\n+               exit;\n+            end if;\n+         end if;\n+\n+         Next_Elmt (Prim);\n+      end loop;\n+\n+      --  If a renaming of predefined equality was found but there was no\n+      --  user-defined equality (so Eq_Needed is still true), then set the name\n+      --  back to Name_Op_Eq. But in the case where a user-defined equality was\n+      --  located after such a renaming, then the predefined equality function\n+      --  is still needed, so Eq_Needed must be set back to True.\n+\n+      if Eq_Name /= Name_Op_Eq then\n+         if Eq_Needed then\n+            Eq_Name := Name_Op_Eq;\n+         else\n+            Eq_Needed := True;\n+         end if;\n+      end if;\n+\n+      if Eq_Needed then\n+         Eq_Spec := Predef_Spec_Or_Body (Loc,\n+           Tag_Typ  => Tag_Typ,\n+           Name     => Eq_Name,\n+           Profile  => New_List (\n+             Make_Parameter_Specification (Loc,\n+               Defining_Identifier =>\n+                 Make_Defining_Identifier (Loc, Name_X),\n+               Parameter_Type      => New_Occurrence_Of (Tag_Typ, Loc)),\n+\n+             Make_Parameter_Specification (Loc,\n+               Defining_Identifier =>\n+                 Make_Defining_Identifier (Loc, Name_Y),\n+               Parameter_Type      => New_Occurrence_Of (Tag_Typ, Loc))),\n+           Ret_Type => Standard_Boolean);\n+         Append_To (Predef_List, Eq_Spec);\n+\n+         if Has_Predef_Eq_Renaming then\n+            Renamed_Eq := Defining_Unit_Name (Specification (Eq_Spec));\n+\n+            Prim := First_Elmt (Primitive_Operations (Tag_Typ));\n+            while Present (Prim) loop\n+\n+               --  Any renamings of equality that appeared before an overriding\n+               --  equality must be updated to refer to the entity for the\n+               --  predefined equality, otherwise calls via the renaming would\n+               --  get incorrectly resolved to call the user-defined equality\n+               --  function.\n+\n+               if Is_Predefined_Eq_Renaming (Node (Prim)) then\n+                  Set_Alias (Node (Prim), Renamed_Eq);\n+\n+               --  Exit upon encountering a user-defined equality\n+\n+               elsif Chars (Node (Prim)) = Name_Op_Eq\n+                 and then No (Alias (Node (Prim)))\n+               then\n+                  exit;\n+               end if;\n+\n+               Next_Elmt (Prim);\n+            end loop;\n+         end if;\n+      end if;\n+   end Make_Predefined_Primitive_Eq_Spec;\n+\n+   -------------------------------------\n+   -- Make_Predefined_Primitive_Specs --\n+   -------------------------------------\n+\n+   procedure Make_Predefined_Primitive_Specs\n+     (Tag_Typ     : Entity_Id;\n+      Predef_List : out List_Id;\n+      Renamed_Eq  : out Entity_Id)\n+   is\n+      Loc : constant Source_Ptr := Sloc (Tag_Typ);\n+      Res : constant List_Id    := New_List;\n+\n+      use Exp_Put_Image;\n+\n    begin\n       Renamed_Eq := Empty;\n \n       --  Spec of _Size\n \n       Append_To (Res, Predef_Spec_Or_Body (Loc,\n-        Tag_Typ => Tag_Typ,\n-        Name    => Name_uSize,\n-        Profile => New_List (\n+        Tag_Typ  => Tag_Typ,\n+        Name     => Name_uSize,\n+        Profile  => New_List (\n           Make_Parameter_Specification (Loc,\n             Defining_Identifier => Make_Defining_Identifier (Loc, Name_X),\n             Parameter_Type      => New_Occurrence_Of (Tag_Typ, Loc))),\n@@ -10370,126 +10578,10 @@ package body Exp_Ch3 is\n \n       --  Spec of \"=\" is expanded if the type is not limited and if a user\n       --  defined \"=\" was not already declared for the non-full view of a\n-      --  private extension\n+      --  private extension.\n \n       if not Is_Limited_Type (Tag_Typ) then\n-         Eq_Needed := True;\n-         Prim := First_Elmt (Primitive_Operations (Tag_Typ));\n-         while Present (Prim) loop\n-\n-            --  If a primitive is encountered that renames the predefined\n-            --  equality operator before reaching any explicit equality\n-            --  primitive, then we still need to create a predefined equality\n-            --  function, because calls to it can occur via the renaming. A\n-            --  new name is created for the equality to avoid conflicting with\n-            --  any user-defined equality. (Note that this doesn't account for\n-            --  renamings of equality nested within subpackages???)\n-\n-            if Is_Predefined_Eq_Renaming (Node (Prim)) then\n-               Has_Predef_Eq_Renaming := True;\n-               Eq_Name := New_External_Name (Chars (Node (Prim)), 'E');\n-\n-            --  User-defined equality\n-\n-            elsif Is_User_Defined_Equality (Node (Prim)) then\n-               if No (Alias (Node (Prim)))\n-                 or else Nkind (Unit_Declaration_Node (Node (Prim))) =\n-                           N_Subprogram_Renaming_Declaration\n-               then\n-                  Eq_Needed := False;\n-                  exit;\n-\n-               --  If the parent is not an interface type and has an abstract\n-               --  equality function explicitly defined in the sources, then\n-               --  the inherited equality is abstract as well, and no body can\n-               --  be created for it.\n-\n-               elsif not Is_Interface (Etype (Tag_Typ))\n-                 and then Present (Alias (Node (Prim)))\n-                 and then Comes_From_Source (Alias (Node (Prim)))\n-                 and then Is_Abstract_Subprogram (Alias (Node (Prim)))\n-               then\n-                  Eq_Needed := False;\n-                  exit;\n-\n-               --  If the type has an equality function corresponding with\n-               --  a primitive defined in an interface type, the inherited\n-               --  equality is abstract as well, and no body can be created\n-               --  for it.\n-\n-               elsif Present (Alias (Node (Prim)))\n-                 and then Comes_From_Source (Ultimate_Alias (Node (Prim)))\n-                 and then\n-                   Is_Interface\n-                     (Find_Dispatching_Type (Ultimate_Alias (Node (Prim))))\n-               then\n-                  Eq_Needed := False;\n-                  exit;\n-               end if;\n-            end if;\n-\n-            Next_Elmt (Prim);\n-         end loop;\n-\n-         --  If a renaming of predefined equality was found but there was no\n-         --  user-defined equality (so Eq_Needed is still true), then set the\n-         --  name back to Name_Op_Eq. But in the case where a user-defined\n-         --  equality was located after such a renaming, then the predefined\n-         --  equality function is still needed, so Eq_Needed must be set back\n-         --  to True.\n-\n-         if Eq_Name /= Name_Op_Eq then\n-            if Eq_Needed then\n-               Eq_Name := Name_Op_Eq;\n-            else\n-               Eq_Needed := True;\n-            end if;\n-         end if;\n-\n-         if Eq_Needed then\n-            Eq_Spec := Predef_Spec_Or_Body (Loc,\n-              Tag_Typ => Tag_Typ,\n-              Name    => Eq_Name,\n-              Profile => New_List (\n-                Make_Parameter_Specification (Loc,\n-                  Defining_Identifier =>\n-                    Make_Defining_Identifier (Loc, Name_X),\n-                  Parameter_Type      => New_Occurrence_Of (Tag_Typ, Loc)),\n-\n-                Make_Parameter_Specification (Loc,\n-                  Defining_Identifier =>\n-                    Make_Defining_Identifier (Loc, Name_Y),\n-                  Parameter_Type      => New_Occurrence_Of (Tag_Typ, Loc))),\n-                Ret_Type => Standard_Boolean);\n-            Append_To (Res, Eq_Spec);\n-\n-            if Has_Predef_Eq_Renaming then\n-               Renamed_Eq := Defining_Unit_Name (Specification (Eq_Spec));\n-\n-               Prim := First_Elmt (Primitive_Operations (Tag_Typ));\n-               while Present (Prim) loop\n-\n-                  --  Any renamings of equality that appeared before an\n-                  --  overriding equality must be updated to refer to the\n-                  --  entity for the predefined equality, otherwise calls via\n-                  --  the renaming would get incorrectly resolved to call the\n-                  --  user-defined equality function.\n-\n-                  if Is_Predefined_Eq_Renaming (Node (Prim)) then\n-                     Set_Alias (Node (Prim), Renamed_Eq);\n-\n-                  --  Exit upon encountering a user-defined equality\n-\n-                  elsif Chars (Node (Prim)) = Name_Op_Eq\n-                    and then No (Alias (Node (Prim)))\n-                  then\n-                     exit;\n-                  end if;\n-\n-                  Next_Elmt (Prim);\n-               end loop;\n-            end if;\n-         end if;\n+         Make_Predefined_Primitive_Eq_Spec (Tag_Typ, Res, Renamed_Eq);\n \n          --  Spec for dispatching assignment\n \n@@ -10518,11 +10610,9 @@ package body Exp_Ch3 is\n       --    Disp_Requeue\n       --    Disp_Timed_Select\n \n-      --  Disable the generation of these bodies if No_Dispatching_Calls,\n-      --  Ravenscar or ZFP is active.\n+      --  Disable the generation of these bodies if Ravenscar or ZFP is active\n \n       if Ada_Version >= Ada_2005\n-        and then not Restriction_Active (No_Dispatching_Calls)\n         and then not Restriction_Active (No_Select_Statements)\n         and then RTE_Available (RE_Select_Specific_Data)\n       then\n@@ -10813,10 +10903,9 @@ package body Exp_Ch3 is\n    -----------------------------\n \n    function Predef_Stream_Attr_Spec\n-     (Loc      : Source_Ptr;\n-      Tag_Typ  : Entity_Id;\n-      Name     : TSS_Name_Type;\n-      For_Body : Boolean := False) return Node_Id\n+     (Loc     : Source_Ptr;\n+      Tag_Typ : Entity_Id;\n+      Name    : TSS_Name_Type) return Node_Id\n    is\n       Ret_Type : Entity_Id;\n \n@@ -10834,34 +10923,24 @@ package body Exp_Ch3 is\n            Tag_Typ  => Tag_Typ,\n            Profile  => Build_Stream_Attr_Profile (Loc, Tag_Typ, Name),\n            Ret_Type => Ret_Type,\n-           For_Body => For_Body);\n+           For_Body => False);\n    end Predef_Stream_Attr_Spec;\n \n-   ---------------------------------\n-   -- Predefined_Primitive_Bodies --\n-   ---------------------------------\n+   ----------------------------------\n+   -- Predefined_Primitive_Eq_Body --\n+   ----------------------------------\n \n-   function Predefined_Primitive_Bodies\n-     (Tag_Typ    : Entity_Id;\n-      Renamed_Eq : Entity_Id) return List_Id\n+   procedure Predefined_Primitive_Eq_Body\n+     (Tag_Typ     : Entity_Id;\n+      Predef_List : List_Id;\n+      Renamed_Eq  : Entity_Id)\n    is\n-      Loc       : constant Source_Ptr := Sloc (Tag_Typ);\n-      Res       : constant List_Id    := New_List;\n-      Adj_Call  : Node_Id;\n       Decl      : Node_Id;\n-      Fin_Call  : Node_Id;\n-      Prim      : Elmt_Id;\n       Eq_Needed : Boolean;\n       Eq_Name   : Name_Id;\n-      Ent       : Entity_Id;\n-\n-      pragma Warnings (Off, Ent);\n-\n-      use Exp_Put_Image;\n+      Prim      : Elmt_Id;\n \n    begin\n-      pragma Assert (not Is_Interface (Tag_Typ));\n-\n       --  See if we have a predefined \"=\" operator\n \n       if Present (Renamed_Eq) then\n@@ -10881,16 +10960,13 @@ package body Exp_Ch3 is\n          while Present (Prim) loop\n             if Chars (Node (Prim)) = Name_Op_Eq\n               and then not Is_Internal (Node (Prim))\n-              and then Present (First_Entity (Node (Prim)))\n \n               --  The predefined equality primitive must have exactly two\n-              --  formals whose type is this tagged type\n+              --  formals whose type is this tagged type.\n \n-              and then Present (Last_Entity (Node (Prim)))\n-              and then Next_Entity (First_Entity (Node (Prim)))\n-                         = Last_Entity (Node (Prim))\n-              and then Etype (First_Entity (Node (Prim))) = Tag_Typ\n-              and then Etype (Last_Entity (Node (Prim))) = Tag_Typ\n+              and then Number_Formals (Node (Prim)) = 2\n+              and then Etype (First_Formal (Node (Prim))) = Tag_Typ\n+              and then Etype (Last_Formal (Node (Prim))) = Tag_Typ\n             then\n                Eq_Needed := False;\n                Eq_Name := No_Name;\n@@ -10918,6 +10994,48 @@ package body Exp_Ch3 is\n          end loop;\n       end if;\n \n+      --  If equality is needed, we will have its name\n+\n+      pragma Assert (Eq_Needed = Present (Eq_Name));\n+\n+      --  Body for equality\n+\n+      if Eq_Needed then\n+         Decl := Make_Eq_Body (Tag_Typ, Eq_Name);\n+         Append_To (Predef_List, Decl);\n+      end if;\n+\n+      --  Body for inequality (if required)\n+\n+      Decl := Make_Neq_Body (Tag_Typ);\n+\n+      if Present (Decl) then\n+         Append_To (Predef_List, Decl);\n+      end if;\n+   end Predefined_Primitive_Eq_Body;\n+\n+   ---------------------------------\n+   -- Predefined_Primitive_Bodies --\n+   ---------------------------------\n+\n+   function Predefined_Primitive_Bodies\n+     (Tag_Typ    : Entity_Id;\n+      Renamed_Eq : Entity_Id) return List_Id\n+   is\n+      Loc      : constant Source_Ptr := Sloc (Tag_Typ);\n+      Res      : constant List_Id    := New_List;\n+      Adj_Call : Node_Id;\n+      Decl     : Node_Id;\n+      Fin_Call : Node_Id;\n+      Ent      : Entity_Id;\n+\n+      pragma Warnings (Off, Ent);\n+\n+      use Exp_Put_Image;\n+\n+   begin\n+      pragma Assert (not Is_Interface (Tag_Typ));\n+\n       --  Body of _Size\n \n       Decl := Predef_Spec_Or_Body (Loc,\n@@ -11002,8 +11120,7 @@ package body Exp_Ch3 is\n \n       --  The interface versions will have null bodies\n \n-      --  Disable the generation of these bodies if No_Dispatching_Calls,\n-      --  Ravenscar or ZFP is active.\n+      --  Disable the generation of these bodies if Ravenscar or ZFP is active\n \n       --  In VM targets we define these primitives in all root tagged types\n       --  that are not interface types. Done because in VM targets we don't\n@@ -11012,7 +11129,6 @@ package body Exp_Ch3 is\n       --  they may be ancestors of synchronized interface types).\n \n       if Ada_Version >= Ada_2005\n-        and then not Is_Interface (Tag_Typ)\n         and then\n           ((Is_Interface (Etype (Tag_Typ))\n              and then Is_Limited_Record (Etype (Tag_Typ)))\n@@ -11022,7 +11138,6 @@ package body Exp_Ch3 is\n            or else\n              (not Tagged_Type_Expansion\n                and then Tag_Typ = Root_Type (Tag_Typ)))\n-        and then not Restriction_Active (No_Dispatching_Calls)\n         and then not Restriction_Active (No_Select_Statements)\n         and then RTE_Available (RE_Select_Specific_Data)\n       then\n@@ -11034,22 +11149,10 @@ package body Exp_Ch3 is\n          Append_To (Res, Make_Disp_Timed_Select_Body        (Tag_Typ));\n       end if;\n \n-      if not Is_Limited_Type (Tag_Typ) and then not Is_Interface (Tag_Typ) then\n-\n-         --  Body for equality\n-\n-         if Eq_Needed then\n-            Decl := Make_Eq_Body (Tag_Typ, Eq_Name);\n-            Append_To (Res, Decl);\n-         end if;\n-\n-         --  Body for inequality (if required)\n-\n-         Decl := Make_Neq_Body (Tag_Typ);\n+      if not Is_Limited_Type (Tag_Typ) then\n+         --  Body for equality and inequality\n \n-         if Present (Decl) then\n-            Append_To (Res, Decl);\n-         end if;\n+         Predefined_Primitive_Eq_Body (Tag_Typ, Res, Renamed_Eq);\n \n          --  Body for dispatching assignment\n "}, {"sha": "8b2c3062a0afab13486bf75004f1b0ca4b0278c7", "filename": "gcc/ada/exp_ch3.ads", "status": "modified", "additions": 40, "deletions": 1, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -114,6 +114,9 @@ package Exp_Ch3 is\n    --  delete the node if it is present just for front end purpose and we don't\n    --  want Gigi to see the node. This function can't delete the node itself\n    --  since it would confuse any remaining processing of the freeze node.\n+   --\n+   --  Note: for GNATprove we have a minimal variant of this routine in\n+   --  Exp_SPARK.SPARK_Freeze_Type. They need to be kept in sync.\n \n    function Get_Simple_Init_Val\n      (Typ  : Entity_Id;\n@@ -155,6 +158,31 @@ package Exp_Ch3 is\n    --  initialized; if Variable_Comps is True then tags components located at\n    --  variable positions of Target are initialized.\n \n+   procedure Make_Controlling_Function_Wrappers\n+     (Tag_Typ   : Entity_Id;\n+      Decl_List : out List_Id;\n+      Body_List : out List_Id);\n+   --  Ada 2005 (AI-391): Makes specs and bodies for the wrapper functions\n+   --  associated with inherited functions with controlling results which\n+   --  are not overridden. The body of each wrapper function consists solely\n+   --  of a return statement whose expression is an extension aggregate\n+   --  invoking the inherited subprogram's parent subprogram and extended\n+   --  with a null association list.\n+\n+   procedure Make_Predefined_Primitive_Eq_Spec\n+     (Tag_Typ     : Entity_Id;\n+      Predef_List : List_Id;\n+      Renamed_Eq  : out Entity_Id);\n+   --  Creates spec for the predefined equality on a tagged type Tag_Typ, if\n+   --  required. If created, it will be appended to Predef_List.\n+   --\n+   --  The Parameter Renamed_Eq either returns the value Empty, or else\n+   --  the defining unit name for the predefined equality function in the\n+   --  case where the type has a primitive operation that is a renaming\n+   --  of predefined equality (but only if there is also an overriding\n+   --  user-defined equality function). The returned Renamed_Eq will be\n+   --  passed to the corresponding parameter of Predefined_Primitive_Bodies.\n+\n    function Make_Tag_Assignment (N : Node_Id) return Node_Id;\n    --  An object declaration that has an initialization for a tagged object\n    --  requires a separate reassignment of the tag of the given type, because\n@@ -163,4 +191,15 @@ package Exp_Ch3 is\n    --  clause the assignment is handled as part of the freezing of the object,\n    --  see Check_Address_Clause.\n \n+   procedure Predefined_Primitive_Eq_Body\n+     (Tag_Typ     : Entity_Id;\n+      Predef_List : List_Id;\n+      Renamed_Eq  : Entity_Id);\n+   --  Creates body for the predefined equality (and ineqality, if required) on\n+   --  a tagged type Tag_Typ. If created they will be appended to Predef_List.\n+   --\n+   --  The spec for the equality function has been created by\n+   --  Make_Predefined_Primitive_Eq_Spec; see there for description of\n+   --  the Renamed_Eq parameter.\n+\n end Exp_Ch3;"}, {"sha": "c31f5bb36ba3f7707ff54aceea9305b856672096", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 435, "deletions": 339, "changes": 774, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -23,6 +23,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Aspects;        use Aspects;\n with Atree;          use Atree;\n with Checks;         use Checks;\n with Debug;          use Debug;\n@@ -145,18 +146,14 @@ package body Exp_Ch4 is\n    --  where we allow comparison of \"out of range\" values.\n \n    function Expand_Composite_Equality\n-     (Nod    : Node_Id;\n-      Typ    : Entity_Id;\n-      Lhs    : Node_Id;\n-      Rhs    : Node_Id;\n-      Bodies : List_Id) return Node_Id;\n+     (Nod : Node_Id;\n+      Typ : Entity_Id;\n+      Lhs : Node_Id;\n+      Rhs : Node_Id) return Node_Id;\n    --  Local recursive function used to expand equality for nested composite\n-   --  types. Used by Expand_Record/Array_Equality, Bodies is a list on which\n-   --  to attach bodies of local functions that are created in the process. It\n-   --  is the responsibility of the caller to insert those bodies at the right\n-   --  place. Nod provides the Sloc value for generated code. Lhs and Rhs are\n-   --  the left and right sides for the comparison, and Typ is the type of the\n-   --  objects to compare.\n+   --  types. Used by Expand_Record/Array_Equality. Nod provides the Sloc value\n+   --  for generated code. Lhs and Rhs are the left and right sides for the\n+   --  comparison, and Typ is the type of the objects to compare.\n \n    procedure Expand_Concatenate (Cnode : Node_Id; Opnds : List_Id);\n    --  Routine to expand concatenation of a sequence of two or more operands\n@@ -767,8 +764,7 @@ package body Exp_Ch4 is\n             Cond :=\n               Make_Op_Gt (Loc,\n                 Left_Opnd  => Cond,\n-                Right_Opnd =>\n-                  Make_Integer_Literal (Loc, Type_Access_Level (PtrT)));\n+                Right_Opnd => Accessibility_Level (N, Dynamic_Level));\n \n             --  Due to the complexity and side effects of the check, utilize an\n             --  if statement instead of the regular Program_Error circuitry.\n@@ -1545,14 +1541,14 @@ package body Exp_Ch4 is\n    --          and then\n    --        (B'length (1) = 0 or else B'length (2) = 0)\n    --     then\n-   --        return True;    -- RM 4.5.2(22)\n+   --        return true;    -- RM 4.5.2(22)\n    --     end if;\n \n    --     if A'length (1) /= B'length (1)\n    --               or else\n    --           A'length (2) /= B'length (2)\n    --     then\n-   --        return False;   -- RM 4.5.2(23)\n+   --        return false;   -- RM 4.5.2(23)\n    --     end if;\n \n    --     declare\n@@ -1625,8 +1621,8 @@ package body Exp_Ch4 is\n       function Arr_Attr\n         (Arr : Entity_Id;\n          Nam : Name_Id;\n-         Num : Int) return Node_Id;\n-      --  This builds the attribute reference Arr'Nam (Expr)\n+         Dim : Pos) return Node_Id;\n+      --  This builds the attribute reference Arr'Nam (Dim)\n \n       function Component_Equality (Typ : Entity_Id) return Node_Id;\n       --  Create one statement to compare corresponding components, designated\n@@ -1637,11 +1633,12 @@ package body Exp_Ch4 is\n       --  for that argument in the corresponding function formal\n \n       function Handle_One_Dimension\n-        (N     : Int;\n+        (N     : Pos;\n          Index : Node_Id) return Node_Id;\n       --  This procedure returns the following code\n       --\n       --    declare\n+      --       An : Index_T := A'First (N);\n       --       Bn : Index_T := B'First (N);\n       --    begin\n       --       loop\n@@ -1691,14 +1688,14 @@ package body Exp_Ch4 is\n       function Arr_Attr\n         (Arr : Entity_Id;\n          Nam : Name_Id;\n-         Num : Int) return Node_Id\n+         Dim : Pos) return Node_Id\n       is\n       begin\n          return\n            Make_Attribute_Reference (Loc,\n              Attribute_Name => Nam,\n              Prefix         => New_Occurrence_Of (Arr, Loc),\n-             Expressions    => New_List (Make_Integer_Literal (Loc, Num)));\n+             Expressions    => New_List (Make_Integer_Literal (Loc, Dim)));\n       end Arr_Attr;\n \n       ------------------------\n@@ -1722,8 +1719,7 @@ package body Exp_Ch4 is\n              Prefix      => Make_Identifier (Loc, Chars (B)),\n              Expressions => Index_List2);\n \n-         Test := Expand_Composite_Equality\n-                   (Nod, Component_Type (Typ), L, R, Decls);\n+         Test := Expand_Composite_Equality (Nod, Component_Type (Typ), L, R);\n \n          --  If some (sub)component is an unchecked_union, the whole operation\n          --  will raise program error.\n@@ -1786,7 +1782,7 @@ package body Exp_Ch4 is\n       ---------------------------\n \n       function Handle_One_Dimension\n-        (N     : Int;\n+        (N     : Pos;\n          Index : Node_Id) return Node_Id\n       is\n          Need_Separate_Indexes : constant Boolean :=\n@@ -1902,41 +1898,20 @@ package body Exp_Ch4 is\n       -----------------------\n \n       function Test_Empty_Arrays return Node_Id is\n-         Alist : Node_Id;\n-         Blist : Node_Id;\n-\n-         Atest : Node_Id;\n-         Btest : Node_Id;\n+         Alist : Node_Id := Empty;\n+         Blist : Node_Id := Empty;\n \n       begin\n-         Alist := Empty;\n-         Blist := Empty;\n          for J in 1 .. Number_Dimensions (Ltyp) loop\n-            Atest :=\n+            Evolve_Or_Else (Alist,\n               Make_Op_Eq (Loc,\n                 Left_Opnd  => Arr_Attr (A, Name_Length, J),\n-                Right_Opnd => Make_Integer_Literal (Loc, 0));\n+                Right_Opnd => Make_Integer_Literal (Loc, Uint_0)));\n \n-            Btest :=\n+            Evolve_Or_Else (Blist,\n               Make_Op_Eq (Loc,\n                 Left_Opnd  => Arr_Attr (B, Name_Length, J),\n-                Right_Opnd => Make_Integer_Literal (Loc, 0));\n-\n-            if No (Alist) then\n-               Alist := Atest;\n-               Blist := Btest;\n-\n-            else\n-               Alist :=\n-                 Make_Or_Else (Loc,\n-                   Left_Opnd  => Relocate_Node (Alist),\n-                   Right_Opnd => Atest);\n-\n-               Blist :=\n-                 Make_Or_Else (Loc,\n-                   Left_Opnd  => Relocate_Node (Blist),\n-                   Right_Opnd => Btest);\n-            end if;\n+                Right_Opnd => Make_Integer_Literal (Loc, Uint_0)));\n          end loop;\n \n          return\n@@ -1950,25 +1925,14 @@ package body Exp_Ch4 is\n       -----------------------------\n \n       function Test_Lengths_Correspond return Node_Id is\n-         Result : Node_Id;\n-         Rtest  : Node_Id;\n+         Result : Node_Id := Empty;\n \n       begin\n-         Result := Empty;\n          for J in 1 .. Number_Dimensions (Ltyp) loop\n-            Rtest :=\n+            Evolve_Or_Else (Result,\n               Make_Op_Ne (Loc,\n                 Left_Opnd  => Arr_Attr (A, Name_Length, J),\n-                Right_Opnd => Arr_Attr (B, Name_Length, J));\n-\n-            if No (Result) then\n-               Result := Rtest;\n-            else\n-               Result :=\n-                 Make_Or_Else (Loc,\n-                   Left_Opnd  => Relocate_Node (Result),\n-                   Right_Opnd => Rtest);\n-            end if;\n+                Right_Opnd => Arr_Attr (B, Name_Length, J)));\n          end loop;\n \n          return Result;\n@@ -2020,45 +1984,43 @@ package body Exp_Ch4 is\n         and then Ltyp = Rtyp\n         and then Is_Constrained (Ltyp)\n         and then Number_Dimensions (Ltyp) = 1\n-        and then Nkind (First_Idx) = N_Range\n-        and then Compile_Time_Known_Value (Low_Bound (First_Idx))\n-        and then Compile_Time_Known_Value (High_Bound (First_Idx))\n-        and then Expr_Value (High_Bound (First_Idx)) =\n-                                         Expr_Value (Low_Bound (First_Idx)) + 1\n+        and then Compile_Time_Known_Bounds (Ltyp)\n+        and then Expr_Value (Type_High_Bound (Etype (First_Idx))) =\n+                   Expr_Value (Type_Low_Bound (Etype (First_Idx))) + 1\n       then\n          declare\n             Ctyp         : constant Entity_Id := Component_Type (Ltyp);\n+            Low_B        : constant Node_Id :=\n+              Type_Low_Bound (Etype (First_Idx));\n+            High_B       : constant Node_Id :=\n+              Type_High_Bound (Etype (First_Idx));\n             L, R         : Node_Id;\n             TestL, TestH : Node_Id;\n \n          begin\n             L :=\n               Make_Indexed_Component (Loc,\n                 Prefix      => New_Copy_Tree (New_Lhs),\n-                Expressions =>\n-                  New_List (New_Copy_Tree (Low_Bound (First_Idx))));\n+                Expressions => New_List (New_Copy_Tree (Low_B)));\n \n             R :=\n               Make_Indexed_Component (Loc,\n                 Prefix      => New_Copy_Tree (New_Rhs),\n-                Expressions =>\n-                  New_List (New_Copy_Tree (Low_Bound (First_Idx))));\n+                Expressions => New_List (New_Copy_Tree (Low_B)));\n \n-            TestL := Expand_Composite_Equality (Nod, Ctyp, L, R, Bodies);\n+            TestL := Expand_Composite_Equality (Nod, Ctyp, L, R);\n \n             L :=\n               Make_Indexed_Component (Loc,\n                 Prefix      => New_Lhs,\n-                Expressions =>\n-                  New_List (New_Copy_Tree (High_Bound (First_Idx))));\n+                Expressions => New_List (New_Copy_Tree (High_B)));\n \n             R :=\n               Make_Indexed_Component (Loc,\n                 Prefix      => New_Rhs,\n-                Expressions =>\n-                  New_List (New_Copy_Tree (High_Bound (First_Idx))));\n+                Expressions => New_List (New_Copy_Tree (High_B)));\n \n-            TestH := Expand_Composite_Equality (Nod, Ctyp, L, R, Bodies);\n+            TestH := Expand_Composite_Equality (Nod, Ctyp, L, R);\n \n             return\n               Make_And_Then (Loc, Left_Opnd => TestL, Right_Opnd => TestH);\n@@ -2294,7 +2256,7 @@ package body Exp_Ch4 is\n       --  We can only do this if we in fact have full range information (which\n       --  won't be the case if either operand is bignum at this stage).\n \n-      if Llo /= No_Uint and then Rlo /= No_Uint then\n+      if Present (Llo) and then Present (Rlo) then\n          case N_Op_Compare (Nkind (N)) is\n             when N_Op_Eq =>\n                if Llo = Lhi and then Rlo = Rhi and then Llo = Rlo then\n@@ -2471,18 +2433,15 @@ package body Exp_Ch4 is\n    --  case because it is not possible to respect normal Ada visibility rules.\n \n    function Expand_Composite_Equality\n-     (Nod    : Node_Id;\n-      Typ    : Entity_Id;\n-      Lhs    : Node_Id;\n-      Rhs    : Node_Id;\n-      Bodies : List_Id) return Node_Id\n+     (Nod : Node_Id;\n+      Typ : Entity_Id;\n+      Lhs : Node_Id;\n+      Rhs : Node_Id) return Node_Id\n    is\n       Loc       : constant Source_Ptr := Sloc (Nod);\n       Full_Type : Entity_Id;\n       Eq_Op     : Entity_Id;\n \n-   --  Start of processing for Expand_Composite_Equality\n-\n    begin\n       if Is_Private_Type (Typ) then\n          Full_Type := Underlying_Type (Typ);\n@@ -2509,81 +2468,15 @@ package body Exp_Ch4 is\n          Full_Type := Underlying_Type (Full_Type);\n       end if;\n \n-      --  Case of array types\n-\n-      if Is_Array_Type (Full_Type) then\n-\n-         --  If the operand is an elementary type other than a floating-point\n-         --  type, then we can simply use the built-in block bitwise equality,\n-         --  since the predefined equality operators always apply and bitwise\n-         --  equality is fine for all these cases.\n-\n-         if Is_Elementary_Type (Component_Type (Full_Type))\n-           and then not Is_Floating_Point_Type (Component_Type (Full_Type))\n-         then\n-            return Make_Op_Eq (Loc, Left_Opnd => Lhs, Right_Opnd => Rhs);\n-\n-         --  For composite component types, and floating-point types, use the\n-         --  expansion. This deals with tagged component types (where we use\n-         --  the applicable equality routine) and floating-point (where we\n-         --  need to worry about negative zeroes), and also the case of any\n-         --  composite type recursively containing such fields.\n-\n-         else\n-            declare\n-               Comp_Typ : Entity_Id;\n-               Hi       : Node_Id;\n-               Indx     : Node_Id;\n-               Ityp     : Entity_Id;\n-               Lo       : Node_Id;\n-\n-            begin\n-               --  Do the comparison in the type (or its full view) and not in\n-               --  its unconstrained base type, because the latter operation is\n-               --  more complex and would also require an unchecked conversion.\n-\n-               if Is_Private_Type (Typ) then\n-                  Comp_Typ := Underlying_Type (Typ);\n-               else\n-                  Comp_Typ := Typ;\n-               end if;\n-\n-               --  Except for the case where the bounds of the type depend on a\n-               --  discriminant, or else we would run into scoping issues.\n-\n-               Indx := First_Index (Comp_Typ);\n-               while Present (Indx) loop\n-                  Ityp := Etype (Indx);\n-\n-                  Lo := Type_Low_Bound (Ityp);\n-                  Hi := Type_High_Bound (Ityp);\n-\n-                  if (Nkind (Lo) = N_Identifier\n-                       and then Ekind (Entity (Lo)) = E_Discriminant)\n-                    or else\n-                     (Nkind (Hi) = N_Identifier\n-                       and then Ekind (Entity (Hi)) = E_Discriminant)\n-                  then\n-                     Comp_Typ := Full_Type;\n-                     exit;\n-                  end if;\n-\n-                  Next_Index (Indx);\n-               end loop;\n-\n-               return Expand_Array_Equality (Nod, Lhs, Rhs, Bodies, Comp_Typ);\n-            end;\n-         end if;\n-\n       --  Case of tagged record types\n \n-      elsif Is_Tagged_Type (Full_Type) then\n+      if Is_Tagged_Type (Full_Type) then\n          Eq_Op := Find_Primitive_Eq (Typ);\n          pragma Assert (Present (Eq_Op));\n \n          return\n            Make_Function_Call (Loc,\n-             Name => New_Occurrence_Of (Eq_Op, Loc),\n+             Name                   => New_Occurrence_Of (Eq_Op, Loc),\n              Parameter_Associations =>\n                New_List\n                  (Unchecked_Convert_To (Etype (First_Formal (Eq_Op)), Lhs),\n@@ -2606,7 +2499,7 @@ package body Exp_Ch4 is\n                begin\n                   return\n                     Make_Function_Call (Loc,\n-                      Name                  => New_Occurrence_Of (Eq_Op, Loc),\n+                      Name                   => New_Occurrence_Of (Eq_Op, Loc),\n                       Parameter_Associations => New_List (\n                         OK_Convert_To (T, Lhs),\n                         OK_Convert_To (T, Rhs)));\n@@ -2765,10 +2658,10 @@ package body Exp_Ch4 is\n             end;\n \n          else\n-            return Expand_Record_Equality (Nod, Full_Type, Lhs, Rhs, Bodies);\n+            return Expand_Record_Equality (Nod, Full_Type, Lhs, Rhs);\n          end if;\n \n-      --  Non-composite types (always use predefined equality)\n+      --  Case of non-record types (always use predefined equality)\n \n       else\n          return Make_Op_Eq (Loc, Left_Opnd => Lhs, Right_Opnd => Rhs);\n@@ -2802,9 +2695,6 @@ package body Exp_Ch4 is\n       --  lengths of operands. The choice of this type is a little subtle and\n       --  is discussed in a separate section at the start of the body code.\n \n-      Concatenation_Error : exception;\n-      --  Raised if concatenation is sure to raise a CE\n-\n       Result_May_Be_Null : Boolean := True;\n       --  Reset to False if at least one operand is encountered which is known\n       --  at compile time to be non-null. Used for handling the special case\n@@ -3567,7 +3457,16 @@ package body Exp_Ch4 is\n       --  Catch the static out of range case now\n \n       if Raises_Constraint_Error (High_Bound) then\n-         raise Concatenation_Error;\n+         --  Kill warning generated for the declaration of the static out of\n+         --  range high bound, and instead generate a Constraint_Error with\n+         --  an appropriate specific message.\n+\n+         Kill_Dead_Code (Declaration_Node (Entity (High_Bound)));\n+         Apply_Compile_Time_Constraint_Error\n+           (N      => Cnode,\n+            Msg    => \"concatenation result upper bound out of range??\",\n+            Reason => CE_Range_Check_Failed);\n+         return;\n       end if;\n \n       --  Now we will generate the assignments to do the actual concatenation\n@@ -3736,19 +3635,6 @@ package body Exp_Ch4 is\n       pragma Assert (Present (Result));\n       Rewrite (Cnode, Result);\n       Analyze_And_Resolve (Cnode, Atyp);\n-\n-   exception\n-      when Concatenation_Error =>\n-\n-         --  Kill warning generated for the declaration of the static out of\n-         --  range high bound, and instead generate a Constraint_Error with\n-         --  an appropriate specific message.\n-\n-         Kill_Dead_Code (Declaration_Node (Entity (High_Bound)));\n-         Apply_Compile_Time_Constraint_Error\n-           (N      => Cnode,\n-            Msg    => \"concatenation result upper bound out of range??\",\n-            Reason => CE_Range_Check_Failed);\n    end Expand_Concatenate;\n \n    ---------------------------------------------------\n@@ -4459,116 +4345,110 @@ package body Exp_Ch4 is\n       ------------------------------\n \n       function Size_In_Storage_Elements (E : Entity_Id) return Node_Id is\n+         Idx : Node_Id := First_Index (E);\n+         Len : Node_Id;\n+         Res : Node_Id := Empty;\n+\n       begin\n          --  Logically this just returns E'Max_Size_In_Storage_Elements.\n-         --  However, the reason for the existence of this function is\n-         --  to construct a test for sizes too large, which means near the\n-         --  32-bit limit on a 32-bit machine, and precisely the trouble\n-         --  is that we get overflows when sizes are greater than 2**31.\n+         --  However, the reason for the existence of this function is to\n+         --  construct a test for sizes too large, which means near the 32-bit\n+         --  limit on a 32-bit machine, and precisely the trouble is that we\n+         --  get overflows when sizes are greater than 2**31.\n \n          --  So what we end up doing for array types is to use the expression:\n \n          --    number-of-elements * component_type'Max_Size_In_Storage_Elements\n \n          --  which avoids this problem. All this is a bit bogus, but it does\n-         --  mean we catch common cases of trying to allocate arrays that\n-         --  are too large, and which in the absence of a check results in\n+         --  mean we catch common cases of trying to allocate arrays that are\n+         --  too large, and which in the absence of a check results in\n          --  undetected chaos ???\n \n-         declare\n-            Idx : Node_Id := First_Index (E);\n-            Len : Node_Id;\n-            Res : Node_Id := Empty;\n+         for J in 1 .. Number_Dimensions (E) loop\n \n-         begin\n-            for J in 1 .. Number_Dimensions (E) loop\n+            if not Is_Modular_Integer_Type (Etype (Idx)) then\n+               Len :=\n+                 Make_Attribute_Reference (Loc,\n+                   Prefix         => New_Occurrence_Of (E, Loc),\n+                   Attribute_Name => Name_Length,\n+                   Expressions    => New_List (Make_Integer_Literal (Loc, J)));\n \n-               if not Is_Modular_Integer_Type (Etype (Idx)) then\n-                  Len :=\n-                    Make_Attribute_Reference (Loc,\n-                      Prefix         => New_Occurrence_Of (E, Loc),\n-                      Attribute_Name => Name_Length,\n-                      Expressions    => New_List\n-                                          (Make_Integer_Literal (Loc, J)));\n+            --  For indexes that are modular types we cannot generate code to\n+            --  compute 'Length since for large arrays 'Last -'First + 1 causes\n+            --  overflow; therefore we compute 'Last - 'First (which is not the\n+            --  exact number of components but it is valid for the purpose of\n+            --  this runtime check on 32-bit targets).\n \n-               --  For indexes that are modular types we cannot generate code\n-               --  to compute 'Length since for large arrays 'Last -'First + 1\n-               --  causes overflow; therefore we compute 'Last - 'First (which\n-               --  is not the exact number of components but it is valid for\n-               --  the purpose of this runtime check on 32-bit targets).\n+            else\n+               declare\n+                  Len_Minus_1_Expr : Node_Id;\n+                  Test_Gt          : Node_Id;\n \n-               else\n-                  declare\n-                     Len_Minus_1_Expr : Node_Id;\n-                     Test_Gt          : Node_Id;\n+               begin\n+                  Test_Gt :=\n+                    Make_Op_Gt (Loc,\n+                      Make_Attribute_Reference (Loc,\n+                        Prefix         => New_Occurrence_Of (E, Loc),\n+                        Attribute_Name => Name_Last,\n+                        Expressions    =>\n+                          New_List (Make_Integer_Literal (Loc, J))),\n+                      Make_Attribute_Reference (Loc,\n+                        Prefix         => New_Occurrence_Of (E, Loc),\n+                        Attribute_Name => Name_First,\n+                        Expressions    =>\n+                          New_List (Make_Integer_Literal (Loc, J))));\n \n-                  begin\n-                     Test_Gt :=\n-                       Make_Op_Gt (Loc,\n-                         Make_Attribute_Reference (Loc,\n-                           Prefix         => New_Occurrence_Of (E, Loc),\n-                           Attribute_Name => Name_Last,\n-                           Expressions    =>\n-                             New_List (Make_Integer_Literal (Loc, J))),\n-                         Make_Attribute_Reference (Loc,\n-                           Prefix         => New_Occurrence_Of (E, Loc),\n-                           Attribute_Name => Name_First,\n-                           Expressions    =>\n-                             New_List (Make_Integer_Literal (Loc, J))));\n-\n-                     Len_Minus_1_Expr :=\n-                       Convert_To (Standard_Unsigned,\n-                         Make_Op_Subtract (Loc,\n-                           Make_Attribute_Reference (Loc,\n-                             Prefix => New_Occurrence_Of (E, Loc),\n-                             Attribute_Name => Name_Last,\n-                             Expressions =>\n-                               New_List\n-                                 (Make_Integer_Literal (Loc, J))),\n-                           Make_Attribute_Reference (Loc,\n-                             Prefix => New_Occurrence_Of (E, Loc),\n-                             Attribute_Name => Name_First,\n-                             Expressions =>\n-                               New_List\n-                                 (Make_Integer_Literal (Loc, J)))));\n-\n-                     --  Handle superflat arrays, i.e. arrays with such bounds\n-                     --  as 4 .. 2, to ensure that the result is correct.\n-\n-                     --  Generate:\n-                     --    (if X'Last > X'First then X'Last - X'First else 0)\n-\n-                     Len :=\n-                       Make_If_Expression (Loc,\n-                         Expressions => New_List (\n-                           Test_Gt,\n-                           Len_Minus_1_Expr,\n-                           Make_Integer_Literal (Loc, Uint_0)));\n-                  end;\n-               end if;\n+                  Len_Minus_1_Expr :=\n+                    Convert_To (Standard_Unsigned,\n+                      Make_Op_Subtract (Loc,\n+                        Make_Attribute_Reference (Loc,\n+                          Prefix => New_Occurrence_Of (E, Loc),\n+                          Attribute_Name => Name_Last,\n+                          Expressions =>\n+                            New_List (Make_Integer_Literal (Loc, J))),\n+                        Make_Attribute_Reference (Loc,\n+                          Prefix => New_Occurrence_Of (E, Loc),\n+                          Attribute_Name => Name_First,\n+                          Expressions =>\n+                            New_List (Make_Integer_Literal (Loc, J)))));\n \n-               if J = 1 then\n-                  Res := Len;\n+                  --  Handle superflat arrays, i.e. arrays with such bounds as\n+                  --  4 .. 2, to ensure that the result is correct.\n \n-               else\n-                  pragma Assert (Present (Res));\n-                  Res :=\n-                    Make_Op_Multiply (Loc,\n-                      Left_Opnd  => Res,\n-                      Right_Opnd => Len);\n-               end if;\n+                  --  Generate:\n+                  --    (if X'Last > X'First then X'Last - X'First else 0)\n \n-               Next_Index (Idx);\n-            end loop;\n+                  Len :=\n+                    Make_If_Expression (Loc,\n+                      Expressions => New_List (\n+                        Test_Gt,\n+                        Len_Minus_1_Expr,\n+                        Make_Integer_Literal (Loc, Uint_0)));\n+               end;\n+            end if;\n \n-            return\n-              Make_Op_Multiply (Loc,\n-                Left_Opnd  => Len,\n-                Right_Opnd =>\n-                  Make_Attribute_Reference (Loc,\n-                    Prefix => New_Occurrence_Of (Component_Type (E), Loc),\n-                    Attribute_Name => Name_Max_Size_In_Storage_Elements));\n-         end;\n+            if J = 1 then\n+               Res := Len;\n+\n+            else\n+               pragma Assert (Present (Res));\n+               Res :=\n+                 Make_Op_Multiply (Loc,\n+                   Left_Opnd  => Res,\n+                   Right_Opnd => Len);\n+            end if;\n+\n+            Next_Index (Idx);\n+         end loop;\n+\n+         return\n+           Make_Op_Multiply (Loc,\n+             Left_Opnd  => Len,\n+             Right_Opnd =>\n+               Make_Attribute_Reference (Loc,\n+                 Prefix => New_Occurrence_Of (Component_Type (E), Loc),\n+                 Attribute_Name => Name_Max_Size_In_Storage_Elements));\n       end Size_In_Storage_Elements;\n \n       --  Local variables\n@@ -4592,7 +4472,7 @@ package body Exp_Ch4 is\n                        and then Nkind (Associated_Node_For_Itype (PtrT)) =\n                                   N_Object_Declaration)\n       then\n-         Error_Msg_N (\"??use of an anonymous access type allocator\", N);\n+         Error_Msg_N (\"?_a?use of an anonymous access type allocator\", N);\n       end if;\n \n       --  RM E.2.2(17). We enforce that the expected type of an allocator\n@@ -4704,7 +4584,7 @@ package body Exp_Ch4 is\n \n             else\n                Set_Procedure_To_Call (N,\n-                 Find_Prim_Op (Etype (Pool), Name_Allocate));\n+                 Find_Storage_Op (Etype (Pool), Name_Allocate));\n             end if;\n          end if;\n       end if;\n@@ -5817,7 +5697,7 @@ package body Exp_Ch4 is\n       --  Do not evaluate the expression when there are no actions because the\n       --  expression_with_actions node will be replaced by the expression.\n \n-      elsif No (Acts) or else Is_Empty_List (Acts) then\n+      elsif Is_Empty_List (Acts) then\n          null;\n \n       --  Force the evaluation of the expression by capturing its value in a\n@@ -6254,6 +6134,46 @@ package body Exp_Ch4 is\n             return;\n          end if;\n \n+      --  For the sake of GNATcoverage, generate an intermediate temporary in\n+      --  the case where the if-expression is a condition in an outer decision,\n+      --  in order to make sure that no branch is shared between the decisions.\n+\n+      elsif Opt.Suppress_Control_Flow_Optimizations\n+        and then Nkind (Original_Node (Parent (N))) in N_Case_Expression\n+                                                     | N_Case_Statement\n+                                                     | N_If_Expression\n+                                                     | N_If_Statement\n+                                                     | N_Goto_When_Statement\n+                                                     | N_Loop_Statement\n+                                                     | N_Return_When_Statement\n+                                                     | N_Short_Circuit\n+      then\n+         declare\n+            Cnn  : constant Entity_Id := Make_Temporary (Loc, 'C');\n+            Acts : List_Id;\n+\n+         begin\n+            --  Generate:\n+            --    do\n+            --       Cnn : constant Typ := N;\n+            --    in Cnn end\n+\n+            Acts := New_List (\n+              Make_Object_Declaration (Loc,\n+                Defining_Identifier => Cnn,\n+                Constant_Present    => True,\n+                Object_Definition   => New_Occurrence_Of (Typ, Loc),\n+                Expression          => Relocate_Node (N)));\n+\n+            Rewrite (N,\n+              Make_Expression_With_Actions (Loc,\n+                Expression => New_Occurrence_Of (Cnn, Loc),\n+                Actions    => Acts));\n+\n+            Analyze_And_Resolve (N, Typ);\n+            return;\n+         end;\n+\n       --  If no actions then no expansion needed, gigi will handle it using the\n       --  same approach as a C conditional expression.\n \n@@ -6272,18 +6192,10 @@ package body Exp_Ch4 is\n          Set_Sloc (Parent (N), Loc);\n       end if;\n \n-      --  Make sure Then_Actions and Else_Actions are appropriately moved\n-      --  to the new if statement.\n+      --  Move Then_Actions and Else_Actions, if any, to the new if statement\n \n-      if Present (Then_Actions (N)) then\n-         Insert_List_Before\n-           (First (Then_Statements (New_If)), Then_Actions (N));\n-      end if;\n-\n-      if Present (Else_Actions (N)) then\n-         Insert_List_Before\n-           (First (Else_Statements (New_If)), Else_Actions (N));\n-      end if;\n+      Insert_List_Before (First (Then_Statements (New_If)), Then_Actions (N));\n+      Insert_List_Before (First (Else_Statements (New_If)), Else_Actions (N));\n \n       Insert_Action (N, Decl);\n       Insert_Action (N, New_If);\n@@ -6871,7 +6783,6 @@ package body Exp_Ch4 is\n             if Ada_Version >= Ada_2012\n               and then Is_Acc\n               and then Ekind (Ltyp) = E_Anonymous_Access_Type\n-              and then not No_Dynamic_Accessibility_Checks_Enabled (Lop)\n             then\n                declare\n                   Expr_Entity : Entity_Id := Empty;\n@@ -6888,11 +6799,26 @@ package body Exp_Ch4 is\n                      end if;\n                   end if;\n \n+                  --  When restriction No_Dynamic_Accessibility_Checks is in\n+                  --  effect, expand the membership test to a static value\n+                  --  since we cannot rely on dynamic levels.\n+\n+                  if No_Dynamic_Accessibility_Checks_Enabled (Lop) then\n+                     if Static_Accessibility_Level\n+                          (Lop, Object_Decl_Level)\n+                            > Type_Access_Level (Rtyp)\n+                     then\n+                        Rewrite (N, New_Occurrence_Of (Standard_False, Loc));\n+                     else\n+                        Rewrite (N, New_Occurrence_Of (Standard_True, Loc));\n+                     end if;\n+                     Analyze_And_Resolve (N, Restyp);\n+\n                   --  If a conversion of the anonymous access value to the\n                   --  tested type would be illegal, then the result is False.\n \n-                  if not Valid_Conversion\n-                           (Lop, Rtyp, Lop, Report_Errs => False)\n+                  elsif not Valid_Conversion\n+                              (Lop, Rtyp, Lop, Report_Errs => False)\n                   then\n                      Rewrite (N, New_Occurrence_Of (Standard_False, Loc));\n                      Analyze_And_Resolve (N, Restyp);\n@@ -7048,11 +6974,123 @@ package body Exp_Ch4 is\n    --------------------------------\n \n    procedure Expand_N_Indexed_Component (N : Node_Id) is\n+\n+      Wild_Reads_May_Have_Bad_Side_Effects : Boolean\n+        renames Validity_Check_Subscripts;\n+      --  This Boolean needs to be True if reading from a bad address can\n+      --  have a bad side effect (e.g., a segmentation fault that is not\n+      --  transformed into a Storage_Error exception, or interactions with\n+      --  memory-mapped I/O) that needs to be prevented. This refers to the\n+      --  act of reading itself, not to any damage that might be caused later\n+      --  by making use of whatever value was read. We assume here that\n+      --  Validity_Check_Subscripts meets this requirement, but introduce\n+      --  this declaration in order to document this assumption.\n+\n+      function Is_Renamed_Variable_Name (N : Node_Id) return Boolean;\n+      --  Returns True if the given name occurs as part of the renaming\n+      --  of a variable. In this case, the indexing operation should be\n+      --  treated as a write, rather than a read, with respect to validity\n+      --  checking. This is because the renamed variable can later be\n+      --  written to.\n+\n+      function Type_Requires_Subscript_Validity_Checks_For_Reads\n+        (Typ : Entity_Id) return Boolean;\n+      --  If Wild_Reads_May_Have_Bad_Side_Effects is False and we are indexing\n+      --  into an array of characters in order to read an element, it is ok\n+      --  if an invalid index value goes undetected. But if it is an array of\n+      --  pointers or an array of tasks, the consequences of such a read are\n+      --  potentially more severe and so we want to detect an invalid index\n+      --  value. This function captures that distinction; this is intended to\n+      --  be consistent with the \"but does not by itself lead to erroneous\n+      --  ... execution\" rule of RM 13.9.1(11).\n+\n+      ------------------------------\n+      -- Is_Renamed_Variable_Name --\n+      ------------------------------\n+\n+      function Is_Renamed_Variable_Name (N : Node_Id) return Boolean is\n+         Rover : Node_Id := N;\n+      begin\n+         if Is_Variable (N) then\n+            loop\n+               declare\n+                  Rover_Parent : constant Node_Id := Parent (Rover);\n+               begin\n+                  case Nkind (Rover_Parent) is\n+                     when N_Object_Renaming_Declaration =>\n+                        return Rover = Name (Rover_Parent);\n+\n+                     when N_Indexed_Component\n+                        | N_Slice\n+                        | N_Selected_Component\n+                     =>\n+                        exit when Rover /= Prefix (Rover_Parent);\n+                        Rover := Rover_Parent;\n+\n+                     --  No need to check for qualified expressions or type\n+                     --  conversions here, mostly because of the Is_Variable\n+                     --  test. It is possible to have a view conversion for\n+                     --  which Is_Variable yields True and which occurs as\n+                     --  part of an object renaming, but only if the type is\n+                     --  tagged; in that case this function will not be called.\n+\n+                     when others =>\n+                        exit;\n+                  end case;\n+               end;\n+            end loop;\n+         end if;\n+         return False;\n+      end Is_Renamed_Variable_Name;\n+\n+      -------------------------------------------------------\n+      -- Type_Requires_Subscript_Validity_Checks_For_Reads --\n+      -------------------------------------------------------\n+\n+      function Type_Requires_Subscript_Validity_Checks_For_Reads\n+        (Typ : Entity_Id) return Boolean\n+      is\n+         --  a shorter name for recursive calls\n+         function Needs_Check (Typ : Entity_Id) return Boolean renames\n+           Type_Requires_Subscript_Validity_Checks_For_Reads;\n+      begin\n+         if Is_Access_Type (Typ)\n+           or else Is_Tagged_Type (Typ)\n+           or else Is_Concurrent_Type (Typ)\n+           or else (Is_Array_Type (Typ)\n+                     and then Needs_Check (Component_Type (Typ)))\n+           or else (Is_Scalar_Type (Typ)\n+                     and then Has_Aspect (Typ, Aspect_Default_Value))\n+         then\n+            return True;\n+         end if;\n+\n+         if Is_Record_Type (Typ) then\n+            declare\n+               Comp : Entity_Id := First_Component_Or_Discriminant (Typ);\n+            begin\n+               while Present (Comp) loop\n+                  if Needs_Check (Etype (Comp)) then\n+                     return True;\n+                  end if;\n+\n+                  Next_Component_Or_Discriminant (Comp);\n+               end loop;\n+            end;\n+         end if;\n+\n+         return False;\n+      end Type_Requires_Subscript_Validity_Checks_For_Reads;\n+\n+      --  Local constants\n+\n       Loc : constant Source_Ptr := Sloc (N);\n       Typ : constant Entity_Id  := Etype (N);\n       P   : constant Node_Id    := Prefix (N);\n       T   : constant Entity_Id  := Etype (P);\n \n+   --  Start of processing for Expand_N_Indexed_Component\n+\n    begin\n       --  A special optimization, if we have an indexed component that is\n       --  selecting from a slice, then we can eliminate the slice, since, for\n@@ -7102,11 +7140,67 @@ package body Exp_Ch4 is\n \n       --  Generate index and validity checks\n \n-      Generate_Index_Checks (N);\n+      declare\n+         Dims_Checked : Dimension_Set (Dimensions =>\n+                                         (if Is_Array_Type (T)\n+                                          then Number_Dimensions (T)\n+                                          else 1));\n+         --  Dims_Checked is used to avoid generating two checks (one in\n+         --  Generate_Index_Checks, one in Apply_Subscript_Validity_Checks)\n+         --  for the same index value in cases where the index check eliminates\n+         --  the need for the validity check. The Is_Array_Type test avoids\n+         --  cascading errors.\n \n-      if Validity_Checks_On and then Validity_Check_Subscripts then\n-         Apply_Subscript_Validity_Checks (N);\n-      end if;\n+      begin\n+         Generate_Index_Checks (N, Checks_Generated => Dims_Checked);\n+\n+         if Validity_Checks_On\n+           and then (Validity_Check_Subscripts\n+                      or else Wild_Reads_May_Have_Bad_Side_Effects\n+                      or else Type_Requires_Subscript_Validity_Checks_For_Reads\n+                                (Typ)\n+                      or else Is_Renamed_Variable_Name (N))\n+         then\n+            if Validity_Check_Subscripts then\n+               --  If we index into an array with an uninitialized variable\n+               --  and we generate an index check that passes at run time,\n+               --  passing that check does not ensure that the variable is\n+               --  valid (although it does in the common case where the\n+               --  object's subtype matches the index subtype).\n+               --  Consider an uninitialized variable with subtype 1 .. 10\n+               --  used to index into an array with bounds 1 .. 20 when the\n+               --  value of the uninitialized variable happens to be 15.\n+               --  The index check will succeed but the variable is invalid.\n+               --  If Validity_Check_Subscripts is True then we need to\n+               --  ensure validity, so we adjust Dims_Checked accordingly.\n+               Dims_Checked.Elements := (others => False);\n+\n+            elsif Is_Array_Type (T) then\n+               --  We are only adding extra validity checks here to\n+               --  deal with uninitialized variables (but this includes\n+               --  assigning one uninitialized variable to another). Other\n+               --  ways of producing invalid objects imply erroneousness, so\n+               --  the compiler can do whatever it wants for those cases.\n+               --  If an index type has the Default_Value aspect specified,\n+               --  then we don't have to worry about the possibility of an\n+               --  uninitialized variable, so no need for these extra\n+               --  validity checks.\n+\n+               declare\n+                  Idx : Node_Id := First_Index (T);\n+               begin\n+                  for No_Check_Needed of Dims_Checked.Elements loop\n+                     No_Check_Needed := No_Check_Needed\n+                       or else Has_Aspect (Etype (Idx), Aspect_Default_Value);\n+                     Next_Index (Idx);\n+                  end loop;\n+               end;\n+            end if;\n+\n+            Apply_Subscript_Validity_Checks\n+              (N, No_Check_Needed => Dims_Checked);\n+         end if;\n+      end;\n \n       --  If selecting from an array with atomic components, and atomic sync\n       --  is not suppressed for this array type, set atomic sync flag.\n@@ -7763,8 +7857,8 @@ package body Exp_Ch4 is\n \n          if Is_Unchecked_Union (Op_Type) then\n             declare\n-               Lhs_Type : constant Node_Id := Etype (L_Exp);\n-               Rhs_Type : constant Node_Id := Etype (R_Exp);\n+               Lhs_Type : constant Entity_Id := Etype (L_Exp);\n+               Rhs_Type : constant Entity_Id := Etype (R_Exp);\n \n                Lhs_Discr_Vals : Elist_Id;\n                --  List of inferred discriminant values for left operand.\n@@ -8518,10 +8612,8 @@ package body Exp_Ch4 is\n          else\n             Remove_Side_Effects (Lhs);\n             Remove_Side_Effects (Rhs);\n-            Rewrite (N,\n-              Expand_Record_Equality (N, Typl, Lhs, Rhs, Bodies));\n+            Rewrite (N, Expand_Record_Equality (N, Typl, Lhs, Rhs));\n \n-            Insert_Actions      (N, Bodies,           Suppress => All_Checks);\n             Analyze_And_Resolve (N, Standard_Boolean, Suppress => All_Checks);\n          end if;\n \n@@ -8544,10 +8636,8 @@ package body Exp_Ch4 is\n          Rewrite (N,\n            Expand_Record_Equality (N, Typl,\n              Unchecked_Convert_To (Typl, Lhs),\n-             Unchecked_Convert_To (Typl, Rhs),\n-             Bodies));\n+             Unchecked_Convert_To (Typl, Rhs)));\n \n-         Insert_Actions      (N, Bodies,           Suppress => All_Checks);\n          Analyze_And_Resolve (N, Standard_Boolean, Suppress => All_Checks);\n       end if;\n \n@@ -8570,8 +8660,7 @@ package body Exp_Ch4 is\n       --  f'Machine (expr) to eliminate surprise from extra precision.\n \n       if Is_Floating_Point_Type (Typl)\n-        and then Nkind (Original_Node (Lhs)) = N_Attribute_Reference\n-        and then Attribute_Name (Original_Node (Lhs)) = Name_Result\n+        and then Is_Attribute_Result (Original_Node (Lhs))\n       then\n          --  Stick in the Typ'Machine call if not already there\n \n@@ -9957,7 +10046,7 @@ package body Exp_Ch4 is\n               Make_Op_Not (Loc,\n                 Right_Opnd =>\n                   Make_Op_Eq (Loc,\n-                    Left_Opnd =>  Left_Opnd (N),\n+                    Left_Opnd  => Left_Opnd (N),\n                     Right_Opnd => Right_Opnd (N)));\n \n             --  The level of parentheses is useless in GNATprove mode, and\n@@ -10318,8 +10407,6 @@ package body Exp_Ch4 is\n       Rneg : Boolean;\n       --  Set if corresponding operand can be negative\n \n-      pragma Unreferenced (Hi);\n-\n    begin\n       Binary_Op_Validity_Checks (N);\n \n@@ -11339,7 +11426,7 @@ package body Exp_Ch4 is\n             then\n                Par := Parent (Par);\n \n-               --  Any other case is not what we are looking for\n+            --  Any other case is not what we are looking for\n \n             else\n                return False;\n@@ -11375,7 +11462,7 @@ package body Exp_Ch4 is\n \n       --  Local variables\n \n-      Pref     : constant Node_Id := Prefix (N);\n+      Pref : constant Node_Id := Prefix (N);\n \n    --  Start of processing for Expand_N_Slice\n \n@@ -11401,7 +11488,7 @@ package body Exp_Ch4 is\n       --       situation correctly in the assignment statement expansion).\n \n       --    2. Prefix of indexed component (the slide is optimized away in this\n-      --       case, see the start of Expand_N_Slice.)\n+      --       case, see the start of Expand_N_Indexed_Component.)\n \n       --    3. Object renaming declaration, since we want the name of the\n       --       slice, not the value.\n@@ -11790,8 +11877,8 @@ package body Exp_Ch4 is\n              Reason => PE_Accessibility_Check_Failed));\n          Set_Etype (N, Target_Type);\n \n-         Error_Msg_N (\"<<accessibility check failure\", N);\n-         Error_Msg_NE (\"\\<<& [\", N, Standard_Program_Error);\n+         Error_Msg_N (\"accessibility check failure<<\", N);\n+         Error_Msg_N (\"\\Program_Error [<<\", N);\n       end Raise_Accessibility_Error;\n \n       ----------------------\n@@ -12361,10 +12448,16 @@ package body Exp_Ch4 is\n          --  an instantiation, otherwise the conversion will already have been\n          --  rejected as illegal.\n \n-         --  Note: warnings are issued by the analyzer for the instance cases\n+         --  Note: warnings are issued by the analyzer for the instance cases,\n+         --  and, since we are late in expansion, a check is performed to\n+         --  verify that neither the target type nor the operand type are\n+         --  internally generated - as this can lead to spurious errors when,\n+         --  for example, the operand type is a result of BIP expansion.\n \n          elsif In_Instance_Body\n            and then Statically_Deeper_Relation_Applies (Target_Type)\n+           and then not Is_Internal (Target_Type)\n+           and then not Is_Internal (Operand_Type)\n            and then\n              Type_Access_Level (Operand_Type) > Type_Access_Level (Target_Type)\n          then\n@@ -12867,11 +12960,10 @@ package body Exp_Ch4 is\n    --  otherwise the primitive \"=\" is used directly.\n \n    function Expand_Record_Equality\n-     (Nod    : Node_Id;\n-      Typ    : Entity_Id;\n-      Lhs    : Node_Id;\n-      Rhs    : Node_Id;\n-      Bodies : List_Id) return Node_Id\n+     (Nod : Node_Id;\n+      Typ : Entity_Id;\n+      Lhs : Node_Id;\n+      Rhs : Node_Id) return Node_Id\n    is\n       Loc : constant Source_Ptr := Sloc (Nod);\n \n@@ -12889,41 +12981,35 @@ package body Exp_Ch4 is\n       ------------------------\n \n       function Element_To_Compare (C : Entity_Id) return Entity_Id is\n-         Comp : Entity_Id;\n+         Comp : Entity_Id := C;\n \n       begin\n-         Comp := C;\n-         loop\n-            --  Exit loop when the next element to be compared is found, or\n-            --  there is no more such element.\n-\n-            exit when No (Comp);\n+         while Present (Comp) loop\n+            --  Skip inherited components\n \n-            exit when Ekind (Comp) in E_Discriminant | E_Component\n-              and then not (\n+            --  Note: for a tagged type, we always generate the \"=\" primitive\n+            --  for the base type (not on the first subtype), so the test for\n+            --  Comp /= Original_Record_Component (Comp) is True for inherited\n+            --  components only.\n \n-              --  Skip inherited components\n-\n-              --  Note: for a tagged type, we always generate the \"=\" primitive\n-              --  for the base type (not on the first subtype), so the test for\n-              --  Comp /= Original_Record_Component (Comp) is True for\n-              --  inherited components only.\n-\n-              (Is_Tagged_Type (Typ)\n+            if (Is_Tagged_Type (Typ)\n                 and then Comp /= Original_Record_Component (Comp))\n \n-              --  Skip _Tag\n+            --  Skip _Tag\n \n               or else Chars (Comp) = Name_uTag\n \n-              --  Skip interface elements (secondary tags???)\n+            --  Skip interface elements (secondary tags???)\n \n-              or else Is_Interface (Etype (Comp)));\n-\n-            Next_Entity (Comp);\n+              or else Is_Interface (Etype (Comp))\n+            then\n+               Next_Component_Or_Discriminant (Comp);\n+            else\n+               return Comp;\n+            end if;\n          end loop;\n \n-         return Comp;\n+         return Empty;\n       end Element_To_Compare;\n \n    --  Start of processing for Expand_Record_Equality\n@@ -12939,7 +13025,7 @@ package body Exp_Ch4 is\n       --    and then Lhs.Cmpn = Rhs.Cmpn\n \n       Result := New_Occurrence_Of (Standard_True, Loc);\n-      C := Element_To_Compare (First_Entity (Typ));\n+      C := Element_To_Compare (First_Component_Or_Discriminant (Typ));\n       while Present (C) loop\n          declare\n             New_Lhs : Node_Id;\n@@ -12964,8 +13050,7 @@ package body Exp_Ch4 is\n                Rhs =>\n                  Make_Selected_Component (Loc,\n                    Prefix        => New_Rhs,\n-                   Selector_Name => New_Occurrence_Of (C, Loc)),\n-               Bodies => Bodies);\n+                   Selector_Name => New_Occurrence_Of (C, Loc)));\n \n             --  If some (sub)component is an unchecked_union, the whole\n             --  operation will raise program error.\n@@ -12997,7 +13082,7 @@ package body Exp_Ch4 is\n          end;\n \n          First_Time := False;\n-         C := Element_To_Compare (Next_Entity (C));\n+         C := Element_To_Compare (Next_Component_Or_Discriminant (C));\n       end loop;\n \n       return Result;\n@@ -15157,6 +15242,17 @@ package body Exp_Ch4 is\n    begin\n       SCIL_Node := Empty;\n \n+      --  We have to examine the corresponding record type when dealing with\n+      --  protected types instead of the original, unexpanded, type.\n+\n+      if Ekind (Right_Type) = E_Protected_Type then\n+         Right_Type := Corresponding_Record_Type (Right_Type);\n+      end if;\n+\n+      if Ekind (Left_Type) = E_Protected_Type then\n+         Left_Type := Corresponding_Record_Type (Left_Type);\n+      end if;\n+\n       --  In the case where the type is an access type, the test is applied\n       --  using the designated types (needed in Ada 2012 for implicit anonymous\n       --  access conversions, for AI05-0149)."}, {"sha": "eb9b506f35bed2881b3b1b0cf99f812798e3f7f0", "filename": "gcc/ada/exp_ch4.ads", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch4.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch4.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -89,20 +89,16 @@ package Exp_Ch4 is\n    --  while for records without variants only a simple expression is needed.\n \n    function Expand_Record_Equality\n-     (Nod    : Node_Id;\n-      Typ    : Entity_Id;\n-      Lhs    : Node_Id;\n-      Rhs    : Node_Id;\n-      Bodies : List_Id) return Node_Id;\n+     (Nod : Node_Id;\n+      Typ : Entity_Id;\n+      Lhs : Node_Id;\n+      Rhs : Node_Id) return Node_Id;\n    --  Expand a record equality into an expression that compares the fields\n    --  individually to yield the required Boolean result. Loc is the\n    --  location for the generated nodes. Typ is the type of the record, and\n    --  Lhs, Rhs are the record expressions to be compared, these\n    --  expressions need not to be analyzed but have to be side-effect free.\n-   --  Bodies is a list on which to attach bodies of local functions that\n-   --  are created in the process. This is the responsibility of the caller\n-   --  to insert those bodies at the right place. Nod provides the Sloc\n-   --  value for generated code.\n+   --  Nod provides the Sloc value for generated code.\n \n    procedure Expand_Set_Membership (N : Node_Id);\n    --  For each choice of a set membership, we create a simple equality or"}, {"sha": "b38e3f54f679d275faac2385e3802148d77fe94e", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 277, "deletions": 99, "changes": 376, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,7 +31,6 @@ with Einfo;          use Einfo;\n with Einfo.Entities; use Einfo.Entities;\n with Einfo.Utils;    use Einfo.Utils;\n with Elists;         use Elists;\n-with Errout;         use Errout;\n with Exp_Aggr;       use Exp_Aggr;\n with Exp_Ch6;        use Exp_Ch6;\n with Exp_Ch7;        use Exp_Ch7;\n@@ -40,7 +39,6 @@ with Exp_Dbug;       use Exp_Dbug;\n with Exp_Pakd;       use Exp_Pakd;\n with Exp_Tss;        use Exp_Tss;\n with Exp_Util;       use Exp_Util;\n-with Expander;       use Expander;\n with Inline;         use Inline;\n with Namet;          use Namet;\n with Nlists;         use Nlists;\n@@ -742,8 +740,8 @@ package body Exp_Ch5 is\n       --  in the front end.\n \n       declare\n-         L_Index_Typ : constant Node_Id := Etype (First_Index (L_Type));\n-         R_Index_Typ : constant Node_Id := Etype (First_Index (R_Type));\n+         L_Index_Typ : constant Entity_Id := Etype (First_Index (L_Type));\n+         R_Index_Typ : constant Entity_Id := Etype (First_Index (R_Type));\n \n          Left_Lo  : constant Node_Id := Type_Low_Bound  (L_Index_Typ);\n          Left_Hi  : constant Node_Id := Type_High_Bound (L_Index_Typ);\n@@ -1382,8 +1380,8 @@ package body Exp_Ch5 is\n \n       Loc  : constant Source_Ptr := Sloc (N);\n \n-      L_Index_Typ : constant Node_Id := Etype (First_Index (L_Type));\n-      R_Index_Typ : constant Node_Id := Etype (First_Index (R_Type));\n+      L_Index_Typ : constant Entity_Id := Etype (First_Index (L_Type));\n+      R_Index_Typ : constant Entity_Id := Etype (First_Index (R_Type));\n       Left_Lo  : constant Node_Id := Type_Low_Bound  (L_Index_Typ);\n       Right_Lo : constant Node_Id := Type_Low_Bound  (R_Index_Typ);\n \n@@ -1698,8 +1696,8 @@ package body Exp_Ch5 is\n                             (Etype (Left_Base_Index)))\n                  and then RTE_Available (RE_Fast_Copy_Bitfield)\n                then\n-                  pragma Assert (Esize (L_Type) /= 0);\n-                  pragma Assert (Esize (R_Type) /= 0);\n+                  pragma Assert (Known_Esize (L_Type));\n+                  pragma Assert (Known_Esize (R_Type));\n \n                   return Expand_Assign_Array_Bitfield_Fast (N, Larray, Rarray);\n                end if;\n@@ -2388,6 +2386,7 @@ package body Exp_Ch5 is\n             Ent := Name (N);\n             while Nkind (Ent) in N_Has_Entity\n               and then Present (Entity (Ent))\n+              and then Is_Object (Entity (Ent))\n               and then Present (Renamed_Object (Entity (Ent)))\n             loop\n                Ent := Renamed_Object (Entity (Ent));\n@@ -2665,7 +2664,7 @@ package body Exp_Ch5 is\n             Rewrite (Lhs, OK_Convert_To (Base_Type (Typ), Lhs));\n             Apply_Discriminant_Check (Rhs, Typ, Lhs);\n \n-         elsif Is_Array_Type (Typ) and then Is_Constrained (Typ)  then\n+         elsif Is_Array_Type (Typ) and then Is_Constrained (Typ) then\n             Rewrite (Rhs, OK_Convert_To (Base_Type (Typ), Rhs));\n             Rewrite (Lhs, OK_Convert_To (Base_Type (Typ), Lhs));\n             Apply_Length_Check (Rhs, Typ);\n@@ -3348,6 +3347,13 @@ package body Exp_Ch5 is\n             Alt          : Node_Id;\n             Suppress_Choice_Index_Update : Boolean := False) return Node_Id\n          is\n+            procedure Finish_Binding_Object_Declaration\n+              (Component_Assoc : Node_Id; Subobject : Node_Id);\n+            --  Finish the work that was started during analysis to\n+            --  declare a binding object. If we are generating a copy,\n+            --  then initialize it. If we are generating a renaming, then\n+            --  initialize the access value designating the renamed object.\n+\n             function Update_Choice_Index return Node_Id is (\n               Make_Assignment_Statement (Loc,\n                 Name       =>\n@@ -3365,6 +3371,154 @@ package body Exp_Ch5 is\n               renames Pattern_Match;\n             --  convenient rename for recursive calls\n \n+            function Indexed_Element (Idx : Pos) return Node_Id;\n+            --  Returns the Nth (well, ok, the Idxth) element of Object\n+\n+            ---------------------------------------\n+            -- Finish_Binding_Object_Declaration --\n+            ---------------------------------------\n+\n+            procedure Finish_Binding_Object_Declaration\n+              (Component_Assoc : Node_Id; Subobject : Node_Id)\n+            is\n+               Decl_Chars   : constant Name_Id :=\n+                 Binding_Chars (Component_Assoc);\n+\n+               Block_Stmt   : constant Node_Id := First (Statements (Alt));\n+               pragma Assert (Nkind (Block_Stmt) = N_Block_Statement);\n+               pragma Assert (No (Next (Block_Stmt)));\n+\n+               Decl         : Node_Id := First (Declarations (Block_Stmt));\n+               Def_Id       : Node_Id := Empty;\n+\n+               function Declare_Copy (Decl : Node_Id) return Boolean is\n+                 (Nkind (Decl) = N_Object_Declaration);\n+               --  Declare_Copy indicates which of the two approaches\n+               --  was chosen during analysis: declare (and initialize)\n+               --  a new variable, or use access values to declare a renaming\n+               --  of the appropriate subcomponent of the selector value.\n+\n+               function Make_Conditional (Stmt : Node_Id) return Node_Id;\n+               --  If there is only one choice for this alternative, then\n+               --  simply return the argument. If there is more than one\n+               --  choice, then wrap an if-statement around the argument\n+               --  so that it is only executed if the current choice matches.\n+\n+               ----------------------\n+               -- Make_Conditional --\n+               ----------------------\n+\n+               function Make_Conditional (Stmt : Node_Id) return Node_Id\n+               is\n+                  Condition : Node_Id;\n+               begin\n+                  if Present (Choice_Index_Decl) then\n+                     Condition :=\n+                       Make_Op_Eq (Loc,\n+                         New_Occurrence_Of\n+                           (Defining_Identifier (Choice_Index_Decl), Loc),\n+                         Make_Integer_Literal (Loc, Int (Choice_Index)));\n+\n+                     return Make_If_Statement (Loc,\n+                              Condition       => Condition,\n+                              Then_Statements => New_List (Stmt));\n+                  else\n+                     --  execute Stmt unconditionally\n+                     return Stmt;\n+                  end if;\n+               end Make_Conditional;\n+\n+            begin\n+               --  find the variable to be modified (and its declaration)\n+               loop\n+                  if Nkind (Decl) in N_Object_Declaration\n+                    | N_Object_Renaming_Declaration\n+                  then\n+                     Def_Id := Defining_Identifier (Decl);\n+                     exit when Chars (Def_Id) = Decl_Chars;\n+                  end if;\n+                  Next (Decl);\n+                  pragma Assert (Present (Decl));\n+               end loop;\n+\n+               --  For a binding object, we sometimes make a copy and\n+               --  sometimes introduce a renaming. That decision is made\n+               --  elsewhere. The renaming case involves dereferencing an\n+               --  access value because of the possibility of multiple\n+               --  choices (with multiple binding definitions) for a single\n+               --  alternative. In the copy case, we initialize the copy\n+               --  here (conditionally if there are multiple choices); in the\n+               --  renaming case, we initialize (again, maybe conditionally)\n+               --  the access value.\n+\n+               if Declare_Copy (Decl) then\n+                  declare\n+                     Assign_Value : constant Node_Id  :=\n+                       Make_Assignment_Statement (Loc,\n+                         Name       => New_Occurrence_Of (Def_Id, Loc),\n+                         Expression => Subobject);\n+\n+                     HSS : constant Node_Id :=\n+                       Handled_Statement_Sequence (Block_Stmt);\n+                  begin\n+                     Prepend (Make_Conditional (Assign_Value),\n+                              Statements (HSS));\n+                     Set_Analyzed (HSS, False);\n+                  end;\n+               else\n+                  pragma Assert (Nkind (Name (Decl)) = N_Explicit_Dereference);\n+\n+                  declare\n+                     Ptr_Obj  : constant Entity_Id :=\n+                       Entity (Prefix (Name (Decl)));\n+                     Ptr_Decl : constant Node_Id := Parent (Ptr_Obj);\n+\n+                     Assign_Reference : constant Node_Id :=\n+                       Make_Assignment_Statement (Loc,\n+                         Name       => New_Occurrence_Of (Ptr_Obj, Loc),\n+                         Expression =>\n+                           Make_Attribute_Reference (Loc,\n+                             Prefix => Subobject,\n+                             Attribute_Name => Name_Unrestricted_Access));\n+                  begin\n+                     Insert_After\n+                       (After => Ptr_Decl,\n+                        Node  => Make_Conditional (Assign_Reference));\n+\n+                     if Present (Expression (Ptr_Decl)) then\n+                        --  Delete bogus initial value built during analysis.\n+                        --  Look for \"5432\" in sem_case.adb.\n+                        pragma Assert (Nkind (Expression (Ptr_Decl)) =\n+                                       N_Unchecked_Type_Conversion);\n+                        Set_Expression (Ptr_Decl, Empty);\n+                     end if;\n+                  end;\n+               end if;\n+\n+               Set_Analyzed (Block_Stmt, False);\n+            end Finish_Binding_Object_Declaration;\n+\n+            ---------------------\n+            -- Indexed_Element --\n+            ---------------------\n+\n+            function Indexed_Element (Idx : Pos) return Node_Id is\n+               Obj_Index : constant Node_Id :=\n+                 Make_Op_Add (Loc,\n+                   Left_Opnd =>\n+                     Make_Attribute_Reference (Loc,\n+                       Attribute_Name => Name_First,\n+                       Prefix => New_Copy_Tree (Object)),\n+                   Right_Opnd =>\n+                     Make_Integer_Literal (Loc, Idx - 1));\n+            begin\n+               return Make_Indexed_Component (Loc,\n+                        Prefix => New_Copy_Tree (Object),\n+                        Expressions => New_List (Obj_Index));\n+            end Indexed_Element;\n+\n+         --  Start of processing for Pattern_Match\n+\n          begin\n             if Choice_Index /= 0 and not Suppress_Choice_Index_Update then\n                pragma Assert (Present (Choice_Index_Decl));\n@@ -3399,16 +3553,51 @@ package body Exp_Ch5 is\n \n             case Nkind (Pattern) is\n                when N_Aggregate =>\n-                  return Result : Node_Id :=\n-                    New_Occurrence_Of (Standard_True, Loc)\n-                  do\n+                  declare\n+                     Result : Node_Id;\n+                  begin\n                      if Is_Array_Type (Etype (Pattern)) then\n-                        --  Calling Error_Msg_N during expansion is usually a\n-                        --  mistake but is ok for an \"unimplemented\" message.\n-                        Error_Msg_N\n-                          (\"array-valued case choices unimplemented\",\n-                          Pattern);\n-                        return;\n+\n+                        --  Nonpositional aggregates currently unimplemented.\n+                        --  We flag that case during analysis, so an assertion\n+                        --  is ok here.\n+                        --\n+                        pragma Assert\n+                          (not Is_Non_Empty_List\n+                                 (Component_Associations (Pattern)));\n+\n+                        declare\n+                           Agg_Length : constant Node_Id :=\n+                             Make_Integer_Literal (Loc,\n+                               List_Length (Expressions (Pattern)));\n+\n+                           Obj_Length : constant Node_Id :=\n+                             Make_Attribute_Reference (Loc,\n+                               Attribute_Name => Name_Length,\n+                               Prefix => New_Copy_Tree (Object));\n+                        begin\n+                           Result := Make_Op_Eq (Loc,\n+                                       Left_Opnd  => Obj_Length,\n+                                       Right_Opnd => Agg_Length);\n+                        end;\n+\n+                        declare\n+                           Expr : Node_Id := First (Expressions (Pattern));\n+                           Idx  : Pos := 1;\n+                        begin\n+                           while Present (Expr) loop\n+                              Result :=\n+                                Make_And_Then (Loc,\n+                                  Left_Opnd  => Result,\n+                                  Right_Opnd =>\n+                                    PM (Pattern => Expr,\n+                                        Object => Indexed_Element (Idx)));\n+                              Next (Expr);\n+                              Idx := Idx + 1;\n+                           end loop;\n+                        end;\n+\n+                        return Result;\n                      end if;\n \n                      --  positional notation should have been normalized\n@@ -3425,6 +3614,8 @@ package body Exp_Ch5 is\n                              Selector_Name => New_Occurrence_Of\n                                                 (Entity (Choice), Loc)));\n                      begin\n+                        Result := New_Occurrence_Of (Standard_True, Loc);\n+\n                         while Present (Component_Assoc) loop\n                            Choice := First (Choices (Component_Assoc));\n                            while Present (Choice) loop\n@@ -3458,70 +3649,9 @@ package body Exp_Ch5 is\n \n                               if Binding_Chars (Component_Assoc) /= No_Name\n                               then\n-                                 declare\n-                                    Decl_Chars : constant Name_Id :=\n-                                      Binding_Chars (Component_Assoc);\n-\n-                                    Block_Stmt : constant Node_Id :=\n-                                      First (Statements (Alt));\n-                                    pragma Assert\n-                                      (Nkind (Block_Stmt) = N_Block_Statement);\n-                                    pragma Assert (No (Next (Block_Stmt)));\n-                                    Decl : Node_Id\n-                                      := First (Declarations (Block_Stmt));\n-                                    Def_Id : Node_Id := Empty;\n-\n-                                    Assignment_Stmt : Node_Id;\n-                                    Condition       : Node_Id;\n-                                    Prepended_Stmt  : Node_Id;\n-                                 begin\n-                                    --  find the variable to be modified\n-                                    while No (Def_Id) or else\n-                                      Chars (Def_Id) /= Decl_Chars\n-                                    loop\n-                                       Def_Id := Defining_Identifier (Decl);\n-                                       Next (Decl);\n-                                    end loop;\n-\n-                                    Assignment_Stmt :=\n-                                      Make_Assignment_Statement (Loc,\n-                                        Name       => New_Occurrence_Of\n-                                                        (Def_Id, Loc),\n-                                        Expression => Subobject);\n-\n-                                    --  conditional if multiple choices\n-\n-                                    if Present (Choice_Index_Decl) then\n-                                       Condition :=\n-                                         Make_Op_Eq (Loc,\n-                                           New_Occurrence_Of\n-                                             (Defining_Identifier\n-                                                (Choice_Index_Decl), Loc),\n-                                          Make_Integer_Literal\n-                                            (Loc, Int (Choice_Index)));\n-\n-                                       Prepended_Stmt :=\n-                                         Make_If_Statement (Loc,\n-                                           Condition       => Condition,\n-                                           Then_Statements =>\n-                                             New_List (Assignment_Stmt));\n-                                    else\n-                                       --  assignment is unconditional\n-                                       Prepended_Stmt := Assignment_Stmt;\n-                                    end if;\n-\n-                                    declare\n-                                       HSS : constant Node_Id :=\n-                                         Handled_Statement_Sequence\n-                                           (Block_Stmt);\n-                                    begin\n-                                       Prepend (Prepended_Stmt,\n-                                                Statements (HSS));\n-\n-                                       Set_Analyzed (Block_Stmt, False);\n-                                       Set_Analyzed (HSS, False);\n-                                    end;\n-                                 end;\n+                                 Finish_Binding_Object_Declaration\n+                                   (Component_Assoc => Component_Assoc,\n+                                    Subobject => Subobject);\n                               end if;\n \n                               Next (Choice);\n@@ -3530,27 +3660,82 @@ package body Exp_Ch5 is\n                            Next (Component_Assoc);\n                         end loop;\n                      end;\n+                     return Result;\n+                  end;\n+\n+               when N_String_Literal =>\n+                  return Result : Node_Id do\n+                     declare\n+                        Char_Type : constant Entity_Id :=\n+                          Root_Type (Component_Type (Etype (Pattern)));\n+\n+                        --  If the component type is not a standard character\n+                        --  type then this string lit should have already been\n+                        --  transformed into an aggregate in\n+                        --  Resolve_String_Literal.\n+                        --\n+                        pragma Assert (Is_Standard_Character_Type (Char_Type));\n+\n+                        Str    : constant String_Id  := Strval (Pattern);\n+                        Strlen : constant Nat        := String_Length (Str);\n+\n+                        Lit_Length : constant Node_Id :=\n+                          Make_Integer_Literal (Loc, Strlen);\n+\n+                        Obj_Length : constant Node_Id :=\n+                          Make_Attribute_Reference (Loc,\n+                            Attribute_Name => Name_Length,\n+                            Prefix => New_Copy_Tree (Object));\n+                     begin\n+                        Result := Make_Op_Eq (Loc,\n+                                    Left_Opnd  => Obj_Length,\n+                                    Right_Opnd => Lit_Length);\n+\n+                        for Idx in 1 .. Strlen loop\n+                           declare\n+                              C           : constant Char_Code :=\n+                                Get_String_Char (Str, Idx);\n+                              Obj_Element : constant Node_Id :=\n+                                Indexed_Element (Idx);\n+                              Char_Lit    : Node_Id;\n+                           begin\n+                              Set_Character_Literal_Name (C);\n+                              Char_Lit :=\n+                                Make_Character_Literal (Loc,\n+                                  Chars              => Name_Find,\n+                                  Char_Literal_Value => UI_From_CC (C));\n+\n+                              Result :=\n+                                Make_And_Then (Loc,\n+                                  Left_Opnd  => Result,\n+                                  Right_Opnd =>\n+                                    Make_Op_Eq (Loc,\n+                                      Left_Opnd  => Obj_Element,\n+                                      Right_Opnd => Char_Lit));\n+                           end;\n+                        end loop;\n+                     end;\n                   end return;\n \n                when N_Qualified_Expression =>\n-                  --  Make a copy for one of the two uses of Object; the choice\n-                  --  of where to use the original and where to use the copy\n-                  --  is arbitrary.\n-\n                   return Make_And_Then (Loc,\n                     Left_Opnd  => Make_In (Loc,\n                       Left_Opnd  => New_Copy_Tree (Object),\n                       Right_Opnd => New_Copy_Tree (Subtype_Mark (Pattern))),\n                     Right_Opnd =>\n                       PM (Pattern => Expression (Pattern),\n-                          Object  => Object));\n+                          Object  => New_Copy_Tree (Object)));\n \n                when N_Identifier | N_Expanded_Name =>\n                   if Is_Type (Entity (Pattern)) then\n                      return Make_In (Loc,\n-                       Left_Opnd  => Object,\n+                       Left_Opnd  => New_Copy_Tree (Object),\n                        Right_Opnd => New_Occurrence_Of\n                                        (Entity (Pattern), Loc));\n+                  elsif Ekind (Entity (Pattern)) = E_Constant then\n+                     return PM (Pattern =>\n+                                  Expression (Parent (Entity (Pattern))),\n+                                Object => Object);\n                   end if;\n \n                when N_Others_Choice =>\n@@ -3690,7 +3875,6 @@ package body Exp_Ch5 is\n       if Extensions_Allowed and then not Is_Discrete_Type (Etype (Expr)) then\n          Rewrite (N, Expand_General_Case_Statement);\n          Analyze (N);\n-         Expand (N);\n          return;\n       end if;\n \n@@ -4291,9 +4475,7 @@ package body Exp_Ch5 is\n             --  entire if statement by the sequence of else statements.\n \n             if No (Elsif_Parts (N)) then\n-               if No (Else_Statements (N))\n-                 or else Is_Empty_List (Else_Statements (N))\n-               then\n+               if Is_Empty_List (Else_Statements (N)) then\n                   Rewrite (N,\n                     Make_Null_Statement (Sloc (N)));\n                else\n@@ -4373,9 +4555,7 @@ package body Exp_Ch5 is\n \n                Set_Else_Statements (N, New_List (New_If));\n \n-               if Present (Condition_Actions (E)) then\n-                  Insert_List_Before (New_If, Condition_Actions (E));\n-               end if;\n+               Insert_List_Before (New_If, Condition_Actions (E));\n \n                Remove (E);\n \n@@ -5269,9 +5449,7 @@ package body Exp_Ch5 is\n       --  Condition_Actions of the iterator. Insert them now at the head of\n       --  the loop.\n \n-      if Present (Condition_Actions (Isc)) then\n-         Insert_List_Before (N, Condition_Actions (Isc));\n-      end if;\n+      Insert_List_Before (N, Condition_Actions (Isc));\n \n       Rewrite (N, New_Loop);\n       Analyze (N);"}, {"sha": "b9df80fd95ab314466ffef434f7bd2187d078c61", "filename": "gcc/ada/exp_ch5.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch5.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch5.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "24476194337a01eb03f9949aa42dc2953077319b", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 443, "deletions": 24, "changes": 467, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -73,8 +73,10 @@ with Sem_Util;       use Sem_Util;\n with Sinfo;          use Sinfo;\n with Sinfo.Nodes;    use Sinfo.Nodes;\n with Sinfo.Utils;    use Sinfo.Utils;\n+with Sinput;         use Sinput;\n with Snames;         use Snames;\n with Stand;          use Stand;\n+with Stringt;        use Stringt;\n with Tbuild;         use Tbuild;\n with Uintp;          use Uintp;\n with Validsw;        use Validsw;\n@@ -1897,7 +1899,7 @@ package body Exp_Ch6 is\n \n          Reset_Packed_Prefix;\n \n-         Temp := Make_Temporary (Loc, 'T', Actual);\n+         Temp   := Make_Temporary (Loc, 'T', Actual);\n          Incod  := Relocate_Node (Actual);\n          Outcod := New_Copy_Tree (Incod);\n \n@@ -1919,7 +1921,10 @@ package body Exp_Ch6 is\n \n          elsif Inside_Init_Proc then\n \n-            --  Could use a comment here to match comment below ???\n+            --  Skip using the actual as the expression in Decl if we are in\n+            --  an init proc and it is not a component which depends on a\n+            --  discriminant, because, in this case, we need to use the actual\n+            --  type of the component instead.\n \n             if Nkind (Actual) /= N_Selected_Component\n               or else\n@@ -1928,8 +1933,9 @@ package body Exp_Ch6 is\n             then\n                Incod := Empty;\n \n-            --  Otherwise, keep the component in order to generate the proper\n-            --  actual subtype, that depends on enclosing discriminants.\n+            --  Otherwise, keep the component so we can generate the proper\n+            --  actual subtype - since the subtype depends on enclosing\n+            --  discriminants.\n \n             else\n                null;\n@@ -2290,8 +2296,11 @@ package body Exp_Ch6 is\n                null;\n \n             elsif Is_Build_In_Place_Function_Call (Actual) then\n-               Build_Activation_Chain_Entity (N);\n-               Build_Master_Entity (Etype (Actual));\n+               if Might_Have_Tasks (Etype (Actual)) then\n+                  Build_Activation_Chain_Entity (N);\n+                  Build_Master_Entity (Etype (Actual));\n+               end if;\n+\n                Make_Build_In_Place_Call_In_Anonymous_Context (Actual);\n \n             --  Ada 2005 (AI-318-02): Specialization of the previous case for\n@@ -2808,7 +2817,7 @@ package body Exp_Ch6 is\n \n       procedure Check_Subprogram_Variant;\n       --  Emit a call to the internally generated procedure with checks for\n-      --  aspect Subprogrgram_Variant, if present and enabled.\n+      --  aspect Subprogram_Variant, if present and enabled.\n \n       function Inherited_From_Formal (S : Entity_Id) return Entity_Id;\n       --  Within an instance, a type derived from an untagged formal derived\n@@ -3141,13 +3150,50 @@ package body Exp_Ch6 is\n       function Can_Fold_Predicate_Call (P : Entity_Id) return Boolean is\n          Actual : Node_Id;\n \n+         function Augments_Other_Dynamic_Predicate (DP_Aspect_Spec : Node_Id)\n+           return Boolean;\n+         --  Given a Dynamic_Predicate aspect aspecification for a\n+         --  discrete type, returns True iff another DP specification\n+         --  applies (indirectly, via a subtype type or a derived type)\n+         --  to the same entity that this aspect spec applies to.\n+\n          function May_Fold (N : Node_Id) return Traverse_Result;\n          --  The predicate expression is foldable if it only contains operators\n          --  and literals. During this check, we also replace occurrences of\n          --  the formal of the constructed predicate function with the static\n          --  value of the actual. This is done on a copy of the analyzed\n          --  expression for the predicate.\n \n+         --------------------------------------\n+         -- Augments_Other_Dynamic_Predicate --\n+         --------------------------------------\n+\n+         function Augments_Other_Dynamic_Predicate (DP_Aspect_Spec : Node_Id)\n+           return Boolean\n+         is\n+            Aspect_Bearer : Entity_Id := Entity (DP_Aspect_Spec);\n+         begin\n+            loop\n+               Aspect_Bearer := Nearest_Ancestor (Aspect_Bearer);\n+\n+               if not Present (Aspect_Bearer) then\n+                  return False;\n+               end if;\n+\n+               declare\n+                  Aspect_Spec : constant Node_Id :=\n+                    Find_Aspect (Aspect_Bearer, Aspect_Dynamic_Predicate);\n+               begin\n+                  if Present (Aspect_Spec)\n+                    and then Aspect_Spec /= DP_Aspect_Spec\n+                  then\n+                     --  Found another Dynamic_Predicate aspect spec\n+                     return True;\n+                  end if;\n+               end;\n+            end loop;\n+         end Augments_Other_Dynamic_Predicate;\n+\n          --------------\n          -- May_Fold --\n          --------------\n@@ -3190,7 +3236,7 @@ package body Exp_Ch6 is\n \n          function Try_Fold is new Traverse_Func (May_Fold);\n \n-         --  Other lLocal variables\n+         --  Other Local variables\n \n          Subt   : constant Entity_Id := Etype (First_Entity (P));\n          Aspect : Node_Id;\n@@ -3218,6 +3264,11 @@ package body Exp_Ch6 is\n            or else Nkind (Actual) /= N_Integer_Literal\n            or else not Has_Dynamic_Predicate_Aspect (Subt)\n            or else No (Aspect)\n+\n+           --  Do not fold if multiple applicable predicate aspects\n+           or else Present (Find_Aspect (Subt, Aspect_Static_Predicate))\n+           or else Present (Find_Aspect (Subt, Aspect_Predicate))\n+           or else Augments_Other_Dynamic_Predicate (Aspect)\n            or else CodePeer_Mode\n          then\n             return False;\n@@ -4065,7 +4116,7 @@ package body Exp_Ch6 is\n             end;\n          end if;\n \n-         --  If the formal is class wide and the actual is an aggregate, force\n+         --  If the formal is class-wide and the actual is an aggregate, force\n          --  evaluation so that the back end who does not know about class-wide\n          --  type, does not generate a temporary of the wrong size.\n \n@@ -4250,6 +4301,16 @@ package body Exp_Ch6 is\n          Expand_Interface_Actuals (Call_Node);\n       end if;\n \n+      --  Install class-wide preconditions runtime check when this is a\n+      --  dispatching primitive that has or inherits class-wide preconditions;\n+      --  otherwise no runtime check is installed.\n+\n+      if Nkind (Call_Node) in N_Subprogram_Call\n+        and then Is_Dispatching_Operation (Subp)\n+      then\n+         Install_Class_Preconditions_Check (Call_Node);\n+      end if;\n+\n       --  Deals with Dispatch_Call if we still have a call, before expanding\n       --  extra actuals since this will be done on the re-analysis of the\n       --  dispatching call. Note that we do not try to shorten the actual list\n@@ -4380,6 +4441,7 @@ package body Exp_Ch6 is\n       --  the current subprogram is called.\n \n       if Is_Subprogram (Subp)\n+        and then not Is_Ignored_Ghost_Entity (Subp)\n         and then Same_Or_Aliased_Subprograms (Subp, Current_Scope)\n       then\n          Check_Subprogram_Variant;\n@@ -4520,6 +4582,8 @@ package body Exp_Ch6 is\n                        or else\n                          (Is_Record_Type (Formal_Typ)\n                            and then Is_Record_Type (Parent_Typ)))\n+                    and then Known_Esize (Formal_Typ)\n+                    and then Known_Esize (Parent_Typ)\n                     and then\n                       (Esize (Formal_Typ) /= Esize (Parent_Typ)\n                         or else Has_Pragma_Pack (Formal_Typ) /=\n@@ -7435,6 +7499,10 @@ package body Exp_Ch6 is\n         and then not Is_Class_Wide_Type (Utyp)\n         and then (Nkind (Exp) in\n                       N_Type_Conversion | N_Unchecked_Type_Conversion\n+                    or else (Nkind (Exp) = N_Explicit_Dereference\n+                               and then Nkind (Prefix (Exp)) in\n+                                          N_Type_Conversion |\n+                                          N_Unchecked_Type_Conversion)\n                     or else (Is_Entity_Name (Exp)\n                                and then Is_Formal (Entity (Exp))))\n       then\n@@ -7849,18 +7917,6 @@ package body Exp_Ch6 is\n       --  returned type may not be known yet (for private types).\n \n       Compute_Returns_By_Ref (Subp);\n-\n-      --  When freezing a null procedure, analyze its delayed aspects now\n-      --  because we may not have reached the end of the declarative list when\n-      --  delayed aspects are normally analyzed. This ensures that dispatching\n-      --  calls are properly rewritten when the generated _Postcondition\n-      --  procedure is analyzed in the null procedure body.\n-\n-      if Nkind (Parent (Subp)) = N_Procedure_Specification\n-        and then Null_Present (Parent (Subp))\n-      then\n-         Analyze_Entry_Or_Subprogram_Contract (Subp);\n-      end if;\n    end Freeze_Subprogram;\n \n    --------------------------\n@@ -8095,6 +8151,367 @@ package body Exp_Ch6 is\n       end if;\n    end Insert_Post_Call_Actions;\n \n+   ---------------------------------------\n+   -- Install_Class_Preconditions_Check --\n+   ---------------------------------------\n+\n+   procedure Install_Class_Preconditions_Check (Call_Node : Node_Id) is\n+      Loc : constant Source_Ptr := Sloc (Call_Node);\n+\n+      function Build_Dynamic_Check_Helper_Call return Node_Id;\n+      --  Build call to the helper runtime function of the nearest ancestor\n+      --  of the target subprogram that dynamically evaluates the merged\n+      --  or-else preconditions.\n+\n+      function Build_Error_Message (Subp_Id : Entity_Id) return Node_Id;\n+      --  Build message associated with the class-wide precondition of Subp_Id\n+      --  indicating the call that caused it.\n+\n+      function Build_Static_Check_Helper_Call return Node_Id;\n+      --  Build call to the helper runtime function of the nearest ancestor\n+      --  of the target subprogram that dynamically evaluates the merged\n+      --  or-else preconditions.\n+\n+      function Class_Preconditions_Subprogram\n+        (Spec_Id : Entity_Id;\n+         Dynamic : Boolean) return Node_Id;\n+      --  Return the nearest ancestor of Spec_Id defining a helper function\n+      --  that evaluates a combined or-else expression containing all the\n+      --  inherited class-wide preconditions; Dynamic enables searching for\n+      --  the helper that dynamically evaluates preconditions using dispatching\n+      --  calls; if False it searches for the helper that statically evaluates\n+      --  preconditions; return Empty when not available (which means that no\n+      --  preconditions check is required).\n+\n+      -------------------------------------\n+      -- Build_Dynamic_Check_Helper_Call --\n+      -------------------------------------\n+\n+      function Build_Dynamic_Check_Helper_Call return Node_Id is\n+         Spec_Id   : constant Entity_Id := Entity (Name (Call_Node));\n+         CW_Subp   : constant Entity_Id :=\n+                       Class_Preconditions_Subprogram (Spec_Id,\n+                         Dynamic => True);\n+         Helper_Id : constant Entity_Id :=\n+                       Dynamic_Call_Helper (CW_Subp);\n+         Actuals   : constant List_Id := New_List;\n+         A         : Node_Id   := First_Actual (Call_Node);\n+         F         : Entity_Id := First_Formal (Helper_Id);\n+\n+      begin\n+         while Present (A) loop\n+\n+            --  Ensure that the evaluation of the actuals will not produce\n+            --  side effects.\n+\n+            Remove_Side_Effects (A);\n+\n+            Append_To (Actuals, New_Copy_Tree (A));\n+            Next_Formal (F);\n+            Next_Actual (A);\n+         end loop;\n+\n+         return\n+           Make_Function_Call (Loc,\n+             Name => New_Occurrence_Of (Helper_Id, Loc),\n+             Parameter_Associations => Actuals);\n+      end Build_Dynamic_Check_Helper_Call;\n+\n+      -------------------------\n+      -- Build_Error_Message --\n+      -------------------------\n+\n+      function Build_Error_Message (Subp_Id : Entity_Id) return Node_Id is\n+\n+         procedure Append_Message\n+           (Id       : Entity_Id;\n+            Is_First : in out Boolean);\n+         --  Build the fragment of the message associated with subprogram Id;\n+         --  Is_First facilitates identifying continuation messages.\n+\n+         --------------------\n+         -- Append_Message --\n+         --------------------\n+\n+         procedure Append_Message\n+           (Id       : Entity_Id;\n+            Is_First : in out Boolean)\n+         is\n+            Prag   : constant Node_Id := Get_Class_Wide_Pragma (Id,\n+                                         Pragma_Precondition);\n+            Msg    : Node_Id;\n+            Str_Id : String_Id;\n+\n+         begin\n+            if No (Prag) or else Is_Ignored (Prag) then\n+               return;\n+            end if;\n+\n+            Msg    := Expression (Last (Pragma_Argument_Associations (Prag)));\n+            Str_Id := Strval (Msg);\n+\n+            if Is_First then\n+               Is_First := False;\n+\n+               Append (Global_Name_Buffer, Strval (Msg));\n+\n+               if Id /= Subp_Id\n+                 and then Name_Buffer (1 .. 19) = \"failed precondition\"\n+               then\n+                  Insert_Str_In_Name_Buffer (\"inherited \", 8);\n+               end if;\n+\n+            else\n+               declare\n+                  Str      : constant String := To_String (Str_Id);\n+                  From_Idx : Integer;\n+\n+               begin\n+                  Append (Global_Name_Buffer, ASCII.LF);\n+                  Append (Global_Name_Buffer, \"  or \");\n+\n+                  From_Idx := Name_Len;\n+                  Append (Global_Name_Buffer, Str_Id);\n+\n+                  if Str (1 .. 19) = \"failed precondition\" then\n+                     Insert_Str_In_Name_Buffer (\"inherited \", From_Idx + 8);\n+                  end if;\n+               end;\n+            end if;\n+         end Append_Message;\n+\n+         --  Local variables\n+\n+         Str_Loc  : constant String := Build_Location_String (Loc);\n+         Subps    : constant Subprogram_List :=\n+                      Inherited_Subprograms (Subp_Id);\n+         Is_First : Boolean := True;\n+\n+      --  Start of processing for Build_Error_Message\n+\n+      begin\n+         Name_Len := 0;\n+         Append_Message (Subp_Id, Is_First);\n+\n+         for Index in Subps'Range loop\n+            Append_Message (Subps (Index), Is_First);\n+         end loop;\n+\n+         if Present (Controlling_Argument (Call_Node)) then\n+            Append (Global_Name_Buffer, \" in dispatching call at \");\n+         else\n+            Append (Global_Name_Buffer, \" in call at \");\n+         end if;\n+\n+         Append (Global_Name_Buffer, Str_Loc);\n+\n+         return Make_String_Literal (Loc, Name_Buffer (1 .. Name_Len));\n+      end Build_Error_Message;\n+\n+      ------------------------------------\n+      -- Build_Static_Check_Helper_Call --\n+      ------------------------------------\n+\n+      function Build_Static_Check_Helper_Call return Node_Id is\n+         Actuals   : constant List_Id := New_List;\n+         A         : Node_Id;\n+         Helper_Id : Entity_Id;\n+         F         : Entity_Id;\n+         CW_Subp   : Entity_Id;\n+         Spec_Id   : constant Entity_Id := Entity (Name (Call_Node));\n+\n+      begin\n+         --  The target is the wrapper built to support inheriting body but\n+         --  overriding pre/postconditions (AI12-0195).\n+\n+         if Is_Dispatch_Table_Wrapper (Spec_Id) then\n+            CW_Subp := Spec_Id;\n+\n+         --  Common case\n+\n+         else\n+            CW_Subp := Class_Preconditions_Subprogram (Spec_Id,\n+                         Dynamic => False);\n+         end if;\n+\n+         Helper_Id := Static_Call_Helper (CW_Subp);\n+\n+         F := First_Formal (Helper_Id);\n+         A := First_Actual (Call_Node);\n+         while Present (A) loop\n+\n+            --  Ensure that the evaluation of the actuals will not produce\n+            --  side effects.\n+\n+            Remove_Side_Effects (A);\n+\n+            if Is_Controlling_Actual (A)\n+              and then Etype (F) /= Etype (A)\n+            then\n+               Append_To (Actuals,\n+                 Make_Unchecked_Type_Conversion (Loc,\n+                   New_Occurrence_Of (Etype (F), Loc),\n+                   New_Copy_Tree (A)));\n+            else\n+               Append_To (Actuals, New_Copy_Tree (A));\n+            end if;\n+\n+            Next_Formal (F);\n+            Next_Actual (A);\n+         end loop;\n+\n+         return\n+           Make_Function_Call (Loc,\n+             Name => New_Occurrence_Of (Helper_Id, Loc),\n+             Parameter_Associations => Actuals);\n+      end Build_Static_Check_Helper_Call;\n+\n+      ------------------------------------\n+      -- Class_Preconditions_Subprogram --\n+      ------------------------------------\n+\n+      function Class_Preconditions_Subprogram\n+        (Spec_Id : Entity_Id;\n+         Dynamic : Boolean) return Node_Id\n+      is\n+         Subp_Id : constant Entity_Id := Ultimate_Alias (Spec_Id);\n+\n+      begin\n+         --  Prevent cascaded errors\n+\n+         if not Is_Dispatching_Operation (Subp_Id) then\n+            return Empty;\n+\n+         --  No need to search if this subprogram has the helper we are\n+         --  searching\n+\n+         elsif Dynamic then\n+            if Present (Dynamic_Call_Helper (Subp_Id)) then\n+               return Subp_Id;\n+            end if;\n+         else\n+            if Present (Static_Call_Helper (Subp_Id)) then\n+               return Subp_Id;\n+            end if;\n+         end if;\n+\n+         --  Process inherited subprograms looking for class-wide\n+         --  preconditions.\n+\n+         declare\n+            Subps   : constant Subprogram_List :=\n+                        Inherited_Subprograms (Subp_Id);\n+            Subp_Id : Entity_Id;\n+\n+         begin\n+            for Index in Subps'Range loop\n+               Subp_Id := Subps (Index);\n+\n+               if Present (Alias (Subp_Id)) then\n+                  Subp_Id := Ultimate_Alias (Subp_Id);\n+               end if;\n+\n+               --  Wrappers of class-wide pre/postconditions reference the\n+               --  parent primitive that has the inherited contract.\n+\n+               if Is_Wrapper (Subp_Id)\n+                 and then Present (LSP_Subprogram (Subp_Id))\n+               then\n+                  Subp_Id := LSP_Subprogram (Subp_Id);\n+               end if;\n+\n+               if Dynamic then\n+                  if Present (Dynamic_Call_Helper (Subp_Id)) then\n+                     return Subp_Id;\n+                  end if;\n+               else\n+                  if Present (Static_Call_Helper (Subp_Id)) then\n+                     return Subp_Id;\n+                  end if;\n+               end if;\n+            end loop;\n+         end;\n+\n+         return Empty;\n+      end Class_Preconditions_Subprogram;\n+\n+      --  Local variables\n+\n+      Dynamic_Check : constant Boolean :=\n+                        Present (Controlling_Argument (Call_Node));\n+      Class_Subp    : Entity_Id;\n+      Cond          : Node_Id;\n+      Subp          : Entity_Id;\n+\n+   --  Start of processing for Install_Class_Preconditions_Check\n+\n+   begin\n+      --  Do not expand the check if we are compiling under restriction\n+      --  No_Dispatching_Calls; the semantic analyzer has previously\n+      --  notified the violation of this restriction.\n+\n+      if Dynamic_Check\n+        and then Restriction_Active (No_Dispatching_Calls)\n+      then\n+         return;\n+\n+      --  Class-wide precondition check not needed in interface thunks since\n+      --  they are installed in the dispatching call that caused invoking the\n+      --  thunk.\n+\n+      elsif Is_Thunk (Current_Scope) then\n+         return;\n+      end if;\n+\n+      Subp := Entity (Name (Call_Node));\n+\n+      --  No check needed for this subprogram call if no class-wide\n+      --  preconditions apply (or if the unique available preconditions\n+      --  are ignored preconditions).\n+\n+      Class_Subp := Class_Preconditions_Subprogram (Subp, Dynamic_Check);\n+\n+      if No (Class_Subp)\n+        or else No (Class_Preconditions (Class_Subp))\n+      then\n+         return;\n+      end if;\n+\n+      --  Build and install the check\n+\n+      if Dynamic_Check then\n+         Cond := Build_Dynamic_Check_Helper_Call;\n+      else\n+         Cond := Build_Static_Check_Helper_Call;\n+      end if;\n+\n+      if Exception_Locations_Suppressed then\n+         Insert_Action (Call_Node,\n+           Make_If_Statement (Loc,\n+             Condition       => Make_Op_Not (Loc, Cond),\n+             Then_Statements => New_List (\n+               Make_Raise_Statement (Loc,\n+                 Name =>\n+                   New_Occurrence_Of\n+                     (RTE (RE_Assert_Failure), Loc)))));\n+\n+      --  Failed check with message indicating the failed precondition and the\n+      --  call that caused it.\n+\n+      else\n+         Insert_Action (Call_Node,\n+           Make_If_Statement (Loc,\n+             Condition       => Make_Op_Not (Loc, Cond),\n+             Then_Statements => New_List (\n+               Make_Procedure_Call_Statement (Loc,\n+                 Name                   =>\n+                   New_Occurrence_Of\n+                     (RTE (RE_Raise_Assert_Failure), Loc),\n+                 Parameter_Associations =>\n+                   New_List (Build_Error_Message (Subp))))));\n+      end if;\n+   end Install_Class_Preconditions_Check;\n+\n    -----------------------------------\n    -- Is_Build_In_Place_Result_Type --\n    -----------------------------------\n@@ -9297,7 +9714,9 @@ package body Exp_Ch6 is\n          --  At this point, Defining_Identifier (Obj_Decl) is no longer equal\n          --  to Obj_Def_Id.\n \n-         Set_Renamed_Object (Defining_Identifier (Obj_Decl), Call_Deref);\n+         pragma Assert (Ekind (Defining_Identifier (Obj_Decl)) = E_Void);\n+         Set_Renamed_Object_Of_Possibly_Void\n+           (Defining_Identifier (Obj_Decl), Call_Deref);\n \n          --  If the original entity comes from source, then mark the new\n          --  entity as needing debug information, even though it's defined\n@@ -9791,7 +10210,7 @@ package body Exp_Ch6 is\n       --  If function is inherited, a conversion may be necessary.\n \n       if Nkind (Par) = N_Assignment_Statement then\n-         Last_Actual :=  Name (Par);\n+         Last_Actual := Name (Par);\n \n          if not Comes_From_Source (Orig_Func)\n            and then Etype (Orig_Func) /= Etype (Func_Id)"}, {"sha": "f886eda51a31cb3dcd7d779b2f4f9372c9e2a7fa", "filename": "gcc/ada/exp_ch6.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch6.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch6.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2021, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2022, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -121,6 +121,9 @@ package Exp_Ch6 is\n    --  The returned node is the root of the procedure body which will replace\n    --  the original function body, which is not needed for the C program.\n \n+   procedure Install_Class_Preconditions_Check (Call_Node : Node_Id);\n+   --  Install check of class-wide preconditions on the caller.\n+\n    function Is_Build_In_Place_Entity (E : Entity_Id) return Boolean;\n    --  Ada 2005 (AI-318-02): Returns True if E is a BIP entity.\n "}, {"sha": "d7863c30b68f229422ed96579e0f2fbb021c704d", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "3dbac21d6a5496a8c4c179cd45ad96efc0f806dd", "filename": "gcc/ada/exp_ch7.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch7.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch7.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "a63ddfa71b59b3c1b17c0ced791c90d81d87b6ff", "filename": "gcc/ada/exp_ch8.adb", "status": "modified", "additions": 14, "deletions": 17, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch8.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "918ddc0aace7eb239c805ea61a42684cc1a64153", "filename": "gcc/ada/exp_ch8.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch8.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch8.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch8.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "81f4d7c3b5af8f6910cfd2f396d05e3f3ca39be8", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 23, "deletions": 22, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "32f5fb1491c7b9f64d94d8ccab42702448a4e374", "filename": "gcc/ada/exp_ch9.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_ch9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "11fbc5fc29df335828ce3cb557c574a815a1eb09", "filename": "gcc/ada/exp_code.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_code.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_code.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_code.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "5897587fe36bb6b0dc73ac4f1ac9e4a593e6b219", "filename": "gcc/ada/exp_code.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_code.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_code.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_code.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "2231b9c77742456b424b4c72aeb7c5429a814258", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "0c0dd1a0b0ff67b407e4ae5a43c4a8665732fe0e", "filename": "gcc/ada/exp_dbug.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_dbug.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_dbug.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "f2d20af52d02098bd25f340878bb73c9129920a4", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 53, "deletions": 291, "changes": 344, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "cbb5ba606a33023a879f2f0fa6b82ec10f242d85", "filename": "gcc/ada/exp_disp.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_disp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_disp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "e1df9d271df53c65e252b12046be9022425476b6", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "28d33514a8e1dacb1fce5f0f75d2293898649000", "filename": "gcc/ada/exp_dist.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_dist.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_dist.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "c1e1669759a41c0f888f306b6350085580b19983", "filename": "gcc/ada/exp_fixd.adb", "status": "modified", "additions": 93, "deletions": 80, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_fixd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_fixd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_fixd.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "1188cd17235bf1eebd51c84ce78dd812ebe57faa", "filename": "gcc/ada/exp_fixd.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_fixd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_fixd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_fixd.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "6ab717c20ee3fd47a9160b61bf8728a90eaccb65", "filename": "gcc/ada/exp_imgv.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_imgv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_imgv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_imgv.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "248f7f03c4b61f9e9013d7b9d47826c15ae5c5ac", "filename": "gcc/ada/exp_imgv.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_imgv.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_imgv.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_imgv.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "bd987f089e1fdca6a8f8baed562cd37bed52a8ef", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "6162ebc424a402c1553c4ffd9d24552b4d2b1048", "filename": "gcc/ada/exp_intr.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_intr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_intr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "b39b2a7136c062d49e1b589d9c74c3cb699ddd74", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 34, "deletions": 11, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "f61ae0897305ca9a568e4ab5624f3cbbe1a162e2", "filename": "gcc/ada/exp_pakd.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_pakd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_pakd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "f434823fbb4be42c3a423424bba883bf9fa7ea65", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 41, "deletions": 37, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "ec3c5e5bc559b729b00e40d630eb680d2b7c14c6", "filename": "gcc/ada/exp_prag.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_prag.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_prag.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "50e0569a80177572ba8864103c889a19453e8aa3", "filename": "gcc/ada/exp_put_image.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_put_image.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_put_image.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_put_image.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "b2b65aa2374ae114cefb1c1ccdb1b340ca5a0f5f", "filename": "gcc/ada/exp_put_image.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_put_image.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_put_image.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_put_image.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "af83a26a23d76101ff958a0143334d33eaa8fe7b", "filename": "gcc/ada/exp_sel.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_sel.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_sel.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_sel.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "152ca5316b5af879dc5485354480e407fa75738d", "filename": "gcc/ada/exp_sel.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_sel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_sel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_sel.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "713adae91f3dd909b9ec25e0047aba1138a69e62", "filename": "gcc/ada/exp_smem.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_smem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_smem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_smem.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "7918ea944314b411b1917387d70abfb8d711ae4b", "filename": "gcc/ada/exp_smem.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_smem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_smem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_smem.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "00e0fcc58f8352c60e5e75c7dbea0ba54d897198", "filename": "gcc/ada/exp_spark.adb", "status": "modified", "additions": 308, "deletions": 16, "changes": 324, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_spark.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_spark.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_spark.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "30b1d8149058a67a2f0d3a5a1d0f15641355aa0b", "filename": "gcc/ada/exp_spark.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_spark.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_spark.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_spark.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "6eaef4e356c691b87034c3cce19f38065d5232b1", "filename": "gcc/ada/exp_strm.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_strm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_strm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_strm.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "9c88b9e01d22df5da0916ec28a3bda056523f59f", "filename": "gcc/ada/exp_strm.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_strm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_strm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_strm.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "a5d94608be45d5d3007ecc29ac211d5c405748e1", "filename": "gcc/ada/exp_tss.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_tss.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_tss.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_tss.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "cf5d988844c9d9e0931e2ab8ee5c0c5d280aeea6", "filename": "gcc/ada/exp_tss.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_tss.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_tss.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_tss.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "90a626f48fd2982b15956acb109650e8b732ac2f", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "d9b1604b75de8c858d0d3350db27993f746c4bef", "filename": "gcc/ada/exp_unst.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_unst.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_unst.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "64324bfcb72c7ac08790e41270f176d588d590e0", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 207, "deletions": 232, "changes": 439, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "0233e566b28a5595c204cd7f92d9120ee15fe782", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 48, "deletions": 37, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "13ec86967a25a71bf676f592ae250fe398e2f373", "filename": "gcc/ada/expander.adb", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexpander.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexpander.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpander.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "ca2023e627dec6123730cca821004c0533997aa0", "filename": "gcc/ada/expander.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexpander.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexpander.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpander.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "b1889feff374c03a11b9ce17ce9043a9f6b5d0b0", "filename": "gcc/ada/expect.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexpect.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fexpect.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpect.c?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "33be99e3f10308f66cfa012ca41c8e4eb891b4eb", "filename": "gcc/ada/fe.h", "status": "modified", "additions": 21, "deletions": 22, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffe.h?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "d2cbf4dbc51159dbaa790cc5a9dd1b8b7cc292dd", "filename": "gcc/ada/final.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffinal.c?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "afa9ee443308100b2ad235aec5e0dc9349c2c8b6", "filename": "gcc/ada/fmap.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffmap.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffmap.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffmap.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "cadcd1050662f7898c0af86426f8120b57438aee", "filename": "gcc/ada/fmap.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffmap.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffmap.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffmap.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "39ce267abd52eb394b89a7f64decba49281fcaea", "filename": "gcc/ada/fname-sf.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffname-sf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffname-sf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname-sf.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "d78a3680c2e8cd262bce9b1d38ee7b2da3a81f10", "filename": "gcc/ada/fname-sf.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffname-sf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffname-sf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname-sf.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "f21b0f1595917399a424b9c4c8031b7143e9eb23", "filename": "gcc/ada/fname-uf.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffname-uf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffname-uf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname-uf.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "5881fdbba2f1f103c603338edc6a74f180f1effe", "filename": "gcc/ada/fname-uf.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffname-uf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffname-uf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname-uf.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "8fa78d5655a997c67b655c1d0d6589fddfae871a", "filename": "gcc/ada/fname.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffname.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffname.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "514507649f954f17fd90428c1084330e975be103", "filename": "gcc/ada/fname.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffname.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffname.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "7ed44f591fc207867c9fecf75196536c26a802af", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 636, "deletions": 212, "changes": 848, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "749fb79803b29973716e464f23e33690567b5a6f", "filename": "gcc/ada/freeze.ads", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffreeze.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffreeze.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "c60234dc11d78b796f2f44fb41a7039200c1b130", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "d90f4e52c89ae549f6ebbcf405ea8d4094eb3987", "filename": "gcc/ada/frontend.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffrontend.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Ffrontend.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "40e7a9f670c956b3194431bfd7228d095c7f6010", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 64, "deletions": 55, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "53d0739470abf920f10336efdc193e0669eff738", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "429b14b5177f3e6c3e04a0208e54fba7999fb72a", "filename": "gcc/ada/gcc-interface/a-assert.adb", "status": "removed", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cce6b8919ce16acd37a7a203049a52925a7e295/gcc%2Fada%2Fgcc-interface%2Fa-assert.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cce6b8919ce16acd37a7a203049a52925a7e295/gcc%2Fada%2Fgcc-interface%2Fa-assert.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fa-assert.adb?ref=2cce6b8919ce16acd37a7a203049a52925a7e295"}, {"sha": "55ed806a0f4ce210912ec1e9808cf906dac2aa79", "filename": "gcc/ada/gcc-interface/a-assert.ads", "status": "removed", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cce6b8919ce16acd37a7a203049a52925a7e295/gcc%2Fada%2Fgcc-interface%2Fa-assert.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cce6b8919ce16acd37a7a203049a52925a7e295/gcc%2Fada%2Fgcc-interface%2Fa-assert.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fa-assert.ads?ref=2cce6b8919ce16acd37a7a203049a52925a7e295"}, {"sha": "0ec81bc541c2dafd2fe8db4cb38004bd99c6b6c2", "filename": "gcc/ada/gcc-interface/ada-tree.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgcc-interface%2Fada-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgcc-interface%2Fada-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fada-tree.h?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "abf8d469cc9caab58d17554bba23b2bf08e1c04b", "filename": "gcc/ada/gcc-interface/cuintp.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgcc-interface%2Fcuintp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgcc-interface%2Fcuintp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fcuintp.c?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "39a90929d4cc8a0e4892909dbac8b9fd27d73df7", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 236, "deletions": 94, "changes": 330, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "4b4a14dd3c6f3f79c0de3d7448a6adf8459fdd5c", "filename": "gcc/ada/gcc-interface/gigi.h", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgcc-interface%2Fgigi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgcc-interface%2Fgigi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fgigi.h?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "2caa83ff8cf16d208ddad7da3908917a8886bdfa", "filename": "gcc/ada/gcc-interface/misc.c", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fmisc.c?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "fb103a1cc2033b6eeddf6a602d717f46f21736a7", "filename": "gcc/ada/gcc-interface/targtyps.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgcc-interface%2Ftargtyps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgcc-interface%2Ftargtyps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftargtyps.c?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "39059cb69a456665ba18cdb707a7bf703b8a2a48", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 118, "deletions": 61, "changes": 179, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "d5dd04a4fe7bff8dd4f0585f7bccfc657081f62d", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 19, "deletions": 10, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "b651d486afbba3cf6e30be0cb63fae0f510aea04", "filename": "gcc/ada/gcc-interface/utils2.c", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgcc-interface%2Futils2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgcc-interface%2Futils2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils2.c?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "6a3e7b23836b69ed21ec040d99c970cfa3dc7f03", "filename": "gcc/ada/gen_il-fields.ads", "status": "modified", "additions": 14, "deletions": 16, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgen_il-fields.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgen_il-fields.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-fields.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "2631045e0f760a629710fe9de783467e3ec385c1", "filename": "gcc/ada/gen_il-gen-gen_entities.adb", "status": "modified", "additions": 54, "deletions": 26, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgen_il-gen-gen_entities.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgen_il-gen-gen_entities.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-gen-gen_entities.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "755f3cc76228016ee283f25c49b430f3fad53aec", "filename": "gcc/ada/gen_il-gen-gen_nodes.adb", "status": "modified", "additions": 86, "deletions": 5, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgen_il-gen-gen_nodes.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgen_il-gen-gen_nodes.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-gen-gen_nodes.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "adf363b40944021e4917c8b158b7ba1b60075b73", "filename": "gcc/ada/gen_il-gen.adb", "status": "modified", "additions": 548, "deletions": 518, "changes": 1066, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgen_il-gen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgen_il-gen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-gen.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "4233ce81b7eb71886ebf20dc0895e1e57b211bb0", "filename": "gcc/ada/gen_il-gen.ads", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgen_il-gen.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgen_il-gen.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-gen.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "cec5b94b6fc9c24d94894be541c87a648a537db5", "filename": "gcc/ada/gen_il-internals.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgen_il-internals.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgen_il-internals.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-internals.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "532630cb363834d83da0a3cbf70b02f05831cb72", "filename": "gcc/ada/gen_il-internals.ads", "status": "modified", "additions": 353, "deletions": 9, "changes": 362, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgen_il-internals.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgen_il-internals.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-internals.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "59c607445e53c804f453af9264ba66eed3a85efe", "filename": "gcc/ada/gen_il-main.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgen_il-main.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgen_il-main.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-main.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "ca85ecf384c64b0cbb15728c159869230a361616", "filename": "gcc/ada/gen_il-types.ads", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgen_il-types.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgen_il-types.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il-types.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "6ba74c14a05680b4d4dcc77b42fa8e3a0f1ebe94", "filename": "gcc/ada/gen_il.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgen_il.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgen_il.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "a4c09a6343657dd9a4a8961634c49710237523c2", "filename": "gcc/ada/gen_il.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgen_il.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgen_il.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen_il.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "782df7a4529ba558f1bdd86f27f5d89a778b5c63", "filename": "gcc/ada/get_scos.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fget_scos.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fget_scos.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fget_scos.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "3ddaa19e38927d57e16712903d536c345daf6559", "filename": "gcc/ada/get_scos.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fget_scos.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fget_scos.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fget_scos.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "60d6698079cd58dca6a73e92ecafb8b751e15eb6", "filename": "gcc/ada/get_targ.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fget_targ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fget_targ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fget_targ.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "90432255425bc3357e4ead51d7fa596fcb52f9a5", "filename": "gcc/ada/get_targ.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fget_targ.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fget_targ.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fget_targ.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "1f21c3384c9739aba31d2bb7cd101d2ffa8e9c90", "filename": "gcc/ada/ghost.adb", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fghost.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fghost.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fghost.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "21126a77697bffcb62f671f6f82db4924f5040eb", "filename": "gcc/ada/ghost.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fghost.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fghost.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fghost.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "cbc11ac40bbd88636d66d5480a5c1c01d8ceaec8", "filename": "gcc/ada/gnat-style.texi", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnat-style.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnat-style.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat-style.texi?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "f50feb2905db5bc3dd595c786a46e0c81db78646", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "13382c5b478978ce00e6a69f34d5fd80116d8741", "filename": "gcc/ada/gnat1drv.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnat1drv.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnat1drv.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "dc4261a960726eb7a4be929c9f524502ad9921b4", "filename": "gcc/ada/gnat_cuda.adb", "status": "modified", "additions": 233, "deletions": 9, "changes": 242, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnat_cuda.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnat_cuda.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_cuda.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "b5fcf8ff6311f6f3b7984883cd495223ed44d5d7", "filename": "gcc/ada/gnat_cuda.ads", "status": "modified", "additions": 10, "deletions": 22, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnat_cuda.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnat_cuda.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_cuda.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "687e2e4fb9ee1ce94ce4455db7a5b534bae8ce36", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 1795, "deletions": 1335, "changes": 3130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "b9e57c29a1b0f8af54c9eee31290720cbbaf5b77", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 192, "deletions": 173, "changes": 365, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "4c50e61617da3a1f3f8519390b40b99d93b7abb8", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "cb7262860937b15d848daca62185d38aae3391e7", "filename": "gcc/ada/gnatbind.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnatbind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnatbind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "01999716ef469a97e5f4646a3874762c3fb95087", "filename": "gcc/ada/gnatchop.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnatchop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnatchop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatchop.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "a5c5e735e9ec07b2f830c1552a71a8aa5e9b0ca5", "filename": "gcc/ada/gnatclean.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnatclean.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnatclean.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatclean.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "0062736199a00275f0d6066fbd51e54e9f5debcd", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "35b13bc169ec1705f2a96bd7787e053b090a854f", "filename": "gcc/ada/gnatcmd.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnatcmd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnatcmd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "ecc3101082a737be1171d2210056d655ba456fd8", "filename": "gcc/ada/gnatdll.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnatdll.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnatdll.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatdll.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "5df6a985d5e6d2d6445a0679e4c666c1b8b77cfb", "filename": "gcc/ada/gnatfind.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnatfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnatfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatfind.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "b59e792ab69b464f8dda965dfcbead656bc48c24", "filename": "gcc/ada/gnatkr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnatkr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnatkr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatkr.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "52112aafd694049528721efd9ced9a65ce0a9ebe", "filename": "gcc/ada/gnatkr.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnatkr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnatkr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatkr.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "613a6b260a464631f31e165ef6d11fe8178978a7", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=21af490baa734a901fb798bc2ac4df62109bc895"}, {"sha": "cb38aa219ad8a744790a6faaf66b458d0ba428e6", "filename": "gcc/ada/gnatlink.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnatlink.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21af490baa734a901fb798bc2ac4df62109bc895/gcc%2Fada%2Fgnatlink.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.ads?ref=21af490baa734a901fb798bc2ac4df62109bc895"}]}