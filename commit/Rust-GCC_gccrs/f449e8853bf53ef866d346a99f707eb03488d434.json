{"sha": "f449e8853bf53ef866d346a99f707eb03488d434", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQ0OWU4ODUzYmY1M2VmODY2ZDM0NmE5OWY3MDdlYjAzNDg4ZDQzNA==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@waitaki.otago.ac.nz", "date": "2001-09-21T04:23:31Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2001-09-21T04:23:31Z"}, "message": "posix-threads.cc (_Jv_ThreadInterrupt): Re-enable interrupt of blocking IO via pthread_kill().\n\n\t* posix-threads.cc (_Jv_ThreadInterrupt): Re-enable interrupt of\n\tblocking IO via pthread_kill().\n\t* java/io/natFileDescriptorPosix.cc (write (jint)): Check for thread\n\tinterrupted status flag only if ::write returned an error.\n\t(write (jbyteArray, jint, jint): Likewise.\n\t(read (jint)): Likewise.\n\t(read (jbyteArray, jint, jint): Likewise.\n\nFrom-SVN: r45719", "tree": {"sha": "c5d3ce7782681a64bb2752b4c6a1a0f42e3b24f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5d3ce7782681a64bb2752b4c6a1a0f42e3b24f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f449e8853bf53ef866d346a99f707eb03488d434", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f449e8853bf53ef866d346a99f707eb03488d434", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f449e8853bf53ef866d346a99f707eb03488d434", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f449e8853bf53ef866d346a99f707eb03488d434/comments", "author": null, "committer": null, "parents": [{"sha": "91d231cb917f53b4cd34dec24227863e95fceb6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91d231cb917f53b4cd34dec24227863e95fceb6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91d231cb917f53b4cd34dec24227863e95fceb6f"}], "stats": {"total": 85, "additions": 51, "deletions": 34}, "files": [{"sha": "664a232429192bce0aeb72fbc7611915c6401d54", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f449e8853bf53ef866d346a99f707eb03488d434/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f449e8853bf53ef866d346a99f707eb03488d434/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=f449e8853bf53ef866d346a99f707eb03488d434", "patch": "@@ -1,3 +1,13 @@\n+2001-09-20  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n+\n+\t* posix-threads.cc (_Jv_ThreadInterrupt): Re-enable interrupt of \n+\tblocking IO via pthread_kill().\n+\t* java/io/natFileDescriptorPosix.cc (write (jint)): Check for thread \n+\tinterrupted status flag only if ::write returned an error.\n+\t(write (jbyteArray, jint, jint): Likewise.\n+\t(read (jint)): Likewise.\n+\t(read (jbyteArray, jint, jint): Likewise.\n+\n 2001-09-19  Anthony Green  <green@redhat.com>\n \n \t* gnu/gcj/protocol/file/Handler.java: Avoid NullPointerException"}, {"sha": "7c55f562d66f8c4d7fce9b16a6819180381fcda7", "filename": "libjava/java/io/natFileDescriptorPosix.cc", "status": "modified", "additions": 40, "deletions": 33, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f449e8853bf53ef866d346a99f707eb03488d434/libjava%2Fjava%2Fio%2FnatFileDescriptorPosix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f449e8853bf53ef866d346a99f707eb03488d434/libjava%2Fjava%2Fio%2FnatFileDescriptorPosix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FnatFileDescriptorPosix.cc?ref=f449e8853bf53ef866d346a99f707eb03488d434", "patch": "@@ -125,15 +125,17 @@ java::io::FileDescriptor::write (jint b)\n   while (r != 1)\n     {\n       r = ::write (fd, &d, 1);\n-      if (java::lang::Thread::interrupted())\n-\t{\n-\t  InterruptedIOException *iioe\n-\t    = new InterruptedIOException (JvNewStringLatin1 (\"write interrupted\"));\n-\t  iioe->bytesTransferred = r == -1 ? 0 : r;\n-\t  throw iioe;\n+      if (r == -1)\n+        {\n+\t  if (java::lang::Thread::interrupted())\n+\t    {\n+\t      InterruptedIOException *iioe\n+\t\t= new InterruptedIOException (JvNewStringLatin1 (strerror (errno)));\n+\t      iioe->bytesTransferred = r == -1 ? 0 : r;\n+\t      throw iioe;\n+\t    }\t    \n+\t  throw new IOException (JvNewStringLatin1 (strerror (errno)));\n \t}\n-      else if (r == -1)\n-\tthrow new IOException (JvNewStringLatin1 (strerror (errno)));\n     }\n }\n \n@@ -150,18 +152,19 @@ java::io::FileDescriptor::write (jbyteArray b, jint offset, jint len)\n   while (len > 0)\n     {\n       int r = ::write (fd, bytes, len);\n-      if (r != -1)\n-\twritten += r;\n-      if (java::lang::Thread::interrupted())\n-\t{\n-\t  InterruptedIOException *iioe\n-\t    = new InterruptedIOException (JvNewStringLatin1 (\"write interrupted\"));\n-\t  iioe->bytesTransferred = written;\n-\t  throw iioe;\n+      if (r == -1)\n+        {\n+\t  if (java::lang::Thread::interrupted())\n+\t    {\n+\t      InterruptedIOException *iioe\n+\t\t= new InterruptedIOException (JvNewStringLatin1 (strerror (errno)));\n+\t      iioe->bytesTransferred = written;\n+\t      throw iioe;\n+\t    }\n+\t  throw new IOException (JvNewStringLatin1 (strerror (errno)));\n \t}\n-      else if (r == -1)\n-\tthrow new IOException (JvNewStringLatin1 (strerror (errno)));\n \n+      written += r;\n       len -= r;\n       bytes += r;\n     }\n@@ -222,15 +225,17 @@ java::io::FileDescriptor::read (void)\n   int r = ::read (fd, &b, 1);\n   if (r == 0)\n     return -1;\n-  if (java::lang::Thread::interrupted())\n+  if (r == -1)\n     {\n-      InterruptedIOException *iioe\n-\t= new InterruptedIOException (JvNewStringLatin1 (\"read interrupted\"));\n-      iioe->bytesTransferred = r == -1 ? 0 : r;\n-      throw iioe;\n+      if (java::lang::Thread::interrupted())\n+\t{\n+\t  InterruptedIOException *iioe\n+\t    = new InterruptedIOException (JvNewStringLatin1 (strerror (errno)));\n+\t  iioe->bytesTransferred = r == -1 ? 0 : r;\n+\t  throw iioe;\n+\t}\n+      throw new IOException (JvNewStringLatin1 (strerror (errno)));\n     }\n-  else if (r == -1)\n-    throw new IOException (JvNewStringLatin1 (strerror (errno)));\n   return b & 0xFF;\n }\n \n@@ -246,15 +251,17 @@ java::io::FileDescriptor::read (jbyteArray buffer, jint offset, jint count)\n   int r = ::read (fd, bytes, count);\n   if (r == 0)\n     return -1;\n-  if (java::lang::Thread::interrupted())\n-    {\n-      InterruptedIOException *iioe\n-\t= new InterruptedIOException (JvNewStringLatin1 (\"read interrupted\"));\n-      iioe->bytesTransferred = r == -1 ? 0 : r;\n-      throw iioe;\n+  if (r == -1)\n+    {    \n+      if (java::lang::Thread::interrupted())\n+\t{\n+\t  InterruptedIOException *iioe\n+\t    = new InterruptedIOException (JvNewStringLatin1 (strerror (errno)));\n+\t  iioe->bytesTransferred = r == -1 ? 0 : r;\n+\t  throw iioe;\n+\t}\n+      throw new IOException (JvNewStringLatin1 (strerror (errno)));\n     }\n-  else if (r == -1)\n-    throw new IOException (JvNewStringLatin1 (strerror (errno)));\n   return r;\n }\n "}, {"sha": "10cfcbae9b30febfbab280e195863a2d34489f12", "filename": "libjava/posix-threads.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f449e8853bf53ef866d346a99f707eb03488d434/libjava%2Fposix-threads.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f449e8853bf53ef866d346a99f707eb03488d434/libjava%2Fposix-threads.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fposix-threads.cc?ref=f449e8853bf53ef866d346a99f707eb03488d434", "patch": "@@ -263,7 +263,7 @@ _Jv_ThreadInterrupt (_Jv_Thread_t *data)\n   data->thread_obj->interrupt_flag = true;\n \n   // Interrupt blocking system calls using a signal.\n-//  pthread_kill (data->thread, INTR);\n+  pthread_kill (data->thread, INTR);\n   \n   pthread_cond_signal (&data->wait_cond);\n   "}]}