{"sha": "ae8358d69a0f237f466185b41396bb735793b460", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU4MzU4ZDY5YTBmMjM3ZjQ2NjE4NWI0MTM5NmJiNzM1NzkzYjQ2MA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-11-23T15:15:50Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-11-23T15:15:50Z"}, "message": "md.texi (386 constraints): Clarify A constraint documentation.\n\n2010-11-23  Richard Guenther  <rguenther@suse.de>\n\n\t* doc/md.texi (386 constraints): Clarify A constraint documentation.\n\nFrom-SVN: r167081", "tree": {"sha": "e6ca3adbfdc127ec320230bfd3049f644e25661d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6ca3adbfdc127ec320230bfd3049f644e25661d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae8358d69a0f237f466185b41396bb735793b460", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae8358d69a0f237f466185b41396bb735793b460", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae8358d69a0f237f466185b41396bb735793b460", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae8358d69a0f237f466185b41396bb735793b460/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "412dc29d628f7b523790a34042a3c55e77ed1f9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/412dc29d628f7b523790a34042a3c55e77ed1f9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/412dc29d628f7b523790a34042a3c55e77ed1f9f"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "9fcd937962810f7bc5b924983e368ace16703964", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8358d69a0f237f466185b41396bb735793b460/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8358d69a0f237f466185b41396bb735793b460/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae8358d69a0f237f466185b41396bb735793b460", "patch": "@@ -1,3 +1,7 @@\n+2010-11-23  Richard Guenther  <rguenther@suse.de>\n+\n+\t* doc/md.texi (386 constraints): Clarify A constraint documentation.\n+\n 2010-11-23  Basile Starynkevitch  <basile@starynkevitch.net>\n \t    Jeremie Salvucci  <jeremie.salvucci@free.fr>\n "}, {"sha": "677ea02b6e59bb74bc3dababa4077787536353a9", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae8358d69a0f237f466185b41396bb735793b460/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae8358d69a0f237f466185b41396bb735793b460/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=ae8358d69a0f237f466185b41396bb735793b460", "patch": "@@ -2101,8 +2101,32 @@ The @code{si} register.\n The @code{di} register.\n \n @item A\n-The @code{a} and @code{d} registers, as a pair (for instructions that\n-return half the result in one and half in the other).\n+The @code{a} and @code{d} registers.  This class is used for instructions\n+that return double word results in the @code{ax:dx} register pair.  Single\n+word values will be allocated either in @code{ax} or @code{dx}.\n+For example on i386 the following implements @code{rdtsc}:\n+\n+@smallexample\n+unsigned long long rdtsc (void)\n+@{\n+  unsigned long long tick;\n+  __asm__ __volatile__(\"rdtsc\":\"=A\"(tick));\n+  return tick;\n+@}\n+@end smallexample\n+\n+This is not correct on x86_64 as it would allocate tick in either @code{ax}\n+or @code{dx}.  You have to use the following variant instead:\n+\n+@smallexample\n+unsigned long long rdtsc (void)\n+@{\n+  unsigned int tickl, tickh;\n+  __asm__ __volatile__(\"rdtsc\":\"=a\"(tickl),\"=d\"(tickh));\n+  return ((unsigned long long)tickh << 32)|tickl;\n+@}\n+@end smallexample\n+\n \n @item f\n Any 80387 floating-point (stack) register."}]}