{"sha": "e361e9a1dbb5b357207de2b6459b8f69f96420da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM2MWU5YTFkYmI1YjM1NzIwN2RlMmI2NDU5YjhmNjlmOTY0MjBkYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-20T09:08:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-20T09:08:55Z"}, "message": "[multiple changes]\n\n2016-04-20  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_ch5.adb (Analyze_Iterator_Specification): Remove transient\n\tscope associated with the renaming object declaration.\n\t* exp_util.adb (Insert_Actions): Remove handling of iterator\n\tloop marked as requiring the secondary stack.\n\n2016-04-20  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_attr.adb (Analyze_Attribute, case 'Image): Implement\n\tAI12-0124, which extends the functionality of the attribute so it\n\treflects the semantics of GNAT 'Img when applied to scalar types.\n\t* lib-xref.adb: minor whitespace layout fix.\n\nFrom-SVN: r235242", "tree": {"sha": "601763d688f331606803f2039b3d8354dfdcc11a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/601763d688f331606803f2039b3d8354dfdcc11a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e361e9a1dbb5b357207de2b6459b8f69f96420da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e361e9a1dbb5b357207de2b6459b8f69f96420da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e361e9a1dbb5b357207de2b6459b8f69f96420da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e361e9a1dbb5b357207de2b6459b8f69f96420da/comments", "author": null, "committer": null, "parents": [{"sha": "d67ffa886d642c7a08441023971a3c5099b58d4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d67ffa886d642c7a08441023971a3c5099b58d4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d67ffa886d642c7a08441023971a3c5099b58d4e"}], "stats": {"total": 73, "additions": 40, "deletions": 33}, "files": [{"sha": "e6bc859a22a1139fa59bde12fa5dc6a912d2bde9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e361e9a1dbb5b357207de2b6459b8f69f96420da/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e361e9a1dbb5b357207de2b6459b8f69f96420da/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e361e9a1dbb5b357207de2b6459b8f69f96420da", "patch": "@@ -1,3 +1,17 @@\n+2016-04-20  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch5.adb (Analyze_Iterator_Specification): Remove transient\n+\tscope associated with the renaming object declaration.\n+\t* exp_util.adb (Insert_Actions): Remove handling of iterator\n+\tloop marked as requiring the secondary stack.\n+\n+2016-04-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_attr.adb (Analyze_Attribute, case 'Image): Implement\n+\tAI12-0124, which extends the functionality of the attribute so it\n+\treflects the semantics of GNAT 'Img when applied to scalar types.\n+\t* lib-xref.adb: minor whitespace layout fix.\n+\n 2016-04-20  Vincent Celier  <celier@adacore.com>\n \n \t* clean.adb (Gnatclean): Fail if project file specified and"}, {"sha": "8ffbfa31bf0e59092259cb6f4abfa5b988ff587c", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e361e9a1dbb5b357207de2b6459b8f69f96420da/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e361e9a1dbb5b357207de2b6459b8f69f96420da/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=e361e9a1dbb5b357207de2b6459b8f69f96420da", "patch": "@@ -4075,22 +4075,6 @@ package body Exp_Util is\n                   end if;\n \n                   return;\n-\n-               --  Iteration scheme located in a transient scope\n-\n-               elsif Nkind (P) = N_Iteration_Scheme\n-                 and then Present (Wrapped_Node)\n-               then\n-                  --  If the enclosing iterator loop is marked as requiring the\n-                  --  secondary stack then the actions must be inserted in the\n-                  --  transient scope.\n-\n-                  if Uses_Sec_Stack\n-                       (Find_Enclosing_Iterator_Loop (Current_Scope))\n-                  then\n-                     Store_Before_Actions_In_Scope (Ins_Actions);\n-                     return;\n-                  end if;\n                end if;\n \n             --  Statements, declarations, pragmas, representation clauses"}, {"sha": "d64b4b25d2288a2750d907fab6888123b0b3fcde", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e361e9a1dbb5b357207de2b6459b8f69f96420da/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e361e9a1dbb5b357207de2b6459b8f69f96420da/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=e361e9a1dbb5b357207de2b6459b8f69f96420da", "patch": "@@ -1174,8 +1174,7 @@ package body Lib.Xref is\n       while Present (Formal) loop\n          if Ekind (Formal) = E_In_Parameter then\n \n-            if Nkind (Parameter_Type (Parent (Formal)))\n-              = N_Access_Definition\n+            if Nkind (Parameter_Type (Parent (Formal))) = N_Access_Definition\n             then\n                Generate_Reference (E, Formal, '^', False);\n             else"}, {"sha": "a9bb2ff8240f73a3b1421256d064d4b01f61a4d7", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e361e9a1dbb5b357207de2b6459b8f69f96420da/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e361e9a1dbb5b357207de2b6459b8f69f96420da/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=e361e9a1dbb5b357207de2b6459b8f69f96420da", "patch": "@@ -3917,10 +3917,30 @@ package body Sem_Attr is\n       -- Image --\n       -----------\n \n-      when Attribute_Image => Image :\n-      begin\n+      when Attribute_Image => Image : begin\n          Check_SPARK_05_Restriction_On_Attribute;\n-         Check_Scalar_Type;\n+\n+         --  AI12-00124-1 : The ARG has adopted the GNAT semantics of 'Img\n+         --  for scalar types, so that the prefix can be an object and not\n+         --  a type, and there is no need for an argument. Given this vote\n+         --  of confidence from the ARG, simplest is to transform this new\n+         --  usage of 'Image into a reference to 'Img.\n+\n+         if Ada_Version > Ada_2005\n+           and then Is_Object_Reference (P)\n+           and then Is_Scalar_Type (P_Type)\n+         then\n+            Rewrite (N,\n+              Make_Attribute_Reference (Loc,\n+                Prefix         => Relocate_Node (P),\n+                Attribute_Name => Name_Img));\n+            Analyze (N);\n+            return;\n+\n+         else\n+            Check_Scalar_Type;\n+         end if;\n+\n          Set_Etype (N, Standard_String);\n \n          if Is_Real_Type (P_Type) then"}, {"sha": "1a9692cbdb6ff88738a97deeabd0f06bf38a0268", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e361e9a1dbb5b357207de2b6459b8f69f96420da/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e361e9a1dbb5b357207de2b6459b8f69f96420da/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=e361e9a1dbb5b357207de2b6459b8f69f96420da", "patch": "@@ -30,7 +30,6 @@ with Einfo;    use Einfo;\n with Errout;   use Errout;\n with Expander; use Expander;\n with Exp_Ch6;  use Exp_Ch6;\n-with Exp_Ch7;  use Exp_Ch7;\n with Exp_Util; use Exp_Util;\n with Freeze;   use Freeze;\n with Ghost;    use Ghost;\n@@ -1997,16 +1996,6 @@ package body Sem_Ch5 is\n                 Name                =>\n                   New_Copy_Tree (Iter_Name, New_Sloc => Loc));\n \n-            --  Create a transient scope to ensure that all the temporaries\n-            --  generated by Remove_Side_Effects as part of processing this\n-            --  renaming declaration (if any) are attached by Insert_Actions\n-            --  to it. It has no effect on the generated code if no actions\n-            --  are added to it (see Wrap_Transient_Declaration).\n-\n-            if not Is_Array_Type (Typ) and then Expander_Active then\n-               Establish_Transient_Scope (Name (Decl), Sec_Stack => True);\n-            end if;\n-\n             Insert_Actions (Parent (Parent (N)), New_List (Decl));\n             Rewrite (Name (N), New_Occurrence_Of (Id, Loc));\n             Set_Etype (Id, Typ);\n@@ -2019,7 +2008,7 @@ package body Sem_Ch5 is\n       --  Iterate is not a reserved name. What matters is that the return type\n       --  of the function is an iterator type.\n \n-      elsif Is_Entity_Name (Iter_Name) or else not Expander_Active then\n+      elsif Is_Entity_Name (Iter_Name) then\n          Analyze (Iter_Name);\n \n          if Nkind (Iter_Name) = N_Function_Call then\n@@ -2313,6 +2302,7 @@ package body Sem_Ch5 is\n \n             else\n                Set_Etype (Def_Id, Get_Cursor_Type (Typ));\n+               Check_Reverse_Iteration (Etype (Iter_Name));\n             end if;\n \n          end if;"}]}