{"sha": "ce94d12f67d02e9772add99f21c1d1abebd82085", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U5NGQxMmY2N2QwMmU5NzcyYWRkOTlmMjFjMWQxYWJlYmQ4MjA4NQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-12-27T15:29:52Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-12-27T15:29:52Z"}, "message": "stdio-opt-1.c: Test __builtin_ style too.\n\n\t* gcc.c-torture/execute/stdio-opt-1.c: Test __builtin_ style too.\n\t* gcc.c-torture/execute/stdio-opt-2.c: Likewise.\n\t* gcc.c-torture/execute/string-opt-1.c: Likewise.\n\t* gcc.c-torture/execute/string-opt-2.c: Likewise.\n\t* gcc.c-torture/execute/string-opt-3.c: Likewise.\n\t* gcc.c-torture/execute/string-opt-4.c: Likewise.\n\t* gcc.c-torture/execute/string-opt-6.c: Likewise.\n\t* gcc.c-torture/execute/string-opt-7.c: Likewise.\n\t* gcc.c-torture/execute/string-opt-8.c: Likewise.\n\t* gcc.c-torture/execute/string-opt-9.c: Likewise.\n\t* gcc.c-torture/execute/string-opt-10.c: Likewise.\n\t* gcc.c-torture/execute/string-opt-11.c: Likewise.\n\t* gcc.c-torture/execute/string-opt-12.c: Likewise.\n\n\t* gcc.c-torture/execute/string-opt-3.c: Test rindex.\n\t* gcc.c-torture/execute/string-opt-4.c: Test index.\n\nFrom-SVN: r38497", "tree": {"sha": "6648e6add43c6bbb62a70d9b05dc47a582d77a25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6648e6add43c6bbb62a70d9b05dc47a582d77a25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce94d12f67d02e9772add99f21c1d1abebd82085", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce94d12f67d02e9772add99f21c1d1abebd82085", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce94d12f67d02e9772add99f21c1d1abebd82085", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce94d12f67d02e9772add99f21c1d1abebd82085/comments", "author": null, "committer": null, "parents": [{"sha": "0a1bb917fc6358da39f7b7fa9a56e20b64c80f20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a1bb917fc6358da39f7b7fa9a56e20b64c80f20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a1bb917fc6358da39f7b7fa9a56e20b64c80f20"}], "stats": {"total": 129, "additions": 119, "deletions": 10}, "files": [{"sha": "524b5b1571166ba0d5387eed7dea1408ef4446eb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ce94d12f67d02e9772add99f21c1d1abebd82085", "patch": "@@ -1,3 +1,22 @@\n+2000-12-27  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* gcc.c-torture/execute/stdio-opt-1.c: Test __builtin_ style too.\n+\t* gcc.c-torture/execute/stdio-opt-2.c: Likewise.\n+\t* gcc.c-torture/execute/string-opt-1.c: Likewise.\n+\t* gcc.c-torture/execute/string-opt-2.c: Likewise.\n+\t* gcc.c-torture/execute/string-opt-3.c: Likewise.\n+\t* gcc.c-torture/execute/string-opt-4.c: Likewise.\n+\t* gcc.c-torture/execute/string-opt-6.c: Likewise.\n+\t* gcc.c-torture/execute/string-opt-7.c: Likewise.\n+\t* gcc.c-torture/execute/string-opt-8.c: Likewise.\n+\t* gcc.c-torture/execute/string-opt-9.c: Likewise.\n+\t* gcc.c-torture/execute/string-opt-10.c: Likewise.\n+\t* gcc.c-torture/execute/string-opt-11.c: Likewise.\n+\t* gcc.c-torture/execute/string-opt-12.c: Likewise.\n+\n+\t* gcc.c-torture/execute/string-opt-3.c: Test rindex.\n+\t* gcc.c-torture/execute/string-opt-4.c: Test index.\n+\n 2000-12-26  Geoffrey Keating  <geoffk@redhat.com>\n \n \t* gcc.c-torture/compile/20001226-1.c: New test."}, {"sha": "061946fd2af684b43099c49c7b866e866d81f4d7", "filename": "gcc/testsuite/gcc.c-torture/execute/stdio-opt-1.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstdio-opt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstdio-opt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstdio-opt-1.c?ref=ce94d12f67d02e9772add99f21c1d1abebd82085", "patch": "@@ -42,6 +42,11 @@ int main()\n   if (s_ptr != s_array+1 || *s_ptr != 0)\n     abort();\n \n+  /* Test at least one instance of the __builtin_ style.  We do this\n+     to ensure that it works and that the prototype is correct.  */\n+  s_ptr = s_array;\n+  __builtin_fputs (\"\", *s_ptr);\n+\n   return 0;\n }\n "}, {"sha": "1e303361a116e109fca33943878b3faae9012067", "filename": "gcc/testsuite/gcc.c-torture/execute/stdio-opt-2.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstdio-opt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstdio-opt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstdio-opt-2.c?ref=ce94d12f67d02e9772add99f21c1d1abebd82085", "patch": "@@ -30,6 +30,10 @@ int main()\n   printf (\"\\n\");\n   printf (\"hello world\\n\");\n   \n+  /* Test at least one instance of the __builtin_ style.  We do this\n+     to ensure that it works and that the prototype is correct.  */\n+  __builtin_printf (\"%s\\n\", \"hello\");\n+\n   return 0;\n }\n "}, {"sha": "2210a04e29704b7df6576f531a3b1e5c7870b3b3", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-1.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-1.c?ref=ce94d12f67d02e9772add99f21c1d1abebd82085", "patch": "@@ -25,6 +25,11 @@ int main()\n   if (strstr (foo + 1, \"world\") != foo + 6)\n     abort();\n \n+  /* Test at least one instance of the __builtin_ style.  We do this\n+     to ensure that it works and that the prototype is correct.  */\n+  if (__builtin_strstr (foo + 1, \"world\") != foo + 6)\n+    abort();\n+  \n   return 0;\n }\n "}, {"sha": "e1a271d0aeb8c84d6cc79471cfde00354734aed5", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-10.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-10.c?ref=ce94d12f67d02e9772add99f21c1d1abebd82085", "patch": "@@ -63,6 +63,12 @@ int main ()\n       || strcmp (dst, \"hello world world\"))\n     abort();\n \n+  /* Test at least one instance of the __builtin_ style.  We do this\n+     to ensure that it works and that the prototype is correct.  */\n+  strcpy (dst, s1);\n+  if (__builtin_strncat (dst, \"\", 100) != dst || strcmp (dst, s1))\n+    abort();\n+\n   return 0;\n }\n "}, {"sha": "cad19c945b29ea23f6d6dc0b690eeaf660adc86f", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-11.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-11.c?ref=ce94d12f67d02e9772add99f21c1d1abebd82085", "patch": "@@ -46,6 +46,11 @@ int main ()\n   if (strspn (\"\", ++d2+5) != 0 || d2 != dst+1)\n     abort();\n \n+  /* Test at least one instance of the __builtin_ style.  We do this\n+     to ensure that it works and that the prototype is correct.  */\n+  if (__builtin_strspn (s1, \"hello\") != 5)\n+    abort();\n+\n   return 0;\n }\n "}, {"sha": "b9df9c2d1cb36ad233b77a5d1aebef7bc84f8375", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-12.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-12.c?ref=ce94d12f67d02e9772add99f21c1d1abebd82085", "patch": "@@ -46,6 +46,11 @@ int main ()\n   if (strcspn (\"\", ++d2+5) != 0 || d2 != dst+1)\n     abort();\n \n+  /* Test at least one instance of the __builtin_ style.  We do this\n+     to ensure that it works and that the prototype is correct.  */\n+  if (__builtin_strcspn (s1, \"z\") != 11)\n+    abort();\n+\n   return 0;\n }\n "}, {"sha": "7b9bcbf873dfeb5d62b09050543160842ea92d78", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-2.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-2.c?ref=ce94d12f67d02e9772add99f21c1d1abebd82085", "patch": "@@ -7,6 +7,7 @@\n \n extern void abort(void);\n extern char *strpbrk (const char *, const char *);\n+extern int strcmp (const char *, const char *);\n \n void fn (const char *foo, const char *const *bar)\n {\n@@ -26,6 +27,11 @@ void fn (const char *foo, const char *const *bar)\n     abort();\n   if (strpbrk (foo + 6, \"o\") != foo + 7)\n     abort();\n+\n+  /* Test at least one instance of the __builtin_ style.  We do this\n+     to ensure that it works and that the prototype is correct.  */\n+  if (__builtin_strpbrk (foo + 6, \"o\") != foo + 7)\n+    abort();\n }\n \n int main()"}, {"sha": "61718f2900f6ffa5e73bd4c4aba45c016528ecc6", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-3.c", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-3.c?ref=ce94d12f67d02e9772add99f21c1d1abebd82085", "patch": "@@ -9,6 +9,7 @@ extern void abort (void);\n extern __SIZE_TYPE__ strlen (const char *);\n extern int strcmp (const char *, const char *);\n extern char *strrchr (const char *, int);\n+extern char *rindex (const char *, int);\n \n int x = 6;\n char *bar = \"hi world\";\n@@ -67,11 +68,20 @@ int main()\n     abort ();\n   if (x != 8)\n     abort ();\n-  /* For systems which don't have rindex, we test the __builtin_\n-     version to avoid spurious link failures at -O0.  We only need to\n-     test one case since everything is handled in the same code path\n-     as builtin strrchr.  */\n-  if (__builtin_rindex (\"hello\", 'z') != 0)\n+  /* Test only one instance of rindex since the code path is the same\n+     as that of strrchr. */\n+  if (rindex (\"hello\", 'z') != 0)\n+    abort ();\n+\n+  /* Test at least one instance of the __builtin_ style.  We do this\n+     to ensure that it works and that the prototype is correct.  */\n+  if (__builtin_rindex (foo, 'o') != foo + 7)\n+    abort ();\n+  if (__builtin_strrchr (foo, 'o') != foo + 7)\n+    abort ();\n+  if (__builtin_strlen (foo) != 11)\n+    abort ();\n+  if (__builtin_strcmp (foo, \"hello\") <= 0)\n     abort ();\n \n   return 0;\n@@ -80,7 +90,14 @@ int main()\n static char *\n rindex (const char *s, int c)\n {\n+  /* For systems which don't have rindex, we ensure no link failures\n+     occur by always providing a backup definition.  During\n+     optimization this function aborts to catch errors.  */\n+#ifdef __OPTIMIZE__\n   abort ();\n+#else\n+  return strrchr(s, c);\n+#endif\n }\n \n #ifdef __OPTIMIZE__"}, {"sha": "d82bb69a2abac98e8e0f39af50f26fea47c5e054", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-4.c", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-4.c?ref=ce94d12f67d02e9772add99f21c1d1abebd82085", "patch": "@@ -7,6 +7,7 @@\n \n extern void abort (void);\n extern char *strchr (const char *, int);\n+extern char *index (const char *, int);\n \n int main()\n {\n@@ -20,11 +21,16 @@ int main()\n     abort ();\n   if (strchr (foo, '\\0')  != foo + 11)\n     abort ();\n-  /* For systems which don't have index, we test the __builtin_\n-     version to avoid spurious link failures at -O0.  We only need to\n-     test one case since everything is handled in the same code path\n-     as builtin strchr.  */\n-  if (__builtin_index (\"hello\", 'z')  != 0)\n+  /* Test only one instance of index since the code path is the same\n+     as that of strchr. */\n+  if (index (\"hello\", 'z')  != 0)\n+    abort ();\n+\n+  /* Test at least one instance of the __builtin_ style.  We do this\n+     to ensure that it works and that the prototype is correct.  */\n+  if (__builtin_strchr (foo, 'o')  != foo + 4)\n+    abort ();\n+  if (__builtin_index (foo, 'o')  != foo + 4)\n     abort ();\n \n   return 0;\n@@ -33,7 +39,14 @@ int main()\n static char *\n index (const char *s, int c)\n {\n+  /* For systems which don't have index, we ensure no link failures\n+     occur by always providing a backup definition.  During\n+     optimization this function aborts to catch errors.  */\n+#ifdef __OPTIMIZE__\n   abort ();\n+#else\n+  return strchr(s, c);\n+#endif\n }\n \n #ifdef __OPTIMIZE__"}, {"sha": "efd502f7b8311187bbb50af298dce547e274f646", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-6.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-6.c?ref=ce94d12f67d02e9772add99f21c1d1abebd82085", "patch": "@@ -31,6 +31,13 @@ int main()\n   if (memcpy (p + 3, \"FGHI\", 4) != p + 3 || memcmp (p, \"A\\0CFGHIj\", 9))\n     abort ();\n \n+  /* Test at least one instance of the __builtin_ style.  We do this\n+     to ensure that it works and that the prototype is correct.  */\n+  if (__builtin_strcpy (p, \"abcde\") != p || memcmp (p, \"abcde\", 6))\n+    abort ();\n+  if (__builtin_memcpy (p, \"ABCDE\", 6) != p || memcmp (p, \"ABCDE\", 6))\n+    abort ();\n+\n   return 0;\n }\n "}, {"sha": "144d9f110729cebd3fdff41dabad1e5444385039", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-7.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-7.c?ref=ce94d12f67d02e9772add99f21c1d1abebd82085", "patch": "@@ -56,6 +56,12 @@ int main ()\n   if (strncpy (dst, src, 12) != dst || strcmp (dst, src))\n     abort();\n \n+  /* Test at least one instance of the __builtin_ style.  We do this\n+     to ensure that it works and that the prototype is correct.  */\n+  memset (dst, 0, sizeof (dst));\n+  if (__builtin_strncpy (dst, src, 4) != dst || strncmp (dst, src, 4))\n+    abort();\n+\n   return 0;\n }\n "}, {"sha": "6a4edb5d6411873721b6da5df8bae6857d19f782", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-8.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-8.c?ref=ce94d12f67d02e9772add99f21c1d1abebd82085", "patch": "@@ -142,6 +142,11 @@ int main ()\n     abort();\n #endif  \n   \n+  /* Test at least one instance of the __builtin_ style.  We do this\n+     to ensure that it works and that the prototype is correct.  */\n+  if (__builtin_strncmp (\"hello\", \"a\", 100) <= 0)\n+    abort();\n+\n   return 0;\n }\n "}, {"sha": "ba248a06ad745ff2db2a1012bd66a743472eb45e", "filename": "gcc/testsuite/gcc.c-torture/execute/string-opt-9.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce94d12f67d02e9772add99f21c1d1abebd82085/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fstring-opt-9.c?ref=ce94d12f67d02e9772add99f21c1d1abebd82085", "patch": "@@ -33,6 +33,12 @@ int main ()\n   if (strcat (++d2+5, s1+11) != dst+6 || d2 != dst+1 || strcmp (dst, s1))\n     abort();\n \n+  /* Test at least one instance of the __builtin_ style.  We do this\n+     to ensure that it works and that the prototype is correct.  */\n+  strcpy (dst, s1);\n+  if (__builtin_strcat (dst, \"\") != dst || strcmp (dst, s1))\n+    abort();\n+\n   return 0;\n }\n "}]}