{"sha": "8ff7f8241579ba8823310c4f05e267f8a24951a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZmN2Y4MjQxNTc5YmE4ODIzMzEwYzRmMDVlMjY3ZjhhMjQ5NTFhMg==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernd.schmidt@analog.com", "date": "2009-09-07T15:13:40Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2009-09-07T15:13:40Z"}, "message": "bfin.c (bfin_optimize_loop): When creating a new basic block, ensure it has an exit edge.\n\ngcc/\n\t* config/bfin/bfin.c (bfin_optimize_loop): When creating a new basic\n\tblock, ensure it has an exit edge.  Emit a barrier after a jump.\n\ngcc/testsuite/\n\t* gcc.c-torture/compile/20090907-1.c: New test.\n\nFrom-SVN: r151479", "tree": {"sha": "f980a018af60905eeae9faae47978b3508541206", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f980a018af60905eeae9faae47978b3508541206"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ff7f8241579ba8823310c4f05e267f8a24951a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ff7f8241579ba8823310c4f05e267f8a24951a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ff7f8241579ba8823310c4f05e267f8a24951a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ff7f8241579ba8823310c4f05e267f8a24951a2/comments", "author": null, "committer": null, "parents": [{"sha": "3beb864c19b34fc0e4dcfdc12e65f4b4a3eeddce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3beb864c19b34fc0e4dcfdc12e65f4b4a3eeddce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3beb864c19b34fc0e4dcfdc12e65f4b4a3eeddce"}], "stats": {"total": 99, "additions": 98, "deletions": 1}, "files": [{"sha": "20a5e68e59bd82aa5aa742f9c3d012f2d1988764", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ff7f8241579ba8823310c4f05e267f8a24951a2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ff7f8241579ba8823310c4f05e267f8a24951a2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8ff7f8241579ba8823310c4f05e267f8a24951a2", "patch": "@@ -1,3 +1,8 @@\n+2009-09-07  Bernd Schmidt  <bernd.schmidt@analog.com>\n+\n+\t* config/bfin/bfin.c (bfin_optimize_loop): When creating a new basic\n+\tblock, ensure it has an exit edge.  Emit a barrier after a jump.\n+\n 2009-09-07  Nick Clifton  <nickc@redhat.com>\n \n \t* gcc.c (this_is_linker_script): New variable.  Like"}, {"sha": "29c00323f75288867d2a429cb430839d4d10c23c", "filename": "gcc/config/bfin/bfin.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ff7f8241579ba8823310c4f05e267f8a24951a2/gcc%2Fconfig%2Fbfin%2Fbfin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ff7f8241579ba8823310c4f05e267f8a24951a2/gcc%2Fconfig%2Fbfin%2Fbfin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.c?ref=8ff7f8241579ba8823310c4f05e267f8a24951a2", "patch": "@@ -4185,7 +4185,10 @@ bfin_optimize_loop (loop_info loop)\n \t  seq_end = emit_insn (copy_rtx (PATTERN (last_insn)));\n \t}\n       else\n-\tseq_end = emit_jump_insn (gen_jump (label));\n+\t{\n+\t  emit_jump_insn (gen_jump (label));\n+\t  seq_end = emit_barrier ();\n+\t}\n     }\n \n   seq = get_insns ();\n@@ -4233,6 +4236,7 @@ bfin_optimize_loop (loop_info loop)\n \t  else\n \t    redirect_edge_succ (e, new_bb);\n \t}\n+      e = make_edge (new_bb, loop->head, 0);\n     }\n \n   delete_insn (loop->loop_end);"}, {"sha": "bdd1391f4af359e213dff2779bb4253444ab9037", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ff7f8241579ba8823310c4f05e267f8a24951a2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ff7f8241579ba8823310c4f05e267f8a24951a2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8ff7f8241579ba8823310c4f05e267f8a24951a2", "patch": "@@ -1,3 +1,7 @@\n+2009-09-07  Bernd Schmidt  <bernd.schmidt@analog.com>\n+\n+\t* gcc.c-torture/compile/20090907-1.c: New test.\n+\n 2009-09-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/41241"}, {"sha": "907574c4230c83e513250ffc798f52dc68117e9c", "filename": "gcc/testsuite/gcc.c-torture/compile/20090907-1.c", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ff7f8241579ba8823310c4f05e267f8a24951a2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20090907-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ff7f8241579ba8823310c4f05e267f8a24951a2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20090907-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20090907-1.c?ref=8ff7f8241579ba8823310c4f05e267f8a24951a2", "patch": "@@ -0,0 +1,84 @@\n+struct platform_device;\n+typedef unsigned long __kernel_size_t;\n+typedef unsigned short __u16;\n+typedef unsigned int __u32;\n+typedef unsigned char u8;\n+typedef unsigned short u16;\n+typedef __kernel_size_t size_t;\n+typedef __u32 uint32_t;\n+static inline __attribute__ ((always_inline))\n+uint32_t __attribute__ ((pure)) bfin_dspid (void)\n+{\n+    return ( {\n+\t    uint32_t __v; __v;}\n+    );\n+}\n+struct list_head {\n+    struct list_head *next, *prev;\n+};\n+struct page {\n+    union {\n+    };\n+    struct list_head lru;\n+};\n+struct device_driver {\n+    const char *name;\n+    struct module *owner;\n+};\n+struct fb_info {\n+    struct device *dev;\n+};\n+struct platform_driver {\n+    int (*probe) (struct platform_device *);\n+    int (*remove) (struct platform_device *);\n+    struct device_driver driver;\n+};\n+struct firmware {\n+    size_t size;\n+    const u8 *data;\n+};\n+struct metronomefb_par {\n+    struct fb_info *info;\n+};\n+struct waveform_hdr {\n+    u8 trc;\n+};\n+static u8 calc_cksum (int start, int end, u8 * mem)\n+{\n+    u8 tmp = 0;\n+    int i;\n+    for (i = start; i < end; i++)\n+\ttmp += mem[i];\n+    return tmp;\n+}\n+extern struct waveform_hdr *wfm_hdr;\n+extern int wmta;\n+\n+static int\n+load_waveform (u8 * mem, size_t size, int m, int t, struct metronomefb_par *par)\n+{\n+    int tta;\n+    int trn = 0;\n+    int i;\n+    u8 cksum;\n+    int cksum_idx;\n+    struct device *dev = par->info->dev;\n+    for (i = 0; i <= sizeof (*wfm_hdr) + wfm_hdr->trc; i++) {\n+\tif (mem[i] > t) {\n+\t    trn = i - sizeof (*wfm_hdr) - 1;\n+\t}\n+    }\n+    tta = * (mem + wmta + m * 4) & 0x00FFFFFF;\n+    cksum_idx = tta + trn * 4 + 3;\n+    cksum = calc_cksum (cksum_idx - 3, cksum_idx, mem);\n+    if (cksum != mem[cksum_idx]) {\n+\tabort();\n+    }\n+}\n+extern struct firmware *fw_entry;\n+extern struct metronomefb_par *par;\n+\n+int metronomefb_probe (struct platform_device *dev)\n+{\n+\treturn load_waveform ((u8 *) fw_entry->data, fw_entry->size, 3, 31, par);\n+}"}]}