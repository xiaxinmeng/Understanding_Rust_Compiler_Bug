{"sha": "49779c98ffb4c5e9d8ed3d413e09119f4adeaeef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk3NzljOThmZmI0YzVlOWQ4ZWQzZDQxM2UwOTExOWY0YWRlYWVlZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-20T10:20:02Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-20T10:20:02Z"}, "message": "[multiple changes]\n\n2017-01-20  Arnaud Charlet  <charlet@adacore.com>\n\n\t* exp_ch3.adb: Reenable code.\n\n2017-01-20  Yannick Moy  <moy@adacore.com>\n\n\t* sinfo.ads: Document lack of Do_Division_Check flag\n\ton float exponentiation.\n\nFrom-SVN: r244693", "tree": {"sha": "536e5ae32ad16aa8c9ed61eba69005e07b13a686", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/536e5ae32ad16aa8c9ed61eba69005e07b13a686"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49779c98ffb4c5e9d8ed3d413e09119f4adeaeef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49779c98ffb4c5e9d8ed3d413e09119f4adeaeef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49779c98ffb4c5e9d8ed3d413e09119f4adeaeef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49779c98ffb4c5e9d8ed3d413e09119f4adeaeef/comments", "author": null, "committer": null, "parents": [{"sha": "0ce4024a35d3807931eaa7328308dbb45b7f65e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ce4024a35d3807931eaa7328308dbb45b7f65e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ce4024a35d3807931eaa7328308dbb45b7f65e7"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "9ad60015b0ebb60ef540612712a2562f38856c09", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49779c98ffb4c5e9d8ed3d413e09119f4adeaeef/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49779c98ffb4c5e9d8ed3d413e09119f4adeaeef/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=49779c98ffb4c5e9d8ed3d413e09119f4adeaeef", "patch": "@@ -1,3 +1,12 @@\n+2017-01-20  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* exp_ch3.adb: Reenable code.\n+\n+2017-01-20  Yannick Moy  <moy@adacore.com>\n+\n+\t* sinfo.ads: Document lack of Do_Division_Check flag\n+\ton float exponentiation.\n+\n 2017-01-19  Javier Miranda  <miranda@adacore.com>\n \n \t* ghost.adb (Propagate_Ignored_Ghost_Code): Protect access to the"}, {"sha": "f4f457178bbf4c3f3f8f5c4115ffec3e8df4ffcd", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49779c98ffb4c5e9d8ed3d413e09119f4adeaeef/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49779c98ffb4c5e9d8ed3d413e09119f4adeaeef/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=49779c98ffb4c5e9d8ed3d413e09119f4adeaeef", "patch": "@@ -5901,10 +5901,7 @@ package body Exp_Ch3 is\n          --  would otherwise make two copies. The RM allows removing redunant\n          --  Adjust/Finalize calls, but does not allow insertion of extra ones.\n \n-         --  This part is disabled for now, because it breaks CodePeer runs\n-\n-         return (False -- ???\n-             and then Nkind (Expr_Q) = N_Explicit_Dereference\n+         return (Nkind (Expr_Q) = N_Explicit_Dereference\n              and then not Comes_From_Source (Expr_Q)\n              and then Nkind (Original_Node (Expr_Q)) = N_Function_Call\n              and then Nkind (Object_Definition (N)) in N_Has_Entity"}, {"sha": "bf938525d559a7990cdf273e7913be9d67f80eca", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49779c98ffb4c5e9d8ed3d413e09119f4adeaeef/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49779c98ffb4c5e9d8ed3d413e09119f4adeaeef/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=49779c98ffb4c5e9d8ed3d413e09119f4adeaeef", "patch": "@@ -700,7 +700,10 @@ package Sinfo is\n    --  analysis, on expression nodes that may trigger the corresponding\n    --  check. The front end then inserts or not the check during expansion. In\n    --  particular, these flags should also be correctly set in ASIS mode and\n-   --  GNATprove mode.\n+   --  GNATprove mode. As a special case, the front end does not insert a\n+   --  Do_Division_Check flag on float exponentiation expressions, for the case\n+   --  where the value is 0.0 and the exponent is negative, although this case\n+   --  does lead to a division check failure.\n \n    --  Note: the expander always takes care of the Do_Range check case,\n    --  so this flag will never be set in the expanded tree passed to the"}]}