{"sha": "ae5f017f1451b4cec57df4dc52e68d50bfa63b03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU1ZjAxN2YxNDUxYjRjZWM1N2RmNGRjNTJlNjhkNTBiZmE2M2IwMw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "2000-08-07T08:27:54Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-08-07T08:27:54Z"}, "message": "expmed.c (store_bit_field): Don't require MEM_IN_STRUCT_P.\n\n        * expmed.c (store_bit_field): Don't require MEM_IN_STRUCT_P.\n        * expr.c (emit_group_store): Don't set it.\n\nFrom-SVN: r35546", "tree": {"sha": "f9020632531c7ab0fa5c6a553f308d92f8a1897b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9020632531c7ab0fa5c6a553f308d92f8a1897b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae5f017f1451b4cec57df4dc52e68d50bfa63b03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae5f017f1451b4cec57df4dc52e68d50bfa63b03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae5f017f1451b4cec57df4dc52e68d50bfa63b03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae5f017f1451b4cec57df4dc52e68d50bfa63b03/comments", "author": null, "committer": null, "parents": [{"sha": "373c27489a7b7778972ab4ccf78db8fc212c81d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/373c27489a7b7778972ab4ccf78db8fc212c81d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/373c27489a7b7778972ab4ccf78db8fc212c81d5"}], "stats": {"total": 16, "additions": 5, "deletions": 11}, "files": [{"sha": "43ca29524adfe584114c2d81f72a7a060249649b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae5f017f1451b4cec57df4dc52e68d50bfa63b03/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae5f017f1451b4cec57df4dc52e68d50bfa63b03/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae5f017f1451b4cec57df4dc52e68d50bfa63b03", "patch": "@@ -1,3 +1,8 @@\n+2000-08-07  Richard Henderson  <rth@cygnus.com>\n+\n+\t* expmed.c (store_bit_field): Don't require MEM_IN_STRUCT_P.\n+\t* expr.c (emit_group_store): Don't set it.\n+\n 2000-08-07  Kazu Hirata  <kazu@hxi.com>\n \n \t* invoke.texi (Options for Debugging Your Program or GCC): Remove"}, {"sha": "e9210a680a36f1efd552da7159d8b2c99a62c9f0", "filename": "gcc/expmed.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae5f017f1451b4cec57df4dc52e68d50bfa63b03/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae5f017f1451b4cec57df4dc52e68d50bfa63b03/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=ae5f017f1451b4cec57df4dc52e68d50bfa63b03", "patch": "@@ -245,9 +245,6 @@ store_bit_field (str_rtx, bitsize, bitnum, fieldmode, value, align, total_size)\n   insv_bitsize = GET_MODE_BITSIZE (op_mode);\n #endif\n \n-  if (GET_CODE (str_rtx) == MEM && ! MEM_IN_STRUCT_P (str_rtx))\n-    abort ();\n-\n   /* Discount the part of the structure before the desired byte.\n      We need to know how many bytes are safe to reference after it.  */\n   if (total_size >= 0)"}, {"sha": "0c609c2eaeb67bfef2586ab6631b7d2fa3b818c1", "filename": "gcc/expr.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae5f017f1451b4cec57df4dc52e68d50bfa63b03/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae5f017f1451b4cec57df4dc52e68d50bfa63b03/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=ae5f017f1451b4cec57df4dc52e68d50bfa63b03", "patch": "@@ -2066,14 +2066,6 @@ emit_group_store (orig_dst, src, ssize, align)\n       /* Make life a bit easier for combine.  */\n       emit_move_insn (dst, const0_rtx);\n     }\n-  else if (! MEM_IN_STRUCT_P (dst))\n-    {\n-      /* store_bit_field requires that memory operations have\n-\t mem_in_struct_p set; we might not.  */\n-\n-      dst = copy_rtx (orig_dst);\n-      MEM_SET_IN_STRUCT_P (dst, 1);\n-    }\n \n   /* Process the pieces.  */\n   for (i = start; i < XVECLEN (src, 0); i++)"}]}