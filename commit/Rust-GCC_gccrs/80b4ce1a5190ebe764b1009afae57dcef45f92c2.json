{"sha": "80b4ce1a5190ebe764b1009afae57dcef45f92c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODBiNGNlMWE1MTkwZWJlNzY0YjEwMDlhZmFlNTdkY2VmNDVmOTJjMg==", "commit": {"author": {"name": "Michael de Lang", "email": "kingoipo@gmail.com", "date": "2021-05-14T10:09:45Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-05-14T10:09:58Z"}, "message": "TSAN: add new test\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/tsan/pthread_cond_clockwait.C: New test.", "tree": {"sha": "357f1262929d2e2da8dcf0a174128242b837f043", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/357f1262929d2e2da8dcf0a174128242b837f043"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80b4ce1a5190ebe764b1009afae57dcef45f92c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80b4ce1a5190ebe764b1009afae57dcef45f92c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80b4ce1a5190ebe764b1009afae57dcef45f92c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80b4ce1a5190ebe764b1009afae57dcef45f92c2/comments", "author": {"login": "Oipo", "id": 212134, "node_id": "MDQ6VXNlcjIxMjEzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/212134?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Oipo", "html_url": "https://github.com/Oipo", "followers_url": "https://api.github.com/users/Oipo/followers", "following_url": "https://api.github.com/users/Oipo/following{/other_user}", "gists_url": "https://api.github.com/users/Oipo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Oipo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Oipo/subscriptions", "organizations_url": "https://api.github.com/users/Oipo/orgs", "repos_url": "https://api.github.com/users/Oipo/repos", "events_url": "https://api.github.com/users/Oipo/events{/privacy}", "received_events_url": "https://api.github.com/users/Oipo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe108dad32f521c4f924a397f11c63f86519e183", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe108dad32f521c4f924a397f11c63f86519e183", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe108dad32f521c4f924a397f11c63f86519e183"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "82d6a5c8329ed95d7f379b811ebc9fbbc6338931", "filename": "gcc/testsuite/g++.dg/tsan/pthread_cond_clockwait.C", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80b4ce1a5190ebe764b1009afae57dcef45f92c2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Fpthread_cond_clockwait.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80b4ce1a5190ebe764b1009afae57dcef45f92c2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Fpthread_cond_clockwait.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftsan%2Fpthread_cond_clockwait.C?ref=80b4ce1a5190ebe764b1009afae57dcef45f92c2", "patch": "@@ -0,0 +1,31 @@\n+// Test pthread_cond_clockwait not generating false positives with tsan\n+// { dg-do run { target { { *-*-linux* *-*-gnu* *-*-uclinux* } && pthread } } }\n+// { dg-options \"-fsanitize=thread -lpthread\" }\n+\n+#include <pthread.h>\n+\n+pthread_cond_t cv;\n+pthread_mutex_t mtx;\n+\n+void *fn(void *vp) {\n+    pthread_mutex_lock(&mtx);\n+    pthread_cond_signal(&cv);\n+    pthread_mutex_unlock(&mtx);\n+    return NULL;\n+}\n+\n+int main() {\n+    pthread_mutex_lock(&mtx);\n+\n+    pthread_t tid;\n+    pthread_create(&tid, NULL, fn, NULL);\n+\n+    struct timespec ts;\n+    clock_gettime(CLOCK_MONOTONIC, &ts);\n+    ts.tv_sec += 10;\n+    pthread_cond_clockwait(&cv, &mtx, CLOCK_MONOTONIC, &ts);\n+    pthread_mutex_unlock(&mtx);\n+\n+    pthread_join(tid, NULL);\n+    return 0;\n+}"}]}