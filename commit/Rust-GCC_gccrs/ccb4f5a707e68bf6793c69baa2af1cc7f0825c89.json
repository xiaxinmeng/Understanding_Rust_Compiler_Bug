{"sha": "ccb4f5a707e68bf6793c69baa2af1cc7f0825c89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NiNGY1YTcwN2U2OGJmNjc5M2M2OWJhYTJhZjFjYzdmMDgyNWM4OQ==", "commit": {"author": {"name": "Daniel Krugler", "email": "daniel.kruegler@googlemail.com", "date": "2011-06-21T23:01:03Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2011-06-21T23:01:03Z"}, "message": "move.h (__is_nothrow_swappable): Add.\n\n2011-06-22  Daniel Krugler  <daniel.kruegler@googlemail.com>\n\t    Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/bits/move.h (__is_nothrow_swappable): Add.\n\t(swap(_Tp(&)[_Nm], _Tp(&)[_Nm])): Use noexcept.\n\t* include/bits/algorithmfwd.h: Adjust.\n\t* testsuite/25_algorithms/swap/noexcept.cc: New.\n\n\nCo-Authored-By: Paolo Carlini <paolo.carlini@oracle.com>\n\nFrom-SVN: r175277", "tree": {"sha": "82c2da92b99050c1891187147d449cfd0ec61866", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82c2da92b99050c1891187147d449cfd0ec61866"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccb4f5a707e68bf6793c69baa2af1cc7f0825c89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccb4f5a707e68bf6793c69baa2af1cc7f0825c89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccb4f5a707e68bf6793c69baa2af1cc7f0825c89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccb4f5a707e68bf6793c69baa2af1cc7f0825c89/comments", "author": {"login": "Dani-Hub", "id": 431432, "node_id": "MDQ6VXNlcjQzMTQzMg==", "avatar_url": "https://avatars.githubusercontent.com/u/431432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dani-Hub", "html_url": "https://github.com/Dani-Hub", "followers_url": "https://api.github.com/users/Dani-Hub/followers", "following_url": "https://api.github.com/users/Dani-Hub/following{/other_user}", "gists_url": "https://api.github.com/users/Dani-Hub/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dani-Hub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dani-Hub/subscriptions", "organizations_url": "https://api.github.com/users/Dani-Hub/orgs", "repos_url": "https://api.github.com/users/Dani-Hub/repos", "events_url": "https://api.github.com/users/Dani-Hub/events{/privacy}", "received_events_url": "https://api.github.com/users/Dani-Hub/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "358bb337a5b54b0e6f9f263342437e9633d869bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/358bb337a5b54b0e6f9f263342437e9633d869bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/358bb337a5b54b0e6f9f263342437e9633d869bb"}], "stats": {"total": 52, "additions": 50, "deletions": 2}, "files": [{"sha": "bd75196bc8857573e79770036d85f3141ffced2d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccb4f5a707e68bf6793c69baa2af1cc7f0825c89/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccb4f5a707e68bf6793c69baa2af1cc7f0825c89/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ccb4f5a707e68bf6793c69baa2af1cc7f0825c89", "patch": "@@ -1,3 +1,11 @@\n+2011-06-22  Daniel Krugler  <daniel.kruegler@googlemail.com>\n+\t    Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/bits/move.h (__is_nothrow_swappable): Add.\n+\t(swap(_Tp(&)[_Nm], _Tp(&)[_Nm])): Use noexcept.\n+\t* include/bits/algorithmfwd.h: Adjust.\n+\t* testsuite/25_algorithms/swap/noexcept.cc: New.\n+\n 2011-06-21  Jakub Jelinek  <jakub@redhat.com>\n \n \t* testsuite/Makefile.am (check_DEJAGNU_normal_targets): Add"}, {"sha": "7bb9880ebebcf1d85a5613b84908817385de39b4", "filename": "libstdc++-v3/include/bits/algorithmfwd.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccb4f5a707e68bf6793c69baa2af1cc7f0825c89/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falgorithmfwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccb4f5a707e68bf6793c69baa2af1cc7f0825c89/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falgorithmfwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falgorithmfwd.h?ref=ccb4f5a707e68bf6793c69baa2af1cc7f0825c89", "patch": "@@ -558,7 +558,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n   template<typename _Tp, size_t _Nm>\n     void\n-    swap(_Tp (&)[_Nm], _Tp (&)[_Nm]);\n+    swap(_Tp (&)[_Nm], _Tp (&)[_Nm])\n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+    noexcept(__is_nothrow_swappable<_Tp>::value)\n+#endif\n+    ;\n \n   template<typename _FIter1, typename _FIter2>\n     _FIter2 "}, {"sha": "e82e36d892ed4314ad826a730050ccdf3f0fd19e", "filename": "libstdc++-v3/include/bits/move.h", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccb4f5a707e68bf6793c69baa2af1cc7f0825c89/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmove.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccb4f5a707e68bf6793c69baa2af1cc7f0825c89/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmove.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmove.h?ref=ccb4f5a707e68bf6793c69baa2af1cc7f0825c89", "patch": "@@ -152,12 +152,22 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       __b = _GLIBCXX_MOVE(__tmp);\n     }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+  // To work around c++/49045.\n+  template<typename _Tp>\n+    struct __is_nothrow_swappable\n+    { static const bool value = noexcept(swap(std::declval<_Tp&>(),\n+\t\t\t\t\t      std::declval<_Tp&>())); };\n+#endif\n+\n   // _GLIBCXX_RESOLVE_LIB_DEFECTS\n   // DR 809. std::swap should be overloaded for array types.\n   template<typename _Tp, size_t _Nm>\n     inline void\n     swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])\n-    // noexcept waits for c++/49045\n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+    noexcept(__is_nothrow_swappable<_Tp>::value)\n+#endif\n     {\n       for (size_t __n = 0; __n < _Nm; ++__n)\n \tswap(__a[__n], __b[__n]);"}, {"sha": "4d8c87aaede89cedf7e545c8ff474a21fabcece9", "filename": "libstdc++-v3/testsuite/25_algorithms/swap/noexcept.cc", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccb4f5a707e68bf6793c69baa2af1cc7f0825c89/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fswap%2Fnoexcept.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccb4f5a707e68bf6793c69baa2af1cc7f0825c89/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fswap%2Fnoexcept.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fswap%2Fnoexcept.cc?ref=ccb4f5a707e68bf6793c69baa2af1cc7f0825c89", "patch": "@@ -0,0 +1,26 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2011 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <utility>\n+\n+static_assert(noexcept(std::swap(std::declval<int&>(),\n+\t\t\t\t std::declval<int&>())), \"Error\");\n+static_assert(noexcept(std::swap(std::declval<int(&)[5]>(),\n+\t\t\t\t std::declval<int(&)[5]>())), \"Error\");"}]}