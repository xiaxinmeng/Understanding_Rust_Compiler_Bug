{"sha": "3bce843ee30206917ccdfbf283c73e19a2ce633c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2JjZTg0M2VlMzAyMDY5MTdjY2RmYmYyODNjNzNlMTlhMmNlNjMzYw==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2004-06-13T22:52:34Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2004-06-13T22:52:34Z"}, "message": "tree-ssa-pre.c (add_to_value): is_gimple_min_invariant things are available everywhere too.\n\n2004-06-13  Daniel Berlin  <dberlin@dberlin.org>\n\n\t* tree-ssa-pre.c (add_to_value): is_gimple_min_invariant things\n\tare available everywhere too.\n\nFrom-SVN: r83069", "tree": {"sha": "dc1c8486dc168484fc7dda870f3896c5c26f04de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc1c8486dc168484fc7dda870f3896c5c26f04de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3bce843ee30206917ccdfbf283c73e19a2ce633c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bce843ee30206917ccdfbf283c73e19a2ce633c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bce843ee30206917ccdfbf283c73e19a2ce633c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bce843ee30206917ccdfbf283c73e19a2ce633c/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a40de696ac0207908f22b2b50330e22e86e45329", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a40de696ac0207908f22b2b50330e22e86e45329", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a40de696ac0207908f22b2b50330e22e86e45329"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "54fe05f4f02e6b62030edee61f6387a4bbd1fae7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bce843ee30206917ccdfbf283c73e19a2ce633c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bce843ee30206917ccdfbf283c73e19a2ce633c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3bce843ee30206917ccdfbf283c73e19a2ce633c", "patch": "@@ -1,3 +1,8 @@\n+2004-06-13  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\t* tree-ssa-pre.c (add_to_value): is_gimple_min_invariant things\n+\tare available everywhere too.\n+\n 2004-06-13  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \t* fold-const.c (fold_checksum_tree <case 't'>): Only"}, {"sha": "b0d42ff05f30d5d89a01eff110da6f2a92f80d32", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3bce843ee30206917ccdfbf283c73e19a2ce633c/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3bce843ee30206917ccdfbf283c73e19a2ce633c/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=3bce843ee30206917ccdfbf283c73e19a2ce633c", "patch": "@@ -468,6 +468,11 @@ add_to_value (tree v, tree e)\n       TREE_CONSTANT (v) = true;\n       TREE_CHAIN (v) = e;\n     }\n+  else if (is_gimple_min_invariant (e))\n+    {\n+      TREE_CONSTANT (v) = true;\n+      TREE_CHAIN (v) = e;\n+    }\n #if DEBUG_VALUE_EXPRESSIONS\n   if (va->expr_set == NULL)\n     va->expr_set = set_new (false);"}]}