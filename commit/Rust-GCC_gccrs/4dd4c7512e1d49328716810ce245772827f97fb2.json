{"sha": "4dd4c7512e1d49328716810ce245772827f97fb2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRkNGM3NTEyZTFkNDkzMjg3MTY4MTBjZTI0NTc3MjgyN2Y5N2ZiMg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-09-25T13:49:22Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-09-25T13:49:22Z"}, "message": "expr.c, [...]: Fix comment typos.\n\n\t* expr.c, jcf-dump.c, parse-scan.y, parse.y: Fix\n\tcomment typos.\n\t* gcj.texi: Fix typos.\n\nFrom-SVN: r88099", "tree": {"sha": "0e360aff4616fc788dff646b581c058a5519087f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e360aff4616fc788dff646b581c058a5519087f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4dd4c7512e1d49328716810ce245772827f97fb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dd4c7512e1d49328716810ce245772827f97fb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4dd4c7512e1d49328716810ce245772827f97fb2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4dd4c7512e1d49328716810ce245772827f97fb2/comments", "author": null, "committer": null, "parents": [{"sha": "f3cd574f6b2a45b1cd9153636d0ad1aba1cde806", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3cd574f6b2a45b1cd9153636d0ad1aba1cde806", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3cd574f6b2a45b1cd9153636d0ad1aba1cde806"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "60eadf16810db93fbd7f297b21370bb104289dbc", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd4c7512e1d49328716810ce245772827f97fb2/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd4c7512e1d49328716810ce245772827f97fb2/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=4dd4c7512e1d49328716810ce245772827f97fb2", "patch": "@@ -1,3 +1,9 @@\n+2004-09-25  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* expr.c, jcf-dump.c, parse-scan.y, parse.y: Fix\n+\tcomment typos.\n+\t* gcj.texi: Fix typos.\n+\n 2004-09-24  Tom Tromey  <tromey@redhat.com>\n \n \tPR java/15656:"}, {"sha": "7cfc874e36f1a3538301ef4aa1a3d05989b3689a", "filename": "gcc/java/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd4c7512e1d49328716810ce245772827f97fb2/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd4c7512e1d49328716810ce245772827f97fb2/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=4dd4c7512e1d49328716810ce245772827f97fb2", "patch": "@@ -606,7 +606,7 @@ build_java_jsr (int target_pc, int return_pc)\n   flush_quick_stack ();\n   java_add_stmt (build1 (GOTO_EXPR, void_type_node, where));\n \n-  /* Do not need to emit the label here.  We noted the existance of the\n+  /* Do not need to emit the label here.  We noted the existence of the\n      label as a jump target in note_instructions; we'll emit the label\n      for real at the beginning of the expand_byte_code loop.  */\n }"}, {"sha": "1ef0babb4c0f73986eb8a981efdab9481502c4ca", "filename": "gcc/java/gcj.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd4c7512e1d49328716810ce245772827f97fb2/gcc%2Fjava%2Fgcj.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd4c7512e1d49328716810ce245772827f97fb2/gcc%2Fjava%2Fgcj.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgcj.texi?ref=4dd4c7512e1d49328716810ce245772827f97fb2", "patch": "@@ -185,7 +185,7 @@ Java bytecode files.\n An archive containing one or more @code{.class} files, all of\n which are compiled.  The archive may be compressed.  Files in\n an archive which don't end with @samp{.class} are treated as\n-resource files; they are copmiled into the resulting object file\n+resource files; they are compiled into the resulting object file\n as @samp{core:} URLs.\n @item @@@var{file}\n A file containing a whitespace-separated list of input file names.\n@@ -386,7 +386,7 @@ of the previous mechanism) has some advantages: it is compatible with\n static linking, and does not require configuring or installing libraries.\n @end itemize\n \n-These @code{gij} options relate to linking an execitable:\n+These @code{gij} options relate to linking an executable:\n \n @table @gcctabopt\n @item --main=@var{CLASSNAME}"}, {"sha": "2984c825c4b88c1096036fc314ceeeb9eb8d8552", "filename": "gcc/java/jcf-dump.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd4c7512e1d49328716810ce245772827f97fb2/gcc%2Fjava%2Fjcf-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd4c7512e1d49328716810ce245772827f97fb2/gcc%2Fjava%2Fjcf-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-dump.c?ref=4dd4c7512e1d49328716810ce245772827f97fb2", "patch": "@@ -91,7 +91,7 @@ int this_class_index = 0;\n \n int class_access_flags = 0;\n \n-/* Print in format similar to javap.  VERY IMCOMPLETE. */\n+/* Print in format similar to javap.  VERY INCOMPLETE. */\n int flag_javap_compatible = 0;\n \n static void print_access_flags (FILE *, uint16, char);"}, {"sha": "e05fdb5f5293ad93761c2702c34b6c94c9206733", "filename": "gcc/java/parse-scan.y", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd4c7512e1d49328716810ce245772827f97fb2/gcc%2Fjava%2Fparse-scan.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd4c7512e1d49328716810ce245772827f97fb2/gcc%2Fjava%2Fparse-scan.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse-scan.y?ref=4dd4c7512e1d49328716810ce245772827f97fb2", "patch": "@@ -927,7 +927,7 @@ primary_no_new_array:\n |\tarray_access\n |\ttype_literals\n         /* Added, JDK1.1 inner classes. Documentation is wrong\n-           refering to a 'ClassName' (class_name) rule that doesn't\n+           referring to a 'ClassName' (class_name) rule that doesn't\n            exist. Used name instead.  */\n |\tname DOT_TK THIS_TK\n \t\t{ USE_ABSORBER; }"}, {"sha": "8ac79eaf9eaf50db373322c246400bef83013e24", "filename": "gcc/java/parse.y", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4dd4c7512e1d49328716810ce245772827f97fb2/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4dd4c7512e1d49328716810ce245772827f97fb2/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=4dd4c7512e1d49328716810ce245772827f97fb2", "patch": "@@ -1961,7 +1961,7 @@ primary_no_new_array:\n |\tarray_access\n |\ttype_literals\n         /* Added, JDK1.1 inner classes. Documentation is wrong\n-           refering to a 'ClassName' (class_name) rule that doesn't\n+           referring to a 'ClassName' (class_name) rule that doesn't\n            exist. Used name: instead.  */\n |\tname DOT_TK THIS_TK\n \t\t{\n@@ -2068,7 +2068,7 @@ anonymous_class_creation:\n \t\t     later on in verify_constructor_super.\n \n \t\t     It's during the expansion of a `new' statement\n-\t\t     refering to an anonymous class that a ctor will\n+\t\t     referring to an anonymous class that a ctor will\n \t\t     be generated for the anonymous class, with the\n \t\t     right arguments. */\n \n@@ -15364,7 +15364,7 @@ patch_try_statement (tree node)\n   /* Check catch clauses, if any. Every time we find an error, we try\n      to process the next catch clause. We process the catch clause before\n      the try block so that when processing the try block we can check thrown\n-     exceptions againts the caught type list. */\n+     exceptions against the caught type list. */\n   for (current = catch; current; current = TREE_CHAIN (current))\n     {\n       tree carg_decl, carg_type;"}]}