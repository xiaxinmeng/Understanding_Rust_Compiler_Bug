{"sha": "e73ed25c41a9ab4bf8857973daac24ebebe23a10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTczZWQyNWM0MWE5YWI0YmY4ODU3OTczZGFhYzI0ZWJlYmUyM2ExMA==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2005-03-01T22:27:43Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2005-03-01T22:27:43Z"}, "message": "re PR libgcj/20160 (link errors building libgcj tests)\n\nPR libgcj/20160\n* ltmain.sh: Avoid creating archives with components that have\nduplicate basenames.\n\nFrom-SVN: r95756", "tree": {"sha": "3ab2551d909d0986b862ba50b7315c76427d3e29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ab2551d909d0986b862ba50b7315c76427d3e29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e73ed25c41a9ab4bf8857973daac24ebebe23a10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e73ed25c41a9ab4bf8857973daac24ebebe23a10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e73ed25c41a9ab4bf8857973daac24ebebe23a10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e73ed25c41a9ab4bf8857973daac24ebebe23a10/comments", "author": null, "committer": null, "parents": [{"sha": "364849ee367bb7f879a1b4e041e4a28ad860dcdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/364849ee367bb7f879a1b4e041e4a28ad860dcdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/364849ee367bb7f879a1b4e041e4a28ad860dcdc"}], "stats": {"total": 78, "additions": 64, "deletions": 14}, "files": [{"sha": "5d7a65a5de1d27ccf9dfba7bac24b0f4905745f1", "filename": "ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73ed25c41a9ab4bf8857973daac24ebebe23a10/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73ed25c41a9ab4bf8857973daac24ebebe23a10/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=e73ed25c41a9ab4bf8857973daac24ebebe23a10", "patch": "@@ -1,3 +1,9 @@\n+2005-03-01  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR libgcj/20160\n+\t* ltmain.sh: Avoid creating archives with components that have\n+\tduplicate basenames.\n+\n 2005-02-28  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR bootstrap/20250"}, {"sha": "a84825359d35492c745437ba3292812dd4acd433", "filename": "ltmain.sh", "status": "modified", "additions": 58, "deletions": 14, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e73ed25c41a9ab4bf8857973daac24ebebe23a10/ltmain.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e73ed25c41a9ab4bf8857973daac24ebebe23a10/ltmain.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ltmain.sh?ref=e73ed25c41a9ab4bf8857973daac24ebebe23a10", "patch": "@@ -4307,6 +4307,63 @@ fi\\\n #\t  fi\n #\tdone\n \n+\t# POSIX demands no paths to be encoded in archives.  We have\n+\t# to avoid creating archives with duplicate basenames if we\n+\t# might have to extract them afterwards, e.g., when creating a\n+\t# static archive out of a convenience library, or when linking\n+\t# the entirety of a libtool archive into another (currently\n+\t# not supported by libtool).\n+        if (for obj in $oldobjs\n+\t    do\n+\t      $echo \"X$obj\" | $Xsed -e 's%^.*/%%'\n+\t    done | sort | sort -uc >/dev/null 2>&1); then\n+\t  :\n+\telse\n+\t  $echo \"copying selected object files to avoid basename conflicts...\"\n+\n+\t  if test -z \"$gentop\"; then\n+\t    gentop=\"$output_objdir/${outputname}x\"\n+\n+\t    $show \"${rm}r $gentop\"\n+\t    $run ${rm}r \"$gentop\"\n+\t    $show \"$mkdir $gentop\"\n+\t    $run $mkdir \"$gentop\"\n+\t    status=$?\n+\t    if test $status -ne 0 && test ! -d \"$gentop\"; then\n+\t      exit $status\n+\t    fi\n+\t    generated=\"$generated $gentop\"\n+\t  fi\n+\n+\t  save_oldobjs=$oldobjs\n+\t  oldobjs=\n+\t  counter=1\n+\t  for obj in $save_oldobjs\n+\t  do\n+\t    objbase=`$echo \"X$obj\" | $Xsed -e 's%^.*/%%'`\n+\t    case \" $oldobjs \" in\n+\t    \" \") oldobjs=$obj ;;\n+\t    *[\\ /]\"$objbase \"*)\n+\t      while :; do\n+\t\t# Make sure we don't pick an alternate name that also\n+\t\t# overlaps.\n+\t        newobj=lt$counter-$objbase\n+\t        counter=`expr $counter + 1`\n+\t\tcase \" $oldobjs \" in\n+\t\t*[\\ /]\"$newobj \"*) ;;\n+\t\t*) if test ! -f \"$gentop/$newobj\"; then break; fi ;;\n+\t\tesac\n+\t      done\n+\t      $show \"ln $obj $gentop/$newobj || cp $obj $gentop/$newobj\"\n+\t      $run ln \"$obj\" \"$gentop/$newobj\" ||\n+\t      $run cp \"$obj\" \"$gentop/$newobj\"\n+\t      oldobjs=\"$oldobjs $gentop/$newobj\"\n+\t      ;;\n+\t    *) oldobjs=\"$oldobjs $obj\" ;;\n+\t    esac\n+\t  done\n+\tfi\n+\n         eval cmds=\\\"$old_archive_cmds\\\"\n \n         if len=`expr \"X$cmds\" : \".*\"` &&\n@@ -4320,20 +4377,7 @@ fi\\\n           objlist=\n           concat_cmds=\n           save_oldobjs=$oldobjs\n-\t  # GNU ar 2.10+ was changed to match POSIX; thus no paths are\n-\t  # encoded into archives.  This makes 'ar r' malfunction in\n-\t  # this piecewise linking case whenever conflicting object\n-\t  # names appear in distinct ar calls; check, warn and compensate.\n-          if (for obj in $save_oldobjs\n-\t    do\n-\t      $echo \"X$obj\" | $Xsed -e 's%^.*/%%'\n-\t    done | sort | sort -uc >/dev/null 2>&1); then\n-\t    :\n-\t  else\n-\t    $echo \"$modename: warning: object name conflicts; overriding AR_FLAGS to 'cq'\" 1>&2\n-\t    $echo \"$modename: warning: to ensure that POSIX-compatible ar will work\" 1>&2\n-\t    AR_FLAGS=cq\n-\t  fi\n+\n           for obj in $save_oldobjs\n           do\n             oldobjs=\"$objlist $obj\""}]}