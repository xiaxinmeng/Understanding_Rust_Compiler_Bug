{"sha": "0ba0772ba46e80a54bd712cada5b9395fce28399", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJhMDc3MmJhNDZlODBhNTRiZDcxMmNhZGE1YjkzOTVmY2UyODM5OQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-07-15T11:17:37Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-07-15T11:17:37Z"}, "message": "re PR tree-optimization/44946 (ICE: in get_constraint_for_component_ref, at tree-ssa-structalias.c:3184)\n\n2010-07-15  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/44946\n\t* tree-ssa-structalias.c (get_constraint_for_component_ref): Deal\n\twith accessing only padding properly.\n\n\t* gcc.c-torture/compile/pr44946.c: New testcase.\n\nFrom-SVN: r162216", "tree": {"sha": "2df76aff858642dd504876b611f466bb766c2ad0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2df76aff858642dd504876b611f466bb766c2ad0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ba0772ba46e80a54bd712cada5b9395fce28399", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ba0772ba46e80a54bd712cada5b9395fce28399", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ba0772ba46e80a54bd712cada5b9395fce28399", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ba0772ba46e80a54bd712cada5b9395fce28399/comments", "author": null, "committer": null, "parents": [{"sha": "02ee7bea62cc77ed1ee6aa94970cc576af7d3903", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02ee7bea62cc77ed1ee6aa94970cc576af7d3903", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02ee7bea62cc77ed1ee6aa94970cc576af7d3903"}], "stats": {"total": 54, "additions": 49, "deletions": 5}, "files": [{"sha": "3443ac81e5b74462ba431397e65967ca96f3e2d9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ba0772ba46e80a54bd712cada5b9395fce28399/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ba0772ba46e80a54bd712cada5b9395fce28399/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0ba0772ba46e80a54bd712cada5b9395fce28399", "patch": "@@ -1,7 +1,13 @@\n+2010-07-15  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/44946\n+\t* tree-ssa-structalias.c (get_constraint_for_component_ref): Deal\n+\twith accessing only padding properly.\n+\n 2010-07-15  Jan Hubicka  <jh@suse.cz>\n \n-\t* ipa.c (function_and_variable_visibility): Variables marked as used should\n-\tnot be localized.\n+\t* ipa.c (function_and_variable_visibility): Variables marked as used\n+\tshould not be localized.\n \n 2010-07-15  Jan Hubicka  <jh@suse.cz>\n "}, {"sha": "47d81f7ad0ab6877d5923179d159fe88fc1e9e4e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ba0772ba46e80a54bd712cada5b9395fce28399/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ba0772ba46e80a54bd712cada5b9395fce28399/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0ba0772ba46e80a54bd712cada5b9395fce28399", "patch": "@@ -1,3 +1,8 @@\n+2010-07-15  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/44946\n+\t* gcc.c-torture/compile/pr44946.c: New testcase.\n+\n 2010-07-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/40206"}, {"sha": "7b23012458591a5a50dfc6bac22441f60f0febcc", "filename": "gcc/testsuite/gcc.c-torture/compile/pr44946.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ba0772ba46e80a54bd712cada5b9395fce28399/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr44946.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ba0772ba46e80a54bd712cada5b9395fce28399/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr44946.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr44946.c?ref=0ba0772ba46e80a54bd712cada5b9395fce28399", "patch": "@@ -0,0 +1,27 @@\n+struct A\n+{\n+  int i;\n+  long l;\n+};\n+\n+struct B\n+{\n+  int i;\n+};\n+\n+struct C\n+{\n+  int i;\n+  struct B b;\n+};\n+\n+struct B foo (struct A a)\n+{\n+  struct C *c = (struct C *) &a;\n+  return c->b;\n+}\n+void bar (struct A a, struct B b)\n+{\n+  struct C *c = (struct C *) &a;\n+  c->b = b;\n+}"}, {"sha": "417671c7b394ccb3b8f11d96d894ec1638ec7b50", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ba0772ba46e80a54bd712cada5b9395fce28399/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ba0772ba46e80a54bd712cada5b9395fce28399/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=0ba0772ba46e80a54bd712cada5b9395fce28399", "patch": "@@ -3177,13 +3177,19 @@ get_constraint_for_component_ref (tree t, VEC(ce_s, heap) **results,\n \t      cexpr.var = curr->id;\n \t      VEC_safe_push (ce_s, heap, *results, &cexpr);\n \t    }\n-\t  else\n+\t  else if (VEC_length (ce_s, *results) == 0)\n \t    /* Assert that we found *some* field there. The user couldn't be\n \t       accessing *only* padding.  */\n \t    /* Still the user could access one past the end of an array\n \t       embedded in a struct resulting in accessing *only* padding.  */\n-\t    gcc_assert (VEC_length (ce_s, *results) >= 1\n-\t\t\t|| ref_contains_array_ref (orig_t));\n+\t    /* Or accessing only padding via type-punning to a type\n+\t       that has a filed just in padding space.  */\n+\t    {\n+\t      cexpr.type = SCALAR;\n+\t      cexpr.var = anything_id;\n+\t      cexpr.offset = 0;\n+\t      VEC_safe_push (ce_s, heap, *results, &cexpr);\n+\t    }\n \t}\n       else if (bitmaxsize == 0)\n \t{"}]}