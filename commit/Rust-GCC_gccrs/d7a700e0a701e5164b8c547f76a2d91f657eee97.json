{"sha": "d7a700e0a701e5164b8c547f76a2d91f657eee97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdhNzAwZTBhNzAxZTUxNjRiOGM1NDdmNzZhMmQ5MWY2NTdlZWU5Nw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-03-01T09:21:30Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-03-01T09:21:30Z"}, "message": "re PR middle-end/89497 (ICE caused by Segmentation Fault when compiling cups 2.2.10 with LTO flags enabled)\n\n2019-03-01  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/89497\n\t* tree-cfgcleanup.h (cleanup_tree_cfg): Add SSA update flags\n\targument, defaulted to zero.\n\t* passes.c (execute_function_todo): Pass down SSA update flags\n\tto cleanup_tree_cfg.\n\t* tree-cfgcleanup.c: Include tree-into-ssa.h and tree-cfgcleanup.h.\n\t(cleanup_tree_cfg_noloop): After cleanup_control_flow_pre update SSA\n\tform if requested.\n\t(cleanup_tree_cfg): Get and pass down SSA update flags.\n\n\t* gcc.dg/tree-ssa/reassoc-43.c: Avoid false match in regex.\n\t* g++.dg/tree-prof/devirt.C: Scan tracer dump for foldings\n\tthat happen now earlier.\n\nFrom-SVN: r269302", "tree": {"sha": "74c7336389d9d5c35c5e1c4f92b44b1e312310a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74c7336389d9d5c35c5e1c4f92b44b1e312310a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7a700e0a701e5164b8c547f76a2d91f657eee97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7a700e0a701e5164b8c547f76a2d91f657eee97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7a700e0a701e5164b8c547f76a2d91f657eee97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7a700e0a701e5164b8c547f76a2d91f657eee97/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "743f0ba244af82c835f3377dfbf0f7061e26c41a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/743f0ba244af82c835f3377dfbf0f7061e26c41a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/743f0ba244af82c835f3377dfbf0f7061e26c41a"}], "stats": {"total": 42, "additions": 33, "deletions": 9}, "files": [{"sha": "bce3f74b5f3925f34f61771bac0f11b29c38e259", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7a700e0a701e5164b8c547f76a2d91f657eee97/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7a700e0a701e5164b8c547f76a2d91f657eee97/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d7a700e0a701e5164b8c547f76a2d91f657eee97", "patch": "@@ -1,3 +1,15 @@\n+2019-03-01  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/89497\n+\t* tree-cfgcleanup.h (cleanup_tree_cfg): Add SSA update flags\n+\targument, defaulted to zero.\n+\t* passes.c (execute_function_todo): Pass down SSA update flags\n+\tto cleanup_tree_cfg.\n+\t* tree-cfgcleanup.c: Include tree-into-ssa.h and tree-cfgcleanup.h.\n+\t(cleanup_tree_cfg_noloop): After cleanup_control_flow_pre update SSA\n+\tform if requested.\n+\t(cleanup_tree_cfg): Get and pass down SSA update flags.\n+\n 2019-03-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/89539"}, {"sha": "41aa7655ec56057da498aafcf29543ad152e9846", "filename": "gcc/passes.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7a700e0a701e5164b8c547f76a2d91f657eee97/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7a700e0a701e5164b8c547f76a2d91f657eee97/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=d7a700e0a701e5164b8c547f76a2d91f657eee97", "patch": "@@ -1927,7 +1927,7 @@ execute_function_todo (function *fn, void *data)\n   /* Always cleanup the CFG before trying to update SSA.  */\n   if (flags & TODO_cleanup_cfg)\n     {\n-      cleanup_tree_cfg ();\n+      cleanup_tree_cfg (flags & TODO_update_ssa_any);\n \n       /* When cleanup_tree_cfg merges consecutive blocks, it may\n \t perform some simplistic propagation when removing single"}, {"sha": "b1b4886c3ef11cd0823a85556c0b5dd1575192a9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7a700e0a701e5164b8c547f76a2d91f657eee97/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7a700e0a701e5164b8c547f76a2d91f657eee97/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d7a700e0a701e5164b8c547f76a2d91f657eee97", "patch": "@@ -1,3 +1,10 @@\n+2019-03-01  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/89497\n+\t* gcc.dg/tree-ssa/reassoc-43.c: Avoid false match in regex.\n+\t* g++.dg/tree-prof/devirt.C: Scan tracer dump for foldings\n+\tthat happen now earlier.\n+\n 2019-02-28  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc.c-torture/execute/20190228-1.c: New test."}, {"sha": "8c2913a39309ed05842caf3ceaf4a58c2f1c4a58", "filename": "gcc/testsuite/g++.dg/tree-prof/devirt.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7a700e0a701e5164b8c547f76a2d91f657eee97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Fdevirt.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7a700e0a701e5164b8c547f76a2d91f657eee97/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Fdevirt.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-prof%2Fdevirt.C?ref=d7a700e0a701e5164b8c547f76a2d91f657eee97", "patch": "@@ -1,5 +1,5 @@\n /* PR ipa/88561 */\n-/* { dg-options \"-O3 -fdump-tree-dom3-details\" } */\n+/* { dg-options \"-O3 -fdump-tree-tracer-details -fdump-tree-dom3-details\" } */\n \n struct nsISupports\n {\n@@ -121,6 +121,6 @@ main ()\n     __builtin_abort ();\n }\n \n-/* { dg-final-use-not-autofdo { scan-tree-dump-times \"folding virtual function call to virtual unsigned int mozPersonalDictionary::_ZThn16\" 1 \"dom3\" { target { lp64 || llp64 } } } } */\n+/* { dg-final-use-not-autofdo { scan-tree-dump-times \"folding virtual function call to virtual unsigned int mozPersonalDictionary::_ZThn16\" 1 \"tracer\" { target { lp64 || llp64 } } } } */\n /* { dg-final-use-not-autofdo { scan-tree-dump-times \"folding virtual function call to virtual unsigned int mozPersonalDictionary::_ZThn8\" 1 \"dom3\" { target ilp32 } } } */\n-/* { dg-final-use-not-autofdo { scan-tree-dump-times \"folding virtual function call to virtual unsigned int mozPersonalDictionary::AddRef\" 1 \"dom3\" } } */\n+/* { dg-final-use-not-autofdo { scan-tree-dump-times \"folding virtual function call to virtual unsigned int mozPersonalDictionary::AddRef\" 1 \"tracer\" } } */"}, {"sha": "90e1e86b3cbda6555329d4b9a5bb458385847202", "filename": "gcc/testsuite/gcc.dg/tree-ssa/reassoc-43.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7a700e0a701e5164b8c547f76a2d91f657eee97/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-43.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7a700e0a701e5164b8c547f76a2d91f657eee97/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-43.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-43.c?ref=d7a700e0a701e5164b8c547f76a2d91f657eee97", "patch": "@@ -50,4 +50,4 @@ c_parser_translation_unit (c_parser * parser)\n \t}\n     }\n }\n-/* { dg-final { scan-tree-dump-not \"0 != 0\" \"reassoc2\"} } */\n+/* { dg-final { scan-tree-dump-not \"\\[ (\\]0 != 0\" \"reassoc2\"} } */"}, {"sha": "f7bd5651a90838b70d27e2945b6b0636f054fa22", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7a700e0a701e5164b8c547f76a2d91f657eee97/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7a700e0a701e5164b8c547f76a2d91f657eee97/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=d7a700e0a701e5164b8c547f76a2d91f657eee97", "patch": "@@ -44,6 +44,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gimple-fold.h\"\n #include \"tree-ssa-loop-niter.h\"\n #include \"cgraph.h\"\n+#include \"tree-into-ssa.h\"\n+#include \"tree-cfgcleanup.h\"\n+\n \n /* The set of blocks in that at least one of the following changes happened:\n    -- the statement at the end of the block was changed\n@@ -943,7 +946,7 @@ mfb_keep_latches (edge e)\n    Return true if the flowgraph was modified, false otherwise.  */\n \n static bool\n-cleanup_tree_cfg_noloop (void)\n+cleanup_tree_cfg_noloop (unsigned ssa_update_flags)\n {\n   timevar_push (TV_TREE_CLEANUP_CFG);\n \n@@ -1023,6 +1026,8 @@ cleanup_tree_cfg_noloop (void)\n \n   /* After doing the above SSA form should be valid (or an update SSA\n      should be required).  */\n+  if (ssa_update_flags)\n+    update_ssa (ssa_update_flags);\n \n   /* Compute dominator info which we need for the iterative process below.  */\n   if (!dom_info_available_p (CDI_DOMINATORS))\n@@ -1125,9 +1130,9 @@ repair_loop_structures (void)\n /* Cleanup cfg and repair loop structures.  */\n \n bool\n-cleanup_tree_cfg (void)\n+cleanup_tree_cfg (unsigned ssa_update_flags)\n {\n-  bool changed = cleanup_tree_cfg_noloop ();\n+  bool changed = cleanup_tree_cfg_noloop (ssa_update_flags);\n \n   if (current_loops != NULL\n       && loops_state_satisfies_p (LOOPS_NEED_FIXUP))"}, {"sha": "d69b6f5a62d2b1cfcf3f70769ebeab8bbaa1ce6e", "filename": "gcc/tree-cfgcleanup.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7a700e0a701e5164b8c547f76a2d91f657eee97/gcc%2Ftree-cfgcleanup.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7a700e0a701e5164b8c547f76a2d91f657eee97/gcc%2Ftree-cfgcleanup.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.h?ref=d7a700e0a701e5164b8c547f76a2d91f657eee97", "patch": "@@ -22,7 +22,7 @@ along with GCC; see the file COPYING3.  If not see\n \n /* In tree-cfgcleanup.c  */\n extern bitmap cfgcleanup_altered_bbs;\n-extern bool cleanup_tree_cfg (void);\n+extern bool cleanup_tree_cfg (unsigned = 0);\n extern bool fixup_noreturn_call (gimple *stmt);\n extern bool delete_unreachable_blocks_update_callgraph (cgraph_node *dst_node,\n \t\t\t\t\t\t\tbool update_clones);"}]}