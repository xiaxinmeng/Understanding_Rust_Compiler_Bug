{"sha": "e938feb4286b063ff749bbda21fa5e433df062dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTkzOGZlYjQyODZiMDYzZmY3NDliYmRhMjFmYTVlNDMzZGYwNjJkYw==", "commit": {"author": {"name": "Christian Bruel", "email": "christian.bruel@st.com", "date": "2010-02-10T10:08:01Z"}, "committer": {"name": "Christian Bruel", "email": "chrbr@gcc.gnu.org", "date": "2010-02-10T10:08:01Z"}, "message": "sh.c (find_barrier): Don't emit a CP inside the GP setting.\n\n* config/sh/sh.c (find_barrier): Don't emit a CP inside the GP setting.\n\nFrom-SVN: r156648", "tree": {"sha": "bdc67fdd49663f68485fbac1ff4f87568ce1f4bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdc67fdd49663f68485fbac1ff4f87568ce1f4bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e938feb4286b063ff749bbda21fa5e433df062dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e938feb4286b063ff749bbda21fa5e433df062dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e938feb4286b063ff749bbda21fa5e433df062dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e938feb4286b063ff749bbda21fa5e433df062dc/comments", "author": null, "committer": null, "parents": [{"sha": "cbb1ab104083d2fda4b7eee3b8c1a383ff5ced4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbb1ab104083d2fda4b7eee3b8c1a383ff5ced4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbb1ab104083d2fda4b7eee3b8c1a383ff5ced4e"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "b310463362451674250360d1b4cbb51032e0dca8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e938feb4286b063ff749bbda21fa5e433df062dc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e938feb4286b063ff749bbda21fa5e433df062dc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e938feb4286b063ff749bbda21fa5e433df062dc", "patch": "@@ -1,3 +1,7 @@\n+2010-02-10  Christian Bruel  <christian.bruel@st.com>\n+\n+\t* config/sh/sh.c (find_barrier): Don't emit a CP inside the GP setting.\n+\t\n 2010-02-10  Jakub Jelinek  <jakub@redhat.com>\n \n \t* builtins.c (set_builtin_user_assembler_name): Also handle"}, {"sha": "475995b338b175eccef9b6693e08c1e018813b9c", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e938feb4286b063ff749bbda21fa5e433df062dc/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e938feb4286b063ff749bbda21fa5e433df062dc/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=e938feb4286b063ff749bbda21fa5e433df062dc", "patch": "@@ -1,6 +1,7 @@\n /* Output routines for GCC for Renesas / SuperH SH.\n    Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-   2003, 2004, 2005, 2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n+   2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+   Free Software Foundation, Inc.\n    Contributed by Steve Chamberlain (sac@cygnus.com).\n    Improved by Jim Wilson (wilson@cygnus.com).\n \n@@ -4392,6 +4393,7 @@ find_barrier (int num_mova, rtx mova, rtx from)\n   int si_limit;\n   int hi_limit;\n   rtx orig = from;\n+  rtx last_got = NULL_RTX;\n \n   /* For HImode: range is 510, add 4 because pc counts from address of\n      second instruction after this one, subtract 2 for the jump instruction\n@@ -4482,6 +4484,16 @@ find_barrier (int num_mova, rtx mova, rtx from)\n \t  dst = SET_DEST (pat);\n \t  mode = GET_MODE (dst);\n \n+\t  /* GOT pcrelat setting comes in pair of\n+\t     mova\t.L8,r0\n+\t     mov.l\t.L8,r12\n+\t     instructions.  (plus add r0,r12).\n+\t     Remember if we see one without the other.  */\n+          if (GET_CODE (src) == UNSPEC && PIC_ADDR_P (XVECEXP (src, 0, 0)))\n+            last_got = last_got ? NULL_RTX : from;\n+          else if (PIC_ADDR_P (src))\n+            last_got = last_got ? NULL_RTX : from;\n+\n \t  /* We must explicitly check the mode, because sometimes the\n \t     front end will generate code to load unsigned constants into\n \t     HImode targets without properly sign extending them.  */\n@@ -4628,6 +4640,13 @@ find_barrier (int num_mova, rtx mova, rtx from)\n       else\n \tfrom = PREV_INSN (from);\n \n+      /* Don't emit a constant table int the middle of global pointer setting,\n+\t since that that would move the addressing base GOT into another table. \n+\t We need the first mov instruction before the _GLOBAL_OFFSET_TABLE_\n+\t in the pool anyway, so just move up the whole constant pool.  */\n+      if (last_got)\n+        from = PREV_INSN (last_got);\n+\n       /* Walk back to be just before any jump or label.\n \t Putting it before a label reduces the number of times the branch\n \t around the constant pool table will be hit.  Putting it before"}]}