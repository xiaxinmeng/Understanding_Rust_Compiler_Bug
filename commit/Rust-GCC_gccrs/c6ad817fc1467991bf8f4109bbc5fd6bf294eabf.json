{"sha": "c6ad817fc1467991bf8f4109bbc5fd6bf294eabf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZhZDgxN2ZjMTQ2Nzk5MWJmOGY0MTA5YmJjNWZkNmJmMjk0ZWFiZg==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2009-07-10T09:10:43Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-10T09:10:43Z"}, "message": "exp_util.adb (Find_Interface_Tag): Reorder processing of incoming Typ argument to ensure proper management of...\n\n2009-07-10  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_util.adb (Find_Interface_Tag): Reorder processing of incoming\n\tTyp argument to ensure proper management of access types.\n\nFrom-SVN: r149461", "tree": {"sha": "f0413a5127b01d679b986040d4b98f862f3ad1da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0413a5127b01d679b986040d4b98f862f3ad1da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6ad817fc1467991bf8f4109bbc5fd6bf294eabf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6ad817fc1467991bf8f4109bbc5fd6bf294eabf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6ad817fc1467991bf8f4109bbc5fd6bf294eabf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6ad817fc1467991bf8f4109bbc5fd6bf294eabf/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9d9dacaa9e0ea74d30aa2fe3227d7497d60f3176", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d9dacaa9e0ea74d30aa2fe3227d7497d60f3176", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d9dacaa9e0ea74d30aa2fe3227d7497d60f3176"}], "stats": {"total": 28, "additions": 15, "deletions": 13}, "files": [{"sha": "97aa7655330e1c8bdc48c4259d270e11808771a4", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6ad817fc1467991bf8f4109bbc5fd6bf294eabf/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6ad817fc1467991bf8f4109bbc5fd6bf294eabf/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=c6ad817fc1467991bf8f4109bbc5fd6bf294eabf", "patch": "@@ -1600,28 +1600,24 @@ package body Exp_Util is\n    begin\n       pragma Assert (Is_Interface (Iface));\n \n-      --  Handle private types\n-\n-      if Has_Private_Declaration (Typ)\n-        and then Present (Full_View (Typ))\n-      then\n-         Typ := Full_View (Typ);\n-      end if;\n-\n       --  Handle access types\n \n       if Is_Access_Type (Typ) then\n          Typ := Directly_Designated_Type (Typ);\n       end if;\n \n-      --  Handle task and protected types implementing interfaces\n+      --  Handle class-wide types\n \n-      if Is_Concurrent_Type (Typ) then\n-         Typ := Corresponding_Record_Type (Typ);\n+      if Is_Class_Wide_Type (Typ) then\n+         Typ := Root_Type (Typ);\n       end if;\n \n-      if Is_Class_Wide_Type (Typ) then\n-         Typ := Etype (Typ);\n+      --  Handle private types\n+\n+      if Has_Private_Declaration (Typ)\n+        and then Present (Full_View (Typ))\n+      then\n+         Typ := Full_View (Typ);\n       end if;\n \n       --  Handle entities from the limited view\n@@ -1631,6 +1627,12 @@ package body Exp_Util is\n          Typ := Non_Limited_View (Typ);\n       end if;\n \n+      --  Handle task and protected types implementing interfaces\n+\n+      if Is_Concurrent_Type (Typ) then\n+         Typ := Corresponding_Record_Type (Typ);\n+      end if;\n+\n       Find_Tag (Typ);\n       pragma Assert (Found);\n       return AI_Tag;"}]}