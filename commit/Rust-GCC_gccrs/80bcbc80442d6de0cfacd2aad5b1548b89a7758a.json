{"sha": "80bcbc80442d6de0cfacd2aad5b1548b89a7758a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODBiY2JjODA0NDJkNmRlMGNmYWNkMmFhZDViMTU0OGI4OWE3NzU4YQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2007-05-15T10:16:46Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-05-15T10:16:46Z"}, "message": "re PR libfortran/31915 (Failure with unf_io_convert_3.f90)\n\n2007-05-15  Tobias Burnus  <burnus@net-b.de>\n\n        PR libfortran/31915\n        * io/transfer.c (unformatted_read): Use proper size for real(10).\n          (unformatted_write): Ditto.\n\nFrom-SVN: r124741", "tree": {"sha": "e56ac09484435b14670df33d28d7df2ac5029a89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e56ac09484435b14670df33d28d7df2ac5029a89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80bcbc80442d6de0cfacd2aad5b1548b89a7758a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80bcbc80442d6de0cfacd2aad5b1548b89a7758a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80bcbc80442d6de0cfacd2aad5b1548b89a7758a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80bcbc80442d6de0cfacd2aad5b1548b89a7758a/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca0bfd1028786c39d5cb94635f85cec3a24c3583", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca0bfd1028786c39d5cb94635f85cec3a24c3583", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca0bfd1028786c39d5cb94635f85cec3a24c3583"}], "stats": {"total": 27, "additions": 18, "deletions": 9}, "files": [{"sha": "dec751f9c851275474cb84577f309f18cdabe71d", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80bcbc80442d6de0cfacd2aad5b1548b89a7758a/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80bcbc80442d6de0cfacd2aad5b1548b89a7758a/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=80bcbc80442d6de0cfacd2aad5b1548b89a7758a", "patch": "@@ -1,3 +1,9 @@\n+2007-05-15  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR libfortran/31915\n+\t* io/transfer.c (unformatted_read): Use proper size for real(10).\n+\t  (unformatted_write): Ditto.\n+\n 2007-05-14  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/30723"}, {"sha": "6d23e5e81b995207163c5bc0d66555893e54bbd2", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80bcbc80442d6de0cfacd2aad5b1548b89a7758a/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80bcbc80442d6de0cfacd2aad5b1548b89a7758a/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=80bcbc80442d6de0cfacd2aad5b1548b89a7758a", "patch": "@@ -721,12 +721,13 @@ unformatted_read (st_parameter_dt *dtp, bt type,\n       p = dest;\n       \n       /* By now, all complex variables have been split into their\n-\t constituent reals.  For types with padding, we only need to\n-\t read kind bytes.  We don't care about the contents\n-\t of the padding.  If we hit a short record, then sz is\n-\t adjusted accordingly, making later reads no-ops.  */\n+\t constituent reals.  */\n       \n-      sz = kind;\n+      if (type == BT_REAL || type == BT_COMPLEX)\n+\tsz = size_from_real_kind (kind);\n+      else\n+\tsz = kind;\n+\n       for (i=0; i<nelems; i++)\n \t{\n  \t  read_block_direct (dtp, buffer, &sz);\n@@ -767,11 +768,13 @@ unformatted_write (st_parameter_dt *dtp, bt type,\n       p = source;\n \n       /* By now, all complex variables have been split into their\n-\t constituent reals.  For types with padding, we only need to\n-\t read kind bytes.  We don't care about the contents\n-\t of the padding.  */\n+\t constituent reals.  */\n+\n+      if (type == BT_REAL || type == BT_COMPLEX)\n+\tsz = size_from_real_kind (kind);\n+      else\n+\tsz = kind;\n \n-      sz = kind;\n       for (i=0; i<nelems; i++)\n \t{\n \t  reverse_memcpy(buffer, p, size);"}]}