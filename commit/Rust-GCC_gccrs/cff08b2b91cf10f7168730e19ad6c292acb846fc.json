{"sha": "cff08b2b91cf10f7168730e19ad6c292acb846fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZmMDhiMmI5MWNmMTBmNzE2ODczMGUxOWFkNmMyOTJhY2I4NDZmYw==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-08-22T14:23:08Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-08-22T14:23:08Z"}, "message": "dwarf2out.c: Use rtx_insn\n\ngcc/\n\t* dwarf2out.c (last_var_location_insn): Strengthen this variable\n\tfrom rtx to rtx_insn *.\n\t(cached_next_real_insn): Likewise.\n\t(dwarf2out_end_epilogue): Replace use of NULL_RTX with NULL when\n\tworking with insns.\n\t(dwarf2out_var_location): Strengthen locals \"next_real\",\n\t\"next_note\", \"expected_next_loc_note\", \"last_start\", \"insn\" from\n\trtx to rtx_insn *.\n\nFrom-SVN: r214320", "tree": {"sha": "4557489d4528f43e8ee060ac3c8a601d4fa45394", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4557489d4528f43e8ee060ac3c8a601d4fa45394"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cff08b2b91cf10f7168730e19ad6c292acb846fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cff08b2b91cf10f7168730e19ad6c292acb846fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cff08b2b91cf10f7168730e19ad6c292acb846fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cff08b2b91cf10f7168730e19ad6c292acb846fc/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f65c531e03bfdb257e8e5319b4e4e8e5bb08c597", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f65c531e03bfdb257e8e5319b4e4e8e5bb08c597", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f65c531e03bfdb257e8e5319b4e4e8e5bb08c597"}], "stats": {"total": 33, "additions": 22, "deletions": 11}, "files": [{"sha": "95419f396d58ca1333d4a4865314f5ff4400c70d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cff08b2b91cf10f7168730e19ad6c292acb846fc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cff08b2b91cf10f7168730e19ad6c292acb846fc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cff08b2b91cf10f7168730e19ad6c292acb846fc", "patch": "@@ -1,3 +1,14 @@\n+2014-08-22  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* dwarf2out.c (last_var_location_insn): Strengthen this variable\n+\tfrom rtx to rtx_insn *.\n+\t(cached_next_real_insn): Likewise.\n+\t(dwarf2out_end_epilogue): Replace use of NULL_RTX with NULL when\n+\tworking with insns.\n+\t(dwarf2out_var_location): Strengthen locals \"next_real\",\n+\t\"next_note\", \"expected_next_loc_note\", \"last_start\", \"insn\" from\n+\trtx to rtx_insn *.\n+\n 2014-08-22  David Malcolm  <dmalcolm@redhat.com>\n \n \t* dwarf2cfi.c (add_cfis_to_fde): Strengthen locals \"insn\", \"next\""}, {"sha": "f76fc3fb9f1e2e579b04b8d83bc7ca076edcd106", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cff08b2b91cf10f7168730e19ad6c292acb846fc/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cff08b2b91cf10f7168730e19ad6c292acb846fc/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=cff08b2b91cf10f7168730e19ad6c292acb846fc", "patch": "@@ -100,8 +100,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gdb/gdb-index.h\"\n \n static void dwarf2out_source_line (unsigned int, const char *, int, bool);\n-static rtx last_var_location_insn;\n-static rtx cached_next_real_insn;\n+static rtx_insn *last_var_location_insn;\n+static rtx_insn *cached_next_real_insn;\n \n #ifdef VMS_DEBUGGING_INFO\n int vms_file_stats_name (const char *, long long *, long *, char *, int *);\n@@ -1138,8 +1138,8 @@ dwarf2out_end_epilogue (unsigned int line ATTRIBUTE_UNUSED,\n   dw_fde_ref fde;\n   char label[MAX_ARTIFICIAL_LABEL_BYTES];\n \n-  last_var_location_insn = NULL_RTX;\n-  cached_next_real_insn = NULL_RTX;\n+  last_var_location_insn = NULL;\n+  cached_next_real_insn = NULL;\n \n   if (dwarf2out_do_cfi_asm ())\n     fprintf (asm_out_file, \"\\t.cfi_endproc\\n\");\n@@ -21289,11 +21289,11 @@ dwarf2out_var_location (rtx_insn *loc_note)\n {\n   char loclabel[MAX_ARTIFICIAL_LABEL_BYTES + 2];\n   struct var_loc_node *newloc;\n-  rtx next_real, next_note;\n+  rtx_insn *next_real, *next_note;\n   static const char *last_label;\n   static const char *last_postcall_label;\n   static bool last_in_cold_section_p;\n-  static rtx expected_next_loc_note;\n+  static rtx_insn *expected_next_loc_note;\n   tree decl;\n   bool var_loc_p;\n \n@@ -21320,7 +21320,7 @@ dwarf2out_var_location (rtx_insn *loc_note)\n   if (next_real)\n     {\n       if (expected_next_loc_note != loc_note)\n-\tnext_real = NULL_RTX;\n+\tnext_real = NULL;\n     }\n \n   next_note = NEXT_INSN (loc_note);\n@@ -21329,7 +21329,7 @@ dwarf2out_var_location (rtx_insn *loc_note)\n       || ! NOTE_P (next_note)\n       || (NOTE_KIND (next_note) != NOTE_INSN_VAR_LOCATION\n \t  && NOTE_KIND (next_note) != NOTE_INSN_CALL_ARG_LOCATION))\n-    next_note = NULL_RTX;\n+    next_note = NULL;\n \n   if (! next_real)\n     next_real = next_real_insn (loc_note);\n@@ -21340,7 +21340,7 @@ dwarf2out_var_location (rtx_insn *loc_note)\n       cached_next_real_insn = next_real;\n     }\n   else\n-    cached_next_real_insn = NULL_RTX;\n+    cached_next_real_insn = NULL;\n \n   /* If there are no instructions which would be affected by this note,\n      don't do anything.  */\n@@ -21393,8 +21393,8 @@ dwarf2out_var_location (rtx_insn *loc_note)\n \t  && in_first_function_p\n \t  && maybe_at_text_label_p)\n \t{\n-\t  static rtx last_start;\n-\t  rtx insn;\n+\t  static rtx_insn *last_start;\n+\t  rtx_insn *insn;\n \t  for (insn = loc_note; insn; insn = previous_insn (insn))\n \t    if (insn == last_start)\n \t      break;"}]}