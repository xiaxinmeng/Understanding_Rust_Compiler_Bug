{"sha": "d7fb0a6db193bc525447791b2881ecdc17d7cb07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdmYjBhNmRiMTkzYmM1MjU0NDc3OTFiMjg4MWVjZGMxN2Q3Y2IwNw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2010-01-03T17:03:38Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2010-01-03T17:03:38Z"}, "message": "Pass -dumpbase and -dumpdir to gcc for LTO\n\ngcc/\n\n2010-01-03  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR lto/41564\n\t* common.opt: Add dumpdir.\n\n\t* gcc.c (cc1_options): Add \"-dumpbase %B\" only if -dumpbase\n\tisn't specified.\n\t(option_map): Add --dumpdir.\n\n\t* gcc.h (DEFAULT_WORD_SWITCH_TAKES_ARG): Add dumpdir.\n\n\t* lto-wrapper.c (run_gcc): Add -dumpbase and -dumpdir for -o.\n\n\t* opts.c (decode_options): Try dump_dir_name first if\n\tdump_base_name isn't an absolute path.\n\t(common_handle_option): Handle OPT_dumpdir.\n\n\t* toplev.c (dump_dir_name): New.\n\t(print_switch_values): Also ignore -dumpdir.\n\n\t* toplev.h (dump_dir_name): New.\n\ngcc/lto/\n\n2010-01-03  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR lto/41564\n\t* lto.c (DUMPBASE_SUFFIX): New.\n\t(lto_execute_ltrans): Append a sequence number to -dumpbase\n\tfor LTRANS.\n\nFrom-SVN: r155591", "tree": {"sha": "12c1666e709c28de90b30106f5254dc8d2850417", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12c1666e709c28de90b30106f5254dc8d2850417"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7fb0a6db193bc525447791b2881ecdc17d7cb07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7fb0a6db193bc525447791b2881ecdc17d7cb07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7fb0a6db193bc525447791b2881ecdc17d7cb07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7fb0a6db193bc525447791b2881ecdc17d7cb07/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eb07a8f567dbb31885c23dbceb43db4489ca1884", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb07a8f567dbb31885c23dbceb43db4489ca1884", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb07a8f567dbb31885c23dbceb43db4489ca1884"}], "stats": {"total": 160, "additions": 130, "deletions": 30}, "files": [{"sha": "414dc2c56b417ec857cd29aa796eda4f92adb00e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7fb0a6db193bc525447791b2881ecdc17d7cb07/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7fb0a6db193bc525447791b2881ecdc17d7cb07/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d7fb0a6db193bc525447791b2881ecdc17d7cb07", "patch": "@@ -1,3 +1,25 @@\n+2010-01-03  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR lto/41564\n+\t* common.opt: Add dumpdir.\n+\n+\t* gcc.c (cc1_options): Add \"-dumpbase %B\" only if -dumpbase\n+\tisn't specified.\n+\t(option_map): Add --dumpdir.\n+\n+\t* gcc.h (DEFAULT_WORD_SWITCH_TAKES_ARG): Add dumpdir.\n+\n+\t* lto-wrapper.c (run_gcc): Add -dumpbase and -dumpdir for -o.\n+\n+\t* opts.c (decode_options): Try dump_dir_name first if\n+\tdump_base_name isn't an absolute path.\n+\t(common_handle_option): Handle OPT_dumpdir.\n+\n+\t* toplev.c (dump_dir_name): New.\n+\t(print_switch_values): Also ignore -dumpdir.\n+\n+\t* toplev.h (dump_dir_name): New.\n+\n 2010-01-03  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/42589"}, {"sha": "ac942ee6a1fec4bc7c4a5c508bd3425c5cae6fa5", "filename": "gcc/common.opt", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7fb0a6db193bc525447791b2881ecdc17d7cb07/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7fb0a6db193bc525447791b2881ecdc17d7cb07/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=d7fb0a6db193bc525447791b2881ecdc17d7cb07", "patch": "@@ -1,6 +1,6 @@\n ; Options for the language- and target-independent parts of the compiler.\n \n-; Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+; Copyright (C) 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n ; Free Software Foundation, Inc.\n ;\n ; This file is part of GCC.\n@@ -253,6 +253,10 @@ dumpbase\n Common Separate\n -dumpbase <file>\tSet the file basename to be used for dumps\n \n+dumpdir\n+Common Separate\n+-dumpdir <dir>\t\tSet the directory name to be used for dumps\n+\n ; The version of the C++ ABI in use.  The following values are allowed:\n ;\n ; 0: The version of the ABI believed most conformant with the C++ ABI"}, {"sha": "068671dd72553d9c1569098673b5c83eb8f4e5f3", "filename": "gcc/gcc.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7fb0a6db193bc525447791b2881ecdc17d7cb07/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7fb0a6db193bc525447791b2881ecdc17d7cb07/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=d7fb0a6db193bc525447791b2881ecdc17d7cb07", "patch": "@@ -1,6 +1,7 @@\n /* Compiler driver program that can handle many languages.\n    Copyright (C) 1987, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,\n+   2010\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -891,7 +892,7 @@ static const char *cpp_debug_options = \"%{d*}\";\n /* NB: This is shared amongst all front-ends, except for Ada.  */\n static const char *cc1_options =\n \"%{pg:%{fomit-frame-pointer:%e-pg and -fomit-frame-pointer are incompatible}}\\\n- %1 %{!Q:-quiet} -dumpbase %B %{d*} %{m*} %{a*}\\\n+ %1 %{!Q:-quiet} %{!dumpbase:-dumpbase %B} %{d*} %{m*} %{a*}\\\n  %{fcompare-debug-second:%:compare-debug-auxbase-opt(%b)} \\\n  %{!fcompare-debug-second:%{c|S:%{o*:-auxbase-strip %*}%{!o*:-auxbase %b}}}%{!c:%{!S:-auxbase %b}} \\\n  %{g*} %{O*} %{W*&pedantic*} %{w} %{std*&ansi&trigraphs}\\\n@@ -1188,6 +1189,7 @@ static const struct option_map option_map[] =\n    {\"--dependencies\", \"-M\", 0},\n    {\"--dump\", \"-d\", \"a\"},\n    {\"--dumpbase\", \"-dumpbase\", \"a\"},\n+   {\"--dumpdir\", \"-dumpdir\", \"a\"},\n    {\"--encoding\", \"-fencoding=\", \"aj\"},\n    {\"--entry\", \"-e\", 0},\n    {\"--extra-warnings\", \"-W\", 0},"}, {"sha": "e62b11eafc5c90b3b0c30ef0153e04af1ad65470", "filename": "gcc/gcc.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7fb0a6db193bc525447791b2881ecdc17d7cb07/gcc%2Fgcc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7fb0a6db193bc525447791b2881ecdc17d7cb07/gcc%2Fgcc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.h?ref=d7fb0a6db193bc525447791b2881ecdc17d7cb07", "patch": "@@ -1,5 +1,5 @@\n /* Header file for modules that link with gcc.c\n-   Copyright (C) 1999, 2000, 2001, 2003, 2004, 2007, 2008\n+   Copyright (C) 1999, 2000, 2001, 2003, 2004, 2007, 2008, 2010\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -52,7 +52,8 @@ struct spec_function\n   || !strcmp (STR, \"isysroot\") \\\n   || !strcmp (STR, \"-param\") || !strcmp (STR, \"specs\") \\\n   || !strcmp (STR, \"MF\") || !strcmp (STR, \"MT\") || !strcmp (STR, \"MQ\") \\\n-  || !strcmp (STR, \"fintrinsic-modules-path\") || !strcmp (STR, \"dumpbase\"))\n+  || !strcmp (STR, \"fintrinsic-modules-path\") \\\n+  || !strcmp (STR, \"dumpbase\") || !strcmp (STR, \"dumpdir\"))\n \n \n /* These are exported by gcc.c.  */"}, {"sha": "ec0a96ea2b6e332aaf3b62d1184249ef6cf4d8c7", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7fb0a6db193bc525447791b2881ecdc17d7cb07/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7fb0a6db193bc525447791b2881ecdc17d7cb07/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=d7fb0a6db193bc525447791b2881ecdc17d7cb07", "patch": "@@ -1,5 +1,5 @@\n /* Wrapper to call lto.  Used by collect2 and the linker plugin.\n-   Copyright (C) 2009 Free Software Foundation, Inc.\n+   Copyright (C) 2009, 2010 Free Software Foundation, Inc.\n \n    Factored out of collect2 by Rafael Espindola <espindola@google.com>\n \n@@ -258,7 +258,7 @@ run_gcc (unsigned argc, char *argv[])\n   const char **argv_ptr;\n   char *list_option_full = NULL;\n \n-  new_argc += 8;\n+  new_argc += 12;\n   new_argv = (const char **) xcalloc (sizeof (char *), new_argc);\n \n   argv_ptr = new_argv;\n@@ -316,7 +316,31 @@ run_gcc (unsigned argc, char *argv[])\n \t     temporary file for the LTO output.  The `-o' option\n \t     will be interpreted by the linker.  */\n \t  if (s[2] == '\\0')\n-\t    i++;\n+\t    {\n+\t      char *output_dir, *base, *name;\n+\n+\t      i++;\n+\t      output_dir = xstrdup (argv[i]);\n+\t      base = output_dir;\n+\t      for (name = base; *name; name++)\n+\t\tif (IS_DIR_SEPARATOR (*name))\n+\t\t  base = name + 1;\n+\t      *base = '\\0';\n+\n+\t      *argv_ptr++ = \"-dumpbase\";\n+\t      if (*output_dir == '\\0')\n+\t\t{\n+\t\t  static char current_dir[] =\n+\t\t    { '.', DIR_SEPARATOR, '\\0' };\n+\t\t  output_dir = current_dir;\n+\t\t  *argv_ptr++ = argv[i];\n+\t\t}\n+\t      else\n+\t\t*argv_ptr++ = &argv[i][base - output_dir];\n+\n+\t      *argv_ptr++ = \"-dumpdir\";\n+\t      *argv_ptr++ = output_dir;\n+\t    }\n \t}\n       else\n \t/* Pass the option or argument to LTO.  */"}, {"sha": "92e595fac6702d29d8a7d6cf09a0d8d4dc0e0003", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7fb0a6db193bc525447791b2881ecdc17d7cb07/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7fb0a6db193bc525447791b2881ecdc17d7cb07/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=d7fb0a6db193bc525447791b2881ecdc17d7cb07", "patch": "@@ -1,3 +1,10 @@\n+2010-01-03  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR lto/41564\n+\t* lto.c (DUMPBASE_SUFFIX): New.\n+\t(lto_execute_ltrans): Append a sequence number to -dumpbase\n+\tfor LTRANS.\n+\n 2010-01-02  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR lto/42580"}, {"sha": "1608e56e1584bfdad295256326c0402000637a54", "filename": "gcc/lto/lto.c", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7fb0a6db193bc525447791b2881ecdc17d7cb07/gcc%2Flto%2Flto.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7fb0a6db193bc525447791b2881ecdc17d7cb07/gcc%2Flto%2Flto.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto.c?ref=d7fb0a6db193bc525447791b2881ecdc17d7cb07", "patch": "@@ -1,5 +1,5 @@\n /* Top-level LTO routines.\n-   Copyright 2009 Free Software Foundation, Inc.\n+   Copyright 2009, 2010 Free Software Foundation, Inc.\n    Contributed by CodeSourcery, Inc.\n \n This file is part of GCC.\n@@ -1069,6 +1069,8 @@ lto_wpa_write_files (void)\n   return output_files;\n }\n \n+/* Template of LTRANS dumpbase suffix.  */\n+#define DUMPBASE_SUFFIX\t\".ltrans18446744073709551615\"\n \n /* Perform local transformations (LTRANS) on the files in the NULL-terminated\n    FILES array.  These should have been written previously by\n@@ -1088,6 +1090,8 @@ lto_execute_ltrans (char *const *files)\n   int err;\n   int status;\n   FILE *ltrans_output_list_stream = NULL;\n+  bool seen_dumpbase = false;\n+  char *dumpbase_suffix = NULL;\n \n   timevar_push (TV_WHOPR_WPA_LTRANS_EXEC);\n \n@@ -1126,13 +1130,26 @@ lto_execute_ltrans (char *const *files)\n \t  ++j;\n \tobstack_init (&env_obstack);\n \tobstack_grow (&env_obstack, &collect_gcc_options[i], j - i);\n-\tobstack_1grow (&env_obstack, 0);\n+\tif (seen_dumpbase)\n+\t  obstack_grow (&env_obstack, DUMPBASE_SUFFIX,\n+\t\t\tsizeof (DUMPBASE_SUFFIX));\n+\telse\n+\t  obstack_1grow (&env_obstack, 0);\n \toption = XOBFINISH (&env_obstack, char *);\n+\tif (seen_dumpbase)\n+\t  {\n+\t    dumpbase_suffix = option + 7 + j - i;\n+\t    seen_dumpbase = false;\n+\t  }\n \n \t/* LTRANS does not need -fwpa nor -fltrans-*.  */\n \tif (strncmp (option, \"-fwpa\", 5) != 0\n \t    && strncmp (option, \"-fltrans-\", 9) != 0)\n-\t  *argv_ptr++ = option;\n+\t  {\n+\t    if (strncmp (option, \"-dumpbase\", 9) == 0)\n+\t      seen_dumpbase = true;\n+\t    *argv_ptr++ = option;\n+\t  }\n       }\n   *argv_ptr++ = \"-fltrans\";\n \n@@ -1190,6 +1207,11 @@ lto_execute_ltrans (char *const *files)\n \t  argv_ptr[2] = files[i];\n \t  argv_ptr[3] = NULL;\n \n+\t  /* Append a sequence number to -dumpbase for LTRANS.  */\n+\t  if (dumpbase_suffix)\n+\t    snprintf (dumpbase_suffix, sizeof (DUMPBASE_SUFFIX) - 7,\n+\t\t      \"%lu\", (unsigned long) i);\n+\n \t  /* Execute the driver.  */\n \t  pex = pex_init (0, \"lto1\", NULL);\n \t  if (pex == NULL)"}, {"sha": "4ba0d7fd0bf93b93031e028eab11b3b9be237f6d", "filename": "gcc/opts.c", "status": "modified", "additions": 28, "deletions": 17, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7fb0a6db193bc525447791b2881ecdc17d7cb07/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7fb0a6db193bc525447791b2881ecdc17d7cb07/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=d7fb0a6db193bc525447791b2881ecdc17d7cb07", "patch": "@@ -1,5 +1,5 @@\n /* Command line option handling.\n-   Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+   Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by Neil Booth.\n \n@@ -971,24 +971,31 @@ decode_options (unsigned int argc, const char **argv)\n \n   handle_options (argc, argv, lang_mask);\n \n-  /* Make DUMP_BASE_NAME relative to the AUX_BASE_NAME directory,\n-     typically the directory to contain the object file.  */\n-  if (aux_base_name && ! IS_ABSOLUTE_PATH (dump_base_name))\n+  if (dump_base_name && ! IS_ABSOLUTE_PATH (dump_base_name))\n     {\n-      const char *aux_base;\n-\n-      base_of_path (aux_base_name, &aux_base);\n-      if (aux_base_name != aux_base)\n+      /* First try to make DUMP_BASE_NAME relative to the DUMP_DIR_NAME\n+\t directory.  Then try to make DUMP_BASE_NAME relative to the\n+\t AUX_BASE_NAME directory, typically the directory to contain\n+\t the object file.  */\n+      if (dump_dir_name)\n+\tdump_base_name = concat (dump_dir_name, dump_base_name, NULL);\n+      else if (aux_base_name)\n \t{\n-\t  int dir_len = aux_base - aux_base_name;\n-\t  char *new_dump_base_name =\n-\t    XNEWVEC (char, strlen(dump_base_name) + dir_len + 1);\n-\n-\t  /* Copy directory component from AUX_BASE_NAME.  */\n-\t  memcpy (new_dump_base_name, aux_base_name, dir_len);\n-\t  /* Append existing DUMP_BASE_NAME.  */\n-\t  strcpy (new_dump_base_name + dir_len, dump_base_name);\n-\t  dump_base_name = new_dump_base_name;\n+\t  const char *aux_base;\n+\n+\t  base_of_path (aux_base_name, &aux_base);\n+\t  if (aux_base_name != aux_base)\n+\t    {\n+\t      int dir_len = aux_base - aux_base_name;\n+\t      char *new_dump_base_name =\n+\t\tXNEWVEC (char, strlen(dump_base_name) + dir_len + 1);\n+\n+\t      /* Copy directory component from AUX_BASE_NAME.  */\n+\t      memcpy (new_dump_base_name, aux_base_name, dir_len);\n+\t      /* Append existing DUMP_BASE_NAME.  */\n+\t      strcpy (new_dump_base_name + dir_len, dump_base_name);\n+\t      dump_base_name = new_dump_base_name;\n+\t    }\n \t}\n     }\n \n@@ -1701,6 +1708,10 @@ common_handle_option (size_t scode, const char *arg, int value,\n       dump_base_name = arg;\n       break;\n \n+    case OPT_dumpdir:\n+      dump_dir_name = arg;\n+      break;\n+\n     case OPT_falign_functions_:\n       align_functions = value;\n       break;"}, {"sha": "224b28892d24681f59b83f10b46b160ffc5c51b7", "filename": "gcc/toplev.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7fb0a6db193bc525447791b2881ecdc17d7cb07/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7fb0a6db193bc525447791b2881ecdc17d7cb07/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=d7fb0a6db193bc525447791b2881ecdc17d7cb07", "patch": "@@ -152,6 +152,10 @@ struct line_maps *line_table;\n \n const char *dump_base_name;\n \n+/* Directory used for dump output files.  */\n+\n+const char *dump_dir_name;\n+\n /* Name to use as a base for auxiliary output files.  */\n \n const char *aux_base_name;\n@@ -1388,6 +1392,7 @@ print_switch_values (print_switch_fn_type print_fn)\n \t  /* Ignore these.  */\n \t  if (strcmp (*p, \"-o\") == 0\n \t      || strcmp (*p, \"-dumpbase\") == 0\n+\t      || strcmp (*p, \"-dumpdir\") == 0\n \t      || strcmp (*p, \"-auxbase\") == 0)\n \t    {\n \t      if (p[1] != NULL)"}, {"sha": "983022eff692f1f83811fd781cbf8cd38882e430", "filename": "gcc/toplev.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7fb0a6db193bc525447791b2881ecdc17d7cb07/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7fb0a6db193bc525447791b2881ecdc17d7cb07/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=d7fb0a6db193bc525447791b2881ecdc17d7cb07", "patch": "@@ -1,6 +1,7 @@\n /* toplev.h - Various declarations for functions found in toplev.c\n-   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2006, 2007, 2008,\n-   2009 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2006, 2007,\n+   2008, 2009, 2010\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -116,6 +117,7 @@ extern unsigned local_tick;\n \n extern const char *progname;\n extern const char *dump_base_name;\n+extern const char *dump_dir_name;\n extern const char *aux_base_name;\n extern const char *aux_info_file_name;\n extern const char *profile_data_prefix;"}]}