{"sha": "1799efef2cedc4e593396c29b866891244cbc3a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc5OWVmZWYyY2VkYzRlNTkzMzk2YzI5Yjg2Njg5MTI0NGNiYzNhOQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2007-03-19T19:52:19Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2007-03-19T19:52:19Z"}, "message": "re PR tree-optimization/30984 (ICE with computed goto and constants)\n\n\n        * tree-cfg.c (find_taken_edge): Tighten conditions for\n        optimizing computed gotos.\n\n        * PR tree-optimization/30984\n        * gcc.c-torture/pr30984.c: New test.\n\nFrom-SVN: r123067", "tree": {"sha": "9801ed0ff3b74a2c13137bfc63578ad1674ffb07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9801ed0ff3b74a2c13137bfc63578ad1674ffb07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1799efef2cedc4e593396c29b866891244cbc3a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1799efef2cedc4e593396c29b866891244cbc3a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1799efef2cedc4e593396c29b866891244cbc3a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1799efef2cedc4e593396c29b866891244cbc3a9/comments", "author": null, "committer": null, "parents": [{"sha": "7270dd8e8dd70e91690c434421a8ccf1074fda38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7270dd8e8dd70e91690c434421a8ccf1074fda38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7270dd8e8dd70e91690c434421a8ccf1074fda38"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "ec45c0e8364b422c6e82da277c486845e7a9e814", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1799efef2cedc4e593396c29b866891244cbc3a9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1799efef2cedc4e593396c29b866891244cbc3a9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1799efef2cedc4e593396c29b866891244cbc3a9", "patch": "@@ -1,3 +1,8 @@\n+2007-03-19  Jeff Law  <law@redhat.com>\n+\n+\t* tree-cfg.c (find_taken_edge): Tighten conditions for\n+\toptimizing computed gotos.\n+\n 2007-03-19  Michael Matz  <matz@suse.de>\n \n \t* builtins.c (expand_builtin_sync_operation,"}, {"sha": "72474a89ce2b3ae4ba744f11c37e3b8f3e5da8cf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1799efef2cedc4e593396c29b866891244cbc3a9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1799efef2cedc4e593396c29b866891244cbc3a9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1799efef2cedc4e593396c29b866891244cbc3a9", "patch": "@@ -1,3 +1,8 @@\n+2007-03-19  Jeff Law  <law@redhat.com>\n+\n+\t* PR tree-optimization/30984\n+\t* gcc.c-torture/pr30984.c: New test.\n+\n 2007-03-19  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \tRichard Guenther  <rguenther@suse.de>\n "}, {"sha": "265a6f3616b16962d979b09922b5ee6a492fa5b5", "filename": "gcc/testsuite/gcc.c-torture/compile/pr30984.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1799efef2cedc4e593396c29b866891244cbc3a9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr30984.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1799efef2cedc4e593396c29b866891244cbc3a9/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr30984.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr30984.c?ref=1799efef2cedc4e593396c29b866891244cbc3a9", "patch": "@@ -0,0 +1,7 @@\n+int fs_exec(int ino)\n+{\n+ void *src = 0;\n+ if (ino)\n+   src = (void*)0xe000;\n+ goto *src;\n+}"}, {"sha": "fa4800e00c241dc45320dfba58744b14134a1b52", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1799efef2cedc4e593396c29b866891244cbc3a9/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1799efef2cedc4e593396c29b866891244cbc3a9/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=1799efef2cedc4e593396c29b866891244cbc3a9", "patch": "@@ -2039,7 +2039,18 @@ find_taken_edge (basic_block bb, tree val)\n     return find_taken_edge_switch_expr (bb, val);\n \n   if (computed_goto_p (stmt))\n-    return find_taken_edge_computed_goto (bb, TREE_OPERAND( val, 0));\n+    {\n+      /* Only optimize if the argument is a label, if the argument is\n+\t not a label then we can not construct a proper CFG.\n+\n+         It may be the case that we only need to allow the LABEL_REF to\n+         appear inside an ADDR_EXPR, but we also allow the LABEL_REF to\n+         appear inside a LABEL_EXPR just to be safe.  */\n+      if ((TREE_CODE (val) == ADDR_EXPR || TREE_CODE (val) == LABEL_EXPR)\n+\t  && TREE_CODE (TREE_OPERAND (val, 0)) == LABEL_DECL)\n+\treturn find_taken_edge_computed_goto (bb, TREE_OPERAND (val, 0));\n+      return NULL;\n+    }\n \n   gcc_unreachable ();\n }"}]}