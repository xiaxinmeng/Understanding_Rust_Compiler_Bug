{"sha": "b6a48401da51e9042b6f0822d532b3b472492658", "node_id": "C_kwDOANBUbNoAKGI2YTQ4NDAxZGE1MWU5MDQyYjZmMDgyMmQ1MzJiM2I0NzI0OTI2NTg", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2022-04-26T14:53:38Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2022-04-26T14:53:38Z"}, "message": "c++: decltype of non-dependent call of class type [PR105386]\n\nWe need to pass tf_decltype when instantiating a non-dependent decltype\noperand, like tsubst does in the dependent case, so that we don't force\ncompletion of a prvalue operand's class type.\n\n\tPR c++/105386\n\ngcc/cp/ChangeLog:\n\n\t* semantics.cc (finish_decltype_type): Pass tf_decltype to\n\tinstantiate_non_dependent_expr_sfinae.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp0x/decltype81.C: New test.", "tree": {"sha": "b0d11ef6a5a9a2834c9782b44402ad96f07af3a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0d11ef6a5a9a2834c9782b44402ad96f07af3a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6a48401da51e9042b6f0822d532b3b472492658", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6a48401da51e9042b6f0822d532b3b472492658", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6a48401da51e9042b6f0822d532b3b472492658", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6a48401da51e9042b6f0822d532b3b472492658/comments", "author": null, "committer": null, "parents": [{"sha": "cd4acb8cd9e45fd35664baa5b0a3150e479aae32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd4acb8cd9e45fd35664baa5b0a3150e479aae32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd4acb8cd9e45fd35664baa5b0a3150e479aae32"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "ab48f11c9be5fc0b75ef98abbe98a2597101d724", "filename": "gcc/cp/semantics.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6a48401da51e9042b6f0822d532b3b472492658/gcc%2Fcp%2Fsemantics.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6a48401da51e9042b6f0822d532b3b472492658/gcc%2Fcp%2Fsemantics.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.cc?ref=b6a48401da51e9042b6f0822d532b3b472492658", "patch": "@@ -11252,7 +11252,7 @@ finish_decltype_type (tree expr, bool id_expression_or_member_access_p,\n     }\n   else if (processing_template_decl)\n     {\n-      expr = instantiate_non_dependent_expr_sfinae (expr, complain);\n+      expr = instantiate_non_dependent_expr_sfinae (expr, complain|tf_decltype);\n       if (expr == error_mark_node)\n \treturn error_mark_node;\n       /* Keep processing_template_decl cleared for the rest of the function"}, {"sha": "7d25db39d9c7921813b6b5bda4b50dd9275590e4", "filename": "gcc/testsuite/g++.dg/cpp0x/decltype81.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6a48401da51e9042b6f0822d532b3b472492658/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype81.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6a48401da51e9042b6f0822d532b3b472492658/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype81.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fdecltype81.C?ref=b6a48401da51e9042b6f0822d532b3b472492658", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/105386\n+// { dg-do compile { target c++11 } }\n+\n+template<class T> struct NoInst {\n+  static_assert(sizeof(T) == 9999, \"NoInst instantiated\");\n+};\n+\n+template<class T> NoInst<T> f(T);\n+\n+template<class>\n+struct A {\n+  using type = decltype(f(0));\n+};\n+\n+A<int> a;"}]}