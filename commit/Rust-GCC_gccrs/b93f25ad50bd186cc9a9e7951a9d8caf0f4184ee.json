{"sha": "b93f25ad50bd186cc9a9e7951a9d8caf0f4184ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjkzZjI1YWQ1MGJkMTg2Y2M5YTllNzk1MWE5ZDhjYWYwZjQxODRlZQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2018-04-03T13:27:26Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2018-04-03T13:27:26Z"}, "message": "Bits propagation only for int and ptr types\n\n2018-03-29  Martin Liska  <mliska@suse.cz>\n\t    Martin Jambor  <mjambor@suse.cz>\n\n\tPR ipa/84947\n\t* ipa-cp.c (propagate_bits_across_jump_function): Bail out if\n\tparam_type is not an integral or pointer type.\n\n\nCo-Authored-By: Martin Jambor <mjambor@suse.cz>\n\nFrom-SVN: r259029", "tree": {"sha": "00fed89c780b4d7654668bf4f39ebb5dd41cce09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00fed89c780b4d7654668bf4f39ebb5dd41cce09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b93f25ad50bd186cc9a9e7951a9d8caf0f4184ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b93f25ad50bd186cc9a9e7951a9d8caf0f4184ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b93f25ad50bd186cc9a9e7951a9d8caf0f4184ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b93f25ad50bd186cc9a9e7951a9d8caf0f4184ee/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b79861dc95ab7e737f11f84e0e1250c76e16fcab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b79861dc95ab7e737f11f84e0e1250c76e16fcab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b79861dc95ab7e737f11f84e0e1250c76e16fcab"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "2a43c39a290c8770585750064c2215934d9884b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b93f25ad50bd186cc9a9e7951a9d8caf0f4184ee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b93f25ad50bd186cc9a9e7951a9d8caf0f4184ee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b93f25ad50bd186cc9a9e7951a9d8caf0f4184ee", "patch": "@@ -1,3 +1,10 @@\n+2018-03-29  Martin Liska  <mliska@suse.cz>\n+\t    Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/84947\n+\t* ipa-cp.c (propagate_bits_across_jump_function): Bail out if\n+\tparam_type is not an integral or pointer type.\n+\n 2018-04-03  Richard Biener  <rguenther@suse.de>\n \n \t* sese.h (recompute_all_dominators): Remove."}, {"sha": "ec216010f2f532cb2bf1b308b5e5eac2cf891400", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b93f25ad50bd186cc9a9e7951a9d8caf0f4184ee/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b93f25ad50bd186cc9a9e7951a9d8caf0f4184ee/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=b93f25ad50bd186cc9a9e7951a9d8caf0f4184ee", "patch": "@@ -1811,14 +1811,16 @@ propagate_bits_across_jump_function (cgraph_edge *cs, int idx,\n   struct ipa_node_params *callee_info = IPA_NODE_REF (callee);\n   tree parm_type = ipa_get_type (callee_info, idx);\n \n-  /* For K&R C programs, ipa_get_type() could return NULL_TREE.\n-     Avoid the transform for these cases.  */\n-  if (!parm_type)\n+  /* For K&R C programs, ipa_get_type() could return NULL_TREE.  Avoid the\n+     transform for these cases.  Similarly, we can have bad type mismatches\n+     with LTO, avoid doing anything with those too.  */\n+  if (!parm_type\n+      || (!INTEGRAL_TYPE_P (parm_type) && !POINTER_TYPE_P (parm_type)))\n     {\n       if (dump_file && (dump_flags & TDF_DETAILS))\n-\tfprintf (dump_file, \"Setting dest_lattice to bottom, because\"\n-\t\t\t    \" param %i type is NULL for %s\\n\", idx,\n-\t\t\t    cs->callee->name ());\n+\tfprintf (dump_file, \"Setting dest_lattice to bottom, because type of \"\n+\t\t \"param %i of %s is NULL or unsuitable for bits propagation\\n\",\n+\t\t idx, cs->callee->name ());\n \n       return dest_lattice->set_to_bottom ();\n     }"}]}