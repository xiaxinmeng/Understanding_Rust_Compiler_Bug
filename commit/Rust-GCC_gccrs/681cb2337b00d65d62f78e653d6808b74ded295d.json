{"sha": "681cb2337b00d65d62f78e653d6808b74ded295d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjgxY2IyMzM3YjAwZDY1ZDYyZjc4ZTY1M2Q2ODA4Yjc0ZGVkMjk1ZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2000-10-31T16:02:45Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2000-10-31T16:02:45Z"}, "message": "expr.c (do_store_flag): Pass operand_mode instead of GET_MODE (op0) to expand_shift.\n\n\t* expr.c (do_store_flag): Pass operand_mode instead of GET_MODE (op0)\n\tto expand_shift.\n\n\t* g++.old-deja/g++.other/inline16.C: New test.\n\nFrom-SVN: r37160", "tree": {"sha": "d920483e11ab43928240149c1e181d5c0098cbaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d920483e11ab43928240149c1e181d5c0098cbaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/681cb2337b00d65d62f78e653d6808b74ded295d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/681cb2337b00d65d62f78e653d6808b74ded295d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/681cb2337b00d65d62f78e653d6808b74ded295d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/681cb2337b00d65d62f78e653d6808b74ded295d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e541461a498d47602918a711290095ed28041355", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e541461a498d47602918a711290095ed28041355", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e541461a498d47602918a711290095ed28041355"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "6d3e05273e7dcca00e3d03b7fe1ae206e063bad4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/681cb2337b00d65d62f78e653d6808b74ded295d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/681cb2337b00d65d62f78e653d6808b74ded295d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=681cb2337b00d65d62f78e653d6808b74ded295d", "patch": "@@ -1,3 +1,8 @@\n+2000-10-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* expr.c (do_store_flag): Pass operand_mode instead of GET_MODE (op0)\n+\tto expand_shift.\n+\n Tue Oct 31 15:33:27 2000  J\"orn Rennecke <amylaar@redhat.com>\n \n \t* sh-protos.h (reg_no_subreg_operand, emit_fpscr_use): Don't declare."}, {"sha": "22ed6ad31353e6817bddb3e4dc73a7d648e42587", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/681cb2337b00d65d62f78e653d6808b74ded295d/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/681cb2337b00d65d62f78e653d6808b74ded295d/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=681cb2337b00d65d62f78e653d6808b74ded295d", "patch": "@@ -10285,7 +10285,7 @@ do_store_flag (exp, target, mode, only_cheap)\n       op0 = expand_expr (inner, subtarget, VOIDmode, 0);\n \n       if (bitnum != 0)\n-\top0 = expand_shift (RSHIFT_EXPR, GET_MODE (op0), op0,\n+\top0 = expand_shift (RSHIFT_EXPR, operand_mode, op0,\n \t\t\t    size_int (bitnum), subtarget, ops_unsignedp);\n \n       if (GET_MODE (op0) != mode)"}, {"sha": "33002ac02374e1bc399a6ee5fb39799d498dc4dd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/681cb2337b00d65d62f78e653d6808b74ded295d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/681cb2337b00d65d62f78e653d6808b74ded295d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=681cb2337b00d65d62f78e653d6808b74ded295d", "patch": "@@ -1,3 +1,7 @@\n+2000-10-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.old-deja/g++.other/inline16.C: New test.\n+\n 2000-10-31  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* g++.old-deja/g++.pt/memtemp77.C (main): Adjust comparison against."}, {"sha": "3404f43977cbf0689905192371a7cc0d8d82f90d", "filename": "gcc/testsuite/g++.old-deja/g++.other/inline16.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/681cb2337b00d65d62f78e653d6808b74ded295d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/681cb2337b00d65d62f78e653d6808b74ded295d/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finline16.C?ref=681cb2337b00d65d62f78e653d6808b74ded295d", "patch": "@@ -0,0 +1,24 @@\n+// Build don't link:\n+// Origin: Jakub Jelinek <jakub@redhat.com>\n+// Special g++ Options: -O1\n+\n+struct foo {\n+  bool x;\n+  inline void a (unsigned char y);\n+  inline void b (void);\n+  virtual ~foo ();\n+};\n+\n+foo::~foo ()\n+{\n+}\n+\n+void foo::a (unsigned char y)\n+{\n+    x = ((y & 2) != 0);\n+}\n+\n+void foo::b (void)\n+{\n+    a(0x07);\n+}"}]}