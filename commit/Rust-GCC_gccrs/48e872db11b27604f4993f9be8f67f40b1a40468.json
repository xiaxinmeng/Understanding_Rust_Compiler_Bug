{"sha": "48e872db11b27604f4993f9be8f67f40b1a40468", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhlODcyZGIxMWIyNzYwNGY0OTkzZjliZThmNjdmNDBiMWE0MDQ2OA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-28T08:49:49Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-05-28T09:03:01Z"}, "message": "Add documentation for missing params.\n\nThe patch fixes various issues spotted by check-params-in-docs.py\nscript. I'm going to install the patch.\n\ngcc/ChangeLog:\n\n\tPR web/95380\n\t* doc/invoke.texi: Add missing params, remove max-once-peeled-insns and\n\trename ipcp-unit-growth to ipa-cp-unit-growth.", "tree": {"sha": "4d53b48b6ac6f303ac4d785b81a3c128d8fb9c83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d53b48b6ac6f303ac4d785b81a3c128d8fb9c83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48e872db11b27604f4993f9be8f67f40b1a40468", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl7PfmUACgkQTcGC3A+n\nN4UfMwf/XiLqW9a9jqpxo1j1FVyGlQVlmwvIMc5cQ/99bBOznIdlKEDnvXUmSm2/\ng8yTwRjbifkup0EcUZ4n61zq+v+H2jaIP8ZJJuqzjt0/uZiYoUu/vmnLsg+gBWoP\nJtXeCmPkuvZFNvj445Dlm4VIWqTgzJsuvtDOG1R0eS1pqsKtEptOqfX8LHLB58cs\nXlf5/eTACsW1oOoBZOQEhOaDxN68jnbgads6iLnk/ds/ygPXOPPXr1zlKmVzu6Cg\nDi/piS/OOPpEyVjSSR0biiuvs5l8U9xSyNUXN0uaK1g99zKo/qz7N4HPxbC4EqxI\nWvue7ZNIfYKO8kJ+E6vTVh7D3Ro9rA==\n=Ycah\n-----END PGP SIGNATURE-----", "payload": "tree 4d53b48b6ac6f303ac4d785b81a3c128d8fb9c83\nparent 467adc05ba83a0e10c5527e6ee5b69dd30b29c4a\nauthor Martin Liska <mliska@suse.cz> 1590655789 +0200\ncommitter Martin Liska <mliska@suse.cz> 1590656581 +0200\n\nAdd documentation for missing params.\n\nThe patch fixes various issues spotted by check-params-in-docs.py\nscript. I'm going to install the patch.\n\ngcc/ChangeLog:\n\n\tPR web/95380\n\t* doc/invoke.texi: Add missing params, remove max-once-peeled-insns and\n\trename ipcp-unit-growth to ipa-cp-unit-growth.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48e872db11b27604f4993f9be8f67f40b1a40468", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48e872db11b27604f4993f9be8f67f40b1a40468", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48e872db11b27604f4993f9be8f67f40b1a40468/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "467adc05ba83a0e10c5527e6ee5b69dd30b29c4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/467adc05ba83a0e10c5527e6ee5b69dd30b29c4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/467adc05ba83a0e10c5527e6ee5b69dd30b29c4a"}], "stats": {"total": 38, "additions": 33, "deletions": 5}, "files": [{"sha": "5345bc3def370981c1d091067aa9ca303fd5f19b", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 33, "deletions": 5, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48e872db11b27604f4993f9be8f67f40b1a40468/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48e872db11b27604f4993f9be8f67f40b1a40468/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=48e872db11b27604f4993f9be8f67f40b1a40468", "patch": "@@ -10565,7 +10565,7 @@ When enabled, interprocedural constant propagation performs function cloning\n when externally visible function can be called with constant arguments.\n Because this optimization can create multiple copies of functions,\n it may significantly increase code size\n-(see @option{--param ipcp-unit-growth=@var{value}}).\n+(see @option{--param ipa-cp-unit-growth=@var{value}}).\n This flag is enabled by default at @option{-O3}.\n It is also enabled by @option{-fprofile-use} and @option{-fauto-profile}.\n \n@@ -12454,7 +12454,7 @@ For example, parameter value 20 limits unit growth to 1.2 times the original\n size. Cold functions (either marked cold via an attribute or by profile\n feedback) are not accounted into the unit size.\n \n-@item ipcp-unit-growth\n+@item ipa-cp-unit-growth\n Specifies maximal overall growth of the compilation unit caused by\n interprocedural constant propagation.  For example, parameter value 10 limits\n unit growth to 1.1 times the original size.\n@@ -13460,9 +13460,6 @@ will not try to thread through its block.\n Maximum number of nested calls to search for control dependencies\n during uninitialized variable analysis.\n \n-@item max-once-peeled-insns\n-The maximum number of insns of a peeled loop that rolls only once.\n-\n @item sra-max-scalarization-size-Osize\n Maximum size, in storage units, of an aggregate\n which should be considered for scalarization when compiling for size.\n@@ -13493,6 +13490,37 @@ of iterations or recursive calls GCC performs when optimizing certain\n statements or when determining their validity prior to issuing\n diagnostics.\n \n+@item store-merging-max-size\n+Maximum size of a single store merging region in bytes.\n+\n+@item hash-table-verification-limit\n+The number of elements for which hash table verification is done\n+for each searched element.\n+\n+@item max-find-base-term-values\n+Maximum number of VALUEs handled during a single find_base_term call.\n+\n+@item analyzer-max-enodes-per-program-point\n+The maximum number of exploded nodes per program point within\n+the analyzer, before terminating analysis of that point.\n+\n+@item analyzer-min-snodes-for-call-summary\n+The minimum number of supernodes within a function for the\n+analyzer to consider summarizing its effects at call sites.\n+\n+@item analyzer-max-recursion-depth\n+The maximum number of times a callsite can appear in a call stack\n+within the analyzer, before terminating analysis of a call that would\n+recurse deeper.\n+\n+@item gimple-fe-computed-hot-bb-threshold\n+The number of executions of a basic block which is considered hot.\n+The parameter is used only in GIMPLE FE.\n+\n+@item analyzer-bb-explosion-factor\n+The maximum number of 'after supernode' exploded nodes within the analyzer\n+per supernode, before terminating analysis.\n+\n @end table\n \n The following choices of @var{name} are available on AArch64 targets:"}]}