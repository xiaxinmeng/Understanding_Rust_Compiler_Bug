{"sha": "6a2b848b31c45cc2e5d3371a4ed3e7b49ee7ae7e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEyYjg0OGIzMWM0NWNjMmU1ZDMzNzFhNGVkM2U3YjQ5ZWU3YWU3ZQ==", "commit": {"author": {"name": "Robert Suchanek", "email": "robert.suchanek@imgtec.com", "date": "2015-07-15T11:42:34Z"}, "committer": {"name": "Robert Suchanek", "email": "rts@gcc.gnu.org", "date": "2015-07-15T11:42:34Z"}, "message": "Support interrupt handlers with hard-float.\n\ngcc/\n\t* config/mips/mips.c (mips_compute_frame_info): Allow -mhard-float in\n\tinterrupt attribute.\n\t(mips_expand_prologue): Disable the floating point unit in an ISR.\n\t* config/mips/mips.h (SR_COP1): New define.\n\nFrom-SVN: r225818", "tree": {"sha": "df90e73e16ef62383eb76b546f8b6496a4f76fe6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df90e73e16ef62383eb76b546f8b6496a4f76fe6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a2b848b31c45cc2e5d3371a4ed3e7b49ee7ae7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a2b848b31c45cc2e5d3371a4ed3e7b49ee7ae7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a2b848b31c45cc2e5d3371a4ed3e7b49ee7ae7e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a2b848b31c45cc2e5d3371a4ed3e7b49ee7ae7e/comments", "author": null, "committer": null, "parents": [{"sha": "22dd66d46a5212158999604ded5ccc6a9878125a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22dd66d46a5212158999604ded5ccc6a9878125a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22dd66d46a5212158999604ded5ccc6a9878125a"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "84574f0964f342f18a895269d6204bcf830d568b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2b848b31c45cc2e5d3371a4ed3e7b49ee7ae7e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2b848b31c45cc2e5d3371a4ed3e7b49ee7ae7e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a2b848b31c45cc2e5d3371a4ed3e7b49ee7ae7e", "patch": "@@ -1,3 +1,10 @@\n+2015-07-15  Robert Suchanek  <robert.suchanek@imgtec.com>\n+\n+\t* config/mips/mips.c (mips_compute_frame_info): Allow -mhard-float in\n+\tinterrupt attribute.\n+\t(mips_expand_prologue): Disable the floating point unit in an ISR.\n+\t* config/mips/mips.h (SR_COP1): New define.\n+\n 2015-07-15  Richard Biener  <rguenther@suse.de>\n \n \t* genmatch.c (parser::peek, parser::peek_ident): Add argument"}, {"sha": "671fed87b8968d1b78ea420e2ef4160e970ff61d", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2b848b31c45cc2e5d3371a4ed3e7b49ee7ae7e/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2b848b31c45cc2e5d3371a4ed3e7b49ee7ae7e/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=6a2b848b31c45cc2e5d3371a4ed3e7b49ee7ae7e", "patch": "@@ -10254,8 +10254,6 @@ mips_compute_frame_info (void)\n     {\n       if (mips_isa_rev < 2)\n \terror (\"the %<interrupt%> attribute requires a MIPS32r2 processor or greater\");\n-      else if (TARGET_HARD_FLOAT)\n-\terror (\"the %<interrupt%> attribute requires %<-msoft-float%>\");\n       else if (TARGET_MIPS16)\n \terror (\"interrupt handlers cannot be MIPS16 functions\");\n       else\n@@ -11495,6 +11493,14 @@ mips_expand_prologue (void)\n \t\t\t\t       GEN_INT (5),\n \t\t\t\t       GEN_INT (SR_IE),\n \t\t\t\t       gen_rtx_REG (SImode, GP_REG_FIRST)));\n+\n+\t      if (TARGET_HARD_FLOAT)\n+\t\t/* Disable COP1 for hard-float.  This will lead to an exception\n+\t\t   if floating-point code is executed in an ISR.  */\n+\t\temit_insn (gen_insvsi (gen_rtx_REG (SImode, K1_REG_NUM),\n+\t\t\t\t       GEN_INT (1),\n+\t\t\t\t       GEN_INT (SR_COP1),\n+\t\t\t\t       gen_rtx_REG (SImode, GP_REG_FIRST)));\n \t    }\n \t  else\n \t    {"}, {"sha": "9d10a28556924413880967fd67bd6241566f22d8", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a2b848b31c45cc2e5d3371a4ed3e7b49ee7ae7e/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a2b848b31c45cc2e5d3371a4ed3e7b49ee7ae7e/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=6a2b848b31c45cc2e5d3371a4ed3e7b49ee7ae7e", "patch": "@@ -1807,6 +1807,8 @@ FP_ASM_SPEC \"\\\n /* Request Interrupt Priority Level is from bit 10 to bit 15 of\n    the cause register for the EIC interrupt mode.  */\n #define CAUSE_IPL\t10\n+/* COP1 Enable is at bit 29 of the status register.  */\n+#define SR_COP1         29\n /* Interrupt Priority Level is from bit 10 to bit 15 of the status register.  */\n #define SR_IPL\t\t10\n /* Exception Level is at bit 1 of the status register.  */"}]}