{"sha": "84e6f1ba3886819ea3f98b38efae2e0b7309e0c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRlNmYxYmEzODg2ODE5ZWEzZjk4YjM4ZWZhZTJlMGI3MzA5ZTBjNg==", "commit": {"author": {"name": "Marek Michalkiewicz", "email": "marekm@linux.org.pl", "date": "2000-12-02T13:12:45Z"}, "committer": {"name": "Denis Chertykov", "email": "denisc@gcc.gnu.org", "date": "2000-12-02T13:12:45Z"}, "message": "avr.md: Document UNSPEC usage.\n\n\t* config/avr/avr.md: Document UNSPEC usage.\n\t(*tablejump_rjmp, *tablejump_lib, *tablejump_enh, *tablejump):\n\tMake operand 0 input only, clobber it.  Use UNSPEC, not a bogus\n\tMEM for program memory word reference.  Do not add the label to\n\tthe table index in each of the asm output templates, instead ...\n\t(casesi): ... do it in RTL.  Adjust to match the above change.\n\nFrom-SVN: r37951", "tree": {"sha": "54c462eb293683c15f50d5ac3ab212bf4b4729d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54c462eb293683c15f50d5ac3ab212bf4b4729d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84e6f1ba3886819ea3f98b38efae2e0b7309e0c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84e6f1ba3886819ea3f98b38efae2e0b7309e0c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84e6f1ba3886819ea3f98b38efae2e0b7309e0c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84e6f1ba3886819ea3f98b38efae2e0b7309e0c6/comments", "author": null, "committer": null, "parents": [{"sha": "0884b60c60e812a3a78ca1c26c89042bf0bd6e67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0884b60c60e812a3a78ca1c26c89042bf0bd6e67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0884b60c60e812a3a78ca1c26c89042bf0bd6e67"}], "stats": {"total": 89, "additions": 43, "deletions": 46}, "files": [{"sha": "f38ff599b444eddcd46bf94c7f41e47e6337d28c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84e6f1ba3886819ea3f98b38efae2e0b7309e0c6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84e6f1ba3886819ea3f98b38efae2e0b7309e0c6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=84e6f1ba3886819ea3f98b38efae2e0b7309e0c6", "patch": "@@ -1,3 +1,12 @@\n+2000-11-23  Marek Michalkiewicz  <marekm@linux.org.pl>\n+\n+\t* config/avr/avr.md: Document UNSPEC usage.\n+\t(*tablejump_rjmp, *tablejump_lib, *tablejump_enh, *tablejump):\n+\tMake operand 0 input only, clobber it.  Use UNSPEC, not a bogus\n+\tMEM for program memory word reference.  Do not add the label to\n+\tthe table index in each of the asm output templates, instead ...\n+\t(casesi): ... do it in RTL.  Adjust to match the above change.\n+\n 2000-12-02  Bernd Schmidt  <bernds@redhat.co.uk>\n \n \t* c-common.c (PTRDIFF_TYPE): Provide default here, ..."}, {"sha": "c49b72dbe18bc5159e04807e831b1053d2cd8e5a", "filename": "gcc/config/avr/avr.md", "status": "modified", "additions": 34, "deletions": 46, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84e6f1ba3886819ea3f98b38efae2e0b7309e0c6/gcc%2Fconfig%2Favr%2Favr.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84e6f1ba3886819ea3f98b38efae2e0b7309e0c6/gcc%2Fconfig%2Favr%2Favr.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.md?ref=84e6f1ba3886819ea3f98b38efae2e0b7309e0c6", "patch": "@@ -21,6 +21,10 @@\n ;; the Free Software Foundation, 59 Temple Place - Suite 330,\n ;; Boston, MA 02111-1307, USA.\n \n+;; UNSPEC usage:\n+;;  0  Length of a string, see \"strlenhi\".\n+;;  1  Read from a word address in program memory, see \"casesi\".\n+\n ;; Condition code settings.\n (define_attr \"cc\" \"none,set_czn,set_zn,set_n,compare,clobber\"\n   (const_string \"none\"))\n@@ -1850,69 +1854,56 @@\n \n ;; table jump\n \n-;; Note: the (mem:HI (...)) memory references here are special - actually\n-;; the data is read from a word address in program memory (r31:r30 is the\n-;; index in the table, not multiplied by 2 - see the \"casesi\" pattern).\n-\n ;; Table made from \"rjmp\" instructions for <=8K devices.\n (define_insn \"*tablejump_rjmp\"\n-   [(set (pc) (mem:HI\n-\t       (plus:HI (match_operand:HI 0 \"register_operand\" \"=&z\")\n-\t\t\t(label_ref (match_operand 2 \"\" \"\")))))\n-    (use (label_ref (match_operand 1 \"\" \"\")))]\n+  [(set (pc) (unspec:HI [(match_operand:HI 0 \"register_operand\" \"!z,*r\")] 1))\n+   (use (label_ref (match_operand 1 \"\" \"\")))\n+   (clobber (match_dup 0))]\n   \"!AVR_MEGA\"\n-  \"subi r30,pm_lo8(-(%2))\n-\tsbci r31,pm_hi8(-(%2))\n-\tijmp\"\n-  [(set_attr \"length\" \"3\")\n-   (set_attr \"cc\" \"clobber\")])\n+  \"@\n+\tijmp\n+\tpush %A0\\;push %B0\\;ret\"\n+  [(set_attr \"length\" \"1,3\")\n+   (set_attr \"cc\" \"none,none\")])\n \n ;; Not a prologue, but similar idea - move the common piece of code to libgcc.\n (define_insn \"*tablejump_lib\"\n-   [(set (pc) (mem:HI (plus:HI (match_operand:HI 0 \"register_operand\" \"=&z\")\n-\t\t\t       (label_ref (match_operand 2 \"\" \"\")))))\n-    (use (label_ref (match_operand 1 \"\" \"\")))]\n+  [(set (pc) (unspec:HI [(match_operand:HI 0 \"register_operand\" \"z\")] 1))\n+   (use (label_ref (match_operand 1 \"\" \"\")))\n+   (clobber (match_dup 0))]\n   \"AVR_MEGA && TARGET_CALL_PROLOGUES\"\n-  \"subi r30,pm_lo8(-(%2))\n-\tsbci r31,pm_hi8(-(%2))\n-\tjmp __tablejump2__\"\n-  [(set_attr \"length\" \"4\")\n+  \"jmp __tablejump2__\"\n+  [(set_attr \"length\" \"2\")\n    (set_attr \"cc\" \"clobber\")])\n \n (define_insn \"*tablejump_enh\"\n-   [(set (pc) (mem:HI\n-\t       (plus:HI (match_operand:HI 0 \"register_operand\" \"=&z\")\n-\t\t\t(label_ref (match_operand 2 \"\" \"\")))))\n-    (use (label_ref (match_operand 1 \"\" \"\")))]\n+  [(set (pc) (unspec:HI [(match_operand:HI 0 \"register_operand\" \"z\")] 1))\n+   (use (label_ref (match_operand 1 \"\" \"\")))\n+   (clobber (match_dup 0))]\n   \"AVR_MEGA && AVR_ENHANCED\"\n-  \"subi r30,pm_lo8(-(%2))\n-\tsbci r31,pm_hi8(-(%2))\n-\tlsl r30\n+  \"lsl r30\n \trol r31\n \tlpm __tmp_reg__,Z+\n \tlpm r31,Z\n \tmov r30,__tmp_reg__\n \tijmp\"\n-  [(set_attr \"length\" \"8\")\n+  [(set_attr \"length\" \"6\")\n    (set_attr \"cc\" \"clobber\")])\n \n (define_insn \"*tablejump\"\n-   [(set (pc) (mem:HI\n-\t       (plus:HI (match_operand:HI 0 \"register_operand\" \"=&z\")\n-\t\t\t(label_ref (match_operand 2 \"\" \"\")))))\n-    (use (label_ref (match_operand 1 \"\" \"\")))]\n+  [(set (pc) (unspec:HI [(match_operand:HI 0 \"register_operand\" \"z\")] 1))\n+   (use (label_ref (match_operand 1 \"\" \"\")))\n+   (clobber (match_dup 0))]\n   \"AVR_MEGA\"\n-  \"subi r30,pm_lo8(-(%2))\n-\tsbci r31,pm_hi8(-(%2))\n-\tlsl r30\n+  \"lsl r30\n \trol r31\n \tlpm\n \tinc r30\n \tpush r0\n \tlpm\n \tpush r0\n \tret\"\n-  [(set_attr \"length\" \"10\")\n+  [(set_attr \"length\" \"8\")\n    (set_attr \"cc\" \"clobber\")])\n \n (define_expand \"casesi\"\n@@ -1929,16 +1920,13 @@\n \t\t\t   (const_int 0))\n \t\t      (label_ref (match_operand 4 \"\" \"\"))\n \t\t      (pc)))\n-;;   (set (match_dup 6)\n-;;\t(plus:HI (match_dup 6)\n-;;\t\t (match_dup 6)))\n-;;   (set (match_dup 6)\n-;;\t(plus:HI (match_dup 6) (label_ref (match_operand:HI 3 \"\" \"\"))))\n-\t\t \n-   (parallel [(set (pc) (mem:HI\n-\t\t\t (plus:HI (match_dup 6)\n-\t\t\t\t  (label_ref (match_operand:HI 3 \"\" \"\")))))\n-\t      (use (label_ref (match_dup 3)))])]\n+\n+   (set (match_dup 6)\n+\t(plus:HI (match_dup 6) (label_ref (match_operand:HI 3 \"\" \"\"))))\n+\n+   (parallel [(set (pc) (unspec:HI [(match_dup 6)] 1))\n+\t      (use (label_ref (match_dup 3)))\n+\t      (clobber (match_dup 6))])]\n   \"\"\n   \"\n {"}]}