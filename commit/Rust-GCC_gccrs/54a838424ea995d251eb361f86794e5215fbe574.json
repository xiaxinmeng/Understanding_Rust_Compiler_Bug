{"sha": "54a838424ea995d251eb361f86794e5215fbe574", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRhODM4NDI0ZWE5OTVkMjUxZWIzNjFmODY3OTRlNTIxNWZiZTU3NA==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2007-12-25T10:12:41Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2007-12-25T10:12:41Z"}, "message": "re PR fortran/34566 (Matmul of logical values)\n\n2007-12-25  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR libfortran/34566\n\t* m4/matmull.m4:  Multiply xstride and ystride by correct kind.\n\t* generated/matmul_l4.c:  Regenerated.\n\t* generated/matmul_l8.c:  Regenerated.\n\t* generated/matmul_l16.c:  Regenerated.\n\n2007-12-25  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR libfortran/34566\n\t* gfortran.dg/matmul_6.f90:  New test.\n\nFrom-SVN: r131167", "tree": {"sha": "c1fe36d9fd32f8ae0900595a250297afb4db485e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1fe36d9fd32f8ae0900595a250297afb4db485e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54a838424ea995d251eb361f86794e5215fbe574", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54a838424ea995d251eb361f86794e5215fbe574", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54a838424ea995d251eb361f86794e5215fbe574", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54a838424ea995d251eb361f86794e5215fbe574/comments", "author": null, "committer": null, "parents": [{"sha": "9c1ebeefcbbde83cc791557c9047eb42e9aeed2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c1ebeefcbbde83cc791557c9047eb42e9aeed2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c1ebeefcbbde83cc791557c9047eb42e9aeed2a"}], "stats": {"total": 95, "additions": 87, "deletions": 8}, "files": [{"sha": "4bfd5232c203c2360c02c0685411edc2f0274414", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54a838424ea995d251eb361f86794e5215fbe574/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54a838424ea995d251eb361f86794e5215fbe574/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=54a838424ea995d251eb361f86794e5215fbe574", "patch": "@@ -1,3 +1,8 @@\n+2007-12-25  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/34566\n+\t* gfortran.dg/matmul_6.f90:  New test.\n+\n 2007-12-23  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/34421"}, {"sha": "737c5c437596da36b3313419caf8e4d262dc7648", "filename": "gcc/testsuite/gfortran.dg/matmul_6.f90", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54a838424ea995d251eb361f86794e5215fbe574/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54a838424ea995d251eb361f86794e5215fbe574/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmatmul_6.f90?ref=54a838424ea995d251eb361f86794e5215fbe574", "patch": "@@ -0,0 +1,66 @@\n+! { dg-do run }\n+! PR 34566 - logical matmul used to give the wrong result.\n+! We check this by running through every permutation in\n+! multiplying two 3*3 matrices, and all permutations of multiplying\n+! a 3-vector and a 3*3 matrices  and checking against equivalence\n+! with integer matrix multiply.\n+program main\n+  implicit none\n+  integer, parameter :: ki=4\n+  integer, parameter :: dimen=3\n+  integer :: i, j, k\n+  real, dimension(dimen,dimen) :: r1, r2\n+  integer, dimension(dimen,dimen) :: m1, m2\n+  logical(kind=ki), dimension(dimen,dimen) :: l1, l2\n+  logical(kind=ki), dimension(dimen*dimen) :: laux\n+  logical(kind=ki), dimension(dimen) :: lv\n+  integer, dimension(dimen) :: iv\n+\n+  do i=0,2**(dimen*dimen)-1\n+     forall (k=1:dimen*dimen)\n+        laux(k) = btest(i, k-1)\n+     end forall\n+     l1 = reshape(laux,shape(l1))\n+     m1 = ltoi(l1)\n+\n+     ! Check matrix*matrix multiply\n+     do j=0,2**(dimen*dimen)-1\n+        forall (k=1:dimen*dimen)\n+           laux(k) = btest(i, k-1)\n+        end forall\n+        l2 = reshape(laux,shape(l2))\n+        m2 = ltoi(l2)\n+        if (any(matmul(l1,l2) .neqv. (matmul(m1,m2) /= 0))) then\n+          call abort\n+        end if\n+     end do\n+\n+     ! Check vector*matrix and matrix*vector multiply.\n+     do j=0,2**dimen-1\n+        forall (k=1:dimen)\n+           lv(k) = btest(j, k-1)\n+        end forall\n+        iv = ltoi(lv)\n+        if (any(matmul(lv,l1) .neqv. (matmul(iv,m1) /=0))) then\n+          call abort\n+        end if\n+        if (any(matmul(l1,lv) .neqv. (matmul(m1,iv) /= 0))) then\n+          call abort\n+        end if\n+     end do\n+  end do\n+\n+contains\n+  elemental function ltoi(v)\n+    implicit none\n+    integer :: ltoi\n+    real :: rtoi\n+    logical(kind=4), intent(in) :: v\n+    if (v) then\n+       ltoi = 1\n+    else\n+       ltoi = 0\n+    end if\n+  end function ltoi\n+\n+end program main"}, {"sha": "8f32ca04d7c823378fdc78431da73c40a8921326", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54a838424ea995d251eb361f86794e5215fbe574/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54a838424ea995d251eb361f86794e5215fbe574/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=54a838424ea995d251eb361f86794e5215fbe574", "patch": "@@ -1,3 +1,11 @@\n+2007-12-25  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/34566\n+\t* m4/matmull.m4:  Multiply xstride and ystride by correct kind.\n+\t* generated/matmul_l4.c:  Regenerated.\n+\t* generated/matmul_l8.c:  Regenerated.\n+\t* generated/matmul_l16.c:  Regenerated.\n+\n 2007-12-19  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/34530"}, {"sha": "b2b86ecfed176309e16aacf29f7685ea90b1462a", "filename": "libgfortran/generated/matmul_l16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54a838424ea995d251eb361f86794e5215fbe574/libgfortran%2Fgenerated%2Fmatmul_l16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54a838424ea995d251eb361f86794e5215fbe574/libgfortran%2Fgenerated%2Fmatmul_l16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_l16.c?ref=54a838424ea995d251eb361f86794e5215fbe574", "patch": "@@ -152,7 +152,7 @@ matmul_l16 (gfc_array_l16 * const restrict retarray,\n     {\n       astride = a->dim[1].stride * a_kind;\n       count = a->dim[1].ubound + 1 - a->dim[1].lbound;\n-      xstride = a->dim[0].stride;\n+      xstride = a->dim[0].stride * a_kind;\n       xcount = a->dim[0].ubound + 1 - a->dim[0].lbound;\n     }\n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n@@ -167,7 +167,7 @@ matmul_l16 (gfc_array_l16 * const restrict retarray,\n     {\n       bstride = b->dim[0].stride * b_kind;\n       assert(count == b->dim[0].ubound + 1 - b->dim[0].lbound);\n-      ystride = b->dim[1].stride;\n+      ystride = b->dim[1].stride * b_kind;\n       ycount = b->dim[1].ubound + 1 - b->dim[1].lbound;\n     }\n "}, {"sha": "9a6cb1d357ddf5dd11fe3bec367ccae7247781ea", "filename": "libgfortran/generated/matmul_l4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54a838424ea995d251eb361f86794e5215fbe574/libgfortran%2Fgenerated%2Fmatmul_l4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54a838424ea995d251eb361f86794e5215fbe574/libgfortran%2Fgenerated%2Fmatmul_l4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_l4.c?ref=54a838424ea995d251eb361f86794e5215fbe574", "patch": "@@ -152,7 +152,7 @@ matmul_l4 (gfc_array_l4 * const restrict retarray,\n     {\n       astride = a->dim[1].stride * a_kind;\n       count = a->dim[1].ubound + 1 - a->dim[1].lbound;\n-      xstride = a->dim[0].stride;\n+      xstride = a->dim[0].stride * a_kind;\n       xcount = a->dim[0].ubound + 1 - a->dim[0].lbound;\n     }\n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n@@ -167,7 +167,7 @@ matmul_l4 (gfc_array_l4 * const restrict retarray,\n     {\n       bstride = b->dim[0].stride * b_kind;\n       assert(count == b->dim[0].ubound + 1 - b->dim[0].lbound);\n-      ystride = b->dim[1].stride;\n+      ystride = b->dim[1].stride * b_kind;\n       ycount = b->dim[1].ubound + 1 - b->dim[1].lbound;\n     }\n "}, {"sha": "7d4e35e82e3287df68d3176be25cb93e217fadab", "filename": "libgfortran/generated/matmul_l8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54a838424ea995d251eb361f86794e5215fbe574/libgfortran%2Fgenerated%2Fmatmul_l8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54a838424ea995d251eb361f86794e5215fbe574/libgfortran%2Fgenerated%2Fmatmul_l8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fmatmul_l8.c?ref=54a838424ea995d251eb361f86794e5215fbe574", "patch": "@@ -152,7 +152,7 @@ matmul_l8 (gfc_array_l8 * const restrict retarray,\n     {\n       astride = a->dim[1].stride * a_kind;\n       count = a->dim[1].ubound + 1 - a->dim[1].lbound;\n-      xstride = a->dim[0].stride;\n+      xstride = a->dim[0].stride * a_kind;\n       xcount = a->dim[0].ubound + 1 - a->dim[0].lbound;\n     }\n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n@@ -167,7 +167,7 @@ matmul_l8 (gfc_array_l8 * const restrict retarray,\n     {\n       bstride = b->dim[0].stride * b_kind;\n       assert(count == b->dim[0].ubound + 1 - b->dim[0].lbound);\n-      ystride = b->dim[1].stride;\n+      ystride = b->dim[1].stride * b_kind;\n       ycount = b->dim[1].ubound + 1 - b->dim[1].lbound;\n     }\n "}, {"sha": "54afa8a238eb44b44d26ec532cc15b5a95fadd38", "filename": "libgfortran/m4/matmull.m4", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54a838424ea995d251eb361f86794e5215fbe574/libgfortran%2Fm4%2Fmatmull.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54a838424ea995d251eb361f86794e5215fbe574/libgfortran%2Fm4%2Fmatmull.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Fmatmull.m4?ref=54a838424ea995d251eb361f86794e5215fbe574", "patch": "@@ -154,7 +154,7 @@ sinclude(`matmul_asm_'rtype_code`.m4')dnl\n     {\n       astride = a->dim[1].stride * a_kind;\n       count = a->dim[1].ubound + 1 - a->dim[1].lbound;\n-      xstride = a->dim[0].stride;\n+      xstride = a->dim[0].stride * a_kind;\n       xcount = a->dim[0].ubound + 1 - a->dim[0].lbound;\n     }\n   if (GFC_DESCRIPTOR_RANK (b) == 1)\n@@ -169,7 +169,7 @@ sinclude(`matmul_asm_'rtype_code`.m4')dnl\n     {\n       bstride = b->dim[0].stride * b_kind;\n       assert(count == b->dim[0].ubound + 1 - b->dim[0].lbound);\n-      ystride = b->dim[1].stride;\n+      ystride = b->dim[1].stride * b_kind;\n       ycount = b->dim[1].ubound + 1 - b->dim[1].lbound;\n     }\n "}]}