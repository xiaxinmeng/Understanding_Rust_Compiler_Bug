{"sha": "649e2ec5682ed8007987f2acb4899892a81cc18f", "node_id": "C_kwDOANBUbNoAKDY0OWUyZWM1NjgyZWQ4MDA3OTg3ZjJhY2I0ODk5ODkyYTgxY2MxOGY", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-11-17T16:45:50Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-11-17T16:45:50Z"}, "message": "Unify the adjusted self argument to the self parameter on MethodCalls\n\nWhen we must infer the substitutions on method calls we must make sure to\nunify the self arguments from the receiver, taking into account the\nautoderef mechanism. This enforces the type checks and fixes up any\ninference variables along the way.\n\nAddresses #808", "tree": {"sha": "3a0b255d3dc86e0de693718441c4d12cec76c9aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a0b255d3dc86e0de693718441c4d12cec76c9aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/649e2ec5682ed8007987f2acb4899892a81cc18f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/649e2ec5682ed8007987f2acb4899892a81cc18f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/649e2ec5682ed8007987f2acb4899892a81cc18f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/649e2ec5682ed8007987f2acb4899892a81cc18f/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e584c6f8a7805b1ddc9fe97065cd8f1bac734fc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e584c6f8a7805b1ddc9fe97065cd8f1bac734fc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e584c6f8a7805b1ddc9fe97065cd8f1bac734fc2"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "d5d12b4db4d781cb423a17c19fd5d1e6e05b9b65", "filename": "gcc/rust/typecheck/rust-hir-type-check-expr.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/649e2ec5682ed8007987f2acb4899892a81cc18f/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/649e2ec5682ed8007987f2acb4899892a81cc18f/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h?ref=649e2ec5682ed8007987f2acb4899892a81cc18f", "patch": "@@ -295,6 +295,10 @@ class TypeCheckExpr : public TypeCheckBase\n \treturn;\n       }\n \n+    // Get the adjusted self\n+    Adjuster adj (receiver_tyty);\n+    TyTy::BaseType *adjusted_self = adj.adjust_type (adjustments);\n+\n     // store the adjustments for code-generation to know what to do\n     context->insert_autoderef_mappings (expr.get_mappings ().get_hirid (),\n \t\t\t\t\tstd::move (adjustments));\n@@ -401,7 +405,8 @@ class TypeCheckExpr : public TypeCheckBase\n       }\n \n     TyTy::BaseType *function_ret_tyty\n-      = TyTy::TypeCheckMethodCallExpr::go (lookup, expr, context);\n+      = TyTy::TypeCheckMethodCallExpr::go (lookup, expr, adjusted_self,\n+\t\t\t\t\t   context);\n     if (function_ret_tyty == nullptr\n \t|| function_ret_tyty->get_kind () == TyTy::TypeKind::ERROR)\n       {"}, {"sha": "30804273f753db8230bca10c6d63cb6797f816f2", "filename": "gcc/rust/typecheck/rust-tyty-call.h", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/649e2ec5682ed8007987f2acb4899892a81cc18f/gcc%2Frust%2Ftypecheck%2Frust-tyty-call.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/649e2ec5682ed8007987f2acb4899892a81cc18f/gcc%2Frust%2Ftypecheck%2Frust-tyty-call.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty-call.h?ref=649e2ec5682ed8007987f2acb4899892a81cc18f", "patch": "@@ -88,9 +88,10 @@ class TypeCheckMethodCallExpr : private TyVisitor\n public:\n   // Resolve the Method parameters and return back the return type\n   static BaseType *go (BaseType *ref, HIR::MethodCallExpr &call,\n+\t\t       TyTy::BaseType *adjusted_self,\n \t\t       Resolver::TypeCheckContext *context)\n   {\n-    TypeCheckMethodCallExpr checker (call, context);\n+    TypeCheckMethodCallExpr checker (call, adjusted_self, context);\n     ref->accept_vis (checker);\n     return checker.resolved;\n   }\n@@ -125,13 +126,15 @@ class TypeCheckMethodCallExpr : private TyVisitor\n \n private:\n   TypeCheckMethodCallExpr (HIR::MethodCallExpr &c,\n+\t\t\t   TyTy::BaseType *adjusted_self,\n \t\t\t   Resolver::TypeCheckContext *context)\n-    : resolved (nullptr), call (c), context (context),\n-      mappings (Analysis::Mappings::get ())\n+    : resolved (nullptr), call (c), adjusted_self (adjusted_self),\n+      context (context), mappings (Analysis::Mappings::get ())\n   {}\n \n   BaseType *resolved;\n   HIR::MethodCallExpr &call;\n+  TyTy::BaseType *adjusted_self;\n   Resolver::TypeCheckContext *context;\n   Analysis::Mappings *mappings;\n };"}, {"sha": "add4dbe695a685c39bdb0c2c1ff3d6c97b8bc1e1", "filename": "gcc/rust/typecheck/rust-tyty.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/649e2ec5682ed8007987f2acb4899892a81cc18f/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/649e2ec5682ed8007987f2acb4899892a81cc18f/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-tyty.cc?ref=649e2ec5682ed8007987f2acb4899892a81cc18f", "patch": "@@ -2786,6 +2786,8 @@ TypeCheckCallExpr::visit (FnPtr &type)\n void\n TypeCheckMethodCallExpr::visit (FnType &type)\n {\n+  adjusted_self->unify (type.get_self_type ());\n+\n   // +1 for the receiver self\n   size_t num_args_to_call = call.num_params () + 1;\n   if (num_args_to_call != type.num_params ())"}]}