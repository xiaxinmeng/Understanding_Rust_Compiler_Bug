{"sha": "6439a1f2046eabe1ada6fc14f428e85f71369189", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQzOWExZjIwNDZlYWJlMWFkYTZmYzE0ZjQyOGU4NWY3MTM2OTE4OQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2001-03-10T21:45:40Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2001-03-10T21:45:40Z"}, "message": "alpha.c (check_float_value): Use memcpy, not bcopy.\n\n\t* alpha.c (check_float_value): Use memcpy, not bcopy.\n\n\t* m32r.c (m32r_sched_reorder): Likewise.\n\n\t* vax.c (check_float_value): Likewise.\n\nFrom-SVN: r40370", "tree": {"sha": "ff4dd92b0a5616ecc9195f4d6f9f948b69244ff4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff4dd92b0a5616ecc9195f4d6f9f948b69244ff4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6439a1f2046eabe1ada6fc14f428e85f71369189", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6439a1f2046eabe1ada6fc14f428e85f71369189", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6439a1f2046eabe1ada6fc14f428e85f71369189", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6439a1f2046eabe1ada6fc14f428e85f71369189/comments", "author": null, "committer": null, "parents": [{"sha": "b3e68a792254d5e814e1f2797d66c7581dd63198", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3e68a792254d5e814e1f2797d66c7581dd63198", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3e68a792254d5e814e1f2797d66c7581dd63198"}], "stats": {"total": 32, "additions": 18, "deletions": 14}, "files": [{"sha": "226981e7ab6ca98b5ba25a8895a868eb95134b0a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6439a1f2046eabe1ada6fc14f428e85f71369189/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6439a1f2046eabe1ada6fc14f428e85f71369189/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6439a1f2046eabe1ada6fc14f428e85f71369189", "patch": "@@ -1,3 +1,11 @@\n+2001-03-10  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* alpha.c (check_float_value): Use memcpy, not bcopy.\n+\n+\t* m32r.c (m32r_sched_reorder): Likewise.\n+\n+\t* vax.c (check_float_value): Likewise.\n+\n 2001-03-10  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* toplev.c (file_name_nondirectory): Remove."}, {"sha": "a52d572f1a1678a9922d2e3c0ae4474c59b58277", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6439a1f2046eabe1ada6fc14f428e85f71369189/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6439a1f2046eabe1ada6fc14f428e85f71369189/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=6439a1f2046eabe1ada6fc14f428e85f71369189", "patch": "@@ -6286,26 +6286,24 @@ check_float_value (mode, d, overflow)\n       memcpy (&r, d, sizeof (REAL_VALUE_TYPE));\n       if (REAL_VALUES_LESS (fvptr[0], r))\n \t{\n-\t  bcopy ((char *) &fvptr[0], (char *) d,\n-\t\t sizeof (REAL_VALUE_TYPE));\n+\t  memcpy (d, &fvptr[0], sizeof (REAL_VALUE_TYPE));\n \t  return 1;\n \t}\n       else if (REAL_VALUES_LESS (r, fvptr[1]))\n \t{\n-\t  bcopy ((char *) &fvptr[1], (char *) d,\n-\t\t sizeof (REAL_VALUE_TYPE));\n+\t  memcpy (d, &fvptr[1], sizeof (REAL_VALUE_TYPE));\n \t  return 1;\n \t}\n       else if (REAL_VALUES_LESS (dconst0, r)\n \t\t&& REAL_VALUES_LESS (r, fvptr[2]))\n \t{\n-\t  bcopy ((char *) &dconst0, (char *) d, sizeof (REAL_VALUE_TYPE));\n+\t  memcpy (d, &dconst0, sizeof (REAL_VALUE_TYPE));\n \t  return 1;\n \t}\n       else if (REAL_VALUES_LESS (r, dconst0)\n \t\t&& REAL_VALUES_LESS (fvptr[3], r))\n \t{\n-\t  bcopy ((char *) &dconst0, (char *) d, sizeof (REAL_VALUE_TYPE));\n+\t  memcpy (d, &dconst0, sizeof (REAL_VALUE_TYPE));\n \t  return 1;\n \t}\n     }"}, {"sha": "4cf0a3e50c5627a68250d1c8230bdb8e05e451db", "filename": "gcc/config/m32r/m32r.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6439a1f2046eabe1ada6fc14f428e85f71369189/gcc%2Fconfig%2Fm32r%2Fm32r.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6439a1f2046eabe1ada6fc14f428e85f71369189/gcc%2Fconfig%2Fm32r%2Fm32r.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.c?ref=6439a1f2046eabe1ada6fc14f428e85f71369189", "patch": "@@ -1605,7 +1605,7 @@ m32r_sched_reorder (stream, verbose, ready, n_ready)\n       if (new_tail+1 != new_head)\n \tabort ();\n \n-      bcopy ((char *) new_head, (char *) ready, sizeof (rtx) * n_ready);\n+      memcpy (ready, new_head, sizeof (rtx) * n_ready);\n       if (stream)\n \t{\n #ifdef HAIFA"}, {"sha": "f64b47016478ba9bef8ac3732755faa15dda4cdf", "filename": "gcc/config/vax/vax.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6439a1f2046eabe1ada6fc14f428e85f71369189/gcc%2Fconfig%2Fvax%2Fvax.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6439a1f2046eabe1ada6fc14f428e85f71369189/gcc%2Fconfig%2Fvax%2Fvax.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.c?ref=6439a1f2046eabe1ada6fc14f428e85f71369189", "patch": "@@ -625,7 +625,7 @@ check_float_value (mode, d, overflow)\n \n   if (overflow)\n     {\n-      bcopy ((char *) &float_values[0], (char *) d, sizeof (REAL_VALUE_TYPE));\n+      memcpy (d, &float_values[0], sizeof (REAL_VALUE_TYPE));\n       return 1;\n     }\n \n@@ -635,26 +635,24 @@ check_float_value (mode, d, overflow)\n       memcpy (&r, d, sizeof (REAL_VALUE_TYPE));\n       if (REAL_VALUES_LESS (float_values[0], r))\n \t{\n-\t  bcopy ((char *) &float_values[0], (char *) d,\n-\t\t sizeof (REAL_VALUE_TYPE));\n+\t  memcpy (d, &float_values[0], sizeof (REAL_VALUE_TYPE));\n \t  return 1;\n \t}\n       else if (REAL_VALUES_LESS (r, float_values[1]))\n \t{\n-\t  bcopy ((char *) &float_values[1], (char*) d,\n-\t\t sizeof (REAL_VALUE_TYPE));\n+\t  memcpy (d, &float_values[1], sizeof (REAL_VALUE_TYPE));\n \t  return 1;\n \t}\n       else if (REAL_VALUES_LESS (dconst0, r)\n \t\t&& REAL_VALUES_LESS (r, float_values[2]))\n \t{\n-\t  bcopy ((char *) &dconst0, (char *) d, sizeof (REAL_VALUE_TYPE));\n+\t  memcpy (d, &dconst0, sizeof (REAL_VALUE_TYPE));\n \t  return 1;\n \t}\n       else if (REAL_VALUES_LESS (r, dconst0)\n \t\t&& REAL_VALUES_LESS (float_values[3], r))\n \t{\n-\t  bcopy ((char *) &dconst0, (char *) d, sizeof (REAL_VALUE_TYPE));\n+\t  memcpy (d, &dconst0, sizeof (REAL_VALUE_TYPE));\n \t  return 1;\n \t}\n     }"}]}