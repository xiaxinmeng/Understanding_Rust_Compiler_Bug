{"sha": "31e292c7a319a9a8bc449cf8514ed45951bb706e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFlMjkyYzdhMzE5YTlhOGJjNDQ5Y2Y4NTE0ZWQ0NTk1MWJiNzA2ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-05-05T20:09:18Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-05-05T20:09:18Z"}, "message": "cp-tree.h (REFERENCE_REF_P): Just check the type.\n\n\t* cp-tree.h (REFERENCE_REF_P): Just check the type.\n\t* cvt.c (convert_from_reference): Adjust.\n\t* pt.c (build_non_dependent_expr): Adjust.\n\t* semantics.c (finish_offsetof): Adjust.\n\t* tree.c (lvalue_kind): Use it.\n\nFrom-SVN: r173449", "tree": {"sha": "88748f60dca27ee658546987e83c360a8bd05b7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88748f60dca27ee658546987e83c360a8bd05b7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31e292c7a319a9a8bc449cf8514ed45951bb706e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31e292c7a319a9a8bc449cf8514ed45951bb706e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31e292c7a319a9a8bc449cf8514ed45951bb706e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31e292c7a319a9a8bc449cf8514ed45951bb706e/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "013c0411847e7dccb9c2732dab70e14fcad4ebe4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/013c0411847e7dccb9c2732dab70e14fcad4ebe4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/013c0411847e7dccb9c2732dab70e14fcad4ebe4"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "20057c5bc6e7430dacb5d98a822c54e90c6a3de1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e292c7a319a9a8bc449cf8514ed45951bb706e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e292c7a319a9a8bc449cf8514ed45951bb706e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=31e292c7a319a9a8bc449cf8514ed45951bb706e", "patch": "@@ -1,5 +1,11 @@\n 2011-05-05  Jason Merrill  <jason@redhat.com>\n \n+\t* cp-tree.h (REFERENCE_REF_P): Just check the type.\n+\t* cvt.c (convert_from_reference): Adjust.\n+\t* pt.c (build_non_dependent_expr): Adjust.\n+\t* semantics.c (finish_offsetof): Adjust.\n+\t* tree.c (lvalue_kind): Use it.\n+\n \tPR c++/48873\n \t* tree.c (stabilize_expr): Don't make gratuitous copies of classes.\n "}, {"sha": "fcb715ce7ddb436106fbbde3e36fe17efc768ea5", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e292c7a319a9a8bc449cf8514ed45951bb706e/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e292c7a319a9a8bc449cf8514ed45951bb706e/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=31e292c7a319a9a8bc449cf8514ed45951bb706e", "patch": "@@ -62,7 +62,6 @@ c-common.h, not after.\n       STMT_EXPR_NO_SCOPE (in STMT_EXPR)\n       BIND_EXPR_TRY_BLOCK (in BIND_EXPR)\n       TYPENAME_IS_ENUM_P (in TYPENAME_TYPE)\n-      REFERENCE_REF_P (in INDIRECT_EXPR)\n       QUALIFIED_NAME_IS_TEMPLATE (in SCOPE_REF)\n       OMP_FOR_GIMPLIFYING_P (in OMP_FOR)\n       BASELINK_QUALIFIED_P (in BASELINK)\n@@ -2781,9 +2780,12 @@ extern void decl_shadowed_for_var_insert (tree, tree);\n   (LANG_DECL_FN_CHECK (FUNCTION_DECL_CHECK (NODE))\t\\\n    ->u.saved_language_function)\n \n-/* Indicates an indirect_expr is for converting a reference.  */\n-#define REFERENCE_REF_P(NODE) \\\n-  TREE_LANG_FLAG_0 (INDIRECT_REF_CHECK (NODE))\n+/* True if NODE is an implicit INDIRECT_EXPR from convert_from_reference.  */\n+#define REFERENCE_REF_P(NODE)\t\t\t\t\\\n+  (TREE_CODE (NODE) == INDIRECT_REF\t\t\t\\\n+   && TREE_TYPE (TREE_OPERAND (NODE, 0))\t\t\\\n+   && (TREE_CODE (TREE_TYPE (TREE_OPERAND ((NODE), 0)))\t\\\n+       == REFERENCE_TYPE))\n \n #define NEW_EXPR_USE_GLOBAL(NODE) \\\n   TREE_LANG_FLAG_0 (NEW_EXPR_CHECK (NODE))"}, {"sha": "db4ea46e46aba7620fd034bfa73305a830d68a7e", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e292c7a319a9a8bc449cf8514ed45951bb706e/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e292c7a319a9a8bc449cf8514ed45951bb706e/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=31e292c7a319a9a8bc449cf8514ed45951bb706e", "patch": "@@ -520,7 +520,6 @@ convert_from_reference (tree val)\n       TREE_THIS_VOLATILE (ref) = CP_TYPE_VOLATILE_P (t);\n       TREE_SIDE_EFFECTS (ref)\n \t= (TREE_THIS_VOLATILE (ref) || TREE_SIDE_EFFECTS (val));\n-      REFERENCE_REF_P (ref) = 1;\n       val = ref;\n     }\n "}, {"sha": "d109e1bd739c4e3d113da523021b7cce24d046b3", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e292c7a319a9a8bc449cf8514ed45951bb706e/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e292c7a319a9a8bc449cf8514ed45951bb706e/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=31e292c7a319a9a8bc449cf8514ed45951bb706e", "patch": "@@ -18918,7 +18918,7 @@ build_non_dependent_expr (tree expr)\n \n   /* Keep dereferences outside the NON_DEPENDENT_EXPR so lvalue_kind\n      doesn't need to look inside.  */\n-  if (TREE_CODE (expr) == INDIRECT_REF && REFERENCE_REF_P (expr))\n+  if (REFERENCE_REF_P (expr))\n     return convert_from_reference (build_non_dependent_expr\n \t\t\t\t   (TREE_OPERAND (expr, 0)));\n "}, {"sha": "8bf5a521dd4883c32eca4665883500a3c343c8a4", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e292c7a319a9a8bc449cf8514ed45951bb706e/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e292c7a319a9a8bc449cf8514ed45951bb706e/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=31e292c7a319a9a8bc449cf8514ed45951bb706e", "patch": "@@ -3428,7 +3428,7 @@ finish_offsetof (tree expr)\n       error (\"cannot apply %<offsetof%> to member function %qD\", expr);\n       return error_mark_node;\n     }\n-  if (TREE_CODE (expr) == INDIRECT_REF && REFERENCE_REF_P (expr))\n+  if (REFERENCE_REF_P (expr))\n     expr = TREE_OPERAND (expr, 0);\n   return fold_offsetof (expr, NULL_TREE);\n }"}, {"sha": "32303930527753d70bd8e285d31db6368afed33c", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31e292c7a319a9a8bc449cf8514ed45951bb706e/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31e292c7a319a9a8bc449cf8514ed45951bb706e/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=31e292c7a319a9a8bc449cf8514ed45951bb706e", "patch": "@@ -61,9 +61,7 @@ lvalue_kind (const_tree ref)\n      INDIRECT_REFs.  INDIRECT_REFs are just internal compiler\n      representation, not part of the language, so we have to look\n      through them.  */\n-  if (TREE_CODE (ref) == INDIRECT_REF\n-      && TREE_CODE (TREE_TYPE (TREE_OPERAND (ref, 0)))\n-\t  == REFERENCE_TYPE)\n+  if (REFERENCE_REF_P (ref))\n     return lvalue_kind (TREE_OPERAND (ref, 0));\n \n   if (TREE_TYPE (ref)"}]}