{"sha": "320d13eccc9e0df7e3ac2d9d81b8a56715c6c90e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzIwZDEzZWNjYzllMGRmN2UzYWMyZDlkODFiOGE1NjcxNWM2YzkwZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2015-05-22T14:14:38Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2015-05-22T14:14:38Z"}, "message": "re PR c++/65598 (Fix column location for 'explicit')\n\n/cp\n2015-05-22  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/65598\n\t* decl.c (grokdeclarator): Use the correct location in error\n\tmessages about 'explicit'.\n\n/testsuite\n2015-05-22  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/65598\n\t* g++.dg/cpp0x/explicit9.C: New.\n\t* g++.dg/cpp0x/explicit8.C: Check the locations too.\n\nFrom-SVN: r223576", "tree": {"sha": "f5f13937652e0994395c48f4ff5c0482fd89c46f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5f13937652e0994395c48f4ff5c0482fd89c46f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/320d13eccc9e0df7e3ac2d9d81b8a56715c6c90e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/320d13eccc9e0df7e3ac2d9d81b8a56715c6c90e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/320d13eccc9e0df7e3ac2d9d81b8a56715c6c90e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/320d13eccc9e0df7e3ac2d9d81b8a56715c6c90e/comments", "author": null, "committer": null, "parents": [{"sha": "effb52dae5203e21faf5f2c11bb0078e71f74482", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/effb52dae5203e21faf5f2c11bb0078e71f74482", "html_url": "https://github.com/Rust-GCC/gccrs/commit/effb52dae5203e21faf5f2c11bb0078e71f74482"}], "stats": {"total": 43, "additions": 35, "deletions": 8}, "files": [{"sha": "047b0a14195b682fb71bb5a1ec92c563dc3e2480", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320d13eccc9e0df7e3ac2d9d81b8a56715c6c90e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320d13eccc9e0df7e3ac2d9d81b8a56715c6c90e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=320d13eccc9e0df7e3ac2d9d81b8a56715c6c90e", "patch": "@@ -1,3 +1,9 @@\n+2015-05-22  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/65598\n+\t* decl.c (grokdeclarator): Use the correct location in error\n+\tmessages about 'explicit'.\n+\n 2015-05-22  Marek Polacek  <polacek@redhat.com>\n \t    Edward Smith-Rowland  <3dw4rd@verizon.net>\n "}, {"sha": "06fbbd5451f5e0e16ce5f3ad8141c329f794c4c9", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320d13eccc9e0df7e3ac2d9d81b8a56715c6c90e/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320d13eccc9e0df7e3ac2d9d81b8a56715c6c90e/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=320d13eccc9e0df7e3ac2d9d81b8a56715c6c90e", "patch": "@@ -10266,12 +10266,15 @@ grokdeclarator (const cp_declarator *declarator,\n \t in the declaration of a constructor or conversion function within\n \t a class definition.  */\n       if (!current_class_type)\n-\terror (\"%<explicit%> outside class declaration\");\n+\terror_at (declspecs->locations[ds_explicit],\n+\t\t  \"%<explicit%> outside class declaration\");\n       else if (friendp)\n-\terror (\"%<explicit%> in friend declaration\");\n+\terror_at (declspecs->locations[ds_explicit],\n+\t\t  \"%<explicit%> in friend declaration\");\n       else\n-\terror (\"only declarations of constructors and conversion operators \"\n-\t       \"can be %<explicit%>\");\n+\terror_at (declspecs->locations[ds_explicit],\n+\t\t  \"only declarations of constructors and conversion operators \"\n+\t\t  \"can be %<explicit%>\");\n       explicitp = 0;\n     }\n "}, {"sha": "a3305450b6548942e9a06d1e61cdfd6ea8702bc5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320d13eccc9e0df7e3ac2d9d81b8a56715c6c90e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320d13eccc9e0df7e3ac2d9d81b8a56715c6c90e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=320d13eccc9e0df7e3ac2d9d81b8a56715c6c90e", "patch": "@@ -1,3 +1,9 @@\n+2015-05-22  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/65598\n+\t* g++.dg/cpp0x/explicit9.C: New.\n+\t* g++.dg/cpp0x/explicit8.C: Check the locations too.\n+\n 2015-05-22  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/66251"}, {"sha": "9a8ecb348c602538a477048280a7d2cd4d0fc30c", "filename": "gcc/testsuite/g++.dg/cpp0x/explicit8.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320d13eccc9e0df7e3ac2d9d81b8a56715c6c90e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320d13eccc9e0df7e3ac2d9d81b8a56715c6c90e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit8.C?ref=320d13eccc9e0df7e3ac2d9d81b8a56715c6c90e", "patch": "@@ -5,18 +5,18 @@ struct A {\n   explicit operator int() const;\n };\n \n-explicit inline A::operator int() const { return 1; }  // { dg-error \"'explicit' outside class declaration\" }\n+explicit inline A::operator int() const { return 1; }  // { dg-error \"1:'explicit' outside class declaration\" }\n \n struct B {\n-  explicit void f();  // { dg-error \"only declarations of constructors and conversion operators can be 'explicit'\" }\n+  explicit void f();  // { dg-error \"3:only declarations of constructors and conversion operators can be 'explicit'\" }\n };\n \n-explicit void B::f() { }  // { dg-error \"'explicit' outside class declaration\" }\n+explicit void B::f() { }  // { dg-error \"1:'explicit' outside class declaration\" }\n \n struct C {\n   explicit C(int);\n };\n \n struct D {\n-  explicit friend C::C(int);  // { dg-error \"'explicit' in friend declaration\" }\n+  explicit friend C::C(int);  // { dg-error \"3:'explicit' in friend declaration\" }\n };"}, {"sha": "4afaafa26687677354d4c8f6c708de0064b2e5fc", "filename": "gcc/testsuite/g++.dg/cpp0x/explicit9.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/320d13eccc9e0df7e3ac2d9d81b8a56715c6c90e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/320d13eccc9e0df7e3ac2d9d81b8a56715c6c90e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fexplicit9.C?ref=320d13eccc9e0df7e3ac2d9d81b8a56715c6c90e", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/65598\n+// { dg-do compile { target c++11 } }\n+\n+struct ExplicitTest\n+{\n+  explicit operator bool() const;\n+};\n+\n+explicit ExplicitTest::operator bool() const  // { dg-error \"1:'explicit' outside class declaration\" }\n+{\n+  return true;\n+}"}]}