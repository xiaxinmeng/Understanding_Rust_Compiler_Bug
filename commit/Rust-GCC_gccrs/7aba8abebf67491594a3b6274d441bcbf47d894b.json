{"sha": "7aba8abebf67491594a3b6274d441bcbf47d894b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FiYThhYmViZjY3NDkxNTk0YTNiNjI3NGQ0NDFiY2JmNDdkODk0Yg==", "commit": {"author": {"name": "Thomas Koenig", "email": "Thomas.Koenig@online.de", "date": "2005-09-09T18:21:45Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2005-09-09T18:21:45Z"}, "message": "gfortran.h: Add iomsg to gfc_open, gfc_close, gfc_filepos, gfc_inquire and gfc_dt.\n\n2005-09-09  Thomas Koenig  <Thomas.Koenig@online.de>\n\n\t* gfortran.h:  Add iomsg to gfc_open, gfc_close, gfc_filepos,\n\tgfc_inquire and gfc_dt.\n\t* dump-parse-tree.c (gfc_show_code_node):  Add iomsg\n\tfor open, close, file positioning, inquire and namelist.\n\t* io.c (io_tag):  Add tag_iomsg.\n\t(resolve_tag): Add standards warning for iomsg.\n\t(match_open_element):  Add iomsg.\n\t(gfc_free_open):  Add iomsg.\n\t(gfc_resolve_open):  Add iomsg.\n\t(gfc_free_close):  Add iomsg.\n\t(match_close_element):  Add iomsg.\n\t(gfc_resolve_close):  Add iomsg.\n\t(gfc_free_filepos):  Add iomsg.\n\t(match_file_element):  Add iomsg.\n\t(gfc_resolve_filepos):  Add iostat and iomsg.\n\t(match-dt_element):  Add iomsg.\n\t(gfc_free_dt):  Add iomsg.\n\t(gfc_resolve_dt):  Add iomsg.\n\t(gfc_free_inquire):  Add iomsg.\n\t(match_inquire_element):  Add iomsg.\n\t(gfc_resolve_inquire):  Add iomsg.\n\t* trans_io.c:  Add ioparm_iomsg and ioparm_iomsg_len.\n\t(gfc_build_io_library_fndecls):  Add iomsg as last field.\n\t(gfc_trans_open):  Add iomsg.\n\t(gfc_trans_close):  Add iomsg.\n\t(build_fileos):  Call set_string for iomsg.\n\t(gfc_trans_inquire):  Add iomsg.\n\t(build_dt):  Add iomsg.\n\n2005-09-09  Thomas Koenig  <Thomas.Koenig@online.de>\n\n\t* io/io.h:  Add iomsg as last field of st_parameter.\n\t* runtime/error.c (generate_error):  If iomsg is present, copy\n\tthe message there.\n\n2005-09-09  Thomas Koenig  <Thomas.Koenig@online.de>\n\n\t* gfortran.dg/iomsg_1.f90:  New test case.\n\nFrom-SVN: r104102", "tree": {"sha": "56c7562709009df08fd688c5642a73bd009d5144", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56c7562709009df08fd688c5642a73bd009d5144"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7aba8abebf67491594a3b6274d441bcbf47d894b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7aba8abebf67491594a3b6274d441bcbf47d894b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7aba8abebf67491594a3b6274d441bcbf47d894b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7aba8abebf67491594a3b6274d441bcbf47d894b/comments", "author": null, "committer": null, "parents": [{"sha": "2360a4c1a67232511351afd4986ef9e1e2a73c36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2360a4c1a67232511351afd4986ef9e1e2a73c36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2360a4c1a67232511351afd4986ef9e1e2a73c36"}], "stats": {"total": 155, "additions": 141, "deletions": 14}, "files": [{"sha": "2d708f7efed41f74c4518c19243a552ad134b741", "filename": "gcc/fortran/dump-parse-tree.c", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aba8abebf67491594a3b6274d441bcbf47d894b/gcc%2Ffortran%2Fdump-parse-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aba8abebf67491594a3b6274d441bcbf47d894b/gcc%2Ffortran%2Fdump-parse-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdump-parse-tree.c?ref=7aba8abebf67491594a3b6274d441bcbf47d894b", "patch": "@@ -1084,6 +1084,11 @@ gfc_show_code_node (int level, gfc_code * c)\n \t  gfc_status (\" UNIT=\");\n \t  gfc_show_expr (open->unit);\n \t}\n+      if (open->iomsg)\n+\t{\n+\t  gfc_status (\" IOMSG=\");\n+\t  gfc_show_expr (open->iomsg);\n+\t}\n       if (open->iostat)\n \t{\n \t  gfc_status (\" IOSTAT=\");\n@@ -1153,6 +1158,11 @@ gfc_show_code_node (int level, gfc_code * c)\n \t  gfc_status (\" UNIT=\");\n \t  gfc_show_expr (close->unit);\n \t}\n+      if (close->iomsg)\n+\t{\n+\t  gfc_status (\" IOMSG=\");\n+\t  gfc_show_expr (close->iomsg);\n+\t}\n       if (close->iostat)\n \t{\n \t  gfc_status (\" IOSTAT=\");\n@@ -1190,6 +1200,11 @@ gfc_show_code_node (int level, gfc_code * c)\n \t  gfc_status (\" UNIT=\");\n \t  gfc_show_expr (fp->unit);\n \t}\n+      if (fp->iomsg)\n+\t{\n+\t  gfc_status (\" IOMSG=\");\n+\t  gfc_show_expr (fp->iomsg);\n+\t}\n       if (fp->iostat)\n \t{\n \t  gfc_status (\" IOSTAT=\");\n@@ -1214,6 +1229,11 @@ gfc_show_code_node (int level, gfc_code * c)\n \t  gfc_show_expr (i->file);\n \t}\n \n+      if (i->iomsg)\n+\t{\n+\t  gfc_status (\" IOMSG=\");\n+\t  gfc_show_expr (i->iomsg);\n+\t}\n       if (i->iostat)\n \t{\n \t  gfc_status (\" IOSTAT=\");\n@@ -1360,6 +1380,12 @@ gfc_show_code_node (int level, gfc_code * c)\n \tgfc_status (\" FMT=%d\", dt->format_label->value);\n       if (dt->namelist)\n \tgfc_status (\" NML=%s\", dt->namelist->name);\n+\n+      if (dt->iomsg)\n+\t{\n+\t  gfc_status (\" IOMSG=\");\n+\t  gfc_show_expr (dt->iomsg);\n+\t}\n       if (dt->iostat)\n \t{\n \t  gfc_status (\" IOSTAT=\");"}, {"sha": "301afac2ef590fc2101b375b4c8e0114c4eb929e", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aba8abebf67491594a3b6274d441bcbf47d894b/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aba8abebf67491594a3b6274d441bcbf47d894b/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=7aba8abebf67491594a3b6274d441bcbf47d894b", "patch": "@@ -1270,23 +1270,23 @@ gfc_alloc;\n typedef struct\n {\n   gfc_expr *unit, *file, *status, *access, *form, *recl,\n-    *blank, *position, *action, *delim, *pad, *iostat;\n+    *blank, *position, *action, *delim, *pad, *iostat, *iomsg;\n   gfc_st_label *err;\n }\n gfc_open;\n \n \n typedef struct\n {\n-  gfc_expr *unit, *status, *iostat;\n+  gfc_expr *unit, *status, *iostat, *iomsg;\n   gfc_st_label *err;\n }\n gfc_close;\n \n \n typedef struct\n {\n-  gfc_expr *unit, *iostat;\n+  gfc_expr *unit, *iostat, *iomsg;\n   gfc_st_label *err;\n }\n gfc_filepos;\n@@ -1297,7 +1297,7 @@ typedef struct\n   gfc_expr *unit, *file, *iostat, *exist, *opened, *number, *named,\n     *name, *access, *sequential, *direct, *form, *formatted,\n     *unformatted, *recl, *nextrec, *blank, *position, *action, *read,\n-    *write, *readwrite, *delim, *pad, *iolength;\n+    *write, *readwrite, *delim, *pad, *iolength, *iomsg;\n \n   gfc_st_label *err;\n \n@@ -1307,7 +1307,7 @@ gfc_inquire;\n \n typedef struct\n {\n-  gfc_expr *io_unit, *format_expr, *rec, *advance, *iostat, *size;\n+  gfc_expr *io_unit, *format_expr, *rec, *advance, *iostat, *size, *iomsg;\n \n   gfc_symbol *namelist;\n   /* A format_label of `format_asterisk' indicates the \"*\" format */"}, {"sha": "0ffc13d2205b46fecb29e357edbe02b39397ae7f", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aba8abebf67491594a3b6274d441bcbf47d894b/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aba8abebf67491594a3b6274d441bcbf47d894b/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=7aba8abebf67491594a3b6274d441bcbf47d894b", "patch": "@@ -53,6 +53,7 @@ static const io_tag\n \ttag_advance\t= {\"ADVANCE\", \" advance = %e\", BT_CHARACTER},\n \ttag_rec\t\t= {\"REC\", \" rec = %e\", BT_INTEGER},\n \ttag_format\t= {\"FORMAT\", NULL, BT_CHARACTER},\n+\ttag_iomsg\t= {\"IOMSG\", \" iomsg = %e\", BT_CHARACTER},\n \ttag_iostat\t= {\"IOSTAT\", \" iostat = %v\", BT_INTEGER},\n \ttag_size\t= {\"SIZE\", \" size = %v\", BT_INTEGER},\n \ttag_exist\t= {\"EXIST\", \" exist = %v\", BT_LOGICAL},\n@@ -1035,6 +1036,12 @@ resolve_tag (const io_tag * tag, gfc_expr * e)\n \t  gfc_error (\"%s tag at %L must be scalar\", tag->name, &e->where);\n \t  return FAILURE;\n \t}\n+      if (tag == &tag_iomsg)\n+\t{\n+\t  if (gfc_notify_std (GFC_STD_F2003, \"Fortran 2003: IOMSG tag at %L\",\n+\t\t\t      &e->where) == FAILURE)\n+\t    return FAILURE;\n+\t}\n     }\n \n   return SUCCESS;\n@@ -1049,6 +1056,9 @@ match_open_element (gfc_open * open)\n   match m;\n \n   m = match_etag (&tag_unit, &open->unit);\n+  if (m != MATCH_NO)\n+    return m;\n+  m = match_out_tag (&tag_iomsg, &open->iomsg);\n   if (m != MATCH_NO)\n     return m;\n   m = match_out_tag (&tag_iostat, &open->iostat);\n@@ -1102,6 +1112,7 @@ gfc_free_open (gfc_open * open)\n     return;\n \n   gfc_free_expr (open->unit);\n+  gfc_free_expr (open->iomsg);\n   gfc_free_expr (open->iostat);\n   gfc_free_expr (open->file);\n   gfc_free_expr (open->status);\n@@ -1125,6 +1136,7 @@ gfc_resolve_open (gfc_open * open)\n {\n \n   RESOLVE_TAG (&tag_unit, open->unit);\n+  RESOLVE_TAG (&tag_iomsg, open->iomsg);\n   RESOLVE_TAG (&tag_iostat, open->iostat);\n   RESOLVE_TAG (&tag_file, open->file);\n   RESOLVE_TAG (&tag_status, open->status);\n@@ -1217,6 +1229,7 @@ gfc_free_close (gfc_close * close)\n     return;\n \n   gfc_free_expr (close->unit);\n+  gfc_free_expr (close->iomsg);\n   gfc_free_expr (close->iostat);\n   gfc_free_expr (close->status);\n \n@@ -1235,6 +1248,9 @@ match_close_element (gfc_close * close)\n   if (m != MATCH_NO)\n     return m;\n   m = match_etag (&tag_status, &close->status);\n+  if (m != MATCH_NO)\n+    return m;\n+  m = match_out_tag (&tag_iomsg, &close->iomsg);\n   if (m != MATCH_NO)\n     return m;\n   m = match_out_tag (&tag_iostat, &close->iostat);\n@@ -1318,6 +1334,7 @@ gfc_resolve_close (gfc_close * close)\n {\n \n   RESOLVE_TAG (&tag_unit, close->unit);\n+  RESOLVE_TAG (&tag_iomsg, close->iomsg);\n   RESOLVE_TAG (&tag_iostat, close->iostat);\n   RESOLVE_TAG (&tag_status, close->status);\n \n@@ -1335,6 +1352,7 @@ gfc_free_filepos (gfc_filepos * fp)\n {\n \n   gfc_free_expr (fp->unit);\n+  gfc_free_expr (fp->iomsg);\n   gfc_free_expr (fp->iostat);\n   gfc_free (fp);\n }\n@@ -1348,6 +1366,9 @@ match_file_element (gfc_filepos * fp)\n   match m;\n \n   m = match_etag (&tag_unit, &fp->unit);\n+  if (m != MATCH_NO)\n+    return m;\n+  m = match_out_tag (&tag_iomsg, &fp->iomsg);\n   if (m != MATCH_NO)\n     return m;\n   m = match_out_tag (&tag_iostat, &fp->iostat);\n@@ -1439,6 +1460,8 @@ gfc_resolve_filepos (gfc_filepos * fp)\n {\n \n   RESOLVE_TAG (&tag_unit, fp->unit);\n+  RESOLVE_TAG (&tag_iostat, fp->iostat);\n+  RESOLVE_TAG (&tag_iomsg, fp->iomsg);\n   if (gfc_reference_st_label (fp->err, ST_LABEL_TARGET) == FAILURE)\n     return FAILURE;\n \n@@ -1664,6 +1687,9 @@ match_dt_element (io_kind k, gfc_dt * dt)\n     }\n \n   m = match_etag (&tag_rec, &dt->rec);\n+  if (m != MATCH_NO)\n+    return m;\n+  m = match_out_tag (&tag_iomsg, &dt->iomsg);\n   if (m != MATCH_NO)\n     return m;\n   m = match_out_tag (&tag_iostat, &dt->iostat);\n@@ -1715,6 +1741,7 @@ gfc_free_dt (gfc_dt * dt)\n   gfc_free_expr (dt->format_expr);\n   gfc_free_expr (dt->rec);\n   gfc_free_expr (dt->advance);\n+  gfc_free_expr (dt->iomsg);\n   gfc_free_expr (dt->iostat);\n   gfc_free_expr (dt->size);\n \n@@ -1732,6 +1759,7 @@ gfc_resolve_dt (gfc_dt * dt)\n   RESOLVE_TAG (&tag_format, dt->format_expr);\n   RESOLVE_TAG (&tag_rec, dt->rec);\n   RESOLVE_TAG (&tag_advance, dt->advance);\n+  RESOLVE_TAG (&tag_iomsg, dt->iomsg);\n   RESOLVE_TAG (&tag_iostat, dt->iostat);\n   RESOLVE_TAG (&tag_size, dt->size);\n \n@@ -2364,6 +2392,7 @@ gfc_free_inquire (gfc_inquire * inquire)\n \n   gfc_free_expr (inquire->unit);\n   gfc_free_expr (inquire->file);\n+  gfc_free_expr (inquire->iomsg);\n   gfc_free_expr (inquire->iostat);\n   gfc_free_expr (inquire->exist);\n   gfc_free_expr (inquire->opened);\n@@ -2404,6 +2433,7 @@ match_inquire_element (gfc_inquire * inquire)\n   m = match_etag (&tag_unit, &inquire->unit);\n   RETM m = match_etag (&tag_file, &inquire->file);\n   RETM m = match_ltag (&tag_err, &inquire->err);\n+  RETM m = match_out_tag (&tag_iomsg, &inquire->iomsg);\n   RETM m = match_out_tag (&tag_iostat, &inquire->iostat);\n   RETM m = match_vtag (&tag_exist, &inquire->exist);\n   RETM m = match_vtag (&tag_opened, &inquire->opened);\n@@ -2555,6 +2585,7 @@ gfc_resolve_inquire (gfc_inquire * inquire)\n \n   RESOLVE_TAG (&tag_unit, inquire->unit);\n   RESOLVE_TAG (&tag_file, inquire->file);\n+  RESOLVE_TAG (&tag_iomsg, inquire->iomsg);\n   RESOLVE_TAG (&tag_iostat, inquire->iostat);\n   RESOLVE_TAG (&tag_exist, inquire->exist);\n   RESOLVE_TAG (&tag_opened, inquire->opened);"}, {"sha": "e9a9c600f0a04c365b49f7dfcdcca733bb7615cc", "filename": "gcc/fortran/trans-io.c", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aba8abebf67491594a3b6274d441bcbf47d894b/gcc%2Ffortran%2Ftrans-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aba8abebf67491594a3b6274d441bcbf47d894b/gcc%2Ffortran%2Ftrans-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-io.c?ref=7aba8abebf67491594a3b6274d441bcbf47d894b", "patch": "@@ -98,6 +98,8 @@ static GTY(()) tree ioparm_readwrite_len;\n static GTY(()) tree ioparm_namelist_name;\n static GTY(()) tree ioparm_namelist_name_len;\n static GTY(()) tree ioparm_namelist_read_mode;\n+static GTY(()) tree ioparm_iomsg;\n+static GTY(()) tree ioparm_iomsg_len;\n \n /* The global I/O variables */\n \n@@ -213,6 +215,7 @@ gfc_build_io_library_fndecls (void)\n \n   ADD_STRING (namelist_name);\n   ADD_FIELD (namelist_read_mode, gfc_int4_type_node);\n+  ADD_STRING (iomsg);\n \n   gfc_finish_type (ioparm_type);\n \n@@ -642,6 +645,10 @@ gfc_trans_open (gfc_code * code)\n   if (p->pad)\n     set_string (&block, &post_block, ioparm_pad, ioparm_pad_len, p->pad);\n \n+  if (p->iomsg)\n+    set_string (&block, &post_block, ioparm_iomsg, ioparm_iomsg_len,\n+\t\tp->iomsg);\n+\n   if (p->iostat)\n     set_parameter_ref (&block, ioparm_iostat, p->iostat);\n \n@@ -681,6 +688,10 @@ gfc_trans_close (gfc_code * code)\n     set_string (&block, &post_block, ioparm_status,\n \t\tioparm_status_len, p->status);\n \n+  if (p->iomsg)\n+    set_string (&block, &post_block, ioparm_iomsg, ioparm_iomsg_len,\n+\t\tp->iomsg);\n+\n   if (p->iostat)\n     set_parameter_ref (&block, ioparm_iostat, p->iostat);\n \n@@ -703,19 +714,24 @@ gfc_trans_close (gfc_code * code)\n static tree\n build_filepos (tree function, gfc_code * code)\n {\n-  stmtblock_t block;\n+  stmtblock_t block, post_block;\n   gfc_filepos *p;\n   tree tmp;\n \n   p = code->ext.filepos;\n \n   gfc_init_block (&block);\n+  gfc_init_block (&post_block);\n \n   set_error_locus (&block, &code->loc);\n \n   if (p->unit)\n     set_parameter_value (&block, ioparm_unit, p->unit);\n \n+  if (p->iomsg)\n+    set_string (&block, &post_block, ioparm_iomsg, ioparm_iomsg_len,\n+\t\tp->iomsg);\n+\n   if (p->iostat)\n     set_parameter_ref (&block, ioparm_iostat, p->iostat);\n \n@@ -725,6 +741,8 @@ build_filepos (tree function, gfc_code * code)\n   tmp = gfc_build_function_call (function, NULL);\n   gfc_add_expr_to_block (&block, tmp);\n \n+  gfc_add_block_to_block (&block, &post_block);\n+\n   io_result (&block, p->err, NULL, NULL);\n \n   return gfc_finish_block (&block);\n@@ -796,6 +814,10 @@ gfc_trans_inquire (gfc_code * code)\n   if (p->file)\n     set_string (&block, &post_block, ioparm_file, ioparm_file_len, p->file);\n \n+  if (p->iomsg)\n+    set_string (&block, &post_block, ioparm_iomsg, ioparm_iomsg_len,\n+\t\tp->iomsg);\n+\n   if (p->iostat)\n     set_parameter_ref (&block, ioparm_iostat, p->iostat);\n \n@@ -1179,6 +1201,10 @@ build_dt (tree * function, gfc_code * code)\n \t\t    ioparm_format_len, dt->format_label->format);\n     }\n \n+  if (dt->iomsg)\n+    set_string (&block, &post_block, ioparm_iomsg, ioparm_iomsg_len,\n+\t\tdt->iomsg);\n+\n   if (dt->iostat)\n     set_parameter_ref (&block, ioparm_iostat, dt->iostat);\n "}, {"sha": "da40a59219993867271dcaf4c85ca6aa8b7a28af", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aba8abebf67491594a3b6274d441bcbf47d894b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aba8abebf67491594a3b6274d441bcbf47d894b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7aba8abebf67491594a3b6274d441bcbf47d894b", "patch": "@@ -1,3 +1,7 @@\n+2005-09-09  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\t* gfortran.dg/iomsg_1.f90:  New test case.\n+\n 2005-09-09  Richard Guenther  <rguenther@suse.de>\n \n \tPR c++/23624"}, {"sha": "6a5819d043e30d511e0f77f193feca71a498b794", "filename": "gcc/testsuite/gfortran.dg/iomsg_1.f90", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aba8abebf67491594a3b6274d441bcbf47d894b/gcc%2Ftestsuite%2Fgfortran.dg%2Fiomsg_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aba8abebf67491594a3b6274d441bcbf47d894b/gcc%2Ftestsuite%2Fgfortran.dg%2Fiomsg_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fiomsg_1.f90?ref=7aba8abebf67491594a3b6274d441bcbf47d894b", "patch": "@@ -0,0 +1,28 @@\n+! { dg-do run }\n+! Test implementation of the iomsg tag.\n+program iomsg_test\n+  character(len=70) ch\n+\n+  ! Test that iomsg is left unchanged with no error\n+  ch = 'asdf'\n+  open(10, status='scratch', iomsg=ch, iostat=i) ! { dg-warning \"Fortran 2003: IOMSG tag\" }\n+  if (ch .ne. 'asdf') call abort\n+\n+  ! Test iomsg with data transfer statement\n+  read(10,'(I2)', iomsg=ch, end=100) k ! { dg-warning \"Fortran 2003: IOMSG tag\" }\n+  call abort\n+100 continue\n+  if (ch .ne. 'End of file') call abort\n+\n+  ! Test iomsg with open\n+  open (-3, err=200, iomsg=ch) ! { dg-warning \"Fortran 2003: IOMSG tag\" }\n+\n+  call abort\n+200 continue\n+  if (ch .ne. 'Bad unit number in OPEN statement') call abort\n+\n+  ! Test iomsg with close\n+  close(23,status=\"no_idea\", err=500, iomsg=ch) ! { dg-warning \"Fortran 2003: IOMSG tag\" }\n+500 continue\n+  if (ch .ne. \"Bad STATUS parameter in CLOSE statement\") call abort\n+end program iomsg_test"}, {"sha": "6e45ee0ea29eaf06f81098ffcc14656fb9c3f6e4", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aba8abebf67491594a3b6274d441bcbf47d894b/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aba8abebf67491594a3b6274d441bcbf47d894b/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=7aba8abebf67491594a3b6274d441bcbf47d894b", "patch": "@@ -1,3 +1,9 @@\n+2005-09-09  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\t* io/io.h:  Add iomsg as last field of st_parameter.\n+\t* runtime/error.c (generate_error):  If iomsg is present, copy\n+\tthe message there.\n+\n 2005-09-09  Richard Sandiford  <richard@codesourcery.com>\n \n \tPR fortran/12840"}, {"sha": "6f4023b9e33d79d424e673bb96f2cb1e44b4ffb6", "filename": "libgfortran/io/io.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aba8abebf67491594a3b6274d441bcbf47d894b/libgfortran%2Fio%2Fio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aba8abebf67491594a3b6274d441bcbf47d894b/libgfortran%2Fio%2Fio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fio.h?ref=7aba8abebf67491594a3b6274d441bcbf47d894b", "patch": "@@ -263,6 +263,9 @@ typedef struct\n   CHARACTER (namelist_name);\n   GFC_INTEGER_4 namelist_read_mode;\n \n+  /* iomsg */\n+  CHARACTER (iomsg);\n+\n #undef CHARACTER\n }\n st_parameter;"}, {"sha": "3c1686d947d770482a54230f307856bb634c79bf", "filename": "libgfortran/runtime/error.c", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7aba8abebf67491594a3b6274d441bcbf47d894b/libgfortran%2Fruntime%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7aba8abebf67491594a3b6274d441bcbf47d894b/libgfortran%2Fruntime%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Ferror.c?ref=7aba8abebf67491594a3b6274d441bcbf47d894b", "patch": "@@ -441,10 +441,10 @@ translate_error (int code)\n \n \n /* generate_error()-- Come here when an error happens.  This\n- * subroutine is called if it is possible to continue on after the\n- * error.  If an IOSTAT variable exists, we set it.  If the IOSTAT or\n- * ERR label is present, we return, otherwise we terminate the program\n- * after print a message.  The error code is always required but the\n+ * subroutine is called if it is possible to continue on after the error.\n+ * If an IOSTAT or IOMSG variable exists, we set it.  If IOSTAT or\n+ * ERR labels are present, we return, otherwise we terminate the program\n+ * after printing a message.  The error code is always required but the\n  * message parameter can be NULL, in which case a string describing\n  * the most recent operating system error is used. */\n \n@@ -455,6 +455,13 @@ generate_error (int family, const char *message)\n   if (ioparm.iostat != NULL)\n     *ioparm.iostat = family;\n \n+  if (message == NULL)\n+    message =\n+      (family == ERROR_OS) ? get_oserror () : translate_error (family);\n+\n+  if (ioparm.iomsg)\n+    cf_strcpy (ioparm.iomsg, ioparm.iomsg_len, message);\n+\n   /* Report status back to the compiler.  */\n   switch (family)\n     {\n@@ -483,10 +490,6 @@ generate_error (int family, const char *message)\n \n   /* Terminate the program */\n \n-  if (message == NULL)\n-    message =\n-      (family == ERROR_OS) ? get_oserror () : translate_error (family);\n-\n   runtime_error (message);\n }\n "}]}