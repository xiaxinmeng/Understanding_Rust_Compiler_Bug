{"sha": "f883c8dce3c9c7330faf0d533a796475f51c89fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg4M2M4ZGNlM2M5YzczMzBmYWYwZDUzM2E3OTY0NzVmNTFjODlmYQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-10-26T10:33:30Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-10-26T10:33:30Z"}, "message": "1.cc: Clean up.\n\n2003-10-26  Paolo Carlini  <pcarlini@suse.de>\n\n\t* testsuite/22_locale/money_put/put/char/1.cc: Clean up.\n\t* testsuite/22_locale/money_put/put/wchar_t/1.cc: Ditto.\n\nFrom-SVN: r72949", "tree": {"sha": "214bdce0f9241447ec656dac370be34395afee9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/214bdce0f9241447ec656dac370be34395afee9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f883c8dce3c9c7330faf0d533a796475f51c89fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f883c8dce3c9c7330faf0d533a796475f51c89fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f883c8dce3c9c7330faf0d533a796475f51c89fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f883c8dce3c9c7330faf0d533a796475f51c89fa/comments", "author": null, "committer": null, "parents": [{"sha": "38f9cd4cacb55b6e05d2a7506b8f2796376f24dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38f9cd4cacb55b6e05d2a7506b8f2796376f24dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38f9cd4cacb55b6e05d2a7506b8f2796376f24dd"}], "stats": {"total": 97, "additions": 40, "deletions": 57}, "files": [{"sha": "a1ef2daa3d537758f5473f8890c5329924c00c47", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 34, "deletions": 29, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f883c8dce3c9c7330faf0d533a796475f51c89fa/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f883c8dce3c9c7330faf0d533a796475f51c89fa/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f883c8dce3c9c7330faf0d533a796475f51c89fa", "patch": "@@ -1,3 +1,8 @@\n+2003-10-26  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* testsuite/22_locale/money_put/put/char/1.cc: Clean up.\n+\t* testsuite/22_locale/money_put/put/wchar_t/1.cc: Ditto.\n+\n 2003-10-25  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/locale_facets.tcc (num_get::_M_extract_int):\n@@ -289,35 +294,35 @@\n \t* testsuite/27_io/types/3.cc: New test.\n \n 2003-10-16  Benjamin Kosnik  <bkoz@redhat.com>\n- \n-        * configure.host: Remove fpos_include_dir.\n-        * configure.ac: Remove FPOS_INC_SRCDIR.\n-        * configure: Regenerate.\n-        * acinclude.m4 (GLIBCXX_ENABLE_CSTDIO): Remove FPOS_H.\n-        * aclocal.m4: Regenerate.\n-        * include/Makefile.am (host_headers): Remove fpos.h.\n-        (bits_headers): Add postypes.h.\n-        * include/Makefile.in: Regenerate.\n-        * config/os/gnu-linux/fposh: Remove.\n-        * config/os/generic/fpos.h: Remove.\n- \n-        * testsuite/27_io/basic_filebuf/seekoff/char/1-in.cc: Fixup.\n-        * testsuite/27_io/basic_filebuf/seekoff/char/1-io.cc: Same.\n-        * testsuite/27_io/basic_filebuf/seekoff/char/1-out.cc: Same.\n-        * testsuite/27_io/basic_filebuf/seekoff/char/2-in.cc: Same.\n-        * testsuite/27_io/basic_filebuf/seekoff/char/2-io.cc: Same.\n-        * testsuite/27_io/basic_filebuf/seekoff/char/2-out.cc: Same.\n-        * testsuite/27_io/basic_filebuf/seekpos/char/1-in.cc: Same.\n-        * testsuite/27_io/basic_filebuf/seekpos/char/1-io.cc: Same.\n-        * testsuite/27_io/basic_filebuf/seekpos/char/1-out.cc: Same.\n-        * testsuite/27_io/basic_filebuf/seekpos/char/2-in.cc: Same.\n-        * testsuite/27_io/basic_filebuf/seekpos/char/2-io.cc: Same.\n-        * testsuite/27_io/basic_filebuf/seekpos/char/2-out.cc: Same.\n-        * testsuite/27_io/basic_istream/seekg/char/2.cc: Same.\n-        * testsuite/27_io/basic_stringbuf/seekoff/char/1.cc: Same.\n-        * testsuite/27_io/basic_stringbuf/seekpos/char/1.cc: Same.\n-        * testsuite/27_io/fpos/mbstate_t/3.cc: Same.\n-        * testsuite/27_io/objects/char/10.cc: Same.\n+\n+\t* configure.host: Remove fpos_include_dir.\n+\t* configure.ac: Remove FPOS_INC_SRCDIR.\n+\t* configure: Regenerate.\n+\t* acinclude.m4 (GLIBCXX_ENABLE_CSTDIO): Remove FPOS_H.\n+\t* aclocal.m4: Regenerate.\n+\t* include/Makefile.am (host_headers): Remove fpos.h.\n+\t(bits_headers): Add postypes.h.\n+\t* include/Makefile.in: Regenerate.\n+\t* config/os/gnu-linux/fposh: Remove.\n+\t* config/os/generic/fpos.h: Remove.\n+\n+\t* testsuite/27_io/basic_filebuf/seekoff/char/1-in.cc: Fixup.\n+\t* testsuite/27_io/basic_filebuf/seekoff/char/1-io.cc: Same.\n+\t* testsuite/27_io/basic_filebuf/seekoff/char/1-out.cc: Same.\n+\t* testsuite/27_io/basic_filebuf/seekoff/char/2-in.cc: Same.\n+\t* testsuite/27_io/basic_filebuf/seekoff/char/2-io.cc: Same.\n+\t* testsuite/27_io/basic_filebuf/seekoff/char/2-out.cc: Same.\n+\t* testsuite/27_io/basic_filebuf/seekpos/char/1-in.cc: Same.\n+\t* testsuite/27_io/basic_filebuf/seekpos/char/1-io.cc: Same.\n+\t* testsuite/27_io/basic_filebuf/seekpos/char/1-out.cc: Same.\n+\t* testsuite/27_io/basic_filebuf/seekpos/char/2-in.cc: Same.\n+\t* testsuite/27_io/basic_filebuf/seekpos/char/2-io.cc: Same.\n+\t* testsuite/27_io/basic_filebuf/seekpos/char/2-out.cc: Same.\n+\t* testsuite/27_io/basic_istream/seekg/char/2.cc: Same.\n+\t* testsuite/27_io/basic_stringbuf/seekoff/char/1.cc: Same.\n+\t* testsuite/27_io/basic_stringbuf/seekpos/char/1.cc: Same.\n+\t* testsuite/27_io/fpos/mbstate_t/3.cc: Same.\n+\t* testsuite/27_io/objects/char/10.cc: Same.\n \n 2003-10-16  Paolo Carlini  <pcarlini@suse.de>\n "}, {"sha": "bba614519893bef380df268c9b18a0654295d118", "filename": "libstdc++-v3/testsuite/22_locale/money_put/put/char/1.cc", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f883c8dce3c9c7330faf0d533a796475f51c89fa/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fchar%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f883c8dce3c9c7330faf0d533a796475f51c89fa/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fchar%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fchar%2F1.cc?ref=f883c8dce3c9c7330faf0d533a796475f51c89fa", "patch": "@@ -36,13 +36,8 @@ void test01()\n \n   // basic construction\n   locale loc_c = locale::classic();\n-  locale loc_hk = __gnu_test::try_named_locale(\"en_HK\");\n-  locale loc_fr = __gnu_test::try_named_locale(\"fr_FR@euro\");\n   locale loc_de = __gnu_test::try_named_locale(\"de_DE@euro\");\n   VERIFY( loc_c != loc_de );\n-  VERIFY( loc_hk != loc_fr );\n-  VERIFY( loc_hk != loc_de );\n-  VERIFY( loc_de != loc_fr );\n \n   // cache the moneypunct facets\n   typedef moneypunct<char, true> __money_true;\n@@ -54,14 +49,8 @@ void test01()\n   // total EPA budget FY 2002\n   const string digits1(\"720000000000\");\n \n-  // est. cost, national missile \"defense\", expressed as a loss in USD 2001\n-  const string digits2(\"-10000000000000\");  \n-\n-  // not valid input\n-  const string digits3(\"-A\"); \n-\n   // input less than frac_digits\n-  const string digits4(\"-1\");\n+  const string digits2(\"-1\");\n   \n   // cache the money_put facet\n   ostringstream oss;\n@@ -104,14 +93,14 @@ void test01()\n   // test various fill strategies\n   oss.str(empty);\n   oss.width(20);\n-  iterator_type os_it10 = mon_put.put(oss.rdbuf(), true, oss, '*', digits4);\n+  iterator_type os_it10 = mon_put.put(oss.rdbuf(), true, oss, '*', digits2);\n   string result10 = oss.str();\n   VERIFY( result10 == \"***************-,01*\");\n \n   oss.str(empty);\n   oss.width(20);\n   oss.setf(ios_base::internal);\n-  iterator_type os_it11 = mon_put.put(oss.rdbuf(), true, oss, '*', digits4);\n+  iterator_type os_it11 = mon_put.put(oss.rdbuf(), true, oss, '*', digits2);\n   string result11 = oss.str();\n   VERIFY( result11 == \"-,01****************\");\n }"}, {"sha": "a025d372edca9001947953247bc22a2331bf15b9", "filename": "libstdc++-v3/testsuite/22_locale/money_put/put/wchar_t/1.cc", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f883c8dce3c9c7330faf0d533a796475f51c89fa/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f883c8dce3c9c7330faf0d533a796475f51c89fa/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_put%2Fput%2Fwchar_t%2F1.cc?ref=f883c8dce3c9c7330faf0d533a796475f51c89fa", "patch": "@@ -36,13 +36,8 @@ void test01()\n \n   // basic construction\n   locale loc_c = locale::classic();\n-  locale loc_hk = __gnu_test::try_named_locale(\"en_HK\");\n-  locale loc_fr = __gnu_test::try_named_locale(\"fr_FR@euro\");\n   locale loc_de = __gnu_test::try_named_locale(\"de_DE@euro\");\n   VERIFY( loc_c != loc_de );\n-  VERIFY( loc_hk != loc_fr );\n-  VERIFY( loc_hk != loc_de );\n-  VERIFY( loc_de != loc_fr );\n \n   // cache the moneypunct facets\n   typedef moneypunct<wchar_t, true> __money_true;\n@@ -54,14 +49,8 @@ void test01()\n   // total EPA budget FY 2002\n   const wstring digits1(L\"720000000000\");\n \n-  // est. cost, national missile \"defense\", expressed as a loss in USD 2001\n-  const wstring digits2(L\"-10000000000000\");  \n-\n-  // not valid input\n-  const wstring digits3(L\"-A\"); \n-\n   // input less than frac_digits\n-  const wstring digits4(L\"-1\");\n+  const wstring digits2(L\"-1\");\n   \n   // cache the money_put facet\n   wostringstream oss;\n@@ -104,14 +93,14 @@ void test01()\n   // test various fill strategies\n   oss.str(empty);\n   oss.width(20);\n-  iterator_type os_it10 = mon_put.put(oss.rdbuf(), true, oss, '*', digits4);\n+  iterator_type os_it10 = mon_put.put(oss.rdbuf(), true, oss, '*', digits2);\n   wstring result10 = oss.str();\n   VERIFY( result10 == L\"***************-,01*\");\n \n   oss.str(empty);\n   oss.width(20);\n   oss.setf(ios_base::internal);\n-  iterator_type os_it11 = mon_put.put(oss.rdbuf(), true, oss, '*', digits4);\n+  iterator_type os_it11 = mon_put.put(oss.rdbuf(), true, oss, '*', digits2);\n   wstring result11 = oss.str();\n   VERIFY( result11 == L\"-,01****************\");\n }"}]}