{"sha": "0c314d1ab0636a2253dfc8b4f9f50010210556dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGMzMTRkMWFiMDYzNmEyMjUzZGZjOGI0ZjlmNTAwMTAyMTA1NTZkYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-01-22T20:50:06Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-01-22T20:50:06Z"}, "message": "(num_sign_bit_copies): Ifndef WORD_REGISTER_OPERATIONS, ensure we\ndon't do the wrong thing if X is narrower than MODE.\n\nFrom-SVN: r6403", "tree": {"sha": "777408b38b27ff8769acbfc3f77349fc573c111d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/777408b38b27ff8769acbfc3f77349fc573c111d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c314d1ab0636a2253dfc8b4f9f50010210556dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c314d1ab0636a2253dfc8b4f9f50010210556dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c314d1ab0636a2253dfc8b4f9f50010210556dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c314d1ab0636a2253dfc8b4f9f50010210556dc/comments", "author": null, "committer": null, "parents": [{"sha": "abb6b720734c1fb17251defde364f9b1e39ebcfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abb6b720734c1fb17251defde364f9b1e39ebcfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abb6b720734c1fb17251defde364f9b1e39ebcfb"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "729d557c7d87994fb2fed97d22c19955bbde1f5d", "filename": "gcc/combine.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c314d1ab0636a2253dfc8b4f9f50010210556dc/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c314d1ab0636a2253dfc8b4f9f50010210556dc/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=0c314d1ab0636a2253dfc8b4f9f50010210556dc", "patch": "@@ -1,5 +1,5 @@\n /* Optimize by combining instructions for GNU compiler.\n-   Copyright (C) 1987, 1988, 1992, 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1987, 1988, 1992, 1993, 1994 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -6965,6 +6965,14 @@ num_sign_bit_copies (x, mode)\n     return MAX (1, (num_sign_bit_copies (x, GET_MODE (x))\n \t\t    - (GET_MODE_BITSIZE (GET_MODE (x)) - bitwidth)));\n      \n+#ifndef WORD_REGISTER_OPERATIONS\n+  /* If this machine does not do all register operations on the entire\n+     register and MODE is wider than the mode of X, we can say nothing\n+     at all about the high-order bits.  */\n+  if (GET_MODE (x) != VOIDmode && bitwidth > GET_MODE_BITSIZE (GET_MODE (x)))\n+    return 1;\n+#endif\n+\n   switch (code)\n     {\n     case REG:"}]}