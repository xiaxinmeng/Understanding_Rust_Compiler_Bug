{"sha": "c2ae8aef4e37a4e43565aafc552d62bb4a485431", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJhZThhZWY0ZTM3YTRlNDM1NjVhYWZjNTUyZDYyYmI0YTQ4NTQzMQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2002-07-22T17:11:57Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2002-07-22T17:11:57Z"}, "message": "hwint.h (HOST_WIDE_INT_PRINT_DEC_SPACE, [...]): New formatting macros.\n\n\t* hwint.h (HOST_WIDE_INT_PRINT_DEC_SPACE,\n\tHOST_WIDE_INT_PRINT_UNSIGNED_SPACE,\n\tHOST_WIDEST_INT_PRINT_DEC_SPACE, HOST_WIDEST_INT_PRINT_DEC_SPACE):\n\tNew formatting macros.\n\n\t* ra-debug.c (dump_static_insn_cost): Avoid string concatenation.\n\nFrom-SVN: r55652", "tree": {"sha": "8a6e326d1ca8bf4b8f06e780159256d88db6ff61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a6e326d1ca8bf4b8f06e780159256d88db6ff61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2ae8aef4e37a4e43565aafc552d62bb4a485431", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2ae8aef4e37a4e43565aafc552d62bb4a485431", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2ae8aef4e37a4e43565aafc552d62bb4a485431", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2ae8aef4e37a4e43565aafc552d62bb4a485431/comments", "author": null, "committer": null, "parents": [{"sha": "eab2120d5efebd6b7c29730692ff165b471b7eac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eab2120d5efebd6b7c29730692ff165b471b7eac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eab2120d5efebd6b7c29730692ff165b471b7eac"}], "stats": {"total": 44, "additions": 34, "deletions": 10}, "files": [{"sha": "6432020b80ef3f204b6530381e75b343c530f532", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2ae8aef4e37a4e43565aafc552d62bb4a485431/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2ae8aef4e37a4e43565aafc552d62bb4a485431/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c2ae8aef4e37a4e43565aafc552d62bb4a485431", "patch": "@@ -1,3 +1,12 @@\n+2002-07-22  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* hwint.h (HOST_WIDE_INT_PRINT_DEC_SPACE,\n+\tHOST_WIDE_INT_PRINT_UNSIGNED_SPACE,\n+\tHOST_WIDEST_INT_PRINT_DEC_SPACE, HOST_WIDEST_INT_PRINT_DEC_SPACE):\n+\tNew formatting macros.\n+\n+\t* ra-debug.c (dump_static_insn_cost): Avoid string concatenation.\n+\n Mon Jul 22 15:27:25 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* rtlanal.c (subreg_regno_offset): Return correct offset for"}, {"sha": "2c14379901860992ae743d64bb28edda7c3a18e3", "filename": "gcc/hwint.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2ae8aef4e37a4e43565aafc552d62bb4a485431/gcc%2Fhwint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2ae8aef4e37a4e43565aafc552d62bb4a485431/gcc%2Fhwint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhwint.h?ref=c2ae8aef4e37a4e43565aafc552d62bb4a485431", "patch": "@@ -73,25 +73,31 @@\n # if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_INT\n #  define HOST_WIDE_INT_PRINT_DEC \"%d\"\n #  define HOST_WIDE_INT_PRINT_DEC_C \"%d\"\n+#  define HOST_WIDE_INT_PRINT_DEC_SPACE \"% *d\"\n # else\n #  if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONG\n #   define HOST_WIDE_INT_PRINT_DEC \"%ld\"\n #   define HOST_WIDE_INT_PRINT_DEC_C \"%ldL\"\n+#   define HOST_WIDE_INT_PRINT_DEC_SPACE \"% *ld\"\n #  else\n #   define HOST_WIDE_INT_PRINT_DEC \"%lld\"\n #   define HOST_WIDE_INT_PRINT_DEC_C \"%lldLL\"\n+#   define HOST_WIDE_INT_PRINT_DEC_SPACE \"% *lld\"\n #  endif\n # endif\n #endif /* ! HOST_WIDE_INT_PRINT_DEC */\n \n #ifndef HOST_WIDE_INT_PRINT_UNSIGNED\n # if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_INT\n #  define HOST_WIDE_INT_PRINT_UNSIGNED \"%u\"\n+#  define HOST_WIDE_INT_PRINT_UNSIGNED_SPACE \"% *u\"\n # else\n #  if HOST_BITS_PER_WIDE_INT == HOST_BITS_PER_LONG\n #   define HOST_WIDE_INT_PRINT_UNSIGNED \"%lu\"\n+#   define HOST_WIDE_INT_PRINT_UNSIGNED_SPACE \"% *lu\"\n #  else\n #   define HOST_WIDE_INT_PRINT_UNSIGNED \"%llu\"\n+#   define HOST_WIDE_INT_PRINT_UNSIGNED_SPACE \"% *llu\"\n #  endif\n # endif\n #endif /* ! HOST_WIDE_INT_PRINT_UNSIGNED */\n@@ -142,13 +148,17 @@\n #   define HOST_BITS_PER_WIDEST_INT HOST_BITS_PER_LONGLONG\n #   define HOST_WIDEST_INT long long\n #   define HOST_WIDEST_INT_PRINT_DEC \"%lld\"\n+#   define HOST_WIDEST_INT_PRINT_DEC_SPACE \"% *lld\"\n #   define HOST_WIDEST_INT_PRINT_UNSIGNED \"%llu\"\n+#   define HOST_WIDEST_INT_PRINT_UNSIGNED_SPACE \"% *llu\"\n #   define HOST_WIDEST_INT_PRINT_HEX \"0x%llx\"\n #  else\n #   define HOST_BITS_PER_WIDEST_INT HOST_BITS_PER_LONG\n #   define HOST_WIDEST_INT long\n #   define HOST_WIDEST_INT_PRINT_DEC \"%ld\"\n+#   define HOST_WIDEST_INT_PRINT_DEC_SPACE \"% *ld\"\n #   define HOST_WIDEST_INT_PRINT_UNSIGNED \"%lu\"\n+#   define HOST_WIDEST_INT_PRINT_UNSIGNED_SPACE \"% *lu\"\n #   define HOST_WIDEST_INT_PRINT_HEX \"0x%lx\"\n # endif /* long long wider than long */\n #endif /* ! HOST_WIDEST_INT */"}, {"sha": "a20e9901ae50ce8ea2ed37ee58c829967237032e", "filename": "gcc/ra-debug.c", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2ae8aef4e37a4e43565aafc552d62bb4a485431/gcc%2Fra-debug.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2ae8aef4e37a4e43565aafc552d62bb4a485431/gcc%2Fra-debug.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fra-debug.c?ref=c2ae8aef4e37a4e43565aafc552d62bb4a485431", "patch": "@@ -981,16 +981,21 @@ dump_static_insn_cost (file, message, prefix)\n   if (!prefix)\n     prefix = \"\";\n   fprintf (file, \"static insn cost %s\\n\", message ? message : \"\");\n-  fprintf (file, \"  %soverall:\\tnum=%6d\\tcost=%8d\\n\", prefix, overall.count,\n-\t   overall.cost);\n-  fprintf (file, \"  %sloads:\\tnum=%6d\\tcost=%8d\\n\", prefix, load.count,\n-\t   load.cost);\n-  fprintf (file, \"  %sstores:\\tnum=%6d\\tcost=%8d\\n\", prefix,\n-\t   store.count, store.cost);\n-  fprintf (file, \"  %sregcopy:\\tnum=%6d\\tcost=%8d\\n\", prefix, regcopy.count,\n-\t   regcopy.cost);\n-  fprintf (file, \"  %sselfcpy:\\tnum=%6d\\tcost=%8d\\n\", prefix, selfcopy.count,\n-\t   selfcopy.cost);\n+  fprintf (file, \"  %soverall:\\tnum=%6d\\tcost=\", prefix, overall.count);\n+  fprintf (file, HOST_WIDE_INT_PRINT_DEC_SPACE, 8, overall.cost);\n+  fprintf (file, \"\\n\");\n+  fprintf (file, \"  %sloads:\\tnum=%6d\\tcost=\", prefix, load.count);\n+  fprintf (file, HOST_WIDE_INT_PRINT_DEC_SPACE, 8, load.cost);\n+  fprintf (file, \"\\n\");\n+  fprintf (file, \"  %sstores:\\tnum=%6d\\tcost=\", prefix, store.count);\n+  fprintf (file, HOST_WIDE_INT_PRINT_DEC_SPACE, 8, store.cost);\n+  fprintf (file, \"\\n\");\n+  fprintf (file, \"  %sregcopy:\\tnum=%6d\\tcost=\", prefix, regcopy.count);\n+  fprintf (file, HOST_WIDE_INT_PRINT_DEC_SPACE, 8, regcopy.cost);\n+  fprintf (file, \"\\n\");\n+  fprintf (file, \"  %sselfcpy:\\tnum=%6d\\tcost=\", prefix, selfcopy.count);\n+  fprintf (file, HOST_WIDE_INT_PRINT_DEC_SPACE, 8, selfcopy.cost);\n+  fprintf (file, \"\\n\");\n }\n \n /* Returns nonzero, if WEB1 and WEB2 have some possible"}]}