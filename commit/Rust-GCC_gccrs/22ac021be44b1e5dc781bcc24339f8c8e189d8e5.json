{"sha": "22ac021be44b1e5dc781bcc24339f8c8e189d8e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJhYzAyMWJlNDRiMWU1ZGM3ODFiY2MyNDMzOWY4YzhlMTg5ZDhlNQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2008-05-15T00:52:48Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2008-05-15T00:52:48Z"}, "message": "mutex (mutex::try_lock): Eat errors.\n\n\n2008-05-14  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/std/mutex (mutex::try_lock): Eat errors.\n\t(mutex::unlock): Same.\n\t(recursive_mutex::try_lock): Eat errors.\n\t(recursive_mutex::unlock): Same.\n\t* testsuite/30_threads/mutex/dest/destructor_locked.cc: Add\n\t-pthreads, adjust line numbers.\n\t* testsuite/30_threads/mutex/native_handle/1.cc: Same.\n\t* testsuite/30_threads/mutex/cons/1.cc: Same.\n\t* testsuite/30_threads/mutex/try_lock/1.cc: Same.\n\t* testsuite/30_threads/mutex/try_lock/2.cc: Same.\n\t* testsuite/30_threads/mutex/lock/1.cc: Same.\n\t* testsuite/30_threads/mutex/unlock/1.cc: Same.\n\t* testsuite/30_threads/recursive_mutex/dest/destructor_locked.cc: Same.\n\t* testsuite/30_threads/recursive_mutex/native_handle/1.cc: Same.\n\t* testsuite/30_threads/recursive_mutex/cons/1.cc: Same.\n\nFrom-SVN: r135321", "tree": {"sha": "aca599a585439e9a045658d42946ac5f4d22c49d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aca599a585439e9a045658d42946ac5f4d22c49d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22ac021be44b1e5dc781bcc24339f8c8e189d8e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22ac021be44b1e5dc781bcc24339f8c8e189d8e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22ac021be44b1e5dc781bcc24339f8c8e189d8e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/comments", "author": null, "committer": null, "parents": [{"sha": "2fa9f315d4fb9a1633d9ed3105a6d256fa21e41f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fa9f315d4fb9a1633d9ed3105a6d256fa21e41f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fa9f315d4fb9a1633d9ed3105a6d256fa21e41f"}], "stats": {"total": 102, "additions": 56, "deletions": 46}, "files": [{"sha": "2f06c8e92a04c435181dff553d1babbf76b2a4d8", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=22ac021be44b1e5dc781bcc24339f8c8e189d8e5", "patch": "@@ -1,3 +1,21 @@\n+2008-05-14  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/std/mutex (mutex::try_lock): Eat errors.\n+\t(mutex::unlock): Same.\n+\t(recursive_mutex::try_lock): Eat errors.\n+\t(recursive_mutex::unlock): Same.\n+\t* testsuite/30_threads/mutex/dest/destructor_locked.cc: Add\n+\t-pthreads, adjust line numbers.\n+\t* testsuite/30_threads/mutex/native_handle/1.cc: Same.\n+\t* testsuite/30_threads/mutex/cons/1.cc: Same.\n+\t* testsuite/30_threads/mutex/try_lock/1.cc: Same.\n+\t* testsuite/30_threads/mutex/try_lock/2.cc: Same.\n+\t* testsuite/30_threads/mutex/lock/1.cc: Same.\n+\t* testsuite/30_threads/mutex/unlock/1.cc: Same.\n+\t* testsuite/30_threads/recursive_mutex/dest/destructor_locked.cc: Same.\n+\t* testsuite/30_threads/recursive_mutex/native_handle/1.cc: Same.\n+\t* testsuite/30_threads/recursive_mutex/cons/1.cc: Same.\n+\n 2008-05-14  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/std/sstream: Adjust braces."}, {"sha": "6a75e7824164e81f888a8ae56736efbc68b9d1d2", "filename": "libstdc++-v3/include/std/mutex", "status": "modified", "additions": 10, "deletions": 28, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex?ref=22ac021be44b1e5dc781bcc24339f8c8e189d8e5", "patch": "@@ -59,14 +59,13 @@ namespace std\n \n     mutex()\n     {\n+      // XXX EAGAIN, ENOMEM, EPERM, EBUSY(may), EINVAL(may)\n #if defined __GTHREAD_MUTEX_INIT\n       native_handle_type __tmp = __GTHREAD_MUTEX_INIT;\n       _M_mutex = __tmp;\n #else\n       __GTHREAD_MUTEX_INIT_FUNCTION(&_M_mutex);\n #endif\n-\n-      // EAGAIN, ENOMEM, EPERM, EBUSY(may), EINVAL(may)\n     }\n \n     void\n@@ -82,23 +81,15 @@ namespace std\n     bool\n     try_lock()\n     {\n-      int __e = __gthread_mutex_trylock(&_M_mutex);\n-\n-      // EINVAL, EAGAIN, EBUSY\n-     if (__e)\n-       __throw_system_error(__e);\n-     else\n-       return true;\n+     // XXX EINVAL, EAGAIN, EBUSY\n+     return !__gthread_mutex_trylock(&_M_mutex);\n     }\n \n     void\n     unlock()\n     {\n-      int __e = __gthread_mutex_unlock(&_M_mutex);\n-\n-      // EINVAL, EAGAIN, EPERM\n-     if (__e)\n-       __throw_system_error(__e);\n+      // XXX EINVAL, EAGAIN, EPERM\n+     __gthread_mutex_unlock(&_M_mutex);\n     }\n \n     native_handle_type\n@@ -120,14 +111,13 @@ namespace std\n \n     recursive_mutex()\n     {\n+      // XXX EAGAIN, ENOMEM, EPERM, EBUSY(may), EINVAL(may)\n #if defined __GTHREAD_RECURSIVE_MUTEX_INIT\n       native_handle_type __tmp = __GTHREAD_RECURSIVE_MUTEX_INIT;\n       _M_mutex = __tmp;\n #else\n       __GTHREAD_RECURSIVE_MUTEX_INIT_FUNCTION(&_M_mutex);\n #endif\n-\n-      // EAGAIN, ENOMEM, EPERM, EBUSY(may), EINVAL(may)\n     }\n \n \n@@ -144,23 +134,15 @@ namespace std\n     bool\n     try_lock()\n     {\n-      int __e = __gthread_recursive_mutex_trylock(&_M_mutex);\n-\n-      // EINVAL, EAGAIN, EBUSY\n-     if (__e)\n-       __throw_system_error(__e);\n-     else\n-       return true;\n+      // XXX EINVAL, EAGAIN, EBUSY\n+     return !__gthread_recursive_mutex_trylock(&_M_mutex);\n     }\n \n     void\n     unlock()\n     {\n-      int __e = __gthread_recursive_mutex_unlock(&_M_mutex);\n-\n-      // EINVAL, EAGAIN, EBUSY\n-     if (__e)\n-       __throw_system_error(__e);\n+      // XXX EINVAL, EAGAIN, EBUSY\n+     __gthread_recursive_mutex_unlock(&_M_mutex);\n     }\n \n     native_handle_type"}, {"sha": "3ed9b6ebecc678ffe9d0ac6681e687bb877a258a", "filename": "libstdc++-v3/testsuite/30_threads/mutex/cons/1.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fcons%2F1.cc?ref=22ac021be44b1e5dc781bcc24339f8c8e189d8e5", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=gnu++0x\" }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* } }\n+// { dg-options \"-pthread -std=gnu++0x\" }\n \n // Copyright (C) 2008 Free Software Foundation, Inc.\n //"}, {"sha": "f365d1167c1c5b7e14ed3258b19e42d1005d17ef", "filename": "libstdc++-v3/testsuite/30_threads/mutex/cons/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fcons%2Fassign_neg.cc?ref=22ac021be44b1e5dc781bcc24339f8c8e189d8e5", "patch": "@@ -39,4 +39,4 @@ void test01()\n   m1 = m2;\n }\n // { dg-error \"within this context\" \"\" { target *-*-* } 39 } \n-// { dg-error \"is private\" \"\" { target *-*-* } 111 } \n+// { dg-error \"is private\" \"\" { target *-*-* } 102 } "}, {"sha": "d0a91025b54d9db177f73486608c039cc1021891", "filename": "libstdc++-v3/testsuite/30_threads/mutex/cons/copy_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fcons%2Fcopy_neg.cc?ref=22ac021be44b1e5dc781bcc24339f8c8e189d8e5", "patch": "@@ -38,4 +38,4 @@ void test01()\n   mutex_type m2(m1);\n }\n // { dg-error \"within this context\" \"\" { target *-*-* } 38 } \n-// { dg-error \"is private\" \"\" { target *-*-* } 110 } \n+// { dg-error \"is private\" \"\" { target *-*-* } 101 } "}, {"sha": "3fe33b2ca34097837ccf281828d946dffcc14004", "filename": "libstdc++-v3/testsuite/30_threads/mutex/dest/destructor_locked.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fdest%2Fdestructor_locked.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fdest%2Fdestructor_locked.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fdest%2Fdestructor_locked.cc?ref=22ac021be44b1e5dc781bcc24339f8c8e189d8e5", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=gnu++0x\" }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* } }\n+// { dg-options \"-pthread -std=gnu++0x\" }\n \n // Copyright (C) 2008 Free Software Foundation, Inc.\n //"}, {"sha": "c63c606ebc06c826d5d594fc4250eb754499431f", "filename": "libstdc++-v3/testsuite/30_threads/mutex/lock/1.cc", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Flock%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Flock%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Flock%2F1.cc?ref=22ac021be44b1e5dc781bcc24339f8c8e189d8e5", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=gnu++0x\" }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* } }\n+// { dg-options \"-pthread -std=gnu++0x\" }\n \n // Copyright (C) 2008 Free Software Foundation, Inc.\n //\n@@ -41,11 +42,11 @@ int main()\n       mutex_type m;\n       m.lock();\n \n-      // Lock already locked mutex, should be ok.\n-      // XXX\n+      // Lock already locked mutex.\n       try\n \t{\n-\t  m.lock();\n+\t  // XXX Will block.\n+\t  // m.lock();\n \t}\n       catch (const std::system_error& e)\n \t{"}, {"sha": "d4cd9f7a2e428c6dffe31ce7cf903aef8167e0c6", "filename": "libstdc++-v3/testsuite/30_threads/mutex/native_handle/1.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fnative_handle%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fnative_handle%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Fnative_handle%2F1.cc?ref=22ac021be44b1e5dc781bcc24339f8c8e189d8e5", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=gnu++0x\" }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* } }\n+// { dg-options \"-pthread -std=gnu++0x\" }\n \n // Copyright (C) 2008 Free Software Foundation, Inc.\n //"}, {"sha": "b7380d65717d7cf19ec629ba3c4a85184374c7fe", "filename": "libstdc++-v3/testsuite/30_threads/mutex/try_lock/1.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Ftry_lock%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Ftry_lock%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Ftry_lock%2F1.cc?ref=22ac021be44b1e5dc781bcc24339f8c8e189d8e5", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=gnu++0x\" }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* } }\n+// { dg-options \"-pthread -std=gnu++0x\" }\n \n // Copyright (C) 2008 Free Software Foundation, Inc.\n //"}, {"sha": "7c7845edf5b687666b941c2441ce7b0ad2270a3b", "filename": "libstdc++-v3/testsuite/30_threads/mutex/try_lock/2.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Ftry_lock%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Ftry_lock%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Ftry_lock%2F2.cc?ref=22ac021be44b1e5dc781bcc24339f8c8e189d8e5", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=gnu++0x\" }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* } }\n+// { dg-options \"-pthread -std=gnu++0x\" }\n \n // Copyright (C) 2008 Free Software Foundation, Inc.\n //\n@@ -45,7 +46,7 @@ int main()\n       try\n \t{\n \t  b = m.try_lock();\n-\t  VERIFY( b );\n+\t  VERIFY( !b );\n \t}\n       catch (const std::system_error& e)\n \t{"}, {"sha": "4c845fa4592182b3a0bcc258e1b0706b8e2f0d1b", "filename": "libstdc++-v3/testsuite/30_threads/mutex/unlock/1.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Funlock%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Funlock%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fmutex%2Funlock%2F1.cc?ref=22ac021be44b1e5dc781bcc24339f8c8e189d8e5", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=gnu++0x\" }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* } }\n+// { dg-options \"-pthread -std=gnu++0x\" }\n \n // Copyright (C) 2008 Free Software Foundation, Inc.\n //"}, {"sha": "1125ea624001c0d8d056e6aa41128f22cc5daa62", "filename": "libstdc++-v3/testsuite/30_threads/recursive_mutex/cons/1.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fcons%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fcons%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fcons%2F1.cc?ref=22ac021be44b1e5dc781bcc24339f8c8e189d8e5", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=gnu++0x\" }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* } }\n+// { dg-options \"-pthread -std=gnu++0x\" }\n \n // Copyright (C) 2008 Free Software Foundation, Inc.\n //"}, {"sha": "ca3997422870cbf95c2d79dedb04b51fb75178ce", "filename": "libstdc++-v3/testsuite/30_threads/recursive_mutex/cons/assign_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fcons%2Fassign_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fcons%2Fassign_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fcons%2Fassign_neg.cc?ref=22ac021be44b1e5dc781bcc24339f8c8e189d8e5", "patch": "@@ -39,4 +39,4 @@ void test01()\n   m1 = m2;\n }\n // { dg-error \"within this context\" \"\" { target *-*-* } 39 } \n-// { dg-error \"is private\" \"\" { target *-*-* } 173 } \n+// { dg-error \"is private\" \"\" { target *-*-* } 155 } "}, {"sha": "7f530c36e38fd0629e2da02f3b7efc3371156657", "filename": "libstdc++-v3/testsuite/30_threads/recursive_mutex/cons/copy_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fcons%2Fcopy_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fcons%2Fcopy_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fcons%2Fcopy_neg.cc?ref=22ac021be44b1e5dc781bcc24339f8c8e189d8e5", "patch": "@@ -38,4 +38,4 @@ void test01()\n   mutex_type m2(m1);\n }\n // { dg-error \"within this context\" \"\" { target *-*-* } 38 } \n-// { dg-error \"is private\" \"\" { target *-*-* } 172 } \n+// { dg-error \"is private\" \"\" { target *-*-* } 154 } "}, {"sha": "464d1a80035377b68b6808d0352297350cba3b48", "filename": "libstdc++-v3/testsuite/30_threads/recursive_mutex/dest/destructor_locked.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fdest%2Fdestructor_locked.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fdest%2Fdestructor_locked.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fdest%2Fdestructor_locked.cc?ref=22ac021be44b1e5dc781bcc24339f8c8e189d8e5", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=gnu++0x\" }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* } }\n+// { dg-options \"-pthread -std=gnu++0x\" }\n \n // Copyright (C) 2008 Free Software Foundation, Inc.\n //"}, {"sha": "fb3be90deb3ca688c8287f6ae2cc741fc0e0f32d", "filename": "libstdc++-v3/testsuite/30_threads/recursive_mutex/native_handle/1.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fnative_handle%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22ac021be44b1e5dc781bcc24339f8c8e189d8e5/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fnative_handle%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Frecursive_mutex%2Fnative_handle%2F1.cc?ref=22ac021be44b1e5dc781bcc24339f8c8e189d8e5", "patch": "@@ -1,4 +1,5 @@\n-// { dg-options \"-std=gnu++0x\" }\n+// { dg-do run { target *-*-freebsd* *-*-netbsd* *-*-linux* *-*-solaris* *-*-cygwin *-*-darwin* alpha*-*-osf* } }\n+// { dg-options \"-pthread -std=gnu++0x\" }\n \n // Copyright (C) 2008 Free Software Foundation, Inc.\n //"}]}