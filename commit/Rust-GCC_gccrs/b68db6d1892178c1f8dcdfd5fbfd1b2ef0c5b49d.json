{"sha": "b68db6d1892178c1f8dcdfd5fbfd1b2ef0c5b49d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY4ZGI2ZDE4OTIxNzhjMWY4ZGNkZmQ1ZmJmZDFiMmVmMGM1YjQ5ZA==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2015-08-20T14:22:35Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2015-08-20T14:22:35Z"}, "message": "avr.c (avr_insert_attributes): In diagnostic essage: Multiply argument avr_n_flash by 64 to match unit of \"KiB\".\n\n\t* config/avr/avr.c (avr_insert_attributes): In diagnostic essage:\n\tMultiply argument avr_n_flash by 64 to match unit of \"KiB\".\n\t(avr_pgm_check_var_decl): Same.\n\nFrom-SVN: r227035", "tree": {"sha": "0ab7972ecba5bc5b24cc869f04db52ad83525056", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ab7972ecba5bc5b24cc869f04db52ad83525056"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b68db6d1892178c1f8dcdfd5fbfd1b2ef0c5b49d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b68db6d1892178c1f8dcdfd5fbfd1b2ef0c5b49d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b68db6d1892178c1f8dcdfd5fbfd1b2ef0c5b49d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b68db6d1892178c1f8dcdfd5fbfd1b2ef0c5b49d/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50399bb138e173f05ad6677b4cd3975c1d9df984", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50399bb138e173f05ad6677b4cd3975c1d9df984", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50399bb138e173f05ad6677b4cd3975c1d9df984"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "17855584dfbaee7cea375320e3bda7483f701d02", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b68db6d1892178c1f8dcdfd5fbfd1b2ef0c5b49d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b68db6d1892178c1f8dcdfd5fbfd1b2ef0c5b49d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b68db6d1892178c1f8dcdfd5fbfd1b2ef0c5b49d", "patch": "@@ -1,3 +1,9 @@\n+2015-08-20  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\t* config/avr/avr.c (avr_insert_attributes): In diagnostic essage:\n+\tMultiply argument avr_n_flash by 64 to match unit of \"KiB\".\n+\t(avr_pgm_check_var_decl): Same.\n+\n 2015-08-20  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* config/arm/arm-builtins.c (arm_init_simd_builtin_types): Move"}, {"sha": "bec9a8bb788e7646553134ff7b08a8617afa0025", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b68db6d1892178c1f8dcdfd5fbfd1b2ef0c5b49d/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b68db6d1892178c1f8dcdfd5fbfd1b2ef0c5b49d/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=b68db6d1892178c1f8dcdfd5fbfd1b2ef0c5b49d", "patch": "@@ -9255,10 +9255,10 @@ avr_pgm_check_var_decl (tree node)\n         {\n           if (TYPE_P (node))\n             error (\"%qT uses address space %qs beyond flash of %d KiB\",\n-                   node, avr_addrspace[as].name, avr_n_flash);\n+                   node, avr_addrspace[as].name, 64 * avr_n_flash);\n           else\n             error (\"%s %q+D uses address space %qs beyond flash of %d KiB\",\n-                   reason, node, avr_addrspace[as].name, avr_n_flash);\n+                   reason, node, avr_addrspace[as].name, 64 * avr_n_flash);\n         }\n       else\n         {\n@@ -9305,7 +9305,7 @@ avr_insert_attributes (tree node, tree *attributes)\n       if (avr_addrspace[as].segment >= avr_n_flash)\n         {\n           error (\"variable %q+D located in address space %qs beyond flash \"\n-                 \"of %d KiB\", node, avr_addrspace[as].name, avr_n_flash);\n+                 \"of %d KiB\", node, avr_addrspace[as].name, 64 * avr_n_flash);\n         }\n       else if (!AVR_HAVE_LPM && avr_addrspace[as].pointer_size > 2)\n \t{"}]}