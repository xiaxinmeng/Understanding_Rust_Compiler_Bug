{"sha": "9b91d8f4edce9c408af910863eac6a4ab106a7fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI5MWQ4ZjRlZGNlOWM0MDhhZjkxMDg2M2VhYzZhNGFiMTA2YTdmYw==", "commit": {"author": {"name": "Ulrich Drepper", "email": "drepper@gcc.gnu.org", "date": "1998-06-03T09:14:21Z"}, "committer": {"name": "Ulrich Drepper", "email": "drepper@gcc.gnu.org", "date": "1998-06-03T09:14:21Z"}, "message": "Add _() and N_() macros.\n\nFrom-SVN: r20209", "tree": {"sha": "9d5f0862645f8285d77cf39c5cbda0c7d21e9f79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d5f0862645f8285d77cf39c5cbda0c7d21e9f79"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b91d8f4edce9c408af910863eac6a4ab106a7fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b91d8f4edce9c408af910863eac6a4ab106a7fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b91d8f4edce9c408af910863eac6a4ab106a7fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b91d8f4edce9c408af910863eac6a4ab106a7fc/comments", "author": null, "committer": null, "parents": [{"sha": "fb2aebdb8153a57662475fd9bb5d93827ed15a6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb2aebdb8153a57662475fd9bb5d93827ed15a6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb2aebdb8153a57662475fd9bb5d93827ed15a6f"}], "stats": {"total": 97, "additions": 53, "deletions": 44}, "files": [{"sha": "1ffa74cc7f3ecb349bbd3b439a4d9d213dbc382e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 41, "deletions": 37, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b91d8f4edce9c408af910863eac6a4ab106a7fc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b91d8f4edce9c408af910863eac6a4ab106a7fc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9b91d8f4edce9c408af910863eac6a4ab106a7fc", "patch": "@@ -1,9 +1,13 @@\n+1998-06-03  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* system.h: Add _() and N_() macros in preparation for gettext.\n+\n Wed Jun  3 11:02:24 1998  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n \n \t* c-common.c (check_format_info): Put back check for C9x `hh'\n \tlength modifier.  Warn about %n format writing into const.  Remove\n \tobsolete comment.\n-\t(format_char_info): Fix comments. \n+\t(format_char_info): Fix comments.\n \n \t* configure.in: Set float_format to m68k for all m68k targets that\n \tdo not override LONG_DOUBLE_TYPE_SIZE.\n@@ -63,7 +67,7 @@ Tue Jun  2 13:02:44 1998  Richard Henderson  <rth@cygnus.com>\n \t* vax/netbsd.h (DWARF2_UNWIND_INFO): Must be undef, not defined 0.\n \n Mon Jun  1 03:44:03 1998  Catherine Moore <clm@cygnus.com>\n- \n+\n         * config/sh/sh.h (MAX_OFILE_ALIGNMENT): Define.\n \n         * varasm.c (assemble_variable): Augment alignment warning.\n@@ -123,7 +127,7 @@ Fri May 29 00:57:37 1998  Bruce Korb <korbb@datadesign.com>\n Thu May 28 12:57:05 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* reload.c (find_reloads): Do not force a reloads of match_operators.\n-\t\n+\n Thu May 28 10:22:22 EDT 1998  Andrew MacLeod  <amacleod@cygnus.com>\n \n \t* except.h (remove_handler): Add new prototype.\n@@ -145,7 +149,7 @@ Thu May 28 09:36:39 1998  Michael Meissner  <meissner@cygnus.com>\n \n \t* Makefile.in (c-pragma.o): Add except.h, rtl.h dependencies.\n \t(tree.o): Add except.h dependency.\n-\t\n+\n Wed May 27 22:02:40 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* reload1.c: Revert accidental checkin.\n@@ -155,7 +159,7 @@ Wed May 27 22:02:40 1998  Jeffrey A Law  (law@cygnus.com)\n \n Wed May 27 02:50:00 1998  Catherine Moore (clm@cygnus.com)\n \n-        * config/sparc/lb1spc.asm (.rem and .urem):  Replace \n+        * config/sparc/lb1spc.asm (.rem and .urem):  Replace\n         routines.\n \n Wed May 27 02:48:31 1998  Richard Earnshaw (rearnsha@arm.com)\n@@ -290,7 +294,7 @@ Sat May 23 23:23:35 1998   Robert Lipe  <robertl@dgii.com>\n \n Fri May 22 03:42:05 1998  Richard Earnshaw (rearnsha@arm.com)\n \n-\t* genextract.c (print_path): Handle zero-length path as a special \n+\t* genextract.c (print_path): Handle zero-length path as a special\n \tcase.\n \n Fri May 22 01:38:07 1998  Hans-Peter Nilsson  <hp@axis.se>\n@@ -367,7 +371,7 @@ Wed May 20 23:44:28 EDT 1998  John Wehle  (john@feith.com)\n 1998-05-21  Mark Mitchell  <mmitchell@usa.net>\n \n \t* cplus-dem.c (do_type): Handle volatile qualification.\n-\t\n+\n Thu May 21 12:23:17 1998  Per Bothner  <bothner@cygnus.com>\n \n \t* function.c (init_function_start):  Don't call emit_line_note if\n@@ -591,11 +595,11 @@ Tue May 19 11:08:52 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \t(do_warning): Likewise.  Also add missing argument `pfile' in call\n \tto cpp_pedwarn.\n \t(do_once): Mark parameter `keyword', `unused1' and `unused2' with\n-\tATTRIBUTE_UNUSED. \n+\tATTRIBUTE_UNUSED.\n \t(do_ident): Likewise for `keyword', `buf' and `limit'.\n \t(do_pragma): Likewise.  Also add missing arguments in call to do_once.\n \t(do_sccs): Mark parameter `keyword', `buf' and `limit' with\n-\tATTRIBUTE_UNUSED. \n+\tATTRIBUTE_UNUSED.\n \t(do_if): Likewise for `keyword'.\n \t(do_elif): Likewise.\n \t(eval_if_expression): Likewise for `buf' and `length'.\n@@ -631,15 +635,15 @@ Tue May 19 11:08:52 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \t(fatal): Remove redundant prototype.\n \t(cpp_error, cpp_warning, cpp_pedwarn, cpp_error_with_line,\n \tcpp_pedwarn_with_line, cpp_pedwarn_with_file_and_line,\n-\tcpp_error_from_errno, cpp_perror_with_name, cpp_pfatal_with_name, \n+\tcpp_error_from_errno, cpp_perror_with_name, cpp_pfatal_with_name,\n \tcpp_fatal, cpp_message, cpp_pfatal_with_name,\n \tcpp_file_line_for_message, cpp_print_containing_files): Add\n \targuments to prototypes.\n \t(scan_decls, cpp_finish): Add prototypes.\n \n \t* cppmain.c: Include gansidecl.h.\n \t(main): Remove unused variable `i'.\n-\t\n+\n \t* dbxout.c: Include toplev.h.\n \n \t* demangle.h (do_tlink, collect_execute, collect_exit,\n@@ -722,7 +726,7 @@ Tue May 19 11:08:52 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \t* scan-decls.c: Include gansidecl.h.\n \n \t* tree.h (using_eh_for_cleanups, supports_one_only): Add prototype.\n-\t\n+\n Mon May 18 22:37:33 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* function.c (identify_blocks): Fix thinko when setting the\n@@ -731,10 +735,10 @@ Mon May 18 22:37:33 1998  Jeffrey A Law  (law@cygnus.com)\n Mon May 18 15:30:42 1998  Nick Clifton  <nickc@cygnus.com>\n \n \t* config/v850/lib1funcs.asm: Add .text pseudo op to start of\n-\t___udivsi3. \n+\t___udivsi3.\n \n \t* config/v850/lib1funcs.asm: Fix .size pseudo ops to use three\n-\tunderscores for the prefixes to the names of the maths functions. \n+\tunderscores for the prefixes to the names of the maths functions.\n \n \t* dbxout.c (dbxout_parms): Revert to using DECL_ARG_TYPE.  Add\n \tcomment explaining why.\n@@ -922,11 +926,11 @@ Thu May 14 16:30:47 EDT 1998  Andrew MacLeod  <amacleod@cygnus.com>\n \t* except.h: Various prototypes and structures for NEW_EH_MODEL\n \t* function.h (struct function): Add a struct eh_stack for the catch\n \tclause stack.\n-\t* except.c (gen_exception_label): New function to generate an \n+\t* except.c (gen_exception_label): New function to generate an\n \texception label.\n \t(push_eh_entry): Use gen_exception_label() and init 'label_used' field.\n \t(push_entry): New function to push an existing entry onto a stack.\n-\t(receive_exception_label): New function to emit the code required \n+\t(receive_exception_label): New function to emit the code required\n \tat the start of all catch blocks.\n \t(struct func_eh_entry): New structure for maintaining handlers\n \tassociated with EH regions.\n@@ -973,7 +977,7 @@ Thu May 14 16:30:47 EDT 1998  Andrew MacLeod  <amacleod@cygnus.com>\n \t(save_for_inline_copying): Make new copies of all the handlers.\n \t(expand_inline_function): Make new copies of all the handlers.\n \t* libgcc2.c: Remove local struct decls, and include eh-common.h.\n-\t(find_exception_handler): With NEW_EH_MODEL the first matching \n+\t(find_exception_handler): With NEW_EH_MODEL the first matching\n \tregion we find is the right one. Add eh_info as a new parameter.\n \t(__throw): Pass eh_info to find_exception_handler. Set handler\n \tand pass use different regs  under NEW_EH_MODEL.\n@@ -1047,7 +1051,7 @@ Wed May 13 15:28:59 1998  Michael Meissner  <meissner@cygnus.com>\n \t* rtl.def (RANGE_LIVE): New node to hold live information while we\n \trecalculate the basic blocks.\n \t(RANGE_REG, RANGE_INFO): New rtl types for live range splitting.\n-        (RANGE_VAR): New node, to hold information saved in symbol node for New \n+        (RANGE_VAR): New node, to hold information saved in symbol node for New\n         communicating live range information to the debug output functions.\n \t* rtl.h (rtunion_def): Add rttree and rtbit fields.\n \t(XBITMAP, XTREE): New accessor macros.\n@@ -1180,7 +1184,7 @@ Wed May 13 15:43:44 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \t`i' from int to size_t.\n \t(zero_fn): Mark parameter `exp' with ATTRIBUTE_UNUSED.\n \t(one_fn): Likewise.\n-\t\n+\n \t* genextract.c (main): When generating insn-extract.c, mark\n \tvariable `junk' with ATTRIBUTE_UNUSED.\n \n@@ -1193,7 +1197,7 @@ Wed May 13 15:43:44 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \t`find_exception_handler' in macro DWARF2_UNWIND_INFO.\n \n \t* objc/Make-lang.in (objc-act.o): Depend on toplev.h.\n-\t\n+\n \t* objc/objc-act.c: Include toplev.h.\n \t(lang_print_xnode): Mark parameters `file', `node' and `indent'\n \twith ATTRIBUTE_UNUSED.\n@@ -1233,7 +1237,7 @@ Wed May 13 12:54:19 1998  Michael Meissner  <meissner@cygnus.com>\n \tdoing various cleanup operations after finishing compilation\n \tof a function.\n \n-\t* flow.c (dump_flow_info): Also print number of sets and \n+\t* flow.c (dump_flow_info): Also print number of sets and\n \twhether or not the pseudo is a user variable.\n \n \t* flow.c (reg_n_max): New global variable.\n@@ -1270,7 +1274,7 @@ Tue May 12 22:21:07 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n Tue May 12 14:04:49 1998  Jeffrey A Law  (law@cygnus.com)\n \n-\t* pa.h (DBX_CONTIN_LENGTH): Reduce to 3000 bytes. \n+\t* pa.h (DBX_CONTIN_LENGTH): Reduce to 3000 bytes.\n \n Tue May 12 15:16:02 1998  Michael Meissner  <meissner@cygnus.com>\n \n@@ -1311,7 +1315,7 @@ Tue May 12 10:21:36 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n Tue May 12 00:47:33 1998  John Wehle  (john@feith.com)\n \n-\t* varasm.c (assemble_variable): Compute the alignment of the data \n+\t* varasm.c (assemble_variable): Compute the alignment of the data\n \tearlier so that both initialized and uninitialized variables are\n \teffected by DATA_ALIGNMENT.\n \t* tm.texi (DATA_ALIGNMENT): Updated appropriately.\n@@ -1343,7 +1347,7 @@ Mon May 11 08:24:18 1998  Richard Henderson <rth@cygnus.com>\n \n \t* alpha.h (PRINT_OPERAND_PUNCT_VALID_P): Add '`'.\n \t* alpha.c (print_operand): Handle it.\n-\t* alpha.md (fix_truncdfsi2, fix_truncsfsi2): New patterns and \n+\t* alpha.md (fix_truncdfsi2, fix_truncsfsi2): New patterns and\n \trelated define_splits.  Also add peepholes for SImode reload\n \tplus sign_extend lossage.\n \n@@ -1383,7 +1387,7 @@ Sat May  9 02:02:15 1998  Richard Henderson  <rth@cygnus.com>\n \t* loop.c (get_condition): Don't combine when either compare is MODE_CC.\n \t* alpha.c (alpha_emit_conditional_branch): New function.  Taken from\n \tthe body of beq; additionally set the mode of the branch to CCmode for\n-\tFP compares and not fast_math.  \n+\tFP compares and not fast_math.\n \t(alpha_emit_conditional_move): Always use a compare insn for FP\n \twhen not fast_math, as well as setting CCmode on the cmov.\n \t* alpha.md (beq, bne, blt, et al): Call alpha_emit_conditional_branch.\n@@ -1450,7 +1454,7 @@ Fri May  8 18:23:08 1998  Michael Meissner  <meissner@cygnus.com>\n \t(m32r_expand_prologue): Expand prologue as a series of INSNs.\n \t(m32r_print_operand): Add support for PRE_{INC,DEC}, POST_INC.\n \t(m32r_print_operand_address): Ditto.\n-\t\n+\n Fri May  8 14:13:21 1998  H.J. Lu  (hjl@gnu.org)\n \n \t* reload1.c (emit_reload_insns): When performing expensive\n@@ -1497,11 +1501,11 @@ Thu May  7 17:38:03 1998  Michael Meissner  <meissner@cygnus.com>\n Thu May  7 14:26:05 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* aclocal.m4 (GCC_FUNC_VFPRINTF_DOPRNT): New macro.\n-\t\n+\n \t* configure.in: Add a call to GCC_FUNC_VFPRINTF_DOPRNT.\n \t(AC_CHECK_HEADERS): Remove unused check for varargs.h,sys/varargs.h.\n \t(AC_CHECK_FUNCS): Remove unused check for vprintf.\n-\t\n+\n \t* Makefile.in: Add support for linking in vfprintf.c and doprint.c.\n \t(cccp.o): Depend on gansidecl.h.\n \t(cexp.o): Likewise.\n@@ -1534,7 +1538,7 @@ Thu May  7 10:18:41 1998  Jeffrey A Law  (law@cygnus.com)\n Thu May  7 10:55:59 1998  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n \n \t* config/m68k/m68k.md (adddi3, subdi3): Properly negate the DImode\n-\tconstant. \n+\tconstant.\n \n Wed May  6 22:32:37 CDT 1998 Robert Lipe  <robertl@dgii.com>\n \n@@ -1563,7 +1567,7 @@ Wed May  6 15:51:39 1998  Jim Wilson  <wilson@cygnus.com>\n \thash.o, profile.o, real.o, reg-stack.o, regclass.o, reload.o,\n \treload1.o, stmt.o, stor-layout.o, tlink.o, tree.o, varasm.o): Add\n \ttoplev.h dependency.\n-\t\n+\n \t* mips/mips.c (save_restore_insns): Change FRAME_POINTER_REGNUM to\n \tHARD_FRAME_POINTER_REGNUM.\n \n@@ -1616,11 +1620,11 @@ Wed May  6 15:37:27 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \t* scan.c: Likewise.\n \t* stmt.c: Likewise.\n \t* tlink.c: Likewise.\n-\t* toplev.c: Likewise.\t\n+\t* toplev.c: Likewise.\n \n Wed May  6 14:44:14 1998  Gavin Koch  <gavin@cygnus.com>\n \n-\t* config/mips/r3900.h (SUBTARGET_ASM_DEBUGGING_SPEC) : \n+\t* config/mips/r3900.h (SUBTARGET_ASM_DEBUGGING_SPEC) :\n \tReplace -gdwarf-2 with -g0.\n \n Wed May  6 11:43:18 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n@@ -1656,11 +1660,11 @@ Wed May  6 06:35:38 1998  Robert Lipe  <robertl@dgii.com>\n \n \t* toplev.h: New file.   Protypes for functions in toplev.c.\n \t* tree.h, rtl.h: Deleted protos for functions in toplev.c.\n-\t* c-common.c, c-convert.c, c-decl.c, c-iterate.c, c-lex.c, \n-\tc-parse.in, c-parse.y, c-pragma.c, c-typeck.c, calls.c, \n-\tconvert.c, dwarf2out.c, except.c, expr.c, final.c, fold-const.c, \n-\tfunction.c, hash.c, profile.c, real.c, reg-stack.c, regclass.c, \n-\treload.c, reload1.c, stmt.c, stor-layout.c, tlink.c, tree.c, \n+\t* c-common.c, c-convert.c, c-decl.c, c-iterate.c, c-lex.c,\n+\tc-parse.in, c-parse.y, c-pragma.c, c-typeck.c, calls.c,\n+\tconvert.c, dwarf2out.c, except.c, expr.c, final.c, fold-const.c,\n+\tfunction.c, hash.c, profile.c, real.c, reg-stack.c, regclass.c,\n+\treload.c, reload1.c, stmt.c, stor-layout.c, tlink.c, tree.c,\n \tvarasm.c: include it.\n \n Wed May  6 01:09:01 1998  Jeffrey A Law  (law@cygnus.com)"}, {"sha": "402fa9f6d8e1e7e149003cbaf0820a55e5aa086e", "filename": "gcc/system.h", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b91d8f4edce9c408af910863eac6a4ab106a7fc/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b91d8f4edce9c408af910863eac6a4ab106a7fc/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=9b91d8f4edce9c408af910863eac6a4ab106a7fc", "patch": "@@ -11,7 +11,7 @@\n #include <ctype.h>\n \n /* Jim Meyering writes:\n- \n+\n    \"... Some ctype macros are valid only for character codes that\n    isascii says are ASCII (SGI's IRIX-4.0.5 is one such system --when\n    using /bin/cc or gcc but without giving an ansi option).  So, all\n@@ -20,21 +20,21 @@\n    macros don't need to be guarded with references to isascii. ...\n    Defining isascii to 1 should let any compiler worth its salt\n    eliminate the && through constant folding.\"\n- \n+\n    Bruno Haible adds:\n- \n+\n    \"... Furthermore, isupper(c) etc. have an undefined result if c is\n    outside the range -1 <= c <= 255. One is tempted to write isupper(c)\n    with c being of type `char', but this is wrong if c is an 8-bit\n    character >= 128 which gets sign-extended to a negative value.\n    The macro ISUPPER protects against this as well.\"  */\n- \n+\n #if defined (STDC_HEADERS) || (!defined (isascii) && !defined (HAVE_ISASCII))\n # define IN_CTYPE_DOMAIN(c) 1\n #else\n # define IN_CTYPE_DOMAIN(c) isascii(c)\n #endif\n- \n+\n #ifdef isblank\n # define ISBLANK(c) (IN_CTYPE_DOMAIN (c) && isblank (c))\n #else\n@@ -45,7 +45,7 @@\n #else\n # define ISGRAPH(c) (IN_CTYPE_DOMAIN (c) && isprint (c) && !isspace (c))\n #endif\n- \n+\n #define ISPRINT(c) (IN_CTYPE_DOMAIN (c) && isprint (c))\n #define ISALNUM(c) (IN_CTYPE_DOMAIN (c) && isalnum (c))\n #define ISALPHA(c) (IN_CTYPE_DOMAIN (c) && isalpha (c))\n@@ -56,7 +56,7 @@\n #define ISUPPER(c) (IN_CTYPE_DOMAIN (c) && isupper (c))\n #define ISXDIGIT(c) (IN_CTYPE_DOMAIN (c) && isxdigit (c))\n #define ISDIGIT_LOCALE(c) (IN_CTYPE_DOMAIN (c) && isdigit (c))\n- \n+\n /* ISDIGIT differs from ISDIGIT_LOCALE, as follows:\n    - Its arg may be any int or unsigned int; it need not be an unsigned char.\n    - It's guaranteed to evaluate its argument exactly once.\n@@ -267,4 +267,9 @@ void abort ();\n # endif\n #endif /* ! STRINGIFY */\n \n+\n+/* These macros are here in preparation for the use of gettext in egcs.  */\n+#define _(String) String\n+#define N_(String) String\n+\n #endif /* __GCC_SYSTEM_H__ */"}]}