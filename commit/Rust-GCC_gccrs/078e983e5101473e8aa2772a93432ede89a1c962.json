{"sha": "078e983e5101473e8aa2772a93432ede89a1c962", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc4ZTk4M2U1MTAxNDczZThhYTI3NzJhOTM0MzJlZGU4OWExYzk2Mg==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@issan.informatik.uni-dortmund.de", "date": "1997-09-22T17:46:38Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-09-22T17:46:38Z"}, "message": "m68k.c (output_function_prologue): Add dwarf2 support.\n\n        * m68k.c (output_function_prologue): Add dwarf2 support.\n\n        * m68k.h (INCOMING_RETURN_ADDR_RTX, DWARF_FRAME_REGNUM,\n        INCOMING_FRAME_SP_OFFSET): New definitions.\n\nFrom-SVN: r15631", "tree": {"sha": "f3dfb912d786988b84272ecf03e8c80e859c1486", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3dfb912d786988b84272ecf03e8c80e859c1486"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/078e983e5101473e8aa2772a93432ede89a1c962", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/078e983e5101473e8aa2772a93432ede89a1c962", "html_url": "https://github.com/Rust-GCC/gccrs/commit/078e983e5101473e8aa2772a93432ede89a1c962", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/078e983e5101473e8aa2772a93432ede89a1c962/comments", "author": null, "committer": null, "parents": [{"sha": "9524f769a795d7ad5b9a1d5266d372ef3f466f4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9524f769a795d7ad5b9a1d5266d372ef3f466f4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9524f769a795d7ad5b9a1d5266d372ef3f466f4c"}], "stats": {"total": 103, "additions": 98, "deletions": 5}, "files": [{"sha": "3ba7d13f2277c5f5e83e4148c4eb4779246356ca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/078e983e5101473e8aa2772a93432ede89a1c962/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/078e983e5101473e8aa2772a93432ede89a1c962/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=078e983e5101473e8aa2772a93432ede89a1c962", "patch": "@@ -1,3 +1,10 @@\n+1997-09-21  Andreas Schwab  <schwab@issan.informatik.uni-dortmund.de>\n+\n+\t* m68k.c (output_function_prologue): Add dwarf2 support.\n+\n+\t* m68k.h (INCOMING_RETURN_ADDR_RTX, DWARF_FRAME_REGNUM,\n+\tINCOMING_FRAME_SP_OFFSET): New definitions.\n+ \n Mon Sep 22 11:36:42 1997  David S. Miller  <davem@tanya.rutgers.edu>\n \n \t* combine.c (try_combine): Use NULL_RTX instead of '0' where"}, {"sha": "e8e08f9cb821faeb4edebdf58c1cd2266926c0f0", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 79, "deletions": 5, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/078e983e5101473e8aa2772a93432ede89a1c962/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/078e983e5101473e8aa2772a93432ede89a1c962/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=078e983e5101473e8aa2772a93432ede89a1c962", "patch": "@@ -164,6 +164,7 @@ output_function_prologue (stream, size)\n   int num_saved_regs = 0;\n   extern char call_used_regs[];\n   int fsize = (size + 3) & -4;\n+  int cfa_offset = INCOMING_FRAME_SP_OFFSET, cfa_store_offset = cfa_offset;\n   \n \n   if (frame_pointer_needed)\n@@ -212,6 +213,15 @@ output_function_prologue (stream, size)\n \t\t       reg_names[FRAME_POINTER_REGNUM], -fsize);\n #endif\n \t}\n+      if (dwarf2out_do_frame ())\n+\t{\n+\t  char *l = (char *) dwarf2out_cfi_label ();\n+\t  cfa_store_offset += 4;\n+\t  cfa_offset = cfa_store_offset;\n+\t  dwarf2out_def_cfa (l, FRAME_POINTER_REGNUM, cfa_offset);\n+\t  dwarf2out_reg_save (l, FRAME_POINTER_REGNUM, -cfa_store_offset);\n+\t  cfa_store_offset += fsize;\n+\t}\n     }\n   else if (fsize)\n     {\n@@ -282,6 +292,12 @@ output_function_prologue (stream, size)\n \t  asm_fprintf (stream, \"\\taddl %0I%d,%Rsp\\n\", - (fsize + 4));\n #endif\n \t}\n+      if (dwarf2out_do_frame ())\n+\t{\n+\t  cfa_store_offset += fsize;\n+\t  cfa_offset = cfa_store_offset;\n+\t  dwarf2out_def_cfa (\"\", STACK_POINTER_REGNUM, cfa_offset);\n+\t}\n     }\n #ifdef SUPPORT_SUN_FPA\n   for (regno = 24; regno < 56; regno++)\n@@ -294,22 +310,52 @@ output_function_prologue (stream, size)\n \tasm_fprintf (stream, \"\\tfpmoved %s,%Rsp@-\\n\",\n \t\t     reg_names[regno]);\n #endif\n+\tif (dwarf2out_do_frame ())\n+\t  {\n+\t    char *l = (char *) dwarf2out_cfi_label ();\n+\t    cfa_store_offset += 8;\n+\t    if (! frame_pointer_needed)\n+\t      {\n+\t\tcfa_offset = cfa_store_offset;\n+\t\tdwarf2out_def_cfa (l, STACK_POINTER_REGNUM, cfa_offset);\n+\t      }\n+\t    dwarf2out_reg_save (l, regno, -cfa_store_offset);\n+\t  }\n       }\n #endif\n   if (TARGET_68881)\n     {\n       for (regno = 16; regno < 24; regno++)\n \tif (regs_ever_live[regno] && ! call_used_regs[regno])\n-\t   mask |= 1 << (regno - 16);\n+\t  {\n+\t    mask |= 1 << (regno - 16);\n+\t    num_saved_regs++;\n+\t  }\n       if ((mask & 0xff) != 0)\n \t{\n #ifdef MOTOROLA\n \t  asm_fprintf (stream, \"\\tfmovm %0I0x%x,-(%Rsp)\\n\", mask & 0xff);\n #else\n \t  asm_fprintf (stream, \"\\tfmovem %0I0x%x,%Rsp@-\\n\", mask & 0xff);\n #endif\n+\t  if (dwarf2out_do_frame ())\n+\t    {\n+\t      char *l = (char *) dwarf2out_cfi_label ();\n+\t      int n_regs;\n+\t      cfa_store_offset += num_saved_regs * 12;\n+\t      if (! frame_pointer_needed)\n+\t\t{\n+\t\t  cfa_offset = cfa_store_offset;\n+\t\t  dwarf2out_def_cfa (l, STACK_POINTER_REGNUM, cfa_offset);\n+\t\t}\n+\t      for (regno = 16, n_regs = 0; regno < 24; regno++)\n+\t\tif (mask & (1 << (regno - 16)))\n+\t\t  dwarf2out_reg_save (l, regno,\n+\t\t\t\t      -cfa_store_offset + n_regs++ * 12);\n+\t    }\n \t}\n       mask = 0;\n+      num_saved_regs = 0;\n     }\n   for (regno = 0; regno < 16; regno++)\n     if (regs_ever_live[regno] && ! call_used_regs[regno])\n@@ -347,13 +393,26 @@ output_function_prologue (stream, size)\n       /* Undo the work from above. */\n       for (i = 0; i< 16; i++)\n         if (mask & (1 << i))\n-          asm_fprintf (stream,\n+\t  {\n+\t    asm_fprintf (stream,\n #ifdef MOTOROLA\n-\t\t       \"\\t%Omove.l %s,-(%Rsp)\\n\",\n+\t\t\t \"\\t%Omove.l %s,-(%Rsp)\\n\",\n #else\n-\t\t       \"\\tmovel %s,%Rsp@-\\n\",\n+\t\t\t \"\\tmovel %s,%Rsp@-\\n\",\n #endif\n-\t\t       reg_names[15 - i]);\n+\t\t\t reg_names[15 - i]);\n+\t    if (dwarf2out_do_frame ())\n+\t      {\n+\t\tchar *l = (char *) dwarf2out_cfi_label ();\n+\t\tcfa_store_offset += 4;\n+ \t\tif (! frame_pointer_needed)\n+ \t\t  {\n+ \t\t    cfa_offset = cfa_store_offset;\n+ \t\t    dwarf2out_def_cfa (l, STACK_POINTER_REGNUM, cfa_offset);\n+ \t\t  }\n+ \t\tdwarf2out_reg_save (l, 15 - i, -cfa_store_offset);\n+\t      }\n+\t  }\n     }\n   else if (mask)\n     {\n@@ -392,6 +451,21 @@ output_function_prologue (stream, size)\n \t  asm_fprintf (stream, \"\\tmoveml %0I0x%x,%Rsp@-\\n\", mask);\n #endif\n \t}\n+      if (dwarf2out_do_frame ())\n+\t{\n+\t  char *l = (char *) dwarf2out_cfi_label ();\n+\t  int n_regs;\n+\t  cfa_store_offset += num_saved_regs * 4;\n+\t  if (! frame_pointer_needed)\n+\t    {\n+\t      cfa_offset = cfa_store_offset;\n+\t      dwarf2out_def_cfa (l, STACK_POINTER_REGNUM, cfa_offset);\n+\t    }\n+\t  for (regno = 0, n_regs = 0; regno < 16; regno++)\n+\t    if (mask & (1 << (15 - regno)))\n+\t      dwarf2out_reg_save (l, regno,\n+\t\t\t\t  -cfa_store_offset + n_regs++ * 4);\n+\t}\n     }\n   if (flag_pic && current_function_uses_pic_offset_table)\n     {"}, {"sha": "6004aaaa8030f62508e7eb70c0b8323e1c4c83ea", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/078e983e5101473e8aa2772a93432ede89a1c962/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/078e983e5101473e8aa2772a93432ede89a1c962/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=078e983e5101473e8aa2772a93432ede89a1c962", "patch": "@@ -1792,6 +1792,18 @@ __transfer_from_trampoline ()\t\t\t\t\t\\\n \n #define DBX_REGISTER_NUMBER(REGNO) ((REGNO) < 16 ? (REGNO) : (REGNO) + 2)\n \n+/* Before the prologue, RA is at 0(%sp).  */\n+#define INCOMING_RETURN_ADDR_RTX \\\n+  gen_rtx (MEM, VOIDmode, gen_rtx (REG, VOIDmode, STACK_POINTER_REGNUM))\n+\n+/* We must not use the DBX register numbers for the DWARF 2 CFA column\n+   numbers because that maps to numbers beyond FIRST_PSEUDO_REGISTER.\n+   Instead use the identity mapping.  */\n+#define DWARF_FRAME_REGNUM(REG) REG\n+\n+/* Before the prologue, the top of the frame is at 4(%sp).  */\n+#define INCOMING_FRAME_SP_OFFSET 4\n+\n /* This is how to output the definition of a user-level label named NAME,\n    such as the label on a static function or variable NAME.  */\n "}]}