{"sha": "c05f751c24182e733cb986b7660ec1223be52428", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA1Zjc1MWMyNDE4MmU3MzNjYjk4NmI3NjYwZWMxMjIzYmU1MjQyOA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-13T13:31:27Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-13T13:31:27Z"}, "message": "(constant_expression_warning, overflow_warning): Handle REAL_CST and\nCOMPLEX_CST.\n\nFrom-SVN: r6769", "tree": {"sha": "a926aec850cd012df0b2f7d28cf873eacb06f676", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a926aec850cd012df0b2f7d28cf873eacb06f676"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c05f751c24182e733cb986b7660ec1223be52428", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c05f751c24182e733cb986b7660ec1223be52428", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c05f751c24182e733cb986b7660ec1223be52428", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c05f751c24182e733cb986b7660ec1223be52428/comments", "author": null, "committer": null, "parents": [{"sha": "649ff3b44f1adaca0ee5c2a51f568f334cb476eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/649ff3b44f1adaca0ee5c2a51f568f334cb476eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/649ff3b44f1adaca0ee5c2a51f568f334cb476eb"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "ecdeb8f92773a4b5649abe95a8acd96d5406f415", "filename": "gcc/c-common.c", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05f751c24182e733cb986b7660ec1223be52428/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05f751c24182e733cb986b7660ec1223be52428/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=c05f751c24182e733cb986b7660ec1223be52428", "patch": "@@ -1078,9 +1078,10 @@ void\n constant_expression_warning (value)\n      tree value;\n {\n-  if (TREE_CODE (value) == INTEGER_CST && TREE_CONSTANT_OVERFLOW (value))\n-    if (pedantic)\n-      pedwarn (\"overflow in constant expression\");\n+  if ((TREE_CODE (value) == INTEGER_CST || TREE_CODE (value) == REAL_CST\n+       || TREE_CODE (value) == COMPLEX_CST)\n+      && TREE_CONSTANT_OVERFLOW (value) && pedantic)\n+    pedwarn (\"overflow in constant expression\");\n }\n \n /* Print a warning if an expression had overflow in folding.\n@@ -1094,11 +1095,22 @@ void\n overflow_warning (value)\n      tree value;\n {\n-  if (TREE_CODE (value) == INTEGER_CST && TREE_OVERFLOW (value))\n+  if ((TREE_CODE (value) == INTEGER_CST\n+       || (TREE_CODE (value) == COMPLEX_CST\n+\t   && TREE_CODE (TREE_REALPART (value)) == INTEGER_CST))\n+      && TREE_OVERFLOW (value))\n     {\n       TREE_OVERFLOW (value) = 0;\n       warning (\"integer overflow in expression\");\n     }\n+  else if ((TREE_CODE (value) == REAL_CST\n+\t    || (TREE_CODE (value) == COMPLEX_CST\n+\t\t&& TREE_CODE (TREE_REALPART (value)) == REAL_CST))\n+\t   && TREE_OVERFLOW (value))\n+    {\n+      TREE_OVERFLOW (value) = 0;\n+      warning (\"floating-pointer overflow in expression\");\n+    }\n }\n \n /* Print a warning if a large constant is truncated to unsigned,"}]}