{"sha": "6f862f2fa9d2d3bdb8df842ebf67ea8e08bf47f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY4NjJmMmZhOWQyZDNiZGI4ZGY4NDJlYmY2N2VhOGUwOGJmNDdmNQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2001-07-24T18:34:07Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-07-24T18:34:07Z"}, "message": "recog.c (split_all_insns_noflow): New.\n\n\t* recog.c (split_all_insns_noflow): New.\n\t* rtl.h (split_all_insns_noflow): Declare.\n\t* ia64.c (ia64_reorg): Use split_all_insns_noflow.\n\t* m68hc11.c (m68hc11_reorg): Likewise.\n\t* sh.c (machine_dependent_reorg): Likewise.\n\t* toplev.c (rest_of_compilation): Likewise for last split_all_insns\n\tcall.\n\nFrom-SVN: r44312", "tree": {"sha": "dbd1c911e2888cbe05c5a4a364044144567b2dcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dbd1c911e2888cbe05c5a4a364044144567b2dcd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f862f2fa9d2d3bdb8df842ebf67ea8e08bf47f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f862f2fa9d2d3bdb8df842ebf67ea8e08bf47f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f862f2fa9d2d3bdb8df842ebf67ea8e08bf47f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f862f2fa9d2d3bdb8df842ebf67ea8e08bf47f5/comments", "author": null, "committer": null, "parents": [{"sha": "615cd49b9a70766688139f6ea85aad1831df8816", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/615cd49b9a70766688139f6ea85aad1831df8816", "html_url": "https://github.com/Rust-GCC/gccrs/commit/615cd49b9a70766688139f6ea85aad1831df8816"}], "stats": {"total": 43, "additions": 37, "deletions": 6}, "files": [{"sha": "1926e4de1774bf96090ddf37fca71a84cc1b7684", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f862f2fa9d2d3bdb8df842ebf67ea8e08bf47f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f862f2fa9d2d3bdb8df842ebf67ea8e08bf47f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6f862f2fa9d2d3bdb8df842ebf67ea8e08bf47f5", "patch": "@@ -1,3 +1,13 @@\n+Tue Jul 24 20:32:44 CEST 2001  Jan Hubicka  <jh@suse.cz>\n+\n+\t* recog.c (split_all_insns_noflow): New.\n+\t* rtl.h (split_all_insns_noflow): Declare.\n+\t* ia64.c (ia64_reorg): Use split_all_insns_noflow.\n+\t* m68hc11.c (m68hc11_reorg): Likewise.\n+\t* sh.c (machine_dependent_reorg): Likewise.\n+\t* toplev.c (rest_of_compilation): Likewise for last split_all_insns\n+\tcall.\n+\n 2001-07-18  Andrew Haley  <aph@cambridge.redhat.com>\n \n         * config/sh/sh.md (ashlsi3_std splitter): Split only after reload."}, {"sha": "be2c04dfae3dda54d6ce623e25ca2c5bdeca0de1", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f862f2fa9d2d3bdb8df842ebf67ea8e08bf47f5/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f862f2fa9d2d3bdb8df842ebf67ea8e08bf47f5/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=6f862f2fa9d2d3bdb8df842ebf67ea8e08bf47f5", "patch": "@@ -6457,7 +6457,7 @@ ia64_reorg (insns)\n {\n   /* If optimizing, we'll have split before scheduling.  */\n   if (optimize == 0)\n-    split_all_insns (0);\n+    split_all_insns_noflow ();\n \n   /* Make sure the CFG and global_live_at_start are correct\n      for emit_predicate_relation_info.  */"}, {"sha": "119d8ee5e51a4bcca01fbd9b0c1d17b562d555e8", "filename": "gcc/config/m68hc11/m68hc11.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f862f2fa9d2d3bdb8df842ebf67ea8e08bf47f5/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f862f2fa9d2d3bdb8df842ebf67ea8e08bf47f5/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.c?ref=6f862f2fa9d2d3bdb8df842ebf67ea8e08bf47f5", "patch": "@@ -4803,7 +4803,7 @@ m68hc11_reorg (first)\n \n   /* Force a split of all splitable insn.  This is necessary for the\n      Z register replacement mechanism because we end up with basic insns.  */\n-  split_all_insns (0);\n+  split_all_insns_noflow ();\n   split_done = 1;\n \n   z_replacement_completed = 1;\n@@ -4850,7 +4850,7 @@ m68hc11_reorg (first)\n      split after Z register replacement.  This gives more opportunities\n      for peephole (in particular for consecutives xgdx/xgdy).  */\n   if (optimize > 0)\n-    split_all_insns (0);\n+    split_all_insns_noflow ();\n \n   /* Once insns are split after the z_replacement_completed == 2,\n      we must not re-run the life_analysis.  The xgdx/xgdy patterns"}, {"sha": "87b5be9ee9e89a045ab1960eb3d1d283ecc395a0", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f862f2fa9d2d3bdb8df842ebf67ea8e08bf47f5/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f862f2fa9d2d3bdb8df842ebf67ea8e08bf47f5/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=6f862f2fa9d2d3bdb8df842ebf67ea8e08bf47f5", "patch": "@@ -3027,7 +3027,7 @@ machine_dependent_reorg (first)\n      optimizing, they'll have already been split.  Otherwise, make\n      sure we don't split them too late.  */\n   if (! optimize)\n-    split_all_insns (0);\n+    split_all_insns_noflow ();\n \n   /* If relaxing, generate pseudo-ops to associate function calls with\n      the symbols they call.  It does no harm to not generate these"}, {"sha": "c77bc4263bd41b1e1690a00ed229467ff1a44663", "filename": "gcc/recog.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f862f2fa9d2d3bdb8df842ebf67ea8e08bf47f5/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f862f2fa9d2d3bdb8df842ebf67ea8e08bf47f5/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=6f862f2fa9d2d3bdb8df842ebf67ea8e08bf47f5", "patch": "@@ -2777,6 +2777,22 @@ split_all_insns (upd_life)\n \n   sbitmap_free (blocks);\n }\n+\n+/* Same as split_all_insns, but do not expect CFG to be available. \n+   Used by machine depedent reorg passes.  */\n+\n+void\n+split_all_insns_noflow ()\n+{\n+  rtx next, insn;\n+\n+  for (insn = get_insns (); insn; insn = next)\n+    {\n+      next = NEXT_INSN (insn);\n+      split_insn (insn);\n+    }\n+  return;\n+}\n \f\n #ifdef HAVE_peephole2\n struct peep2_insn_data"}, {"sha": "1fbc9da59a3c10f4fa250787029aec6a68e53650", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f862f2fa9d2d3bdb8df842ebf67ea8e08bf47f5/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f862f2fa9d2d3bdb8df842ebf67ea8e08bf47f5/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=6f862f2fa9d2d3bdb8df842ebf67ea8e08bf47f5", "patch": "@@ -1462,6 +1462,7 @@ extern enum reg_class reg_alternate_class PARAMS ((int));\n extern rtx get_first_nonparm_insn\tPARAMS ((void));\n \n extern void split_all_insns\t\tPARAMS ((int));\n+extern void split_all_insns_noflow\tPARAMS ((void));\n \n #define MAX_SAVED_CONST_INT 64\n extern rtx const_int_rtx[MAX_SAVED_CONST_INT * 2 + 1];"}, {"sha": "a7bd5e36daf33fe0eea8a04a90f4535264461a50", "filename": "gcc/toplev.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f862f2fa9d2d3bdb8df842ebf67ea8e08bf47f5/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f862f2fa9d2d3bdb8df842ebf67ea8e08bf47f5/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=6f862f2fa9d2d3bdb8df842ebf67ea8e08bf47f5", "patch": "@@ -3459,7 +3459,9 @@ rest_of_compilation (decl)\n   timevar_push (TV_FLOW2);\n   open_dump_file (DFI_flow2, decl);\n \n-  find_basic_blocks (insns, max_reg_num (), rtl_dump_file);\n+#ifdef ENABLE_CHECKING\n+  verify_flow_info ();\n+#endif\n \n   /* If optimizing, then go ahead and split insns now.  */\n   if (optimize > 0)\n@@ -3473,6 +3475,8 @@ rest_of_compilation (decl)\n      scheduling to operate in the epilogue.  */\n   thread_prologue_and_epilogue_insns (insns);\n \n+  compute_bb_for_insn (get_max_uid ());\n+\n   if (optimize)\n     {\n       cleanup_cfg (CLEANUP_EXPENSIVE | CLEANUP_CROSSJUMP);\n@@ -3624,7 +3628,7 @@ rest_of_compilation (decl)\n \n #if defined (HAVE_ATTR_length) && !defined (STACK_REGS)\n   timevar_push (TV_SHORTEN_BRANCH);\n-  split_all_insns (0);\n+  split_all_insns_noflow ();\n   timevar_pop (TV_SHORTEN_BRANCH);\n #endif\n "}]}