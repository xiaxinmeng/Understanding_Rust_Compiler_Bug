{"sha": "6273c3c2af3a9acdeeea3583bc317046bda55cf7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI3M2MzYzJhZjNhOWFjZGVlZWEzNTgzYmMzMTcwNDZiZGE1NWNmNw==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-09-12T10:05:19Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-09-12T10:05:19Z"}, "message": "re PR fortran/54225 (fortran compiler segfault processing ' print *, A(1,*) ')\n\n2012-09-12  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/54225\n        PR fortran/53306\n        * array.c (match_subscript, gfc_match_array_ref): Fix\n        diagnostic of coarray's '*'.\n\n2012-09-12  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/54225\n        PR fortran/53306\n        * gfortran.dg/coarray_10.f90: Update dg-error.\n        * gfortran.dg/coarray_28.f90: New.\n        * gfortran.dg/array_section_3.f90: New.\n\nFrom-SVN: r191213", "tree": {"sha": "70a3ab6722daa98240e9aa45eec07e2c8ca5f5bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70a3ab6722daa98240e9aa45eec07e2c8ca5f5bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6273c3c2af3a9acdeeea3583bc317046bda55cf7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6273c3c2af3a9acdeeea3583bc317046bda55cf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6273c3c2af3a9acdeeea3583bc317046bda55cf7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6273c3c2af3a9acdeeea3583bc317046bda55cf7/comments", "author": null, "committer": null, "parents": [{"sha": "98aa03f4cbda0caf569a3ceaa218ef2c80d19898", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98aa03f4cbda0caf569a3ceaa218ef2c80d19898", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98aa03f4cbda0caf569a3ceaa218ef2c80d19898"}], "stats": {"total": 89, "additions": 68, "deletions": 21}, "files": [{"sha": "45f1c9fd48d94339290bfd89a92100a837836c02", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6273c3c2af3a9acdeeea3583bc317046bda55cf7/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6273c3c2af3a9acdeeea3583bc317046bda55cf7/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6273c3c2af3a9acdeeea3583bc317046bda55cf7", "patch": "@@ -1,3 +1,10 @@\n+2012-09-12  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54225\n+\tPR fortran/53306\n+\t* array.c (match_subscript, gfc_match_array_ref): Fix\n+\tdiagnostic of coarray's '*'.\n+\n 2012-09-07  Mikael Morin  <mikael@gcc.gnu.org>\n \n \tPR fortran/54208"}, {"sha": "44ec72eb87c58a17210d04ed4943d8cc89962ee7", "filename": "gcc/fortran/array.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6273c3c2af3a9acdeeea3583bc317046bda55cf7/gcc%2Ffortran%2Farray.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6273c3c2af3a9acdeeea3583bc317046bda55cf7/gcc%2Ffortran%2Farray.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farray.c?ref=6273c3c2af3a9acdeeea3583bc317046bda55cf7", "patch": "@@ -91,9 +91,7 @@ match_subscript (gfc_array_ref *ar, int init, bool match_star)\n   else if (!star)\n     m = gfc_match_expr (&ar->start[i]);\n \n-  if (m == MATCH_NO && gfc_match_char ('*') == MATCH_YES)\n-    return MATCH_NO;\n-  else if (m == MATCH_NO)\n+  if (m == MATCH_NO)\n     gfc_error (\"Expected array subscript at %C\");\n   if (m != MATCH_YES)\n     return MATCH_ERROR;\n@@ -224,7 +222,7 @@ gfc_match_array_ref (gfc_array_ref *ar, gfc_array_spec *as, int init,\n \n   for (ar->codimen = 0; ar->codimen + ar->dimen < GFC_MAX_DIMENSIONS; ar->codimen++)\n     {\n-      m = match_subscript (ar, init, ar->codimen == (corank - 1));\n+      m = match_subscript (ar, init, true);\n       if (m == MATCH_ERROR)\n \treturn MATCH_ERROR;\n \n@@ -255,6 +253,13 @@ gfc_match_array_ref (gfc_array_ref *ar, gfc_array_spec *as, int init,\n \t    gfc_error (\"Invalid form of coarray reference at %C\");\n \t  return MATCH_ERROR;\n \t}\n+      else if (ar->dimen_type[ar->codimen + ar->dimen] == DIMEN_STAR)\n+\t{\n+\t  gfc_error (\"Unexpected '*' for codimension %d of %d at %C\",\n+\t\t     ar->codimen + 1, corank);\n+\t  return MATCH_ERROR;\n+\t}\n+\n       if (ar->codimen >= corank)\n \t{\n \t  gfc_error (\"Invalid codimension %d at %C, only %d codimensions exist\","}, {"sha": "a72e8efcdc651a32cf78ab69cc729c61264dc6af", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 22, "deletions": 14, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6273c3c2af3a9acdeeea3583bc317046bda55cf7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6273c3c2af3a9acdeeea3583bc317046bda55cf7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6273c3c2af3a9acdeeea3583bc317046bda55cf7", "patch": "@@ -1,3 +1,11 @@\n+2012-09-12  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54225\n+\tPR fortran/53306\n+\t* gfortran.dg/coarray_10.f90: Update dg-error.\n+\t* gfortran.dg/coarray_28.f90: New.\n+\t* gfortran.dg/array_section_3.f90: New.\n+\n 2012-09-11  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \tgcc/testsuite/\n@@ -6,22 +14,22 @@\n \n 2012-09-11  Marc Glisse  <marc.glisse@inria.fr>\n \n-        * gcc.dg/tree-ssa/forwprop-22.c: New testcase.\n+\t* gcc.dg/tree-ssa/forwprop-22.c: New testcase.\n \n 2012-09-11  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n-           Matthew Gretton-Dann  <matthew.gretton-dann@arm.com>\n-\n-       * gcc.target/arm/neon-vfma-1.c: New testcase.\n-       * gcc.target/arm/neon-vfms-1.c: Likewise.\n-       * gcc.target/arm/neon-vmla-1.c: Update test to use int instead\n-       of float.\n-       * gcc.target/arm/neon-vmls-1.c: Likewise.\n-       * lib/target-supports.exp (add_options_for_arm_neonv2): New\n-       function.\n-       (check_effective_target_arm_neonv2_ok_nocache): Likewise.\n-       (check_effective_target_arm_neonv2_ok): Likewise.\n-       (check_effective_target_arm_neonv2_hw): Likewise.\n-       (check_effective_target_arm_neonv2): Likewise.\n+\t    Matthew Gretton-Dann  <matthew.gretton-dann@arm.com>\n+\n+\t* gcc.target/arm/neon-vfma-1.c: New testcase.\n+\t* gcc.target/arm/neon-vfms-1.c: Likewise.\n+\t* gcc.target/arm/neon-vmla-1.c: Update test to use int instead\n+\tof float.\n+\t* gcc.target/arm/neon-vmls-1.c: Likewise.\n+\t* lib/target-supports.exp (add_options_for_arm_neonv2): New\n+\tfunction.\n+\t(check_effective_target_arm_neonv2_ok_nocache): Likewise.\n+\t(check_effective_target_arm_neonv2_ok): Likewise.\n+\t(check_effective_target_arm_neonv2_hw): Likewise.\n+\t(check_effective_target_arm_neonv2): Likewise.\n \n 2012-09-11  Richard Guenther  <rguenther@suse.de>\n "}, {"sha": "d3093d14d5030494bc017d43a8589d7397f7cc21", "filename": "gcc/testsuite/gfortran.dg/array_section_3.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6273c3c2af3a9acdeeea3583bc317046bda55cf7/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_section_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6273c3c2af3a9acdeeea3583bc317046bda55cf7/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_section_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_section_3.f90?ref=6273c3c2af3a9acdeeea3583bc317046bda55cf7", "patch": "@@ -0,0 +1,17 @@\n+! { dg-do compile }\n+!\n+! PR fortran/54225\n+!\n+! Contributed by robb wu\n+!\n+program test\n+  implicit none\n+  real :: A(2,3)\n+\n+  print *, A(1, *)  ! { dg-error \"Expected array subscript\" }\n+end program\n+\n+subroutine test2\n+integer, dimension(2) :: a\n+a(*) = 1  ! { dg-error \"Expected array subscript\" }\n+end"}, {"sha": "78abb5ad1912a643199fe048b58cd6537d7534f4", "filename": "gcc/testsuite/gfortran.dg/coarray_10.f90", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6273c3c2af3a9acdeeea3583bc317046bda55cf7/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6273c3c2af3a9acdeeea3583bc317046bda55cf7/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_10.f90?ref=6273c3c2af3a9acdeeea3583bc317046bda55cf7", "patch": "@@ -30,12 +30,12 @@ end subroutine this_image_check\n subroutine rank_mismatch()\n   implicit none\n   integer,allocatable :: A(:)[:,:,:,:]\n-  allocate(A(1)[1,1,1:*])     ! { dg-error \"Unexpected ... for codimension\" }\n+  allocate(A(1)[1,1,1:*])     ! { dg-error \"Too few codimensions\" }\n   allocate(A(1)[1,1,1,1,1,*]) ! { dg-error \"Invalid codimension 5\" }\n   allocate(A(1)[1,1,1,*])\n   allocate(A(1)[1,1])     ! { dg-error \"Too few codimensions\" }\n   allocate(A(1)[1,*])     ! { dg-error \"Too few codimensions\" }\n-  allocate(A(1)[1,1:*])   ! { dg-error \"Unexpected ... for codimension\" }\n+  allocate(A(1)[1,1:*])   ! { dg-error \"Too few codimensions\" }\n \n   A(1)[1,1,1] = 1       ! { dg-error \"Too few codimensions\" }\n   A(1)[1,1,1,1,1,1] = 1 ! { dg-error \"Invalid codimension 5\" }\n@@ -48,5 +48,5 @@ end subroutine rank_mismatch\n subroutine rank_mismatch2()\n   implicit none\n   integer, allocatable:: A(:)[:,:,:]\n-  allocate(A(1)[7:8,4:*]) ! { dg-error \"Unexpected .*. for codimension 2 of 3\" }\n+  allocate(A(1)[7:8,4:*]) ! { dg-error \"Too few codimensions\" }\n end subroutine rank_mismatch2"}, {"sha": "ca6f863568a875486574d9fa61bd1758061687f1", "filename": "gcc/testsuite/gfortran.dg/coarray_28.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6273c3c2af3a9acdeeea3583bc317046bda55cf7/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_28.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6273c3c2af3a9acdeeea3583bc317046bda55cf7/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_28.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_28.f90?ref=6273c3c2af3a9acdeeea3583bc317046bda55cf7", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do compile }\n+! { dg-options \"-fcoarray=single\" }\n+!\n+! PR fortran/54225\n+!\n+\n+integer, allocatable :: a[:,:]\n+\n+allocate (a[*,4]) ! { dg-error \"Unexpected '.' for codimension 1 of 2\" }\n+end"}]}