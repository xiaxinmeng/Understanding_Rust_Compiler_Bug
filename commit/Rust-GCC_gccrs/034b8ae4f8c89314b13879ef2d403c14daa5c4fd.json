{"sha": "034b8ae4f8c89314b13879ef2d403c14daa5c4fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM0YjhhZTRmOGM4OTMxNGIxMzg3OWVmMmQ0MDNjMTRkYWE1YzRmZA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-02-08T10:44:06Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-02-08T10:44:06Z"}, "message": "re PR tree-optimization/47632 (ICE: verify_flow_info failed: BB 4 can not throw but has an EH edge with -fnon-call-exceptions -ftrapv and operator new[])\n\n2011-02-08  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/47632\n\t* tree-ssa-forwprop.c (remove_prop_source_from_use): Remove\n\tunused up_to_stmt parameter, return whether cfg-cleanup is\n\tnecessary, remove EH info properly.\n\t(forward_propagate_into_gimple_cond): Adjust caller.\n\t(forward_propagate_into_cond): Likewise.\n\t(forward_propagate_comparison): Likewise.\n\t(tree_ssa_forward_propagate_single_use_vars): Make\n\tforward_propagate_comparison case similar to the two others.\n\n\t* g++.dg/opt/pr47632.C: New testcase.\n\nFrom-SVN: r169917", "tree": {"sha": "5a479057359965e6469131ee3ff8041f18fa3e2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a479057359965e6469131ee3ff8041f18fa3e2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/034b8ae4f8c89314b13879ef2d403c14daa5c4fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/034b8ae4f8c89314b13879ef2d403c14daa5c4fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/034b8ae4f8c89314b13879ef2d403c14daa5c4fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/034b8ae4f8c89314b13879ef2d403c14daa5c4fd/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "298362c83f1e4250dc2598fa11e8f6a3bacd6153", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/298362c83f1e4250dc2598fa11e8f6a3bacd6153", "html_url": "https://github.com/Rust-GCC/gccrs/commit/298362c83f1e4250dc2598fa11e8f6a3bacd6153"}], "stats": {"total": 82, "additions": 54, "deletions": 28}, "files": [{"sha": "c4853269f16bda490e79f3532a5a29fba70e5774", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/034b8ae4f8c89314b13879ef2d403c14daa5c4fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/034b8ae4f8c89314b13879ef2d403c14daa5c4fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=034b8ae4f8c89314b13879ef2d403c14daa5c4fd", "patch": "@@ -1,3 +1,15 @@\n+2011-02-08  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/47632\n+\t* tree-ssa-forwprop.c (remove_prop_source_from_use): Remove\n+\tunused up_to_stmt parameter, return whether cfg-cleanup is\n+\tnecessary, remove EH info properly.\n+\t(forward_propagate_into_gimple_cond): Adjust caller.\n+\t(forward_propagate_into_cond): Likewise.\n+\t(forward_propagate_comparison): Likewise.\n+\t(tree_ssa_forward_propagate_single_use_vars): Make\n+\tforward_propagate_comparison case similar to the two others.\n+\n 2011-02-08  Nick Clifton  <nickc@redhat.com>\n \n \t* config/mn10300/mn10300.opt (mliw): New command line option."}, {"sha": "51b225f78ccc8a6839da83a714ae2e54f0147c63", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/034b8ae4f8c89314b13879ef2d403c14daa5c4fd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/034b8ae4f8c89314b13879ef2d403c14daa5c4fd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=034b8ae4f8c89314b13879ef2d403c14daa5c4fd", "patch": "@@ -1,3 +1,8 @@\n+2011-02-08  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/47632\n+\t* g++.dg/opt/pr47632.C: New testcase.\n+\n 2011-02-07  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \t* g++.dg/abi/packed1.C: Expect warning on spu-*-* as well."}, {"sha": "4b0572a61716df27c1f4291e62f0915a0ecbeccf", "filename": "gcc/testsuite/g++.dg/opt/pr47632.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/034b8ae4f8c89314b13879ef2d403c14daa5c4fd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr47632.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/034b8ae4f8c89314b13879ef2d403c14daa5c4fd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr47632.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr47632.C?ref=034b8ae4f8c89314b13879ef2d403c14daa5c4fd", "patch": "@@ -0,0 +1,18 @@\n+// { dg-do compile }\n+// { dg-options \"-O -fnon-call-exceptions -ftrapv\" }\n+\n+template < typename > struct S\n+{\n+  int n;\n+  void bar ()\n+    {\n+      int *i = new int[n];\n+    }\n+};\n+\n+void\n+foo (S < char >*s)\n+{\n+  s->bar ();\n+}\n+"}, {"sha": "f183159604cf7681a96beb9b46d957b8163a2d07", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 19, "deletions": 28, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/034b8ae4f8c89314b13879ef2d403c14daa5c4fd/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/034b8ae4f8c89314b13879ef2d403c14daa5c4fd/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=034b8ae4f8c89314b13879ef2d403c14daa5c4fd", "patch": "@@ -299,34 +299,34 @@ can_propagate_from (gimple def_stmt)\n   return true;\n }\n \n-/* Remove a copy chain ending in NAME along the defs but not\n-   further or including UP_TO_STMT.  If NAME was replaced in\n-   its only use then this function can be used to clean up\n-   dead stmts.  Returns true if UP_TO_STMT can be removed\n-   as well, otherwise false.  */\n+/* Remove a copy chain ending in NAME along the defs.\n+   If NAME was replaced in its only use then this function can be used\n+   to clean up dead stmts.  Returns true if cleanup-cfg has to run.  */\n \n static bool\n-remove_prop_source_from_use (tree name, gimple up_to_stmt)\n+remove_prop_source_from_use (tree name)\n {\n   gimple_stmt_iterator gsi;\n   gimple stmt;\n+  bool cfg_changed = false;\n \n   do {\n+    basic_block bb;\n+\n     if (!has_zero_uses (name))\n-      return false;\n+      return cfg_changed;\n \n     stmt = SSA_NAME_DEF_STMT (name);\n-    if (stmt == up_to_stmt)\n-      return true;\n-\n     gsi = gsi_for_stmt (stmt);\n+    bb = gimple_bb (stmt);\n     release_defs (stmt);\n     gsi_remove (&gsi, true);\n+    cfg_changed |= gimple_purge_dead_eh_edges (bb);\n \n     name = (gimple_assign_copy_p (stmt)) ? gimple_assign_rhs1 (stmt) : NULL;\n   } while (name && TREE_CODE (name) == SSA_NAME);\n \n-  return false;\n+  return cfg_changed;\n }\n \n /* Return the rhs of a gimple_assign STMT in a form of a single tree,\n@@ -468,9 +468,8 @@ forward_propagate_into_gimple_cond (gimple stmt)\n \tupdate_stmt (stmt);\n \n \t/* Remove defining statements.  */\n-\tremove_prop_source_from_use (name, NULL);\n-\n-\tif (is_gimple_min_invariant (tmp))\n+\tif (remove_prop_source_from_use (name)\n+\t    || is_gimple_min_invariant (tmp))\n \t  did_something = 2;\n \telse if (did_something == 0)\n \t  did_something = 1;\n@@ -579,9 +578,8 @@ forward_propagate_into_cond (gimple_stmt_iterator *gsi_p)\n \tupdate_stmt (stmt);\n \n \t/* Remove defining statements.  */\n-\tremove_prop_source_from_use (name, NULL);\n-\n-\tif (is_gimple_min_invariant (tmp))\n+\tif (remove_prop_source_from_use (name)\n+\t    || is_gimple_min_invariant (tmp))\n \t  did_something = 2;\n \telse if (did_something == 0)\n \t  did_something = 1;\n@@ -1207,9 +1205,6 @@ forward_propagate_comparison (gimple stmt)\n \tupdate_stmt (use_stmt);\n       }\n \n-      /* Remove defining statements.  */\n-      remove_prop_source_from_use (name, stmt);\n-\n       if (dump_file && (dump_flags & TDF_DETAILS))\n \t{\n \t  tree old_rhs = rhs_to_tree (TREE_TYPE (gimple_assign_lhs (stmt)),\n@@ -1221,7 +1216,8 @@ forward_propagate_comparison (gimple stmt)\n \t  fprintf (dump_file, \"'\\n\");\n \t}\n \n-      return true;\n+      /* Remove defining statements.  */\n+      return remove_prop_source_from_use (name);\n     }\n \n   return false;\n@@ -2051,13 +2047,8 @@ tree_ssa_forward_propagate_single_use_vars (void)\n \t\t\t\t\t== tcc_comparison)\n \t\t{\n \t\t  if (forward_propagate_comparison (stmt))\n-\t\t    {\n-\t\t      release_defs (stmt);\n-\t\t      todoflags |= TODO_remove_unused_locals;\n-\t\t      gsi_remove (&gsi, true);\n-\t\t    }\n-\t\t  else\n-\t\t    gsi_next (&gsi);\n+\t\t    cfg_changed = true;\n+\t\t  gsi_next (&gsi);\n \t\t}\n \t      else if (gimple_assign_rhs_code (stmt) == BIT_AND_EXPR)\n \t\t{"}]}