{"sha": "f1a85fe7193cddc99f68c80c6aef96231866cad1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFhODVmZTcxOTNjZGRjOTlmNjhjODBjNmFlZjk2MjMxODY2Y2FkMQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-08-01T08:19:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T08:19:00Z"}, "message": "* gcc-interface/decl.c, gcc-interface/trans.c: Remove VMS handling.\n\nFrom-SVN: r213415", "tree": {"sha": "ad6b6e5460c06819cd77d7b397ad501495da9fbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad6b6e5460c06819cd77d7b397ad501495da9fbf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1a85fe7193cddc99f68c80c6aef96231866cad1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1a85fe7193cddc99f68c80c6aef96231866cad1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1a85fe7193cddc99f68c80c6aef96231866cad1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1a85fe7193cddc99f68c80c6aef96231866cad1/comments", "author": null, "committer": null, "parents": [{"sha": "ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea0c8cfb98bc575325f35f4798b2c657f4497e5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea0c8cfb98bc575325f35f4798b2c657f4497e5e"}], "stats": {"total": 24, "additions": 8, "deletions": 16}, "files": [{"sha": "55e5b8747464d5d425293d83b740b371fd0adf95", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a85fe7193cddc99f68c80c6aef96231866cad1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a85fe7193cddc99f68c80c6aef96231866cad1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=f1a85fe7193cddc99f68c80c6aef96231866cad1", "patch": "@@ -10,6 +10,7 @@\n \tsem_util.ads, exp_ch4.adb, exp_ch11.adb, exp_ch6.adb, cstand.adb,\n \tsem_mech.adb, sem_ch6.adb, sem_ch8.adb, sem_ch11.adb, snames.ads-tmpl:\n \tRemove VMS-specific code.\n+\t* gcc-interface/decl.c, gcc-interface/trans.c: Ditto.\n \n 2014-08-01  Arnaud Charlet  <charlet@adacore.com>\n "}, {"sha": "d7ac29d98f6ff42bfbc5a0a6aa2fc4ca0bb24d0d", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a85fe7193cddc99f68c80c6aef96231866cad1/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a85fe7193cddc99f68c80c6aef96231866cad1/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=f1a85fe7193cddc99f68c80c6aef96231866cad1", "patch": "@@ -1432,15 +1432,13 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t  gnu_expr = convert (gnu_type, gnu_expr);\n \n \t/* If this name is external or there was a name specified, use it,\n-\t   unless this is a VMS exception object since this would conflict\n-\t   with the symbol we need to export in addition.  Don't use the\n-\t   Interface_Name if there is an address clause (see CD30005).  */\n-\tif (!Is_VMS_Exception (gnat_entity)\n-\t    && ((Present (Interface_Name (gnat_entity))\n-\t\t && No (Address_Clause (gnat_entity)))\n-\t\t|| (Is_Public (gnat_entity)\n-\t\t    && (!Is_Imported (gnat_entity)\n-\t\t\t|| Is_Exported (gnat_entity)))))\n+\t   Don't use the Interface_Name if there is an address clause\n+\t   (see CD30005).  */\n+\tif ((Present (Interface_Name (gnat_entity))\n+\t     && No (Address_Clause (gnat_entity)))\n+\t    || (Is_Public (gnat_entity)\n+\t\t&& (!Is_Imported (gnat_entity)\n+\t            || Is_Exported (gnat_entity))))\n \t  gnu_ext_name = create_concat_name (gnat_entity, NULL);\n \n \t/* If this is an aggregate constant initialized to a constant, force it"}, {"sha": "0798a660864314404085763088299f1a192569b0", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1a85fe7193cddc99f68c80c6aef96231866cad1/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1a85fe7193cddc99f68c80c6aef96231866cad1/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=f1a85fe7193cddc99f68c80c6aef96231866cad1", "patch": "@@ -5484,13 +5484,6 @@ gnat_to_gnu (Node_Id gnat_node)\n \t  gcc_assert (!TREE_OVERFLOW (gnu_result));\n \t}\n \n-      /* Convert the Ureal to a vax float (represented on a signed type).  */\n-      else if (Vax_Float (Underlying_Type (Etype (gnat_node))))\n-\t{\n-\t  gnu_result = UI_To_gnu (Get_Vax_Real_Literal_As_Signed (gnat_node),\n-\t\t\t\t  gnu_result_type);\n-\t}\n-\n       else\n \t{\n \t  Ureal ur_realval = Realval (gnat_node);"}]}