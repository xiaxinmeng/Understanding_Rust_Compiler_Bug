{"sha": "282c6a893499762fecad905c5ffdc4161af395f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjgyYzZhODkzNDk5NzYyZmVjYWQ5MDVjNWZmZGM0MTYxYWYzOTVmOA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@gnat.com", "date": "2004-10-27T13:39:44Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-10-27T13:39:44Z"}, "message": "s-bitops.adb (Bit_Eq): Remove redundant check.\n\n2004-10-26  Robert Dewar  <dewar@gnat.com>\n\n\t* s-bitops.adb (Bit_Eq): Remove redundant check.\n\n\t* s-bitops.ads: Minor comment updates\n\tChange some occurrences of Address to System.Address\n\n\t* s-carsi8.ads: Fix minor cut-and-paste error in comments\n\nFrom-SVN: r89664", "tree": {"sha": "c31d012da12b7855c6e2960f62cc5aebec811ca6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c31d012da12b7855c6e2960f62cc5aebec811ca6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/282c6a893499762fecad905c5ffdc4161af395f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/282c6a893499762fecad905c5ffdc4161af395f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/282c6a893499762fecad905c5ffdc4161af395f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/282c6a893499762fecad905c5ffdc4161af395f8/comments", "author": null, "committer": null, "parents": [{"sha": "04b633a8c872b91fdb78a8adf30ba922bc4f4157", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04b633a8c872b91fdb78a8adf30ba922bc4f4157", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04b633a8c872b91fdb78a8adf30ba922bc4f4157"}], "stats": {"total": 21, "additions": 9, "deletions": 12}, "files": [{"sha": "b1e83d705617dcff25f70ad23f9e22a255293868", "filename": "gcc/ada/s-bitops.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/282c6a893499762fecad905c5ffdc4161af395f8/gcc%2Fada%2Fs-bitops.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/282c6a893499762fecad905c5ffdc4161af395f8/gcc%2Fada%2Fs-bitops.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-bitops.adb?ref=282c6a893499762fecad905c5ffdc4161af395f8", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---         Copyright (C) 1996-2002 Free Software Foundation, Inc.           --\n+--         Copyright (C) 1996-2004 Free Software Foundation, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -123,10 +123,7 @@ package body System.Bit_Ops is\n             Bitc : constant Natural := Llen mod 8;\n \n          begin\n-            if Llen /= Rlen then\n-               return False;\n-\n-            elsif LeftB (1 .. BLen) /= RightB (1 .. BLen) then\n+            if LeftB (1 .. BLen) /= RightB (1 .. BLen) then\n                return False;\n \n             elsif Bitc /= 0 then"}, {"sha": "f22a5d4b7ce955a7d7ec11d6b6c4770b1ce96a3e", "filename": "gcc/ada/s-bitops.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/282c6a893499762fecad905c5ffdc4161af395f8/gcc%2Fada%2Fs-bitops.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/282c6a893499762fecad905c5ffdc4161af395f8/gcc%2Fada%2Fs-bitops.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-bitops.ads?ref=282c6a893499762fecad905c5ffdc4161af395f8", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1999, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -45,11 +45,11 @@ package System.Bit_Ops is\n    procedure Bit_And\n      (Left   : System.Address;\n       Llen   : Natural;\n-      Right  : Address;\n+      Right  : System.Address;\n       Rlen   : Natural;\n       Result : System.Address);\n    --  Bitwise \"and\" of given bit string with result being placed in Result.\n-   --  The or operation is allowed to destroy unused bits in the last byte,\n+   --  The and operation is allowed to destroy unused bits in the last byte,\n    --  i.e. to leave them set in an undefined manner. Note that Left, Right\n    --  and Result always have the same length in bits (Len).\n \n@@ -77,7 +77,7 @@ package System.Bit_Ops is\n    procedure Bit_Or\n      (Left   : System.Address;\n       Llen   : Natural;\n-      Right  : Address;\n+      Right  : System.Address;\n       Rlen   : Natural;\n       Result : System.Address);\n    --  Bitwise \"or\" of given bit string with result being placed in Result.\n@@ -88,11 +88,11 @@ package System.Bit_Ops is\n    procedure Bit_Xor\n      (Left   : System.Address;\n       Llen   : Natural;\n-      Right  : Address;\n+      Right  : System.Address;\n       Rlen   : Natural;\n       Result : System.Address);\n    --  Bitwise \"xor\" of given bit string with result being placed in Result.\n-   --  The or operation is allowed to destroy unused bits in the last byte,\n+   --  The xor operation is allowed to destroy unused bits in the last byte,\n    --  i.e. to leave them set in an undefined manner. Note that Left, Right\n    --  and Result always have the same length in bits (Len).\n "}, {"sha": "ef5be23634100965318359a59f5a8682d763d874", "filename": "gcc/ada/s-carsi8.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/282c6a893499762fecad905c5ffdc4161af395f8/gcc%2Fada%2Fs-carsi8.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/282c6a893499762fecad905c5ffdc4161af395f8/gcc%2Fada%2Fs-carsi8.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-carsi8.ads?ref=282c6a893499762fecad905c5ffdc4161af395f8", "patch": "@@ -57,7 +57,7 @@ package System.Compare_Array_Signed_8 is\n       Right     : System.Address;\n       Left_Len  : Natural;\n       Right_Len : Natural) return Integer;\n-   --  Same functionality as Compare_Array_U8 but always proceeds by\n+   --  Same functionality as Compare_Array_S8 but always proceeds by\n    --  bytes. Used when the caller knows that the operands are unaligned,\n    --  or short enough that it makes no sense to go by words.\n "}]}