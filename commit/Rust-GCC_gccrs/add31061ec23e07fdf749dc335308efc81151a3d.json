{"sha": "add31061ec23e07fdf749dc335308efc81151a3d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRkMzEwNjFlYzIzZTA3ZmRmNzQ5ZGMzMzUzMDhlZmM4MTE1MWEzZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-02-01T09:02:20Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-02-01T09:02:20Z"}, "message": "fortran: Fix up TYPE_ARG_TYPES of procs with scalar VALUE optional args [PR92305]\n\nThe following patch fixes\n-FAIL: libgomp.fortran/use_device_addr-1.f90   -O0  execution test\n-FAIL: libgomp.fortran/use_device_addr-2.f90   -O0  execution test\nthat has been FAILing for several months on powerpc64le-linux.\nThe problem is in the Fortran FE, which adds the artificial arguments\nfor scalar VALUE OPTIONAL dummy args only to DECL_ARGUMENTS where the\ncurrent function can see them, but not to TYPE_ARG_TYPES; if those functions\naren't varargs, this confuses calls.c to pass the remaining arguments\n(which aren't named (== not covered by TYPE_ARG_TYPES) and aren't varargs\neither) in a different spot from what the callee (which has proper\nDECL_ARGUMENTS for all args) expects.  For the artificial length arguments\nfor character dummy args we already put them in both DECL_ARGUMENTS and\nTYPE_ARG_TYPES.\n\n2020-02-01  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR fortran/92305\n\t* trans-types.c (gfc_get_function_type): Also push boolean_type_node\n\ttypes for non-character scalar VALUE optional dummy arguments.\n\t* trans-decl.c (create_function_arglist): Skip those in\n\thidden_typelist.  Formatting fix.", "tree": {"sha": "b12aa90f1e67cd33d919ef010217f6dca5a995a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b12aa90f1e67cd33d919ef010217f6dca5a995a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/add31061ec23e07fdf749dc335308efc81151a3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/add31061ec23e07fdf749dc335308efc81151a3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/add31061ec23e07fdf749dc335308efc81151a3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/add31061ec23e07fdf749dc335308efc81151a3d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d33dcfe9f0494c9b56a8d704c3d27c5a4329ebc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d33dcfe9f0494c9b56a8d704c3d27c5a4329ebc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d33dcfe9f0494c9b56a8d704c3d27c5a4329ebc"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "2b188e513b77c9f990ff5f77c96a715c214d7952", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/add31061ec23e07fdf749dc335308efc81151a3d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/add31061ec23e07fdf749dc335308efc81151a3d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=add31061ec23e07fdf749dc335308efc81151a3d", "patch": "@@ -1,3 +1,11 @@\n+2020-02-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/92305\n+\t* trans-types.c (gfc_get_function_type): Also push boolean_type_node\n+\ttypes for non-character scalar VALUE optional dummy arguments.\n+\t* trans-decl.c (create_function_arglist): Skip those in\n+\thidden_typelist.  Formatting fix.\n+\n 2020-01-31  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/93462"}, {"sha": "e91a2795762e324d509ccc9b0050f84247276d3e", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/add31061ec23e07fdf749dc335308efc81151a3d/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/add31061ec23e07fdf749dc335308efc81151a3d/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=add31061ec23e07fdf749dc335308efc81151a3d", "patch": "@@ -2645,8 +2645,8 @@ create_function_arglist (gfc_symbol * sym)\n \t      || f->sym->ts.u.cl->backend_decl == length)\n \t    {\n \t      if (POINTER_TYPE_P (len_type))\n-\t\tf->sym->ts.u.cl->backend_decl =\n-\t\t\tbuild_fold_indirect_ref_loc (input_location, length);\n+\t\tf->sym->ts.u.cl->backend_decl\n+\t\t  = build_fold_indirect_ref_loc (input_location, length);\n \t      else if (f->sym->ts.u.cl->backend_decl == NULL)\n \t\tgfc_create_string_length (f->sym);\n \n@@ -2677,6 +2677,8 @@ create_function_arglist (gfc_symbol * sym)\n           DECL_ARG_TYPE (tmp) = boolean_type_node;\n           TREE_READONLY (tmp) = 1;\n           gfc_finish_decl (tmp);\n+\n+\t  hidden_typelist = TREE_CHAIN (hidden_typelist);\n \t}\n \n       /* For non-constant length array arguments, make sure they use"}, {"sha": "8a4c8eef4a11f5f4d0b4a136963d069eb8e56505", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/add31061ec23e07fdf749dc335308efc81151a3d/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/add31061ec23e07fdf749dc335308efc81151a3d/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=add31061ec23e07fdf749dc335308efc81151a3d", "patch": "@@ -3098,6 +3098,16 @@ gfc_get_function_type (gfc_symbol * sym, gfc_actual_arglist *actual_args)\n \n \t  vec_safe_push (typelist, type);\n \t}\n+      /* For noncharacter scalar intrinsic types, VALUE passes the value,\n+\t hence, the optional status cannot be transferred via a NULL pointer.\n+\t Thus, we will use a hidden argument in that case.  */\n+      else if (arg\n+\t       && arg->attr.optional\n+\t       && arg->attr.value\n+\t       && !arg->attr.dimension\n+\t       && arg->ts.type != BT_CLASS\n+\t       && !gfc_bt_struct (arg->ts.type))\n+\tvec_safe_push (typelist, boolean_type_node);\n     }\n \n   if (!vec_safe_is_empty (typelist)"}]}