{"sha": "645ebf3767cd0300bd13971385806f6cec547f05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ1ZWJmMzc2N2NkMDMwMGJkMTM5NzEzODU4MDZmNmNlYzU0N2YwNQ==", "commit": {"author": {"name": "Doug Evans", "email": "devans@canuck.cygnus.com", "date": "1997-11-04T21:56:24Z"}, "committer": {"name": "Doug Evans", "email": "devans@gcc.gnu.org", "date": "1997-11-04T21:56:24Z"}, "message": "c-lex.c (MULTIBYTE_CHARS): #undef if cross compiling.\n\n\t* c-lex.c (MULTIBYTE_CHARS): #undef if cross compiling.\n\t(yylex): Record wide strings using target endianness, not host.\n\nFrom-SVN: r16315", "tree": {"sha": "113549e740ff33b3151279ba291fc10c465c0515", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/113549e740ff33b3151279ba291fc10c465c0515"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/645ebf3767cd0300bd13971385806f6cec547f05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/645ebf3767cd0300bd13971385806f6cec547f05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/645ebf3767cd0300bd13971385806f6cec547f05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/645ebf3767cd0300bd13971385806f6cec547f05/comments", "author": null, "committer": null, "parents": [{"sha": "f762058716bb17c563faad6a629fa92c86caea1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f762058716bb17c563faad6a629fa92c86caea1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f762058716bb17c563faad6a629fa92c86caea1a"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "881ffd02b1efd10a6d13566a889d2e259677ea7e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/645ebf3767cd0300bd13971385806f6cec547f05/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/645ebf3767cd0300bd13971385806f6cec547f05/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=645ebf3767cd0300bd13971385806f6cec547f05", "patch": "@@ -1,3 +1,8 @@\n+Tue Nov  4 13:40:35 1997  Doug Evans  <devans@canuck.cygnus.com>\n+\n+\t* c-lex.c (MULTIBYTE_CHARS): #undef if cross compiling.\n+\t(yylex): Record wide strings using target endianness, not host.\n+\n Tue Nov  4 13:13:12 1997  Jeffrey A Law  (law@cygnus.com)\n \n \t* mn10200.h (ASM_OUTPUT_BSS): Delete."}, {"sha": "1ec8f23e03806a6096e11d3d1c8a2eb583c270fc", "filename": "gcc/c-lex.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/645ebf3767cd0300bd13971385806f6cec547f05/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/645ebf3767cd0300bd13971385806f6cec547f05/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=645ebf3767cd0300bd13971385806f6cec547f05", "patch": "@@ -35,6 +35,13 @@ Boston, MA 02111-1307, USA.  */\n \n #include <ctype.h>\n \n+/* MULTIBYTE_CHARS support only works for native compilers.\n+   ??? Ideally what we want is to model widechar support after\n+   the current floating point support.  */\n+#ifdef CROSS_COMPILE\n+#undef MULTIBYTE_CHARS\n+#endif\n+\n #ifdef MULTIBYTE_CHARS\n #include <stdlib.h>\n #include <locale.h>\n@@ -1999,15 +2006,9 @@ yylex ()\n \t    bzero (widep + (len * WCHAR_BYTES), WCHAR_BYTES);\n #else\n \t    {\n-\t      union { long l; char c[sizeof (long)]; } u;\n-\t      int big_endian;\n \t      char *wp, *cp;\n \n-\t      /* Determine whether host is little or big endian.  */\n-\t      u.l = 1;\n-\t      big_endian = u.c[sizeof (long) - 1];\n-\t      wp = widep + (big_endian ? WCHAR_BYTES - 1 : 0);\n-\n+\t      wp = widep + (BYTES_BIG_ENDIAN ? WCHAR_BYTES - 1 : 0);\n \t      bzero (widep, (p - token_buffer) * WCHAR_BYTES);\n \t      for (cp = token_buffer + 1; cp < p; cp++)\n \t\t*wp = *cp, wp += WCHAR_BYTES;"}]}