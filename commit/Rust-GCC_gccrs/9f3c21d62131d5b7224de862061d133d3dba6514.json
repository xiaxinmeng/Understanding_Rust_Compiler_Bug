{"sha": "9f3c21d62131d5b7224de862061d133d3dba6514", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWYzYzIxZDYyMTMxZDViNzIyNGRlODYyMDYxZDEzM2QzZGJhNjUxNA==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.ibm.com", "date": "2018-08-08T12:38:51Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2018-08-08T12:38:51Z"}, "message": "S/390: Fix PR85295\n\ngcc/ChangeLog:\n\n2018-08-08  Andreas Krebbel  <krebbel@linux.ibm.com>\n\n\tPR target/85295\n\t* config/s390/constraints.md (\"NxHD0\", \"NxSD0\"): New constraint\n\tdefinitions.\n\t* config/s390/s390.md (\"movti\"): Add more alternatives for\n\tconstant to GPR copies.\n\ngcc/testsuite/ChangeLog:\n\n2018-08-08  Andreas Krebbel  <krebbel@linux.ibm.com>\n\n\tPR target/85295\n\t* gcc.target/s390/TI-constants-lra.c: New testcase.\n\t* gcc.target/s390/TI-constants-nolra.c: New testcase.\n\nFrom-SVN: r263396", "tree": {"sha": "acddc9ebb4cc5b18dc10d72164d224f43e1a2b59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/acddc9ebb4cc5b18dc10d72164d224f43e1a2b59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f3c21d62131d5b7224de862061d133d3dba6514", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f3c21d62131d5b7224de862061d133d3dba6514", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f3c21d62131d5b7224de862061d133d3dba6514", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f3c21d62131d5b7224de862061d133d3dba6514/comments", "author": {"login": "Andreas-Krebbel", "id": 38103320, "node_id": "MDQ6VXNlcjM4MTAzMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38103320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andreas-Krebbel", "html_url": "https://github.com/Andreas-Krebbel", "followers_url": "https://api.github.com/users/Andreas-Krebbel/followers", "following_url": "https://api.github.com/users/Andreas-Krebbel/following{/other_user}", "gists_url": "https://api.github.com/users/Andreas-Krebbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andreas-Krebbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andreas-Krebbel/subscriptions", "organizations_url": "https://api.github.com/users/Andreas-Krebbel/orgs", "repos_url": "https://api.github.com/users/Andreas-Krebbel/repos", "events_url": "https://api.github.com/users/Andreas-Krebbel/events{/privacy}", "received_events_url": "https://api.github.com/users/Andreas-Krebbel/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0ff3dcd61a70884eb39c2ee9fb107e8ea14849c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ff3dcd61a70884eb39c2ee9fb107e8ea14849c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ff3dcd61a70884eb39c2ee9fb107e8ea14849c8"}], "stats": {"total": 138, "additions": 131, "deletions": 7}, "files": [{"sha": "4c653ead57ff833bd22868aeee2a5f4926898a73", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f3c21d62131d5b7224de862061d133d3dba6514/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f3c21d62131d5b7224de862061d133d3dba6514/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f3c21d62131d5b7224de862061d133d3dba6514", "patch": "@@ -1,3 +1,11 @@\n+2018-08-08  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\tPR target/85295\n+\t* config/s390/constraints.md (\"NxHD0\", \"NxSD0\"): New constraint\n+\tdefinitions.\n+\t* config/s390/s390.md (\"movti\"): Add more alternatives for\n+\tconstant to GPR copies.\n+\n 2018-08-08  Andreas Krebbel  <krebbel@linux.ibm.com>\n \n \t* config/s390/s390.c: Fix whitespace damage throughout the file."}, {"sha": "b8ba8510096caf3acc829ee17cec647c1be42dfb", "filename": "gcc/config/s390/constraints.md", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f3c21d62131d5b7224de862061d133d3dba6514/gcc%2Fconfig%2Fs390%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f3c21d62131d5b7224de862061d133d3dba6514/gcc%2Fconfig%2Fs390%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fconstraints.md?ref=9f3c21d62131d5b7224de862061d133d3dba6514", "patch": "@@ -51,7 +51,7 @@\n ;;    M -- Constant integer with a value of 0x7fffffff.\n ;;    N -- Multiple letter constraint followed by 4 parameter letters.\n ;;         0..9,x:  number of the part counting from most to least significant\n-;;         H,Q:     mode of the part\n+;;         S,H,Q:   mode of the part\n ;;         D,S,H:   mode of the containing operand\n ;;         0,F:     value of the other parts (F - all bits set)\n ;;         --\n@@ -204,7 +204,7 @@\n \n ;;    N -- Multiple letter constraint followed by 4 parameter letters.\n ;;         0..9,x:  number of the part counting from most to least significant\n-;;         H,Q:     mode of the part\n+;;         S,H,Q:   mode of the part\n ;;         D,S,H:   mode of the containing operand\n ;;         0,F:     value of the other parts (F = all bits set)\n ;;\n@@ -226,6 +226,18 @@\n        (match_test \"s390_N_constraint_str (\\\"xQS0\\\", ival)\")))\n \n \n+(define_constraint \"NxHD0\"\n+  \"@internal\"\n+   (and (match_code \"const_int\")\n+        (match_test \"s390_N_constraint_str (\\\"xHD0\\\", ival)\")))\n+\n+\n+(define_constraint \"NxSD0\"\n+  \"@internal\"\n+   (and (match_code \"const_int\")\n+        (match_test \"s390_N_constraint_str (\\\"xSD0\\\", ival)\")))\n+\n+\n (define_constraint \"NxQD0\"\n   \"@internal\"\n    (and (match_code \"const_int\")"}, {"sha": "db260e41bfd26683c7669391b4d118756083c45e", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f3c21d62131d5b7224de862061d133d3dba6514/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f3c21d62131d5b7224de862061d133d3dba6514/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=9f3c21d62131d5b7224de862061d133d3dba6514", "patch": "@@ -1512,8 +1512,8 @@\n ; FIXME: More constants are possible by enabling jxx, jyy constraints\n ; for TImode (use double-int for the calculations)\n (define_insn \"movti\"\n-  [(set (match_operand:TI 0 \"nonimmediate_operand\" \"=d,S,v,  v,  v,v,d,v,R, d,o\")\n-        (match_operand:TI 1 \"general_operand\"      \" S,d,v,j00,jm1,d,v,R,v,dT,d\"))]\n+  [(set (match_operand:TI 0 \"nonimmediate_operand\" \"=d,S,v,  v,  v,v,d,v,R,d,    d, d,    d, d,o\")\n+        (match_operand:TI 1 \"general_operand\"      \" S,d,v,j00,jm1,d,v,R,v,K,NxHD0,Os,NxSD0,dT,d\"))]\n   \"TARGET_ZARCH\"\n   \"@\n    lmg\\t%0,%N0,%S1\n@@ -1526,10 +1526,14 @@\n    vl\\t%v0,%1\n    vst\\t%v1,%0\n    #\n+   #\n+   #\n+   #\n+   #\n    #\"\n-  [(set_attr \"op_type\" \"RSY,RSY,VRR,VRI,VRI,VRR,*,VRX,VRX,*,*\")\n-   (set_attr \"type\" \"lm,stm,*,*,*,*,*,*,*,*,*\")\n-   (set_attr \"cpu_facility\" \"*,*,vx,vx,vx,vx,vx,vx,vx,*,*\")])\n+  [(set_attr \"op_type\" \"RSY,RSY,VRR,VRI,VRI,VRR,*,VRX,VRX,*,*,*,*,*,*\")\n+   (set_attr \"type\" \"lm,stm,*,*,*,*,*,*,*,*,*,*,*,*,*\")\n+   (set_attr \"cpu_facility\" \"*,*,vx,vx,vx,vx,vx,vx,vx,*,*,*,extimm,*,*\")])\n \n (define_split\n   [(set (match_operand:TI 0 \"nonimmediate_operand\" \"\")"}, {"sha": "472e6a9aa3e3f7f717f9627636be1948a832bcbe", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f3c21d62131d5b7224de862061d133d3dba6514/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f3c21d62131d5b7224de862061d133d3dba6514/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9f3c21d62131d5b7224de862061d133d3dba6514", "patch": "@@ -1,3 +1,9 @@\n+2018-08-08  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\tPR target/85295\n+\t* gcc.target/s390/TI-constants-lra.c: New testcase.\n+\t* gcc.target/s390/TI-constants-nolra.c: New testcase.\n+\n 2018-08-08  Ilya Leoshkevich  <iii@linux.ibm.com>\n \n \t* gcc.target/s390/hotpatch-8.c: Remove."}, {"sha": "cc52a62182b67eb2eb0868b28964375fec539a8e", "filename": "gcc/testsuite/gcc.target/s390/TI-constants-lra.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f3c21d62131d5b7224de862061d133d3dba6514/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2FTI-constants-lra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f3c21d62131d5b7224de862061d133d3dba6514/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2FTI-constants-lra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2FTI-constants-lra.c?ref=9f3c21d62131d5b7224de862061d133d3dba6514", "patch": "@@ -0,0 +1,47 @@\n+/* { dg-do compile { target int128 } } */\n+/* { dg-options \"-O3\" } */\n+\n+/* 2x lghi */\n+__int128 a() {\n+  return 0;\n+}\n+\n+/* 2x lghi */\n+__int128 b() {\n+  return -1;\n+}\n+\n+/* 2x lghi */\n+__int128 c() {\n+  return -2;\n+}\n+\n+/* lghi + llilh */\n+__int128 d() {\n+  return 16000 << 16;\n+}\n+\n+/* lghi + llihf */\n+__int128 e() {\n+  return (unsigned long long)80000 << 32;\n+}\n+\n+/* lghi + llihf */\n+__int128 f() {\n+  return (unsigned __int128)80000 << 96;\n+}\n+\n+/* llihf + llihf - this is handled via movti_bigconst pattern */\n+__int128 g() {\n+  return ((unsigned __int128)80000 << 96) | ((unsigned __int128)80000 << 32);\n+}\n+\n+/* Literal pool */\n+__int128 h() {\n+  return ((unsigned __int128)80000 << 32) | 1;\n+}\n+\n+/* Literal pool */\n+__int128 i() {\n+  return (((unsigned __int128)80000 << 32) | 1) << 64;\n+}"}, {"sha": "b9948fc4aa585cf89f1cacf3ee327e123ce339a0", "filename": "gcc/testsuite/gcc.target/s390/TI-constants-nolra.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f3c21d62131d5b7224de862061d133d3dba6514/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2FTI-constants-nolra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f3c21d62131d5b7224de862061d133d3dba6514/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2FTI-constants-nolra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2FTI-constants-nolra.c?ref=9f3c21d62131d5b7224de862061d133d3dba6514", "patch": "@@ -0,0 +1,47 @@\n+/* { dg-do compile { target int128 } } */\n+/* { dg-options \"-O3 -mno-lra\" } */\n+\n+/* 2x lghi */\n+__int128 a() {\n+  return 0;\n+}\n+\n+/* 2x lghi */\n+__int128 b() {\n+  return -1;\n+}\n+\n+/* 2x lghi */\n+__int128 c() {\n+  return -2;\n+}\n+\n+/* lghi + llilh */\n+__int128 d() {\n+  return 16000 << 16;\n+}\n+\n+/* lghi + llihf */\n+__int128 e() {\n+  return (unsigned long long)80000 << 32;\n+}\n+\n+/* lghi + llihf */\n+__int128 f() {\n+  return (unsigned __int128)80000 << 96;\n+}\n+\n+/* llihf + llihf - this is handled via movti_bigconst pattern */\n+__int128 g() {\n+  return ((unsigned __int128)80000 << 96) | ((unsigned __int128)80000 << 32);\n+}\n+\n+/* Literal pool */\n+__int128 h() {\n+  return ((unsigned __int128)80000 << 32) | 1;\n+}\n+\n+/* Literal pool */\n+__int128 i() {\n+  return (((unsigned __int128)80000 << 32) | 1) << 64;\n+}"}]}