{"sha": "1dedc12d186a110854537e1279b4e6c29f2df35a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWRlZGMxMmQxODZhMTEwODU0NTM3ZTEyNzliNGU2YzI5ZjJkZjM1YQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2020-05-26T07:30:15Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2020-05-26T07:30:15Z"}, "message": "revamp dump and aux output names\n\nThis patch simplifies (!!!) the logic governing the naming of dump\nfiles and auxiliary output files in the driver, in the compiler, and\nin the LTO wrapper.  No changes are made to the naming of primary\noutputs, there are often ways to restore past behavior, and a number\nof inconsistencies are fixed.  Some internal options are removed\n(-auxbase and -auxbase-strip), sensible existing uses of -dumpdir and\n-dumpbase options remain unchanged, additional useful cases are added,\nmaking for what is still admittedly quite complex.  Extensive\ndocumentation and testcases provide numerous examples, from normal to\ncorner cases.\n\nThe most visible changes are:\n\n- aux and dump files now always go in the same directory, that\ndefaults to the directory of the primary output, but that can be\noverridden with -dumpdir, -save-temps=*, or, preserving past behavior,\nwith a -dumpbase with a directory component.\n\n- driver and compiler now have the same notion of naming of auxiliary\noutputs, e.g. .dwo files will no longer be in one location while the\ndebug info suggests they are elsewhere, and -save-temps and .dwo\nauxiliary outputs now go in the same location as .su, .ci and\ncoverage data, with consistent naming.\n\n- explicitly-specified primary output names guide not only the\nlocation of aux and dump outputs: the output base name is also used in\ntheir base name, as a prefix when also linking (e.g. foo.c bar.c -o\nfoobar creates foobar-foo.dwo and foobar-bar.dwo with -gsplit-dwarf),\nor as the base name instead of the input name (foo.c -c -o whatever.o\ncreates whatever.su rather than foo.su with -fstack-usage).  The\npreference for the input file base name, quite useful for our\ntestsuite, can be restored with -dumpbase \"\".  When compiling and\nlinking tests in the testsuite with additional inputs, we now use this\nflag.  Files named in dejagnu board ldflags, libs, and ldscripts are\nnow quoted in the gcc testsuite with -Wl, so that they are not counted\nas additional inputs by the compiler driver.\n\n- naming a -dumpbase when compiling multiple sources used to cause\ndumps from later compiles to overwrite those of earlier ones; it is\nnow used as a prefix when compiling multiple sources, like an\nexecutable name above.\n\n- the dumpbase, explicitly specified or computed from output or input\nnames, now also governs the naming of aux outputs; since aux outputs\nusually replaced the suffix from the input name, while dump outputs\nappend their own additional suffixes, a -dumpbase-ext option is\nintroduced to enable a chosen suffix to be dropped from dumpbase to\nform aux output names.\n\n- LTO dump and aux outputs were quite a mess, sometimes leaking\ntemporary output names into -save-temps output names, sometimes\nconversely generating desirable aux outputs in temporary locations.\nThey now obey the same logic of compiler aux and dump outputs, landing\nin the expected location and taking the linker output name or an\nexplicit dumpbase overrider into account.\n\n- Naming of -fdump-final-insns outputs now follows the dump file\nnaming logic for the .gkd files, and the .gk dump files generated in\nthe second -fcompare-debug compilation get the .gk inserted before the\nsuffix that -dumpbase-ext drops in aux outputs.\n\n\ngcc/ChangeLog:\n\n\t* common.opt (aux_base_name): Define.\n\t(dumpbase, dumpdir): Mark as Driver options.\n\t(-dumpbase, -dumpdir): Likewise.\n\t(dumpbase-ext, -dumpbase-ext): New.\n\t(auxbase, auxbase-strip): Drop.\n\t* doc/invoke.texi (-dumpbase, -dumpbase-ext, -dumpdir):\n\tDocument.\n\t(-o): Introduce the notion of primary output, mention it\n\tinfluences auxiliary and dump output names as well, add\n\texamples.\n\t(-save-temps): Adjust, move examples into -dump*.\n\t(-save-temps=cwd, -save-temps=obj): Likewise.\n\t(-fdump-final-insns): Adjust.\n\t* dwarf2out.c (gen_producer_string): Drop auxbase and\n\tauxbase_strip; add dumpbase_ext.\n\t* gcc.c (enum save_temps): Add SAVE_TEMPS_DUMP.\n\t(save_temps_prefix, save_temps_length): Drop.\n\t(save_temps_overrides_dumpdir): New.\n\t(dumpdir, dumpbase, dumpbase_ext): New.\n\t(dumpdir_length, dumpdir_trailing_dash_added): New.\n\t(outbase, outbase_length): New.\n\t(The Specs Language): Introduce %\".  Adjust %b and %B.\n\t(ASM_FINAL_SPEC): Use %b.dwo for an aux output name always.\n\tPrecede object file with %w when it's the primary output.\n\t(cpp_debug_options): Do not pass on incoming -dumpdir,\n\t-dumpbase and -dumpbase-ext options; recompute them with\n\t%:dumps.\n\t(cc1_options): Drop auxbase with and without compare-debug;\n\tuse cpp_debug_options instead of dumpbase.  Mark asm output\n\twith %w when it's the primary output.\n\t(static_spec_functions): Drop %:compare-debug-auxbase-opt and\n\t%:replace-exception.  Add %:dumps.\n\t(driver_handle_option): Implement -save-temps=*/-dumpdir\n\tmutual overriding logic.  Save dumpdir, dumpbase and\n\tdumpbase-ext options.  Do not save output_file in\n\tsave_temps_prefix.\n\t(adds_single_suffix_p): New.\n\t(single_input_file_index): New.\n\t(process_command): Combine output dir, output base name, and\n\tdumpbase into dumpdir and outbase.\n\t(set_collect_gcc_options): Pass a possibly-adjusted -dumpdir.\n\t(do_spec_1): Optionally dumpdir instead of save_temps_prefix,\n\tand outbase instead of input_basename in %b, %B and in\n\t-save-temps aux files.  Handle empty argument %\".\n\t(driver::maybe_run_linker): Adjust dumpdir and auxbase.\n\t(compare_debug_dump_opt_spec_function): Adjust gkd dump file\n\tnaming.  Spec-quote the computed -fdump-final-insns file name.\n\t(debug_auxbase_opt): Drop.\n\t(compare_debug_self_opt_spec_function): Drop auxbase-strip\n\tcomputation.\n\t(compare_debug_auxbase_opt_spec_function): Drop.\n\t(not_actual_file_p): New.\n\t(replace_extension_spec_func): Drop.\n\t(dumps_spec_func): New.\n\t(convert_white_space): Split-out parts into...\n\t(quote_string, whitespace_to_convert_p): ... these.  New.\n\t(quote_spec_char_p, quote_spec, quote_spec_arg): New.\n\t(driver::finalize): Release and reset new variables; drop\n\tremoved ones.\n\t* lto-wrapper.c (HAVE_TARGET_EXECUTABLE_SUFFIX): Define if...\n\t(TARGET_EXECUTABLE_SUFFIX): ... is defined; define this to the\n\tempty string otherwise.\n\t(DUMPBASE_SUFFIX): Drop leading period.\n\t(debug_objcopy): Use concat.\n\t(run_gcc): Recognize -save-temps=* as -save-temps too.  Obey\n\t-dumpdir.  Pass on empty dumpdir and dumpbase with a directory\n\tcomponent.  Simplify temp file names.\n\t* opts.c (finish_options): Drop aux base name handling.\n\t(common_handle_option): Drop auxbase-strip handling.\n\t* toplev.c (print_switch_values): Drop auxbase, add\n\tdumpbase-ext.\n\t(process_options): Derive aux_base_name from dump_base_name\n\tand dump_base_ext.\n\t(lang_dependent_init): Compute dump_base_ext along with\n\tdump_base_name.  Disable stack usage and callgraph-info\tduring\n\tlto generation and compare-debug recompilation.\n\ngcc/fortran/ChangeLog:\n\n\t* options.c (gfc_get_option_string): Drop auxbase, add\n\tdumpbase_ext.\n\ngcc/ada/ChangeLog:\n\n\t* gcc-interface/lang-specs.h: Drop auxbase and auxbase-strip.\n\tUse %:dumps instead of -dumpbase.  Add %w for implicit .s\n\tprimary output.\n\t* switch.adb (Is_Internal_GCC_Switch): Recognize dumpdir and\n\tdumpbase-ext.  Drop auxbase and auxbase-strip.\n\nlto-plugin/ChangeLog:\n\n\t* lto-plugin.c (skip_in_suffix): New.\n\t(exec_lto_wrapper): Use skip_in_suffix and concat to build\n\tnon-temporary output names.\n\t(onload): Look for -dumpdir in COLLECT_GCC_OPTIONS, and\n\toverride link_output_name with it.\n\ncontrib/ChangeLog:\n\n\t* compare-debug: Adjust for .gkd files named as dump files,\n\twith the source suffix rather than the object suffix.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.misc-tests/outputs.exp: New.\n\t* gcc.misc-tests/outputs-0.c: New.\n\t* gcc.misc-tests/outputs-1.c: New.\n\t* gcc.misc-tests/outputs-2.c: New.\n\t* lib/gcc-defs.exp (gcc_adjusted_linker_flags): New.\n\t(gcc_adjust_linker_flags): New.\n\t(dg-additional-files-options): Call it.  Pass -dumpbase \"\"\n\twhen there are additional sources.\n\t* lib/profopt.exp (profopt-execute): Pass the executable\n\tsuffix with -dumpbase-ext.\n\t* lib/scandump.exp (dump-base): Mention -dumpbase \"\" use.\n\t* lib/scanltranstree.exp: Adjust dump suffix expectation.\n\t* lib/scanwpaipa.exp: Likewise.", "tree": {"sha": "b7d3f5e261169b8780d70b5a4c606258a81868f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7d3f5e261169b8780d70b5a4c606258a81868f2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1dedc12d186a110854537e1279b4e6c29f2df35a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dedc12d186a110854537e1279b4e6c29f2df35a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dedc12d186a110854537e1279b4e6c29f2df35a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dedc12d186a110854537e1279b4e6c29f2df35a/comments", "author": null, "committer": null, "parents": [{"sha": "4945b4c2c8628bdd61b348ea5bd1f9b72537a36e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4945b4c2c8628bdd61b348ea5bd1f9b72537a36e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4945b4c2c8628bdd61b348ea5bd1f9b72537a36e"}], "stats": {"total": 2545, "additions": 2126, "deletions": 419}, "files": [{"sha": "cf80ae32695f6ea646cd8f4b6539d1a85ff66e63", "filename": "contrib/compare-debug", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dedc12d186a110854537e1279b4e6c29f2df35a/contrib%2Fcompare-debug", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dedc12d186a110854537e1279b4e6c29f2df35a/contrib%2Fcompare-debug", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fcompare-debug?ref=1dedc12d186a110854537e1279b4e6c29f2df35a", "patch": "@@ -2,7 +2,7 @@\n \n # Compare stripped copies of two given object files.\n \n-# Copyright (C) 2007, 2008, 2009, 2010, 2012 Free Software Foundation\n+# Copyright (C) 2007, 2008, 2009, 2010, 2012, 2020 Free Software Foundation\n # Originally by Alexandre Oliva <aoliva@redhat.com>\n \n # This file is part of GCC.\n@@ -183,8 +183,28 @@ $rm \"$1.$suf1\" \"$2.$suf2\"\n \n trap \"exit $status; exit\" 0 1 2 15\n \n-if test -f \"$1\".gkd || test -f \"$2\".gkd; then\n-  if cmp \"$1\".gkd \"$2\".gkd; then\n+# Replace the suffix in $1 and $2 with .*.gkd, compare them if a\n+# single file is found by the globbing.\n+base1=`echo \"$1\" | sed '$s,\\.[^.]*$,,'` gkd1=\n+for f in \"$base1\".*.gkd; do\n+  if test \"x$gkd1\" != x; then\n+    gkd1=\n+    break\n+  elif test -f \"$f\"; then\n+    gkd1=$f\n+  fi\n+done\n+base2=`echo \"$2\" | sed '$s,\\.[^.]*$,,'` gkd2=\n+for f in \"$base2\".*.gkd; do\n+  if test \"x$gkd2\" != x; then\n+    gkd2=\n+    break\n+  elif test -f \"$f\"; then\n+    gkd2=$f\n+  fi\n+done\n+if test \"x$gkd1\" != x || test \"x$gkd2\" != x; then\n+  if cmp \"${gkd1-/dev/null}\" \"${gkd2-/dev/null}\"; then\n     :\n   else\n     status=$?"}, {"sha": "12b7cf5ef9ab1757b9c59432c0dfccaba85b6a60", "filename": "gcc/ada/gcc-interface/lang-specs.h", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Fada%2Fgcc-interface%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Fada%2Fgcc-interface%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Flang-specs.h?ref=1dedc12d186a110854537e1279b4e6c29f2df35a", "patch": "@@ -34,17 +34,15 @@\n  %{!S:%{!c:%e-c or -S required for Ada}}\\\n  gnat1 %{I*} %{k8:-gnatk8} %{Wall:-gnatwa} %{w:-gnatws} %{!Q:-quiet}\\\n     %{nostdinc*} %{nostdlib*}\\\n-    -dumpbase %{.adb:%b.adb}%{.ads:%b.ads}%{!.adb:%{!.ads:%b.ada}}\\\n-    %{fcompare-debug-second:%:compare-debug-auxbase-opt(%b) -gnatd_A} \\\n-    %{!fcompare-debug-second:%{c|S:%{o*:-auxbase-strip %*}%{!o*:-auxbase %b}}%{!c:%{!S:-auxbase %b}}} \\\n-    %{O*} %{W*} %{w} %{p} %{pg:-p} %{d*} \\\n+    %{fcompare-debug-second:-gnatd_A} \\\n+    %{O*} %{W*} %{w} %{p} %{pg:-p} %{d*} %:dumps(%{!.adb:%{!.ads:.ada}}) \\\n     %{coverage:-fprofile-arcs -ftest-coverage} \"\n #if defined(TARGET_VXWORKS_RTP)\n    \"%{fRTS=rtp|fRTS=rtp-smp|fRTS=ravenscar-cert-rtp:-mrtp} \"\n #endif\n    \"%{gnatea:-gnatez} %{g*&m*&f*} \"\n    \"%1 %{!S:%{o*:%w%*-gnatO}} \\\n-    %i %{S:%W{o*}%{!o*:-o %b.s}} \\\n+    %i %{S:%W{o*}%{!o*:-o %w%b.s}} \\\n     %{gnatc*|gnats*: -o %j} %{-param*} \\\n     %{!gnatc*:%{!gnats*:%(invoke_as)}}\", 0, 0, 0},\n \n@@ -53,9 +51,7 @@\n  %{!c:%e-c required for gnat2why}\\\n  gnat1why %{I*} %{k8:-gnatk8} %{!Q:-quiet}\\\n     %{nostdinc*} %{nostdlib*}\\\n-    -dumpbase %{.adb:%b.adb}%{.ads:%b.ads}%{!.adb:%{!.ads:%b.ada}}\\\n-    %{o*:-auxbase-strip %*}%{!o*:-auxbase %b} \\\n-    %{a} %{d*} \\\n+    %{a} %{d*} %:dumps(%{!.adb:%{!.ads:.ada}}) \\\n     %{gnatea:-gnatez} %{g*&m*&f*} \\\n     %1 %{o*:%w%*-gnatO} \\\n     %i \\\n@@ -66,9 +62,7 @@\n  %{!c:%e-c required for gnat2scil}\\\n  gnat1scil %{I*} %{k8:-gnatk8} %{!Q:-quiet}\\\n     %{nostdinc*} %{nostdlib*}\\\n-    -dumpbase %{.adb:%b.adb}%{.ads:%b.ads}%{!.adb:%{!.ads:%b.ada}}\\\n-    %{o*:-auxbase-strip %*}%{!o*:-auxbase %b} \\\n-    %{a} %{d*} \\\n+    %{a} %{d*} %:dumps(%{!.adb:%{!.ads:.ada}}) \\\n     %{gnatea:-gnatez} %{g*&m*&f*} \\\n     %1 %{o*:%w%*-gnatO} \\\n     %i \\"}, {"sha": "b6f4e00f8e647d6d54c8159871682ecf3c35b0f6", "filename": "gcc/ada/switch.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Fada%2Fswitch.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Fada%2Fswitch.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch.adb?ref=1dedc12d186a110854537e1279b4e6c29f2df35a", "patch": "@@ -163,9 +163,9 @@ package body Switch is\n       return Is_Switch (Switch_Chars)\n         and then\n           (Switch_Chars (First .. Last) = \"-param\"        or else\n+           Switch_Chars (First .. Last) = \"dumpdir\"       or else\n            Switch_Chars (First .. Last) = \"dumpbase\"      or else\n-           Switch_Chars (First .. Last) = \"auxbase-strip\" or else\n-           Switch_Chars (First .. Last) = \"auxbase\");\n+           Switch_Chars (First .. Last) = \"dumpbase-ext\");\n    end Is_Internal_GCC_Switch;\n \n    ---------------"}, {"sha": "1b770bc11a96afd8ff21e5ddd95ee21322eb3d6e", "filename": "gcc/common.opt", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=1dedc12d186a110854537e1279b4e6c29f2df35a", "patch": "@@ -188,6 +188,12 @@ const char *main_input_basename\n Variable\n int main_input_baselength\n \n+; The base name used for auxiliary output files.\n+; dump_base_name minus dump_base_ext.\n+\n+Variable\n+const char *aux_base_name\n+\n ; Which options have been printed by --help.\n Variable\n char *help_printed\n@@ -252,10 +258,13 @@ Common Separate Alias(d)\n Common Joined Alias(d)\n \n -dumpbase\n-Common Separate Alias(dumpbase)\n+Driver Common Separate Alias(dumpbase)\n+\n+-dumpbase-ext\n+Driver Common Separate Alias(dumpbase-ext)\n \n -dumpdir\n-Common Separate Alias(dumpdir)\n+Driver Common Separate Alias(dumpdir)\n \n -entry\n Driver Separate Alias(e)\n@@ -852,12 +861,6 @@ Common Separate Var(aux_info_file_name)\n aux-info=\n Common Joined Alias(aux-info)\n \n-auxbase\n-Common Separate RejectDriver Var(aux_base_name)\n-\n-auxbase-strip\n-Common Separate RejectDriver\n-\n coverage\n Driver\n \n@@ -869,11 +872,15 @@ Common Joined\n -d<letters>\tEnable dumps from specific passes of the compiler.\n \n dumpbase\n-Common Separate Var(dump_base_name)\n+Driver Common Separate Var(dump_base_name)\n -dumpbase <file>\tSet the file basename to be used for dumps.\n \n+dumpbase-ext\n+Driver Common Separate Var(dump_base_ext)\n+-dumpbase-ext .<ext>    Drop a trailing .<ext> from the dump basename to name auxiliary output files.\n+\n dumpdir\n-Common Separate Var(dump_dir_name)\n+Driver Common Separate Var(dump_dir_name)\n -dumpdir <dir>\tSet the directory name to be used for dumps.\n \n dumpmachine"}, {"sha": "78c2f500c900e7b1b7d501edec3a6ed6d18f03ac", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 338, "deletions": 47, "changes": 385, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=1dedc12d186a110854537e1279b4e6c29f2df35a", "patch": "@@ -185,7 +185,9 @@ in the following sections.\n @table @emph\n @item Overall Options\n @xref{Overall Options,,Options Controlling the Kind of Output}.\n-@gccoptlist{-c  -S  -E  -o @var{file}  -x @var{language}  @gol\n+@gccoptlist{-c  -S  -E  -o @var{file} @gol\n+-dumpbase @var{dumpbase}  -dumpbase-ext @var{auxdropsuf} @gol\n+-dumpdir @var{dumppfx}  -x @var{language}  @gol\n -v  -###  --help@r{[}=@var{class}@r{[},@dots{}@r{]]}  --target-help  --version @gol\n -pass-exit-codes  -pipe  -specs=@var{file}  -wrapper  @gol\n @@@var{file}  -ffile-prefix-map=@var{old}=@var{new}  @gol\n@@ -1602,9 +1604,9 @@ Input files that don't require preprocessing are ignored.\n @cindex output file option\n @item -o @var{file}\n @opindex o\n-Place output in file @var{file}.  This applies to whatever\n-sort of output is being produced, whether it be an executable file,\n-an object file, an assembler file or preprocessed C code.\n+Place the primary output in file @var{file}.  This applies to whatever\n+sort of output is being produced, whether it be an executable file, an\n+object file, an assembler file or preprocessed C code.\n \n If @option{-o} is not specified, the default is to put an executable\n file in @file{a.out}, the object file for\n@@ -1613,6 +1615,314 @@ assembler file in @file{@var{source}.s}, a precompiled header file in\n @file{@var{source}.@var{suffix}.gch}, and all preprocessed C source on\n standard output.\n \n+Though @option{-o} names only the primary output, it also affects the\n+naming of auxiliary and dump outputs.  See the examples below.  Unless\n+overridden, both auxiliary outputs and dump outputs are placed in the\n+same directory as the primary output.  In auxiliary outputs, the suffix\n+of the input file is replaced with that of the auxiliary output file\n+type; in dump outputs, the suffix of the dump file is appended to the\n+input file suffix.  In compilation commands, the base name of both\n+auxiliary and dump outputs is that of the primary output; in compile and\n+link commands, the primary output name, minus the executable suffix, is\n+combined with the input file name.  If both share the same base name,\n+disregarding the suffix, the result of the combination is that base\n+name, otherwise, they are concatenated, separated by a dash.\n+\n+@smallexample\n+gcc -c foo.c ...\n+@end smallexample\n+\n+will use @file{foo.o} as the primary output, and place aux outputs and\n+dumps next to it, e.g., aux file @file{foo.dwo} for\n+@option{-gsplit-dwarf}, and dump file @file{foo.c.???r.final} for\n+@option{-fdump-rtl-final}.\n+\n+If a non-linker output file is explicitly specified, aux and dump files\n+by default take the same base name:\n+\n+@smallexample\n+gcc -c foo.c -o dir/foobar.o ...\n+@end smallexample\n+\n+will name aux outputs @file{dir/foobar.*} and dump outputs\n+@file{dir/foobar.c.*}.\n+\n+A linker output will instead prefix aux and dump outputs:\n+\n+@smallexample\n+gcc foo.c bar.c -o dir/foobar ...\n+@end smallexample\n+\n+will generally name aux outputs @file{dir/foobar-foo.*} and\n+@file{dir/foobar-bar.*}, and dump outputs @file{dir/foobar-foo.c.*} and\n+@file{dir/foobar-bar.c.*}.\n+\n+The one exception to the above is when the executable shares the base\n+name with the single input:\n+\n+@smallexample\n+gcc foo.c -o dir/foo ...\n+@end smallexample\n+\n+in which case aux outputs are named @file{dir/foo.*} and dump outputs\n+named @file{dir/foo.c.*}.\n+\n+The location and the names of auxiliary and dump outputs can be adjusted\n+by the options @option{-dumpbase}, @option{-dumpbase-ext},\n+@option{-dumpdir}, @option{-save-temps=cwd}, and\n+@option{-save-temps=obj}.\n+\n+\n+@item -dumpbase @var{dumpbase}\n+@opindex dumpbase\n+This option sets the base name for auxiliary and dump output files.  It\n+does not affect the name of the primary output file.  Intermediate\n+outputs, when preserved, are not regarded as primary outputs, but as\n+auxiliary outputs:\n+\n+@smallexample\n+gcc -save-temps -S foo.c\n+@end smallexample\n+\n+saves the (no longer) temporary preprocessed file in @file{foo.i}, and\n+then compiles to the (implied) output file @file{foo.s}, whereas:\n+\n+@smallexample\n+gcc -save-temps -dumpbase save-foo -c foo.c\n+@end smallexample\n+\n+preprocesses to in @file{save-foo.i}, compiles to @file{save-foo.s} (now\n+an intermediate, thus auxiliary output), and then assembles to the\n+(implied) output file @file{foo.o}.\n+\n+Absent this option, dump and aux files take their names from the input\n+file, or from the (non-linker) output file, if one is explicitly\n+specified: dump output files (e.g. those requested by @option{-fdump-*}\n+options) with the input name suffix, and aux output files (those\n+requested by other non-dump options, e.g. @code{-save-temps},\n+@code{-gsplit-dwarf}, @code{-fcallgraph-info}) without it.\n+\n+Similar suffix differentiation of dump and aux outputs can be attained\n+for explicitly-given @option{-dumpbase basename.suf} by also specifying\n+@option{-dumpbase-ext .suf}.\n+\n+If @var{dumpbase} is explicitly specified with any directory component,\n+any @var{dumppfx} specification (e.g. @option{-dumpdir} or\n+@option{-save-temps=*}) is ignored, and instead of appending to it,\n+@var{dumpbase} fully overrides it:\n+\n+@smallexample\n+gcc foo.c -c -o dir/foo.o -dumpbase alt/foo \\\n+  -dumpdir pfx- -save-temps=cwd ...\n+@end smallexample\n+\n+creates auxiliary and dump outputs named @file{alt/foo.*}, disregarding\n+@file{dir/} in @option{-o}, the @file{./} prefix implied by\n+@option{-save-temps=cwd}, and @file{pfx-} in @option{-dumpdir}.\n+\n+When @option{-dumpbase} is specified in a command that compiles multiple\n+inputs, or that compiles and then links, it may be combined with\n+@var{dumppfx}, as specified under @option{-dumpdir}.  Then, each input\n+file is compiled using the combined @var{dumppfx}, and default values\n+for @var{dumpbase} and @var{auxdropsuf} are computed for each input\n+file:\n+\n+@smallexample\n+gcc foo.c bar.c -c -dumpbase main ...\n+@end smallexample\n+\n+creates @file{foo.o} and @file{bar.o} as primary outputs, and avoids\n+overwriting the auxiliary and dump outputs by using the @var{dumpbase}\n+as a prefix, creating auxiliary and dump outputs named @file{main-foo.*}\n+and @file{main-bar.*}.\n+\n+An empty string specified as @var{dumpbase} avoids the influence of the\n+output basename in the naming of auxiliary and dump outputs during\n+compilation, computing default values :\n+\n+@smallexample\n+gcc -c foo.c -o dir/foobar.o -dumpbase '' ...\n+@end smallexample\n+\n+will name aux outputs @file{dir/foo.*} and dump outputs\n+@file{dir/foo.c.*}.  Note how their basenames are taken from the input\n+name, but the directory still defaults to that of the output.\n+\n+The empty-string dumpbase does not prevent the use of the output\n+basename for outputs during linking:\n+\n+@smallexample\n+gcc foo.c bar.c -o dir/foobar -dumpbase '' -flto ...\n+@end smallexample\n+\n+The compilation of the source files will name auxiliary outputs\n+@file{dir/foo.*} and @file{dir/bar.*}, and dump outputs\n+@file{dir/foo.c.*} and @file{dir/bar.c.*}.  LTO recompilation during\n+linking will use @file{dir/foobar.} as the prefix for dumps and\n+auxiliary files.\n+\n+\n+@item -dumpbase-ext @var{auxdropsuf}\n+@opindex dumpbase-ext\n+When forming the name of an auxiliary (but not a dump) output file, drop\n+trailing @var{auxdropsuf} from @var{dumpbase} before appending any\n+suffixes.  If not specified, this option defaults to the suffix of a\n+default @var{dumpbase}, i.e., the suffix of the input file when\n+@option{-dumpbase} is not present in the command line, or @var{dumpbase}\n+is combined with @var{dumppfx}.\n+\n+@smallexample\n+gcc foo.c -c -o dir/foo.o -dumpbase x-foo.c -dumpbase-ext .c ...\n+@end smallexample\n+\n+creates @file{dir/foo.o} as the main output, and generates auxiliary\n+outputs in @file{dir/x-foo.*}, taking the location of the primary\n+output, and dropping the @file{.c} suffix from the @var{dumpbase}.  Dump\n+outputs retain the suffix: @file{dir/x-foo.c.*}.\n+\n+This option is disregarded if it does not match the suffix of a\n+specified @var{dumpbase}, except as an alternative to the executable\n+suffix when appending the linker output base name to @var{dumppfx}, as\n+specified below:\n+\n+@smallexample\n+gcc foo.c bar.c -o main.out -dumpbase-ext .out ...\n+@end smallexample\n+\n+creates @file{main.out} as the primary output, and avoids overwriting\n+the auxiliary and dump outputs by using the executable name minus\n+@var{auxdropsuf} as a prefix, creating auxiliary outputs named\n+@file{main-foo.*} and @file{main-bar.*} and dump outputs named\n+@file{main-foo.c.*} and @file{main-bar.c.*}.\n+\n+\n+@item -dumpdir @var{dumppfx}\n+@opindex dumpdir\n+When forming the name of an auxiliary or dump output file, use\n+@var{dumppfx} as a prefix:\n+\n+@smallexample\n+gcc -dumpdir pfx- -c foo.c ...\n+@end smallexample\n+\n+creates @file{foo.o} as the primary output, and auxiliary outputs named\n+@file{pfx-foo.*}, combining the given @var{dumppfx} with the default\n+@var{dumpbase} derived from the default primary output, derived in turn\n+from the input name.  Dump outputs also take the input name suffix:\n+@file{pfx-foo.c.*}.\n+\n+If @var{dumppfx} is to be used as a directory name, it must end with a\n+directory separator:\n+\n+@smallexample\n+gcc -dumpdir dir/ -c foo.c -o obj/bar.o ...\n+@end smallexample\n+\n+creates @file{obj/bar.o} as the primary output, and auxiliary outputs\n+named @file{dir/bar.*}, combining the given @var{dumppfx} with the\n+default @var{dumpbase} derived from the primary output name.  Dump\n+outputs also take the input name suffix: @file{dir/bar.c.*}.\n+\n+It defaults to the location of the output file; options\n+@option{-save-temps=cwd} and @option{-save-temps=obj} override this\n+default, just like an explicit @option{-dumpdir} option.  In case\n+multiple such options are given, the last one prevails:\n+\n+@smallexample\n+gcc -dumpdir pfx- -c foo.c -save-temps=obj ...\n+@end smallexample\n+\n+outputs @file{foo.o}, with auxiliary outputs named @file{foo.*} because\n+@option{-save-temps=*} overrides the @var{dumppfx} given by the earlier\n+@option{-dumpdir} option.  It does not matter that @option{=obj} is the\n+default for @option{-save-temps}, nor that the output directory is\n+implicitly the current directory.  Dump outputs are named\n+@file{foo.c.*}.\n+\n+When compiling from multiple input files, if @option{-dumpbase} is\n+specified, @var{dumpbase}, minus a @var{auxdropsuf} suffix, and a dash\n+are appended to (or override, if containing any directory components) an\n+explicit or defaulted @var{dumppfx}, so that each of the multiple\n+compilations gets differently-named aux and dump outputs.\n+\n+@smallexample\n+gcc foo.c bar.c -c -dumpdir dir/pfx- -dumpbase main ...\n+@end smallexample\n+\n+outputs auxiliary dumps to @file{dir/pfx-main-foo.*} and\n+@file{dir/pfx-main-bar.*}, appending @var{dumpbase}- to @var{dumppfx}.\n+Dump outputs retain the input file suffix: @file{dir/pfx-main-foo.c.*}\n+and @file{dir/pfx-main-bar.c.*}, respectively.  Contrast with the\n+single-input compilation:\n+\n+@smallexample\n+gcc foo.c -c -dumpdir dir/pfx- -dumpbase main ...\n+@end smallexample\n+\n+that, applying @option{-dumpbase} to a single source, does not compute\n+and append a separate @var{dumpbase} per input file.  Its auxiliary and\n+dump outputs go in @file{dir/pfx-main.*}.\n+\n+When compiling and then linking from multiple input files, a defaulted\n+or explicitly specified @var{dumppfx} also undergoes the @var{dumpbase}-\n+transformation above (e.g. the compilation of @file{foo.c} and\n+@file{bar.c} above, but without @option{-c}).  If neither\n+@option{-dumpdir} nor @option{-dumpbase} are given, the linker output\n+base name, minus @var{auxdropsuf}, if specified, or the executable\n+suffix otherwise, plus a dash is appended to the default @var{dumppfx}\n+instead.  Note, however, that unlike earlier cases of linking:\n+\n+@smallexample\n+gcc foo.c bar.c -dumpdir dir/pfx- -o main ...\n+@end smallexample\n+\n+does not append the output name @file{main} to @var{dumppfx}, because\n+@option{-dumpdir} is explicitly specified.  The goal is that the\n+explicitly-specified @var{dumppfx} may contain the specified output name\n+as part of the prefix, if desired; only an explicitly-specified\n+@option{-dumpbase} would be combined with it, in order to avoid simply\n+discarding a meaningful option.\n+\n+When compiling and then linking from a single input file, the linker\n+output base name will only be appended to the default @var{dumppfx} as\n+above if it does not share the base name with the single input file\n+name.  This has been covered in single-input linking cases above, but\n+not with an explicit @option{-dumpdir} that inhibits the combination,\n+even if overridden by @option{-save-temps=*}:\n+\n+@smallexample\n+gcc foo.c -dumpdir alt/pfx- -o dir/main.exe -save-temps=cwd ...\n+@end smallexample\n+\n+Auxiliary outputs are named @file{foo.*}, and dump outputs\n+@file{foo.c.*}, in the current working directory as ultimately requested\n+by @option{-save-temps=cwd}.\n+\n+Summing it all up for an intuitive though slightly imprecise data flow:\n+the primary output name is broken into a directory part and a basename\n+part; @var{dumppfx} is set to the former, unless overridden by\n+@option{-dumpdir} or @option{-save-temps=*}, and @var{dumpbase} is set\n+to the latter, unless overriden by @option{-dumpbase}.  If there are\n+multiple inputs or linking, this @var{dumpbase} may be combined with\n+@var{dumppfx} and taken from each input file.  Auxiliary output names\n+for each input are formed by combining @var{dumppfx}, @var{dumpbase}\n+minus suffix, and the auxiliary output suffix; dump output names are\n+only different in that the suffix from @var{dumpbase} is retained.\n+\n+When it comes to auxiliary and dump outputs created during LTO\n+recompilation, a combination of @var{dumppfx} and @var{dumpbase}, as\n+given or as derived from the linker output name but not from inputs,\n+even in cases in which this combination would not otherwise be used as\n+such, is passed down with a trailing period replacing the compiler-added\n+dash, if any, as a @option{-dumpdir} option to @command{lto-wrapper};\n+being involved in linking, this program does not normally get any\n+@option{-dumpbase} and @option{-dumpbase-ext}, and it ignores them.\n+\n+When running sub-compilers, @command{lto-wrapper} appends LTO stage\n+names to the received @var{dumppfx}, ensures it contains a directory\n+component so that it overrides any @option{-dumpdir}, and passes that as\n+@option{-dumpbase} to sub-compilers.\n+\n @item -v\n @opindex v\n Print (on standard error output) the commands executed to run the stages\n@@ -16279,54 +16589,28 @@ computing CRC32).\n The @var{string} should be different for every file you compile.\n \n @item -save-temps\n-@itemx -save-temps=cwd\n @opindex save-temps\n-Store the usual ``temporary'' intermediate files permanently; place them\n-in the current directory and name them based on the source file.  Thus,\n-compiling @file{foo.c} with @option{-c -save-temps} produces files\n-@file{foo.i} and @file{foo.s}, as well as @file{foo.o}.  This creates a\n-preprocessed @file{foo.i} output file even though the compiler now\n-normally uses an integrated preprocessor.\n+Store the usual ``temporary'' intermediate files permanently; name them\n+as auxiliary output files, as specified described under\n+@option{-dumpbase} and @option{-dumpdir}.\n \n When used in combination with the @option{-x} command-line option,\n-@option{-save-temps} is sensible enough to avoid over writing an\n+@option{-save-temps} is sensible enough to avoid overwriting an\n input source file with the same extension as an intermediate file.\n The corresponding intermediate file may be obtained by renaming the\n source file before using @option{-save-temps}.\n \n-If you invoke GCC in parallel, compiling several different source\n-files that share a common base name in different subdirectories or the\n-same source file compiled for multiple output destinations, it is\n-likely that the different parallel compilers will interfere with each\n-other, and overwrite the temporary files.  For instance:\n-\n-@smallexample\n-gcc -save-temps -o outdir1/foo.o indir1/foo.c&\n-gcc -save-temps -o outdir2/foo.o indir2/foo.c&\n-@end smallexample\n-\n-may result in @file{foo.i} and @file{foo.o} being written to\n-simultaneously by both compilers.\n+@item -save-temps=cwd\n+@opindex save-temps=cwd\n+Equivalent to @option{-save-temps -dumpdir ./}.\n \n @item -save-temps=obj\n @opindex save-temps=obj\n-Store the usual ``temporary'' intermediate files permanently.  If the\n-@option{-o} option is used, the temporary files are based on the\n-object file.  If the @option{-o} option is not used, the\n-@option{-save-temps=obj} switch behaves like @option{-save-temps}.\n-\n-For example:\n-\n-@smallexample\n-gcc -save-temps=obj -c foo.c\n-gcc -save-temps=obj -c bar.c -o dir/xbar.o\n-gcc -save-temps=obj foobar.c -o dir2/yfoobar\n-@end smallexample\n-\n-@noindent\n-creates @file{foo.i}, @file{foo.s}, @file{dir/xbar.i},\n-@file{dir/xbar.s}, @file{dir2/yfoobar.i}, @file{dir2/yfoobar.s}, and\n-@file{dir2/yfoobar.o}.\n+Equivalent to @option{-save-temps -dumpdir @file{outdir/}}, where\n+@file{outdir/} is the directory of the output file specified after the\n+@option{-o} option, including any directory separators.  If the\n+@option{-o} option is not used, the @option{-save-temps=obj} switch\n+behaves like @option{-save-temps=cwd}.\n \n @item -time@r{[}=@var{file}@r{]}\n @opindex time\n@@ -16363,7 +16647,7 @@ can later tell what file was being compiled, and with which options.\n Dump the final internal representation (RTL) to @var{file}.  If the\n optional argument is omitted (or if @var{file} is @code{.}), the name\n of the dump file is determined by appending @code{.gkd} to the\n-compilation output file name.\n+dump base name, see @option{-dumpbase}.\n \n @item -fcompare-debug@r{[}=@var{opts}@r{]}\n @opindex fcompare-debug\n@@ -30630,17 +30914,24 @@ together or combine them with constant text in a single argument.\n @item %%\n Substitute one @samp{%} into the program name or argument.\n \n+@item %\"\n+Substitute an empty argument.\n+\n @item %i\n Substitute the name of the input file being processed.\n \n @item %b\n-Substitute the basename of the input file being processed.\n-This is the substring up to (and not including) the last period\n-and not including the directory.\n+Substitute the basename for outputs related with the input file being\n+processed.  This is often the substring up to (and not including) the\n+last period and not including the directory but, unless %w is active, it\n+expands to the basename for auxiliary outputs, which may be influenced\n+by an explicit output name, and by various other options that control\n+how auxiliary outputs are named.\n \n @item %B\n This is the same as @samp{%b}, but include the file suffix (text after\n-the last period).\n+the last period).  Without %w, it expands to the basename for dump\n+outputs.\n \n @item %d\n Marks the argument containing or following the @samp{%d} as a"}, {"sha": "9deca031fc258768b3c094e6df9566390b7c3ebf", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=1dedc12d186a110854537e1279b4e6c29f2df35a", "patch": "@@ -24351,9 +24351,8 @@ gen_producer_string (void)\n       case OPT_o:\n       case OPT_d:\n       case OPT_dumpbase:\n+      case OPT_dumpbase_ext:\n       case OPT_dumpdir:\n-      case OPT_auxbase:\n-      case OPT_auxbase_strip:\n       case OPT_quiet:\n       case OPT_version:\n       case OPT_v:"}, {"sha": "d844fa93115eef1d50187f809c309227006356fe", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=1dedc12d186a110854537e1279b4e6c29f2df35a", "patch": "@@ -838,8 +838,8 @@ gfc_get_option_string (void)\n         case OPT_o:\n         case OPT_d:\n         case OPT_dumpbase:\n+        case OPT_dumpbase_ext:\n         case OPT_dumpdir:\n-        case OPT_auxbase:\n         case OPT_quiet:\n         case OPT_version:\n         case OPT_fintrinsic_modules_path:\n@@ -864,8 +864,8 @@ gfc_get_option_string (void)\n         case OPT_o:\n         case OPT_d:\n         case OPT_dumpbase:\n+        case OPT_dumpbase_ext:\n         case OPT_dumpdir:\n-        case OPT_auxbase:\n         case OPT_quiet:\n         case OPT_version:\n         case OPT_fintrinsic_modules_path:"}, {"sha": "8c851d79157b4c14c9716afb67d80e24c6635022", "filename": "gcc/gcc.c", "status": "modified", "additions": 765, "deletions": 173, "changes": 938, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=1dedc12d186a110854537e1279b4e6c29f2df35a", "patch": "@@ -270,12 +270,36 @@ static const char *target_sysroot_hdrs_suffix = 0;\n static enum save_temps {\n   SAVE_TEMPS_NONE,\t\t/* no -save-temps */\n   SAVE_TEMPS_CWD,\t\t/* -save-temps in current directory */\n+  SAVE_TEMPS_DUMP,              /* -save-temps in dumpdir */\n   SAVE_TEMPS_OBJ\t\t/* -save-temps in object directory */\n } save_temps_flag;\n \n-/* Output file to use to get the object directory for -save-temps=obj  */\n-static char *save_temps_prefix = 0;\n-static size_t save_temps_length = 0;\n+/* Set this iff the dumppfx implied by a -save-temps=* option is to\n+   override a -dumpdir option, if any.  */\n+static bool save_temps_overrides_dumpdir = false;\n+\n+/* -dumpdir, -dumpbase and -dumpbase-ext flags passed in, possibly\n+   rearranged as they are to be passed down, e.g., dumpbase and\n+   dumpbase_ext may be cleared if integrated with dumpdir or\n+   dropped.  */\n+static char *dumpdir, *dumpbase, *dumpbase_ext;\n+\n+/* Usually the length of the string in dumpdir.  However, during\n+   linking, it may be shortened to omit a driver-added trailing dash,\n+   by then replaced with a trailing period, that is still to be passed\n+   to sub-processes in -dumpdir, but not to be generally used in spec\n+   filename expansions.  See maybe_run_linker.  */\n+static size_t dumpdir_length = 0;\n+\n+/* Set if the last character in dumpdir is (or was) a dash that the\n+   driver added to dumpdir after dumpbase or linker output name.  */\n+static bool dumpdir_trailing_dash_added = false;\n+\n+/* Basename of dump and aux outputs, computed from dumpbase (given or\n+   derived from output name), to override input_basename in non-%w %b\n+   et al.  */\n+static char *outbase;\n+static size_t outbase_length = 0;\n \n /* The compiler version.  */\n \n@@ -402,13 +426,16 @@ static const char *find_plugindir_spec_function (int, const char **);\n static const char *print_asm_header_spec_function (int, const char **);\n static const char *compare_debug_dump_opt_spec_function (int, const char **);\n static const char *compare_debug_self_opt_spec_function (int, const char **);\n-static const char *compare_debug_auxbase_opt_spec_function (int, const char **);\n static const char *pass_through_libs_spec_func (int, const char **);\n-static const char *replace_extension_spec_func (int, const char **);\n+static const char *dumps_spec_func (int, const char **);\n static const char *greater_than_spec_func (int, const char **);\n static const char *debug_level_greater_than_spec_func (int, const char **);\n static const char *find_fortran_preinclude_file (int, const char **);\n static char *convert_white_space (char *);\n+static char *quote_spec (char *);\n+static char *quote_spec_arg (char *);\n+static bool not_actual_file_p (const char *);\n+\n \f\n /* The Specs Language\n \n@@ -426,12 +453,19 @@ expanding these sequences; therefore, you can concatenate them together\n or with constant text in a single argument.\n \n  %%\tsubstitute one % into the program name or argument.\n+ %\"     substitute an empty argument.\n  %i     substitute the name of the input file being processed.\n- %b     substitute the basename of the input file being processed.\n-\tThis is the substring up to (and not including) the last period\n-\tand not including the directory unless -save-temps was specified\n-\tto put temporaries in a different location.\n- %B\tsame as %b, but include the file suffix (text after the last period).\n+ %b     substitute the basename for outputs related with the input file\n+\tbeing processed.  This is often a substring of the input file name,\n+\tup to (and not including) the last period but, unless %w is active,\n+\tit is affected by the directory selected by -save-temps=*, by\n+\t-dumpdir, and, in case of multiple compilations, even by -dumpbase\n+\tand -dumpbase-ext and, in case of linking, by the linker output\n+\tname.  When %w is active, it derives the main output name only from\n+\tthe input file base name; when it is not, it names aux/dump output\n+\tfile.\n+ %B\tsame as %b, but include the input file suffix (text after the last\n+\tperiod).\n  %gSUFFIX\n \tsubstitute a file name that has suffix SUFFIX and is chosen\n \tonce per compilation, and mark the argument a la %d.  To reduce\n@@ -641,10 +675,10 @@ proper position among the other output files.  */\n #define ASM_FINAL_SPEC \\\n   \"%{gsplit-dwarf: \\n\\\n        objcopy --extract-dwo \\\n-\t %{c:%{o*:%*}%{!o*:%b%O}}%{!c:%U%O} \\\n-\t %{c:%{o*:%:replace-extension(%{o*:%*} .dwo)}%{!o*:%b.dwo}}%{!c:%b.dwo} \\n\\\n+\t %{c:%{o*:%*}%{!o*:%w%b%O}}%{!c:%U%O} \\\n+\t %b.dwo \\n\\\n        objcopy --strip-dwo \\\n-\t %{c:%{o*:%*}%{!o*:%b%O}}%{!c:%U%O} \\\n+\t %{c:%{o*:%*}%{!o*:%w%b%O}}%{!c:%U%O} \\\n     }\"\n #endif\n \n@@ -1144,22 +1178,20 @@ static const char *cpp_options =\n \n /* This contains cpp options which are not passed when the preprocessor\n    output will be used by another program.  */\n-static const char *cpp_debug_options = \"%{d*}\";\n+static const char *cpp_debug_options = \"%<dumpdir %<dumpbase %<dumpbase-ext %{d*} %:dumps()\";\n \n /* NB: This is shared amongst all front-ends, except for Ada.  */\n static const char *cc1_options =\n \"%{pg:%{fomit-frame-pointer:%e-pg and -fomit-frame-pointer are incompatible}}\\\n  %{!iplugindir*:%{fplugin*:%:find-plugindir()}}\\\n- %1 %{!Q:-quiet} %{!dumpbase:-dumpbase %B} %{d*} %{m*} %{aux-info*}\\\n- %{fcompare-debug-second:%:compare-debug-auxbase-opt(%b)} \\\n- %{!fcompare-debug-second:%{c|S:%{o*:-auxbase-strip %*}%{!o*:-auxbase %b}}}%{!c:%{!S:-auxbase %b}} \\\n+ %1 %{!Q:-quiet} %(cpp_debug_options) %{m*} %{aux-info*}\\\n  %{g*} %{O*} %{W*&pedantic*} %{w} %{std*&ansi&trigraphs}\\\n  %{v:-version} %{pg:-p} %{p} %{f*} %{undef}\\\n  %{Qn:-fno-ident} %{Qy:} %{-help:--help}\\\n  %{-target-help:--target-help}\\\n  %{-version:--version}\\\n  %{-help=*:--help=%*}\\\n- %{!fsyntax-only:%{S:%W{o*}%{!o*:-o %b.s}}}\\\n+ %{!fsyntax-only:%{S:%W{o*}%{!o*:-o %w%b.s}}}\\\n  %{fsyntax-only:-o %j} %{-param*}\\\n  %{coverage:-fprofile-arcs -ftest-coverage}\\\n  %{fprofile-arcs|fprofile-generate*|coverage:\\\n@@ -1647,9 +1679,8 @@ static const struct spec_function static_spec_functions[] =\n   { \"print-asm-header\",\t\tprint_asm_header_spec_function },\n   { \"compare-debug-dump-opt\",\tcompare_debug_dump_opt_spec_function },\n   { \"compare-debug-self-opt\",\tcompare_debug_self_opt_spec_function },\n-  { \"compare-debug-auxbase-opt\", compare_debug_auxbase_opt_spec_function },\n   { \"pass-through-libs\",\tpass_through_libs_spec_func },\n-  { \"replace-extension\",\treplace_extension_spec_func },\n+  { \"dumps\",                    dumps_spec_func },\n   { \"gt\",\t\t\tgreater_than_spec_func },\n   { \"debug-level-gt\",\t\tdebug_level_greater_than_spec_func },\n   { \"fortran-preinclude-file\",\tfind_fortran_preinclude_file},\n@@ -4145,7 +4176,8 @@ driver_handle_option (struct gcc_options *opts,\n       return true;\n \n     case OPT_save_temps:\n-      save_temps_flag = SAVE_TEMPS_CWD;\n+      if (!save_temps_flag)\n+\tsave_temps_flag = SAVE_TEMPS_DUMP;\n       validated = true;\n       break;\n \n@@ -4158,6 +4190,23 @@ driver_handle_option (struct gcc_options *opts,\n       else\n \tfatal_error (input_location, \"%qs is an unknown %<-save-temps%> option\",\n \t\t     decoded->orig_option_with_args_text);\n+      save_temps_overrides_dumpdir = true;\n+      break;\n+\n+    case OPT_dumpdir:\n+      free (dumpdir);\n+      dumpdir = xstrdup (arg);\n+      save_temps_overrides_dumpdir = false;\n+      break;\n+\n+    case OPT_dumpbase:\n+      free (dumpbase);\n+      dumpbase = xstrdup (arg);\n+      break;\n+\n+    case OPT_dumpbase_ext:\n+      free (dumpbase_ext);\n+      dumpbase_ext = xstrdup (arg);\n       break;\n \n     case OPT_no_canonical_prefixes:\n@@ -4264,8 +4313,6 @@ driver_handle_option (struct gcc_options *opts,\n       arg = convert_filename (arg, ! have_c, 0);\n #endif\n       output_file = arg;\n-      /* Save the output name in case -save-temps=obj was used.  */\n-      save_temps_prefix = xstrdup (arg);\n       /* On some systems, ld cannot handle \"-o\" without a space.  So\n \t split the option from its argument.  */\n       save_switch (\"-o\", 1, &arg, validated, true);\n@@ -4308,6 +4355,19 @@ driver_handle_option (struct gcc_options *opts,\n   return true;\n }\n \n+/* Return true if F2 is F1 followed by a single suffix, i.e., by a\n+   period and additional characters other than a period.  */\n+\n+static inline bool\n+adds_single_suffix_p (const char *f2, const char *f1)\n+{\n+  size_t len = strlen (f1);\n+\n+  return (strncmp (f1, f2, len) == 0\n+\t  && f2[len] == '.'\n+\t  && strchr (f2 + len + 1, '.') == NULL);\n+}\n+\n /* Put the driver's standard set of option handlers in *HANDLERS.  */\n \n static void\n@@ -4324,6 +4384,32 @@ set_option_handlers (struct cl_option_handlers *handlers)\n   handlers->handlers[2].mask = CL_TARGET;\n }\n \n+\n+/* Return the index into infiles for the single non-library\n+   non-lto-wpa input file, -1 if there isn't any, or -2 if there is\n+   more than one.  */\n+static inline int\n+single_input_file_index ()\n+{\n+  int ret = -1;\n+\n+  for (int i = 0; i < n_infiles; i++)\n+    {\n+      if (infiles[i].language\n+\t  && (infiles[i].language[0] == '*'\n+\t      || (flag_wpa\n+\t\t  && strcmp (infiles[i].language, \"lto\") == 0)))\n+\tcontinue;\n+\n+      if (ret != -1)\n+\treturn -2;\n+\n+      ret = i;\n+    }\n+\n+  return ret;\n+}\n+\n /* Create the vector `switches' and its contents.\n    Store its length in `n_switches'.  */\n \n@@ -4636,23 +4722,371 @@ process_command (unsigned int decoded_options_count,\n   if (output_file != NULL && output_file[0] == '\\0')\n     fatal_error (input_location, \"output filename may not be empty\");\n \n+  /* -dumpdir and -save-temps=* both specify the location of aux/dump\n+     outputs; the one that appears last prevails.  When compiling\n+     multiple sources, an explicit dumpbase (minus -ext) may be\n+     combined with an explicit or implicit dumpdir, whereas when\n+     linking, a specified or implied link output name (minus\n+     extension) may be combined with a prevailing -save-temps=* or an\n+     otherwise implied dumpdir, but not override a prevailing\n+     -dumpdir.  Primary outputs (e.g., linker output when linking\n+     without -o, or .i, .s or .o outputs when processing multiple\n+     inputs with -E, -S or -c, respectively) are NOT affected by these\n+     -save-temps=/-dump* options, always landing in the current\n+     directory and with the same basename as the input when an output\n+     name is not given, but when they're intermediate outputs, they\n+     are named like other aux outputs, so the options affect their\n+     location and name.\n+\n+     Here are some examples.  There are several more in the\n+     documentation of -o and -dump*, and some quite exhaustive tests\n+     in gcc.misc-tests/outputs.exp.\n+\n+     When compiling any number of sources, no -dump* nor\n+     -save-temps=*, all outputs in cwd without prefix:\n+\n+     # gcc -c b.c -gsplit-dwarf\n+     -> cc1 [-dumpdir ./] -dumpbase b.c -dumpbase-ext .c # b.o b.dwo\n+\n+     # gcc -c b.c d.c -gsplit-dwarf\n+     -> cc1 [-dumpdir ./] -dumpbase b.c -dumpbase-ext .c # b.o b.dwo\n+     && cc1 [-dumpdir ./] -dumpbase d.c -dumpbase-ext .c # d.o d.dwo\n+\n+     When compiling and linking, no -dump* nor -save-temps=*, .o\n+     outputs are temporary, aux outputs land in the dir of the output,\n+     prefixed with the basename of the linker output:\n+\n+     # gcc b.c d.c -o ab -gsplit-dwarf\n+     -> cc1 -dumpdir ab- -dumpbase b.c -dumpbase-ext .c # ab-b.dwo\n+     && cc1 -dumpdir ab- -dumpbase d.c -dumpbase-ext .c # ab-d.dwo\n+     && link ... -o ab\n+\n+     # gcc b.c d.c [-o a.out] -gsplit-dwarf\n+     -> cc1 -dumpdir a- -dumpbase b.c -dumpbase-ext .c # a-b.dwo\n+     && cc1 -dumpdir a- -dumpbase d.c -dumpbase-ext .c # a-d.dwo\n+     && link ... [-o a.out]\n+\n+     When compiling and linking, a prevailing -dumpdir fully overrides\n+     the prefix of aux outputs given by the output name:\n+\n+     # gcc -dumpdir f b.c d.c -gsplit-dwarf [-o [dir/]whatever]\n+     -> cc1 -dumpdir f -dumpbase b.c -dumpbase-ext .c # fb.dwo\n+     && cc1 -dumpdir f -dumpbase d.c -dumpbase-ext .c # fd.dwo\n+     && link ... [-o whatever]\n+\n+     When compiling multiple inputs, an explicit -dumpbase is combined\n+     with -dumpdir, affecting aux outputs, but not the .o outputs:\n+\n+     # gcc -dumpdir f -dumpbase g- b.c d.c -gsplit-dwarf -c\n+     -> cc1 -dumpdir fg- -dumpbase b.c -dumpbase-ext .c # b.o fg-b.dwo\n+     && cc1 -dumpdir fg- -dumpbase d.c -dumpbase-ext .c # d.o fg-d.dwo\n+\n+     When compiling and linking with -save-temps, the .o outputs that\n+     would have been temporary become aux outputs, so they get\n+     affected by -dump* flags:\n+\n+     # gcc -dumpdir f -dumpbase g- -save-temps b.c d.c\n+     -> cc1 -dumpdir fg- -dumpbase b.c -dumpbase-ext .c # fg-b.o\n+     && cc1 -dumpdir fg- -dumpbase d.c -dumpbase-ext .c # fg-d.o\n+     && link\n+\n+     If -save-temps=* prevails over -dumpdir, however, the explicit\n+     -dumpdir is discarded, as if it wasn't there.  The basename of\n+     the implicit linker output, a.out or a.exe, becomes a- as the aux\n+     output prefix for all compilations:\n+\n+     # gcc [-dumpdir f] -save-temps=cwd b.c d.c\n+     -> cc1 -dumpdir a- -dumpbase b.c -dumpbase-ext .c # a-b.o\n+     && cc1 -dumpdir a- -dumpbase d.c -dumpbase-ext .c # a-d.o\n+     && link\n+\n+     A single -dumpbase, applying to multiple inputs, overrides the\n+     linker output name, implied or explicit, as the aux output prefix:\n+\n+     # gcc [-dumpdir f] -dumpbase g- -save-temps=cwd b.c d.c\n+     -> cc1 -dumpdir g- -dumpbase b.c -dumpbase-ext .c # g-b.o\n+     && cc1 -dumpdir g- -dumpbase d.c -dumpbase-ext .c # g-d.o\n+     && link\n+\n+     # gcc [-dumpdir f] -dumpbase g- -save-temps=cwd b.c d.c -o dir/h.out\n+     -> cc1 -dumpdir g- -dumpbase b.c -dumpbase-ext .c # g-b.o\n+     && cc1 -dumpdir g- -dumpbase d.c -dumpbase-ext .c # g-d.o\n+     && link -o dir/h.out\n+\n+     Now, if the linker output is NOT overridden as a prefix, but\n+     -save-temps=* overrides implicit or explicit -dumpdir, the\n+     effective dump dir combines the dir selected by the -save-temps=*\n+     option with the basename of the specified or implied link output:\n+\n+     # gcc [-dumpdir f] -save-temps=cwd b.c d.c -o dir/h.out\n+     -> cc1 -dumpdir h- -dumpbase b.c -dumpbase-ext .c # h-b.o\n+     && cc1 -dumpdir h- -dumpbase d.c -dumpbase-ext .c # h-d.o\n+     && link -o dir/h.out\n+\n+     # gcc [-dumpdir f] -save-temps=obj b.c d.c -o dir/h.out\n+     -> cc1 -dumpdir dir/h- -dumpbase b.c -dumpbase-ext .c # dir/h-b.o\n+     && cc1 -dumpdir dir/h- -dumpbase d.c -dumpbase-ext .c # dir/h-d.o\n+     && link -o dir/h.out\n+\n+     But then again, a single -dumpbase applying to multiple inputs\n+     gets used instead of the linker output basename in the combined\n+     dumpdir:\n+\n+     # gcc [-dumpdir f] -dumpbase g- -save-temps=obj b.c d.c -o dir/h.out\n+     -> cc1 -dumpdir dir/g- -dumpbase b.c -dumpbase-ext .c # dir/g-b.o\n+     && cc1 -dumpdir dir/g- -dumpbase d.c -dumpbase-ext .c # dir/g-d.o\n+     && link -o dir/h.out\n+\n+     With a single input being compiled, the output basename does NOT\n+     affect the dumpdir prefix.\n+\n+     # gcc -save-temps=obj b.c -gsplit-dwarf -c -o dir/b.o\n+     -> cc1 -dumpdir dir/ -dumpbase b.c -dumpbase-ext .c # dir/b.o dir/b.dwo\n+\n+     but when compiling and linking even a single file, it does:\n+\n+     # gcc -save-temps=obj b.c -o dir/h.out\n+     -> cc1 -dumpdir dir/h- -dumpbase b.c -dumpbase-ext .c # dir/h-b.o\n+\n+     unless an explicit -dumpdir prevails:\n+\n+     # gcc -save-temps[=obj] -dumpdir g- b.c -o dir/h.out\n+     -> cc1 -dumpdir g- -dumpbase b.c -dumpbase-ext .c # g-b.o\n+\n+  */\n+\n+  bool explicit_dumpdir = dumpdir;\n+\n+  if (!save_temps_overrides_dumpdir && explicit_dumpdir)\n+    {\n+      /* Do nothing.  */\n+    }\n+\n   /* If -save-temps=obj and -o name, create the prefix to use for %b.\n      Otherwise just make -save-temps=obj the same as -save-temps=cwd.  */\n-  if (save_temps_flag == SAVE_TEMPS_OBJ && save_temps_prefix != NULL)\n+  else if (save_temps_flag != SAVE_TEMPS_CWD && output_file != NULL)\n+    {\n+      free (dumpdir);\n+      dumpdir = NULL;\n+      temp = lbasename (output_file);\n+      if (temp != output_file)\n+\tdumpdir = xstrndup (output_file,\n+\t\t\t    strlen (output_file) - strlen (temp));\n+    }\n+  else if (dumpdir)\n+    {\n+      free (dumpdir);\n+      dumpdir = NULL;\n+    }\n+\n+  if (save_temps_flag)\n+    save_temps_flag = SAVE_TEMPS_DUMP;\n+\n+  /* If there is any pathname component in an explicit -dumpbase, it\n+     overrides dumpdir entirely, so discard it right away.  Although\n+     the presence of an explicit -dumpdir matters for the driver, it\n+     shouldn't matter for other processes, that get all that's needed\n+     from the -dumpdir and -dumpbase always passed to them.  */\n+  if (dumpdir && dumpbase && lbasename (dumpbase) != dumpbase)\n     {\n-      save_temps_length = strlen (save_temps_prefix);\n-      temp = strrchr (lbasename (save_temps_prefix), '.');\n-      if (temp)\n+      free (dumpdir);\n+      dumpdir = NULL;\n+    }\n+\n+  /* Check that dumpbase_ext matches the end of dumpbase, drop it\n+     otherwise.  */\n+  if (dumpbase_ext && dumpbase && *dumpbase)\n+    {\n+      int lendb = strlen (dumpbase);\n+      int lendbx = strlen (dumpbase_ext);\n+\n+      if (lendbx >= lendb\n+\t  || strcmp (dumpbase + lendb - lendbx, dumpbase_ext) != 0)\n \t{\n-\t  save_temps_length -= strlen (temp);\n-\t  save_temps_prefix[save_temps_length] = '\\0';\n+\t  free (dumpbase_ext);\n+\t  dumpbase_ext = NULL;\n \t}\n+    }\n+\n+  /* -dumpbase with multiple sources goes into dumpdir.  With a single\n+     source, it does only if linking and if dumpdir was not explicitly\n+     specified.  */\n+  if (dumpbase && *dumpbase\n+      && (single_input_file_index () == -2\n+\t  || (!have_c && !explicit_dumpdir)))\n+    {\n+      char *prefix;\n \n+      if (dumpbase_ext)\n+\t/* We checked that they match above.  */\n+\tdumpbase[strlen (dumpbase) - strlen (dumpbase_ext)] = '\\0';\n+\n+      if (dumpdir)\n+\tprefix = concat (dumpdir, dumpbase, \"-\", NULL);\n+      else\n+\tprefix = concat (dumpbase, \"-\", NULL);\n+\n+      free (dumpdir);\n+      free (dumpbase);\n+      free (dumpbase_ext);\n+      dumpbase = dumpbase_ext = NULL;\n+      dumpdir = prefix;\n+      dumpdir_trailing_dash_added = true;\n+    }\n+\n+  /* If dumpbase was not brought into dumpdir but we're linking, bring\n+     output_file into dumpdir unless dumpdir was explicitly specified.\n+     The test for !explicit_dumpdir is further below, because we want\n+     to use the obase computation for a ghost outbase, passed to\n+     GCC_COLLECT_OPTIONS.  */\n+  else if (!have_c && (!explicit_dumpdir || (dumpbase && !*dumpbase)))\n+    {\n+      /* If we get here, we know dumpbase was not specified, or it was\n+\t specified as an empty string.  If it was anything else, it\n+\t would have combined with dumpdir above, because the condition\n+\t for dumpbase to be used when present is broader than the\n+\t condition that gets us here.  */\n+      gcc_assert (!dumpbase || !*dumpbase);\n+\n+      const char *obase;\n+      char *tofree = NULL;\n+      if (!output_file || not_actual_file_p (output_file))\n+\tobase = \"a\";\n+      else\n+\t{\n+\t  obase = lbasename (output_file);\n+\t  size_t blen = strlen (obase), xlen;\n+\t  /* Drop the suffix if it's dumpbase_ext, if given,\n+\t     otherwise .exe or the target executable suffix, or if the\n+\t     output was explicitly named a.out, but not otherwise.  */\n+\t  if (dumpbase_ext\n+\t      ? (blen > (xlen = strlen (dumpbase_ext))\n+\t\t && strcmp ((temp = (obase + blen - xlen)),\n+\t\t\t    dumpbase_ext) == 0)\n+\t      : ((temp = strrchr (obase + 1, '.'))\n+\t\t && (xlen = strlen (temp))\n+\t\t && (strcmp (temp, \".exe\") == 0\n+#if defined(HAVE_TARGET_EXECUTABLE_SUFFIX)\n+\t\t     || strcmp (temp, TARGET_EXECUTABLE_SUFFIX) == 0\n+#endif\n+\t\t     || strcmp (obase, \"a.out\") == 0)))\n+\t    {\n+\t      tofree = xstrndup (obase, blen - xlen);\n+\t      obase = tofree;\n+\t    }\n+\t}\n+\n+      /* We wish to save this basename to the -dumpdir passed through\n+\t GCC_COLLECT_OPTIONS within maybe_run_linker, for e.g. LTO,\n+\t but we do NOT wish to add it to e.g. %b, so we keep\n+\t outbase_length as zero.  */\n+      gcc_assert (!outbase);\n+      outbase_length = 0;\n+\n+      /* If we're building [dir1/]foo[.exe] out of a single input\n+\t [dir2/]foo.c that shares the same basename, dump to\n+\t [dir2/]foo.c.* rather than duplicating the basename into\n+\t [dir2/]foo-foo.c.*.  */\n+      int idxin;\n+      if (dumpbase\n+\t  || ((idxin = single_input_file_index ()) >= 0\n+\t      && adds_single_suffix_p (lbasename (infiles[idxin].name),\n+\t\t\t\t       obase)))\n+\t{\n+\t  if (obase == tofree)\n+\t    outbase = tofree;\n+\t  else\n+\t    {\n+\t      outbase = xstrdup (obase);\n+\t      free (tofree);\n+\t    }\n+\t  obase = tofree = NULL;\n+\t}\n+      else\n+\t{\n+\t  if (dumpdir)\n+\t    {\n+\t      char *p = concat (dumpdir, obase, \"-\", NULL);\n+\t      free (dumpdir);\n+\t      dumpdir = p;\n+\t    }\n+\t  else\n+\t    dumpdir = concat (obase, \"-\", NULL);\n+\n+\t  dumpdir_trailing_dash_added = true;\n+\n+\t  free (tofree);\n+\t  obase = tofree = NULL;\n+\t}\n+\n+      if (!explicit_dumpdir || dumpbase)\n+\t{\n+\t  /* Absent -dumpbase and present -dumpbase-ext have been applied\n+\t     to the linker output name, so compute fresh defaults for each\n+\t     compilation.  */\n+\t  free (dumpbase_ext);\n+\t  dumpbase_ext = NULL;\n+\t}\n+    }\n+\n+  /* Now, if we're compiling, or if we haven't used the dumpbase\n+     above, then outbase (%B) is derived from dumpbase, if given, or\n+     from the output name, given or implied.  We can't precompute\n+     implied output names, but that's ok, since they're derived from\n+     input names.  Just make sure we skip this if dumpbase is the\n+     empty string: we want to use input names then, so don't set\n+     outbase.  */\n+  if ((dumpbase || have_c)\n+      && !(dumpbase && !*dumpbase))\n+    {\n+      gcc_assert (!outbase);\n+\n+      if (dumpbase)\n+\t{\n+\t  gcc_assert (single_input_file_index () != -2);\n+\t  /* We do not want lbasename here; dumpbase with dirnames\n+\t     overrides dumpdir entirely, even if dumpdir is\n+\t     specified.  */\n+\t  if (dumpbase_ext)\n+\t    /* We've already checked above that the suffix matches.  */\n+\t    outbase = xstrndup (dumpbase,\n+\t\t\t\tstrlen (dumpbase) - strlen (dumpbase_ext));\n+\t  else\n+\t    outbase = xstrdup (dumpbase);\n+\t}\n+      else if (output_file && !not_actual_file_p (output_file))\n+\t{\n+\t  outbase = xstrdup (lbasename (output_file));\n+\t  char *p = strrchr (outbase + 1, '.');\n+\t  if (p)\n+\t    *p = '\\0';\n+\t}\n+\n+      if (outbase)\n+\toutbase_length = strlen (outbase);\n     }\n-  else if (save_temps_prefix != NULL)\n+\n+  /* If there is any pathname component in an explicit -dumpbase, do\n+     not use dumpdir, but retain it to pass it on to the compiler.  */\n+  if (dumpdir)\n+    dumpdir_length = strlen (dumpdir);\n+  else\n+    dumpdir_length = 0;\n+\n+  /* Check that dumpbase_ext, if still present, still matches the end\n+     of dumpbase, if present, and drop it otherwise.  We only retained\n+     it above when dumpbase was absent to maybe use it to drop the\n+     extension from output_name before combining it with dumpdir.  */\n+  if (dumpbase_ext)\n     {\n-      free (save_temps_prefix);\n-      save_temps_prefix = NULL;\n+      if (!dumpbase)\n+\t{\n+\t  free (dumpbase_ext);\n+\t  dumpbase_ext = NULL;\n+\t}\n+      else\n+\tgcc_assert (strcmp (dumpbase + strlen (dumpbase)\n+\t\t\t    - strlen (dumpbase_ext), dumpbase_ext) == 0);\n     }\n \n   if (save_temps_flag && use_pipes)\n@@ -4848,6 +5282,28 @@ set_collect_gcc_options (void)\n \t  obstack_grow (&collect_obstack, \"'\", 1);\n \t}\n     }\n+\n+  if (dumpdir)\n+    {\n+      if (!first_time)\n+\tobstack_grow (&collect_obstack, \" \", 1);\n+      first_time = FALSE;\n+\n+      obstack_grow (&collect_obstack, \"'-dumpdir' '\", 12);\n+      const char *p, *q;\n+\n+      q = dumpdir;\n+      while ((p = strchr (q, '\\'')))\n+\t{\n+\t  obstack_grow (&collect_obstack, q, p - q);\n+\t  obstack_grow (&collect_obstack, \"'\\\\''\", 4);\n+\t  q = ++p;\n+\t}\n+      obstack_grow (&collect_obstack, q, strlen (q));\n+\n+      obstack_grow (&collect_obstack, \"'\", 1);\n+    }\n+\n   obstack_grow (&collect_obstack, \"\\0\", 1);\n   xputenv (XOBFINISH (&collect_obstack, char *));\n }\n@@ -5366,22 +5822,33 @@ do_spec_1 (const char *spec, int inswitch, const char *soft_matched_part)\n \t    fatal_error (input_location, \"spec %qs invalid\", spec);\n \n \t  case 'b':\n-\t    if (save_temps_length)\n-\t      obstack_grow (&obstack, save_temps_prefix, save_temps_length);\n-\t    else\n+\t    /* Don't use %b in the linker command.  */\n+\t    gcc_assert (suffixed_basename_length);\n+\t    if (!this_is_output_file && dumpdir_length)\n+\t      obstack_grow (&obstack, dumpdir, dumpdir_length);\n+\t    if (this_is_output_file || !outbase_length)\n \t      obstack_grow (&obstack, input_basename, basename_length);\n+\t    else\n+\t      obstack_grow (&obstack, outbase, outbase_length);\n \t    if (compare_debug < 0)\n \t      obstack_grow (&obstack, \".gk\", 3);\n \t    arg_going = 1;\n \t    break;\n \n \t  case 'B':\n-\t    if (save_temps_length)\n-\t      obstack_grow (&obstack, save_temps_prefix, save_temps_length);\n+\t    /* Don't use %B in the linker command.  */\n+\t    gcc_assert (suffixed_basename_length);\n+\t    if (!this_is_output_file && dumpdir_length)\n+\t      obstack_grow (&obstack, dumpdir, dumpdir_length);\n+\t    if (this_is_output_file || !outbase_length)\n+\t      obstack_grow (&obstack, input_basename, basename_length);\n \t    else\n-\t      obstack_grow (&obstack, input_basename, suffixed_basename_length);\n+\t      obstack_grow (&obstack, outbase, outbase_length);\n \t    if (compare_debug < 0)\n \t      obstack_grow (&obstack, \".gk\", 3);\n+\t    obstack_grow (&obstack, input_basename + basename_length,\n+\t\t\t  suffixed_basename_length - basename_length);\n+\n \t    arg_going = 1;\n \t    break;\n \n@@ -5534,42 +6001,44 @@ do_spec_1 (const char *spec, int inswitch, const char *soft_matched_part)\n \t\t    suffix_length += 3;\n \t\t  }\n \n-\t\t/* If -save-temps=obj and -o were specified, use that for the\n+\t\t/* If -save-temps was specified, use that for the\n \t\t   temp file.  */\n-\t\tif (save_temps_length)\n-\t\t  {\n-\t\t    char *tmp;\n-\t\t    temp_filename_length\n-\t\t      = save_temps_length + suffix_length + 1;\n-\t\t    tmp = (char *) alloca (temp_filename_length);\n-\t\t    memcpy (tmp, save_temps_prefix, save_temps_length);\n-\t\t    memcpy (tmp + save_temps_length, suffix, suffix_length);\n-\t\t    tmp[save_temps_length + suffix_length] = '\\0';\n-\t\t    temp_filename = save_string (tmp, save_temps_length\n-\t\t\t\t\t\t      + suffix_length);\n-\t\t    obstack_grow (&obstack, temp_filename,\n-\t\t\t\t  temp_filename_length);\n-\t\t    arg_going = 1;\n-\t\t    delete_this_arg = 0;\n-\t\t    break;\n-\t\t  }\n-\n-\t\t/* If the gcc_input_filename has the same suffix specified\n-\t\t   for the %g, %u, or %U, and -save-temps is specified,\n-\t\t   we could end up using that file as an intermediate\n-\t\t   thus clobbering the user's source file (.e.g.,\n-\t\t   gcc -save-temps foo.s would clobber foo.s with the\n-\t\t   output of cpp0).  So check for this condition and\n-\t\t   generate a temp file as the intermediate.  */\n-\n \t\tif (save_temps_flag)\n \t\t  {\n \t\t    char *tmp;\n-\t\t    temp_filename_length = basename_length + suffix_length + 1;\n+\t\t    bool adjusted_suffix = false;\n+\t\t    if (suffix_length\n+\t\t\t&& !outbase_length && !basename_length\n+\t\t\t&& !dumpdir_trailing_dash_added)\n+\t\t      {\n+\t\t\tadjusted_suffix = true;\n+\t\t\tsuffix++;\n+\t\t\tsuffix_length--;\n+\t\t      }\n+\t\t    temp_filename_length\n+\t\t      = dumpdir_length + suffix_length + 1;\n+\t\t    if (!outbase_length)\n+\t\t      temp_filename_length += basename_length;\n+\t\t    else\n+\t\t      temp_filename_length += outbase_length;\n \t\t    tmp = (char *) alloca (temp_filename_length);\n-\t\t    memcpy (tmp, input_basename, basename_length);\n-\t\t    memcpy (tmp + basename_length, suffix, suffix_length);\n-\t\t    tmp[basename_length + suffix_length] = '\\0';\n+\t\t    if (dumpdir_length)\n+\t\t      memcpy (tmp, dumpdir, dumpdir_length);\n+\t\t    if (!outbase_length)\n+\t\t      memcpy (tmp + dumpdir_length, input_basename,\n+\t\t\t      basename_length);\n+\t\t    else\n+\t\t      memcpy (tmp + dumpdir_length, outbase,\n+\t\t\t      outbase_length);\n+\t\t    memcpy (tmp + temp_filename_length - suffix_length - 1,\n+\t\t\t    suffix, suffix_length);\n+\t\t    if (adjusted_suffix)\n+\t\t      {\n+\t\t\tadjusted_suffix = false;\n+\t\t\tsuffix--;\n+\t\t\tsuffix_length++;\n+\t\t      }\n+\t\t    tmp[temp_filename_length - 1] = '\\0';\n \t\t    temp_filename = tmp;\n \n \t\t    if (filename_cmp (temp_filename, gcc_input_filename) != 0)\n@@ -6080,6 +6549,14 @@ do_spec_1 (const char *spec, int inswitch, const char *soft_matched_part)\n \t    }\n \t    break;\n \n+\t  case '\"':\n+\t    /* End a previous argument, if there is one, then issue an\n+\t       empty argument.  */\n+\t    end_going_arg ();\n+\t    arg_going = 1;\n+\t    end_going_arg ();\n+\t    break;\n+\n \t  default:\n \t    error (\"spec failure: unrecognized spec option %qc\", c);\n \t    break;\n@@ -6090,6 +6567,9 @@ do_spec_1 (const char *spec, int inswitch, const char *soft_matched_part)\n \t/* Backslash: treat next character as ordinary.  */\n \tc = *p++;\n \n+\t/* When adding more cases that previously matched default, make\n+\t   sure to adjust quote_spec_char_p as well.  */\n+\n \t/* Fall through.  */\n       default:\n \t/* Ordinary character: put it into the current argument.  */\n@@ -8296,6 +8776,40 @@ driver::maybe_run_linker (const char *argv0) const\n     if (explicit_link_files[i] || outfiles[i] != NULL)\n       num_linker_inputs++;\n \n+  /* Arrange for temporary file names created during linking to take\n+     on names related with the linker output rather than with the\n+     inputs when appropriate.  */\n+  if (outbase && *outbase)\n+    {\n+      if (dumpdir)\n+\t{\n+\t  char *tofree = dumpdir;\n+\t  gcc_checking_assert (strlen (dumpdir) == dumpdir_length);\n+\t  dumpdir = concat (dumpdir, outbase, \".\", NULL);\n+\t  free (tofree);\n+\t}\n+      else\n+\tdumpdir = concat (outbase, \".\", NULL);\n+      dumpdir_length += strlen (outbase) + 1;\n+      dumpdir_trailing_dash_added = true;\n+    }\n+  else if (dumpdir_trailing_dash_added)\n+    {\n+      gcc_assert (dumpdir[dumpdir_length - 1] == '-');\n+      dumpdir[dumpdir_length - 1] = '.';\n+    }\n+\n+  if (dumpdir_trailing_dash_added)\n+    {\n+      gcc_assert (dumpdir_length > 0);\n+      gcc_assert (dumpdir[dumpdir_length - 1] == '.');\n+      dumpdir_length--;\n+    }\n+\n+  free (outbase);\n+  input_basename = outbase = NULL;\n+  outbase_length = suffixed_basename_length = basename_length = 0;\n+\n   /* Run ld to link all the compiler output files.  */\n \n   if (num_linker_inputs > 0 && !seen_error () && print_subprocess_help < 2)\n@@ -9766,7 +10280,7 @@ compare_debug_dump_opt_spec_function (int arg,\n   do_spec_1 (\" \", 0, NULL);\n \n   if (argbuf.length () > 0\n-      && strcmp (argv[argbuf.length () - 1], \".\"))\n+      && strcmp (argv[argbuf.length () - 1], \".\") != 0)\n     {\n       if (!compare_debug)\n \treturn NULL;\n@@ -9776,25 +10290,22 @@ compare_debug_dump_opt_spec_function (int arg,\n     }\n   else\n     {\n-      const char *ext = NULL;\n-\n       if (argbuf.length () > 0)\n-\t{\n-\t  do_spec_2 (\"%{o*:%*}%{!o:%{!S:%b%O}%{S:%b.s}}\", NULL);\n-\t  ext = \".gkd\";\n-\t}\n+\tdo_spec_2 (\"%B.gkd\", NULL);\n       else if (!compare_debug)\n \treturn NULL;\n       else\n-\tdo_spec_2 (\"%g.gkd\", NULL);\n+\tdo_spec_2 (\"%{!save-temps*:%g.gkd}%{save-temps*:%B.gkd}\", NULL);\n \n       do_spec_1 (\" \", 0, NULL);\n \n       gcc_assert (argbuf.length () > 0);\n \n-      name = concat (argbuf.last (), ext, NULL);\n+      name = xstrdup (argbuf.last ());\n \n-      ret = concat (\"-fdump-final-insns=\", name, NULL);\n+      char *arg = quote_spec (xstrdup (name));\n+      ret = concat (\"-fdump-final-insns=\", arg, NULL);\n+      free (arg);\n     }\n \n   which = compare_debug < 0;\n@@ -9821,8 +10332,6 @@ compare_debug_dump_opt_spec_function (int arg,\n   return ret;\n }\n \n-static const char *debug_auxbase_opt;\n-\n /* %:compare-debug-self-opt spec function.  Expands to the options\n     that are to be passed in the second compilation of\n     compare-debug.  */\n@@ -9838,67 +10347,13 @@ compare_debug_self_opt_spec_function (int arg,\n   if (compare_debug >= 0)\n     return NULL;\n \n-  do_spec_2 (\"%{c|S:%{o*:%*}}\", NULL);\n-  do_spec_1 (\" \", 0, NULL);\n-\n-  if (argbuf.length () > 0)\n-    debug_auxbase_opt = concat (\"-auxbase-strip \",\n-\t\t\t\targbuf.last (),\n-\t\t\t\tNULL);\n-  else\n-    debug_auxbase_opt = NULL;\n-\n   return concat (\"\\\n %<o %<MD %<MMD %<MF* %<MG %<MP %<MQ* %<MT* \\\n %<fdump-final-insns=* -w -S -o %j \\\n %{!fcompare-debug-second:-fcompare-debug-second} \\\n \", compare_debug_opt, NULL);\n }\n \n-/* %:compare-debug-auxbase-opt spec function.  Expands to the auxbase\n-    options that are to be passed in the second compilation of\n-    compare-debug.  It expects, as an argument, the basename of the\n-    current input file name, with the .gk suffix appended to it.  */\n-\n-static const char *\n-compare_debug_auxbase_opt_spec_function (int arg,\n-\t\t\t\t\t const char **argv)\n-{\n-  char *name;\n-  int len;\n-\n-  if (arg == 0)\n-    fatal_error (input_location,\n-\t\t \"too few arguments to %%:compare-debug-auxbase-opt\");\n-\n-  if (arg != 1)\n-    fatal_error (input_location,\n-\t\t \"too many arguments to %%:compare-debug-auxbase-opt\");\n-\n-  if (compare_debug >= 0)\n-    return NULL;\n-\n-  len = strlen (argv[0]);\n-  if (len < 3 || strcmp (argv[0] + len - 3, \".gk\") != 0)\n-    fatal_error (input_location, \"argument to %%:compare-debug-auxbase-opt \"\n-\t\t \"does not end in %<.gk%>\");\n-\n-  if (debug_auxbase_opt)\n-    return debug_auxbase_opt;\n-\n-#define OPT \"-auxbase \"\n-\n-  len -= 3;\n-  name = (char*) xmalloc (sizeof (OPT) + len);\n-  memcpy (name, OPT, sizeof (OPT) - 1);\n-  memcpy (name + sizeof (OPT) - 1, argv[0], len);\n-  name[sizeof (OPT) - 1 + len] = '\\0';\n-\n-#undef OPT\n-\n-  return name;\n-}\n-\n /* %:pass-through-libs spec function.  Finds all -l options and input\n    file names in the lib spec passed to it, and makes a list of them\n    prepended with the plugin option to cause them to be passed through\n@@ -9942,34 +10397,105 @@ pass_through_libs_spec_func (int argc, const char **argv)\n   return prepended;\n }\n \n-/* %:replace-extension spec function.  Replaces the extension of the\n-   first argument with the second argument.  */\n+static bool\n+not_actual_file_p (const char *name)\n+{\n+  return (strcmp (name, \"-\") == 0\n+\t  || strcmp (output_file, HOST_BIT_BUCKET) == 0);\n+}\n \n+/* %:dumps spec function.  Take an optional argument that overrides\n+   the default extension for -dumpbase and -dumpbase-ext.\n+   Return -dumpdir, -dumpbase and -dumpbase-ext, if needed.  */\n const char *\n-replace_extension_spec_func (int argc, const char **argv)\n+dumps_spec_func (int argc, const char **argv ATTRIBUTE_UNUSED)\n {\n-  char *name;\n+  const char *ext = dumpbase_ext;\n   char *p;\n-  char *result;\n-  int i;\n \n-  if (argc != 2)\n-    fatal_error (input_location, \"too few arguments to %%:replace-extension\");\n+  char *args[3] = { NULL, NULL, NULL };\n+  int nargs = 0;\n \n-  name = xstrdup (argv[0]);\n+  /* Do not compute a default for -dumpbase-ext when -dumpbase was\n+     given explicitly.  */\n+  if (dumpbase && *dumpbase && !ext)\n+    ext = \"\";\n \n-  for (i = strlen (name) - 1; i >= 0; i--)\n-    if (IS_DIR_SEPARATOR (name[i]))\n-      break;\n+  if (argc == 1)\n+    {\n+      /* Do not override the explicitly-specified -dumpbase-ext with\n+\t the specs-provided overrider.  */\n+      if (!ext)\n+\text = argv[0];\n+    }\n+  else if (argc != 0)\n+    fatal_error (input_location, \"too many arguments for %%:dumps\");\n \n-  p = strrchr (name + i + 1, '.');\n-  if (p != NULL)\n-      *p = '\\0';\n+  if (dumpdir)\n+    {\n+      p = quote_spec_arg (xstrdup (dumpdir));\n+      args[nargs++] = concat (\" -dumpdir \", p, NULL);\n+      free (p);\n+    }\n \n-  result = concat (name, argv[1], NULL);\n+  if (!ext)\n+    ext = input_basename + basename_length;\n \n-  free (name);\n-  return result;\n+  /* Use the precomputed outbase, or compute dumpbase from\n+     input_basename, just like %b would.  */\n+  char *base;\n+\n+  if (dumpbase && *dumpbase)\n+    {\n+      base = xstrdup (dumpbase);\n+      p = base + outbase_length;\n+      gcc_checking_assert (strncmp (base, outbase, outbase_length) == 0);\n+      gcc_checking_assert (strcmp (p, ext) == 0);\n+    }\n+  else if (outbase_length)\n+    {\n+      base = xstrndup (outbase, outbase_length);\n+      p = NULL;\n+    }\n+  else\n+    {\n+      base = xstrndup (input_basename, suffixed_basename_length);\n+      p = base + basename_length;\n+    }\n+\n+  if (compare_debug < 0 || !p || strcmp (p, ext) != 0)\n+    {\n+      if (p)\n+\t*p = '\\0';\n+\n+      const char *gk;\n+      if (compare_debug < 0)\n+\tgk = \".gk\";\n+      else\n+\tgk = \"\";\n+\n+      p = concat (base, gk, ext, NULL);\n+\n+      free (base);\n+      base = p;\n+    }\n+\n+  base = quote_spec_arg (base);\n+  args[nargs++] = concat (\" -dumpbase \", base, NULL);\n+  free (base);\n+\n+  if (*ext)\n+    {\n+      p = quote_spec_arg (xstrdup (ext));\n+      args[nargs++] = concat (\" -dumpbase-ext \", p, NULL);\n+      free (p);\n+    }\n+\n+  const char *ret = concat (args[0], args[1], args[2], NULL);\n+  while (nargs > 0)\n+    free (args[--nargs]);\n+\n+  return ret;\n }\n \n /* Returns \"\" if ARGV[ARGC - 2] is greater than ARGV[ARGC-1].\n@@ -10075,6 +10601,44 @@ find_fortran_preinclude_file (int argc, const char **argv)\n   return result;\n }\n \n+/* If any character in ORIG fits QUOTE_P (_, P), reallocate the string\n+   so as to precede every one of them with a backslash.  Return the\n+   original string or the reallocated one.  */\n+\n+static inline char *\n+quote_string (char *orig, bool (*quote_p)(char, void *), void *p)\n+{\n+  int len, number_of_space = 0;\n+\n+  for (len = 0; orig[len]; len++)\n+    if (quote_p (orig[len], p))\n+      number_of_space++;\n+\n+  if (number_of_space)\n+    {\n+      char *new_spec = (char *) xmalloc (len + number_of_space + 1);\n+      int j, k;\n+      for (j = 0, k = 0; j <= len; j++, k++)\n+\t{\n+\t  if (quote_p (orig[j], p))\n+\t    new_spec[k++] = '\\\\';\n+\t  new_spec[k] = orig[j];\n+\t}\n+      free (orig);\n+      return new_spec;\n+    }\n+  else\n+    return orig;\n+}\n+\n+/* Return true iff C is any of the characters convert_white_space\n+   should quote.  */\n+\n+static inline bool\n+whitespace_to_convert_p (char c, void *)\n+{\n+  return (c == ' ' || c == '\\t');\n+}\n \n /* Insert backslash before spaces in ORIG (usually a file path), to \n    avoid being broken by spec parser.\n@@ -10102,26 +10666,50 @@ find_fortran_preinclude_file (int argc, const char **argv)\n static char *\n convert_white_space (char *orig)\n {\n-  int len, number_of_space = 0;\n+  return quote_string (orig, whitespace_to_convert_p, NULL);\n+}\n \n-  for (len = 0; orig[len]; len++)\n-    if (orig[len] == ' ' || orig[len] == '\\t') number_of_space++;\n+/* Return true iff C matches any of the spec active characters.  */\n+static inline bool\n+quote_spec_char_p (char c, void *)\n+{\n+  switch (c)\n+    {\n+    case ' ':\n+    case '\\t':\n+    case '\\n':\n+    case '|':\n+    case '%':\n+    case '\\\\':\n+      return true;\n \n-  if (number_of_space)\n+    default:\n+      return false;\n+    }\n+}\n+\n+/* Like convert_white_space, but deactivate all active spec chars by\n+   quoting them.  */\n+\n+static inline char *\n+quote_spec (char *orig)\n+{\n+  return quote_string (orig, quote_spec_char_p, NULL);\n+}\n+\n+/* Like quote_spec, but also turn an empty string into the spec for an\n+   empty argument.  */\n+\n+static inline char *\n+quote_spec_arg (char *orig)\n+{\n+  if (!*orig)\n     {\n-      char *new_spec = (char *) xmalloc (len + number_of_space + 1);\n-      int j, k;\n-      for (j = 0, k = 0; j <= len; j++, k++)\n-\t{\n-\t  if (orig[j] == ' ' || orig[j] == '\\t')\n-\t    new_spec[k++] = '\\\\';\n-\t  new_spec[k] = orig[j];\n-\t}\n       free (orig);\n-      return new_spec;\n-  }\n-  else\n-    return orig;\n+      return xstrdup (\"%\\\"\");\n+    }\n+\n+  return quote_spec (orig);\n }\n \n /* Restore all state within gcc.c to the initial state, so that the driver\n@@ -10158,8 +10746,14 @@ driver::finalize ()\n   target_sysroot_suffix = 0;\n   target_sysroot_hdrs_suffix = 0;\n   save_temps_flag = SAVE_TEMPS_NONE;\n-  save_temps_prefix = 0;\n-  save_temps_length = 0;\n+  save_temps_overrides_dumpdir = false;\n+  dumpdir_trailing_dash_added = false;\n+  free (dumpdir);\n+  free (dumpbase);\n+  free (dumpbase_ext);\n+  free (outbase);\n+  dumpdir = dumpbase = dumpbase_ext = outbase = NULL;\n+  dumpdir_length = outbase_length = 0;\n   spec_machine = DEFAULT_TARGET_MACHINE;\n   greatest_status = 1;\n \n@@ -10298,8 +10892,6 @@ driver::finalize ()\n   mdswitches = NULL;\n   n_mdswitches = 0;\n \n-  debug_auxbase_opt = NULL;\n-\n   used_arg.finalize ();\n }\n "}, {"sha": "d565b0861f5a857bbffade8277d91fc2c863e737", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 72, "deletions": 85, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=1dedc12d186a110854537e1279b4e6c29f2df35a", "patch": "@@ -53,6 +53,13 @@ along with GCC; see the file COPYING3.  If not see\n    driver to lto-wrapper.  */\n #define OFFLOAD_TARGET_NAMES_ENV\t\"OFFLOAD_TARGET_NAMES\"\n \n+/* By default there is no special suffix for target executables.  */\n+#ifdef TARGET_EXECUTABLE_SUFFIX\n+#define HAVE_TARGET_EXECUTABLE_SUFFIX\n+#else\n+#define TARGET_EXECUTABLE_SUFFIX \"\"\n+#endif\n+\n enum lto_mode_d {\n   LTO_MODE_NONE,\t\t\t/* Not doing LTO.  */\n   LTO_MODE_LTO,\t\t\t\t/* Normal LTO.  */\n@@ -126,7 +133,7 @@ maybe_unlink (const char *file)\n }\n \n /* Template of LTRANS dumpbase suffix.  */\n-#define DUMPBASE_SUFFIX \".ltrans18446744073709551615\"\n+#define DUMPBASE_SUFFIX \"ltrans18446744073709551615\"\n \n /* Create decoded options from the COLLECT_GCC and COLLECT_GCC_OPTIONS\n    environment.  */\n@@ -1100,12 +1107,7 @@ debug_objcopy (const char *infile, bool rename)\n     }\n \n   if (save_temps)\n-    {\n-      outfile = (char *) xmalloc (strlen (orig_infile)\n-\t\t\t\t  + sizeof (\".debug.temp.o\") + 1);\n-      strcpy (outfile, orig_infile);\n-      strcat (outfile, \".debug.temp.o\");\n-    }\n+    outfile = concat (orig_infile, \".debug.temp.o\", NULL);\n   else\n     outfile = make_temp_file (\".debug.temp.o\");\n   errmsg = simple_object_copy_lto_debug_sections (inobj, outfile, &err, rename);\n@@ -1296,6 +1298,8 @@ run_gcc (unsigned argc, char *argv[])\n   bool linker_output_rel = false;\n   bool skip_debug = false;\n   unsigned n_debugobj;\n+  const char *dumppfx = NULL, *incoming_dumppfx = NULL;\n+  static char current_dir[] = { '.', DIR_SEPARATOR, '\\0' };\n \n   /* Get the driver and options.  */\n   collect_gcc = getenv (\"COLLECT_GCC\");\n@@ -1407,6 +1411,10 @@ run_gcc (unsigned argc, char *argv[])\n \t  linker_output = option->arg;\n \t  break;\n \n+\t  /* We don't have to distinguish between -save-temps=* and\n+\t     -save-temps, -dumpdir already carries that\n+\t     information.  */\n+\tcase OPT_save_temps_:\n \tcase OPT_save_temps:\n \t  save_temps = 1;\n \t  break;\n@@ -1452,6 +1460,10 @@ run_gcc (unsigned argc, char *argv[])\n \t  skip_debug = option->arg && !strcmp (option->arg, \"0\");\n \t  break;\n \n+\tcase OPT_dumpdir:\n+\t  incoming_dumppfx = dumppfx = option->arg;\n+\t  break;\n+\n \tdefault:\n \t  break;\n \t}\n@@ -1490,32 +1502,47 @@ run_gcc (unsigned argc, char *argv[])\n \t}\n     }\n \n-  if (linker_output)\n+  if (!dumppfx)\n     {\n-      char *output_dir, *base, *name;\n-      bool bit_bucket = strcmp (linker_output, HOST_BIT_BUCKET) == 0;\n-\n-      output_dir = xstrdup (linker_output);\n-      base = output_dir;\n-      for (name = base; *name; name++)\n-\tif (IS_DIR_SEPARATOR (*name))\n-\t  base = name + 1;\n-      *base = '\\0';\n-\n-      linker_output = &linker_output[base - output_dir];\n-      if (*output_dir == '\\0')\n-\t{\n-\t  static char current_dir[] = { '.', DIR_SEPARATOR, '\\0' };\n-\t  output_dir = current_dir;\n-\t}\n-      if (!bit_bucket)\n+      if (!linker_output\n+\t  || strcmp (linker_output, HOST_BIT_BUCKET) == 0)\n+\tdumppfx = \"a.\";\n+      else\n \t{\n-\t  obstack_ptr_grow (&argv_obstack, \"-dumpdir\");\n-\t  obstack_ptr_grow (&argv_obstack, output_dir);\n+\t  const char *obase = lbasename (linker_output), *temp;\n+\n+\t  /* Strip the executable extension.  */\n+\t  size_t blen = strlen (obase), xlen;\n+\t  if ((temp = strrchr (obase + 1, '.'))\n+\t      && (xlen = strlen (temp))\n+\t      && (strcmp (temp, \".exe\") == 0\n+#if defined(HAVE_TARGET_EXECUTABLE_SUFFIX)\n+\t\t  || strcmp (temp, TARGET_EXECUTABLE_SUFFIX) == 0\n+#endif\n+\t\t  || strcmp (obase, \"a.out\") == 0))\n+\t    dumppfx = xstrndup (linker_output,\n+\t\t\t\tobase - linker_output + blen - xlen + 1);\n+\t  else\n+\t    dumppfx = concat (linker_output, \".\", NULL);\n \t}\n+    }\n \n-      obstack_ptr_grow (&argv_obstack, \"-dumpbase\");\n+  /* If there's no directory component in the dumppfx, add one, so\n+     that, when it is used as -dumpbase, it overrides any occurrence\n+     of -dumpdir that might have been passed in.  */\n+  if (!dumppfx || lbasename (dumppfx) == dumppfx)\n+    dumppfx = concat (current_dir, dumppfx, NULL);\n+\n+  /* Make sure some -dumpdir is passed, so as to get predictable\n+     -dumpbase overriding semantics.  If we got an incoming -dumpdir\n+     argument, we'll pass it on, so don't bother with another one\n+     then.  */\n+  if (!incoming_dumppfx)\n+    {\n+      obstack_ptr_grow (&argv_obstack, \"-dumpdir\");\n+      obstack_ptr_grow (&argv_obstack, \"\");\n     }\n+  obstack_ptr_grow (&argv_obstack, \"-dumpbase\");\n \n   /* Remember at which point we can scrub args to re-use the commons.  */\n   new_head_argc = obstack_object_size (&argv_obstack) / sizeof (void *);\n@@ -1621,63 +1648,29 @@ run_gcc (unsigned argc, char *argv[])\n \n   if (lto_mode == LTO_MODE_LTO)\n     {\n-      if (linker_output)\n-\t{\n-\t  obstack_ptr_grow (&argv_obstack, linker_output);\n-\t  flto_out = (char *) xmalloc (strlen (linker_output)\n-\t\t\t\t       + sizeof (\".lto.o\") + 1);\n-\t  strcpy (flto_out, linker_output);\n-\t  strcat (flto_out, \".lto.o\");\n-\t}\n-      else\n+      /* -dumpbase argument for LTO.  */\n+      flto_out = concat (dumppfx, \"lto.o\", NULL);\n+      obstack_ptr_grow (&argv_obstack, flto_out);\n+\n+      if (!save_temps)\n \tflto_out = make_temp_file (\".lto.o\");\n       obstack_ptr_grow (&argv_obstack, \"-o\");\n       obstack_ptr_grow (&argv_obstack, flto_out);\n     }\n   else \n     {\n       const char *list_option = \"-fltrans-output-list=\";\n-      size_t list_option_len = strlen (list_option);\n-      char *tmp;\n \n-      if (linker_output)\n-\t{\n-\t  char *dumpbase = (char *) xmalloc (strlen (linker_output)\n-\t\t\t\t\t     + sizeof (\".wpa\") + 1);\n-\t  strcpy (dumpbase, linker_output);\n-\t  strcat (dumpbase, \".wpa\");\n-\t  obstack_ptr_grow (&argv_obstack, dumpbase);\n-\t}\n+      /* -dumpbase argument for WPA.  */\n+      char *dumpbase = concat (dumppfx, \"wpa\", NULL);\n+      obstack_ptr_grow (&argv_obstack, dumpbase);\n \n-      if (linker_output && save_temps)\n-\t{\n-\t  ltrans_output_file = (char *) xmalloc (strlen (linker_output)\n-\t\t\t\t\t\t + sizeof (\".ltrans.out\") + 1);\n-\t  strcpy (ltrans_output_file, linker_output);\n-\t  strcat (ltrans_output_file, \".ltrans.out\");\n-\t}\n+      if (save_temps)\n+\tltrans_output_file = concat (dumppfx, \"ltrans.out\", NULL);\n       else\n-\t{\n-\t  char *prefix = NULL;\n-\t  if (linker_output)\n-\t    {\n-\t      prefix = (char *) xmalloc (strlen (linker_output) + 2);\n-\t      strcpy (prefix, linker_output);\n-\t      strcat (prefix, \".\");\n-\t    }\n-\n-\t  ltrans_output_file = make_temp_file_with_prefix (prefix,\n-\t\t\t\t\t\t\t   \".ltrans.out\");\n-\t  free (prefix);\n-\t}\n-      list_option_full = (char *) xmalloc (sizeof (char) *\n-\t\t         (strlen (ltrans_output_file) + list_option_len + 1));\n-      tmp = list_option_full;\n-\n-      obstack_ptr_grow (&argv_obstack, tmp);\n-      strcpy (tmp, list_option);\n-      tmp += list_option_len;\n-      strcpy (tmp, ltrans_output_file);\n+\tltrans_output_file = make_temp_file (\".ltrans.out\");\n+      list_option_full = concat (list_option, ltrans_output_file, NULL);\n+      obstack_ptr_grow (&argv_obstack, list_option_full);\n \n       if (jobserver)\n \t{\n@@ -1833,16 +1826,10 @@ run_gcc (unsigned argc, char *argv[])\n \t  output_name = XOBFINISH (&env_obstack, char *);\n \n \t  /* Adjust the dumpbase if the linker output file was seen.  */\n-\t  if (linker_output)\n-\t    {\n-\t      char *dumpbase\n-\t\t  = (char *) xmalloc (strlen (linker_output)\n-\t\t\t\t      + sizeof (DUMPBASE_SUFFIX) + 1);\n-\t      snprintf (dumpbase,\n-\t\t\tstrlen (linker_output) + sizeof (DUMPBASE_SUFFIX),\n-\t\t\t\"%s.ltrans%u\", linker_output, i);\n-\t      argv_ptr[0] = dumpbase;\n-\t    }\n+\t  int dumpbase_len = (strlen (dumppfx) + sizeof (DUMPBASE_SUFFIX));\n+\t  char *dumpbase = (char *) xmalloc (dumpbase_len + 1);\n+\t  snprintf (dumpbase, dumpbase_len, \"%sltrans%u.ltrans\", dumppfx, i);\n+\t  argv_ptr[0] = dumpbase;\n \n \t  argv_ptr[1] = \"-fltrans\";\n \t  argv_ptr[2] = \"-o\";"}, {"sha": "340d99434b34d2bcc345c6f3236d810c8dc11e1f", "filename": "gcc/opts.c", "status": "modified", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=1dedc12d186a110854537e1279b4e6c29f2df35a", "patch": "@@ -845,30 +845,6 @@ finish_options (struct gcc_options *opts, struct gcc_options *opts_set,\n \t/* We have a DUMP_DIR_NAME, prepend that.  */\n \topts->x_dump_base_name = opts_concat (opts->x_dump_dir_name,\n \t\t\t\t\t      opts->x_dump_base_name, NULL);\n-      else if (opts->x_aux_base_name\n-\t       && strcmp (opts->x_aux_base_name, HOST_BIT_BUCKET) != 0)\n-\t/* AUX_BASE_NAME is set and is not the bit bucket.  If it\n-\t   contains a directory component, prepend those directories.\n-\t   Typically this places things in the same directory as the\n-\t   object file.  */\n-\t{\n-\t  const char *aux_base;\n-\n-\t  base_of_path (opts->x_aux_base_name, &aux_base);\n-\t  if (opts->x_aux_base_name != aux_base)\n-\t    {\n-\t      int dir_len = aux_base - opts->x_aux_base_name;\n-\t      char *new_dump_base_name\n-\t\t= XOBNEWVEC (&opts_obstack, char,\n-\t\t\t     strlen (opts->x_dump_base_name) + dir_len + 1);\n-\n-\t      /* Copy directory component from OPTS->X_AUX_BASE_NAME.  */\n-\t      memcpy (new_dump_base_name, opts->x_aux_base_name, dir_len);\n-\t      /* Append existing OPTS->X_DUMP_BASE_NAME.  */\n-\t      strcpy (new_dump_base_name + dir_len, opts->x_dump_base_name);\n-\t      opts->x_dump_base_name = new_dump_base_name;\n-\t    }\n-\t}\n \n       /* It is definitely prefixed now.  */\n       opts->x_dump_base_name_prefixed = true;\n@@ -2346,17 +2322,6 @@ common_handle_option (struct gcc_options *opts,\n       opts->x_flag_gen_aux_info = 1;\n       break;\n \n-    case OPT_auxbase_strip:\n-      {\n-\tchar *tmp = xstrdup (arg);\n-\tstrip_off_ending (tmp, strlen (tmp));\n-\tif (tmp[0])\n-\t  opts->x_aux_base_name = tmp;\n-\telse\n-\t  free (tmp);\n-      }\n-      break;\n-\n     case OPT_d:\n       decode_d_option (arg, opts, loc, dc);\n       break;"}, {"sha": "ca2ac4aff423dddfc64163ac01646091cc2b7006", "filename": "gcc/testsuite/gcc.misc-tests/outputs-0.c", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Ftestsuite%2Fgcc.misc-tests%2Foutputs-0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Ftestsuite%2Fgcc.misc-tests%2Foutputs-0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Foutputs-0.c?ref=1dedc12d186a110854537e1279b4e6c29f2df35a", "patch": "@@ -0,0 +1 @@\n+int main () {}"}, {"sha": "35f19cfbc783d63b66a18781336331f18eb15cd8", "filename": "gcc/testsuite/gcc.misc-tests/outputs-1.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Ftestsuite%2Fgcc.misc-tests%2Foutputs-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Ftestsuite%2Fgcc.misc-tests%2Foutputs-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Foutputs-1.c?ref=1dedc12d186a110854537e1279b4e6c29f2df35a", "patch": "@@ -0,0 +1,4 @@\n+extern void f();\n+int main() {\n+  f();\n+}"}, {"sha": "109733d752771bcf0da0d4cd2fc007dd577019c4", "filename": "gcc/testsuite/gcc.misc-tests/outputs-2.c", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Ftestsuite%2Fgcc.misc-tests%2Foutputs-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Ftestsuite%2Fgcc.misc-tests%2Foutputs-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Foutputs-2.c?ref=1dedc12d186a110854537e1279b4e6c29f2df35a", "patch": "@@ -0,0 +1,2 @@\n+void f() {\n+}"}, {"sha": "98237108378b25161dd0ec5e9594f1f0e8993906", "filename": "gcc/testsuite/gcc.misc-tests/outputs.exp", "status": "added", "additions": 695, "deletions": 0, "changes": 695, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Ftestsuite%2Fgcc.misc-tests%2Foutputs.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Ftestsuite%2Fgcc.misc-tests%2Foutputs.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Foutputs.exp?ref=1dedc12d186a110854537e1279b4e6c29f2df35a", "patch": "@@ -0,0 +1,695 @@\n+# Copyright (C) 2005-2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# This file contains a set of test that check that options intended to\n+# control the location and name of GCC outputs behave as expected.\n+\n+load_lib gcc-defs.exp\n+\n+set b \"outputs\"\n+\n+# These tests don't run runtest_file_p consistently if it\n+# doesn't return the same values, so disable parallelization\n+# of this *.exp file.  The first parallel runtest to reach\n+# this will run all the tests serially.\n+if {![gcc_parallel_test_run_p $b] || [is_remote host]} {\n+    return\n+}\n+gcc_parallel_test_enable 0\n+\n+set gsplit_dwarf \"-gsplit-dwarf\"\n+if ![check_no_compiler_messages gsplitdwarf object {\n+    void foo (void) { }\n+} \"$gsplit_dwarf\"] {\n+    set gsplit_dwarf \"\"\n+}\n+\n+# Prepare additional options to be used for linking.\n+# We do not compile to an executable, because that requires naming an output.\n+set link_options \"\"\n+set dest [target_info name]\n+foreach i { ldflags libs ldscripts } {\n+    if {[board_info $dest exists $i]} {\n+\tset skip \"\"\n+\tforeach opt [split [board_info $dest $i]] {\n+\t    if { $skip != \"\" } then {\n+\t\tset skip \"\"\n+\t    } elseif { $opt == \"-Xlinker\" } then {\n+\t\tset skip $opt\n+\t    } elseif { ![string match \"-*\" $opt] && [file isfile $opt] } {\n+\t    \tset opt \"-Wl,$opt\"\n+\t    }\n+\t    append link_options \" additional_flags=$opt\"\n+\t}\n+    }\n+}\n+if {[board_info $dest exists output_format]} {\n+    append link_options \" additional_flags=-Wl,-oformat,[board_info $dest output_format]\"\n+}\n+\n+# For the test named TEST, run the compiler with SOURCES and OPTS, and\n+# look in DIRS for OUTPUTS.  SOURCES is a list of suffixes for source\n+# files starting with $b in $srcdir/$subdir, OPTS is a string with\n+# options to be passed to the compiler, DIRS and OUTPUTS are lists.\n+# DIRS is a list of output directories, children before parent, and\n+# for each element of DIRS, there should be a corresponding sublist in\n+# OUTPUTS.  If OUTPUTS has an additional trailing sublist, that's the\n+# output list for the current directory.  Each element of the sublists\n+# in OUTPUT is a file name or glob pattern to be checked for; a name\n+# starting with a dash or a period is taken as a suffix for $b; with a\n+# double dash, or a dash followed by a period, the first dash is\n+# replaced with $b-$b; names starting with \"a--\" or \"a-.\" have \"$b\"\n+# inserted after the first dash.  The glob pattern may expand to more\n+# than one file, but then the test will pass when there any number of\n+# matches.  So, it's safe to use for a.{out,exe}, but .{i,s,o} and\n+# .[iso] will pass even if only the .o is present.\n+proc outest { test sources opts dirs outputs } {\n+    global b\n+    global srcdir\n+    global subdir\n+    global gsplit_dwarf\n+    set src {}\n+    foreach s $sources {\n+\tlappend src $srcdir/$subdir/$b$s\n+    }\n+    foreach f [glob -nocomplain -path $b -- *] {\n+\tfile delete $f\n+    }\n+    foreach d $dirs {\n+\tfile mkdir $d\n+\tforeach f [glob -nocomplain -path $d -- *] {\n+\t    file delete $d$f\n+\t}\n+    }\n+    set options \"\"\n+    foreach opt [split $opts \" \"] {\n+\tappend options \" additional_flags=$opt\"\n+    }\n+    # Add linker flags if we're linking\n+    if {![string match \"* -\\[ESc\\] *\" \" $opts \"]} {\n+\tglobal link_options\n+\tappend options \"$link_options\"\n+    }\n+    set gcc_output [gcc_target_compile $src \"\" none \"$options\"]\n+    set outs {}\n+    foreach d $dirs olist $outputs {\n+\tforeach og $olist {\n+\t    if { [string index $og 0] == \"-\" } then {\n+\t\tif { [string index $og 1] == \"-\" \\\n+\t\t     || [string index $og 1] == \".\" } then {\n+\t\t    set o \"$b-$b[string range $og 1 end]\"\n+\t\t} else {\n+\t\t    set o \"$b$og\"\n+\t\t}\n+\t    } elseif { [string index $og 0] == \".\" } then {\n+\t\tset o \"$b$og\"\n+\t    } elseif { [string range $og 0 2] == \"a--\" } then {\n+\t\tset o \"a-$b-[string range $og 3 end]\"\n+\t    } elseif { [string range $og 0 2] == \"a-.\" } then {\n+\t\tset o \"a-$b.[string range $og 3 end]\"\n+\t    } else {\n+\t\tset o \"$og\"\n+\t    }\n+\t    if { \"$gsplit_dwarf\" == \"\" \\\n+\t\t && [string match \"*.dwo\" \"$og\"] } then {\n+\t\tcontinue\n+\t    }\n+\t    if { [file exists $d$o] } then {\n+\t\tpass \"$test: $d$o\"\n+\t\tfile delete $d$o\n+\t    } else {\n+\t        set ogl [glob -nocomplain -path $d -- $o]\n+\t\tif { $ogl != {} } {\n+\t\t    pass \"$test: $d$o\"\n+\t\t    file delete $ogl\n+\t\t} else {\n+\t\t    fail \"$test: $d$o\"\n+\t\t}\n+\t    }\n+\t}\n+\tforeach ol [glob -nocomplain -path $d$b -- *] {\n+\t    lappend outs $ol\n+\t}\n+\tforeach ol [glob -nocomplain -path $d -- a{-,.}*] {\n+\t    lappend outs $ol\n+\t}\n+    }\n+\n+    foreach f $outs {\n+\tfile delete $f\n+    }\n+    foreach d $dirs {\n+\tfile delete -force $d\n+    }\n+\n+    if { [llength $outs] == 0 } then {\n+\tpass \"$test: extra\"\n+    } else {\n+\tfail \"$test: extra\\n$outs\"\n+    }\n+\n+    if { [string equal \"$gcc_output\" \"\"] } then {\n+\tpass \"$test: std out\"\n+    } else {\n+\tfail \"$test: std out\\n$gcc_output\"\n+    }\n+\n+}\n+\n+set sing {-0.c}\n+set mult {-1.c -2.c}\n+\n+# Driver-chosen outputs.\n+outest \"$b asm default 1\" $sing \"-S\" {} {{-0.s}}\n+outest \"$b asm default 2\" $mult \"-S\" {} {{-1.s -2.s}}\n+\n+outest \"$b obj default 1\" $sing \"-c\" {} {{-0.o}}\n+outest \"$b obj default 2\" $mult \"-c\" {} {{-1.o -2.o}}\n+\n+outest \"$b exe default 1\" $sing \"\" {} {{a.{out,exe}}}\n+outest \"$b exe default 2\" $mult \"\" {} {{a.{out,exe}}}\n+\n+# Driver-chosen aux outputs.\n+outest \"$b asm savetmp 1\" $sing \"-S -save-temps\" {} {{-0.i -0.s}}\n+outest \"$b asm savetmp 2\" $mult \"-S -save-temps\" {} {{-1.i -1.s -2.i -2.s}}\n+outest \"$b obj savetmp unnamed1\" $sing \"-c -save-temps\" {} {{-0.i -0.s -0.o}}\n+outest \"$b obj savetmp unnamed2\" $mult \"-c -save-temps\" {} {{-1.i -1.s -1.o -2.i -2.s -2.o}}\n+\n+# Aux outputs computed within the driver, based on output name (and\n+# input).\n+outest \"$b cpp savetmp named0\" $sing \"-E -o $b-0.i -save-temps\" {} {{-0.i}}\n+outest \"$b asm savetmp named0\" $sing \"-S -o $b-0.s -save-temps\" {} {{-0.i -0.s}}\n+outest \"$b obj savetmp named0\" $sing \"-c -o $b-0.o -save-temps\" {} {{-0.i -0.s -0.o}}\n+outest \"$b cpp savetmp namedb\" $sing \"-E -o $b.i -save-temps\" {} {{.i}}\n+outest \"$b asm savetmp namedb\" $sing \"-S -o $b.s -save-temps\" {} {{.i .s}}\n+outest \"$b obj savetmp namedb\" $sing \"-c -o $b.o -save-temps\" {} {{.i .s .o}}\n+\n+# When linking, the executable name gets prepended to aux output\n+# basenames, except when executable and single input share the same\n+# basename.\n+outest \"$b exe savetmp unnamed1\" $sing \"-save-temps\" {} {{a--0.i a--0.s a--0.o a.{out,exe}}}\n+outest \"$b exe savetmp unnamed2\" $mult \"-save-temps\" {} {{a--1.i a--1.s a--1.o a--2.i a--2.s a--2.o a.{out,exe}}}\n+outest \"$b exe savetmp named0\" $sing \"-o $b-0.exe -save-temps\" {} {{-0.i -0.s -0.o -0.exe}}\n+outest \"$b exe savetmp namedb\" $sing \"-o $b.exe -save-temps\" {} {{--0.i --0.s --0.o .exe}}\n+outest \"$b exe savetmp named2\" $mult \"-o $b.exe -save-temps\" {} {{--1.i --1.s --1.o --2.i --2.s --2.o .exe}}\n+\n+# Setting the main output to a dir selects it as the default aux&dump\n+# location.\n+outest \"$b cpp savetmp namedir0\" $sing \"-E -o o/$b-0.i -save-temps\" {o/} {{-0.i} {}}\n+outest \"$b asm savetmp namedir0\" $sing \"-S -o o/$b-0.s -save-temps\" {o/} {{-0.i -0.s} {}}\n+outest \"$b obj savetmp namedir0\" $sing \"-c -o o/$b-0.o -save-temps\" {o/} {{-0.i -0.s -0.o} {}}\n+outest \"$b cpp savetmp namedir\" $sing \"-E -o o/$b.i -save-temps\" {o/} {{.i} {}}\n+outest \"$b asm savetmp namedir\" $sing \"-S -o o/$b.s -save-temps\" {o/} {{.i .s} {}}\n+outest \"$b obj savetmp namedir\" $sing \"-c -o o/$b.o -save-temps\" {o/} {{.i .s .o} {}}\n+outest \"$b exe savetmp namedir0\" $sing \"-o o/$b-0.exe -save-temps\" {o/} {{-0.i -0.s -0.o -0.exe} {}}\n+outest \"$b exe savetmp namedirb\" $sing \"-o o/$b.exe -save-temps\" {o/} {{--0.i --0.s --0.o .exe} {}}\n+outest \"$b exe savetmp namedir2\" $mult \"-o o/$b.exe -save-temps\" {o/} {{--1.i --1.s --1.o --2.i --2.s --2.o .exe} {}}\n+\n+# -save-temps=cwd overrides the aux output location to the current dir.\n+outest \"$b obj savecwd unnamed1\" $sing \"-c -save-temps=cwd\" {} {{-0.i -0.s -0.o}}\n+outest \"$b obj savecwd unnamed2\" $mult \"-c -save-temps=cwd\" {} {{-1.i -1.s -1.o -2.i -2.s -2.o}}\n+outest \"$b cpp savecwd named0\" $sing \"-E -o $b-0.i -save-temps=cwd\" {} {{-0.i}}\n+outest \"$b asm savecwd named0\" $sing \"-S -o $b-0.s -save-temps=cwd\" {} {{-0.i -0.s}}\n+outest \"$b obj savecwd named0\" $sing \"-c -o $b-0.o -save-temps=cwd\" {} {{-0.i -0.s -0.o}}\n+outest \"$b cpp savecwd namedb\" $sing \"-E -o $b.i -save-temps=cwd\" {} {{.i}}\n+outest \"$b asm savecwd namedb\" $sing \"-S -o $b.s -save-temps=cwd\" {} {{.i .s}}\n+outest \"$b obj savecwd namedb\" $sing \"-c -o $b.o -save-temps=cwd\" {} {{.i .s .o}}\n+outest \"$b exe savecwd unnamed1\" $sing \"-save-temps=cwd\" {} {{a--0.i a--0.s a--0.o a.{out,exe}}}\n+outest \"$b exe savecwd unnamed2\" $mult \"-save-temps=cwd\" {} {{a--1.i a--1.s a--1.o a--2.i a--2.s a--2.o a.{out,exe}}}\n+outest \"$b exe savecwd named0\" $sing \"-o $b-0.exe -save-temps=cwd\" {} {{-0.i -0.s -0.o -0.exe}}\n+outest \"$b exe savecwd namedb\" $sing \"-o $b.exe -save-temps=cwd\" {} {{--0.i --0.s --0.o .exe}}\n+outest \"$b exe savecwd named2\" $mult \"-o $b.exe -save-temps=cwd\" {} {{--1.i --1.s --1.o --2.i --2.s --2.o .exe}}\n+\n+outest \"$b cpp savecwd namedir0\" $sing \"-E -o o/$b-0.i -save-temps=cwd\" {o/} {{-0.i} {}}\n+outest \"$b asm savecwd namedir0\" $sing \"-S -o o/$b-0.s -save-temps=cwd\" {o/} {{-0.s} {-0.i}}\n+outest \"$b obj savecwd namedir0\" $sing \"-c -o o/$b-0.o -save-temps=cwd\" {o/} {{-0.o} {-0.i -0.s}}\n+outest \"$b cpp savecwd namedir\" $sing \"-E -o o/$b.i -save-temps=cwd\" {o/} {{.i} {}}\n+outest \"$b asm savecwd namedir\" $sing \"-S -o o/$b.s -save-temps=cwd\" {o/} {{.s} {.i}}\n+outest \"$b obj savecwd namedir\" $sing \"-c -o o/$b.o -save-temps=cwd\" {o/} {{.o} {.i .s}}\n+outest \"$b exe savecwd namedir0\" $sing \"-o o/$b-0.exe -save-temps=cwd\" {o/} {{-0.exe} {-0.i -0.s -0.o}}\n+outest \"$b exe savecwd namedirb\" $sing \"-o o/$b.exe -save-temps=cwd\" {o/} {{.exe} {--0.i --0.s --0.o}}\n+outest \"$b exe savecwd namedir2\" $mult \"-o o/$b.exe -save-temps=cwd\" {o/} {{.exe} {--1.i --1.s --1.o --2.i --2.s --2.o}}\n+\n+# -save-temps=obj overrides the aux output location to that of the\n+# main output\n+outest \"$b obj saveobj unnamed1\" $sing \"-c -save-temps=obj\" {} {{-0.i -0.s -0.o}}\n+outest \"$b obj saveobj unnamed2\" $mult \"-c -save-temps=obj\" {} {{-1.i -1.s -1.o -2.i -2.s -2.o}}\n+outest \"$b cpp saveobj named0\" $sing \"-E -o $b-0.i -save-temps=obj\" {} {{-0.i}}\n+outest \"$b asm saveobj named0\" $sing \"-S -o $b-0.s -save-temps=obj\" {} {{-0.i -0.s}}\n+outest \"$b obj saveobj named0\" $sing \"-c -o $b-0.o -save-temps=obj\" {} {{-0.i -0.s -0.o}}\n+outest \"$b cpp saveobj namedb\" $sing \"-E -o $b.i -save-temps=obj\" {} {{.i}}\n+outest \"$b asm saveobj namedb\" $sing \"-S -o $b.s -save-temps=obj\" {} {{.i .s}}\n+outest \"$b obj saveobj namedb\" $sing \"-c -o $b.o -save-temps=obj\" {} {{.i .s .o}}\n+outest \"$b exe saveobj unnamed1\" $sing \"-save-temps=obj\" {} {{a--0.i a--0.s a--0.o a.{out,exe}}}\n+outest \"$b exe saveobj unnamed2\" $mult \"-save-temps=obj\" {} {{a--1.i a--1.s a--1.o a--2.i a--2.s a--2.o a.{out,exe}}}\n+outest \"$b exe saveobj named0\" $sing \"-o $b-0.exe -save-temps=obj\" {} {{-0.i -0.s -0.o -0.exe}}\n+outest \"$b exe saveobj namedb\" $sing \"-o $b.exe -save-temps=obj\" {} {{--0.i --0.s --0.o .exe}}\n+outest \"$b exe saveobj named2\" $mult \"-o $b.exe -save-temps=obj\" {} {{--1.i --1.s --1.o --2.i --2.s --2.o .exe}}\n+\n+outest \"$b cpp saveobj namedir0\" $sing \"-E -o o/$b-0.i -save-temps=obj\" {o/} {{-0.i} {}}\n+outest \"$b asm saveobj namedir0\" $sing \"-S -o o/$b-0.s -save-temps=obj\" {o/} {{-0.i -0.s} {}}\n+outest \"$b obj saveobj namedir0\" $sing \"-c -o o/$b-0.o -save-temps=obj\" {o/} {{-0.i -0.s -0.o} {}}\n+outest \"$b cpp saveobj namedir\" $sing \"-E -o o/$b.i -save-temps=obj\" {o/} {{.i} {}}\n+outest \"$b asm saveobj namedir\" $sing \"-S -o o/$b.s -save-temps=obj\" {o/} {{.i .s} {}}\n+outest \"$b obj saveobj namedir\" $sing \"-c -o o/$b.o -save-temps=obj\" {o/} {{.i .s .o} {}}\n+outest \"$b exe saveobj namedir0\" $sing \"-o o/$b-0.exe -save-temps=obj\" {o/} {{-0.i -0.s -0.o -0.exe} {}}\n+outest \"$b exe saveobj namedirb\" $sing \"-o o/$b.exe -save-temps=obj\" {o/} {{--0.i --0.s --0.o .exe} {}}\n+outest \"$b exe saveobj namedir2\" $mult \"-o o/$b.exe -save-temps=obj\" {o/} {{--1.i --1.s --1.o --2.i --2.s --2.o .exe} {}}\n+\n+# Check -dumpdir overriding by -save-temps=*, and -save-temps\n+# non-overriding, with one catch: the presence of a given dumpdir,\n+# even if ultimately overridden, still disables the prepending of the\n+# executable basename to the aux&dump output basenames (or rather the\n+# appending of the executable basename to the dumpdir).\n+outest \"$b exe sobjovr namedir0\" $sing \"-o o/$b-0.exe -dumpdir no/ -save-temps=obj -save-temps\" {o/} {{-0.i -0.s -0.o -0.exe} {}}\n+outest \"$b exe sobjovr namedirb\" $sing \"-o o/$b.exe -dumpdir no/ -save-temps=obj -save-temps\" {o/} {{-0.i -0.s -0.o .exe} {}}\n+outest \"$b exe sobjovr namedir2\" $mult \"-o o/$b.exe -dumpdir no/ -save-temps=obj -save-temps\" {o/} {{-1.i -1.s -1.o -2.i -2.s -2.o .exe} {}}\n+outest \"$b exe scwdovr namedir0\" $sing \"-o o/$b-0.exe -dumpdir o/ -save-temps=cwd -save-temps\" {o/} {{-0.exe} {-0.i -0.s -0.o}}\n+outest \"$b exe scwdovr namedirb\" $sing \"-o o/$b.exe -dumpdir o/ -save-temps=cwd -save-temps\" {o/} {{.exe} {-0.i -0.s -0.o}}\n+outest \"$b exe scwdovr namedir2\" $mult \"-o o/$b.exe -dumpdir o/ -save-temps=cwd -save-temps\" {o/} {{.exe} {-1.i -1.s -1.o -2.i -2.s -2.o}}\n+outest \"$b exe ddstovr namedir0\" $sing \"-o $b-0.exe -dumpdir o/ -save-temps\" {o/} {{-0.i -0.s -0.o} {-0.exe}}\n+outest \"$b exe ddstovr namedirb\" $sing \"-o $b.exe -dumpdir o/ -save-temps\" {o/} {{-0.i -0.s -0.o} {.exe}}\n+outest \"$b exe ddstovr namedir2\" $mult \"-o $b.exe -dumpdir o/ -save-temps\" {o/} {{-1.i -1.s -1.o -2.i -2.s -2.o} {.exe}}\n+\n+# Check -dumpdir prevailing over -save-temps*.  Even though -dumpdir\n+# overrides the -save-temps=* directory selection, -save-temps remains\n+# enabled.\n+outest \"$b exe soddovr namedir0\" $sing \"-o o/$b-0.exe -save-temps=obj -dumpdir ./\" {o/} {{-0.exe} {-0.i -0.s -0.o}}\n+outest \"$b exe soddovr namedirb\" $sing \"-o o/$b.exe -save-temps=obj -dumpdir ./\" {o/} {{.exe} {-0.i -0.s -0.o}}\n+outest \"$b exe soddovr namedir2\" $mult \"-o o/$b.exe -save-temps=obj -dumpdir ./\" {o/} {{.exe} {-1.i -1.s -1.o -2.i -2.s -2.o}}\n+outest \"$b exe scddovr namedir0\" $sing \"-o o/$b-0.exe -save-temps=cwd -dumpdir o/\" {o/} {{-0.i -0.s -0.o -0.exe} {}}\n+outest \"$b exe scddovr namedirb\" $sing \"-o o/$b.exe -save-temps=cwd -dumpdir o/\" {o/} {{-0.i -0.s -0.o .exe} {}}\n+outest \"$b exe scddovr namedir2\" $mult \"-o o/$b.exe -save-temps=cwd -dumpdir o/\" {o/} {{-1.i -1.s -1.o -2.i -2.s -2.o .exe} {}}\n+outest \"$b exe ddstovr namedir0\" $sing \"-o $b-0.exe -save-temps -dumpdir o/\" {o/} {{-0.i -0.s -0.o} {-0.exe}}\n+outest \"$b exe ddstovr namedirb\" $sing \"-o $b.exe -save-temps -dumpdir o/\" {o/} {{-0.i -0.s -0.o} {.exe}}\n+outest \"$b exe ddstovr namedir2\" $mult \"-o $b.exe -save-temps -dumpdir o/\" {o/} {{-1.i -1.s -1.o -2.i -2.s -2.o} {.exe}}\n+\n+\n+# Compiler- and driver-generated aux and dump outputs.\n+# -fdump-rtl-final creates a .c.???r.final dump in the compiler.\n+# -fstack-usage creates a .su aux output in the compiler.\n+# $gsplit_dwarf extracts a .dwo aux output from the .o in the driver.\n+outest \"$b asm auxdump 1\" $sing \"-S -g -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {} {{-0.c.???r.final -0.su -0.s}}\n+outest \"$b asm auxdump 2\" $mult \"-S -g -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {} {{-1.c.???r.final -1.su -1.s -2.c.???r.final -2.su -2.s}}\n+outest \"$b obj auxdump unnamed1\" $sing \"-c -g -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {} {{-0.c.???r.final -0.su -0.dwo -0.o}}\n+outest \"$b obj auxdump unnamed2\" $mult \"-c -g -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {} {{-1.c.???r.final -1.su -1.dwo -1.o -2.c.???r.final -2.su -2.dwo -2.o}}\n+\n+outest \"$b cpp auxdump named0\" $sing \"-E -o $b-0.i -g -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {} {{-0.i}}\n+outest \"$b asm auxdump named0\" $sing \"-S -o $b-0.s -g -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {} {{-0.c.???r.final -0.su -0.s}}\n+outest \"$b obj auxdump named0\" $sing \"-c -o $b-0.o -g -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {} {{-0.c.???r.final -0.su -0.dwo -0.o}}\n+outest \"$b cpp auxdump namedb\" $sing \"-E -o $b.i -g -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {} {{.i}}\n+outest \"$b asm auxdump namedb\" $sing \"-S -o $b.s -g -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {} {{.c.???r.final .su .s}}\n+outest \"$b obj auxdump namedb\" $sing \"-c -o $b.o -g -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {} {{.c.???r.final .su .dwo .o}}\n+\n+outest \"$b exe auxdump unnamed1\" $sing \"-g -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {} {{a--0.c.???r.final a--0.su a--0.dwo a.{out,exe}}}\n+outest \"$b exe auxdump unnamed2\" $mult \"-g -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {} {{a--1.c.???r.final a--1.su a--1.dwo a--2.c.???r.final a--2.su a--2.dwo a.{out,exe}}}\n+outest \"$b exe auxdump named0\" $sing \"-o $b-0.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {} {{-0.c.???r.final -0.su -0.dwo -0.exe}}\n+outest \"$b exe auxdump namedb\" $sing \"-o $b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {} {{--0.c.???r.final --0.su --0.dwo .exe}}\n+outest \"$b exe auxdump named2\" $mult \"-o $b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {} {{--1.c.???r.final --1.su --1.dwo --2.c.???r.final --2.su --2.dwo .exe}}\n+\n+outest \"$b cpp auxdump namedir0\" $sing \"-E -o o/$b-0.i -g -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {o/} {{-0.i} {}}\n+outest \"$b asm auxdump namedir0\" $sing \"-S -o o/$b-0.s -g -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {o/} {{-0.c.???r.final -0.su -0.s} {}}\n+outest \"$b obj auxdump namedir0\" $sing \"-c -o o/$b-0.o -g -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {o/} {{-0.c.???r.final -0.su -0.dwo -0.o} {}}\n+outest \"$b cpp auxdump namedir\" $sing \"-E -o o/$b.i -g -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {o/} {{.i} {}}\n+outest \"$b asm auxdump namedir\" $sing \"-S -o o/$b.s -g -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {o/} {{.c.???r.final .su .s} {}}\n+outest \"$b obj auxdump namedir\" $sing \"-c -o o/$b.o -g -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {o/} {{.c.???r.final .su .dwo .o} {}}\n+outest \"$b exe auxdump namedir0\" $sing \"-o o/$b-0.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {o/} {{-0.c.???r.final -0.su -0.dwo -0.exe} {}}\n+outest \"$b exe auxdump namedirb\" $sing \"-o o/$b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {o/} {{--0.c.???r.final --0.su --0.dwo .exe} {}}\n+outest \"$b exe auxdump namedir2\" $mult \"-o o/$b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {o/} {{--1.c.???r.final --1.su --1.dwo --2.c.???r.final --2.su --2.dwo .exe} {}}\n+\n+# Check that -save-temps doesn't break compiler aux or dumps as it\n+# changes temp file names.\n+outest \"$b asm auxdmps 1\" $sing \"-S -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -save-temps\" {} {{-0.i -0.c.???r.final -0.su -0.s}}\n+outest \"$b asm auxdmps 2\" $mult \"-S -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -save-temps\" {} {{-1.i -1.c.???r.final -1.su -1.s -2.i -2.c.???r.final -2.su -2.s}}\n+outest \"$b obj auxdmps unnamed1\" $sing \"-c -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -save-temps\" {} {{-0.i -0.c.???r.final -0.su -0.s -0.dwo -0.o}}\n+outest \"$b obj auxdmps unnamed2\" $mult \"-c -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -save-temps\" {} {{-1.i -1.c.???r.final -1.su -1.s -1.dwo -1.o -2.i -2.c.???r.final -2.su -2.s -2.dwo -2.o}}\n+\n+outest \"$b cpp auxdmps named0\" $sing \"-E -o $b-0.i -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -save-temps\" {} {{-0.i}}\n+outest \"$b asm auxdmps named0\" $sing \"-S -o $b-0.s -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -save-temps\" {} {{-0.i -0.c.???r.final -0.su -0.s}}\n+outest \"$b obj auxdmps named0\" $sing \"-c -o $b-0.o -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -save-temps\" {} {{-0.i -0.c.???r.final -0.su -0.s -0.dwo -0.o}}\n+outest \"$b cpp auxdmps namedb\" $sing \"-E -o $b.i -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -save-temps\" {} {{.i}}\n+outest \"$b asm auxdmps namedb\" $sing \"-S -o $b.s -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -save-temps\" {} {{.i .c.???r.final .su .s}}\n+outest \"$b obj auxdmps namedb\" $sing \"-c -o $b.o -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -save-temps\" {} {{.i .c.???r.final .su .s .dwo .o}}\n+\n+outest \"$b exe auxdmps unnamed1\" $sing \"-g -fdump-rtl-final -fstack-usage $gsplit_dwarf -save-temps\" {} {{a--0.i a--0.c.???r.final a--0.su a--0.s a--0.dwo a--0.o a.{out,exe}}}\n+outest \"$b exe auxdmps unnamed2\" $mult \"-g -fdump-rtl-final -fstack-usage $gsplit_dwarf -save-temps\" {} {{a--1.i a--1.c.???r.final a--1.su a--1.s a--1.dwo a--1.o a--2.i a--2.c.???r.final a--2.su a--2.s a--2.dwo a--2.o a.{out,exe}}}\n+outest \"$b exe auxdmps named0\" $sing \"-o $b-0.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -save-temps\" {} {{-0.i -0.c.???r.final -0.su -0.s -0.dwo -0.o -0.exe}}\n+outest \"$b exe auxdmps namedb\" $sing \"-o $b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -save-temps\" {} {{--0.i --0.c.???r.final --0.su --0.s --0.dwo --0.o .exe}}\n+outest \"$b exe auxdmps named2\" $mult \"-o $b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -save-temps\" {} {{--1.i --1.c.???r.final --1.su --1.s --1.dwo --1.o --2.i --2.c.???r.final --2.su --2.s --2.dwo --2.o .exe}}\n+\n+outest \"$b cpp auxdmps namedir0\" $sing \"-E -o o/$b-0.i -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -save-temps\" {o/} {{-0.i} {}}\n+outest \"$b asm auxdmps namedir0\" $sing \"-S -o o/$b-0.s -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -save-temps\" {o/} {{-0.i -0.c.???r.final -0.su -0.s} {}}\n+outest \"$b obj auxdmps namedir0\" $sing \"-c -o o/$b-0.o -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -save-temps\" {o/} {{-0.i -0.c.???r.final -0.su -0.s -0.dwo -0.o} {}}\n+outest \"$b cpp auxdmps namedir\" $sing \"-E -o o/$b.i -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -save-temps\" {o/} {{.i} {}}\n+outest \"$b asm auxdmps namedir\" $sing \"-S -o o/$b.s -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -save-temps\" {o/} {{.i .c.???r.final .su .s} {}}\n+outest \"$b obj auxdmps namedir\" $sing \"-c -o o/$b.o -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -save-temps\" {o/} {{.i .c.???r.final .su .s .dwo .o} {}}\n+outest \"$b exe auxdmps namedir0\" $sing \"-o o/$b-0.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -save-temps\" {o/} {{-0.i -0.c.???r.final -0.su -0.s -0.dwo -0.o -0.exe} {}}\n+outest \"$b exe auxdmps namedirb\" $sing \"-o o/$b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -save-temps\" {o/} {{--0.i --0.c.???r.final --0.su --0.s --0.dwo --0.o .exe} {}}\n+outest \"$b exe auxdmps namedir2\" $mult \"-o o/$b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -save-temps\" {o/} {{--1.i --1.c.???r.final --1.su --1.s --1.dwo --1.o --2.i --2.c.???r.final --2.su --2.s --2.dwo --2.o .exe} {}}\n+\n+\n+# Check that dumpdir changes the location of non-primary outputs\n+outest \"$b asm dumpdir 1\" $sing \"-S -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/\" {od/} {{-0.c.???r.final -0.su} {-0.s}}\n+outest \"$b asm dumpdir 2\" $mult \"-S -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/\" {od/} {{-1.c.???r.final -1.su -2.c.???r.final -2.su} {-1.s -2.s}}\n+outest \"$b obj dumpdir unnamed1\" $sing \"-c -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/\" {od/} {{-0.c.???r.final -0.su -0.dwo} {-0.o}}\n+outest \"$b obj dumpdir unnamed2\" $mult \"-c -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/\" {od/} {{-1.c.???r.final -1.su -1.dwo -2.c.???r.final -2.su -2.dwo} {-1.o -2.o}}\n+\n+outest \"$b cpp dumpdir named0\" $sing \"-E -o $b-0.i -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/\" {od/} {{} {-0.i}}\n+outest \"$b asm dumpdir named0\" $sing \"-S -o $b-0.s -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/\" {od/} {{-0.c.???r.final -0.su} {-0.s}}\n+outest \"$b obj dumpdir named0\" $sing \"-c -o $b-0.o -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/\" {od/} {{-0.c.???r.final -0.su -0.dwo} {-0.o}}\n+outest \"$b cpp dumpdir namedb\" $sing \"-E -o $b.i -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/\" {od/} {{} {.i}}\n+outest \"$b asm dumpdir namedb\" $sing \"-S -o $b.s -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/\" {od/} {{.c.???r.final .su} {.s}}\n+outest \"$b obj dumpdir namedb\" $sing \"-c -o $b.o -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/\" {od/} {{.c.???r.final .su .dwo} {.o}}\n+\n+outest \"$b exe dumpdir unnamed1\" $sing \"-g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/a-\" {od/} {{a--0.c.???r.final a--0.su a--0.dwo} {a.{out,exe}}}\n+outest \"$b exe dumpdir unnamed2\" $mult \"-g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/a-\" {od/} {{a--1.c.???r.final a--1.su a--1.dwo a--2.c.???r.final a--2.su a--2.dwo} {a.{out,exe}}}\n+outest \"$b exe dumpdir named0\" $sing \"-o $b-0.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/\" {od/} {{-0.c.???r.final -0.su -0.dwo} {-0.exe}}\n+outest \"$b exe dumpdir namedb\" $sing \"-o $b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/\" {od/} {{-0.c.???r.final -0.su -0.dwo} {.exe}}\n+outest \"$b exe dumpdir named2\" $mult \"-o $b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/\" {od/} {{-1.c.???r.final -1.su -1.dwo -2.c.???r.final -2.su -2.dwo} {.exe}}\n+outest \"$b exe dumpdira namedb\" $sing \"-o $b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/a-\" {od/} {{a--0.c.???r.final a--0.su a--0.dwo} {.exe}}\n+outest \"$b exe dumpdira named2\" $mult \"-o $b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/a-\" {od/} {{a--1.c.???r.final a--1.su a--1.dwo a--2.c.???r.final a--2.su a--2.dwo} {.exe}}\n+outest \"$b exe dumpdirb namedb\" $sing \"-o $b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/$b-\" {od/} {{--0.c.???r.final --0.su --0.dwo} {.exe}}\n+outest \"$b exe dumpdirb named2\" $mult \"-o $b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/$b-\" {od/} {{--1.c.???r.final --1.su --1.dwo --2.c.???r.final --2.su --2.dwo} {.exe}}\n+\n+outest \"$b cpp dumpdir namedir0\" $sing \"-E -o o/$b-0.i -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/\" {od/ o/} {{} {-0.i} {}}\n+outest \"$b asm dumpdir namedir0\" $sing \"-S -o o/$b-0.s -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/\" {od/ o/} {{-0.c.???r.final -0.su} {-0.s} {}}\n+outest \"$b obj dumpdir namedir0\" $sing \"-c -o o/$b-0.o -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/\" {od/ o/} {{-0.c.???r.final -0.su -0.dwo} {-0.o} {}}\n+outest \"$b cpp dumpdir namedir\" $sing \"-E -o o/$b.i -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/\" {od/ o/} {{} {.i} {}}\n+outest \"$b asm dumpdir namedir\" $sing \"-S -o o/$b.s -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/\" {od/ o/} {{.c.???r.final .su} {.s} {}}\n+outest \"$b obj dumpdir namedir\" $sing \"-c -o o/$b.o -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/\" {od/ o/} {{.c.???r.final .su .dwo} {.o} {}}\n+outest \"$b exe dumpdir namedir0\" $sing \"-o o/$b-0.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/\" {od/ o/} {{-0.c.???r.final -0.su -0.dwo} {-0.exe} {}}\n+outest \"$b exe dumpdir namedirb\" $sing \"-o o/$b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/\" {od/ o/} {{-0.c.???r.final -0.su -0.dwo} {.exe} {}}\n+outest \"$b exe dumpdir namedir2\" $mult \"-o o/$b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/\" {od/ o/} {{-1.c.???r.final -1.su -1.dwo -2.c.???r.final -2.su -2.dwo} {.exe} {}}\n+outest \"$b exe dumpdira namedirb\" $sing \"-o o/$b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/a-\" {od/ o/} {{a--0.c.???r.final a--0.su a--0.dwo} {.exe} {}}\n+outest \"$b exe dumpdira namedir2\" $mult \"-o o/$b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/a-\" {od/ o/} {{a--1.c.???r.final a--1.su a--1.dwo a--2.c.???r.final a--2.su a--2.dwo} {.exe} {}}\n+outest \"$b exe dumpdirb namedirb\" $sing \"-o o/$b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/$b-\" {od/ o/} {{--0.c.???r.final --0.su --0.dwo} {.exe} {}}\n+outest \"$b exe dumpdirb namedir2\" $mult \"-o o/$b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/$b-\" {od/ o/} {{--1.c.???r.final --1.su --1.dwo --2.c.???r.final --2.su --2.dwo} {.exe} {}}\n+\n+# Check that a -dumpbase with a dir component disregards the -dumpdir\n+# prefix.  Also, start testing -dumpbase-ext to distinguish between\n+# aux and dump files: only the latter retain the named extension.\n+# -dumpbase-ext, if absent or used in combination with -dumpbase for\n+# an executable name, defaults to the extension of the source file.\n+# The specified dumpbase is combined with the dumpdir prefix when\n+# processing more than one input (we couldn't use the same dumpbase\n+# for them all), or when linking (the specified dumpbase is then used\n+# as prefix instead of the linker output, and a new dumpbase is\n+# computed per source).\n+outest \"$b asm dbsovrdd 1\" $sing \"-S -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b\" {od/} {{.???r.final .su} {-0.s}}\n+outest \"$b asm dbsovrddx 1\" $sing \"-S -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b.c -dumpbase-ext .c\" {od/} {{.c.???r.final .su} {-0.s}}\n+outest \"$b asm dbsovrdd-x 1\" $sing \"-S -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b.c\" {od/} {{.c.???r.final .c.su} {-0.s}}\n+outest \"$b asm dbsovrdd.x 1\" $sing \"-S -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b.x\" {od/} {{.x.???r.final .x.su} {-0.s}}\n+outest \"$b asm dbsovrdd 2\" $mult \"-S -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b\" {od/} {{--1.c.???r.final --1.su --2.c.???r.final --2.su} {-1.s -2.s}}\n+outest \"$b asm dbsovrddx 2\" $mult \"-S -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b.x -dumpbase-ext .x\" {od/} {{--1.c.???r.final --1.su --2.c.???r.final --2.su} {-1.s -2.s}}\n+outest \"$b obj dbsovrdd unnamed1\" $sing \"-c -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b\" {od/} {{.???r.final .su .dwo} {-0.o}}\n+outest \"$b obj dbsovrddx unnamed1\" $sing \"-c -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b.c -dumpbase-ext .c\" {od/} {{.c.???r.final .su .dwo} {-0.o}}\n+outest \"$b obj dbsovrdd unnamed2\" $mult \"-c -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b\" {od/} {{--1.c.???r.final --1.su --1.dwo --2.c.???r.final --2.su --2.dwo} {-1.o -2.o}}\n+\n+outest \"$b cpp dbsovrdd named0\" $sing \"-E -o $b-0.i -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b\" {od/} {{} {-0.i}}\n+outest \"$b asm dbsovrdd named0\" $sing \"-S -o $b-0.s -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b\" {od/} {{.???r.final .su} {-0.s}}\n+outest \"$b obj dbsovrdd named0\" $sing \"-c -o $b-0.o -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b\" {od/} {{.???r.final .su .dwo} {-0.o}}\n+outest \"$b cpp dbsovrdd namedb\" $sing \"-E -o $b.i -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b\" {od/} {{} {.i}}\n+outest \"$b asm dbsovrdd namedb\" $sing \"-S -o $b.s -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b\" {od/} {{.???r.final .su} {.s}}\n+outest \"$b obj dbsovrdd namedb\" $sing \"-c -o $b.o -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b\" {od/} {{.???r.final .su .dwo} {.o}}\n+\n+# Nit: -dumpdir affects whether the specified dumpbase is combined\n+# into dumpdir or taken as the output basename, even if dumpbase will\n+# ultimately override it.\n+outest \"$b exe dbsovrdd unnamed1\" $sing \"-g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b\" {od/} {{.???r.final .su .dwo} {a.{out,exe}}}\n+outest \"$b exe dbsovrdd unnamed2\" $mult \"-g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/a\" {od/} {{a--1.c.???r.final a--1.su a--1.dwo a--2.c.???r.final a--2.su a--2.dwo} {a.{out,exe}}}\n+outest \"$b exe dbsovrdd named0\" $sing \"-o $b-0.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b\" {od/} {{.???r.final .su .dwo} {-0.exe}}\n+outest \"$b exe dbsovrdd namedb\" $sing \"-o $b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b.exe -dumpbase-ext .exe\" {od/} {{.exe.???r.final .su .dwo} {.exe}}\n+outest \"$b exe dbsovrdd named2\" $mult \"-o $b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b\" {od/} {{--1.c.???r.final --1.su --1.dwo --2.c.???r.final --2.su --2.dwo} {.exe}}\n+outest \"$b exe dbsovrdda namedb\" $sing \"-o $b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/a\" {od/} {{a.???r.final a.su a.dwo} {.exe}}\n+outest \"$b exe dbsovrddac namedb\" $sing \"-o $b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/a.c -dumpbase-ext .c\" {od/} {{a.c.???r.final a.su a.dwo} {.exe}}\n+outest \"$b exe dbsovrdda named2\" $mult \"-o $b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/a\" {od/} {{a--1.c.???r.final a--1.su a--1.dwo a--2.c.???r.final a--2.su a--2.dwo} {.exe}}\n+\n+outest \"$b cpp dbsovrdd namedir0\" $sing \"-E -o o/$b-0.i -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b\" {od/ o/} {{} {-0.i} {}}\n+outest \"$b asm dbsovrdd namedir0\" $sing \"-S -o o/$b-0.s -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b\" {od/ o/} {{.???r.final .su} {-0.s} {}}\n+outest \"$b obj dbsovrdd namedir0\" $sing \"-c -o o/$b-0.o -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b\" {od/ o/} {{.???r.final .su .dwo} {-0.o} {}}\n+outest \"$b cpp dbsovrdd namedir\" $sing \"-E -o o/$b.i -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b\" {od/ o/} {{} {.i} {}}\n+outest \"$b asm dbsovrdd namedir\" $sing \"-S -o o/$b.s -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b\" {od/ o/} {{.???r.final .su} {.s} {}}\n+outest \"$b obj dbsovrdd namedir\" $sing \"-c -o o/$b.o -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b\" {od/ o/} {{.???r.final .su .dwo} {.o} {}}\n+outest \"$b exe dbsovrdd namedir0\" $sing \"-o o/$b-0.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b\" {od/ o/} {{.???r.final .su .dwo} {-0.exe} {}}\n+outest \"$b exe dbsovrdd namedirb\" $sing \"-o o/$b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b.exe -dumpbase-ext .exe\" {od/ o/} {{.exe.???r.final .su .dwo} {.exe} {}}\n+outest \"$b exe dbsovrdd namedir2\" $mult \"-o o/$b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/$b\" {od/ o/} {{--1.c.???r.final --1.su --1.dwo --2.c.???r.final --2.su --2.dwo} {.exe} {}}\n+outest \"$b exe dbsovrdda namedirb\" $sing \"-o o/$b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/a\" {od/ o/} {{a.???r.final a.su a.dwo} {.exe} {}}\n+outest \"$b exe dbsovrdda namedir2\" $mult \"-o o/$b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir ./ -dumpbase od/a\" {od/ o/} {{a--1.c.???r.final a--1.su a--1.dwo a--2.c.???r.final a--2.su a--2.dwo} {.exe} {}}\n+\n+\n+# Check that a -dumpbase without a dir component adds to the -dumpdir\n+# prefix.\n+outest \"$b asm dbswthdd 1\" $sing \"-S -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b\" {od/} {{.???r.final .su} {-0.s}}\n+outest \"$b asm dbswthddx 1\" $sing \"-S -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b.c -dumpbase-ext .c\" {od/} {{.c.???r.final .su} {-0.s}}\n+outest \"$b asm dbswthdd-x 1\" $sing \"-S -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b.c\" {od/} {{.c.???r.final .c.su} {-0.s}}\n+outest \"$b asm dbswthdd.x 1\" $sing \"-S -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b.x\" {od/} {{.x.???r.final .x.su} {-0.s}}\n+outest \"$b asm dbswthdd 2\" $mult \"-S -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b\" {od/} {{--1.c.???r.final --1.su --2.c.???r.final --2.su} {-1.s -2.s}}\n+outest \"$b asm dbswthddx 2\" $mult \"-S -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b.x -dumpbase-ext .x\" {od/} {{--1.c.???r.final --1.su --2.c.???r.final --2.su} {-1.s -2.s}}\n+outest \"$b obj dbswthdd unnamed1\" $sing \"-c -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b\" {od/} {{.???r.final .su .dwo} {-0.o}}\n+outest \"$b obj dbswthddx unnamed1\" $sing \"-c -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b.c -dumpbase-ext .c\" {od/} {{.c.???r.final .su .dwo} {-0.o}}\n+outest \"$b obj dbswthdd unnamed2\" $mult \"-c -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b\" {od/} {{--1.c.???r.final --1.su --1.dwo --2.c.???r.final --2.su --2.dwo} {-1.o -2.o}}\n+\n+outest \"$b cpp dbswthdd named0\" $sing \"-E -o $b-0.i -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b\" {od/} {{} {-0.i}}\n+outest \"$b asm dbswthdd named0\" $sing \"-S -o $b-0.s -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b\" {od/} {{.???r.final .su} {-0.s}}\n+outest \"$b obj dbswthdd named0\" $sing \"-c -o $b-0.o -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b\" {od/} {{.???r.final .su .dwo} {-0.o}}\n+outest \"$b cpp dbswthdd namedb\" $sing \"-E -o $b.i -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b\" {od/} {{} {.i}}\n+outest \"$b asm dbswthdd namedb\" $sing \"-S -o $b.s -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b\" {od/} {{.???r.final .su} {.s}}\n+outest \"$b obj dbswthdd namedb\" $sing \"-c -o $b.o -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b\" {od/} {{.???r.final .su .dwo} {.o}}\n+\n+# Nitty details: -dumpdir affects whether the specified dumpbase is\n+# combined into dumpdir or taken as the output basename, even if\n+# dumpbase will ultimately override it.\n+outest \"$b exe dbswthdd unnamed1\" $sing \"-g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b\" {od/} {{.???r.final .su .dwo} {a.{out,exe}}}\n+outest \"$b exe dbswthdd unnamed2\" $mult \"-g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase a\" {od/} {{a--1.c.???r.final a--1.su a--1.dwo a--2.c.???r.final a--2.su a--2.dwo} {a.{out,exe}}}\n+outest \"$b exe dbswthdd named0\" $sing \"-o $b-0.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b\" {od/} {{.???r.final .su .dwo} {-0.exe}}\n+outest \"$b exe dbswthdd namedb\" $sing \"-o $b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b.exe -dumpbase-ext .exe\" {od/} {{.exe.???r.final .su .dwo} {.exe}}\n+outest \"$b exe dbswthdd named2\" $mult \"-o $b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b\" {od/} {{--1.c.???r.final --1.su --1.dwo --2.c.???r.final --2.su --2.dwo} {.exe}}\n+outest \"$b exe dbswthdda namedb\" $sing \"-o $b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase a\" {od/} {{a.???r.final a.su a.dwo} {.exe}}\n+outest \"$b exe dbswthddac namedb\" $sing \"-o $b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase a.c -dumpbase-ext .c\" {od/} {{a.c.???r.final a.su a.dwo} {.exe}}\n+outest \"$b exe dbswthdda named2\" $mult \"-o $b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase a\" {od/} {{a--1.c.???r.final a--1.su a--1.dwo a--2.c.???r.final a--2.su a--2.dwo} {.exe}}\n+\n+outest \"$b cpp dbswthdd namedir0\" $sing \"-E -o o/$b-0.i -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b\" {od/ o/} {{} {-0.i} {}}\n+outest \"$b asm dbswthdd namedir0\" $sing \"-S -o o/$b-0.s -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b\" {od/ o/} {{.???r.final .su} {-0.s} {}}\n+outest \"$b obj dbswthdd namedir0\" $sing \"-c -o o/$b-0.o -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b\" {od/ o/} {{.???r.final .su .dwo} {-0.o} {}}\n+outest \"$b cpp dbswthdd namedir\" $sing \"-E -o o/$b.i -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b\" {od/ o/} {{} {.i} {}}\n+outest \"$b asm dbswthdd namedir\" $sing \"-S -o o/$b.s -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b\" {od/ o/} {{.???r.final .su} {.s} {}}\n+outest \"$b obj dbswthdd namedir\" $sing \"-c -o o/$b.o -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b\" {od/ o/} {{.???r.final .su .dwo} {.o} {}}\n+outest \"$b exe dbswthdd namedir0\" $sing \"-o o/$b-0.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b\" {od/ o/} {{.???r.final .su .dwo} {-0.exe} {}}\n+outest \"$b exe dbswthdd namedirb\" $sing \"-o o/$b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b.exe -dumpbase-ext .exe\" {od/ o/} {{.exe.???r.final .su .dwo} {.exe} {}}\n+outest \"$b exe dbswthdd namedir2\" $mult \"-o o/$b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase $b\" {od/ o/} {{--1.c.???r.final --1.su --1.dwo --2.c.???r.final --2.su --2.dwo} {.exe} {}}\n+outest \"$b exe dbswthdda namedirb\" $sing \"-o o/$b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase a\" {od/ o/} {{a.???r.final a.su a.dwo} {.exe} {}}\n+outest \"$b exe dbswthdda namedir2\" $mult \"-o o/$b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpdir od/ -dumpbase a\" {od/ o/} {{a--1.c.???r.final a--1.su a--1.dwo a--2.c.???r.final a--2.su a--2.dwo} {.exe} {}}\n+\n+\n+# Check for the minor differences when -dumpbase is used without\n+# -dumpdir.  The main difference between dbwoutdd and dbswthdd tests\n+# is in the single-input link tests: with the dump dir/ prefix moved\n+# to dumpbase, and without -dumpdir we end up using -dumpbase as the\n+# executable prefix rather than as the dumpbase for the single input.\n+outest \"$b asm dbwoutdd 1\" $sing \"-S -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b\" {od/} {{.???r.final .su} {-0.s}}\n+outest \"$b asm dbwoutddx 1\" $sing \"-S -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b.c -dumpbase-ext .c\" {od/} {{.c.???r.final .su} {-0.s}}\n+outest \"$b asm dbwoutdd-x 1\" $sing \"-S -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b.c\" {od/} {{.c.???r.final .c.su} {-0.s}}\n+outest \"$b asm dbwoutdd.x 1\" $sing \"-S -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b.x\" {od/} {{.x.???r.final .x.su} {-0.s}}\n+outest \"$b asm dbwoutdd 2\" $mult \"-S -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b\" {od/} {{--1.c.???r.final --1.su --2.c.???r.final --2.su} {-1.s -2.s}}\n+outest \"$b asm dbwoutddx 2\" $mult \"-S -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b.x -dumpbase-ext .x\" {od/} {{--1.c.???r.final --1.su --2.c.???r.final --2.su} {-1.s -2.s}}\n+outest \"$b obj dbwoutdd unnamed1\" $sing \"-c -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b\" {od/} {{.???r.final .su .dwo} {-0.o}}\n+outest \"$b obj dbwoutddx unnamed1\" $sing \"-c -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b.c -dumpbase-ext .c\" {od/} {{.c.???r.final .su .dwo} {-0.o}}\n+outest \"$b obj dbwoutdd unnamed2\" $mult \"-c -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b\" {od/} {{--1.c.???r.final --1.su --1.dwo --2.c.???r.final --2.su --2.dwo} {-1.o -2.o}}\n+\n+outest \"$b cpp dbwoutdd named0\" $sing \"-E -o $b-0.i -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b\" {od/} {{} {-0.i}}\n+outest \"$b asm dbwoutdd named0\" $sing \"-S -o $b-0.s -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b\" {od/} {{.???r.final .su} {-0.s}}\n+outest \"$b obj dbwoutdd named0\" $sing \"-c -o $b-0.o -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b\" {od/} {{.???r.final .su .dwo} {-0.o}}\n+outest \"$b cpp dbwoutdd namedb\" $sing \"-E -o $b.i -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b\" {od/} {{} {.i}}\n+outest \"$b asm dbwoutdd namedb\" $sing \"-S -o $b.s -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b\" {od/} {{.???r.final .su} {.s}}\n+outest \"$b obj dbwoutdd namedb\" $sing \"-c -o $b.o -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b\" {od/} {{.???r.final .su .dwo} {.o}}\n+\n+outest \"$b exe dbwoutdd unnamed1\" $sing \"-g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b\" {od/} {{--0.c.???r.final --0.su --0.dwo} {a.{out,exe}}}\n+outest \"$b exe dbwoutdd unnamed2\" $mult \"-g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/a\" {od/} {{a--1.c.???r.final a--1.su a--1.dwo a--2.c.???r.final a--2.su a--2.dwo} {a.{out,exe}}}\n+outest \"$b exe dbwoutdd named0\" $sing \"-o $b-0.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b\" {od/} {{--0.c.???r.final --0.su --0.dwo} {-0.exe}}\n+outest \"$b exe dbwoutdd named0d\" $sing \"-o od/$b-0.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase $b\" {od/} {{--0.c.???r.final --0.su --0.dwo -0.exe} {}}\n+outest \"$b exe dbwoutdd namedb\" $sing \"-o $b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b.exe -dumpbase-ext .exe\" {od/} {{--0.c.???r.final --0.su --0.dwo} {.exe}}\n+outest \"$b exe dbwoutdd named2\" $mult \"-o $b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b\" {od/} {{--1.c.???r.final --1.su --1.dwo --2.c.???r.final --2.su --2.dwo} {.exe}}\n+outest \"$b exe dbwoutdda namedb\" $sing \"-o $b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/a\" {od/} {{a--0.c.???r.final a--0.su a--0.dwo} {.exe}}\n+outest \"$b exe dbwoutddac namedb\" $sing \"-o $b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/a.c -dumpbase-ext .c\" {od/} {{a--0.c.???r.final a--0.su a--0.dwo} {.exe}}\n+outest \"$b exe dbwoutdda named2\" $mult \"-o $b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/a\" {od/} {{a--1.c.???r.final a--1.su a--1.dwo a--2.c.???r.final a--2.su a--2.dwo} {.exe}}\n+\n+outest \"$b cpp dbwoutdd namedir0\" $sing \"-E -o o/$b-0.i -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b\" {od/ o/} {{} {-0.i} {}}\n+outest \"$b asm dbwoutdd namedir0\" $sing \"-S -o o/$b-0.s -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b\" {od/ o/} {{.???r.final .su} {-0.s} {}}\n+outest \"$b obj dbwoutdd namedir0\" $sing \"-c -o o/$b-0.o -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b\" {od/ o/} {{.???r.final .su .dwo} {-0.o} {}}\n+outest \"$b cpp dbwoutdd namedir\" $sing \"-E -o o/$b.i -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b\" {od/ o/} {{} {.i} {}}\n+outest \"$b asm dbwoutdd namedir\" $sing \"-S -o o/$b.s -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b\" {od/ o/} {{.???r.final .su} {.s} {}}\n+outest \"$b obj dbwoutdd namedir\" $sing \"-c -o o/$b.o -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b\" {od/ o/} {{.???r.final .su .dwo} {.o} {}}\n+outest \"$b exe dbwoutdd namedir0\" $sing \"-o o/$b-0.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b\" {od/ o/} {{--0.c.???r.final --0.su --0.dwo} {-0.exe} {}}\n+outest \"$b exe dbwoutdd namedirb\" $sing \"-o o/$b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b.exe -dumpbase-ext .exe\" {od/ o/} {{--0.c.???r.final --0.su --0.dwo} {.exe} {}}\n+outest \"$b exe dbwoutdd namedir2\" $mult \"-o o/$b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/$b\" {od/ o/} {{--1.c.???r.final --1.su --1.dwo --2.c.???r.final --2.su --2.dwo} {.exe} {}}\n+outest \"$b exe dbwoutdda namedirb\" $sing \"-o o/$b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/a\" {od/ o/} {{a--0.c.???r.final a--0.su a--0.dwo} {.exe} {}}\n+outest \"$b exe dbwoutdda namedir2\" $mult \"-o o/$b.exe -g -fdump-rtl-final -fstack-usage $gsplit_dwarf -dumpbase od/a\" {od/ o/} {{a--1.c.???r.final a--1.su a--1.dwo a--2.c.???r.final a--2.su a--2.dwo} {.exe} {}}\n+\n+# -fcompare-debug\n+outest \"$b obj compare-debug\" $sing \"-c -fcompare-debug -fdump-rtl-final -fstack-usage $gsplit_dwarf -fdump-final-insns\" {} {{-0.c.???r.final -0.su -0.c.gkd -0.gk.c.???r.final -0.dwo -0.o}}\n+outest \"$b obj compare-debug save-temps\" $sing \"-c -fcompare-debug -save-temps -fdump-rtl-final -fstack-usage $gsplit_dwarf -fdump-final-insns\" {} {{-0.c.???r.final -0.su -0.i -0.c.gkd -0.s -0.gk.i -0.gk.c.???r.final -0.gk.c.gkd -0.dwo -0.o}}\n+\n+# -flto\n+outest \"$b lto sing unnamed\" $sing \"-O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {} {{a--0.c.???i.icf a.wpa.???i.icf a.ltrans0.ltrans.???r.final a.ltrans0.ltrans.su a.{out,exe}}}\n+outest \"$b lto mult unnamed\" $mult \"-O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {} {{a--1.c.???i.icf a--2.c.???i.icf  a.wpa.???i.icf a.ltrans0.ltrans.???r.final a.ltrans0.ltrans.su a.{out,exe}}}\n+outest \"$b lto sing named\" $sing \"-o $b.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {} {{--0.c.???i.icf .wpa.???i.icf .ltrans0.ltrans.???r.final .ltrans0.ltrans.su .exe}}\n+outest \"$b lto mult named\" $mult \"-o $b.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {} {{--1.c.???i.icf --2.c.???i.icf .wpa.???i.icf .ltrans0.ltrans.???r.final .ltrans0.ltrans.su .exe}}\n+outest \"$b lto sing nameddir\" $sing \"-o dir/$b.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--0.c.???i.icf .wpa.???i.icf .ltrans0.ltrans.???r.final .ltrans0.ltrans.su .exe} {}}\n+outest \"$b lto mult nameddir\" $mult \"-o dir/$b.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--1.c.???i.icf --2.c.???i.icf .wpa.???i.icf .ltrans0.ltrans.???r.final .ltrans0.ltrans.su .exe} {}}\n+\n+# -dumpbase without -dumpdir.  The trailing dumppfx dash after it is\n+# combined with dumpbase turns into a period when passed to lto as\n+# -dumpdir, because the dash is introduced by the compiler driver.\n+outest \"$b lto sing dumpbase unnamed\" $sing \"-dumpbase dir/$b -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--0.c.???i.icf .wpa.???i.icf .ltrans0.ltrans.???r.final .ltrans0.ltrans.su} {a.{out,exe}}}\n+outest \"$b lto mult dumpbase unnamed\" $mult \"-dumpbase dir/$b -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--1.c.???i.icf --2.c.???i.icf .wpa.???i.icf .ltrans0.ltrans.???r.final .ltrans0.ltrans.su} {a.{out,exe}}}\n+outest \"$b lto sing dumpbase named\" $sing \"-dumpbase dir/$b -o $b-0.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--0.c.???i.icf .wpa.???i.icf .ltrans0.ltrans.???r.final .ltrans0.ltrans.su} {-0.exe}}\n+outest \"$b lto mult dumpbase named\" $mult \"-dumpbase dir/$b -o $b-1.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--1.c.???i.icf --2.c.???i.icf .wpa.???i.icf .ltrans0.ltrans.???r.final .ltrans0.ltrans.su} {-1.exe}}\n+outest \"$b lto sing dumpbase namedb\" $sing \"-dumpbase dir/$b -o $b.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--0.c.???i.icf .wpa.???i.icf .ltrans0.ltrans.???r.final .ltrans0.ltrans.su} {.exe}}\n+outest \"$b lto mult dumpbase namedb\" $mult \"-dumpbase dir/$b -o $b.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--1.c.???i.icf --2.c.???i.icf .wpa.???i.icf .ltrans0.ltrans.???r.final .ltrans0.ltrans.su} {.exe}}\n+\n+# -dumpdir without -dumpbase.  The trailing dash in -dumpdir is given\n+# by the user, thus not replaced with a dot.\n+outest \"$b lto sing dumpdir unnamed\" $sing \"-dumpdir dir/$b- -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--0.c.???i.icf -wpa.???i.icf -ltrans0.ltrans.???r.final -ltrans0.ltrans.su} {a.{out,exe}}}\n+outest \"$b lto mult dumpdir unnamed\" $mult \"-dumpdir dir/$b- -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--1.c.???i.icf --2.c.???i.icf -wpa.???i.icf -ltrans0.ltrans.???r.final -ltrans0.ltrans.su} {a.{out,exe}}}\n+outest \"$b lto sing dumpdir named\" $sing \"-dumpdir dir/$b- -o $b-0.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--0.c.???i.icf -wpa.???i.icf -ltrans0.ltrans.???r.final -ltrans0.ltrans.su} {-0.exe}}\n+outest \"$b lto mult dumpdir named\" $mult \"-dumpdir dir/$b- -o $b-1.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--1.c.???i.icf --2.c.???i.icf -wpa.???i.icf -ltrans0.ltrans.???r.final -ltrans0.ltrans.su} {-1.exe}}\n+outest \"$b lto sing dumpdir namedb\" $sing \"-dumpdir dir/$b- -o $b.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--0.c.???i.icf -wpa.???i.icf -ltrans0.ltrans.???r.final -ltrans0.ltrans.su} {.exe}}\n+outest \"$b lto mult dumpdir namedb\" $mult \"-dumpdir dir/$b- -o $b.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--1.c.???i.icf --2.c.???i.icf -wpa.???i.icf -ltrans0.ltrans.???r.final -ltrans0.ltrans.su} {.exe}}\n+\n+# -dumpdir and non-overriding -dumpbase.\n+outest \"$b lto dbswthdd sing unnamed\" $sing \"-dumpdir dir/ -dumpbase $b -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{.???i.icf .wpa.???i.icf .ltrans0.ltrans.???r.final .ltrans0.ltrans.su} {a.{out,exe}}}\n+outest \"$b lto dbswthdd mult unnamed\" $mult \"-dumpdir dir/ -dumpbase $b -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--1.c.???i.icf --2.c.???i.icf .wpa.???i.icf .ltrans0.ltrans.???r.final .ltrans0.ltrans.su} {a.{out,exe}}}\n+outest \"$b lto dbswthdd sing named\" $sing \"-dumpdir dir/ -dumpbase $b -o $b-0.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{.???i.icf .wpa.???i.icf .ltrans0.ltrans.???r.final .ltrans0.ltrans.su} {-0.exe}}\n+outest \"$b lto dbswthdd mult named\" $mult \"-dumpdir dir/ -dumpbase $b -o $b-1.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--1.c.???i.icf --2.c.???i.icf .wpa.???i.icf .ltrans0.ltrans.???r.final .ltrans0.ltrans.su} {-1.exe}}\n+outest \"$b lto dbswthdd sing namedb\" $sing \"-dumpdir dir/ -dumpbase $b -o $b.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{.???i.icf .wpa.???i.icf .ltrans0.ltrans.???r.final .ltrans0.ltrans.su} {.exe}}\n+outest \"$b lto dbswthdd mult namedb\" $mult \"-dumpdir dir/ -dumpbase $b -o $b.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--1.c.???i.icf --2.c.???i.icf .wpa.???i.icf .ltrans0.ltrans.???r.final .ltrans0.ltrans.su} {.exe}}\n+\n+# -dumpdir and an overriding -dumpbase.\n+outest \"$b lto dbsovrdd sing unnamed\" $sing \"-dumpdir ignore/ -dumpbase dir/$b -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{.???i.icf .wpa.???i.icf .ltrans0.ltrans.???r.final .ltrans0.ltrans.su} {a.{out,exe}}}\n+outest \"$b lto dbsovrdd mult unnamed\" $mult \"-dumpdir ignore/ -dumpbase dir/$b -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--1.c.???i.icf --2.c.???i.icf .wpa.???i.icf .ltrans0.ltrans.???r.final .ltrans0.ltrans.su} {a.{out,exe}}}\n+outest \"$b lto dbsovrdd sing named\" $sing \"-dumpdir ignore/ -dumpbase dir/$b -o $b-0.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{.???i.icf .wpa.???i.icf .ltrans0.ltrans.???r.final .ltrans0.ltrans.su} {-0.exe}}\n+outest \"$b lto dbsovrdd mult named\" $mult \"-dumpdir ignore/ -dumpbase dir/$b -o $b-1.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--1.c.???i.icf --2.c.???i.icf .wpa.???i.icf .ltrans0.ltrans.???r.final .ltrans0.ltrans.su} {-1.exe}}\n+outest \"$b lto dbsovrdd sing namedb\" $sing \"-dumpdir ignore/ -dumpbase dir/$b -o $b.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{.???i.icf .wpa.???i.icf .ltrans0.ltrans.???r.final .ltrans0.ltrans.su} {.exe}}\n+outest \"$b lto dbsovrdd mult namedb\" $mult \"-dumpdir ignore/ -dumpbase dir/$b -o $b.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--1.c.???i.icf --2.c.???i.icf .wpa.???i.icf .ltrans0.ltrans.???r.final .ltrans0.ltrans.su} {.exe}}\n+\n+# Check that -dumpbase '' gets source names as dumpbases for\n+# compilation, and output name as dumpbase for linking, regardless of\n+# how many source files.\n+outest \"$b lto sing empty dumpbase unnamed\" $sing \"-dumpbase \\\"\\\" -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {} {{-0.c.???i.icf a.wpa.???i.icf a.ltrans0.ltrans.???r.final a.ltrans0.ltrans.su a.{out,exe}}}\n+outest \"$b lto mult empty dumpbase unnamed\" $mult \"-dumpbase \\\"\\\" -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {} {{-1.c.???i.icf -2.c.???i.icf a.wpa.???i.icf a.ltrans0.ltrans.???r.final a.ltrans0.ltrans.su a.{out,exe}}}\n+outest \"$b lto sing empty dumpbase named\" $sing \"-dumpbase \\\"\\\" -o dir/$b-0.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{-0.c.???i.icf -0.wpa.???i.icf -0.ltrans0.ltrans.???r.final -0.ltrans0.ltrans.su -0.exe} {}}\n+outest \"$b lto mult empty dumpbase named\" $mult \"-dumpbase \\\"\\\" -o dir/$b-1.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{-1.c.???i.icf -2.c.???i.icf -1.wpa.???i.icf -1.ltrans0.ltrans.???r.final -1.ltrans0.ltrans.su -1.exe} {}}\n+outest \"$b lto sing empty dumpbase namedb\" $sing \"-dumpbase \\\"\\\" -o $b.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {} {{-0.c.???i.icf .wpa.???i.icf .ltrans0.ltrans.???r.final .ltrans0.ltrans.su .exe}}\n+outest \"$b lto mult empty dumpbase namedb\" $mult \"-dumpbase \\\"\\\" -o $b.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {} {{-1.c.???i.icf -2.c.???i.icf .wpa.???i.icf .ltrans0.ltrans.???r.final .ltrans0.ltrans.su .exe}}\n+\n+# Now with -dumpdir too.\n+outest \"$b lto sing empty dumpbase dumpdir unnamed\" $sing \"-dumpdir dir/$b- -dumpbase \\\"\\\" -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--0.c.???i.icf -a.wpa.???i.icf -a.ltrans0.ltrans.???r.final -a.ltrans0.ltrans.su} {a.{out,exe}}}\n+outest \"$b lto mult empty dumpbase dumpdir unnamed\" $mult \"-dumpdir dir/$b- -dumpbase \\\"\\\" -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--1.c.???i.icf --2.c.???i.icf -a.wpa.???i.icf -a.ltrans0.ltrans.???r.final -a.ltrans0.ltrans.su} {a.{out,exe}}}\n+outest \"$b lto sing empty dumpbase dumpdir named\" $sing \"-dumpdir dir/$b- -dumpbase \\\"\\\" -o $b-0.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--0.c.???i.icf --0.wpa.???i.icf --0.ltrans0.ltrans.???r.final --0.ltrans0.ltrans.su} {-0.exe}}\n+outest \"$b lto mult empty dumpbase dumpdir named\" $mult \"-dumpdir dir/$b- -dumpbase \\\"\\\" -o $b-1.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--1.c.???i.icf --2.c.???i.icf --1.wpa.???i.icf --1.ltrans0.ltrans.???r.final --1.ltrans0.ltrans.su} {-1.exe}}\n+outest \"$b lto sing empty dumpbase dumpdir namedb\" $sing \"-dumpdir dir/$b- -dumpbase \\\"\\\" -o $b.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--0.c.???i.icf -.wpa.???i.icf -.ltrans0.ltrans.???r.final -.ltrans0.ltrans.su} {.exe}}\n+outest \"$b lto mult empty dumpbase dumpdir namedb\" $mult \"-dumpdir dir/$b- -dumpbase \\\"\\\" -o $b.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--1.c.???i.icf --2.c.???i.icf -.wpa.???i.icf -.ltrans0.ltrans.???r.final -.ltrans0.ltrans.su} {.exe}}\n+\n+# And also with an empty -dumpdir.  That's equivalent to -dumpdir ./,\n+# overriding any dumpdir implied by the output.\n+outest \"$b lto sing empty dumpdir empty dumpbase unnamed\" $sing \"-dumpdir \\\"\\\" -dumpbase \\\"\\\" -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {} {{-0.c.???i.icf a.wpa.???i.icf a.ltrans0.ltrans.???r.final a.ltrans0.ltrans.su a.{out,exe}}}\n+outest \"$b lto mult empty dumpdir empty dumpbase unnamed\" $mult \"-dumpdir \\\"\\\" -dumpbase \\\"\\\" -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {} {{-1.c.???i.icf -2.c.???i.icf a.wpa.???i.icf a.ltrans0.ltrans.???r.final a.ltrans0.ltrans.su a.{out,exe}}}\n+outest \"$b lto sing empty dumpdir empty dumpbase named\" $sing \"-dumpdir \\\"\\\" -dumpbase \\\"\\\" -o dir/$b-0.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{-0.exe} {-0.c.???i.icf -0.wpa.???i.icf -0.ltrans0.ltrans.???r.final -0.ltrans0.ltrans.su}}\n+outest \"$b lto mult empty dumpdir empty dumpbase named\" $mult \"-dumpdir \\\"\\\" -dumpbase \\\"\\\" -o dir/$b-1.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{-1.exe} {-1.c.???i.icf -2.c.???i.icf -1.wpa.???i.icf -1.ltrans0.ltrans.???r.final -1.ltrans0.ltrans.su}}\n+outest \"$b lto sing empty dumpdir empty dumpbase namedb\" $sing \"-dumpdir \\\"\\\" -dumpbase \\\"\\\" -o dir/$b.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{.exe} {-0.c.???i.icf .wpa.???i.icf .ltrans0.ltrans.???r.final .ltrans0.ltrans.su}}\n+outest \"$b lto mult empty dumpdir empty dumpbase namedb\" $mult \"-dumpdir \\\"\\\" -dumpbase \\\"\\\" -o dir/$b.exe -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{.exe} {-1.c.???i.icf -2.c.???i.icf .wpa.???i.icf .ltrans0.ltrans.???r.final .ltrans0.ltrans.su}}\n+\n+# Now -flto with -save-temps, not exhaustive.\n+outest \"$b lto st sing empty dumpbase unnamed\" $sing \"-dumpbase \\\"\\\" -save-temps -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {} {{-0.i -0.s -0.o -0.c.???i.icf a.lto_wrapper_args a.wpa.???i.icf a.ltrans.out a.res a.ltrans0.o a.ltrans0.ltrans.???r.final a.ltrans0.ltrans.su a.ltrans0.ltrans.s a.ltrans0.ltrans.o a.{out,exe}}}\n+outest \"$b lto st mult empty dumpbase unnamed\" $mult \"-dumpbase \\\"\\\" -save-temps -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {} {{-1.i -1.s -1.o -1.c.???i.icf -2.i -2.s -2.o -2.c.???i.icf a.lto_wrapper_args a.wpa.???i.icf a.ltrans.out a.res a.ltrans0.o a.ltrans0.ltrans.???r.final a.ltrans0.ltrans.su a.ltrans0.ltrans.s a.ltrans0.ltrans.o a.{out,exe}}}\n+outest \"$b lto st sing dumpdir empty dumpbase named\" $sing \"-dumpdir dir/ -dumpbase \\\"\\\" -o $b-0.exe -save-temps -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{-0.i -0.s -0.o -0.c.???i.icf -0.lto_wrapper_args -0.wpa.???i.icf -0.ltrans.out -0.res -0.ltrans0.o -0.ltrans0.ltrans.???r.final -0.ltrans0.ltrans.su -0.ltrans0.ltrans.s -0.ltrans0.ltrans.o} {-0.exe}}\n+outest \"$b lto st mult dumpdir empty dumpbase named\" $mult \"-dumpdir dir/ -dumpbase \\\"\\\" -o $b-1.exe -save-temps -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{-1.i -1.s -1.o -1.c.???i.icf -2.i -2.s -2.o -2.c.???i.icf -1.lto_wrapper_args -1.wpa.???i.icf -1.ltrans.out -1.res -1.ltrans0.o -1.ltrans0.ltrans.???r.final -1.ltrans0.ltrans.su -1.ltrans0.ltrans.s -1.ltrans0.ltrans.o} {-1.exe}}\n+outest \"$b lto st sing empty dumpbase namedb\" $sing \"-dumpbase \\\"\\\" -o dir/$b.exe -save-temps -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{-0.i -0.s -0.o -0.c.???i.icf .lto_wrapper_args .wpa.???i.icf .ltrans.out .res .ltrans0.o .ltrans0.ltrans.???r.final .ltrans0.ltrans.su .ltrans0.ltrans.s .ltrans0.ltrans.o .exe} {}}\n+outest \"$b lto st mult empty dumpbase namedb\" $mult \"-dumpbase \\\"\\\" -o dir/$b.exe -save-temps -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{-1.i -1.s -1.o -1.c.???i.icf -2.i -2.s -2.o -2.c.???i.icf .lto_wrapper_args .wpa.???i.icf .ltrans.out .res .ltrans0.o .ltrans0.ltrans.???r.final .ltrans0.ltrans.su .ltrans0.ltrans.s .ltrans0.ltrans.o .exe} {}}\n+\n+# lto save-temps without -dumpbase.\n+outest \"$b lto st sing unnamed\" $sing \"-save-temps -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {} {{a--0.i a--0.s a--0.o a--0.c.???i.icf a.lto_wrapper_args a.wpa.???i.icf a.ltrans.out a.res a.ltrans0.o a.ltrans0.ltrans.???r.final a.ltrans0.ltrans.su a.ltrans0.ltrans.s a.ltrans0.ltrans.o a.{out,exe}}}\n+outest \"$b lto st mult unnamed\" $mult \"-save-temps -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {} {{a--1.i a--1.s a--1.o a--1.c.???i.icf a--2.i a--2.s a--2.o a--2.c.???i.icf a.lto_wrapper_args a.wpa.???i.icf a.ltrans.out a.res a.ltrans0.o a.ltrans0.ltrans.???r.final a.ltrans0.ltrans.su a.ltrans0.ltrans.s a.ltrans0.ltrans.o a.{out,exe}}}\n+outest \"$b lto st sing dumpdir named\" $sing \"-dumpdir dir/$b- -o $b-0.exe -save-temps -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--0.i --0.s --0.o --0.c.???i.icf -lto_wrapper_args -wpa.???i.icf -ltrans.out -res -ltrans0.o -ltrans0.ltrans.???r.final -ltrans0.ltrans.su -ltrans0.ltrans.s -ltrans0.ltrans.o} {-0.exe}}\n+outest \"$b lto st mult dumpdir named\" $mult \"-dumpdir dir/$b- -o $b-1.exe -save-temps -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--1.i --1.s --1.o --1.c.???i.icf --2.i --2.s --2.o --2.c.???i.icf -lto_wrapper_args -wpa.???i.icf -ltrans.out -res -ltrans0.o -ltrans0.ltrans.???r.final -ltrans0.ltrans.su -ltrans0.ltrans.s -ltrans0.ltrans.o} {-1.exe}}\n+outest \"$b lto st sing namedb\" $sing \"-o dir/$b.exe -save-temps -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--0.i --0.s --0.o --0.c.???i.icf .lto_wrapper_args .wpa.???i.icf .ltrans.out .res .ltrans0.o .ltrans0.ltrans.???r.final .ltrans0.ltrans.su .ltrans0.ltrans.s .ltrans0.ltrans.o .exe} {}}\n+outest \"$b lto st mult namedb\" $mult \"-o dir/$b.exe -save-temps -O2 -flto -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{--1.i --1.s --1.o --1.c.???i.icf --2.i --2.s --2.o --2.c.???i.icf .lto_wrapper_args .wpa.???i.icf .ltrans.out .res .ltrans0.o .ltrans0.ltrans.???r.final .ltrans0.ltrans.su .ltrans0.ltrans.s .ltrans0.ltrans.o .exe} {}}\n+\n+# Below are examples taken from the documentation.\n+# They are likely redundant with earlier test,\n+# but we want to make sure behavior matches the docs.\n+\n+# gcc -c foo.c ...\n+outest \"$b doc single  -c !-o\" $sing \"-c -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {} {{-0.c.???r.final -0.su -0.dwo -0.o}}\n+\n+# gcc -c foo.c -o dir/foobar.o ...\n+outest \"$b doc single  -c +-o\" $sing \"-c -o dir/$b.o -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {dir/} {{.c.???r.final .su .dwo .o} {}}\n+\n+# gcc foo.c bar.c -o dir/foobar ...\n+outest \"$b doc double !-c  -o\" $mult \"-o dir/$b.exe -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {dir/} {{--1.c.???r.final --1.su --1.dwo --2.c.???r.final --2.su --2.dwo .exe} {}}\n+\n+# gcc foo.c -o dir/foo ...\n+outest \"$b doc single !-c  -o\" $sing \"-o dir/$b-0 -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {dir/} {{-0.c.???r.final -0.su -0.dwo -0} {}}\n+\n+# gcc -save-temps -S foo.c\n+outest \"$b doc single  -S -st\" $sing \"-save-temps -S\" {} {{-0.i -0.s}}\n+\n+# gcc -save-temps -dumpbase save-foo -c foo.c\n+outest \"$b doc single  -c -st -db\" $sing \"-save-temps -dumpbase $b -c\" {} {{.i .s -0.o}}\n+\n+# gcc foo.c -c -o dir/foo.o -dumpbase alt/foo \\\n+#   -dumpdir pfx- -save-temps=cwd ...\n+outest \"$b doc single  -c  -o -db\" $sing \"-c -o dir/$b.o -dumpbase alt/$b -dumpdir pfx- -save-temps=cwd -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {alt/ dir/} {{.i .s .???r.final .su .dwo} {.o} {}}\n+\n+# gcc foo.c bar.c -c -dumpbase main ...\n+outest \"$b doc double  -c !-o -db\" $mult \"-c -dumpbase $b -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {} {{--1.c.???r.final --1.su --1.dwo -1.o --2.c.???r.final --2.su --2.dwo -2.o}}\n+\n+# gcc -c foo.c -o dir/foobar.o -dumpbase '' ...\n+outest \"$b doc single  -c  -o -db''\" $sing \"-c -o dir/$b.o -dumpbase \\\"\\\" -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {dir/} {{-0.c.???r.final -0.su -0.dwo .o} {}}\n+\n+# gcc foo.c bar.c -o dir/foobar -dumpbase '' -flto ...\n+outest \"$b doc double !-c  -o -db'' -flto\" $mult \"-o dir/$b.exe -dumpbase \\\"\\\" -flto -O2 -flto-partition=one -fdump-ipa-icf-optimized -fdump-rtl-final -fstack-usage\" {dir/} {{-1.c.???i.icf -2.c.???i.icf .wpa.???i.icf .ltrans0.ltrans.???r.final .ltrans0.ltrans.su .exe} {}}\n+\n+\n+# gcc foo.c -c -o dir/foo.o -dumpbase x-foo.c -dumpbase-ext .c ...\n+outest \"$b doc single  -c  -o -dbx\" $sing \"-c -o dir/$b-0.o -dumpbase $b.c -dumpbase-ext .c -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {dir/} {{.c.???r.final .su .dwo -0.o} {}}\n+\n+# gcc foo.c bar.c -o main.out -dumpbase-ext .out ...\n+outest \"$b doc double !-c  -o -dbx\" $mult \"-o $b.out -dumpbase-ext .out -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {} {{--1.c.???r.final --1.su --1.dwo --2.c.???r.final --2.su --2.dwo .out}}\n+\n+# gcc -dumpdir pfx- -c foo.c ...\n+outest \"$b doc single  -c !-o -dd\" $sing \"-dumpdir $b- -c -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {} {{--0.c.???r.final --0.su --0.dwo -0.o}}\n+\n+# gcc -dumpdir dir/ -c foo.c -o obj/bar.o ...\n+outest \"$b doc single  -c  -o -dd\" $sing \"-dumpdir dir/ -c -o obj/$b.o -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {dir/ obj/} {{.c.???r.final .su .dwo} {.o} {}}\n+\n+# gcc -dumpdir pfx- -c foo.c -save-temps=obj ...\n+outest \"$b doc single  -c  -o -dd -st=\" $sing \"-dumpdir $b- -c -save-temps=obj -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {} {{-0.c.???r.final -0.su -0.dwo -0.i -0.s -0.o}}\n+\n+# gcc foo.c bar.c -c -dumpdir dir/pfx- -dumpbase main ...\n+outest \"$b doc double  -c !-o -dd -db\" $mult \"-c -dumpdir dir/ -dumpbase $b -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {dir/} {{--1.c.???r.final --1.su --1.dwo --2.c.???r.final --2.su --2.dwo} {-1.o -2.o}}\n+\n+# gcc foo.c -c -dumpdir dir/pfx- -dumpbase main ...\n+outest \"$b doc single  -c !-o -dd -db\" $sing \"-c -dumpdir dir/ -dumpbase $b -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {dir/} {{.???r.final .su .dwo} {-0.o}}\n+\n+# gcc foo.c bar.c -dumpdir dir/pfx- -o main ...\n+outest \"$b doc double !-c  -o -dd\" $mult \"-dumpdir dir/ -o $b.exe -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {dir/} {{-1.c.???r.final -1.su -1.dwo -2.c.???r.final -2.su -2.dwo} {.exe}}\n+\n+# gcc foo.c -dumpdir alt/pfx- -o dir/main.exe -save-temps=cwd ...\n+outest \"$b doc single !-c  -o -dd -st=\" $sing \"-c -dumpdir dir/ -dumpbase $b -fdump-rtl-final -fstack-usage $gsplit_dwarf\" {dir/} {{.???r.final .su .dwo} {-0.o}}\n+\n+\n+gcc_parallel_test_enable 1"}, {"sha": "fc7e8e2354a73c9e3a4c7ad95a55bc3de0257f86", "filename": "gcc/testsuite/lib/gcc-defs.exp", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Ftestsuite%2Flib%2Fgcc-defs.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Ftestsuite%2Flib%2Fgcc-defs.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-defs.exp?ref=1dedc12d186a110854537e1279b4e6c29f2df35a", "patch": "@@ -285,11 +285,53 @@ proc dg-additional-files { args } {\n     set additional_files [lindex $args 1]\n }\n \n+set gcc_adjusted_linker_flags 0\n+\n+# Add -Wl, before any file names in ldflags, libs, and ldscripts, so\n+# that default object files or libraries do not change the names of\n+# gcc auxiliary outputs.\n+\n+proc gcc_adjust_linker_flags {} {\n+    global gcc_adjusted_linker_flags\n+    if {$gcc_adjusted_linker_flags} {\n+\treturn\n+    }\n+    set gcc_adjusted_linker_flags 1\n+\n+    if {![is_remote host]} {\n+\tset dest [target_info name]\n+\tforeach i { ldflags libs ldscripts } {\n+\t    if {[board_info $dest exists $i]} {\n+\t\tset opts [board_info $dest $i]\n+\t\tset nopts {}\n+\t\tset skip \"\"\n+\t\tforeach opt [split $opts] {\n+\t\t    if { $skip != \"\" } then {\n+\t\t\tset skip \"\"\n+\t\t    } elseif { $opt == \"-Xlinker\" } then {\n+\t\t\tset skip $opt\n+\t\t    } elseif { ![string match \"-*\" $opt] \\\n+\t\t\t\t&& [file isfile $opt] } {\n+\t\t\tset opt \"-Wl,$opt\"\n+\t\t    }\n+\t\t    lappend nopts $opt\n+\t\t}\n+\t\tif { $nopts != $opts } {\n+\t\t    unset_currtarget_info $i\n+\t\t    set_currtarget_info $i \"$nopts\"\n+\t\t}\n+\t    }\n+\t}\n+    }\n+}\n+\n # Return an updated version of OPTIONS that mentions any additional\n # source files registered with dg-additional-sources.  SOURCE is the\n # name of the test case.\n \n proc dg-additional-files-options { options source } {\n+    gcc_adjust_linker_flags\n+\n     global additional_sources\n     global additional_sources_used\n     global additional_files\n@@ -305,6 +347,10 @@ proc dg-additional-files-options { options source } {\n \tset to_download [concat $to_download $additional_sources]\n \tset additional_sources_used \"$additional_sources\"\n \tset additional_sources \"\"\n+\t# This option restores naming of aux and dump output files\n+\t# after input files when multiple input files are named,\n+\t# instead of getting them combined with the output name.\n+\tlappend options \"additional_flags=-dumpbase \\\"\\\"\"\n     }\n     if { $additional_files != \"\" } then { \n \tregsub -all \"^| \" $additional_files \" [file dirname $source]/\" additional_files"}, {"sha": "af1fd62fe5c0f1f63769b8b211466e0b357c8109", "filename": "gcc/testsuite/lib/profopt.exp", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Ftestsuite%2Flib%2Fprofopt.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Ftestsuite%2Flib%2Fprofopt.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fprofopt.exp?ref=1dedc12d186a110854537e1279b4e6c29f2df35a", "patch": "@@ -353,6 +353,10 @@ proc profopt-execute { src } {\n \n     set count 0\n     foreach option $prof_option_list {\n+\t# We pass -dumpbase-ext ${execext}[123] to the compile&link\n+\t# commands so as to avoid the combination of the executable\n+\t# with the source name in the aux outputs.\n+\tset execext \".x${count}\"\n \tset execname1 \"${executable}${count}1\"\n \tset execname2 \"${executable}${count}2\"\n \tset execname3 \"${executable}${count}3\"\n@@ -402,7 +406,7 @@ proc profopt-execute { src } {\n \t# Compile for profiling.\n \n \tset options \"$extra_options\"\n-\tlappend options \"additional_flags=$option $extra_flags $profile_option\"\n+\tlappend options \"additional_flags=$option $extra_flags $profile_option -dumpbase-ext ${execext}1\"\n \tset optstr \"$option $profile_option\"\n \tset comp_output [${tool}_target_compile \"$src\" \"$execname1\" executable $options]\n \tif ![${tool}_check_compile \"$testcase compilation\" $optstr $execname1 $comp_output] {\n@@ -491,7 +495,7 @@ proc profopt-execute { src } {\n \t# Compile with feedback-directed optimizations.\n \n \tset options \"$extra_options\"\n-\tlappend options \"additional_flags=$option $extra_flags $feedback_option\"\n+\tlappend options \"additional_flags=$option $extra_flags $feedback_option -dumpbase-ext ${execext}2\"\n \tset optstr \"$option $feedback_option\"\n \tif { [string first \"-fauto-profile\" $options] >= 0} {\n \t    set options [regsub -- \"-fauto-profile\" $options \"-fauto-profile=$tmpdir/$bprefix$base.$ext\"]\n@@ -548,7 +552,7 @@ proc profopt-execute { src } {\n \t# Compile with normal optimizations.\n \n \tset options \"$extra_options\"\n-\tlappend options \"additional_flags=$option\"\n+\tlappend options \"additional_flags=$option -dumpbase-ext ${execext}3\"\n \tset optstr \"$option\"\n \tset comp_output [${tool}_target_compile \"$src\" \"$execname3\" \"executable\" $options]\n \tif ![${tool}_check_compile \"$testcase compilation\" $optstr $execname3 $comp_output] {"}, {"sha": "2479c89d3c72a5706e9922df328aeabf88047138", "filename": "gcc/testsuite/lib/scandump.exp", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Ftestsuite%2Flib%2Fscandump.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Ftestsuite%2Flib%2Fscandump.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fscandump.exp?ref=1dedc12d186a110854537e1279b4e6c29f2df35a", "patch": "@@ -32,6 +32,9 @@ proc dump-suffix { arg } {\n proc dump-base { args } {\n     set src [lindex $args 0]\n     set dumpbase_suf [lindex $args 1]\n+    # The dump basename may vary depending on the output name, on\n+    # whether there are multiple sources.  We use -dumpbase \"\" in\n+    # gcc-defs to base compilation dumps only on the source basename.\n     set dumpbase $src\n     if { [string length $dumpbase_suf] != 0 } {\n \tregsub {[.][^.]*$} $src $dumpbase_suf dumpbase"}, {"sha": "6d35bef909148f0d9e057132f944e5711603eccc", "filename": "gcc/testsuite/lib/scanltranstree.exp", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Ftestsuite%2Flib%2Fscanltranstree.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Ftestsuite%2Flib%2Fscanltranstree.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fscanltranstree.exp?ref=1dedc12d186a110854537e1279b4e6c29f2df35a", "patch": "@@ -37,11 +37,11 @@ proc scan-ltrans-tree-dump { args } {\n     }\n     if { [llength $args] >= 3 } {\n \tscan-dump \"ltrans-tree\" [lindex $args 0] \\\n-\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \".exe.ltrans0\" \\\n+\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \".ltrans0.ltrans\" \\\n \t\t  [lindex $args 2]\n     } else {\n \tscan-dump \"ltrans-tree\" [lindex $args 0] \\\n-\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \".exe.ltrans0\"\n+\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \".ltrans0.ltrans\"\n     }\n }\n \n@@ -63,10 +63,10 @@ proc scan-ltrans-tree-dump-times { args } {\n     if { [llength $args] >= 4 } {\n \tscan-dump-times \"ltrans-tree\" [lindex $args 0] [lindex $args 1] \\\n \t\t\t\"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 2]\" \\\n-\t\t\t\".exe.ltrans0\" [lindex $args 3]\n+\t\t\t\".ltrans0.ltrans\" [lindex $args 3]\n     } else {\n \tscan-dump-times \"ltrans-tree\" [lindex $args 0] [lindex $args 1] \\\n-\t\t\t\"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 2]\" \".exe.ltrans0\"\n+\t\t\t\"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 2]\" \".ltrans0.ltrans\"\n     }\n }\n \n@@ -87,11 +87,11 @@ proc scan-ltrans-tree-dump-not { args } {\n     }\n     if { [llength $args] >= 3 } {\n \tscan-dump-not \"ltrans-tree\" [lindex $args 0] \\\n-\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \".exe.ltrans0\" \\\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \".ltrans0.ltrans\" \\\n \t\t      [lindex $args 2]\n     } else {\n \tscan-dump-not \"ltrans-tree\" [lindex $args 0] \\\n-\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \".exe.ltrans0\"\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \".ltrans0.ltrans\"\n     }\n }\n \n@@ -113,11 +113,11 @@ proc scan-ltrans-tree-dump-dem { args } {\n     }\n     if { [llength $args] >= 3 } {\n \tscan-dump-dem \"ltrans-tree\" [lindex $args 0] \\\n-\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \".exe.ltrans0\" \\\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \".ltrans0.ltrans\" \\\n \t\t      [lindex $args 2]\n     } else {\n \tscan-dump-dem \"ltrans-tree\" [lindex $args 0] \\\n-\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \".exe.ltrans0\"\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \".ltrans0.ltrans\"\n     }\n }\n \n@@ -139,10 +139,10 @@ proc scan-ltrans-tree-dump-dem-not { args } {\n     if { [llength $args] >= 3 } {\n \tscan-dump-dem-not \"ltrans-tree\" [lindex $args 0] \\\n \t\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \\\n-\t\t\t  \".exe.ltrans0\" [lindex $args 2]\n+\t\t\t  \".ltrans0.ltrans\" [lindex $args 2]\n     } else {\n \tscan-dump-dem-not \"ltrans-tree\" [lindex $args 0] \\\n \t\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]t.[lindex $args 1]\" \\\n-\t\t\t  \".exe.ltrans0\"\n+\t\t\t  \".ltrans0.ltrans\"\n     }\n }"}, {"sha": "cc50cc4c9c44b931ea6292794b996c0e70d20a8b", "filename": "gcc/testsuite/lib/scanwpaipa.exp", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Ftestsuite%2Flib%2Fscanwpaipa.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Ftestsuite%2Flib%2Fscanwpaipa.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fscanwpaipa.exp?ref=1dedc12d186a110854537e1279b4e6c29f2df35a", "patch": "@@ -37,11 +37,11 @@ proc scan-wpa-ipa-dump { args } {\n     }\n     if { [llength $args] >= 3 } {\n \tscan-dump \"wpa-ipa\" [lindex $args 0] \\\n-\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \".exe.wpa\" \\\n+\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \".wpa\" \\\n \t\t  [lindex $args 2]\n     } else {\n \tscan-dump \"wpa-ipa\" [lindex $args 0] \\\n-\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \".exe.wpa\"\n+\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \".wpa\"\n     }\n }\n \n@@ -85,11 +85,11 @@ proc scan-wpa-ipa-dump-times { args } {\n     }\n     if { [llength $args] >= 4 } {\n \tscan-dump-times \"wpa-ipa\" [lindex $args 0] [lindex $args 1] \\\n-\t\t\t\"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 2]\" \".exe.wpa\" \\\n+\t\t\t\"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 2]\" \".wpa\" \\\n \t\t\t[lindex $args 3]\n     } else {\n \tscan-dump-times \"wpa-ipa\" [lindex $args 0] [lindex $args 1] \\\n-\t\t\t\"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 2]\" \".exe.wpa\"\n+\t\t\t\"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 2]\" \".wpa\"\n     }\n }\n \n@@ -110,11 +110,11 @@ proc scan-wpa-ipa-dump-not { args } {\n     }\n     if { [llength $args] >= 3 } {\n \tscan-dump-not \"wpa-ipa\" [lindex $args 0] \\\n-\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \".exe.wpa\" \\\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \".wpa\" \\\n \t\t      [lindex $args 2]\n     } else {\n \tscan-dump-not \"wpa-ipa\" [lindex $args 0] \\\n-\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \".exe.wpa\"\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \".wpa\"\n     }\n }\n \n@@ -136,11 +136,11 @@ proc scan-wpa-ipa-dump-dem { args } {\n     }\n     if { [llength $args] >= 3 } {\n \tscan-dump-dem \"wpa-ipa\" [lindex $args 0] \\\n-\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \".exe.wpa\" \\\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \".wpa\" \\\n \t\t      [lindex $args 2]\n     } else {\n \tscan-dump-dem \"wpa-ipa\" [lindex $args 0] \\\n-\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \".exe.wpa\"\n+\t\t      \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \".wpa\"\n     }\n }\n \n@@ -161,10 +161,10 @@ proc scan-wpa-ipa-dump-dem-not { args } {\n     }\n     if { [llength $args] >= 3 } {\n \tscan-dump-dem-not \"wpa-ipa\" [lindex $args 0] \\\n-\t\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \".exe.wpa\" \\\n+\t\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \".wpa\" \\\n \t\t\t  [lindex $args 2]\n     } else {\n \tscan-dump-dem-not \"wpa-ipa\" [lindex $args 0] \\\n-\t\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \".exe.wpa\"\n+\t\t\t  \"\\[0-9\\]\\[0-9\\]\\[0-9\\]i.[lindex $args 1]\" \".wpa\"\n     }\n }"}, {"sha": "1a75485f574e7e9be7f61df26c37e8b6b6f9caf6", "filename": "gcc/toplev.c", "status": "modified", "additions": 44, "deletions": 18, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dedc12d186a110854537e1279b4e6c29f2df35a/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=1dedc12d186a110854537e1279b4e6c29f2df35a", "patch": "@@ -796,8 +796,8 @@ print_switch_values (print_switch_fn_type print_fn)\n \tcase OPT_o:\n \tcase OPT_d:\n \tcase OPT_dumpbase:\n+\tcase OPT_dumpbase_ext:\n \tcase OPT_dumpdir:\n-\tcase OPT_auxbase:\n \tcase OPT_quiet:\n \tcase OPT_version:\n \t  /* Ignore these.  */\n@@ -1410,11 +1410,19 @@ process_options (void)\n   /* Set aux_base_name if not already set.  */\n   if (aux_base_name)\n     ;\n-  else if (main_input_filename)\n+  else if (dump_base_name)\n     {\n-      char *name = xstrdup (lbasename (main_input_filename));\n+      const char *name = dump_base_name;\n+      int nlen, len;\n+\n+      if (dump_base_ext && (len = strlen (dump_base_ext))\n+\t  && (nlen = strlen (name)) && nlen > len\n+\t  && strcmp (name + nlen - len, dump_base_ext) == 0)\n+\t{\n+\t  char *p = xstrndup (name, nlen - len);\n+\t  name = p;\n+\t}\n \n-      strip_off_ending (name, strlen (name));\n       aux_base_name = name;\n     }\n   else\n@@ -1964,8 +1972,21 @@ static int\n lang_dependent_init (const char *name)\n {\n   location_t save_loc = input_location;\n-  if (dump_base_name == 0)\n-    dump_base_name = name && name[0] ? name : \"gccdump\";\n+  if (!dump_base_name)\n+    {\n+      dump_base_name = name && name[0] ? name : \"gccdump\";\n+\n+      /* We do not want to derive a non-empty dumpbase-ext from an\n+\t explicit -dumpbase argument, only from a defaulted\n+\t dumpbase.  */\n+      if (!dump_base_ext)\n+\t{\n+\t  const char *base = lbasename (dump_base_name);\n+\t  const char *ext = strrchr (base, '.');\n+\t  if (ext)\n+\t    dump_base_ext = ext;\n+\t}\n+    }\n \n   /* Other front-end initialization.  */\n   input_location = BUILTINS_LOCATION;\n@@ -1977,20 +1998,25 @@ lang_dependent_init (const char *name)\n     {\n       init_asm_output (name);\n \n-      /* If stack usage information is desired, open the output file.  */\n-      if (flag_stack_usage && !flag_generate_lto)\n-\tstack_usage_file = open_auxiliary_file (\"su\");\n-\n-      /* If call graph information is desired, open the output file.  */\n-      if (flag_callgraph_info && !flag_generate_lto)\n+      if (!flag_generate_lto && !flag_compare_debug)\n \t{\n-\t  callgraph_info_file = open_auxiliary_file (\"ci\");\n-\t  /* Write the file header.  */\n-\t  fprintf (callgraph_info_file,\n-\t\t   \"graph: { title: \\\"%s\\\"\\n\", main_input_filename);\n-\t  bitmap_obstack_initialize (NULL);\n-\t  callgraph_info_external_printed = BITMAP_ALLOC (NULL);\n+\t  /* If stack usage information is desired, open the output file.  */\n+\t  if (flag_stack_usage)\n+\t    stack_usage_file = open_auxiliary_file (\"su\");\n+\n+\t  /* If call graph information is desired, open the output file.  */\n+\t  if (flag_callgraph_info)\n+\t    {\n+\t      callgraph_info_file = open_auxiliary_file (\"ci\");\n+\t      /* Write the file header.  */\n+\t      fprintf (callgraph_info_file,\n+\t\t       \"graph: { title: \\\"%s\\\"\\n\", main_input_filename);\n+\t      bitmap_obstack_initialize (NULL);\n+\t      callgraph_info_external_printed = BITMAP_ALLOC (NULL);\n+\t    }\n \t}\n+      else\n+\tflag_stack_usage = flag_callgraph_info = false;\n     }\n \n   /* This creates various _DECL nodes, so needs to be called after the"}, {"sha": "a65c2801b9b5630bada7f05b36450f1d9dbd2e11", "filename": "lto-plugin/lto-plugin.c", "status": "modified", "additions": 79, "deletions": 8, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1dedc12d186a110854537e1279b4e6c29f2df35a/lto-plugin%2Flto-plugin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1dedc12d186a110854537e1279b4e6c29f2df35a/lto-plugin%2Flto-plugin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/lto-plugin%2Flto-plugin.c?ref=1dedc12d186a110854537e1279b4e6c29f2df35a", "patch": "@@ -203,6 +203,10 @@ static bool linker_output_known;\n static bool linker_output_auto_nolto_rel;\n static const char *link_output_name = NULL;\n \n+/* This indicates link_output_name already contains the dot of the\n+   suffix, so we can skip it in extensions.  */\n+static int skip_in_suffix = 0;\n+\n /* The version of gold being used, or -1 if not gold.  The number is\n    MAJOR * 100 + MINOR.  */\n static int gold_version = -1;\n@@ -621,14 +625,11 @@ exec_lto_wrapper (char *argv[])\n   /* Write argv to a file to avoid a command line that is too long\n      Save the file locally on save-temps.  */\n   if (save_temps && link_output_name)\n-    {\n-      arguments_file_name = (char *) xmalloc (strlen (link_output_name)\n-\t\t\t\t  + sizeof (\".lto_wrapper_args\") + 1);\n-      strcpy (arguments_file_name, link_output_name);\n-      strcat (arguments_file_name, \".lto_wrapper_args\");\n-    }\n+    arguments_file_name = concat (link_output_name,\n+\t\t\t\t  \".lto_wrapper_args\"\n+\t\t\t\t  + skip_in_suffix, NULL);\n   else\n-     arguments_file_name = make_temp_file (\".lto_wrapper_args\");\n+    arguments_file_name = make_temp_file (\".lto_wrapper_args\");\n   check (arguments_file_name, LDPL_FATAL,\n          \"Failed to generate a temorary file name\");\n \n@@ -1439,12 +1440,82 @@ onload (struct ld_plugin_tv *tv)\n       if (strstr (collect_gcc_options, \"'-fno-use-linker-plugin'\"))\n \treturn LDPS_ERR;\n \n-      if ( strstr (collect_gcc_options, \"'-save-temps'\"))\n+      if (strstr (collect_gcc_options, \"'-save-temps'\"))\n \tsave_temps = true;\n \n       if (strstr (collect_gcc_options, \"'-v'\")\n           || strstr (collect_gcc_options, \"'--verbose'\"))\n \tverbose = true;\n+\n+      const char *p;\n+      if ((p = strstr (collect_gcc_options, \"'-dumpdir'\")))\n+\t{\n+\t  p += sizeof (\"'-dumpdir'\");\n+\t  while (*p == ' ')\n+\t    p++;\n+\t  const char *start = p;\n+\t  int ticks = 0, escapes = 0;\n+\t  /* Count ticks (') and escaped (\\.) characters.  Stop at the\n+\t     end of the options or at a blank after an even number of\n+\t     ticks (not counting escaped ones.  */\n+\t  for (p = start; *p; p++)\n+\t    {\n+\t      if (*p == '\\'')\n+\t\t{\n+\t\t  ticks++;\n+\t\t  continue;\n+\t\t}\n+\t      else if ((ticks % 2) != 0)\n+\t\t{\n+\t\t  if (*p == ' ')\n+\t\t    break;\n+\t\t  if (*p == '\\\\')\n+\t\t    {\n+\t\t      if (*++p)\n+\t\t\tescapes++;\n+\t\t      else\n+\t\t\tp--;\n+\t\t    }\n+\t\t}\n+\t    }\n+\n+\t  /* Now allocate a new link_output_name and decode dumpdir\n+\t     into it.  The loop uses the same logic, except it counts\n+\t     ticks and escapes backwards (so ticks is adjusted if we\n+\t     find an odd number of them), and it copies characters\n+\t     that are escaped or not otherwise skipped.  */\n+\t  int len = p - start - ticks - escapes + 1;\n+\t  char *q = xmalloc (len);\n+\t  link_output_name = q;\n+\t  int oddticks = (ticks % 2);\n+\t  ticks += oddticks;\n+\t  for (p = start; *p; p++)\n+\t    {\n+\t      if (*p == '\\'')\n+\t\t{\n+\t\t  ticks--;\n+\t\t  continue;\n+\t\t}\n+\t      else if ((ticks % 2) != 0)\n+\t\t{\n+\t\t  if (*p == ' ')\n+\t\t    break;\n+\t\t  if (*p == '\\\\')\n+\t\t    {\n+\t\t      if (*++p)\n+\t\t\tescapes--;\n+\t\t      else\n+\t\t\tp--;\n+\t\t    }\n+\t\t}\n+\t      *q++ = *p;\n+\t    }\n+\t  *q = '\\0';\n+\t  assert (escapes == 0);\n+\t  assert (ticks == oddticks);\n+\t  assert (q - link_output_name == len - 1);\n+\t  skip_in_suffix = 1;\n+\t}\n     }\n \n   return LDPS_OK;"}]}