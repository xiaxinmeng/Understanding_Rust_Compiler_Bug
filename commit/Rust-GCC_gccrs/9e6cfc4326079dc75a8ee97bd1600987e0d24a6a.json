{"sha": "9e6cfc4326079dc75a8ee97bd1600987e0d24a6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU2Y2ZjNDMyNjA3OWRjNzVhOGVlOTdiZDE2MDA5ODdlMGQyNGE2YQ==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1994-11-16T00:45:41Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1994-11-16T00:45:41Z"}, "message": "(POINTER_TYPE_P): New macro.\n\nFrom-SVN: r8456", "tree": {"sha": "2a70272209f20083903163638c2aa600a72db6f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a70272209f20083903163638c2aa600a72db6f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e6cfc4326079dc75a8ee97bd1600987e0d24a6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e6cfc4326079dc75a8ee97bd1600987e0d24a6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e6cfc4326079dc75a8ee97bd1600987e0d24a6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e6cfc4326079dc75a8ee97bd1600987e0d24a6a/comments", "author": null, "committer": null, "parents": [{"sha": "d377038a552c1486394c39b1807c4f42dbb541e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d377038a552c1486394c39b1807c4f42dbb541e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d377038a552c1486394c39b1807c4f42dbb541e3"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "997edba87159d559ff34b21244b8850ea3a60dc0", "filename": "gcc/tree.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e6cfc4326079dc75a8ee97bd1600987e0d24a6a/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e6cfc4326079dc75a8ee97bd1600987e0d24a6a/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=9e6cfc4326079dc75a8ee97bd1600987e0d24a6a", "patch": "@@ -234,6 +234,11 @@ struct tree_common\n   (TREE_CODE (TYPE) == ARRAY_TYPE || TREE_CODE (TYPE) == RECORD_TYPE \\\n    || TREE_CODE (TYPE) == UNION_TYPE || TREE_CODE (TYPE) == QUAL_UNION_TYPE \\\n    || TREE_CODE (TYPE) == SET_TYPE)\n+\n+/* Nonzero if TYPE represents a pointer type.  */\n+\n+#define POINTER_TYPE_P(TYPE) \\\n+  (TREE_CODE (TYPE) == POINTER_TYPE || TREE_CODE (TYPE) == REFERENCE_TYPE)\n \f\n /* Define many boolean fields that all tree nodes have.  */\n "}]}