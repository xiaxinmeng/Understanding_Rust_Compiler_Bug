{"sha": "58fc93fb001225df27cb502d0d5f4f939f0dc0aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NThmYzkzZmIwMDEyMjVkZjI3Y2I1MDJkMGQ1ZjRmOTM5ZjBkYzBhYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-12-14T05:18:39Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-12-14T05:18:39Z"}, "message": "re PR c++/51406 ([c++0x] Incorrect result of static_cast to rvalue reference to base class.)\n\n\tPR c++/51406\n\tPR c++/51161\n\t* typeck.c (build_static_cast_1): Fix cast of lvalue to\n\tbase rvalue reference.\n\nFrom-SVN: r182322", "tree": {"sha": "9fb673218f2b6198b16aae17a2adca505dd879b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fb673218f2b6198b16aae17a2adca505dd879b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/58fc93fb001225df27cb502d0d5f4f939f0dc0aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58fc93fb001225df27cb502d0d5f4f939f0dc0aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58fc93fb001225df27cb502d0d5f4f939f0dc0aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58fc93fb001225df27cb502d0d5f4f939f0dc0aa/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c990877a412109c1e7eac6506239a27ab309051f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c990877a412109c1e7eac6506239a27ab309051f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c990877a412109c1e7eac6506239a27ab309051f"}], "stats": {"total": 60, "additions": 57, "deletions": 3}, "files": [{"sha": "d32613387ea44c7d8b864b33dbe80bcdd254736f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58fc93fb001225df27cb502d0d5f4f939f0dc0aa/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58fc93fb001225df27cb502d0d5f4f939f0dc0aa/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=58fc93fb001225df27cb502d0d5f4f939f0dc0aa", "patch": "@@ -1,3 +1,10 @@\n+2011-12-13  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/51406\n+\tPR c++/51161\n+\t* typeck.c (build_static_cast_1): Fix cast of lvalue to\n+\tbase rvalue reference.\n+\n 2011-12-13  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/51464"}, {"sha": "b1689634d597a19f613afe4248b169c3e0fb1ada", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58fc93fb001225df27cb502d0d5f4f939f0dc0aa/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58fc93fb001225df27cb502d0d5f4f939f0dc0aa/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=58fc93fb001225df27cb502d0d5f4f939f0dc0aa", "patch": "@@ -5856,12 +5856,22 @@ build_static_cast_1 (tree type, tree expr, bool c_cast_p,\n      cv2 T2 if cv2 T2 is reference-compatible with cv1 T1 (8.5.3).\"  */\n   if (TREE_CODE (type) == REFERENCE_TYPE\n       && TYPE_REF_IS_RVALUE (type)\n-      && lvalue_or_rvalue_with_address_p (expr)\n+      && real_lvalue_p (expr)\n       && reference_related_p (TREE_TYPE (type), intype)\n       && (c_cast_p || at_least_as_qualified_p (TREE_TYPE (type), intype)))\n     {\n-      expr = build_typed_address (expr, type);\n-      return convert_from_reference (expr);\n+      /* Handle the lvalue case here by casting to lvalue reference and\n+\t then changing it to an rvalue reference.  Casting an xvalue to\n+\t rvalue reference will be handled by the main code path.  */\n+      tree lref = cp_build_reference_type (TREE_TYPE (type), false);\n+      result = (perform_direct_initialization_if_possible\n+\t\t(lref, expr, c_cast_p, complain));\n+      result = cp_fold_convert (type, result);\n+      /* Make sure we don't fold back down to a named rvalue reference,\n+\t because that would be an lvalue.  */\n+      if (DECL_P (result))\n+\tresult = build1 (NON_LVALUE_EXPR, type, result);\n+      return convert_from_reference (result);\n     }\n \n   /* Resolve overloaded address here rather than once in"}, {"sha": "e22d1147de735e0b22407f336e5af24b0dc97367", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58fc93fb001225df27cb502d0d5f4f939f0dc0aa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58fc93fb001225df27cb502d0d5f4f939f0dc0aa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=58fc93fb001225df27cb502d0d5f4f939f0dc0aa", "patch": "@@ -1,3 +1,10 @@\n+2011-12-13  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/51406\n+\tPR c++/51161\n+\t* g++.dg/cpp0x/rv-cast3.C: New.\n+\t* g++.dg/cpp0x/rv-cast4.C: New.\n+\n 2011-12-13  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/51464"}, {"sha": "6c70324aa81e3a4b58eaf86a1440ee17ab84bd59", "filename": "gcc/testsuite/g++.dg/cpp0x/rv-cast3.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58fc93fb001225df27cb502d0d5f4f939f0dc0aa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-cast3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58fc93fb001225df27cb502d0d5f4f939f0dc0aa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-cast3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-cast3.C?ref=58fc93fb001225df27cb502d0d5f4f939f0dc0aa", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/51406\n+// { dg-do run { target c++11 } }\n+\n+extern \"C\" int printf(const char *,...);\n+extern \"C\" void abort();\n+\n+struct A { int a; A() : a(1) {} };\n+struct B { int b; B() : b(2) {} };\n+struct X : A, B {};\n+\n+int main() {\n+    X x;\n+    int a=static_cast<A&&>(x).a;\n+    int b=static_cast<B&&>(x).b;\n+    // printf (\"%d %d\\n\", a, b);\n+    if (a!=1 || b!=2) abort();\n+}"}, {"sha": "13f369d6108f8663ed48729d51028912af85674b", "filename": "gcc/testsuite/g++.dg/cpp0x/rv-cast4.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/58fc93fb001225df27cb502d0d5f4f939f0dc0aa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-cast4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/58fc93fb001225df27cb502d0d5f4f939f0dc0aa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-cast4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-cast4.C?ref=58fc93fb001225df27cb502d0d5f4f939f0dc0aa", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/51161\n+// { dg-do compile { target c++11 } }\n+\n+struct A{};\n+struct B : A{};\n+struct C : A{};\n+struct D : B, C{};\n+\n+int main()\n+{\n+  D d;\n+  static_cast<A &&>(d);\t\t// { dg-error \"ambiguous\" }\n+}"}]}