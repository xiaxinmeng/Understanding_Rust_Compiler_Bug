{"sha": "bc9fadfb1c0b1f9a1d4038ddab92a3dda133983a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM5ZmFkZmIxYzBiMWY5YTFkNDAzOGRkYWI5MmEzZGRhMTMzOTgzYQ==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "1996-02-14T19:35:33Z"}, "committer": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "1996-02-14T19:35:33Z"}, "message": "append / to AIX import path if not present\n\nFrom-SVN: r11275", "tree": {"sha": "f45643ea0630ed319960e16e71e8956d5c663845", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f45643ea0630ed319960e16e71e8956d5c663845"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc9fadfb1c0b1f9a1d4038ddab92a3dda133983a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc9fadfb1c0b1f9a1d4038ddab92a3dda133983a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc9fadfb1c0b1f9a1d4038ddab92a3dda133983a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc9fadfb1c0b1f9a1d4038ddab92a3dda133983a/comments", "author": null, "committer": null, "parents": [{"sha": "e8d791dd5551e3b3458286ab23c8b2d280afc560", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8d791dd5551e3b3458286ab23c8b2d280afc560", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8d791dd5551e3b3458286ab23c8b2d280afc560"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "30fb49d8e63007d516c28e341acb8416ef886642", "filename": "gcc/collect2.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc9fadfb1c0b1f9a1d4038ddab92a3dda133983a/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc9fadfb1c0b1f9a1d4038ddab92a3dda133983a/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=bc9fadfb1c0b1f9a1d4038ddab92a3dda133983a", "patch": "@@ -2616,6 +2616,7 @@ scan_libraries (prog_name)\n \t  char *impmem = implib + strlen (implib) + 1;\n \t  char *soname = NULL;\n \t  char *trial;\n+\t  int pathlen;\n \t  LDFILE *libptr = NULL;\n \t  struct prefix_list *pl;\n \t  ARCHDR ah;\n@@ -2627,12 +2628,15 @@ scan_libraries (prog_name)\n \t  if (*impath == '/' && *(impath+1) == '\\0'\n \t      && strcmp (implib, \"unix\") == 0)\n \t    continue;\n-          trial = alloca (MAX (strlen (impath), libpath.max_len)\n+\t  pathlen = strlen (impath);\n+          trial = alloca (MAX (pathlen + 1, libpath.max_len)\n \t\t\t  + strlen (implib) + 1);\n \t  if (*impath)\n \t    {\n \t      strcpy (trial, impath);\n-\t      strcat (trial, implib);\n+\t      if (impath[pathlen - 1] != '/')\n+\t\ttrial[pathlen++] = '/';\n+\t      strcpy (trial + pathlen, implib);\n \t      if (access (trial, R_OK) == 0)\n \t\tsoname = trial;\n \t    }"}]}