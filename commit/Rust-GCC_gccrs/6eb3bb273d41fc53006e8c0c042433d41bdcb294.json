{"sha": "6eb3bb273d41fc53006e8c0c042433d41bdcb294", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmViM2JiMjczZDQxZmM1MzAwNmU4YzBjMDQyNDMzZDQxYmRjYjI5NA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-05-12T21:42:34Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-05-12T21:42:34Z"}, "message": "error.c (dump_simple_decl): Use DECL_CLASS_SCOPE_P and/or DECL_NAMESPACE_SCOPE_P.\n\n\t* error.c (dump_simple_decl): Use DECL_CLASS_SCOPE_P and/or\n\tDECL_NAMESPACE_SCOPE_P.\n\t(lang_decl_name): Likewise.\n\t* pt.c (tsubst_friend_function, tsubst): Likewise.\n\t* decl.c (pushdecl, redeclaration_error_message, start_decl,\n\tcp_finish_decl, start_function): Likewise.\n\t* class.c (finish_struct_1): Likewise.\n\t* call.c (build_over_call): Likewise.\n\t(compare_ics): Use DERIVED_FROM_P.\n\nFrom-SVN: r19705", "tree": {"sha": "92a30e7ea61540479bbab87c4470f8b7d7a37d52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92a30e7ea61540479bbab87c4470f8b7d7a37d52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6eb3bb273d41fc53006e8c0c042433d41bdcb294", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6eb3bb273d41fc53006e8c0c042433d41bdcb294", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6eb3bb273d41fc53006e8c0c042433d41bdcb294", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6eb3bb273d41fc53006e8c0c042433d41bdcb294/comments", "author": null, "committer": null, "parents": [{"sha": "b706d7f20d438d0cda4790a798d98d5cb74290f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b706d7f20d438d0cda4790a798d98d5cb74290f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b706d7f20d438d0cda4790a798d98d5cb74290f9"}], "stats": {"total": 71, "additions": 31, "deletions": 40}, "files": [{"sha": "a2742a5414e366183e42ac8b9a218181f3cfed83", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eb3bb273d41fc53006e8c0c042433d41bdcb294/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eb3bb273d41fc53006e8c0c042433d41bdcb294/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6eb3bb273d41fc53006e8c0c042433d41bdcb294", "patch": "@@ -1,3 +1,15 @@\n+Tue May 12 21:37:49 1998  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* error.c (dump_simple_decl): Use DECL_CLASS_SCOPE_P and/or\n+\tDECL_NAMESPACE_SCOPE_P.\n+\t(lang_decl_name): Likewise.\n+\t* pt.c (tsubst_friend_function, tsubst): Likewise.\n+\t* decl.c (pushdecl, redeclaration_error_message, start_decl, \n+\tcp_finish_decl, start_function): Likewise.\n+\t* class.c (finish_struct_1): Likewise.\n+\t* call.c (build_over_call): Likewise.\n+\t(compare_ics): Use DERIVED_FROM_P.\n+\n Tue May 12 07:24:18 1998  Mark Mitchell  <mmitchell@usa.net>\n \n \t* cp-tree.h (CANONICAL_TYPE_VARIANT): New macro.\n@@ -11,12 +23,8 @@ Mon May 11 11:38:07 1998  Mark Mitchell  <mmitchell@usa.net>\n \n \t* ptree.c (lang_print_xnode): Add missing `break'.\n \n-Mon May 11 10:09:16 1998  Mark Mitchell  <mmitchell@usa.net>\n-\n \t* pt.c (tsubst): Remove duplicate check for IDENTIFIER_NODE.\n \n-Mon May 11 07:16:30 1998  Mark Mitchell  <mmitchell@usa.net>\n-\n \t* call.c (add_template_candidate): Adjust for changes to\n \tfn_type_unification. \n \t(add_template_candidate_real): Likewise.\n@@ -68,8 +76,6 @@ Mon May 11 07:16:30 1998  Mark Mitchell  <mmitchell@usa.net>\n \t* parse.h: Regenerated.\n \t* parse.c: Really regenerated.\n \t\n-Mon May 11 00:03:34 1998  Mark Mitchell  <mmitchell@usa.net>\n-\n \t* cp-tree.h (finish_unary_op_expr): New function.\n \t(finish_id_expr): Likewise.\n \t(begin_new_placement): Likewise.\n@@ -108,8 +114,8 @@ Sun May 10 23:43:13 1998  Mark Mitchell  <mmitchell@usa.net>\n \n Sun May 10 22:53:56 1998  Jason Merrill  <jason@yorick.cygnus.com>\n \n-\t* cp-tree.h (DECL_NAMESPACE_SCOPE): New macro.\n-\t(DECL_CLASS_SCOPE): Likewise.\n+\t* cp-tree.h (DECL_NAMESPACE_SCOPE_P): New macro.\n+\t(DECL_CLASS_SCOPE_P): Likewise.\n \n Sun May 10 22:48:22 1998  H.J. Lu  (hjl@gnu.org)\n "}, {"sha": "fa02408ff688f00dadc51bf33f6d08e0eee98e9c", "filename": "gcc/cp/call.c", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eb3bb273d41fc53006e8c0c042433d41bdcb294/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eb3bb273d41fc53006e8c0c042433d41bdcb294/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=6eb3bb273d41fc53006e8c0c042433d41bdcb294", "patch": "@@ -3294,14 +3294,12 @@ build_over_call (cand, args, flags)\n \n \t     we must be careful to do name lookup in the scope of\n \t     S<T>, rather than in the current class.  */\n-\t  if (DECL_REAL_CONTEXT (fn) \n-\t      && TREE_CODE (DECL_REAL_CONTEXT (fn)) != NAMESPACE_DECL)\n+\t  if (DECL_CLASS_SCOPE_P (fn))\n \t    pushclass (DECL_REAL_CONTEXT (fn), 2);\n \n \t  arg = tsubst_expr (arg, DECL_TI_ARGS (fn), NULL_TREE);\n \n-\t  if (DECL_REAL_CONTEXT (fn)\n-\t      && TREE_CODE (DECL_CONTEXT (fn)) != NAMESPACE_DECL)\n+\t  if (DECL_CLASS_SCOPE_P (fn))\n \t    popclass (0);\n \t}\n       converted_args = expr_tree_cons\n@@ -3926,10 +3924,10 @@ compare_ics (ics1, ics2)\n \t    return -1;\n \t}\n       else if (TREE_CODE (to2) == VOID_TYPE && IS_AGGR_TYPE (to1)\n-\t       && get_base_distance (to1, from1, 0, 0) != -1)\n+\t       && DERIVED_FROM_P (to1, from1))\n \treturn 1;\n       else if (TREE_CODE (to1) == VOID_TYPE && IS_AGGR_TYPE (to2)\n-\t       && get_base_distance (to2, from2, 0, 0) != -1)\n+\t       && DERIVED_FROM_P (to2, from2))\n \treturn -1;\n \n       if (! (IS_AGGR_TYPE (to1) && IS_AGGR_TYPE (to2)))"}, {"sha": "a07563febaf0b8adbdf9278eee2e5abab527e18e", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eb3bb273d41fc53006e8c0c042433d41bdcb294/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eb3bb273d41fc53006e8c0c042433d41bdcb294/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=6eb3bb273d41fc53006e8c0c042433d41bdcb294", "patch": "@@ -4191,8 +4191,7 @@ finish_struct_1 (t, warn_anon)\n     {\n       /* Be smarter about nested classes here.  If a type is nested,\n \t only output it if we would output the enclosing type.  */\n-      if (DECL_CONTEXT (TYPE_MAIN_DECL (t))\n-\t  && TREE_CODE_CLASS (TREE_CODE (DECL_CONTEXT (TYPE_MAIN_DECL (t)))) == 't')\n+      if (DECL_CLASS_SCOPE_P (TYPE_MAIN_DECL (t)))\n \tDECL_IGNORED_P (TYPE_MAIN_DECL (t)) = TREE_ASM_WRITTEN (TYPE_MAIN_DECL (t));\n     }\n #endif"}, {"sha": "3461bdb5fbfc6575d0c338bfc69ab194b86b9756", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eb3bb273d41fc53006e8c0c042433d41bdcb294/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eb3bb273d41fc53006e8c0c042433d41bdcb294/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=6eb3bb273d41fc53006e8c0c042433d41bdcb294", "patch": "@@ -1106,12 +1106,12 @@ struct lang_decl\n    ? DECL_CLASS_CONTEXT (NODE) : DECL_CONTEXT (NODE))\n \n /* 1 iff NODE has namespace scope, including the global namespace.  */\n-#define DECL_NAMESPACE_SCOPE(NODE) \\\n+#define DECL_NAMESPACE_SCOPE_P(NODE) \\\n   (DECL_CONTEXT (NODE) == NULL_TREE \\\n    || TREE_CODE (DECL_CONTEXT (NODE)) == NAMESPACE_DECL)\n \n /* 1 iff NODE is a class member.  */\n-#define DECL_CLASS_SCOPE(NODE) \\\n+#define DECL_CLASS_SCOPE_P(NODE) \\\n   (DECL_CONTEXT (NODE) \\\n    && TREE_CODE_CLASS (TREE_CODE (DECL_CONTEXT (NODE))) == 't')\n "}, {"sha": "4650bf4fce25e12e3df57ceb4ff42b71ecaef609", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eb3bb273d41fc53006e8c0c042433d41bdcb294/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eb3bb273d41fc53006e8c0c042433d41bdcb294/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=6eb3bb273d41fc53006e8c0c042433d41bdcb294", "patch": "@@ -3257,8 +3257,7 @@ pushdecl (x)\n \tname = TREE_OPERAND (name, 0);\n       \n       /* Namespace-scoped variables are not found in the current level. */\n-      if (TREE_CODE (x) == VAR_DECL\n-\t  && TREE_CODE (DECL_CONTEXT (x)) == NAMESPACE_DECL)\n+      if (TREE_CODE (x) == VAR_DECL && DECL_NAMESPACE_SCOPE_P (x))\n \tt = namespace_binding (name, DECL_CONTEXT (x));\n       else\n \tt = lookup_name_current_level (name);\n@@ -3367,8 +3366,7 @@ pushdecl (x)\n \t  if (t != x || DECL_LANGUAGE (x) == lang_c)\n \t    return t;\n \t}\n-      else if (DECL_FUNCTION_TEMPLATE_P (x) && DECL_CONTEXT (x)\n-\t       && TREE_CODE (DECL_CONTEXT (x)) == NAMESPACE_DECL)\n+      else if (DECL_FUNCTION_TEMPLATE_P (x) && DECL_NAMESPACE_SCOPE_P (x))\n \treturn push_overloaded_decl (x, 0);\n \n       /* If declaring a type as a typedef, copy the type (unless we're\n@@ -3995,7 +3993,7 @@ redeclaration_error_message (newdecl, olddecl)\n \n       /* If both functions come from different namespaces, this is not\n \t a redeclaration - this is a conflict with a used function. */\n-      if (TREE_CODE (DECL_CONTEXT (olddecl)) == NAMESPACE_DECL\n+      if (DECL_NAMESPACE_SCOPE_P (olddecl)\n \t  && DECL_CONTEXT (olddecl) != DECL_CONTEXT (newdecl))\n \treturn \"`%D' conflicts with used function\";\n \n@@ -6232,10 +6230,7 @@ start_decl (declarator, declspecs, initialized, attributes, prefix_attributes)\n      comes from another scope, e.g. a static member variable.\n      TEM may equal DECL or it may be a previous decl of the same name.  */\n   \n-  if ((TREE_CODE (decl) != PARM_DECL && DECL_CONTEXT (decl) != NULL_TREE \n-       /* Definitions of namespace members outside their namespace are\n-\t  possible. */\n-       && TREE_CODE (DECL_CONTEXT (decl)) != NAMESPACE_DECL)\n+  if ((TREE_CODE (decl) != PARM_DECL && DECL_CONTEXT (decl) != NULL_TREE)\n       || (TREE_CODE (decl) == TEMPLATE_DECL && !namespace_bindings_p ())\n       || TREE_CODE (type) == LANG_TYPE\n       /* The declaration of template specializations does not affect\n@@ -6841,8 +6836,7 @@ cp_finish_decl (decl, init, asmspec_tree, need_pop, flags)\n \t/* Let debugger know it should output info for this type.  */\n \tnote_debug_info_needed (ttype);\n \n-      if (TREE_STATIC (decl) && DECL_CONTEXT (decl)\n-\t  && TREE_CODE_CLASS (TREE_CODE (DECL_CONTEXT (decl))) == 't')\n+      if (TREE_STATIC (decl) && DECL_CLASS_SCOPE_P (decl))\n \tnote_debug_info_needed (DECL_CONTEXT (decl));\n \n       if ((DECL_EXTERNAL (decl) || TREE_STATIC (decl))\n@@ -11636,8 +11630,7 @@ start_function (declspecs, declarator, attrs, pre_parsed_p)\n \n       if (! DECL_ARGUMENTS (decl1)\n \t  && !DECL_STATIC_FUNCTION_P (decl1)\n-\t  && DECL_CONTEXT (decl1)\n-\t  && TREE_CODE (DECL_CONTEXT (decl1)) != NAMESPACE_DECL\n+\t  && DECL_CLASS_SCOPE_P (decl1)\n \t  && TYPE_IDENTIFIER (DECL_CONTEXT (decl1))\n \t  && IDENTIFIER_TEMPLATE (TYPE_IDENTIFIER (DECL_CONTEXT (decl1))))\n \t{"}, {"sha": "61739211bb5885443342274e7cd12a6b7f96ab77", "filename": "gcc/cp/error.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eb3bb273d41fc53006e8c0c042433d41bdcb294/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eb3bb273d41fc53006e8c0c042433d41bdcb294/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=6eb3bb273d41fc53006e8c0c042433d41bdcb294", "patch": "@@ -658,9 +658,7 @@ dump_simple_decl (t, type, v)\n       OB_PUTC (' ');\n       dump_readonly_or_volatile (t, after);\n     }\n-  /* DECL_CLASS_CONTEXT isn't being set in some cases.  Hmm...  */\n-  if (DECL_CONTEXT (t)\n-      && TREE_CODE_CLASS (TREE_CODE (DECL_CONTEXT (t))) == 't')\n+  if (DECL_CLASS_SCOPE_P (t))\n     {\n       dump_type (DECL_CONTEXT (t), 0);\n       OB_PUTC2 (':', ':');\n@@ -1748,8 +1746,7 @@ lang_decl_name (decl, v)\n \n   OB_INIT ();\n \n-  if (v == 1 && DECL_CONTEXT (decl)\n-      && TREE_CODE_CLASS (TREE_CODE (DECL_CONTEXT (decl))) == 't')\n+  if (v == 1 && DECL_CLASS_SCOPE_P (decl))\n     {\n       tree cname;\n       if (TREE_CODE (decl) == FUNCTION_DECL)"}, {"sha": "5b860abed4a44fae2469039e1cf9964a59662e78", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eb3bb273d41fc53006e8c0c042433d41bdcb294/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eb3bb273d41fc53006e8c0c042433d41bdcb294/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=6eb3bb273d41fc53006e8c0c042433d41bdcb294", "patch": "@@ -3467,8 +3467,7 @@ tsubst_friend_function (decl, args)\n   if (TREE_CODE (decl) == TEMPLATE_DECL)\n     DECL_USE_TEMPLATE (DECL_TEMPLATE_RESULT (new_friend)) = 0;\n   \n-  if (!DECL_CONTEXT (new_friend) \n-      || TREE_CODE (DECL_CONTEXT (new_friend)) == NAMESPACE_DECL)\n+  if (DECL_NAMESPACE_SCOPE_P (new_friend))\n     {\n       if (TREE_CODE (new_friend) == TEMPLATE_DECL)\n \t/* This declaration is a `primary' template.  */\n@@ -4395,8 +4394,7 @@ tsubst (t, args, in_decl)\n \ttree tmpl = NULL_TREE;\n \tint member;\n \n-\tif (DECL_CONTEXT (t) != NULL_TREE\n-\t    && TREE_CODE_CLASS (TREE_CODE (DECL_CONTEXT (t))) == 't')\n+\tif (DECL_CLASS_SCOPE_P (t))\n \t  {\n \t    if (DECL_NAME (t) == constructor_name (DECL_CONTEXT (t)))\n \t      member = 2;"}]}