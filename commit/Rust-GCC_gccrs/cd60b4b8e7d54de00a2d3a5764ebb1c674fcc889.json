{"sha": "cd60b4b8e7d54de00a2d3a5764ebb1c674fcc889", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q2MGI0YjhlN2Q1NGRlMDBhMmQzYTU3NjRlYmIxYzY3NGZjYzg4OQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-10-25T21:58:12Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-10-25T21:58:12Z"}, "message": "real.c (real_to_decimal): If the >1 tens reduction loop results in a negative exponent...\n\n        * real.c (real_to_decimal): If the >1 tens reduction loop results\n        in a negative exponent, fall into the <1 pten computation.\n\nFrom-SVN: r58538", "tree": {"sha": "e02de76ba121265c45f6e6dd319c376578c004e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e02de76ba121265c45f6e6dd319c376578c004e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd60b4b8e7d54de00a2d3a5764ebb1c674fcc889", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd60b4b8e7d54de00a2d3a5764ebb1c674fcc889", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd60b4b8e7d54de00a2d3a5764ebb1c674fcc889", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd60b4b8e7d54de00a2d3a5764ebb1c674fcc889/comments", "author": null, "committer": null, "parents": [{"sha": "06bd49b10b07b3ab25a21f5fb9f56e2fbd313682", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06bd49b10b07b3ab25a21f5fb9f56e2fbd313682", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06bd49b10b07b3ab25a21f5fb9f56e2fbd313682"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "7ad2654c42194ebfd408c3249ce5cb1209207552", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd60b4b8e7d54de00a2d3a5764ebb1c674fcc889/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd60b4b8e7d54de00a2d3a5764ebb1c674fcc889/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd60b4b8e7d54de00a2d3a5764ebb1c674fcc889", "patch": "@@ -1,3 +1,8 @@\n+2002-10-25  Richard Henderson  <rth@redhat.com>\n+\n+\t* real.c (real_to_decimal): If the >1 tens reduction loop results\n+\tin a negative exponent, fall into the <1 pten computation.\n+\n 2002-10-25  Zack Weinberg  <zack@codesourcery.com>\n \n \tPR middle-end/6994"}, {"sha": "c3cb719c0b96b2709769bfe576bd44f79fa54064", "filename": "gcc/real.c", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd60b4b8e7d54de00a2d3a5764ebb1c674fcc889/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd60b4b8e7d54de00a2d3a5764ebb1c674fcc889/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=cd60b4b8e7d54de00a2d3a5764ebb1c674fcc889", "patch": "@@ -1552,20 +1552,28 @@ real_to_decimal (str, r_orig, buf_size, digits, crop_trailing_zeros)\n       /* Find power of 10.  Do this by dividing out 10**2**M when\n \t this is larger than the current remainder.  Fill PTEN with \n \t the power of 10 that we compute.  */\n-      m = floor_log2 ((int)(r.exp * M_LOG10_2)) + 1;\n-      do\n+      if (r.exp > 0)\n \t{\n-\t  const REAL_VALUE_TYPE *ptentwo = ten_to_ptwo (m);\n-\t  if (do_compare (&u, ptentwo, 0) >= 0)\n+\t  m = floor_log2 ((int)(r.exp * M_LOG10_2)) + 1;\n+\t  do\n \t    {\n-\t      do_divide (&u, &u, ptentwo);\n-\t      do_multiply (&pten, &pten, ptentwo);\n-\t      dec_exp += 1 << m;\n+\t      const REAL_VALUE_TYPE *ptentwo = ten_to_ptwo (m);\n+\t      if (do_compare (&u, ptentwo, 0) >= 0)\n+\t        {\n+\t          do_divide (&u, &u, ptentwo);\n+\t          do_multiply (&pten, &pten, ptentwo);\n+\t          dec_exp += 1 << m;\n+\t        }\n \t    }\n+          while (--m >= 0);\n \t}\n-      while (--m >= 0);\n+      else\n+\t/* We managed to divide off enough tens in the above reduction\n+\t   loop that we've now got a negative exponent.  Fall into the\n+\t   less-than-one code to compute the proper value for PTEN.  */\n+\tcmp_one = -1;\n     }\n-  else if (cmp_one < 0)\n+  if (cmp_one < 0)\n     {\n       int m;\n "}]}