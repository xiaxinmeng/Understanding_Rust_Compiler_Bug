{"sha": "b56ad95854f0b007afda60c057f10b04666953c9", "node_id": "C_kwDOANBUbNoAKGI1NmFkOTU4NTRmMGIwMDdhZmRhNjBjMDU3ZjEwYjA0NjY2OTUzYzk", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-02-11T18:47:14Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-02-11T18:47:14Z"}, "message": "middle-end: Small __builtin_clear_padding improvements\n\nWhen looking at __builtin_clear_padding today, I've noticed that\nit is quite wasteful to extend the original user one argument to 3,\n2 is enough.  We need to encode the original type of the first argument\nbecause pointer conversions are useless in GIMPLE, and we need to record\na boolean whether it is for -ftrivial-auto-var-init=* or not.\nBut for recording the type we don't need the value (we've always used\nzero) and for recording the boolean we don't need the type (we've always\nused integer_type_node).\nSo, this patch merges the two into one.\n\n2022-02-11  Jakub Jelinek  <jakub@redhat.com>\n\n\t* tree.cc (build_common_builtin_nodes): Fix up formatting in\n\t__builtin_clear_padding decl creation.\n\t* gimplify.cc (gimple_add_padding_init_for_auto_var): Encode\n\tfor_auto_init in the value of 2nd BUILT_IN_CLEAR_PADDING\n\targument rather than in 3rd argument.\n\t(gimplify_call_expr): Likewise.  Fix up comment formatting.\n\t* gimple-fold.cc (gimple_fold_builtin_clear_padding): Expect\n\t2 arguments instead of 3, take for_auto_init from the value\n\tof 2nd argument.", "tree": {"sha": "7362cc377c99e42106d087d920c05d2a2ee5b2ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7362cc377c99e42106d087d920c05d2a2ee5b2ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b56ad95854f0b007afda60c057f10b04666953c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b56ad95854f0b007afda60c057f10b04666953c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b56ad95854f0b007afda60c057f10b04666953c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b56ad95854f0b007afda60c057f10b04666953c9/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "274a4d29421e73c9b40c1641986c6ed904e20184", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/274a4d29421e73c9b40c1641986c6ed904e20184", "html_url": "https://github.com/Rust-GCC/gccrs/commit/274a4d29421e73c9b40c1641986c6ed904e20184"}], "stats": {"total": 31, "additions": 12, "deletions": 19}, "files": [{"sha": "d9b1a442a7ae98dce61e8ec938e34a5d319a3454", "filename": "gcc/gimple-fold.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b56ad95854f0b007afda60c057f10b04666953c9/gcc%2Fgimple-fold.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b56ad95854f0b007afda60c057f10b04666953c9/gcc%2Fgimple-fold.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.cc?ref=b56ad95854f0b007afda60c057f10b04666953c9", "patch": "@@ -4876,13 +4876,13 @@ static bool\n gimple_fold_builtin_clear_padding (gimple_stmt_iterator *gsi)\n {\n   gimple *stmt = gsi_stmt (*gsi);\n-  gcc_assert (gimple_call_num_args (stmt) == 3);\n+  gcc_assert (gimple_call_num_args (stmt) == 2);\n   tree ptr = gimple_call_arg (stmt, 0);\n   tree typearg = gimple_call_arg (stmt, 1);\n-  /* the 3rd argument of __builtin_clear_padding is to distinguish whether\n-     this call is made by the user or by the compiler for automatic variable\n-     initialization.  */\n-  bool for_auto_init = (bool) TREE_INT_CST_LOW (gimple_call_arg (stmt, 2));\n+  /* The 2nd argument of __builtin_clear_padding's value is used to\n+     distinguish whether this call is made by the user or by the compiler\n+     for automatic variable initialization.  */\n+  bool for_auto_init = (bool) TREE_INT_CST_LOW (typearg);\n   tree type = TREE_TYPE (TREE_TYPE (typearg));\n   location_t loc = gimple_location (stmt);\n   clear_padding_struct buf;"}, {"sha": "7d8850e53ec3db6654e57724ac8894a7305649fd", "filename": "gcc/gimplify.cc", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b56ad95854f0b007afda60c057f10b04666953c9/gcc%2Fgimplify.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b56ad95854f0b007afda60c057f10b04666953c9/gcc%2Fgimplify.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.cc?ref=b56ad95854f0b007afda60c057f10b04666953c9", "patch": "@@ -1804,7 +1804,6 @@ gimple_add_padding_init_for_auto_var (tree decl, bool is_vla,\n \t\t\t\t      gimple_seq *seq_p)\n {\n   tree addr_of_decl = NULL_TREE;\n-  bool for_auto_init = true;\n   tree fn = builtin_decl_explicit (BUILT_IN_CLEAR_PADDING);\n \n   if (is_vla)\n@@ -1821,11 +1820,8 @@ gimple_add_padding_init_for_auto_var (tree decl, bool is_vla,\n       addr_of_decl = build_fold_addr_expr (decl);\n     }\n \n-  gimple *call = gimple_build_call (fn,\n-\t\t\t\t    3, addr_of_decl,\n-\t\t\t\t    build_zero_cst (TREE_TYPE (addr_of_decl)),\n-\t\t\t\t    build_int_cst (integer_type_node,\n-\t\t\t\t\t\t   (int) for_auto_init));\n+  gimple *call = gimple_build_call (fn, 2, addr_of_decl,\n+\t\t\t\t    build_one_cst (TREE_TYPE (addr_of_decl)));\n   gimplify_seq_add_stmt (seq_p, call);\n }\n \n@@ -3536,15 +3532,12 @@ gimplify_call_expr (tree *expr_p, gimple_seq *pre_p, bool want_value)\n \t  {\n \t    /* Remember the original type of the argument in an internal\n \t       dummy second argument, as in GIMPLE pointer conversions are\n-\t       useless. also mark this call as not for automatic initialization\n-\t       in the internal dummy third argument.  */\n+\t       useless.  Also mark this call as not for automatic\n+\t       initialization in the internal dummy third argument.  */\n \t    p = CALL_EXPR_ARG (*expr_p, 0);\n-\t    bool for_auto_init = false;\n \t    *expr_p\n-\t      = build_call_expr_loc (EXPR_LOCATION (*expr_p), fndecl, 3, p,\n-\t\t\t\t     build_zero_cst (TREE_TYPE (p)),\n-\t\t\t\t     build_int_cst (integer_type_node,\n-\t\t\t\t\t\t    (int) for_auto_init));\n+\t      = build_call_expr_loc (EXPR_LOCATION (*expr_p), fndecl, 2, p,\n+\t\t\t\t     build_zero_cst (TREE_TYPE (p)));\n \t    return GS_OK;\n \t  }\n \tbreak;"}, {"sha": "dd919ff07172b76f535f9355fc7402d6b5a3354b", "filename": "gcc/tree.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b56ad95854f0b007afda60c057f10b04666953c9/gcc%2Ftree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b56ad95854f0b007afda60c057f10b04666953c9/gcc%2Ftree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.cc?ref=b56ad95854f0b007afda60c057f10b04666953c9", "patch": "@@ -9520,7 +9520,7 @@ build_common_builtin_nodes (void)\n       local_define_builtin (\"__builtin_clear_padding\", ftype,\n \t\t\t    BUILT_IN_CLEAR_PADDING,\n \t\t\t    \"__builtin_clear_padding\",\n-\t\t\t      ECF_LEAF | ECF_NOTHROW);\n+\t\t\t    ECF_LEAF | ECF_NOTHROW);\n     }\n \n   if (!builtin_decl_explicit_p (BUILT_IN_UNREACHABLE)"}]}