{"sha": "62d08205493a37f6fcb089df7f3295afe62c21b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJkMDgyMDU0OTNhMzdmNmZjYjA4OWRmN2YzMjk1YWZlNjJjMjFiNA==", "commit": {"author": {"name": "Gerald Pfeifer", "email": "pfeifer@dbai.tuwien.ac.at", "date": "2003-03-29T11:35:07Z"}, "committer": {"name": "Gerald Pfeifer", "email": "gerald@gcc.gnu.org", "date": "2003-03-29T11:35:07Z"}, "message": "re PR other/895 (top of ONEWS needs to be merged into EGCS release notes)\n\n\tPR doc/895\n\t* ONEWS: Remove those items that already appear in the EGCS\n\trelease notes on our web pages.\n\nFrom-SVN: r65013", "tree": {"sha": "a173e0e6de80ad7791438914055582b749fc3736", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a173e0e6de80ad7791438914055582b749fc3736"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62d08205493a37f6fcb089df7f3295afe62c21b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62d08205493a37f6fcb089df7f3295afe62c21b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62d08205493a37f6fcb089df7f3295afe62c21b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62d08205493a37f6fcb089df7f3295afe62c21b4/comments", "author": null, "committer": null, "parents": [{"sha": "e87a88d34cd756e384041fb54f800ccf9a945d66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e87a88d34cd756e384041fb54f800ccf9a945d66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e87a88d34cd756e384041fb54f800ccf9a945d66"}], "stats": {"total": 104, "additions": 13, "deletions": 91}, "files": [{"sha": "df002cba21c46ad133940508092c9bf533c8be55", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62d08205493a37f6fcb089df7f3295afe62c21b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62d08205493a37f6fcb089df7f3295afe62c21b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=62d08205493a37f6fcb089df7f3295afe62c21b4", "patch": "@@ -1,3 +1,9 @@\n+2003-03-29  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n+\n+\tPR doc/895\n+\t* ONEWS: Remove those items that already appear in the EGCS\n+\trelease notes on our web pages.\n+\n 2003-03-29  Alan Modra  <amodra@bigpond.net.au>\n \n \t* config/rs6000/rs6000.h (FUNCTION_VALUE_REGNO_P): Respect"}, {"sha": "f4b358102ee7f7d5a3fefc3dfe68ac8273a8a954", "filename": "gcc/ONEWS", "status": "modified", "additions": 7, "deletions": 91, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62d08205493a37f6fcb089df7f3295afe62c21b4/gcc%2FONEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62d08205493a37f6fcb089df7f3295afe62c21b4/gcc%2FONEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FONEWS?ref=62d08205493a37f6fcb089df7f3295afe62c21b4", "patch": "@@ -1,112 +1,28 @@\n This file contains information about GCC releases up to GCC 2.8.1, and\n-some information about EGCS releases.  For more details of changes in\n-EGCS releases, and details of changes in GCC 2.95 and more recent\n-releases, see the release notes on the GCC web site and the file NEWS\n-which contains the most relevant parts of those release notes in text\n-form.\n+a tiny bit of information on EGCS.\n \n-Noteworthy changes in GCC for EGCS 1.1.\n----------------------------------------\n-\n-The compiler now implements global common subexpression elimination (gcse) as\n-well as global constant/copy propagation.  (link to gcse page).\n-\n-More major improvements have been made to the alias analysis code.  A new\n-option to allow front-ends to provide alias information to the optimizers\n-has also been added (-fstrict-aliasing).  -fstrict-aliasing is off by default\n-now, but will be enabled by default in the future. (link to alias page)\n-\n-Major changes continue in the exception handling support.  This release\n-includes some changes to reduce static overhead for exception handling.  It\n-also includes some major changes to the setjmp/longjmp based EH mechanism to\n-make it less pessimistic.  And finally, major infrastructure improvements\n-to the dwarf2 EH mechanism have been made to make our EH support extensible.\n-\n-We have fixed the infamous security problems with temporary files. \n-\n-The \"regmove\" optimization pass has been nearly completely rewritten.  It now\n-uses much more information about the target to determine profitability of\n-transformations.\n+For details of changes in EGCS releases and GCC 2.95 and later releases,\n+see the release notes on the GCC web site or the file NEWS which contains\n+the most relevant parts of those release notes in text form.\n \n-The compiler now recomputes register usage information immediately before\n-register allocation.  Previously such information was only not kept up to\n-date after instruction combination which led to poor register allocation\n-choices by our priority based register allocator.\n-\n-The register reloading phase of the compiler has been improved to better\n-optimize spill code.  This primarily helps targets which generate lots of\n-spills (like the x86 ports and many register poor embedded ports).\n-\n-A few changes in the heuristics used by the register allocator and scheduler\n-have been made which can significantly improve performance for certain\n-applications.\n-\n-The compiler's branch shortening algorithms have been significantly improved\n-to work better on targets which align jump targets.\n+Changes in GCC for EGCS (that are not listed in the web release notes)\n+---------------------------------------------------------------------\n \n The compiler now supports the \"ADDRESSOF\" optimization which can significantly\n reduce the overhead for certain inline calls (and inline calls in general).\n \n-The compiler now supports a code size optimization switch (-Os).  When enabled\n-the compiler will prefer optimizations which improve code size over those\n-which improve code speed.\n-\n-The compiler has been improved to completely eliminate library calls which\n-compute constant values.  This is particularly useful on machines which\n-do not have integer mul/div or floating point support on-chip.\n-\n-GCC now supports a \"--help\" option to print detailed help information.\n-\n-cpplib has been greatly improved.  It is probably usable for some sites now\n-(major missing feature is trigraphs).\n-\n-Memory footprint for the compiler has been significantly reduced for certain\n-pathalogical cases.\n-\n-Build time improvements for targets which support lots of sched parameters\n-(alpha and mips primarily).\n-\n Compile time for certain programs using large constant initializers has been\n improved (affects glibc significantly).\n \n-Plus an incredible number of infrastructure changes, warning fixes, bugfixes\n-and local optimizations.\n-\n Various improvements have been made to better support cross compilations.  They\n are still not easy, but they are improving.\n \n-Target specific NEWS\n-\n-    Sparc: Now includes V8 plus and V9 support, lots of tuning for Ultrasparcs\n-           and uses the Haifa scheduler by default.\n-\n-    Alpha: EV6 tuned, optimized expansion of memcpy/bzero.\n-\n-    x86: Data in the static store is aligned per Intel recommendations.  Jump\n-         targets are aligned per Intel recommendations.  Improved epilogue\n-         sequences for Pentium chips.  Backend improvements which should help\n-         register allocation on all x86 variants.  Support for PPro conditional\n-         move instructions has been fixed and enabled.  Random changes\n-\t throughout the port to make generated code more Pentium friendly.\n-         Improved support for 64bit integer operations.\n-         Unixware 7, a System V Release 5 target is now supported.\n-         SCO OpenServer targets can support GAS.  See gcc/INSTALL for details.\n-\n-    RS6000/PowerPC: Includes AIX4.3 support as well as PowerPC64 support.  \n-                    Haifa instruction scheduling is enabled by default now.\n-\n-    MIPS: Multiply/Multiply-Add support has been largely rewritten to generate\n-          more efficient code.  Includes mips16 support.\n-\n-    M68K: Various micro-optimizations and Coldfire fixes.\n+Target-specific changes:\n \n     M32r: Major improvements to this port.\n \n     Arm: Includes Thumb and super interworking support.\n \n-EGCS includes all gcc2 changes up to and including the June 9, 1998 snapshot.\n-\n-\n Noteworthy changes in GCC version 2.8.1\n ---------------------------------------\n "}]}