{"sha": "adb563c47117279e1e7ac1c538c80b219ac27312", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRiNTYzYzQ3MTE3Mjc5ZTFlN2FjMWM1MzhjODBiMjE5YWMyNzMxMg==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2002-04-08T22:20:39Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2002-04-08T22:20:39Z"}, "message": "Make-lang.in (f/target.o): Depend on diagnostic.h.\n\n\t* Make-lang.in (f/target.o): Depend on diagnostic.h.\n\t* target.c: Include diagnostic.h.\n \t(ffetarget_memcpy_): Call sorry if host and target endians are\n\tnot matching.\n\nFrom-SVN: r52043", "tree": {"sha": "ee8b7a3b0661541856c787b59efa3a54f2659fe0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee8b7a3b0661541856c787b59efa3a54f2659fe0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/adb563c47117279e1e7ac1c538c80b219ac27312", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adb563c47117279e1e7ac1c538c80b219ac27312", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adb563c47117279e1e7ac1c538c80b219ac27312", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adb563c47117279e1e7ac1c538c80b219ac27312/comments", "author": null, "committer": null, "parents": [{"sha": "dc79864588245d6e7ce0bc417a421cfb3d827c2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc79864588245d6e7ce0bc417a421cfb3d827c2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc79864588245d6e7ce0bc417a421cfb3d827c2a"}], "stats": {"total": 55, "additions": 52, "deletions": 3}, "files": [{"sha": "2e42fa58c7d2419f92a1c9f10f31fb9b56d973a9", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adb563c47117279e1e7ac1c538c80b219ac27312/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adb563c47117279e1e7ac1c538c80b219ac27312/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=adb563c47117279e1e7ac1c538c80b219ac27312", "patch": "@@ -1,3 +1,10 @@\n+2002-04-08  Hans-Peter Nilsson  <hp@bitrange.com>\n+\n+\t* Make-lang.in (f/target.o): Depend on diagnostic.h.\n+\t* target.c: Include diagnostic.h.\n+ \t(ffetarget_memcpy_): Call sorry if host and target endians are\n+\tnot matching.\n+\n Thu Apr  4 23:29:48 2002  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* com.c (LANG_HOOKS_TRUTHVALUE_CONVERSION): Redefine."}, {"sha": "d2daf347e20eca4be1caf54579c137f8612db8ad", "filename": "gcc/f/Make-lang.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adb563c47117279e1e7ac1c538c80b219ac27312/gcc%2Ff%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adb563c47117279e1e7ac1c538c80b219ac27312/gcc%2Ff%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FMake-lang.in?ref=adb563c47117279e1e7ac1c538c80b219ac27312", "patch": "@@ -1,5 +1,5 @@\n # Top level makefile fragment for GNU Fortran.           -*-makefile-*-\n-#   Copyright (C) 1995, 1996, 1997, 1998, 2000, 2001 Free Software Foundation, Inc.\n+#   Copyright (C) 1995, 1996, 1997, 1998, 2000, 2001, 2002 Free Software Foundation, Inc.\n \n #This file is part of GNU Fortran.\n \n@@ -513,7 +513,7 @@ f/symbol.o: f/symbol.c f/proj.h $(CONFIG_H) $(SYSTEM_H) f/symbol.h \\\n  f/global.h f/name.h f/src.h f/st.h\n f/target.o: f/target.c f/proj.h $(CONFIG_H) $(SYSTEM_H) glimits.h f/target.h \\\n  $(TREE_H) f/bad.h f/bad.def f/where.h f/top.h f/malloc.h f/info.h \\\n- f/info-b.def f/info-k.def f/info-w.def f/type.h f/lex.h\n+ f/info-b.def f/info-k.def f/info-w.def f/type.h f/lex.h diagnostic.h\n f/top.o: f/top.c f/proj.h $(CONFIG_H) $(SYSTEM_H) f/top.h f/malloc.h f/where.h \\\n  glimits.h f/bad.h f/bad.def f/bit.h f/bld.h f/bld-op.def f/com.h \\\n  f/com-rt.def $(TREE_H) f/info.h f/info-b.def f/info-k.def \\"}, {"sha": "36b61043f9b1fe08e3382dbe1af6fbc0e428c3e0", "filename": "gcc/f/target.c", "status": "modified", "additions": 43, "deletions": 1, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adb563c47117279e1e7ac1c538c80b219ac27312/gcc%2Ff%2Ftarget.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adb563c47117279e1e7ac1c538c80b219ac27312/gcc%2Ff%2Ftarget.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Ftarget.c?ref=adb563c47117279e1e7ac1c538c80b219ac27312", "patch": "@@ -1,5 +1,5 @@\n /* target.c -- Implementation File (module.c template V1.0)\n-   Copyright (C) 1995, 1996, 1997, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 1997, 1998, 2002 Free Software Foundation, Inc.\n    Contributed by James Craig Burley.\n \n This file is part of GNU Fortran.\n@@ -71,6 +71,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"proj.h\"\n #include \"glimits.h\"\n #include \"target.h\"\n+#include \"diagnostic.h\"\n #include \"bad.h\"\n #include \"info.h\"\n #include \"lex.h\"\n@@ -2519,6 +2520,47 @@ ffetarget_verify_character1 (mallocPool pool, ffetargetCharacter1 val)\n void *\n ffetarget_memcpy_ (void *dst, void *src, size_t len)\n {\n+#ifdef CROSS_COMPILE\n+  int host_words_big_endian =\n+#ifndef HOST_WORDS_BIG_ENDIAN\n+    0\n+#else\n+    HOST_WORDS_BIG_ENDIAN\n+#endif\n+    ;\n+\n+  int host_bytes_big_endian =\n+#ifndef HOST_BYTES_BIG_ENDIAN\n+    0\n+#else\n+    HOST_BYTES_BIG_ENDIAN\n+#endif\n+    ;\n+\n+  int host_bits_big_endian =\n+#ifndef HOST_BITS_BIG_ENDIAN\n+    0\n+#else\n+    HOST_BITS_BIG_ENDIAN\n+#endif\n+    ;\n+\n+  /* This is just hands thrown up in the air over bits coming through this\n+     function representing a number being memcpy:d as-is from host to\n+     target.  We can't generally adjust endianness here since we don't\n+     know whether it's an integer or floating point number; they're passed\n+     differently.  Better to not emit code at all than to emit wrong code.\n+     We will get some false hits because some data coming through here\n+     seems to be just character vectors, but often enough it's numbers,\n+     for instance in g77.f-torture/execute/980628-[4-6].f and alpha2.f.\n+     Still, we compile *some* code.  FIXME: Rewrite handling of numbers.  */\n+  if (!WORDS_BIG_ENDIAN != !host_words_big_endian\n+      || !BYTES_BIG_ENDIAN != !host_bytes_big_endian\n+      || !BITS_BIG_ENDIAN != !host_bits_big_endian)\n+    sorry (\"data initializer on host with different endianness\");\n+\n+#endif /* CROSS_COMPILE */\n+\n   return (void *) memcpy (dst, src, len);\n }\n "}]}