{"sha": "cfb0346d0366b69f2f109b058a89aeed96aebeaf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZiMDM0NmQwMzY2YjY5ZjJmMTA5YjA1OGE4OWFlZWQ5NmFlYmVhZg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-11-12T07:38:32Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-11-12T07:38:32Z"}, "message": "function.c (diddle_return_value): Only clal hard_function_value when the return value is supposed to be in a register.\n\n        * function.c (diddle_return_value): Only clal hard_function_value\n        when the return value is supposed to be in a register.\n\nFrom-SVN: r30497", "tree": {"sha": "62994ceb9440809e2d0a88bb41d3a916c0d8cac7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/62994ceb9440809e2d0a88bb41d3a916c0d8cac7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfb0346d0366b69f2f109b058a89aeed96aebeaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfb0346d0366b69f2f109b058a89aeed96aebeaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfb0346d0366b69f2f109b058a89aeed96aebeaf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfb0346d0366b69f2f109b058a89aeed96aebeaf/comments", "author": null, "committer": null, "parents": [{"sha": "d5e3f1513fdfd98ca59738d1fa3ae05b5a766bb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5e3f1513fdfd98ca59738d1fa3ae05b5a766bb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5e3f1513fdfd98ca59738d1fa3ae05b5a766bb5"}], "stats": {"total": 20, "additions": 12, "deletions": 8}, "files": [{"sha": "d08cf8fa41d08c284b2a8f3a72cf3cb6dbd40667", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb0346d0366b69f2f109b058a89aeed96aebeaf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb0346d0366b69f2f109b058a89aeed96aebeaf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cfb0346d0366b69f2f109b058a89aeed96aebeaf", "patch": "@@ -7,6 +7,9 @@ Thu Nov 11 19:45:24 1999  Jim Wilson  <wilson@cygnus.com>\n \n Thu Nov 11 18:54:24 1999  Jeffrey A Law  (law@cygnus.com)\n \n+\t* function.c (diddle_return_value): Put back check that the DECL_RTL\n+\tfor the function is a register.\n+\n \t* function.c (diddle_return_value): Use hard_function_value to\n \tget an rtx suitable for use in the USE/CLOBBER insn.\n "}, {"sha": "67502af586984445e022bb88d47b45e062ec122e", "filename": "gcc/function.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfb0346d0366b69f2f109b058a89aeed96aebeaf/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfb0346d0366b69f2f109b058a89aeed96aebeaf/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=cfb0346d0366b69f2f109b058a89aeed96aebeaf", "patch": "@@ -6200,19 +6200,20 @@ void\n diddle_return_value (code)\n      enum rtx_code code;\n {\n-  rtx return_reg;\n   tree decl_result = DECL_RESULT (current_function_decl);\n+  rtx return_reg = DECL_RTL (decl_result);\n \n-  if (DECL_RTL (decl_result))\n+  if (return_reg)\n     {\n-      /* Use hard_function_value to avoid creating a reference to a BLKmode \n-\t register in the USE/CLOBBER insn.  */\n-      return_reg = hard_function_value (TREE_TYPE (decl_result),\n-\t\t\t\t\tcurrent_function_decl);\n-\n       if (GET_CODE (return_reg) == REG\n \t  && REGNO (return_reg) < FIRST_PSEUDO_REGISTER)\n-\temit_insn (gen_rtx_fmt_e (code, VOIDmode, return_reg));\n+\t{\n+\t  /* Use hard_function_value to avoid creating a reference to a BLKmode \n+\t     register in the USE/CLOBBER insn.  */\n+\t  return_reg = hard_function_value (TREE_TYPE (decl_result),\n+\t\t\t\t\t    current_function_decl);\n+\t  emit_insn (gen_rtx_fmt_e (code, VOIDmode, return_reg));\n+\t}\n       else if (GET_CODE (return_reg) == PARALLEL)\n \t{\n \t  int i;"}]}