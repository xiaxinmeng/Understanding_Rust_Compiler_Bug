{"sha": "ce4bbac71c009c87e902148838b7c4ef6f8be27b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U0YmJhYzcxYzAwOWM4N2U5MDIxNDg4MzhiN2M0ZWY2ZjhiZTI3Yg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@freesoft.cz", "date": "1999-12-15T14:09:52Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "1999-12-15T14:09:52Z"}, "message": "flow.c (dump_flow_info): Dump loop_depth.\n\n\t* flow.c (dump_flow_info): Dump loop_depth.\n\t(flow_loop_nodes_find): Increase loop_depth for basic block in the\n\tbody.\n\t(flow_loop_find): Initialize the loop_depth for each basic block.\n\nFrom-SVN: r30954", "tree": {"sha": "07ee2603be7b91d1376ec27122c5879e3b30e5b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07ee2603be7b91d1376ec27122c5879e3b30e5b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce4bbac71c009c87e902148838b7c4ef6f8be27b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce4bbac71c009c87e902148838b7c4ef6f8be27b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce4bbac71c009c87e902148838b7c4ef6f8be27b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce4bbac71c009c87e902148838b7c4ef6f8be27b/comments", "author": null, "committer": null, "parents": [{"sha": "41bd0db1f02ae60cd58f5d79ad01cff22931a841", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41bd0db1f02ae60cd58f5d79ad01cff22931a841", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41bd0db1f02ae60cd58f5d79ad01cff22931a841"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "ddd8eacf20c28b39e9dd8ba317b6c33e5033c251", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4bbac71c009c87e902148838b7c4ef6f8be27b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4bbac71c009c87e902148838b7c4ef6f8be27b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce4bbac71c009c87e902148838b7c4ef6f8be27b", "patch": "@@ -1,3 +1,10 @@\n+Wed Dec 15 15:05:30 MET 1999  Jan Hubicka  <hubicka@freesoft.cz>\n+\n+\t* flow.c (dump_flow_info): Dump loop_depth.\n+\t(flow_loops_nodes_find): Increase loop_depth for basic block in the\n+\tbody.\n+\t(flow_loops_find): Initialize the loop_depth for each basic block.\n+\n 1999-12-15  Jason Merrill  <jason@casey.cygnus.com>\n \n \t* tree.c (decl_function_context): Handle virtual functions."}, {"sha": "0d6bb891c19ac49322b514dac9ce3f866f8efdfa", "filename": "gcc/flow.c", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4bbac71c009c87e902148838b7c4ef6f8be27b/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4bbac71c009c87e902148838b7c4ef6f8be27b/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=ce4bbac71c009c87e902148838b7c4ef6f8be27b", "patch": "@@ -4968,8 +4968,8 @@ dump_flow_info (file)\n       register int regno;\n       register edge e;\n \n-      fprintf (file, \"\\nBasic block %d: first insn %d, last %d.\\n\",\n-\t       i, INSN_UID (bb->head), INSN_UID (bb->end));\n+      fprintf (file, \"\\nBasic block %d: first insn %d, last %d, loop_depth %d.\\n\",\n+\t       i, INSN_UID (bb->head), INSN_UID (bb->end), bb->loop_depth);\n \n       fprintf (file, \"Predecessors: \");\n       for (e = bb->pred; e ; e = e->pred_next)\n@@ -6574,11 +6574,13 @@ flow_loop_nodes_find (header, latch, nodes)\n   sbitmap_zero (nodes);\n   SET_BIT (nodes, header->index);\n   num_nodes++;\n+  header->loop_depth++;\n \n   /* Push the loop latch on to the stack.  */\n   if (! TEST_BIT (nodes, latch->index))\n     {\n       SET_BIT (nodes, latch->index);\n+      latch->loop_depth++;\n       num_nodes++;\n       stack[sp++] = latch;\n     }\n@@ -6599,6 +6601,7 @@ flow_loop_nodes_find (header, latch, nodes)\n \t      && ! TEST_BIT (nodes, ancestor->index))\n \t    {\n \t      SET_BIT (nodes, ancestor->index);\n+\t      ancestor->loop_depth++;\n \t      num_nodes++;\n \t      stack[sp++] = ancestor;\n \t    }\n@@ -6832,7 +6835,8 @@ flow_loops_level_compute (loops)\n }\n \n \n-/* Find all the natural loops in the function and save in LOOPS structure.\n+/* Find all the natural loops in the function and save in LOOPS structure\n+   and recalculate loop_depth information in basic block structures.\n    Return the number of natural loops found.  */\n int \n flow_loops_find (loops)\n@@ -6861,10 +6865,15 @@ flow_loops_find (loops)\n   compute_flow_dominators (dom, NULL);\n \n   /* Count the number of loop edges (back edges).  This should be the\n-     same as the number of natural loops.  */\n+     same as the number of natural loops.  Also clear the loop_depth\n+     and as we work from inner->outer in a loop nest we call\n+     find_loop_nodes_find which will increment loop_depth for nodes\n+     within the current loop, which happens to enclose inner loops.  */\n+\n   num_loops = 0;\n   for (b = 0; b < n_basic_blocks; b++)\n     {\n+      BASIC_BLOCK (b)->loop_depth = 1;\n       for (e = BASIC_BLOCK (b)->pred; e; e = e->pred_next)\n \t{\n \t  basic_block latch = e->src;"}]}