{"sha": "d90f988266f06f40be992dd649efbcd20aa26575", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDkwZjk4ODI2NmYwNmY0MGJlOTkyZGQ2NDllZmJjZDIwYWEyNjU3NQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2003-05-29T21:33:35Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2003-05-29T21:33:35Z"}, "message": "re PR bootstrap/10169 (Bootstrap fails on mainline with Tru64 5.1B)\n\n\n\tPR bootstrap/10169\n\t* mips-tfile.c (main): Use getopt_long instead of getopt.\n\tAdd new command line option --version to display version.\n\tTreat --verbose like -v to report a single line version.\n\t(options): New global variable for getopt_long.\n\t* mips-tdump.c (main): Use getopt_long instead of getopt.\n\tNew command line options -v, --version and -verbose to display\n\tthe program version number (to match mips-tfile's behavior).\n\t(options): New global variable for getopt_long.\n\n\t* gcov.c (options): Zero-terminate getopt_long array.\n\t* gcov-dump.c (options): Likewise.\n\n\t* Makefile.in (mips-tdump.o): Add dependency on version.h.\n\nCo-Authored-By: Kaveh R. Ghazi <ghazi@caip.rutgers.edu>\n\nFrom-SVN: r67230", "tree": {"sha": "96002dd0abd5b477d7d771673ceec8d85c96df7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/96002dd0abd5b477d7d771673ceec8d85c96df7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d90f988266f06f40be992dd649efbcd20aa26575", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d90f988266f06f40be992dd649efbcd20aa26575", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d90f988266f06f40be992dd649efbcd20aa26575", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d90f988266f06f40be992dd649efbcd20aa26575/comments", "author": null, "committer": null, "parents": [{"sha": "1c36b2f9120d39872fdc44142c7397b822f64d73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c36b2f9120d39872fdc44142c7397b822f64d73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c36b2f9120d39872fdc44142c7397b822f64d73"}], "stats": {"total": 123, "additions": 106, "deletions": 17}, "files": [{"sha": "3c6b7a02ac243e7306c9c556119959be71061bb8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90f988266f06f40be992dd649efbcd20aa26575/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90f988266f06f40be992dd649efbcd20aa26575/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d90f988266f06f40be992dd649efbcd20aa26575", "patch": "@@ -1,3 +1,21 @@\n+2003-05-29  Roger Sayle  <roger@eyesopen.com>\n+\t    Kaveh Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\tPR bootstrap/10169\n+\t* mips-tfile.c (main): Use getopt_long instead of getopt.\n+\tAdd new command line option --version to display version.\n+\tTreat --verbose like -v to report a single line version.\n+\t(options): New global variable for getopt_long.\n+\t* mips-tdump.c (main): Use getopt_long instead of getopt.\n+\tNew command line options -v, --version and -verbose to display\n+\tthe program version number (to match mips-tfile's behavior).\n+\t(options): New global variable for getopt_long.\n+\n+\t* gcov.c (options): Zero-terminate getopt_long array.\n+\t* gcov-dump.c (options): Likewise.\n+\n+\t* Makefile.in (mips-tdump.o): Add dependency on version.h.\n+\n 2003-05-29  Stan Shebs  <shebs@apple.com>\n \n \tRemove OBJC_PROLOGUE everywhere."}, {"sha": "708f358fefd7093799a093f94521ad4049e11103", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90f988266f06f40be992dd649efbcd20aa26575/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90f988266f06f40be992dd649efbcd20aa26575/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=d90f988266f06f40be992dd649efbcd20aa26575", "patch": "@@ -1793,7 +1793,7 @@ mips-tfile.o : mips-tfile.c $(CONFIG_H) $(RTL_H) $(SYSTEM_H) coretypes.h $(TM_H)\n mips-tdump: mips-tdump.o version.o $(LIBDEPS)\n \t$(CC) $(CFLAGS) $(LDFLAGS) -o $@ mips-tdump.o version.o $(LIBS)\n \n-mips-tdump.o : mips-tdump.c $(CONFIG_H) $(RTL_H) $(SYSTEM_H) coretypes.h $(TM_H)\n+mips-tdump.o : mips-tdump.c $(CONFIG_H) $(RTL_H) $(SYSTEM_H) coretypes.h $(TM_H) version.h\n \n #\f\n # Generate header and source files from the machine description,"}, {"sha": "57a020a3359601d2beec443ab23bb4f0c94451af", "filename": "gcc/gcov-dump.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90f988266f06f40be992dd649efbcd20aa26575/gcc%2Fgcov-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90f988266f06f40be992dd649efbcd20aa26575/gcc%2Fgcov-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov-dump.c?ref=d90f988266f06f40be992dd649efbcd20aa26575", "patch": "@@ -55,6 +55,7 @@ static const struct option options[] =\n   { \"version\",              no_argument,       NULL, 'v' },\n   { \"long\",                 no_argument,       NULL, 'l' },\n   { \"positions\",\t    no_argument,       NULL, 'o' },\n+  { 0, 0, 0, 0 }\n };\n \n static const tag_format_t tag_table[] ="}, {"sha": "4c92170ebbf282894e06f27de79fea93b10ff340", "filename": "gcc/gcov.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90f988266f06f40be992dd649efbcd20aa26575/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90f988266f06f40be992dd649efbcd20aa26575/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=d90f988266f06f40be992dd649efbcd20aa26575", "patch": "@@ -445,6 +445,7 @@ static const struct option options[] =\n   { \"object-directory\",     required_argument, NULL, 'o' },\n   { \"object-file\",          required_argument, NULL, 'o' },\n   { \"unconditional-branches\", no_argument,     NULL, 'u' },\n+  { 0, 0, 0, 0 }\n };\n \n /* Process args, return index to first non-arg.  */"}, {"sha": "44486b4e500281aa0d555827197eb0be3339d474", "filename": "gcc/mips-tdump.c", "status": "modified", "additions": 44, "deletions": 4, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90f988266f06f40be992dd649efbcd20aa26575/gcc%2Fmips-tdump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90f988266f06f40be992dd649efbcd20aa26575/gcc%2Fmips-tdump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tdump.c?ref=d90f988266f06f40be992dd649efbcd20aa26575", "patch": "@@ -1,5 +1,5 @@\n /* Read and manage MIPS symbol tables from object modules.\n-   Copyright (C) 1991, 1994, 1995, 1997, 1998, 1999, 2000, 2001\n+   Copyright (C) 1991, 1994, 1995, 1997, 1998, 1999, 2000, 2001, 2003\n    Free Software Foundation, Inc.\n    Contributed by hartzell@boulder.colorado.edu,\n    Rewritten by meissner@osf.org.\n@@ -25,6 +25,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"system.h\"\n #include \"coretypes.h\"\n #include \"tm.h\"\n+#include \"version.h\"\n #ifdef index\n #undef index\n #endif\n@@ -34,6 +35,9 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"mips/a.out.h\"\n #endif /* CROSS_COMPILE */\n \n+/* Include getopt.h for the sake of getopt_long.  */\n+#include \"getopt.h\"\n+\n #ifndef MIPS_IS_STAB\n /* Macros for mips-tfile.c to encapsulate stabs in ECOFF, and for\n    and mips-tdump.c to print them out.  This is used on the Alpha,\n@@ -209,6 +213,8 @@ int\t want_line\t= 0;\t/* print line numbers */\n int\t want_rfd\t= 0;\t/* print relative file desc's */\n int\t want_scope\t= 0;\t/* print scopes for every symbol */\n int\t tfile\t\t= 0;\t/* no global header file */\n+int\t version\t= 0;    /* print version # */\n+int\t verbose\t= 0;\n int\t tfile_fd;\t\t/* file descriptor of .T file */\n off_t\t tfile_offset;\t\t/* current offset in .T file */\n scope_t\t*cur_scope\t= 0;\t/* list of active scopes */\n@@ -254,6 +260,14 @@ const struct {const short code; const char string[10];} stab_names[]  = {\n #undef __define_stab\n };\n \n+/* Command line options for getopt_long.  */\n+\n+static const struct option options[] =\n+{\n+  { \"version\", 0, 0, 'V' },\n+  { \"verbose\", 0, 0, 'v' },\n+  { 0, 0, 0, 0 }\n+};\n \f\n /* Read some bytes at a specified location, and return a pointer.  */\n \n@@ -1434,18 +1448,43 @@ main (argc, argv)\n   /*\n    * Process arguments\n    */\n-  while ((opt = getopt (argc, argv, \"alrst\")) != EOF)\n+  while ((opt = getopt_long (argc, argv, \"alrsvt\", options, NULL)) != -1)\n     switch (opt)\n       {\n       default:\terrors++;\tbreak;\n       case 'a': want_aux++;\tbreak;\t/* print aux table */\n       case 'l': want_line++;\tbreak;\t/* print line numbers */\n       case 'r': want_rfd++;\tbreak;\t/* print relative fd's */\n       case 's':\twant_scope++;\tbreak;\t/* print scope info */\n-      case 't': tfile++;\tbreak;\t/* this is a tfile (without header), and not a .o */\n+      case 'v': verbose++;\tbreak;  /* print version # */\n+      case 'V': version++;\tbreak;  /* print version # */\n+      case 't': tfile++;\tbreak;\t/* this is a tfile (without header),\n+\t\t\t\t\t   and not a .o */\n       }\n \n-  if (errors || optind != argc - 1)\n+  if (version)\n+    {\n+      printf (\"mips-tdump (GCC) %s\\n\", version_string);\n+      fputs (\"Copyright (C) 2003 Free Software Foundation, Inc.\\n\", stdout);\n+      fputs (\"This is free software; see the source for copying conditions.  There is NO\\n\\\n+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\",\n+             stdout);\n+      exit (0);\n+    }\n+\n+  if (optind != argc - 1)\n+    errors++;\n+\n+  if (verbose || errors)\n+    {\n+      fprintf (stderr, \"mips-tdump (GCC) %s\", version_string);\n+#ifdef TARGET_VERSION\n+      TARGET_VERSION;\n+#endif\n+      fputc ('\\n', stderr);\n+    }\n+\n+  if (errors)\n     {\n       fprintf (stderr, \"Calling Sequence:\\n\");\n       fprintf (stderr, \"\\t%s [-alrst] <object-or-T-file>\\n\", argv[0]);\n@@ -1456,6 +1495,7 @@ main (argc, argv)\n       fprintf (stderr, \"\\t-r Print out relative file descriptors.\\n\");\n       fprintf (stderr, \"\\t-s Print out the current scopes for an item.\\n\");\n       fprintf (stderr, \"\\t-t Assume there is no global header (ie, a T-file).\\n\");\n+      fprintf (stderr, \"\\t-v Print program version.\\n\");\n       return 1;\n     }\n "}, {"sha": "d5c378f2e053148588bebee220edb27b66db5c31", "filename": "gcc/mips-tfile.c", "status": "modified", "additions": 41, "deletions": 12, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d90f988266f06f40be992dd649efbcd20aa26575/gcc%2Fmips-tfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d90f988266f06f40be992dd649efbcd20aa26575/gcc%2Fmips-tfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tfile.c?ref=d90f988266f06f40be992dd649efbcd20aa26575", "patch": "@@ -611,6 +611,9 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #define saber_stop()\n #endif\n \n+/* Include getopt.h for the sake of getopt_long.  */\n+#include \"getopt.h\"\n+\n #ifndef __LINE__\n #define __LINE__ 0\n #endif\n@@ -1510,6 +1513,7 @@ static unsigned\tcur_line_alloc\t= 0;\t\t/* # bytes total in buffer */\n static long\tline_number\t= 0;\t\t/* current input line number */\n static int\tdebug\t\t= 0; \t\t/* trace functions */\n static int\tversion\t\t= 0; \t\t/* print version # */\n+static int\tverbose\t\t= 0;\n static int\thad_errors\t= 0;\t\t/* != 0 if errors were found */\n static int\trename_output\t= 0;\t\t/* != 0 if rename output file*/\n static int\tdelete_input\t= 0;\t\t/* != 0 if delete input after done */\n@@ -1663,6 +1667,15 @@ static const pseudo_ops_t pseudo_ops[] = {\n   { \"#@stabs\",\tsizeof(\"#@stabs\")-1,\tmark_stabs },\n };\n \n+\f\n+/* Command line options for getopt_long.  */\n+\n+static const struct option options[] =\n+{\n+  { \"version\", 0, 0, 'V' },\n+  { \"verbose\", 0, 0, 'v' },\n+  { 0, 0, 0, 0 }\n+};\n \f\n /* Add a page to a varray object.  */\n \n@@ -4809,7 +4822,7 @@ main (argc, argv)\n   void_type_info = type_info_init;\n   void_type_info.basic_type = bt_Void;\n \n-  while ((option = getopt (argc, argv, \"d:i:I:o:v\")) != EOF)\n+  while ((option = getopt_long (argc, argv, \"d:i:I:o:v\", options, NULL)) != -1)\n     switch (option)\n       {\n       default:\n@@ -4849,10 +4862,24 @@ main (argc, argv)\n \tbreak;\n \n       case 'v':\n+\tverbose++;\n+\tbreak;\n+\n+      case 'V':\n \tversion++;\n \tbreak;\n       }\n \n+  if (version)\n+    {\n+      printf (_(\"mips-tfile (GCC) %s\\n\"), version_string);\n+      fputs (_(\"Copyright (C) 2003 Free Software Foundation, Inc.\\n\"), stdout);\n+      fputs (_(\"This is free software; see the source for copying conditions.  There is NO\\n\\\n+warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"),\n+     \t     stdout);\n+      exit (0);\n+    }\n+\n   if (obj_in_name == (char *) 0 && optind <= argc - 2)\n     obj_in_name = argv[--argc];\n \n@@ -4868,7 +4895,19 @@ main (argc, argv)\n       delete_input = 1;\n     }\n \n-  if (object_name == (char *) 0 || had_errors || optind != argc - 1)\n+  if (optind != argc - 1)\n+    had_errors++;\n+\n+  if (verbose || had_errors)\n+    {\n+      fprintf (stderr, _(\"mips-tfile (GCC) %s\"), version_string);\n+#ifdef TARGET_VERSION\n+      TARGET_VERSION;\n+#endif\n+      fputc ('\\n', stderr);\n+    }\n+\n+  if (object_name == (char *) 0 || had_errors)\n     {\n       fprintf (stderr, _(\"Calling Sequence:\\n\"));\n       fprintf (stderr, _(\"\\tmips-tfile [-d <num>] [-v] [-i <o-in-file>] -o <o-out-file> <s-file> (or)\\n\"));\n@@ -4883,16 +4922,6 @@ main (argc, argv)\n       return 1;\n     }\n \n-\n-  if (version)\n-    {\n-      fprintf (stderr, _(\"mips-tfile version %s\"), version_string);\n-#ifdef TARGET_VERSION\n-      TARGET_VERSION;\n-#endif\n-      fputc ('\\n', stderr);\n-    }\n-\n   if (obj_in_name == (char *) 0)\n     obj_in_name = object_name;\n "}]}