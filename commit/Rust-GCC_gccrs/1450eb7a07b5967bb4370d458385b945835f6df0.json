{"sha": "1450eb7a07b5967bb4370d458385b945835f6df0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ1MGViN2EwN2I1OTY3YmI0MzcwZDQ1ODM4NWI5NDU4MzVmNmRmMA==", "commit": {"author": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2003-10-21T19:01:58Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2003-10-21T19:01:58Z"}, "message": "[multiple changes]\n\n2003-10-21  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* configure.in: AC_LINK_FILES(ffitarget.h).\n\t* configure: Regenerate.\n\t* Makefile.in: Likewise.\n\t* include/Makefile.in: Likewise.\n\t* testsuite/Makefile.in: Likewise.\n\t* fficonfig.h.in: Likewise.\n\n2003-10-21  Paolo Bonzini  <bonzini@gnu.org>\n\t    Richard Henderson  <rth@redhat.com>\n\n\tAvoid that ffi.h includes fficonfig.h.\n\n\t* Makefile.am (EXTRA_DIST): Include ffitarget.h files\n\t(TARGET_SRC_MIPS_GCC): Renamed to TARGET_SRC_MIPS_IRIX.\n\t(TARGET_SRC_MIPS_SGI): Removed.\n\t(MIPS_GCC): Renamed to TARGET_SRC_MIPS_IRIX.\n\t(MIPS_SGI): Removed.\n\t(CLEANFILES): Removed.\n\t(mostlyclean-am, clean-am, mostlyclean-sub, clean-sub): New\n\ttargets.\n\t* acconfig.h: Removed.\n\t* configure.in: Compute sizeofs only for double and long double.\n\tUse them to define and subst HAVE_LONG_DOUBLE.  Include comments\n\tinto AC_DEFINE instead of using acconfig.h.  Create\n\tinclude/ffitarget.h instead of include/fficonfig.h.  Rename\n\tMIPS_GCC to MIPS_IRIX, drop MIPS_SGI since we are in gcc's tree.\n\tAC_DEFINE EH_FRAME_FLAGS.\n\t* include/Makefile.am (DISTCLEANFILES): New automake macro.\n\t(hack_DATA): Add ffitarget.h.\n\t* include/ffi.h.in: Remove all system specific definitions.\n\tDeclare raw API even if it is not installed, why bother?\n\tUse limits.h instead of SIZEOF_* to define ffi_type_*.  Do\n\tnot define EH_FRAME_FLAGS, it is in fficonfig.h now.  Include\n\tffitarget.h instead of fficonfig.h.  Remove ALIGN macro.\n\t(UINT_ARG, INT_ARG): Removed, use ffi_arg and ffi_sarg instead.\n\t* include/ffi_common.h (bool): Do not define.\n\t(ffi_assert): Accept failed assertion.\n\t(ffi_type_test): Return void and accept file/line.\n\t(FFI_ASSERT): Pass stringized failed assertion.\n\t(FFI_ASSERT_AT): New macro.\n\t(FFI_ASSERT_VALID_TYPE): New macro.\n\t(UINT8, SINT8, UINT16, SINT16, UINT32, SINT32,\n\tUINT64, SINT64): Define here with gcc's __attribute__ macro\n\tinstead of in ffi.h\n\t(FLOAT32, ALIGN): Define here instead of in ffi.h\n\t* include/ffi-mips.h: Removed.  Its content moved to\n\tsrc/mips/ffitarget.h after separating assembly and C sections.\n\t* src/alpha/ffi.c, src/alpha/ffi.c, src/java_raw_api.c\n\tsrc/prep_cif.c, src/raw_api.c, src/ia64/ffi.c,\n\tsrc/mips/ffi.c, src/mips/n32.S, src/mips/o32.S,\n\tsrc/mips/ffitarget.h, src/sparc/ffi.c, src/x86/ffi64.c:\n\tSIZEOF_ARG -> FFI_SIZEOF_ARG.\n\t* src/ia64/ffi.c: Include stdbool.h (provided by GCC 2.95+).\n\t* src/debug.c (ffi_assert): Accept stringized failed assertion.\n\t(ffi_type_test): Rewritten.\n\t* src/prep-cif.c (initialize_aggregate, ffi_prep_cif): Call\n\tFFI_ASSERT_VALID_TYPE.\n\t* src/alpha/ffitarget.h, src/arm/ffitarget.h,\n\tsrc/ia64/ffitarget.h, src/m68k/ffitarget.h,\n\tsrc/mips/ffitarget.h, src/powerpc/ffitarget.h,\n\tsrc/s390/ffitarget.h, src/sh/ffitarget.h,\n\tsrc/sh64/ffitarget.h, src/sparc/ffitarget.h,\n\tsrc/x86/ffitarget.h: New files.\n\t* src/alpha/osf.S, src/arm/sysv.S, src/ia64/unix.S,\n\tsrc/m68k/sysv.S, src/mips/n32.S, src/mips/o32.S,\n\tsrc/powerpc/aix.S, src/powerpc/darwin.S,\n\tsrc/powerpc/ffi_darwin.c, src/powerpc/linux64.S,\n\tsrc/powerpc/linux64_closure.S, src/powerpc/ppc_closure.S,\n\tsrc/powerpc/sysv.S, src/s390/sysv.S, src/sh/sysv.S,\n\tsrc/sh64/sysv.S, src/sparc/v8.S, src/sparc/v9.S,\n\tsrc/x86/sysv.S, src/x86/unix64.S, src/x86/win32.S:\n\tinclude fficonfig.h\n\nFrom-SVN: r72766", "tree": {"sha": "9d7d39e0a966f4e98e779b43dc0089cf9c08478a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d7d39e0a966f4e98e779b43dc0089cf9c08478a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1450eb7a07b5967bb4370d458385b945835f6df0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1450eb7a07b5967bb4370d458385b945835f6df0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1450eb7a07b5967bb4370d458385b945835f6df0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1450eb7a07b5967bb4370d458385b945835f6df0/comments", "author": null, "committer": null, "parents": [{"sha": "6b5a2662c72cc5281b19edb3848a463d6bf98e69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b5a2662c72cc5281b19edb3848a463d6bf98e69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b5a2662c72cc5281b19edb3848a463d6bf98e69"}], "stats": {"total": 1734, "additions": 657, "deletions": 1077}, "files": [{"sha": "5d51e0cd622773d5915d1e2e84b029838472b573", "filename": "libffi/ChangeLog", "status": "modified", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -1,3 +1,78 @@\n+2003-10-21  Andreas Tobler  <a.tobler@schweiz.ch>\n+\n+\t* configure.in: AC_LINK_FILES(ffitarget.h).\n+\t* configure: Regenerate.\n+\t* Makefile.in: Likewise.\n+\t* include/Makefile.in: Likewise.\n+\t* testsuite/Makefile.in: Likewise.\n+\t* fficonfig.h.in: Likewise.\n+\n+2003-10-21  Paolo Bonzini  <bonzini@gnu.org>\n+\t    Richard Henderson  <rth@redhat.com>\n+\n+\tAvoid that ffi.h includes fficonfig.h.\n+\n+\t* Makefile.am (EXTRA_DIST): Include ffitarget.h files\n+\t(TARGET_SRC_MIPS_GCC): Renamed to TARGET_SRC_MIPS_IRIX.\n+\t(TARGET_SRC_MIPS_SGI): Removed.\n+\t(MIPS_GCC): Renamed to TARGET_SRC_MIPS_IRIX.\n+\t(MIPS_SGI): Removed.\n+\t(CLEANFILES): Removed.\n+\t(mostlyclean-am, clean-am, mostlyclean-sub, clean-sub): New\n+\ttargets.\n+\t* acconfig.h: Removed.\n+\t* configure.in: Compute sizeofs only for double and long double.\n+\tUse them to define and subst HAVE_LONG_DOUBLE.  Include comments\n+\tinto AC_DEFINE instead of using acconfig.h.  Create\n+\tinclude/ffitarget.h instead of include/fficonfig.h.  Rename\n+\tMIPS_GCC to MIPS_IRIX, drop MIPS_SGI since we are in gcc's tree.\n+\tAC_DEFINE EH_FRAME_FLAGS.\n+\t* include/Makefile.am (DISTCLEANFILES): New automake macro.\n+\t(hack_DATA): Add ffitarget.h.\n+\t* include/ffi.h.in: Remove all system specific definitions.\n+\tDeclare raw API even if it is not installed, why bother?\n+\tUse limits.h instead of SIZEOF_* to define ffi_type_*.  Do\n+\tnot define EH_FRAME_FLAGS, it is in fficonfig.h now.  Include\n+\tffitarget.h instead of fficonfig.h.  Remove ALIGN macro.\n+\t(UINT_ARG, INT_ARG): Removed, use ffi_arg and ffi_sarg instead.\n+\t* include/ffi_common.h (bool): Do not define.\n+\t(ffi_assert): Accept failed assertion.\n+\t(ffi_type_test): Return void and accept file/line.\n+\t(FFI_ASSERT): Pass stringized failed assertion.\n+\t(FFI_ASSERT_AT): New macro.\n+\t(FFI_ASSERT_VALID_TYPE): New macro.\n+\t(UINT8, SINT8, UINT16, SINT16, UINT32, SINT32,\n+\tUINT64, SINT64): Define here with gcc's __attribute__ macro\n+\tinstead of in ffi.h\n+\t(FLOAT32, ALIGN): Define here instead of in ffi.h\n+\t* include/ffi-mips.h: Removed.  Its content moved to\n+\tsrc/mips/ffitarget.h after separating assembly and C sections.\n+\t* src/alpha/ffi.c, src/alpha/ffi.c, src/java_raw_api.c\n+\tsrc/prep_cif.c, src/raw_api.c, src/ia64/ffi.c,\n+\tsrc/mips/ffi.c, src/mips/n32.S, src/mips/o32.S,\n+\tsrc/mips/ffitarget.h, src/sparc/ffi.c, src/x86/ffi64.c:\n+\tSIZEOF_ARG -> FFI_SIZEOF_ARG.\n+\t* src/ia64/ffi.c: Include stdbool.h (provided by GCC 2.95+).\n+\t* src/debug.c (ffi_assert): Accept stringized failed assertion.\n+\t(ffi_type_test): Rewritten.\n+\t* src/prep-cif.c (initialize_aggregate, ffi_prep_cif): Call\n+\tFFI_ASSERT_VALID_TYPE.\n+\t* src/alpha/ffitarget.h, src/arm/ffitarget.h,\n+\tsrc/ia64/ffitarget.h, src/m68k/ffitarget.h,\n+\tsrc/mips/ffitarget.h, src/powerpc/ffitarget.h,\n+\tsrc/s390/ffitarget.h, src/sh/ffitarget.h,\n+\tsrc/sh64/ffitarget.h, src/sparc/ffitarget.h,\n+\tsrc/x86/ffitarget.h: New files.\n+\t* src/alpha/osf.S, src/arm/sysv.S, src/ia64/unix.S,\n+\tsrc/m68k/sysv.S, src/mips/n32.S, src/mips/o32.S,\n+\tsrc/powerpc/aix.S, src/powerpc/darwin.S,\n+\tsrc/powerpc/ffi_darwin.c, src/powerpc/linux64.S,\n+\tsrc/powerpc/linux64_closure.S, src/powerpc/ppc_closure.S,\n+\tsrc/powerpc/sysv.S, src/s390/sysv.S, src/sh/sysv.S,\n+\tsrc/sh64/sysv.S, src/sparc/v8.S, src/sparc/v9.S,\n+\tsrc/x86/sysv.S, src/x86/unix64.S, src/x86/win32.S:\n+\tinclude fficonfig.h\n+\n 2003-10-20  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* src/mips/ffi.c: Use _ABIN32, _ABIO32 instead of external"}, {"sha": "f591795152d66fc43cad5e55b4adbf66c73b37a2", "filename": "libffi/LICENSE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2FLICENSE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2FLICENSE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FLICENSE?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -1,4 +1,4 @@\n-libffi - Copyright (c) 1996-1999  Cygnus Solutions\n+libffi - Copyright (c) 1996-2003  Red Hat, Inc.\n \n Permission is hereby granted, free of charge, to any person obtaining\n a copy of this software and associated documentation files (the"}, {"sha": "b599865e91512536fd5d7ee423ca526bf60f6a37", "filename": "libffi/Makefile.am", "status": "modified", "additions": 36, "deletions": 31, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.am?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -4,24 +4,26 @@ AUTOMAKE_OPTIONS = cygnus\n \n SUBDIRS = include testsuite\n \n+EXTRA_DIST = LICENSE ChangeLog.v1 \\\n+\tsrc/alpha/ffi.c src/alpha/osf.S src/alpha/ffitarget.h \\\n+\tsrc/arm/ffi.c src/arm/sysv.S src/arm/ffitarget.h \\\n+\tsrc/mips/ffi.c src/mips/n32.S src/mips/o32.S \\\n+\tsrc/mips/ffitarget.h \\\n+\tsrc/m68k/ffi.c src/m68k/sysv.S src/m68k/ffitarget.h \\\n+\tsrc/powerpc/ffi.c src/powerpc/sysv.S \\\n+\tsrc/powerpc/linux64.S src/powerpc/linux64_closure.S \\\n+\tsrc/powerpc/ppc_closure.S src/powerpc/asm.h \\\n+\tsrc/powerpc/aix.S src/powerpc/darwin.S \\\n+\tsrc/powerpc/aix_closure.S src/powerpc/darwin_closure.S \\\n+\tsrc/powerpc/ffi_darwin.c src/powerpc/ffitarget.h \\\n+\tsrc/s390/ffi.c src/s390/sysv.S src/s390/ffitarget.h \\\n+\tsrc/sh/ffi.c src/sh/sysv.S src/sh/ffitarget.h \\\n+\tsrc/sh64/ffi.c src/sh64/sysv.S src/sh64/ffitarget.h \\\n+\tsrc/sparc/v8.S src/sparc/v9.S src/sparc/ffitarget.h \\\n+\tsrc/sparc/ffi.c \\\n+\tsrc/x86/ffi.c src/x86/sysv.S src/x86/win32.S \\\n+\tsrc/x86/ffi64.c src/x86/unix64.S src/x86/ffitarget.h\n \n-EXTRA_DIST = LICENSE ChangeLog.v1 src/mips/ffi.c src/mips/n32.S \\\n-\t\tsrc/mips/n32.s src/mips/o32.S src/mips/o32.s \\\n-\t\tsrc/sparc/ffi.c src/sparc/v8.S src/sparc/v9.S \\\n-\t\tsrc/x86/ffi.c src/x86/sysv.S src/x86/win32.S \\\n-\t\tsrc/x86/ffi64.c src/x86/unix64.S \\\n-\t\tsrc/alpha/ffi.c src/alpha/osf.S \\\n-\t\tsrc/m68k/ffi.c src/m68k/sysv.S \\\n-\t\tsrc/powerpc/ffi.c src/powerpc/sysv.S \\\n-\t\tsrc/powerpc/linux64.S src/powerpc/linux64_closure.S \\\n-\t\tsrc/powerpc/ppc_closure.S src/powerpc/asm.h \\\n-\t\tsrc/powerpc/ffi_darwin.c \\\n-\t\tsrc/powerpc/darwin.S src/powerpc/aix.S \\\n-\t\tsrc/powerpc/darwin_closure.S src/powerpc/aix_closure.S \\\n-\t\tsrc/arm/ffi.c src/arm/sysv.S \\\n-\t\tsrc/s390/ffi.c src/s390/sysv.S \\\n-\t\tsrc/sh/ffi.c src/sh/sysv.S \\\n-\t\tsrc/sh64/ffi.c src/sh64/sysv.S\n \n VPATH = @srcdir@:@srcdir@/src:@srcdir@/src/@TARGETDIR@\n \n@@ -85,9 +87,8 @@ noinst_LTLIBRARIES = libffi_convenience.la\n \n \n \n-TARGET_SRC_MIPS_GCC = src/mips/ffi.c src/mips/o32.S src/mips/n32.S\n+TARGET_SRC_MIPS_IRIX = src/mips/ffi.c src/mips/o32.S src/mips/n32.S\n TARGET_SRC_MIPS_LINUX = src/mips/ffi.c src/mips/o32.S\n-TARGET_SRC_MIPS_SGI = src/mips/ffi.c src/mips/o32.s src/mips/n32.s\n TARGET_SRC_X86 = src/x86/ffi.c src/x86/sysv.S\n TARGET_SRC_X86_WIN32 = src/x86/ffi.c src/x86/win32.S\n TARGET_SRC_SPARC = src/sparc/ffi.c src/sparc/v8.S src/sparc/v9.S\n@@ -107,18 +108,14 @@ TARGET_SRC_SH64 =  src/sh64/sysv.S src/sh64/ffi.c\n ## Work around automake deficiency\n libffi_la_common_SOURCES = src/debug.c src/prep_cif.c src/types.c \\\n \t\tsrc/raw_api.c src/java_raw_api.c\n-if MIPS_GCC\n-libffi_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_MIPS_GCC)\n-libffi_convenience_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_MIPS_GCC)\n+if MIPS_IRIX\n+libffi_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_MIPS_IRIX)\n+libffi_convenience_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_MIPS_IRIX)\n endif\n if MIPS_LINUX\n libffi_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_MIPS_LINUX)\n libffi_convenience_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_MIPS_LINUX)\n endif\n-if MIPS_SGI\n-libffi_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_MIPS_SGI)\n-libffi_convenience_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_MIPS_SGI)\n-endif\n if X86\n libffi_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_X86)\n libffi_convenience_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_X86)\n@@ -180,7 +177,7 @@ AM_CFLAGS = -Wall -g -fexceptions\n \n libffi_la_LDFLAGS = -release $(VERSION) \n \n-INCLUDES = -I$(top_srcdir)/include -Iinclude -I$(top_srcdir)/src\n+INCLUDES = -I. -I$(top_srcdir)/include -Iinclude -I$(top_srcdir)/src\n \n # Override these rules so that object files get put in the correct \n # subdirectories. \n@@ -229,7 +226,15 @@ maintainer-clean-multi:\n \n ## ################################################################\n \n-CLEANFILES = $(libffi_convenience_la_OBJECTS)\t\t\\\n-\t     $(libffi_la_OBJECTS) \t\t\t\\\n-\t     $(libffi_convenience_la_OBJECTS:.lo=.o)\t\\\n-\t     $(libffi_la_OBJECTS:.lo=.o)\n+# Our hacked automake doesn't clean subdirectories properly.\n+mostlyclean-am: mostlyclean-sub\n+mostlyclean-sub:\n+\t-rm -f src/*.o src/*.lo\n+\t-rm -f src/@TARGETDIR@/*.o src/@TARGETDIR@/*.lo\n+\n+clean-am: clean-sub\n+clean-sub:\n+\t-rm -rf src/.libs src/_libs\n+\t-rm -rf src/@TARGETDIR@/.libs src/@TARGETDIR@/_libs\n+\n+"}, {"sha": "bca6caf87b29d62b4f1ec328985cd1847b651637", "filename": "libffi/Makefile.in", "status": "modified", "additions": 63, "deletions": 67, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.in?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -71,6 +71,7 @@ DLLTOOL = @DLLTOOL@\n EXEEXT = @EXEEXT@\n GCJ = @GCJ@\n GCJFLAGS = @GCJFLAGS@\n+HAVE_LONG_DOUBLE = @HAVE_LONG_DOUBLE@\n LIBTOOL = @LIBTOOL@\n LN_S = @LN_S@\n MAINT = @MAINT@\n@@ -92,23 +93,25 @@ AUTOMAKE_OPTIONS = cygnus\n \n SUBDIRS = include testsuite\n \n-EXTRA_DIST = LICENSE ChangeLog.v1 src/mips/ffi.c src/mips/n32.S \\\n-\t\tsrc/mips/n32.s src/mips/o32.S src/mips/o32.s \\\n-\t\tsrc/sparc/ffi.c src/sparc/v8.S src/sparc/v9.S \\\n-\t\tsrc/x86/ffi.c src/x86/sysv.S src/x86/win32.S \\\n-\t\tsrc/x86/ffi64.c src/x86/unix64.S \\\n-\t\tsrc/alpha/ffi.c src/alpha/osf.S \\\n-\t\tsrc/m68k/ffi.c src/m68k/sysv.S \\\n-\t\tsrc/powerpc/ffi.c src/powerpc/sysv.S \\\n-\t\tsrc/powerpc/linux64.S src/powerpc/linux64_closure.S \\\n-\t\tsrc/powerpc/ppc_closure.S src/powerpc/asm.h \\\n-\t\tsrc/powerpc/ffi_darwin.c \\\n-\t\tsrc/powerpc/darwin.S src/powerpc/aix.S \\\n-\t\tsrc/powerpc/darwin_closure.S src/powerpc/aix_closure.S \\\n-\t\tsrc/arm/ffi.c src/arm/sysv.S \\\n-\t\tsrc/s390/ffi.c src/s390/sysv.S \\\n-\t\tsrc/sh/ffi.c src/sh/sysv.S \\\n-\t\tsrc/sh64/ffi.c src/sh64/sysv.S\n+EXTRA_DIST = LICENSE ChangeLog.v1 \\\n+\tsrc/alpha/ffi.c src/alpha/osf.S src/alpha/ffitarget.h \\\n+\tsrc/arm/ffi.c src/arm/sysv.S src/arm/ffitarget.h \\\n+\tsrc/mips/ffi.c src/mips/n32.S src/mips/o32.S \\\n+\tsrc/mips/ffitarget.h \\\n+\tsrc/m68k/ffi.c src/m68k/sysv.S src/m68k/ffitarget.h \\\n+\tsrc/powerpc/ffi.c src/powerpc/sysv.S \\\n+\tsrc/powerpc/linux64.S src/powerpc/linux64_closure.S \\\n+\tsrc/powerpc/ppc_closure.S src/powerpc/asm.h \\\n+\tsrc/powerpc/aix.S src/powerpc/darwin.S \\\n+\tsrc/powerpc/aix_closure.S src/powerpc/darwin_closure.S \\\n+\tsrc/powerpc/ffi_darwin.c src/powerpc/ffitarget.h \\\n+\tsrc/s390/ffi.c src/s390/sysv.S src/s390/ffitarget.h \\\n+\tsrc/sh/ffi.c src/sh/sysv.S src/sh/ffitarget.h \\\n+\tsrc/sh64/ffi.c src/sh64/sysv.S src/sh64/ffitarget.h \\\n+\tsrc/sparc/v8.S src/sparc/v9.S src/sparc/ffitarget.h \\\n+\tsrc/sparc/ffi.c \\\n+\tsrc/x86/ffi.c src/x86/sysv.S src/x86/win32.S \\\n+\tsrc/x86/ffi64.c src/x86/unix64.S src/x86/ffitarget.h\n \n \n VPATH = @srcdir@:@srcdir@/src:@srcdir@/src/@TARGETDIR@\n@@ -166,9 +169,8 @@ MULTICLEAN = true\n toolexeclib_LTLIBRARIES = libffi.la\n noinst_LTLIBRARIES = libffi_convenience.la\n \n-TARGET_SRC_MIPS_GCC = src/mips/ffi.c src/mips/o32.S src/mips/n32.S\n+TARGET_SRC_MIPS_IRIX = src/mips/ffi.c src/mips/o32.S src/mips/n32.S\n TARGET_SRC_MIPS_LINUX = src/mips/ffi.c src/mips/o32.S\n-TARGET_SRC_MIPS_SGI = src/mips/ffi.c src/mips/o32.s src/mips/n32.s\n TARGET_SRC_X86 = src/x86/ffi.c src/x86/sysv.S\n TARGET_SRC_X86_WIN32 = src/x86/ffi.c src/x86/win32.S\n TARGET_SRC_SPARC = src/sparc/ffi.c src/sparc/v8.S src/sparc/v9.S\n@@ -187,9 +189,8 @@ TARGET_SRC_SH64 = src/sh64/sysv.S src/sh64/ffi.c\n libffi_la_common_SOURCES = src/debug.c src/prep_cif.c src/types.c \\\n \t\tsrc/raw_api.c src/java_raw_api.c\n \n-@MIPS_GCC_TRUE@libffi_la_SOURCES = @MIPS_GCC_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_MIPS_GCC)\n+@MIPS_IRIX_TRUE@libffi_la_SOURCES = @MIPS_IRIX_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_MIPS_IRIX)\n @MIPS_LINUX_TRUE@libffi_la_SOURCES = @MIPS_LINUX_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_MIPS_LINUX)\n-@MIPS_SGI_TRUE@libffi_la_SOURCES = @MIPS_SGI_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_MIPS_SGI)\n @X86_TRUE@libffi_la_SOURCES = @X86_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_X86)\n @X86_WIN32_TRUE@libffi_la_SOURCES = @X86_WIN32_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_X86_WIN32)\n @SPARC_TRUE@libffi_la_SOURCES = @SPARC_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_SPARC)\n@@ -204,9 +205,8 @@ libffi_la_common_SOURCES = src/debug.c src/prep_cif.c src/types.c \\\n @X86_64_TRUE@libffi_la_SOURCES = @X86_64_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_X86_64)\n @SH_TRUE@libffi_la_SOURCES = @SH_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_SH)\n @SH64_TRUE@libffi_la_SOURCES = @SH64_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_SH64)\n-@MIPS_GCC_TRUE@libffi_convenience_la_SOURCES = @MIPS_GCC_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_MIPS_GCC)\n+@MIPS_IRIX_TRUE@libffi_convenience_la_SOURCES = @MIPS_IRIX_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_MIPS_IRIX)\n @MIPS_LINUX_TRUE@libffi_convenience_la_SOURCES = @MIPS_LINUX_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_MIPS_LINUX)\n-@MIPS_SGI_TRUE@libffi_convenience_la_SOURCES = @MIPS_SGI_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_MIPS_SGI)\n @X86_TRUE@libffi_convenience_la_SOURCES = @X86_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_X86)\n @X86_WIN32_TRUE@libffi_convenience_la_SOURCES = @X86_WIN32_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_X86_WIN32)\n @SPARC_TRUE@libffi_convenience_la_SOURCES = @SPARC_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_SPARC)\n@@ -226,13 +226,7 @@ AM_CFLAGS = -Wall -g -fexceptions\n \n libffi_la_LDFLAGS = -release $(VERSION) \n \n-INCLUDES = -I$(top_srcdir)/include -Iinclude -I$(top_srcdir)/src\n-\n-CLEANFILES = $(libffi_convenience_la_OBJECTS)\t\t\\\n-\t     $(libffi_la_OBJECTS) \t\t\t\\\n-\t     $(libffi_convenience_la_OBJECTS:.lo=.o)\t\\\n-\t     $(libffi_la_OBJECTS:.lo=.o)\n-\n+INCLUDES = -I. -I$(top_srcdir)/include -Iinclude -I$(top_srcdir)/src\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n mkinstalldirs = $(SHELL) $(top_srcdir)/${libffi_basedir}../mkinstalldirs\n CONFIG_HEADER = fficonfig.h\n@@ -246,10 +240,6 @@ LDFLAGS = @LDFLAGS@\n LIBS = @LIBS@\n libffi_convenience_la_LDFLAGS = \n libffi_convenience_la_LIBADD = \n-@MIPS_GCC_TRUE@libffi_convenience_la_OBJECTS =  src/debug.lo \\\n-@MIPS_GCC_TRUE@src/prep_cif.lo src/types.lo src/raw_api.lo \\\n-@MIPS_GCC_TRUE@src/java_raw_api.lo src/mips/ffi.lo src/mips/o32.lo \\\n-@MIPS_GCC_TRUE@src/mips/n32.lo\n @X86_64_TRUE@libffi_convenience_la_OBJECTS =  src/debug.lo \\\n @X86_64_TRUE@src/prep_cif.lo src/types.lo src/raw_api.lo \\\n @X86_64_TRUE@src/java_raw_api.lo src/x86/ffi64.lo src/x86/unix64.lo \\\n@@ -272,44 +262,41 @@ libffi_convenience_la_LIBADD =\n @POWERPC_DARWIN_TRUE@src/java_raw_api.lo src/powerpc/ffi_darwin.lo \\\n @POWERPC_DARWIN_TRUE@src/powerpc/darwin.lo \\\n @POWERPC_DARWIN_TRUE@src/powerpc/darwin_closure.lo\n-@MIPS_SGI_TRUE@libffi_convenience_la_OBJECTS =  src/debug.lo \\\n-@MIPS_SGI_TRUE@src/prep_cif.lo src/types.lo src/raw_api.lo \\\n-@MIPS_SGI_TRUE@src/java_raw_api.lo src/mips/ffi.lo src/mips/o32.lo \\\n-@MIPS_SGI_TRUE@src/mips/n32.lo\n @MIPS_LINUX_TRUE@libffi_convenience_la_OBJECTS =  src/debug.lo \\\n @MIPS_LINUX_TRUE@src/prep_cif.lo src/types.lo src/raw_api.lo \\\n @MIPS_LINUX_TRUE@src/java_raw_api.lo src/mips/ffi.lo src/mips/o32.lo\n-@S390_TRUE@libffi_convenience_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n-@S390_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n-@S390_TRUE@src/s390/sysv.lo src/s390/ffi.lo\n @X86_TRUE@libffi_convenience_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n @X86_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n @X86_TRUE@src/x86/ffi.lo src/x86/sysv.lo\n @X86_WIN32_TRUE@libffi_convenience_la_OBJECTS =  src/debug.lo \\\n @X86_WIN32_TRUE@src/prep_cif.lo src/types.lo src/raw_api.lo \\\n @X86_WIN32_TRUE@src/java_raw_api.lo src/x86/ffi.lo src/x86/win32.lo\n+@S390_TRUE@libffi_convenience_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n+@S390_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n+@S390_TRUE@src/s390/sysv.lo src/s390/ffi.lo\n @SH64_TRUE@libffi_convenience_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n @SH64_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n @SH64_TRUE@src/sh64/sysv.lo src/sh64/ffi.lo\n-@ARM_TRUE@libffi_convenience_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n-@ARM_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n-@ARM_TRUE@src/arm/sysv.lo src/arm/ffi.lo\n+@SPARC_TRUE@libffi_convenience_la_OBJECTS =  src/debug.lo \\\n+@SPARC_TRUE@src/prep_cif.lo src/types.lo src/raw_api.lo \\\n+@SPARC_TRUE@src/java_raw_api.lo src/sparc/ffi.lo src/sparc/v8.lo \\\n+@SPARC_TRUE@src/sparc/v9.lo\n @POWERPC_TRUE@libffi_convenience_la_OBJECTS =  src/debug.lo \\\n @POWERPC_TRUE@src/prep_cif.lo src/types.lo src/raw_api.lo \\\n @POWERPC_TRUE@src/java_raw_api.lo src/powerpc/ffi.lo \\\n @POWERPC_TRUE@src/powerpc/sysv.lo src/powerpc/ppc_closure.lo \\\n @POWERPC_TRUE@src/powerpc/linux64.lo src/powerpc/linux64_closure.lo\n-@SPARC_TRUE@libffi_convenience_la_OBJECTS =  src/debug.lo \\\n-@SPARC_TRUE@src/prep_cif.lo src/types.lo src/raw_api.lo \\\n-@SPARC_TRUE@src/java_raw_api.lo src/sparc/ffi.lo src/sparc/v8.lo \\\n-@SPARC_TRUE@src/sparc/v9.lo\n+@ARM_TRUE@libffi_convenience_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n+@ARM_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n+@ARM_TRUE@src/arm/sysv.lo src/arm/ffi.lo\n+@MIPS_IRIX_TRUE@libffi_convenience_la_OBJECTS =  src/debug.lo \\\n+@MIPS_IRIX_TRUE@src/prep_cif.lo src/types.lo src/raw_api.lo \\\n+@MIPS_IRIX_TRUE@src/java_raw_api.lo src/mips/ffi.lo src/mips/o32.lo \\\n+@MIPS_IRIX_TRUE@src/mips/n32.lo\n @M68K_TRUE@libffi_convenience_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n @M68K_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n @M68K_TRUE@src/m68k/ffi.lo src/m68k/sysv.lo\n libffi_la_LIBADD = \n-@MIPS_GCC_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n-@MIPS_GCC_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n-@MIPS_GCC_TRUE@src/mips/ffi.lo src/mips/o32.lo src/mips/n32.lo\n @X86_64_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n @X86_64_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n @X86_64_TRUE@src/x86/ffi64.lo src/x86/unix64.lo src/x86/ffi.lo \\\n@@ -331,35 +318,35 @@ libffi_la_LIBADD =\n @POWERPC_DARWIN_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n @POWERPC_DARWIN_TRUE@src/powerpc/ffi_darwin.lo src/powerpc/darwin.lo \\\n @POWERPC_DARWIN_TRUE@src/powerpc/darwin_closure.lo\n-@MIPS_SGI_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n-@MIPS_SGI_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n-@MIPS_SGI_TRUE@src/mips/ffi.lo src/mips/o32.lo src/mips/n32.lo\n @MIPS_LINUX_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n @MIPS_LINUX_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n @MIPS_LINUX_TRUE@src/mips/ffi.lo src/mips/o32.lo\n-@S390_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n-@S390_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n-@S390_TRUE@src/s390/sysv.lo src/s390/ffi.lo\n @X86_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo src/types.lo \\\n @X86_TRUE@src/raw_api.lo src/java_raw_api.lo src/x86/ffi.lo \\\n @X86_TRUE@src/x86/sysv.lo\n @X86_WIN32_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n @X86_WIN32_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n @X86_WIN32_TRUE@src/x86/ffi.lo src/x86/win32.lo\n+@S390_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n+@S390_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n+@S390_TRUE@src/s390/sysv.lo src/s390/ffi.lo\n @SH64_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n @SH64_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n @SH64_TRUE@src/sh64/sysv.lo src/sh64/ffi.lo\n-@ARM_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo src/types.lo \\\n-@ARM_TRUE@src/raw_api.lo src/java_raw_api.lo src/arm/sysv.lo \\\n-@ARM_TRUE@src/arm/ffi.lo\n+@SPARC_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n+@SPARC_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n+@SPARC_TRUE@src/sparc/ffi.lo src/sparc/v8.lo src/sparc/v9.lo\n @POWERPC_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n @POWERPC_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n @POWERPC_TRUE@src/powerpc/ffi.lo src/powerpc/sysv.lo \\\n @POWERPC_TRUE@src/powerpc/ppc_closure.lo src/powerpc/linux64.lo \\\n @POWERPC_TRUE@src/powerpc/linux64_closure.lo\n-@SPARC_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n-@SPARC_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n-@SPARC_TRUE@src/sparc/ffi.lo src/sparc/v8.lo src/sparc/v9.lo\n+@ARM_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo src/types.lo \\\n+@ARM_TRUE@src/raw_api.lo src/java_raw_api.lo src/arm/sysv.lo \\\n+@ARM_TRUE@src/arm/ffi.lo\n+@MIPS_IRIX_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n+@MIPS_IRIX_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n+@MIPS_IRIX_TRUE@src/mips/ffi.lo src/mips/o32.lo src/mips/n32.lo\n @M68K_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n @M68K_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n @M68K_TRUE@src/m68k/ffi.lo src/m68k/sysv.lo\n@@ -369,8 +356,7 @@ LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $\n CCLD = $(CC)\n LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@\n DIST_COMMON =  README ./stamp-h.in ChangeLog Makefile.am Makefile.in \\\n-acconfig.h acinclude.m4 aclocal.m4 configure configure.in \\\n-fficonfig.h.in\n+acinclude.m4 aclocal.m4 configure configure.in fficonfig.h.in\n \n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n@@ -413,7 +399,7 @@ $(srcdir)/fficonfig.h.in: @MAINTAINER_MODE_TRUE@$(srcdir)/stamp-h.in\n \t\trm -f $(srcdir)/stamp-h.in; \\\n \t\t$(MAKE) $(srcdir)/stamp-h.in; \\\n \telse :; fi\n-$(srcdir)/stamp-h.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) acconfig.h\n+$(srcdir)/stamp-h.in: $(top_srcdir)/configure.in $(ACLOCAL_M4) \n \tcd $(top_srcdir) && $(AUTOHEADER)\n \t@echo timestamp > $(srcdir)/stamp-h.in 2> /dev/null\n \n@@ -679,7 +665,6 @@ installdirs-am:\n mostlyclean-generic:\n \n clean-generic:\n-\t-test -z \"$(CLEANFILES)\" || rm -f $(CLEANFILES)\n \n distclean-generic:\n \t-rm -f Makefile $(CONFIG_CLEAN_FILES)\n@@ -787,6 +772,17 @@ distclean-multi:\n maintainer-clean-multi:\n \t$(MULTICLEAN) $(AM_MAKEFLAGS) DO=maintainer-clean multi-clean\n \n+# Our hacked automake doesn't clean subdirectories properly.\n+mostlyclean-am: mostlyclean-sub\n+mostlyclean-sub:\n+\t-rm -f src/*.o src/*.lo\n+\t-rm -f src/@TARGETDIR@/*.o src/@TARGETDIR@/*.lo\n+\n+clean-am: clean-sub\n+clean-sub:\n+\t-rm -rf src/.libs src/_libs\n+\t-rm -rf src/@TARGETDIR@/.libs src/@TARGETDIR@/_libs\n+\n # Tell versions [3.59,3.63) of GNU make to not export all variables.\n # Otherwise a system limit (for SysV at least) may be exceeded.\n .NOEXPORT:"}, {"sha": "0ffe09c68e4ab053e5708ff56395ad22c6ef2550", "filename": "libffi/configure", "status": "modified", "additions": 134, "deletions": 315, "changes": 449, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -2508,7 +2508,6 @@ fi\n \n TARGETDIR=\"unknown\"\n case \"$host\" in\n-mips-sgi-irix5.* | mips-sgi-irix6.*) TARGET=MIPS; TARGETDIR=mips;;\n i*86-*-linux*) TARGET=X86; TARGETDIR=x86;;\n i*86-*-solaris*) TARGET=X86; TARGETDIR=x86;;\n i*86-*-beos*) TARGET=X86; TARGETDIR=x86;;\n@@ -2525,6 +2524,7 @@ alpha*-*-linux* | alpha*-*-osf* | alpha*-*-freebsd* | alpha*-*-netbsd*) TARGET=A\n ia64*-*-*) TARGET=IA64; TARGETDIR=ia64;;\n m68k-*-linux*) TARGET=M68K; TARGETDIR=m68k;;\n mips64*-*);;\n+mips-sgi-irix5.* | mips-sgi-irix6.*) TARGET=MIPS_IRIX; TARGETDIR=mips;;\n mips*-*-linux*) TARGET=MIPS_LINUX; TARGETDIR=mips;;\n powerpc*-*-linux* | powerpc-*-sysv*) TARGET=POWERPC; TARGETDIR=powerpc;;\n powerpc-*-beos*) TARGET=POWERPC; TARGETDIR=powerpc;;\n@@ -2548,21 +2548,12 @@ fi\n \n \n \n-if test ${TARGET}${ac_cv_prog_gcc} = MIPSyes; then\n-  MIPS_GCC_TRUE=\n-  MIPS_GCC_FALSE='#'\n+if test x$TARGET = xMIPS_IRIX; then\n+  MIPS_IRIX_TRUE=\n+  MIPS_IRIX_FALSE='#'\n else\n-  MIPS_GCC_TRUE='#'\n-  MIPS_GCC_FALSE=\n-fi\n-\n-\n-if test ${TARGET}${ac_cv_prog_gcc} = MIPSno; then\n-  MIPS_SGI_TRUE=\n-  MIPS_SGI_FALSE='#'\n-else\n-  MIPS_SGI_TRUE='#'\n-  MIPS_SGI_FALSE=\n+  MIPS_IRIX_TRUE='#'\n+  MIPS_IRIX_FALSE=\n fi\n \n \n@@ -2700,12 +2691,13 @@ else\n   SH64_FALSE=\n fi\n \n-if test x$TARGET = xMIPS_LINUX; then\n-  TARGET=MIPS\n-fi\n+case x$TARGET in\n+  xMIPS*) TARGET=MIPS ;;\n+  *) ;;\n+esac\n \n echo $ac_n \"checking how to run the C preprocessor\"\"... $ac_c\" 1>&6\n-echo \"configure:2709: checking how to run the C preprocessor\" >&5\n+echo \"configure:2701: checking how to run the C preprocessor\" >&5\n # On Suns, sometimes $CPP names a directory.\n if test -n \"$CPP\" && test -d \"$CPP\"; then\n   CPP=\n@@ -2720,13 +2712,13 @@ else\n   # On the NeXT, cc -E runs the code through the compiler's parser,\n   # not just through cpp.\n   cat > conftest.$ac_ext <<EOF\n-#line 2724 \"configure\"\n+#line 2716 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:2730: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:2722: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   :\n@@ -2737,13 +2729,13 @@ else\n   rm -rf conftest*\n   CPP=\"${CC-cc} -E -traditional-cpp\"\n   cat > conftest.$ac_ext <<EOF\n-#line 2741 \"configure\"\n+#line 2733 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:2747: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:2739: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   :\n@@ -2754,13 +2746,13 @@ else\n   rm -rf conftest*\n   CPP=\"${CC-cc} -nologo -E\"\n   cat > conftest.$ac_ext <<EOF\n-#line 2758 \"configure\"\n+#line 2750 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:2764: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:2756: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   :\n@@ -2785,20 +2777,20 @@ fi\n echo \"$ac_t\"\"$CPP\" 1>&6\n \n echo $ac_n \"checking for ANSI C header files\"\"... $ac_c\" 1>&6\n-echo \"configure:2789: checking for ANSI C header files\" >&5\n+echo \"configure:2781: checking for ANSI C header files\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_stdc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2794 \"configure\"\n+#line 2786 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n #include <stdarg.h>\n #include <string.h>\n #include <float.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:2802: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:2794: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -2815,7 +2807,7 @@ rm -f conftest*\n if test $ac_cv_header_stdc = yes; then\n   # SunOS 4.x string.h does not declare mem*, contrary to ANSI.\n cat > conftest.$ac_ext <<EOF\n-#line 2819 \"configure\"\n+#line 2811 \"configure\"\n #include \"confdefs.h\"\n #include <string.h>\n EOF\n@@ -2833,7 +2825,7 @@ fi\n if test $ac_cv_header_stdc = yes; then\n   # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.\n cat > conftest.$ac_ext <<EOF\n-#line 2837 \"configure\"\n+#line 2829 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n EOF\n@@ -2854,7 +2846,7 @@ if test \"$cross_compiling\" = yes; then\n   :\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2858 \"configure\"\n+#line 2850 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n #define ISLOWER(c) ('a' <= (c) && (c) <= 'z')\n@@ -2865,7 +2857,7 @@ if (XOR (islower (i), ISLOWER (i)) || toupper (i) != TOUPPER (i)) exit(2);\n exit (0); }\n \n EOF\n-if { (eval echo configure:2869: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:2861: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   :\n else\n@@ -2891,12 +2883,12 @@ fi\n for ac_func in memcpy\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:2895: checking for $ac_func\" >&5\n+echo \"configure:2887: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2900 \"configure\"\n+#line 2892 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -2919,7 +2911,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:2923: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:2915: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -2946,19 +2938,19 @@ done\n # The Ultrix 4.2 mips builtin alloca declared by alloca.h only works\n # for constant arguments.  Useless!\n echo $ac_n \"checking for working alloca.h\"\"... $ac_c\" 1>&6\n-echo \"configure:2950: checking for working alloca.h\" >&5\n+echo \"configure:2942: checking for working alloca.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_alloca_h'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2955 \"configure\"\n+#line 2947 \"configure\"\n #include \"confdefs.h\"\n #include <alloca.h>\n int main() {\n char *p = alloca(2 * sizeof(int));\n ; return 0; }\n EOF\n-if { (eval echo configure:2962: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:2954: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_cv_header_alloca_h=yes\n else\n@@ -2979,12 +2971,12 @@ EOF\n fi\n \n echo $ac_n \"checking for alloca\"\"... $ac_c\" 1>&6\n-echo \"configure:2983: checking for alloca\" >&5\n+echo \"configure:2975: checking for alloca\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_alloca_works'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2988 \"configure\"\n+#line 2980 \"configure\"\n #include \"confdefs.h\"\n \n #ifdef __GNUC__\n@@ -3012,7 +3004,7 @@ int main() {\n char *p = (char *) alloca(1);\n ; return 0; }\n EOF\n-if { (eval echo configure:3016: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3008: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_cv_func_alloca_works=yes\n else\n@@ -3044,12 +3036,12 @@ EOF\n \n \n echo $ac_n \"checking whether alloca needs Cray hooks\"\"... $ac_c\" 1>&6\n-echo \"configure:3048: checking whether alloca needs Cray hooks\" >&5\n+echo \"configure:3040: checking whether alloca needs Cray hooks\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_os_cray'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3053 \"configure\"\n+#line 3045 \"configure\"\n #include \"confdefs.h\"\n #if defined(CRAY) && ! defined(CRAY2)\n webecray\n@@ -3074,12 +3066,12 @@ echo \"$ac_t\"\"$ac_cv_os_cray\" 1>&6\n if test $ac_cv_os_cray = yes; then\n for ac_func in _getb67 GETB67 getb67; do\n   echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:3078: checking for $ac_func\" >&5\n+echo \"configure:3070: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3083 \"configure\"\n+#line 3075 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -3102,7 +3094,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3106: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3098: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -3129,15 +3121,15 @@ done\n fi\n \n echo $ac_n \"checking stack direction for C alloca\"\"... $ac_c\" 1>&6\n-echo \"configure:3133: checking stack direction for C alloca\" >&5\n+echo \"configure:3125: checking stack direction for C alloca\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_c_stack_direction'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   ac_cv_c_stack_direction=0\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3141 \"configure\"\n+#line 3133 \"configure\"\n #include \"confdefs.h\"\n find_stack_direction ()\n {\n@@ -3156,7 +3148,7 @@ main ()\n   exit (find_stack_direction() < 0);\n }\n EOF\n-if { (eval echo configure:3160: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:3152: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_c_stack_direction=1\n else\n@@ -3178,209 +3170,14 @@ EOF\n fi\n \n \n-echo $ac_n \"checking size of short\"\"... $ac_c\" 1>&6\n-echo \"configure:3183: checking size of short\" >&5\n-if eval \"test \\\"`echo '$''{'ac_cv_sizeof_short'+set}'`\\\" = set\"; then\n-  echo $ac_n \"(cached) $ac_c\" 1>&6\n-else\n-  for ac_size in 4 8 1 2 16 12  ; do # List sizes in rough order of prevalence.\n-  cat > conftest.$ac_ext <<EOF\n-#line 3189 \"configure\"\n-#include \"confdefs.h\"\n-#include \"confdefs.h\"\n-#include <sys/types.h>\n-\n-\n-int main() {\n-switch (0) case 0: case (sizeof (short) == $ac_size):;\n-; return 0; }\n-EOF\n-if { (eval echo configure:3199: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n-  rm -rf conftest*\n-  ac_cv_sizeof_short=$ac_size\n-else\n-  echo \"configure: failed program was:\" >&5\n-  cat conftest.$ac_ext >&5\n-fi\n-rm -f conftest*\n-  if test x$ac_cv_sizeof_short != x ; then break; fi\n-done\n-\n-fi\n-\n-if test x$ac_cv_sizeof_short = x ; then\n-  { echo \"configure: error: cannot determine a size for short\" 1>&2; exit 1; }\n-fi\n-echo \"$ac_t\"\"$ac_cv_sizeof_short\" 1>&6\n-cat >> confdefs.h <<EOF\n-#define SIZEOF_SHORT $ac_cv_sizeof_short\n-EOF\n-\n-\n-echo $ac_n \"checking size of int\"\"... $ac_c\" 1>&6\n-echo \"configure:3222: checking size of int\" >&5\n-if eval \"test \\\"`echo '$''{'ac_cv_sizeof_int'+set}'`\\\" = set\"; then\n-  echo $ac_n \"(cached) $ac_c\" 1>&6\n-else\n-  for ac_size in 4 8 1 2 16 12  ; do # List sizes in rough order of prevalence.\n-  cat > conftest.$ac_ext <<EOF\n-#line 3228 \"configure\"\n-#include \"confdefs.h\"\n-#include \"confdefs.h\"\n-#include <sys/types.h>\n-\n-\n-int main() {\n-switch (0) case 0: case (sizeof (int) == $ac_size):;\n-; return 0; }\n-EOF\n-if { (eval echo configure:3238: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n-  rm -rf conftest*\n-  ac_cv_sizeof_int=$ac_size\n-else\n-  echo \"configure: failed program was:\" >&5\n-  cat conftest.$ac_ext >&5\n-fi\n-rm -f conftest*\n-  if test x$ac_cv_sizeof_int != x ; then break; fi\n-done\n-\n-fi\n-\n-if test x$ac_cv_sizeof_int = x ; then\n-  { echo \"configure: error: cannot determine a size for int\" 1>&2; exit 1; }\n-fi\n-echo \"$ac_t\"\"$ac_cv_sizeof_int\" 1>&6\n-cat >> confdefs.h <<EOF\n-#define SIZEOF_INT $ac_cv_sizeof_int\n-EOF\n-\n-\n-echo $ac_n \"checking size of long\"\"... $ac_c\" 1>&6\n-echo \"configure:3261: checking size of long\" >&5\n-if eval \"test \\\"`echo '$''{'ac_cv_sizeof_long'+set}'`\\\" = set\"; then\n-  echo $ac_n \"(cached) $ac_c\" 1>&6\n-else\n-  for ac_size in 4 8 1 2 16 12  ; do # List sizes in rough order of prevalence.\n-  cat > conftest.$ac_ext <<EOF\n-#line 3267 \"configure\"\n-#include \"confdefs.h\"\n-#include \"confdefs.h\"\n-#include <sys/types.h>\n-\n-\n-int main() {\n-switch (0) case 0: case (sizeof (long) == $ac_size):;\n-; return 0; }\n-EOF\n-if { (eval echo configure:3277: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n-  rm -rf conftest*\n-  ac_cv_sizeof_long=$ac_size\n-else\n-  echo \"configure: failed program was:\" >&5\n-  cat conftest.$ac_ext >&5\n-fi\n-rm -f conftest*\n-  if test x$ac_cv_sizeof_long != x ; then break; fi\n-done\n-\n-fi\n-\n-if test x$ac_cv_sizeof_long = x ; then\n-  { echo \"configure: error: cannot determine a size for long\" 1>&2; exit 1; }\n-fi\n-echo \"$ac_t\"\"$ac_cv_sizeof_long\" 1>&6\n-cat >> confdefs.h <<EOF\n-#define SIZEOF_LONG $ac_cv_sizeof_long\n-EOF\n-\n-\n-echo $ac_n \"checking size of long long\"\"... $ac_c\" 1>&6\n-echo \"configure:3300: checking size of long long\" >&5\n-if eval \"test \\\"`echo '$''{'ac_cv_sizeof_long_long'+set}'`\\\" = set\"; then\n-  echo $ac_n \"(cached) $ac_c\" 1>&6\n-else\n-  for ac_size in 4 8 1 2 16 12  ; do # List sizes in rough order of prevalence.\n-  cat > conftest.$ac_ext <<EOF\n-#line 3306 \"configure\"\n-#include \"confdefs.h\"\n-#include \"confdefs.h\"\n-#include <sys/types.h>\n-\n-\n-int main() {\n-switch (0) case 0: case (sizeof (long long) == $ac_size):;\n-; return 0; }\n-EOF\n-if { (eval echo configure:3316: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n-  rm -rf conftest*\n-  ac_cv_sizeof_long_long=$ac_size\n-else\n-  echo \"configure: failed program was:\" >&5\n-  cat conftest.$ac_ext >&5\n-fi\n-rm -f conftest*\n-  if test x$ac_cv_sizeof_long_long != x ; then break; fi\n-done\n-\n-fi\n-\n-if test x$ac_cv_sizeof_long_long = x ; then\n-  { echo \"configure: error: cannot determine a size for long long\" 1>&2; exit 1; }\n-fi\n-echo \"$ac_t\"\"$ac_cv_sizeof_long_long\" 1>&6\n-cat >> confdefs.h <<EOF\n-#define SIZEOF_LONG_LONG $ac_cv_sizeof_long_long\n-EOF\n-\n-\n-echo $ac_n \"checking size of float\"\"... $ac_c\" 1>&6\n-echo \"configure:3339: checking size of float\" >&5\n-if eval \"test \\\"`echo '$''{'ac_cv_sizeof_float'+set}'`\\\" = set\"; then\n-  echo $ac_n \"(cached) $ac_c\" 1>&6\n-else\n-  for ac_size in 4 8 1 2 16 12  ; do # List sizes in rough order of prevalence.\n-  cat > conftest.$ac_ext <<EOF\n-#line 3345 \"configure\"\n-#include \"confdefs.h\"\n-#include \"confdefs.h\"\n-#include <sys/types.h>\n-\n-\n-int main() {\n-switch (0) case 0: case (sizeof (float) == $ac_size):;\n-; return 0; }\n-EOF\n-if { (eval echo configure:3355: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n-  rm -rf conftest*\n-  ac_cv_sizeof_float=$ac_size\n-else\n-  echo \"configure: failed program was:\" >&5\n-  cat conftest.$ac_ext >&5\n-fi\n-rm -f conftest*\n-  if test x$ac_cv_sizeof_float != x ; then break; fi\n-done\n-\n-fi\n-\n-if test x$ac_cv_sizeof_float = x ; then\n-  { echo \"configure: error: cannot determine a size for float\" 1>&2; exit 1; }\n-fi\n-echo \"$ac_t\"\"$ac_cv_sizeof_float\" 1>&6\n-cat >> confdefs.h <<EOF\n-#define SIZEOF_FLOAT $ac_cv_sizeof_float\n-EOF\n-\n-\n echo $ac_n \"checking size of double\"\"... $ac_c\" 1>&6\n-echo \"configure:3378: checking size of double\" >&5\n+echo \"configure:3175: checking size of double\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_sizeof_double'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   for ac_size in 4 8 1 2 16 12  ; do # List sizes in rough order of prevalence.\n   cat > conftest.$ac_ext <<EOF\n-#line 3384 \"configure\"\n+#line 3181 \"configure\"\n #include \"confdefs.h\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n@@ -3390,7 +3187,7 @@ int main() {\n switch (0) case 0: case (sizeof (double) == $ac_size):;\n ; return 0; }\n EOF\n-if { (eval echo configure:3394: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3191: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_sizeof_double=$ac_size\n else\n@@ -3413,13 +3210,13 @@ EOF\n \n \n echo $ac_n \"checking size of long double\"\"... $ac_c\" 1>&6\n-echo \"configure:3417: checking size of long double\" >&5\n+echo \"configure:3214: checking size of long double\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_sizeof_long_double'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   for ac_size in 4 8 1 2 16 12  ; do # List sizes in rough order of prevalence.\n   cat > conftest.$ac_ext <<EOF\n-#line 3423 \"configure\"\n+#line 3220 \"configure\"\n #include \"confdefs.h\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n@@ -3429,7 +3226,7 @@ int main() {\n switch (0) case 0: case (sizeof (long double) == $ac_size):;\n ; return 0; }\n EOF\n-if { (eval echo configure:3433: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3230: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_sizeof_long_double=$ac_size\n else\n@@ -3452,54 +3249,28 @@ EOF\n \n \n \n-echo $ac_n \"checking size of void *\"\"... $ac_c\" 1>&6\n-echo \"configure:3457: checking size of void *\" >&5\n-if eval \"test \\\"`echo '$''{'ac_cv_sizeof_void_p'+set}'`\\\" = set\"; then\n-  echo $ac_n \"(cached) $ac_c\" 1>&6\n-else\n-  for ac_size in 4 8 1 2 16 12  ; do # List sizes in rough order of prevalence.\n-  cat > conftest.$ac_ext <<EOF\n-#line 3463 \"configure\"\n-#include \"confdefs.h\"\n-#include \"confdefs.h\"\n-#include <sys/types.h>\n-\n-\n-int main() {\n-switch (0) case 0: case (sizeof (void *) == $ac_size):;\n-; return 0; }\n+# Also AC_SUBST this variable for ffi.h.\n+HAVE_LONG_DOUBLE=0\n+if test $ac_cv_sizeof_double != $ac_cv_sizeof_long_double; then\n+  if test $ac_cv_sizeof_long_double != 0; then\n+    HAVE_LONG_DOUBLE=1\n+    cat >> confdefs.h <<\\EOF\n+#define HAVE_LONG_DOUBLE 1\n EOF\n-if { (eval echo configure:3473: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n-  rm -rf conftest*\n-  ac_cv_sizeof_void_p=$ac_size\n-else\n-  echo \"configure: failed program was:\" >&5\n-  cat conftest.$ac_ext >&5\n-fi\n-rm -f conftest*\n-  if test x$ac_cv_sizeof_void_p != x ; then break; fi\n-done\n-\n-fi\n \n-if test x$ac_cv_sizeof_void_p = x ; then\n-  { echo \"configure: error: cannot determine a size for void *\" 1>&2; exit 1; }\n+  fi\n fi\n-echo \"$ac_t\"\"$ac_cv_sizeof_void_p\" 1>&6\n-cat >> confdefs.h <<EOF\n-#define SIZEOF_VOID_P $ac_cv_sizeof_void_p\n-EOF\n \n \n echo $ac_n \"checking whether byte ordering is bigendian\"\"... $ac_c\" 1>&6\n-echo \"configure:3496: checking whether byte ordering is bigendian\" >&5\n+echo \"configure:3267: checking whether byte ordering is bigendian\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_c_bigendian'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_cv_c_bigendian=unknown\n # See if sys/param.h defines the BYTE_ORDER macro.\n cat > conftest.$ac_ext <<EOF\n-#line 3503 \"configure\"\n+#line 3274 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <sys/param.h>\n@@ -3510,11 +3281,11 @@ int main() {\n #endif\n ; return 0; }\n EOF\n-if { (eval echo configure:3514: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3285: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   # It does; now see whether it defined to BIG_ENDIAN or not.\n cat > conftest.$ac_ext <<EOF\n-#line 3518 \"configure\"\n+#line 3289 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <sys/param.h>\n@@ -3525,7 +3296,7 @@ int main() {\n #endif\n ; return 0; }\n EOF\n-if { (eval echo configure:3529: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3300: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_c_bigendian=yes\n else\n@@ -3545,7 +3316,7 @@ if test \"$cross_compiling\" = yes; then\n    echo $ac_n \"cross-compiling... \" 2>&6 \n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3549 \"configure\"\n+#line 3320 \"configure\"\n #include \"confdefs.h\"\n main () {\n   /* Are we little or big endian?  From Harbison&Steele.  */\n@@ -3558,7 +3329,7 @@ main () {\n   exit (u.c[sizeof (long) - 1] == 1);\n }\n EOF\n-if { (eval echo configure:3562: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:3333: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_c_bigendian=no\n else\n@@ -3576,7 +3347,7 @@ fi\n echo \"$ac_t\"\"$ac_cv_c_bigendian\" 1>&6\n if test $ac_cv_c_bigendian = unknown; then\n echo $ac_n \"checking to probe for byte ordering\"\"... $ac_c\" 1>&6\n-echo \"configure:3580: checking to probe for byte ordering\" >&5\n+echo \"configure:3351: checking to probe for byte ordering\" >&5\n \n cat >conftest.c <<EOF\n short ascii_mm[] = { 0x4249, 0x4765, 0x6E44, 0x6961, 0x6E53, 0x7953, 0 };\n@@ -3630,7 +3401,7 @@ fi\n \n if test x$TARGET = xSPARC; then\n     echo $ac_n \"checking assembler and linker support unaligned pc related relocs\"\"... $ac_c\" 1>&6\n-echo \"configure:3634: checking assembler and linker support unaligned pc related relocs\" >&5\n+echo \"configure:3405: checking assembler and linker support unaligned pc related relocs\" >&5\n if eval \"test \\\"`echo '$''{'libffi_cv_as_sparc_ua_pcrel'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -3640,14 +3411,14 @@ else\n \tCFLAGS=\"$CFLAGS -fpic\"\n \tLDFLAGS=\"$LDFLAGS -shared\"\n \tcat > conftest.$ac_ext <<EOF\n-#line 3644 \"configure\"\n+#line 3415 \"configure\"\n #include \"confdefs.h\"\n asm (\".text; foo: nop; .data; .align 4; .byte 0; .uaword %r_disp32(foo); .text\");\n int main() {\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3651: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3422: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   libffi_cv_as_sparc_ua_pcrel=yes\n else\n@@ -3670,22 +3441,22 @@ EOF\n     fi\n \n     echo $ac_n \"checking assembler .register pseudo-op support\"\"... $ac_c\" 1>&6\n-echo \"configure:3674: checking assembler .register pseudo-op support\" >&5\n+echo \"configure:3445: checking assembler .register pseudo-op support\" >&5\n if eval \"test \\\"`echo '$''{'libffi_cv_as_register_pseudo_op'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   \n        libffi_cv_as_register_pseudo_op=unknown\n        # Check if we have .register\n        cat > conftest.$ac_ext <<EOF\n-#line 3682 \"configure\"\n+#line 3453 \"configure\"\n #include \"confdefs.h\"\n asm (\".register %g2, #scratch\");\n int main() {\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3689: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3460: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   libffi_cv_as_register_pseudo_op=yes\n else\n@@ -3708,7 +3479,7 @@ EOF\n fi\n \n echo $ac_n \"checking whether .eh_frame section should be read-only\"\"... $ac_c\" 1>&6\n-echo \"configure:3712: checking whether .eh_frame section should be read-only\" >&5\n+echo \"configure:3483: checking whether .eh_frame section should be read-only\" >&5\n if eval \"test \\\"`echo '$''{'libffi_cv_ro_eh_frame'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -3731,6 +3502,15 @@ echo \"$ac_t\"\"$libffi_cv_ro_eh_frame\" 1>&6\n if test \"x$libffi_cv_ro_eh_frame\" = xyes; then\n     cat >> confdefs.h <<\\EOF\n #define HAVE_RO_EH_FRAME 1\n+EOF\n+\n+    cat >> confdefs.h <<\\EOF\n+#define EH_FRAME_FLAGS \"a\"\n+EOF\n+\n+else\n+    cat >> confdefs.h <<\\EOF\n+#define EH_FRAME_FLAGS \"aw\"\n EOF\n \n fi\n@@ -3983,10 +3763,8 @@ s%@MAINT@%$MAINT%g\n s%@TESTSUBDIR_TRUE@%$TESTSUBDIR_TRUE%g\n s%@TESTSUBDIR_FALSE@%$TESTSUBDIR_FALSE%g\n s%@AM_RUNTESTFLAGS@%$AM_RUNTESTFLAGS%g\n-s%@MIPS_GCC_TRUE@%$MIPS_GCC_TRUE%g\n-s%@MIPS_GCC_FALSE@%$MIPS_GCC_FALSE%g\n-s%@MIPS_SGI_TRUE@%$MIPS_SGI_TRUE%g\n-s%@MIPS_SGI_FALSE@%$MIPS_SGI_FALSE%g\n+s%@MIPS_IRIX_TRUE@%$MIPS_IRIX_TRUE%g\n+s%@MIPS_IRIX_FALSE@%$MIPS_IRIX_FALSE%g\n s%@MIPS_LINUX_TRUE@%$MIPS_LINUX_TRUE%g\n s%@MIPS_LINUX_FALSE@%$MIPS_LINUX_FALSE%g\n s%@SPARC_TRUE@%$SPARC_TRUE%g\n@@ -4019,6 +3797,7 @@ s%@SH64_TRUE@%$SH64_TRUE%g\n s%@SH64_FALSE@%$SH64_FALSE%g\n s%@CPP@%$CPP%g\n s%@ALLOCA@%$ALLOCA%g\n+s%@HAVE_LONG_DOUBLE@%$HAVE_LONG_DOUBLE%g\n s%@TARGET@%$TARGET%g\n s%@TARGETDIR@%$TARGETDIR%g\n s%@toolexecdir@%$toolexecdir%g\n@@ -4230,6 +4009,51 @@ cat >> $CONFIG_STATUS <<\\EOF\n   fi\n fi; done\n \n+EOF\n+\n+cat >> $CONFIG_STATUS <<EOF\n+ac_sources=\"src/$TARGETDIR/ffitarget.h\"\n+ac_dests=\"include/ffitarget.h\"\n+EOF\n+\n+cat >> $CONFIG_STATUS <<\\EOF\n+srcdir=$ac_given_srcdir\n+while test -n \"$ac_sources\"; do\n+  set $ac_dests; ac_dest=$1; shift; ac_dests=$*\n+  set $ac_sources; ac_source=$1; shift; ac_sources=$*\n+\n+  echo \"linking $srcdir/$ac_source to $ac_dest\"\n+\n+  if test ! -r $srcdir/$ac_source; then\n+    { echo \"configure: error: $srcdir/$ac_source: File not found\" 1>&2; exit 1; }\n+  fi\n+  rm -f $ac_dest\n+\n+  # Make relative symlinks.\n+  # Remove last slash and all that follows it.  Not all systems have dirname.\n+  ac_dest_dir=`echo $ac_dest|sed 's%/[^/][^/]*$%%'`\n+  if test \"$ac_dest_dir\" != \"$ac_dest\" && test \"$ac_dest_dir\" != .; then\n+    # The dest file is in a subdirectory.\n+    test ! -d \"$ac_dest_dir\" && mkdir \"$ac_dest_dir\"\n+    ac_dest_dir_suffix=\"/`echo $ac_dest_dir|sed 's%^\\./%%'`\"\n+    # A \"../\" for each directory in $ac_dest_dir_suffix.\n+    ac_dots=`echo $ac_dest_dir_suffix|sed 's%/[^/]*%../%g'`\n+  else\n+    ac_dest_dir_suffix= ac_dots=\n+  fi\n+\n+  case \"$srcdir\" in\n+  [/$]*) ac_rel_source=\"$srcdir/$ac_source\" ;;\n+  *) ac_rel_source=\"$ac_dots$srcdir/$ac_source\" ;;\n+  esac\n+\n+  # Make a symlink if possible; otherwise try a hard link.\n+  if ln -s $ac_rel_source $ac_dest 2>/dev/null ||\n+    ln $srcdir/$ac_source $ac_dest; then :\n+  else\n+    { echo \"configure: error: can not link $ac_dest to $srcdir/$ac_source\" 1>&2; exit 1; }\n+  fi\n+done\n EOF\n cat >> $CONFIG_STATUS <<EOF\n \n@@ -4243,14 +4067,13 @@ libffi_basedir=${libffi_basedir}\n CC=\"${CC}\"\n DEFS=\"$DEFS\"\n ORIGINAL_LD_FOR_MULTILIBS=\"${ORIGINAL_LD_FOR_MULTILIBS}\"\n-test ! -d include && mkdir include\n-test ! -f include/fficonfig.h && cp fficonfig.h include/fficonfig.h\n-if cmp -s fficonfig.h include/fficonfig.h 2>/dev/null; then \n-\techo fficonfig.h unchanged\n-else\n-\techo Moving fficonfig.h to include/fficonfig.h\n-\tcp fficonfig.h include/fficonfig.h\n-fi\n+\n+# Make target subdirectories if required.\n+test -d src || mkdir src\n+test -d src/${TARGETDIR} || mkdir src/${TARGETDIR}\n+test -d include || mkdir include\n+\n+\n \n EOF\n cat >> $CONFIG_STATUS <<\\EOF\n@@ -4267,7 +4090,3 @@ chmod +x $CONFIG_STATUS\n rm -fr confdefs* $ac_clean_files\n test \"$no_create\" = yes || ${CONFIG_SHELL-/bin/sh} $CONFIG_STATUS || exit 1\n \n-\n-# Make target subdirectories if required.\n-test -d src || mkdir src\n-test -d src/${TARGETDIR} || mkdir src/${TARGETDIR}"}, {"sha": "b44daed0033c7deeefa84e0360c08dd274e0e997", "filename": "libffi/configure.in", "status": "modified", "additions": 29, "deletions": 26, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure.in?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -52,7 +52,6 @@ AM_CONDITIONAL(TESTSUBDIR, test -d $srcdir/testsuite)\n \n TARGETDIR=\"unknown\"\n case \"$host\" in\n-mips-sgi-irix5.* | mips-sgi-irix6.*) TARGET=MIPS; TARGETDIR=mips;;\n i*86-*-linux*) TARGET=X86; TARGETDIR=x86;;\n i*86-*-solaris*) TARGET=X86; TARGETDIR=x86;;\n i*86-*-beos*) TARGET=X86; TARGETDIR=x86;;\n@@ -69,6 +68,7 @@ alpha*-*-linux* | alpha*-*-osf* | alpha*-*-freebsd* | alpha*-*-netbsd*) TARGET=A\n ia64*-*-*) TARGET=IA64; TARGETDIR=ia64;;\n m68k-*-linux*) TARGET=M68K; TARGETDIR=m68k;;\n mips64*-*);;\n+mips-sgi-irix5.* | mips-sgi-irix6.*) TARGET=MIPS_IRIX; TARGETDIR=mips;;\n mips*-*-linux*) TARGET=MIPS_LINUX; TARGETDIR=mips;;\n powerpc*-*-linux* | powerpc-*-sysv*) TARGET=POWERPC; TARGETDIR=powerpc;;\n powerpc-*-beos*) TARGET=POWERPC; TARGETDIR=powerpc;;\n@@ -90,8 +90,7 @@ if test $TARGETDIR = unknown; then\n   AC_ERROR(\"libffi has not been ported to $host.\")\n fi\n \n-AM_CONDITIONAL(MIPS_GCC, test ${TARGET}${ac_cv_prog_gcc} = MIPSyes)\n-AM_CONDITIONAL(MIPS_SGI, test ${TARGET}${ac_cv_prog_gcc} = MIPSno)\n+AM_CONDITIONAL(MIPS_IRIX, test x$TARGET = xMIPS_IRIX)\n AM_CONDITIONAL(MIPS_LINUX, test x$TARGET = xMIPS_LINUX)\n AM_CONDITIONAL(SPARC, test x$TARGET = xSPARC)\n AM_CONDITIONAL(X86, test x$TARGET = xX86)\n@@ -108,24 +107,28 @@ AM_CONDITIONAL(X86_64, test x$TARGET = xX86_64)\n AM_CONDITIONAL(SH, test x$TARGET = xSH)\n AM_CONDITIONAL(SH64, test x$TARGET = xSH64)\n \n-if test x$TARGET = xMIPS_LINUX; then\n-  TARGET=MIPS\n-fi\n+case x$TARGET in\n+  xMIPS*) TARGET=MIPS ;;\n+  *) ;;\n+esac\n \n AC_HEADER_STDC\n AC_CHECK_FUNCS(memcpy)\n AC_FUNC_ALLOCA\n \n-dnl AC_CHECK_SIZEOF(char)\n-AC_COMPILE_CHECK_SIZEOF(short)\n-AC_COMPILE_CHECK_SIZEOF(int)\n-AC_COMPILE_CHECK_SIZEOF(long)\n-AC_COMPILE_CHECK_SIZEOF(long long)\n-AC_COMPILE_CHECK_SIZEOF(float)\n AC_COMPILE_CHECK_SIZEOF(double)\n AC_COMPILE_CHECK_SIZEOF(long double)\n \n-AC_COMPILE_CHECK_SIZEOF(void *)\n+# Also AC_SUBST this variable for ffi.h.\n+HAVE_LONG_DOUBLE=0\n+if test $ac_cv_sizeof_double != $ac_cv_sizeof_long_double; then\n+  if test $ac_cv_sizeof_long_double != 0; then\n+    HAVE_LONG_DOUBLE=1\n+    AC_DEFINE(HAVE_LONG_DOUBLE, 1, [Define if you have the long double type and it is bigger than a double])\n+  fi\n+fi\n+AC_SUBST(HAVE_LONG_DOUBLE)\n+\n AC_C_BIGENDIAN_CROSS\n \n if test x$TARGET = xSPARC; then\n@@ -176,6 +179,11 @@ AC_CACHE_CHECK([whether .eh_frame section should be read-only],\n if test \"x$libffi_cv_ro_eh_frame\" = xyes; then\n     AC_DEFINE(HAVE_RO_EH_FRAME, 1,\n \t      [Define if .eh_frame sections should be read-only.])\n+    AC_DEFINE(EH_FRAME_FLAGS, \"a\",\n+\t      [Define to the flags needed for the .section .eh_frame directive.])\n+else\n+    AC_DEFINE(EH_FRAME_FLAGS, \"aw\",\n+\t      [Define to the flags needed for the .section .eh_frame directive.])\n fi\n \n AC_SUBST(TARGET)\n@@ -186,25 +194,25 @@ AC_SUBST(SHELL)\n AC_ARG_ENABLE(debug,\n [  --enable-debug          debugging mode],\n   if test \"$enable_debug\" = \"yes\"; then\n-    AC_DEFINE(FFI_DEBUG)\n+    AC_DEFINE(FFI_DEBUG, 1, [Define this if you want extra debugging.])\n   fi)\n \n AC_ARG_ENABLE(structs,\n [  --disable-structs       omit code for struct support],\n   if test \"$enable_structs\" = \"no\"; then\n-    AC_DEFINE(FFI_NO_STRUCTS)\n+    AC_DEFINE(FFI_NO_STRUCTS, 1, [Define this is you do not want support for aggregate types.])\n   fi)\n \n AC_ARG_ENABLE(raw-api,\n [  --disable-raw-api       make the raw api unavailable],\n   if test \"$enable_raw_api\" = \"no\"; then\n-    AC_DEFINE(FFI_NO_RAW_API)\n+    AC_DEFINE(FFI_NO_RAW_API, 1, [Define this is you do not want support for the raw API.])\n   fi)\n \n AC_ARG_ENABLE(purify-safety,\n [  --enable-purify-safety  purify-safe mode],\n   if test \"$enable_purify_safety\" = \"yes\"; then\n-    AC_DEFINE(USING_PURIFY)\n+    AC_DEFINE(USING_PURIFY, 1, [Define this if you are using Purify and want to suppress spurious messages.])\n   fi)\n \n if test -n \"$with_cross_host\" &&\n@@ -246,16 +254,11 @@ libffi_basedir=${libffi_basedir}\n CC=\"${CC}\"\n DEFS=\"$DEFS\"\n ORIGINAL_LD_FOR_MULTILIBS=\"${ORIGINAL_LD_FOR_MULTILIBS}\"\n-test ! -d include && mkdir include\n-test ! -f include/fficonfig.h && cp fficonfig.h include/fficonfig.h\n-if cmp -s fficonfig.h include/fficonfig.h 2>/dev/null; then \n-\techo fficonfig.h unchanged\n-else\n-\techo Moving fficonfig.h to include/fficonfig.h\n-\tcp fficonfig.h include/fficonfig.h\n-fi\n-)\n \n # Make target subdirectories if required.\n test -d src || mkdir src\n test -d src/${TARGETDIR} || mkdir src/${TARGETDIR}\n+test -d include || mkdir include\n+\n+AC_LINK_FILES(src/$TARGETDIR/ffitarget.h, include/ffitarget.h)\n+)"}, {"sha": "0664506e5b8b9e7da25c5d0fd327b8540112d94c", "filename": "libffi/fficonfig.h.in", "status": "modified", "additions": 25, "deletions": 30, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Ffficonfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Ffficonfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ffficonfig.h.in?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -25,49 +25,25 @@\n /* Define if you have the ANSI C header files.  */\n #undef STDC_HEADERS\n \n-/* Define this if you want extra debugging */\n-#undef FFI_DEBUG\n-\n-/* Define this if you are using Purify and want to suppress \n-   spurious messages. */\n-#undef USING_PURIFY\n-\n-/* Define this is you do not want support for aggregate types.  */\n-#undef FFI_NO_STRUCTS\n-\n-/* Define this is you do not want support for the raw API.  */\n-#undef FFI_NO_RAW_API\n-\n /* Define if you have the memcpy function.  */\n #undef HAVE_MEMCPY\n \n-/* The number of bytes in type short */\n-#undef SIZEOF_SHORT\n-\n-/* The number of bytes in type int */\n-#undef SIZEOF_INT\n-\n-/* The number of bytes in type long */\n-#undef SIZEOF_LONG\n-\n-/* The number of bytes in type long long */\n-#undef SIZEOF_LONG_LONG\n-\n-/* The number of bytes in type float */\n-#undef SIZEOF_FLOAT\n-\n /* The number of bytes in type double */\n #undef SIZEOF_DOUBLE\n \n /* The number of bytes in type long double */\n #undef SIZEOF_LONG_DOUBLE\n \n-/* The number of bytes in type void * */\n-#undef SIZEOF_VOID_P\n+/* Define if you have the long double type and it is bigger than a double */\n+#undef HAVE_LONG_DOUBLE\n \n /* whether byteorder is bigendian */\n #undef WORDS_BIGENDIAN\n \n+/* Define if the host machine stores words of multi-word integers in\n+   big-endian order. */\n+#undef HOST_WORDS_BIG_ENDIAN\n+\n /* 1234 = LIL_ENDIAN, 4321 = BIGENDIAN */\n #undef BYTEORDER\n \n@@ -79,3 +55,22 @@\n \n /* Define if .eh_frame sections should be read-only. */\n #undef HAVE_RO_EH_FRAME\n+\n+/* Define to the flags needed for the .section .eh_frame directive. */\n+#undef EH_FRAME_FLAGS\n+\n+/* Define to the flags needed for the .section .eh_frame directive. */\n+#undef EH_FRAME_FLAGS\n+\n+/* Define this if you want extra debugging. */\n+#undef FFI_DEBUG\n+\n+/* Define this is you do not want support for aggregate types. */\n+#undef FFI_NO_STRUCTS\n+\n+/* Define this is you do not want support for the raw API. */\n+#undef FFI_NO_RAW_API\n+\n+/* Define this if you are using Purify and want to suppress spurious messages. */\n+#undef USING_PURIFY\n+"}, {"sha": "f9231a66c930901f37fc1ef6d0ab7f9ec8ee4bb5", "filename": "libffi/include/Makefile.am", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2FMakefile.am?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -1,9 +1,10 @@\n ## Process this with automake to create Makefile.in\n \n-AUTOMAKE_OPTIONS = foreign\n+AUTOMAKE_OPTIONS=foreign\n \n-EXTRA_DIST = ffi.h.in ffi_common.h ffi_mips.h\n+DISTCLEANFILES=ffitarget.h\n+EXTRA_DIST=ffi.h.in ffi_common.h\n \n hackdir=$(includedir)\n \n-hack_DATA=fficonfig.h ffi.h ffi_mips.h\n\\ No newline at end of file\n+hack_DATA=ffitarget.h ffi.h"}, {"sha": "0eb19193674949aefc1091d7107cdbed903f1315", "filename": "libffi/include/Makefile.in", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2FMakefile.in?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -72,6 +72,7 @@ DLLTOOL = @DLLTOOL@\n EXEEXT = @EXEEXT@\n GCJ = @GCJ@\n GCJFLAGS = @GCJFLAGS@\n+HAVE_LONG_DOUBLE = @HAVE_LONG_DOUBLE@\n LIBTOOL = @LIBTOOL@\n LN_S = @LN_S@\n MAINT = @MAINT@\n@@ -91,11 +92,12 @@ toolexeclibdir = @toolexeclibdir@\n \n AUTOMAKE_OPTIONS = foreign\n \n-EXTRA_DIST = ffi.h.in ffi_common.h ffi_mips.h\n+DISTCLEANFILES = ffitarget.h\n+EXTRA_DIST = ffi.h.in ffi_common.h\n \n hackdir = $(includedir)\n \n-hack_DATA = fficonfig.h ffi.h ffi_mips.h\n+hack_DATA = ffitarget.h ffi.h\n mkinstalldirs = $(SHELL) $(top_srcdir)/${libffi_basedir}../mkinstalldirs\n CONFIG_HEADER = ../fficonfig.h\n CONFIG_CLEAN_FILES =  ffi.h\n@@ -196,6 +198,7 @@ clean-generic:\n distclean-generic:\n \t-rm -f Makefile $(CONFIG_CLEAN_FILES)\n \t-rm -f config.cache config.log stamp-h stamp-h[0-9]*\n+\t-test -z \"$(DISTCLEANFILES)\" || rm -f $(DISTCLEANFILES)\n \n maintainer-clean-generic:\n mostlyclean-am:  mostlyclean-generic"}, {"sha": "9f61d48aae697d5d33a988360ea0707eebadafaa", "filename": "libffi/include/ffi.h.in", "status": "modified", "additions": 69, "deletions": 405, "changes": 474, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Finclude%2Fffi.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Finclude%2Fffi.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2Fffi.h.in?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------*-C-*-\n-   libffi @VERSION@ - Copyright (c) 1996-2003  Cygnus Solutions\n+   libffi @VERSION@ - Copyright (c) 1996-2003  Red Hat, Inc.\n \n    Permission is hereby granted, free of charge, to any person obtaining\n    a copy of this software and associated documentation files (the\n@@ -60,258 +60,70 @@ extern \"C\" {\n \n /* ---- System configuration information --------------------------------- */\n \n-#include <fficonfig.h>\n+#include <ffitarget.h>\n \n-#if !defined(LIBFFI_ASM)\n-#include <stddef.h>\n-#if defined(FFI_DEBUG) \n-#include <stdio.h>\n-#endif\n-#endif\n-\n-/* ---- Generic type definitions ----------------------------------------- */\n-\n-#define FLOAT32 float\n-#define FLOAT64 double\n-#define FLOAT80 long double\n-\n-#define UINT8   unsigned char\n-#define SINT8   signed char\n-\n-#if SIZEOF_INT == 2\n-\n-#define UINT16\tunsigned int\n-#define SINT16  int\n-#define ffi_type_uint ffi_type_uint16\n-#define ffi_type_sint ffi_type_sint16\n-\n-#else \n-#if SIZEOF_SHORT == 2\n-\n-#define UINT16  unsigned short\n-#define SINT16  short\n-#define ffi_type_ushort ffi_type_uint16\n-#define ffi_type_sshort ffi_type_sint16\n-\n-#endif\n-#endif\n-\n-#if SIZEOF_INT == 4\n-\n-#define UINT32\tunsigned int\n-#define SINT32  int\n-#define ffi_type_uint ffi_type_uint32\n-#define ffi_type_sint ffi_type_sint32\n-\n-#else \n-#if SIZEOF_SHORT == 4\n-\n-#define UINT32  unsigned short\n-#define SINT32  short\n-#define ffi_type_ushort ffi_type_uint32\n-#define ffi_type_sshort ffi_type_sint32\n-\n-#else\n-#if SIZEOF_LONG == 4\n-\n-#define UINT32  unsigned long\n-#define SINT32  long\n-#define ffi_type_ulong ffi_type_uint32\n-#define ffi_type_slong ffi_type_sint32\n+#ifndef LIBFFI_ASM\n \n-#endif\n-#endif\n-#endif\n-\n-#if SIZEOF_INT == 8\n-\n-#define UINT64  unsigned int\n-#define SINT64  int\n-#define ffi_type_uint ffi_type_uint64\n-#define ffi_type_sint ffi_type_sint64\n-\n-#else\n-#if SIZEOF_LONG == 8\n-\n-#define UINT64  unsigned long\n-#define SINT64  long\n-#define ffi_type_ulong ffi_type_uint64\n-#define ffi_type_slong ffi_type_sint64\n-\n-#else\n-#if SIZEOF_LONG_LONG == 8\n-\n-#define UINT64  unsigned long long\n-#define SINT64  long long\n-#define ffi_type_ulong ffi_type_uint64\n-#define ffi_type_slong ffi_type_sint64\n-\n-#endif\n-#endif\n-#endif\n-\n-/* ---- System specific configurations ----------------------------------- */\n+#include <stddef.h>\n+#include <limits.h>\n \n-#ifdef MIPS\n-#include <ffi_mips.h>\n+/* LONG_LONG_MAX is not always defined (not if STRICT_ANSI, for example).\n+   But we can find it either under the correct ANSI name, or under GNU\n+   C's internal name.  */\n+#ifdef LONG_LONG_MAX\n+# define FFI_LONG_LONG_MAX LONG_LONG_MAX\n #else\n-#define SIZEOF_ARG SIZEOF_VOID_P\n-#endif\n-\n-#ifdef POWERPC\n-#if defined (__powerpc64__)\n-#define POWERPC64\n-#endif\n-#endif\n-\n-#ifdef SPARC\n-#if defined(__arch64__) || defined(__sparcv9)\n-#define SPARC64\n-#endif\n-#endif\n-\n-#ifdef S390\n-#if defined (__s390x__)\n-#define S390X\n-#endif\n-#endif\n-\n-#ifdef X86_64\n-#if defined (__i386__)\n-#undef X86_64\n-#define X86\n-#endif\n+# ifdef LLONG_MAX\n+#  define FFI_LONG_LONG_MAX LLONG_MAX\n+# else\n+#  ifdef __GNUC__\n+#   define FFI_LONG_LONG_MAX __LONG_LONG_MAX__\n+#  endif\n+# endif\n #endif\n \n-#ifdef LIBFFI_ASM\n-\n-#ifdef HAVE_RO_EH_FRAME\n-#define EH_FRAME_FLAGS \"a\"\n+#if SCHAR_MAX == 127\n+# define ffi_type_uchar                ffi_type_uint8\n+# define ffi_type_schar                ffi_type_sint8\n #else\n-#define EH_FRAME_FLAGS \"aw\"\n+ #error \"char size not supported\"\n #endif\n \n+#if SHRT_MAX == 32767\n+# define ffi_type_ushort       ffi_type_uint16\n+# define ffi_type_sshort       ffi_type_sint16\n+#elif SHRT_MAX == 2147483647\n+# define ffi_type_ushort       ffi_type_uint32\n+# define ffi_type_sshort       ffi_type_sint32\n #else\n-\n-/* ---- Generic type definitions ----------------------------------------- */\n-\n-#define ALIGN(v, a)  (((((size_t) (v))-1) | ((a)-1))+1)\n-/* The closure code assumes that this works on pointers, i.e. a size_t\t*/\n-/* can hold a pointer.\t\t\t\t\t\t\t*/\n-\n-typedef enum ffi_abi {\n-\n-  /* Leave this for debugging purposes */\n-  FFI_FIRST_ABI = 0,\n-\n-  /* ---- Sparc -------------------- */\n-#ifdef SPARC\n-  FFI_V8,\n-  FFI_V8PLUS,\n-  FFI_V9,\n-#ifdef SPARC64\n-  FFI_DEFAULT_ABI = FFI_V9,\n+ #error \"short size not supported\"\n+#endif\n+\n+#if INT_MAX == 32767\n+# define ffi_type_uint         ffi_type_uint16\n+# define ffi_type_sint         ffi_type_sint16\n+#elif INT_MAX == 2147483647\n+# define ffi_type_uint         ffi_type_uint32\n+# define ffi_type_sint         ffi_type_sint32\n+#elif INT_MAX == 9223372036854775807\n+# define ffi_type_uint         ffi_type_uint64\n+# define ffi_type_sint         ffi_type_sint64\n #else\n-  FFI_DEFAULT_ABI = FFI_V8,\n-#endif\n+ #error \"int size not supported\"\n #endif\n \n-  /* ---- Intel x86 Win32 ---------- */\n-#ifdef X86_WIN32\n-  FFI_SYSV,\n-  FFI_STDCALL,\n-  /* TODO: Add fastcall support for the sake of completeness */\n-  FFI_DEFAULT_ABI = FFI_SYSV,\n-#endif\n-\n-  /* ---- Intel x86 and AMD x86-64 - */\n-#if !defined(X86_WIN32) && (defined(__i386__) || defined(__x86_64__))\n-  FFI_SYSV,\n-  FFI_UNIX64,   /* Unix variants all use the same ABI for x86-64  */\n-#ifdef __i386__\n-  FFI_DEFAULT_ABI = FFI_SYSV,\n-#else\n-  FFI_DEFAULT_ABI = FFI_UNIX64,\n-#endif\n-#endif\n-\n-  /* ---- Intel ia64 ---------------- */\n-#ifdef IA64\n-  FFI_UNIX,   \t/* Linux and all Unix variants use the same conventions\t*/\n-  FFI_DEFAULT_ABI = FFI_UNIX,\n-#endif\n-\n-  /* ---- Mips --------------------- */\n-#ifdef MIPS\n-  FFI_O32,\n-  FFI_N32,\n-  FFI_N64,\n-#endif\n-\n-  /* ---- Alpha -------------------- */\n-#ifdef ALPHA\n-  FFI_OSF,\n-  FFI_DEFAULT_ABI = FFI_OSF,\n-#endif\n-\n-  /* ---- Motorola m68k ------------ */\n-#ifdef M68K\n-  FFI_SYSV,\n-  FFI_DEFAULT_ABI = FFI_SYSV,\n-#endif\n-\n-  /* ---- PowerPC ------------------ */\n-#ifdef POWERPC\n-  FFI_SYSV,\n-  FFI_GCC_SYSV,\n-  FFI_LINUX64,\n-# ifdef POWERPC64\n-  FFI_DEFAULT_ABI = FFI_LINUX64,\n-# else\n-  FFI_DEFAULT_ABI = FFI_GCC_SYSV,\n+#define ffi_type_ulong         ffi_type_uint64\n+#define ffi_type_slong         ffi_type_sint64\n+#if LONG_MAX == 2147483647\n+# if FFI_LONG_LONG_MAX != 9223372036854775807\n+  #error \"no 64-bit data type supported\"\n # endif\n+#elif LONG_MAX != 9223372036854775807\n+ #error \"long size not supported\"\n #endif\n \n-#ifdef POWERPC_AIX\n-  FFI_AIX,\n-  FFI_DARWIN,\n-  FFI_DEFAULT_ABI = FFI_AIX,\n-#endif\n-\n-#ifdef POWERPC_DARWIN\n-  FFI_AIX,\n-  FFI_DARWIN,\n-  FFI_DEFAULT_ABI = FFI_DARWIN,\n-#endif\n-\n-  /* ---- ARM  --------------------- */\n-#ifdef ARM\n-  FFI_SYSV,\n-  FFI_DEFAULT_ABI = FFI_SYSV,\n-#endif\n-\n-  /* ---- S390 --------------------- */\n-#ifdef S390\n-  FFI_SYSV,\n-  FFI_DEFAULT_ABI = FFI_SYSV,\n-#endif\n-\n-  /* ---- SuperH ------------------- */\n-#ifdef SH\n-  FFI_SYSV,\n-  FFI_DEFAULT_ABI = FFI_SYSV,\n-#endif\n-\n-  /* ---- SuperH - SHmedia --------- */\n-#ifdef SH64\n-  FFI_SYSV,\n-  FFI_DEFAULT_ABI = FFI_SYSV,\n-#endif\n-\n-  /* Leave this for debugging purposes */\n-  FFI_LAST_ABI\n-\n-} ffi_abi;\n+/* The closure code assumes that this works on pointers, i.e. a size_t\t*/\n+/* can hold a pointer.\t\t\t\t\t\t\t*/\n \n typedef struct _ffi_type\n {\n@@ -336,9 +148,6 @@ extern ffi_type ffi_type_double;\n extern ffi_type ffi_type_longdouble;\n extern ffi_type ffi_type_pointer;\n \n-/* Characters are 8 bit integral types */\n-#define ffi_type_schar ffi_type_sint8\n-#define ffi_type_uchar ffi_type_uint8\n \n typedef enum {\n   FFI_OK = 0,\n@@ -355,53 +164,27 @@ typedef struct {\n   /*@dependent@*/ ffi_type *rtype;\n   unsigned bytes;\n   unsigned flags;\n-\n-#ifdef MIPS\n-#if _MIPS_SIM == _ABIN32\n-  unsigned rstruct_flag;\n-#endif\n-#endif\n-\n-#ifdef SH64\n-  long long flags2;\n+#ifdef FFI_EXTRA_CIF_FIELDS\n+  FFI_EXTRA_CIF_FIELDS;\n #endif\n-\n } ffi_cif;\n \n-#if SIZEOF_ARG == 4\n-typedef UINT32 ffi_arg;\n-#else\n-#if SIZEOF_ARG == 8\n-typedef UINT64 ffi_arg;\n-#else\n--- unsupported configuration\n-#endif\n-#endif\n-\n /* ---- Definitions for the raw API -------------------------------------- */\n \n-#if !FFI_NO_RAW_API\n-\n-#if SIZEOF_ARG == 4\n-\n-#define UINT_ARG UINT32\n-#define SINT_ARG SINT32\n-\n-#endif\n-\n-#if SIZEOF_ARG == 8\n-\n-#define UINT_ARG UINT64\n-#define SINT_ARG SINT64\n-\n+#ifndef FFI_SIZEOF_ARG\n+# if LONG_MAX == 2147483647\n+#  define FFI_SIZEOF_ARG        4\n+# elif LONG_MAX == 9223372036854775807\n+#  define FFI_SIZEOF_ARG        8\n+# endif\n #endif\n \n typedef union {\n-  SINT_ARG sint;\n-  UINT_ARG uint;\n-  float\t   flt;\n-  char     data[SIZEOF_ARG];\n-  void*    ptr;\n+  ffi_sarg  sint;\n+  ffi_arg   uint;\n+  float\t    flt;\n+  char      data[FFI_SIZEOF_ARG];\n+  void*     ptr;\n } ffi_raw;\n \n void ffi_raw_call (/*@dependent@*/ ffi_cif *cif, \n@@ -413,8 +196,6 @@ void ffi_ptrarray_to_raw (ffi_cif *cif, void **args, ffi_raw *raw);\n void ffi_raw_to_ptrarray (ffi_cif *cif, ffi_raw *raw, void **args);\n size_t ffi_raw_size (ffi_cif *cif);\n \n-#if !NO_JAVA_RAW_API\n-\n /* This is analogous to the raw API, except it uses Java parameter\t*/\n /* packing, even on 64-bit machines.  I.e. on 64-bit machines\t\t*/\n /* longs and doubles are followed by an empty 64-bit word.\t\t*/\n@@ -428,120 +209,8 @@ void ffi_java_ptrarray_to_raw (ffi_cif *cif, void **args, ffi_raw *raw);\n void ffi_java_raw_to_ptrarray (ffi_cif *cif, ffi_raw *raw, void **args);\n size_t ffi_java_raw_size (ffi_cif *cif);\n \n-#endif /* !NO_JAVA_RAW_API */\n-\n-#endif /* !FFI_NO_RAW_API */\n-\n /* ---- Definitions for closures ----------------------------------------- */\n \n-#ifdef __i386__\n-\n-#define FFI_CLOSURES 1\t\t/* x86 supports closures */\n-#define FFI_TRAMPOLINE_SIZE 10\n-#define FFI_NATIVE_RAW_API 1\t/* and has native raw api support */\n-\n-#elif defined(IA64)\n-\n-#define FFI_CLOSURES 1\n-#define FFI_TRAMPOLINE_SIZE 24  /* Really the following struct, which \t*/\n-\t\t\t\t/* can be interpreted as a C function\t*/\n-\t\t\t\t/* decriptor:\t\t\t\t*/\n-\n-struct ffi_ia64_trampoline_struct {\n-    void * code_pointer;\t/* Pointer to ffi_closure_UNIX\t*/\n-    void * fake_gp;\t\t/* Pointer to closure, installed as gp\t*/\n-    void * real_gp;\t\t/* Real gp value, reinstalled by \t*/\n-\t\t\t\t/* ffi_closure_UNIX.\t\t\t*/\n-};\n-#define FFI_NATIVE_RAW_API 0\n-\n-#elif defined(ALPHA)\n-\n-#define FFI_CLOSURES 1\n-#define FFI_TRAMPOLINE_SIZE 24\n-#define FFI_NATIVE_RAW_API 0\n-\n-#elif defined(POWERPC)\n-\n-#define FFI_CLOSURES 1\n-#ifdef POWERPC64\n-#define FFI_TRAMPOLINE_SIZE 24\n-#else\n-#define FFI_TRAMPOLINE_SIZE 40\n-#endif\n-#define FFI_NATIVE_RAW_API 0\n-\n-#elif defined(POWERPC_DARWIN)\n-\n-#define FFI_CLOSURES 1\n-#define FFI_TRAMPOLINE_SIZE 40\n-#define FFI_NATIVE_RAW_API 0\n-\n-#elif defined(POWERPC_AIX)\n-\n-#define FFI_CLOSURES 1\n-#define FFI_TRAMPOLINE_SIZE 24 /* see struct below */ \n-#define FFI_NATIVE_RAW_API 0\n-\n-#elif defined(SPARC64)\n-\n-#define FFI_CLOSURES 1\n-#define FFI_TRAMPOLINE_SIZE 24\n-#define FFI_NATIVE_RAW_API 0\n-\n-#elif defined(SPARC)\n-\n-#define FFI_CLOSURES 1\n-#define FFI_TRAMPOLINE_SIZE 16\n-#define FFI_NATIVE_RAW_API 0\n-\n-#elif defined(S390)\n-\n-#define FFI_CLOSURES 1\n-#ifdef S390X\n-#define FFI_TRAMPOLINE_SIZE 32\n-#else\n-#define FFI_TRAMPOLINE_SIZE 16\n-#endif\n-#define FFI_NATIVE_RAW_API 0\n-\n-#elif defined(SH)\n-\n-#define FFI_CLOSURES 1\n-#define FFI_TRAMPOLINE_SIZE 16\n-#define FFI_NATIVE_RAW_API 0\n-\n-#elif defined(SH64)\n-\n-#define FFI_CLOSURES 1\n-#define FFI_TRAMPOLINE_SIZE 32\n-#define FFI_NATIVE_RAW_API 0\n-\n-#elif defined(__x86_64__)\n-\n-#define FFI_CLOSURES 1\n-#define FFI_TRAMPOLINE_SIZE 24\n-#define FFI_NATIVE_RAW_API 0\n-\n-#else \n-\n-#define FFI_CLOSURES 0\n-#define FFI_NATIVE_RAW_API 0\n-\n-#endif\n-\n-#if defined(POWERPC_DARWIN) || defined(POWERPC_AIX)\n-\n-struct ffi_aix_trampoline_struct {\n-    void * code_pointer;\t/* Pointer to ffi_closure_ASM */\n-    void * toc;\t\t\t/* TOC */\n-    void * static_chain;\t/* Pointer to closure */\n-};\n-\n-#endif\n-\n-\n-\n #if FFI_CLOSURES\n \n typedef struct {\n@@ -557,8 +226,6 @@ ffi_prep_closure (ffi_closure*,\n \t\t  void (*fun)(ffi_cif*,void*,void**,void*),\n \t\t  void *user_data);\n \n-#if !FFI_NO_RAW_API\n-\n typedef struct {\n   char tramp[FFI_TRAMPOLINE_SIZE];\n \n@@ -586,15 +253,12 @@ ffi_prep_raw_closure (ffi_raw_closure*,\n \t\t      void (*fun)(ffi_cif*,void*,ffi_raw*,void*),\n \t\t      void *user_data);\n \n-#ifndef NO_JAVA_RAW_API\n ffi_status\n ffi_prep_java_raw_closure (ffi_raw_closure*,\n \t\t           ffi_cif *cif,\n \t\t           void (*fun)(ffi_cif*,void*,ffi_raw*,void*),\n \t\t           void *user_data);\n-#endif\n \n-#endif /* !FFI_NO_RAW_API */\n #endif /* FFI_CLOSURES */\n \n /* ---- Public interface definition -------------------------------------- */\n@@ -617,25 +281,25 @@ void ffi_call(/*@dependent@*/ ffi_cif *cif,\n \n #endif\n \n+/* If these change, update src/mips/ffitarget.h. */\n #define FFI_TYPE_VOID       0    \n #define FFI_TYPE_INT        1\n #define FFI_TYPE_FLOAT      2    \n #define FFI_TYPE_DOUBLE     3\n-#if SIZEOF_LONG_DOUBLE == SIZEOF_DOUBLE\n-#define FFI_TYPE_LONGDOUBLE FFI_TYPE_DOUBLE\n-#else\n+#if @HAVE_LONG_DOUBLE@\n #define FFI_TYPE_LONGDOUBLE 4\n+#else\n+#define FFI_TYPE_LONGDOUBLE FFI_TYPE_DOUBLE\n #endif\n-\n-#define FFI_TYPE_UINT8      5   /* If this changes, update ffi_mips.h. */\n-#define FFI_TYPE_SINT8      6   /* If this changes, update ffi_mips.h. */\n+#define FFI_TYPE_UINT8      5   \n+#define FFI_TYPE_SINT8      6\n #define FFI_TYPE_UINT16     7 \n #define FFI_TYPE_SINT16     8\n #define FFI_TYPE_UINT32     9\n #define FFI_TYPE_SINT32     10\n #define FFI_TYPE_UINT64     11\n #define FFI_TYPE_SINT64     12\n-#define FFI_TYPE_STRUCT     13  /* If this changes, update ffi_mips.h. */\n+#define FFI_TYPE_STRUCT     13\n #define FFI_TYPE_POINTER    14\n \n /* This should always refer to the last type code (for sanity checks) */"}, {"sha": "1b948d54ae2defbe5ce44b028232e70766f37f71", "filename": "libffi/include/ffi_common.h", "status": "modified", "additions": 27, "deletions": 24, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Finclude%2Fffi_common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Finclude%2Fffi_common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2Fffi_common.h?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -1,7 +1,5 @@\n /* -----------------------------------------------------------------------\n-   ffi_common.h - Copyright (c) 1996  Cygnus Solutions\n-\n-   $Id: ffi_common.h,v 1.1.1.1 1998/11/29 16:48:16 green Exp $\n+   ffi_common.h - Copyright (c) 1996  Red Hat, Inc.\n \n    Common internal definitions and macros. Only necessary for building\n    libffi.\n@@ -14,6 +12,8 @@\n extern \"C\" {\n #endif\n \n+#include <fficonfig.h>\n+\n /* Do not move this. Some versions of AIX are very picky about where\n    this is positioned. */\n #ifdef __GNUC__\n@@ -41,36 +41,26 @@ char *alloca ();\n # endif\n #endif\n \n-#ifndef FALSE\n-#define FALSE 0\n-#endif\n-\n-#ifndef TRUE\n-#define TRUE (!FALSE)\n-#endif\n-\n-#ifndef __cplusplus\n-/* bool is a keyword in C++ */\n-/*@-cppnames@*/\n-typedef int bool;\n-/*@=cppnames@*/\n+#if defined(FFI_DEBUG) \n+#include <stdio.h>\n #endif\n \n #ifdef FFI_DEBUG\n-\n-/* Debugging functions */\n-/*@exits@*/ int ffi_assert(/*@temp@*/ char *file, int line);\n+/*@exits@*/ void ffi_assert(/*@temp@*/ char *expr, /*@temp@*/ char *file, int line);\n void ffi_stop_here(void);\n-bool ffi_type_test(/*@temp@*/ /*@out@*/ ffi_type *a);\n-\n-#define FFI_ASSERT(x) ((x) ? 0 : ffi_assert(__FILE__,__LINE__))\n+void ffi_type_test(/*@temp@*/ /*@out@*/ ffi_type *a, /*@temp@*/ char *file, int line);\n \n+#define FFI_ASSERT(x) ((x) ? (void)0 : ffi_assert(#x, __FILE__,__LINE__))\n+#define FFI_ASSERT_AT(x, f, l) ((x) ? 0 : ffi_assert(#x, (f), (l)))\n+#define FFI_ASSERT_VALID_TYPE(x) ffi_type_test (x, __FILE__, __LINE__)\n #else\n-\n #define FFI_ASSERT(x) \n-\n+#define FFI_ASSERT_AT(x, f, l)\n+#define FFI_ASSERT_VALID_TYPE(x)\n #endif\n \n+#define ALIGN(v, a)  (((((size_t) (v))-1) | ((a)-1))+1)\n+\n /* Perform machine dependent cif processing */\n ffi_status ffi_prep_cif_machdep(ffi_cif *cif);\n \n@@ -82,6 +72,19 @@ typedef struct\n   /*@dependent@*/ void **avalue;\n } extended_cif;\n \n+/* Terse sized type definitions.  */\n+typedef unsigned int UINT8  __attribute__((__mode__(__QI__)));\n+typedef signed int   SINT8  __attribute__((__mode__(__QI__)));\n+typedef unsigned int UINT16 __attribute__((__mode__(__HI__)));\n+typedef signed int   SINT16 __attribute__((__mode__(__HI__)));\n+typedef unsigned int UINT32 __attribute__((__mode__(__SI__)));\n+typedef signed int   SINT32 __attribute__((__mode__(__SI__)));\n+typedef unsigned int UINT64 __attribute__((__mode__(__DI__)));\n+typedef signed int   SINT64 __attribute__((__mode__(__DI__)));\n+\n+typedef float FLOAT32;\n+\n+\n #ifdef __cplusplus\n }\n #endif"}, {"sha": "00d337901096395f4a39bbe1f59af7ef39650e0e", "filename": "libffi/src/alpha/ffi.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Falpha%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Falpha%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Falpha%2Fffi.c?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   ffi.c - Copyright (c) 1998, 2001 Cygnus Solutions\n+   ffi.c - Copyright (c) 1998, 2001 Red Hat, Inc.\n    \n    Alpha Foreign Function Interface \n \n@@ -37,8 +37,8 @@ ffi_prep_cif_machdep(ffi_cif *cif)\n {\n   /* Adjust cif->bytes to represent a minimum 6 words for the temporary\n      register argument loading area.  */\n-  if (cif->bytes < 6*SIZEOF_ARG)\n-    cif->bytes = 6*SIZEOF_ARG;\n+  if (cif->bytes < 6*FFI_SIZEOF_ARG)\n+    cif->bytes = 6*FFI_SIZEOF_ARG;\n \n   /* Set the return type flag */\n   switch (cif->rtype->type)\n@@ -73,7 +73,7 @@ ffi_call(ffi_cif *cif, void (*fn)(), void *rvalue, void **avalue)\n \n   /* Allocate the space for the arguments, plus 4 words of temp\n      space for ffi_call_osf.  */\n-  argp = stack = alloca(cif->bytes + 4*SIZEOF_ARG);\n+  argp = stack = alloca(cif->bytes + 4*FFI_SIZEOF_ARG);\n \n   if (cif->flags == FFI_TYPE_STRUCT)\n     *(void **) argp++ = rvalue;\n@@ -137,7 +137,7 @@ ffi_call(ffi_cif *cif, void (*fn)(), void *rvalue, void **avalue)\n \t  FFI_ASSERT(0);\n \t}\n \n-      argp += ALIGN((*arg_types)->size, SIZEOF_ARG) / SIZEOF_ARG;\n+      argp += ALIGN((*arg_types)->size, FFI_SIZEOF_ARG) / FFI_SIZEOF_ARG;\n       i++, arg_types++, avalue++;\n     }\n \n@@ -240,7 +240,7 @@ ffi_closure_osf_inner(ffi_closure *closure, void *rvalue, unsigned long *argp)\n \t  FFI_ASSERT(0);\n \t}\n \n-      argn += ALIGN(arg_types[i]->size, SIZEOF_ARG) / SIZEOF_ARG;\n+      argn += ALIGN(arg_types[i]->size, FFI_SIZEOF_ARG) / FFI_SIZEOF_ARG;\n       i++;\n     }\n "}, {"sha": "cfa7a964bc15e710d067c5dc994913e9c08b3451", "filename": "libffi/src/alpha/osf.S", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Falpha%2Fosf.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Falpha%2Fosf.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Falpha%2Fosf.S?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -26,6 +26,7 @@\n    ----------------------------------------------------------------------- */\n \n #define LIBFFI_ASM\t\n+#include <fficonfig.h>\n #include <ffi.h>\n \n \t.arch ev6"}, {"sha": "37e3838246ad6fcc56728905d4f255d65d15af61", "filename": "libffi/src/arm/ffi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Farm%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Farm%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Farm%2Fffi.c?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   ffi.c - Copyright (c) 1998  Cygnus Solutions\n+   ffi.c - Copyright (c) 1998  Red Hat, Inc.\n    \n    ARM Foreign Function Interface \n "}, {"sha": "0e4186114a96457197e6d5bdd86c50c6e19fb392", "filename": "libffi/src/arm/sysv.S", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Farm%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Farm%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Farm%2Fsysv.S?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   sysv.S - Copyright (c) 1998 Cygnus Solutions\n+   sysv.S - Copyright (c) 1998 Red Hat, Inc.\n    \n    ARM Foreign Function Interface \n \n@@ -24,6 +24,7 @@\n    ----------------------------------------------------------------------- */\n \n #define LIBFFI_ASM\t\n+#include <fficonfig.h>\n #include <ffi.h>\n #ifdef HAVE_MACHINE_ASM_H\n #include <machine/asm.h>"}, {"sha": "98f1f9f0b4ed8c85fff861034a69b837164d97c8", "filename": "libffi/src/debug.c", "status": "modified", "additions": 10, "deletions": 16, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fdebug.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fdebug.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fdebug.c?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   debug.c - Copyright (c) 1996 Cygnus Solutions\n+   debug.c - Copyright (c) 1996 Red Hat, Inc.\n \n    Permission is hereby granted, free of charge, to any person obtaining\n    a copy of this software and associated documentation files (the\n@@ -37,29 +37,23 @@ void ffi_stop_here(void)\n \n /* This function should only be called via the FFI_ASSERT() macro */\n \n-int ffi_assert(char *file, int line)\n+void ffi_assert(char *expr, char *file, int line)\n {\n-  fprintf(stderr, \"ASSERTION FAILURE: %s line %d\\n\", file, line);\n+  fprintf(stderr, \"ASSERTION FAILURE: %s at %s:%d\\n\", expr, file, line);\n   ffi_stop_here();\n   abort();\n-\n-  /* This has to return something for the compiler not to complain */\n-  /*@notreached@*/\n-  return 0;\n }\n \n /* Perform a sanity check on an ffi_type structure */\n \n-bool ffi_type_test(ffi_type *a)\n+void ffi_type_test(ffi_type *a, char *file, int line)\n {\n+  FFI_ASSERT_AT(a != NULL, file, line);\n+\n   /*@-usedef@*/\n-  FFI_ASSERT(a->type <= FFI_TYPE_LAST);\n-  FFI_ASSERT(a->type > FFI_TYPE_VOID ? a->size > 0 : 1);\n-  FFI_ASSERT(a->type > FFI_TYPE_VOID ? a->alignment > 0 : 1);\n-  FFI_ASSERT(a->type == FFI_TYPE_STRUCT ? a->elements != NULL : 1);\n+  FFI_ASSERT_AT(a->type <= FFI_TYPE_LAST, file, line);\n+  FFI_ASSERT_AT(a->type == FFI_TYPE_VOID || a->size > 0, file, line);\n+  FFI_ASSERT_AT(a->type == FFI_TYPE_VOID || a->alignment > 0, file, line);\n+  FFI_ASSERT_AT(a->type != FFI_TYPE_STRUCT || a->elements != NULL, file, line);\n   /*@=usedef@*/\n-\n-  /* This is a silly thing to return, but it keeps the compiler from\n-     issuing warnings about \"a\" not being used in non-debug builds. */\n-  return (a != NULL);\n }"}, {"sha": "2908081a12ba649ffb33024745bc8b190346f121", "filename": "libffi/src/ia64/ffi.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fia64%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fia64%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fia64%2Fffi.c?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   ffi.c - Copyright (c) 1998 Cygnus Solutions\n+   ffi.c - Copyright (c) 1998 Red Hat, Inc.\n \t   Copyright (c) 2000 Hewlett Packard Company\n    \n    IA64 Foreign Function Interface \n@@ -28,6 +28,7 @@\n #include <ffi_common.h>\n \n #include <stdlib.h>\n+#include <stdbool.h>\n \n #include \"ia64_flags.h\"\n \n@@ -210,7 +211,7 @@ ffi_prep_args(struct ia64_args *stack, extended_cif *ecif, int bytes)\n \t  {\n \t      size_t sz = (*p_arg)->size;\n \t      unsigned short element_type;\n-              z = ((*p_arg)->size + SIZEOF_ARG - 1)/SIZEOF_ARG;\n+              z = ((*p_arg)->size + FFI_SIZEOF_ARG - 1)/FFI_SIZEOF_ARG;\n \t      if (is_homogeneous_fp_aggregate(*p_arg, 8, &element_type)) {\n \t\tint i;\n \t\tint nelements = sz/float_type_size(element_type);\n@@ -596,7 +597,7 @@ ffi_prep_incoming_args_UNIX(struct ia64_args *args, void **rvalue,\n \t  {\n \t      size_t sz = (*p_arg)->size;\n \t      unsigned short element_type;\n-              z = ((*p_arg)->size + SIZEOF_ARG - 1)/SIZEOF_ARG;\n+              z = ((*p_arg)->size + FFI_SIZEOF_ARG - 1)/FFI_SIZEOF_ARG;\n \t      if (is_homogeneous_fp_aggregate(*p_arg, 8, &element_type)) {\n \t\tint nelements = sz/float_type_size(element_type);\n \t\tif (nelements + fp_reg_num >= 8) {"}, {"sha": "c0c5058b76ee973282df77c562fca03e3ba0d364", "filename": "libffi/src/ia64/unix.S", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fia64%2Funix.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fia64%2Funix.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fia64%2Funix.S?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   unix.S - Copyright (c) 1998 Cygnus Solutions\n+   unix.S - Copyright (c) 1998 Red Hat, Inc.\n             Copyright (c) 2000 Hewlett Packard Company\n    \n    IA64/unix Foreign Function Interface \n@@ -29,6 +29,7 @@\n    ----------------------------------------------------------------------- */\n \n #define LIBFFI_ASM\t\n+#include <fficonfig.h>\n #include <ffi.h>\n #include \"ia64_flags.h\"\n "}, {"sha": "e4664112b110441480bed0a2c83a983cdb237033", "filename": "libffi/src/java_raw_api.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fjava_raw_api.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fjava_raw_api.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fjava_raw_api.c?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   java_raw_api.c - Copyright (c) 1999  Cygnus Solutions\n+   java_raw_api.c - Copyright (c) 1999  Red Hat, Inc.\n \n    Cloned from raw_api.c\n \n@@ -54,13 +54,13 @@ ffi_java_raw_size (ffi_cif *cif)\n \tcase FFI_TYPE_UINT64:\n \tcase FFI_TYPE_SINT64:\n \tcase FFI_TYPE_DOUBLE:\n-\t  result += 2 * SIZEOF_ARG;\n+\t  result += 2 * FFI_SIZEOF_ARG;\n \t  break;\n \tcase FFI_TYPE_STRUCT:\n \t  /* No structure parameters in Java.\t*/\n \t  abort();\n \tdefault:\n-\t  result += SIZEOF_ARG;\n+\t  result += FFI_SIZEOF_ARG;\n       }\n     }\n \n@@ -90,7 +90,7 @@ ffi_java_raw_to_ptrarray (ffi_cif *cif, ffi_raw *raw, void **args)\n \t  *args = (void*) ((char*)(raw++) + 2);\n \t  break;\n \n-#if SIZEOF_ARG == 8\t  \n+#if FFI_SIZEOF_ARG == 8\t  \n \tcase FFI_TYPE_UINT64:\n \tcase FFI_TYPE_SINT64:\n \tcase FFI_TYPE_DOUBLE:\n@@ -105,7 +105,7 @@ ffi_java_raw_to_ptrarray (ffi_cif *cif, ffi_raw *raw, void **args)\n \t  \n \tdefault:\n \t  *args = raw;\n-\t  raw += ALIGN ((*tp)->size, SIZEOF_ARG) / SIZEOF_ARG;\n+\t  raw += ALIGN ((*tp)->size, FFI_SIZEOF_ARG) / FFI_SIZEOF_ARG;\n \t}\n     }\n \n@@ -116,7 +116,7 @@ ffi_java_raw_to_ptrarray (ffi_cif *cif, ffi_raw *raw, void **args)\n   /* then assume little endian */\n   for (i = 0; i < cif->nargs; i++, tp++, args++)\n     {\n-#if SIZEOF_ARG == 8\n+#if FFI_SIZEOF_ARG == 8\n       switch((*tp)->type) {\n \tcase FFI_TYPE_UINT64:\n \tcase FFI_TYPE_SINT64:\n@@ -127,10 +127,10 @@ ffi_java_raw_to_ptrarray (ffi_cif *cif, ffi_raw *raw, void **args)\n \tdefault:\n \t  *args = (void*) raw++;\n       }\n-#else /* SIZEOF_ARG != 8 */\n+#else /* FFI_SIZEOF_ARG != 8 */\n \t*args = (void*) raw;\n \traw += ALIGN ((*tp)->size, sizeof (void*)) / sizeof (void*);\n-#endif /* SIZEOF_ARG == 8 */\n+#endif /* FFI_SIZEOF_ARG == 8 */\n     }\n \n #else\n@@ -202,7 +202,7 @@ ffi_java_ptrarray_to_raw (ffi_cif *cif, void **args, ffi_raw *raw)\n \t  (raw++)->flt = *(FLOAT32*) (*args);\n \t  break;\n \n-#if SIZEOF_ARG == 8\n+#if FFI_SIZEOF_ARG == 8\n \tcase FFI_TYPE_UINT64:\n \tcase FFI_TYPE_SINT64:\n \tcase FFI_TYPE_DOUBLE:\n@@ -216,11 +216,11 @@ ffi_java_ptrarray_to_raw (ffi_cif *cif, void **args, ffi_raw *raw)\n \t  break;\n \n \tdefault:\n-#if SIZEOF_ARG == 8\n+#if FFI_SIZEOF_ARG == 8\n \t  FFI_ASSERT(FALSE);\t/* Should have covered all cases */\n #else\t\n \t  memcpy ((void*) raw->data, (void*)*args, (*tp)->size);\n-\t  raw += ALIGN ((*tp)->size, SIZEOF_ARG) / SIZEOF_ARG;\n+\t  raw += ALIGN ((*tp)->size, FFI_SIZEOF_ARG) / FFI_SIZEOF_ARG;\n #endif\n \t}\n     }\n@@ -231,7 +231,7 @@ ffi_java_ptrarray_to_raw (ffi_cif *cif, void **args, ffi_raw *raw)\n static void\n ffi_java_rvalue_to_raw (ffi_cif *cif, void *rvalue)\n {\n-#if WORDS_BIGENDIAN && SIZEOF_ARG == 8\n+#if WORDS_BIGENDIAN && FFI_SIZEOF_ARG == 8\n   switch (cif->rtype->type)\n     {\n     case FFI_TYPE_UINT8:\n@@ -256,7 +256,7 @@ ffi_java_rvalue_to_raw (ffi_cif *cif, void *rvalue)\n static void\n ffi_java_raw_to_rvalue (ffi_cif *cif, void *rvalue)\n {\n-#if WORDS_BIGENDIAN && SIZEOF_ARG == 8\n+#if WORDS_BIGENDIAN && FFI_SIZEOF_ARG == 8\n   switch (cif->rtype->type)\n     {\n     case FFI_TYPE_UINT8:"}, {"sha": "d019a377e5b6ea248e21520852867af5c7b314eb", "filename": "libffi/src/m68k/sysv.S", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fm68k%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fm68k%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fm68k%2Fsysv.S?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -5,6 +5,7 @@\n    ----------------------------------------------------------------------- */\n \n #define LIBFFI_ASM\t\n+#include <fficonfig.h>\n #include <ffi.h>\n \n \t.text"}, {"sha": "cc2078bc7e280388f6dcb734a868564c6b936e44", "filename": "libffi/src/mips/ffi.c", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fmips%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fmips%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fmips%2Fffi.c?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   ffi.c - Copyright (c) 1996 Cygnus Solutions\n+   ffi.c - Copyright (c) 1996 Red Hat, Inc.\n    \n    MIPS Foreign Function Interface \n \n@@ -23,7 +23,6 @@\n    OTHER DEALINGS IN THE SOFTWARE.\n    ----------------------------------------------------------------------- */\n \n-#include <sgidefs.h>\n #include <ffi.h>\n #include <ffi_common.h>\n \n@@ -59,8 +58,8 @@ static void ffi_prep_args(char *stack,\n   /* If more than 8 double words are used, the remainder go\n      on the stack. We reorder stuff on the stack here to \n      support this easily. */\n-  if (bytes > 8 * SIZEOF_ARG)\n-    argp = &stack[bytes - (8 * SIZEOF_ARG)];\n+  if (bytes > 8 * FFI_SIZEOF_ARG)\n+    argp = &stack[bytes - (8 * FFI_SIZEOF_ARG)];\n   else\n     argp = stack;\n #else\n@@ -75,8 +74,8 @@ static void ffi_prep_args(char *stack,\n   if ( ecif->cif->rtype->type == FFI_TYPE_STRUCT )\n #endif  \n     {\n-      *(SLOT_TYPE_UNSIGNED *) argp = (SLOT_TYPE_UNSIGNED) ecif->rvalue;\n-      argp += sizeof(SLOT_TYPE_UNSIGNED);\n+      *(ffi_arg *) argp = (ffi_arg) ecif->rvalue;\n+      argp += sizeof(ffi_arg);\n       FIX_ARGP;\n     }\n \n@@ -99,9 +98,9 @@ static void ffi_prep_args(char *stack,\n #endif      \n \n \t  z = (*p_arg)->size;\n-\t  if (z < sizeof(SLOT_TYPE_UNSIGNED))\n+\t  if (z < sizeof(ffi_arg))\n \t    {\n-\t      z = sizeof(SLOT_TYPE_UNSIGNED);\n+\t      z = sizeof(ffi_arg);\n \n \t      switch ((*p_arg)->type)\n \t\t{"}, {"sha": "767fa52bd5cfe827f7cc9b4f6735af8f46532d93", "filename": "libffi/src/mips/n32.S", "status": "modified", "additions": 59, "deletions": 58, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fmips%2Fn32.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fmips%2Fn32.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fmips%2Fn32.S?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   n32.S - Copyright (c) 1996, 1998  Cygnus Solutions\n+   n32.S - Copyright (c) 1996, 1998  Red Hat, Inc.\n    \n    MIPS Foreign Function Interface \n \n@@ -24,6 +24,7 @@\n    ----------------------------------------------------------------------- */\n \n #define LIBFFI_ASM\t\n+#include <fficonfig.h>\n #include <ffi.h>\n \n /* Only build this code if we are compiling for n32 */\t\n@@ -36,7 +37,7 @@\n #define raddr    a4\n #define fn       a5\n \n-#define SIZEOF_FRAME\t( 8 * SIZEOF_ARG )\n+#define SIZEOF_FRAME\t( 8 * FFI_SIZEOF_ARG )\n \n \t.text\n \t.align\t2\n@@ -46,37 +47,37 @@ ffi_call_N32:\n \n \t# Prologue\n \tSUBU\t$sp, SIZEOF_FRAME\t\t\t# Frame size\n-\tREG_S\t$fp, SIZEOF_FRAME - 2*SIZEOF_ARG($sp)\t# Save frame pointer\n-\tREG_S\tra, SIZEOF_FRAME - 1*SIZEOF_ARG($sp)\t# Save return address\n+\tREG_S\t$fp, SIZEOF_FRAME - 2*FFI_SIZEOF_ARG($sp)\t# Save frame pointer\n+\tREG_S\tra, SIZEOF_FRAME - 1*FFI_SIZEOF_ARG($sp)\t# Save return address\n \tmove\t$fp, $sp\n \n \tmove\tt9, callback\t# callback function pointer\n-\tREG_S\tbytes, 2*SIZEOF_ARG($fp) # bytes\n-\tREG_S\tflags, 3*SIZEOF_ARG($fp) # flags\n-\tREG_S\traddr, 4*SIZEOF_ARG($fp) # raddr\n-\tREG_S\tfn,    5*SIZEOF_ARG($fp) # fn\n+\tREG_S\tbytes, 2*FFI_SIZEOF_ARG($fp) # bytes\n+\tREG_S\tflags, 3*FFI_SIZEOF_ARG($fp) # flags\n+\tREG_S\traddr, 4*FFI_SIZEOF_ARG($fp) # raddr\n+\tREG_S\tfn,    5*FFI_SIZEOF_ARG($fp) # fn\n \n \t# Allocate at least 4 words in the argstack\n \tmove\tv0, bytes\n-\tbge\tbytes, 4 * SIZEOF_ARG, bigger\t\n-\tLI\tv0, 4 * SIZEOF_ARG\n+\tbge\tbytes, 4 * FFI_SIZEOF_ARG, bigger\t\n+\tLI\tv0, 4 * FFI_SIZEOF_ARG\n \tb\tsixteen\n \n \tbigger:\t\n-\tADDU\tt4, v0, 2 * SIZEOF_ARG -1\t# make sure it is aligned \n-\tand\tv0, t4, -2 * SIZEOF_ARG\t\t# to a proper boundry.\n+\tADDU\tt4, v0, 2 * FFI_SIZEOF_ARG -1\t# make sure it is aligned \n+\tand\tv0, t4, -2 * FFI_SIZEOF_ARG\t\t# to a proper boundry.\n \n sixteen:\n \tSUBU\t$sp, $sp, v0\t# move the stack pointer to reflect the\n \t\t\t\t# arg space\n \n-\tADDU\ta0, $sp, 0      # 4 * SIZEOF_ARG\n-\tADDU\ta3, $fp, 3 * SIZEOF_ARG\n+\tADDU\ta0, $sp, 0      # 4 * FFI_SIZEOF_ARG\n+\tADDU\ta3, $fp, 3 * FFI_SIZEOF_ARG\n \n \t# Call ffi_prep_args\n \tjal\tt9\n \t\n-\t#\tADDU\t$sp, $sp, 4 * SIZEOF_ARG\t# adjust $sp to new args\n+\t#\tADDU\t$sp, $sp, 4 * FFI_SIZEOF_ARG\t# adjust $sp to new args\n \n \t# Copy the stack pointer to t9\n \tmove\tt9, $sp\n@@ -85,218 +86,218 @@ sixteen:\n \t# of arguments.\n \n \t# Load the number of bytes\n-\tREG_L\tt6, 2*SIZEOF_ARG($fp)\n+\tREG_L\tt6, 2*FFI_SIZEOF_ARG($fp)\n \n-\t# Is it bigger than 8 * SIZEOF_ARG?\n-\tdadd\tt7, $0, 8 * SIZEOF_ARG\n+\t# Is it bigger than 8 * FFI_SIZEOF_ARG?\n+\tdadd\tt7, $0, 8 * FFI_SIZEOF_ARG\n \tdsub\tt8, t6, t7\n \tbltz\tt8, loadregs\n \n \tadd\tt9, t9, t8\n \t\n loadregs:\t\n \n-\tREG_L\tt4, 3*SIZEOF_ARG($fp)  # load the flags word\n+\tREG_L\tt4, 3*FFI_SIZEOF_ARG($fp)  # load the flags word\n \tadd\tt6, t4, 0\t\t\t      # and copy it into t6\n \n \tand\tt4, ((1<<FFI_FLAG_BITS)-1)\n \tbnez\tt4, arg1_floatp\n-\tREG_L\ta0, 0*SIZEOF_ARG(t9)\n+\tREG_L\ta0, 0*FFI_SIZEOF_ARG(t9)\n \tb\targ1_next\n arg1_floatp:\t\n \tbne\tt4, FFI_TYPE_FLOAT, arg1_doublep\n-\tl.s\t$f12, 0*SIZEOF_ARG(t9)\n+\tl.s\t$f12, 0*FFI_SIZEOF_ARG(t9)\n \tb\targ1_next\n arg1_doublep:\t\n-\tl.d\t$f12, 0*SIZEOF_ARG(t9)\n+\tl.d\t$f12, 0*FFI_SIZEOF_ARG(t9)\n arg1_next:\t\n \t\n \tadd\tt4, t6, 0\n \tSRL\tt4, 1*FFI_FLAG_BITS\n \tand\tt4, ((1<<FFI_FLAG_BITS)-1)\n \tbnez\tt4, arg2_floatp\n-\tREG_L\ta1, 1*SIZEOF_ARG(t9)\n+\tREG_L\ta1, 1*FFI_SIZEOF_ARG(t9)\n \tb\targ2_next\n arg2_floatp:\n \tbne\tt4, FFI_TYPE_FLOAT, arg2_doublep\n-\tl.s\t$f13, 1*SIZEOF_ARG(t9)\t\n+\tl.s\t$f13, 1*FFI_SIZEOF_ARG(t9)\t\n \tb\targ2_next\n arg2_doublep:\t\n-\tl.d\t$f13, 1*SIZEOF_ARG(t9)\t\n+\tl.d\t$f13, 1*FFI_SIZEOF_ARG(t9)\t\n arg2_next:\t\n \t\n \tadd\tt4, t6, 0\n \tSRL\tt4, 2*FFI_FLAG_BITS\n \tand\tt4, ((1<<FFI_FLAG_BITS)-1)\n \tbnez\tt4, arg3_floatp\n-\tREG_L\ta2, 2*SIZEOF_ARG(t9)\n+\tREG_L\ta2, 2*FFI_SIZEOF_ARG(t9)\n \tb\targ3_next\n arg3_floatp:\n \tbne\tt4, FFI_TYPE_FLOAT, arg3_doublep\n-\tl.s\t$f14, 2*SIZEOF_ARG(t9)\t\n+\tl.s\t$f14, 2*FFI_SIZEOF_ARG(t9)\t\n \tb\targ3_next\n arg3_doublep:\t\n-\tl.d\t$f14, 2*SIZEOF_ARG(t9)\t\n+\tl.d\t$f14, 2*FFI_SIZEOF_ARG(t9)\t\n arg3_next:\t\n \t\n \tadd\tt4, t6, 0\n \tSRL\tt4, 3*FFI_FLAG_BITS\n \tand\tt4, ((1<<FFI_FLAG_BITS)-1)\n \tbnez\tt4, arg4_floatp\n-\tREG_L\ta3, 3*SIZEOF_ARG(t9)\n+\tREG_L\ta3, 3*FFI_SIZEOF_ARG(t9)\n \tb\targ4_next\n arg4_floatp:\n \tbne\tt4, FFI_TYPE_FLOAT, arg4_doublep\n-\tl.s\t$f15, 3*SIZEOF_ARG(t9)\t\n+\tl.s\t$f15, 3*FFI_SIZEOF_ARG(t9)\t\n \tb\targ4_next\n arg4_doublep:\t\n-\tl.d\t$f15, 3*SIZEOF_ARG(t9)\t\n+\tl.d\t$f15, 3*FFI_SIZEOF_ARG(t9)\t\n arg4_next:\t\n \t\n \tadd\tt4, t6, 0\n \tSRL\tt4, 4*FFI_FLAG_BITS\n \tand\tt4, ((1<<FFI_FLAG_BITS)-1)\n \tbnez\tt4, arg5_floatp\n-\tREG_L\ta4, 4*SIZEOF_ARG(t9)\n+\tREG_L\ta4, 4*FFI_SIZEOF_ARG(t9)\n \tb\targ5_next\n arg5_floatp:\n \tbne\tt4, FFI_TYPE_FLOAT, arg5_doublep\n-\tl.s\t$f16, 4*SIZEOF_ARG(t9)\t\n+\tl.s\t$f16, 4*FFI_SIZEOF_ARG(t9)\t\n \tb\targ5_next\n arg5_doublep:\t\n-\tl.d\t$f16, 4*SIZEOF_ARG(t9)\t\n+\tl.d\t$f16, 4*FFI_SIZEOF_ARG(t9)\t\n arg5_next:\t\n \t\n \tadd\tt4, t6, 0\n \tSRL\tt4, 5*FFI_FLAG_BITS\n \tand\tt4, ((1<<FFI_FLAG_BITS)-1)\n \tbnez\tt4, arg6_floatp\n-\tREG_L\ta5, 5*SIZEOF_ARG(t9)\n+\tREG_L\ta5, 5*FFI_SIZEOF_ARG(t9)\n \tb\targ6_next\n arg6_floatp:\n \tbne\tt4, FFI_TYPE_FLOAT, arg6_doublep\n-\tl.s\t$f17, 5*SIZEOF_ARG(t9)\t\n+\tl.s\t$f17, 5*FFI_SIZEOF_ARG(t9)\t\n \tb\targ6_next\n arg6_doublep:\t\n-\tl.d\t$f17, 5*SIZEOF_ARG(t9)\t\n+\tl.d\t$f17, 5*FFI_SIZEOF_ARG(t9)\t\n arg6_next:\t\n \t\n \tadd\tt4, t6, 0\n \tSRL\tt4, 6*FFI_FLAG_BITS\n \tand\tt4, ((1<<FFI_FLAG_BITS)-1)\n \tbnez\tt4, arg7_floatp\n-\tREG_L\ta6, 6*SIZEOF_ARG(t9)\n+\tREG_L\ta6, 6*FFI_SIZEOF_ARG(t9)\n \tb\targ7_next\n arg7_floatp:\n \tbne\tt4, FFI_TYPE_FLOAT, arg7_doublep\n-\tl.s\t$f18, 6*SIZEOF_ARG(t9)\t\n+\tl.s\t$f18, 6*FFI_SIZEOF_ARG(t9)\t\n \tb\targ7_next\n arg7_doublep:\t\n-\tl.d\t$f18, 6*SIZEOF_ARG(t9)\t\n+\tl.d\t$f18, 6*FFI_SIZEOF_ARG(t9)\t\n arg7_next:\t\n \t\n \tadd\tt4, t6, 0\n \tSRL\tt4, 7*FFI_FLAG_BITS\n \tand\tt4, ((1<<FFI_FLAG_BITS)-1)\n \tbnez\tt4, arg8_floatp\n-\tREG_L\ta7, 7*SIZEOF_ARG(t9)\n+\tREG_L\ta7, 7*FFI_SIZEOF_ARG(t9)\n \tb\targ8_next\n arg8_floatp:\n \tbne\tt4, FFI_TYPE_FLOAT, arg8_doublep\n- \tl.s\t$f19, 7*SIZEOF_ARG(t9)\t\n+ \tl.s\t$f19, 7*FFI_SIZEOF_ARG(t9)\t\n \tb\targ8_next\n arg8_doublep:\t\n- \tl.d\t$f19, 7*SIZEOF_ARG(t9)\t\n+ \tl.d\t$f19, 7*FFI_SIZEOF_ARG(t9)\t\n arg8_next:\t\n \n callit:\t\t\n \t# Load the function pointer\n-\tREG_L\tt9, 5*SIZEOF_ARG($fp)\n+\tREG_L\tt9, 5*FFI_SIZEOF_ARG($fp)\n \n \t# If the return value pointer is NULL, assume no return value.\n-\tREG_L\tt5, 4*SIZEOF_ARG($fp)\n+\tREG_L\tt5, 4*FFI_SIZEOF_ARG($fp)\n \tbeqz\tt5, noretval\n \n \t# Shift the return type flag over\n \tSRL\tt6, 8*FFI_FLAG_BITS\n \t\n \tbne     t6, FFI_TYPE_INT, retfloat\n \tjal\tt9\n-\tREG_L\tt4, 4*SIZEOF_ARG($fp)\n+\tREG_L\tt4, 4*FFI_SIZEOF_ARG($fp)\n \tREG_S\tv0, 0(t4)\n \tb\tepilogue\n \n retfloat:\n \tbne     t6, FFI_TYPE_FLOAT, retdouble\n \tjal\tt9\n-\tREG_L\tt4, 4*SIZEOF_ARG($fp)\n+\tREG_L\tt4, 4*FFI_SIZEOF_ARG($fp)\n \ts.s\t$f0, 0(t4)\n \tb\tepilogue\n \n retdouble:\t\n \tbne\tt6, FFI_TYPE_DOUBLE, retstruct_d\n \tjal\tt9\n-\tREG_L\tt4, 4*SIZEOF_ARG($fp)\n+\tREG_L\tt4, 4*FFI_SIZEOF_ARG($fp)\n \ts.d\t$f0, 0(t4)\n \tb\tepilogue\n \n retstruct_d:\t\n \tbne\tt6, FFI_TYPE_STRUCT_D, retstruct_f\n \tjal\tt9\n-\tREG_L\tt4, 4*SIZEOF_ARG($fp)\n+\tREG_L\tt4, 4*FFI_SIZEOF_ARG($fp)\n \ts.d\t$f0, 0(t4)\n \tb\tepilogue\n \t\n retstruct_f:\t\n \tbne\tt6, FFI_TYPE_STRUCT_F, retstruct_d_d\n \tjal\tt9\n-\tREG_L\tt4, 4*SIZEOF_ARG($fp)\n+\tREG_L\tt4, 4*FFI_SIZEOF_ARG($fp)\n \ts.s\t$f0, 0(t4)\n \tb\tepilogue\n \t\n retstruct_d_d:\t\n \tbne\tt6, FFI_TYPE_STRUCT_DD, retstruct_f_f\n \tjal\tt9\n-\tREG_L\tt4, 4*SIZEOF_ARG($fp)\n+\tREG_L\tt4, 4*FFI_SIZEOF_ARG($fp)\n \ts.d\t$f0, 0(t4)\n \ts.d\t$f2, 8(t4)\n \tb\tepilogue\n \t\n retstruct_f_f:\t\n \tbne\tt6, FFI_TYPE_STRUCT_FF, retstruct_d_f\n \tjal\tt9\n-\tREG_L\tt4, 4*SIZEOF_ARG($fp)\n+\tREG_L\tt4, 4*FFI_SIZEOF_ARG($fp)\n \ts.s\t$f0, 0(t4)\n \ts.s\t$f2, 4(t4)\n \tb\tepilogue\n \t\n retstruct_d_f:\t\n \tbne\tt6, FFI_TYPE_STRUCT_DF, retstruct_f_d\n \tjal\tt9\n-\tREG_L\tt4, 4*SIZEOF_ARG($fp)\n+\tREG_L\tt4, 4*FFI_SIZEOF_ARG($fp)\n \ts.d\t$f0, 0(t4)\n \ts.s\t$f2, 8(t4)\n \tb\tepilogue\n \t\n retstruct_f_d:\t\n \tbne\tt6, FFI_TYPE_STRUCT_FD, retstruct_small\n \tjal\tt9\n-\tREG_L\tt4, 4*SIZEOF_ARG($fp)\n+\tREG_L\tt4, 4*FFI_SIZEOF_ARG($fp)\n \ts.s\t$f0, 0(t4)\n \ts.d\t$f2, 8(t4)\n \tb\tepilogue\n \t\n retstruct_small:\t\n \tbne\tt6, FFI_TYPE_STRUCT_SMALL, retstruct_small2\n \tjal\tt9\n-\tREG_L\tt4, 4*SIZEOF_ARG($fp)\n+\tREG_L\tt4, 4*FFI_SIZEOF_ARG($fp)\n \tREG_S\tv0, 0(t4)\n \tb\tepilogue\n \t\n retstruct_small2:\t\n \tbne\tt6, FFI_TYPE_STRUCT_SMALL2, retstruct\n \tjal\tt9\n-\tREG_L\tt4, 4*SIZEOF_ARG($fp)\n+\tREG_L\tt4, 4*FFI_SIZEOF_ARG($fp)\n \tREG_S\tv0, 0(t4)\n \tREG_S\tv1, 8(t4)\n \tb\tepilogue\n@@ -308,8 +309,8 @@ noretval:\n \t# Epilogue\n epilogue:\t\n \tmove\t$sp, $fp\t\n-\tREG_L\t$fp, SIZEOF_FRAME - 2*SIZEOF_ARG($sp) # Restore frame pointer\n-\tREG_L\tra, SIZEOF_FRAME - 1*SIZEOF_ARG($sp)  # Restore return address\n+\tREG_L\t$fp, SIZEOF_FRAME - 2*FFI_SIZEOF_ARG($sp) # Restore frame pointer\n+\tREG_L\tra, SIZEOF_FRAME - 1*FFI_SIZEOF_ARG($sp)  # Restore return address\n \tADDU\t$sp, SIZEOF_FRAME\t\t      # Fix stack pointer\n \tj\tra\n "}, {"sha": "295095f1ed87d246b5bee04301b666eb2de287fe", "filename": "libffi/src/mips/o32.S", "status": "modified", "additions": 43, "deletions": 42, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fmips%2Fo32.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fmips%2Fo32.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fmips%2Fo32.S?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   o32.S - Copyright (c) 1996, 1998  Cygnus Solutions\n+   o32.S - Copyright (c) 1996, 1998  Red Hat, Inc.\n    \n    MIPS Foreign Function Interface \n \n@@ -24,6 +24,7 @@\n    ----------------------------------------------------------------------- */\n \n #define LIBFFI_ASM\t\n+#include <fficonfig.h>\n #include <ffi.h>\n \n /* Only build this code if we are compiling for o32 */\t\n@@ -34,7 +35,7 @@\n #define bytes\t a2\n #define flags\t a3\n \t\t\n-#define SIZEOF_FRAME\t( 4 * SIZEOF_ARG + 2 * SIZEOF_ARG )\n+#define SIZEOF_FRAME\t( 4 * FFI_SIZEOF_ARG + 2 * FFI_SIZEOF_ARG )\n \n \t.text\n \t.align\t2\n@@ -44,114 +45,114 @@ ffi_call_O32:\n \n \t# Prologue\n \tSUBU\t$sp, SIZEOF_FRAME\t\t\t# Frame size\n-\tREG_S\t$fp, SIZEOF_FRAME - 2*SIZEOF_ARG($sp)\t# Save frame pointer\n-\tREG_S\tra, SIZEOF_FRAME - 1*SIZEOF_ARG($sp)\t# Save return address\n+\tREG_S\t$fp, SIZEOF_FRAME - 2*FFI_SIZEOF_ARG($sp)\t# Save frame pointer\n+\tREG_S\tra, SIZEOF_FRAME - 1*FFI_SIZEOF_ARG($sp)\t# Save return address\n \tmove\t$fp, $sp\n \n \tmove\tt9, callback\t# callback function pointer\n-\tREG_S\tflags, SIZEOF_FRAME + 3*SIZEOF_ARG($fp) # flags\n+\tREG_S\tflags, SIZEOF_FRAME + 3*FFI_SIZEOF_ARG($fp) # flags\n \n \t# Allocate at least 4 words in the argstack\n \tmove\tv0, bytes\n-\tbge\tbytes, 4 * SIZEOF_ARG, bigger\t\n-\tLI\tv0, 4 * SIZEOF_ARG\n+\tbge\tbytes, 4 * FFI_SIZEOF_ARG, bigger\t\n+\tLI\tv0, 4 * FFI_SIZEOF_ARG\n \tb\tsixteen\n \n bigger:\t\n-\tADDU\tt0, v0, 2 * SIZEOF_ARG -1\t# make sure it is aligned \n-\tand\tv0, t0, -2 * SIZEOF_ARG\t\t# to an 8 byte boundry\n+\tADDU\tt0, v0, 2 * FFI_SIZEOF_ARG -1\t# make sure it is aligned \n+\tand\tv0, t0, -2 * FFI_SIZEOF_ARG\t\t# to an 8 byte boundry\n \n sixteen:\n \tSUBU\t$sp, $sp, v0\t# move the stack pointer to reflect the\n \t\t\t\t# arg space\n \n-\tADDU\ta0, $sp, 4 * SIZEOF_ARG\n-\tADDU\ta3, $fp, SIZEOF_FRAME + 3*SIZEOF_ARG\n+\tADDU\ta0, $sp, 4 * FFI_SIZEOF_ARG\n+\tADDU\ta3, $fp, SIZEOF_FRAME + 3*FFI_SIZEOF_ARG\n \n \tjal\tt9\n \t\n-\tREG_L\tt0, SIZEOF_FRAME + 3*SIZEOF_ARG($fp)  # load the flags word\n+\tREG_L\tt0, SIZEOF_FRAME + 3*FFI_SIZEOF_ARG($fp)  # load the flags word\n \tadd\tt2, t0, 0\t\t\t   # and copy it into t2\n \n \tand     t0, ((1<<4)-1)          # mask out the return type\n \tSRL\tt2, 4\t\t\t# shift our arg info\n \t\t\n-\tADDU\t$sp, $sp, 4 * SIZEOF_ARG\t# adjust $sp to new args\n+\tADDU\t$sp, $sp, 4 * FFI_SIZEOF_ARG\t# adjust $sp to new args\n \n \tbnez\tt0, pass_d\t\t\t# make it quick for int\n-\tREG_L\ta0, 0*SIZEOF_ARG($sp)\t\t# just go ahead and load the\n-\tREG_L\ta1, 1*SIZEOF_ARG($sp)\t\t# four regs.\n-\tREG_L\ta2, 2*SIZEOF_ARG($sp)\n-\tREG_L\ta3, 3*SIZEOF_ARG($sp)\n+\tREG_L\ta0, 0*FFI_SIZEOF_ARG($sp)\t\t# just go ahead and load the\n+\tREG_L\ta1, 1*FFI_SIZEOF_ARG($sp)\t\t# four regs.\n+\tREG_L\ta2, 2*FFI_SIZEOF_ARG($sp)\n+\tREG_L\ta3, 3*FFI_SIZEOF_ARG($sp)\n \tb\tcall_it\n \n pass_d:\n \tbne\tt0, FFI_ARGS_D, pass_f\n-\tl.d\t$f12, 0*SIZEOF_ARG($sp)\t# load $fp regs from args\n-\tREG_L\ta2,   2*SIZEOF_ARG($sp)\t# passing a double\n-\tREG_L\ta3,   3*SIZEOF_ARG($sp)\n+\tl.d\t$f12, 0*FFI_SIZEOF_ARG($sp)\t# load $fp regs from args\n+\tREG_L\ta2,   2*FFI_SIZEOF_ARG($sp)\t# passing a double\n+\tREG_L\ta3,   3*FFI_SIZEOF_ARG($sp)\n \tb\tcall_it\n \n pass_f:\t\n \tbne\tt0, FFI_ARGS_F, pass_d_d\n-\tl.s\t$f12, 0*SIZEOF_ARG($sp)\t# load $fp regs from args\n-\tREG_L\ta1,   1*SIZEOF_ARG($sp)\t# passing a float\n-\tREG_L\ta2,   2*SIZEOF_ARG($sp)\n-\tREG_L\ta3,   3*SIZEOF_ARG($sp)\n+\tl.s\t$f12, 0*FFI_SIZEOF_ARG($sp)\t# load $fp regs from args\n+\tREG_L\ta1,   1*FFI_SIZEOF_ARG($sp)\t# passing a float\n+\tREG_L\ta2,   2*FFI_SIZEOF_ARG($sp)\n+\tREG_L\ta3,   3*FFI_SIZEOF_ARG($sp)\n \tb\tcall_it\t\t\n \n pass_d_d:\t\t\n \tbne\tt0, FFI_ARGS_DD, pass_f_f\n-\tl.d\t$f12, 0*SIZEOF_ARG($sp)\t# load $fp regs from args\n-\tl.d\t$f14, 2*SIZEOF_ARG($sp)\t# passing two doubles\n+\tl.d\t$f12, 0*FFI_SIZEOF_ARG($sp)\t# load $fp regs from args\n+\tl.d\t$f14, 2*FFI_SIZEOF_ARG($sp)\t# passing two doubles\n \tb\tcall_it\n \n pass_f_f:\t\n \tbne\tt0, FFI_ARGS_FF, pass_d_f\n-\tl.s\t$f12, 0*SIZEOF_ARG($sp)\t# load $fp regs from args\n-\tl.s\t$f14, 1*SIZEOF_ARG($sp)\t# passing two floats\n-\tREG_L\ta2,   2*SIZEOF_ARG($sp)\n-\tREG_L\ta3,   3*SIZEOF_ARG($sp)\n+\tl.s\t$f12, 0*FFI_SIZEOF_ARG($sp)\t# load $fp regs from args\n+\tl.s\t$f14, 1*FFI_SIZEOF_ARG($sp)\t# passing two floats\n+\tREG_L\ta2,   2*FFI_SIZEOF_ARG($sp)\n+\tREG_L\ta3,   3*FFI_SIZEOF_ARG($sp)\n \tb\tcall_it\n \n pass_d_f:\t\t\n \tbne\tt0, FFI_ARGS_DF, pass_f_d\n-\tl.d\t$f12, 0*SIZEOF_ARG($sp)\t# load $fp regs from args\n-\tl.s\t$f14, 2*SIZEOF_ARG($sp)\t# passing double and float\n-\tREG_L\ta3,   3*SIZEOF_ARG($sp)\n+\tl.d\t$f12, 0*FFI_SIZEOF_ARG($sp)\t# load $fp regs from args\n+\tl.s\t$f14, 2*FFI_SIZEOF_ARG($sp)\t# passing double and float\n+\tREG_L\ta3,   3*FFI_SIZEOF_ARG($sp)\n \tb\tcall_it\n \n pass_f_d:\t\t\n  # assume that the only other combination must be float then double\n  #\tbne\tt0, FFI_ARGS_F_D, call_it\n-\tl.s\t$f12, 0*SIZEOF_ARG($sp)\t# load $fp regs from args\n-\tl.d\t$f14, 2*SIZEOF_ARG($sp)\t# passing double and float\n+\tl.s\t$f12, 0*FFI_SIZEOF_ARG($sp)\t# load $fp regs from args\n+\tl.d\t$f14, 2*FFI_SIZEOF_ARG($sp)\t# passing double and float\n \n call_it:\t\n \t# Load the function pointer\n-\tREG_L\tt9, SIZEOF_FRAME + 5*SIZEOF_ARG($fp)\n+\tREG_L\tt9, SIZEOF_FRAME + 5*FFI_SIZEOF_ARG($fp)\n \n \t# If the return value pointer is NULL, assume no return value.\n-\tREG_L\tt1, SIZEOF_FRAME + 4*SIZEOF_ARG($fp)\n+\tREG_L\tt1, SIZEOF_FRAME + 4*FFI_SIZEOF_ARG($fp)\n \tbeqz\tt1, noretval\n \n \tbne     t2, FFI_TYPE_INT, retfloat\n \tjal\tt9\n-\tREG_L\tt0, SIZEOF_FRAME + 4*SIZEOF_ARG($fp)\n+\tREG_L\tt0, SIZEOF_FRAME + 4*FFI_SIZEOF_ARG($fp)\n \tREG_S\tv0, 0(t0)\n \tb\tepilogue\n \n retfloat:\n \tbne     t2, FFI_TYPE_FLOAT, retdouble\n \tjal\tt9\n-\tREG_L\tt0, SIZEOF_FRAME + 4*SIZEOF_ARG($fp)\n+\tREG_L\tt0, SIZEOF_FRAME + 4*FFI_SIZEOF_ARG($fp)\n \ts.s\t$f0, 0(t0)\n \tb\tepilogue\n \n retdouble:\t\n \tbne\tt2, FFI_TYPE_DOUBLE, noretval\n \tjal\tt9\n-\tREG_L\tt0, SIZEOF_FRAME + 4*SIZEOF_ARG($fp)\n+\tREG_L\tt0, SIZEOF_FRAME + 4*FFI_SIZEOF_ARG($fp)\n \ts.d\t$f0, 0(t0)\n \tb\tepilogue\n \t\n@@ -161,8 +162,8 @@ noretval:\n \t# Epilogue\n epilogue:\t\n \tmove\t$sp, $fp\t\n-\tREG_L\t$fp, SIZEOF_FRAME - 2*SIZEOF_ARG($sp) # Restore frame pointer\n-\tREG_L\tra, SIZEOF_FRAME - 1*SIZEOF_ARG($sp)  # Restore return address\n+\tREG_L\t$fp, SIZEOF_FRAME - 2*FFI_SIZEOF_ARG($sp) # Restore frame pointer\n+\tREG_L\tra, SIZEOF_FRAME - 1*FFI_SIZEOF_ARG($sp)  # Restore return address\n \tADDU\t$sp, SIZEOF_FRAME\t\t      # Fix stack pointer\n \tj\tra\n "}, {"sha": "590717f6f5537efd4a012a8131e0898debc5f944", "filename": "libffi/src/powerpc/aix.S", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fpowerpc%2Faix.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fpowerpc%2Faix.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Faix.S?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -80,6 +80,7 @@\n         .set f21,21\n \n #define LIBFFI_ASM\t\n+#include <fficonfig.h>\n #include <ffi.h>\n #define JUMPTARGET(name) name\n #define L(x) x"}, {"sha": "70c48e531d97f14306ccbd5b9b2de1b81050a8d2", "filename": "libffi/src/powerpc/darwin.S", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fpowerpc%2Fdarwin.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fpowerpc%2Fdarwin.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fdarwin.S?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -24,6 +24,7 @@\n    ----------------------------------------------------------------------- */\n \n #define LIBFFI_ASM\n+#include <fficonfig.h>\n #include <ffi.h>\n #define JUMPTARGET(name) name\n #define L(x) x"}, {"sha": "39b3cbb8c4ad4f38f78c57d434a18868c5036f4d", "filename": "libffi/src/powerpc/ffi_darwin.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fpowerpc%2Fffi_darwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fpowerpc%2Fffi_darwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fffi_darwin.c?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -25,6 +25,7 @@\n    ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n    OTHER DEALINGS IN THE SOFTWARE.\n    ----------------------------------------------------------------------- */\n+\n #include <ffi.h>\n #include <ffi_common.h>\n "}, {"sha": "f12d4ec0004a0aed72d15b9abd6f446654445542", "filename": "libffi/src/powerpc/linux64.S", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fpowerpc%2Flinux64.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fpowerpc%2Flinux64.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Flinux64.S?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -24,6 +24,7 @@\n    ----------------------------------------------------------------------- */\n \n #define LIBFFI_ASM\t\n+#include <fficonfig.h>\n #include <ffi.h>\n \n #ifdef __powerpc64__"}, {"sha": "db78ea6e82289e8eeb3fcac77bbc993992374459", "filename": "libffi/src/powerpc/linux64_closure.S", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fpowerpc%2Flinux64_closure.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fpowerpc%2Flinux64_closure.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Flinux64_closure.S?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -1,4 +1,5 @@\n #define LIBFFI_ASM\n+#include <fficonfig.h>\n #include <ffi.h>\n \n \t.file\t\"linux64_closure.S\""}, {"sha": "dce9daba6b189a4c8a73892e0c03f1e1d2fdcfde", "filename": "libffi/src/powerpc/ppc_closure.S", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fpowerpc%2Fppc_closure.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fpowerpc%2Fppc_closure.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fppc_closure.S?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -1,4 +1,5 @@\n #define LIBFFI_ASM\n+#include <fficonfig.h>\n #include <ffi.h>\n #include <powerpc/asm.h>\n "}, {"sha": "a7aaa3f8c8a877f05681bd46fb205898ad00a125", "filename": "libffi/src/powerpc/sysv.S", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fpowerpc%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fpowerpc%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fsysv.S?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -26,6 +26,7 @@\n    ----------------------------------------------------------------------- */\n \n #define LIBFFI_ASM\t\n+#include <fficonfig.h>\n #include <ffi.h>\n #include <powerpc/asm.h>\n "}, {"sha": "f43ccfc45587da2a25f0f8128ffb5d1cefc1951e", "filename": "libffi/src/prep_cif.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fprep_cif.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fprep_cif.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fprep_cif.c?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   prep_cif.c - Copyright (c) 1996, 1998  Cygnus Solutions\n+   prep_cif.c - Copyright (c) 1996, 1998  Red Hat, Inc.\n \n    Permission is hereby granted, free of charge, to any person obtaining\n    a copy of this software and associated documentation files (the\n@@ -26,9 +26,9 @@\n #include <stdlib.h>\n \n \n-/* Round up to SIZEOF_ARG. */\n+/* Round up to FFI_SIZEOF_ARG. */\n \n-#define STACK_ARG_SIZE(x) ALIGN(x, SIZEOF_ARG)\n+#define STACK_ARG_SIZE(x) ALIGN(x, FFI_SIZEOF_ARG)\n \n /* Perform machine independent initialization of aggregate type\n    specifications. */\n@@ -53,7 +53,7 @@ static ffi_status initialize_aggregate(/*@out@*/ ffi_type *arg)\n \treturn FFI_BAD_TYPEDEF;\n       \n       /* Perform a sanity check on the argument type */\n-      FFI_ASSERT(ffi_type_test((*ptr)));\n+      FFI_ASSERT_VALID_TYPE(*ptr);\n \n       arg->size = ALIGN(arg->size, (*ptr)->alignment);\n       arg->size += (*ptr)->size;\n@@ -94,7 +94,7 @@ ffi_status ffi_prep_cif(/*@out@*/ /*@partial@*/ ffi_cif *cif,\n   ffi_type **ptr;\n \n   FFI_ASSERT(cif != NULL);\n-  FFI_ASSERT((abi > FFI_FIRST_ABI) && (abi < FFI_LAST_ABI));\n+  FFI_ASSERT((abi > FFI_FIRST_ABI) && (abi <= FFI_DEFAULT_ABI));\n \n   cif->abi = abi;\n   cif->arg_types = atypes;\n@@ -110,7 +110,7 @@ ffi_status ffi_prep_cif(/*@out@*/ /*@partial@*/ ffi_cif *cif,\n   /*@=usedef@*/\n \n   /* Perform a sanity check on the return type */\n-  FFI_ASSERT(ffi_type_test(cif->rtype));\n+  FFI_ASSERT_VALID_TYPE(cif->rtype);\n \n   /* x86-64 and s390 stack space allocation is handled in prep_machdep.  */\n #if !defined M68K && !defined __x86_64__ && !defined S390\n@@ -126,7 +126,7 @@ ffi_status ffi_prep_cif(/*@out@*/ /*@partial@*/ ffi_cif *cif,\n   for (ptr = cif->arg_types, i = cif->nargs; i > 0; i--, ptr++)\n     {\n       /* Perform a sanity check on the argument type */\n-      FFI_ASSERT(ffi_type_test(*ptr));\n+      FFI_ASSERT_VALID_TYPE(*ptr);\n \n       /* Initialize any uninitialized aggregate type definitions */\n       if (((*ptr)->size == 0) && (initialize_aggregate((*ptr)) != FFI_OK))"}, {"sha": "f4f4d80b15206056f306a2a966ffd583469da8e5", "filename": "libffi/src/raw_api.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fraw_api.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fraw_api.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fraw_api.c?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   raw_api.c - Copyright (c) 1999  Cygnus Solutions\n+   raw_api.c - Copyright (c) 1999  Red Hat, Inc.\n \n    Author: Kresten Krab Thorup <krab@gnu.org>\n \n@@ -44,10 +44,10 @@ ffi_raw_size (ffi_cif *cif)\n     {\n #if !FFI_NO_STRUCTS\n       if ((*at)->type == FFI_TYPE_STRUCT)\n-\tresult += ALIGN (sizeof (void*), SIZEOF_ARG);\n+\tresult += ALIGN (sizeof (void*), FFI_SIZEOF_ARG);\n       else\n #endif\n-\tresult += ALIGN ((*at)->size, SIZEOF_ARG);\n+\tresult += ALIGN ((*at)->size, FFI_SIZEOF_ARG);\n     }\n \n   return result;\n@@ -68,18 +68,18 @@ ffi_raw_to_ptrarray (ffi_cif *cif, ffi_raw *raw, void **args)\n \t{\n \tcase FFI_TYPE_UINT8:\n \tcase FFI_TYPE_SINT8:\n-\t  *args = (void*) ((char*)(raw++) + SIZEOF_ARG - 1);\n+\t  *args = (void*) ((char*)(raw++) + FFI_SIZEOF_ARG - 1);\n \t  break;\n \t  \n \tcase FFI_TYPE_UINT16:\n \tcase FFI_TYPE_SINT16:\n-\t  *args = (void*) ((char*)(raw++) + SIZEOF_ARG - 2);\n+\t  *args = (void*) ((char*)(raw++) + FFI_SIZEOF_ARG - 2);\n \t  break;\n \n-#if SIZEOF_ARG >= 4\t  \n+#if FFI_SIZEOF_ARG >= 4\t  \n \tcase FFI_TYPE_UINT32:\n \tcase FFI_TYPE_SINT32:\n-\t  *args = (void*) ((char*)(raw++) + SIZEOF_ARG - 4);\n+\t  *args = (void*) ((char*)(raw++) + FFI_SIZEOF_ARG - 4);\n \t  break;\n #endif\n \t\n@@ -95,7 +95,7 @@ ffi_raw_to_ptrarray (ffi_cif *cif, ffi_raw *raw, void **args)\n \t  \n \tdefault:\n \t  *args = raw;\n-\t  raw += ALIGN ((*tp)->size, SIZEOF_ARG) / SIZEOF_ARG;\n+\t  raw += ALIGN ((*tp)->size, FFI_SIZEOF_ARG) / FFI_SIZEOF_ARG;\n \t}\n     }\n \n@@ -152,7 +152,7 @@ ffi_ptrarray_to_raw (ffi_cif *cif, void **args, ffi_raw *raw)\n \t  (raw++)->sint = *(SINT16*) (*args);\n \t  break;\n \n-#if SIZEOF_ARG >= 4\n+#if FFI_SIZEOF_ARG >= 4\n \tcase FFI_TYPE_UINT32:\n \t  (raw++)->uint = *(UINT32*) (*args);\n \t  break;\n@@ -174,7 +174,7 @@ ffi_ptrarray_to_raw (ffi_cif *cif, void **args, ffi_raw *raw)\n \n \tdefault:\n \t  memcpy ((void*) raw->data, (void*)*args, (*tp)->size);\n-\t  raw += ALIGN ((*tp)->size, SIZEOF_ARG) / SIZEOF_ARG;\n+\t  raw += ALIGN ((*tp)->size, FFI_SIZEOF_ARG) / FFI_SIZEOF_ARG;\n \t}\n     }\n }"}, {"sha": "e9cbed977a9c5740092fd729dd2a2ee7522f94cd", "filename": "libffi/src/s390/sysv.S", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fs390%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fs390%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fs390%2Fsysv.S?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -24,6 +24,7 @@\n    ----------------------------------------------------------------------- */\n \n #define LIBFFI_ASM\n+#include <fficonfig.h>\n #include <ffi.h>\n \n #ifndef __s390x__"}, {"sha": "a7121c5425bd19f6db14161bee884d3777a13e49", "filename": "libffi/src/sh/sysv.S", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fsh%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fsh%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fsh%2Fsysv.S?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -24,6 +24,7 @@\n    ----------------------------------------------------------------------- */\n \n #define LIBFFI_ASM\t\n+#include <fficonfig.h>\n #include <ffi.h>\n #ifdef HAVE_MACHINE_ASM_H\n #include <machine/asm.h>"}, {"sha": "949f69f9884c73145b76d61cd48b11727917c948", "filename": "libffi/src/sh64/sysv.S", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fsh64%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fsh64%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fsh64%2Fsysv.S?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -24,6 +24,7 @@\n    ----------------------------------------------------------------------- */\n \n #define LIBFFI_ASM\t\n+#include <fficonfig.h>\n #include <ffi.h>\n #ifdef HAVE_MACHINE_ASM_H\n #include <machine/asm.h>"}, {"sha": "a08e65ac5717cd1932638d27f61927a501b3fda1", "filename": "libffi/src/sparc/ffi.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fsparc%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fsparc%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fsparc%2Fffi.c?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   ffi.c - Copyright (c) 1996, 2003 Cygnus Solutions\n+   ffi.c - Copyright (c) 1996, 2003 Red Hat, Inc.\n    \n    Sparc Foreign Function Interface \n \n@@ -491,7 +491,7 @@ ffi_closure_sparc_inner(ffi_closure *closure,\n   while (i < avn)\n     {\n       /* Assume big-endian.  FIXME */\n-      argn += ALIGN(arg_types[i]->size, SIZEOF_ARG) / SIZEOF_ARG;\n+      argn += ALIGN(arg_types[i]->size, FFI_SIZEOF_ARG) / FFI_SIZEOF_ARG;\n \n #ifdef SPARC64\n       if (i < 16 && (arg_types[i]->type == FFI_TYPE_FLOAT"}, {"sha": "880aae1f69e0982e2fc8ab057a1c8222da20561d", "filename": "libffi/src/sparc/v8.S", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fsparc%2Fv8.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fsparc%2Fv8.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fsparc%2Fv8.S?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   v8.S - Copyright (c) 1996, 1997, 2003 Cygnus Solutions\n+   v8.S - Copyright (c) 1996, 1997, 2003 Red Hat, Inc.\n    \n    Sparc Foreign Function Interface \n \n@@ -24,6 +24,7 @@\n    ----------------------------------------------------------------------- */\n \n #define LIBFFI_ASM\t\n+#include <fficonfig.h>\n #include <ffi.h>\n \n #define STACKFRAME 96\t\t/* Minimum stack framesize for SPARC */"}, {"sha": "03b487bb54d9d7a8b1a532fd43bd8d03dacaa6b4", "filename": "libffi/src/sparc/v9.S", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fsparc%2Fv9.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fsparc%2Fv9.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fsparc%2Fv9.S?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   v9.S - Copyright (c) 2000, 2003 Cygnus Solutions\n+   v9.S - Copyright (c) 2000, 2003 Red Hat, Inc.\n    \n    Sparc 64bit Foreign Function Interface \n \n@@ -24,6 +24,7 @@\n    ----------------------------------------------------------------------- */\n \n #define LIBFFI_ASM\t\n+#include <fficonfig.h>\n #include <ffi.h>\n \n #ifdef SPARC64"}, {"sha": "df32190d115b9cbbbbdd5b96f8afdce0747b06e3", "filename": "libffi/src/types.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Ftypes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Ftypes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Ftypes.c?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   types.c - Copyright (c) 1996, 1998  Cygnus Solutions\n+   types.c - Copyright (c) 1996, 1998  Red Hat, Inc.\n    \n    Predefined ffi_types needed by libffi.\n "}, {"sha": "905ed6f1b879df39df8f10342ee79517e72b9cb6", "filename": "libffi/src/x86/ffi64.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fx86%2Fffi64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fx86%2Fffi64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fx86%2Fffi64.c?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -689,7 +689,7 @@ ffi_closure_UNIX64_inner(ffi_closure *closure, va_list l, void *rp)\n \t  FFI_ASSERT(0);\n \t}\n \n-      argn += ALIGN(arg_types[i]->size, SIZEOF_ARG) / SIZEOF_ARG;\n+      argn += ALIGN(arg_types[i]->size, FFI_SIZEOF_ARG) / FFI_SIZEOF_ARG;\n       i++;\n     }\n "}, {"sha": "53a4c2b7e98612ed3ced8d17ab3b915d42a6f53a", "filename": "libffi/src/x86/sysv.S", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fx86%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fx86%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fx86%2Fsysv.S?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   sysv.S - Copyright (c) 1996, 1998, 2001, 2002, 2003  Cygnus Solutions\n+   sysv.S - Copyright (c) 1996, 1998, 2001, 2002, 2003  Red Hat, Inc.\n    \n    X86 Foreign Function Interface \n \n@@ -26,6 +26,7 @@\n #ifndef __x86_64__\n \n #define LIBFFI_ASM\t\n+#include <fficonfig.h>\n #include <ffi.h>\n \n .text"}, {"sha": "310fed71843996a924cfd8c8d65c7298cdf4813c", "filename": "libffi/src/x86/unix64.S", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fx86%2Funix64.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fx86%2Funix64.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fx86%2Funix64.S?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -25,6 +25,7 @@\n \n #ifdef __x86_64__\n #define LIBFFI_ASM\t\n+#include <fficonfig.h>\n #include <ffi.h>\n \n \t.section\t.rodata"}, {"sha": "40743af5893f878501f8174dc1e907b2dad7da86", "filename": "libffi/src/x86/win32.S", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fx86%2Fwin32.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Fsrc%2Fx86%2Fwin32.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fx86%2Fwin32.S?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -27,6 +27,7 @@\n    ----------------------------------------------------------------------- */\n  \n #define LIBFFI_ASM\n+#include <fficonfig.h>\n #include <ffi.h>\n  \n .text"}, {"sha": "2314441899df7627bc903da587c69b7d64e5bf10", "filename": "libffi/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1450eb7a07b5967bb4370d458385b945835f6df0/libffi%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ftestsuite%2FMakefile.in?ref=1450eb7a07b5967bb4370d458385b945835f6df0", "patch": "@@ -71,6 +71,7 @@ DLLTOOL = @DLLTOOL@\n EXEEXT = @EXEEXT@\n GCJ = @GCJ@\n GCJFLAGS = @GCJFLAGS@\n+HAVE_LONG_DOUBLE = @HAVE_LONG_DOUBLE@\n LIBTOOL = @LIBTOOL@\n LN_S = @LN_S@\n MAINT = @MAINT@"}]}