{"sha": "d982e46e1c8ec6ed6ab7afc51c7390788edaa0e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk4MmU0NmUxYzhlYzZlZDZhYjdhZmM1MWM3MzkwNzg4ZWRhYTBlNg==", "commit": {"author": {"name": "John Wehle", "email": "john@feith.com", "date": "2000-09-10T18:25:49Z"}, "committer": {"name": "John Wehle", "email": "wehle@gcc.gnu.org", "date": "2000-09-10T18:25:49Z"}, "message": "alias.c (find_base_term): Handle ADDRESSOF.\n\n\t* alias.c (find_base_term): Handle ADDRESSOF.\n\t(memrefs_conflict_p): An ADDRESSOF doesn't conflict.\n\nFrom-SVN: r36300", "tree": {"sha": "7eefe19dc8865370e7ecf0dc3bfec84f34941058", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7eefe19dc8865370e7ecf0dc3bfec84f34941058"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d982e46e1c8ec6ed6ab7afc51c7390788edaa0e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d982e46e1c8ec6ed6ab7afc51c7390788edaa0e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d982e46e1c8ec6ed6ab7afc51c7390788edaa0e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d982e46e1c8ec6ed6ab7afc51c7390788edaa0e6/comments", "author": {"login": "jlwehle", "id": 46985578, "node_id": "MDQ6VXNlcjQ2OTg1NTc4", "avatar_url": "https://avatars.githubusercontent.com/u/46985578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlwehle", "html_url": "https://github.com/jlwehle", "followers_url": "https://api.github.com/users/jlwehle/followers", "following_url": "https://api.github.com/users/jlwehle/following{/other_user}", "gists_url": "https://api.github.com/users/jlwehle/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlwehle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlwehle/subscriptions", "organizations_url": "https://api.github.com/users/jlwehle/orgs", "repos_url": "https://api.github.com/users/jlwehle/repos", "events_url": "https://api.github.com/users/jlwehle/events{/privacy}", "received_events_url": "https://api.github.com/users/jlwehle/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "212d447c7fbeed4cf515089d5c67fc6caaa34c45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/212d447c7fbeed4cf515089d5c67fc6caaa34c45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/212d447c7fbeed4cf515089d5c67fc6caaa34c45"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "553741de353fe97fe36b7e7fbd0d811d0144596a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d982e46e1c8ec6ed6ab7afc51c7390788edaa0e6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d982e46e1c8ec6ed6ab7afc51c7390788edaa0e6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d982e46e1c8ec6ed6ab7afc51c7390788edaa0e6", "patch": "@@ -1,3 +1,8 @@\n+Sun Sep 10 14:30:28 EDT 2000  John Wehle  (john@feith.com)\n+\n+\t* alias.c (find_base_term): Handle ADDRESSOF.\n+\t(memrefs_conflict_p): An ADDRESSOF doesn't conflict.\n+\n 2000-09-10  Denis Chertykov  <denisc@overta.ru>\n \n \t* genoutput.c (output_insn_data): Translate <NEWLINE> to \\n\\ while"}, {"sha": "b17296bcbd5af5bdebeb01af7ee927e240f78855", "filename": "gcc/alias.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d982e46e1c8ec6ed6ab7afc51c7390788edaa0e6/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d982e46e1c8ec6ed6ab7afc51c7390788edaa0e6/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=d982e46e1c8ec6ed6ab7afc51c7390788edaa0e6", "patch": "@@ -1131,6 +1131,9 @@ find_base_term (x)\n     case LABEL_REF:\n       return x;\n \n+    case ADDRESSOF:\n+      return REG_BASE_VALUE (stack_pointer_rtx);\n+\n     default:\n       return 0;\n     }\n@@ -1454,6 +1457,9 @@ memrefs_conflict_p (xsize, x, ysize, y, c)\n       return memrefs_conflict_p (xsize, x, ysize, XEXP (y, 0), c);\n     }\n \n+  if (GET_CODE (x) == ADDRESSOF || GET_CODE (y) == ADDRESSOF)\n+    return xsize <= 0 || ysize <= 0;\n+\n   if (CONSTANT_P (x))\n     {\n       if (GET_CODE (x) == CONST_INT && GET_CODE (y) == CONST_INT)"}]}