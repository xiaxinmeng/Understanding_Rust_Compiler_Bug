{"sha": "c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVhNGFiM2E4YmZmMDEyYTNjMjdhNDFkYTc1ZGRhMzdkM2UwYmMwOQ==", "commit": {"author": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2003-10-21T19:07:52Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2003-10-21T19:07:52Z"}, "message": "commit missing adds.\n\nFrom-SVN: r72767", "tree": {"sha": "ce7ce47cb32484546246d436b53e691ca02db49d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce7ce47cb32484546246d436b53e691ca02db49d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09/comments", "author": null, "committer": null, "parents": [{"sha": "1450eb7a07b5967bb4370d458385b945835f6df0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1450eb7a07b5967bb4370d458385b945835f6df0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1450eb7a07b5967bb4370d458385b945835f6df0"}], "stats": {"total": 756, "additions": 756, "deletions": 0}, "files": [{"sha": "00a121718d729b863903d88e9af55a220312f6c1", "filename": "libffi/src/alpha/ffitarget.h", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09/libffi%2Fsrc%2Falpha%2Fffitarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09/libffi%2Fsrc%2Falpha%2Fffitarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Falpha%2Fffitarget.h?ref=c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09", "patch": "@@ -0,0 +1,48 @@\n+/* -----------------------------------------------------------------*-C-*-\n+   ffitarget.h - Copyright (c) 1996-2003  Red Hat, Inc.\n+   Target configuration macros for Alpha.\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+\n+   ----------------------------------------------------------------------- */\n+\n+#ifndef LIBFFI_TARGET_H\n+#define LIBFFI_TARGET_H\n+\n+#ifndef LIBFFI_ASM\n+typedef unsigned long          ffi_arg;\n+typedef signed long            ffi_sarg;\n+\n+typedef enum ffi_abi {\n+  FFI_FIRST_ABI = 0,\n+  FFI_OSF,\n+  FFI_DEFAULT_ABI = FFI_OSF,\n+  FFI_LAST_ABI = FFI_DEFAULT_ABI + 1\n+} ffi_abi;\n+#endif\n+\n+/* ---- Definitions for closures ----------------------------------------- */\n+\n+#define FFI_CLOSURES 1\n+#define FFI_TRAMPOLINE_SIZE 24\n+#define FFI_NATIVE_RAW_API 0\n+\n+#endif\n+"}, {"sha": "96f4bb2f2a66de6f2964ebb4fb44e80c1554c067", "filename": "libffi/src/arm/ffitarget.h", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09/libffi%2Fsrc%2Farm%2Fffitarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09/libffi%2Fsrc%2Farm%2Fffitarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Farm%2Fffitarget.h?ref=c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09", "patch": "@@ -0,0 +1,47 @@\n+/* -----------------------------------------------------------------*-C-*-\n+   ffitarget.h - Copyright (c) 1996-2003  Red Hat, Inc.\n+   Target configuration macros for ARM.\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+\n+   ----------------------------------------------------------------------- */\n+\n+#ifndef LIBFFI_TARGET_H\n+#define LIBFFI_TARGET_H\n+\n+#ifndef LIBFFI_ASM\n+typedef unsigned long          ffi_arg;\n+typedef signed long            ffi_sarg;\n+\n+typedef enum ffi_abi {\n+  FFI_FIRST_ABI = 0,\n+  FFI_SYSV,\n+  FFI_DEFAULT_ABI = FFI_SYSV,\n+  FFI_LAST_ABI = FFI_DEFAULT_ABI + 1\n+} ffi_abi;\n+#endif\n+\n+/* ---- Definitions for closures ----------------------------------------- */\n+\n+#define FFI_CLOSURES 0\n+#define FFI_NATIVE_RAW_API 0\n+\n+#endif\n+"}, {"sha": "3b7865442d73b6e0a63511573704a9e692826520", "filename": "libffi/src/ia64/ffitarget.h", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09/libffi%2Fsrc%2Fia64%2Fffitarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09/libffi%2Fsrc%2Fia64%2Fffitarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fia64%2Fffitarget.h?ref=c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09", "patch": "@@ -0,0 +1,58 @@\n+/* -----------------------------------------------------------------*-C-*-\n+   ffitarget.h - Copyright (c) 1996-2003  Red Hat, Inc.\n+   Target configuration macros for IA-64.\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+\n+   ----------------------------------------------------------------------- */\n+\n+#ifndef LIBFFI_TARGET_H\n+#define LIBFFI_TARGET_H\n+\n+#ifndef LIBFFI_ASM\n+typedef unsigned long          ffi_arg;\n+typedef signed long            ffi_sarg;\n+\n+typedef enum ffi_abi {\n+  FFI_FIRST_ABI = 0,\n+  FFI_UNIX,   \t/* Linux and all Unix variants use the same conventions\t*/\n+  FFI_DEFAULT_ABI = FFI_UNIX,\n+  FFI_LAST_ABI = FFI_DEFAULT_ABI + 1\n+} ffi_abi;\n+#endif\n+\n+/* ---- Definitions for closures ----------------------------------------- */\n+\n+#define FFI_CLOSURES 1\n+#define FFI_TRAMPOLINE_SIZE 24  /* Really the following struct, which \t*/\n+\t\t\t\t/* can be interpreted as a C function\t*/\n+\t\t\t\t/* descriptor:\t\t\t\t*/\n+\n+#ifndef LIBFFI_ASM\n+struct ffi_ia64_trampoline_struct {\n+    void * code_pointer;\t/* Pointer to ffi_closure_UNIX\t*/\n+    void * fake_gp;\t\t/* Pointer to closure, installed as gp\t*/\n+    void * real_gp;\t\t/* Real gp value, reinstalled by \t*/\n+\t\t\t\t/* ffi_closure_UNIX.\t\t\t*/\n+};\n+#endif\n+\n+#endif\n+"}, {"sha": "aca7facc50a8db2c862e530d5d8e915679dd2b81", "filename": "libffi/src/m68k/ffitarget.h", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09/libffi%2Fsrc%2Fm68k%2Fffitarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09/libffi%2Fsrc%2Fm68k%2Fffitarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fm68k%2Fffitarget.h?ref=c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09", "patch": "@@ -0,0 +1,47 @@\n+/* -----------------------------------------------------------------*-C-*-\n+   ffitarget.h - Copyright (c) 1996-2003  Red Hat, Inc.\n+   Target configuration macros for Motorola 68K.\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+\n+   ----------------------------------------------------------------------- */\n+\n+#ifndef LIBFFI_TARGET_H\n+#define LIBFFI_TARGET_H\n+\n+#ifndef LIBFFI_ASM\n+typedef unsigned long          ffi_arg;\n+typedef signed long            ffi_sarg;\n+\n+typedef enum ffi_abi {\n+  FFI_FIRST_ABI = 0,\n+  FFI_SYSV,\n+  FFI_DEFAULT_ABI = FFI_SYSV,\n+  FFI_LAST_ABI = FFI_DEFAULT_ABI + 1\n+} ffi_abi;\n+#endif\n+\n+/* ---- Definitions for closures ----------------------------------------- */\n+\n+#define FFI_CLOSURES 0\n+#define FFI_NATIVE_RAW_API 0\n+\n+#endif\n+"}, {"sha": "f6b414313f1102ed111bf9a3be049b1a0bf9e68d", "filename": "libffi/src/mips/ffitarget.h", "status": "added", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09/libffi%2Fsrc%2Fmips%2Fffitarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09/libffi%2Fsrc%2Fmips%2Fffitarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fmips%2Fffitarget.h?ref=c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09", "patch": "@@ -0,0 +1,160 @@\n+/* -----------------------------------------------------------------*-C-*-\n+   ffitarget.h - Copyright (c) 1996-2003  Red Hat, Inc.\n+   Target configuration macros for MIPS.\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+\n+   ----------------------------------------------------------------------- */\n+\n+#ifndef LIBFFI_TARGET_H\n+#define LIBFFI_TARGET_H\n+\n+#ifndef LIBFFI_ASM\n+#include <sgidefs.h>\n+#endif\n+\n+#if !defined(_MIPS_SIM)\n+-- something is very wrong --\n+#else\n+#  if (_MIPS_SIM==_ABIN32 && defined(_ABIN32)) || (_MIPS_SIM==_ABI64 && defined(_ABI64))\n+#    define FFI_MIPS_N32\n+#  else\n+#    if _MIPS_SIM==_ABIO32 && defined(_ABIO32)\n+#      define FFI_MIPS_O32\n+#    else\n+-- this is an unsupported platform --\n+#    endif\n+#  endif\n+#endif\n+\n+#ifdef FFI_MIPS_O32\n+/* O32 stack frames have 32bit integer args */\n+#define FFI_SIZEOF_ARG         4\n+#else\n+/* N32 and N64 frames have 64bit integer args */\n+#define FFI_SIZEOF_ARG         8\n+#endif\n+\n+#define FFI_FLAG_BITS 2\n+\n+/* SGI's strange assembler requires that we multiply by 4 rather \n+   than shift left by FFI_FLAG_BITS */\n+\n+#define FFI_ARGS_D   FFI_TYPE_DOUBLE\n+#define FFI_ARGS_F   FFI_TYPE_FLOAT\n+#define FFI_ARGS_DD  FFI_TYPE_DOUBLE * 4 + FFI_TYPE_DOUBLE\n+#define FFI_ARGS_FF  FFI_TYPE_FLOAT * 4 +  FFI_TYPE_FLOAT\n+#define FFI_ARGS_FD  FFI_TYPE_DOUBLE * 4 + FFI_TYPE_FLOAT\n+#define FFI_ARGS_DF  FFI_TYPE_FLOAT * 4 + FFI_TYPE_DOUBLE\n+\n+/* Needed for N32 structure returns */\n+#define FFI_TYPE_SMALLSTRUCT  FFI_TYPE_UINT8\n+#define FFI_TYPE_SMALLSTRUCT2 FFI_TYPE_SINT8\n+\n+#if 0\n+/* The SGI assembler can't handle this.. */\n+#define FFI_TYPE_STRUCT_DD (( FFI_ARGS_DD ) << 4) + FFI_TYPE_STRUCT\n+/* (and so on) */\n+#else\n+/* ...so we calculate these by hand! */\n+#define FFI_TYPE_STRUCT_D      61\n+#define FFI_TYPE_STRUCT_F      45\n+#define FFI_TYPE_STRUCT_DD     253\n+#define FFI_TYPE_STRUCT_FF     173\n+#define FFI_TYPE_STRUCT_FD     237\n+#define FFI_TYPE_STRUCT_DF     189\n+#define FFI_TYPE_STRUCT_SMALL  93\n+#define FFI_TYPE_STRUCT_SMALL2 109\n+#endif\n+\n+#ifdef LIBFFI_ASM\n+#define v0 $2\n+#define v1 $3\n+#define a0 $4\n+#define a1 $5\n+#define a2 $6\n+#define a3 $7\n+#define a4 $8\t\t\n+#define a5 $9\t\t\n+#define a6 $10\t\t\n+#define a7 $11\t\t\n+#define t0 $8\n+#define t1 $9\n+#define t2 $10\n+#define t3 $11\n+#define t4 $12\t\t\n+#define t5 $13\n+#define t6 $14\t\n+#define t7 $15\n+#define t8 $24\n+#define t9 $25\n+#define ra $31\t\t\n+\n+#ifdef FFI_MIPS_O32\n+#define REG_L\tlw\n+#define REG_S\tsw\n+#define SUBU\tsubu\n+#define ADDU\taddu\n+#define SRL\tsrl\n+#define LI\tli\n+#else /* !FFI_MIPS_O32 */\n+#define REG_L\tld\n+#define REG_S\tsd\n+#define SUBU\tdsubu\n+#define ADDU\tdaddu\n+#define SRL\tdsrl\n+#define LI \tdli\n+#endif /* !FFI_MIPS_O32 */\n+#else /* !LIBFFI_ASM */\n+#ifdef FFI_MIPS_O32\n+/* O32 stack frames have 32bit integer args */\n+typedef UINT32                 ffi_arg;\n+typedef SINT32                 ffi_sarg;\n+#else\n+/* N32 and N64 frames have 64bit integer args */\n+typedef UINT64                 ffi_arg;\n+typedef SINT64                 ffi_sarg;\n+#endif\n+\n+typedef enum ffi_abi {\n+  FFI_FIRST_ABI = 0,\n+  FFI_O32,\n+  FFI_N32,\n+  FFI_N64,\n+\n+#ifdef FFI_MIPS_O32\n+  FFI_DEFAULT_ABI = FFI_O32,\n+#else\n+  FFI_DEFAULT_ABI = FFI_N32,\n+#endif\n+\n+  FFI_LAST_ABI = FFI_DEFAULT_ABI + 1\n+} ffi_abi;\n+\n+#define FFI_EXTRA_CIF_FIELDS unsigned rstruct_flag\n+#endif /* !LIBFFI_ASM */\n+\n+/* ---- Definitions for closures ----------------------------------------- */\n+\n+#define FFI_CLOSURES 0\n+#define FFI_NATIVE_RAW_API 0\n+\n+#endif\n+"}, {"sha": "101ea780c5640e59e9ae637da35b6c1e9d2aa9f8", "filename": "libffi/src/powerpc/ffitarget.h", "status": "added", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09/libffi%2Fsrc%2Fpowerpc%2Fffitarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09/libffi%2Fsrc%2Fpowerpc%2Fffitarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fffitarget.h?ref=c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09", "patch": "@@ -0,0 +1,91 @@\n+/* -----------------------------------------------------------------*-C-*-\n+   ffitarget.h - Copyright (c) 1996-2003  Red Hat, Inc.\n+   Target configuration macros for PowerPC.\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+\n+   ----------------------------------------------------------------------- */\n+\n+#ifndef LIBFFI_TARGET_H\n+#define LIBFFI_TARGET_H\n+\n+/* ---- System specific configurations ----------------------------------- */\n+\n+#if defined (POWERPC) && defined (__powerpc64__)\n+#define POWERPC64\n+#endif\n+\n+#ifndef LIBFFI_ASM\n+typedef unsigned long          ffi_arg;\n+typedef signed long            ffi_sarg;\n+\n+typedef enum ffi_abi {\n+  FFI_FIRST_ABI = 0,\n+\n+#ifdef POWERPC\n+  FFI_SYSV,\n+  FFI_GCC_SYSV,\n+  FFI_LINUX64,\n+# ifdef POWERPC64\n+  FFI_DEFAULT_ABI = FFI_LINUX64,\n+# else\n+  FFI_DEFAULT_ABI = FFI_GCC_SYSV,\n+# endif\n+#endif\n+\n+#ifdef POWERPC_AIX\n+  FFI_AIX,\n+  FFI_DARWIN,\n+  FFI_DEFAULT_ABI = FFI_AIX,\n+#endif\n+\n+#ifdef POWERPC_DARWIN\n+  FFI_AIX,\n+  FFI_DARWIN,\n+  FFI_DEFAULT_ABI = FFI_DARWIN,\n+#endif\n+\n+  FFI_LAST_ABI = FFI_DEFAULT_ABI + 1\n+} ffi_abi;\n+#endif\n+\n+/* ---- Definitions for closures ----------------------------------------- */\n+\n+#define FFI_CLOSURES 1\n+#define FFI_NATIVE_RAW_API 0\n+\n+#if defined(POWERPC64) || defined(POWERPC_AIX)\n+#define FFI_TRAMPOLINE_SIZE 24\n+#else /* POWERPC || POWERPC_AIX */\n+#define FFI_TRAMPOLINE_SIZE 40\n+#endif\n+\n+#ifndef LIBFFI_ASM\n+#if defined(POWERPC_DARWIN) || defined(POWERPC_AIX)\n+struct ffi_aix_trampoline_struct {\n+    void * code_pointer;\t/* Pointer to ffi_closure_ASM */\n+    void * toc;\t\t\t/* TOC */\n+    void * static_chain;\t/* Pointer to closure */\n+};\n+#endif\n+#endif\n+\n+#endif\n+"}, {"sha": "5ec8ade028bc2b9622776d59435e0cbd3815e975", "filename": "libffi/src/s390/ffitarget.h", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09/libffi%2Fsrc%2Fs390%2Fffitarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09/libffi%2Fsrc%2Fs390%2Fffitarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fs390%2Fffitarget.h?ref=c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09", "patch": "@@ -0,0 +1,59 @@\n+/* -----------------------------------------------------------------*-C-*-\n+   ffitarget.h - Copyright (c) 1996-2003  Red Hat, Inc.\n+   Target configuration macros for S390.\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+\n+   ----------------------------------------------------------------------- */\n+\n+#ifndef LIBFFI_TARGET_H\n+#define LIBFFI_TARGET_H\n+\n+#if defined (__s390x__)\n+#define S390X\n+#endif\n+\n+/* ---- System specific configurations ----------------------------------- */\n+\n+#ifndef LIBFFI_ASM\n+typedef unsigned long          ffi_arg;\n+typedef signed long            ffi_sarg;\n+\n+typedef enum ffi_abi {\n+  FFI_FIRST_ABI = 0,\n+  FFI_SYSV,\n+  FFI_DEFAULT_ABI = FFI_SYSV,\n+  FFI_LAST_ABI = FFI_DEFAULT_ABI + 1\n+} ffi_abi;\n+#endif\n+\n+\n+/* ---- Definitions for closures ----------------------------------------- */\n+\n+#define FFI_CLOSURES 1\n+#ifdef S390X\n+#define FFI_TRAMPOLINE_SIZE 32\n+#else\n+#define FFI_TRAMPOLINE_SIZE 16\n+#endif\n+#define FFI_NATIVE_RAW_API 0\n+\n+#endif\n+"}, {"sha": "f8492a1c06f29eebf255dec73c0a5be16eb52c1e", "filename": "libffi/src/sh/ffitarget.h", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09/libffi%2Fsrc%2Fsh%2Fffitarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09/libffi%2Fsrc%2Fsh%2Fffitarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fsh%2Fffitarget.h?ref=c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09", "patch": "@@ -0,0 +1,48 @@\n+/* -----------------------------------------------------------------*-C-*-\n+   ffitarget.h - Copyright (c) 1996-2003  Red Hat, Inc.\n+   Target configuration macros for SuperH.\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+\n+   ----------------------------------------------------------------------- */\n+\n+#ifndef LIBFFI_TARGET_H\n+#define LIBFFI_TARGET_H\n+\n+/* ---- Generic type definitions ----------------------------------------- */\n+\n+#ifndef LIBFFI_ASM\n+typedef unsigned long          ffi_arg;\n+typedef signed long            ffi_sarg;\n+\n+typedef enum ffi_abi {\n+  FFI_FIRST_ABI = 0,\n+  FFI_SYSV,\n+  FFI_DEFAULT_ABI = FFI_SYSV,\n+  FFI_LAST_ABI = FFI_DEFAULT_ABI + 1\n+} ffi_abi;\n+#endif\n+\n+#define FFI_CLOSURES 1\n+#define FFI_TRAMPOLINE_SIZE 16\n+#define FFI_NATIVE_RAW_API 0\n+\n+#endif\n+"}, {"sha": "a174d09b90d92bbc171529f0a21a20c7f67b5609", "filename": "libffi/src/sh64/ffitarget.h", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09/libffi%2Fsrc%2Fsh64%2Fffitarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09/libffi%2Fsrc%2Fsh64%2Fffitarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fsh64%2Fffitarget.h?ref=c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09", "patch": "@@ -0,0 +1,52 @@\n+/* -----------------------------------------------------------------*-C-*-\n+   ffitarget.h - Copyright (c) 1996-2003  Red Hat, Inc.\n+   Target configuration macros for SuperH - SHmedia.\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+\n+   ----------------------------------------------------------------------- */\n+\n+#ifndef LIBFFI_TARGET_H\n+#define LIBFFI_TARGET_H\n+\n+/* ---- Generic type definitions ----------------------------------------- */\n+\n+#ifndef LIBFFI_ASM\n+typedef unsigned long          ffi_arg;\n+typedef signed long            ffi_sarg;\n+\n+typedef enum ffi_abi {\n+  FFI_FIRST_ABI = 0,\n+  FFI_SYSV,\n+  FFI_DEFAULT_ABI = FFI_SYSV,\n+  FFI_LAST_ABI = FFI_DEFAULT_ABI + 1\n+} ffi_abi;\n+\n+#define FFI_EXTRA_CIF_FIELDS long long flags2\n+#endif\n+\n+/* ---- Definitions for closures ----------------------------------------- */\n+\n+#define FFI_CLOSURES 1\n+#define FFI_TRAMPOLINE_SIZE 32\n+#define FFI_NATIVE_RAW_API 0\n+\n+#endif\n+"}, {"sha": "f4514e55d781e9ff7dcf9b82ada930ba3df22565", "filename": "libffi/src/sparc/ffitarget.h", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09/libffi%2Fsrc%2Fsparc%2Fffitarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09/libffi%2Fsrc%2Fsparc%2Fffitarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fsparc%2Fffitarget.h?ref=c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09", "patch": "@@ -0,0 +1,65 @@\n+/* -----------------------------------------------------------------*-C-*-\n+   ffitarget.h - Copyright (c) 1996-2003  Red Hat, Inc.\n+   Target configuration macros for SPARC.\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+\n+   ----------------------------------------------------------------------- */\n+\n+#ifndef LIBFFI_TARGET_H\n+#define LIBFFI_TARGET_H\n+\n+/* ---- System specific configurations ----------------------------------- */\n+\n+#if defined(__arch64__) || defined(__sparcv9)\n+#define SPARC64\n+#endif\n+\n+#ifndef LIBFFI_ASM\n+typedef unsigned long          ffi_arg;\n+typedef signed long            ffi_sarg;\n+\n+typedef enum ffi_abi {\n+  FFI_FIRST_ABI = 0,\n+  FFI_V8,\n+  FFI_V8PLUS,\n+  FFI_V9,\n+#ifdef SPARC64\n+  FFI_DEFAULT_ABI = FFI_V9,\n+#else\n+  FFI_DEFAULT_ABI = FFI_V8,\n+#endif\n+  FFI_LAST_ABI = FFI_DEFAULT_ABI + 1\n+} ffi_abi;\n+#endif\n+\n+/* ---- Definitions for closures ----------------------------------------- */\n+\n+#define FFI_CLOSURES 1\n+#define FFI_NATIVE_RAW_API 0\n+\n+#ifdef SPARC64\n+#define FFI_TRAMPOLINE_SIZE 24\n+#else\n+#define FFI_TRAMPOLINE_SIZE 16\n+#endif\n+\n+#endif\n+"}, {"sha": "9500f40aa8013e5799943a87eeca52d031be64e0", "filename": "libffi/src/x86/ffitarget.h", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09/libffi%2Fsrc%2Fx86%2Fffitarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09/libffi%2Fsrc%2Fx86%2Fffitarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fx86%2Fffitarget.h?ref=c5a4ab3a8bff012a3c27a41da75dda37d3e0bc09", "patch": "@@ -0,0 +1,81 @@\n+/* -----------------------------------------------------------------*-C-*-\n+   ffitarget.h - Copyright (c) 1996-2003  Red Hat, Inc.\n+   Target configuration macros for x86 and x86-64.\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL CYGNUS SOLUTIONS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+\n+   ----------------------------------------------------------------------- */\n+\n+#ifndef LIBFFI_TARGET_H\n+#define LIBFFI_TARGET_H\n+\n+/* ---- System specific configurations ----------------------------------- */\n+\n+#if defined (X86_64) && defined (__i386__)\n+#undef X86_64\n+#define X86\n+#endif\n+\n+/* ---- Generic type definitions ----------------------------------------- */\n+\n+#ifndef LIBFFI_ASM\n+typedef unsigned long          ffi_arg;\n+typedef signed long            ffi_sarg;\n+\n+typedef enum ffi_abi {\n+  FFI_FIRST_ABI = 0,\n+\n+  /* ---- Intel x86 Win32 ---------- */\n+#ifdef X86_WIN32\n+  FFI_SYSV,\n+  FFI_STDCALL,\n+  /* TODO: Add fastcall support for the sake of completeness */\n+  FFI_DEFAULT_ABI = FFI_SYSV,\n+#endif\n+\n+  /* ---- Intel x86 and AMD x86-64 - */\n+#if !defined(X86_WIN32) && (defined(__i386__) || defined(__x86_64__))\n+  FFI_SYSV,\n+  FFI_UNIX64,   /* Unix variants all use the same ABI for x86-64  */\n+#ifdef __i386__\n+  FFI_DEFAULT_ABI = FFI_SYSV,\n+#else\n+  FFI_DEFAULT_ABI = FFI_UNIX64,\n+#endif\n+#endif\n+\n+  FFI_LAST_ABI = FFI_DEFAULT_ABI + 1\n+} ffi_abi;\n+#endif\n+\n+/* ---- Definitions for closures ----------------------------------------- */\n+\n+#define FFI_CLOSURES 1\n+\n+#ifdef X86_64\n+#define FFI_TRAMPOLINE_SIZE 24\n+#define FFI_NATIVE_RAW_API 0\n+#else\n+#define FFI_TRAMPOLINE_SIZE 10\n+#define FFI_NATIVE_RAW_API 1\t/* x86 has native raw api support */\n+#endif\n+\n+#endif\n+"}]}