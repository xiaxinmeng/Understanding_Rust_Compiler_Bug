{"sha": "ee01a467d1b18dfe0f3b8eedb7fa3507310294ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWUwMWE0NjdkMWIxOGRmZTBmM2I4ZWVkYjdmYTM1MDczMTAyOTRlZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-11-05T19:00:27Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-11-05T19:00:27Z"}, "message": "re PR target/45670 (Less efficient x86 addressing mode selection on 4.6, causes -Os size regression from 4.5)\n\n\tPR target/45670\n\t* expr.c (expand_expr_real_1) <case MEM_REF>: Use EXPAND_SUM\n\tinstead of EXPAND_NORMAL for base expansion.\n\n\t* gcc.target/i386/pr45670.c: New test.\n\nFrom-SVN: r166371", "tree": {"sha": "738de803a452c3df40962008b11ae92c27248b9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/738de803a452c3df40962008b11ae92c27248b9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee01a467d1b18dfe0f3b8eedb7fa3507310294ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee01a467d1b18dfe0f3b8eedb7fa3507310294ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee01a467d1b18dfe0f3b8eedb7fa3507310294ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee01a467d1b18dfe0f3b8eedb7fa3507310294ed/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "444d6efeb6561816dcf69fcf0202597231eb88a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/444d6efeb6561816dcf69fcf0202597231eb88a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/444d6efeb6561816dcf69fcf0202597231eb88a0"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "80f2ee31a6c8ab9596ea89d3eaf70ee146def9f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee01a467d1b18dfe0f3b8eedb7fa3507310294ed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee01a467d1b18dfe0f3b8eedb7fa3507310294ed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ee01a467d1b18dfe0f3b8eedb7fa3507310294ed", "patch": "@@ -1,3 +1,9 @@\n+2010-11-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/45670\n+\t* expr.c (expand_expr_real_1) <case MEM_REF>: Use EXPAND_SUM\n+\tinstead of EXPAND_NORMAL for base expansion.\n+\n 2010-11-05  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config.gcc: Support --with-fpmath=avx for x86."}, {"sha": "cb73f01f28cb8db34c1442f2fceff0d32e432d4a", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee01a467d1b18dfe0f3b8eedb7fa3507310294ed/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee01a467d1b18dfe0f3b8eedb7fa3507310294ed/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=ee01a467d1b18dfe0f3b8eedb7fa3507310294ed", "patch": "@@ -8754,7 +8754,7 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n \t  }\n \talign = MAX (TYPE_ALIGN (TREE_TYPE (exp)),\n \t\t     get_object_alignment (exp, BIGGEST_ALIGNMENT));\n-\top0 = expand_expr (base, NULL_RTX, VOIDmode, EXPAND_NORMAL);\n+\top0 = expand_expr (base, NULL_RTX, VOIDmode, EXPAND_SUM);\n \top0 = convert_memory_address_addr_space (address_mode, op0, as);\n \tif (!integer_zerop (TREE_OPERAND (exp, 1)))\n \t  {"}, {"sha": "debdd5467a3ae765f384b9db9c2e98109002ef22", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee01a467d1b18dfe0f3b8eedb7fa3507310294ed/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee01a467d1b18dfe0f3b8eedb7fa3507310294ed/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ee01a467d1b18dfe0f3b8eedb7fa3507310294ed", "patch": "@@ -1,3 +1,8 @@\n+2010-11-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/45670\n+\t* gcc.target/i386/pr45670.c: New test.\n+\n 2010-11-05  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/45451"}, {"sha": "c50c4ba14210ab0a612262ccf546a76b65f8de63", "filename": "gcc/testsuite/gcc.target/i386/pr45670.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee01a467d1b18dfe0f3b8eedb7fa3507310294ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45670.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee01a467d1b18dfe0f3b8eedb7fa3507310294ed/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45670.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr45670.c?ref=ee01a467d1b18dfe0f3b8eedb7fa3507310294ed", "patch": "@@ -0,0 +1,23 @@\n+/* PR target/45670 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Os -mtune=generic\" } */\n+\n+struct S\n+{\n+  float *buf;\n+  int size;\n+};\n+\n+void\n+foo (struct S *s)\n+{\n+  int i;\n+  for (i = 0; i < s->size; ++i)\n+    s->buf[i] = 0;\n+}\n+\n+/* Ensure we don't generate\n+   lea (reg1,4),reg2; add (reg3),reg2; movl $0, (reg2)\n+   instead of smaller\n+   mov (reg3),reg2; movl $0, (reg2,reg1,4)  */\n+/* { dg-final { scan-assembler-not \"lea\\[lq\\]\" } } */"}]}