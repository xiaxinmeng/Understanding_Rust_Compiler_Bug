{"sha": "bd11db39e8224efc8516f3a9db15ba00ba90de45", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmQxMWRiMzllODIyNGVmYzg1MTZmM2E5ZGIxNWJhMDBiYTkwZGU0NQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2002-07-29T23:26:00Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2002-07-29T23:26:00Z"}, "message": "cpu_limits.h (__glibcpp_long_bits): Define.\n\n\t* config/cpu/powerpc/cpu_limits.h (__glibcpp_long_bits): Define.\n\t* configure.target (cpu_include_dir): Use cpu/powerpc for powerpc64.\n\t* config/cpu/powerpc/atomicity.h (__always_swap): Remove.\n\t(__test_and_set): Remove.\n\t(_STWCX): Define and use.\n\nFrom-SVN: r55854", "tree": {"sha": "dadb1fbd8edafb822979e3819450b29feeb6a5f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dadb1fbd8edafb822979e3819450b29feeb6a5f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bd11db39e8224efc8516f3a9db15ba00ba90de45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd11db39e8224efc8516f3a9db15ba00ba90de45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd11db39e8224efc8516f3a9db15ba00ba90de45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd11db39e8224efc8516f3a9db15ba00ba90de45/comments", "author": null, "committer": null, "parents": [{"sha": "4307be72fc812b00f96291c655e1fad29ef8352f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4307be72fc812b00f96291c655e1fad29ef8352f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4307be72fc812b00f96291c655e1fad29ef8352f"}], "stats": {"total": 64, "additions": 21, "deletions": 43}, "files": [{"sha": "23cd2c47210757dd5045104af2185fcdbd7e6f64", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd11db39e8224efc8516f3a9db15ba00ba90de45/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd11db39e8224efc8516f3a9db15ba00ba90de45/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=bd11db39e8224efc8516f3a9db15ba00ba90de45", "patch": "@@ -1,3 +1,11 @@\n+2002-07-29  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* config/cpu/powerpc/cpu_limits.h (__glibcpp_long_bits): Define.\n+\t* configure.target (cpu_include_dir): Use cpu/powerpc for powerpc64.\n+\t* config/cpu/powerpc/atomicity.h (__always_swap): Remove.\n+\t(__test_and_set): Remove.\n+\t(_STWCX): Define and use.\n+\n 2002-07-26  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* libsupc++/new (placement delete):  Remove unused paramater names."}, {"sha": "b5370fcc642cbf1d5caf567ad4a0d7bc8e91b933", "filename": "libstdc++-v3/config/cpu/powerpc/atomicity.h", "status": "modified", "additions": 8, "deletions": 42, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd11db39e8224efc8516f3a9db15ba00ba90de45/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fatomicity.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd11db39e8224efc8516f3a9db15ba00ba90de45/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fatomicity.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fatomicity.h?ref=bd11db39e8224efc8516f3a9db15ba00ba90de45", "patch": "@@ -30,6 +30,12 @@\n #ifndef _BITS_ATOMICITY_H\n #define _BITS_ATOMICITY_H\t1\n \n+#ifdef __PPC405__\n+#define _STWCX \"sync \\n\\tstwcx. \"\n+#else\n+#define _STWCX \"stwcx. \"\n+#endif\n+\n typedef int _Atomic_word;\n \n static inline _Atomic_word\n@@ -42,7 +48,7 @@ __exchange_and_add (volatile _Atomic_word* __mem, int __val)\n \t\"0:\\t\"\n \t\"lwarx    %0,0,%2 \\n\\t\"\n \t\"add%I3   %1,%0,%3 \\n\\t\"\n-\t\"stwcx.   %1,0,%2 \\n\\t\"\n+\t_STWCX \"  %1,0,%2 \\n\\t\"\n \t\"bne-     0b \\n\\t\"\n \t\"/* End exchange & add */\"\n \t: \"=&b\"(__res), \"=&r\"(__tmp)\n@@ -61,52 +67,12 @@ __atomic_add (volatile _Atomic_word *__mem, int __val)\n \t\"0:\\t\"\n \t\"lwarx    %0,0,%1 \\n\\t\"\n \t\"add%I2   %0,%0,%2 \\n\\t\"\n-\t\"stwcx.   %0,0,%1 \\n\\t\"\n+\t_STWCX \"  %0,0,%1 \\n\\t\"\n \t\"bne-     0b \\n\\t\"\n \t\"/* End atomic add */\"\n \t: \"=&b\"(__tmp)\n \t: \"r\" (__mem), \"Ir\"(__val)\n \t: \"cr0\", \"memory\");\n }\n \n-static inline long\n-__attribute__ ((__unused__))\n-__always_swap (volatile long *__p, long int __newval)\n-{\n-  long __res;\n-  __asm__ __volatile__ (\n-\t\"/* Inline always swap */\\n\"\n-\t\"0:\\t\"\n-\t\"lwarx    %0,0,%1 \\n\\t\"\n-\t\"stwcx.   %2,0,%1 \\n\\t\"\n-\t\"bne-     0b \\n\\t\"\n-\t\"/* End always swap */\"\n-\t: \"=&r\"(__res)\n-\t: \"r\"(__p), \"r\"(__newval)\n-\t: \"cr0\", \"memory\");\n-  return __res;\n-}\n-\n-static inline int\n-__attribute__ ((__unused__))\n-__test_and_set (volatile long *__p, long int __newval)\n-{\n-  int __res;\n-  __asm__ __volatile__ (\n-\t\"/* Inline test & set */\\n\"\n-\t\"0:\\t\"\n-\t\"lwarx    %0,0,%1 \\n\\t\"\n-\t\"cmpwi    %0,0 \\n\\t\"\n-\t\"bne-     1f \\n\\t\"\n-\t\"stwcx.   %2,0,%1 \\n\\t\"\n-\t\"bne-     0b \\n\"\n-\t\"1:\\n\\t\"\n-\t\"/* End test & set */\"\n-\t: \"=&r\"(__res)\n-\t: \"r\"(__p), \"r\"(__newval)\n-\t: \"cr0\", \"memory\");\n-  return __res;\n-}\n-\n #endif /* atomicity.h */\n-"}, {"sha": "42cffa91441d7ccf0cece06053002dc28657e42a", "filename": "libstdc++-v3/config/cpu/powerpc/cpu_limits.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd11db39e8224efc8516f3a9db15ba00ba90de45/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fcpu_limits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd11db39e8224efc8516f3a9db15ba00ba90de45/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fcpu_limits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fcpu%2Fpowerpc%2Fcpu_limits.h?ref=bd11db39e8224efc8516f3a9db15ba00ba90de45", "patch": "@@ -28,6 +28,10 @@\n #ifndef _GLIBCPP_CPU_LIMITS\n #define _GLIBCPP_CPU_LIMITS 1\n \n+#ifdef __powerpc64__\n+#define __glibcpp_long_bits 64\n+#endif\n+\n #ifndef __LONG_DOUBLE_128__\n #define __glibcpp_long_double_bits 64\n #endif"}, {"sha": "e202185e57a3a0e06093c8294958992172c10a07", "filename": "libstdc++-v3/configure.target", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bd11db39e8224efc8516f3a9db15ba00ba90de45/libstdc%2B%2B-v3%2Fconfigure.target", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bd11db39e8224efc8516f3a9db15ba00ba90de45/libstdc%2B%2B-v3%2Fconfigure.target", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.target?ref=bd11db39e8224efc8516f3a9db15ba00ba90de45", "patch": "@@ -85,7 +85,7 @@ case \"${target_cpu}\" in\n   mmix)\n     ATOMICITYH=\"cpu/generic\"\n     ;;\n-  powerpc | rs6000)\n+  powerpc* | rs6000)\n     cpu_include_dir=\"cpu/powerpc\"\n     ;;\n   s390 | s390x)"}]}