{"sha": "7cd4f74e3d485202a1433d487adbce43d271ebe5", "node_id": "C_kwDOANBUbNoAKDdjZDRmNzRlM2Q0ODUyMDJhMTQzM2Q0ODdhZGJjZTQzZDI3MWViZTU", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-03-14T16:28:54Z"}, "committer": {"name": "CohenArthur", "email": "arthur.cohen@embecosm.com", "date": "2023-03-15T10:34:27Z"}, "message": "gccrs: Rename compiler proper\n\nChangeLog:\n\n\t* README.md (process): Rename `rust1` to `crab1` in examples.\n\ngcc/rust/ChangeLog:\n\n\t* Make-lang.in: Rename `rust1` to `crab1`.\n\t* config-lang.in: Likewise.\n\t* lang-specs.h: Likewise.\n\t* rustspec.cc (lang_specific_driver): Likewise.", "tree": {"sha": "68fc924738fe6aab4936b96cb833ea9b4e132f1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68fc924738fe6aab4936b96cb833ea9b4e132f1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7cd4f74e3d485202a1433d487adbce43d271ebe5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cd4f74e3d485202a1433d487adbce43d271ebe5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cd4f74e3d485202a1433d487adbce43d271ebe5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cd4f74e3d485202a1433d487adbce43d271ebe5/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ff171adfdca213d285d56a1beec23c81bc4bcdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ff171adfdca213d285d56a1beec23c81bc4bcdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ff171adfdca213d285d56a1beec23c81bc4bcdb"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "bc977c2f577908158616dfc0dfad26f0e6bd701f", "filename": "README.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cd4f74e3d485202a1433d487adbce43d271ebe5/README.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cd4f74e3d485202a1433d487adbce43d271ebe5/README.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/README.md?ref=7cd4f74e3d485202a1433d487adbce43d271ebe5", "patch": "@@ -80,7 +80,7 @@ $ make\n Running the compiler itself without make install we can simply invoke the compiler proper:\n \n ```bash\n-$ ./gcc/rust1 test.rs -frust-debug -frust-dump-parse -Warray-bounds -dumpbase test.rs -mtune=generic -march=x86-64 -O0 -version -fdump-tree-gimple -o test.s -L/lib/x86_64-linux-gnu -L/lib/../lib64 -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib64 -frust-incomplete-and-experimental-compiler-do-not-use\n+$ ./gcc/crab1 test.rs -frust-debug -frust-dump-parse -Warray-bounds -dumpbase test.rs -mtune=generic -march=x86-64 -O0 -version -fdump-tree-gimple -o test.s -L/lib/x86_64-linux-gnu -L/lib/../lib64 -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib64 -frust-incomplete-and-experimental-compiler-do-not-use\n ```\n \n To invoke the compiler driver (gccrs) we need to:\n@@ -147,20 +147,20 @@ $ ../gccrs/configure --prefix=$HOME/gccrs-install --disable-bootstrap --enable-m\n ```\n \n ### GDB\n-You can directly invoke `gdb` on the `rust1` compiler process (you can find the\n+You can directly invoke `gdb` on the `crab1` compiler process (you can find the\n exact command adding `--verbose` to your `gccrs` invocation):\n ```bash\n $ gccrs test.rs -O0 -S -o arithmetic_expressions1.s --verbose\n ...\n- /some/path/../../rust1 test.rs -quiet -dumpbase arithmetic_expressions1.rs -dumpbase-ext .rs\n+ /some/path/../../crab1 test.rs -quiet -dumpbase arithmetic_expressions1.rs -dumpbase-ext .rs\n  -mtune=generic -march=x86-64 -O0 -w -version -fdiagnostics-color=never -fno-diagnostics-show-caret -fno-diagnostics-show-line-numbers -fdiagnostics-urls=never -fdiagnostics-path-format=separate-events -o test.s -L/lib/x86_64-linux-gnu -L/lib/../lib64 -L/usr/lib/x86_64-linux-gnu\n ...\n-$ gdb --args  /some/path/../../rust1 test.rs -quiet -dumpbase arithmetic_expressions1.rs -dumpbase-ext .rs\n+$ gdb --args  /some/path/../../crab1 test.rs -quiet -dumpbase arithmetic_expressions1.rs -dumpbase-ext .rs\n  -mtune=generic -march=x86-64 -O0 -w -version -fdiagnostics-color=never -fno-diagnostics-show-caret -fno-diagnostics-show-line-numbers -fdiagnostics-urls=never -fdiagnostics-path-format=separate-events -o test.s -L/lib/x86_64-linux-gnu -L/lib/../lib64 -L/usr/lib/x86_64-linux-gnu\n ```\n \n Or simply add the `-wrapper gdb,--args` option.\n-This will call each subcommand in `gdb` and you simply have to break/debug in `rust1`:\n+This will call each subcommand in `gdb` and you simply have to break/debug in `crab1`:\n ```bash\n $ gccrs test.rs -O0 -S -o arithmetic_expressions1.s -wrapper gdb,--args\n ```"}, {"sha": "f7648fe108720681f97aea1223238b88e2f9bff0", "filename": "gcc/rust/Make-lang.in", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cd4f74e3d485202a1433d487adbce43d271ebe5/gcc%2Frust%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cd4f74e3d485202a1433d487adbce43d271ebe5/gcc%2Frust%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2FMake-lang.in?ref=7cd4f74e3d485202a1433d487adbce43d271ebe5", "patch": "@@ -33,9 +33,9 @@ GCCRS_INSTALL_NAME := $(shell echo gccrs|sed '$(program_transform_name)')\n GCCRS_TARGET_INSTALL_NAME := $(target_noncanonical)-$(shell echo gccrs|sed '$(program_transform_name)')\n \n # Define the names for selecting rust in LANGUAGES.\n-rust: rust1$(exeext)\n+rust: crab1$(exeext)\n \n-rust.serial = rust1$(exeext)\n+rust.serial = crab1$(exeext)\n \n # Tell GNU make to ignore files by these names if they exist.\n .PHONY: rust\n@@ -177,8 +177,8 @@ RUST_ALL_OBJS = $(GRS_OBJS) $(RUST_TARGET_OBJS)\n \n rust_OBJS = $(RUST_ALL_OBJS) rust/rustspec.o\n \n-# The compiler itself is called rust1 (formerly grs1)\n-rust1$(exeext): $(RUST_ALL_OBJS) attribs.o $(BACKEND) $(LIBDEPS) $(rust.prev)\n+# The compiler itself is called crab1\n+crab1$(exeext): $(RUST_ALL_OBJS) attribs.o $(BACKEND) $(LIBDEPS) $(rust.prev)\n \t@$(call LINK_PROGRESS,$(INDEX.rust),start)\n \t+$(LLINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ \\\n \t      $(RUST_ALL_OBJS) attribs.o $(BACKEND) $(LIBS) $(BACKENDLIBS)\n@@ -285,7 +285,7 @@ rust.uninstall:\n selftest-rust: s-selftest-rust\n \n RUST_SELFTEST_FLAGS = -xrust -frust-incomplete-and-experimental-compiler-do-not-use $(SELFTEST_FLAGS)\n-RUST_SELFTEST_DEPS = rust1$(exeext) $(SELFTEST_DEPS)\n+RUST_SELFTEST_DEPS = crab1$(exeext) $(SELFTEST_DEPS)\n \n # Run the rust selftests\n s-selftest-rust: $(RUST_SELFTEST_DEPS)"}, {"sha": "b1e3a9d323ddcdf61e0a4db67f276ce934ade83c", "filename": "gcc/rust/config-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cd4f74e3d485202a1433d487adbce43d271ebe5/gcc%2Frust%2Fconfig-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cd4f74e3d485202a1433d487adbce43d271ebe5/gcc%2Frust%2Fconfig-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fconfig-lang.in?ref=7cd4f74e3d485202a1433d487adbce43d271ebe5", "patch": "@@ -25,7 +25,7 @@\n # compilers\t- value to add to $(COMPILERS)\n \n language=\"rust\"\n-compilers=\"rust1\\$(exeext)\"\n+compilers=\"crab1\\$(exeext)\"\n \n build_by_default=\"no\"\n "}, {"sha": "18a5a4348454bc680b3b394c7363a25fdd17ec79", "filename": "gcc/rust/lang-specs.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cd4f74e3d485202a1433d487adbce43d271ebe5/gcc%2Frust%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cd4f74e3d485202a1433d487adbce43d271ebe5/gcc%2Frust%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flang-specs.h?ref=7cd4f74e3d485202a1433d487adbce43d271ebe5", "patch": "@@ -22,5 +22,5 @@\n \n {\".rs\", \"@rust\", 0, 1, 0},\n   {\"@rust\",\n-   \"rust1 %i %(cc1_options) %{I*} %{L*} %D %{!fsyntax-only:%(invoke_as)}\", 0, 1,\n+   \"crab1 %i %(cc1_options) %{I*} %{L*} %D %{!fsyntax-only:%(invoke_as)}\", 0, 1,\n    0},"}, {"sha": "68974f22d8692a7dbd59cdad632094af025e64a7", "filename": "gcc/rust/rustspec.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cd4f74e3d485202a1433d487adbce43d271ebe5/gcc%2Frust%2Frustspec.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cd4f74e3d485202a1433d487adbce43d271ebe5/gcc%2Frust%2Frustspec.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frustspec.cc?ref=7cd4f74e3d485202a1433d487adbce43d271ebe5", "patch": "@@ -159,8 +159,8 @@ lang_specific_driver (struct cl_decoded_option **in_decoded_options,\n     }\n \n   /* If we didn't see a -o option, add one.  This is because we need\n-     the driver to pass all .rs files to rust1.  Without a -o option the\n-     driver will invoke rust1 separately for each input file.  FIXME:\n+     the driver to pass all .rs files to crab1.  Without a -o option the\n+     driver will invoke crab1 separately for each input file.  FIXME:\n      This should probably use some other interface to force the driver\n      to set combine_inputs.  */\n   if (!saw_opt_o)"}]}