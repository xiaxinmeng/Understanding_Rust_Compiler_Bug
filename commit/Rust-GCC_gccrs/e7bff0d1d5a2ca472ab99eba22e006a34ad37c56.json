{"sha": "e7bff0d1d5a2ca472ab99eba22e006a34ad37c56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdiZmYwZDFkNWEyY2E0NzJhYjk5ZWJhMjJlMDA2YTM0YWQzN2M1Ng==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2008-05-18T11:10:11Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2008-05-18T11:10:11Z"}, "message": "re PR fortran/36251 (PUBLIC and PRIVATE abuse)\n\n2008-05-18  Steven G. Kargl  <kargls@comcast.net>\n\n        PR fortran/36251\n        * symbol.c (check_conflict): Issue errors for abuse of PUBLIC,\n        * PRIVATE,\n        and BIND(C).\n        * resolve.c (gfc_verify_binding_labels): Fix NULL pointer\n        * dereference.\n\n2008-05-18  Steven G. Kargl  <kargls@comcast.net>\n\n        PR fortran/36251\n        gfortran.dg/public_private_module.f90: new test.\n        gfortran.dg/bind_c_module.f90: new test.\n\nFrom-SVN: r135495", "tree": {"sha": "b5aae94d05b87de03144816296f9b337ec01f650", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5aae94d05b87de03144816296f9b337ec01f650"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7bff0d1d5a2ca472ab99eba22e006a34ad37c56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7bff0d1d5a2ca472ab99eba22e006a34ad37c56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7bff0d1d5a2ca472ab99eba22e006a34ad37c56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7bff0d1d5a2ca472ab99eba22e006a34ad37c56/comments", "author": null, "committer": null, "parents": [{"sha": "e29cc9b40265813f66eaf8a0e783d7a8a0c5037d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e29cc9b40265813f66eaf8a0e783d7a8a0c5037d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e29cc9b40265813f66eaf8a0e783d7a8a0c5037d"}], "stats": {"total": 84, "additions": 77, "deletions": 7}, "files": [{"sha": "35c564c48488a498d21791e6cf11aa374c6f0807", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7bff0d1d5a2ca472ab99eba22e006a34ad37c56/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7bff0d1d5a2ca472ab99eba22e006a34ad37c56/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e7bff0d1d5a2ca472ab99eba22e006a34ad37c56", "patch": "@@ -1,11 +1,18 @@\n-2008-05-16  Tobias Burnus  <burnus@net-b.de>\n+2008-05-18  Steven G. Kargl  <kargls@comcast.net>\n+\n+\tPR fortran/36251\n+\t* symbol.c (check_conflict): Issue errors for abuse of PUBLIC, PRIVATE,\n+\tand BIND(C).\n+\t* resolve.c (gfc_verify_binding_labels): Fix NULL pointer dereference.\n+\n+2008-05-17  Tobias Burnus  <burnus@net-b.de>\n \n \t* intrinsic.texi: Correct description of GET_COMMAND_ARGUMENT\n \tand GET_ENVIRONMENT_VARIABLE; fix keyword= name for GETENV,\n \tGETLOG, GMTIME, HOSTNM, IRAND, ITIME, KILL.\n \tMove LOG_GAMMA after LOG10.\n \n-2008-05-16  Tobias Burnus  <burnus@net-b.de>\n+2008-05-17  Tobias Burnus  <burnus@net-b.de>\n \n \t* intrinsic.c (add_functions): Change FLUSH(C) to FLUSH(UNIT).\n \t* intrinsic.texi: Change INTEGER(*) to INTEGER; fix keyword= name for"}, {"sha": "dd251af37b612d543cab2a32701cb4499e88d477", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7bff0d1d5a2ca472ab99eba22e006a34ad37c56/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7bff0d1d5a2ca472ab99eba22e006a34ad37c56/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=e7bff0d1d5a2ca472ab99eba22e006a34ad37c56", "patch": "@@ -6612,10 +6612,10 @@ gfc_verify_binding_labels (gfc_symbol *sym)\n               has_error = 1;\n             }\n           else if (sym->attr.contained == 0 \n-                   && (sym->attr.if_source == IFSRC_UNKNOWN))\n-            if ((sym->attr.use_assoc \n-                 && (strcmp (bind_c_sym->mod_name, sym->module) != 0)) \n-                || sym->attr.use_assoc == 0)\n+                   && sym->attr.if_source == IFSRC_UNKNOWN)\n+\t    if ((sym->attr.use_assoc && bind_c_sym->mod_name\n+\t\t && strcmp (bind_c_sym->mod_name, sym->module) != 0) \n+\t\t|| sym->attr.use_assoc == 0)\n               {\n                 gfc_error (\"Binding label '%s' at %L collides with global \"\n                            \"entity '%s' at %L\", sym->binding_label,"}, {"sha": "431b6513ce0e58a7b44aa2b566abe757c6efa908", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7bff0d1d5a2ca472ab99eba22e006a34ad37c56/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7bff0d1d5a2ca472ab99eba22e006a34ad37c56/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=e7bff0d1d5a2ca472ab99eba22e006a34ad37c56", "patch": "@@ -595,6 +595,21 @@ check_conflict (symbol_attribute *attr, const char *name, locus *where)\n       conf2 (function);\n       conf2 (subroutine);\n       conf2 (threadprivate);\n+\n+      if (attr->access == ACCESS_PUBLIC || attr->access == ACCESS_PRIVATE)\n+\t{\n+\t  a2 = attr->access == ACCESS_PUBLIC ? public : private;\n+\t  gfc_error (\"%s attribute applied to %s %s at %L\", a2, a1,\n+\t    name, where);\n+\t  return FAILURE;\n+\t}\n+\n+      if (attr->is_bind_c)\n+\t{\n+\t  gfc_error_now (\"BIND(C) applied to %s %s at %L\", a1, name, where);\n+\t  return FAILURE;\n+\t}\n+\n       break;\n \n     case FL_VARIABLE:\n@@ -3625,7 +3640,8 @@ add_proc_interface (gfc_symbol *sym, ifsrc source,\n    declaration statement (see match_proc_decl()) to create the formal\n    args based on the args of a given named interface.  */\n \n-void copy_formal_args (gfc_symbol *dest, gfc_symbol *src)\n+void\n+copy_formal_args (gfc_symbol *dest, gfc_symbol *src)\n {\n   gfc_formal_arglist *head = NULL;\n   gfc_formal_arglist *tail = NULL;"}, {"sha": "d7ad2ec1bd36942ec473d61c09b9826a2008a07e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7bff0d1d5a2ca472ab99eba22e006a34ad37c56/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7bff0d1d5a2ca472ab99eba22e006a34ad37c56/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e7bff0d1d5a2ca472ab99eba22e006a34ad37c56", "patch": "@@ -1,3 +1,9 @@\n+2008-05-18  Steven G. Kargl  <kargls@comcast.net>\n+\n+\tPR fortran/36251\n+\tgfortran.dg/public_private_module.f90: new test.\n+\tgfortran.dg/bind_c_module.f90: new test.\n+\n 2008-05-17  Xinliang David Li <davidxl@google.com>\n \n \t* gcc.dg/cdce1.c: New test"}, {"sha": "58aba2b345b636044bfec089b72a41a09894d483", "filename": "gcc/testsuite/gfortran.dg/bind_c_module.f90", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7bff0d1d5a2ca472ab99eba22e006a34ad37c56/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_module.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7bff0d1d5a2ca472ab99eba22e006a34ad37c56/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_module.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_module.f90?ref=e7bff0d1d5a2ca472ab99eba22e006a34ad37c56", "patch": "@@ -0,0 +1,22 @@\n+! { dg-do compile }\n+! See PR fortran/36251.\n+module a\n+  implicit none\n+  integer :: i = 42\n+end module a\n+\n+! Causes ICE\n+module b\n+  use iso_c_binding\n+  use a\n+  implicit none\n+  bind(c) :: a  ! { dg-error \"attribute applied to\" }\n+end module b\n+\n+! Causes ICE\n+module d\n+  use a\n+  implicit none\n+  bind(c) :: a  ! { dg-error \"attribute applied to\" }\n+end module d\n+! { dg-final { cleanup-modules \"a\" } }"}, {"sha": "ca1ab4891f47e8e8e02e857730d08490bce449f9", "filename": "gcc/testsuite/gfortran.dg/public_private_module.f90", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7bff0d1d5a2ca472ab99eba22e006a34ad37c56/gcc%2Ftestsuite%2Fgfortran.dg%2Fpublic_private_module.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7bff0d1d5a2ca472ab99eba22e006a34ad37c56/gcc%2Ftestsuite%2Fgfortran.dg%2Fpublic_private_module.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpublic_private_module.f90?ref=e7bff0d1d5a2ca472ab99eba22e006a34ad37c56", "patch": "@@ -0,0 +1,19 @@\n+! { dg-do compile }\n+! See PR fortran/36251.\n+module a\n+  implicit none\n+  integer :: i = 42\n+end module a\n+\n+module b\n+  use a\n+  implicit none\n+  public a  ! { dg-warning \"attribute applied to\" }\n+end module b\n+\n+module d\n+  use a\n+  implicit none\n+  private a  ! { dg-warning \"attribute applied to\" }\n+end module d\n+! { dg-final { cleanup-modules \"a\" } }"}]}