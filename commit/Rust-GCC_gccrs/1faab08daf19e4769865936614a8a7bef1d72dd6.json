{"sha": "1faab08daf19e4769865936614a8a7bef1d72dd6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZhYWIwOGRhZjE5ZTQ3Njk4NjU5MzY2MTRhOGE3YmVmMWQ3MmRkNg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2010-09-15T15:59:27Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2010-09-15T15:59:27Z"}, "message": "re PR middle-end/45644 (450.soplex in SPEC CPU 2006 is miscompiled)\n\n2010-09-15  Martin Jambor  <mjambor@suse.cz>\n\n\tPR middle-end/45644\n\t* tree-sra.c (create_access): Check for bit-fields directly.\n\n\t* testsuite/gcc.dg/ipa/pr45644.c: New test.\n\nFrom-SVN: r164313", "tree": {"sha": "ad4db072914651e2914d165b7897ac2cf6084962", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad4db072914651e2914d165b7897ac2cf6084962"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1faab08daf19e4769865936614a8a7bef1d72dd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1faab08daf19e4769865936614a8a7bef1d72dd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1faab08daf19e4769865936614a8a7bef1d72dd6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1faab08daf19e4769865936614a8a7bef1d72dd6/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cc99c5fefc057335b9ed6928d997c49bf3ff6575", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc99c5fefc057335b9ed6928d997c49bf3ff6575", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc99c5fefc057335b9ed6928d997c49bf3ff6575"}], "stats": {"total": 52, "additions": 49, "deletions": 3}, "files": [{"sha": "20a608fe51b9c6b9fcef2fcff3f3062460970dfd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1faab08daf19e4769865936614a8a7bef1d72dd6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1faab08daf19e4769865936614a8a7bef1d72dd6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1faab08daf19e4769865936614a8a7bef1d72dd6", "patch": "@@ -1,3 +1,8 @@\n+2010-09-15  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR middle-end/45644\n+\t* tree-sra.c (create_access): Check for bit-fields directly.\n+\n 2010-09-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/45633"}, {"sha": "d03b01751e927cc713c9244ae74abc1c7734e677", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1faab08daf19e4769865936614a8a7bef1d72dd6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1faab08daf19e4769865936614a8a7bef1d72dd6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1faab08daf19e4769865936614a8a7bef1d72dd6", "patch": "@@ -1,3 +1,8 @@\n+2010-09-15  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR middle-end/45644\n+\t* gcc.dg/ipa/pr45644.c: New test.\n+\n 2010-09-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/45633"}, {"sha": "3f61b8b41273a08b4d2993a59ee0acefb4586825", "filename": "gcc/testsuite/gcc.dg/ipa/pr45644.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1faab08daf19e4769865936614a8a7bef1d72dd6/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr45644.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1faab08daf19e4769865936614a8a7bef1d72dd6/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr45644.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpr45644.c?ref=1faab08daf19e4769865936614a8a7bef1d72dd6", "patch": "@@ -0,0 +1,35 @@\n+/* Verify that we do not IPA-SRA bitfields.  */\n+/* { dg-do run } */\n+/* { dg-options \"-O2\"  } */\n+\n+extern void abort (void);\n+\n+struct S\n+{\n+  int j : 8;\n+  int i : 24;\n+  int l;\n+};\n+\n+static int __attribute__((noinline)) foo (struct S *s)\n+{\n+  int z = s->i;\n+  if (z != 777)\n+    abort ();\n+  return 0;\n+}\n+\n+int __attribute__((noinline)) bar (struct S *s)\n+{\n+  return foo (s);\n+}\n+\n+int main (int argc, char *argv[])\n+{\n+  struct S s;\n+  s.j = 5;\n+  s.i = 777;\n+  s.l = -1;\n+\n+  return bar (&s);\n+}"}, {"sha": "0127b82c568a3bc5a2856f6868bf7600705a352a", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1faab08daf19e4769865936614a8a7bef1d72dd6/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1faab08daf19e4769865936614a8a7bef1d72dd6/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=1faab08daf19e4769865936614a8a7bef1d72dd6", "patch": "@@ -774,12 +774,13 @@ create_access (tree expr, gimple stmt, bool write)\n \t  disqualify_candidate (base, \"Encountered a variable sized access.\");\n \t  return NULL;\n \t}\n-      if ((offset % BITS_PER_UNIT) != 0 || (size % BITS_PER_UNIT) != 0)\n+      if (TREE_CODE (expr) == COMPONENT_REF\n+\t  && DECL_BIT_FIELD (TREE_OPERAND (expr, 1)))\n \t{\n-\t  disqualify_candidate (base,\n-\t\t\t\t\"Encountered an acces not aligned to a byte.\");\n+\t  disqualify_candidate (base, \"Encountered a bit-field access.\");\n \t  return NULL;\n \t}\n+      gcc_checking_assert ((offset % BITS_PER_UNIT) == 0);\n \n       if (ptr)\n \tmark_parm_dereference (base, offset + size, stmt);"}]}