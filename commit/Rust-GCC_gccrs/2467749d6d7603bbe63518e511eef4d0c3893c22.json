{"sha": "2467749d6d7603bbe63518e511eef4d0c3893c22", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ2Nzc0OWQ2ZDc2MDNiYmU2MzUxOGU1MTFlZWY0ZDBjMzg5M2MyMg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1998-04-17T08:26:33Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1998-04-17T08:26:33Z"}, "message": "Zap some warnings in target files:\n\n        * frame.c: Include stdlib.h and unistd.h to possibly get various\n        function prototypes.  The fixproto script guarantees these header\n        files exist on the target system.\n        * libgcc2.c: Likewise.\n        * gthr-single.h (__gthread_mutex_lock, __gthread_mutex_trylock,\n        __gthread_mutex_unlock): Add __attribute__ ((__unused__)) to the\n        function parameters.\n        * libgcc2.c (__udiv_w_sdiv): Likewise.\n\nFrom-SVN: r19261", "tree": {"sha": "5c3602924b7b22d249bf895c0f919338d22ffe17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c3602924b7b22d249bf895c0f919338d22ffe17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2467749d6d7603bbe63518e511eef4d0c3893c22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2467749d6d7603bbe63518e511eef4d0c3893c22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2467749d6d7603bbe63518e511eef4d0c3893c22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2467749d6d7603bbe63518e511eef4d0c3893c22/comments", "author": null, "committer": null, "parents": [{"sha": "da372c07fcbc738d867d17c131abf590eabeaf04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da372c07fcbc738d867d17c131abf590eabeaf04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da372c07fcbc738d867d17c131abf590eabeaf04"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "5b5df3903fe4dbc352d166d2da664acb1bdfce5d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2467749d6d7603bbe63518e511eef4d0c3893c22/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2467749d6d7603bbe63518e511eef4d0c3893c22/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2467749d6d7603bbe63518e511eef4d0c3893c22", "patch": "@@ -1,3 +1,15 @@\n+Fri Apr 17 11:21:43 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+        * frame.c: Include stdlib.h and unistd.h to possibly get various\n+        function prototypes.  The fixproto script guarantees these header\n+        files exist on the target system.\n+        * libgcc2.c: Likewise.\n+ \n+        * gthr-single.h (__gthread_mutex_lock, __gthread_mutex_trylock,\n+        __gthread_mutex_unlock): Add __attribute__ ((__unused__)) to the\n+        function parameters.\n+        * libgcc2.c (__udiv_w_sdiv): Likewise.\n+\n Thu Apr 16 22:41:02 1998  Jeffrey A Law  (law@cygnus.com)\n \n \t* varasm.c (asm_output_bss): Add prototype."}, {"sha": "6a81e41c2e2475ac6b3be64068689426d198b91e", "filename": "gcc/frame.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2467749d6d7603bbe63518e511eef4d0c3893c22/gcc%2Fframe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2467749d6d7603bbe63518e511eef4d0c3893c22/gcc%2Fframe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fframe.c?ref=2467749d6d7603bbe63518e511eef4d0c3893c22", "patch": "@@ -32,6 +32,11 @@ Boston, MA 02111-1307, USA.  */\n    do not apply.  */\n \n #include \"tconfig.h\"\n+\n+/* fixproto guarantees these system headers exist. */\n+#include <stdlib.h>\n+#include <unistd.h>\n+\n #include \"defaults.h\"\n \n #ifdef DWARF2_UNWIND_INFO"}, {"sha": "f8dfbff4e64577cfea0938f1cf0ae43777414ccf", "filename": "gcc/gthr-single.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2467749d6d7603bbe63518e511eef4d0c3893c22/gcc%2Fgthr-single.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2467749d6d7603bbe63518e511eef4d0c3893c22/gcc%2Fgthr-single.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgthr-single.h?ref=2467749d6d7603bbe63518e511eef4d0c3893c22", "patch": "@@ -42,19 +42,19 @@ __gthread_active_p ()\n }\n \n static inline int\n-__gthread_mutex_lock (__gthread_mutex_t *mutex)\n+__gthread_mutex_lock (__gthread_mutex_t *mutex __attribute__ ((__unused__)))\n {\n   return 0;\n }\n \n static inline int\n-__gthread_mutex_trylock (__gthread_mutex_t *mutex)\n+__gthread_mutex_trylock (__gthread_mutex_t *mutex __attribute__ ((__unused__)))\n {\n   return 0;\n }\n \n static inline int\n-__gthread_mutex_unlock (__gthread_mutex_t *mutex)\n+__gthread_mutex_unlock (__gthread_mutex_t *mutex __attribute__ ((__unused__)))\n {\n   return 0;\n }"}, {"sha": "690d6bf855ca80b3d0edf61ade920c23c950f434", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2467749d6d7603bbe63518e511eef4d0c3893c22/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2467749d6d7603bbe63518e511eef4d0c3893c22/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=2467749d6d7603bbe63518e511eef4d0c3893c22", "patch": "@@ -31,6 +31,11 @@ Boston, MA 02111-1307, USA.  */\n    do not apply.  */\n \n #include \"tconfig.h\"\n+\n+/* fixproto guarantees these system headers exist. */\n+#include <stdlib.h>\n+#include <unistd.h>\n+\n #include \"machmode.h\"\n #include \"defaults.h\" \n #ifndef L_trampoline\n@@ -391,7 +396,10 @@ __udiv_w_sdiv (USItype *rp, USItype a1, USItype a0, USItype d)\n #else\n /* If sdiv_qrnnd doesn't exist, define dummy __udiv_w_sdiv.  */\n USItype\n-__udiv_w_sdiv (USItype *rp, USItype a1, USItype a0, USItype d)\n+__udiv_w_sdiv (USItype *rp __attribute__ ((__unused__)),\n+\t       USItype a1 __attribute__ ((__unused__)),\n+\t       USItype a0 __attribute__ ((__unused__)),\n+\t       USItype d __attribute__ ((__unused__)))\n {\n   return 0;\n }"}]}