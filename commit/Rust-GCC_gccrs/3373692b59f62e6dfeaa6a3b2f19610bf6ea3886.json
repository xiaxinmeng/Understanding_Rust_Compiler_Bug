{"sha": "3373692b59f62e6dfeaa6a3b2f19610bf6ea3886", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM3MzY5MmI1OWY2MmU2ZGZlYWE2YTNiMmYxOTYxMGJmNmVhMzg4Ng==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-08-17T06:49:20Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-08-17T06:49:20Z"}, "message": "function.c (block_fragments_nreverse, [...]): New functions.\n\n\t* function.c (block_fragments_nreverse, blocks_nreverse_all): New\n\tfunctions.\n\t(reorder_blocks): Use blocks_nreverse_all instead of blocks_nreverse.\n\t(reorder_blocks_1): Assert BLOCK_FRAGMENT_ORIGIN is NULL.  Don't\n\tcall block_nreverse here.\n\t(blocks_nreverse): Rename decl temporary to block.\n\nFrom-SVN: r163292", "tree": {"sha": "a478ba67dac0179edb4b87851b971667925e632c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a478ba67dac0179edb4b87851b971667925e632c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3373692b59f62e6dfeaa6a3b2f19610bf6ea3886", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3373692b59f62e6dfeaa6a3b2f19610bf6ea3886", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3373692b59f62e6dfeaa6a3b2f19610bf6ea3886", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3373692b59f62e6dfeaa6a3b2f19610bf6ea3886/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4681303cfd11c83d55eab82e874b6100b3d107e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4681303cfd11c83d55eab82e874b6100b3d107e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4681303cfd11c83d55eab82e874b6100b3d107e0"}], "stats": {"total": 68, "additions": 57, "deletions": 11}, "files": [{"sha": "a01b1ae513509c463521f24edf18b47038f0a209", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3373692b59f62e6dfeaa6a3b2f19610bf6ea3886/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3373692b59f62e6dfeaa6a3b2f19610bf6ea3886/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3373692b59f62e6dfeaa6a3b2f19610bf6ea3886", "patch": "@@ -1,3 +1,12 @@\n+2010-08-17  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* function.c (block_fragments_nreverse, blocks_nreverse_all): New\n+\tfunctions.\n+\t(reorder_blocks): Use blocks_nreverse_all instead of blocks_nreverse.\n+\t(reorder_blocks_1): Assert BLOCK_FRAGMENT_ORIGIN is NULL.  Don't\n+\tcall block_nreverse here.\n+\t(blocks_nreverse): Rename decl temporary to block.\n+\n 2010-08-16  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* config/arm/thumb2.md (thumb2_notsi_shiftsi,"}, {"sha": "95b9577076d810dbdf218d6bcd80d0458c019b82", "filename": "gcc/function.c", "status": "modified", "additions": 48, "deletions": 11, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3373692b59f62e6dfeaa6a3b2f19610bf6ea3886/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3373692b59f62e6dfeaa6a3b2f19610bf6ea3886/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=3373692b59f62e6dfeaa6a3b2f19610bf6ea3886", "patch": "@@ -3953,6 +3953,46 @@ generate_setjmp_warnings (void)\n }\n \n \f\n+/* Reverse the order of elements in the fragment chain T of blocks,\n+   and return the new head of the chain (old last element).  */\n+\n+static tree\n+block_fragments_nreverse (tree t)\n+{\n+  tree prev = 0, block, next;\n+  for (block = t; block; block = next)\n+    {\n+      next = BLOCK_FRAGMENT_CHAIN (block);\n+      BLOCK_FRAGMENT_CHAIN (block) = prev;\n+      prev = block;\n+    }\n+  return prev;\n+}\n+\n+/* Reverse the order of elements in the chain T of blocks,\n+   and return the new head of the chain (old last element).\n+   Also do the same on subblocks and reverse the order of elements\n+   in BLOCK_FRAGMENT_CHAIN as well.  */\n+\n+static tree\n+blocks_nreverse_all (tree t)\n+{\n+  tree prev = 0, block, next;\n+  for (block = t; block; block = next)\n+    {\n+      next = BLOCK_CHAIN (block);\n+      BLOCK_CHAIN (block) = prev;\n+      BLOCK_SUBBLOCKS (block) = blocks_nreverse_all (BLOCK_SUBBLOCKS (block));\n+      if (BLOCK_FRAGMENT_CHAIN (block)\n+\t  && BLOCK_FRAGMENT_ORIGIN (block) == NULL_TREE)\n+\tBLOCK_FRAGMENT_CHAIN (block)\n+\t  = block_fragments_nreverse (BLOCK_FRAGMENT_CHAIN (block));\n+      prev = block;\n+    }\n+  return prev;\n+}\n+\n+\n /* Identify BLOCKs referenced by more than one NOTE_INSN_BLOCK_{BEG,END},\n    and create duplicate blocks.  */\n /* ??? Need an option to either create block fragments or to create\n@@ -3979,7 +4019,7 @@ reorder_blocks (void)\n \n   /* Recreate the block tree from the note nesting.  */\n   reorder_blocks_1 (get_insns (), block, &block_stack);\n-  BLOCK_SUBBLOCKS (block) = blocks_nreverse (BLOCK_SUBBLOCKS (block));\n+  BLOCK_SUBBLOCKS (block) = blocks_nreverse_all (BLOCK_SUBBLOCKS (block));\n \n   VEC_free (tree, heap, block_stack);\n }\n@@ -4011,9 +4051,8 @@ reorder_blocks_1 (rtx insns, tree current_block, VEC(tree,heap) **p_block_stack)\n \t      tree block = NOTE_BLOCK (insn);\n \t      tree origin;\n \n-\t      origin = (BLOCK_FRAGMENT_ORIGIN (block)\n-\t\t\t? BLOCK_FRAGMENT_ORIGIN (block)\n-\t\t\t: block);\n+\t      gcc_assert (BLOCK_FRAGMENT_ORIGIN (block) == NULL_TREE);\n+\t      origin = block;\n \n \t      /* If we have seen this block before, that means it now\n \t\t spans multiple address regions.  Create a new fragment.  */\n@@ -4050,8 +4089,6 @@ reorder_blocks_1 (rtx insns, tree current_block, VEC(tree,heap) **p_block_stack)\n \t  else if (NOTE_KIND (insn) == NOTE_INSN_BLOCK_END)\n \t    {\n \t      NOTE_BLOCK (insn) = VEC_pop (tree, *p_block_stack);\n-\t      BLOCK_SUBBLOCKS (current_block)\n-\t\t= blocks_nreverse (BLOCK_SUBBLOCKS (current_block));\n \t      current_block = BLOCK_SUPERCONTEXT (current_block);\n \t    }\n \t}\n@@ -4064,12 +4101,12 @@ reorder_blocks_1 (rtx insns, tree current_block, VEC(tree,heap) **p_block_stack)\n tree\n blocks_nreverse (tree t)\n {\n-  tree prev = 0, decl, next;\n-  for (decl = t; decl; decl = next)\n+  tree prev = 0, block, next;\n+  for (block = t; block; block = next)\n     {\n-      next = BLOCK_CHAIN (decl);\n-      BLOCK_CHAIN (decl) = prev;\n-      prev = decl;\n+      next = BLOCK_CHAIN (block);\n+      BLOCK_CHAIN (block) = prev;\n+      prev = block;\n     }\n   return prev;\n }"}]}