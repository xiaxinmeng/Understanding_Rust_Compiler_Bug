{"sha": "fd0c1dd1678d573052799d106f00ddd5505e5bfa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQwYzFkZDE2NzhkNTczMDUyNzk5ZDEwNmYwMGRkZDU1MDVlNWJmYQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-01-10T19:19:02Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-01-10T19:19:02Z"}, "message": "libgo: add platform support for SuperH\n    \n    Reviewed-on: https://go-review.googlesource.com/84555\n\nFrom-SVN: r256446", "tree": {"sha": "34b34e772f43c55d03e99b4b25c33db309e9bb94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34b34e772f43c55d03e99b4b25c33db309e9bb94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd0c1dd1678d573052799d106f00ddd5505e5bfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd0c1dd1678d573052799d106f00ddd5505e5bfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd0c1dd1678d573052799d106f00ddd5505e5bfa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd0c1dd1678d573052799d106f00ddd5505e5bfa/comments", "author": null, "committer": null, "parents": [{"sha": "ec2f999b10ef09473c1cc227314071712899b2e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec2f999b10ef09473c1cc227314071712899b2e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec2f999b10ef09473c1cc227314071712899b2e7"}], "stats": {"total": 94, "additions": 79, "deletions": 15}, "files": [{"sha": "dd7febbd9c8e3d479270202c9726382e1fe7d282", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd0c1dd1678d573052799d106f00ddd5505e5bfa/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd0c1dd1678d573052799d106f00ddd5505e5bfa/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=fd0c1dd1678d573052799d106f00ddd5505e5bfa", "patch": "@@ -1,4 +1,4 @@\n-9705a1f4c37ad2c099e9fe6cd587d22a2a2ab2c3\n+d8a9f7433a9e8a81c992ad2908818d2e84f3698b\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "28e283c6316beae1e3ce0dba5733a9b10fa6c5e6", "filename": "libgo/configure", "status": "modified", "additions": 32, "deletions": 2, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd0c1dd1678d573052799d106f00ddd5505e5bfa/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd0c1dd1678d573052799d106f00ddd5505e5bfa/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=fd0c1dd1678d573052799d106f00ddd5505e5bfa", "patch": "@@ -13645,10 +13645,10 @@ esac\n # supported by the gofrontend and all architectures supported by the\n # gc toolchain.\n # N.B. Keep in sync with gcc/testsuite/go.test/go-test.exp (go-set-goarch).\n-ALLGOARCH=\"386 alpha amd64 amd64p32 arm armbe arm64 arm64be ia64 m68k mips mipsle mips64 mips64le mips64p32 mips64p32le ppc ppc64 ppc64le s390 s390x sparc sparc64\"\n+ALLGOARCH=\"386 alpha amd64 amd64p32 arm armbe arm64 arm64be ia64 m68k mips mipsle mips64 mips64le mips64p32 mips64p32le ppc ppc64 ppc64le s390 s390x sh shbe sparc sparc64\"\n \n # All known GOARCH_FAMILY values.\n-ALLGOARCHFAMILY=\"I386 ALPHA AMD64 ARM ARM64 IA64 M68K MIPS MIPS64 PPC PPC64 S390 S390X SPARC SPARC64\"\n+ALLGOARCHFAMILY=\"I386 ALPHA AMD64 ARM ARM64 IA64 M68K MIPS MIPS64 PPC PPC64 S390 S390X SH SPARC SPARC64\"\n \n GOARCH=unknown\n GOARCH_FAMILY=unknown\n@@ -13851,6 +13851,36 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n     GOARCH_CACHELINESIZE=256\n     GOARCH_PCQUANTUM=2\n     ;;\n+  sh3eb*-*-*)\n+    GOARCH=shbe\n+    GOARCH_FAMILY=SH\n+    GOARCH_BIGENDIAN=true\n+    GOARCH_CACHELINESIZE=16\n+    GOARCH_PCQUANTUM=2\n+    GOARCH_MINFRAMESIZE=4\n+    ;;\n+  sh3*-*-*)\n+    GOARCH=sh\n+    GOARCH_FAMILY=SH\n+    GOARCH_CACHELINESIZE=16\n+    GOARCH_PCQUANTUM=2\n+    GOARCH_MINFRAMESIZE=4\n+    ;;\n+  sh4eb*-*-*)\n+    GOARCH=shbe\n+    GOARCH_FAMILY=SH\n+    GOARCH_BIGENDIAN=true\n+    GOARCH_CACHELINESIZE=32\n+    GOARCH_PCQUANTUM=2\n+    GOARCH_MINFRAMESIZE=4\n+    ;;\n+  sh4*-*-*)\n+    GOARCH=sh\n+    GOARCH_FAMILY=SH\n+    GOARCH_CACHELINESIZE=32\n+    GOARCH_PCQUANTUM=2\n+    GOARCH_MINFRAMESIZE=4\n+    ;;\n   sparc*-*-*)\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */"}, {"sha": "1077c9e114d273f5604d87ae00296bc5bff4c59a", "filename": "libgo/configure.ac", "status": "modified", "additions": 32, "deletions": 2, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd0c1dd1678d573052799d106f00ddd5505e5bfa/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd0c1dd1678d573052799d106f00ddd5505e5bfa/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=fd0c1dd1678d573052799d106f00ddd5505e5bfa", "patch": "@@ -208,10 +208,10 @@ AC_SUBST(USE_DEJAGNU)\n # supported by the gofrontend and all architectures supported by the\n # gc toolchain.\n # N.B. Keep in sync with gcc/testsuite/go.test/go-test.exp (go-set-goarch).\n-ALLGOARCH=\"386 alpha amd64 amd64p32 arm armbe arm64 arm64be ia64 m68k mips mipsle mips64 mips64le mips64p32 mips64p32le ppc ppc64 ppc64le s390 s390x sparc sparc64\"\n+ALLGOARCH=\"386 alpha amd64 amd64p32 arm armbe arm64 arm64be ia64 m68k mips mipsle mips64 mips64le mips64p32 mips64p32le ppc ppc64 ppc64le s390 s390x sh shbe sparc sparc64\"\n \n # All known GOARCH_FAMILY values.\n-ALLGOARCHFAMILY=\"I386 ALPHA AMD64 ARM ARM64 IA64 M68K MIPS MIPS64 PPC PPC64 S390 S390X SPARC SPARC64\"\n+ALLGOARCHFAMILY=\"I386 ALPHA AMD64 ARM ARM64 IA64 M68K MIPS MIPS64 PPC PPC64 S390 S390X SH SPARC SPARC64\"\n \n GOARCH=unknown\n GOARCH_FAMILY=unknown\n@@ -366,6 +366,36 @@ GOARCH_MINFRAMESIZE=8\n     GOARCH_CACHELINESIZE=256\n     GOARCH_PCQUANTUM=2\n     ;;\n+  sh3eb*-*-*)\n+    GOARCH=shbe\n+    GOARCH_FAMILY=SH\n+    GOARCH_BIGENDIAN=true\n+    GOARCH_CACHELINESIZE=16\n+    GOARCH_PCQUANTUM=2\n+    GOARCH_MINFRAMESIZE=4\n+    ;;\n+  sh3*-*-*)\n+    GOARCH=sh\n+    GOARCH_FAMILY=SH\n+    GOARCH_CACHELINESIZE=16\n+    GOARCH_PCQUANTUM=2\n+    GOARCH_MINFRAMESIZE=4\n+    ;;\n+  sh4eb*-*-*)\n+    GOARCH=shbe\n+    GOARCH_FAMILY=SH\n+    GOARCH_BIGENDIAN=true\n+    GOARCH_CACHELINESIZE=32\n+    GOARCH_PCQUANTUM=2\n+    GOARCH_MINFRAMESIZE=4\n+    ;;\n+  sh4*-*-*)\n+    GOARCH=sh\n+    GOARCH_FAMILY=SH\n+    GOARCH_CACHELINESIZE=32\n+    GOARCH_PCQUANTUM=2\n+    GOARCH_MINFRAMESIZE=4\n+    ;;\n   sparc*-*-*)\n     AC_COMPILE_IFELSE([\n #if defined(__sparcv9) || defined(__arch64__)"}, {"sha": "f5c231ced6d302fdadf5d82abe6a04c95f472a9f", "filename": "libgo/go/cmd/cgo/main.go", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd0c1dd1678d573052799d106f00ddd5505e5bfa/libgo%2Fgo%2Fcmd%2Fcgo%2Fmain.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd0c1dd1678d573052799d106f00ddd5505e5bfa/libgo%2Fgo%2Fcmd%2Fcgo%2Fmain.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fcgo%2Fmain.go?ref=fd0c1dd1678d573052799d106f00ddd5505e5bfa", "patch": "@@ -170,6 +170,8 @@ var ptrSizeMap = map[string]int64{\n \t\"ppc64le\":     8,\n \t\"s390\":        4,\n \t\"s390x\":       8,\n+\t\"sh\":          4,\n+\t\"shbe\":        4,\n \t\"sparc\":       4,\n \t\"sparc64\":     8,\n }\n@@ -192,6 +194,8 @@ var intSizeMap = map[string]int64{\n \t\"ppc64le\":     8,\n \t\"s390\":        4,\n \t\"s390x\":       8,\n+\t\"sh\":          4,\n+\t\"shbe\":        4,\n \t\"sparc\":       4,\n \t\"sparc64\":     8,\n }"}, {"sha": "6bf72630e7cea2a9072662f0f1e4e4fe99cacb56", "filename": "libgo/go/go/build/syslist.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd0c1dd1678d573052799d106f00ddd5505e5bfa/libgo%2Fgo%2Fgo%2Fbuild%2Fsyslist.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd0c1dd1678d573052799d106f00ddd5505e5bfa/libgo%2Fgo%2Fgo%2Fbuild%2Fsyslist.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fgo%2Fbuild%2Fsyslist.go?ref=fd0c1dd1678d573052799d106f00ddd5505e5bfa", "patch": "@@ -5,4 +5,4 @@\n package build\n \n const goosList = \"aix android darwin dragonfly freebsd linux nacl netbsd openbsd plan9 solaris windows zos \"\n-const goarchList = \"386 amd64 amd64p32 arm armbe arm64 arm64be alpha m68k ppc64 ppc64le mips mipsle mips64 mips64le mips64p32 mips64p32le ppc s390 s390x sparc sparc64 \"\n+const goarchList = \"386 amd64 amd64p32 arm armbe arm64 arm64be alpha m68k ppc64 ppc64le mips mipsle mips64 mips64le mips64p32 mips64p32le ppc s390 s390x sh shbe sparc sparc64\""}, {"sha": "22daec52526929f34e659ed0f30106a5c447775a", "filename": "libgo/go/runtime/hash32.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd0c1dd1678d573052799d106f00ddd5505e5bfa/libgo%2Fgo%2Fruntime%2Fhash32.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd0c1dd1678d573052799d106f00ddd5505e5bfa/libgo%2Fgo%2Fruntime%2Fhash32.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fhash32.go?ref=fd0c1dd1678d573052799d106f00ddd5505e5bfa", "patch": "@@ -6,7 +6,7 @@\n //   xxhash: https://code.google.com/p/xxhash/\n // cityhash: https://code.google.com/p/cityhash/\n \n-// +build 386 arm armbe m68k mips mipsle ppc s390 sparc\n+// +build 386 arm armbe m68k mips mipsle ppc s390 sh shbe sparc\n \n package runtime\n "}, {"sha": "bbc421a90fd37aa8bedb48659489a95ea4e53725", "filename": "libgo/go/runtime/lfstack_32bit.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd0c1dd1678d573052799d106f00ddd5505e5bfa/libgo%2Fgo%2Fruntime%2Flfstack_32bit.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd0c1dd1678d573052799d106f00ddd5505e5bfa/libgo%2Fgo%2Fruntime%2Flfstack_32bit.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Flfstack_32bit.go?ref=fd0c1dd1678d573052799d106f00ddd5505e5bfa", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build 386 arm nacl armbe m68k mips mipsle mips64p32 mips64p32le ppc s390 sparc\n+// +build 386 arm nacl armbe m68k mips mipsle mips64p32 mips64p32le ppc s390 sh shbe sparc\n \n package runtime\n "}, {"sha": "891459ea842070b1e26f9fdedbc2ba165a9689dc", "filename": "libgo/go/runtime/unaligned2.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd0c1dd1678d573052799d106f00ddd5505e5bfa/libgo%2Fgo%2Fruntime%2Funaligned2.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd0c1dd1678d573052799d106f00ddd5505e5bfa/libgo%2Fgo%2Fruntime%2Funaligned2.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Funaligned2.go?ref=fd0c1dd1678d573052799d106f00ddd5505e5bfa", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build arm mips mipsle mips64 mips64le armbe m68k sparc alpha ia64 mips64p32 mips64p32le sparc64\n+// +build arm mips mipsle mips64 mips64le armbe m68k sparc alpha ia64 mips64p32 mips64p32le sh shbe sparc64\n \n package runtime\n "}, {"sha": "24a4d1df2409adde7dd9af9388c979635c35179d", "filename": "libgo/go/syscall/endian_big.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd0c1dd1678d573052799d106f00ddd5505e5bfa/libgo%2Fgo%2Fsyscall%2Fendian_big.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd0c1dd1678d573052799d106f00ddd5505e5bfa/libgo%2Fgo%2Fsyscall%2Fendian_big.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fendian_big.go?ref=fd0c1dd1678d573052799d106f00ddd5505e5bfa", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n //\n-// +build ppc64 s390x mips mips64 armbe arm64be m68k ppc mips64p32 s390 sparc sparc64\n+// +build ppc64 s390x mips mips64 armbe arm64be m68k ppc mips64p32 s390 shbe sparc sparc64\n \n package syscall\n "}, {"sha": "b91d4bb72de745d80ebbf57a538137085e585bcc", "filename": "libgo/go/syscall/endian_little.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd0c1dd1678d573052799d106f00ddd5505e5bfa/libgo%2Fgo%2Fsyscall%2Fendian_little.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd0c1dd1678d573052799d106f00ddd5505e5bfa/libgo%2Fgo%2Fsyscall%2Fendian_little.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fendian_little.go?ref=fd0c1dd1678d573052799d106f00ddd5505e5bfa", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n //\n-// +build 386 amd64 amd64p32 arm arm64 ppc64le mips64le mipsle alpha ia64 mips64p32le\n+// +build 386 amd64 amd64p32 arm arm64 ppc64le mips64le mipsle alpha ia64 mips64p32le sh\n \n package syscall\n "}, {"sha": "62405556ede915d3d036f6987c15fbb6bacf82c0", "filename": "libgo/match.sh", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd0c1dd1678d573052799d106f00ddd5505e5bfa/libgo%2Fmatch.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd0c1dd1678d573052799d106f00ddd5505e5bfa/libgo%2Fmatch.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fmatch.sh?ref=fd0c1dd1678d573052799d106f00ddd5505e5bfa", "patch": "@@ -116,7 +116,7 @@ for f in $gofiles; do\n \taix | android | darwin | dragonfly | freebsd | linux | nacl | netbsd | openbsd | plan9 | solaris | windows)\n \t    tag1=nonmatchingtag\n \t    ;;\n-\t386 | amd64 | amd64p32 | arm | armbe | arm64 | arm64be | alpha | ia64 | m68k | ppc64 | ppc64le | mips | mipsle | mips64 | mips64le | mips64p32 | mips64p32le | ppc | s390 | s390x | sparc | sparc64)\n+\t386 | amd64 | amd64p32 | arm | armbe | arm64 | arm64be | alpha | ia64 | m68k | ppc64 | ppc64le | mips | mipsle | mips64 | mips64le | mips64p32 | mips64p32le | ppc | s390 | s390x | sh | shbe | sparc | sparc64)\n \t    tag1=nonmatchingtag\n \t    ;;\n     esac\n@@ -128,7 +128,7 @@ for f in $gofiles; do\n \taix | android | darwin | dragonfly | freebsd | linux | nacl | netbsd | openbsd | plan9 | solaris | windows)\n \t    tag2=nonmatchingtag\n \t    ;;\n-\t386 | amd64 | amd64p32 | arm | armbe | arm64 | arm64be | alpha | ia64 | m68k | ppc64 | ppc64le | mips | mipsle | mips64 | mips64le | mips64p32 | mips64p32le | ppc | s390 | s390x | sparc | sparc64)\n+\t386 | amd64 | amd64p32 | arm | armbe | arm64 | arm64be | alpha | ia64 | m68k | ppc64 | ppc64le | mips | mipsle | mips64 | mips64le | mips64p32 | mips64p32le | ppc | s390 | s390x | sh | shbe | sparc | sparc64)\n \t    tag2=nonmatchingtag\n \t    ;;\n     esac"}, {"sha": "8ec12cd166799f247b4299f317bc7a20fa9d3b5a", "filename": "libgo/testsuite/gotest", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd0c1dd1678d573052799d106f00ddd5505e5bfa/libgo%2Ftestsuite%2Fgotest", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd0c1dd1678d573052799d106f00ddd5505e5bfa/libgo%2Ftestsuite%2Fgotest", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Ftestsuite%2Fgotest?ref=fd0c1dd1678d573052799d106f00ddd5505e5bfa", "patch": "@@ -314,7 +314,7 @@ x)\n \t    aix | android | darwin | dragonfly | freebsd | linux | nacl | netbsd | openbsd | plan9 | solaris | windows)\n \t\ttag1=nonmatchingtag\n \t\t;;\n-\t    386 | amd64 | amd64p32 | arm | armbe | arm64 | arm64be | alpha | ia64 | m68k | ppc64 | ppc64le | mips | mipsle | mips64 | mips64le | mips64p32 | mips64p32le | ppc | s390 | s390x | sparc | sparc64)\n+\t    386 | amd64 | amd64p32 | arm | armbe | arm64 | arm64be | alpha | ia64 | m68k | ppc64 | ppc64le | mips | mipsle | mips64 | mips64le | mips64p32 | mips64p32le | ppc | s390 | s390x | sh | shbe | sparc | sparc64)\n \t\ttag1=nonmatchingtag\n \t\t;;\n \t    esac\n@@ -326,7 +326,7 @@ x)\n \t    aix | android | darwin | dragonfly | freebsd | linux | nacl | netbsd | openbsd | plan9 | solaris | windows)\n \t\ttag2=nonmatchingtag\n \t\t;;\n-\t    386 | amd64 | amd64p32 | arm | armbe | arm64 | arm64be | alpha | ia64 | m68k | ppc64 | ppc64le | mips | mipsle | mips64 | mips64le | mips64p32 | mips64p32le | ppc | s390 | s390x | sparc | sparc64)\n+\t    386 | amd64 | amd64p32 | arm | armbe | arm64 | arm64be | alpha | ia64 | m68k | ppc64 | ppc64le | mips | mipsle | mips64 | mips64le | mips64p32 | mips64p32le | ppc | s390 | s390x | sh | shbe | sparc | sparc64)\n \t\ttag2=nonmatchingtag\n \t\t;;\n \t    esac"}]}