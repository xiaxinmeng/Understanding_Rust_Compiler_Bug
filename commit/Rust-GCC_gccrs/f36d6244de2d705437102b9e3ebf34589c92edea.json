{"sha": "f36d6244de2d705437102b9e3ebf34589c92edea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM2ZDYyNDRkZTJkNzA1NDM3MTAyYjllM2ViZjM0NTg5YzkyZWRlYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2000-11-14T18:05:45Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2000-11-14T18:05:45Z"}, "message": "builtins.c (expand_builtin_setjmp): Set current_function_calls_setjmp.\n\n\t* builtins.c (expand_builtin_setjmp): Set\n\tcurrent_function_calls_setjmp.\n\t(expand_builtin_longjmp): Set current_function_calls_longjmp.\n\n\t* config/sparc/sparc.md (builtin_setjmp_setup): New expand.\n\t(do_builtin_setjmp_setup): New insn.\n\nFrom-SVN: r37461", "tree": {"sha": "867e197b40ffd6f31ee2be7c55a538afdb3c234c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/867e197b40ffd6f31ee2be7c55a538afdb3c234c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f36d6244de2d705437102b9e3ebf34589c92edea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f36d6244de2d705437102b9e3ebf34589c92edea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f36d6244de2d705437102b9e3ebf34589c92edea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f36d6244de2d705437102b9e3ebf34589c92edea/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3401c26b5cce41f75a511d1ee60ccadb876c5fb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3401c26b5cce41f75a511d1ee60ccadb876c5fb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3401c26b5cce41f75a511d1ee60ccadb876c5fb3"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "570dbe5d8e3b8bb21ddb937d9a941814ba031319", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f36d6244de2d705437102b9e3ebf34589c92edea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f36d6244de2d705437102b9e3ebf34589c92edea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f36d6244de2d705437102b9e3ebf34589c92edea", "patch": "@@ -1,3 +1,12 @@\n+2000-11-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* builtins.c (expand_builtin_setjmp): Set\n+\tcurrent_function_calls_setjmp.\n+\t(expand_builtin_longjmp): Set current_function_calls_longjmp.\n+\n+\t* config/sparc/sparc.md (builtin_setjmp_setup): New expand.\n+\t(do_builtin_setjmp_setup): New insn.\n+\n Tue Nov 14 12:34:56 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* tree.c (get_unwidened): Use host_integerp and tree_low_cst."}, {"sha": "8daf963a6b2178babd5ed2d7dc1c2fb9873dc9c8", "filename": "gcc/builtins.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f36d6244de2d705437102b9e3ebf34589c92edea/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f36d6244de2d705437102b9e3ebf34589c92edea/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=f36d6244de2d705437102b9e3ebf34589c92edea", "patch": "@@ -446,6 +446,7 @@ expand_builtin_setjmp (buf_addr, target, first_label, next_label)\n      calls may traverse the arc back to this label.  */\n \n   current_function_has_nonlocal_label = 1;\n+  current_function_calls_setjmp = 1;\n   nonlocal_goto_handler_labels\n     = gen_rtx_EXPR_LIST (VOIDmode, lab1, nonlocal_goto_handler_labels);\n \n@@ -547,6 +548,8 @@ expand_builtin_longjmp (buf_addr, value)\n   if (value != const1_rtx)\n     abort ();\n \n+  current_function_calls_longjmp = 1;\n+\n #ifdef HAVE_builtin_longjmp\n   if (HAVE_builtin_longjmp)\n     emit_insn (gen_builtin_longjmp (buf_addr));"}, {"sha": "861a9f32faf794bc4296a995797f20f3f6997d4e", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f36d6244de2d705437102b9e3ebf34589c92edea/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f36d6244de2d705437102b9e3ebf34589c92edea/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=f36d6244de2d705437102b9e3ebf34589c92edea", "patch": "@@ -50,6 +50,7 @@\n ;;\t\t\t2\tgoto_handler_and_restore\n ;;\t\t\t3\tgoto_handler_and_restore_v9*\n ;;\t\t\t4\tflush\n+;;\t\t\t5\tdo_builtin_setjmp_setup\n ;;\n \n ;; The upper 32 fp regs on the v9 can't hold SFmode values.  To deal with this\n@@ -9014,6 +9015,32 @@\n ;;  [(set_attr \"type\" \"misc\")\n ;;   (set_attr \"length\" \"2,3\")])\n \n+;; For __builtin_setjmp we need to flush register windows iff the function\n+;; calls alloca as well, because otherwise the register window might be\n+;; saved after %sp adjustement and thus setjmp would crash\n+(define_expand \"builtin_setjmp_setup\"\n+  [(match_operand 0 \"register_operand\" \"r\")]\n+  \"\"\n+  \"\n+{\n+  emit_insn (gen_do_builtin_setjmp_setup ());\n+  DONE;\n+}\")\n+\n+(define_insn \"do_builtin_setjmp_setup\"\n+  [(unspec_volatile [(const_int 0)] 5)]\n+  \"\"\n+  \"*\n+{\n+  if (!current_function_calls_alloca)\n+    return \\\"\\\";\n+  if (TARGET_V9)\n+    return \\\"flushw\\\";\n+  return \\\"ta\\\\t3\\\";\n+}\"\n+  [(set_attr \"type\" \"misc\")\n+   (set_attr \"length\" \"1\")])\n+\n ;; Pattern for use after a setjmp to store FP and the return register\n ;; into the stack area.\n "}]}