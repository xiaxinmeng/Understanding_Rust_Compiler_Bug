{"sha": "906532aaa9d3e8502c06e227e921626918acfc73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA2NTMyYWFhOWQzZTg1MDJjMDZlMjI3ZTkyMTYyNjkxOGFjZmM3Mw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-04-23T15:14:32Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-04-23T15:14:32Z"}, "message": "tree-ssa-dce.c (worklist): Change to VEC(tree,heap).\n\n\t* tree-ssa-dce.c (worklist): Change to VEC(tree,heap).\n\t(mark_stmt_necessary, propagate_necessity,\n\tmark_really_necessary_kill_operand_phis): Update uses of\n\tworklist.\n\t(tree_dce_init): Allocate worklist using VEC_alloc.\n\t(tree_dce_done): Free worklist using VEC_free.\n\nFrom-SVN: r98618", "tree": {"sha": "f425e24dacbc892f7623625e823ad8714d333313", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f425e24dacbc892f7623625e823ad8714d333313"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/906532aaa9d3e8502c06e227e921626918acfc73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/906532aaa9d3e8502c06e227e921626918acfc73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/906532aaa9d3e8502c06e227e921626918acfc73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/906532aaa9d3e8502c06e227e921626918acfc73/comments", "author": null, "committer": null, "parents": [{"sha": "7df5a591b2c2d8a905af2c25a1ddbd8eaffa00ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7df5a591b2c2d8a905af2c25a1ddbd8eaffa00ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7df5a591b2c2d8a905af2c25a1ddbd8eaffa00ab"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "3d2a241204cf1d06fbadd24b128e938909851eb0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/906532aaa9d3e8502c06e227e921626918acfc73/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/906532aaa9d3e8502c06e227e921626918acfc73/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=906532aaa9d3e8502c06e227e921626918acfc73", "patch": "@@ -7,6 +7,13 @@\n \t* tree-ssa-live.c (build_tree_conflict_graph): Allocate\n \tpartition_link and tpa_nodes on heap.\n \n+\t* tree-ssa-dce.c (worklist): Change to VEC(tree,heap).\n+\t(mark_stmt_necessary, propagate_necessity,\n+\tmark_really_necessary_kill_operand_phis): Update uses of\n+\tworklist.\n+\t(tree_dce_init): Allocate worklist using VEC_alloc.\n+\t(tree_dce_done): Free worklist using VEC_free.\n+\n 2005-04-23  Mike Stump  <mrs@apple.com>\n \n \t* config/darwin.c (machopic_indirection_name): Don't use"}, {"sha": "fd58ea124474ff1a305a2049c2f4153c81b82a1a", "filename": "gcc/tree-ssa-dce.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/906532aaa9d3e8502c06e227e921626918acfc73/gcc%2Ftree-ssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/906532aaa9d3e8502c06e227e921626918acfc73/gcc%2Ftree-ssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dce.c?ref=906532aaa9d3e8502c06e227e921626918acfc73", "patch": "@@ -74,7 +74,7 @@ static struct stmt_stats\n   int removed_phis;\n } stats;\n \n-static varray_type worklist;\n+static VEC(tree,heap) *worklist;\n \n /* Vector indicating an SSA name has already been processed and marked\n    as necessary.  */\n@@ -235,7 +235,7 @@ mark_stmt_necessary (tree stmt, bool add_to_worklist)\n \n   NECESSARY (stmt) = 1;\n   if (add_to_worklist)\n-    VARRAY_PUSH_TREE (worklist, stmt);\n+    VEC_safe_push (tree, heap, worklist, stmt);\n }\n \n /* Mark the statement defining operand OP as necessary.  PHIONLY is true\n@@ -263,7 +263,7 @@ mark_operand_necessary (tree op, bool phionly)\n     return;\n \n   NECESSARY (stmt) = 1;\n-  VARRAY_PUSH_TREE (worklist, stmt);\n+  VEC_safe_push (tree, heap, worklist, stmt);\n }\n \f\n \n@@ -472,11 +472,10 @@ propagate_necessity (struct edge_list *el)\n   if (dump_file && (dump_flags & TDF_DETAILS))\n     fprintf (dump_file, \"\\nProcessing worklist:\\n\");\n \n-  while (VARRAY_ACTIVE_SIZE (worklist) > 0)\n+  while (VEC_length (tree, worklist) > 0)\n     {\n       /* Take `i' from worklist.  */\n-      i = VARRAY_TOP_TREE (worklist);\n-      VARRAY_POP (worklist);\n+      i = VEC_pop (tree, worklist);\n \n       if (dump_file && (dump_flags & TDF_DETAILS))\n \t{\n@@ -603,10 +602,9 @@ mark_really_necessary_kill_operand_phis (void)\n   \n   /* Mark all virtual phis still in use as necessary, and all of their\n      arguments that are phis as necessary.  */\n-  while (VARRAY_ACTIVE_SIZE (worklist) > 0)\n+  while (VEC_length (tree, worklist) > 0)\n     {\n-      tree use = VARRAY_TOP_TREE (worklist);\n-      VARRAY_POP (worklist);\n+      tree use = VEC_pop (tree, worklist);\n       \n       for (i = 0; i < PHI_NUM_ARGS (use); i++)\n \tmark_operand_necessary (PHI_ARG_DEF (use, i), true);\n@@ -827,7 +825,7 @@ tree_dce_init (bool aggressive)\n   processed = sbitmap_alloc (num_ssa_names + 1);\n   sbitmap_zero (processed);\n \n-  VARRAY_TREE_INIT (worklist, 64, \"work list\");\n+  worklist = VEC_alloc (tree, heap, 64);\n }\n \n /* Cleanup after this pass.  */\n@@ -848,6 +846,8 @@ tree_dce_done (bool aggressive)\n     }\n \n   sbitmap_free (processed);\n+\n+  VEC_free (tree, heap, worklist);\n }\n \f\n /* Main routine to eliminate dead code."}]}