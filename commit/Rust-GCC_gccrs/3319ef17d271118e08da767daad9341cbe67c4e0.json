{"sha": "3319ef17d271118e08da767daad9341cbe67c4e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzMxOWVmMTdkMjcxMTE4ZTA4ZGE3NjdkYWFkOTM0MWNiZTY3YzRlMA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2012-09-18T18:06:28Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-09-18T18:06:28Z"}, "message": "posix.c (O_BINARY): Define if not defined.\n\n\t* posix.c (O_BINARY): Define if not defined.\n\t(backtrace_open): Pass O_BINARY to open.  Only call fcntl if\n\tHAVE_FCNTL is defined.\n\t* configure.ac: Test for the fcntl function.\n\t* configure, config.h.in: Rebuild.\n\nFrom-SVN: r191443", "tree": {"sha": "44912af377a1284ca36611f9b8acc53b753eb783", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44912af377a1284ca36611f9b8acc53b753eb783"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3319ef17d271118e08da767daad9341cbe67c4e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3319ef17d271118e08da767daad9341cbe67c4e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3319ef17d271118e08da767daad9341cbe67c4e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3319ef17d271118e08da767daad9341cbe67c4e0/comments", "author": null, "committer": null, "parents": [{"sha": "bd3e497d0bab06d287a86af07fda9b6cade4e43f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd3e497d0bab06d287a86af07fda9b6cade4e43f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd3e497d0bab06d287a86af07fda9b6cade4e43f"}], "stats": {"total": 54, "additions": 53, "deletions": 1}, "files": [{"sha": "15a94391a1e4e85531cb2b1aa6a5fe5d2e95d944", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3319ef17d271118e08da767daad9341cbe67c4e0/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3319ef17d271118e08da767daad9341cbe67c4e0/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=3319ef17d271118e08da767daad9341cbe67c4e0", "patch": "@@ -1,3 +1,11 @@\n+2012-09-18  Ian Lance Taylor  <iant@google.com>\n+\n+\t* posix.c (O_BINARY): Define if not defined.\n+\t(backtrace_open): Pass O_BINARY to open.  Only call fcntl if\n+\tHAVE_FCNTL is defined.\n+\t* configure.ac: Test for the fcntl function.\n+\t* configure, config.h.in: Rebuild.\n+\n 2012-09-18  Ian Lance Taylor  <iant@google.com>\n \n \t* btest.c (test1, test2, test3, test4): Add the unused attribute."}, {"sha": "090e8d86bc3b00151b9bff32fad78b55c6314c3b", "filename": "libbacktrace/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3319ef17d271118e08da767daad9341cbe67c4e0/libbacktrace%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3319ef17d271118e08da767daad9341cbe67c4e0/libbacktrace%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfig.h.in?ref=3319ef17d271118e08da767daad9341cbe67c4e0", "patch": "@@ -10,6 +10,9 @@\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n \n+/* Define to 1 if you have the fcntl function */\n+#undef HAVE_FCNTL\n+\n /* Define if _Unwind_GetIPInfo is available. */\n #undef HAVE_GETIPINFO\n "}, {"sha": "70ac451e0a413e87606544cfc4123dac7885e906", "filename": "libbacktrace/configure", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3319ef17d271118e08da767daad9341cbe67c4e0/libbacktrace%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3319ef17d271118e08da767daad9341cbe67c4e0/libbacktrace%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure?ref=3319ef17d271118e08da767daad9341cbe67c4e0", "patch": "@@ -11713,6 +11713,27 @@ if test \"$ALLOC_FILE\" = \"alloc.lo\"; then\n fi\n \n \n+# Check for the fcntl function.\n+if test -n \"${with_target_subdir}\"; then\n+   case \"${host}\" in\n+   *-*-mingw*) have_fcntl=no ;;\n+   *) have_fcntl=yes ;;\n+   esac\n+else\n+  ac_fn_c_check_func \"$LINENO\" \"fcntl\" \"ac_cv_func_fcntl\"\n+if test \"x$ac_cv_func_fcntl\" = x\"\"yes; then :\n+  have_fcntl=yes\n+else\n+  have_fcntl=no\n+fi\n+\n+fi\n+if test \"$have_fcntl\" = \"yes\"; then\n+\n+$as_echo \"#define HAVE_FCNTL 1\" >>confdefs.h\n+\n+fi\n+\n ac_fn_c_check_decl \"$LINENO\" \"strnlen\" \"ac_cv_have_decl_strnlen\" \"$ac_includes_default\"\n if test \"x$ac_cv_have_decl_strnlen\" = x\"\"yes; then :\n   ac_have_decl=1"}, {"sha": "250423d19438d4ed024aa0e1a6bbe34cb00aa1cc", "filename": "libbacktrace/configure.ac", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3319ef17d271118e08da767daad9341cbe67c4e0/libbacktrace%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3319ef17d271118e08da767daad9341cbe67c4e0/libbacktrace%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure.ac?ref=3319ef17d271118e08da767daad9341cbe67c4e0", "patch": "@@ -201,6 +201,20 @@ if test \"$ALLOC_FILE\" = \"alloc.lo\"; then\n fi\n AC_SUBST(BACKTRACE_USES_MALLOC)\n \n+# Check for the fcntl function.\n+if test -n \"${with_target_subdir}\"; then\n+   case \"${host}\" in\n+   *-*-mingw*) have_fcntl=no ;;\n+   *) have_fcntl=yes ;;\n+   esac\n+else\n+  AC_CHECK_FUNC(fcntl, [have_fcntl=yes], [have_fcntl=no])\n+fi\n+if test \"$have_fcntl\" = \"yes\"; then\n+  AC_DEFINE([HAVE_FCNTL], 1,\n+\t    [Define to 1 if you have the fcntl function])\n+fi\n+\n AC_CHECK_DECLS(strnlen)\n \n AC_CACHE_CHECK([whether tests can run],"}, {"sha": "01afc42b08e3f4f11f84684bf524115307d8d26a", "filename": "libbacktrace/posix.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3319ef17d271118e08da767daad9341cbe67c4e0/libbacktrace%2Fposix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3319ef17d271118e08da767daad9341cbe67c4e0/libbacktrace%2Fposix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fposix.c?ref=3319ef17d271118e08da767daad9341cbe67c4e0", "patch": "@@ -41,6 +41,10 @@ POSSIBILITY OF SUCH DAMAGE.  */\n #include \"backtrace.h\"\n #include \"internal.h\"\n \n+#ifndef O_BINARY\n+#define O_BINARY 0\n+#endif\n+\n #ifndef O_CLOEXEC\n #define O_CLOEXEC 0\n #endif\n@@ -57,18 +61,20 @@ backtrace_open (const char *filename, backtrace_error_callback error_callback,\n {\n   int descriptor;\n \n-  descriptor = open (filename, O_RDONLY | O_CLOEXEC);\n+  descriptor = open (filename, O_RDONLY | O_BINARY | O_CLOEXEC);\n   if (descriptor < 0)\n     {\n       error_callback (data, filename, errno);\n       return -1;\n     }\n \n+#ifdef HAVE_FCNTL\n   /* Set FD_CLOEXEC just in case the kernel does not support\n      O_CLOEXEC. It doesn't matter if this fails for some reason.\n      FIXME: At some point it should be safe to only do this if\n      O_CLOEXEC == 0.  */\n   fcntl (descriptor, F_SETFD, FD_CLOEXEC);\n+#endif\n \n   return descriptor;\n }"}]}