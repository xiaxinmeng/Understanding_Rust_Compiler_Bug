{"sha": "349f4ea14a4b563b86ef48a3f4dde6643ae91226", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ5ZjRlYTE0YTRiNTYzYjg2ZWY0OGEzZjRkZGU2NjQzYWU5MTIyNg==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel1@de.ibm.com", "date": "2006-03-16T08:15:35Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2006-03-16T08:15:35Z"}, "message": "simplify-rtx.c (simplify_plus_minus): Simplify within CONST terms.\n\n2006-03-16  Andreas Krebbel  <krebbel1@de.ibm.com>\n\n\t* simplify-rtx.c (simplify_plus_minus): Simplify within CONST terms.\n\nFrom-SVN: r112131", "tree": {"sha": "bddd4255cea6140e8144f36f712a40029350ef81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bddd4255cea6140e8144f36f712a40029350ef81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/349f4ea14a4b563b86ef48a3f4dde6643ae91226", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/349f4ea14a4b563b86ef48a3f4dde6643ae91226", "html_url": "https://github.com/Rust-GCC/gccrs/commit/349f4ea14a4b563b86ef48a3f4dde6643ae91226", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/349f4ea14a4b563b86ef48a3f4dde6643ae91226/comments", "author": null, "committer": null, "parents": [{"sha": "048d0d36c2021df68c27dcc308f8f0717f0537bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/048d0d36c2021df68c27dcc308f8f0717f0537bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/048d0d36c2021df68c27dcc308f8f0717f0537bf"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "b7870e32cdd9821cf330a062c4cf565886714326", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/349f4ea14a4b563b86ef48a3f4dde6643ae91226/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/349f4ea14a4b563b86ef48a3f4dde6643ae91226/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=349f4ea14a4b563b86ef48a3f4dde6643ae91226", "patch": "@@ -1,3 +1,7 @@\n+2006-03-16  Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\t* simplify-rtx.c (simplify_plus_minus): Simplify within CONST terms.\n+\n 2006-03-16  Maxim Kuvyrkov <mkuvyrkov@ispras.ru>\n \n         * config/ia64/ia64.c (stops_p): Added explicit initialization."}, {"sha": "e00e9ccca105c8ad007dd431b83406c6cd80456e", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/349f4ea14a4b563b86ef48a3f4dde6643ae91226/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/349f4ea14a4b563b86ef48a3f4dde6643ae91226/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=349f4ea14a4b563b86ef48a3f4dde6643ae91226", "patch": "@@ -3320,8 +3320,21 @@ simplify_plus_minus (enum rtx_code code, enum machine_mode mode, rtx op0,\n \t\telse if (swap_commutative_operands_p (lhs, rhs))\n \t\t  tem = lhs, lhs = rhs, rhs = tem;\n \n-\t\ttem = simplify_binary_operation (ncode, mode, lhs, rhs);\n+\t\tif ((GET_CODE (lhs) == CONST || GET_CODE (lhs) == CONST_INT)\n+\t\t    && (GET_CODE (rhs) == CONST || GET_CODE (rhs) == CONST_INT))\n+\t\t  {\n+\t\t    rtx tem_lhs, tem_rhs;\n+\n+\t\t    tem_lhs = GET_CODE (lhs) == CONST ? XEXP (lhs, 0) : lhs;\n+\t\t    tem_rhs = GET_CODE (rhs) == CONST ? XEXP (rhs, 0) : rhs;\n+\t\t    tem = simplify_binary_operation (ncode, mode, tem_lhs, tem_rhs);\n \n+\t\t    if (tem && !CONSTANT_P (tem))\n+\t\t      tem = gen_rtx_CONST (GET_MODE (tem), tem);\n+\t\t  }\n+\t\telse\n+\t\t  tem = simplify_binary_operation (ncode, mode, lhs, rhs);\n+\t\t\n \t\t/* Reject \"simplifications\" that just wrap the two\n \t\t   arguments in a CONST.  Failure to do so can result\n \t\t   in infinite recursion with simplify_binary_operation"}]}