{"sha": "574c09da48a5a0ff4c32dd4577eaf65bac8c94a0", "node_id": "C_kwDOANBUbNoAKDU3NGMwOWRhNDhhNWEwZmY0YzMyZGQ0NTc3ZWFmNjViYWM4Yzk0YTA", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-12-15T14:11:58Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-12-17T10:12:53Z"}, "message": "libgcc, Darwin: Add missing build dependencies.\n\nThere was a race condition where the link for the new shared EH library\n(only used on earlier Darwin) could fail because the new crts had not been\ncopied to the gcc directory.  This can cause a build failure (although\ncurrently only seen on powerpc-darwin).\n\nFixed by adding specific dependency on the crts and on the multi target.\nWe also add the declaration header for the Darwin10 unwinder shim to the\npowerpc cases, since we build that there for Rosetta use.\n\nSigned-off-by: Iain Sandoe <iain@sandoe.co.uk>\n\nlibgcc/ChangeLog:\n\n\t* config.host: Add shim declaration header to powerpc*-darwin builds.\n\t* config/rs6000/t-darwin-ehs: Remove dependency on the powerpc end\n\tfile.\n\t* config/t-darwin-ehs: Add dependencies to the shared unwinder\n\tobjects.\n\t* config/t-slibgcc-darwin: Add extra_parts to the dependencies for\n\tthe shared EH lib.  Add all-multi to the dependencies for the\n\tlibgcc_s.1.dylib redirections.", "tree": {"sha": "bbd48f012b5c703361676ecb157284ea04798fd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbd48f012b5c703361676ecb157284ea04798fd9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/574c09da48a5a0ff4c32dd4577eaf65bac8c94a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/574c09da48a5a0ff4c32dd4577eaf65bac8c94a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/574c09da48a5a0ff4c32dd4577eaf65bac8c94a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/574c09da48a5a0ff4c32dd4577eaf65bac8c94a0/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80091f9426809d3cba111025e7e1e943d952e2f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80091f9426809d3cba111025e7e1e943d952e2f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80091f9426809d3cba111025e7e1e943d952e2f1"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "ad0cdb284c71597bfa69a62406b0067419f34ddc", "filename": "libgcc/config.host", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/574c09da48a5a0ff4c32dd4577eaf65bac8c94a0/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/574c09da48a5a0ff4c32dd4577eaf65bac8c94a0/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=574c09da48a5a0ff4c32dd4577eaf65bac8c94a0", "patch": "@@ -1140,10 +1140,14 @@ powerpc-*-darwin*)\n \t  md_unwind_header=rs6000/darwin-unwind.h\n \t  ;;\n \tesac\n+\t#\u00a0We build the darwin10 EH shim for Rosetta (running on x86 machines).\n+\ttm_file=\"$tm_file i386/darwin-lib.h\"\n \ttmake_file=\"$tmake_file rs6000/t-ppc64-fp rs6000/t-ibm-ldouble\"\n \textra_parts=\"$extra_parts crt2.o crt3_2.o libef_ppc.a dw_ppc.o\"\n \t;;\n powerpc64-*-darwin*)\n+\t#\u00a0We build the darwin10 EH shim for Rosetta (running on x86 machines).\n+\ttm_file=\"$tm_file i386/darwin-lib.h\"\n \ttmake_file=\"$tmake_file rs6000/t-darwin64 rs6000/t-ibm-ldouble\"\n \textra_parts=\"$extra_parts crt2.o crt3_2.o libef_ppc.a dw_ppc.o\"\n \t;;"}, {"sha": "42f521411af731fbe2d74ca8d69f7e3bd4674843", "filename": "libgcc/config/rs6000/t-darwin-ehs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/574c09da48a5a0ff4c32dd4577eaf65bac8c94a0/libgcc%2Fconfig%2Frs6000%2Ft-darwin-ehs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/574c09da48a5a0ff4c32dd4577eaf65bac8c94a0/libgcc%2Fconfig%2Frs6000%2Ft-darwin-ehs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frs6000%2Ft-darwin-ehs?ref=574c09da48a5a0ff4c32dd4577eaf65bac8c94a0", "patch": "@@ -1,5 +1,3 @@\n # We need the save_world code for the EH library.\n \n-LIBEHSOBJS +=  darwin-world_s.o\n-\n-$(LIBEHSOBJS): libef_ppc.a\n+LIBEHSOBJS += darwin-world_s.o"}, {"sha": "95275023dac40ccdd7ef0c60d54c6518d5833238", "filename": "libgcc/config/t-darwin-ehs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/574c09da48a5a0ff4c32dd4577eaf65bac8c94a0/libgcc%2Fconfig%2Ft-darwin-ehs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/574c09da48a5a0ff4c32dd4577eaf65bac8c94a0/libgcc%2Fconfig%2Ft-darwin-ehs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-darwin-ehs?ref=574c09da48a5a0ff4c32dd4577eaf65bac8c94a0", "patch": "@@ -2,3 +2,6 @@\n # libgcc_s.1 on systems that used the unwinder in libgcc_s.\n \n LIBEHSOBJS = unwind-dw2_s.o unwind-dw2-fde-darwin_s.o unwind-c_s.o\n+\n+unwind-dw2_s.o: gthr-default.h md-unwind-support.h\n+$(LIBEHSOBJS): libgcc_tm.h"}, {"sha": "a8f69666a829df39003020dfc68551c461afe36b", "filename": "libgcc/config/t-slibgcc-darwin", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/574c09da48a5a0ff4c32dd4577eaf65bac8c94a0/libgcc%2Fconfig%2Ft-slibgcc-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/574c09da48a5a0ff4c32dd4577eaf65bac8c94a0/libgcc%2Fconfig%2Ft-slibgcc-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-slibgcc-darwin?ref=574c09da48a5a0ff4c32dd4577eaf65bac8c94a0", "patch": "@@ -59,9 +59,8 @@ ifneq ($(LIBEHSOBJS),)\n EHS_INSTNAME = libgcc_ehs.$(SHLIB_SOVERSION)$(SHLIB_EXT)\n \n # multilib build for a shared EH lib.\n-$(LIBEHSOBJS): libgcc_tm.h\n \n-libgcc_ehs$(SHLIB_EXT): $(LIBEHSOBJS)\n+libgcc_ehs$(SHLIB_EXT): $(LIBEHSOBJS) $(extra-parts)\n \tmkdir -p $(MULTIDIR)\n \t$(CC) $(LIBGCC2_CFLAGS) $(LDFLAGS) -dynamiclib -nodefaultlibs \\\n \t-install_name $(SHLIB_INSTALL_DIR)/$(EHS_INSTNAME) \\\n@@ -113,7 +112,8 @@ libgcc_ehs.$(SHLIB_SOVERSION)$(SHLIB_EXT): all-multi libgcc_ehs$(SHLIB_EXT)\n \trm libgcc_ehs.$(SHLIB_SOVERSION)$(SHLIB_EXT)_T*\n \n \n-libgcc_s.1.dylib: libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT) libgcc_ehs.$(SHLIB_SOVERSION)$(SHLIB_EXT)\n+libgcc_s.1.dylib: all-multi libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT) \\\n+\t\t  libgcc_ehs.$(SHLIB_SOVERSION)$(SHLIB_EXT)\n \tMLIBS=`$(CC) --print-multi-lib | sed -e 's/;.*$$//'` ; \\\n \tfor mlib in $$MLIBS ; do \\\n \t  cp ../$${mlib}/libgcc/$${mlib}/libgcc_s$(SHLIB_EXT)  \\\n@@ -134,7 +134,7 @@ libgcc_s.1.dylib: libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT) libgcc_ehs.$(SHLIB_SOV\n \n else\n \n-libgcc_s.1.dylib: libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT)\n+libgcc_s.1.dylib: all-multi libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT)\n \tMLIBS=`$(CC) --print-multi-lib | sed -e 's/;.*$$//'` ; \\\n \tfor mlib in $$MLIBS ; do \\\n \t  cp ../$${mlib}/libgcc/$${mlib}/libgcc_s$(SHLIB_EXT)  \\"}]}