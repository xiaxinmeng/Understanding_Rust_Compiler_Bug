{"sha": "577565f9349ec94277f1867077056df1f59427f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc3NTY1ZjkzNDllYzk0Mjc3ZjE4NjcwNzcwNTZkZjFmNTk0MjdmNA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-04-03T07:37:56Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-04-03T07:37:56Z"}, "message": "config.gcc (i[34567]86-*-linux*): Add i386/t-crtpc to tm-file.\n\n\t* config.gcc (i[34567]86-*-linux*): Add i386/t-crtpc to tm-file.\n\t(x86_64-*-linux*): Ditto.\n\t* config/i386/i386.opt (mpc): New option.\n\t* config/i386/i386.c (overrride_options): Handle\n\tix87_precision_string.\n\t* config/i386/crtprec.c: New file.\n\t* config/i386/t-crtpc: Ditto.\n\t* config/i386/linux.h (ENDFILE_SPEC): Add handling of -mpc32, -mpc64\n\tand -mpc80 options.\n\t* config/i386/linux64.h (ENDFILE_SPEC): Ditto.\n\t* config/i386/t-linux64 (EXTRA_MULTILIB_PARTS): Add\n\tcrtprec32.o, crtprec64.o and crtprec80.o.\n\n\t* doc/invoke.texi (Machine Dependent Options): Add -mpc32, -mpc64\n\tand -mpc80 options.\n\t(i386 and x86-64 Options): Document -mpc32, -mpc64 and -mpc80 options.\n\nlibgcc/ChangeLog:\n\n\t* config/i386/t-crtpc: New file.\n\t* config.host (i[34567]86-*-linux*): Add i386/t-crtpc to tm-file.\n        (x86_64-*-linux*): Ditto.\n\nFrom-SVN: r123450", "tree": {"sha": "9ef0f139d7178683b8cd1dc53dbd0d6d07b7a86b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ef0f139d7178683b8cd1dc53dbd0d6d07b7a86b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/577565f9349ec94277f1867077056df1f59427f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/577565f9349ec94277f1867077056df1f59427f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/577565f9349ec94277f1867077056df1f59427f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/577565f9349ec94277f1867077056df1f59427f4/comments", "author": null, "committer": null, "parents": [{"sha": "8854e14c61b79559e4c3cb5c251149071bbfee45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8854e14c61b79559e4c3cb5c251149071bbfee45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8854e14c61b79559e4c3cb5c251149071bbfee45"}], "stats": {"total": 157, "additions": 148, "deletions": 9}, "files": [{"sha": "e9656a05abc8ca255f09591c5d5a67ef8e78f45d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/577565f9349ec94277f1867077056df1f59427f4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/577565f9349ec94277f1867077056df1f59427f4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=577565f9349ec94277f1867077056df1f59427f4", "patch": "@@ -1,3 +1,22 @@\n+2007-04-03  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config.gcc (i[34567]86-*-linux*): Add i386/t-crtpc to tm-file.\n+\t(x86_64-*-linux*): Ditto.\n+\t* config/i386/i386.opt (mpc): New option.\n+\t* config/i386/i386.c (overrride_options): Handle\n+\tix87_precision_string.\n+\t* config/i386/crtprec.c: New file.\n+\t* config/i386/t-crtpc: Ditto.\n+\t* config/i386/linux.h (ENDFILE_SPEC): Add handling of -mpc32, -mpc64\n+\tand -mpc80 options.\n+\t* config/i386/linux64.h (ENDFILE_SPEC): Ditto.\n+\t* config/i386/t-linux64 (EXTRA_MULTILIB_PARTS): Add\n+\tcrtprec32.o, crtprec64.o and crtprec80.o.\n+\n+\t* doc/invoke.texi (Machine Dependent Options): Add -mpc32, -mpc64\n+\tand -mpc80 options.\n+\t(i386 and x86-64 Options): Document -mpc32, -mpc64 and -mpc80 options.\n+\n 2007-04-02  Eric Christopher  <echristo@apple.com>\n \n \t* doc/invoke.texi (i386 and x86-64 Options): Document -m64\n@@ -64,7 +83,7 @@\n \t(call_value): Likewise.\n \n 2007-03-31  Wolfgang Bangerth  <bangerth@dealii.org>\n-            Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\t    Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n \n \tPR 14737\n \t* doc/invoke.texi: (optimization options): Reword description"}, {"sha": "476f7bdbd430d58963ca456ade8058c7aff4b324", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/577565f9349ec94277f1867077056df1f59427f4/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/577565f9349ec94277f1867077056df1f59427f4/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=577565f9349ec94277f1867077056df1f59427f4", "patch": "@@ -1147,7 +1147,7 @@ i[34567]86-*-linux* | i[34567]86-*-kfreebsd*-gnu | i[34567]86-*-knetbsd*-gnu)\n \ti[34567]86-*-knetbsd*-gnu) tm_file=\"${tm_file} i386/linux.h knetbsd-gnu.h i386/knetbsd-gnu.h\" ;;\n \ti[34567]86-*-kfreebsd*-gnu) tm_file=\"${tm_file} i386/linux.h kfreebsd-gnu.h i386/kfreebsd-gnu.h\" ;;\n \tesac\n-\ttmake_file=\"${tmake_file} i386/t-crtstuff i386/t-crtfm t-dfprules\"\n+\ttmake_file=\"${tmake_file} i386/t-crtstuff i386/t-crtpc i386/t-crtfm t-dfprules\"\n \t;;\n x86_64-*-linux* | x86_64-*-kfreebsd*-gnu | x86_64-*-knetbsd*-gnu)\n \ttm_file=\"${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h svr4.h linux.h \\\n@@ -1156,7 +1156,7 @@ x86_64-*-linux* | x86_64-*-kfreebsd*-gnu | x86_64-*-knetbsd*-gnu)\n \tx86_64-*-kfreebsd*-gnu) tm_file=\"${tm_file} kfreebsd-gnu.h\" ;;\n \tx86_64-*-knetbsd*-gnu) tm_file=\"${tm_file} knetbsd-gnu.h\" ;;\n \tesac\n-\ttmake_file=\"${tmake_file} i386/t-linux64 i386/t-crtfm t-dfprules\"\n+\ttmake_file=\"${tmake_file} i386/t-linux64 i386/t-crtpc i386/t-crtfm t-dfprules\"\n \t;;\n i[34567]86-*-gnu*)\n \t;;"}, {"sha": "0c98b81523361c8364f349b9aa88d2d6e444540f", "filename": "gcc/config/i386/crtprec.c", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/577565f9349ec94277f1867077056df1f59427f4/gcc%2Fconfig%2Fi386%2Fcrtprec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/577565f9349ec94277f1867077056df1f59427f4/gcc%2Fconfig%2Fi386%2Fcrtprec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcrtprec.c?ref=577565f9349ec94277f1867077056df1f59427f4", "patch": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright (C) 2007 Free Software Foundation, Inc.\n+ *\n+ * This file is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU General Public License as published by the\n+ * Free Software Foundation; either version 2, or (at your option) any\n+ * later version.\n+ * \n+ * In addition to the permissions in the GNU General Public License, the\n+ * Free Software Foundation gives you unlimited permission to link the\n+ * compiled version of this file with other programs, and to distribute\n+ * those programs without any restriction coming from the use of this\n+ * file.  (The General Public License restrictions do apply in other\n+ * respects; for example, they cover modification of the file, and\n+ * distribution when not linked into another program.)\n+ * \n+ * This file is distributed in the hope that it will be useful, but\n+ * WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * General Public License for more details.\n+ * \n+ * You should have received a copy of the GNU General Public License\n+ * along with this program; see the file COPYING.  If not, write to\n+ * the Free Software Foundation, 51 Franklin Street, Fifth Floor,\n+ * Boston, MA 02110-1301, USA.\n+ * \n+ *    As a special exception, if you link this library with files\n+ *    compiled with GCC to produce an executable, this does not cause\n+ *    the resulting executable to be covered by the GNU General Public License.\n+ *    This exception does not however invalidate any other reasons why\n+ *    the executable file might be covered by the GNU General Public License.\n+ */\n+\n+#if __PREC == 32\n+ #define X87CW\t\t(0 << 8)\t/* Single precision (24 bits) */\n+#elif __PREC == 64\n+ #define X87CW\t\t(2 << 8)\t/* Double precision (53 bits) */\n+#elif __PREC == 80\n+ #define X87CW\t\t(3 << 8)\t/* Extended precision (64 bits) */\n+#else\n+ #error \"Wrong precision requested.\"\n+#endif\n+\n+#define X87CW_PCMASK\t(3 << 8)\n+\n+static void __attribute__((constructor))\n+set_precision (void)\n+{\n+  unsigned short int cwd;\n+\n+  asm volatile (\"fstcw\\t%0\" : \"=m\" (cwd));\n+\n+  cwd &= ~X87CW_PCMASK;\n+  cwd |= X87CW;\n+\n+  asm volatile (\"fldcw\\t%0\" : : \"m\" (cwd));\n+}"}, {"sha": "a7823082443c5619229ed7239cd564b871155e94", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/577565f9349ec94277f1867077056df1f59427f4/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/577565f9349ec94277f1867077056df1f59427f4/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=577565f9349ec94277f1867077056df1f59427f4", "patch": "@@ -2095,6 +2095,13 @@ override_options (void)\n \t       ix86_tls_dialect_string);\n     }\n \n+  if (ix87_precision_string)\n+    {\n+      i = atoi (ix87_precision_string);\n+      if (i != 32 && i != 64 && i != 80)\n+\terror (\"pc%d is not valid precision setting (32, 64 or 80)\", i);\n+    }\n+\n   /* Keep nonleaf frame pointers.  */\n   if (flag_omit_frame_pointer)\n     target_flags &= ~MASK_OMIT_LEAF_FRAME_POINTER;"}, {"sha": "59b7bfe65ceff7ea50e01fb6f922ddd45a71d96f", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/577565f9349ec94277f1867077056df1f59427f4/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/577565f9349ec94277f1867077056df1f59427f4/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=577565f9349ec94277f1867077056df1f59427f4", "patch": "@@ -151,6 +151,10 @@ momit-leaf-frame-pointer\n Target Report Mask(OMIT_LEAF_FRAME_POINTER)\n Omit the frame pointer in leaf functions\n \n+mpc\n+Target RejectNegative Report Joined Var(ix87_precision_string)\n+Set 80387 floating-point precision (-mpc32, -mpc64, -mpc80)\n+\n mpentium\n Target RejectNegative Undocumented\n ;; Deprecated"}, {"sha": "f0f7df600fa7ac30db986e5b5b95b78e67ea8f5a", "filename": "gcc/config/i386/linux.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/577565f9349ec94277f1867077056df1f59427f4/gcc%2Fconfig%2Fi386%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/577565f9349ec94277f1867077056df1f59427f4/gcc%2Fconfig%2Fi386%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux.h?ref=577565f9349ec94277f1867077056df1f59427f4", "patch": "@@ -121,6 +121,9 @@ Boston, MA 02110-1301, USA.  */\n #undef  ENDFILE_SPEC\n #define ENDFILE_SPEC \\\n   \"%{ffast-math|funsafe-math-optimizations:crtfastmath.o%s} \\\n+   %{mpc32:crtprec32.o%s} \\\n+   %{mpc64:crtprec64.o%s} \\\n+   %{mpc80:crtprec80.o%s} \\\n    %{shared|pie:crtendS.o%s;:crtend.o%s} crtn.o%s\"\n \n /* A C statement (sans semicolon) to output to the stdio stream"}, {"sha": "c6a7c88d8832df8b75058e530cb565a8de398ffb", "filename": "gcc/config/i386/linux64.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/577565f9349ec94277f1867077056df1f59427f4/gcc%2Fconfig%2Fi386%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/577565f9349ec94277f1867077056df1f59427f4/gcc%2Fconfig%2Fi386%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Flinux64.h?ref=577565f9349ec94277f1867077056df1f59427f4", "patch": "@@ -78,6 +78,9 @@ Boston, MA 02110-1301, USA.  */\n #undef  ENDFILE_SPEC\n #define ENDFILE_SPEC \\\n   \"%{ffast-math|funsafe-math-optimizations:crtfastmath.o%s} \\\n+   %{mpc32:crtprec32.o%s} \\\n+   %{mpc64:crtprec64.o%s} \\\n+   %{mpc80:crtprec80.o%s} \\\n    %{shared|pie:crtendS.o%s;:crtend.o%s} crtn.o%s\"\n \n #if TARGET_64BIT_DEFAULT"}, {"sha": "af8947bff9003da0f94faea509dac7ebfccf8621", "filename": "gcc/config/i386/t-crtpc", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/577565f9349ec94277f1867077056df1f59427f4/gcc%2Fconfig%2Fi386%2Ft-crtpc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/577565f9349ec94277f1867077056df1f59427f4/gcc%2Fconfig%2Fi386%2Ft-crtpc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-crtpc?ref=577565f9349ec94277f1867077056df1f59427f4", "patch": "@@ -0,0 +1,16 @@\n+EXTRA_PARTS += crtprec32.o crtprec64.o crtprec80.o\n+\n+$(T)crtprec32.o: $(srcdir)/config/i386/crtprec.c $(GCC_PASSES)\n+\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -D__PREC=32 -c \\\n+\t\t$(srcdir)/config/i386/crtprec.c \\\n+\t\t-o $(T)crtprec32$(objext)\n+\n+$(T)crtprec64.o: $(srcdir)/config/i386/crtprec.c $(GCC_PASSES)\n+\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -D__PREC=64 -c \\\n+\t\t$(srcdir)/config/i386/crtprec.c \\\n+\t\t-o $(T)crtprec64$(objext)\n+\n+$(T)crtprec80.o: $(srcdir)/config/i386/crtprec.c $(GCC_PASSES)\n+\t$(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -D__PREC=80 -c \\\n+\t\t$(srcdir)/config/i386/crtprec.c \\\n+\t\t-o $(T)crtprec80$(objext)"}, {"sha": "f875126021e34de9971f06d77f56cd47603eb154", "filename": "gcc/config/i386/t-linux64", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/577565f9349ec94277f1867077056df1f59427f4/gcc%2Fconfig%2Fi386%2Ft-linux64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/577565f9349ec94277f1867077056df1f59427f4/gcc%2Fconfig%2Fi386%2Ft-linux64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-linux64?ref=577565f9349ec94277f1867077056df1f59427f4", "patch": "@@ -12,7 +12,8 @@ LIBGCC = stmp-multilib\n INSTALL_LIBGCC = install-multilib\n \n EXTRA_MULTILIB_PARTS=crtbegin.o crtend.o crtbeginS.o crtendS.o \\\n-\t\t     crtbeginT.o crtfastmath.o\n+\t\t     crtbeginT.o crtprec32.o crtprec64.o crtprec80.o \\\n+\t\t     crtfastmath.o\n \n # The pushl in CTOR initialization interferes with frame pointer elimination.\n # crtend*.o cannot be compiled without -fno-asynchronous-unwind-tables,"}, {"sha": "e66977af95f7eea9b3e2ad53a146ceae86cd7a94", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/577565f9349ec94277f1867077056df1f59427f4/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/577565f9349ec94277f1867077056df1f59427f4/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=577565f9349ec94277f1867077056df1f59427f4", "patch": "@@ -548,7 +548,7 @@ Objective-C and Objective-C++ Dialects}.\n -mthreads  -mno-align-stringops  -minline-all-stringops @gol\n -mpush-args  -maccumulate-outgoing-args  -m128bit-long-double @gol\n -m96bit-long-double  -mregparm=@var{num}  -msseregparm @gol\n--mstackrealign @gol\n+-mpc32 -mpc64 -mpc80 mstackrealign @gol\n -momit-leaf-frame-pointer  -mno-red-zone -mno-tls-direct-seg-refs @gol\n -mcmodel=@var{code-model} @gol\n -m32  -m64 -mlarge-data-threshold=@var{num}}\n@@ -10018,6 +10018,21 @@ function by using the function attribute @samp{sseregparm}.\n modules with the same value, including any libraries.  This includes\n the system libraries and startup modules.\n \n+@item -mpc32\n+@itemx -mpc64\n+@itemx -mpc80\n+@opindex mpc32\n+@opindex mpc64\n+@opindex mpc80\n+\n+Set 80387 floating-point precision to 32, 64 or 80 bits.  When @option{-mpc32}\n+is specified, the significand of floating-point operations is rounded to 24\n+bits (single precision), @option{-mpc64} rounds the significand of\n+floating-point operations to 53 bits (double precision) and @option{-mpc80}\n+rounds the significand of floating-point operations to 64 bits (extended\n+double precision).  Note that a change of default precision control may\n+affect the results returned by some of the mathematical functions.\n+\n @item -mstackrealign\n @opindex mstackrealign\n Realign the stack at entry.  On the Intel x86, the"}, {"sha": "6b1c4b14023ca6958462a754d2bacc540271ae3a", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/577565f9349ec94277f1867077056df1f59427f4/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/577565f9349ec94277f1867077056df1f59427f4/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=577565f9349ec94277f1867077056df1f59427f4", "patch": "@@ -1,3 +1,9 @@\n+2007-04-03  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/t-crtpc: New file.\n+\t* config.host (i[34567]86-*-linux*): Add i386/t-crtpc to tm-file.\n+        (x86_64-*-linux*): Ditto.\n+\n 2007-02-30  Kai Tietz  <kai.tietz@onevision.com>\n \n \t* config.host (x86_64-*-mingw*): New target."}, {"sha": "3e575ab7cb66e1bd428ee620f1c7196896b2c13f", "filename": "libgcc/config.host", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/577565f9349ec94277f1867077056df1f59427f4/libgcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/577565f9349ec94277f1867077056df1f59427f4/libgcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig.host?ref=577565f9349ec94277f1867077056df1f59427f4", "patch": "@@ -328,12 +328,12 @@ i[34567]86-*-openbsd*)\n i[34567]86-*-coff*)\n \t;;\n i[34567]86-*-linux* | i[34567]86-*-kfreebsd*-gnu | i[34567]86-*-knetbsd*-gnu)\n-\textra_parts=\"$extra_parts crtfastmath.o\"\n-\ttmake_file=\"${tmake_file} i386/t-crtfm\"\n+\textra_parts=\"$extra_parts crtprec32.o crtprec64.o crtprec80.o crtfastmath.o\"\n+\ttmake_file=\"${tmake_file} i386/t-crtpc i386/t-crtfm\"\n \t;;\n x86_64-*-linux* | x86_64-*-kfreebsd*-gnu | x86_64-*-knetbsd*-gnu)\n-\textra_parts=\"$extra_parts crtfastmath.o\"\n-\ttmake_file=\"${tmake_file} i386/t-crtfm\"\n+\textra_parts=\"$extra_parts crtprec32.o crtprec64.o crtprec80.o crtfastmath.o\"\n+\ttmake_file=\"${tmake_file} i386/t-crtpc i386/t-crtfm\"\n \t;;\n i[34567]86-*-gnu*)\n \t;;"}, {"sha": "c231ce195f2e5e24d8802bb5b64a9fda853b2359", "filename": "libgcc/config/i386/t-crtpc", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/577565f9349ec94277f1867077056df1f59427f4/libgcc%2Fconfig%2Fi386%2Ft-crtpc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/577565f9349ec94277f1867077056df1f59427f4/libgcc%2Fconfig%2Fi386%2Ft-crtpc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Ft-crtpc?ref=577565f9349ec94277f1867077056df1f59427f4", "patch": "@@ -0,0 +1,8 @@\n+crtprec32.o: $(gcc_srcdir)/config/i386/crtprec.c\n+\t$(gcc_compile) -D__PREC=32 -c $<\n+\n+crtprec64.o: $(gcc_srcdir)/config/i386/crtprec.c\n+\t$(gcc_compile) -D__PREC=64 -c $<\n+\n+crtprec80.o: $(gcc_srcdir)/config/i386/crtprec.c\n+\t$(gcc_compile) -D__PREC=80 -c $<"}]}