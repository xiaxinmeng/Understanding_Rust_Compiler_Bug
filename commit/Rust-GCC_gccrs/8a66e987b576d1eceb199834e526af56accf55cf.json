{"sha": "8a66e987b576d1eceb199834e526af56accf55cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGE2NmU5ODdiNTc2ZDFlY2ViMTk5ODM0ZTUyNmFmNTZhY2NmNTVjZg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2009-05-28T16:26:23Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2009-05-28T16:26:23Z"}, "message": "lib1funcs.asm (__clear_cache): Define if L_clear_cache.\n\n\t* config/arm/lib1funcs.asm (__clear_cache): Define if\n\tL_clear_cache.\n\t* config/arm/linux-eabi.h (CLEAR_INSN_CACHE): Define to give an\n\terror if used.\n\t* config/arm/t-linux-eabi (LIB1ASMFUNCS): Add _clear_cache.\n\nFrom-SVN: r147956", "tree": {"sha": "f63844b950154685978c57cd4ac7beaeb7fb5b3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f63844b950154685978c57cd4ac7beaeb7fb5b3f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a66e987b576d1eceb199834e526af56accf55cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a66e987b576d1eceb199834e526af56accf55cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a66e987b576d1eceb199834e526af56accf55cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a66e987b576d1eceb199834e526af56accf55cf/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b45d27197ff43c93ec0ffbb0303ca9a408e4e555", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b45d27197ff43c93ec0ffbb0303ca9a408e4e555", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b45d27197ff43c93ec0ffbb0303ca9a408e4e555"}], "stats": {"total": 49, "additions": 35, "deletions": 14}, "files": [{"sha": "33a9038c58f81cd69983c6c679f227413da6b050", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a66e987b576d1eceb199834e526af56accf55cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a66e987b576d1eceb199834e526af56accf55cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8a66e987b576d1eceb199834e526af56accf55cf", "patch": "@@ -1,3 +1,11 @@\n+2009-05-28  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/arm/lib1funcs.asm (__clear_cache): Define if\n+\tL_clear_cache.\n+\t* config/arm/linux-eabi.h (CLEAR_INSN_CACHE): Define to give an\n+\terror if used.\n+\t* config/arm/t-linux-eabi (LIB1ASMFUNCS): Add _clear_cache.\n+\n 2009-05-28  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-ssa-alias.c (ao_ref_init): New function."}, {"sha": "cc5b94e91fe31a3b2f67c21f4f46c0a95a8d17da", "filename": "gcc/config/arm/lib1funcs.asm", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a66e987b576d1eceb199834e526af56accf55cf/gcc%2Fconfig%2Farm%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a66e987b576d1eceb199834e526af56accf55cf/gcc%2Fconfig%2Farm%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flib1funcs.asm?ref=8a66e987b576d1eceb199834e526af56accf55cf", "patch": "@@ -1096,6 +1096,27 @@ LSYM(Lover12):\n \tFUNC_END div0\n \t\n #endif /* L_dvmd_lnx */\n+#ifdef L_clear_cache\n+#if defined __ARM_EABI__ && defined __linux__\n+@ EABI GNU/Linux call to cacheflush syscall.\n+\tFUNC_START clear_cache\n+\tpush\t{r7}\n+#if __ARM_ARCH__ >= 7 || defined(__ARM_ARCH_6T2__)\n+\tmovw\tr7, #2\n+\tmovt\tr7, #0xf\n+#else\n+\tmov\tr7, #0xf0000\n+\tadd\tr7, r7, #2\n+#endif\n+\tmov\tr2, #0\n+\tswi\t0\n+\tpop\t{r7}\n+\tRET\n+\tFUNC_END clear_cache\n+#else\n+#error \"This is only for ARM EABI GNU/Linux\"\n+#endif\n+#endif /* L_clear_cache */\n /* ------------------------------------------------------------------------ */\n /* Dword shift operations.  */\n /* All the following Dword shift variants rely on the fact that"}, {"sha": "85410c09fa4a7997e0d31c1b23eded3d746fd9d5", "filename": "gcc/config/arm/linux-eabi.h", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a66e987b576d1eceb199834e526af56accf55cf/gcc%2Fconfig%2Farm%2Flinux-eabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a66e987b576d1eceb199834e526af56accf55cf/gcc%2Fconfig%2Farm%2Flinux-eabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flinux-eabi.h?ref=8a66e987b576d1eceb199834e526af56accf55cf", "patch": "@@ -72,16 +72,8 @@\n    do not use -lfloat.  */\n #undef LIBGCC_SPEC\n \n-/* Clear the instruction cache from `beg' to `end'.  This makes an\n-   inline system call to SYS_cacheflush.  */\n+/* Clear the instruction cache from `beg' to `end'.  This is\n+   implemented in lib1funcs.asm, so ensure an error if this definition\n+   is used.  */\n #undef  CLEAR_INSN_CACHE\n-#define CLEAR_INSN_CACHE(BEG, END)\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  register unsigned long _beg __asm (\"a1\") = (unsigned long) (BEG);\t\\\n-  register unsigned long _end __asm (\"a2\") = (unsigned long) (END);\t\\\n-  register unsigned long _flg __asm (\"a3\") = 0;\t\t\t\t\\\n-  register unsigned long _scno __asm (\"r7\") = 0xf0002;\t\t\t\\\n-  __asm __volatile (\"swi 0\t\t@ sys_cacheflush\"\t\t\\\n-\t\t    : \"=r\" (_beg)\t\t\t\t\t\\\n-\t\t    : \"0\" (_beg), \"r\" (_end), \"r\" (_flg), \"r\" (_scno));\t\\\n-}\n+#define CLEAR_INSN_CACHE(BEG, END) not used"}, {"sha": "b8a5ce04e65446f009d1b3075bd01a73810552fd", "filename": "gcc/config/arm/t-linux-eabi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a66e987b576d1eceb199834e526af56accf55cf/gcc%2Fconfig%2Farm%2Ft-linux-eabi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a66e987b576d1eceb199834e526af56accf55cf/gcc%2Fconfig%2Farm%2Ft-linux-eabi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-linux-eabi?ref=8a66e987b576d1eceb199834e526af56accf55cf", "patch": "@@ -24,8 +24,8 @@ TARGET_LIBGCC2_CFLAGS = -fPIC\n MULTILIB_OPTIONS\t=\n MULTILIB_DIRNAMES\t=\n \n-# Use a version of div0 which raises SIGFPE.\n-LIB1ASMFUNCS := $(filter-out _dvmd_tls,$(LIB1ASMFUNCS)) _dvmd_lnx\n+# Use a version of div0 which raises SIGFPE, and a special __clear_cache.\n+LIB1ASMFUNCS := $(filter-out _dvmd_tls,$(LIB1ASMFUNCS)) _dvmd_lnx _clear_cache\n \n # Multilib the standard Linux files.  Don't include crti.o or crtn.o,\n # which are provided by glibc."}]}