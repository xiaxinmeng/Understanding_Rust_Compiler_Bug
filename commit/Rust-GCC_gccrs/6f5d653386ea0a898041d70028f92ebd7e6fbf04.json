{"sha": "6f5d653386ea0a898041d70028f92ebd7e6fbf04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY1ZDY1MzM4NmVhMGE4OTgwNDFkNzAwMjhmOTJlYmQ3ZTZmYmYwNA==", "commit": {"author": {"name": "Roman Kennke", "email": "roman@kennke.org", "date": "2005-04-19T06:23:00Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2005-04-19T06:23:00Z"}, "message": "2005-04-19  Roman Kennke  <roman@kennke.org>\n\n\t* javax/swing/plaf/basic/BasicMenuUI.java\n\t(getMaximumSize): Now returns preferredSize because JMenu should\n\tnever be bigger than that.\n\t* javax/swing/JRootPane\n\t(RootLayout.layoutContainer): Make JMenuBars take the whole width.\n\n2005-04-19  Roman Kennke  <roman@kennke.org>\n\n\t* javax/swing/JRootPane.java:\n\tFixed various tabs to be spaces.\n\t(RootLayout.layoutContainer): Made menubar left aligned.\n\nFrom-SVN: r98386", "tree": {"sha": "9048f5619c080c35509160c32aa3e7535cfd972e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9048f5619c080c35509160c32aa3e7535cfd972e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f5d653386ea0a898041d70028f92ebd7e6fbf04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f5d653386ea0a898041d70028f92ebd7e6fbf04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f5d653386ea0a898041d70028f92ebd7e6fbf04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f5d653386ea0a898041d70028f92ebd7e6fbf04/comments", "author": null, "committer": null, "parents": [{"sha": "48918616ef2f98bab5e09cae8fe726c153aa509f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48918616ef2f98bab5e09cae8fe726c153aa509f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48918616ef2f98bab5e09cae8fe726c153aa509f"}], "stats": {"total": 142, "additions": 78, "deletions": 64}, "files": [{"sha": "17dbed8850fa6440dcf594a5205336a0131e7e5f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5d653386ea0a898041d70028f92ebd7e6fbf04/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5d653386ea0a898041d70028f92ebd7e6fbf04/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=6f5d653386ea0a898041d70028f92ebd7e6fbf04", "patch": "@@ -1,3 +1,17 @@\n+2005-04-19  Roman Kennke  <roman@kennke.org>\n+\n+\t* javax/swing/plaf/basic/BasicMenuUI.java\n+\t(getMaximumSize): Now returns preferredSize because JMenu should\n+\tnever be bigger than that.\n+\t* javax/swing/JRootPane\n+\t(RootLayout.layoutContainer): Make JMenuBars take the whole width.\n+\n+2005-04-19  Roman Kennke  <roman@kennke.org>\n+\n+\t* javax/swing/JRootPane.java:\n+\tFixed various tabs to be spaces.\n+\t(RootLayout.layoutContainer): Made menubar left aligned.\n+\n 2005-04-19  Roman Kennke  <roman@ontographics.com>\n \n \t* javax/swing/JList.java"}, {"sha": "ee05d27f9ea88d6438acca127ad6308bbf6ce9dd", "filename": "libjava/javax/swing/JRootPane.java", "status": "modified", "additions": 63, "deletions": 63, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5d653386ea0a898041d70028f92ebd7e6fbf04/libjava%2Fjavax%2Fswing%2FJRootPane.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5d653386ea0a898041d70028f92ebd7e6fbf04/libjava%2Fjavax%2Fswing%2FJRootPane.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2FJRootPane.java?ref=6f5d653386ea0a898041d70028f92ebd7e6fbf04", "patch": "@@ -189,52 +189,52 @@ public void layoutContainer(Container c)\n       */\n       if (containerSize.width == 0 && containerSize.height == 0)\n         {\n-\t  if (menuBar != null)\n-\t    {\n-\t      int maxWidth;\n-\t      menuBarSize = menuBar.getPreferredSize();\n-\t      maxWidth = Math.max(menuBarSize.width, contentPaneSize.width);\n-\t      menuBar.setBounds(0, 0, maxWidth, menuBarSize.height);\n-\t      glassPane.setBounds(0, menuBarSize.height, maxWidth,\n-\t                          contentPaneSize.height);\n-\t      contentPane.setBounds(0, menuBarSize.height, maxWidth,\n-\t                            contentPaneSize.height);\n-\t      layeredPane.setSize(maxWidth,\n-\t                          menuBarSize.height + contentPaneSize.height);\n-\t    }\n-\t  else\n-\t    {\n-\t      glassPane.setBounds(0, 0, contentPaneSize.width,\n-\t                          contentPaneSize.height);\n-\t      contentPane.setBounds(0, 0, contentPaneSize.width,\n-\t                            contentPaneSize.height);\n-\t      layeredPane.setSize(contentPaneSize.width, contentPaneSize.height);\n-\t    }\n+          if (menuBar != null)\n+            {\n+              int maxWidth;\n+              menuBarSize = menuBar.getPreferredSize();\n+              maxWidth = Math.max(menuBarSize.width, contentPaneSize.width);\n+              menuBar.setBounds(0, 0, maxWidth, menuBarSize.height);\n+              glassPane.setBounds(0, menuBarSize.height, maxWidth,\n+                                  contentPaneSize.height);\n+              contentPane.setBounds(0, menuBarSize.height, maxWidth,\n+                                    contentPaneSize.height);\n+              layeredPane.setSize(maxWidth,\n+                                  menuBarSize.height + contentPaneSize.height);\n+            }\n+          else\n+            {\n+              glassPane.setBounds(0, 0, contentPaneSize.width,\n+                                  contentPaneSize.height);\n+              contentPane.setBounds(0, 0, contentPaneSize.width,\n+                                    contentPaneSize.height);\n+              layeredPane.setSize(contentPaneSize.width, contentPaneSize.height);\n+            }\n         }\n       else\n         {\n-\t  if (menuBar != null)\n-\t    {\n-\t      menuBarSize = menuBar.getPreferredSize();\n-\t      if (menuBarSize.height > containerSize.height)\n-\t\tmenuBarSize.height = containerSize.height;\n-\t      menuBar.setBounds(0, 0, containerSize.width, menuBarSize.height);\n-\t      int remainingHeight = containerSize.height - menuBarSize.height;\n-\t      glassPane.setBounds(0, menuBarSize.height, containerSize.width,\n-\t                          containerSize.height - menuBarSize.height);\n-\t      contentPane.setBounds(0, menuBarSize.height,\n-\t                            containerSize.width,\n-\t                            (containerSize.height - menuBarSize.height));\n-\t    }\n-\t  else\n-\t    {\n-\t      glassPane.setBounds(0, 0, containerSize.width,\n-\t                          containerSize.height);\n-\t      contentPane.setBounds(0, 0, containerSize.width,\n-\t                            containerSize.height);\n-\t    }\n-\n-\t  layeredPane.setSize(containerSize.width, containerSize.height);\n+          if (menuBar != null)\n+            {\n+              menuBarSize = menuBar.getPreferredSize();\n+              if (menuBarSize.height > containerSize.height)\n+                menuBarSize.height = containerSize.height;\n+              menuBar.setBounds(0, 0, containerSize.width, menuBarSize.height);\n+              int remainingHeight = containerSize.height - menuBarSize.height;\n+              glassPane.setBounds(0, menuBarSize.height, containerSize.width,\n+                                  containerSize.height - menuBarSize.height);\n+              contentPane.setBounds(0, menuBarSize.height,\n+                                    containerSize.width,\n+                                    (containerSize.height - menuBarSize.height));\n+            }\n+          else\n+            {\n+              glassPane.setBounds(0, 0, containerSize.width,\n+                                  containerSize.height);\n+              contentPane.setBounds(0, 0, containerSize.width,\n+                                    containerSize.height);\n+            }\n+\n+          layeredPane.setSize(containerSize.width, containerSize.height);\n         }\n     }\n \n@@ -279,20 +279,20 @@ public Dimension preferredLayoutSize(Container c)\n \n       if (containerSize.width == 0 && containerSize.height == 0)\n         {\n-\t  if (menuBar != null)\n-\t    {\n-\t      int maxWidth;\n-\t      menuBarSize = menuBar.getPreferredSize();\n-\t      maxWidth = Math.max(menuBarSize.width, contentPaneSize.width);\n-\t      prefSize = new Dimension(maxWidth,\n-\t                               contentPaneSize.height\n-\t                               + menuBarSize.height);\n-\t    }\n-\t  else\n-\t    prefSize = contentPaneSize;\n+          if (menuBar != null)\n+            {\n+              int maxWidth;\n+              menuBarSize = menuBar.getPreferredSize();\n+              maxWidth = Math.max(menuBarSize.width, contentPaneSize.width);\n+              prefSize = new Dimension(maxWidth,\n+                                       contentPaneSize.height\n+                                       + menuBarSize.height);\n+            }\n+          else\n+            prefSize = contentPaneSize;\n         }\n       else\n-\tprefSize = c.getSize();\n+        prefSize = c.getSize();\n \n       return prefSize;\n     }\n@@ -319,7 +319,7 @@ public void removeLayoutComponent(Component comp)\n   public static final int FILE_CHOOSER_DIALOG = 6;\n   public static final int QUESTION_DIALOG = 7;\n   public static final int WARNING_DIALOG = 8;\n-\t  \n+          \n   /** DOCUMENT ME! */\n   protected Component glassPane;\n \n@@ -609,13 +609,13 @@ public int getWindowDecorationStyle()\n   public void setWindowDecorationStyle(int style)\n   {\n     if (style != NONE\n-\t&& style != FRAME\n-\t&& style != INFORMATION_DIALOG\n-\t&& style != ERROR_DIALOG\n-\t&& style != COLOR_CHOOSER_DIALOG\n-\t&& style != FILE_CHOOSER_DIALOG\n-\t&& style != QUESTION_DIALOG\n-\t&& style != WARNING_DIALOG)\n+        && style != FRAME\n+        && style != INFORMATION_DIALOG\n+        && style != ERROR_DIALOG\n+        && style != COLOR_CHOOSER_DIALOG\n+        && style != FILE_CHOOSER_DIALOG\n+        && style != QUESTION_DIALOG\n+        && style != WARNING_DIALOG)\n       throw new IllegalArgumentException(\"invalid style\");\n     \n     int oldStyle = windowDecorationStyle;"}, {"sha": "932024aa9a8a44f2f51af957d68b3220cc98214e", "filename": "libjava/javax/swing/plaf/basic/BasicMenuUI.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5d653386ea0a898041d70028f92ebd7e6fbf04/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicMenuUI.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5d653386ea0a898041d70028f92ebd7e6fbf04/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicMenuUI.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fswing%2Fplaf%2Fbasic%2FBasicMenuUI.java?ref=6f5d653386ea0a898041d70028f92ebd7e6fbf04", "patch": "@@ -179,7 +179,7 @@ public static ComponentUI createUI(JComponent c)\n    */\n   public Dimension getMaximumSize(JComponent c)\n   {\n-    return null;\n+    return c.getPreferredSize();\n   }\n \n   protected String getPropertyPrefix()"}]}