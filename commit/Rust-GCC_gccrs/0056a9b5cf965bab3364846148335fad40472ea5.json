{"sha": "0056a9b5cf965bab3364846148335fad40472ea5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA1NmE5YjVjZjk2NWJhYjMzNjQ4NDYxNDgzMzVmYWQ0MDQ3MmVhNQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1998-11-07T13:00:46Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1998-11-07T13:00:46Z"}, "message": "configure.in (host_xm_file, [...]): Arrange to include gansidecl.h in {ht}config.h & tm.h just before the config/...\n\n        * configure.in (host_xm_file, build_xm_file, xm_file, tm_file):\n        Arrange to include gansidecl.h in {ht}config.h & tm.h just\n        before the config/ directory headers.\n        (tm_file_list, host_xm_file_list, build_xm_file_list): Handle\n        gansidecl.h in the list of dependencies.\n        * Makefile.in (RTL_BASE_H): Don't depend on gansidecl.h.\n        (TREE_H, DEMANGLE_H, RECOG_H, REGS_H, libgcc2.a, stmp-multilib,\n        mbchar.o, collect2.o, pexecute.o, vfprintf.o, splay-tree.o, gcc.o,\n        gencheck.o, choose-temp.o, mkstemp.o, mkstemp.o, prefix.o,\n        dyn-string.o, cexp.o, cccp.o, cppmain.o, cpplib.o, cpperror.o,\n        cppexp.o, cppfiles.o, cpphash.o, cppalloc.o, scan-decls.o):\n        Likewise.\n        * cccp.c: Don't include gansidecl.h.\n        * cexp.y: Likewise.\n        * collect2.c: Likewise.\n        * config/c4x/c4x.c: Likewise.\n        * config/v850/v850.h: Likewise.\n        * cppalloc.c: Likewise.\n        * cpperror.c: Likewise.\n        * cppexp.c: Likewise.\n        * cppfiles.c: Likewise.\n        * cpphash.c: Likewise.\n        * cpplib.c: Likewise.\n        * cppmain.c: Likewise.\n        * cppulp.c: Likewise.\n        * demangle.h: Likewise.\n        * doprint.c: Likewise.\n        * dyn-string.c: Likewise.\n        * eh-common.h: Likewise.\n        * fix-header.c: Likewise.\n        * frame.c: Likewise.\n        * gcc.c: Likewise.\n        * gcov.c: Likewise.\n        * gen-protos.c: Likewise.\n        * gencheck.c: Likewise.\n        * halfpic.h: Likewise.\n        * hash.c: Likewise.\n        * machmode.h: Likewise.\n        * mbchar.c: Likewise.\n        * prefix.c: Likewise.\n        * protoize.c: Likewise.\n        * recog.h: Likewise.\n        * rtl.h: Likewise.\n        * scan-decls.c: Likewise.\n        * tree.h: Likewise.\n        * varray.h: Likewise.\n\nFrom-SVN: r23558", "tree": {"sha": "b17ddd53d5459d666fc317840a27e6ed9497f456", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b17ddd53d5459d666fc317840a27e6ed9497f456"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0056a9b5cf965bab3364846148335fad40472ea5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0056a9b5cf965bab3364846148335fad40472ea5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0056a9b5cf965bab3364846148335fad40472ea5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0056a9b5cf965bab3364846148335fad40472ea5/comments", "author": null, "committer": null, "parents": [{"sha": "93d34cacab515a59b93a4f809840ce4b1e354741", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93d34cacab515a59b93a4f809840ce4b1e354741", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93d34cacab515a59b93a4f809840ce4b1e354741"}], "stats": {"total": 295, "additions": 153, "deletions": 142}, "files": [{"sha": "5d26fc53fe539e707eb18ee7ca360cda2893bbb4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -1,3 +1,54 @@\n+Sat Nov  7 15:35:25 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* configure.in (host_xm_file, build_xm_file, xm_file, tm_file):\n+\tArrange to include gansidecl.h in {ht}config.h & tm.h just\n+\tbefore the config/ directory headers.\n+\t(tm_file_list, host_xm_file_list, build_xm_file_list): Handle\n+        gansidecl.h in the list of dependencies.\n+\n+\t* Makefile.in (RTL_BASE_H): Don't depend on gansidecl.h.\n+\t(TREE_H, DEMANGLE_H, RECOG_H, REGS_H, libgcc2.a, stmp-multilib,\n+ \tmbchar.o, collect2.o, pexecute.o, vfprintf.o, splay-tree.o, gcc.o,\n+ \tgencheck.o, choose-temp.o, mkstemp.o, mkstemp.o, prefix.o,\n+ \tdyn-string.o, cexp.o, cccp.o, cppmain.o, cpplib.o, cpperror.o,\n+ \tcppexp.o, cppfiles.o, cpphash.o, cppalloc.o, scan-decls.o):\n+ \tLikewise.\n+\n+\t* cccp.c: Don't include gansidecl.h.\n+\t* cexp.y: Likewise.\n+\t* collect2.c: Likewise.\n+\t* config/c4x/c4x.c: Likewise.\n+\t* config/v850/v850.h: Likewise.\n+\t* cppalloc.c: Likewise.\n+\t* cpperror.c: Likewise.\n+\t* cppexp.c: Likewise.\n+\t* cppfiles.c: Likewise.\n+\t* cpphash.c: Likewise.\n+\t* cpplib.c: Likewise.\n+\t* cppmain.c: Likewise.\n+\t* cppulp.c: Likewise.\n+\t* demangle.h: Likewise.\n+\t* doprint.c: Likewise.\n+\t* dyn-string.c: Likewise.\n+\t* eh-common.h: Likewise.\n+\t* fix-header.c: Likewise.\n+\t* frame.c: Likewise.\n+\t* gcc.c: Likewise.\n+\t* gcov.c: Likewise.\n+\t* gen-protos.c: Likewise.\n+\t* gencheck.c: Likewise.\n+\t* halfpic.h: Likewise.\n+\t* hash.c: Likewise.\n+\t* machmode.h: Likewise.\n+\t* mbchar.c: Likewise.\n+\t* prefix.c: Likewise.\n+\t* protoize.c: Likewise.\n+\t* recog.h: Likewise.\n+\t* rtl.h: Likewise.\n+\t* scan-decls.c: Likewise.\n+\t* tree.h: Likewise.\n+\t* varray.h: Likewise.\n+\t\n Sat Nov  7 11:37:53 1998  Richard Henderson  <rth@cygnus.com>\n \n \t* i386.md (call_value_pop): If we're not popping anything,"}, {"sha": "74dd38ce08680f5ae8fe2db60fd339913a815655", "filename": "gcc/Makefile.in", "status": "modified", "additions": 28, "deletions": 31, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -718,14 +718,14 @@ DPBIT_FUNCS = _pack_df _unpack_df _addsub_df _mul_df _div_df \\\n # If it is, rm *.o is an easy way to do it.\n # CONFIG_H = $(host_xm_file) $(tm_file)\n CONFIG_H =\n-RTL_BASE_H = rtl.h rtl.def gansidecl.h machmode.h machmode.def\n+RTL_BASE_H = rtl.h rtl.def machmode.h machmode.def\n RTL_H = $(RTL_BASE_H) genrtl.h\n-TREE_H = tree.h real.h tree.def gansidecl.h machmode.h machmode.def tree-check.h\n+TREE_H = tree.h real.h tree.def machmode.h machmode.def tree-check.h\n BASIC_BLOCK_H = basic-block.h bitmap.h\n-DEMANGLE_H = demangle.h gansidecl.h\n-RECOG_H = recog.h gansidecl.h\n+DEMANGLE_H = demangle.h\n+RECOG_H = recog.h\n EXPR_H = expr.h insn-codes.h\n-REGS_H = regs.h varray.h machmode.h machmode.def gansidecl.h\n+REGS_H = regs.h varray.h machmode.h machmode.def\n #\f\n # Language makefile fragments.\n \n@@ -1012,7 +1012,7 @@ libgcc2.ready: $(GCC_PASSES) $(LIBGCC2_DEPS) stmp-int-hdrs $(STMP_FIXPROTO)\n \n LIB2ADD = $(srcdir)/frame.c $(LIB2FUNCS_EXTRA) $(LANG_LIB2FUNCS)\n libgcc2.a: libgcc2.c libgcc2.ready $(CONFIG_H) $(FPBIT) $(DPBIT) $(LIB2ADD) \\\n-   machmode.h longlong.h frame.h gansidecl.h gbl-ctors.h config.status\n+   machmode.h longlong.h frame.h gbl-ctors.h config.status\n # Actually build it in tmplibgcc2.a, then rename at end,\n # so that libgcc2.a itself remains nonexistent if compilation is aborted.\n \t-rm -f tmplibgcc2.a\n@@ -1139,7 +1139,7 @@ s-mlib: $(srcdir)/genmultilib Makefile\n \n # Build multiple copies of libgcc.a, one for each target switch.\n stmp-multilib: $(LIBGCC1) libgcc2.c libgcc2.ready $(CONFIG_H) \\\n-   frame.h gansidecl.h \\\n+   frame.h \\\n    $(LIB2ADD) machmode.h longlong.h gbl-ctors.h config.status\n \tfor i in `$(GCC_FOR_TARGET) --print-multi-lib`; do \\\n \t  dir=`echo $$i | sed -e 's/;.*$$//'`; \\\n@@ -1286,7 +1286,7 @@ c-pragma.o: c-pragma.c $(CONFIG_H) system.h $(RTL_H) $(TREE_H) except.h \\\n     function.h defaults.h c-pragma.h toplev.h\n c-iterate.o: c-iterate.c $(CONFIG_H) system.h $(TREE_H) $(RTL_H) c-tree.h \\\n     flags.h toplev.h $(EXPR_H)\n-mbchar.o: mbchar.c $(CONFIG_H) system.h gansidecl.h mbchar.h\n+mbchar.o: mbchar.c $(CONFIG_H) system.h mbchar.h\n \n collect2$(exeext): collect2.o tlink.o hash.o cplus-dem.o underscore.o \\\n \tversion.o choose-temp.o mkstemp.o $(LIBDEPS)\n@@ -1295,7 +1295,7 @@ collect2$(exeext): collect2.o tlink.o hash.o cplus-dem.o underscore.o \\\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ collect2.o tlink.o hash.o \\\n \t  cplus-dem.o underscore.o version.o choose-temp.o mkstemp.o $(LIBS)\n \n-collect2.o : collect2.c $(CONFIG_H) system.h gansidecl.h gstab.h \\\n+collect2.o : collect2.c $(CONFIG_H) system.h gstab.h \\\n \t$(srcdir)/../include/obstack.h $(DEMANGLE_H)\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES)  \\\n \t-DTARGET_MACHINE=\\\"$(target_alias)\\\" $(MAYBE_USE_COLLECT2) \\\n@@ -1309,19 +1309,18 @@ cplus-dem.o: $(srcdir)/../libiberty/cplus-dem.c $(DEMANGLE_H)\n \t$(LN_S) $(srcdir)/../libiberty/cplus-dem.c cplus-dem.c\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) cplus-dem.c\n \n-pexecute.o: $(srcdir)/../libiberty/pexecute.c $(CONFIG_H) system.h gansidecl.h\n+pexecute.o: $(srcdir)/../libiberty/pexecute.c $(CONFIG_H) system.h\n \trm -f pexecute.c\n \t$(LN_S) $(srcdir)/../libiberty/pexecute.c pexecute.c\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) pexecute.c\n \n-vfprintf.o: $(srcdir)/../libiberty/vfprintf.c $(CONFIG_H) system.h gansidecl.h\n+vfprintf.o: $(srcdir)/../libiberty/vfprintf.c $(CONFIG_H) system.h\n \trm -f vfprintf.c\n \t$(LN_S) $(srcdir)/../libiberty/vfprintf.c vfprintf.c\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) vfprintf.c\n \n splay-tree.o: $(srcdir)/../libiberty/splay-tree.c \\\n-  $(srcdir)/../include/splay-tree.h $(srcdir)/../include/libiberty.h \\\n-  gansidecl.h\n+  $(srcdir)/../include/splay-tree.h $(srcdir)/../include/libiberty.h\n \trm -f splay-tree.c\n \t$(LN_S) $(srcdir)/../libiberty/splay-tree.c splay-tree.c\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) splay-tree.c\n@@ -1354,7 +1353,7 @@ DRIVER_DEFINES = \\\n   -DDEFAULT_TARGET_VERSION=\\\"$(version)\\\" \\\n   -DDEFAULT_TARGET_MACHINE=\\\"$(target_alias)\\\" \\\n   -DTOOLDIR_BASE_PREFIX=\\\"$(exec_prefix)/\\\"\n-gcc.o: gcc.c $(CONFIG_H) system.h gansidecl.h multilib.h Makefile \\\n+gcc.o: gcc.c $(CONFIG_H) system.h multilib.h Makefile \\\n \t$(lang_specs_files)\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n   $(DRIVER_DEFINES) \\\n@@ -1370,7 +1369,7 @@ gencheck : gencheck.o tree.def $(lang_tree_files) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t gencheck.o $(HOST_LIBS)\n \n-gencheck.o : gencheck.c hconfig.h system.h gansidecl.h\n+gencheck.o : gencheck.c hconfig.h system.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/gencheck.c\n \n dumpvers: dumpvers.c\n@@ -1381,18 +1380,17 @@ obstack.o: $(srcdir)/../libiberty/obstack.c $(CONFIG_H)\n \t$(LN_S) $(srcdir)/../libiberty/obstack.c obstack.c\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) obstack.c\n \n-choose-temp.o: $(srcdir)/../libiberty/choose-temp.c $(CONFIG_H) gansidecl.h \\\n-\tsystem.h\n+choose-temp.o: $(srcdir)/../libiberty/choose-temp.c $(CONFIG_H) system.h\n \trm -f choose-temp.c\n \t$(LN_S) $(srcdir)/../libiberty/choose-temp.c choose-temp.c\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) choose-temp.c\n \n-mkstemp.o: $(srcdir)/../libiberty/mkstemp.c $(CONFIG_H) gansidecl.h system.h\n+mkstemp.o: $(srcdir)/../libiberty/mkstemp.c $(CONFIG_H) system.h\n \trm -f mkstemp.c\n \t$(LN_S) $(srcdir)/../libiberty/mkstemp.c mkstemp.c\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) mkstemp.c\n \n-prefix.o: prefix.c $(CONFIG_H) system.h gansidecl.h Makefile\n+prefix.o: prefix.c $(CONFIG_H) system.h Makefile\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t-DPREFIX=\\\"$(prefix)\\\" \\\n \t  -c `echo $(srcdir)/prefix.c | sed 's,^\\./,,'`\n@@ -1529,7 +1527,7 @@ recog.o : recog.c $(CONFIG_H) system.h $(RTL_H)  \\\n    insn-flags.h insn-codes.h real.h toplev.h\n reg-stack.o : reg-stack.c $(CONFIG_H) system.h $(RTL_H) $(TREE_H) \\\n    $(REGS_H) hard-reg-set.h flags.h insn-config.h insn-flags.h toplev.h\n-dyn-string.o: dyn-string.c dyn-string.h $(CONFIG_H) system.h gansidecl.h\n+dyn-string.o: dyn-string.c dyn-string.h $(CONFIG_H) system.h\n \n $(out_object_file): $(out_file) $(CONFIG_H) $(TREE_H) \\\n    $(RTL_H) $(REGS_H) hard-reg-set.h real.h insn-config.h conditions.h \\\n@@ -1864,14 +1862,14 @@ cpp$(exeext): $(CCCP)$(exeext)\n cccp$(exeext): cccp.o cexp.o version.o prefix.o mbchar.o @extra_cpp_objs@ $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ cccp.o cexp.o prefix.o mbchar.o \\\n \t  version.o @extra_cpp_objs@ $(LIBS)\n-cexp.o: $(srcdir)/cexp.c $(CONFIG_H) system.h gansidecl.h\n+cexp.o: $(srcdir)/cexp.c $(CONFIG_H) system.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c $(srcdir)/cexp.c\n $(srcdir)/cexp.c: $(srcdir)/cexp.y\n \tcd $(srcdir); $(BISON) -o cexp.c cexp.y\n \n # We use $(libsubdir)/$(unlibsubdir) to match the\n # -iprefix argument which gcc will pass if GCC_EXEC_PREFIX is used.\n-cccp.o: cccp.c $(CONFIG_H) pcp.h version.c config.status system.h gansidecl.h \\\n+cccp.o: cccp.c $(CONFIG_H) pcp.h version.c config.status system.h \\\n            mbchar.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  -DGCC_INCLUDE_DIR=\\\"$(libsubdir)/include\\\" \\\n@@ -1892,10 +1890,9 @@ cppmain$(exeext): cppmain.o libcpp.a $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o cppmain$(exeext) cppmain.o \\\n \tlibcpp.a $(LIBS)\n \n-cppmain.o: cppmain.c $(CONFIG_H) cpplib.h system.h gansidecl.h\n+cppmain.o: cppmain.c $(CONFIG_H) cpplib.h system.h\n \n-cpplib.o: cpplib.c $(CONFIG_H) cpplib.h cpphash.h config.status system.h \\\n-\tgansidecl.h\n+cpplib.o: cpplib.c $(CONFIG_H) cpplib.h cpphash.h config.status system.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  -DGCC_INCLUDE_DIR=\\\"$(libsubdir)/include\\\" \\\n \t  -DGPLUSPLUS_INCLUDE_DIR=\\\"$(gxx_include_dir)\\\" \\\n@@ -1904,15 +1901,15 @@ cpplib.o: cpplib.c $(CONFIG_H) cpplib.h cpphash.h config.status system.h \\\n \t  -DTOOL_INCLUDE_DIR=\\\"$(tooldir)/include\\\" \\\n \t  -c `echo $(srcdir)/cpplib.c | sed 's,^\\./,,'`\n \n-cpperror.o: cpperror.c $(CONFIG_H) cpplib.h system.h gansidecl.h\n+cpperror.o: cpperror.c $(CONFIG_H) cpplib.h system.h\n \n-cppexp.o: cppexp.c $(CONFIG_H) cpplib.h system.h gansidecl.h\n+cppexp.o: cppexp.c $(CONFIG_H) cpplib.h system.h\n \n-cppfiles.o: cppfiles.c $(CONFIG_H) cpplib.h system.h gansidecl.h\n+cppfiles.o: cppfiles.c $(CONFIG_H) cpplib.h system.h\n \n-cpphash.o: cpphash.c cpplib.h cpphash.h $(CONFIG_H) system.h gansidecl.h\n+cpphash.o: cpphash.c cpplib.h cpphash.h $(CONFIG_H) system.h\n \n-cppalloc.o: cppalloc.c $(CONFIG_H) cpplib.h system.h gansidecl.h\n+cppalloc.o: cppalloc.c $(CONFIG_H) cpplib.h system.h\n \n # Note for the stamp targets, we run the program `true' instead of\n # having an empty command (nothing following the semicolon).\n@@ -2132,7 +2129,7 @@ fix-header.o: fix-header.c $(srcdir)/../include/obstack.h scan.h \\\n \txsys-protos.h $(build_xm_file) system.h cpplib.h cpphash.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/fix-header.c\n \n-scan-decls.o: scan-decls.c scan.h cpplib.h $(build_xm_file) system.h gansidecl.h\n+scan-decls.o: scan-decls.c scan.h cpplib.h $(build_xm_file) system.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/scan-decls.c\n \n # stmp-fixproto depends on this, not on fix-header directly."}, {"sha": "40e966385f92617e12afc0ac13329e0381496528", "filename": "gcc/cccp.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -37,7 +37,6 @@ Boston, MA 02111-1307, USA. */\n \n typedef unsigned char U_CHAR;\n \n-#include \"gansidecl.h\"\n #include \"pcp.h\"\n \n #ifdef MULTIBYTE_CHARS"}, {"sha": "ac5c2020c0d24e89223e88e6ce5710137f3d7d39", "filename": "gcc/cexp.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fcexp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fcexp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcexp.c?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -30,7 +30,6 @@\n #include \"system.h\"\n #include <setjmp.h>\n /* #define YYDEBUG 1 */\n-#include \"gansidecl.h\"\n \n #ifdef MULTIBYTE_CHARS\n #include \"mbchar.h\""}, {"sha": "00e439cb4984a584b73da8a04ed700af1593b805", "filename": "gcc/cexp.y", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fcexp.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fcexp.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcexp.y?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -34,7 +34,6 @@ Boston, MA 02111-1307, USA.\n #include \"system.h\"\n #include <setjmp.h>\n /* #define YYDEBUG 1 */\n-#include \"gansidecl.h\"\n \n #ifdef MULTIBYTE_CHARS\n #include \"mbchar.h\""}, {"sha": "7f855f2a621306cad80c9e150ac422a6da2ca1af", "filename": "gcc/collect2.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -47,7 +47,6 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"demangle.h\"\n #include \"obstack.h\"\n-#include \"gansidecl.h\"\n #ifdef __CYGWIN32__\n #include <process.h>\n #endif"}, {"sha": "6e6aacd12e43640a248c02ce9a9650b06688b855", "filename": "gcc/config/c4x/c4x.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fconfig%2Fc4x%2Fc4x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fconfig%2Fc4x%2Fc4x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.c?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -26,7 +26,6 @@\n #include <stdlib.h>\n #include <stdarg.h>\n #include \"config.h\"\n-#include \"gansidecl.h\"\n #include \"toplev.h\"\n #include \"rtl.h\"\n #include \"regs.h\""}, {"sha": "fe3f7ae535c54dc8a6e4078b44757cdecee0f280", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -20,7 +20,6 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n #include \"svr4.h\"\t/* Automatically does #undef CPP_PREDEFINES */\n-#include \"gansidecl.h\"\t/* For the PROTO macro  */\n \n #undef ASM_SPEC\n #define ASM_SPEC \"%{mv*:-mv%*}\""}, {"sha": "2236b0a896be2a2cb29afa1e4f59d865232d8875", "filename": "gcc/configure", "status": "modified", "additions": 58, "deletions": 53, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -1971,11 +1971,7 @@ intmax_t i = -1;\n EOF\n if { (eval echo configure:1973: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n-  cat >> confdefs.h <<EOF\n-#define HAVE_INTTYPES_H 1\n-EOF\n-\n-   gcc_cv_header_inttypes_h=yes\n+  gcc_cv_header_inttypes_h=yes\n else\n   echo \"configure: failed program was:\" >&5\n   cat conftest.$ac_ext >&5\n@@ -1986,18 +1982,24 @@ rm -f conftest*\n fi\n \n echo \"$ac_t\"\"$gcc_cv_header_inttypes_h\" 1>&6\n+if test $gcc_cv_header_inttypes_h = yes; then\n+  cat >> confdefs.h <<\\EOF\n+#define HAVE_INTTYPES_H 1\n+EOF\n+\n+fi\n \n for ac_func in strtoul bsearch strerror putenv popen bcopy bzero bcmp \\\n \tindex rindex strchr strrchr kill getrlimit setrlimit atoll atoq \\\n \tsysconf isascii gettimeofday strsignal\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:1996: checking for $ac_func\" >&5\n+echo \"configure:1998: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2001 \"configure\"\n+#line 2003 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -2020,7 +2022,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:2024: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+if { (eval echo configure:2026: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -2049,12 +2051,12 @@ done\n #AC_CHECK_TYPE(wchar_t, unsigned int)\n \n echo $ac_n \"checking for vprintf\"\"... $ac_c\" 1>&6\n-echo \"configure:2053: checking for vprintf\" >&5\n+echo \"configure:2055: checking for vprintf\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_vprintf'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2058 \"configure\"\n+#line 2060 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char vprintf(); below.  */\n@@ -2077,7 +2079,7 @@ vprintf();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:2081: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+if { (eval echo configure:2083: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n   rm -rf conftest*\n   eval \"ac_cv_func_vprintf=yes\"\n else\n@@ -2101,12 +2103,12 @@ fi\n \n if test \"$ac_cv_func_vprintf\" != yes; then\n echo $ac_n \"checking for _doprnt\"\"... $ac_c\" 1>&6\n-echo \"configure:2105: checking for _doprnt\" >&5\n+echo \"configure:2107: checking for _doprnt\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func__doprnt'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2110 \"configure\"\n+#line 2112 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char _doprnt(); below.  */\n@@ -2129,7 +2131,7 @@ _doprnt();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:2133: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+if { (eval echo configure:2135: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n   rm -rf conftest*\n   eval \"ac_cv_func__doprnt=yes\"\n else\n@@ -2165,15 +2167,15 @@ fi\n \n \n echo $ac_n \"checking whether the printf functions support %p\"\"... $ac_c\" 1>&6\n-echo \"configure:2169: checking whether the printf functions support %p\" >&5\n+echo \"configure:2171: checking whether the printf functions support %p\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_func_printf_ptr'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   gcc_cv_func_printf_ptr=no\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2177 \"configure\"\n+#line 2179 \"configure\"\n #include \"confdefs.h\"\n #include <stdio.h>\n \n@@ -2186,7 +2188,7 @@ main()\n   exit (p != q);\n }\n EOF\n-if { (eval echo configure:2190: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:2192: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null\n then\n   gcc_cv_func_printf_ptr=yes\n else\n@@ -2210,12 +2212,12 @@ EOF\n fi\n \n echo $ac_n \"checking for pid_t\"\"... $ac_c\" 1>&6\n-echo \"configure:2214: checking for pid_t\" >&5\n+echo \"configure:2216: checking for pid_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_pid_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2219 \"configure\"\n+#line 2221 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n@@ -2244,17 +2246,17 @@ fi\n \n ac_safe=`echo \"vfork.h\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for vfork.h\"\"... $ac_c\" 1>&6\n-echo \"configure:2248: checking for vfork.h\" >&5\n+echo \"configure:2250: checking for vfork.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2253 \"configure\"\n+#line 2255 \"configure\"\n #include \"confdefs.h\"\n #include <vfork.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:2258: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:2260: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -2279,18 +2281,18 @@ else\n fi\n \n echo $ac_n \"checking for working vfork\"\"... $ac_c\" 1>&6\n-echo \"configure:2283: checking for working vfork\" >&5\n+echo \"configure:2285: checking for working vfork\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_vfork_works'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   echo $ac_n \"checking for vfork\"\"... $ac_c\" 1>&6\n-echo \"configure:2289: checking for vfork\" >&5\n+echo \"configure:2291: checking for vfork\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_vfork'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2294 \"configure\"\n+#line 2296 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char vfork(); below.  */\n@@ -2313,7 +2315,7 @@ vfork();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:2317: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n+if { (eval echo configure:2319: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest; then\n   rm -rf conftest*\n   eval \"ac_cv_func_vfork=yes\"\n else\n@@ -2335,7 +2337,7 @@ fi\n ac_cv_func_vfork_works=$ac_cv_func_vfork\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2339 \"configure\"\n+#line 2341 \"configure\"\n #include \"confdefs.h\"\n /* Thanks to Paul Eggert for this test.  */\n #include <stdio.h>\n@@ -2430,7 +2432,7 @@ main() {\n   }\n }\n EOF\n-if { (eval echo configure:2434: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:2436: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_func_vfork_works=yes\n else\n@@ -2458,12 +2460,12 @@ for ac_func in malloc realloc calloc free bcopy bzero bcmp \\\n \tstrsignal\n do\n echo $ac_n \"checking whether $ac_func must be declared\"\"... $ac_c\" 1>&6\n-echo \"configure:2462: checking whether $ac_func must be declared\" >&5\n+echo \"configure:2464: checking whether $ac_func must be declared\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_decl_needed_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2467 \"configure\"\n+#line 2469 \"configure\"\n #include \"confdefs.h\"\n \n #include <stdio.h>\n@@ -2496,7 +2498,7 @@ int main() {\n char *(*pfn) = (char *(*)) $ac_func\n ; return 0; }\n EOF\n-if { (eval echo configure:2500: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:2502: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   eval \"gcc_cv_decl_needed_$ac_func=no\"\n else\n@@ -2525,12 +2527,12 @@ done\n for ac_func in getrlimit setrlimit\n do\n echo $ac_n \"checking whether $ac_func must be declared\"\"... $ac_c\" 1>&6\n-echo \"configure:2529: checking whether $ac_func must be declared\" >&5\n+echo \"configure:2531: checking whether $ac_func must be declared\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_decl_needed_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2534 \"configure\"\n+#line 2536 \"configure\"\n #include \"confdefs.h\"\n \n #include <stdio.h>\n@@ -2567,7 +2569,7 @@ int main() {\n char *(*pfn) = (char *(*)) $ac_func\n ; return 0; }\n EOF\n-if { (eval echo configure:2571: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:2573: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   eval \"gcc_cv_decl_needed_$ac_func=no\"\n else\n@@ -2594,12 +2596,12 @@ done\n \n \n echo $ac_n \"checking for sys_siglist declaration in signal.h or unistd.h\"\"... $ac_c\" 1>&6\n-echo \"configure:2598: checking for sys_siglist declaration in signal.h or unistd.h\" >&5\n+echo \"configure:2600: checking for sys_siglist declaration in signal.h or unistd.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_decl_sys_siglist'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2603 \"configure\"\n+#line 2605 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <signal.h>\n@@ -2611,7 +2613,7 @@ int main() {\n char *msg = *(sys_siglist + 1);\n ; return 0; }\n EOF\n-if { (eval echo configure:2615: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:2617: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_decl_sys_siglist=yes\n else\n@@ -5585,14 +5587,14 @@ fi\n # auto-host.h is the file containing items generated by autoconf and is\n # the first file included by config.h.\n null_defines=\n-host_xm_file=\"auto-host.h ${host_xm_file}\"\n+host_xm_file=\"auto-host.h gansidecl.h ${host_xm_file}\"\n \n # If host=build, it is correct to have hconfig include auto-host.h\n # as well.  If host!=build, we are in error and need to do more \n # work to find out the build config parameters.\n if test x$host = x$build\n then\n-\tbuild_xm_file=\"auto-host.h ${build_xm_file}\"\n+\tbuild_xm_file=\"auto-host.h gansidecl.h ${build_xm_file}\"\n else\n \t# We create a subdir, then run autoconf in the subdir.\n \t# To prevent recursion we set host and build for the new\n@@ -5614,9 +5616,12 @@ else\n \tmv auto-host.h ../auto-build.h\n \tcd ..\n \trm -rf $tempdir\n-\tbuild_xm_file=\"auto-build.h ${build_xm_file}\"\n+\tbuild_xm_file=\"auto-build.h gansidecl.h ${build_xm_file}\"\n fi\n \n+xm_file=\"gansidecl.h ${xm_file}\"\n+tm_file=\"gansidecl.h ${tm_file}\"\n+\n vars=\"host_xm_file tm_file xm_file build_xm_file\"\n links=\"config.h tm.h tconfig.h hconfig.h\"\n defines=\"host_xm_defines null_defines xm_defines build_xm_defines\"\n@@ -5721,28 +5726,28 @@ out_object_file=`basename $out_file .c`.o\n \n tm_file_list=\n for f in $tm_file; do\n-\ttm_file_list=\"${tm_file_list} \\$(srcdir)/config/$f\"\n+\tif test $f != \"gansidecl.h\" ; then\n+\t\ttm_file_list=\"${tm_file_list} \\$(srcdir)/config/$f\"\n+\telse\n+\t\ttm_file_list=\"${tm_file_list} $f\"\n+\tfi\n done\n \n host_xm_file_list=\n for f in $host_xm_file; do\n-\tif test $f != \"auto-host.h\"; then\n+\tif test $f != \"auto-host.h\" -a $f != \"gansidecl.h\" ; then\n \t\thost_xm_file_list=\"${host_xm_file_list} \\$(srcdir)/config/$f\"\n \telse\n-\t\thost_xm_file_list=\"${host_xm_file_list} auto-host.h\"\n+\t\thost_xm_file_list=\"${host_xm_file_list} $f\"\n \tfi\n done\n \n build_xm_file_list=\n for f in $build_xm_file; do\n-\tif test $f != \"auto-build.h\"; then\n-\t\tif test $f != \"auto-host.h\"; then\n-\t\t\tbuild_xm_file_list=\"${build_xm_file_list} \\$(srcdir)/config/$f\"\n-\t\telse\n-\t\t\tbuild_xm_file_list=\"${build_xm_file_list} auto-host.h\"\n-\t\tfi\n+\tif test $f != \"auto-build.h\" -a $f != \"auto-host.h\" -a $f != \"gansidecl.h\" ; then\n+\t\tbuild_xm_file_list=\"${build_xm_file_list} \\$(srcdir)/config/$f\"\n \telse\n-\t\tbuild_xm_file_list=\"${build_xm_file_list} auto-build.h\"\n+\t\tbuild_xm_file_list=\"${build_xm_file_list} $f\"\n \tfi\n done\n \n@@ -5830,7 +5835,7 @@ fi\n \n # Figure out what assembler alignment features are present.\n echo $ac_n \"checking assembler alignment features\"\"... $ac_c\" 1>&6\n-echo \"configure:5834: checking assembler alignment features\" >&5\n+echo \"configure:5839: checking assembler alignment features\" >&5\n gcc_cv_as=\n gcc_cv_as_alignment_features=\n gcc_cv_as_gas_srcdir=`echo $srcdir | sed -e 's,/gcc$,,'`/gas\n@@ -5903,7 +5908,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_alignment_features\" 1>&6\n \n echo $ac_n \"checking assembler subsection support\"\"... $ac_c\" 1>&6\n-echo \"configure:5907: checking assembler subsection support\" >&5\n+echo \"configure:5912: checking assembler subsection support\" >&5\n gcc_cv_as_subsections=\n if test x$gcc_cv_as != x; then\n \t# Check if we have .subsection\n@@ -6139,7 +6144,7 @@ fi\n \n # Warn if using init_priority.\n echo $ac_n \"checking whether to enable init_priority by default\"\"... $ac_c\" 1>&6\n-echo \"configure:6143: checking whether to enable init_priority by default\" >&5\n+echo \"configure:6148: checking whether to enable init_priority by default\" >&5\n if test x$enable_init_priority != xyes; then\n   enable_init_priority=no\n fi"}, {"sha": "e0c3fbcb809187a6fb9a75ca1a02a53a8881df2f", "filename": "gcc/configure.in", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -3467,14 +3467,14 @@ fi\n # auto-host.h is the file containing items generated by autoconf and is\n # the first file included by config.h.\n null_defines=\n-host_xm_file=\"auto-host.h ${host_xm_file}\"\n+host_xm_file=\"auto-host.h gansidecl.h ${host_xm_file}\"\n \n # If host=build, it is correct to have hconfig include auto-host.h\n # as well.  If host!=build, we are in error and need to do more \n # work to find out the build config parameters.\n if test x$host = x$build\n then\n-\tbuild_xm_file=\"auto-host.h ${build_xm_file}\"\n+\tbuild_xm_file=\"auto-host.h gansidecl.h ${build_xm_file}\"\n else\n \t# We create a subdir, then run autoconf in the subdir.\n \t# To prevent recursion we set host and build for the new\n@@ -3496,9 +3496,12 @@ else\n \tmv auto-host.h ../auto-build.h\n \tcd ..\n \trm -rf $tempdir\n-\tbuild_xm_file=\"auto-build.h ${build_xm_file}\"\n+\tbuild_xm_file=\"auto-build.h gansidecl.h ${build_xm_file}\"\n fi\n \n+xm_file=\"gansidecl.h ${xm_file}\"\n+tm_file=\"gansidecl.h ${tm_file}\"\n+\n vars=\"host_xm_file tm_file xm_file build_xm_file\"\n links=\"config.h tm.h tconfig.h hconfig.h\"\n defines=\"host_xm_defines null_defines xm_defines build_xm_defines\"\n@@ -3605,28 +3608,28 @@ out_object_file=`basename $out_file .c`.o\n \n tm_file_list=\n for f in $tm_file; do\n-\ttm_file_list=\"${tm_file_list} \\$(srcdir)/config/$f\"\n+\tif test $f != \"gansidecl.h\" ; then\n+\t\ttm_file_list=\"${tm_file_list} \\$(srcdir)/config/$f\"\n+\telse\n+\t\ttm_file_list=\"${tm_file_list} $f\"\n+\tfi\n done\n \n host_xm_file_list=\n for f in $host_xm_file; do\n-\tif test $f != \"auto-host.h\"; then\n+\tif test $f != \"auto-host.h\" -a $f != \"gansidecl.h\" ; then\n \t\thost_xm_file_list=\"${host_xm_file_list} \\$(srcdir)/config/$f\"\n \telse\n-\t\thost_xm_file_list=\"${host_xm_file_list} auto-host.h\"\n+\t\thost_xm_file_list=\"${host_xm_file_list} $f\"\n \tfi\n done\n \n build_xm_file_list=\n for f in $build_xm_file; do\n-\tif test $f != \"auto-build.h\"; then\n-\t\tif test $f != \"auto-host.h\"; then\n-\t\t\tbuild_xm_file_list=\"${build_xm_file_list} \\$(srcdir)/config/$f\"\n-\t\telse\n-\t\t\tbuild_xm_file_list=\"${build_xm_file_list} auto-host.h\"\n-\t\tfi\n+\tif test $f != \"auto-build.h\" -a $f != \"auto-host.h\" -a $f != \"gansidecl.h\" ; then\n+\t\tbuild_xm_file_list=\"${build_xm_file_list} \\$(srcdir)/config/$f\"\n \telse\n-\t\tbuild_xm_file_list=\"${build_xm_file_list} auto-build.h\"\n+\t\tbuild_xm_file_list=\"${build_xm_file_list} $f\"\n \tfi\n done\n "}, {"sha": "46581c781a1f171808d60f59d4ddf7fc341527e0", "filename": "gcc/cppalloc.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fcppalloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fcppalloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppalloc.c?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -24,7 +24,6 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n \n #include \"config.h\"\n #include \"system.h\"\n-#include \"gansidecl.h\"\n #include \"cpplib.h\"\n \n static void memory_full PROTO ((void)) ATTRIBUTE_NORETURN;"}, {"sha": "92b10465c68c1f5cf7c931496c9832d0f2051029", "filename": "gcc/cpperror.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fcpperror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fcpperror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpperror.c?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -25,7 +25,6 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n #ifndef EMACS\n #include \"config.h\"\n #include \"system.h\"\n-#include \"gansidecl.h\"\n #else\n #include <stdio.h>\n #endif /* not EMACS */"}, {"sha": "b77c3d7559d24e570842e062e1368b1a93eb7293", "filename": "gcc/cppexp.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fcppexp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fcppexp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppexp.c?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -26,7 +26,6 @@ Written by Per Bothner 1994.  */\n    \n #include \"config.h\"\n #include \"system.h\"\n-#include \"gansidecl.h\"\n #include \"cpplib.h\"\n \n extern char *xmalloc PARAMS ((unsigned));"}, {"sha": "94562ab9acb7e7229f8f62b73d5d9e0c1aba7898", "filename": "gcc/cppfiles.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fcppfiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fcppfiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppfiles.c?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -25,7 +25,6 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n \n #include \"config.h\"\n #include \"system.h\"\n-#include \"gansidecl.h\"\n #include \"cpplib.h\"\n \n /* The entry points to this file are: find_include_file, finclude,"}, {"sha": "85883e351370881b0c204a07915575a37d9c0795", "filename": "gcc/cpphash.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fcpphash.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fcpphash.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpphash.c?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -24,7 +24,6 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n \n #include \"config.h\"\n #include \"system.h\"\n-#include \"gansidecl.h\"\n #include \"cpplib.h\"\n #include \"cpphash.h\"\n "}, {"sha": "38aeacf6fa8e03953a5167972ae8c67244d0825b", "filename": "gcc/cpplib.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fcpplib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fcpplib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.c?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -35,7 +35,6 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n # include <sys/resource.h>\n #endif\n \n-#include \"gansidecl.h\"\n #include \"cpplib.h\"\n #include \"cpphash.h\"\n #include \"output.h\""}, {"sha": "b39df34f055ea72a1d301f5dd4f20519f5bfcb12", "filename": "gcc/cppmain.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fcppmain.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fcppmain.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppmain.c?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -23,7 +23,6 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n #ifndef EMACS\n #include \"config.h\"\n #include \"system.h\"\n-#include \"gansidecl.h\"\n #else\n #include <stdio.h>\n "}, {"sha": "eb6e7f6922fd62991a4a567f7977251dd3c1cad3", "filename": "gcc/cppulp.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fcppulp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fcppulp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppulp.c?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -21,7 +21,6 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n #include \"config.h\"\n #include \"system.h\"\n \n-#include \"gansidecl.h\"\n #include \"output.h\"\n \n char *user_label_prefix = 0;"}, {"sha": "570b05718cf915ee0e28f46c44c50a9150d26922", "filename": "gcc/demangle.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fdemangle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fdemangle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdemangle.h?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -21,7 +21,6 @@\n #define DEMANGLE_H\n \n #ifdef IN_GCC\n-#include \"gansidecl.h\"\n #define PARAMS(ARGS) PROTO(ARGS)\n #else /* ! IN_GCC */\n #include <ansidecl.h>"}, {"sha": "843c8474c4cd9157766025930074fbf00394a9bf", "filename": "gcc/doprint.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fdoprint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fdoprint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoprint.c?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -5,7 +5,6 @@\n \n #include \"config.h\"\n #include \"system.h\"\n-#include \"gansidecl.h\"\n #undef _doprnt\n \n #ifdef TEST /* Make sure to use the internal one. */"}, {"sha": "a5f40cc0ec1c56dd1c2f4f742a5b271aceeb8200", "filename": "gcc/dyn-string.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fdyn-string.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fdyn-string.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdyn-string.c?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -20,7 +20,6 @@\n \n #include \"config.h\"\n #include \"system.h\"\n-#include \"gansidecl.h\"\n #include \"dyn-string.h\"\n \n extern char *xmalloc ();"}, {"sha": "a4e07bcbd14320bf4294c92de4b42c6de46ef8ea", "filename": "gcc/eh-common.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Feh-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Feh-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Feh-common.h?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -15,8 +15,6 @@\n    checking of runtime conditions. If the handler wasn't suppose to\n    get the exception, it performs a re-throw. */\n \n-#include \"gansidecl.h\"\n-\n \n /* The handler_label field MUST be the first field in this structure. The \n    __throw()  library routine expects uses __eh_stub() from except.c, which"}, {"sha": "d515a32de753f516bdda15faa7ed16f46bc3122e", "filename": "gcc/fix-header.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Ffix-header.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Ffix-header.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffix-header.c?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -72,7 +72,6 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n \n #include \"hconfig.h\"\n #include \"system.h\"\n-#include \"gansidecl.h\"\n #include \"obstack.h\"\n #include \"scan.h\"\n #include \"cpplib.h\""}, {"sha": "b5f643e7043774907134600410eaab0507bb7a1f", "filename": "gcc/frame.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fframe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fframe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fframe.c?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -46,7 +46,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"defaults.h\"\n \n #ifdef DWARF2_UNWIND_INFO\n-#include \"gansidecl.h\"\n #include \"dwarf2.h\"\n #include <stddef.h>\n #include \"frame.h\""}, {"sha": "15e0fe6c7a7d900d44ee62dc329c6ff7fa8e32bd", "filename": "gcc/gcc.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -36,7 +36,6 @@ compilation is specified by a string called a \"spec\".  */\n #include <signal.h>\n #include <sys/stat.h>\n \n-#include \"gansidecl.h\"\n #include \"obstack.h\"\n \n "}, {"sha": "2a093c621fb4f7f57bcd042509bcd5e5023c7dc1", "filename": "gcc/gcov.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -44,7 +44,6 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"config.h\"\n #include \"system.h\"\n #include <sys/stat.h>\n-#include \"gansidecl.h\"\n \n #include \"gcov-io.h\"\n "}, {"sha": "d950257b49d00da754595f0515c2c0897385370e", "filename": "gcc/gen-protos.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fgen-protos.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fgen-protos.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgen-protos.c?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -17,7 +17,6 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n \n #include \"hconfig.h\"\n #include \"system.h\"\n-#include \"gansidecl.h\"\n #include \"scan.h\"\n #include \"cpplib.h\"\n #include \"cpphash.h\""}, {"sha": "915f30802924d7a2bca1355fa48fb25ad5e4ca92", "filename": "gcc/gencheck.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fgencheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fgencheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgencheck.c?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -20,7 +20,6 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"hconfig.h\"\n #include \"system.h\"\n-#include \"gansidecl.h\"\n \n #define DEFTREECODE(SYM, NAME, TYPE, LEN)   STRINGIFY(SYM),\n "}, {"sha": "96f62d45b862acbdc605e446887ffeaaf98619bb", "filename": "gcc/halfpic.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fhalfpic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fhalfpic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhalfpic.h?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -20,8 +20,6 @@ Boston, MA 02111-1307, USA.  */\n \n #ifndef NO_HALF_PIC\n \n-#include \"gansidecl.h\"\n-\n #if defined (USE_PROTOTYPES) ? USE_PROTOTYPES : defined (__STDC__)\n union tree_node;\t\t/* forward reference */\n struct rtx_def;"}, {"sha": "f367fc07314581517d928c4bdd6f6bc5c80f35e7", "filename": "gcc/hash.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fhash.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fhash.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhash.c?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -22,7 +22,6 @@ Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #include \"system.h\"\n #include \"hash.h\"\n #include \"obstack.h\"\n-#include \"gansidecl.h\"\n #include \"toplev.h\"\n \n /* Obstack allocation and deallocation routines.  */"}, {"sha": "8f2ed9539e16e2d7609059611765230886725579", "filename": "gcc/machmode.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fmachmode.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fmachmode.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmachmode.h?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -21,8 +21,6 @@ Boston, MA 02111-1307, USA.  */\n #ifndef HAVE_MACHINE_MODES\n #define HAVE_MACHINE_MODES\n \n-#include \"gansidecl.h\"\n-\n /* Strictly speaking, this isn't the proper place to include these definitions,\n    but this file is included by every GCC file.\n "}, {"sha": "89604361cf28e0a7deae485f4afa9b63938d05ff", "filename": "gcc/mbchar.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fmbchar.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fmbchar.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmbchar.c?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -34,7 +34,6 @@ Boston, MA 02111-1307, USA.  */\n #ifdef MULTIBYTE_CHARS\n #include \"config.h\"\n #include \"system.h\"\n-#include \"gansidecl.h\"\n #include \"mbchar.h\"\n #include <locale.h>\n "}, {"sha": "b949fce4e41e9b221654dbadc6e674785da31c76", "filename": "gcc/prefix.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fprefix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fprefix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprefix.c?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -69,8 +69,6 @@ Boston, MA 02111-1307, USA.  */\n #include <windows.h>\n #endif\n \n-#include \"gansidecl.h\"\n-\n static char *std_prefix = PREFIX;\n \n static char *get_key_value\tPROTO((char *));"}, {"sha": "8a47b2f6815ddfca35fefdbd5807ea3c3a512210", "filename": "gcc/protoize.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fprotoize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fprotoize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprotoize.c?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -67,7 +67,6 @@ Boston, MA 02111-1307, USA.  */\n #endif\n #endif\n #include <setjmp.h>\n-#include \"gansidecl.h\"\n \n /* Some systems like Linux don't declare rindex if _POSIX_SOURCE is declared,\n    but it normally does declare it.  This means that configure thinks we don't"}, {"sha": "bbed6c18d238eba5bb5d5a1a999858e0d757a617", "filename": "gcc/recog.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Frecog.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Frecog.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.h?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -18,8 +18,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include \"gansidecl.h\"\n-\n /* Types of operands.  */\n enum op_type {\n   OP_IN,"}, {"sha": "4c558bfd1e69778a004afbbea69ca620ddcf7ec7", "filename": "gcc/rtl.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -173,8 +173,6 @@ typedef struct rtx_def\n   rtunion fld[1];\n } *rtx;\n \n-#include \"gansidecl.h\"\n-\n #define NULL_RTX (rtx) 0\n \n /* Define macros to access the `code' field of the rtx.  */"}, {"sha": "5b947a412e39716fa41ab248d7457bbd753d6fac", "filename": "gcc/scan-decls.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fscan-decls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fscan-decls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fscan-decls.c?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -19,7 +19,6 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n \n #include \"hconfig.h\"\n #include \"system.h\"\n-#include \"gansidecl.h\"\n #include \"cpplib.h\"\n #include \"scan.h\"\n "}, {"sha": "513c3825ab08123f639b8dc11bb996b52c022cf8", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -1372,8 +1372,6 @@ union tree_node\n   struct tree_block block;\n  };\n \f\n-#include \"gansidecl.h\"\n-\n #define NULL_TREE (tree) NULL\n \n /* The following functions accept a wide integer argument.  Rather than"}, {"sha": "bf744fc402d67c668bc4b10a6fa0c30314c1885d", "filename": "gcc/varray.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fvarray.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0056a9b5cf965bab3364846148335fad40472ea5/gcc%2Fvarray.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarray.h?ref=0056a9b5cf965bab3364846148335fad40472ea5", "patch": "@@ -22,10 +22,6 @@\n #ifndef _VARRAY_H_\n #define _VARRAY_H_\n \n-#ifndef PROTO\n-#include \"gansidecl.h\"\n-#endif\n-\n #ifndef HOST_WIDE_INT\n #include \"machmode.h\"\n #endif"}]}