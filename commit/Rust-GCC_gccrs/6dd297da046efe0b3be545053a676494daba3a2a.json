{"sha": "6dd297da046efe0b3be545053a676494daba3a2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRkMjk3ZGEwNDZlZmUwYjNiZTU0NTA1M2E2NzY0OTRkYWJhM2EyYQ==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2004-03-22T09:49:36Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2004-03-22T09:49:36Z"}, "message": "configure.ac: Allow --disable-coverage-flags (for the future benefit of top level bootstrap...\n\n\t* configure.ac: Allow --disable-coverage-flags (for the future benefit\n\tof top level bootstrap, and consistency).  Reindent.\n\t* configure: Regenerate.\n\nFrom-SVN: r79817", "tree": {"sha": "91b4b636ee0cdc53a2d417c4639dd316eb294939", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91b4b636ee0cdc53a2d417c4639dd316eb294939"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6dd297da046efe0b3be545053a676494daba3a2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dd297da046efe0b3be545053a676494daba3a2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dd297da046efe0b3be545053a676494daba3a2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dd297da046efe0b3be545053a676494daba3a2a/comments", "author": null, "committer": null, "parents": [{"sha": "340de83fd55cbd92e1a168094e61506c967dc9e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/340de83fd55cbd92e1a168094e61506c967dc9e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/340de83fd55cbd92e1a168094e61506c967dc9e2"}], "stats": {"total": 52, "additions": 33, "deletions": 19}, "files": [{"sha": "c4098afaa47ae09b733c9019a32d7b52f51f1465", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dd297da046efe0b3be545053a676494daba3a2a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dd297da046efe0b3be545053a676494daba3a2a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6dd297da046efe0b3be545053a676494daba3a2a", "patch": "@@ -1,3 +1,9 @@\n+2004-03-22  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* configure.ac: Allow --disable-coverage-flags (for the future benefit\n+\tof top level bootstrap, and consistency).  Reindent.\n+\t* configure: Regenerate.\n+\n 2004-03-21  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* bt-load.c, builtins.c, cfghooks.c, cfgrtl.c, gcse.c,"}, {"sha": "f096f8be65a0d637648a83920be45a82b22682b0", "filename": "gcc/configure", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dd297da046efe0b3be545053a676494daba3a2a/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dd297da046efe0b3be545053a676494daba3a2a/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=6dd297da046efe0b3be545053a676494daba3a2a", "patch": "@@ -4494,17 +4494,21 @@ fi\n if test \"${enable_coverage+set}\" = set; then\n   enableval=\"$enable_coverage\"\n   case \"${enableval}\" in\n-yes|noopt)\n-\tcoverage_flags=\"-fprofile-arcs -ftest-coverage -frandom-seed=\\$@ -O0\"\n-\t;;\n-opt)\n-\tcoverage_flags=\"-fprofile-arcs -ftest-coverage -frandom-seed=\\$@ -O2\"\n-\t;;\n-*)\n-\t{ { echo \"$as_me:$LINENO: error: unknown coverage setting $enableval\" >&5\n+  yes|noopt)\n+    coverage_flags=\"-fprofile-arcs -ftest-coverage -frandom-seed=\\$@ -O0\"\n+    ;;\n+  opt)\n+    coverage_flags=\"-fprofile-arcs -ftest-coverage -frandom-seed=\\$@ -O2\"\n+    ;;\n+  no)\n+    # a.k.a. --disable-coverage\n+    coverage_flags=\"\"\n+    ;;\n+  *)\n+    { { echo \"$as_me:$LINENO: error: unknown coverage setting $enableval\" >&5\n echo \"$as_me: error: unknown coverage setting $enableval\" >&2;}\n    { (exit 1); exit 1; }; }\n-\t;;\n+    ;;\n esac\n else\n   coverage_flags=\"\"\n@@ -5138,7 +5142,7 @@ if test \"${gcc_cv_prog_makeinfo_modern+set}\" = set; then\n else\n     ac_prog_version=`$MAKEINFO --version 2>&1 |\n                    sed -n 's/^.*GNU texinfo.* \\([0-9][0-9.]*\\).*$/\\1/p'`\n-  echo \"configure:5141: version of makeinfo is $ac_prog_version\" >&5\n+  echo \"configure:5145: version of makeinfo is $ac_prog_version\" >&5\n   case $ac_prog_version in\n     '')     gcc_cv_prog_makeinfo_modern=no;;\n     4.[2-9]*)"}, {"sha": "9ea7dfa5f1e886db68225af44a0a16a8e817940a", "filename": "gcc/configure.ac", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dd297da046efe0b3be545053a676494daba3a2a/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dd297da046efe0b3be545053a676494daba3a2a/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=6dd297da046efe0b3be545053a676494daba3a2a", "patch": "@@ -474,15 +474,19 @@ AC_ARG_ENABLE(coverage,\n \t\t\t  optimization. Values are opt, noopt,\n \t\t\t  default is noopt],\n [case \"${enableval}\" in\n-yes|noopt)\n-\tcoverage_flags=\"-fprofile-arcs -ftest-coverage -frandom-seed=\\$@ -O0\"\n-\t;;\n-opt)\n-\tcoverage_flags=\"-fprofile-arcs -ftest-coverage -frandom-seed=\\$@ -O2\"\n-\t;;\n-*)\n-\tAC_MSG_ERROR(unknown coverage setting $enableval)\n-\t;;\n+  yes|noopt)\n+    coverage_flags=\"-fprofile-arcs -ftest-coverage -frandom-seed=\\$@ -O0\"\n+    ;;\n+  opt)\n+    coverage_flags=\"-fprofile-arcs -ftest-coverage -frandom-seed=\\$@ -O2\"\n+    ;;\n+  no)\n+    # a.k.a. --disable-coverage\n+    coverage_flags=\"\"\n+    ;;\n+  *)\n+    AC_MSG_ERROR(unknown coverage setting $enableval)\n+    ;;\n esac],\n [coverage_flags=\"\"])\n AC_SUBST(coverage_flags)"}]}