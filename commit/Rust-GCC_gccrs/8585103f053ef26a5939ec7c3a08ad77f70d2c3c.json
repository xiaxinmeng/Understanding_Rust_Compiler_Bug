{"sha": "8585103f053ef26a5939ec7c3a08ad77f70d2c3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU4NTEwM2YwNTNlZjI2YTU5MzllYzdjM2EwOGFkNzdmNzBkMmMzYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-04-11T17:19:56Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-04-11T17:19:56Z"}, "message": "re PR rtl-optimization/80385 (Segfault in commutative_operand_precedence() rtlanal.c:3373)\n\n\tPR rtl-optimization/80385\n\t* simplify-rtx.c (simplify_unary_operation_1): Don't transform\n\t(not (neg X)) into (plus X -1) for complex or non-integral modes.\n\n\t* g++.dg/opt/pr80385.C: New test.\n\nFrom-SVN: r246850", "tree": {"sha": "d8c8096f0932ccc2f3c7ac4ddb1d3230bfa9f602", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8c8096f0932ccc2f3c7ac4ddb1d3230bfa9f602"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8585103f053ef26a5939ec7c3a08ad77f70d2c3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8585103f053ef26a5939ec7c3a08ad77f70d2c3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8585103f053ef26a5939ec7c3a08ad77f70d2c3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8585103f053ef26a5939ec7c3a08ad77f70d2c3c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fbc698e0f4c35b3d16127682636bd141fad1d369", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbc698e0f4c35b3d16127682636bd141fad1d369", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbc698e0f4c35b3d16127682636bd141fad1d369"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "ea434f6e280ae2f78363ae45244829fbb8ea1e50", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8585103f053ef26a5939ec7c3a08ad77f70d2c3c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8585103f053ef26a5939ec7c3a08ad77f70d2c3c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8585103f053ef26a5939ec7c3a08ad77f70d2c3c", "patch": "@@ -1,5 +1,9 @@\n 2017-04-11  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/80385\n+\t* simplify-rtx.c (simplify_unary_operation_1): Don't transform\n+\t(not (neg X)) into (plus X -1) for complex or non-integral modes.\n+\n \tPR libgomp/80394\n \t* omp-low.c (scan_omp_task): Don't optimize away empty tasks\n \tif they have any depend clauses."}, {"sha": "4bbbe2354e3f21f2bfa98987d97ad64b4a27032b", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8585103f053ef26a5939ec7c3a08ad77f70d2c3c/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8585103f053ef26a5939ec7c3a08ad77f70d2c3c/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=8585103f053ef26a5939ec7c3a08ad77f70d2c3c", "patch": "@@ -932,8 +932,10 @@ simplify_unary_operation_1 (enum rtx_code code, machine_mode mode, rtx op)\n \t  && XEXP (op, 1) == constm1_rtx)\n \treturn simplify_gen_unary (NEG, mode, XEXP (op, 0), mode);\n \n-      /* Similarly, (not (neg X)) is (plus X -1).  */\n-      if (GET_CODE (op) == NEG)\n+      /* Similarly, (not (neg X)) is (plus X -1).  Only do this for\n+\t modes that have CONSTM1_RTX, i.e. MODE_INT, MODE_PARTIAL_INT\n+\t and MODE_VECTOR_INT.  */\n+      if (GET_CODE (op) == NEG && CONSTM1_RTX (mode))\n \treturn simplify_gen_binary (PLUS, mode, XEXP (op, 0),\n \t\t\t\t    CONSTM1_RTX (mode));\n "}, {"sha": "a01828881749eb66caed763734dbcdc1cdccaf44", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8585103f053ef26a5939ec7c3a08ad77f70d2c3c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8585103f053ef26a5939ec7c3a08ad77f70d2c3c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8585103f053ef26a5939ec7c3a08ad77f70d2c3c", "patch": "@@ -1,3 +1,8 @@\n+2017-04-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/80385\n+\t* g++.dg/opt/pr80385.C: New test.\n+\n 2017-04-11  Martin Liska  <mliska@suse.cz>\n \n \tPR ipa/80212"}, {"sha": "f18abc941f3f1fb490ea480c42dc5b15d275f59c", "filename": "gcc/testsuite/g++.dg/opt/pr80385.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8585103f053ef26a5939ec7c3a08ad77f70d2c3c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr80385.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8585103f053ef26a5939ec7c3a08ad77f70d2c3c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr80385.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr80385.C?ref=8585103f053ef26a5939ec7c3a08ad77f70d2c3c", "patch": "@@ -0,0 +1,14 @@\n+// PR rtl-optimization/80385\n+// { dg-do compile { target { i?86-*-* x86_64-*-* } } }\n+// { dg-options \"-Ofast -msse2\" }\n+\n+#include <x86intrin.h>\n+\n+__m128 a, e;\n+struct A { __m128 b; A (); A (__m128 x) : b(x) {} };\n+A operator+ (A, A);\n+A operator- (A) { __m128 c = -a; return c; }\n+A foo (A x) { __m128 d = x.b; return _mm_andnot_ps (d, e); }\n+struct B { A n[1]; };\n+void bar (B x) { A f = foo (x.n[0]); A g = f + A (); }\n+void baz () { B h; B i; A j; i.n[0] = -j; h = i; B k = h; bar (k); }"}]}