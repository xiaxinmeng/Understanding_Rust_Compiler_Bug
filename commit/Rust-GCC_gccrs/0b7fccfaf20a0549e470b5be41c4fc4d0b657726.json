{"sha": "0b7fccfaf20a0549e470b5be41c4fc4d0b657726", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI3ZmNjZmFmMjBhMDU0OWU0NzBiNWJlNDFjNGZjNGQwYjY1NzcyNg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-03-30T13:40:17Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-03-30T13:40:17Z"}, "message": "re PR c++/52772 (internal compiler error: Segmentation fault)\n\n2012-03-30  Richard Guenther <rguenther@suse.de>\n\n\tPR middle-end/52772\n\t* except.c (emit_to_new_bb_before): Move loop updating ...\n\t(dw2_build_landing_pads): ... here.  Use a proper block for\n\tquerying the loop father.\n\n\t* g++.dg/torture/pr52772.C: New testcase.\n\nFrom-SVN: r186011", "tree": {"sha": "e9003b61195eb2ee90f2007af7528d63e137c32f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9003b61195eb2ee90f2007af7528d63e137c32f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b7fccfaf20a0549e470b5be41c4fc4d0b657726", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b7fccfaf20a0549e470b5be41c4fc4d0b657726", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b7fccfaf20a0549e470b5be41c4fc4d0b657726", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b7fccfaf20a0549e470b5be41c4fc4d0b657726/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fe5798c059f2ed1cf87abb0bc38b8ad376f2b7d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe5798c059f2ed1cf87abb0bc38b8ad376f2b7d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe5798c059f2ed1cf87abb0bc38b8ad376f2b7d6"}], "stats": {"total": 113, "additions": 107, "deletions": 6}, "files": [{"sha": "151e5a79c335627eccd9386268fe1e73bfbee928", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b7fccfaf20a0549e470b5be41c4fc4d0b657726/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b7fccfaf20a0549e470b5be41c4fc4d0b657726/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0b7fccfaf20a0549e470b5be41c4fc4d0b657726", "patch": "@@ -1,3 +1,10 @@\n+2012-03-30  Richard Guenther <rguenther@suse.de>\n+\n+\tPR middle-end/52772\n+\t* except.c (emit_to_new_bb_before): Move loop updating ...\n+\t(dw2_build_landing_pads): ... here.  Use a proper block for\n+\tquerying the loop father.\n+\n 2012-03-30  Tristan Gingold  <gingold@adacore.com>\n \n \t* config/ia64/ia64.c (ia64_section_type_flags): Remove"}, {"sha": "e3a9ef07422b30064f23e49091aaf2d7011e38c2", "filename": "gcc/except.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b7fccfaf20a0549e470b5be41c4fc4d0b657726/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b7fccfaf20a0549e470b5be41c4fc4d0b657726/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=0b7fccfaf20a0549e470b5be41c4fc4d0b657726", "patch": "@@ -918,12 +918,6 @@ emit_to_new_bb_before (rtx seq, rtx insn)\n   bb = create_basic_block (seq, last, prev_bb);\n   update_bb_for_insn (bb);\n   bb->flags |= BB_SUPERBLOCK;\n-  if (current_loops)\n-    {\n-      add_bb_to_loop (bb, prev_bb->loop_father);\n-      if (prev_bb->loop_father->header == prev_bb)\n-\tprev_bb->loop_father->header = bb;\n-    }\n   return bb;\n }\n \f\n@@ -995,6 +989,16 @@ dw2_build_landing_pads (void)\n       e = make_edge (bb, bb->next_bb, e_flags);\n       e->count = bb->count;\n       e->probability = REG_BR_PROB_BASE;\n+      if (current_loops)\n+\t{\n+\t  struct loop *loop = bb->next_bb->loop_father;\n+\t  /* If we created a pre-header block, add the new block to the\n+\t     outer loop, otherwise to the loop itself.  */\n+\t  if (bb->next_bb == loop->header)\n+\t    add_bb_to_loop (bb, loop_outer (loop));\n+\t  else\n+\t    add_bb_to_loop (bb, loop);\n+\t}\n     }\n }\n "}, {"sha": "fb232b3913aad55c6328a50f90229ad77833e630", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b7fccfaf20a0549e470b5be41c4fc4d0b657726/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b7fccfaf20a0549e470b5be41c4fc4d0b657726/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0b7fccfaf20a0549e470b5be41c4fc4d0b657726", "patch": "@@ -1,3 +1,8 @@\n+2012-03-30  Richard Guenther <rguenther@suse.de>\n+\n+\tPR middle-end/52772\n+\t* g++.dg/torture/pr52772.C: New testcase.\n+\n 2012-03-29  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/52718"}, {"sha": "810e6579fba8698bff6351fb73c7d2705460c9ce", "filename": "gcc/testsuite/g++.dg/torture/pr52772.C", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b7fccfaf20a0549e470b5be41c4fc4d0b657726/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr52772.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b7fccfaf20a0549e470b5be41c4fc4d0b657726/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr52772.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr52772.C?ref=0b7fccfaf20a0549e470b5be41c4fc4d0b657726", "patch": "@@ -0,0 +1,85 @@\n+// { dg-do compile }\n+\n+typedef __SIZE_TYPE__ size_t;\n+\n+class c1;\n+\n+class c2 {\n+  public: c2() { };\n+  void *operator new(size_t size, const c1 & crc1);\n+};\n+\n+class c3 {\n+  public: c3() { _Obj = 0; }\n+  ~c3() { if (_Obj) delete _Obj; }\n+  void set(c2 *pObj);\n+  protected: c2 *_Obj;\n+};\n+\n+void c3::set(c2 *pObj) { _Obj = pObj; };\n+\n+template<class TYPE> class tc1 : public c2 {\n+  public: tc1(int n=0){};\n+  int get() const;\n+  TYPE& operator[] (int id);\n+  TYPE * _data;\n+  int _size;\n+};\n+\n+template<class TYPE> TYPE & tc1<TYPE>::operator[] (int id) {\n+  return _data[id];\n+}\n+ \n+template<class TYPE> int tc1<TYPE>::get() const {\n+  return _size;\n+}\n+\n+class c4 {\n+  public: c4();\n+};\n+\n+class c5 : public c2 {\n+  protected: c2 * _own;\n+  public: c5(c2 *o) : _own(o) { }\n+  c5(const c4 & box);\n+  int add(const c4 & ext);\n+};\n+\n+class c6 {\n+  public: int get() const {};\n+};\n+\n+class c7 {\n+  friend class c8;\n+  int find(c6 * loop) const;\n+};\n+\n+class c8 {\n+  const c1 & _rc1;\n+  int tria(c7 * face, c5 * vtree0 = 0);\n+};\n+\n+int c8::tria(c7 * face, c5 * vtree0) {\n+  c6 *sLData[64];\n+  tc1<c6*> loops(64);\n+  while (loops.get() > 1) { \n+    c6 *iloop = 0; \n+    for (int j=1; j<loops.get(); j++) { \n+      if (loops[j]->get() < 32) { \n+        iloop = loops[j];\n+      }\n+    }\n+    face->find(iloop);\n+  }\n+  c4 box;\n+  c3 ctree;\n+  c5 *vtree = vtree0;\n+  if (!vtree) { \n+    vtree = new (_rc1) c5(box); \n+    ctree.set(vtree); \n+    for (int j=0; j<1; j++) { \n+      c4 sVBBox; \n+      vtree->add(sVBBox);\n+    }\n+  }\n+}"}]}