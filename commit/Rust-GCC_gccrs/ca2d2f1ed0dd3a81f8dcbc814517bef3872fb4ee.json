{"sha": "ca2d2f1ed0dd3a81f8dcbc814517bef3872fb4ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2EyZDJmMWVkMGRkM2E4MWY4ZGNiYzgxNDUxN2JlZjM4NzJmYjRlZQ==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-03-07T19:54:12Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-03-07T19:54:12Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r414", "tree": {"sha": "8dd2e0b06f3d5b591007837483359f82dc848b7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8dd2e0b06f3d5b591007837483359f82dc848b7c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca2d2f1ed0dd3a81f8dcbc814517bef3872fb4ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca2d2f1ed0dd3a81f8dcbc814517bef3872fb4ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca2d2f1ed0dd3a81f8dcbc814517bef3872fb4ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca2d2f1ed0dd3a81f8dcbc814517bef3872fb4ee/comments", "author": null, "committer": null, "parents": [{"sha": "6ab6f071765945426b9add40dc25d47f3e4391be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ab6f071765945426b9add40dc25d47f3e4391be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ab6f071765945426b9add40dc25d47f3e4391be"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "40894adf3540d6a8ea6ae6a30d7c7464756661ce", "filename": "gcc/genattrtab.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca2d2f1ed0dd3a81f8dcbc814517bef3872fb4ee/gcc%2Fgenattrtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca2d2f1ed0dd3a81f8dcbc814517bef3872fb4ee/gcc%2Fgenattrtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenattrtab.c?ref=ca2d2f1ed0dd3a81f8dcbc814517bef3872fb4ee", "patch": "@@ -522,6 +522,8 @@ attr_rtx (va_alist)\n \n    rtx attr_printf (len, format, [arg1, ..., argn])  */\n \n+#ifdef HAVE_VPRINTF\n+\n /*VARARGS2*/\n static char *\n attr_printf (va_alist)\n@@ -543,6 +545,24 @@ attr_printf (va_alist)\n   return attr_string (str, strlen (str));\n }\n \n+#else /* not HAVE_VPRINTF */\n+\n+static char *\n+attr_printf (len, fmt, arg1, arg2, arg3)\n+     int len;\n+     char *fmt;\n+     char *arg1, *arg2, *arg3; /* also int */\n+{\n+  register char *str;\n+\n+  /* Print the string into a temporary location.  */\n+  str = (char *) alloca (len);\n+  sprintf (str, fmt, arg1, arg2, arg3);\n+\n+  return attr_string (str, strlen (str));\n+}\n+#endif /* not HAVE_VPRINTF */\n+\n /* Return a permanent (possibly shared) copy of a string STR (not assumed\n    to be null terminated) with LEN bytes.  */\n "}]}