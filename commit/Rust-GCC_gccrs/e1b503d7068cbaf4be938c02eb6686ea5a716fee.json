{"sha": "e1b503d7068cbaf4be938c02eb6686ea5a716fee", "node_id": "C_kwDOANBUbNoAKGUxYjUwM2Q3MDY4Y2JhZjRiZTkzOGMwMmViNjY4NmVhNWE3MTZmZWU", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-11-23T08:29:04Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-11-23T08:29:04Z"}, "message": "c++: Fix up -fcontract* options\n\nI've noticed\n+FAIL: compiler driver --help=c++ option(s): \"^ +-.*[^:.]\\$\" absent from output: \"  -fcontract-build-level=[off|default|audit] Specify max contract level to generate runtime checks for\"\nerror, this is due to missing dot at the end of the description.\n\nThe second part of the first hunk should fix that, but while at it,\nI find it weird that some options don't have RejectNegative, yet\nfor options that accept an argument a negative option looks weird\nand isn't really handled.\n\nThough, shall we have those [on|off] options at all?\nThose are inconsistent with all other boolean options gcc has.\nEvery other boolean option is -fwhatever for it being on\nand -fno-whatever for it being off, shouldn't the options be\nwithout arguments and accept negatives (-fcontract-assumption-mode\nvs. -fno-contract-assumption-mode etc.)?\n\n2022-11-23  Jakub Jelinek  <jakub@redhat.com>\n\n\t* c.opt (fcontract-assumption-mode=, fcontract-continuation-mode=,\n\tfcontract-role=, fcontract-semantic=): Add RejectNegative.\n\t(fcontract-build-level=): Terminate description with dot.", "tree": {"sha": "7b00645e1733062b7241e2934c73f64619db6bda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b00645e1733062b7241e2934c73f64619db6bda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1b503d7068cbaf4be938c02eb6686ea5a716fee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1b503d7068cbaf4be938c02eb6686ea5a716fee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1b503d7068cbaf4be938c02eb6686ea5a716fee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1b503d7068cbaf4be938c02eb6686ea5a716fee/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3138db588a46d445876c0358df55fa3995c6f221", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3138db588a46d445876c0358df55fa3995c6f221", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3138db588a46d445876c0358df55fa3995c6f221"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "4b0539132c686f3accb5d510badcda51c67fef62", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1b503d7068cbaf4be938c02eb6686ea5a716fee/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1b503d7068cbaf4be938c02eb6686ea5a716fee/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=e1b503d7068cbaf4be938c02eb6686ea5a716fee", "patch": "@@ -1692,12 +1692,12 @@ EnumValue\n Enum(on_off) String(on) Value(1)\n \n fcontract-assumption-mode=\n-C++ Joined\n+C++ Joined RejectNegative\n -fcontract-assumption-mode=[on|off]\tEnable or disable treating axiom level contracts as assumptions (default on).\n \n fcontract-build-level=\n C++ Joined RejectNegative\n--fcontract-build-level=[off|default|audit]\tSpecify max contract level to generate runtime checks for\n+-fcontract-build-level=[off|default|audit]\tSpecify max contract level to generate runtime checks for.\n \n fcontract-strict-declarations=\n C++ Var(flag_contract_strict_declarations) Enum(on_off) Joined Init(0) RejectNegative\n@@ -1708,15 +1708,15 @@ C++ Var(flag_contract_mode) Enum(on_off) Joined Init(1) RejectNegative\n -fcontract-mode=[on|off]\tEnable or disable all contract facilities (default on).\n \n fcontract-continuation-mode=\n-C++ Joined\n+C++ Joined RejectNegative\n -fcontract-continuation-mode=[on|off]\tEnable or disable contract continuation mode (default off).\n \n fcontract-role=\n-C++ Joined\n+C++ Joined RejectNegative\n -fcontract-role=<name>:<semantics>\tSpecify the semantics for all levels in a role (default, review), or a custom contract role with given semantics (ex: opt:assume,assume,assume)\n \n fcontract-semantic=\n-C++ Joined\n+C++ Joined RejectNegative\n -fcontract-semantic=<level>:<semantic>\tSpecify the concrete semantics for level\n \n fcoroutines"}]}