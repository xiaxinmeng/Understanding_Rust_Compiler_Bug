{"sha": "c69cb92fa0080b53fbdd10fb249b0da62b039dec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY5Y2I5MmZhMDA4MGI1M2ZiZGQxMGZiMjQ5YjBkYTYyYjAzOWRlYw==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2005-11-15T20:33:48Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2005-11-15T20:33:48Z"}, "message": "re PR fortran/24096 (huge() returns infinity for long doubles)\n\n\tPR fortran/24096\n\t* trans-types.c (gfc_init_kinds): Use one less for max_exponent\n\tof IBM extended double format.\n\nFrom-SVN: r107041", "tree": {"sha": "4b6c4b014ad3dcf5169dd5bdb2c90d41a8cc8596", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b6c4b014ad3dcf5169dd5bdb2c90d41a8cc8596"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c69cb92fa0080b53fbdd10fb249b0da62b039dec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c69cb92fa0080b53fbdd10fb249b0da62b039dec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c69cb92fa0080b53fbdd10fb249b0da62b039dec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c69cb92fa0080b53fbdd10fb249b0da62b039dec/comments", "author": null, "committer": null, "parents": [{"sha": "13b3c362283b2eafec401856fbd0a11df3bffe41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13b3c362283b2eafec401856fbd0a11df3bffe41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13b3c362283b2eafec401856fbd0a11df3bffe41"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "7e22961c1db1046490adfb41f276d22ff0ed2756", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c69cb92fa0080b53fbdd10fb249b0da62b039dec/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c69cb92fa0080b53fbdd10fb249b0da62b039dec/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c69cb92fa0080b53fbdd10fb249b0da62b039dec", "patch": "@@ -1,3 +1,9 @@\n+2005-11-16  Alan Modra  <amodra@bigpond.net.au>\n+\n+\tPR fortran/24096\n+\t* trans-types.c (gfc_init_kinds): Use one less for max_exponent\n+\tof IBM extended double format.\n+\n 2005-11-13  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \t* intrinsic.c (add_functions): Add COMPLEX, FTELL, FGETC, FGET,"}, {"sha": "6aaf81a5b4c864d44cadebf7569f61fc961010c2", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c69cb92fa0080b53fbdd10fb249b0da62b039dec/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c69cb92fa0080b53fbdd10fb249b0da62b039dec/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=c69cb92fa0080b53fbdd10fb249b0da62b039dec", "patch": "@@ -192,6 +192,15 @@ gfc_init_kinds (void)\n       gfc_real_kinds[r_index].digits = fmt->p;\n       gfc_real_kinds[r_index].min_exponent = fmt->emin;\n       gfc_real_kinds[r_index].max_exponent = fmt->emax;\n+      if (fmt->pnan < fmt->p)\n+\t/* This is an IBM extended double format (or the MIPS variant)\n+\t   made up of two IEEE doubles.  The value of the long double is\n+\t   the sum of the values of the two parts.  The most significant\n+\t   part is required to be the value of the long double rounded\n+\t   to the nearest double.  If we use emax of 1024 then we can't\n+\t   represent huge(x) = (1 - b**(-p)) * b**(emax-1) * b, because\n+\t   rounding will make the most significant part overflow.  */\n+\tgfc_real_kinds[r_index].max_exponent = fmt->emax - 1;\n       gfc_real_kinds[r_index].mode_precision = GET_MODE_PRECISION (mode);\n       r_index += 1;\n     }"}]}