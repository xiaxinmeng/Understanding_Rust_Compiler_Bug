{"sha": "ebd208bf7b4e8265738cf774549842f3895739ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJkMjA4YmY3YjRlODI2NTczOGNmNzc0NTQ5ODQyZjM4OTU3MzlhYw==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2017-10-19T23:06:20Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2017-10-19T23:06:20Z"}, "message": "PR82575, lto debugobj references __gnu_lto_slim, ld test liblto-17 fails\n\nIf __gnu_lto_slim is global, undefined, default visibility in the\nearly debug object, then it finds its way into .dynsym when creating\nshared libraries.  __gnu_lto_slim in a symbol table (.dynsym or\n.symtab) signals nm and other binutils that the object is an LTO\nobject needing a plugin, but that isn't the case for the ld liblti-17\ntests.  So, make __gnu_lto_slim hidden to prevent it becoming\ndynamic.  Further, make it weak because some linkers may warn on\nfinding an undefined global non-default visibility symbol.\n\n\tPR lto/82575\n\t* simple-object-elf.c (simple_object_elf_copy_lto_debug_sections):\n\tMake discarded non-local symbols weak and hidden.\n\nFrom-SVN: r253914", "tree": {"sha": "4b1c24d5264cc33e69ddff9c62f34b72142e02a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b1c24d5264cc33e69ddff9c62f34b72142e02a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebd208bf7b4e8265738cf774549842f3895739ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebd208bf7b4e8265738cf774549842f3895739ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebd208bf7b4e8265738cf774549842f3895739ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebd208bf7b4e8265738cf774549842f3895739ac/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ef9eec0b599d533b58e29fe0c0bf6435e5368378", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef9eec0b599d533b58e29fe0c0bf6435e5368378", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef9eec0b599d533b58e29fe0c0bf6435e5368378"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "46dc0fa7e04c26ada8d404f1da34b074a71a62eb", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebd208bf7b4e8265738cf774549842f3895739ac/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebd208bf7b4e8265738cf774549842f3895739ac/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=ebd208bf7b4e8265738cf774549842f3895739ac", "patch": "@@ -1,3 +1,9 @@\n+2017-10-20  Alan Modra  <amodra@gmail.com>\n+\n+\tPR lto/82575\n+\t* simple-object-elf.c (simple_object_elf_copy_lto_debug_sections):\n+\tMake discarded non-local symbols weak and hidden.\n+\n 2017-10-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR lto/82598"}, {"sha": "1afd3ebc951dd4ecfe1f3a6d6a620297c4ec747e", "filename": "libiberty/simple-object-elf.c", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebd208bf7b4e8265738cf774549842f3895739ac/libiberty%2Fsimple-object-elf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebd208bf7b4e8265738cf774549842f3895739ac/libiberty%2Fsimple-object-elf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fsimple-object-elf.c?ref=ebd208bf7b4e8265738cf774549842f3895739ac", "patch": "@@ -236,8 +236,10 @@ typedef struct\n \n #define STB_LOCAL\t0\t/* Local symbol */\n #define STB_GLOBAL\t1\t/* Global symbol */\n+#define STB_WEAK\t2\t/* Weak global */\n \n #define STV_DEFAULT\t0\t/* Visibility is specified by binding type */\n+#define STV_HIDDEN\t2\t/* Can only be seen inside currect component */\n \n /* Functions to fetch and store different ELF types, depending on the\n    endianness and size.  */\n@@ -1365,18 +1367,25 @@ simple_object_elf_copy_lto_debug_sections (simple_object_read *sobj,\n \t\t    {\n \t\t      /* Make discarded symbols undefined and unnamed\n \t\t         in case it is local.  */\n-\t\t      if (ELF_ST_BIND (*st_info) == STB_LOCAL)\n-\t\t\tELF_SET_FIELD (type_functions, ei_class, Sym,\n-\t\t\t\t       ent, st_name, Elf_Word, 0);\n+\t\t      int bind = ELF_ST_BIND (*st_info);\n+\t\t      if (bind == STB_LOCAL)\n+\t\t\t{\n+\t\t\t  ELF_SET_FIELD (type_functions, ei_class, Sym,\n+\t\t\t\t\t ent, st_name, Elf_Word, 0);\n+\t\t\t  *st_other = STV_DEFAULT;\n+\t\t\t}\n+\t\t      else\n+\t\t\t{\n+\t\t\t  bind = STB_WEAK;\n+\t\t\t  *st_other = STV_HIDDEN;\n+\t\t\t}\n+\t\t      *st_info = ELF_ST_INFO (bind, STT_NOTYPE);\n \t\t      ELF_SET_FIELD (type_functions, ei_class, Sym,\n \t\t\t\t     ent, st_value, Elf_Addr, 0);\n \t\t      ELF_SET_FIELD (type_functions, ei_class, Sym,\n \t\t\t\t     ent, st_size, Elf_Word, 0);\n \t\t      ELF_SET_FIELD (type_functions, ei_class, Sym,\n \t\t\t\t     ent, st_shndx, Elf_Half, SHN_UNDEF);\n-\t\t      *st_info = ELF_ST_INFO (ELF_ST_BIND (*st_info),\n-\t\t\t\t\t      STT_NOTYPE);\n-\t\t      *st_other = STV_DEFAULT;\n \t\t    }\n \t\t}\n \t      XDELETEVEC (strings);"}]}