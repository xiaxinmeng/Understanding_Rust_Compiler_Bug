{"sha": "193c21c85b4b3f603b1b6280779c758d35570446", "node_id": "C_kwDOANBUbNoAKDE5M2MyMWM4NWI0YjNmNjAzYjFiNjI4MDc3OWM3NThkMzU1NzA0NDY", "commit": {"author": {"name": "bl7awy", "email": "mahadelr19@gmail.com", "date": "2023-02-28T17:53:01Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2023-03-01T00:16:04Z"}, "message": "typecheck: Fix casting error behind generics\n\ngcc/rust/ChangeLog:\n\t* typecheck/rust-casts.cc (TypeCastRules::cast_rules): Perform destructure on `from` type.\n\ngcc/testsuite/ChangeLog:\n\t* rust/compile/cast_generics.rs: New test.\n\nSigned-off-by: Mahmoud Mohamed  <mahadelr19@gmail.com>", "tree": {"sha": "823d15cfd3a0985477001c472d10cd5f561936f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/823d15cfd3a0985477001c472d10cd5f561936f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/193c21c85b4b3f603b1b6280779c758d35570446", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/193c21c85b4b3f603b1b6280779c758d35570446", "html_url": "https://github.com/Rust-GCC/gccrs/commit/193c21c85b4b3f603b1b6280779c758d35570446", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/193c21c85b4b3f603b1b6280779c758d35570446/comments", "author": {"login": "goar5670", "id": 40712841, "node_id": "MDQ6VXNlcjQwNzEyODQx", "avatar_url": "https://avatars.githubusercontent.com/u/40712841?v=4", "gravatar_id": "", "url": "https://api.github.com/users/goar5670", "html_url": "https://github.com/goar5670", "followers_url": "https://api.github.com/users/goar5670/followers", "following_url": "https://api.github.com/users/goar5670/following{/other_user}", "gists_url": "https://api.github.com/users/goar5670/gists{/gist_id}", "starred_url": "https://api.github.com/users/goar5670/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/goar5670/subscriptions", "organizations_url": "https://api.github.com/users/goar5670/orgs", "repos_url": "https://api.github.com/users/goar5670/repos", "events_url": "https://api.github.com/users/goar5670/events{/privacy}", "received_events_url": "https://api.github.com/users/goar5670/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9284e20b6542bad3ac2330b8ac6d41826d6c893b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9284e20b6542bad3ac2330b8ac6d41826d6c893b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9284e20b6542bad3ac2330b8ac6d41826d6c893b"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "f41c7134a75c57b05b9ababfd6255365eb730551", "filename": "gcc/rust/typecheck/rust-casts.cc", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/193c21c85b4b3f603b1b6280779c758d35570446/gcc%2Frust%2Ftypecheck%2Frust-casts.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/193c21c85b4b3f603b1b6280779c758d35570446/gcc%2Frust%2Ftypecheck%2Frust-casts.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-casts.cc?ref=193c21c85b4b3f603b1b6280779c758d35570446", "patch": "@@ -60,15 +60,16 @@ TypeCastRules::cast_rules ()\n   // https://github.com/rust-lang/rust/blob/7eac88abb2e57e752f3302f02be5f3ce3d7adfb4/compiler/rustc_typeck/src/check/cast.rs#L596\n   // https://github.com/rust-lang/rust/blob/7eac88abb2e57e752f3302f02be5f3ce3d7adfb4/compiler/rustc_typeck/src/check/cast.rs#L654\n \n-  rust_debug (\"cast_rules from={%s} to={%s}\",\n-\t      from.get_ty ()->debug_str ().c_str (),\n+  TyTy::BaseType *from_type = from.get_ty ()->destructure ();\n+\n+  rust_debug (\"cast_rules from={%s} to={%s}\", from_type->debug_str ().c_str (),\n \t      to.get_ty ()->debug_str ().c_str ());\n \n-  switch (from.get_ty ()->get_kind ())\n+  switch (from_type->get_kind ())\n     {\n       case TyTy::TypeKind::INFER: {\n \tTyTy::InferType *from_infer\n-\t  = static_cast<TyTy::InferType *> (from.get_ty ());\n+\t  = static_cast<TyTy::InferType *> (from_type);\n \tswitch (from_infer->get_infer_kind ())\n \t  {\n \t  case TyTy::InferType::InferTypeKind::GENERAL:\n@@ -290,4 +291,4 @@ TypeCastRules::emit_cast_error () const\n }\n \n } // namespace Resolver\n-} // namespace Rust\n+} // namespace Rust\n\\ No newline at end of file"}, {"sha": "7d185964e50a31a6c707450d4d34883182112fc2", "filename": "gcc/testsuite/rust/compile/cast_generics.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/193c21c85b4b3f603b1b6280779c758d35570446/gcc%2Ftestsuite%2Frust%2Fcompile%2Fcast_generics.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/193c21c85b4b3f603b1b6280779c758d35570446/gcc%2Ftestsuite%2Frust%2Fcompile%2Fcast_generics.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fcast_generics.rs?ref=193c21c85b4b3f603b1b6280779c758d35570446", "patch": "@@ -0,0 +1,8 @@\n+fn test<T>(a: T) -> T {\n+  a\n+}\n+\n+fn main() {\n+  let t: i32 = test(123 as i32) as i32;\n+  // { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n+}"}]}