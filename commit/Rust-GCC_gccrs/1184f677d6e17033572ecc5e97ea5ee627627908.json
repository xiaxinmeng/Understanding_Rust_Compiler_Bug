{"sha": "1184f677d6e17033572ecc5e97ea5ee627627908", "node_id": "C_kwDOANBUbNoAKDExODRmNjc3ZDZlMTcwMzM1NzJlY2M1ZTk3ZWE1ZWU2Mjc2Mjc5MDg", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-07-12T07:37:13Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-07-13T14:25:28Z"}, "message": "Use nonzero bits in range-ops to determine if < 0 is false.\n\nFor a signed integer, x < 0 is false if the sign bit in the nonzero\nbits of X is clear.\n\nBoth CCP and ipa-cp can set the global nonzero bits in a range, which\nmeans we can now use some of that information in evrp and subsequent\npasses.  I've adjusted two tests which now fold things earlier because\nof this optimization.\n\nTested on x86-64 Linux.\n\ngcc/ChangeLog:\n\n\t* range-op.cc (operator_lt::fold_range): Use nonzero bits.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/ipa/pure-const-3.C: Adjust.\n\t* gcc.dg/pr102983.c: Adjust.", "tree": {"sha": "2bcbdcd5264a740f41cef764d07b0d6229c17ab8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bcbdcd5264a740f41cef764d07b0d6229c17ab8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1184f677d6e17033572ecc5e97ea5ee627627908", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1184f677d6e17033572ecc5e97ea5ee627627908", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1184f677d6e17033572ecc5e97ea5ee627627908", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1184f677d6e17033572ecc5e97ea5ee627627908/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "554b21edb9ec91a898125d4915d790c6d4b9a688", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/554b21edb9ec91a898125d4915d790c6d4b9a688", "html_url": "https://github.com/Rust-GCC/gccrs/commit/554b21edb9ec91a898125d4915d790c6d4b9a688"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "e184129f9af7d87f632149f27401211166a77c60", "filename": "gcc/range-op.cc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1184f677d6e17033572ecc5e97ea5ee627627908/gcc%2Frange-op.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1184f677d6e17033572ecc5e97ea5ee627627908/gcc%2Frange-op.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op.cc?ref=1184f677d6e17033572ecc5e97ea5ee627627908", "patch": "@@ -803,6 +803,9 @@ operator_lt::fold_range (irange &r, tree type,\n     r = range_true (type);\n   else if (!wi::lt_p (op1.lower_bound (), op2.upper_bound (), sign))\n     r = range_false (type);\n+  // Use nonzero bits to determine if < 0 is false.\n+  else if (op2.zero_p () && !wi::neg_p (op1.get_nonzero_bits (), sign))\n+    r = range_false (type);\n   else\n     r = range_true_and_false (type);\n   return true;"}, {"sha": "b4a4673e86ea9daa2433cd9313c9159ea0d2eef1", "filename": "gcc/testsuite/g++.dg/ipa/pure-const-3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1184f677d6e17033572ecc5e97ea5ee627627908/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpure-const-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1184f677d6e17033572ecc5e97ea5ee627627908/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpure-const-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpure-const-3.C?ref=1184f677d6e17033572ecc5e97ea5ee627627908", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fno-ipa-vrp -fdump-tree-optimized -fno-tree-ccp\"  } */\n+/* { dg-options \"-O2 -fno-ipa-vrp -fdump-tree-optimized -fno-tree-ccp -fdisable-tree-evrp\"  } */\n int *ptr;\n static int barvar;\n static int b(int a);"}, {"sha": "e1bd24b2e39e31cc67a0198ccd2504069ec349ed", "filename": "gcc/testsuite/gcc.dg/pr102983.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1184f677d6e17033572ecc5e97ea5ee627627908/gcc%2Ftestsuite%2Fgcc.dg%2Fpr102983.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1184f677d6e17033572ecc5e97ea5ee627627908/gcc%2Ftestsuite%2Fgcc.dg%2Fpr102983.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr102983.c?ref=1184f677d6e17033572ecc5e97ea5ee627627908", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -fdump-tree-evrp\" } */\n+/* { dg-options \"-O2 -fdump-tree-evrp -fno-tree-ccp\" } */\n void foo(void);\n \n static int a = 1;"}]}