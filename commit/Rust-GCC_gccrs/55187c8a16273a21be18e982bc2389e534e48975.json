{"sha": "55187c8a16273a21be18e982bc2389e534e48975", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTUxODdjOGExNjI3M2EyMWJlMThlOTgyYmMyMzg5ZTUzNGU0ODk3NQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-04-03T02:09:20Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2008-04-03T02:09:20Z"}, "message": "re PR middle-end/35800 (Revision 133835 failed to compile binutils)\n\n\tPR middle-end/35800\n\t* expr.h (try_casesi): Adjust prototype.\n\t* expr.c (try_casesi): Take fallback label as extra parameter.\n\tUse that for gen_casesi if default_label is NULL.\n\t* stmt.c (expand_case): Pass fallback label to try_casesi,\n\tmake sure to fill gaps with a fallback label if default_label\n\tis not present.\n\nFrom-SVN: r133857", "tree": {"sha": "27d6aeb3a7b64063a0e152660705ca93e4060509", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27d6aeb3a7b64063a0e152660705ca93e4060509"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55187c8a16273a21be18e982bc2389e534e48975", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55187c8a16273a21be18e982bc2389e534e48975", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55187c8a16273a21be18e982bc2389e534e48975", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55187c8a16273a21be18e982bc2389e534e48975/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d2cf5f997fa1a72e92b641dd42177ea7a98ae1a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2cf5f997fa1a72e92b641dd42177ea7a98ae1a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2cf5f997fa1a72e92b641dd42177ea7a98ae1a6"}], "stats": {"total": 35, "additions": 26, "deletions": 9}, "files": [{"sha": "aa78346a55ebeb7cfa8ad88383e0404540acdee4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55187c8a16273a21be18e982bc2389e534e48975/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55187c8a16273a21be18e982bc2389e534e48975/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=55187c8a16273a21be18e982bc2389e534e48975", "patch": "@@ -1,3 +1,13 @@\n+2008-04-03  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/35800\n+\t* expr.h (try_casesi): Adjust prototype.\n+\t* expr.c (try_casesi): Take fallback label as extra parameter.\n+\tUse that for gen_casesi if default_label is NULL.\n+\t* stmt.c (expand_case): Pass fallback label to try_casesi,\n+\tmake sure to fill gaps with a fallback label if default_label\n+\tis not present.\n+\n 2008-04-03  Dominique d'Humieres <dominiq@lps.ens.fr>\n \n \tPR target/35801"}, {"sha": "b0690f51c53415f0e795ec4e2b287cfc36ecfde9", "filename": "gcc/expr.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55187c8a16273a21be18e982bc2389e534e48975/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55187c8a16273a21be18e982bc2389e534e48975/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=55187c8a16273a21be18e982bc2389e534e48975", "patch": "@@ -9830,7 +9830,8 @@ case_values_threshold (void)\n    0 otherwise (i.e. if there is no casesi instruction).  */\n int\n try_casesi (tree index_type, tree index_expr, tree minval, tree range,\n-\t    rtx table_label ATTRIBUTE_UNUSED, rtx default_label)\n+\t    rtx table_label ATTRIBUTE_UNUSED, rtx default_label,\n+\t    rtx fallback_label ATTRIBUTE_UNUSED)\n {\n   enum machine_mode index_mode = SImode;\n   int index_bits = GET_MODE_BITSIZE (index_mode);\n@@ -9894,7 +9895,8 @@ try_casesi (tree index_type, tree index_expr, tree minval, tree range,\n     op2 = copy_to_mode_reg (op_mode, op2);\n \n   emit_jump_insn (gen_casesi (index, op1, op2,\n-\t\t\t      table_label, default_label));\n+\t\t\t      table_label, !default_label\n+\t\t\t\t\t   ? fallback_label : default_label));\n   return 1;\n }\n "}, {"sha": "beb44bd80b7d051887770e2221f9a98e06a25ee4", "filename": "gcc/expr.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55187c8a16273a21be18e982bc2389e534e48975/gcc%2Fexpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55187c8a16273a21be18e982bc2389e534e48975/gcc%2Fexpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.h?ref=55187c8a16273a21be18e982bc2389e534e48975", "patch": "@@ -555,7 +555,7 @@ extern void do_compare_rtx_and_jump (rtx, rtx, enum rtx_code, int,\n \t\t\t\t     enum machine_mode, rtx, rtx, rtx);\n \n /* Two different ways of generating switch statements.  */\n-extern int try_casesi (tree, tree, tree, tree, rtx, rtx);\n+extern int try_casesi (tree, tree, tree, tree, rtx, rtx, rtx);\n extern int try_tablejump (tree, tree, tree, tree, rtx, rtx);\n \n /* Smallest number of adjacent cases before we use a jump table."}, {"sha": "aeea50970f61d884596bac2f731f39accaded151", "filename": "gcc/stmt.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55187c8a16273a21be18e982bc2389e534e48975/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55187c8a16273a21be18e982bc2389e534e48975/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=55187c8a16273a21be18e982bc2389e534e48975", "patch": "@@ -2521,9 +2521,10 @@ expand_case (tree exp)\n \t}\n       else\n \t{\n+\t  rtx fallback_label = label_rtx (case_list->code_label);\n \t  table_label = gen_label_rtx ();\n \t  if (! try_casesi (index_type, index_expr, minval, range,\n-\t\t\t    table_label, default_label))\n+\t\t\t    table_label, default_label, fallback_label))\n \t    {\n \t      bool ok;\n \n@@ -2566,11 +2567,15 @@ expand_case (tree exp)\n \t\t  = gen_rtx_LABEL_REF (Pmode, label_rtx (n->code_label));\n \t    }\n \n-\t  /* Fill in the gaps with the default.  */\n-\t  if (default_label)\n-\t    for (i = 0; i < ncases; i++)\n-\t      if (labelvec[i] == 0)\n-\t        labelvec[i] = gen_rtx_LABEL_REF (Pmode, default_label);\n+\t  /* Fill in the gaps with the default.  We may have gaps at\n+\t     the beginning if we tried to avoid the minval subtraction,\n+\t     so substitute some label even if the default label was\n+\t     deemed unreachable.  */\n+\t  if (!default_label)\n+\t    default_label = fallback_label;\n+\t  for (i = 0; i < ncases; i++)\n+\t    if (labelvec[i] == 0)\n+\t      labelvec[i] = gen_rtx_LABEL_REF (Pmode, default_label);\n \n \t  /* Output the table.  */\n \t  emit_label (table_label);"}]}