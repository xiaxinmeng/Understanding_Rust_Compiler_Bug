{"sha": "fb0e72c8c06acbc30759e707d807c35758c6961c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmIwZTcyYzhjMDZhY2JjMzA3NTllNzA3ZDgwN2MzNTc1OGM2OTYxYw==", "commit": {"author": {"name": "Jim Wilson", "email": "jimw@sifive.com", "date": "2017-11-30T18:03:46Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2017-11-30T18:03:46Z"}, "message": "Cleanup riscv option docs.\n\n\tgcc/\n\t* doc/invoke.texi (RISC-V Options): Delete nonexistent -mmemcpy and\n\t-mno-memcpy options.  For -mplt, -mfdiv, -mdiv, -msave-restore, and\n\t-mstrict-align, add info on default value.  Delete redundant lines for\n\t-mabi.  Add missing -mexplicit-relocs docs.\n\nFrom-SVN: r255280", "tree": {"sha": "40dec4c6b8f7d59e2b2a7aa14561a3c9d9ddf771", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40dec4c6b8f7d59e2b2a7aa14561a3c9d9ddf771"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb0e72c8c06acbc30759e707d807c35758c6961c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb0e72c8c06acbc30759e707d807c35758c6961c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb0e72c8c06acbc30759e707d807c35758c6961c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb0e72c8c06acbc30759e707d807c35758c6961c/comments", "author": null, "committer": null, "parents": [{"sha": "2d11897a77255a521a6c420739266d3bec0c76fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d11897a77255a521a6c420739266d3bec0c76fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d11897a77255a521a6c420739266d3bec0c76fe"}], "stats": {"total": 41, "additions": 27, "deletions": 14}, "files": [{"sha": "400ce9776b554d6223baf9a2915715671c605946", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb0e72c8c06acbc30759e707d807c35758c6961c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb0e72c8c06acbc30759e707d807c35758c6961c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb0e72c8c06acbc30759e707d807c35758c6961c", "patch": "@@ -1,3 +1,10 @@\n+2017-11-30  Jim Wilson  <jimw@sifive.com>\n+\n+\t* doc/invoke.texi (RISC-V Options): Delete nonexistent -mmemcpy and\n+\t-mno-memcpy options.  For -mplt, -mfdiv, -mdiv, -msave-restore, and\n+\t-mstrict-align, add info on default value.  Delete redundant lines for\n+\t-mabi.  Add missing -mexplicit-relocs docs.\n+\n 2017-11-30  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* config/arc/arc.md (trap): New pattern."}, {"sha": "c105800344d7331e91897d794ee1cfb1579478c5", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb0e72c8c06acbc30759e707d807c35758c6961c/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb0e72c8c06acbc30759e707d807c35758c6961c/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=fb0e72c8c06acbc30759e707d807c35758c6961c", "patch": "@@ -979,7 +979,6 @@ See RS/6000 and PowerPC Options.\n \n @emph{RISC-V Options}\n @gccoptlist{-mbranch-cost=@var{N-instruction} @gol\n--mmemcpy  -mno-memcpy @gol\n -mplt  -mno-plt @gol\n -mabi=@var{ABI-string} @gol\n -mfdiv  -mno-fdiv @gol\n@@ -21757,18 +21756,12 @@ These command-line options are defined for RISC-V targets:\n @opindex mbranch-cost\n Set the cost of branches to roughly @var{n} instructions.\n \n-@item -mmemcpy\n-@itemx -mno-memcpy\n-@opindex mmemcpy\n-Don't optimize block moves.\n-\n @item -mplt\n @itemx -mno-plt\n @opindex plt\n-When generating PIC code, allow the use of PLTs. Ignored for non-PIC.\n+When generating PIC code, do or don't allow the use of PLTs. Ignored for\n+non-PIC.  The default is @option{-mplt}.\n \n-@item -mabi=@var{ABI-string}\n-@opindex mabi\n @item -mabi=@var{ABI-string}\n @opindex mabi\n Specify integer and floating-point calling convention.  @var{ABI-string}\n@@ -21793,13 +21786,16 @@ registers are only 32 bits wide.\n @item -mfdiv\n @itemx -mno-fdiv\n @opindex mfdiv\n-Use hardware floating-point divide and square root instructions.  This requires\n-the F or D extensions for floating-point registers.\n+Do or don't use hardware floating-point divide and square root instructions.\n+This requires the F or D extensions for floating-point registers.  The default\n+is to use them if the specified architecture has these instructions.\n \n @item -mdiv\n @itemx -mno-div\n @opindex mdiv\n-Use hardware instructions for integer division.  This requires the M extension.\n+Do or don't use hardware instructions for integer division.  This requires the\n+M extension.  The default is to use them if the specified architecture has\n+these instructions.\n \n @item -march=@var{ISA-string}\n @opindex march\n@@ -21819,12 +21815,16 @@ Put global and static data smaller than @var{n} bytes into a special section\n @item -msave-restore\n @itemx -mno-save-restore\n @opindex msave-restore\n-Use smaller but slower prologue and epilogue code.\n+Do or don't use smaller but slower prologue and epilogue code that uses\n+library function calls.  The default is to use fast inline prologues and\n+epilogues.\n \n @item -mstrict-align\n @itemx -mno-strict-align\n @opindex mstrict-align\n-Do not generate unaligned memory accesses.\n+Do not or do generate unaligned memory accesses.  The default is set depending\n+on whether the processor we are optimizing for supports fast unaligned access\n+or not.\n \n @item -mcmodel=medlow\n @opindex mcmodel=medlow\n@@ -21839,6 +21839,12 @@ Generate code for the medium-any code model. The program and its statically\n defined symbols must be within any single 2 GiB address range. Programs can be\n statically or dynamically linked.\n \n+@item -mexplicit-relocs\n+@itemx -mno-exlicit-relocs\n+Use or do not use assembler relocation operators when dealing with symbolic\n+addresses.  The alternative is to use assembler macros instead, which may\n+limit optimization.\n+\n @end table\n \n @node RL78 Options"}]}