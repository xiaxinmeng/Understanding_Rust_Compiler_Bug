{"sha": "4199e8c6fbc5ac6de95d50181c0b6083d0b6f0ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE5OWU4YzZmYmM1YWM2ZGU5NWQ1MDE4MWMwYjYwODNkMGI2ZjBhZA==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2015-01-06T09:35:30Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-06T09:35:30Z"}, "message": "exp_attr.adb (Expand_N_Attribute_Reference): Add dummy entry for Enum_Image.\n\n2015-01-06  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_attr.adb (Expand_N_Attribute_Reference): Add dummy entry\n\tfor Enum_Image.\n\t* sem_attr.adb: Implement Enum_Image attribute.\n\t* snames.ads-tmpl: Add entries for Enum_Image attribute.\n\nFrom-SVN: r219236", "tree": {"sha": "5bbdc978b5e3b9ed007d520238f1affbb5739c20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bbdc978b5e3b9ed007d520238f1affbb5739c20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4199e8c6fbc5ac6de95d50181c0b6083d0b6f0ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4199e8c6fbc5ac6de95d50181c0b6083d0b6f0ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4199e8c6fbc5ac6de95d50181c0b6083d0b6f0ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4199e8c6fbc5ac6de95d50181c0b6083d0b6f0ad/comments", "author": null, "committer": null, "parents": [{"sha": "db761fee4caf7ceb652dc6224428a675de7b1cb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db761fee4caf7ceb652dc6224428a675de7b1cb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db761fee4caf7ceb652dc6224428a675de7b1cb3"}], "stats": {"total": 96, "additions": 76, "deletions": 20}, "files": [{"sha": "16bb768e971d7d758c8ef728023c7e14520d776f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4199e8c6fbc5ac6de95d50181c0b6083d0b6f0ad/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4199e8c6fbc5ac6de95d50181c0b6083d0b6f0ad/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4199e8c6fbc5ac6de95d50181c0b6083d0b6f0ad", "patch": "@@ -1,3 +1,10 @@\n+2015-01-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* exp_attr.adb (Expand_N_Attribute_Reference): Add dummy entry\n+\tfor Enum_Image.\n+\t* sem_attr.adb: Implement Enum_Image attribute.\n+\t* snames.ads-tmpl: Add entries for Enum_Image attribute.\n+\n 2015-01-06  Robert Dewar  <dewar@adacore.com>\n \n \t* namet.ads: Document use of Boolean2 for No_Use_Of_Entity."}, {"sha": "5a66e3f55a2aae5a0d224e81d3df6df0c5548b31", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4199e8c6fbc5ac6de95d50181c0b6083d0b6f0ad/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4199e8c6fbc5ac6de95d50181c0b6083d0b6f0ad/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=4199e8c6fbc5ac6de95d50181c0b6083d0b6f0ad", "patch": "@@ -3497,9 +3497,9 @@ package body Exp_Attr is\n       begin\n          Rewrite (N,\n            Make_Attribute_Reference (Loc,\n-             Prefix => New_Occurrence_Of (Ptyp, Loc),\n+             Prefix         => New_Occurrence_Of (Ptyp, Loc),\n              Attribute_Name => Name_Image,\n-             Expressions => New_List (Relocate_Node (Pref))));\n+             Expressions    => New_List (Relocate_Node (Pref))));\n \n          Analyze_And_Resolve (N, Standard_String);\n       end Img;\n@@ -7178,6 +7178,7 @@ package body Exp_Attr is\n            Attribute_Digits                       |\n            Attribute_Emax                         |\n            Attribute_Enabled                      |\n+           Attribute_Enum_Image                   |\n            Attribute_Epsilon                      |\n            Attribute_Fast_Math                    |\n            Attribute_First_Valid                  |"}, {"sha": "1fcda36b0b71854db2e36701aff3bc2b9fa709de", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 64, "deletions": 18, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4199e8c6fbc5ac6de95d50181c0b6083d0b6f0ad/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4199e8c6fbc5ac6de95d50181c0b6083d0b6f0ad/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=4199e8c6fbc5ac6de95d50181c0b6083d0b6f0ad", "patch": "@@ -288,13 +288,13 @@ package body Sem_Attr is\n       --  Check that two attribute arguments are present\n \n       procedure Check_Enum_Image;\n-      --  If the prefix type is an enumeration type, set all its literals\n-      --  as referenced, since the image function could possibly end up\n-      --  referencing any of the literals indirectly. Same for Enum_Val.\n+      --  If the prefix type of 'Image is an enumeration type, set all its\n+      --  literals as referenced, since the image function could possibly end\n+      --  up referencing any of the literals indirectly. Same for Enum_Val.\n       --  Set the flag only if the reference is in the main code unit. Same\n       --  restriction when resolving 'Value; otherwise an improperly set\n-      --  reference when analyzing an inlined body will lose a proper warning\n-      --  on a useless with_clause.\n+      --  reference when analyzing an inlined body will lose a proper\n+      --  warning on a useless with_clause.\n \n       procedure Check_First_Last_Valid;\n       --  Perform all checks for First_Valid and Last_Valid attributes\n@@ -2455,7 +2455,7 @@ package body Sem_Attr is\n                      then\n                         Error_Msg_N\n                           (\"in a constraint the current instance can only\"\n-                             & \" be used with an access attribute\", N);\n+                           & \" be used with an access attribute\", N);\n                      end if;\n                   end if;\n                end;\n@@ -3378,6 +3378,31 @@ package body Sem_Attr is\n \n          Set_Etype (N, Standard_Boolean);\n \n+      ----------------\n+      -- Enum_Image --\n+      ----------------\n+\n+      when Attribute_Enum_Image => Enum_Image :\n+      begin\n+         Check_SPARK_05_Restriction_On_Attribute;\n+         Check_Scalar_Type;\n+         Set_Etype (N, Standard_String);\n+\n+         if not Is_Enumeration_Type (P_Type) then\n+            Error_Msg_Name_1 := Aname;\n+            Error_Msg_N\n+              (\"% attribute only allowed for enumerated types\", N);\n+         end if;\n+\n+         Check_E1;\n+         Resolve (E1, P_Base_Type);\n+\n+         if not Is_OK_Static_Expression (E1) then\n+            Error_Msg_Name_1 := Aname;\n+            Error_Msg_N (\"% attribute requires static argument\", E1);\n+         end if;\n+      end Enum_Image;\n+\n       --------------\n       -- Enum_Rep --\n       --------------\n@@ -7714,21 +7739,21 @@ package body Sem_Attr is\n \n       case Id is\n \n-         --  Attributes related to Ada 2012 iterators (placeholder ???)\n+      --  Attributes related to Ada 2012 iterators (placeholder ???)\n \n-         when Attribute_Constant_Indexing    |\n-              Attribute_Default_Iterator     |\n-              Attribute_Implicit_Dereference |\n-              Attribute_Iterator_Element     |\n-              Attribute_Iterable             |\n-              Attribute_Variable_Indexing    => null;\n+      when Attribute_Constant_Indexing    |\n+           Attribute_Default_Iterator     |\n+           Attribute_Implicit_Dereference |\n+           Attribute_Iterator_Element     |\n+           Attribute_Iterable             |\n+           Attribute_Variable_Indexing    => null;\n \n-         --  Internal attributes used to deal with Ada 2012 delayed aspects.\n-         --  These were already rejected by the parser. Thus they shouldn't\n-         --  appear here.\n+      --  Internal attributes used to deal with Ada 2012 delayed aspects.\n+      --  These were already rejected by the parser. Thus they shouldn't\n+      --  appear here.\n \n-         when Internal_Attribute_Id =>\n-            raise Program_Error;\n+      when Internal_Attribute_Id =>\n+         raise Program_Error;\n \n       --------------\n       -- Adjacent --\n@@ -7910,6 +7935,27 @@ package body Sem_Attr is\n \n          Fold_Uint (N, 4 * Mantissa, Static);\n \n+      ----------------\n+      -- Enum_Image --\n+      ----------------\n+\n+      --  Enum_Image is always static and always has a string literal result\n+\n+      when Attribute_Enum_Image =>\n+         declare\n+            Lit : constant Entity_Id := Entity (E1);\n+            Str : String_Id;\n+         begin\n+            Start_String;\n+            Get_Unqualified_Decoded_Name_String (Chars (Lit));\n+            Set_Casing (All_Upper_Case);\n+            Store_String_Chars (Name_Buffer (1 .. Name_Len));\n+            Str := End_String;\n+            Rewrite (N, Make_String_Literal (Loc, Strval => Str));\n+            Analyze_And_Resolve (N, Standard_String);\n+            Set_Is_Static_Expression (N, True);\n+         end;\n+\n       --------------\n       -- Enum_Rep --\n       --------------"}, {"sha": "73b1e366d7e16064a4c579f98f2305e590901f2b", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4199e8c6fbc5ac6de95d50181c0b6083d0b6f0ad/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4199e8c6fbc5ac6de95d50181c0b6083d0b6f0ad/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=4199e8c6fbc5ac6de95d50181c0b6083d0b6f0ad", "patch": "@@ -962,6 +962,7 @@ package Snames is\n    Name_Adjacent                       : constant Name_Id := N + $;\n    Name_Ceiling                        : constant Name_Id := N + $;\n    Name_Copy_Sign                      : constant Name_Id := N + $;\n+   Name_Enum_Image                     : constant Name_Id := N + $;\n    Name_Floor                          : constant Name_Id := N + $;\n    Name_Fraction                       : constant Name_Id := N + $;\n    Name_From_Any                       : constant Name_Id := N + $; -- GNAT\n@@ -1589,6 +1590,7 @@ package Snames is\n       Attribute_Adjacent,\n       Attribute_Ceiling,\n       Attribute_Copy_Sign,\n+      Attribute_Enum_Image,\n       Attribute_Floor,\n       Attribute_Fraction,\n       Attribute_From_Any,"}]}