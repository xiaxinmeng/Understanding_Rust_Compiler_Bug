{"sha": "d36591c2814ab4845f9b7b0cfcbc6090e1a644a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM2NTkxYzI4MTRhYjQ4NDVmOWI3YjBjZmNiYzYwOTBlMWE2NDRhMw==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2013-08-14T18:32:57Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2013-08-14T18:32:57Z"}, "message": "strlenopt-10.c [avr-*-*]: Reduce number of expected memcpy by one.\n\n\t* gcc.dg/strlenopt-10.c [avr-*-*]: Reduce number of expected\n\tmemcpy by one.\n\t* gcc.dg/strlenopt-11.c [avr-*-*]: Likewise.\n\tExpect l to be optimized away.\n\t* gcc.dg/strlenopt-13.c [avr-*-*]: Likewise.\n\nFrom-SVN: r201741", "tree": {"sha": "83a2e90821d3ada6c1b4f517a51d18ceac53bfca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83a2e90821d3ada6c1b4f517a51d18ceac53bfca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d36591c2814ab4845f9b7b0cfcbc6090e1a644a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d36591c2814ab4845f9b7b0cfcbc6090e1a644a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d36591c2814ab4845f9b7b0cfcbc6090e1a644a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d36591c2814ab4845f9b7b0cfcbc6090e1a644a3/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5b5563d12d8b256ce842ec8dbada09acd108f5e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b5563d12d8b256ce842ec8dbada09acd108f5e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b5563d12d8b256ce842ec8dbada09acd108f5e4"}], "stats": {"total": 41, "additions": 31, "deletions": 10}, "files": [{"sha": "171b65a4150393708efc25ddd82e6f397661a2dd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d36591c2814ab4845f9b7b0cfcbc6090e1a644a3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d36591c2814ab4845f9b7b0cfcbc6090e1a644a3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d36591c2814ab4845f9b7b0cfcbc6090e1a644a3", "patch": "@@ -54,6 +54,12 @@\n \n \t* gcc.dg/pr46647.c: xfail for avr-*-*.\n \n+\t* gcc.dg/strlenopt-10.c [avr-*-*]: Reduce number of expected\n+\tmemcpy by one.\n+\t* gcc.dg/strlenopt-11.c [avr-*-*]: Likewise.\n+\tExpect l to be optimized away.\n+\t* gcc.dg/strlenopt-13.c [avr-*-*]: Likewise.\n+\n 2013-08-14  Janis Johnson  <janisjo@codesourcery.com>\n \n \t* gcc.target/arm/pr19599.c: Skip for -mthumb."}, {"sha": "b044496352d3f2026d567ae163a071f9163f9a95", "filename": "gcc/testsuite/gcc.dg/strlenopt-10.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d36591c2814ab4845f9b7b0cfcbc6090e1a644a3/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d36591c2814ab4845f9b7b0cfcbc6090e1a644a3/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-10.c?ref=d36591c2814ab4845f9b7b0cfcbc6090e1a644a3", "patch": "@@ -70,7 +70,10 @@ main ()\n }\n \n /* { dg-final { scan-tree-dump-times \"strlen \\\\(\" 2 \"strlen\" } } */\n-/* { dg-final { scan-tree-dump-times \"memcpy \\\\(\" 8 \"strlen\" } } */\n+/* avr has BIGGEST_ALIGNMENT 8, allowing fold_builtin_memory_op\n+   to expand the memcpy call at the end of fn2.  */\n+/* { dg-final { scan-tree-dump-times \"memcpy \\\\(\" 8 \"strlen\" { target { ! avr-*-* } } } } */\n+/* { dg-final { scan-tree-dump-times \"memcpy \\\\(\" 7 \"strlen\" { target { avr-*-* } } } } */\n /* { dg-final { scan-tree-dump-times \"strcpy \\\\(\" 0 \"strlen\" } } */\n /* { dg-final { scan-tree-dump-times \"strcat \\\\(\" 0 \"strlen\" } } */\n /* { dg-final { scan-tree-dump-times \"strchr \\\\(\" 0 \"strlen\" } } */"}, {"sha": "0fb327ced021c180f7d5cb61746ff329b82ac86e", "filename": "gcc/testsuite/gcc.dg/strlenopt-11.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d36591c2814ab4845f9b7b0cfcbc6090e1a644a3/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d36591c2814ab4845f9b7b0cfcbc6090e1a644a3/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-11.c?ref=d36591c2814ab4845f9b7b0cfcbc6090e1a644a3", "patch": "@@ -59,12 +59,18 @@ main ()\n }\n \n /* { dg-final { scan-tree-dump-times \"strlen \\\\(\" 3 \"strlen\" } } */\n-/* { dg-final { scan-tree-dump-times \"memcpy \\\\(\" 7 \"strlen\" } } */\n+/* avr has BIGGEST_ALIGNMENT 8, allowing fold_builtin_memory_op\n+   to expand the memcpy call at the end of fn1.  */\n+/* { dg-final { scan-tree-dump-times \"memcpy \\\\(\" 7 \"strlen\" { target { ! avr-*-* } } } } */\n+/* { dg-final { scan-tree-dump-times \"memcpy \\\\(\" 6 \"strlen\" { target { avr-*-* } } } } */\n /* { dg-final { scan-tree-dump-times \"strcpy \\\\(\" 0 \"strlen\" } } */\n /* { dg-final { scan-tree-dump-times \"strcat \\\\(\" 0 \"strlen\" } } */\n /* { dg-final { scan-tree-dump-times \"strchr \\\\(\" 0 \"strlen\" } } */\n /* { dg-final { scan-tree-dump-times \"stpcpy \\\\(\" 0 \"strlen\" } } */\n-/* { dg-final { scan-tree-dump-times \"  _\\[0-9\\]* = strlen \\\\(\\[^\\n\\r\\]*;\\[\\n\\r\\]*  l.0. = \" 1 \"strlen\" } } */\n-/* { dg-final { scan-tree-dump-times \"  _\\[0-9\\]* = strlen \\\\(\\[^\\n\\r\\]*;\\[\\n\\r\\]*  l.6. = \" 1 \"strlen\" } } */\n-/* { dg-final { scan-tree-dump-times \"  _\\[0-9\\]* = strlen \\\\(\\[^\\n\\r\\]*;\\[\\n\\r\\]*  l.9. = \" 1 \"strlen\" } } */\n+/* Where the memcpy is expanded, the assignemts to elements of l are\n+   propagated.  */\n+/* { dg-final { scan-tree-dump-times \"  _\\[0-9\\]* = strlen \\\\(\\[^\\n\\r\\]*;\\[\\n\\r\\]*  l.0. = \" 1 \"strlen\" { target { ! avr-*-* } } } } */\n+/* { dg-final { scan-tree-dump-times \"  _\\[0-9\\]* = strlen \\\\(\\[^\\n\\r\\]*;\\[\\n\\r\\]*  l.6. = \" 1 \"strlen\" { target { ! avr-*-* } } } } */\n+/* { dg-final { scan-tree-dump-times \"  _\\[0-9\\]* = strlen \\\\(\\[^\\n\\r\\]*;\\[\\n\\r\\]*  l.9. = \" 1 \"strlen\" { target { ! avr-*-* } } } } */\n+/* { dg-final { scan-tree-dump-times \"  _\\[0-9\\]* = strlen \\\\(\\[^\\n\\r\\]*;\" 3 \"strlen\" { target { avr-*-* } } } } */\n /* { dg-final { cleanup-tree-dump \"strlen\" } } */"}, {"sha": "f9ab561110d929cbf6d76f4a51dd556df9bab8a8", "filename": "gcc/testsuite/gcc.dg/strlenopt-13.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d36591c2814ab4845f9b7b0cfcbc6090e1a644a3/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d36591c2814ab4845f9b7b0cfcbc6090e1a644a3/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fstrlenopt-13.c?ref=d36591c2814ab4845f9b7b0cfcbc6090e1a644a3", "patch": "@@ -56,13 +56,19 @@ main ()\n }\n \n /* { dg-final { scan-tree-dump-times \"strlen \\\\(\" 4 \"strlen\" } } */\n-/* { dg-final { scan-tree-dump-times \"memcpy \\\\(\" 7 \"strlen\" } } */\n+/* avr has BIGGEST_ALIGNMENT 8, allowing fold_builtin_memory_op\n+   to expand the memcpy call at the end of fn1.  */\n+/* { dg-final { scan-tree-dump-times \"memcpy \\\\(\" 7 \"strlen\" { target { ! avr-*-* } } } } */\n+/* { dg-final { scan-tree-dump-times \"memcpy \\\\(\" 6 \"strlen\" { target { avr-*-* } } } } */\n /* { dg-final { scan-tree-dump-times \"strcpy \\\\(\" 0 \"strlen\" } } */\n /* { dg-final { scan-tree-dump-times \"strcat \\\\(\" 0 \"strlen\" } } */\n /* { dg-final { scan-tree-dump-times \"strchr \\\\(\" 0 \"strlen\" } } */\n /* { dg-final { scan-tree-dump-times \"stpcpy \\\\(\" 0 \"strlen\" } } */\n-/* { dg-final { scan-tree-dump-times \"  _\\[0-9\\]* = strlen \\\\(\\[^\\n\\r\\]*;\\[\\n\\r\\]*  l.0. = \" 1 \"strlen\" } } */\n-/* { dg-final { scan-tree-dump-times \"  _\\[0-9\\]* = strlen \\\\(\\[^\\n\\r\\]*;\\[\\n\\r\\]*  l.1. = \" 1 \"strlen\" } } */\n-/* { dg-final { scan-tree-dump-times \"  _\\[0-9\\]* = strlen \\\\(\\[^\\n\\r\\]*;\\[\\n\\r\\]*  l.5. = \" 1 \"strlen\" } } */\n-/* { dg-final { scan-tree-dump-times \"  _\\[0-9\\]* = strlen \\\\(\\[^\\n\\r\\]*;\\[\\n\\r\\]*  l.6. = \" 1 \"strlen\" } } */\n+/* Where the memcpy is expanded, the assignemts to elements of l are\n+   propagated.  */\n+/* { dg-final { scan-tree-dump-times \"  _\\[0-9\\]* = strlen \\\\(\\[^\\n\\r\\]*;\\[\\n\\r\\]*  l.0. = \" 1 \"strlen\" { target { ! avr-*-* } } } } */\n+/* { dg-final { scan-tree-dump-times \"  _\\[0-9\\]* = strlen \\\\(\\[^\\n\\r\\]*;\\[\\n\\r\\]*  l.1. = \" 1 \"strlen\" { target { ! avr-*-* } } } } */\n+/* { dg-final { scan-tree-dump-times \"  _\\[0-9\\]* = strlen \\\\(\\[^\\n\\r\\]*;\\[\\n\\r\\]*  l.5. = \" 1 \"strlen\" { target { ! avr-*-* } } } } */\n+/* { dg-final { scan-tree-dump-times \"  _\\[0-9\\]* = strlen \\\\(\\[^\\n\\r\\]*;\\[\\n\\r\\]*  l.6. = \" 1 \"strlen\" { target { ! avr-*-* } } } } */\n+/* { dg-final { scan-tree-dump-times \"  _\\[0-9\\]* = strlen \\\\(\\[^\\n\\r\\]*;\" 4 \"strlen\" { target { avr-*-* } } } } */\n /* { dg-final { cleanup-tree-dump \"strlen\" } } */"}]}