{"sha": "b0f4807f9eaf796932e18525178bbd630bb5c8ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBmNDgwN2Y5ZWFmNzk2OTMyZTE4NTI1MTc4YmJkNjMwYmI1YzhlZA==", "commit": {"author": {"name": "Michael Matz", "email": "matz@suse.de", "date": "2007-11-16T13:46:57Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2007-11-16T13:46:57Z"}, "message": "* files.c (search_path_head): Fix check for absolute paths.\n\nFrom-SVN: r130229", "tree": {"sha": "e93b5bc6866b38236bebc566953efb5809d0d299", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e93b5bc6866b38236bebc566953efb5809d0d299"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0f4807f9eaf796932e18525178bbd630bb5c8ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0f4807f9eaf796932e18525178bbd630bb5c8ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0f4807f9eaf796932e18525178bbd630bb5c8ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0f4807f9eaf796932e18525178bbd630bb5c8ed/comments", "author": {"login": "susematz", "id": 4117296, "node_id": "MDQ6VXNlcjQxMTcyOTY=", "avatar_url": "https://avatars.githubusercontent.com/u/4117296?v=4", "gravatar_id": "", "url": "https://api.github.com/users/susematz", "html_url": "https://github.com/susematz", "followers_url": "https://api.github.com/users/susematz/followers", "following_url": "https://api.github.com/users/susematz/following{/other_user}", "gists_url": "https://api.github.com/users/susematz/gists{/gist_id}", "starred_url": "https://api.github.com/users/susematz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/susematz/subscriptions", "organizations_url": "https://api.github.com/users/susematz/orgs", "repos_url": "https://api.github.com/users/susematz/repos", "events_url": "https://api.github.com/users/susematz/events{/privacy}", "received_events_url": "https://api.github.com/users/susematz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "237b2f1b418a4394535f64c8fb600bc78fd00169", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/237b2f1b418a4394535f64c8fb600bc78fd00169", "html_url": "https://github.com/Rust-GCC/gccrs/commit/237b2f1b418a4394535f64c8fb600bc78fd00169"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "9333b8c6f38be9e16f618a42d657670937ca97a7", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0f4807f9eaf796932e18525178bbd630bb5c8ed/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0f4807f9eaf796932e18525178bbd630bb5c8ed/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=b0f4807f9eaf796932e18525178bbd630bb5c8ed", "patch": "@@ -1,3 +1,7 @@\n+2007-11-16  Michael Matz  <matz@suse.de>\n+\n+\t* files.c (search_path_head): Fix check for absolute paths.\n+\n 2007-11-05  Tom Tromey  <tromey@redhat.com>\n \n \t* include/line-map.h (LINEMAP_POSITION_FOR_COLUMN): Wrap in"}, {"sha": "ad7dad03afa245fa895f4f20df3feab54708aaeb", "filename": "libcpp/files.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0f4807f9eaf796932e18525178bbd630bb5c8ed/libcpp%2Ffiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0f4807f9eaf796932e18525178bbd630bb5c8ed/libcpp%2Ffiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Ffiles.c?ref=b0f4807f9eaf796932e18525178bbd630bb5c8ed", "patch": "@@ -837,7 +837,8 @@ search_path_head (cpp_reader *pfile, const char *fname, int angle_brackets,\n   /* For #include_next, skip in the search path past the dir in which\n      the current file was found, but if it was found via an absolute\n      path use the normal search logic.  */\n-  if (type == IT_INCLUDE_NEXT && file->dir)\n+  if (type == IT_INCLUDE_NEXT && file->dir\n+      && file->dir != &pfile->no_search_path)\n     dir = file->dir->next;\n   else if (angle_brackets)\n     dir = pfile->bracket_include;"}]}