{"sha": "f55cfa2e7ffb31f3afcd63d10308574bcc9cae4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjU1Y2ZhMmU3ZmZiMzFmM2FmY2Q2M2QxMDMwODU3NGJjYzljYWU0YQ==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2006-02-15T09:39:54Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-02-15T09:39:54Z"}, "message": "exp_pakd.ads: Fix typos in comments.\n\n2006-02-13  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_pakd.ads: Fix typos in comments.\n\n\t* exp_pakd.adb (Convert_To_PAT_Type): For the case of a bit packed\n\tarray reference that is an explicit dereference, mark the converted\n\t(packed) array reference as analyzed to prevent a forthcoming\n\treanalysis from resetting its type to the original (non-packed) array\n\ttype.\n\nFrom-SVN: r111068", "tree": {"sha": "5c6d9d3537674937bb0adee6d92aa7e9303ea3ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c6d9d3537674937bb0adee6d92aa7e9303ea3ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f55cfa2e7ffb31f3afcd63d10308574bcc9cae4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f55cfa2e7ffb31f3afcd63d10308574bcc9cae4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f55cfa2e7ffb31f3afcd63d10308574bcc9cae4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f55cfa2e7ffb31f3afcd63d10308574bcc9cae4a/comments", "author": null, "committer": null, "parents": [{"sha": "dad9a816687a38718a805df848ff87f8a6e8a3b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dad9a816687a38718a805df848ff87f8a6e8a3b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dad9a816687a38718a805df848ff87f8a6e8a3b8"}], "stats": {"total": 29, "additions": 15, "deletions": 14}, "files": [{"sha": "7c84a6d85f323ef3e84bd619540f9071123f6260", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f55cfa2e7ffb31f3afcd63d10308574bcc9cae4a/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f55cfa2e7ffb31f3afcd63d10308574bcc9cae4a/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=f55cfa2e7ffb31f3afcd63d10308574bcc9cae4a", "patch": "@@ -674,33 +674,34 @@ package body Exp_Pakd is\n \n    --  The PAT is always obtained from the actual subtype\n \n-   procedure Convert_To_PAT_Type (Aexp : Entity_Id) is\n+   procedure Convert_To_PAT_Type (Aexp : Node_Id) is\n       Act_ST : Entity_Id;\n \n    begin\n       Convert_To_Actual_Subtype (Aexp);\n       Act_ST := Underlying_Type (Etype (Aexp));\n       Create_Packed_Array_Type (Act_ST);\n \n-      --  Just replace the etype with the packed array type. This works\n+      --  Just replace the eEype with the packed array type. This works\n       --  because the expression will not be further analyzed, and Gigi\n       --  considers the two types equivalent in any case.\n \n-      --  This is not strictly the case ??? If the reference is an actual\n-      --  in a call, the expansion of the prefix is delayed, and must be\n-      --  reanalyzed, see Reset_Packed_Prefix. On the other hand, if the\n-      --  prefix is a simple array reference, reanalysis can produce spurious\n-      --  type errors when the PAT type is replaced again with the original\n-      --  type of the array. The following is correct and minimal, but the\n-      --  handling of more complex packed expressions in actuals is confused.\n-      --  It is likely that the problem only remains for actuals in calls.\n+      --  This is not strictly the case ??? If the reference is an actual in\n+      --  call, the expansion of the prefix is delayed, and must be reanalyzed,\n+      --  see Reset_Packed_Prefix. On the other hand, if the prefix is a simple\n+      --  array reference, reanalysis can produce spurious type errors when the\n+      --  PAT type is replaced again with the original type of the array. Same\n+      --  for the case of a dereference. The following is correct and minimal,\n+      --  but the handling of more complex packed expressions in actuals is\n+      --  confused. Probably the problem only remains for actuals in calls.\n \n       Set_Etype (Aexp, Packed_Array_Type (Act_ST));\n \n       if Is_Entity_Name (Aexp)\n         or else\n            (Nkind (Aexp) = N_Indexed_Component\n              and then Is_Entity_Name (Prefix (Aexp)))\n+        or else Nkind (Aexp) = N_Explicit_Dereference\n       then\n          Set_Analyzed (Aexp);\n       end if;\n@@ -2584,7 +2585,7 @@ package body Exp_Pakd is\n       Csiz := Component_Size (Atyp);\n \n       Convert_To_PAT_Type (Obj);\n-      PAT  := Etype (Obj);\n+      PAT := Etype (Obj);\n \n       Cmask := 2 ** Csiz - 1;\n "}, {"sha": "bd004599944cc942b48356bed249167002cacab0", "filename": "gcc/ada/exp_pakd.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f55cfa2e7ffb31f3afcd63d10308574bcc9cae4a/gcc%2Fada%2Fexp_pakd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f55cfa2e7ffb31f3afcd63d10308574bcc9cae4a/gcc%2Fada%2Fexp_pakd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.ads?ref=f55cfa2e7ffb31f3afcd63d10308574bcc9cae4a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -237,8 +237,8 @@ package Exp_Pakd is\n    procedure Expand_Packed_Element_Reference (N : Node_Id);\n    --  N is an N_Indexed_Component node whose prefix is a packed array. In\n    --  the bit packed case, this routine can only be used for the expression\n-   --  evaluation case not the assignment case, since the result is not a\n-   --  variable. See Expand_Bit_Packed_Element_Set for how he assignment case\n+   --  evaluation case, not the assignment case, since the result is not a\n+   --  variable. See Expand_Bit_Packed_Element_Set for how the assignment case\n    --  is handled in the bit packed case. For the enumeration case, the result\n    --  of this call is always a variable, so the call can be used for both the\n    --  expression evaluation and assignment cases."}]}