{"sha": "33c2474d7055ff84f60b57727b640cbaa7dd8caa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNjMjQ3NGQ3MDU1ZmY4NGY2MGI1NzcyN2I2NDBjYmFhN2RkOGNhYQ==", "commit": {"author": {"name": "Magnus Fromreide", "email": "magfr@lysator.liu.se", "date": "2010-06-05T04:52:18Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-06-05T04:52:18Z"}, "message": "cvt.c (cp_convert_to_pointer): Use null_ptr_cst_p.\n\n\t* cvt.c (cp_convert_to_pointer): Use null_ptr_cst_p.\n\t* typeck.c (build_ptrmemfunc): Likewise.\n\nFrom-SVN: r160309", "tree": {"sha": "a75627256e95c2e08ea8e6ff3a77847ccbf4c289", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a75627256e95c2e08ea8e6ff3a77847ccbf4c289"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33c2474d7055ff84f60b57727b640cbaa7dd8caa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33c2474d7055ff84f60b57727b640cbaa7dd8caa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33c2474d7055ff84f60b57727b640cbaa7dd8caa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33c2474d7055ff84f60b57727b640cbaa7dd8caa/comments", "author": {"login": "magfr", "id": 38747965, "node_id": "MDQ6VXNlcjM4NzQ3OTY1", "avatar_url": "https://avatars.githubusercontent.com/u/38747965?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magfr", "html_url": "https://github.com/magfr", "followers_url": "https://api.github.com/users/magfr/followers", "following_url": "https://api.github.com/users/magfr/following{/other_user}", "gists_url": "https://api.github.com/users/magfr/gists{/gist_id}", "starred_url": "https://api.github.com/users/magfr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magfr/subscriptions", "organizations_url": "https://api.github.com/users/magfr/orgs", "repos_url": "https://api.github.com/users/magfr/repos", "events_url": "https://api.github.com/users/magfr/events{/privacy}", "received_events_url": "https://api.github.com/users/magfr/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "247078ec4ddf45f168329c23187f480355b43f90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/247078ec4ddf45f168329c23187f480355b43f90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/247078ec4ddf45f168329c23187f480355b43f90"}], "stats": {"total": 136, "additions": 132, "deletions": 4}, "files": [{"sha": "9c4ad0ae569a9e69fdeb155d402ea6d51d38dd02", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=33c2474d7055ff84f60b57727b640cbaa7dd8caa", "patch": "@@ -1,3 +1,8 @@\n+2010-06-04  Magnus Fromreide  <magfr@lysator.liu.se>\n+\n+\t* cvt.c (cp_convert_to_pointer): Use null_ptr_cst_p.\n+\t* typeck.c (build_ptrmemfunc): Likewise.\n+\n 2010-06-04  Jason Merrill  <jason@redhat.com>\n \n \t* typeck2.c (merge_exception_specifiers): Adjust merging of"}, {"sha": "4aee15111ed9e7a1eb9e7a1a28ad35c47a05af04", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=33c2474d7055ff84f60b57727b640cbaa7dd8caa", "patch": "@@ -196,7 +196,7 @@ cp_convert_to_pointer (tree type, tree expr)\n       return error_mark_node;\n     }\n \n-  if (integer_zerop (expr))\n+  if (null_ptr_cst_p (expr))\n     {\n       if (TYPE_PTRMEMFUNC_P (type))\n \treturn build_ptrmemfunc (TYPE_PTRMEMFUNC_FN_TYPE (type), expr, 0,"}, {"sha": "53e84cf5a40544e74f6d334cbb69a919fc21a6e6", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=33c2474d7055ff84f60b57727b640cbaa7dd8caa", "patch": "@@ -7039,7 +7039,7 @@ build_ptrmemfunc (tree type, tree pfn, int force, bool c_cast_p)\n     }\n \n   /* Handle null pointer to member function conversions.  */\n-  if (integer_zerop (pfn))\n+  if (null_ptr_cst_p (pfn))\n     {\n       pfn = build_c_cast (input_location, type, integer_zero_node);\n       return build_ptrmemfunc1 (to_type,"}, {"sha": "accf2e37deeab9d2396d5848f0d7017a339d2e15", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=33c2474d7055ff84f60b57727b640cbaa7dd8caa", "patch": "@@ -1,3 +1,28 @@\n+2010-06-04  Magnus Fromreide  <magfr@lysator.liu.se>\n+\n+\t* g++.dg/cpp0x/nullptr01.C: Test nullptr_t variable.\n+\t* g++.dg/cpp0x/nullptr02.C: Test nullptr_t variable.\n+\t* g++.dg/cpp0x/nullptr03.C: Test nullptr_t variable.\n+\t* g++.dg/cpp0x/nullptr04.C: Test nullptr_t variable.\n+\t* g++.dg/cpp0x/nullptr05.C: Test nullptr_t variable.\n+\t* g++.dg/cpp0x/nullptr06.C: Test nullptr_t variable.\n+\t* g++.dg/cpp0x/nullptr07.C: Test nullptr_t variable.\n+\t* g++.dg/cpp0x/nullptr08.C: Test nullptr_t variable.\n+\t* g++.dg/cpp0x/nullptr09.C: Test nullptr_t variable.\n+\t* g++.dg/cpp0x/nullptr10.C: Test nullptr_t variable.\n+\t* g++.dg/cpp0x/nullptr11.C: Test nullptr_t variable.\n+\t* g++.dg/cpp0x/nullptr12.C: Test nullptr_t variable.\n+\t* g++.dg/cpp0x/nullptr13.C: Test nullptr_t variable.\n+\t* g++.dg/cpp0x/nullptr14.C: Test nullptr_t variable.\n+\t* g++.dg/cpp0x/nullptr15.C: Test nullptr_t variable.\n+\t* g++.dg/cpp0x/nullptr16.C: Test nullptr_t variable.\n+\t* g++.dg/cpp0x/nullptr17.C: Test nullptr_t variable.\n+\t* g++.dg/cpp0x/nullptr18.C: Test nullptr_t variable.\n+\t* g++.dg/cpp0x/nullptr19.C: Test nullptr_t variable.\n+\t* g++.dg/cpp0x/nullptr20.C: Test nullptr_t variable.\n+\t* g++.dg/cpp0x/nullptr21.C: Test nullptr_t variable.\n+\t* g++.dg/cpp0x/nullptr22.C: Test nullptr_t variable.\n+\n 2010-06-04  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/cpp0x/noexcept06.C: New."}, {"sha": "de3860c9ea417ac3dcfaa585bb59640d7c9f1da6", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr01.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr01.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr01.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr01.C?ref=33c2474d7055ff84f60b57727b640cbaa7dd8caa", "patch": "@@ -6,3 +6,5 @@\n char* const cp1 = nullptr;\n char* const cp2 = __null;\n char* const cp3 = 0;\n+decltype(nullptr) mynull = 0;\n+char* const cp4 = mynull;"}, {"sha": "80977cb2f00e41670a227731bddf77c50c97dd25", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr02.C", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr02.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr02.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr02.C?ref=33c2474d7055ff84f60b57727b640cbaa7dd8caa", "patch": "@@ -8,3 +8,9 @@ typedef decltype(nullptr) nullptr_t;\n const nullptr_t np1 = nullptr;\n const nullptr_t np2 = __null;\n const nullptr_t np3 = 0;\n+const nullptr_t np4 = np1;\n+const nullptr_t np5 = np2;\n+const nullptr_t np6 = np3;\n+const nullptr_t np7 = np4;\n+const nullptr_t np8 = np5;\n+const nullptr_t np9 = np6;"}, {"sha": "b6df89637407942895767a6c3f5cf05c8efe7a58", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr03.C", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr03.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr03.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr03.C?ref=33c2474d7055ff84f60b57727b640cbaa7dd8caa", "patch": "@@ -3,4 +3,7 @@\n \n // Test assignment to int\n \n-const int n = nullptr;     // { dg-error \"cannot convert \" }\n+const int n1 = nullptr;     // { dg-error \"cannot convert \" }\n+decltype(nullptr) mynull = 0;\n+const int n2 = mynull;      // { dg-error \"cannot convert \" }\n+"}, {"sha": "6e1d1256c5783e5505338ebcdef51b5eb3092d37", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr04.C", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr04.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr04.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr04.C?ref=33c2474d7055ff84f60b57727b640cbaa7dd8caa", "patch": "@@ -11,3 +11,9 @@ const int n4 = static_cast<const int>(nullptr); // { dg-error \"invalid static_ca\n const short int n5 = reinterpret_cast<short int>(nullptr); // { dg-error \"loses precision\" }\n const ssize_t n6 = reinterpret_cast<ssize_t>(nullptr);\n const ssize_t n7 = (ssize_t)nullptr;\n+\n+decltype(nullptr) mynull = 0;\n+const int n8 = static_cast<const int>(mynull); // { dg-error \"invalid static_cast \" }\n+const short int n9 = reinterpret_cast<short int>(mynull); // { dg-error \"loses precision\" }\n+const ssize_t n10 = reinterpret_cast<ssize_t>(mynull);\n+const ssize_t n11 = (ssize_t)mynull;"}, {"sha": "22a8b51c1c7d115e833c3f7b52b8f76715844958", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr05.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr05.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr05.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr05.C?ref=33c2474d7055ff84f60b57727b640cbaa7dd8caa", "patch": "@@ -10,3 +10,5 @@ typedef void (F::*pmf)();\n const pmf pmf1 = nullptr;\n const pmf pmf2 = __null;\n const pmf pmf3 = 0;\n+decltype(nullptr) mynull = 0;\n+const pmf pmf4 = mynull;"}, {"sha": "c50bb9bc1132ac1965a4ac819a261d1a02352517", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr06.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr06.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr06.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr06.C?ref=33c2474d7055ff84f60b57727b640cbaa7dd8caa", "patch": "@@ -10,4 +10,6 @@ char* const cp1 = nullptr;\n void fun()\n {\n   assert_true(cp1 == nullptr);\n+  decltype(nullptr) mynull = 0;\n+  assert_true(cp1 == mynull);\n }"}, {"sha": "64d442be33115e16c219699af8e453c9c10f37ab", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr07.C", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr07.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr07.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr07.C?ref=33c2474d7055ff84f60b57727b640cbaa7dd8caa", "patch": "@@ -9,4 +9,7 @@ void fun()\n   if( n == nullptr ); // { dg-error \"invalid operands of types \" }\n   const int m = 1;\n   if( m == nullptr ); // { dg-error \"invalid operands of types \" }\n+  decltype(nullptr) mynull = 0;\n+  if( n == mynull ); // { dg-error \"invalid operands of types \" }\n+  if( m == mynull ); // { dg-error \"invalid operands of types \" }\n }"}, {"sha": "1e5db278ddf879da5bc7223f7c47fa3d083fc931", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr08.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr08.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr08.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr08.C?ref=33c2474d7055ff84f60b57727b640cbaa7dd8caa", "patch": "@@ -8,4 +8,6 @@\n void fun()\n {\n   assert_true(nullptr ? false : true);\n+  decltype(nullptr) mynull = 0;\n+  assert_true(mynull ? false : true);\n }"}, {"sha": "b35a3c3207d1f311c09e8a01435b3fc0e817e5d1", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr09.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr09.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr09.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr09.C?ref=33c2474d7055ff84f60b57727b640cbaa7dd8caa", "patch": "@@ -6,4 +6,6 @@\n void fun()\n {\n   if( nullptr == 0 );\n+  decltype(nullptr) mynull = 0;\n+  if( mynull == 0 );\n }"}, {"sha": "fa32267ec028b563c937316da5258ef24a4b8673", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr10.C", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr10.C?ref=33c2474d7055ff84f60b57727b640cbaa7dd8caa", "patch": "@@ -7,4 +7,8 @@ void fun()\n {\n   nullptr = 0;         // { dg-error \"lvalue required as left operand\" }\n   nullptr + 2;         // { dg-error \"invalid operands of types \" }\n+  decltype(nullptr) mynull = 0;\n+  mynull = 1;          // { dg-error \"cannot convert\" }\n+  mynull = 0;\n+  mynull + 2;          // { dg-error \"invalid operands of types \" }\n }"}, {"sha": "5907816a847d51d8e13f67d845cb69b45c0dd834", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr11.C", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr11.C?ref=33c2474d7055ff84f60b57727b640cbaa7dd8caa", "patch": "@@ -14,4 +14,27 @@ void fun()\n   assert_false(nullptr > nullptr);\n   assert_true(nullptr <= nullptr);\n   assert_true(nullptr >= nullptr);\n+\n+  decltype(nullptr) mynull = 0;\n+\n+  assert_true(mynull == nullptr);\n+  assert_false(mynull != nullptr);\n+  assert_false(mynull < nullptr);\n+  assert_false(mynull > nullptr);\n+  assert_true(mynull <= nullptr);\n+  assert_true(mynull >= nullptr);\n+\n+  assert_true(nullptr == mynull);\n+  assert_false(nullptr != mynull);\n+  assert_false(nullptr < mynull);\n+  assert_false(nullptr > mynull);\n+  assert_true(nullptr <= mynull);\n+  assert_true(nullptr >= mynull);\n+\n+  assert_true(mynull == mynull);\n+  assert_false(mynull != mynull);\n+  assert_false(mynull < mynull);\n+  assert_false(mynull > mynull);\n+  assert_true(mynull <= mynull);\n+  assert_true(mynull >= mynull);\n }"}, {"sha": "1713259f103626a89a55dfae773475bce4a686d7", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr12.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr12.C?ref=33c2474d7055ff84f60b57727b640cbaa7dd8caa", "patch": "@@ -4,3 +4,5 @@\n // Test sizeof\n \n static_assert(sizeof(nullptr) == sizeof(void*), \"sizeof(nullptr) is wrong\");\n+const decltype(nullptr) mynull = 0;\n+static_assert(sizeof(mynull) == sizeof(void*), \"sizeof(nullptr) is wrong\");"}, {"sha": "a9377584c56a2b3916b9e21cee919221056e0276", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr13.C", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr13.C?ref=33c2474d7055ff84f60b57727b640cbaa7dd8caa", "patch": "@@ -5,7 +5,12 @@\n \n #include <typeinfo>\n \n+#define assert_true(b) do { char c[2 * bool(b) - 1]; } while(0)\n+\n void fun()\n {\n   typeid(nullptr);\n+  const decltype(nullptr) mynull = 0;\n+  typeid(mynull);\n+  assert_true(typeid(nullptr) == typeid(mynull));\n }"}, {"sha": "4c4627b541b0a0ddc660ddba42ba72d2ae043ae5", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr14.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr14.C?ref=33c2474d7055ff84f60b57727b640cbaa7dd8caa", "patch": "@@ -20,4 +20,6 @@ void test_f()\n   //\n   type_equal<char*>(f(nullptr));\n   type_equal<int>(f(0));\n+  decltype(nullptr) mynull = 0;\n+  type_equal<char*>(f(mynull));\n }"}, {"sha": "67d9d4a23117fa1e159deca4c673d00c9374820a", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr15.C", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr15.C?ref=33c2474d7055ff84f60b57727b640cbaa7dd8caa", "patch": "@@ -18,4 +18,7 @@ void test_g()\n   //\n   g(nullptr);               // { dg-error \"no matching function for call to \" }\n   type_equal<float*>(g((float*)nullptr));\n+  decltype(nullptr) mynull = 0;\n+  g(mynull);                // { dg-error \"no matching function for call to \" }\n+  type_equal<float*>(g((float*)mynull));\n }"}, {"sha": "0ec0b6a12b6fe02539ae80f46ecd11c7abae5089", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr16.C", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr16.C?ref=33c2474d7055ff84f60b57727b640cbaa7dd8caa", "patch": "@@ -19,4 +19,7 @@ void test_h()\n   type_equal<int>(h(0));\n   type_equal<nullptr_t>(h(nullptr));\n   type_equal<float*>(h((float*)nullptr));\n+  nullptr_t mynull = 0;\n+  type_equal<nullptr_t>(h(mynull));\n+  type_equal<float*>(h((float*)mynull));\n }"}, {"sha": "2e580557bc3a3c8f0c52a29a58bc7522fcf4eefd", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr17.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr17.C?ref=33c2474d7055ff84f60b57727b640cbaa7dd8caa", "patch": "@@ -18,4 +18,6 @@ void test_i()\n {\n   // Overload to bool, not int\n   type_equal<bool>(i(nullptr));\n+  decltype(nullptr) mynull = 0;\n+  type_equal<bool>(i(mynull));\n }"}, {"sha": "b8fa38c718d355df7e971c19f6bc55a3ab17ac14", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr18.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr18.C?ref=33c2474d7055ff84f60b57727b640cbaa7dd8caa", "patch": "@@ -16,4 +16,6 @@ bool j(  bool );\n void test_j()\n {\n   type_equal<char*>(j(nullptr));\n+  decltype(nullptr) mynull = 0;\n+  type_equal<char*>(j(mynull));\n }"}, {"sha": "3e58406770dafc9d8881eca9893726b48ebffafa", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr20.C", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr20.C?ref=33c2474d7055ff84f60b57727b640cbaa7dd8caa", "patch": "@@ -10,8 +10,11 @@ int main()\n {\n   char buf1[64];\n   char buf2[64];\n+  char buf3[64];\n \n   std::sprintf(buf1, \"%p\", (void*)0);\n   std::sprintf(buf2, \"%p\", nullptr);\n-  return std::strcmp(buf1, buf2) != 0;\n+  decltype(nullptr) mynull = 0;\n+  std::sprintf(buf3, \"%p\", nullptr);\n+  return std::strcmp(buf1, buf2) != 0 || std::strcmp(buf1, buf3) != 0;\n }"}, {"sha": "c30cb3c8b6de0880e5274d399e63f4960cdc32f8", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr21.C", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr21.C?ref=33c2474d7055ff84f60b57727b640cbaa7dd8caa", "patch": "@@ -24,4 +24,21 @@ int main()\n   } catch (...) {\n     printf(\"Test 1 Fail\");\n   }  // { dg-output \"Test 1 OK\" }\n+\n+  nullptr_t mynull = 0;\n+  try {\n+    throw mynull;\n+  } catch (void*) {\n+    printf(\"Test 2 Fail\");\n+  } catch (bool) {\n+    printf(\"Test 2 Fail\");\n+  } catch (int) {\n+    printf(\"Test 2 Fail\");\n+  } catch (long int) {\n+    printf(\"Test 2 Fail\");\n+  } catch (nullptr_t) {\n+    printf(\"Test 2 OK\");\n+  } catch (...) {\n+    printf(\"Test 2 Fail\");\n+  }  // { dg-output \"Test 2 OK\" }\n }"}, {"sha": "d800f9869d2eb1699d67d2e0dad9b86df7ef9e83", "filename": "gcc/testsuite/g++.dg/cpp0x/nullptr22.C", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33c2474d7055ff84f60b57727b640cbaa7dd8caa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnullptr22.C?ref=33c2474d7055ff84f60b57727b640cbaa7dd8caa", "patch": "@@ -13,4 +13,8 @@ void f()\n   f2(nullptr); // { dg-warning \"null argument where non-null required \" }\n   f3(\"x\", \"y\", __null); // { dg-warning \"missing sentinel in function call\" }\n   f3(\"x\", \"y\", nullptr);\n+  decltype(nullptr) mynull = 0;\n+  f1(\"%p\", mynull);\n+  f2(mynull); // { dg-warning \"null argument where non-null required \" }\n+  f3(\"x\", \"y\", mynull);\n }"}]}