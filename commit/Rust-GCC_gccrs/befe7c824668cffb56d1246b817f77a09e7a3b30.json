{"sha": "befe7c824668cffb56d1246b817f77a09e7a3b30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVmZTdjODI0NjY4Y2ZmYjU2ZDEyNDZiODE3Zjc3YTA5ZTdhM2IzMA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2005-05-24T23:20:39Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2005-05-24T23:20:39Z"}, "message": "Move entries for 1998 and 1999 out of ChangeLog-2000 and into new\nfiles ChangeLog-1998 and ChangeLog-1999.\n\nThis change does not itself get a ChangeLog entry.\n\nFrom-SVN: r100129", "tree": {"sha": "492daada59c091e960fff5607dd26c79bd868f51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/492daada59c091e960fff5607dd26c79bd868f51"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/befe7c824668cffb56d1246b817f77a09e7a3b30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/befe7c824668cffb56d1246b817f77a09e7a3b30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/befe7c824668cffb56d1246b817f77a09e7a3b30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/befe7c824668cffb56d1246b817f77a09e7a3b30/comments", "author": null, "committer": null, "parents": [{"sha": "d7974fe65b97cd426144eab8205e4151229f7e35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7974fe65b97cd426144eab8205e4151229f7e35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7974fe65b97cd426144eab8205e4151229f7e35"}], "stats": {"total": 8973, "additions": 4487, "deletions": 4486}, "files": [{"sha": "2549db48483854dfe643f3742294778ede5a5075", "filename": "libstdc++-v3/ChangeLog-1998", "status": "added", "additions": 942, "deletions": 0, "changes": 942, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/befe7c824668cffb56d1246b817f77a09e7a3b30/libstdc%2B%2B-v3%2FChangeLog-1998", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/befe7c824668cffb56d1246b817f77a09e7a3b30/libstdc%2B%2B-v3%2FChangeLog-1998", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-1998?ref=befe7c824668cffb56d1246b817f77a09e7a3b30", "patch": "@@ -0,0 +1,942 @@\n+1998-12-31  Benjamin Kosnik  <bkoz@lunatic.cygnus.com>\n+\n+\t* bits/fstream.tcc: Add fstream ctor for cin/cout/etc.\n+\t* bits/std_fstream.h: Ditto.\n+\t* src/stdstreams.cc: Ditto.\n+\n+\t* math/cpowl.c: Fix header typo with last change.\n+\n+1998-12-31  Benjamin Kosnik  <bkoz@loony.cygnus.com>\n+\n+\t* COPYING: New file (GPL v 2).\n+\t* LICENSE.STD: Remove.\n+\t* ./*: Change license.\n+\n+1998-12-30  Benjamin Kosnik  <bkoz@haight.constant.com>\n+\n+\t* bits/std_streambuf.h (std): Remove static on _M_init.\n+\t* bits/streambuf.tcc (std): Ditto.\n+\n+\t* bits/std_fstream.h: Add changes as discussed with Nathan, including\n+\tstate_type and codecvt_type members, the allocation of an internal\n+\tbuffer, the streamlined codecvt calls, etc.\n+\n+1998-12-21  Benjamin Kosnik  <bkoz@haight.constant.com>\n+\n+\t* bits/std_sstream.h: Tweak.\n+\t* bits/fstream.tcc: Remove unused stubs.\n+\t* bits/std_fstream.h: Tweak.\n+\n+1998-12-17  Benjamin Kosnik  <bkoz@tintin.cygnus.com>\n+\n+\t* bits/std_streambuf.h: Move _IO_file_flags into basic_filebuf.\n+\tRemove unused _IO_* members, possibly put into filebuf, which may\n+\tneed them.\n+\t* bits/std_fstream.h: Add _M_flag.\n+\t* bits/sbuf_iter.h: Tweak.\n+\n+\t* bits/std_cstdio.h: Add SEEK_SET, SEEK_END, SEEK_CUR.\n+\t* bits/ios_base.h: Use.\n+\n+\t* src/stdstreams.cc: Modify to reflect standard ctors for\n+\tfilebuf.\n+\t* src/misc-inst.cc: Ditto.\n+\n+\t* bits/os_raw.h: Wrap in std namespace. Model parameters on\n+\tunderlying C library calls instead of the underlying unix\n+\tfilesystem.\n+\t* src/os_raw.cc (_S_os_open): Use fopen, and compute a mode\n+\tstring as per p.659.\n+\t(_S_os_close): Model on fopen.\n+\t(_S_os_read): Model on fread.\n+\t(_S_os_write): Model on fwrite.\n+\t(_S_os_seek): Model on fseek.\n+\n+\t* bits/ios_base.h: Tweak.\n+\t* bits/std_iosfwd.h: Wrap libio.h include with extern \"C\".\n+\t* bits/std_sstream.h: Tweak.\n+\t* bits/sstream.tcc: Remove old, uncalled code.\n+\t* bits/std_fstream.h: Major reconstruction.\n+\t* bits/fstream.tcc: Disable for the time being.\n+\n+1998-12-11  Benjamin Kosnik  <bkoz@haight.constant.com>\n+\n+\t* bits/basic_string.h: Fix insert method.\n+\t* stl/bits/stl_iterator.h: Remove previous hack.\n+\t* bits/std_streambuf.h (sbumpc): Correct increment/return oddness.\n+\t* bits/std_sstream.h: Fix more regressions.\n+\t* testsuite/27/27stringbuf.C: Add (almost) complete tests.\n+\n+1998-12-09 Benjamin Kosnik  <bkoz@loony.cygnus.com>\n+\n+\t* bits/basic_string.h: Tweak.\n+\n+\t* stl/bits/stl_iterator.h: Specialize iterator_traits for int so\n+\tthat string::append can be instantiated. HACK--checkin\n+\tbasic_string::iterator class.\n+\n+1998-12-07  Benjamin Kosnik  <bkoz@haight.constant.com>\n+\n+\t* bits/std_sstream.h: Tweak.\n+\t* bits/sstream.tcc: Tweak ctors.\n+\n+\tFIXME invalid friend defs. . WHERE ARE THEY??\n+\n+\t* bits/sbuf_iter.h (istreambuf_iterator::equal): Change to new\n+\tnames for basic_streambuf data members.\n+\n+\t* bits/std_streambuf.h: Add getloc() initialization bits.\n+\tbasic_streambuf(): Initialize with global locale data.\n+\timbue(): Set _M_init.\n+\n+\t* bits/std_streambuf.h(seekoff, seekpos): Complete with invalid\n+\tstream pos == pos_type(off_type(-1)).\n+\tin_avail(): Complete default implementation.\n+\tsnextc, sbumpc, sputbackc, sungetc, sputc, setg, xsputn,\n+\tunderflow, uflow, xsgetn, showmany, sync: Ditto.\n+\n+\t* bits/std_streambuf.h: _M_snextc_helper(): Remove.\n+\n+\t* bits/streambuf.tcc (sputbackc): Temporarily remove, need to\n+\tre-populate with in-line member functions that are too big.  Add\n+\tinitialization for _M_init.\n+\n+1998-12-03  Benjamin Kosnik  <bkoz@cygnus.com>\n+\n+\t* bits/sstream.tcc: Convert _Allocator to _Alloc.  Add typedefs\n+\tfor basic_string and basic_streambuf. Scope _IO_buf_* pointers to\n+\tstreambuf_type.\n+\n+\t* src/stdstreams.cc (std): Disable wchar_t instantiations.\n+\n+\t* bits/c++config.h (_G_DEPRICATED): Add.\n+\t(_G_USE_WCHAR_T): Add.\n+\t* bits/std_streambuf.h: Radical reconstruction of basic_streambuf.\n+\tTake out _Streambuf_base. Put _IO_FILE data member in basic_filebuf.\n+\t* bits/streambuf.tcc (sputbackc): Remove ctor anti-def, Tweak.\n+\t* bits/std_fstream.h: Add comment for implementation.\n+\t* src/streambuf.cc: Remove.\n+\t* src/Makefile.in: Remove streambuf.lo.\n+\t* src/misc-inst.cc: Tweak.\n+\n+1998-12-02  Benjamin Kosnik  <bkoz@cygnus.com>\n+\n+\t* bits/std_sstream.h: Add const_cast to rdbuf returns.\n+\t* testsuite/27stringstream.C: Modify.\n+\n+1998-11-25  Benjamin Kosnik  <bkoz@haight.constant.com>\n+\n+\t* src/Makefile.in (libstdc___la_OBJECTS): Add streambuf.lo.\n+\t(libstdc___la_SOURCES): Ditto.\n+\n+\t* bits/streambuf.tcc: Tweak.\n+\n+\t* src/streambuf.cc: New file, add out-of-line definitions for\n+\t_Streambuf_base.\n+\n+\t* src/misc-inst.cc: Remove _Streambuf_base instantiations.\n+\tComment out wchar_t versions of the buffer instantiations, for now.\n+\n+\t* bits/std_streambuf.h: Wrap libio.h include with extern \"C\".\n+\tRemove template wrapper around _Streambuf_base.\n+\tMove IO_* data members into _Streambuf_base.\n+\tMove _Streambuf_base members into streambuf.tcc.\n+\n+\t* bits/c++config.h (_G_USE_LIBIO): Enable.\n+\n+1998-11-02  Nathan Myers <ncm@cantrip.org>\n+\n+\t* CHECKLIST: downgrade iterator implementations\n+\t* DESIGN: fill out notes about unimplemented features\n+\n+1998-10-31  Nathan Myers <ncm@cantrip.org>\n+\n+\t* CHECKLIST: itemized list of all interfaces, and status of each.\n+\n+1998-10-30  Nathan Myers  <ncm@cantrip.org>\n+\n+\t* RELEASE-NOTES: add notes about optional includes, linking, running\n+\t* src/Makefile.am: handle header installs properly\n+\t* src/Makefile.in: regenerate from new src/Makefile.am\n+\n+1998-10-30  Benjamin Kosnik  <bkoz@loony.cygnus.com>\n+\n+\t* bits/basic_string.h: Revert npos pending ciso646.\n+\t* src/Makefile.am: Revert CXX flags for now.\n+\t* src/Makefile.in: Ditto.\n+\n+1998-10-30  Brendan Kehoe  <brendan@cygnus.com>\n+\n+\t* bits/std_sstream.h: Re-order ctors to put base before member\n+\tinits.\n+\n+1998-10-30  Ryszard Kabatek  <kabatek@chemie.uni-halle.de>\n+\n+\t* stl/bits/std_memory.h: Fix typo.\n+\n+1998-10-30  Nathan Myers <ncm@cantrip.org>\n+\n+\t* src/string[A-Z]+.cc: change back to include \"string.cc\".\n+\t* src/Makefile.am: revert filename changes.  We need a different\n+\tway to keep filenames in std/ from confusing Make.\n+\t* bits/basic_string.h: define _S_max_size right, return it from\n+\tstring::max_size(); churn definition of npos again.\n+\t* bits/string.tcc: fix _S_frob_size to avoid uint overflow.\n+\t* bits/ios.cc: remove #ifdef on ios_base locale member initialization\n+\t* BUGS: clear cruft.\n+\t* C++STYLE: Touchup for release.\n+\t* CHECKLIST: Touchup for release.\n+\t* DESIGN: New file.\n+\t* LICENSE.STD: Add requirement to retain copyrights and to provide\n+\tthe license with any copies.\n+\t* README: Update for release.\n+\t* TODO: Minor touchup for release.\n+\t* RELEASE-NOTES: prepare for release\n+\n+1998-10-29  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* src/string[A-Z]+.cc: Include stdstring.cc, not string.cc.\n+\n+\t* src/Makefile.am (CXXFLAGS): Define _GNU_SOURCE.\n+\n+\t* src/Makefile.am (CXXLINK): New variable.  Make sure we don't use\n+\tCXX to generate the shared object.\n+\n+\t* src/Makefile.am (headers): Remove duplicated char_traits.h.\n+\n+1998-10-29  Brendan Kehoe  <brendan@cygnus.com>\n+\n+\t* bits/basic_string.h (basic_string<>::max_size): Subtract 1, not\n+\t2, from npos, solving infinite loop problems.\n+\n+1998-10-29 18:41  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* src/Makefile.am: Add rules to install headers.\n+\n+1998-10-29  Nathan Myers <ncm@cantrip.org>\n+\n+\t* bits/std_ostream.h: Remove #ifdef on operator<< for long double\n+\t* bits/ostream.tcc:   Remove #ifdef on operator<< for long double\n+\t* shadow/libio.h:\n+\t* shadow/unistd.h:\n+\t* shadow/bits/wrap_libio.h:\n+\t* shadow/bits/wrap_unistd.h: New files.\n+\n+1998-10-29  Brendan Kehoe  <brendan@cygnus.com>\n+\n+\t* bits/ostream.tcc (operator<<): Wrap with #ifdef\n+\t_G_HAVE_LONG_DOUBLE_IO, to match bits/std_ostream.h.\n+\n+1998-10-29  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* src/Makefile.am: Add temporarily rules to make sure misc-inst.cc\n+\tis not compiled with -fno-implicit-templates in effect.\n+\n+\t* src/Makefile.am (EXTRA_SOURCES): Add string.cc and wstring.cc here.\n+\t(libstdc___la_SOURCES): Add all the string*.cc and wstring*.cc files.\n+\t* src/stringADDCS.cc: Wrapper around string.cc to define individual\n+\tfunction.\n+\t* src/stringADDPS.cc: Likewise.\n+\t* src/stringADDSC.cc: Likewise.\n+\t* src/stringADDSP.cc: Likewise.\n+\t* src/stringADDSS.cc: Likewise.\n+\t* src/stringBIST.cc: Likewise.\n+\t* src/stringBOST.cc: Likewise.\n+\t* src/stringCHTR.cc: Likewise.\n+\t* src/stringEQPS.cc: Likewise.\n+\t* src/stringEQSP.cc: Likewise.\n+\t* src/stringEQSS.cc: Likewise.\n+\t* src/stringEXTRA.cc: Likewise.\n+\t* src/stringGEPS.cc: Likewise.\n+\t* src/stringGESP.cc: Likewise.\n+\t* src/stringGESS.cc: Likewise.\n+\t* src/stringGETLI.cc: Likewise.\n+\t* src/stringGTPS.cc: Likewise.\n+\t* src/stringGTSP.cc: Likewise.\n+\t* src/stringGTSS.cc: Likewise.\n+\t* src/stringINSER.cc: Likewise.\n+\t* src/stringLEPS.cc: Likewise.\n+\t* src/stringLESP.cc: Likewise.\n+\t* src/stringLESS.cc: Likewise.\n+\t* src/stringLTPS.cc: Likewise.\n+\t* src/stringLTSP.cc: Likewise.\n+\t* src/stringLTSS.cc: Likewise.\n+\t* src/stringMAIN.cc: Likewise.\n+\t* src/stringNEPS.cc: Likewise.\n+\t* src/stringNESP.cc: Likewise.\n+\t* src/stringNESS.cc: Likewise.\n+\t* src/stringSCOPY.cc: Likewise.\n+\t* src/wstringADDCS.cc: Wrapper around wstring.cc to define individual\n+\tfunctions.\n+\t* src/wstringADDPS.cc: Likewise.\n+\t* src/wstringADDSC.cc: Likewise.\n+\t* src/wstringADDSP.cc: Likewise.\n+\t* src/wstringADDSS.cc: Likewise.\n+\t* src/wstringBIST.cc: Likewise.\n+\t* src/wstringBOST.cc: Likewise.\n+\t* src/wstringCHTR.cc: Likewise.\n+\t* src/wstringEQPS.cc: Likewise.\n+\t* src/wstringEQSP.cc: Likewise.\n+\t* src/wstringEQSS.cc: Likewise.\n+\t* src/wstringEXTRA.cc: Likewise.\n+\t* src/wstringGEPS.cc: Likewise.\n+\t* src/wstringGESP.cc: Likewise.\n+\t* src/wstringGESS.cc: Likewise.\n+\t* src/wstringGETLI.cc: Likewise.\n+\t* src/wstringGTPS.cc: Likewise.\n+\t* src/wstringGTSP.cc: Likewise.\n+\t* src/wstringGTSS.cc: Likewise.\n+\t* src/wstringINSER.cc: Likewise.\n+\t* src/wstringLEPS.cc: Likewise.\n+\t* src/wstringLESP.cc: Likewise.\n+\t* src/wstringLESS.cc: Likewise.\n+\t* src/wstringLTPS.cc: Likewise.\n+\t* src/wstringLTSP.cc: Likewise.\n+\t* src/wstringLTSS.cc: Likewise.\n+\t* src/wstringMAIN.cc: Likewise.\n+\t* src/wstringNEPS.cc: Likewise.\n+\t* src/wstringNESP.cc: Likewise.\n+\t* src/wstringNESS.cc: Likewise.\n+\t* src/wstringSCOPY.cc: Likewise.\n+\t* src/string.cc: Remove now unneeded #defines now.\n+\n+1998-10-29 Nathan Myers <ncm@cantrip.org>\n+\n+\t* bits/locfacets.tcc: Define num_put::put(... const void*), improve\n+\tinteger formatting.\n+\t* bits/ostream.tcc: Delete cruft, rewrite various op<< as members,\n+\tadd definitions for double, long double, const void*.\n+\t* bits/std_ostream.h: Move op<<'s back into class ostream,\n+\tdefine some in-line.\n+\t* bits/string.tcc: fix unnecessary-copying bug in op[], typos in\n+\tstring construction from input iterators that Brendan reported.\n+\n+\n+1998-10-28  Brendan Kehoe  <brendan@cygnus.com>\n+\n+\t* stl/bits/stl_pair.h (op!=, op>, p<=, op>=): Add missing definitions.\n+\n+\t* bits/valarray_meta.h (class _Constant): Move declaration to the\n+\ttop, so the rest of the file can grok it.\n+\t(_ApplyBinaryFunction::operator[]): Add missing parenthesis.\n+\n+\t* bits/std_sstream.h (basic_ostringstream::str): Fix typo of extra\n+\tsemicolon.\n+\t(basic_stringstream::str, both instances): Likewise.\n+\n+1998-10-28 Nathan Myers <ncm@cantrip.org>\n+\n+\t* bits/locfacets.h: fix num_put<>::falsename()\n+\t* bits/locfacets.tcc: fix _Format_cache<>::_M_populate bool name init\n+\t* testsuite/27/27octfmt.C, testsuite/27/27octfmt.C: new tests\n+\t* bits/locfacets.tcc: touch up _S_group_digits.\n+\t* src/misc-inst.cc: adjust _S_group_digits insts to match.\n+\n+1998-10-27 Nathan Myers <ncm@cantrip.org>\n+\n+\t* stl/bits/stl_config.h: Turn off long long support, for now.\n+\t* src/locale-inst.cc: Instantiate num_put<> only for\n+\tostreambuf_iterator, num_get only for istreambuf_iterator.\n+\t* src/misc-inst.cc: Delete duplicate locale-related instantiations,\n+\tadd lots of new instantiations for num_put support function templates;\n+\tremove junk about __match_parallel for ostreambuf_iterator.\n+\n+1998-10-27 Nathan Myers <ncm@cantrip.org>\n+\n+\t* bits/locfacets.tcc: Make num_put's digit grouping work.\n+\t* bits/string.tcc: More uglification.\n+\t* src/ios.cc: initialize format cache right\n+\n+1998-10-26 Nathan Myers <ncm@cantrip.org>\n+\n+\t* bits/basic_string.h: Uglify more names.\n+\t* bits/fstream.tcc: Rewrite some filebut output handling.\n+\t* bits/ios_base.h: Cosmetic.\n+\t* bits/locfacets.h: Changes to _Format_cache for support of num_put.\n+\tAlso, specialize its default ctor for optimal default case.\n+\t#ifdef out \"long long\" prototypes for now.\n+\t* bits/locfacets.tcc: Do complete, optimized num_put<>::do_put\n+\timplementation for integer types.  (Still needs optimized\n+\tstd::copy() applied to ostreambuf_iterator to be optimal.)\n+\t* bits/ostream.tcc: Write operator<< for long, bool types.\n+\tMake other operators<< non-members, per spec.  (Many still\n+\tnot implemented.)  Identify those that fail to create a sentry.\n+\t* bits/sbuf_iter: Cosmetic.\n+\t* bits/std_fstream.h: Add some filebuf members.\n+\t* bits/std_locale.h: Include <limits> for use in bits/locfacets.h\n+\t* bits/std_ostream.h: Make member operators<< global, per spec.\n+\t(Should do the same in std_istream.h.)\n+\t* bits/std_string.h: Include <limits> for use in bits/locfacets.h\n+\t* bits/string.tcc: Uglify names\n+\t* shadow/bits/std_cstdlib.h: Optimize std::div and std::ldiv.\n+\t* src/ios.cc: Specialize _Format_cache<> for char and wchar_t,\n+\tfor optimal default behavior.\n+\n+1998-10-26  Benjamin Kosnik  <bkoz@loony.cygnus.com>\n+\n+\t* src/Makefile.in (libstdc___la_SOURCES): Add misc-inst.cc again.\n+\n+1998-10-21 Nathan Myers <ncm@cantrip.org>\n+\n+\t* src/locale.cc: make ctype operations actually work for glibc\n+\t* CHECKLIST: add a comprehensive (i.e. huge) implementation\n+\tchecklist of stdlib facilities.  Not filled in yet.\n+\n+1998-10-20 Nathan Myers <ncm@cantrip.org>\n+\n+\t* bits/string.tcc: fix patching NULs on string ends.\n+\n+1998-10-19 Nathan Myers <ncm@cantrip.org>\n+\n+\t* bits/std_iosfwd.h: eliminate \"basic_\" prefix on streambuf\n+\titerator forward declarations\n+\t* bits/sbuf_iter.h: eliminate default template argument definitions\n+\ton streambuf iterators (rely on <iosfwd> decls).\n+\t* TODO: add note about lazy facet construction\n+\t* bits/basic_ios.h: hit operator void* again.  This should be the\n+\tlast time we need to touch it.\n+\t* bits/basic_ios.h: copyfmt now returns *this.\n+\t* bits/basic_string.h: fix npos again.  npos cannot be defined as zero.\n+\t* bits/basic_string.h: put back overloaded constructors; adjust\n+\tbehavior for default allocator on copy constructor.\n+\t* bits/char_traits.h: make not_eof return correct type.\n+\t* bits/loccore.h: remove call to bits/std_stdexcept.h; subincludes\n+\tcannot be in non-standard headers or we get include loops (bad)\n+\t* bits/loccore.h: delete ifdef'd out workarounds for old compiler bugs.\n+\t* bits/loccore.h: add apparatus to support lazy construction of\n+\tfacets.\n+\t* bits/locfacets.tcc: Uglify names in __match_parallel decl.\n+\t* bits/std_ios.h: add include of <typeinfo> to get bad_cast for\n+\tlocale use_facet<> failure.\n+\t* bits/std_locale.h: same.\n+\t* bits/std_string.h: same.\n+\t* bits/std_stdexcept.h: change exception member __msg from a\n+\treference to a regular object.\n+\t* bits/string.tcc: add pasting a NUL on the end of strings after\n+\teach operation. We had already left room for it, but previously\n+\tplugged it only on a call to c_str(), but the WG changed the\n+\trequirement when I wasn't looking.  (Can't leave them alone for\n+\ta second without they break something else.)\n+\t* bits/valarray_meta.h: add Gaby's changes from 981018.\n+\t* src/locale.cc: add new type _Bad_use_facet to be thrown on\n+\tfailure of use_facet<>().\n+\t* src/stdexcept.cc: remove pragma, remove bkoz's #if 0,\n+\tcomment out leftover member definitions\n+\n+1998-10-16  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* string/Makefile.am: Revert last change.\n+\t* math/Makefile.am: Likewise.\n+\n+1998-10-15  Benjamin Kosnik  <bkoz@haight.constant.com>\n+\n+\t* bits/std_sstream.h: Fix typo.\n+\n+1998-10-15  Benjamin Kosnik  <bkoz@haight.constant.com>\n+\n+\t* src/Makefile.am (libstdc___la_SOURCES): Add misc-inst.cc.\n+\n+\t* bits/std_sstream.h: Add typedefs, member definitions. Clean.\n+\t* bits/std_stdexcept.h: Remove.\n+\n+1998-10-15  Benjamin Kosnik  <bkoz@haight.constant.com>\n+\n+\t* src/misc-inst.cc: Tweak again.\n+\n+\t* bits/std_sstream.h: Move out-of-line definitions to sstream.tcc.\n+\t* bits/sstream.tcc: New file.\n+\n+1998-10-15  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* configure.in: Test for machine/param.h, sys/machine.h and fp.h.\n+\tDon't run AC_C_BIGENDIAN if machine/param.h or sys/machine.h are\n+\tavailable.\n+\n+\t* math/mathconf.h: Include sys/machine.h, machine/param.h and fp.h\n+\tif available.\n+\t(INFINITE_P): Use IS_INF macro if available.\n+\n+1998-10-15  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* math/Makefile.am (EXTRA_LTLIBRARIES): Renamed from\n+\tnoinst_LTLIBRARIES.\n+\t* string/Makefile.am: Likewise.\n+\n+1998-10-15  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* configure.in (AC_CHECK_FUNCS): Add finite, qfinite, fpclass, and\n+\tqfpclass.\n+\t(AC_CHECK_HEADERS): Add machine/endian.h.  If no header specifying\n+\tendianess is available run AC_C_BIGENDIAN.\n+\n+\t* math/clog10l.c: Add ugly hack around bug in Irix 6.2 header until\n+\tfixincludes is fixed.\n+\t* math/clogl.c: Likewise.\n+\t* math/csqrtl.c: Likewise.\n+\t* math/mycabsl.c: Likewise.\n+\n+\t* math/mathconf.h: Include machine/endian.h if possible.  If no\n+\theader describing endianess is available rely on WORDS_BIGENDIAN\n+\tmacro.\n+\t(FINITE_P, FINITEF_P, FINITEL_P): Use finite functino if available.\n+\t(INFINITE_P, INFINITEF_P, INFINITEL_P): Use fpclass function if\n+\tavailable.\n+\n+\t* src/complex.cc (polar): Don't use sincos on OSF machines.\n+\n+1998-10-09  Benjamin Kosnik  <bkoz@loony.cygnus.com>\n+\n+\t* src/locale-inst.cc: Don't instantiate time_get for\n+\tostreambuf_iterators as time_get::do_get_weekday and\n+\ttime_get::do_get_monthname use __match_parallel, which is illegal\n+\tfor ostreambuf_iterators to use, as they don't have operator== or\n+\toperator!=.\n+\t* bits/std_stdexcept.h: Add dtor definitions.\n+\tUse stl/bits/std_stdexcept.h instead of this file?\n+\t* bits/sbuf_iter.h : Tweak.\n+\t* src/misc-inst.cc: Tweak.\n+\n+1998-10-09  Benjamin Kosnik  <bkoz@haight.constant.com>\n+\n+\t* bits/std_stdexcept.h: New file.\n+\t* src/stdexcept.cc: Define the following:\n+\tlogic_error::what()\n+\truntime_error::what()\n+\n+\t* src/misc-inst.cc: New file.\n+\t* src/Makefile.in (libstdc___la_SOURCES): Add misc-inst.cc.\n+\t(libstdc___la_OBJECTS): Add misc-inst.lo.\n+\n+\t* bits/basic_string.h: Disable non-standard ctor declarations.\n+\t* bits/string.tcc: Disable definitions as well.\n+\t* src/string.cc: Disable <ios> dependencies.\n+\t* bits/sbuf_iter.h (std): Add default to template parameter for\n+\tostreambuf_iterator and istreambuf_iterator.\n+\t* bits/std_iosfwd.h: Change istreambuf_iterator to\n+\tbasic_istreambuf_iterator. Likewise for ostreambuf.\n+\t* bits/locfacets.tcc (__match_parallel): Fix typo.\n+\t* src/ios.cc (imbue): Remove the _G_HAVE_LOCALE guards around\n+\tios_base::imbue.\n+\t* bits/std_streambuf.h: Define _Streambuf_base::getloc().\n+\t* bits/std_istream.h: Define the following:\n+\tget (basic_streambuf<char_type,_Traits>& __sb, char_type __delim)\n+\tget (char_type* __s, streamsize __n, char_type __delim);\n+\tgetline (char_type* __s, streamsize __n, char_type __delim)\n+\t* bits/loccore.h : FIXME friend template code for use_facet.\n+\tAdd std_stdexcept.h include so that range_error will be defined.\n+\tAdd explicit conversion to string for range_error throws. (HACK?)\n+\n+1998-10-8  Ulrich Drepper  <drepepr@cygnus.com>\n+\n+\t* configure.in: Check for sincos, sincosf, and sincosl.\n+\t* src/complex.cc (polar): Use sincos if available.\n+\n+\t* bits/c++config.h: Fix hack to get LONG_LONG* definitions on Linux.\n+\t* stl/bits/std_limits.h: Include bits/c++config.h.  HACK!!!\n+\n+\t* math/clog10.c: Fix typo (FP_INIFITE_P -> INFINITE_P).\n+\n+\t* math/cpow.c: Use c_log, not clog.\n+\t* math/cpowf.c: Likewise.\n+\t* math/cpowl.c: Likewise.\n+\n+\t* math/cexp.c: Remove unused fpclassify calls.  Use FINITE_P instead\n+\tof isfinite call.\n+\n+\t* math/mathconf.h (FINITE_P, FINITEF_P, FINITEL_P): Define using\n+\tisfinite macro if it is available.\n+\t(INFINITE_P, INFINITEF_P, INFINITEL_P): Define using isinf macro.\n+\n+\t* math/ccosf.c: Use appropriate test macros for this type.\n+\t* math/ccoshf.c: Likewise.\n+\t* math/ccoshl.c: Likewise.\n+\t* math/ccosl.c: Likewise.\n+\t* math/cexpf.c: Likewise.\n+\t* math/cexpl.c: Likewise.\n+\t* math/clog10f.c: Likewise.\n+\t* math/clog10l.c: Likewise.\n+\t* math/clogf.c: Likewise.\n+\t* math/clogl.c: Likewise.\n+\t* math/csinf.c: Likewise.\n+\t* math/csinhf.c: Likewise.\n+\t* math/csinhl.c: Likewise.\n+\t* math/csinl.c: Likewise.\n+\t* math/csqrtf.c: Likewise.\n+\t* math/csqrtl.c: Likewise.\n+\t* math/ctanf.c: Likewise.\n+\t* math/ctanhf.c: Likewise.\n+\t* math/ctanhl.c: Likewise.\n+\t* math/ctanl.c: Likewise.\n+\n+1998-10-06  Benjamin Kosnik  <bkoz@bliss.nabi.net>\n+\n+\t* bits/basic_ios.h: Fix previous change.\n+\n+1998-10-06  Benjamin Kosnik  <bkoz@bliss.nabi.net>\n+\n+\t* bits/basic_ios.h: Add const_cast<basic_ios&>\n+\t(operator void*): As per 5.2.9 p 2, make sure static_cast is\n+\twell-formed.\n+\t* bits/char_traits.h: No _CharT for specialization, change to 0.\n+\t* bits/basic_string.h: As per 9.4.2 p4, initialize with\n+\tconstant-initializer.\n+\t* bits/locfacets.tcc: Add template parameter to initialization list.\n+\n+1998-10-02  Benjamin Kosnik  <bkoz@loony.cygnus.com>\n+\n+\t* bits/basic_string.h: Should just be <, not <=.\n+\n+1998-10-01  Benjamin Kosnik  <bkoz@bliss.nabi.net>\n+\n+\t* bits/string.tcc (compare): Fix for strings that are similar, but\n+\tnot the same length.\n+\n+1998-09-04  Brendan Kehoe  <brendan@cygnus.com>\n+\n+\t* bits/c++config.h: For __linux__, define _GNU_SOURCE.  This is\n+\trequired for us to get LONG_LONG_{MIN,MAX} out of gcc's limits.h.\n+\tWe can't check for __GLIBC__ here, since this header can be read\n+\tbefore any system one (that would lead to features.h) being used.\n+\n+\t* stl/bits/stl_config.h (__STL_LONG_LONG): Re-enabled\n+\n+\t* stl/bits/std_limits.h [__STL_LONG_LONG]: Fix usage to use\n+\tLONG_LONG_MIN, LONG_LONG_MAX, and ULONG_LONG_MAX.\n+\n+\t* stl/bits/stl_config.h: Don't do __STL_LONG_LONG, it uses\n+\tLONGLONG_{MIN,MAX} which I can't find the origin of.\n+\n+1998-09-03  Brendan Kehoe  <brendan@cygnus.com>\n+\n+\t* stl/bits/stl_iterator.h: Add extern decl of cin for now; where\n+\tshould this come from, if not iostream.h?\n+\t(class istream_iterator): Make the new operator!= a friend also.\n+\n+\t* stl/bits/stl_config.h: Define __STL_HAS_WCHAR_T,\n+\t__STL_MEMBER_TEMPLATE_CLASSES, and __STL_LONG_LONG.  Don't include\n+\t_G_config.h like the egcs one does.\n+\n+1998-09-01  Brendan Kehoe  <brendan@cygnus.com>\n+\n+\t* bits/string.tcc: Call `_M_destroy' instead of `destroy'.\n+\n+\t* bits/valarray_meta.h: Throughout, rename _Expr typedefs to be\n+\t_Expr1 (or _Expr_def if it's taken), and change definitions.\n+\tAvoids redecl of the template parm.\n+\n+\t* bits/string.tcc (basic_string copy ctor): Fix typo in declaration.\n+\t(operator>>): Initialize __ERROR with ios_base::goodbit, not 0.\n+\n+\t* bits/std_streambuf.h (_POSIX_SOURCE): Only define if it's not\n+\talready done.\n+\n+\t* src/locale-inst.cc: New file, **TOTAL HACK**.  There has GOT to\n+\tbe a better way to do this.\n+\n+\t* src/stlinst.cc: New file.\n+\n+\t* BUGS: New file, with various discovered bugs that need to be\n+\tfixed.\n+\n+\t* Makefile.in, math/Makefile.in, string/Makefile.in,\n+\tsrc/Makefile.in: Reran automake.\n+\n+\tWorkarounds, these may not all be the final fixes:\n+\n+\t* bits/basic_ios.h (class basic_ios): Make _M_strbuf be protected,\n+\tnot private, for basic_istream::get() in std_istream.h to be able\n+\tto use it.\n+\t(basic_ios::operator void*): Don't use static_cast for the false\n+\tcase.\n+\t(basic_ios::copyfmt): Fix `rhs.except' to be `rhs.exceptions ()'.\n+\tThis appears to have been in sep94, but didn't get corrected\n+\tafterwards.\n+\n+\t* bits/basic_string.h (npos): Don't init here.\n+\t* bits/string.tcc: Instead, do initialization here, to -1 instead\n+\tof the size_type destructor.\n+\n+\t* src/traits.cc, src/wtraits.cc: New files.\n+\t* bits/char_traits.h: For char_traits<char> and\n+\tchar_traits<wchar_t>, declare static, but define over in the src\n+\tfiles.\n+\n+\t* bits/gslice.h: Comment out forward decls of _Array, valarray,\n+\tgslice_array, and _GsliceExpression.\n+\n+\t* bits/std_cstdio.h [__sparc__ && __svr4__]: #undef all of\n+\tclearerr, feof, ferror, getc, getchar, putc, putchar, stdin,\n+\tstdout, and stderr.  Note we do get unresolved refs to stdin, but\n+\tthat'll get fixed by the \"true\" solution.\n+\n+\t* bits/std_ios.h: Include <bits/std_streambuf.h> to get the\n+\tdefinition of basic_streambuf.h, which is used in basic_ios.h to\n+\tcall pubimbue.\n+\n+\t* bits/std_streambuf.h: Don't include libio.h for now.\n+\t(class basic_streambuf): Define missing methods pubimbue and\n+\tgetloc.\n+\n+\t* src/Makefile.am (libstdc___la_SOURCES): Add stdexcept.cc,\n+\tios.cc, os_raw.cc, stdstreams.cc, locale.cc, localename.cc,\n+\tlocale-inst.cc, stlinst.cc, traits.cc, wtraits.cc.\n+\n+\t* src/ios.cc: Instantiate basic_ios<char> and basic_ios<wchar_t>.\n+\n+\t* src/locale.cc: Come up with munged versions of _S_toupper,\n+\t_S_tolower, and _S_table instead of the glibc-specific ones, so\n+\tthey're at least defined, if not necessarily usable.  The glibc\n+\tones on any other system will yield unresolved refs to\n+\t__ctype_{b,toupper,tolower}.\n+\n+\t* src/string.cc: Define all of ADDCS, ADDPS, et al.  Add\n+\tbasic_ios, basic_istream, basic_ostream.  Don't do char_traits\n+\tanymore cuz of the explicit specialization in char_traits.h.\n+\tAlso add _S_string_copy, but this doesn't fix it -- cf the BUGS\n+\tfile for the details.\n+\n+\t* stl/bits/stl_algobase.h (equal): Fix to do `! (x==y)'.\n+\t* stl/bits/stl_iterator.h (__distance): Likewise.\n+\n+\t* stl/bits/stl_iterator.h: As with 8/18 set, define missing op!=,\n+\top>, op<=, and op>= for reverse_iterator.  Also add op!= for\n+\tistream_iterator.\n+\n+1998-08-26  Brendan Kehoe  <brendan@cygnus.com>\n+\n+\t* bits/string.tcc (basic_string::compare (const char*)): Fix to\n+\treturn 0, not 1.\n+\n+1998-08-25  Brendan Kehoe  <brendan@cygnus.com>\n+\n+\tThis should really be fixed with __asm__ directives renaming the\n+\tsymbol, but keeping the function.\n+\t* math/clogf.c (c_logf): Renamed from `clogf'.\n+\t* math/clogl.c (c_logl): Renamed from `clogl'.\n+\t* math/complex-stub.h (c_logf, c_logl): Change decls.\n+\n+\t* bits/locfacets.h (class _Numeric_get): For friend decls, rename\n+\t_CharT and _InIter parms, since they duplicate the enclosing ones.\n+\n+1998-08-19  Brendan Kehoe  <brendan@cygnus.com>\n+\n+\tDeal with conflict of the iostreams `clog' and our internal\n+\tcomplex number `clog'.\n+\t* src/complex.cc: Call `c_log' instead of `clog'.\n+\t* math/clog.c (c_log):: Renamed from clog.\n+\t* math/complex-stub.h (c_log): Renamed from clog decl.\n+\n+\t* bits/locfacets.h (class _Numeric_get): Tweak fwd decls of the\n+\tget/put classes.\n+\t(num_put::put): #if 0 long long version, since we don't declare or\n+\tdefine the long long version of do_put.\n+\n+1998-08-18 Nathan Myers <ncm@cantrip.org>\n+\n+\t* bits/basic_string.h: add basic_string<>::push_back(), fix return\n+\ttype of get_allocator (thanks to Ryszard Kabatek).\n+\t* bits/char_traits.h: make init order of fpos<> members\n+\tmatch decl order.\n+\t* bits/ios_base.h: fix decls of ios_base bitmask & enum types, add\n+\tflags _S_fd_in etc. for special filebuf ctor.\n+\t* bits/locfacets.h: make _Numeric_get and _Format_cache public\n+\tto work around problems in friend declarations.\n+\t* bits/locfacets.tcc: qualify _S_get_cache in num_get<>::get(..bool&),\n+\tfix random type errors & typos\n+\t* bits/std_fstream.h: major refitting to bypass libio (for now),\n+\tinstrument to use bits/fstream.tcc template definitions\n+\t* bits/std_iosfwd.h: mess with wrappers\n+\t* bits/std_istream.h: remove meaningless comment\n+\t* bits/std_ostream.h: instrument to work with ostream.tcc.\n+\t* bits/std_streambuf.h: instrument to work with streambuf.tcc\n+\t* bits/fstream.tcc: template defs for <fstream>\n+\t* bits/ostream.tcc: template defs for <ostream>\n+\t* bits/streambuf.tcc: template defs for <streambuf>\n+\t* bits/os_raw.h: thin OS interface wrapper, to bypass libio (for now).\n+\t* Delete .cc files, replace with bits/*.tcc\n+\tsrc/fstream.cc\n+\tsrc/istream.cc\n+\tsrc/ostream.cc\n+\tsrc/streambuf.cc\n+\t* Add files:\n+\tsrc/os_raw.cc: thin interface to OS, to bypass libio (for now).\n+\tsrc/stdstreams.cc: cout, cin, etc. definitions\n+\t(these still need work: must be init'd before user statics.)\n+\n+\n+1998-08-18  Brendan Kehoe  <brendan@cygnus.com>\n+\n+\tSent to SGI before checkin:\n+\t* stl/bits/stl_vector.h (operator!=, operator>, operator<=,\n+\toperator>=): Define.\n+\t* stl/bits/stl_bvector.h (vector<bool>::flip): Define method.\n+\t* stl/bits/stl_deque.h (operator!=, operator>, operator<=,\n+\toperator>=): Define.\n+\t(operator==, operator<): Add inline.\n+\t* stl/bits/stl_map.h (operator!=, operator<, operator<=,\n+\toperator>=): Define.\n+\t* stl/bits/stl_multimap.h (operator!=, operator<, operator<=,\n+\toperator>=): Define.\n+\t* stl/bits/stl_list.h (operator!=, operator<, operator<=,\n+\toperator>=): Define.\n+\t* stl/bits/stl_set.h (operator!=, operator<, operator<=,\n+\toperator>=): Define.\n+\t* stl/bits/stl_multiset.h (operator!=, operator<, operator<=,\n+\toperator>=): Define.\n+\n+\t* bits/std_valarray.h (_Shift_left, _Shift_right): Inherit from\n+\tunary_function.\n+\n+1998-08-15 Nathan Myers <ncm@cantrip.org>\n+\n+\t* bits/ios_base.h: change nominal bitmask and enum types to real enums\n+\t* bits/locfacets.h: make _Format_cache bool names usable by num_get\n+\t* bits/locfacets.tcc: make num_get<>::get(... bool&) use _Format_cache\n+\t* bits/std_fstream.h: minor cleanups: ctors delegate to open()\n+\t* bits/std_iosfwd.h: more bitmask changes, for ios_base::iostate\n+\t* bits/std_sstream.h: formatting cleanups\n+\n+1998-08-14 Nathan Myers <ncm@cantrip.org>\n+\n+\t* bits/locfacets.tcc: implement num_get<>::do_get(..., bool&)\n+\t* bits/locfacets.tcc: implement time_get<>::do_get_weekday\n+\t* bits/locfacets.tcc: implement time_get<>::do_get_monthname\n+\t* bits/locfacets.h:   fix missing argument in do_get_monthname\n+\t(this is a bug in the standard, ref. 36 in my list.)\n+\t* bits/locfacets.h: make month and day name caches mutable\n+\t* bits/locfacets.tcc: various typos in get() functions\n+\t* bits/sbuf_iter.h: fix omission in istreambuf_iterator::op++().\n+\t* bits/std_streambuf.h: fix typo in sgetn (Brendan)\n+\n+1998-08-12 Nathan Myers <ncm@cantrip.org>\n+\t* move streambuf iterators to bits/sbuf_iter.h\n+\t* optimize streambuf iterators\n+\t* begin generalizing streambuf\n+\t* begin implementing num_get<>::get (starting with bool)\n+\t* patch stl/bits/stl_config.h so that relops operators are\n+\tcontained properly, out of the way.\n+\n+1998-07-24 Nathan Myers <ncm@cantrip.org>\n+\t* Fold in SGI 3.11 changes (uglified names, some algorithm\n+\t  improvements, very minor bug fixes.)\n+\t* Uglify names elsewhere to match (s/_T/_Tp/).\n+\t* Begin work on optimized streambuf\n+\t* Put complex.cc in namespace std:: (thanks Martin)\n+\n+1998-07-17 Nathan Myers <ncm@cantrip.org>\n+\n+\t* bits/char_traits.h: add _Char_traits_match template.\n+\t* bits/string.tcc: fix bugs in various find_last* members.\n+\t* bits/basic_string.h: redeclare member _S_find.\n+\t* stl/bits/stl_iterator.h: change member names in nonstandard\n+\t  templates bidirectional_reverse_iterator and\n+\t  random_access_reverse_iterator to match expected changes\n+\t  in upstream source.\n+\t* src/string.cc: fix definitions of stream operators.\n+\n+1998-07-14 16:06  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* Makefile.am (SUBDIRS): Add string.\n+\n+\t* configure.in: Test for long double functions separately.  Test for\n+\tISO C 89 float functions.  Test for endian.h and sys/isa_defs.h.\n+\tGenerate string/Makefile.\n+\n+\t* bits/c++config.h: Define mbstate_t for Solaris.\n+\n+\t* bits/char_traits.h: Remove unused #if.\n+\n+\t* bits/std_cwchar.h: Declare wide char string functions.\n+\n+\t* m4/stringfcts.m4: New file.\n+\n+\t* math/complex-stub.h: Declare nan.\n+\t* math/nan.c: New file.\n+\n+\t* math/mathconf.h: Hack around missing endian.h file.\n+\tHandle missing NAN definition.\n+\tHandle missing float math functions.\n+\n+\t* src/Makefile.am (libstdc___la_LIBADD): Add libstring.la.\n+\t(libstdc___la_LDFLAGS): Set version information.\n+\n+\t* src/complexl.cc: Don't compile any code if no long double functions\n+\tare available.\n+\n+\t* string/Makefile.am: New file.\n+\t* string/dummy.c: New file.\n+\t* string/wmemchr.c: New file.\n+\t* string/wmemcmp.c: New file.\n+\t* string/wmemcpy.c: New file.\n+\t* string/wmemmove.c: New file.\n+\t* string/wmemset.c: New file.\n+\n+1998-07-14 10:45  Ulrich Drepper  <drepper@cygnus.com>\n+\n+\t* configure.in: Make it work.\n+\t* install-sh: New file.\n+\t* missing: New file.\n+\t* mkinstalldirs: New file.\n+\t* m4/mathfcts.m4: New file.\n+\t* math/Makefile.am: New file.\n+\n+\t* bits/std_complex.h (conj): Mark specializations as inline.\n+\n+\t* math/carg.c: New file.\n+\t* math/cargf.c: New file.\n+\t* math/cargl.c: New file.\n+\t* math/mycabs.c: New file.\n+\t* math/mycabsf.c: New file.\n+\t* math/mycabsl.c: New file.\n+\t* math/signbit.c: New file.\n+\t* math/signbitf.c: New file.\n+\t* math/signbitl.c: New file.\n+\n+\t* math/ccos.c: Avoid ISO C 9x functionality.\n+\t* math/ccosf.c: Likewise.\n+\t* math/ccosh.c: Likewise.\n+\t* math/ccoshf.c: Likewise.\n+\t* math/ccoshl.c: Likewise.\n+\t* math/ccosl.c: Likewise.\n+\t* math/cexp.c: Likewise.\n+\t* math/cexpf.c: Likewise.\n+\t* math/cexpl.c: Likewise.\n+\t* math/clog.c: Likewise.\n+\t* math/clog10.c: Likewise.\n+\t* math/clog10f.c: Likewise.\n+\t* math/clog10l.c: Likewise.\n+\t* math/clogf.c: Likewise.\n+\t* math/clogl.c: Likewise.\n+\t* math/cpow.c: Likewise.\n+\t* math/cpowf.c: Likewise.\n+\t* math/cpowl.c: Likewise.\n+\t* math/csin.c: Likewise.\n+\t* math/csinf.c: Likewise.\n+\t* math/csinh.c: Likewise.\n+\t* math/csinhf.c: Likewise.\n+\t* math/csinhl.c: Likewise.\n+\t* math/csinl.c: Likewise.\n+\t* math/csqrt.c: Likewise.\n+\t* math/csqrtf.c: Likewise.\n+\t* math/csqrtl.c: Likewise.\n+\t* math/ctan.c: Likewise.\n+\t* math/ctanf.c: Likewise.\n+\t* math/ctanh.c: Likewise.\n+\t* math/ctanhf.c: Likewise.\n+\t* math/ctanhl.c: Likewise.\n+\t* math/ctanl.c: Likewise.\n+\n+\t* math/complex-stub.h: New file.\n+\n+\t* math/mathconf.h: New file.\n+\n+\t* src/Makefile.am: New file.\n+\n+\t* src/complex.cc: Use mathconf.h instead of complex.h.\n+\tDon't use cabs, always use __mycabs.\n+\n+1998-02-13  Brendan Kehoe  <brendan@cygnus.com>\n+\n+\t* iterator (class reverse_iterator): Do some tweaks to be in sync\n+\tw/ the FDIS.\n+"}, {"sha": "de3a6caac7b0259c55a1e676cd20a1f72c1856e3", "filename": "libstdc++-v3/ChangeLog-1999", "status": "added", "additions": 3545, "deletions": 0, "changes": 3545, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/befe7c824668cffb56d1246b817f77a09e7a3b30/libstdc%2B%2B-v3%2FChangeLog-1999", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/befe7c824668cffb56d1246b817f77a09e7a3b30/libstdc%2B%2B-v3%2FChangeLog-1999", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-1999?ref=befe7c824668cffb56d1246b817f77a09e7a3b30"}, {"sha": "98b74025abdbcc8f1cea85787b64d700e7bb97d5", "filename": "libstdc++-v3/ChangeLog-2000", "status": "modified", "additions": 0, "deletions": 4486, "changes": 4486, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/befe7c824668cffb56d1246b817f77a09e7a3b30/libstdc%2B%2B-v3%2FChangeLog-2000", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/befe7c824668cffb56d1246b817f77a09e7a3b30/libstdc%2B%2B-v3%2FChangeLog-2000", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-2000?ref=befe7c824668cffb56d1246b817f77a09e7a3b30"}]}