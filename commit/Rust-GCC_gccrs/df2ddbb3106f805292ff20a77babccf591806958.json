{"sha": "df2ddbb3106f805292ff20a77babccf591806958", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGYyZGRiYjMxMDZmODA1MjkyZmYyMGE3N2JhYmNjZjU5MTgwNjk1OA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-10-20T16:06:55Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-10-20T16:06:55Z"}, "message": "alpha.h (PREDICATE_CODES): Add normal_memory_operand.\n\n        * config/alpha/alpha.h (PREDICATE_CODES): Add normal_memory_operand.\n        * config/alpha/alpha-protos.h: Remove PREDICATE_CODES prototypes.\n\nFrom-SVN: r72708", "tree": {"sha": "28a9169d98de86776bf6d0f2e0a7d90234ef4f10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28a9169d98de86776bf6d0f2e0a7d90234ef4f10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df2ddbb3106f805292ff20a77babccf591806958", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df2ddbb3106f805292ff20a77babccf591806958", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df2ddbb3106f805292ff20a77babccf591806958", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df2ddbb3106f805292ff20a77babccf591806958/comments", "author": null, "committer": null, "parents": [{"sha": "cbe26ab89a7101f6e39d5e40ba0b5d50c27affd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbe26ab89a7101f6e39d5e40ba0b5d50c27affd9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbe26ab89a7101f6e39d5e40ba0b5d50c27affd9"}], "stats": {"total": 56, "additions": 6, "deletions": 50}, "files": [{"sha": "fa34b24839932383bcb892a199707de99b00584e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df2ddbb3106f805292ff20a77babccf591806958/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df2ddbb3106f805292ff20a77babccf591806958/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=df2ddbb3106f805292ff20a77babccf591806958", "patch": "@@ -1,3 +1,8 @@\n+2003-10-20  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/alpha/alpha.h (PREDICATE_CODES): Add normal_memory_operand.\n+\t* config/alpha/alpha-protos.h: Remove PREDICATE_CODES prototypes.\n+\n 2003-10-20  Dorit Naishlos  <dorit@il.ibm.com>\n \n \t* config/rs6000/rs6000.h: (rs6000_sched_insert_nops): \t"}, {"sha": "29caf8f095b383bf4c42431bfb6f5eb9dc52ebfb", "filename": "gcc/config/alpha/alpha-protos.h", "status": "modified", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df2ddbb3106f805292ff20a77babccf591806958/gcc%2Fconfig%2Falpha%2Falpha-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df2ddbb3106f805292ff20a77babccf591806958/gcc%2Fconfig%2Falpha%2Falpha-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha-protos.h?ref=df2ddbb3106f805292ff20a77babccf591806958", "patch": "@@ -35,56 +35,6 @@ extern void alpha_expand_epilogue (void);\n extern void alpha_output_filename (FILE *, const char *);\n extern void alpha_output_lineno (FILE *, int);\n \n-extern int reg_or_0_operand (rtx, enum machine_mode);\n-extern int reg_or_6bit_operand (rtx, enum machine_mode);\n-extern int reg_or_8bit_operand (rtx, enum machine_mode);\n-extern int reg_or_const_int_operand (rtx, enum machine_mode);\n-extern int cint8_operand (rtx, enum machine_mode);\n-extern int add_operand (rtx, enum machine_mode);\n-extern int sext_add_operand (rtx, enum machine_mode);\n-extern int const48_operand (rtx, enum machine_mode);\n-extern int and_operand (rtx, enum machine_mode);\n-extern int or_operand (rtx, enum machine_mode);\n-extern int mode_width_operand (rtx, enum machine_mode);\n-extern int mode_mask_operand (rtx, enum machine_mode);\n-extern int mul8_operand (rtx, enum machine_mode);\n-extern int const0_operand (rtx, enum machine_mode);\n-extern int hard_fp_register_operand (rtx, enum machine_mode);\n-extern int hard_int_register_operand (rtx, enum machine_mode);\n-extern int reg_or_cint_operand (rtx, enum machine_mode);\n-extern int some_operand (rtx, enum machine_mode);\n-extern int some_ni_operand (rtx, enum machine_mode);\n-extern int input_operand (rtx, enum machine_mode);\n-extern int samegp_function_operand (rtx, enum machine_mode);\n-extern int direct_call_operand (rtx, enum machine_mode);\n-extern int local_symbolic_operand (rtx, enum machine_mode);\n-extern int small_symbolic_operand (rtx, enum machine_mode);\n-extern int some_small_symbolic_operand (rtx, enum machine_mode);\n-extern int global_symbolic_operand (rtx, enum machine_mode);\n-extern int dtp16_symbolic_operand (rtx, enum machine_mode);\n-extern int dtp32_symbolic_operand (rtx, enum machine_mode);\n-extern int gotdtp_symbolic_operand (rtx, enum machine_mode);\n-extern int tp16_symbolic_operand (rtx, enum machine_mode);\n-extern int tp32_symbolic_operand (rtx, enum machine_mode);\n-extern int gottp_symbolic_operand (rtx, enum machine_mode);\n-extern int call_operand (rtx, enum machine_mode);\n-extern int symbolic_operand (rtx, enum machine_mode);\n-extern int alpha_comparison_operator (rtx, enum machine_mode);\n-extern int alpha_zero_comparison_operator (rtx, enum machine_mode);\n-extern int alpha_swapped_comparison_operator (rtx, enum machine_mode);\n-extern int signed_comparison_operator (rtx, enum machine_mode);\n-extern int alpha_fp_comparison_operator (rtx, enum machine_mode);\n-extern int divmod_operator (rtx, enum machine_mode);\n-extern int fix_operator (rtx, enum machine_mode);\n-extern int aligned_memory_operand (rtx, enum machine_mode);\n-extern int unaligned_memory_operand (rtx, enum machine_mode);\n-extern int reg_or_unaligned_mem_operand (rtx, enum machine_mode);\n-extern int any_memory_operand (rtx, enum machine_mode);\n-extern int reg_not_elim_operand (rtx, enum machine_mode);\n-extern int normal_memory_operand (rtx, enum machine_mode);\n-extern int reg_no_subreg_operand (rtx, enum machine_mode);\n-extern int addition_operation (rtx, enum machine_mode);\n-\n extern bool alpha_const_ok_for_letter_p (HOST_WIDE_INT, int);\n extern bool alpha_const_double_ok_for_letter_p (rtx, int);\n extern bool alpha_extra_constraint (rtx, int);"}, {"sha": "a6d332207095b4e5db090664c69006233e6ae038", "filename": "gcc/config/alpha/alpha.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df2ddbb3106f805292ff20a77babccf591806958/gcc%2Fconfig%2Falpha%2Falpha.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df2ddbb3106f805292ff20a77babccf591806958/gcc%2Fconfig%2Falpha%2Falpha.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.h?ref=df2ddbb3106f805292ff20a77babccf591806958", "patch": "@@ -1669,6 +1669,7 @@ do {\t\t\t\t\t\t\\\n   {\"unaligned_memory_operand\", {MEM}},\t\t\t\t\t\\\n   {\"reg_or_unaligned_mem_operand\", {SUBREG, REG, MEM}},\t\t\t\\\n   {\"any_memory_operand\", {MEM}},\t\t\t\t\t\\\n+  {\"normal_memory_operand\", {MEM}},\t\t\t\t\t\\\n   {\"hard_fp_register_operand\", {SUBREG, REG}},\t\t\t\t\\\n   {\"hard_int_register_operand\", {SUBREG, REG}},\t\t\t\t\\\n   {\"reg_not_elim_operand\", {SUBREG, REG}},\t\t\t\t\\"}]}