{"sha": "722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzIyNTE2YjgxZjg4ZDljYjQ3OWViMGNmMzY5OWM5NDZhYTZkM2RiZQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2013-11-07T21:20:18Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2013-11-07T21:20:18Z"}, "message": "atomic-compare-exchange-1.c, [...]: Declare main as returning int.\n\n\t* gcc.dg/atomic-compare-exchange-1.c,\n\tgcc.dg/atomic-compare-exchange-2.c,\n\tgcc.dg/atomic-compare-exchange-3.c,\n\tgcc.dg/atomic-compare-exchange-4.c,\n\tgcc.dg/atomic-compare-exchange-5.c, gcc.dg/atomic-exchange-1.c,\n\tgcc.dg/atomic-exchange-2.c, gcc.dg/atomic-exchange-3.c,\n\tgcc.dg/atomic-exchange-4.c, gcc.dg/atomic-exchange-5.c,\n\tgcc.dg/atomic-fence.c, gcc.dg/atomic-flag.c,\n\tgcc.dg/atomic-generic.c, gcc.dg/atomic-invalid.c,\n\tgcc.dg/atomic-load-1.c, gcc.dg/atomic-load-2.c,\n\tgcc.dg/atomic-load-3.c, gcc.dg/atomic-load-4.c,\n\tgcc.dg/atomic-load-5.c, gcc.dg/atomic-lockfree.c,\n\tgcc.dg/atomic-noinline.c, gcc.dg/atomic-op-1.c,\n\tgcc.dg/atomic-op-2.c, gcc.dg/atomic-op-3.c, gcc.dg/atomic-op-4.c,\n\tgcc.dg/atomic-op-5.c, gcc.dg/atomic-param.c,\n\tgcc.dg/atomic-store-1.c, gcc.dg/atomic-store-2.c,\n\tgcc.dg/atomic-store-3.c, gcc.dg/atomic-store-4.c,\n\tgcc.dg/atomic-store-5.c: Declare main as returning int.\n\t* gcc.dg/atomic-exchange-1.c, gcc.dg/atomic-exchange-2.c,\n\tgcc.dg/atomic-exchange-3.c, gcc.dg/atomic-exchange-4.c,\n\tgcc.dg/atomic-exchange-5.c: Separate increments of count from\n\texpression using value of count.\n\nFrom-SVN: r204545", "tree": {"sha": "782225fd7829bc172517d0c0717ccaf307eed067", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/782225fd7829bc172517d0c0717ccaf307eed067"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "267bac1078ce623767a9effa063d5b63fbbeb6ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/267bac1078ce623767a9effa063d5b63fbbeb6ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/267bac1078ce623767a9effa063d5b63fbbeb6ca"}], "stats": {"total": 132, "additions": 107, "deletions": 25}, "files": [{"sha": "0e850816bfa45b81c1d6e769ffc98f86792ae5e2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -1,3 +1,28 @@\n+2013-11-07  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/atomic-compare-exchange-1.c,\n+\tgcc.dg/atomic-compare-exchange-2.c,\n+\tgcc.dg/atomic-compare-exchange-3.c,\n+\tgcc.dg/atomic-compare-exchange-4.c,\n+\tgcc.dg/atomic-compare-exchange-5.c, gcc.dg/atomic-exchange-1.c,\n+\tgcc.dg/atomic-exchange-2.c, gcc.dg/atomic-exchange-3.c,\n+\tgcc.dg/atomic-exchange-4.c, gcc.dg/atomic-exchange-5.c,\n+\tgcc.dg/atomic-fence.c, gcc.dg/atomic-flag.c,\n+\tgcc.dg/atomic-generic.c, gcc.dg/atomic-invalid.c,\n+\tgcc.dg/atomic-load-1.c, gcc.dg/atomic-load-2.c,\n+\tgcc.dg/atomic-load-3.c, gcc.dg/atomic-load-4.c,\n+\tgcc.dg/atomic-load-5.c, gcc.dg/atomic-lockfree.c,\n+\tgcc.dg/atomic-noinline.c, gcc.dg/atomic-op-1.c,\n+\tgcc.dg/atomic-op-2.c, gcc.dg/atomic-op-3.c, gcc.dg/atomic-op-4.c,\n+\tgcc.dg/atomic-op-5.c, gcc.dg/atomic-param.c,\n+\tgcc.dg/atomic-store-1.c, gcc.dg/atomic-store-2.c,\n+\tgcc.dg/atomic-store-3.c, gcc.dg/atomic-store-4.c,\n+\tgcc.dg/atomic-store-5.c: Declare main as returning int.\n+\t* gcc.dg/atomic-exchange-1.c, gcc.dg/atomic-exchange-2.c,\n+\tgcc.dg/atomic-exchange-3.c, gcc.dg/atomic-exchange-4.c,\n+\tgcc.dg/atomic-exchange-5.c: Separate increments of count from\n+\texpression using value of count.\n+\n 2013-11-07  Joseph Myers  <joseph@codesourcery.com>\n \n \t* lib/target-supports.exp"}, {"sha": "4b999c682f2d66ecdd1b12ea12a7e9e9098d1ef2", "filename": "gcc/testsuite/gcc.dg/atomic-compare-exchange-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-compare-exchange-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-compare-exchange-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-compare-exchange-1.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -16,6 +16,7 @@ char zero = 0;\n #define STRONG 0\n #define WEAK 1\n \n+int\n main ()\n {\n "}, {"sha": "736e358a6dfc18b501430b6cf068c8fa38e21083", "filename": "gcc/testsuite/gcc.dg/atomic-compare-exchange-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-compare-exchange-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-compare-exchange-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-compare-exchange-2.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -16,6 +16,7 @@ short zero = 0;\n #define STRONG 0\n #define WEAK 1\n \n+int\n main ()\n {\n "}, {"sha": "91a67cd7423da662d4f60d455c397a0764ef51a1", "filename": "gcc/testsuite/gcc.dg/atomic-compare-exchange-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-compare-exchange-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-compare-exchange-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-compare-exchange-3.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -16,6 +16,7 @@ int zero = 0;\n #define STRONG 0\n #define WEAK 1\n \n+int\n main ()\n {\n "}, {"sha": "ac9531b7823442d8053cc3ed72e1c70eae75f3c5", "filename": "gcc/testsuite/gcc.dg/atomic-compare-exchange-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-compare-exchange-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-compare-exchange-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-compare-exchange-4.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -18,6 +18,7 @@ long long zero = 0;\n #define STRONG 0\n #define WEAK 1\n \n+int\n main ()\n {\n "}, {"sha": "f5d071affe8f7d92a37efce333d9cfd0fb0b00c9", "filename": "gcc/testsuite/gcc.dg/atomic-compare-exchange-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-compare-exchange-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-compare-exchange-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-compare-exchange-5.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -17,6 +17,7 @@ __int128_t zero = 0;\n #define STRONG 0\n #define WEAK 1\n \n+int\n main ()\n {\n "}, {"sha": "ec8a09c8cc3fc41ccde4b127a182b321caf9bda2", "filename": "gcc/testsuite/gcc.dg/atomic-exchange-1.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-exchange-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-exchange-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-exchange-1.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -9,25 +9,31 @@ extern void abort(void);\n \n char v, count, ret;\n \n+int\n main ()\n {\n   v = 0;\n   count = 0;\n \n-  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_RELAXED) !=  count++) \n+  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_RELAXED) != count)\n     abort ();\n+  count++;\n \n-  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_ACQUIRE) !=  count++) \n+  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_ACQUIRE) != count)\n     abort ();\n+  count++;\n \n-  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_RELEASE) !=  count++) \n+  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_RELEASE) != count)\n     abort ();\n+  count++;\n \n-  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_ACQ_REL) !=  count++) \n+  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_ACQ_REL) != count)\n     abort ();\n+  count++;\n \n-  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_SEQ_CST) !=  count++) \n+  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_SEQ_CST) != count)\n     abort ();\n+  count++;\n \n   /* Now test the generic version.  */\n "}, {"sha": "0de2e68208f6367cf651c80f89aeea18fb730458", "filename": "gcc/testsuite/gcc.dg/atomic-exchange-2.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-exchange-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-exchange-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-exchange-2.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -9,25 +9,31 @@ extern void abort(void);\n \n short v, count, ret;\n \n+int\n main ()\n {\n   v = 0;\n   count = 0;\n \n-  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_RELAXED) !=  count++) \n+  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_RELAXED) != count)\n     abort ();\n+  count++;\n \n-  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_ACQUIRE) !=  count++) \n+  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_ACQUIRE) != count)\n     abort ();\n+  count++;\n \n-  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_RELEASE) !=  count++) \n+  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_RELEASE) != count)\n     abort ();\n+  count++;\n \n-  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_ACQ_REL) !=  count++) \n+  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_ACQ_REL) != count)\n     abort ();\n+  count++;\n \n-  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_SEQ_CST) !=  count++) \n+  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_SEQ_CST) != count)\n     abort ();\n+  count++;\n \n   /* Now test the generic version.  */\n "}, {"sha": "63a68cf473a1b40a98b01f4e287ccf7884978a2f", "filename": "gcc/testsuite/gcc.dg/atomic-exchange-3.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-exchange-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-exchange-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-exchange-3.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -9,25 +9,31 @@ extern void abort(void);\n \n int v, count, ret;\n \n+int\n main ()\n {\n   v = 0;\n   count = 0;\n \n-  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_RELAXED) !=  count++) \n+  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_RELAXED) != count)\n     abort ();\n+  count++;\n \n-  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_ACQUIRE) !=  count++) \n+  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_ACQUIRE) != count)\n     abort ();\n+  count++;\n \n-  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_RELEASE) !=  count++) \n+  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_RELEASE) != count)\n     abort ();\n+  count++;\n \n-  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_ACQ_REL) !=  count++) \n+  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_ACQ_REL) != count)\n     abort ();\n+  count++;\n \n-  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_SEQ_CST) !=  count++) \n+  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_SEQ_CST) != count)\n     abort ();\n+  count++;\n \n   /* Now test the generic version.  */\n "}, {"sha": "fc1e5081a07774ded32c9c7244ee453141af4e82", "filename": "gcc/testsuite/gcc.dg/atomic-exchange-4.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-exchange-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-exchange-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-exchange-4.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -11,25 +11,31 @@ extern void abort(void);\n \n long long v, count, ret;\n \n+int\n main ()\n {\n   v = 0;\n   count = 0;\n \n-  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_RELAXED) !=  count++) \n+  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_RELAXED) != count)\n     abort ();\n+  count++;\n \n-  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_ACQUIRE) !=  count++) \n+  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_ACQUIRE) != count)\n     abort ();\n+  count++;\n \n-  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_RELEASE) !=  count++) \n+  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_RELEASE) != count)\n     abort ();\n+  count++;\n \n-  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_ACQ_REL) !=  count++) \n+  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_ACQ_REL) != count)\n     abort ();\n+  count++;\n \n-  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_SEQ_CST) !=  count++) \n+  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_SEQ_CST) != count)\n     abort ();\n+  count++;\n \n   /* Now test the generic version.  */\n "}, {"sha": "190377f0cd55151b7035a62b280d40c9f10aa0de", "filename": "gcc/testsuite/gcc.dg/atomic-exchange-5.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-exchange-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-exchange-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-exchange-5.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -10,25 +10,31 @@ extern void abort(void);\n \n __int128_t v, count, ret;\n \n+int\n main ()\n {\n   v = 0;\n   count = 0;\n \n-  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_RELAXED) !=  count++) \n+  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_RELAXED) != count)\n     abort ();\n+  count++;\n \n-  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_ACQUIRE) !=  count++) \n+  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_ACQUIRE) != count)\n     abort ();\n+  count++;\n \n-  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_RELEASE) !=  count++) \n+  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_RELEASE) != count)\n     abort ();\n+  count++;\n \n-  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_ACQ_REL) !=  count++) \n+  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_ACQ_REL) != count)\n     abort ();\n+  count++;\n \n-  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_SEQ_CST) !=  count++) \n+  if (__atomic_exchange_n (&v, count + 1, __ATOMIC_SEQ_CST) != count)\n     abort ();\n+  count++;\n \n   /* Now test the generic version.  */\n "}, {"sha": "ab5c7d62c9c8315d8081e1fe37157a10581e21c4", "filename": "gcc/testsuite/gcc.dg/atomic-fence.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-fence.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-fence.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-fence.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -6,6 +6,7 @@\n \n /* Test that __atomic_{thread,signal}_fence builtins execute.  */\n \n+int\n main ()\n {\n   __atomic_thread_fence (__ATOMIC_RELAXED);"}, {"sha": "6e79b902720672bbb90de8a4b245bcfcd0d622a3", "filename": "gcc/testsuite/gcc.dg/atomic-flag.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-flag.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-flag.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-flag.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -7,6 +7,7 @@\n extern void abort(void);\n unsigned char a;\n \n+int\n main ()\n {\n   int b;"}, {"sha": "9b09f87b84ce0d76bd00d69399012695412687db", "filename": "gcc/testsuite/gcc.dg/atomic-generic.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-generic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-generic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-generic.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -23,6 +23,7 @@ test_struct a,b;\n \n int size = sizeof (test_struct);\n /* Test for consistency on sizes 1, 2, 4, 8, 16 and 32.  */\n+int\n main ()\n {\n   test_struct c;"}, {"sha": "4d040e1d57293202bd08c6aae49aa258763d7917", "filename": "gcc/testsuite/gcc.dg/atomic-invalid.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-invalid.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-invalid.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-invalid.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -10,6 +10,7 @@ int i, e, b;\n size_t s;\n bool x;\n \n+int\n main ()\n {\n   __atomic_compare_exchange_n (&i, &e, 1, 0, __ATOMIC_RELAXED, __ATOMIC_SEQ_CST); /* { dg-error \"failure memory model cannot be stronger\" } */"}, {"sha": "72ca317f209c64c9e9e0a466fffca0dc73c4cfea", "filename": "gcc/testsuite/gcc.dg/atomic-load-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-load-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-load-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-load-1.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -10,6 +10,7 @@ extern void abort(void);\n \n char v, count;\n \n+int\n main ()\n {\n   v = 0;"}, {"sha": "e937a2dab8b0f0c0885ce0fb08ae07c6ae8146e7", "filename": "gcc/testsuite/gcc.dg/atomic-load-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-load-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-load-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-load-2.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -11,6 +11,7 @@ extern void abort(void);\n short v, count;\n \n \n+int\n main ()\n {\n   v = 0;"}, {"sha": "3e70ef429f6f4d9dcf724d135a5657a9231c3202", "filename": "gcc/testsuite/gcc.dg/atomic-load-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-load-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-load-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-load-3.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -8,6 +8,7 @@ extern void abort(void);\n int v, count;\n \n \n+int\n main ()\n {\n   v = 0;"}, {"sha": "750623dcb63b8134a481c79bd408f8857bbb7cb8", "filename": "gcc/testsuite/gcc.dg/atomic-load-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-load-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-load-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-load-4.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -9,6 +9,7 @@ extern void abort(void);\n \n long long v, count;\n \n+int\n main ()\n {\n   v = 0;"}, {"sha": "d37d6424892741ff8ca452f037358f30b5900320", "filename": "gcc/testsuite/gcc.dg/atomic-load-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-load-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-load-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-load-5.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -8,6 +8,7 @@ extern void abort(void);\n \n __int128_t v, count;\n \n+int\n main ()\n {\n   v = 0;"}, {"sha": "093aee9199f7510adcb2fe9abbd90c11f91a69bf", "filename": "gcc/testsuite/gcc.dg/atomic-lockfree.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-lockfree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-lockfree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-lockfree.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -17,6 +17,7 @@ extern void abort();\n int r1, r2;\n \n /* Test for consistency on sizes 1, 2, 4, 8, 16 and 32.  */\n+int\n main ()\n {\n   "}, {"sha": "b3490ea32606c694c76a029627535266154b992f", "filename": "gcc/testsuite/gcc.dg/atomic-noinline.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-noinline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-noinline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-noinline.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -16,6 +16,7 @@ extern void abort();\n short as,bs,cs;\n char ac,bc,cc;\n \n+int\n main ()\n {\n "}, {"sha": "a8a97c401b7a3cf12fb28f2671d53213cbdf31f1", "filename": "gcc/testsuite/gcc.dg/atomic-op-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-op-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-op-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-op-1.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -527,6 +527,7 @@ test_or ()\n     abort ();\n }\n \n+int\n main ()\n {\n   test_fetch_add ();"}, {"sha": "949850345b5b6c824aa6f508e674ede2042479f2", "filename": "gcc/testsuite/gcc.dg/atomic-op-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-op-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-op-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-op-2.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -528,6 +528,7 @@ test_or ()\n     abort ();\n }\n \n+int\n main ()\n {\n   test_fetch_add ();"}, {"sha": "9a54a2a41783f42c5d1d6105652080747eaef69d", "filename": "gcc/testsuite/gcc.dg/atomic-op-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-op-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-op-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-op-3.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -527,6 +527,7 @@ test_or ()\n     abort ();\n }\n \n+int\n main ()\n {\n   test_fetch_add ();"}, {"sha": "6990b0e2d751660caf513824bb4ae20782a1bfde", "filename": "gcc/testsuite/gcc.dg/atomic-op-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-op-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-op-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-op-4.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -529,6 +529,7 @@ test_or ()\n     abort ();\n }\n \n+int\n main ()\n {\n   test_fetch_add ();"}, {"sha": "1407f3fe3b24e0da1a01b2eae4dd51abb9ba2611", "filename": "gcc/testsuite/gcc.dg/atomic-op-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-op-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-op-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-op-5.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -528,6 +528,7 @@ test_or ()\n     abort ();\n }\n \n+int\n main ()\n {\n   test_fetch_add ();"}, {"sha": "1f2b12690fa549cd770e1989fc681cc38a313ed5", "filename": "gcc/testsuite/gcc.dg/atomic-param.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-param.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-param.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-param.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -5,6 +5,7 @@\n \n int i;\n \n+int\n main ()\n {\n "}, {"sha": "1ca5febcf81299f2680c782d680fd7ea9c4a27bf", "filename": "gcc/testsuite/gcc.dg/atomic-store-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-store-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-store-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-store-1.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -9,6 +9,7 @@ extern void abort(void);\n \n char v, count;\n \n+int\n main ()\n {\n   v = 0;"}, {"sha": "c7b1e211a19ebcfd5f9602191a677e4a07abb8a6", "filename": "gcc/testsuite/gcc.dg/atomic-store-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-store-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-store-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-store-2.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -9,6 +9,7 @@ extern void abort(void);\n \n short v, count;\n \n+int\n main ()\n {\n   v = 0;"}, {"sha": "52b30faacdcfe8364bad9ca85c0436de155c4309", "filename": "gcc/testsuite/gcc.dg/atomic-store-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-store-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-store-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-store-3.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -9,6 +9,7 @@ extern void abort(void);\n \n int v, count;\n \n+int\n main ()\n {\n   v = 0;"}, {"sha": "ca37fdc4628cc6aa52ef0fa9f8eba64e05367d34", "filename": "gcc/testsuite/gcc.dg/atomic-store-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-store-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-store-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-store-4.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -11,6 +11,7 @@ extern void abort(void);\n \n long long v, count;\n \n+int\n main ()\n {\n   v = 0;"}, {"sha": "a855182bf49c6c5cbc665babfc01705423edf193", "filename": "gcc/testsuite/gcc.dg/atomic-store-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-store-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/722516b81f88d9cb479eb0cf3699c946aa6d3dbe/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-store-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fatomic-store-5.c?ref=722516b81f88d9cb479eb0cf3699c946aa6d3dbe", "patch": "@@ -10,6 +10,7 @@ extern void abort(void);\n \n __int128_t v, count;\n \n+int\n main ()\n {\n   v = 0;"}]}