{"sha": "be00f578ec251393182c202bd130350c30f9b088", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUwMGY1NzhlYzI1MTM5MzE4MmMyMDJiZDEzMDM1MGMzMGY5YjA4OA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2004-05-29T20:24:37Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2004-05-29T20:24:37Z"}, "message": "gimplify.c (gimplify_expr): Don't build a statement list if no gimplification was necessary.\n\n        * gimplify.c (gimplify_expr): Don't build a statement list\n        if no gimplification was necessary.\n\nFrom-SVN: r82429", "tree": {"sha": "08495109ed7b8e7909c94f0e8eb0a1d973fc3013", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08495109ed7b8e7909c94f0e8eb0a1d973fc3013"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be00f578ec251393182c202bd130350c30f9b088", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be00f578ec251393182c202bd130350c30f9b088", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be00f578ec251393182c202bd130350c30f9b088", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be00f578ec251393182c202bd130350c30f9b088/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca09cd34f1e976658a5cc60abaf880b2c4901e10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca09cd34f1e976658a5cc60abaf880b2c4901e10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca09cd34f1e976658a5cc60abaf880b2c4901e10"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "662bf28e60fa883d5e5d90f1f92319195c38638a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be00f578ec251393182c202bd130350c30f9b088/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be00f578ec251393182c202bd130350c30f9b088/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be00f578ec251393182c202bd130350c30f9b088", "patch": "@@ -1,3 +1,8 @@\n+2004-05-29  Jason Merrill  <jason@redhat.com>\n+\n+\t* gimplify.c (gimplify_expr): Don't build a statement list\n+\tif no gimplification was necessary.\n+\n 2004-05-29  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* pretty-print.c (pp_base_format_text): Support %< instead of %`"}, {"sha": "e40052c79384cdb3399a0d89611db084cc8313ca", "filename": "gcc/gimplify.c", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be00f578ec251393182c202bd130350c30f9b088/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be00f578ec251393182c202bd130350c30f9b088/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=be00f578ec251393182c202bd130350c30f9b088", "patch": "@@ -202,6 +202,9 @@ append_to_statement_list_1 (tree t, tree *list_p, bool side_effects)\n   tree list = *list_p;\n   tree_stmt_iterator i;\n \n+  if (!side_effects)\n+    return;\n+\n   if (!list)\n     {\n       if (t && TREE_CODE (t) == STATEMENT_LIST)\n@@ -212,9 +215,6 @@ append_to_statement_list_1 (tree t, tree *list_p, bool side_effects)\n       *list_p = list = alloc_stmt_list ();\n     }\n \n-  if (!side_effects)\n-    return;\n-\n   i = tsi_last (list);\n   tsi_link_after (&i, t, TSI_CONTINUE_LINKING);\n }\n@@ -3023,7 +3023,7 @@ gimplify_target_expr (tree *expr_p, tree *pre_p, tree *post_p)\n /* Gimplification of expression trees.  */\n \n /* Gimplify an expression which appears at statement context; usually, this\n-   means replacing it with a suitably gimple COMPOUND_EXPR.  */\n+   means replacing it with a suitably gimple STATEMENT_LIST.  */\n \n void\n gimplify_stmt (tree *stmt_p)\n@@ -3042,7 +3042,7 @@ gimplify_to_stmt_list (tree *stmt_p)\n   if (TREE_CODE (*stmt_p) != STATEMENT_LIST)\n     {\n       tree t = *stmt_p;\n-      *stmt_p = NULL;\n+      *stmt_p = alloc_stmt_list ();\n       append_to_statement_list (t, stmt_p);\n     }\n }\n@@ -3526,10 +3526,13 @@ gimplify_expr (tree *expr_p, tree *pre_p, tree *post_p,\n      gimplified form.  */\n   if (is_statement)\n     {\n-      append_to_statement_list (*expr_p, &internal_pre);\n-      append_to_statement_list (internal_post, &internal_pre);\n-      annotate_all_with_locus (&internal_pre, input_location);\n-      *expr_p = internal_pre;\n+      if (internal_pre || internal_post)\n+\t{\n+\t  append_to_statement_list (*expr_p, &internal_pre);\n+\t  append_to_statement_list (internal_post, &internal_pre);\n+\t  annotate_all_with_locus (&internal_pre, input_location);\n+\t  *expr_p = internal_pre;\n+\t}\n       goto out;\n     }\n \n@@ -3725,7 +3728,7 @@ gimplify_body (tree *body_p, tree fndecl)\n       tree b = build (BIND_EXPR, void_type_node, NULL_TREE,\n \t\t      NULL_TREE, NULL_TREE);\n       TREE_SIDE_EFFECTS (b) = 1;\n-      append_to_statement_list (body, &BIND_EXPR_BODY (b));\n+      append_to_statement_list_force (body, &BIND_EXPR_BODY (b));\n       body = b;\n     }\n   *body_p = body;"}]}