{"sha": "8a6f81295284e06536a40f7feaaf9bbe1606dcb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGE2ZjgxMjk1Mjg0ZTA2NTM2YTQwZjdmZWFhZjliYmUxNjA2ZGNiMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-12-06T21:26:31Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-12-06T21:26:31Z"}, "message": "(expand_binop): Correct sign of complex quotient imagpart.\n\nFrom-SVN: r2843", "tree": {"sha": "ac6d8d8c0ae183c6afc10499684a3eb40832ec01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac6d8d8c0ae183c6afc10499684a3eb40832ec01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a6f81295284e06536a40f7feaaf9bbe1606dcb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a6f81295284e06536a40f7feaaf9bbe1606dcb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a6f81295284e06536a40f7feaaf9bbe1606dcb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a6f81295284e06536a40f7feaaf9bbe1606dcb3/comments", "author": null, "committer": null, "parents": [{"sha": "67aac05d147f6abfbcf5d916b76a34f684d37edc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67aac05d147f6abfbcf5d916b76a34f684d37edc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67aac05d147f6abfbcf5d916b76a34f684d37edc"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "eed7befb8dccdc28d48358a0b9c341bd4d8cd936", "filename": "gcc/optabs.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a6f81295284e06536a40f7feaaf9bbe1606dcb3/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a6f81295284e06536a40f7feaaf9bbe1606dcb3/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=8a6f81295284e06536a40f7feaaf9bbe1606dcb3", "patch": "@@ -969,17 +969,17 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n \t      if (res != imagr)\n \t\temit_move_insn (imagr, res);\n \t    }\n-\t  else\t\t\t/* Divider is of complex type */\n+\t  else\t\t\t/* Divisor is of complex type */\n \t    {\t\t\t/* X/(a+ib) */\n \n-\t      rtx divider;\n+\t      rtx divisor;\n \t      rtx real_t;\n \t      rtx imag_t;\n \t      \n \t      optab mulopt = unsignedp ? umul_widen_optab : smul_optab;\n \n-\t      /* Divider: a*a + b*b */\n-\t      divider = expand_binop (submode, add_optab,\n+\t      /* Divisor: c*c + d*d */\n+\t      divisor = expand_binop (submode, add_optab,\n \t\t\t\t      expand_binop (submode, mulopt,\n \t\t\t\t\t\t    real1, real1,\n \t\t\t\t\t\t    0, unsignedp, methods),\n@@ -988,9 +988,9 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n \t\t\t\t\t\t    0, unsignedp, methods),\n \t\t\t\t      0, unsignedp, methods);\n \n-\t      if (! imag0)\t/* ((c)(a-ib))/divider */\n-\t\t{\n-\t\t  /* Calculate the divident */\n+\t      if (! imag0)\t/* ((a)(c-id))/divisor */\n+\t\t{\t/* (a+i0) / (c+id) = (ac/(cc+dd)) + i(-ad/(cc+dd)) */\n+\t\t  /* Calculate the dividend */\n \t\t  real_t = expand_binop (submode, mulopt, real0, real1,\n \t\t\t\t\t 0, unsignedp, methods);\n \t\t  \n@@ -1000,9 +1000,9 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n \t\t\t\t\t\t 0, unsignedp, methods),\n \t\t\t\t   0, unsignedp);\n \t\t}\n-\t      else\t\t/* ((c+id)(a-ib))/divider */\n+\t      else\t\t/* ((a+ib)(c-id))/divider */\n \t\t{\n-\t\t  /* Calculate the divident */\n+\t\t  /* Calculate the dividend */\n \t\t  real_t = expand_binop (submode, add_optab,\n \t\t\t\t\t expand_binop (submode, mulopt,\n \t\t\t\t\t\t       real0, real1,\n@@ -1014,21 +1014,21 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n \t\t  \n \t\t  imag_t = expand_binop (submode, sub_optab,\n \t\t\t\t\t expand_binop (submode, mulopt,\n-\t\t\t\t\t\t       real0, imag1,\n+\t\t\t\t\t\t       imag0, real1,\n \t\t\t\t\t\t       0, unsignedp, methods),\n \t\t\t\t\t expand_binop (submode, mulopt,\n-\t\t\t\t\t\t       real1, imag0,\n+\t\t\t\t\t\t       real0, imag1,\n \t\t\t\t\t\t       0, unsignedp, methods),\n \t\t\t\t\t 0, unsignedp, methods);\n \n \t\t}\n \n-\t      res = expand_binop (submode, binoptab, real_t, divider,\n+\t      res = expand_binop (submode, binoptab, real_t, divisor,\n \t\t\t\t  realr, unsignedp, methods);\n \t      if (res != realr)\n \t\temit_move_insn (realr, res);\n \n-\t      res = expand_binop (submode, binoptab, imag_t, divider,\n+\t      res = expand_binop (submode, binoptab, imag_t, divisor,\n \t\t\t\t  imagr, unsignedp, methods);\n \t      if (res != imagr)\n \t\temit_move_insn (imagr, res);"}]}