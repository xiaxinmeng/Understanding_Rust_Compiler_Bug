{"sha": "a8e237782fe24e86b8f166454a0441e05d492631", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThlMjM3NzgyZmUyNGU4NmI4ZjE2NjQ1NGEwNDQxZTA1ZDQ5MjYzMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-11-17T16:34:59Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-11-17T16:34:59Z"}, "message": "re PR c++/51137 ([C++0x] [4.7 Regression] ICE with -std=c++0x and virtual inheritance)\n\n\tPR c++/51137\n\t* class.c (build_base_path): Don't do calculation in templates.\n\nFrom-SVN: r181444", "tree": {"sha": "03d895e8c25b621baca604f09ef4088bcc638668", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03d895e8c25b621baca604f09ef4088bcc638668"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8e237782fe24e86b8f166454a0441e05d492631", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8e237782fe24e86b8f166454a0441e05d492631", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8e237782fe24e86b8f166454a0441e05d492631", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8e237782fe24e86b8f166454a0441e05d492631/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f14c43566a1fc02c036396baec3c04f27817899f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f14c43566a1fc02c036396baec3c04f27817899f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f14c43566a1fc02c036396baec3c04f27817899f"}], "stats": {"total": 35, "additions": 28, "deletions": 7}, "files": [{"sha": "3807f9a907a4d1c0f329da64bafa272b62dc5240", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8e237782fe24e86b8f166454a0441e05d492631/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8e237782fe24e86b8f166454a0441e05d492631/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a8e237782fe24e86b8f166454a0441e05d492631", "patch": "@@ -1,3 +1,8 @@\n+2011-11-17  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/51137\n+\t* class.c (build_base_path): Don't do calculation in templates.\n+\n 2011-11-15  Torvald Riegel  <triegel@redhat.com>\n \n \t* parser.c (cp_parser_transaction_expression): Require parentheses"}, {"sha": "0765817aed3fd35ea3d7c61f709477070ac4ec6a", "filename": "gcc/cp/class.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8e237782fe24e86b8f166454a0441e05d492631/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8e237782fe24e86b8f166454a0441e05d492631/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=a8e237782fe24e86b8f166454a0441e05d492631", "patch": "@@ -304,8 +304,13 @@ build_base_path (enum tree_code code,\n   virtual_access = (v_binfo && fixed_type_p <= 0);\n \n   /* Don't bother with the calculations inside sizeof; they'll ICE if the\n-     source type is incomplete and the pointer value doesn't matter.  */\n-  if (cp_unevaluated_operand != 0)\n+     source type is incomplete and the pointer value doesn't matter.  In a\n+     template (even in fold_non_dependent_expr), we don't have vtables set\n+     up properly yet, and the value doesn't matter there either; we're just\n+     interested in the result of overload resolution.  */\n+  if (cp_unevaluated_operand != 0\n+      || (current_function_decl\n+\t  && uses_template_parms (current_function_decl)))\n     {\n       expr = build_nop (ptr_target_type, expr);\n       if (!want_pointer)\n@@ -359,11 +364,6 @@ build_base_path (enum tree_code code,\n \t V_BINFO.  That offset is an entry in D_BINFO's vtable.  */\n       tree v_offset;\n \n-      /* In a constructor template, current_in_charge_parm isn't set,\n-\t and we might end up here via fold_non_dependent_expr.  */\n-      if (fixed_type_p < 0 && !(cfun && current_in_charge_parm))\n-\tfixed_type_p = 0;\n-\n       if (fixed_type_p < 0 && in_base_initializer)\n \t{\n \t  /* In a base member initializer, we cannot rely on the"}, {"sha": "0aaaaaf7ed3f674dac4c6e0df658513fb84852cd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8e237782fe24e86b8f166454a0441e05d492631/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8e237782fe24e86b8f166454a0441e05d492631/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a8e237782fe24e86b8f166454a0441e05d492631", "patch": "@@ -1,3 +1,8 @@\n+2011-11-17  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/51137\n+\t* g++.dg/template/virtual2.C: New.\n+\n 2011-11-17  Michael Matz  <matz@suse.de>\n \n \tPR middle-end/50644"}, {"sha": "83b7ed6beaead0b3781633627aef82c36e0794a7", "filename": "gcc/testsuite/g++.dg/template/virtual2.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8e237782fe24e86b8f166454a0441e05d492631/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fvirtual2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8e237782fe24e86b8f166454a0441e05d492631/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fvirtual2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fvirtual2.C?ref=a8e237782fe24e86b8f166454a0441e05d492631", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/51137\n+\n+struct A {};\n+\n+template<int> struct B : virtual A\n+{\n+  void foo()\n+  {\n+    (new A(*this))->A::~A();\n+  }\n+};"}]}