{"sha": "8d82b242392ea51ccdf17f4a2059425370c00b2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQ4MmIyNDIzOTJlYTUxY2NkZjE3ZjRhMjA1OTQyNTM3MGMwMGIyYQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2008-06-07T18:53:07Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2008-06-07T18:53:07Z"}, "message": "re PR fortran/36437 (Simplify argument to [c_]sizeof)\n\n2008-06-04  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/36437\n        * intrinsic.c (add_functions): Implement c_sizeof.\n        * trans-intrinsic.c (gfc_conv_intrinsic_sizeof): Do not\n        create unneeded variable in the scalar case.\n\n2008-06-04  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/36437\n        * gfortran.dg/c_sizeof_1.f90: New.\n        * gfortran.dg/c_sizeof_2.f90: New.\n\nFrom-SVN: r136536", "tree": {"sha": "8011d5b8270016bab53792cc7f926919d2a8d86a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8011d5b8270016bab53792cc7f926919d2a8d86a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d82b242392ea51ccdf17f4a2059425370c00b2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d82b242392ea51ccdf17f4a2059425370c00b2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d82b242392ea51ccdf17f4a2059425370c00b2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d82b242392ea51ccdf17f4a2059425370c00b2a/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd985f6672bb3c399c03118a7a2426e2210c690a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd985f6672bb3c399c03118a7a2426e2210c690a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd985f6672bb3c399c03118a7a2426e2210c690a"}], "stats": {"total": 131, "additions": 123, "deletions": 8}, "files": [{"sha": "a4c2fbf78e57044dbfaf8bc4f36e82dfb4f273ab", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d82b242392ea51ccdf17f4a2059425370c00b2a/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d82b242392ea51ccdf17f4a2059425370c00b2a/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8d82b242392ea51ccdf17f4a2059425370c00b2a", "patch": "@@ -1,3 +1,10 @@\n+2008-06-07  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* intrinsic.c (add_functions): Implement c_sizeof.\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_sizeof): Do not\n+\tcreate unneeded variable in the scalar case.\n+\t* intrinsic.texi: Add C_SIZEOF documentation.\n+\n 2008-06-06  Tobias Burnus  <burnus@net-b.de>\n \n \t* intrinsic.texi (BESSEL_J1): Fix BES(S)EL_J1 typo."}, {"sha": "ebec5765ee52371fd113555b2618c3f8beb3e49d", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d82b242392ea51ccdf17f4a2059425370c00b2a/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d82b242392ea51ccdf17f4a2059425370c00b2a/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=8d82b242392ea51ccdf17f4a2059425370c00b2a", "patch": "@@ -2257,9 +2257,10 @@ add_functions (void)\n \n   add_sym_1 (\"sizeof\", GFC_ISYM_SIZEOF, NO_CLASS, ACTUAL_NO, BT_INTEGER, ii,\n \t     GFC_STD_GNU, gfc_check_sizeof, NULL, NULL,\n-\t     i, BT_UNKNOWN, 0, REQUIRED);\n+\t     x, BT_UNKNOWN, 0, REQUIRED);\n \n   make_generic (\"sizeof\", GFC_ISYM_SIZEOF, GFC_STD_GNU);\n+  make_alias (\"c_sizeof\", GFC_STD_F2008);\n \n   add_sym_1 (\"spacing\", GFC_ISYM_SPACING, CLASS_ELEMENTAL, ACTUAL_NO, BT_REAL, dr, GFC_STD_F95,\n \t     gfc_check_x, gfc_simplify_spacing, gfc_resolve_spacing,"}, {"sha": "ee358501bed8629052f9e051bcb672a99dec180f", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d82b242392ea51ccdf17f4a2059425370c00b2a/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d82b242392ea51ccdf17f4a2059425370c00b2a/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=8d82b242392ea51ccdf17f4a2059425370c00b2a", "patch": "@@ -75,6 +75,7 @@ Some basic guidelines for editing this document:\n * @code{C_F_PROCPOINTER}: C_F_PROCPOINTER, Convert C into Fortran procedure pointer\n * @code{C_FUNLOC}:      C_FUNLOC,  Obtain the C address of a procedure\n * @code{C_LOC}:         C_LOC,     Obtain the C address of an object\n+* @code{C_SIZEOF}:      C_SIZEOF,  Size in bytes of an expression\n * @code{CEILING}:       CEILING,   Integer ceiling function\n * @code{CHAR}:          CHAR,      Integer-to-character conversion function\n * @code{CHDIR}:         CHDIR,     Change working directory\n@@ -2139,6 +2140,56 @@ end subroutine association_test\n @end table\n \n \n+@node C_SIZEOF\n+@section @code{C_SIZEOF} --- Size in bytes of an expression\n+@fnindex C_SIZEOF\n+@cindex expression size\n+@cindex size of an expression\n+\n+@table @asis\n+@item @emph{Description}:\n+@code{C_SIZEOF(X)} calculates the number of bytes of storage the\n+expression @code{X} occupies.\n+\n+@item @emph{Standard}:\n+Fortran 2008\n+\n+@item @emph{Class}:\n+Intrinsic function\n+\n+@item @emph{Syntax}:\n+@code{N = C_SIZEOF(X)}\n+\n+@item @emph{Arguments}:\n+@multitable @columnfractions .15 .70\n+@item @var{X} @tab The argument shall be of any type, rank or shape.\n+@end multitable\n+\n+@item @emph{Return value}:\n+The return value is of type integer and of the system-dependent kind\n+@var{C_SIZE_T} (from the @var{ISO_C_BINDING} module). Its value is the\n+number of bytes occupied by the argument.  If the argument has the\n+@code{POINTER} attribute, the number of bytes of the storage area pointed\n+to is returned.  If the argument is of a derived type with @code{POINTER}\n+or @code{ALLOCATABLE} components, the return value doesn't account for\n+the sizes of the data pointed to by these components.\n+\n+@item @emph{Example}:\n+@smallexample\n+   use iso_c_binding\n+   integer(c_int) :: i\n+   real(c_float) :: r, s(5)\n+   print *, (c_sizeof(s)/c_sizeof(r) == 5)\n+   end\n+@end smallexample\n+The example will print @code{.TRUE.} unless you are using a platform\n+where default @code{REAL} variables are unusually padded.\n+\n+@item @emph{See also}:\n+@ref{SIZEOF}\n+@end table\n+\n+\n @node CEILING\n @section @code{CEILING} --- Integer ceiling function\n @fnindex CEILING\n@@ -9870,8 +9921,12 @@ the sizes of the data pointed to by these components.\n @end smallexample\n The example will print @code{.TRUE.} unless you are using a platform\n where default @code{REAL} variables are unusually padded.\n+\n+@item @emph{See also}:\n+@ref{C_SIZEOF}\n @end table\n \n+\n @node SLEEP\n @section @code{SLEEP} --- Sleep for the specified number of seconds\n @fnindex SLEEP"}, {"sha": "f12239330809fde887fbdea24d3c0db7112a1275", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d82b242392ea51ccdf17f4a2059425370c00b2a/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d82b242392ea51ccdf17f4a2059425370c00b2a/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=8d82b242392ea51ccdf17f4a2059425370c00b2a", "patch": "@@ -3265,8 +3265,6 @@ gfc_conv_intrinsic_sizeof (gfc_se *se, gfc_expr *expr)\n   gfc_init_se (&argse, NULL);\n   ss = gfc_walk_expr (arg);\n \n-  source_bytes = gfc_create_var (gfc_array_index_type, \"bytes\");\n-\n   if (ss == gfc_ss_terminator)\n     {\n       gfc_conv_expr_reference (&argse, arg);\n@@ -3276,14 +3274,14 @@ gfc_conv_intrinsic_sizeof (gfc_se *se, gfc_expr *expr)\n \n       /* Obtain the source word length.  */\n       if (arg->ts.type == BT_CHARACTER)\n-\tsource_bytes = size_of_string_in_bytes (arg->ts.kind,\n-\t\t\t\t\t\targse.string_length);\n+\tse->expr = size_of_string_in_bytes (arg->ts.kind,\n+\t\t\t\t\t    argse.string_length);\n       else\n-\tsource_bytes = fold_convert (gfc_array_index_type,\n-\t\t\t\t     size_in_bytes (type)); \n+\tse->expr = fold_convert (gfc_array_index_type, size_in_bytes (type)); \n     }\n   else\n     {\n+      source_bytes = gfc_create_var (gfc_array_index_type, \"bytes\");\n       argse.want_pointer = 0;\n       gfc_conv_expr_descriptor (&argse, arg, ss);\n       source = gfc_conv_descriptor_data_get (argse.expr);\n@@ -3312,10 +3310,10 @@ gfc_conv_intrinsic_sizeof (gfc_se *se, gfc_expr *expr)\n \t\t\t     tmp, source_bytes);\n \t  gfc_add_modify_expr (&argse.pre, source_bytes, tmp);\n \t}\n+      se->expr = source_bytes;\n     }\n \n   gfc_add_block_to_block (&se->pre, &argse.pre);\n-  se->expr = source_bytes;\n }\n \n "}, {"sha": "2725962bf4989243f230f3f71c98d8ccd1576a20", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d82b242392ea51ccdf17f4a2059425370c00b2a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d82b242392ea51ccdf17f4a2059425370c00b2a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8d82b242392ea51ccdf17f4a2059425370c00b2a", "patch": "@@ -1,3 +1,8 @@\n+2008-06-07  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gfortran.dg/c_sizeof_1.f90: New.\n+\t* gfortran.dg/c_sizeof_2.f90: New.\n+\n 2008-06-07  Joseph Myers  <joseph@codesourcery.com>\n \n \t* g++.dg/abi/arm_cxa_vec1.C: Don't handle xscale*-*-*."}, {"sha": "f2a5caf68647f6a91cd6b7ee112d1d760f97b59a", "filename": "gcc/testsuite/gfortran.dg/c_sizeof_1.f90", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d82b242392ea51ccdf17f4a2059425370c00b2a/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_sizeof_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d82b242392ea51ccdf17f4a2059425370c00b2a/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_sizeof_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_sizeof_1.f90?ref=8d82b242392ea51ccdf17f4a2059425370c00b2a", "patch": "@@ -0,0 +1,40 @@\n+! { dg-do run }\n+! Support F2008's c_sizeof()\n+!\n+integer(4) :: i, j(10)\n+character(4),parameter :: str(1) = \"abcd\"\n+\n+! Using F2008's C_SIZEOF\n+i = c_sizeof(i)\n+if (i /= 4) call abort()\n+\n+i = c_sizeof(j)\n+if (i /= 40) call abort()\n+\n+i = c_sizeof(str)\n+if (i /= 4) call abort()\n+\n+i = c_sizeof(str(1))\n+if (i /= 4) call abort()\n+\n+i = c_sizeof(str(1)(1:3))\n+print *, i\n+if (i /= 3) call abort()\n+\n+! Using GNU's SIZEOF\n+i = sizeof(i)\n+if (i /= 4) call abort()\n+\n+i = sizeof(j)\n+if (i /= 40) call abort()\n+\n+i = sizeof(str)\n+if (i /= 4) call abort()\n+\n+i = sizeof(str(1))\n+if (i /= 4) call abort()\n+\n+i = sizeof(str(1)(1:3))\n+if (i /= 3) call abort()\n+end\n+"}, {"sha": "f6c3077f83ddd0ec1fb7a1d9a5fa0938477775d6", "filename": "gcc/testsuite/gfortran.dg/c_sizeof_2.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d82b242392ea51ccdf17f4a2059425370c00b2a/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_sizeof_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d82b242392ea51ccdf17f4a2059425370c00b2a/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_sizeof_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_sizeof_2.f90?ref=8d82b242392ea51ccdf17f4a2059425370c00b2a", "patch": "@@ -0,0 +1,9 @@\n+! { dg-do compile }\n+! { dg-options \"-std=f2003 -Wall\" }\n+! Support F2008's c_sizeof()\n+!\n+integer(4) :: i, j(10)\n+i = c_sizeof(i) ! { dg-error \"not included in the selected standard\" }\n+i = c_sizeof(j) ! { dg-error \"not included in the selected standard\" }\n+end\n+"}]}