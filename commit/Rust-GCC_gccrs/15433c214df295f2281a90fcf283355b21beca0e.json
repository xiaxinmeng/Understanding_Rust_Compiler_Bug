{"sha": "15433c214df295f2281a90fcf283355b21beca0e", "node_id": "C_kwDOANBUbNoAKDE1NDMzYzIxNGRmMjk1ZjIyODFhOTBmY2YyODMzNTViMjFiZWNhMGU", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2022-08-30T16:50:35Z"}, "committer": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2022-08-30T16:56:07Z"}, "message": "vec: Add array_slice constructors from non-const and gc vectors\n\nThis patch adds constructors of array_slice that are required to\ncreate them from non-const (heap or auto) vectors or from GC vectors.\n\ngcc/ChangeLog:\n\n2022-08-08  Martin Jambor  <mjambor@suse.cz>\n\n\t* vec.h (array_slice): Add constructors for non-const reference to\n\theap vector and pointers to heap vectors.", "tree": {"sha": "fb40fddf0abf7af260bae9bffd97368affa88f4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb40fddf0abf7af260bae9bffd97368affa88f4e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15433c214df295f2281a90fcf283355b21beca0e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE5elVTFt/d09Vsoczv2PBvD+kNUAFAmMOQScACgkQv2PBvD+k\nNUDDWA/9Gczmssyyjno5BOi4aeKBXGPUP4kXh0MqEWtvfXZb/jlmSrjFOcThj1ew\nAg7TTFjGO9+ubFtaXW84NLeeCq8vvlTJuVnLdFynkhFFqtp6aw0u3IpFK2CjX4Dq\naKF+1yFrWcpSUFsFXgqVK3YoIdsDietGQI3pE8+klHwu+2/WD0O5Ax7dc0snDTI9\noo2U0Wg1EWprcYnNsKxBt/jk8PH7s0BiQ6tOB8tvjzBvPqRo+395THLxL7XjMsYX\njOZmmt2O3RaPs+A/zd4+lx6PTvucUV8AOOgNUBegbYMHIRkXLSkNAgeoQEkB2T29\nTnev+lYaapIbPRaKlGyGa7fKmP434gG2p/6Q++oK+FlSadgjZqIRdq85qtq9zKAr\ns9/RpO2wLLknTpbDNd1+dmVjc8JEn4oiYsTC20g1Fmqu97l99O2vZ0hhHmto+9Wx\nw6hVUe+YDGXAYG+aqY4TjmQM/NKwf2Q+0CWxylYoqomhvxoGp5fuVrSx/UQfJRm5\nBRdAZyS8P7eBPF4p0e/7gruTJDrYF0uU9lKdrReI0+pG55JXaNXVIafxOgCu2ODW\nVO2ec6mRUnyQPuwhkosi2tMYPyaAXkblrsPdi/SkumYrGP2oSTJ4axvGOhPYNkoQ\nwAjoIYvJRZmHl25NaM8Ew56Q7afM5BWudcvHWlW97XtwWNXnB3Q=\n=mnh3\n-----END PGP SIGNATURE-----", "payload": "tree fb40fddf0abf7af260bae9bffd97368affa88f4e\nparent 75f59441cd63a1d07e86d70d59c518049f53904f\nauthor Martin Jambor <mjambor@suse.cz> 1661878235 +0200\ncommitter Martin Jambor <mjambor@suse.cz> 1661878567 +0200\n\nvec: Add array_slice constructors from non-const and gc vectors\n\nThis patch adds constructors of array_slice that are required to\ncreate them from non-const (heap or auto) vectors or from GC vectors.\n\ngcc/ChangeLog:\n\n2022-08-08  Martin Jambor  <mjambor@suse.cz>\n\n\t* vec.h (array_slice): Add constructors for non-const reference to\n\theap vector and pointers to heap vectors.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15433c214df295f2281a90fcf283355b21beca0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15433c214df295f2281a90fcf283355b21beca0e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15433c214df295f2281a90fcf283355b21beca0e/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75f59441cd63a1d07e86d70d59c518049f53904f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75f59441cd63a1d07e86d70d59c518049f53904f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75f59441cd63a1d07e86d70d59c518049f53904f"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "1abe777baebb50b8f1caaae42a71ecc1f4953577", "filename": "gcc/vec.h", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15433c214df295f2281a90fcf283355b21beca0e/gcc%2Fvec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15433c214df295f2281a90fcf283355b21beca0e/gcc%2Fvec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvec.h?ref=15433c214df295f2281a90fcf283355b21beca0e", "patch": "@@ -2267,6 +2267,18 @@ class array_slice\n   array_slice (const vec<OtherT> &v)\n     : m_base (v.address ()), m_size (v.length ()) {}\n \n+  template<typename OtherT>\n+  array_slice (vec<OtherT> &v)\n+    : m_base (v.address ()), m_size (v.length ()) {}\n+\n+  template<typename OtherT>\n+  array_slice (const vec<OtherT, va_gc> *v)\n+    : m_base (v ? v->address () : nullptr), m_size (v ? v->length () : 0) {}\n+\n+  template<typename OtherT>\n+  array_slice (vec<OtherT, va_gc> *v)\n+    : m_base (v ? v->address () : nullptr), m_size (v ? v->length () : 0) {}\n+\n   iterator begin () { return m_base; }\n   iterator end () { return m_base + m_size; }\n "}]}