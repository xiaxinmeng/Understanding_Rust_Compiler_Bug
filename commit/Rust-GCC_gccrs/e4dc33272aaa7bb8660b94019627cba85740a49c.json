{"sha": "e4dc33272aaa7bb8660b94019627cba85740a49c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRkYzMzMjcyYWFhN2JiODY2MGI5NDAxOTYyN2NiYTg1NzQwYTQ5Yw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-02-20T11:57:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-02-20T11:57:55Z"}, "message": "[multiple changes]\n\n2015-02-20  Gary Dismukes  <dismukes@adacore.com>\n\n\t* sem_res.adb: Minor reformatting.\n\n2015-02-20  Vincent Celier  <celier@adacore.com>\n\n\t* switch-c.adb (Scan_Front_End_Switches): When comparing runtime\n\tpath name for several switches --RTS, use the normalized path\n\tnames.\n\n2015-02-20  Vincent Celier  <celier@adacore.com>\n\n\t* bindgen.adb: Minor reformatting and code reorganization.\n\n2015-02-20  Jose Ruiz  <ruiz@adacore.com>\n\n\t* a-stcoed.ads: Add spec for this package (Unimplemented_Unit).\n\t* impunit.adb (Non_Imp_File_Names_12): Mark unit a-stcoed.ads as\n\tdefined by Ada 2012.\n\nFrom-SVN: r220853", "tree": {"sha": "06043834a9b94039c853a17d0a8ccbb091f3d5e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06043834a9b94039c853a17d0a8ccbb091f3d5e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4dc33272aaa7bb8660b94019627cba85740a49c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4dc33272aaa7bb8660b94019627cba85740a49c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4dc33272aaa7bb8660b94019627cba85740a49c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4dc33272aaa7bb8660b94019627cba85740a49c/comments", "author": null, "committer": null, "parents": [{"sha": "5ae7c3cf2e21534dda6af57c5c34318d30d0c98a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ae7c3cf2e21534dda6af57c5c34318d30d0c98a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ae7c3cf2e21534dda6af57c5c34318d30d0c98a"}], "stats": {"total": 100, "additions": 79, "deletions": 21}, "files": [{"sha": "c277bb877f7499410e17dca59f79f0e971bcf05c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4dc33272aaa7bb8660b94019627cba85740a49c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4dc33272aaa7bb8660b94019627cba85740a49c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e4dc33272aaa7bb8660b94019627cba85740a49c", "patch": "@@ -1,3 +1,23 @@\n+2015-02-20  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* sem_res.adb: Minor reformatting.\n+\n+2015-02-20  Vincent Celier  <celier@adacore.com>\n+\n+\t* switch-c.adb (Scan_Front_End_Switches): When comparing runtime\n+\tpath name for several switches --RTS, use the normalized path\n+\tnames.\n+\n+2015-02-20  Vincent Celier  <celier@adacore.com>\n+\n+\t* bindgen.adb: Minor reformatting and code reorganization.\n+\n+2015-02-20  Jose Ruiz  <ruiz@adacore.com>\n+\n+\t* a-stcoed.ads: Add spec for this package (Unimplemented_Unit).\n+\t* impunit.adb (Non_Imp_File_Names_12): Mark unit a-stcoed.ads as\n+\tdefined by Ada 2012.\n+\n 2015-02-20  Arnaud Charlet  <charlet@adacore.com>\n \n \t* sysdep.c, expect.c, s-oscons-tmplt.c, gsocket.h, adaint.c: Remove"}, {"sha": "a6436ff10c9f4a92ec12179e034deeb3b7a0161a", "filename": "gcc/ada/a-stcoed.ads", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4dc33272aaa7bb8660b94019627cba85740a49c/gcc%2Fada%2Fa-stcoed.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4dc33272aaa7bb8660b94019627cba85740a49c/gcc%2Fada%2Fa-stcoed.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stcoed.ads?ref=e4dc33272aaa7bb8660b94019627cba85740a49c", "patch": "@@ -0,0 +1,31 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT RUN-TIME COMPONENTS                         --\n+--                                                                          --\n+--      A D A . S Y N C H R O N O U S _ T A S K _ C O N T R O L . E D F     --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT.  In accordance with the copyright of that document, you can freely --\n+-- copy and modify this specification,  provided that if you redistribute a --\n+-- modified version,  any changes that you have made are clearly indicated. --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This unit is not implemented in typical GNAT implementations that lie on\n+--  top of operating systems, because it is infeasible to implement in such\n+--  environments.\n+\n+--  If a target environment provides appropriate support for this package,\n+--  then the Unimplemented_Unit pragma should be removed from this spec and\n+--  an appropriate body provided.\n+\n+package Ada.Synchronous_Task_Control.EDF is\n+\n+   pragma Unimplemented_Unit;\n+\n+   procedure Suspend_Until_True_And_Set_Deadline\n+      (S  : in out Suspension_Object;\n+       TS :        Ada.Real_Time.Time_Span);\n+end Ada.Synchronous_Task_Control.EDF;"}, {"sha": "b3589d4f8e42298a675dd7e8d9496ea0750b7c10", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4dc33272aaa7bb8660b94019627cba85740a49c/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4dc33272aaa7bb8660b94019627cba85740a49c/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=e4dc33272aaa7bb8660b94019627cba85740a49c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1992,6 +1992,21 @@ package body Bindgen is\n          end loop;\n       end if;\n \n+      if not (Opt.No_Run_Time_Mode or Opt.No_Stdlib) then\n+         Name_Len := 0;\n+\n+         if Opt.Shared_Libgnat then\n+            Add_Str_To_Name_Buffer (\"-shared\");\n+         else\n+            Add_Str_To_Name_Buffer (\"-static\");\n+         end if;\n+\n+         --  Write directly to avoid inclusion in -K output as -static and\n+         --  -shared are not usually specified linker options.\n+\n+         WBI (\"   --   \" & Name_Buffer (1 .. Name_Len));\n+      end if;\n+\n       --  Sort linker options\n \n       --  This sort accomplishes two important purposes:\n@@ -2050,18 +2065,6 @@ package body Bindgen is\n       --  linking (not clear if this is still the case, but it is harmless).\n \n       if not (Opt.No_Run_Time_Mode or else Opt.No_Stdlib) then\n-         Name_Len := 0;\n-\n-         if Opt.Shared_Libgnat then\n-            Add_Str_To_Name_Buffer (\"-shared\");\n-         else\n-            Add_Str_To_Name_Buffer (\"-static\");\n-         end if;\n-\n-         --  Write directly to avoid -K output (why???)\n-\n-         WBI (\"   --   \" & Name_Buffer (1 .. Name_Len));\n-\n          if With_GNARL then\n             Name_Len := 0;\n \n@@ -2923,7 +2926,7 @@ package body Bindgen is\n          end if;\n       end Check_Package;\n \n-   --  Start of processing for Check_Package\n+   --  Start of processing for Resolve_Binder_Options\n \n    begin\n       for E in Elab_Order.First .. Elab_Order.Last loop"}, {"sha": "d59704f500aa31963b1cc8ebf66ac9a2c08c6fd4", "filename": "gcc/ada/impunit.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4dc33272aaa7bb8660b94019627cba85740a49c/gcc%2Fada%2Fimpunit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4dc33272aaa7bb8660b94019627cba85740a49c/gcc%2Fada%2Fimpunit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fimpunit.adb?ref=e4dc33272aaa7bb8660b94019627cba85740a49c", "patch": "@@ -575,6 +575,7 @@ package body Impunit is\n     (\"a-extiin\", T),  -- Ada.Execution_Time.Interrupts\n     (\"a-iteint\", T),  -- Ada.Iterator_Interfaces\n     (\"a-locale\", T),  -- Ada.Locales\n+    (\"a-stcoed\", T),  -- Ada.Synchronous_Task_Control.EDF\n     (\"a-synbar\", T),  -- Ada.Synchronous_Barriers\n     (\"a-undesu\", T),  -- Ada.Unchecked_Deallocate_Subpool\n "}, {"sha": "de6cef94d768c10b3563e98dc240d13a59306448", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4dc33272aaa7bb8660b94019627cba85740a49c/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4dc33272aaa7bb8660b94019627cba85740a49c/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=e4dc33272aaa7bb8660b94019627cba85740a49c", "patch": "@@ -10714,9 +10714,9 @@ package body Sem_Res is\n             Target : Entity_Id := Target_Typ;\n \n          begin\n-            --  If the type of the operand is a limited view, use the non-\n-            --  limited view when available. If it is a class-wide type,\n-            --  recover class_wide type of the non-limited view.\n+            --  If the type of the operand is a limited view, use nonlimited\n+            --  view when available. If it is a class-wide type, recover the\n+            --  class-wide type of the nonlimited view.\n \n             if From_Limited_With (Opnd) then\n                if Ekind (Opnd) in Incomplete_Kind\n@@ -11811,7 +11811,7 @@ package body Sem_Res is\n             return True;\n \n          --  If the operand is a class-wide type obtained through a limited_\n-         --  with clause, and the context includes the non-limited view, use\n+         --  with clause, and the context includes the nonlimited view, use\n          --  it to determine whether the conversion is legal.\n \n          elsif Is_Class_Wide_Type (Opnd_Type)\n@@ -12299,7 +12299,7 @@ package body Sem_Res is\n             end if;\n          end if;\n \n-         --  In the presence of limited_with clauses we have to use non-limited\n+         --  In the presence of limited_with clauses we have to use nonlimited\n          --  views, if available.\n \n          Check_Limited : declare"}, {"sha": "b431081ba508581199174fc72b5a6b632354a6d9", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4dc33272aaa7bb8660b94019627cba85740a49c/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4dc33272aaa7bb8660b94019627cba85740a49c/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=e4dc33272aaa7bb8660b94019627cba85740a49c", "patch": "@@ -214,7 +214,6 @@ package body Switch.C is\n             else\n                declare\n                   Runtime_Dir : String_Access;\n-\n                begin\n                   if System.OS_Lib.Is_Absolute_Path\n                        (Switch_Chars (Ptr + 4 .. Max))\n@@ -243,7 +242,11 @@ package body Switch.C is\n                   if RTS_Specified /= null then\n                      if RTS_Src_Path_Name = null\n                        or else RTS_Lib_Path_Name = null\n-                       or else RTS_Specified.all /= RTS_Lib_Path_Name.all\n+                       or else\n+                         System.OS_Lib.Normalize_Pathname\n+                           (RTS_Specified.all) /=\n+                         System.OS_Lib.Normalize_Pathname\n+                           (RTS_Lib_Path_Name.all)\n                      then\n                         Osint.Fail\n                           (\"--RTS cannot be specified multiple times\");"}]}