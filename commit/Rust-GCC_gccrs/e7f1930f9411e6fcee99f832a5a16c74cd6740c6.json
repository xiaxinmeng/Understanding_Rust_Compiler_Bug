{"sha": "e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdmMTkzMGY5NDExZTZmY2VlOTlmODMyYTVhMTZjNzRjZDY3NDBjNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2009-08-01T02:26:42Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2009-08-01T02:26:42Z"}, "message": "call.c (convert_class_to_reference): Binding an lvalue to an rvalue reference is bad.\n\n\t* call.c (convert_class_to_reference): Binding an lvalue to an\n\trvalue reference is bad.  If the user-defined conversion is bad,\n\tset bad_p before merging conversions.\n\t(maybe_handle_ref_bind): Don't push down bad_p.\n\t(reference_binding): Binding an lvalue to an rvalue reference is bad.\n\t(convert_like_real): Give a helpful error about binding lvalue\n\tto rvalue reference.\n\t(reference_related_p): No longer static.\n\t* typeck.c (build_typed_address): New.\n\t(build_static_cast_1): Add static_cast from lvalue to &&.\n\t* cp-tree.h: Adjust.\n\n\t* include/bits/move.h (forward): Implement as in N2835.\n\t(move): Implement as in N2831.\n\t* include/std/istream (rvalue stream operator>>): New.\n\t* include/std/ostream (rvalue stream operator<<): New.\n\nCo-Authored-By: Douglas Gregor <doug.gregor@gmail.com>\n\nFrom-SVN: r150327", "tree": {"sha": "835681f433a68776c98b51aa17db749656db573d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/835681f433a68776c98b51aa17db749656db573d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4c65085391c06df2a7b1acb4767e63aee6763d2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c65085391c06df2a7b1acb4767e63aee6763d2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c65085391c06df2a7b1acb4767e63aee6763d2c"}], "stats": {"total": 2236, "additions": 1920, "deletions": 316}, "files": [{"sha": "a7d26a5a378e98f437be85b5eef393bebe9e5eed", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -1,3 +1,19 @@\n+2009-07-31  Jason Merrill  <jason@redhat.com>\n+\t    Douglas Gregor  <doug.gregor@gmail.com>\n+\n+\tRemove implicit binding of lvalues to rvalue references (N2831)\n+\t* call.c (convert_class_to_reference): Binding an lvalue to an\n+\trvalue reference is bad.  If the user-defined conversion is bad,\n+\tset bad_p before merging conversions.\n+\t(maybe_handle_ref_bind): Don't push down bad_p.\n+\t(reference_binding): Binding an lvalue to an rvalue reference is bad.\n+\t(convert_like_real): Give a helpful error about binding lvalue\n+\tto rvalue reference.\n+\t(reference_related_p): No longer static.\n+\t* typeck.c (build_typed_address): New.\n+\t(build_static_cast_1): Add static_cast from lvalue to &&.\n+\t* cp-tree.h: Adjust.\n+\n 2009-07-31  Jason Merrill  <jason@redhat.com>\n \n \t* call.c (reference_binding): Rename lvalue_p to is_lvalue."}, {"sha": "a667434f7a6d27c450b411dcc1b11e9267d84415", "filename": "gcc/cp/call.c", "status": "modified", "additions": 27, "deletions": 6, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -190,7 +190,6 @@ static struct z_candidate *add_candidate\n \t conversion **, tree, tree, int);\n static tree source_type (conversion *);\n static void add_warning (struct z_candidate *, struct z_candidate *);\n-static bool reference_related_p (tree, tree);\n static bool reference_compatible_p (tree, tree);\n static conversion *convert_class_to_reference (tree, tree, tree, int);\n static conversion *direct_reference_binding (tree, conversion *);\n@@ -966,7 +965,7 @@ standard_conversion (tree to, tree from, tree expr, bool c_cast_p,\n \n /* Returns nonzero if T1 is reference-related to T2.  */\n \n-static bool\n+bool\n reference_related_p (tree t1, tree t2)\n {\n   t1 = TYPE_MAIN_VARIANT (t1);\n@@ -1110,6 +1109,11 @@ convert_class_to_reference (tree reference_type, tree s, tree expr, int flags)\n \t\t= TYPE_REF_IS_RVALUE (TREE_TYPE (TREE_TYPE (cand->fn)))\n \t\t  == TYPE_REF_IS_RVALUE (reference_type);\n \t      cand->second_conv->bad_p |= cand->convs[0]->bad_p;\n+\n+              /* Don't allow binding of lvalues to rvalue references.  */\n+              if (TYPE_REF_IS_RVALUE (reference_type)\n+                  && !TYPE_REF_IS_RVALUE (TREE_TYPE (TREE_TYPE (cand->fn))))\n+                cand->second_conv->bad_p = true;\n \t    }\n \t}\n     }\n@@ -1137,13 +1141,13 @@ convert_class_to_reference (tree reference_type, tree s, tree expr, int flags)\n \t\t     build_identity_conv (TREE_TYPE (expr), expr));\n   conv->cand = cand;\n \n+  if (cand->viable == -1)\n+    conv->bad_p = true;\n+\n   /* Merge it with the standard conversion sequence from the\n      conversion function's return type to the desired type.  */\n   cand->second_conv = merge_conversion_sequences (conv, cand->second_conv);\n \n-  if (cand->viable == -1)\n-    conv->bad_p = true;\n-\n   return cand->second_conv;\n }\n \n@@ -1308,6 +1312,11 @@ reference_binding (tree rto, tree rfrom, tree expr, bool c_cast_p, int flags)\n \t   actually occurs.  */\n \tconv->need_temporary_p = true;\n \n+      /* Don't allow binding of lvalues to rvalue references.  */\n+      if (is_lvalue && TYPE_REF_IS_RVALUE (rto)\n+          && !(flags & LOOKUP_PREFER_RVALUE))\n+\tconv->bad_p = true;\n+\n       return conv;\n     }\n   /* [class.conv.fct] A conversion function is never used to convert a\n@@ -4961,6 +4970,19 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n       {\n \ttree ref_type = totype;\n \n+\tif (convs->bad_p && TYPE_REF_IS_RVALUE (ref_type)\n+\t    && real_lvalue_p (expr))\n+\t  {\n+\t    if (complain & tf_error)\n+\t      {\n+\t\terror (\"cannot bind %qT lvalue to %qT\",\n+\t\t       TREE_TYPE (expr), totype);\n+\t\tif (fn)\n+\t\t  error (\"  initializing argument %P of %q+D\", argnum, fn);\n+\t      }\n+\t    return error_mark_node;\n+\t  }\n+\n \t/* If necessary, create a temporary. \n \n            VA_ARG_EXPR and CONSTRUCTOR expressions are special cases\n@@ -6459,7 +6481,6 @@ maybe_handle_ref_bind (conversion **ics)\n       conversion *old_ics = *ics;\n       *ics = old_ics->u.next;\n       (*ics)->user_conv_p = old_ics->user_conv_p;\n-      (*ics)->bad_p = old_ics->bad_p;\n       return old_ics;\n     }\n "}, {"sha": "c507ac813b9635df58583bd5885e01764944c6ca", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -4266,6 +4266,7 @@ extern tree set_up_extended_ref_temp\t\t(tree, tree, tree *, tree *);\n extern tree initialize_reference\t\t(tree, tree, tree, tree *);\n extern tree make_temporary_var_for_ref_to_temp\t(tree, tree);\n extern tree strip_top_quals\t\t\t(tree);\n+extern bool reference_related_p\t\t\t(tree, tree);\n extern tree perform_implicit_conversion\t\t(tree, tree, tsubst_flags_t);\n extern tree perform_implicit_conversion_flags\t(tree, tree, tsubst_flags_t, int);\n extern tree perform_direct_initialization_if_possible (tree, tree, bool,\n@@ -5062,6 +5063,7 @@ extern tree cp_build_binary_op                  (location_t,\n #define cxx_sizeof(T)  cxx_sizeof_or_alignof_type (T, SIZEOF_EXPR, true)\n extern tree build_ptrmemfunc_access_expr\t(tree, tree);\n extern tree build_address\t\t\t(tree);\n+extern tree build_typed_address\t\t\t(tree, tree);\n extern tree build_nop\t\t\t\t(tree, tree);\n extern tree non_reference\t\t\t(tree);\n extern tree lookup_anon_field\t\t\t(tree, tree);"}, {"sha": "ef69f1d94664d43702b492f03e1d9898274069fb", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -4290,6 +4290,19 @@ build_address (tree t)\n   return t;\n }\n \n+/* Returns the address of T with type TYPE.  */\n+\n+tree\n+build_typed_address (tree t, tree type)\n+{\n+  if (error_operand_p (t) || !cxx_mark_addressable (t))\n+    return error_mark_node;\n+  t = build_fold_addr_expr_with_type (t, type);\n+  if (TREE_CODE (t) != ADDR_EXPR)\n+    t = rvalue (t);\n+  return t;\n+}\n+\n /* Return a NOP_EXPR converting EXPR to TYPE.  */\n \n tree\n@@ -5313,6 +5326,18 @@ build_static_cast_1 (tree type, tree expr, bool c_cast_p,\n       return convert_from_reference (cp_fold_convert (type, expr));\n     }\n \n+  /* \"An lvalue of type cv1 T1 can be cast to type rvalue reference to\n+     cv2 T2 if cv2 T2 is reference-compatible with cv1 T1 (8.5.3).\"  */\n+  if (TREE_CODE (type) == REFERENCE_TYPE\n+      && TYPE_REF_IS_RVALUE (type)\n+      && real_lvalue_p (expr)\n+      && reference_related_p (TREE_TYPE (type), intype)\n+      && (c_cast_p || at_least_as_qualified_p (TREE_TYPE (type), intype)))\n+    {\n+      expr = build_typed_address (expr, type);\n+      return convert_from_reference (expr);\n+    }\n+\n   orig = expr;\n \n   /* [expr.static.cast]"}, {"sha": "31ef702424aa8ab72b8e4a98febdc4b676e2a6e7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -1,3 +1,28 @@\n+2009-07-31  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/initlist22.C: Adjust for new rvalue reference\n+\tbinding semantics.\n+\t* g++.dg/cpp0x/named.C: Likewise.\n+\t* g++.dg/cpp0x/overload.C: Likewise.\n+\t* g++.dg/cpp0x/rv1n.C: Likewise.\n+\t* g++.dg/cpp0x/rv1p.C: Likewise.\n+\t* g++.dg/cpp0x/rv2n.C: Likewise.\n+\t* g++.dg/cpp0x/rv2p.C: Likewise.\n+\t* g++.dg/cpp0x/rv3n.C: Likewise.\n+\t* g++.dg/cpp0x/rv3p.C: Likewise.\n+\t* g++.dg/cpp0x/rv4n.C: Likewise.\n+\t* g++.dg/cpp0x/rv4p.C: Likewise.\n+\t* g++.dg/cpp0x/rv5n.C: Likewise.\n+\t* g++.dg/cpp0x/rv5p.C: Likewise.\n+\t* g++.dg/cpp0x/rv6n.C: Likewise.\n+\t* g++.dg/cpp0x/rv6p.C: Likewise.\n+\t* g++.dg/cpp0x/rv7n.C: Likewise.\n+\t* g++.dg/cpp0x/rv7p.C: Likewise.\n+\t* g++.dg/cpp0x/template_deduction.C: Likewise.\n+\t* g++.dg/cpp0x/unnamed_refs.C: Likewise.\n+\t* g++.dg/cpp0x/overloadn.C: New.\n+\t* g++.dg/cpp0x/rv-cast.C: New.\n+\n 2009-07-31  Adam Nemet  <anemet@caviumnetworks.com>\n \n \t* gcc.target/mips/ext-4.c: New test."}, {"sha": "0855b59d5d50125d5d99bc3cb91e34f867de95dd", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist22.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist22.C?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -4,7 +4,7 @@\n int i;\n \n int& r1{ i };\t\t\t// OK, direct binding\n-int&& r2{ i };\t\t\t// OK, direct binding\n+int&& r2{ i };\t\t\t// { dg-error \"\" } binding && to lvalue\n \n int& r3{ };\t\t\t// { dg-error \"\" } reference to temporary\n int&& r4{ };\t\t\t// OK, reference to temporary"}, {"sha": "ef1a2fb6f7d453a7dedb59dd49d9b09e7e377ec6", "filename": "gcc/testsuite/g++.dg/cpp0x/named.C", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnamed.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnamed.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnamed.C?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -1,12 +1,17 @@\n // { dg-options \"--std=c++0x\" }\n // { dg-do link }\n \n+template<typename _Tp>\n+inline _Tp&&\n+movel(_Tp& __t)\n+{ return static_cast<_Tp&&>(__t); }\n+\n struct S {};\n struct T\n {\n-  T(S && s_) : s(s_) {}\n-  S && get() { return s; }\n-  operator S&&() { return s; }\n+  T(S && s_) : s(movel(s_)) {}\n+  S && get() { return movel(s); }\n+  operator S&&() { return movel(s); }\n   S && s;\n };\n \n@@ -18,8 +23,8 @@ void unnamed(S&&) {}\n \n void f(S && p)\n {\n-  S && s(p);\n-  T t(s);\n+  S && s(movel(p));\n+  T t(movel(s));\n \n   named(s);                          // variable reference\n   named(p);                          // parameter reference"}, {"sha": "3782d4a208ea771fc18e30dc57ddc4e9f759f9f8", "filename": "gcc/testsuite/g++.dg/cpp0x/overload.C", "status": "modified", "additions": 37, "deletions": 32, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Foverload.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Foverload.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Foverload.C?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -2,6 +2,11 @@\n // { dg-do link }\n // Generated by overload.py\n \n+template<typename _Tp>\n+inline _Tp&&\n+movel(_Tp& __t)\n+{ return static_cast<_Tp&&>(__t); }\n+\n struct S{};\n \n S l;                             // lvalue (l)\n@@ -10,12 +15,12 @@ S r() { return l; }              // rvalue (r)\n S const cr() { return l; }       // const rvalue (cr)\n S & nl = l;                      // named lvalue reference (nl)\n S const & ncl = l;               // named const lvalue reference (ncl)\n-S && nr = l;                     // named rvalue reference (nr)\n-S const && ncr = l;              // named const rvalue reference (ncr)\n+S && nr = movel(l);              // named rvalue reference (nr)\n+S const && ncr = movel(l);       // named const rvalue reference (ncr)\n S & ul() { return l; }           // unnamed lvalue reference (ul)\n S const & ucl() { return l; }    // unnamed const lvalue reference (ucl)\n-S && ur() { return l; }          // unnamed rvalue reference (ur)\n-S const && ucr() { return l; }   // unnamed const rvalue reference (ucr)\n+S && ur() { return movel(l); }   // unnamed rvalue reference (ur)\n+S const && ucr() { return movel(l); } // unnamed const rvalue reference (ucr)\n \n void l0001(const S&&) {}\n \n@@ -538,9 +543,9 @@ void ucr1111(const S&&) {}\n \n int main()\n {\n-  l0001(l);\n-  l0010(l);\n-  l0011(l);\n+  //l0001(l);\n+  //l0010(l);\n+  //l0011(l);\n   l0100(l);\n   l0101(l);\n   l0110(l);\n@@ -553,14 +558,14 @@ int main()\n   l1101(l);\n   l1110(l);\n   l1111(l);\n-  cl0001(cl);\n-  cl0011(cl);\n+  //cl0001(cl);\n+  //cl0011(cl);\n   cl0100(cl);\n   cl0101(cl);\n   cl0110(cl);\n   cl0111(cl);\n-  cl1001(cl);\n-  cl1011(cl);\n+  //cl1001(cl);\n+  //cl1011(cl);\n   cl1100(cl);\n   cl1101(cl);\n   cl1110(cl);\n@@ -591,9 +596,9 @@ int main()\n   cr1101(cr());\n   cr1110(cr());\n   cr1111(cr());\n-  nl0001(nl);\n-  nl0010(nl);\n-  nl0011(nl);\n+  //nl0001(nl);\n+  //nl0010(nl);\n+  //nl0011(nl);\n   nl0100(nl);\n   nl0101(nl);\n   nl0110(nl);\n@@ -606,21 +611,21 @@ int main()\n   nl1101(nl);\n   nl1110(nl);\n   nl1111(nl);\n-  ncl0001(ncl);\n-  ncl0011(ncl);\n+  //ncl0001(ncl);\n+  //ncl0011(ncl);\n   ncl0100(ncl);\n   ncl0101(ncl);\n   ncl0110(ncl);\n   ncl0111(ncl);\n-  ncl1001(ncl);\n-  ncl1011(ncl);\n+  //ncl1001(ncl);\n+  //ncl1011(ncl);\n   ncl1100(ncl);\n   ncl1101(ncl);\n   ncl1110(ncl);\n   ncl1111(ncl);\n-  nr0001(nr);\n-  nr0010(nr);\n-  nr0011(nr);\n+  //nr0001(nr);\n+  //nr0010(nr);\n+  //nr0011(nr);\n   nr0100(nr);\n   nr0101(nr);\n   nr0110(nr);\n@@ -633,21 +638,21 @@ int main()\n   nr1101(nr);\n   nr1110(nr);\n   nr1111(nr);\n-  ncr0001(ncr);\n-  ncr0011(ncr);\n+  //ncr0001(ncr);\n+  //ncr0011(ncr);\n   ncr0100(ncr);\n   ncr0101(ncr);\n   ncr0110(ncr);\n   ncr0111(ncr);\n-  ncr1001(ncr);\n-  ncr1011(ncr);\n+  //ncr1001(ncr);\n+  //ncr1011(ncr);\n   ncr1100(ncr);\n   ncr1101(ncr);\n   ncr1110(ncr);\n   ncr1111(ncr);\n-  ul0001(ul());\n-  ul0010(ul());\n-  ul0011(ul());\n+  //ul0001(ul());\n+  //ul0010(ul());\n+  //ul0011(ul());\n   ul0100(ul());\n   ul0101(ul());\n   ul0110(ul());\n@@ -660,14 +665,14 @@ int main()\n   ul1101(ul());\n   ul1110(ul());\n   ul1111(ul());\n-  ucl0001(ucl());\n-  ucl0011(ucl());\n+  //ucl0001(ucl());\n+  //ucl0011(ucl());\n   ucl0100(ucl());\n   ucl0101(ucl());\n   ucl0110(ucl());\n   ucl0111(ucl());\n-  ucl1001(ucl());\n-  ucl1011(ucl());\n+  //ucl1001(ucl());\n+  //ucl1011(ucl());\n   ucl1100(ucl());\n   ucl1101(ucl());\n   ucl1110(ucl());"}, {"sha": "a42707fe4f1b41f9914930f93ffffa2982838cba", "filename": "gcc/testsuite/g++.dg/cpp0x/overloadn.C", "status": "added", "additions": 708, "deletions": 0, "changes": 708, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Foverloadn.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Foverloadn.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Foverloadn.C?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -0,0 +1,708 @@\n+// { dg-options \"--std=c++0x\" }\n+// { dg-do link }\n+// Generated by overload.py\n+\n+template<typename _Tp>\n+inline _Tp&&\n+movel(_Tp& __t)\n+{ return static_cast<_Tp&&>(__t); }\n+\n+struct S{};\n+\n+S l;                             // lvalue (l)\n+S const cl = l;                  // const lvalue (cl)\n+S r() { return l; }              // rvalue (r)\n+S const cr() { return l; }       // const rvalue (cr)\n+S & nl = l;                      // named lvalue reference (nl)\n+S const & ncl = l;               // named const lvalue reference (ncl)\n+S && nr = movel(l);              // named rvalue reference (nr)\n+S const && ncr = movel(l);       // named const rvalue reference (ncr)\n+S & ul() { return l; }           // unnamed lvalue reference (ul)\n+S const & ucl() { return l; }    // unnamed const lvalue reference (ucl)\n+S && ur() { return movel(l); }   // unnamed rvalue reference (ur)\n+S const && ucr() { return movel(l); } // unnamed const rvalue reference (ucr)\n+\n+void l0001(const S&&) {} // { dg-message \"\" }\n+\n+void l0010(S&&) {} // { dg-message \"\" }\n+\n+void l0011(S&&) {} // { dg-message \"\" }\n+void l0011(const S&&);\n+\n+void l0100(const S&) {}\n+\n+void l0101(const S&) {}\n+void l0101(const S&&);\n+\n+void l0110(const S&) {}\n+void l0110(S&&);\n+\n+void l0111(const S&) {}\n+void l0111(S&&);\n+void l0111(const S&&);\n+\n+void l1000(S&) {}\n+\n+void l1001(S&) {}\n+void l1001(const S&&);\n+\n+void l1010(S&) {}\n+void l1010(S&&);\n+\n+void l1011(S&) {}\n+void l1011(S&&);\n+void l1011(const S&&);\n+\n+void l1100(S&) {}\n+void l1100(const S&);\n+\n+void l1101(S&) {}\n+void l1101(const S&);\n+void l1101(const S&&);\n+\n+void l1110(S&) {}\n+void l1110(const S&);\n+void l1110(S&&);\n+\n+void l1111(S&) {}\n+void l1111(const S&);\n+void l1111(S&&);\n+void l1111(const S&&);\n+\n+void cl0001(const S&&) {} // { dg-message \"\" }\n+\n+void cl0011(S&&);\n+void cl0011(const S&&) {} // { dg-message \"\" }\n+\n+void cl0100(const S&) {}\n+\n+void cl0101(const S&) {}\n+void cl0101(const S&&);\n+\n+void cl0110(const S&) {}\n+void cl0110(S&&);\n+\n+void cl0111(const S&) {}\n+void cl0111(S&&);\n+void cl0111(const S&&);\n+\n+void cl1001(S&);\n+void cl1001(const S&&) {} // { dg-message \"\" }\n+\n+void cl1011(S&);\n+void cl1011(S&&);\n+void cl1011(const S&&) {} // { dg-message \"\" }\n+\n+void cl1100(S&);\n+void cl1100(const S&) {}\n+\n+void cl1101(S&);\n+void cl1101(const S&) {}\n+void cl1101(const S&&);\n+\n+void cl1110(S&);\n+void cl1110(const S&) {}\n+void cl1110(S&&);\n+\n+void cl1111(S&);\n+void cl1111(const S&) {}\n+void cl1111(S&&);\n+void cl1111(const S&&);\n+\n+void r0001(const S&&) {}\n+\n+void r0010(S&&) {}\n+\n+void r0011(S&&) {}\n+void r0011(const S&&);\n+\n+void r0100(const S&) {}\n+\n+void r0101(const S&);\n+void r0101(const S&&) {}\n+\n+void r0110(const S&);\n+void r0110(S&&) {}\n+\n+void r0111(const S&);\n+void r0111(S&&) {}\n+void r0111(const S&&);\n+\n+void r1001(S&);\n+void r1001(const S&&) {}\n+\n+void r1010(S&);\n+void r1010(S&&) {}\n+\n+void r1011(S&);\n+void r1011(S&&) {}\n+void r1011(const S&&);\n+\n+void r1100(S&);\n+void r1100(const S&) {}\n+\n+void r1101(S&);\n+void r1101(const S&);\n+void r1101(const S&&) {}\n+\n+void r1110(S&);\n+void r1110(const S&);\n+void r1110(S&&) {}\n+\n+void r1111(S&);\n+void r1111(const S&);\n+void r1111(S&&) {}\n+void r1111(const S&&);\n+\n+void cr0001(const S&&) {}\n+\n+void cr0011(S&&);\n+void cr0011(const S&&) {}\n+\n+void cr0100(const S&) {}\n+\n+void cr0101(const S&);\n+void cr0101(const S&&) {}\n+\n+void cr0110(const S&) {}\n+void cr0110(S&&);\n+\n+void cr0111(const S&);\n+void cr0111(S&&);\n+void cr0111(const S&&) {}\n+\n+void cr1001(S&);\n+void cr1001(const S&&) {}\n+\n+void cr1011(S&);\n+void cr1011(S&&);\n+void cr1011(const S&&) {}\n+\n+void cr1100(S&);\n+void cr1100(const S&) {}\n+\n+void cr1101(S&);\n+void cr1101(const S&);\n+void cr1101(const S&&) {}\n+\n+void cr1110(S&);\n+void cr1110(const S&) {}\n+void cr1110(S&&);\n+\n+void cr1111(S&);\n+void cr1111(const S&);\n+void cr1111(S&&);\n+void cr1111(const S&&) {}\n+\n+void nl0001(const S&&) {} // { dg-message \"\" }\n+\n+void nl0010(S&&) {} // { dg-message \"\" }\n+\n+void nl0011(S&&) {} // { dg-message \"\" }\n+void nl0011(const S&&);\n+\n+void nl0100(const S&) {}\n+\n+void nl0101(const S&) {}\n+void nl0101(const S&&);\n+\n+void nl0110(const S&) {}\n+void nl0110(S&&);\n+\n+void nl0111(const S&) {}\n+void nl0111(S&&);\n+void nl0111(const S&&);\n+\n+void nl1000(S&) {}\n+\n+void nl1001(S&) {}\n+void nl1001(const S&&);\n+\n+void nl1010(S&) {}\n+void nl1010(S&&);\n+\n+void nl1011(S&) {}\n+void nl1011(S&&);\n+void nl1011(const S&&);\n+\n+void nl1100(S&) {}\n+void nl1100(const S&);\n+\n+void nl1101(S&) {}\n+void nl1101(const S&);\n+void nl1101(const S&&);\n+\n+void nl1110(S&) {}\n+void nl1110(const S&);\n+void nl1110(S&&);\n+\n+void nl1111(S&) {}\n+void nl1111(const S&);\n+void nl1111(S&&);\n+void nl1111(const S&&);\n+\n+void ncl0001(const S&&) {} // { dg-message \"\" }\n+\n+void ncl0011(S&&);\n+void ncl0011(const S&&) {} // { dg-message \"\" }\n+\n+void ncl0100(const S&) {}\n+\n+void ncl0101(const S&) {}\n+void ncl0101(const S&&);\n+\n+void ncl0110(const S&) {}\n+void ncl0110(S&&);\n+\n+void ncl0111(const S&) {}\n+void ncl0111(S&&);\n+void ncl0111(const S&&);\n+\n+void ncl1001(S&);\n+void ncl1001(const S&&) {} // { dg-message \"\" }\n+\n+void ncl1011(S&);\n+void ncl1011(S&&);\n+void ncl1011(const S&&) {} // { dg-message \"\" }\n+\n+void ncl1100(S&);\n+void ncl1100(const S&) {}\n+\n+void ncl1101(S&);\n+void ncl1101(const S&) {}\n+void ncl1101(const S&&);\n+\n+void ncl1110(S&);\n+void ncl1110(const S&) {}\n+void ncl1110(S&&);\n+\n+void ncl1111(S&);\n+void ncl1111(const S&) {}\n+void ncl1111(S&&);\n+void ncl1111(const S&&);\n+\n+void nr0001(const S&&) {} // { dg-message \"\" }\n+\n+void nr0010(S&&) {} // { dg-message \"\" }\n+\n+void nr0011(S&&) {} // { dg-message \"\" }\n+void nr0011(const S&&);\n+\n+void nr0100(const S&) {}\n+\n+void nr0101(const S&) {}\n+void nr0101(const S&&);\n+\n+void nr0110(const S&) {}\n+void nr0110(S&&);\n+\n+void nr0111(const S&) {}\n+void nr0111(S&&);\n+void nr0111(const S&&);\n+\n+void nr1000(S&) {}\n+\n+void nr1001(S&) {}\n+void nr1001(const S&&);\n+\n+void nr1010(S&) {}\n+void nr1010(S&&);\n+\n+void nr1011(S&) {}\n+void nr1011(S&&);\n+void nr1011(const S&&);\n+\n+void nr1100(S&) {}\n+void nr1100(const S&);\n+\n+void nr1101(S&) {}\n+void nr1101(const S&);\n+void nr1101(const S&&);\n+\n+void nr1110(S&) {}\n+void nr1110(const S&);\n+void nr1110(S&&);\n+\n+void nr1111(S&) {}\n+void nr1111(const S&);\n+void nr1111(S&&);\n+void nr1111(const S&&);\n+\n+void ncr0001(const S&&) {} // { dg-message \"\" }\n+\n+void ncr0011(S&&);\n+void ncr0011(const S&&) {} // { dg-message \"\" }\n+\n+void ncr0100(const S&) {}\n+\n+void ncr0101(const S&) {}\n+void ncr0101(const S&&);\n+\n+void ncr0110(const S&) {}\n+void ncr0110(S&&);\n+\n+void ncr0111(const S&) {}\n+void ncr0111(S&&);\n+void ncr0111(const S&&);\n+\n+void ncr1001(S&);\n+void ncr1001(const S&&) {} // { dg-message \"\" }\n+\n+void ncr1011(S&);\n+void ncr1011(S&&);\n+void ncr1011(const S&&) {} // { dg-message \"\" }\n+\n+void ncr1100(S&);\n+void ncr1100(const S&) {}\n+\n+void ncr1101(S&);\n+void ncr1101(const S&) {}\n+void ncr1101(const S&&);\n+\n+void ncr1110(S&);\n+void ncr1110(const S&) {}\n+void ncr1110(S&&);\n+\n+void ncr1111(S&);\n+void ncr1111(const S&) {}\n+void ncr1111(S&&);\n+void ncr1111(const S&&);\n+\n+void ul0001(const S&&) {} // { dg-message \"\" }\n+\n+void ul0010(S&&) {} // { dg-message \"\" }\n+\n+void ul0011(S&&) {} // { dg-message \"\" }\n+void ul0011(const S&&);\n+\n+void ul0100(const S&) {}\n+\n+void ul0101(const S&) {}\n+void ul0101(const S&&);\n+\n+void ul0110(const S&) {}\n+void ul0110(S&&);\n+\n+void ul0111(const S&) {}\n+void ul0111(S&&);\n+void ul0111(const S&&);\n+\n+void ul1000(S&) {}\n+\n+void ul1001(S&) {}\n+void ul1001(const S&&);\n+\n+void ul1010(S&) {}\n+void ul1010(S&&);\n+\n+void ul1011(S&) {}\n+void ul1011(S&&);\n+void ul1011(const S&&);\n+\n+void ul1100(S&) {}\n+void ul1100(const S&);\n+\n+void ul1101(S&) {}\n+void ul1101(const S&);\n+void ul1101(const S&&);\n+\n+void ul1110(S&) {}\n+void ul1110(const S&);\n+void ul1110(S&&);\n+\n+void ul1111(S&) {}\n+void ul1111(const S&);\n+void ul1111(S&&);\n+void ul1111(const S&&);\n+\n+void ucl0001(const S&&) {} // { dg-message \"\" }\n+\n+void ucl0011(S&&);\n+void ucl0011(const S&&) {} // { dg-message \"\" }\n+\n+void ucl0100(const S&) {}\n+\n+void ucl0101(const S&) {}\n+void ucl0101(const S&&);\n+\n+void ucl0110(const S&) {}\n+void ucl0110(S&&);\n+\n+void ucl0111(const S&) {}\n+void ucl0111(S&&);\n+void ucl0111(const S&&);\n+\n+void ucl1001(S&);\n+void ucl1001(const S&&) {} // { dg-message \"\" }\n+\n+void ucl1011(S&);\n+void ucl1011(S&&);\n+void ucl1011(const S&&) {} // { dg-message \"\" }\n+\n+void ucl1100(S&);\n+void ucl1100(const S&) {}\n+\n+void ucl1101(S&);\n+void ucl1101(const S&) {}\n+void ucl1101(const S&&);\n+\n+void ucl1110(S&);\n+void ucl1110(const S&) {}\n+void ucl1110(S&&);\n+\n+void ucl1111(S&);\n+void ucl1111(const S&) {}\n+void ucl1111(S&&);\n+void ucl1111(const S&&);\n+\n+void ur0001(const S&&) {}\n+\n+void ur0010(S&&) {}\n+\n+void ur0011(S&&) {}\n+void ur0011(const S&&);\n+\n+void ur0100(const S&) {}\n+\n+void ur0101(const S&);\n+void ur0101(const S&&) {}\n+\n+void ur0110(const S&);\n+void ur0110(S&&) {}\n+\n+void ur0111(const S&);\n+void ur0111(S&&) {}\n+void ur0111(const S&&);\n+\n+void ur1001(S&);\n+void ur1001(const S&&) {}\n+\n+void ur1010(S&);\n+void ur1010(S&&) {}\n+\n+void ur1011(S&);\n+void ur1011(S&&) {}\n+void ur1011(const S&&);\n+\n+void ur1100(S&);\n+void ur1100(const S&) {}\n+\n+void ur1101(S&);\n+void ur1101(const S&);\n+void ur1101(const S&&) {}\n+\n+void ur1110(S&);\n+void ur1110(const S&);\n+void ur1110(S&&) {}\n+\n+void ur1111(S&);\n+void ur1111(const S&);\n+void ur1111(S&&) {}\n+void ur1111(const S&&);\n+\n+void ucr0001(const S&&) {}\n+\n+void ucr0011(S&&);\n+void ucr0011(const S&&) {}\n+\n+void ucr0100(const S&) {}\n+\n+void ucr0101(const S&);\n+void ucr0101(const S&&) {}\n+\n+void ucr0110(const S&) {}\n+void ucr0110(S&&);\n+\n+void ucr0111(const S&);\n+void ucr0111(S&&);\n+void ucr0111(const S&&) {}\n+\n+void ucr1001(S&);\n+void ucr1001(const S&&) {}\n+\n+void ucr1011(S&);\n+void ucr1011(S&&);\n+void ucr1011(const S&&) {}\n+\n+void ucr1100(S&);\n+void ucr1100(const S&) {}\n+\n+void ucr1101(S&);\n+void ucr1101(const S&);\n+void ucr1101(const S&&) {}\n+\n+void ucr1110(S&);\n+void ucr1110(const S&) {}\n+void ucr1110(S&&);\n+\n+void ucr1111(S&);\n+void ucr1111(const S&);\n+void ucr1111(S&&);\n+void ucr1111(const S&&) {}\n+\n+\n+int main()\n+{\n+  l0001(l); // { dg-error \"lvalue\" }\n+  l0010(l); // { dg-error \"lvalue\" }\n+  l0011(l); // { dg-error \"lvalue\" }\n+  l0100(l);\n+  l0101(l);\n+  l0110(l);\n+  l0111(l);\n+  l1000(l);\n+  l1001(l);\n+  l1010(l);\n+  l1011(l);\n+  l1100(l);\n+  l1101(l);\n+  l1110(l);\n+  l1111(l);\n+  cl0001(cl); // { dg-error \"lvalue\" }\n+  cl0011(cl); // { dg-error \"lvalue\" }\n+  cl0100(cl);\n+  cl0101(cl);\n+  cl0110(cl);\n+  cl0111(cl);\n+  cl1001(cl); // { dg-error \"lvalue\" }\n+  cl1011(cl); // { dg-error \"lvalue\" }\n+  cl1100(cl);\n+  cl1101(cl);\n+  cl1110(cl);\n+  cl1111(cl);\n+  r0001(r());\n+  r0010(r());\n+  r0011(r());\n+  r0100(r());\n+  r0101(r());\n+  r0110(r());\n+  r0111(r());\n+  r1001(r());\n+  r1010(r());\n+  r1011(r());\n+  r1100(r());\n+  r1101(r());\n+  r1110(r());\n+  r1111(r());\n+  cr0001(cr());\n+  cr0011(cr());\n+  cr0100(cr());\n+  cr0101(cr());\n+  cr0110(cr());\n+  cr0111(cr());\n+  cr1001(cr());\n+  cr1011(cr());\n+  cr1100(cr());\n+  cr1101(cr());\n+  cr1110(cr());\n+  cr1111(cr());\n+  nl0001(nl); // { dg-error \"lvalue\" }\n+  nl0010(nl); // { dg-error \"lvalue\" }\n+  nl0011(nl); // { dg-error \"lvalue\" }\n+  nl0100(nl);\n+  nl0101(nl);\n+  nl0110(nl);\n+  nl0111(nl);\n+  nl1000(nl);\n+  nl1001(nl);\n+  nl1010(nl);\n+  nl1011(nl);\n+  nl1100(nl);\n+  nl1101(nl);\n+  nl1110(nl);\n+  nl1111(nl);\n+  ncl0001(ncl); // { dg-error \"lvalue\" }\n+  ncl0011(ncl); // { dg-error \"lvalue\" }\n+  ncl0100(ncl);\n+  ncl0101(ncl);\n+  ncl0110(ncl);\n+  ncl0111(ncl);\n+  ncl1001(ncl); // { dg-error \"lvalue\" }\n+  ncl1011(ncl); // { dg-error \"lvalue\" }\n+  ncl1100(ncl);\n+  ncl1101(ncl);\n+  ncl1110(ncl);\n+  ncl1111(ncl);\n+  nr0001(nr); // { dg-error \"lvalue\" }\n+  nr0010(nr); // { dg-error \"lvalue\" }\n+  nr0011(nr); // { dg-error \"lvalue\" }\n+  nr0100(nr);\n+  nr0101(nr);\n+  nr0110(nr);\n+  nr0111(nr);\n+  nr1000(nr);\n+  nr1001(nr);\n+  nr1010(nr);\n+  nr1011(nr);\n+  nr1100(nr);\n+  nr1101(nr);\n+  nr1110(nr);\n+  nr1111(nr);\n+  ncr0001(ncr); // { dg-error \"lvalue\" }\n+  ncr0011(ncr); // { dg-error \"lvalue\" }\n+  ncr0100(ncr);\n+  ncr0101(ncr);\n+  ncr0110(ncr);\n+  ncr0111(ncr);\n+  ncr1001(ncr); // { dg-error \"lvalue\" }\n+  ncr1011(ncr); // { dg-error \"lvalue\" }\n+  ncr1100(ncr);\n+  ncr1101(ncr);\n+  ncr1110(ncr);\n+  ncr1111(ncr);\n+  ul0001(ul()); // { dg-error \"lvalue\" }\n+  ul0010(ul()); // { dg-error \"lvalue\" }\n+  ul0011(ul()); // { dg-error \"lvalue\" }\n+  ul0100(ul());\n+  ul0101(ul());\n+  ul0110(ul());\n+  ul0111(ul());\n+  ul1000(ul());\n+  ul1001(ul());\n+  ul1010(ul());\n+  ul1011(ul());\n+  ul1100(ul());\n+  ul1101(ul());\n+  ul1110(ul());\n+  ul1111(ul());\n+  ucl0001(ucl()); // { dg-error \"lvalue\" }\n+  ucl0011(ucl()); // { dg-error \"lvalue\" }\n+  ucl0100(ucl());\n+  ucl0101(ucl());\n+  ucl0110(ucl());\n+  ucl0111(ucl());\n+  ucl1001(ucl()); // { dg-error \"lvalue\" }\n+  ucl1011(ucl()); // { dg-error \"lvalue\" }\n+  ucl1100(ucl());\n+  ucl1101(ucl());\n+  ucl1110(ucl());\n+  ucl1111(ucl());\n+  ur0001(ur());\n+  ur0010(ur());\n+  ur0011(ur());\n+  ur0100(ur());\n+  ur0101(ur());\n+  ur0110(ur());\n+  ur0111(ur());\n+  ur1001(ur());\n+  ur1010(ur());\n+  ur1011(ur());\n+  ur1100(ur());\n+  ur1101(ur());\n+  ur1110(ur());\n+  ur1111(ur());\n+  ucr0001(ucr());\n+  ucr0011(ucr());\n+  ucr0100(ucr());\n+  ucr0101(ucr());\n+  ucr0110(ucr());\n+  ucr0111(ucr());\n+  ucr1001(ucr());\n+  ucr1011(ucr());\n+  ucr1100(ucr());\n+  ucr1101(ucr());\n+  ucr1110(ucr());\n+  ucr1111(ucr());\n+\n+  return 0;\n+}"}, {"sha": "48b7c13ba59a4cd6f1f7c8eca791b7e4f7833c0c", "filename": "gcc/testsuite/g++.dg/cpp0x/rv-cast.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-cast.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-cast.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-cast.C?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -0,0 +1,6 @@\n+// { dg-options \"-std=c++0x\" }\n+\n+void f(int i)\n+{\n+  int&& r = static_cast<int&&>(i);\n+}"}, {"sha": "b7b9b6e25cedf955df26ecd841a90717f8b94138", "filename": "gcc/testsuite/g++.dg/cpp0x/rv1n.C", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv1n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv1n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv1n.C?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -1,6 +1,6 @@\n // I, Howard Hinnant, hereby place this code in the public domain.\n \n-// Test overlaod resolution among referece types\n+// Test overload resolution among reference types\n \n // { dg-do compile }\n // { dg-options \"-std=c++0x\" }\n@@ -103,6 +103,7 @@ int test1_5()\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_1_5(a);\t\t// { dg-error \"lvalue\" }\n     sink_1_5(ca);           // { dg-error \"invalid initialization\" }\n     sink_1_5(va);           // { dg-error \"invalid initialization\" }\n     sink_1_5(cva);          // { dg-error \"invalid initialization\" }\n@@ -120,6 +121,8 @@ int test1_6()\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_1_6(a);\t\t// { dg-error \"lvalue\" }\n+    sink_1_6(ca);\t\t// { dg-error \"lvalue\" }\n     sink_1_6(va);           // { dg-error \"invalid initialization\" }\n     sink_1_6(cva);          // { dg-error \"invalid initialization\" }\n     sink_1_6(v_source());   // { dg-error \"invalid initialization\" }\n@@ -135,13 +138,30 @@ int test1_7()\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_1_7(a);\t    // { dg-error \"lvalue\" }\n     sink_1_7(ca);           // { dg-error \"invalid initialization\" }\n+    sink_1_7(va);\t    // { dg-error \"lvalue\" }\n     sink_1_7(cva);          // { dg-error \"invalid initialization\" }\n     sink_1_7(c_source());   // { dg-error \"invalid initialization\" }\n     sink_1_7(cv_source());  // { dg-error \"invalid initialization\" }\n     return 0;\n }\n \n+eight sink_1_8(const volatile A&&); // { dg-error \"\" }\n+\n+int test1_8()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_1_8(a);\t\t// { dg-error \"lvalue\" }\n+    sink_1_8(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_1_8(va);\t\t// { dg-error \"lvalue\" }\n+    sink_1_8(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n int main()\n {\n     return test1_1() + test1_2() + test1_3() + test1_5() +"}, {"sha": "b2770ef33d5cca86a84998e19efe64a4c8c899de", "filename": "gcc/testsuite/g++.dg/cpp0x/rv1p.C", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv1p.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv1p.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv1p.C?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -1,6 +1,6 @@\n // I, Howard Hinnant, hereby place this code in the public domain.\n \n-// Test overlaod resolution among referece types\n+// Test overload resolution among reference types\n \n // { dg-do compile }\n // { dg-options \"-std=c++0x\" }\n@@ -93,7 +93,6 @@ int test1_5()\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n-    sa<sizeof(sink_1_5(a))           == 5> t1;\n     sa<sizeof(sink_1_5(source()))    == 5> t5;\n     return 0;\n }\n@@ -106,8 +105,6 @@ int test1_6()\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n-    sa<sizeof(sink_1_6(a))           == 6> t1;\n-    sa<sizeof(sink_1_6(ca))          == 6> t2;\n     sa<sizeof(sink_1_6(source()))    == 6> t5;\n     sa<sizeof(sink_1_6(c_source()))  == 6> t6;\n     return 0;\n@@ -121,8 +118,6 @@ int test1_7()\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n-    sa<sizeof(sink_1_7(a))           == 7> t1;\n-    sa<sizeof(sink_1_7(va))          == 7> t3;\n     sa<sizeof(sink_1_7(source()))    == 7> t5;\n     sa<sizeof(sink_1_7(v_source()))  == 7> t7;\n     return 0;\n@@ -136,10 +131,6 @@ int test1_8()\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n-    sa<sizeof(sink_1_8(a))           == 8> t1;\n-    sa<sizeof(sink_1_8(ca))          == 8> t2;\n-    sa<sizeof(sink_1_8(va))          == 8> t3;\n-    sa<sizeof(sink_1_8(cva))         == 8> t4;\n     sa<sizeof(sink_1_8(source()))    == 8> t5;\n     sa<sizeof(sink_1_8(c_source()))  == 8> t6;\n     sa<sizeof(sink_1_8(v_source()))  == 8> t7;"}, {"sha": "5eee82c4bcfb79c3650bcbfebd27f5397c203483", "filename": "gcc/testsuite/g++.dg/cpp0x/rv2n.C", "status": "modified", "additions": 128, "deletions": 33, "changes": 161, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv2n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv2n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv2n.C?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -1,6 +1,6 @@\n // I, Howard Hinnant, hereby place this code in the public domain.\n \n-// Test overlaod resolution among referece types\n+// Test overload resolution among reference types\n \n // { dg-do compile }\n // { dg-options \"-std=c++0x\" }\n@@ -30,8 +30,8 @@ const volatile A cv_source();\n \n // 2 at a time\n \n-one   sink_2_12(               A&);  // { dg-message \"candidates\" }\n-two   sink_2_12(const          A&);  // { dg-message \"note\" }\n+one   sink_2_12(               A&);  // { dg-message \"candidates|argument\" }\n+two   sink_2_12(const          A&);  // { dg-message \"note|argument\" }\n \n int test2_12()\n {\n@@ -46,8 +46,8 @@ int test2_12()\n     return 0;\n }\n \n-one   sink_2_13(               A&);  // { dg-message \"candidates\" }\n-three sink_2_13(volatile       A&);  // { dg-message \"note\" }\n+one   sink_2_13(               A&);  // { dg-message \"candidates|argument\" }\n+three sink_2_13(volatile       A&);  // { dg-message \"note|argument\" }\n \n int test2_13()\n {\n@@ -64,8 +64,8 @@ int test2_13()\n     return 0;\n }\n \n-one   sink_2_14(               A&);  // { dg-message \"candidates\" }\n-four  sink_2_14(const volatile A&);  // { dg-message \"note\" }\n+one   sink_2_14(               A&);  // { dg-message \"candidates|argument\" }\n+four  sink_2_14(const volatile A&);  // { dg-message \"note|argument\" }\n \n int test2_14()\n {\n@@ -80,8 +80,8 @@ int test2_14()\n     return 0;\n }\n \n-one   sink_2_15(               A&);  // { dg-message \"candidates\" }\n-five  sink_2_15(               A&&);  // { dg-message \"note\" }\n+one   sink_2_15(               A&);  // { dg-message \"candidates|argument\" }\n+five  sink_2_15(               A&&);  // { dg-message \"note|argument\" }\n \n int test2_15()\n {\n@@ -98,24 +98,25 @@ int test2_15()\n     return 0;\n }\n \n-one   sink_2_16(               A&);  // { dg-message \"candidates\" }\n-six   sink_2_16(const          A&&);  // { dg-message \"note\" }\n+one   sink_2_16(               A&);  // { dg-message \"candidates|argument\" }\n+six   sink_2_16(const          A&&);  // { dg-message \"note|argument\" }\n \n int test2_16()\n {\n                    A a;\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_2_16(ca);\t     // { dg-error \"lvalue\" }\n     sink_2_16(va);           // { dg-error \"no match\" }\n     sink_2_16(cva);          // { dg-error \"no match\" }\n     sink_2_16(v_source());   // { dg-error \"no match\" }\n     sink_2_16(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n \n-one   sink_2_17(               A&);  // { dg-message \"candidates\" }\n-seven sink_2_17(volatile       A&&);  // { dg-message \"note\" }\n+one   sink_2_17(               A&);  // { dg-message \"candidates|argument\" }\n+seven sink_2_17(volatile       A&&);  // { dg-message \"note|argument\" }\n \n int test2_17()\n {\n@@ -124,14 +125,29 @@ int test2_17()\n           volatile A va;\n     const volatile A cva = a;\n     sink_2_17(ca);           // { dg-error \"no match\" }\n+    sink_2_17(va);           // { dg-error \"lvalue\" }\n     sink_2_17(cva);          // { dg-error \"no match\" }\n     sink_2_17(c_source());   // { dg-error \"no match\" }\n     sink_2_17(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n \n-two   sink_2_23(const          A&);  // { dg-message \"candidates\" }\n-three sink_2_23(volatile       A&);  // { dg-message \"note\" }\n+one   sink_2_18(               A&);\n+eight sink_2_18(const volatile A&&); // { dg-error \"argument\" }\n+\n+int test2_18()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_2_18(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_2_18(va);\t\t// { dg-error \"lvalue\" }\n+    sink_2_18(cva);\t\t// { dg-error \"lvalue\" }\n+}\n+\n+two   sink_2_23(const          A&);  // { dg-message \"candidates|argument\" }\n+three sink_2_23(volatile       A&);  // { dg-message \"note|argument\" }\n \n int test2_23()\n {\n@@ -146,8 +162,8 @@ int test2_23()\n     return 0;\n }\n \n-two   sink_2_24(const          A&);  // { dg-message \"candidates\" }\n-four  sink_2_24(const volatile A&);  // { dg-message \"note\" }\n+two   sink_2_24(const          A&);  // { dg-message \"candidates|argument\" }\n+four  sink_2_24(const volatile A&);  // { dg-message \"note|argument\" }\n \n int test2_24()\n {\n@@ -161,7 +177,7 @@ int test2_24()\n }\n \n three sink_2_34(volatile       A&);  // { dg-message \"candidate\" }\n-four  sink_2_34(const volatile A&);  // { dg-message \"note\" }\n+four  sink_2_34(const volatile A&);  // { dg-message \"note|argument\" }\n \n int test2_34()\n {\n@@ -177,7 +193,7 @@ int test2_34()\n }\n \n two   sink_2_25(const          A&);  // { dg-message \"candidate\" }\n-five  sink_2_25(               A&&);  // { dg-message \"note\" }\n+five  sink_2_25(               A&&);  // { dg-message \"note|argument\" }\n \n int test2_25()\n {\n@@ -193,7 +209,7 @@ int test2_25()\n }\n \n two   sink_2_26(const          A&);  // { dg-message \"candidate\" }\n-six   sink_2_26(const          A&&);  // { dg-message \"note\" }\n+six   sink_2_26(const          A&&);  // { dg-message \"note|argument\" }\n \n int test2_26()\n {\n@@ -209,21 +225,35 @@ int test2_26()\n }\n \n two   sink_2_27(const          A&);  // { dg-message \"candidate\" }\n-seven sink_2_27(volatile       A&&);  // { dg-message \"note\" }\n+seven sink_2_27(volatile       A&&);  // { dg-message \"note|argument\" }\n \n int test2_27()\n {\n                    A a;\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_2_27(va);\t     // { dg-error \"lvalue\" }\n     sink_2_27(cva);          // { dg-error \"no match\" }\n     sink_2_27(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n \n+two   sink_2_28(const          A&);\n+eight sink_2_28(const volatile A&&); // { dg-error \"argument\" }\n+\n+int test2_28()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_2_28(va);\t\t// { dg-error \"lvalue\" }\n+    sink_2_28(cva);\t\t// { dg-error \"lvalue\" }\n+}\n+\n three sink_2_35(volatile       A&);  // { dg-message \"candidate\" }\n-five  sink_2_35(               A&&);  // { dg-message \"note\" }\n+five  sink_2_35(               A&&);  // { dg-message \"note|argument\" }\n \n int test2_35()\n {\n@@ -240,22 +270,23 @@ int test2_35()\n }\n \n three sink_2_36(volatile       A&);  // { dg-message \"candidate\" }\n-six   sink_2_36(const          A&&);  // { dg-message \"note\" }\n+six   sink_2_36(const          A&&);  // { dg-message \"note|argument\" }\n \n int test2_36()\n {\n                    A a;\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_2_36(ca);\t\t// { dg-error \"lvalue\" }\n     sink_2_36(cva);          // { dg-error \"no match\" }\n     sink_2_36(v_source());   // { dg-error \"no match\" }\n     sink_2_36(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n \n three sink_2_37(volatile       A&);  // { dg-message \"candidate\" }\n-seven sink_2_37(volatile       A&&);  // { dg-message \"note\" }\n+seven sink_2_37(volatile       A&&);  // { dg-message \"note|argument\" }\n \n int test2_37()\n {\n@@ -270,8 +301,21 @@ int test2_37()\n     return 0;\n }\n \n+three sink_2_38(volatile       A&);\n+eight sink_2_38(const volatile A&&); // { dg-error \"argument\" }\n+\n+int test2_38()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_2_38(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_2_38(cva);\t\t// { dg-error \"lvalue\" }\n+}\n+\n four  sink_2_45(const volatile A&);   // { dg-message \"candidate\" }\n-five  sink_2_45(               A&&);  // { dg-message \"note\" }\n+five  sink_2_45(               A&&);  // { dg-message \"note|argument\" }\n \n int test2_45()\n {\n@@ -286,7 +330,7 @@ int test2_45()\n }\n \n four  sink_2_46(const volatile A&);   // { dg-message \"candidate\" }\n-six   sink_2_46(const          A&&);  // { dg-message \"note\" }\n+six   sink_2_46(const          A&&);  // { dg-message \"note|argument\" }\n \n int test2_46()\n {\n@@ -300,7 +344,7 @@ int test2_46()\n }\n \n four  sink_2_47(const volatile A&);   // { dg-message \"candidate\" }\n-seven sink_2_47(volatile       A&&);  // { dg-message \"note\" }\n+seven sink_2_47(volatile       A&&);  // { dg-message \"note|argument\" }\n \n int test2_47()\n {\n@@ -313,40 +357,59 @@ int test2_47()\n     return 0;\n }\n \n-five  sink_2_56(               A&&);  // { dg-message \"candidate\" }\n-six   sink_2_56(const          A&&);  // { dg-message \"note\" }\n+five  sink_2_56(               A&&);  // { dg-message \"candidate|argument\" }\n+six   sink_2_56(const          A&&);  // { dg-message \"note|argument\" }\n \n int test2_56()\n {\n                    A a;\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_2_56(a);\t\t// { dg-error \"lvalue\" }\n+    sink_2_56(ca);\t\t// { dg-error \"lvalue\" }\n     sink_2_56(va);           // { dg-error \"no match\" }\n     sink_2_56(cva);          // { dg-error \"no match\" }\n     sink_2_56(v_source());   // { dg-error \"no match\" }\n     sink_2_56(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n \n-five  sink_2_57(               A&&);  // { dg-message \"candidate\" }\n-seven sink_2_57(volatile       A&&);  // { dg-message \"note\" }\n+five  sink_2_57(               A&&);  // { dg-message \"candidate|argument\" }\n+seven sink_2_57(volatile       A&&);  // { dg-message \"note|argument\" }\n \n int test2_57()\n {\n                    A a;\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_2_57(a);\t\t// { dg-error \"lvalue\" }\n+    sink_2_57(va);\t\t// { dg-error \"lvalue\" }\n     sink_2_57(ca);           // { dg-error \"no match\" }\n     sink_2_57(cva);          // { dg-error \"no match\" }\n     sink_2_57(c_source());   // { dg-error \"no match\" }\n     sink_2_57(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n \n-six   sink_2_67(const          A&&);  // { dg-message \"candidate\" }\n-seven sink_2_67(volatile       A&&);  // { dg-message \"note\" }\n+five  sink_2_58(               A&&); // { dg-error \"argument\" }\n+eight sink_2_58(const volatile A&&); // { dg-error \"argument\" }\n+\n+int test2_58()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_2_58(a);\t\t// { dg-error \"lvalue\" }\n+    sink_2_58(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_2_58(va);\t\t// { dg-error \"lvalue\" }\n+    sink_2_58(cva);\t\t// { dg-error \"lvalue\" }\n+}\n+\n+six   sink_2_67(const          A&&);  // { dg-message \"candidate|argument\" }\n+seven sink_2_67(volatile       A&&);  // { dg-message \"note|argument\" }\n \n int test2_67()\n {\n@@ -355,12 +418,44 @@ int test2_67()\n           volatile A va;\n     const volatile A cva = a;\n     sink_2_67(a);            // { dg-error \"ambiguous\" }\n+    sink_2_67(ca);\t     // { dg-error \"lvalue\" }\n+    sink_2_67(va);\t     // { dg-error \"lvalue\" }\n     sink_2_67(cva);          // { dg-error \"no match\" }\n     sink_2_67(source());     // { dg-error \"ambiguous\" }\n     sink_2_67(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n \n+six   sink_2_68(const          A&&); // { dg-error \"argument\" }\n+eight sink_2_68(const volatile A&&); // { dg-error \"argument\" }\n+\n+int test2_68()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_2_68(a);\t\t// { dg-error \"lvalue\" }\n+    sink_2_68(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_2_68(va);\t\t// { dg-error \"lvalue\" }\n+    sink_2_68(cva);\t\t// { dg-error \"lvalue\" }\n+}\n+\n+seven sink_2_78(volatile       A&&); // { dg-error \"argument\" }\n+eight sink_2_78(const volatile A&&); // { dg-error \"argument\" }\n+\n+int test2_78()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_2_78(a);\t\t// { dg-error \"lvalue\" }\n+    sink_2_78(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_2_78(va);\t\t// { dg-error \"lvalue\" }\n+    sink_2_78(cva);\t\t// { dg-error \"lvalue\" }\n+}\n+\n int main()\n {\n     return test2_12() + test2_13() + test2_15() + test2_16() +"}, {"sha": "61c4fb046b6a136861a11a67a27740a142b68b62", "filename": "gcc/testsuite/g++.dg/cpp0x/rv2p.C", "status": "modified", "additions": 1, "deletions": 30, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv2p.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv2p.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv2p.C?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -1,6 +1,6 @@\n // I, Howard Hinnant, hereby place this code in the public domain.\n \n-// Test overlaod resolution among referece types\n+// Test overload resolution among reference types\n \n // { dg-do compile }\n // { dg-options \"-std=c++0x\" }\n@@ -100,7 +100,6 @@ int test2_16()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_2_16(a))           == 1> t1;\n-    sa<sizeof(sink_2_16(ca))          == 6> t2;\n     sa<sizeof(sink_2_16(source()))    == 6> t5;\n     sa<sizeof(sink_2_16(c_source()))  == 6> t6;\n     return 0;\n@@ -116,7 +115,6 @@ int test2_17()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_2_17(a))           == 1> t1;\n-    sa<sizeof(sink_2_17(va))          == 7> t3;\n     sa<sizeof(sink_2_17(source()))    == 7> t5;\n     sa<sizeof(sink_2_17(v_source()))  == 7> t7;\n     return 0;\n@@ -132,9 +130,6 @@ int test2_18()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_2_18(a))           == 1> t1;\n-    sa<sizeof(sink_2_18(ca))          == 8> t2;\n-    sa<sizeof(sink_2_18(va))          == 8> t3;\n-    sa<sizeof(sink_2_18(cva))         == 8> t4;\n     sa<sizeof(sink_2_18(source()))    == 8> t5;\n     sa<sizeof(sink_2_18(c_source()))  == 8> t6;\n     sa<sizeof(sink_2_18(v_source()))  == 8> t7;\n@@ -221,7 +216,6 @@ int test2_27()\n     const volatile A cva = a;\n     sa<sizeof(sink_2_27(a))           == 2> t1;\n     sa<sizeof(sink_2_27(ca))          == 2> t2;\n-    sa<sizeof(sink_2_27(va))          == 7> t3;\n     sa<sizeof(sink_2_27(source()))    == 7> t5;\n     sa<sizeof(sink_2_27(c_source()))  == 2> t6;\n     sa<sizeof(sink_2_27(v_source()))  == 7> t7;\n@@ -239,8 +233,6 @@ int test2_28()\n     const volatile A cva = a;\n     sa<sizeof(sink_2_28(a))           == 2> t1;\n     sa<sizeof(sink_2_28(ca))          == 2> t2;\n-    sa<sizeof(sink_2_28(va))          == 8> t3;\n-    sa<sizeof(sink_2_28(cva))         == 8> t4;\n     sa<sizeof(sink_2_28(source()))    == 8> t5;\n     sa<sizeof(sink_2_28(c_source()))  == 8> t6;\n     sa<sizeof(sink_2_28(v_source()))  == 8> t7;\n@@ -293,7 +285,6 @@ int test2_36()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_2_36(a))           == 3> t1;\n-    sa<sizeof(sink_2_36(ca))          == 6> t2;\n     sa<sizeof(sink_2_36(va))          == 3> t3;\n     sa<sizeof(sink_2_36(source()))    == 6> t5;\n     sa<sizeof(sink_2_36(c_source()))  == 6> t6;\n@@ -326,9 +317,7 @@ int test2_38()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_2_38(a))           == 3> t1;\n-    sa<sizeof(sink_2_38(ca))          == 8> t2;\n     sa<sizeof(sink_2_38(va))          == 3> t3;\n-    sa<sizeof(sink_2_38(cva))         == 8> t4;\n     sa<sizeof(sink_2_38(source()))    == 8> t5;\n     sa<sizeof(sink_2_38(c_source()))  == 8> t6;\n     sa<sizeof(sink_2_38(v_source()))  == 8> t7;\n@@ -425,8 +414,6 @@ int test2_56()\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n-    sa<sizeof(sink_2_56(a))           == 5> t1;\n-    sa<sizeof(sink_2_56(ca))          == 6> t2;\n     sa<sizeof(sink_2_56(source()))    == 5> t5;\n     sa<sizeof(sink_2_56(c_source()))  == 6> t6;\n     return 0;\n@@ -441,8 +428,6 @@ int test2_57()\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n-    sa<sizeof(sink_2_57(a))           == 5> t1;\n-    sa<sizeof(sink_2_57(va))          == 7> t3;\n     sa<sizeof(sink_2_57(source()))    == 5> t5;\n     sa<sizeof(sink_2_57(v_source()))  == 7> t7;\n     return 0;\n@@ -457,10 +442,6 @@ int test2_58()\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n-    sa<sizeof(sink_2_58(a))           == 5> t1;\n-    sa<sizeof(sink_2_58(ca))          == 8> t2;\n-    sa<sizeof(sink_2_58(va))          == 8> t3;\n-    sa<sizeof(sink_2_58(cva))         == 8> t4;\n     sa<sizeof(sink_2_58(source()))    == 5> t5;\n     sa<sizeof(sink_2_58(c_source()))  == 8> t6;\n     sa<sizeof(sink_2_58(v_source()))  == 8> t7;\n@@ -477,8 +458,6 @@ int test2_67()\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n-    sa<sizeof(sink_2_67(ca))          == 6> t2;\n-    sa<sizeof(sink_2_67(va))          == 7> t3;\n     sa<sizeof(sink_2_67(c_source()))  == 6> t6;\n     sa<sizeof(sink_2_67(v_source()))  == 7> t7;\n     return 0;\n@@ -493,10 +472,6 @@ int test2_68()\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n-    sa<sizeof(sink_2_68(a))           == 6> t1;\n-    sa<sizeof(sink_2_68(ca))          == 6> t2;\n-    sa<sizeof(sink_2_68(va))          == 8> t3;\n-    sa<sizeof(sink_2_68(cva))         == 8> t4;\n     sa<sizeof(sink_2_68(source()))    == 6> t5;\n     sa<sizeof(sink_2_68(c_source()))  == 6> t6;\n     sa<sizeof(sink_2_68(v_source()))  == 8> t7;\n@@ -513,10 +488,6 @@ int test2_78()\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n-    sa<sizeof(sink_2_78(a))           == 7> t1;\n-    sa<sizeof(sink_2_78(ca))          == 8> t2;\n-    sa<sizeof(sink_2_78(va))          == 7> t3;\n-    sa<sizeof(sink_2_78(cva))         == 8> t4;\n     sa<sizeof(sink_2_78(source()))    == 7> t5;\n     sa<sizeof(sink_2_78(c_source()))  == 8> t6;\n     sa<sizeof(sink_2_78(v_source()))  == 7> t7;"}, {"sha": "0c208ab6ed004af3c7adce61686836cc29ba3001", "filename": "gcc/testsuite/g++.dg/cpp0x/rv3n.C", "status": "modified", "additions": 237, "deletions": 18, "changes": 255, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv3n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv3n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv3n.C?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -1,6 +1,6 @@\n // I, Howard Hinnant, hereby place this code in the public domain.\n \n-// Test overlaod resolution among referece types\n+// Test overload resolution among reference types\n \n // { dg-do compile }\n // { dg-options \"-std=c++0x\" }\n@@ -97,19 +97,35 @@ int test3_126()\n \n one   sink_3_127(               A&);  // { dg-message \"candidates\" }\n two   sink_3_127(const          A&);  // { dg-message \"note\" }\n-seven sink_3_127(volatile       A&&);  // { dg-message \"note\" }\n+seven sink_3_127(volatile       A&&);  // { dg-message \"\" }\n \n int test3_127()\n {\n                    A a;\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_3_127(va);\t\t// { dg-error \"lvalue\" }\n     sink_3_127(cva);          // { dg-error \"no match\" }\n     sink_3_127(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n \n+one   sink_3_128(               A&);\n+two   sink_3_128(const          A&);\n+eight sink_3_128(const volatile A&&); // { dg-message \"\" }\n+\n+int test3_128()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+\n+    sink_3_128(va);\t\t// { dg-error \"lvalue\" }\n+    sink_3_128(cva);\t\t// { dg-error \"lvalue\" }\n+}\n+\n one   sink_3_134(               A&);  // { dg-message \"candidates\" }\n three sink_3_134(volatile       A&);  // { dg-message \"note\" }\n four  sink_3_134(const volatile A&);  // { dg-message \"note\" }\n@@ -147,14 +163,15 @@ int test3_135()\n \n one   sink_3_136(               A&);  // { dg-message \"candidates\" }\n three sink_3_136(volatile       A&);  // { dg-message \"note\" }\n-six   sink_3_136(const          A&&);  // { dg-message \"note\" }\n+six   sink_3_136(const          A&&);  // { dg-message \"\" }\n \n int test3_136()\n {\n                    A a;\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_3_136(ca);\t\t// { dg-error \"lvalue\" }\n     sink_3_136(cva);          // { dg-error \"no match\" }\n     sink_3_136(v_source());   // { dg-error \"no match\" }\n     sink_3_136(cv_source());  // { dg-error \"no match\" }\n@@ -178,6 +195,21 @@ int test3_137()\n     return 0;\n }\n \n+one   sink_3_138(               A&);\n+three sink_3_138(volatile       A&);\n+eight sink_3_138(const volatile A&&); // { dg-message \"\" }\n+\n+int test3_138()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_3_138(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_3_138(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n one   sink_3_145(               A&);  // { dg-message \"candidates\" }\n four  sink_3_145(const volatile A&);  // { dg-message \"note\" }\n five  sink_3_145(               A&&);  // { dg-message \"note\" }\n@@ -226,14 +258,15 @@ int test3_147()\n \n one   sink_3_156(               A&);  // { dg-message \"candidates\" }\n five  sink_3_156(               A&&);  // { dg-message \"note\" }\n-six   sink_3_156(const          A&&);  // { dg-message \"note\" }\n+six   sink_3_156(const          A&&);  // { dg-message \"\" }\n \n int test3_156()\n {\n                    A a;\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_3_156(ca);\t\t// { dg-error \"lvalue\" }\n     sink_3_156(va);           // { dg-error \"no match\" }\n     sink_3_156(cva);          // { dg-error \"no match\" }\n     sink_3_156(v_source());   // { dg-error \"no match\" }\n@@ -243,7 +276,7 @@ int test3_156()\n \n one   sink_3_157(               A&);  // { dg-message \"candidates\" }\n five  sink_3_157(               A&&);  // { dg-message \"note\" }\n-seven sink_3_157(volatile       A&&);  // { dg-message \"note\" }\n+seven sink_3_157(volatile       A&&);  // { dg-message \"\" }\n \n int test3_157()\n {\n@@ -252,28 +285,79 @@ int test3_157()\n           volatile A va;\n     const volatile A cva = a;\n     sink_3_157(ca);           // { dg-error \"no match\" }\n+    sink_3_157(va);\t      // { dg-error \"lvalue\" }\n     sink_3_157(cva);          // { dg-error \"no match\" }\n     sink_3_157(c_source());   // { dg-error \"no match\" }\n     sink_3_157(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n \n+one   sink_3_158(               A&);\n+five  sink_3_158(               A&&);\n+eight sink_3_158(const volatile A&&); // { dg-message \"\" }\n+\n+int test3_158()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_3_158(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_3_158(va);\t\t// { dg-error \"lvalue\" }\n+    sink_3_158(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n one   sink_3_167(               A&);  // { dg-message \"candidates\" }\n-six   sink_3_167(const          A&&);  // { dg-message \"note\" }\n-seven sink_3_167(volatile       A&&);  // { dg-message \"note\" }\n+six   sink_3_167(const          A&&);  // { dg-message \"\" }\n+seven sink_3_167(volatile       A&&);  // { dg-message \"\" }\n \n int test3_167()\n {\n                    A a;\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_3_167(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_3_167(va);\t\t// { dg-error \"lvalue\" }\n     sink_3_167(cva);          // { dg-error \"no match\" }\n     sink_3_167(source());     // { dg-error \"ambiguous\" }\n     sink_3_167(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n \n+one   sink_3_168(               A&);\n+six   sink_3_168(const          A&&); // { dg-message \"\" }\n+eight sink_3_168(const volatile A&&); // { dg-message \"\" }\n+\n+int test3_168()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_3_168(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_3_168(va);\t\t// { dg-error \"lvalue\" }\n+    sink_3_168(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n+one   sink_3_178(               A&);\n+seven sink_3_178(volatile       A&&); // { dg-message \"\" }\n+eight sink_3_178(const volatile A&&); // { dg-message \"\" }\n+\n+int test3_178()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_3_178(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_3_178(va);\t\t// { dg-error \"lvalue\" }\n+    sink_3_178(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n two   sink_3_234(const          A&);  // { dg-message \"candidates\" }\n three sink_3_234(volatile       A&);  // { dg-message \"note\" }\n four  sink_3_234(const volatile A&);  // { dg-message \"note\" }\n@@ -342,7 +426,7 @@ int test3_237()\n \n two   sink_3_238(const          A&);  // { dg-message \"candidates\" }\n three sink_3_238(volatile       A&);  // { dg-message \"note\" }\n-eight sink_3_238(const volatile A&&);  // { dg-message \"note\" }\n+eight sink_3_238(const volatile A&&);  // { dg-message \"\" }\n \n int test3_238()\n {\n@@ -351,6 +435,7 @@ int test3_238()\n           volatile A va;\n     const volatile A cva = a;\n     sink_3_238(a);  // { dg-error \"ambiguous\" }\n+    sink_3_238(cva); // { dg-error \"lvalue\" }\n     return 0;\n }\n \n@@ -417,35 +502,82 @@ int test3_256()\n \n two   sink_3_257(const          A&);  // { dg-message \"candidates\" }\n five  sink_3_257(               A&&);  // { dg-message \"note\" }\n-seven sink_3_257(volatile       A&&);  // { dg-message \"note\" }\n+seven sink_3_257(volatile       A&&);  // { dg-message \"\" }\n \n int test3_257()\n {\n                    A a;\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_3_257(va);\t\t// { dg-error \"lvalue\" }\n     sink_3_257(cva);          // { dg-error \"no match\" }\n     sink_3_257(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n \n+two   sink_3_258(const          A&);\n+five  sink_3_258(               A&&);\n+eight sink_3_258(const volatile A&&); // { dg-message \"\" }\n+\n+int test3_258()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_3_258(va);\t\t// { dg-error \"lvalue\" }\n+    sink_3_258(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n two   sink_3_267(const          A&);  // { dg-message \"candidates\" }\n six   sink_3_267(const          A&&);  // { dg-message \"note\" }\n-seven sink_3_267(volatile       A&&);  // { dg-message \"note\" }\n+seven sink_3_267(volatile       A&&);  // { dg-message \"\" }\n \n int test3_267()\n {\n                    A a;\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_3_267(va);\t\t// { dg-error \"lvalue\" }\n     sink_3_267(cva);          // { dg-error \"no match\" }\n     sink_3_267(source());     // { dg-error \"ambiguous\" }\n     sink_3_267(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n \n+two   sink_3_268(const          A&);\n+six   sink_3_268(const          A&&);\n+eight sink_3_268(const volatile A&&); // { dg-message \"\" }\n+\n+int test3_268()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_3_268(va);\t\t// { dg-error \"lvalue\" }\n+    sink_3_268(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n+two   sink_3_278(const          A&);\n+seven sink_3_278(volatile       A&&); // { dg-message \"\" }\n+eight sink_3_278(const volatile A&&); // { dg-message \"\" }\n+\n+int test3_278()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_3_278(va);\t\t// { dg-error \"lvalue\" }\n+    sink_3_278(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n three sink_3_345(volatile       A&);  // { dg-message \"candidates\" }\n four  sink_3_345(const volatile A&);  // { dg-message \"note\" }\n five  sink_3_345(               A&&);  // { dg-message \"note\" }\n@@ -494,14 +626,15 @@ int test3_347()\n \n three sink_3_356(volatile       A&);  // { dg-message \"candidates\" }\n five  sink_3_356(               A&&);  // { dg-message \"note\" }\n-six   sink_3_356(const          A&&);  // { dg-message \"note\" }\n+six   sink_3_356(const          A&&);  // { dg-message \"\" }\n \n int test3_356()\n {\n                    A a;\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_3_356(ca);\t\t// { dg-error \"lvalue\" }\n     sink_3_356(cva);          // { dg-error \"no match\" }\n     sink_3_356(v_source());   // { dg-error \"no match\" }\n     sink_3_356(cv_source());  // { dg-error \"no match\" }\n@@ -525,8 +658,23 @@ int test3_357()\n     return 0;\n }\n \n+three sink_3_358(volatile       A&);\n+five  sink_3_358(               A&&);\n+eight sink_3_358(const volatile A&&); // { dg-message \"\" }\n+\n+int test3_358()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_3_358(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_3_358(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n three sink_3_367(volatile       A&);  // { dg-message \"candidates\" }\n-six   sink_3_367(const          A&&);  // { dg-message \"note\" }\n+six   sink_3_367(const          A&&);  // { dg-message \"\" }\n seven sink_3_367(volatile       A&&);  // { dg-message \"note\" }\n \n int test3_367()\n@@ -535,12 +683,43 @@ int test3_367()\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_3_367(ca);\t\t// { dg-error \"lvalue\" }\n     sink_3_367(cva);          // { dg-error \"no match\" }\n     sink_3_367(source());     // { dg-error \"ambiguous\" }\n     sink_3_367(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n \n+three sink_3_368(volatile       A&);\n+six   sink_3_368(const          A&&); // { dg-message \"\" }\n+eight sink_3_368(const volatile A&&); // { dg-message \"\" }\n+\n+int test3_368()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_3_368(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_3_368(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n+three sink_3_378(volatile       A&);\n+seven sink_3_378(volatile       A&&);\n+eight sink_3_378(const volatile A&&); // { dg-message \"\" }\n+\n+int test3_378()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_3_378(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_3_378(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n four  sink_3_456(const volatile A&);  // { dg-message \"candidates\" }\n five  sink_3_456(               A&&);  // { dg-message \"note\" }\n six   sink_3_456(const          A&&);  // { dg-message \"note\" }\n@@ -586,24 +765,61 @@ int test3_467()\n     return 0;\n }\n \n-five  sink_3_567(               A&&);  // { dg-message \"candidates\" }\n-six   sink_3_567(const          A&&);  // { dg-message \"note\" }\n-seven sink_3_567(volatile       A&&);  // { dg-message \"note\" }\n+five  sink_3_567(               A&&);  // { dg-message \"\" }\n+six   sink_3_567(const          A&&);  // { dg-message \"\" }\n+seven sink_3_567(volatile       A&&);  // { dg-message \"\" }\n \n int test3_567()\n {\n                    A a;\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_3_567(a);\t\t// { dg-error \"lvalue\" }\n+    sink_3_567(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_3_567(va);\t\t// { dg-error \"lvalue\" }\n     sink_3_567(cva);          // { dg-error \"no match\" }\n     sink_3_567(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n \n-six   sink_3_678(const          A&&);  // { dg-message \"candidates\" }\n-seven sink_3_678(volatile       A&&);  // { dg-message \"note\" }\n-eight sink_3_678(const volatile A&&);  // { dg-message \"note\" }\n+five  sink_3_568(               A&&); // { dg-message \"\" }\n+six   sink_3_568(const          A&&); // { dg-message \"\" }\n+eight sink_3_568(const volatile A&&); // { dg-message \"\" }\n+\n+int test3_568()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_3_568(a);\t\t// { dg-error \"lvalue\" }\n+    sink_3_568(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_3_568(va);\t\t// { dg-error \"lvalue\" }\n+    sink_3_568(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n+five  sink_3_578(               A&&); // { dg-message \"\" }\n+seven sink_3_578(volatile       A&&); // { dg-message \"\" }\n+eight sink_3_578(const volatile A&&); // { dg-message \"\" }\n+\n+int test3_578()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_3_578(a);\t\t// { dg-error \"lvalue\" }\n+    sink_3_578(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_3_578(va);\t\t// { dg-error \"lvalue\" }\n+    sink_3_578(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n+six   sink_3_678(const          A&&);  // { dg-message \"\" }\n+seven sink_3_678(volatile       A&&);  // { dg-message \"\" }\n+eight sink_3_678(const volatile A&&);  // { dg-message \"\" }\n \n int test3_678()\n {\n@@ -612,6 +828,9 @@ int test3_678()\n           volatile A va;\n     const volatile A cva = a;\n     sink_3_678(a);          // { dg-error \"ambiguous\" }\n+    sink_3_678(ca);\t    // { dg-error \"lvalue\" }\n+    sink_3_678(va);\t    // { dg-error \"lvalue\" }\n+    sink_3_678(cva);\t    // { dg-error \"lvalue\" }\n     sink_3_678(source());   // { dg-error \"ambiguous\" }\n     return 0;\n }"}, {"sha": "5ab171f26552fcfa9e238baaedcd09fe8630cd1d", "filename": "gcc/testsuite/g++.dg/cpp0x/rv3p.C", "status": "modified", "additions": 1, "deletions": 51, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv3p.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv3p.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv3p.C?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -1,6 +1,6 @@\n // I, Howard Hinnant, hereby place this code in the public domain.\n \n-// Test overlaod resolution among referece types\n+// Test overload resolution among reference types\n \n // { dg-do compile }\n // { dg-options \"-std=c++0x\" }\n@@ -113,7 +113,6 @@ int test3_127()\n     const volatile A cva = a;\n     sa<sizeof(sink_3_127(a))           == 1> t1;\n     sa<sizeof(sink_3_127(ca))          == 2> t2;\n-    sa<sizeof(sink_3_127(va))          == 7> t3;\n     sa<sizeof(sink_3_127(source()))    == 7> t5;\n     sa<sizeof(sink_3_127(c_source()))  == 2> t6;\n     sa<sizeof(sink_3_127(v_source()))  == 7> t7;\n@@ -132,8 +131,6 @@ int test3_128()\n     const volatile A cva = a;\n     sa<sizeof(sink_3_128(a))           == 1> t1;\n     sa<sizeof(sink_3_128(ca))          == 2> t2;\n-    sa<sizeof(sink_3_128(va))          == 8> t3;\n-    sa<sizeof(sink_3_128(cva))         == 8> t4;\n     sa<sizeof(sink_3_128(source()))    == 8> t5;\n     sa<sizeof(sink_3_128(c_source()))  == 8> t6;\n     sa<sizeof(sink_3_128(v_source()))  == 8> t7;\n@@ -185,7 +182,6 @@ int test3_136()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_3_136(a))           == 1> t1;\n-    sa<sizeof(sink_3_136(ca))          == 6> t2;\n     sa<sizeof(sink_3_136(va))          == 3> t3;\n     sa<sizeof(sink_3_136(source()))    == 6> t5;\n     sa<sizeof(sink_3_136(c_source()))  == 6> t6;\n@@ -220,9 +216,7 @@ int test3_138()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_3_138(a))           == 1> t1;\n-    sa<sizeof(sink_3_138(ca))          == 8> t2;\n     sa<sizeof(sink_3_138(va))          == 3> t3;\n-    sa<sizeof(sink_3_138(cva))         == 8> t4;\n     sa<sizeof(sink_3_138(source()))    == 8> t5;\n     sa<sizeof(sink_3_138(c_source()))  == 8> t6;\n     sa<sizeof(sink_3_138(v_source()))  == 8> t7;\n@@ -318,7 +312,6 @@ int test3_156()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_3_156(a))           == 1> t1;\n-    sa<sizeof(sink_3_156(ca))          == 6> t2;\n     sa<sizeof(sink_3_156(source()))    == 5> t5;\n     sa<sizeof(sink_3_156(c_source()))  == 6> t6;\n     return 0;\n@@ -335,7 +328,6 @@ int test3_157()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_3_157(a))           == 1> t1;\n-    sa<sizeof(sink_3_157(va))          == 7> t3;\n     sa<sizeof(sink_3_157(source()))    == 5> t5;\n     sa<sizeof(sink_3_157(v_source()))  == 7> t7;\n     return 0;\n@@ -352,9 +344,6 @@ int test3_158()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_3_158(a))           == 1> t1;\n-    sa<sizeof(sink_3_158(ca))          == 8> t2;\n-    sa<sizeof(sink_3_158(va))          == 8> t3;\n-    sa<sizeof(sink_3_158(cva))         == 8> t4;\n     sa<sizeof(sink_3_158(source()))    == 5> t5;\n     sa<sizeof(sink_3_158(c_source()))  == 8> t6;\n     sa<sizeof(sink_3_158(v_source()))  == 8> t7;\n@@ -373,8 +362,6 @@ int test3_167()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_3_167(a))           == 1> t1;\n-    sa<sizeof(sink_3_167(ca))          == 6> t2;\n-    sa<sizeof(sink_3_167(va))          == 7> t3;\n     sa<sizeof(sink_3_167(c_source()))  == 6> t6;\n     sa<sizeof(sink_3_167(v_source()))  == 7> t7;\n     return 0;\n@@ -391,9 +378,6 @@ int test3_168()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_3_168(a))           == 1> t1;\n-    sa<sizeof(sink_3_168(ca))          == 6> t2;\n-    sa<sizeof(sink_3_168(va))          == 8> t3;\n-    sa<sizeof(sink_3_168(cva))         == 8> t4;\n     sa<sizeof(sink_3_168(source()))    == 6> t5;\n     sa<sizeof(sink_3_168(c_source()))  == 6> t6;\n     sa<sizeof(sink_3_168(v_source()))  == 8> t7;\n@@ -412,9 +396,6 @@ int test3_178()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_3_178(a))           == 1> t1;\n-    sa<sizeof(sink_3_178(ca))          == 8> t2;\n-    sa<sizeof(sink_3_178(va))          == 7> t3;\n-    sa<sizeof(sink_3_178(cva))         == 8> t4;\n     sa<sizeof(sink_3_178(source()))    == 7> t5;\n     sa<sizeof(sink_3_178(c_source()))  == 8> t6;\n     sa<sizeof(sink_3_178(v_source()))  == 7> t7;\n@@ -504,7 +485,6 @@ int test3_238()\n     const volatile A cva = a;\n     sa<sizeof(sink_3_238(ca))          == 2> t2;\n     sa<sizeof(sink_3_238(va))          == 3> t3;\n-    sa<sizeof(sink_3_238(cva))         == 8> t4;\n     sa<sizeof(sink_3_238(source()))    == 8> t5;\n     sa<sizeof(sink_3_238(c_source()))  == 8> t6;\n     sa<sizeof(sink_3_238(v_source()))  == 8> t7;\n@@ -620,7 +600,6 @@ int test3_257()\n     const volatile A cva = a;\n     sa<sizeof(sink_3_257(a))           == 2> t1;\n     sa<sizeof(sink_3_257(ca))          == 2> t2;\n-    sa<sizeof(sink_3_257(va))          == 7> t3;\n     sa<sizeof(sink_3_257(source()))    == 5> t5;\n     sa<sizeof(sink_3_257(c_source()))  == 2> t6;\n     sa<sizeof(sink_3_257(v_source()))  == 7> t7;\n@@ -639,8 +618,6 @@ int test3_258()\n     const volatile A cva = a;\n     sa<sizeof(sink_3_258(a))           == 2> t1;\n     sa<sizeof(sink_3_258(ca))          == 2> t2;\n-    sa<sizeof(sink_3_258(va))          == 8> t3;\n-    sa<sizeof(sink_3_258(cva))         == 8> t4;\n     sa<sizeof(sink_3_258(source()))    == 5> t5;\n     sa<sizeof(sink_3_258(c_source()))  == 8> t6;\n     sa<sizeof(sink_3_258(v_source()))  == 8> t7;\n@@ -660,7 +637,6 @@ int test3_267()\n     const volatile A cva = a;\n     sa<sizeof(sink_3_267(a))           == 2> t1;\n     sa<sizeof(sink_3_267(ca))          == 2> t2;\n-    sa<sizeof(sink_3_267(va))          == 7> t3;\n     sa<sizeof(sink_3_267(c_source()))  == 6> t6;\n     sa<sizeof(sink_3_267(v_source()))  == 7> t7;\n     return 0;\n@@ -678,8 +654,6 @@ int test3_268()\n     const volatile A cva = a;\n     sa<sizeof(sink_3_268(a))           == 2> t1;\n     sa<sizeof(sink_3_268(ca))          == 2> t2;\n-    sa<sizeof(sink_3_268(va))          == 8> t3;\n-    sa<sizeof(sink_3_268(cva))         == 8> t4;\n     sa<sizeof(sink_3_268(source()))    == 6> t5;\n     sa<sizeof(sink_3_268(c_source()))  == 6> t6;\n     sa<sizeof(sink_3_268(v_source()))  == 8> t7;\n@@ -699,8 +673,6 @@ int test3_278()\n     const volatile A cva = a;\n     sa<sizeof(sink_3_278(a))           == 2> t1;\n     sa<sizeof(sink_3_278(ca))          == 2> t2;\n-    sa<sizeof(sink_3_278(va))          == 7> t3;\n-    sa<sizeof(sink_3_278(cva))         == 8> t4;\n     sa<sizeof(sink_3_278(source()))    == 7> t5;\n     sa<sizeof(sink_3_278(c_source()))  == 8> t6;\n     sa<sizeof(sink_3_278(v_source()))  == 7> t7;\n@@ -796,7 +768,6 @@ int test3_356()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_3_356(a))           == 3> t1;\n-    sa<sizeof(sink_3_356(ca))          == 6> t2;\n     sa<sizeof(sink_3_356(va))          == 3> t3;\n     sa<sizeof(sink_3_356(source()))    == 5> t5;\n     sa<sizeof(sink_3_356(c_source()))  == 6> t6;\n@@ -831,9 +802,7 @@ int test3_358()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_3_358(a))           == 3> t1;\n-    sa<sizeof(sink_3_358(ca))          == 8> t2;\n     sa<sizeof(sink_3_358(va))          == 3> t3;\n-    sa<sizeof(sink_3_358(cva))         == 8> t4;\n     sa<sizeof(sink_3_358(source()))    == 5> t5;\n     sa<sizeof(sink_3_358(c_source()))  == 8> t6;\n     sa<sizeof(sink_3_358(v_source()))  == 8> t7;\n@@ -852,7 +821,6 @@ int test3_367()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_3_367(a))           == 3> t1;\n-    sa<sizeof(sink_3_367(ca))          == 6> t2;\n     sa<sizeof(sink_3_367(va))          == 3> t3;\n     sa<sizeof(sink_3_367(c_source()))  == 6> t6;\n     sa<sizeof(sink_3_367(v_source()))  == 7> t7;\n@@ -870,9 +838,7 @@ int test3_368()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_3_368(a))           == 3> t1;\n-    sa<sizeof(sink_3_368(ca))          == 6> t2;\n     sa<sizeof(sink_3_368(va))          == 3> t3;\n-    sa<sizeof(sink_3_368(cva))         == 8> t4;\n     sa<sizeof(sink_3_368(source()))    == 6> t5;\n     sa<sizeof(sink_3_368(c_source()))  == 6> t6;\n     sa<sizeof(sink_3_368(v_source()))  == 8> t7;\n@@ -891,9 +857,7 @@ int test3_378()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_3_378(a))           == 3> t1;\n-    sa<sizeof(sink_3_378(ca))          == 8> t2;\n     sa<sizeof(sink_3_378(va))          == 3> t3;\n-    sa<sizeof(sink_3_378(cva))         == 8> t4;\n     sa<sizeof(sink_3_378(source()))    == 7> t5;\n     sa<sizeof(sink_3_378(c_source()))  == 8> t6;\n     sa<sizeof(sink_3_378(v_source()))  == 7> t7;\n@@ -1031,9 +995,6 @@ int test3_567()\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n-    sa<sizeof(sink_3_567(a))           == 5> t1;\n-    sa<sizeof(sink_3_567(ca))          == 6> t2;\n-    sa<sizeof(sink_3_567(va))          == 7> t3;\n     sa<sizeof(sink_3_567(source()))    == 5> t5;\n     sa<sizeof(sink_3_567(c_source()))  == 6> t6;\n     sa<sizeof(sink_3_567(v_source()))  == 7> t7;\n@@ -1050,10 +1011,6 @@ int test3_568()\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n-    sa<sizeof(sink_3_568(a))           == 5> t1;\n-    sa<sizeof(sink_3_568(ca))          == 6> t2;\n-    sa<sizeof(sink_3_568(va))          == 8> t3;\n-    sa<sizeof(sink_3_568(cva))         == 8> t4;\n     sa<sizeof(sink_3_568(source()))    == 5> t5;\n     sa<sizeof(sink_3_568(c_source()))  == 6> t6;\n     sa<sizeof(sink_3_568(v_source()))  == 8> t7;\n@@ -1071,10 +1028,6 @@ int test3_578()\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n-    sa<sizeof(sink_3_578(a))           == 5> t1;\n-    sa<sizeof(sink_3_578(ca))          == 8> t2;\n-    sa<sizeof(sink_3_578(va))          == 7> t3;\n-    sa<sizeof(sink_3_578(cva))         == 8> t4;\n     sa<sizeof(sink_3_578(source()))    == 5> t5;\n     sa<sizeof(sink_3_578(c_source()))  == 8> t6;\n     sa<sizeof(sink_3_578(v_source()))  == 7> t7;\n@@ -1092,9 +1045,6 @@ int test3_678()\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n-    sa<sizeof(sink_3_678(ca))          == 6> t2;\n-    sa<sizeof(sink_3_678(va))          == 7> t3;\n-    sa<sizeof(sink_3_678(cva))         == 8> t4;\n     sa<sizeof(sink_3_678(c_source()))  == 6> t6;\n     sa<sizeof(sink_3_678(v_source()))  == 7> t7;\n     sa<sizeof(sink_3_678(cv_source())) == 8> t8;"}, {"sha": "cf627aed3f0737d79a5a02c302011ff61d33170f", "filename": "gcc/testsuite/g++.dg/cpp0x/rv4n.C", "status": "modified", "additions": 264, "deletions": 19, "changes": 283, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv4n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv4n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv4n.C?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -1,6 +1,6 @@\n // I, Howard Hinnant, hereby place this code in the public domain.\n \n-// Test overlaod resolution among referece types\n+// Test overload resolution among reference types\n \n // { dg-do compile }\n // { dg-options \"-std=c++0x\" }\n@@ -96,6 +96,21 @@ int test4_1237()\n     return 0;\n }\n \n+one   sink_4_1238(               A&);\n+two   sink_4_1238(const          A&);\n+three sink_4_1238(volatile       A&);\n+eight sink_4_1238(const volatile A&&); // { dg-message \"\" }\n+\n+int test4_1238()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_4_1238(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n one   sink_4_1245(               A&);  // { dg-message \"candidates\" }\n two   sink_4_1245(const          A&);  // { dg-message \"note\" }\n four  sink_4_1245(const volatile A&);  // { dg-message \"note\" }\n@@ -164,36 +179,86 @@ int test4_1256()\n one   sink_4_1257(               A&);  // { dg-message \"candidates\" }\n two   sink_4_1257(const          A&);  // { dg-message \"note\" }\n five  sink_4_1257(               A&&);  // { dg-message \"note\" }\n-seven sink_4_1257(volatile       A&&);  // { dg-message \"note\" }\n+seven sink_4_1257(volatile       A&&);  // { dg-message \"\" }\n \n int test4_1257()\n {\n                    A a;\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_4_1257(va);\t\t// { dg-error \"lvalue\" }\n     sink_4_1257(cva);          // { dg-error \"no match\" }\n     sink_4_1257(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n \n+one   sink_4_1258(               A&);\n+two   sink_4_1258(const          A&);\n+five  sink_4_1258(               A&&);\n+eight sink_4_1258(const volatile A&&); // { dg-message \"\" }\n+\n+int test4_1258()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_4_1258(va);\t\t// { dg-error \"lvalue\" }\n+    sink_4_1258(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n one   sink_4_1267(               A&);  // { dg-message \"candidates\" }\n two   sink_4_1267(const          A&);  // { dg-message \"note\" }\n six   sink_4_1267(const          A&&);  // { dg-message \"note\" }\n-seven sink_4_1267(volatile       A&&);  // { dg-message \"note\" }\n+seven sink_4_1267(volatile       A&&);  // { dg-message \"\" }\n \n int test4_1267()\n {\n                    A a;\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_4_1267(va);\t\t// { dg-error \"lvalue\" }\n     sink_4_1267(cva);          // { dg-error \"no match\" }\n     sink_4_1267(source());     // { dg-error \"ambiguous\" }\n     sink_4_1267(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n \n+one   sink_4_1268(               A&);\n+two   sink_4_1268(const          A&);\n+six   sink_4_1268(const          A&&);\n+eight sink_4_1268(const volatile A&&); // { dg-message \"\" }\n+\n+int test4_1268()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_4_1268(va);\t\t// { dg-error \"lvalue\" }\n+    sink_4_1268(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n+one   sink_4_1278(               A&);\n+two   sink_4_1278(const          A&);\n+seven sink_4_1278(volatile       A&&); // { dg-message \"\" }\n+eight sink_4_1278(const volatile A&&); // { dg-message \"\" }\n+\n+int test4_1278()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_4_1278(va);\t\t// { dg-error \"lvalue\" }\n+    sink_4_1278(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n one   sink_4_1345(               A&);  // { dg-message \"candidates\" }\n three sink_4_1345(volatile       A&);  // { dg-message \"note\" }\n four  sink_4_1345(const volatile A&);  // { dg-message \"note\" }\n@@ -246,14 +311,15 @@ int test4_1347()\n one   sink_4_1356(               A&);  // { dg-message \"candidates\" }\n three sink_4_1356(volatile       A&);  // { dg-message \"note\" }\n five  sink_4_1356(               A&&);  // { dg-message \"note\" }\n-six   sink_4_1356(const          A&&);  // { dg-message \"note\" }\n+six   sink_4_1356(const          A&&);  // { dg-message \"\" }\n \n int test4_1356()\n {\n                    A a;\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_4_1356(ca);\t\t// { dg-error \"lvalue\" }\n     sink_4_1356(cva);          // { dg-error \"no match\" }\n     sink_4_1356(v_source());   // { dg-error \"no match\" }\n     sink_4_1356(cv_source());  // { dg-error \"no match\" }\n@@ -278,9 +344,25 @@ int test4_1357()\n     return 0;\n }\n \n+one   sink_4_1358(               A&);\n+three sink_4_1358(volatile       A&);\n+five  sink_4_1358(               A&&);\n+eight sink_4_1358(const volatile A&&); // { dg-message \"\" }\n+\n+int test4_1358()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_4_1358(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_4_1358(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n one   sink_4_1367(               A&);  // { dg-message \"candidates\" }\n three sink_4_1367(volatile       A&);  // { dg-message \"note\" }\n-six   sink_4_1367(const          A&&);  // { dg-message \"note\" }\n+six   sink_4_1367(const          A&&);  // { dg-message \"\" }\n seven sink_4_1367(volatile       A&&);  // { dg-message \"note\" }\n \n int test4_1367()\n@@ -289,12 +371,45 @@ int test4_1367()\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_4_1367(ca);\t\t// { dg-error \"lvalue\" }\n     sink_4_1367(cva);          // { dg-error \"no match\" }\n     sink_4_1367(source());     // { dg-error \"ambiguous\" }\n     sink_4_1367(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n \n+one   sink_4_1368(               A&);\n+three sink_4_1368(volatile       A&);\n+six   sink_4_1368(const          A&&); // { dg-message \"\" }\n+eight sink_4_1368(const volatile A&&); // { dg-message \"\" }\n+\n+int test4_1368()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_4_1368(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_4_1368(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n+one   sink_4_1378(               A&);\n+three sink_4_1378(volatile       A&);\n+seven sink_4_1378(volatile       A&&);\n+eight sink_4_1378(const volatile A&&); // { dg-message \"\" }\n+\n+int test4_1378()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_4_1378(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_4_1378(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n one   sink_4_1456(               A&);  // { dg-message \"candidates\" }\n four  sink_4_1456(const volatile A&);  // { dg-message \"note\" }\n five  sink_4_1456(               A&&);  // { dg-message \"note\" }\n@@ -345,31 +460,70 @@ int test4_1467()\n \n one   sink_4_1567(               A&);  // { dg-message \"candidates\" }\n five  sink_4_1567(               A&&);  // { dg-message \"note\" }\n-six   sink_4_1567(const          A&&);  // { dg-message \"note\" }\n-seven sink_4_1567(volatile       A&&);  // { dg-message \"note\" }\n+six   sink_4_1567(const          A&&);  // { dg-message \"\" }\n+seven sink_4_1567(volatile       A&&);  // { dg-message \"\" }\n \n int test4_1567()\n {\n                    A a;\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_4_1567(ca);\t       // { dg-error \"lvalue\" }\n+    sink_4_1567(va);\t       // { dg-error \"lvalue\" }\n     sink_4_1567(cva);          // { dg-error \"no match\" }\n     sink_4_1567(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n \n+one   sink_4_1568(               A&);\n+five  sink_4_1568(               A&&);\n+six   sink_4_1568(const          A&&); // { dg-message \"\" }\n+eight sink_4_1568(const volatile A&&); // { dg-message \"\" }\n+\n+int test4_1568()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_4_1568(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_4_1568(va);\t\t// { dg-error \"lvalue\" }\n+    sink_4_1568(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n+one   sink_4_1578(               A&);\n+five  sink_4_1578(               A&&);\n+seven sink_4_1578(volatile       A&&); // { dg-message \"\" }\n+eight sink_4_1578(const volatile A&&); // { dg-message \"\" }\n+\n+int test4_1578()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_4_1578(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_4_1578(va);\t\t// { dg-error \"lvalue\" }\n+    sink_4_1578(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n one   sink_4_1678(               A&);\n-six   sink_4_1678(const          A&&);  // { dg-message \"candidates\" }\n-seven sink_4_1678(volatile       A&&);  // { dg-message \"note\" }\n-eight sink_4_1678(const volatile A&&);  // { dg-message \"note\" }\n+six   sink_4_1678(const          A&&);  // { dg-message \"\" }\n+seven sink_4_1678(volatile       A&&);  // { dg-message \"\" }\n+eight sink_4_1678(const volatile A&&);  // { dg-message \"\" }\n \n int test4_1678()\n {\n                    A a;\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_4_1678(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_4_1678(va);\t\t// { dg-error \"lvalue\" }\n+    sink_4_1678(cva);\t\t// { dg-error \"lvalue\" }\n     sink_4_1678(source());  // { dg-error \"ambiguous\" }\n     return 0;\n }\n@@ -477,7 +631,7 @@ int test4_2357()\n two   sink_4_2358(const          A&);  // { dg-message \"candidates\" }\n three sink_4_2358(volatile       A&);  // { dg-message \"note\" }\n five  sink_4_2358(               A&&);  // { dg-message \"note\" }\n-eight sink_4_2358(const volatile A&&);  // { dg-message \"note\" }\n+eight sink_4_2358(const volatile A&&);  // { dg-message \"\" }\n \n int test4_2358()\n {\n@@ -486,6 +640,7 @@ int test4_2358()\n           volatile A va;\n     const volatile A cva = a;\n     sink_4_2358(a);  // { dg-error \"ambiguous\" }\n+    sink_4_2358(cva); // { dg-error \"lvalue\" }\n     return 0;\n }\n \n@@ -510,7 +665,7 @@ int test4_2367()\n two   sink_4_2368(const          A&);  // { dg-message \"candidates\" }\n three sink_4_2368(volatile       A&);  // { dg-message \"note\" }\n six   sink_4_2368(const          A&&);  // { dg-message \"note\" }\n-eight sink_4_2368(const volatile A&&);  // { dg-message \"note\" }\n+eight sink_4_2368(const volatile A&&);  // { dg-message \"\" }\n \n int test4_2368()\n {\n@@ -519,13 +674,14 @@ int test4_2368()\n           volatile A va;\n     const volatile A cva = a;\n     sink_4_2368(a);  // { dg-error \"ambiguous\" }\n+    sink_4_2368(cva); // { dg-error \"lvalue\" }\n     return 0;\n }\n \n two   sink_4_2378(const          A&);  // { dg-message \"candidates\" }\n three sink_4_2378(volatile       A&);  // { dg-message \"note\" }\n seven sink_4_2378(volatile       A&&);  // { dg-message \"note\" }\n-eight sink_4_2378(const volatile A&&);  // { dg-message \"note\" }\n+eight sink_4_2378(const volatile A&&);  // { dg-message \"\" }\n \n int test4_2378()\n {\n@@ -534,6 +690,7 @@ int test4_2378()\n           volatile A va;\n     const volatile A cva = a;\n     sink_4_2378(a);  // { dg-error \"ambiguous\" }\n+    sink_4_2378(cva); // { dg-error \"lvalue\" }\n     return 0;\n }\n \n@@ -587,30 +744,65 @@ int test4_2467()\n two   sink_4_2567(const          A&);  // { dg-message \"candidates\" }\n five  sink_4_2567(               A&&);  // { dg-message \"note\" }\n six   sink_4_2567(const          A&&);  // { dg-message \"note\" }\n-seven sink_4_2567(volatile       A&&);  // { dg-message \"note\" }\n+seven sink_4_2567(volatile       A&&);  // { dg-message \"\" }\n \n int test4_2567()\n {\n                    A a;\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_4_2567(va);\t\t// { dg-error \"lvalue\" }\n     sink_4_2567(cva);          // { dg-error \"no match\" }\n     sink_4_2567(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n \n+two   sink_4_2568(const          A&);\n+five  sink_4_2568(               A&&);\n+six   sink_4_2568(const          A&&);\n+eight sink_4_2568(const volatile A&&); // { dg-message \"\" }\n+\n+int test4_2568()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_4_2568(va); // { dg-error \"lvalue\" }\n+    sink_4_2568(cva); // { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n+two   sink_4_2578(const          A&);\n+five  sink_4_2578(               A&&);\n+seven sink_4_2578(volatile       A&&); // { dg-message \"\" }\n+eight sink_4_2578(const volatile A&&); // { dg-message \"\" }\n+\n+int test4_2578()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_4_2578(va); // { dg-error \"lvalue\" }\n+    sink_4_2578(cva); // { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n two   sink_4_2678(const          A&);  // { dg-message \"candidates\" }\n six   sink_4_2678(const          A&&);  // { dg-message \"note\" }\n-seven sink_4_2678(volatile       A&&);  // { dg-message \"note\" }\n-eight sink_4_2678(const volatile A&&);  // { dg-message \"note\" }\n+seven sink_4_2678(volatile       A&&);  // { dg-message \"\" }\n+eight sink_4_2678(const volatile A&&);  // { dg-message \"\" }\n \n int test4_2678()\n {\n                    A a;\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_4_2678(va); // { dg-error \"lvalue\" }\n+    sink_4_2678(cva); // { dg-error \"lvalue\" }\n     sink_4_2678(source());  // { dg-error \"ambiguous\" }\n     return 0;\n }\n@@ -665,7 +857,7 @@ int test4_3467()\n \n three sink_4_3567(volatile       A&);  // { dg-message \"candidates\" }\n five  sink_4_3567(               A&&);  // { dg-message \"note\" }\n-six   sink_4_3567(const          A&&);  // { dg-message \"note\" }\n+six   sink_4_3567(const          A&&);  // { dg-message \"\" }\n seven sink_4_3567(volatile       A&&);  // { dg-message \"note\" }\n \n int test4_3567()\n@@ -674,22 +866,57 @@ int test4_3567()\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_4_3567(ca);\t\t// { dg-error \"lvalue\" }\n     sink_4_3567(cva);          // { dg-error \"no match\" }\n     sink_4_3567(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n \n+three sink_4_3568(volatile       A&);\n+five  sink_4_3568(               A&&);\n+six   sink_4_3568(const          A&&); // { dg-message \"\" }\n+eight sink_4_3568(const volatile A&&); // { dg-message \"\" }\n+\n+int test4_3568()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_4_3568(ca); // { dg-error \"lvalue\" }\n+    sink_4_3568(cva); // { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n+three sink_4_3578(volatile       A&);\n+five  sink_4_3578(               A&&);\n+seven sink_4_3578(volatile       A&&);\n+eight sink_4_3578(const volatile A&&); // { dg-message \"\" }\n+\n+int test4_3578()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_4_3578(ca); // { dg-error \"lvalue\" }\n+    sink_4_3578(cva); // { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n three sink_4_3678(volatile       A&);\n-six   sink_4_3678(const          A&&);  // { dg-message \"candidates\" }\n+six   sink_4_3678(const          A&&);  // { dg-message \"\" }\n seven sink_4_3678(volatile       A&&);  // { dg-message \"note\" }\n-eight sink_4_3678(const volatile A&&);  // { dg-message \"note\" }\n+eight sink_4_3678(const volatile A&&);  // { dg-message \"\" }\n \n int test4_3678()\n {\n                    A a;\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_4_3678(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_4_3678(cva);\t\t// { dg-error \"lvalue\" }\n     sink_4_3678(source());  // { dg-error \"ambiguous\" }\n     return 0;\n }\n@@ -724,6 +951,24 @@ int test4_4678()\n     return 0;\n }\n \n+five  sink_4_5678(               A&&); // { dg-message \"\" }\n+six   sink_4_5678(const          A&&); // { dg-message \"\" }\n+seven sink_4_5678(volatile       A&&); // { dg-message \"\" }\n+eight sink_4_5678(const volatile A&&); // { dg-message \"\" }\n+\n+int test4_5678()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_4_5678(a);\t\t// { dg-error \"lvalue\" }\n+    sink_4_5678(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_4_5678(va);\t\t// { dg-error \"lvalue\" }\n+    sink_4_5678(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n int main()\n {\n     return test4_1235() + test4_1236() + test4_1237() + test4_1256() + test4_1257() +"}, {"sha": "03ad97346147387df4ca2a46e353dc5b0e440a4e", "filename": "gcc/testsuite/g++.dg/cpp0x/rv4p.C", "status": "modified", "additions": 1, "deletions": 50, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv4p.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv4p.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv4p.C?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -1,6 +1,6 @@\n // I, Howard Hinnant, hereby place this code in the public domain.\n \n-// Test overlaod resolution among referece types\n+// Test overload resolution among reference types\n \n // { dg-do compile }\n // { dg-options \"-std=c++0x\" }\n@@ -122,7 +122,6 @@ int test4_1238()\n     sa<sizeof(sink_4_1238(a))           == 1> t1;\n     sa<sizeof(sink_4_1238(ca))          == 2> t2;\n     sa<sizeof(sink_4_1238(va))          == 3> t3;\n-    sa<sizeof(sink_4_1238(cva))         == 8> t4;\n     sa<sizeof(sink_4_1238(source()))    == 8> t5;\n     sa<sizeof(sink_4_1238(c_source()))  == 8> t6;\n     sa<sizeof(sink_4_1238(v_source()))  == 8> t7;\n@@ -244,7 +243,6 @@ int test4_1257()\n     const volatile A cva = a;\n     sa<sizeof(sink_4_1257(a))           == 1> t1;\n     sa<sizeof(sink_4_1257(ca))          == 2> t2;\n-    sa<sizeof(sink_4_1257(va))          == 7> t3;\n     sa<sizeof(sink_4_1257(source()))    == 5> t5;\n     sa<sizeof(sink_4_1257(c_source()))  == 2> t6;\n     sa<sizeof(sink_4_1257(v_source()))  == 7> t7;\n@@ -264,8 +262,6 @@ int test4_1258()\n     const volatile A cva = a;\n     sa<sizeof(sink_4_1258(a))           == 1> t1;\n     sa<sizeof(sink_4_1258(ca))          == 2> t2;\n-    sa<sizeof(sink_4_1258(va))          == 8> t3;\n-    sa<sizeof(sink_4_1258(cva))         == 8> t4;\n     sa<sizeof(sink_4_1258(source()))    == 5> t5;\n     sa<sizeof(sink_4_1258(c_source()))  == 8> t6;\n     sa<sizeof(sink_4_1258(v_source()))  == 8> t7;\n@@ -286,7 +282,6 @@ int test4_1267()\n     const volatile A cva = a;\n     sa<sizeof(sink_4_1267(a))           == 1> t1;\n     sa<sizeof(sink_4_1267(ca))          == 2> t2;\n-    sa<sizeof(sink_4_1267(va))          == 7> t3;\n     sa<sizeof(sink_4_1267(c_source()))  == 6> t6;\n     sa<sizeof(sink_4_1267(v_source()))  == 7> t7;\n     return 0;\n@@ -305,8 +300,6 @@ int test4_1268()\n     const volatile A cva = a;\n     sa<sizeof(sink_4_1268(a))           == 1> t1;\n     sa<sizeof(sink_4_1268(ca))          == 2> t2;\n-    sa<sizeof(sink_4_1268(va))          == 8> t3;\n-    sa<sizeof(sink_4_1268(cva))         == 8> t4;\n     sa<sizeof(sink_4_1268(source()))    == 6> t5;\n     sa<sizeof(sink_4_1268(c_source()))  == 6> t6;\n     sa<sizeof(sink_4_1268(v_source()))  == 8> t7;\n@@ -327,8 +320,6 @@ int test4_1278()\n     const volatile A cva = a;\n     sa<sizeof(sink_4_1278(a))           == 1> t1;\n     sa<sizeof(sink_4_1278(ca))          == 2> t2;\n-    sa<sizeof(sink_4_1278(va))          == 7> t3;\n-    sa<sizeof(sink_4_1278(cva))         == 8> t4;\n     sa<sizeof(sink_4_1278(source()))    == 7> t5;\n     sa<sizeof(sink_4_1278(c_source()))  == 8> t6;\n     sa<sizeof(sink_4_1278(v_source()))  == 7> t7;\n@@ -429,7 +420,6 @@ int test4_1356()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_4_1356(a))           == 1> t1;\n-    sa<sizeof(sink_4_1356(ca))          == 6> t2;\n     sa<sizeof(sink_4_1356(va))          == 3> t3;\n     sa<sizeof(sink_4_1356(source()))    == 5> t5;\n     sa<sizeof(sink_4_1356(c_source()))  == 6> t6;\n@@ -466,9 +456,7 @@ int test4_1358()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_4_1358(a))           == 1> t1;\n-    sa<sizeof(sink_4_1358(ca))          == 8> t2;\n     sa<sizeof(sink_4_1358(va))          == 3> t3;\n-    sa<sizeof(sink_4_1358(cva))         == 8> t4;\n     sa<sizeof(sink_4_1358(source()))    == 5> t5;\n     sa<sizeof(sink_4_1358(c_source()))  == 8> t6;\n     sa<sizeof(sink_4_1358(v_source()))  == 8> t7;\n@@ -488,7 +476,6 @@ int test4_1367()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_4_1367(a))           == 1> t1;\n-    sa<sizeof(sink_4_1367(ca))          == 6> t2;\n     sa<sizeof(sink_4_1367(va))          == 3> t3;\n     sa<sizeof(sink_4_1367(c_source()))  == 6> t6;\n     sa<sizeof(sink_4_1367(v_source()))  == 7> t7;\n@@ -507,9 +494,7 @@ int test4_1368()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_4_1368(a))           == 1> t1;\n-    sa<sizeof(sink_4_1368(ca))          == 6> t2;\n     sa<sizeof(sink_4_1368(va))          == 3> t3;\n-    sa<sizeof(sink_4_1368(cva))         == 8> t4;\n     sa<sizeof(sink_4_1368(source()))    == 6> t5;\n     sa<sizeof(sink_4_1368(c_source()))  == 6> t6;\n     sa<sizeof(sink_4_1368(v_source()))  == 8> t7;\n@@ -529,9 +514,7 @@ int test4_1378()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_4_1378(a))           == 1> t1;\n-    sa<sizeof(sink_4_1378(ca))          == 8> t2;\n     sa<sizeof(sink_4_1378(va))          == 3> t3;\n-    sa<sizeof(sink_4_1378(cva))         == 8> t4;\n     sa<sizeof(sink_4_1378(source()))    == 7> t5;\n     sa<sizeof(sink_4_1378(c_source()))  == 8> t6;\n     sa<sizeof(sink_4_1378(v_source()))  == 7> t7;\n@@ -677,8 +660,6 @@ int test4_1567()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_4_1567(a))           == 1> t1;\n-    sa<sizeof(sink_4_1567(ca))          == 6> t2;\n-    sa<sizeof(sink_4_1567(va))          == 7> t3;\n     sa<sizeof(sink_4_1567(source()))    == 5> t5;\n     sa<sizeof(sink_4_1567(c_source()))  == 6> t6;\n     sa<sizeof(sink_4_1567(v_source()))  == 7> t7;\n@@ -697,9 +678,6 @@ int test4_1568()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_4_1568(a))           == 1> t1;\n-    sa<sizeof(sink_4_1568(ca))          == 6> t2;\n-    sa<sizeof(sink_4_1568(va))          == 8> t3;\n-    sa<sizeof(sink_4_1568(cva))         == 8> t4;\n     sa<sizeof(sink_4_1568(source()))    == 5> t5;\n     sa<sizeof(sink_4_1568(c_source()))  == 6> t6;\n     sa<sizeof(sink_4_1568(v_source()))  == 8> t7;\n@@ -719,9 +697,6 @@ int test4_1578()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_4_1578(a))           == 1> t1;\n-    sa<sizeof(sink_4_1578(ca))          == 8> t2;\n-    sa<sizeof(sink_4_1578(va))          == 7> t3;\n-    sa<sizeof(sink_4_1578(cva))         == 8> t4;\n     sa<sizeof(sink_4_1578(source()))    == 5> t5;\n     sa<sizeof(sink_4_1578(c_source()))  == 8> t6;\n     sa<sizeof(sink_4_1578(v_source()))  == 7> t7;\n@@ -741,9 +716,6 @@ int test4_1678()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_4_1678(a))           == 1> t1;\n-    sa<sizeof(sink_4_1678(ca))          == 6> t2;\n-    sa<sizeof(sink_4_1678(va))          == 7> t3;\n-    sa<sizeof(sink_4_1678(cva))         == 8> t4;\n     sa<sizeof(sink_4_1678(c_source()))  == 6> t6;\n     sa<sizeof(sink_4_1678(v_source()))  == 7> t7;\n     sa<sizeof(sink_4_1678(cv_source())) == 8> t8;\n@@ -879,7 +851,6 @@ int test4_2358()\n     const volatile A cva = a;\n     sa<sizeof(sink_4_2358(ca))          == 2> t2;\n     sa<sizeof(sink_4_2358(va))          == 3> t3;\n-    sa<sizeof(sink_4_2358(cva))         == 8> t4;\n     sa<sizeof(sink_4_2358(source()))    == 5> t5;\n     sa<sizeof(sink_4_2358(c_source()))  == 8> t6;\n     sa<sizeof(sink_4_2358(v_source()))  == 8> t7;\n@@ -918,7 +889,6 @@ int test4_2368()\n     const volatile A cva = a;\n     sa<sizeof(sink_4_2368(ca))          == 2> t2;\n     sa<sizeof(sink_4_2368(va))          == 3> t3;\n-    sa<sizeof(sink_4_2368(cva))         == 8> t4;\n     sa<sizeof(sink_4_2368(source()))    == 6> t5;\n     sa<sizeof(sink_4_2368(c_source()))  == 6> t6;\n     sa<sizeof(sink_4_2368(v_source()))  == 8> t7;\n@@ -939,7 +909,6 @@ int test4_2378()\n     const volatile A cva = a;\n     sa<sizeof(sink_4_2378(ca))          == 2> t2;\n     sa<sizeof(sink_4_2378(va))          == 3> t3;\n-    sa<sizeof(sink_4_2378(cva))         == 8> t4;\n     sa<sizeof(sink_4_2378(source()))    == 7> t5;\n     sa<sizeof(sink_4_2378(c_source()))  == 8> t6;\n     sa<sizeof(sink_4_2378(v_source()))  == 7> t7;\n@@ -1087,7 +1056,6 @@ int test4_2567()\n     const volatile A cva = a;\n     sa<sizeof(sink_4_2567(a))           == 2> t1;\n     sa<sizeof(sink_4_2567(ca))          == 2> t2;\n-    sa<sizeof(sink_4_2567(va))          == 7> t3;\n     sa<sizeof(sink_4_2567(source()))    == 5> t5;\n     sa<sizeof(sink_4_2567(c_source()))  == 6> t6;\n     sa<sizeof(sink_4_2567(v_source()))  == 7> t7;\n@@ -1107,8 +1075,6 @@ int test4_2568()\n     const volatile A cva = a;\n     sa<sizeof(sink_4_2568(a))           == 2> t1;\n     sa<sizeof(sink_4_2568(ca))          == 2> t2;\n-    sa<sizeof(sink_4_2568(va))          == 8> t3;\n-    sa<sizeof(sink_4_2568(cva))         == 8> t4;\n     sa<sizeof(sink_4_2568(source()))    == 5> t5;\n     sa<sizeof(sink_4_2568(c_source()))  == 6> t6;\n     sa<sizeof(sink_4_2568(v_source()))  == 8> t7;\n@@ -1129,8 +1095,6 @@ int test4_2578()\n     const volatile A cva = a;\n     sa<sizeof(sink_4_2578(a))           == 2> t1;\n     sa<sizeof(sink_4_2578(ca))          == 2> t2;\n-    sa<sizeof(sink_4_2578(va))          == 7> t3;\n-    sa<sizeof(sink_4_2578(cva))         == 8> t4;\n     sa<sizeof(sink_4_2578(source()))    == 5> t5;\n     sa<sizeof(sink_4_2578(c_source()))  == 8> t6;\n     sa<sizeof(sink_4_2578(v_source()))  == 7> t7;\n@@ -1151,8 +1115,6 @@ int test4_2678()\n     const volatile A cva = a;\n     sa<sizeof(sink_4_2678(a))           == 2> t1;\n     sa<sizeof(sink_4_2678(ca))          == 2> t2;\n-    sa<sizeof(sink_4_2678(va))          == 7> t3;\n-    sa<sizeof(sink_4_2678(cva))         == 8> t4;\n     sa<sizeof(sink_4_2678(c_source()))  == 6> t6;\n     sa<sizeof(sink_4_2678(v_source()))  == 7> t7;\n     sa<sizeof(sink_4_2678(cv_source())) == 8> t8;\n@@ -1297,7 +1259,6 @@ int test4_3567()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_4_3567(a))           == 3> t1;\n-    sa<sizeof(sink_4_3567(ca))          == 6> t2;\n     sa<sizeof(sink_4_3567(va))          == 3> t3;\n     sa<sizeof(sink_4_3567(source()))    == 5> t5;\n     sa<sizeof(sink_4_3567(c_source()))  == 6> t6;\n@@ -1317,9 +1278,7 @@ int test4_3568()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_4_3568(a))           == 3> t1;\n-    sa<sizeof(sink_4_3568(ca))          == 6> t2;\n     sa<sizeof(sink_4_3568(va))          == 3> t3;\n-    sa<sizeof(sink_4_3568(cva))         == 8> t4;\n     sa<sizeof(sink_4_3568(source()))    == 5> t5;\n     sa<sizeof(sink_4_3568(c_source()))  == 6> t6;\n     sa<sizeof(sink_4_3568(v_source()))  == 8> t7;\n@@ -1339,9 +1298,7 @@ int test4_3578()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_4_3578(a))           == 3> t1;\n-    sa<sizeof(sink_4_3578(ca))          == 8> t2;\n     sa<sizeof(sink_4_3578(va))          == 3> t3;\n-    sa<sizeof(sink_4_3578(cva))         == 8> t4;\n     sa<sizeof(sink_4_3578(source()))    == 5> t5;\n     sa<sizeof(sink_4_3578(c_source()))  == 8> t6;\n     sa<sizeof(sink_4_3578(v_source()))  == 7> t7;\n@@ -1361,9 +1318,7 @@ int test4_3678()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_4_3678(a))           == 3> t1;\n-    sa<sizeof(sink_4_3678(ca))          == 6> t2;\n     sa<sizeof(sink_4_3678(va))          == 3> t3;\n-    sa<sizeof(sink_4_3678(cva))         == 8> t4;\n     sa<sizeof(sink_4_3678(c_source()))  == 6> t6;\n     sa<sizeof(sink_4_3678(v_source()))  == 7> t7;\n     sa<sizeof(sink_4_3678(cv_source())) == 8> t8;\n@@ -1467,10 +1422,6 @@ int test4_5678()\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n-    sa<sizeof(sink_4_5678(a))           == 5> t1;\n-    sa<sizeof(sink_4_5678(ca))          == 6> t2;\n-    sa<sizeof(sink_4_5678(va))          == 7> t3;\n-    sa<sizeof(sink_4_5678(cva))         == 8> t4;\n     sa<sizeof(sink_4_5678(source()))    == 5> t5;\n     sa<sizeof(sink_4_5678(c_source()))  == 6> t6;\n     sa<sizeof(sink_4_5678(v_source()))  == 7> t7;"}, {"sha": "c31a30b2d6f07d96f03b03e66ab6b1b364a7a9de", "filename": "gcc/testsuite/g++.dg/cpp0x/rv5n.C", "status": "modified", "additions": 187, "deletions": 10, "changes": 197, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv5n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv5n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv5n.C?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -1,6 +1,6 @@\n // I, Howard Hinnant, hereby place this code in the public domain.\n \n-// Test overlaod resolution among referece types\n+// Test overload resolution among reference types\n \n // { dg-do compile }\n // { dg-options \"-std=c++0x\" }\n@@ -115,6 +115,22 @@ int test5_12357()\n     return 0;\n }\n \n+one   sink_5_12358(               A&);\n+two   sink_5_12358(const          A&);\n+three sink_5_12358(volatile       A&);\n+five  sink_5_12358(               A&&);\n+eight sink_5_12358(const volatile A&&); // { dg-message \"\" }\n+\n+int test5_12358()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_5_12358(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n one   sink_5_12367(               A&);  // { dg-message \"candidates\" }\n two   sink_5_12367(const          A&);  // { dg-message \"note\" }\n three sink_5_12367(volatile       A&);  // { dg-message \"note\" }\n@@ -133,6 +149,38 @@ int test5_12367()\n     return 0;\n }\n \n+one   sink_5_12368(               A&);\n+two   sink_5_12368(const          A&);\n+three sink_5_12368(volatile       A&);\n+six   sink_5_12368(const          A&&);\n+eight sink_5_12368(const volatile A&&); // { dg-message \"\" }\n+\n+int test5_12368()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_5_12368(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n+one   sink_5_12378(               A&);\n+two   sink_5_12378(const          A&);\n+three sink_5_12378(volatile       A&);\n+seven sink_5_12378(volatile       A&&);\n+eight sink_5_12378(const volatile A&&); // { dg-message \"\" }\n+\n+int test5_12378()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_5_12378(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n one   sink_5_12456(               A&);  // { dg-message \"candidates\" }\n two   sink_5_12456(const          A&);  // { dg-message \"note\" }\n four  sink_5_12456(const volatile A&);  // { dg-message \"note\" }\n@@ -187,31 +235,68 @@ one   sink_5_12567(               A&);  // { dg-message \"candidates\" }\n two   sink_5_12567(const          A&);  // { dg-message \"note\" }\n five  sink_5_12567(               A&&);  // { dg-message \"note\" }\n six   sink_5_12567(const          A&&);  // { dg-message \"note\" }\n-seven sink_5_12567(volatile       A&&);  // { dg-message \"note\" }\n+seven sink_5_12567(volatile       A&&);  // { dg-message \"\" }\n \n int test5_12567()\n {\n                    A a;\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_5_12567(va);\t\t// { dg-error \"lvalue\" }\n     sink_5_12567(cva);          // { dg-error \"no match\" }\n     sink_5_12567(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n \n+one   sink_5_12568(               A&);\n+two   sink_5_12568(const          A&);\n+five  sink_5_12568(               A&&);\n+six   sink_5_12568(const          A&&);\n+eight sink_5_12568(const volatile A&&); // { dg-message \"\" }\n+\n+int test5_12568()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_5_12568(va);\t\t// { dg-error \"lvalue\" }\n+    sink_5_12568(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n+one   sink_5_12578(               A&);\n+two   sink_5_12578(const          A&);\n+five  sink_5_12578(               A&&);\n+seven sink_5_12578(volatile       A&&); // { dg-message \"\" }\n+eight sink_5_12578(const volatile A&&); // { dg-message \"\" }\n+\n+int test5_12578()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_5_12578(va);\t\t// { dg-error \"lvalue\" }\n+    sink_5_12578(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n one   sink_5_12678(               A&);\n two   sink_5_12678(const          A&);  // { dg-message \"candidates\" }\n six   sink_5_12678(const          A&&);  // { dg-message \"note\" }\n-seven sink_5_12678(volatile       A&&);  // { dg-message \"note\" }\n-eight sink_5_12678(const volatile A&&);  // { dg-message \"note\" }\n+seven sink_5_12678(volatile       A&&);  // { dg-message \"\" }\n+eight sink_5_12678(const volatile A&&);  // { dg-message \"\" }\n \n int test5_12678()\n {\n                    A a;\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_5_12678(va);\t\t// { dg-error \"lvalue\" }\n+    sink_5_12678(cva);\t\t// { dg-error \"lvalue\" }\n     sink_5_12678(source());  // { dg-error \"ambiguous\" }\n     return 0;\n }\n@@ -270,7 +355,7 @@ int test5_13467()\n one   sink_5_13567(               A&);  // { dg-message \"candidates\" }\n three sink_5_13567(volatile       A&);  // { dg-message \"note\" }\n five  sink_5_13567(               A&&);  // { dg-message \"note\" }\n-six   sink_5_13567(const          A&&);  // { dg-message \"note\" }\n+six   sink_5_13567(const          A&&);  // { dg-message \"\" }\n seven sink_5_13567(volatile       A&&);  // { dg-message \"note\" }\n \n int test5_13567()\n@@ -279,23 +364,60 @@ int test5_13567()\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_5_13567(ca);\t\t// { dg-error \"lvalue\" }\n     sink_5_13567(cva);          // { dg-error \"no match\" }\n     sink_5_13567(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n \n+one   sink_5_13568(               A&);\n+three sink_5_13568(volatile       A&);\n+five  sink_5_13568(               A&&);\n+six   sink_5_13568(const          A&&); // { dg-message \"\" }\n+eight sink_5_13568(const volatile A&&); // { dg-message \"\" }\n+\n+int test5_13568()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_5_13568(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_5_13568(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n+one   sink_5_13578(               A&);\n+three sink_5_13578(volatile       A&);\n+five  sink_5_13578(               A&&);\n+seven sink_5_13578(volatile       A&&);\n+eight sink_5_13578(const volatile A&&); // { dg-message \"\" }\n+\n+int test5_13578()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_5_13578(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_5_13578(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n one   sink_5_13678(               A&);\n three sink_5_13678(volatile       A&);\n-six   sink_5_13678(const          A&&);  // { dg-message \"candidates\" }\n+six   sink_5_13678(const          A&&);  // { dg-message \"\" }\n seven sink_5_13678(volatile       A&&);  // { dg-message \"note\" }\n-eight sink_5_13678(const volatile A&&);  // { dg-message \"note\" }\n+eight sink_5_13678(const volatile A&&);  // { dg-message \"\" }\n \n int test5_13678()\n {\n                    A a;\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_5_13678(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_5_13678(cva);\t\t// { dg-error \"lvalue\" }\n     sink_5_13678(source());  // { dg-error \"ambiguous\" }\n     return 0;\n }\n@@ -332,6 +454,24 @@ int test5_14678()\n     return 0;\n }\n \n+one   sink_5_15678(               A&);\n+five  sink_5_15678(               A&&);\n+six   sink_5_15678(const          A&&); // { dg-message \"\" }\n+seven sink_5_15678(volatile       A&&); // { dg-message \"\" }\n+eight sink_5_15678(const volatile A&&); // { dg-message \"\" }\n+\n+int test5_15678()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_5_15678(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_5_15678(va);\t\t// { dg-error \"lvalue\" }\n+    sink_5_15678(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n two   sink_5_23456(const          A&);  // { dg-message \"candidates\" }\n three sink_5_23456(volatile       A&);  // { dg-message \"note\" }\n four  sink_5_23456(const volatile A&);  // { dg-message \"note\" }\n@@ -455,14 +595,15 @@ two   sink_5_23568(const          A&);  // { dg-message \"candidates\" }\n three sink_5_23568(volatile       A&);  // { dg-message \"note\" }\n five  sink_5_23568(               A&&);  // { dg-message \"note\" }\n six   sink_5_23568(const          A&&);  // { dg-message \"note\" }\n-eight sink_5_23568(const volatile A&&);  // { dg-message \"note\" }\n+eight sink_5_23568(const volatile A&&);  // { dg-message \"\" }\n \n int test5_23568()\n {\n                    A a;\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_5_23568(cva); // { dg-error \"lvalue\" }\n     sink_5_23568(a);  // { dg-error \"ambiguous\" }\n     return 0;\n }\n@@ -471,14 +612,15 @@ two   sink_5_23578(const          A&);  // { dg-message \"candidates\" }\n three sink_5_23578(volatile       A&);  // { dg-message \"note\" }\n five  sink_5_23578(               A&&);  // { dg-message \"note\" }\n seven sink_5_23578(volatile       A&&);  // { dg-message \"note\" }\n-eight sink_5_23578(const volatile A&&);  // { dg-message \"note\" }\n+eight sink_5_23578(const volatile A&&);  // { dg-message \"\" }\n \n int test5_23578()\n {\n                    A a;\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_5_23578(cva); // { dg-error \"lvalue\" }\n     sink_5_23578(a);  // { dg-error \"ambiguous\" }\n     return 0;\n }\n@@ -487,7 +629,7 @@ two   sink_5_23678(const          A&);  // { dg-message \"candidates\" }\n three sink_5_23678(volatile       A&);  // { dg-message \"note\" }\n six   sink_5_23678(const          A&&);  // { dg-message \"note\" }\n seven sink_5_23678(volatile       A&&);  // { dg-message \"note\" }\n-eight sink_5_23678(const volatile A&&);  // { dg-message \"note\" }\n+eight sink_5_23678(const volatile A&&);  // { dg-message \"\" }\n \n int test5_23678()\n {\n@@ -496,6 +638,7 @@ int test5_23678()\n           volatile A va;\n     const volatile A cva = a;\n     sink_5_23678(a);         // { dg-error \"ambiguous\" }\n+    sink_5_23678(cva);\t     // { dg-error \"lvalue\" }\n     sink_5_23678(source());  // { dg-error \"ambiguous\" }\n     return 0;\n }\n@@ -532,6 +675,23 @@ int test5_24678()\n     return 0;\n }\n \n+two   sink_5_25678(const          A&);\n+five  sink_5_25678(               A&&);\n+six   sink_5_25678(const          A&&);\n+seven sink_5_25678(volatile       A&&); // { dg-message \"\" }\n+eight sink_5_25678(const volatile A&&); // { dg-message \"\" }\n+\n+int test5_25678()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_5_25678(va);\t\t// { dg-error \"lvalue\" }\n+    sink_5_25678(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n three sink_5_34567(volatile       A&);  // { dg-message \"candidates\" }\n four  sink_5_34567(const volatile A&);  // { dg-message \"note\" }\n five  sink_5_34567(               A&&);  // { dg-message \"note\" }\n@@ -564,6 +724,23 @@ int test5_34678()\n     return 0;\n }\n \n+three sink_5_35678(volatile       A&);\n+five  sink_5_35678(               A&&);\n+six   sink_5_35678(const          A&&); // { dg-message \"\" }\n+seven sink_5_35678(volatile       A&&);\n+eight sink_5_35678(const volatile A&&); // { dg-message \"\" }\n+\n+int test5_35678()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_5_35678(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_5_35678(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n int main()\n {\n     return test5_12356() + test5_12357() + test5_12367() + test5_12467() +"}, {"sha": "7555867f7090f8b7fe6a5d864e04d5f25d7eac41", "filename": "gcc/testsuite/g++.dg/cpp0x/rv5p.C", "status": "modified", "additions": 1, "deletions": 28, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv5p.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv5p.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv5p.C?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -1,6 +1,6 @@\n // I, Howard Hinnant, hereby place this code in the public domain.\n \n-// Test overlaod resolution among referece types\n+// Test overload resolution among reference types\n \n // { dg-do compile }\n // { dg-options \"-std=c++0x\" }\n@@ -173,7 +173,6 @@ int test5_12358()\n     sa<sizeof(sink_5_12358(a))           == 1> t1;\n     sa<sizeof(sink_5_12358(ca))          == 2> t2;\n     sa<sizeof(sink_5_12358(va))          == 3> t3;\n-    sa<sizeof(sink_5_12358(cva))         == 8> t4;\n     sa<sizeof(sink_5_12358(source()))    == 5> t5;\n     sa<sizeof(sink_5_12358(c_source()))  == 8> t6;\n     sa<sizeof(sink_5_12358(v_source()))  == 8> t7;\n@@ -216,7 +215,6 @@ int test5_12368()\n     sa<sizeof(sink_5_12368(a))           == 1> t1;\n     sa<sizeof(sink_5_12368(ca))          == 2> t2;\n     sa<sizeof(sink_5_12368(va))          == 3> t3;\n-    sa<sizeof(sink_5_12368(cva))         == 8> t4;\n     sa<sizeof(sink_5_12368(source()))    == 6> t5;\n     sa<sizeof(sink_5_12368(c_source()))  == 6> t6;\n     sa<sizeof(sink_5_12368(v_source()))  == 8> t7;\n@@ -239,7 +237,6 @@ int test5_12378()\n     sa<sizeof(sink_5_12378(a))           == 1> t1;\n     sa<sizeof(sink_5_12378(ca))          == 2> t2;\n     sa<sizeof(sink_5_12378(va))          == 3> t3;\n-    sa<sizeof(sink_5_12378(cva))         == 8> t4;\n     sa<sizeof(sink_5_12378(source()))    == 7> t5;\n     sa<sizeof(sink_5_12378(c_source()))  == 8> t6;\n     sa<sizeof(sink_5_12378(v_source()))  == 7> t7;\n@@ -394,7 +391,6 @@ int test5_12567()\n     const volatile A cva = a;\n     sa<sizeof(sink_5_12567(a))           == 1> t1;\n     sa<sizeof(sink_5_12567(ca))          == 2> t2;\n-    sa<sizeof(sink_5_12567(va))          == 7> t3;\n     sa<sizeof(sink_5_12567(source()))    == 5> t5;\n     sa<sizeof(sink_5_12567(c_source()))  == 6> t6;\n     sa<sizeof(sink_5_12567(v_source()))  == 7> t7;\n@@ -415,8 +411,6 @@ int test5_12568()\n     const volatile A cva = a;\n     sa<sizeof(sink_5_12568(a))           == 1> t1;\n     sa<sizeof(sink_5_12568(ca))          == 2> t2;\n-    sa<sizeof(sink_5_12568(va))          == 8> t3;\n-    sa<sizeof(sink_5_12568(cva))         == 8> t4;\n     sa<sizeof(sink_5_12568(source()))    == 5> t5;\n     sa<sizeof(sink_5_12568(c_source()))  == 6> t6;\n     sa<sizeof(sink_5_12568(v_source()))  == 8> t7;\n@@ -438,8 +432,6 @@ int test5_12578()\n     const volatile A cva = a;\n     sa<sizeof(sink_5_12578(a))           == 1> t1;\n     sa<sizeof(sink_5_12578(ca))          == 2> t2;\n-    sa<sizeof(sink_5_12578(va))          == 7> t3;\n-    sa<sizeof(sink_5_12578(cva))         == 8> t4;\n     sa<sizeof(sink_5_12578(source()))    == 5> t5;\n     sa<sizeof(sink_5_12578(c_source()))  == 8> t6;\n     sa<sizeof(sink_5_12578(v_source()))  == 7> t7;\n@@ -461,8 +453,6 @@ int test5_12678()\n     const volatile A cva = a;\n     sa<sizeof(sink_5_12678(a))           == 1> t1;\n     sa<sizeof(sink_5_12678(ca))          == 2> t2;\n-    sa<sizeof(sink_5_12678(va))          == 7> t3;\n-    sa<sizeof(sink_5_12678(cva))         == 8> t4;\n     sa<sizeof(sink_5_12678(c_source()))  == 6> t6;\n     sa<sizeof(sink_5_12678(v_source()))  == 7> t7;\n     sa<sizeof(sink_5_12678(cv_source())) == 8> t8;\n@@ -614,7 +604,6 @@ int test5_13567()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_5_13567(a))           == 1> t1;\n-    sa<sizeof(sink_5_13567(ca))          == 6> t2;\n     sa<sizeof(sink_5_13567(va))          == 3> t3;\n     sa<sizeof(sink_5_13567(source()))    == 5> t5;\n     sa<sizeof(sink_5_13567(c_source()))  == 6> t6;\n@@ -635,9 +624,7 @@ int test5_13568()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_5_13568(a))           == 1> t1;\n-    sa<sizeof(sink_5_13568(ca))          == 6> t2;\n     sa<sizeof(sink_5_13568(va))          == 3> t3;\n-    sa<sizeof(sink_5_13568(cva))         == 8> t4;\n     sa<sizeof(sink_5_13568(source()))    == 5> t5;\n     sa<sizeof(sink_5_13568(c_source()))  == 6> t6;\n     sa<sizeof(sink_5_13568(v_source()))  == 8> t7;\n@@ -658,9 +645,7 @@ int test5_13578()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_5_13578(a))           == 1> t1;\n-    sa<sizeof(sink_5_13578(ca))          == 8> t2;\n     sa<sizeof(sink_5_13578(va))          == 3> t3;\n-    sa<sizeof(sink_5_13578(cva))         == 8> t4;\n     sa<sizeof(sink_5_13578(source()))    == 5> t5;\n     sa<sizeof(sink_5_13578(c_source()))  == 8> t6;\n     sa<sizeof(sink_5_13578(v_source()))  == 7> t7;\n@@ -681,9 +666,7 @@ int test5_13678()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_5_13678(a))           == 1> t1;\n-    sa<sizeof(sink_5_13678(ca))          == 6> t2;\n     sa<sizeof(sink_5_13678(va))          == 3> t3;\n-    sa<sizeof(sink_5_13678(cva))         == 8> t4;\n     sa<sizeof(sink_5_13678(c_source()))  == 6> t6;\n     sa<sizeof(sink_5_13678(v_source()))  == 7> t7;\n     sa<sizeof(sink_5_13678(cv_source())) == 8> t8;\n@@ -793,9 +776,6 @@ int test5_15678()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_5_15678(a))           == 1> t1;\n-    sa<sizeof(sink_5_15678(ca))          == 6> t2;\n-    sa<sizeof(sink_5_15678(va))          == 7> t3;\n-    sa<sizeof(sink_5_15678(cva))         == 8> t4;\n     sa<sizeof(sink_5_15678(source()))    == 5> t5;\n     sa<sizeof(sink_5_15678(c_source()))  == 6> t6;\n     sa<sizeof(sink_5_15678(v_source()))  == 7> t7;\n@@ -964,7 +944,6 @@ int test5_23568()\n     const volatile A cva = a;\n     sa<sizeof(sink_5_23568(ca))          == 2> t2;\n     sa<sizeof(sink_5_23568(va))          == 3> t3;\n-    sa<sizeof(sink_5_23568(cva))         == 8> t4;\n     sa<sizeof(sink_5_23568(source()))    == 5> t5;\n     sa<sizeof(sink_5_23568(c_source()))  == 6> t6;\n     sa<sizeof(sink_5_23568(v_source()))  == 8> t7;\n@@ -986,7 +965,6 @@ int test5_23578()\n     const volatile A cva = a;\n     sa<sizeof(sink_5_23578(ca))          == 2> t2;\n     sa<sizeof(sink_5_23578(va))          == 3> t3;\n-    sa<sizeof(sink_5_23578(cva))         == 8> t4;\n     sa<sizeof(sink_5_23578(source()))    == 5> t5;\n     sa<sizeof(sink_5_23578(c_source()))  == 8> t6;\n     sa<sizeof(sink_5_23578(v_source()))  == 7> t7;\n@@ -1008,7 +986,6 @@ int test5_23678()\n     const volatile A cva = a;\n     sa<sizeof(sink_5_23678(ca))          == 2> t2;\n     sa<sizeof(sink_5_23678(va))          == 3> t3;\n-    sa<sizeof(sink_5_23678(cva))         == 8> t4;\n     sa<sizeof(sink_5_23678(c_source()))  == 6> t6;\n     sa<sizeof(sink_5_23678(v_source()))  == 7> t7;\n     sa<sizeof(sink_5_23678(cv_source())) == 8> t8;\n@@ -1119,8 +1096,6 @@ int test5_25678()\n     const volatile A cva = a;\n     sa<sizeof(sink_5_25678(a))           == 2> t1;\n     sa<sizeof(sink_5_25678(ca))          == 2> t2;\n-    sa<sizeof(sink_5_25678(va))          == 7> t3;\n-    sa<sizeof(sink_5_25678(cva))         == 8> t4;\n     sa<sizeof(sink_5_25678(source()))    == 5> t5;\n     sa<sizeof(sink_5_25678(c_source()))  == 6> t6;\n     sa<sizeof(sink_5_25678(v_source()))  == 7> t7;\n@@ -1231,9 +1206,7 @@ int test5_35678()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_5_35678(a))           == 3> t1;\n-    sa<sizeof(sink_5_35678(ca))          == 6> t2;\n     sa<sizeof(sink_5_35678(va))          == 3> t3;\n-    sa<sizeof(sink_5_35678(cva))         == 8> t4;\n     sa<sizeof(sink_5_35678(source()))    == 5> t5;\n     sa<sizeof(sink_5_35678(c_source()))  == 6> t6;\n     sa<sizeof(sink_5_35678(v_source()))  == 7> t7;"}, {"sha": "2a2520c7599a12c17c8902455cb10fa16a18251f", "filename": "gcc/testsuite/g++.dg/cpp0x/rv6n.C", "status": "modified", "additions": 75, "deletions": 3, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv6n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv6n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv6n.C?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -1,6 +1,6 @@\n // I, Howard Hinnant, hereby place this code in the public domain.\n \n-// Test overlaod resolution among referece types\n+// Test overload resolution among reference types\n \n // { dg-do compile }\n // { dg-options \"-std=c++0x\" }\n@@ -70,7 +70,7 @@ three sink_6_235678(volatile       A&);  // { dg-message \"note\" }\n five  sink_6_235678(               A&&);  // { dg-message \"note\" }\n six   sink_6_235678(const          A&&);  // { dg-message \"note\" }\n seven sink_6_235678(volatile       A&&);  // { dg-message \"note\" }\n-eight sink_6_235678(const volatile A&&);  // { dg-message \"note\" }\n+eight sink_6_235678(const volatile A&&);  // { dg-message \"\" }\n \n int test6_235678()\n {\n@@ -79,6 +79,7 @@ int test6_235678()\n           volatile A va;\n     const volatile A cva = a;\n     sink_6_235678(a);  // { dg-error \"ambiguous\" }\n+    sink_6_235678(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;\n }\n \n@@ -191,14 +192,15 @@ two   sink_6_123678(const          A&);  // { dg-message \"candidates\" }\n three sink_6_123678(volatile       A&);\n six   sink_6_123678(const          A&&);  // { dg-message \"note\" }\n seven sink_6_123678(volatile       A&&);  // { dg-message \"note\" }\n-eight sink_6_123678(const volatile A&&);  // { dg-message \"note\" }\n+eight sink_6_123678(const volatile A&&);  // { dg-message \"\" }\n \n int test6_123678()\n {\n                    A a;\n     const          A ca = a;\n           volatile A va;\n     const volatile A cva = a;\n+    sink_6_123678(cva);\t\t// { dg-error \"lvalue\" }\n     sink_6_123678(source());  // { dg-error \"ambiguous\" }\n     return 0;\n }\n@@ -221,6 +223,40 @@ int test6_123567()\n     return 0;\n }\n \n+one   sink_6_123568(               A&);\n+two   sink_6_123568(const          A&);\n+three sink_6_123568(volatile       A&);\n+five  sink_6_123568(               A&&);\n+six   sink_6_123568(const          A&&);\n+eight sink_6_123568(const volatile A&&); // { dg-message \"\" }\n+\n+int test6_123568()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_6_123568(cva); // { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n+one   sink_6_123578(               A&);\n+two   sink_6_123578(const          A&);\n+three sink_6_123578(volatile       A&);\n+five  sink_6_123578(               A&&);\n+seven sink_6_123578(volatile       A&&);\n+eight sink_6_123578(const volatile A&&); // { dg-message \"\" }\n+\n+int test6_123578()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_6_123578(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n one   sink_6_123467(               A&);  // { dg-message \"candidates\" }\n two   sink_6_123467(const          A&);  // { dg-message \"note\" }\n three sink_6_123467(volatile       A&);  // { dg-message \"note\" }\n@@ -256,6 +292,24 @@ int test6_124567()\n     return 0;\n }\n \n+one   sink_6_125678(               A&);\n+two   sink_6_125678(const          A&);\n+five  sink_6_125678(               A&&);\n+six   sink_6_125678(const          A&&);\n+seven sink_6_125678(volatile       A&&); // { dg-message \"\" }\n+eight sink_6_125678(const volatile A&&); // { dg-message \"\" }\n+\n+int test6_125678()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_6_125678(va);\t\t// { dg-error \"lvalue\" }\n+    sink_6_125678(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n one   sink_6_134567(               A&);  // { dg-message \"candidates\" }\n three sink_6_134567(volatile       A&);  // { dg-message \"note\" }\n four  sink_6_134567(const volatile A&);  // { dg-message \"note\" }\n@@ -273,6 +327,24 @@ int test6_134567()\n     return 0;\n }\n \n+one   sink_6_135678(               A&);\n+three sink_6_135678(volatile       A&);\n+five  sink_6_135678(               A&&);\n+six   sink_6_135678(const          A&&); // { dg-message \"\" }\n+seven sink_6_135678(volatile       A&&);\n+eight sink_6_135678(const volatile A&&); // { dg-message \"\" }\n+\n+int test6_135678()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_6_135678(ca);\t\t// { dg-error \"lvalue\" }\n+    sink_6_135678(cva);\t\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n int main()\n {\n     return test6_235678() + test6_234678() + test6_234578() + test6_234568() +"}, {"sha": "0e5352bf8b116d98b5a1fe0acdeb9bc17e100423", "filename": "gcc/testsuite/g++.dg/cpp0x/rv6p.C", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv6p.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv6p.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv6p.C?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -1,6 +1,6 @@\n // I, Howard Hinnant, hereby place this code in the public domain.\n \n-// Test overlaod resolution among referece types\n+// Test overload resolution among reference types\n \n // { dg-do compile }\n // { dg-options \"-std=c++0x\" }\n@@ -207,7 +207,6 @@ int test6_123568()\n     sa<sizeof(sink_6_123568(a))           == 1> t1;\n     sa<sizeof(sink_6_123568(ca))          == 2> t2;\n     sa<sizeof(sink_6_123568(va))          == 3> t3;\n-    sa<sizeof(sink_6_123568(cva))         == 8> t4;\n     sa<sizeof(sink_6_123568(source()))    == 5> t5;\n     sa<sizeof(sink_6_123568(c_source()))  == 6> t6;\n     sa<sizeof(sink_6_123568(v_source()))  == 8> t7;\n@@ -231,7 +230,6 @@ int test6_123578()\n     sa<sizeof(sink_6_123578(a))           == 1> t1;\n     sa<sizeof(sink_6_123578(ca))          == 2> t2;\n     sa<sizeof(sink_6_123578(va))          == 3> t3;\n-    sa<sizeof(sink_6_123578(cva))         == 8> t4;\n     sa<sizeof(sink_6_123578(source()))    == 5> t5;\n     sa<sizeof(sink_6_123578(c_source()))  == 8> t6;\n     sa<sizeof(sink_6_123578(v_source()))  == 7> t7;\n@@ -255,7 +253,6 @@ int test6_123678()\n     sa<sizeof(sink_6_123678(a))           == 1> t1;\n     sa<sizeof(sink_6_123678(ca))          == 2> t2;\n     sa<sizeof(sink_6_123678(va))          == 3> t3;\n-    sa<sizeof(sink_6_123678(cva))         == 8> t4;\n     sa<sizeof(sink_6_123678(c_source()))  == 6> t6;\n     sa<sizeof(sink_6_123678(v_source()))  == 7> t7;\n     sa<sizeof(sink_6_123678(cv_source())) == 8> t8;\n@@ -371,8 +368,6 @@ int test6_125678()\n     const volatile A cva = a;\n     sa<sizeof(sink_6_125678(a))           == 1> t1;\n     sa<sizeof(sink_6_125678(ca))          == 2> t2;\n-    sa<sizeof(sink_6_125678(va))          == 7> t3;\n-    sa<sizeof(sink_6_125678(cva))         == 8> t4;\n     sa<sizeof(sink_6_125678(source()))    == 5> t5;\n     sa<sizeof(sink_6_125678(c_source()))  == 6> t6;\n     sa<sizeof(sink_6_125678(v_source()))  == 7> t7;\n@@ -488,9 +483,7 @@ int test6_135678()\n           volatile A va;\n     const volatile A cva = a;\n     sa<sizeof(sink_6_135678(a))           == 1> t1;\n-    sa<sizeof(sink_6_135678(ca))          == 6> t2;\n     sa<sizeof(sink_6_135678(va))          == 3> t3;\n-    sa<sizeof(sink_6_135678(cva))         == 8> t4;\n     sa<sizeof(sink_6_135678(source()))    == 5> t5;\n     sa<sizeof(sink_6_135678(c_source()))  == 6> t6;\n     sa<sizeof(sink_6_135678(v_source()))  == 7> t7;\n@@ -627,7 +620,6 @@ int test6_235678()\n     const volatile A cva = a;\n     sa<sizeof(sink_6_235678(ca))          == 2> t2;\n     sa<sizeof(sink_6_235678(va))          == 3> t3;\n-    sa<sizeof(sink_6_235678(cva))         == 8> t4;\n     sa<sizeof(sink_6_235678(source()))    == 5> t5;\n     sa<sizeof(sink_6_235678(c_source()))  == 6> t6;\n     sa<sizeof(sink_6_235678(v_source()))  == 7> t7;"}, {"sha": "102730bc7f02a082006c6898338ef4f89289d48b", "filename": "gcc/testsuite/g++.dg/cpp0x/rv7n.C", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv7n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv7n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv7n.C?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -48,6 +48,24 @@ int test7_1234567()\n     return 0;\n }\n \n+one   sink_7_1235678(               A&);\n+two   sink_7_1235678(const          A&);\n+three sink_7_1235678(volatile       A&);\n+five  sink_7_1235678(               A&&);\n+six   sink_7_1235678(const          A&&);\n+seven sink_7_1235678(volatile       A&&);\n+eight sink_7_1235678(const volatile A&&); // { dg-message \"\" }\n+\n+int test7_1235678()\n+{\n+                   A a;\n+    const          A ca = a;\n+          volatile A va;\n+    const volatile A cva = a;\n+    sink_7_1235678(cva);\t// { dg-error \"lvalue\" }\n+    return 0;\n+}\n+\n two   sink_7_2345678(const          A&);  // { dg-message \"candidates\" }\n three sink_7_2345678(volatile       A&);  // { dg-message \"note\" }\n four  sink_7_2345678(const volatile A&);  // { dg-message \"note\" }"}, {"sha": "d25488f94f1088ba608b1648d25cef1b5f24db23", "filename": "gcc/testsuite/g++.dg/cpp0x/rv7p.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv7p.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv7p.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv7p.C?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -1,6 +1,6 @@\n // I, Howard Hinnant, hereby place this code in the public domain.\n \n-// Test overlaod resolution among referece types\n+// Test overload resolution among reference types\n \n // { dg-do compile }\n // { dg-options \"-std=c++0x\" }\n@@ -145,7 +145,6 @@ int test7_1235678()\n     sa<sizeof(sink_7_1235678(a))           == 1> t1;\n     sa<sizeof(sink_7_1235678(ca))          == 2> t2;\n     sa<sizeof(sink_7_1235678(va))          == 3> t3;\n-    sa<sizeof(sink_7_1235678(cva))         == 8> t4;\n     sa<sizeof(sink_7_1235678(source()))    == 5> t5;\n     sa<sizeof(sink_7_1235678(c_source()))  == 6> t6;\n     sa<sizeof(sink_7_1235678(v_source()))  == 7> t7;"}, {"sha": "cc7ff8a6ef35bb32779a215d5021165f41b5f2f8", "filename": "gcc/testsuite/g++.dg/cpp0x/rv8p.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv8p.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv8p.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv8p.C?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -1,6 +1,6 @@\n // I, Howard Hinnant, hereby place this code in the public domain.\n \n-// Test overlaod resolution among referece types\n+// Test overload resolution among reference types\n \n // { dg-do compile }\n // { dg-options \"-std=c++0x\" }"}, {"sha": "c1eace6fa0bf036eb9c98464a45ab05445517f87", "filename": "gcc/testsuite/g++.dg/cpp0x/template_deduction.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ftemplate_deduction.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ftemplate_deduction.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Ftemplate_deduction.C?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -35,7 +35,7 @@ test1(T&&)\n \n template <bool is_lvalue_ref, bool is_rvalue_ref, class T>\n void\n-test2(const T&&)\n+test2(const T&&)\t\t// { dg-error \"argument\" }\n {\n     sa<is_lvalue_reference<const T&&>::value == is_lvalue_ref> t1;\n     sa<is_rvalue_reference<const T&&>::value == is_rvalue_ref> t2;\n@@ -60,7 +60,7 @@ int main()\n {\n     test1<true, false>(a);\n     test1<false, true>(source());\n-    test2<false, true>(a);\n+    test2<false, true>(a);\t// { dg-error \"lvalue\" }\n     test2<false, true>(source());\n     test3<false, true>(&a);\n     test3<false, true>(sourcep());"}, {"sha": "57d635961ba2275e43862b2fdfd45996bc094022", "filename": "gcc/testsuite/g++.dg/cpp0x/unnamed_refs.C", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Funnamed_refs.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Funnamed_refs.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Funnamed_refs.C?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -16,7 +16,12 @@ struct A {};\n one foo(const A&) {return one();}\n two foo(A&&)      {return two();}\n \n-A&& source() {static A a; return a;}\n+template<typename _Tp>\n+inline _Tp&&\n+movel(_Tp& __t)\n+{ return static_cast<_Tp&&>(__t); }\n+\n+A&& source() {static A a; return movel(a);}\n \n int test1()\n {"}, {"sha": "19f3dd1e7f215e0ba0dc2cc8e18fe89767b4bbbc", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -1,3 +1,12 @@\n+2009-07-31  Jason Merrill  <jason@redhat.com>\n+\t    Douglas Gregor  <doug.gregor@gmail.com>\n+\n+\t* include/bits/move.h (forward): Implement as in N2835.\n+\t(move): Implement as in N2831.\n+\t* include/std/istream (rvalue stream operator>>): New.\n+\t* include/std/ostream (rvalue stream operator<<): New.\n+\t* testsuite/27_io/rvalue_streams.cc: New.\n+\n 2009-07-31  Jason Merrill  <jason@redhat.com>\n \n \t* include/bits/forward_list.h (splice_after): Use forward."}, {"sha": "d1da1e40ddfefd91204badd65558ae4271ecab99", "filename": "libstdc++-v3/include/bits/move.h", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmove.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmove.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fmove.h?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -46,12 +46,31 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       typedef _Tp type;\n     };\n \n-  /// forward\n-  template<typename _Tp>\n-    inline _Tp&&\n+  /// forward (as per N2835)\n+  /// Forward lvalues as rvalues.\n+  template <class _Tp>\n+    inline typename enable_if<!is_lvalue_reference<_Tp>::value, _Tp&&>::type\n+    forward(typename std::identity<_Tp>::type& __t)\n+    { return static_cast<_Tp&&>(__t); }\n+\n+  /// Forward rvalues as rvalues.\n+  template <class _Tp>\n+    inline typename enable_if<!is_lvalue_reference<_Tp>::value, _Tp&&>::type\n     forward(typename std::identity<_Tp>::type&& __t)\n+    { return static_cast<_Tp&&>(__t); }\n+\n+  // Forward lvalues as lvalues.\n+  template <class _Tp>\n+    inline typename enable_if<is_lvalue_reference<_Tp>::value, _Tp>::type\n+    forward(typename std::identity<_Tp>::type __t)\n     { return __t; }\n \n+  // Prevent forwarding rvalues as const lvalues.\n+  template <class _Tp>\n+    inline typename enable_if<is_lvalue_reference<_Tp>::value, _Tp>::type\n+    forward(typename std::remove_reference<_Tp>::type&& __t)\n+    = delete;\n+\n   /**\n    *  @brief Move a value.\n    *  @ingroup mutating_algorithms\n@@ -61,7 +80,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n   template<typename _Tp>\n     inline typename std::remove_reference<_Tp>::type&&\n     move(_Tp&& __t)\n-    { return __t; }\n+    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }\n \n _GLIBCXX_END_NAMESPACE\n "}, {"sha": "f20b8962539fb2a4916153d60a498dedbc0a9060", "filename": "libstdc++-v3/include/std/istream", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fistream?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -827,6 +827,27 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     basic_istream<_CharT, _Traits>& \n     ws(basic_istream<_CharT, _Traits>& __is);\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+  // [27.7.1.6] Rvalue stream extraction\n+  /**\n+   *  @brief  Generic extractor for rvalue stream\n+   *  @param  is  An input stream.\n+   *  @param  x  A reference to the extraction target.\n+   *  @return  is\n+   *\n+   *  This is just a forwarding function to allow extraction from\n+   *  rvalue streams since they won't bind to the extractor functions\n+   *  that take an lvalue reference.\n+  */\n+  template<typename _CharT, typename _Traits, typename _Tp>\n+  basic_istream<_CharT, _Traits>&\n+  operator>>(basic_istream<_CharT, _Traits>&& __is, _Tp& __x)\n+  {\n+    __is >> __x;\n+    return __is;\n+  }\n+#endif // __GXX_EXPERIMENTAL_CXX0X__\n+\n _GLIBCXX_END_NAMESPACE\n \n #ifndef _GLIBCXX_EXPORT_TEMPLATE"}, {"sha": "136c3d62fbaeb161bbdb65f3fd6561a4ced58589", "filename": "libstdc++-v3/include/std/ostream", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fostream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fostream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fostream?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -562,6 +562,27 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n     flush(basic_ostream<_CharT, _Traits>& __os)\n     { return __os.flush(); }\n \n+#ifdef __GXX_EXPERIMENTAL_CXX0X__\n+  // [27.7.2.9] Rvalue stream insertion\n+  /**\n+   *  @brief  Generic inserter for rvalue stream\n+   *  @param  os  An input stream.\n+   *  @param  x  A reference to the object being inserted.\n+   *  @return  os\n+   *\n+   *  This is just a forwarding function to allow insertion to\n+   *  rvalue streams since they won't bind to the inserter functions\n+   *  that take an lvalue reference.\n+  */\n+  template<typename _CharT, typename _Traits, typename _Tp>\n+  basic_ostream<_CharT, _Traits>&\n+  operator<<(basic_ostream<_CharT, _Traits>&& __os, const _Tp& __x)\n+  {\n+    __os << __x;\n+    return __os;\n+  }\n+#endif // __GXX_EXPERIMENTAL_CXX0X__\n+\n _GLIBCXX_END_NAMESPACE\n \n #ifndef _GLIBCXX_EXPORT_TEMPLATE"}, {"sha": "b3cc630edc025db9d4d7566a9917f135b4a2bfff", "filename": "libstdc++-v3/testsuite/27_io/rvalue_streams.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Frvalue_streams.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7f1930f9411e6fcee99f832a5a16c74cd6740c6/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Frvalue_streams.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Frvalue_streams.cc?ref=e7f1930f9411e6fcee99f832a5a16c74cd6740c6", "patch": "@@ -0,0 +1,43 @@\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// { dg-do run }\n+\n+#include <sstream>\n+#include <string>\n+#include <testsuite_hooks.h>\n+\n+void\n+test01()\n+{\n+  int i = 1742;\n+  // This usage isn't supported by the current draft.\n+  // std::string result = (std::ostringstream() << i).str();\n+  std::ostringstream() << i;\n+  std::string result (\"1742\");\n+  int i2;\n+  std::istringstream(result) >> i2;\n+  VERIFY (i == i2);\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  return 0;\n+}"}]}