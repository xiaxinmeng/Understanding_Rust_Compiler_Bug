{"sha": "89e5941d8c79863857a60a41ce58d6a984df1bdf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODllNTk0MWQ4Yzc5ODYzODU3YTYwYTQxY2U1OGQ2YTk4NGRmMWJkZg==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2015-09-25T00:18:21Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2015-09-25T00:18:21Z"}, "message": "Change IA MCU processor from iamcu to lakemount\n\nThe first IA MCU processor will be Lakemount.  This patch changes IA MCU\nprocessor name from iamcu to lakemount.\n\ngcc/\n\n\t* config.gcc (x86_archs): Replace iamcu with lakemount.\n\t(with_cpu): Likewise.\n\t(with_arch): Likewise.\n\t* doc/invoke.texi: Likewise.\n\t* config/i386/i386-c.c (ix86_target_macros_internal): Replace\n\tPROCESSOR_IAMCU with PROCESSOR_LAKEMOUNT.  Replace\n\t__tune_iamcu__ with __tune_lakemount__.\n\t* config/i386/i386.c (iamcu_cost): Renamed to ...\n\t(lakemount_cost): This.\n\t(m_IAMCU): Renamed to ...\n\t(m_LAKEMOUNT): This.\n\t(initial_ix86_arch_features): Replace m_IAMCU with m_LAKEMOUNT.\n\t(processor_target_table): Replace \"iamcu\" with \"lakemount\".\n\t(processor_alias_table): Likewise.\n\t(ix86_issue_rate): Replace PROCESSOR_IAMCU with\n\tPROCESSOR_LAKEMOUNT.\n\t(ix86_adjust_cost): Likewise.\n\t(ia32_multipass_dfa_lookahead): Likewise.\n\t* config/i386/i386.h (processor_type): Likewise.\n\t* config/i386/x86-tune.def: Replace m_IAMCU with m_LAKEMOUNT.\n\ngcc/testsuite/\n\n\t* gcc.target/i386/pr66749.c (dg-options): Replace -mtune=iamcu\n\twith -mtune=lakemount.\n\t* gcc.target/i386/pr66821.c (dg-options): Likewise.\n\t* gcc.target/i386/pr67329.c (dg-options): Likewise.\n\nFrom-SVN: r228109", "tree": {"sha": "86ebe0ae66e5d4c3e9798c978670bbd439fbf5ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86ebe0ae66e5d4c3e9798c978670bbd439fbf5ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89e5941d8c79863857a60a41ce58d6a984df1bdf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89e5941d8c79863857a60a41ce58d6a984df1bdf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89e5941d8c79863857a60a41ce58d6a984df1bdf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89e5941d8c79863857a60a41ce58d6a984df1bdf/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "925f700af21715a1e3113ea878e8e6546f7ef377", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/925f700af21715a1e3113ea878e8e6546f7ef377", "html_url": "https://github.com/Rust-GCC/gccrs/commit/925f700af21715a1e3113ea878e8e6546f7ef377"}], "stats": {"total": 96, "additions": 63, "deletions": 33}, "files": [{"sha": "9a6ea3b49ae59ea15e896f23325d0b4c72c4fb4e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e5941d8c79863857a60a41ce58d6a984df1bdf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e5941d8c79863857a60a41ce58d6a984df1bdf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=89e5941d8c79863857a60a41ce58d6a984df1bdf", "patch": "@@ -1,3 +1,26 @@\n+2015-09-24  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config.gcc (x86_archs): Replace iamcu with lakemount.\n+\t(with_cpu): Likewise.\n+\t(with_arch): Likewise.\n+\t* doc/invoke.texi: Likewise.\n+\t* config/i386/i386-c.c (ix86_target_macros_internal): Replace\n+\tPROCESSOR_IAMCU with PROCESSOR_LAKEMOUNT.  Replace\n+\t__tune_iamcu__ with __tune_lakemount__.\n+\t* config/i386/i386.c (iamcu_cost): Renamed to ...\n+\t(lakemount_cost): This.\n+\t(m_IAMCU): Renamed to ...\n+\t(m_LAKEMOUNT): This.\n+\t(initial_ix86_arch_features): Replace m_IAMCU with m_LAKEMOUNT.\n+\t(processor_target_table): Replace \"iamcu\" with \"lakemount\".\n+\t(processor_alias_table): Likewise.\n+\t(ix86_issue_rate): Replace PROCESSOR_IAMCU with\n+\tPROCESSOR_LAKEMOUNT.\n+\t(ix86_adjust_cost): Likewise.\n+\t(ia32_multipass_dfa_lookahead): Likewise.\n+\t* config/i386/i386.h (processor_type): Likewise.\n+\t* config/i386/x86-tune.def: Replace m_IAMCU with m_LAKEMOUNT.\n+\n 2015-09-24  John David Anglin  <danglin@gcc.gnu.org>\n \n \t* config/pa/pa-linux.h (HAVE_sync_compare_and_swapdi): Define."}, {"sha": "41814b8f9343383cb729fa7c8f59a004b29daeb4", "filename": "gcc/config.gcc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e5941d8c79863857a60a41ce58d6a984df1bdf/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e5941d8c79863857a60a41ce58d6a984df1bdf/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=89e5941d8c79863857a60a41ce58d6a984df1bdf", "patch": "@@ -587,7 +587,7 @@ tm_defines=\"$tm_defines LIBC_GLIBC=1 LIBC_UCLIBC=2 LIBC_BIONIC=3 LIBC_MUSL=4\"\n x86_archs=\"athlon athlon-4 athlon-fx athlon-mp athlon-tbird \\\n athlon-xp k6 k6-2 k6-3 geode c3 c3-2 winchip-c6 winchip2 i386 i486 \\\n i586 i686 pentium pentium-m pentium-mmx pentium2 pentium3 pentium3m \\\n-pentium4 pentium4m pentiumpro prescott iamcu\"\n+pentium4 pentium4m pentiumpro prescott lakemount\"\n \n # 64-bit x86 processors supported by --with-arch=.  Each processor\n # MUST be separated by exactly one space.\n@@ -3287,7 +3287,7 @@ esac\n if test x$with_cpu = x ; then\n   case ${target} in\n     i[34567]86-*-elfiamcu)\n-      with_cpu=iamcu\n+      with_cpu=lakemount\n       ;;\n     i[34567]86-*-*|x86_64-*-*)\n       with_cpu=$cpu\n@@ -3385,7 +3385,7 @@ if test x$with_arch = x ; then\n       # and TARGET_SUBTARGET64_ISA_DEFAULT in config/i386/darwin.h.\n       ;;\n     i[34567]86-*-elfiamcu)\n-      with_arch=iamcu\n+      with_arch=lakemount\n       ;;\n     i[34567]86-*-*)\n       # --with-fpmath sets the default ISA to SSE2, which is the same"}, {"sha": "86f24267be4b485c11a2b30d81ac36e0bbdbe4f0", "filename": "gcc/config/i386/i386-c.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e5941d8c79863857a60a41ce58d6a984df1bdf/gcc%2Fconfig%2Fi386%2Fi386-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e5941d8c79863857a60a41ce58d6a984df1bdf/gcc%2Fconfig%2Fi386%2Fi386-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-c.c?ref=89e5941d8c79863857a60a41ce58d6a984df1bdf", "patch": "@@ -63,7 +63,7 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n       def_or_undef (parse_in, \"__i486\");\n       def_or_undef (parse_in, \"__i486__\");\n       break;\n-    case PROCESSOR_IAMCU:\n+    case PROCESSOR_LAKEMOUNT:\n       /* Intel MCU is based on Intel Pentium CPU.  */\n     case PROCESSOR_PENTIUM:\n       def_or_undef (parse_in, \"__i586\");\n@@ -293,8 +293,8 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n     case PROCESSOR_SKYLAKE_AVX512:\n       def_or_undef (parse_in, \"__tune_skylake_avx512__\");\n       break;\n-    case PROCESSOR_IAMCU:\n-      def_or_undef (parse_in, \"__tune_iamcu__\");\n+    case PROCESSOR_LAKEMOUNT:\n+      def_or_undef (parse_in, \"__tune_lakemount__\");\n       break;\n     case PROCESSOR_INTEL:\n     case PROCESSOR_GENERIC:"}, {"sha": "193cabff9a3a1420114fe53e5e8b182e7fe0703e", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e5941d8c79863857a60a41ce58d6a984df1bdf/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e5941d8c79863857a60a41ce58d6a984df1bdf/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=89e5941d8c79863857a60a41ce58d6a984df1bdf", "patch": "@@ -417,7 +417,7 @@ struct processor_costs pentium_cost = {\n };\n \n static const\n-struct processor_costs iamcu_cost = {\n+struct processor_costs lakemount_cost = {\n   COSTS_N_INSNS (1),\t\t\t/* cost of an add instruction */\n   COSTS_N_INSNS (1) + 1,\t\t/* cost of a lea instruction */\n   COSTS_N_INSNS (1),\t\t\t/* variable shift costs */\n@@ -2085,7 +2085,7 @@ const struct processor_costs *ix86_cost = &pentium_cost;\n #define m_386 (1<<PROCESSOR_I386)\n #define m_486 (1<<PROCESSOR_I486)\n #define m_PENT (1<<PROCESSOR_PENTIUM)\n-#define m_IAMCU (1<<PROCESSOR_IAMCU)\n+#define m_LAKEMOUNT (1<<PROCESSOR_LAKEMOUNT)\n #define m_PPRO (1<<PROCESSOR_PENTIUMPRO)\n #define m_PENT4 (1<<PROCESSOR_PENTIUM4)\n #define m_NOCONA (1<<PROCESSOR_NOCONA)\n@@ -2146,7 +2146,7 @@ unsigned char ix86_arch_features[X86_ARCH_LAST];\n    ix86_arch_features based on the processor mask.  */\n static unsigned int initial_ix86_arch_features[X86_ARCH_LAST] = {\n   /* X86_ARCH_CMOV: Conditional move was added for pentiumpro.  */\n-  ~(m_386 | m_486 | m_PENT | m_IAMCU | m_K6),\n+  ~(m_386 | m_486 | m_PENT | m_LAKEMOUNT | m_K6),\n \n   /* X86_ARCH_CMPXCHG: Compare and exchange was added for 80486.  */\n   ~m_386,\n@@ -2557,7 +2557,7 @@ static const struct ptt processor_target_table[PROCESSOR_max] =\n   {\"i386\", &i386_cost, 4, 3, 4, 3, 4},\n   {\"i486\", &i486_cost, 16, 15, 16, 15, 16},\n   {\"pentium\", &pentium_cost, 16, 7, 16, 7, 16},\n-  {\"iamcu\", &iamcu_cost, 16, 7, 16, 7, 16},\n+  {\"lakemount\", &lakemount_cost, 16, 7, 16, 7, 16},\n   {\"pentiumpro\", &pentiumpro_cost, 16, 15, 16, 10, 16},\n   {\"pentium4\", &pentium4_cost, 0, 0, 0, 0, 0},\n   {\"nocona\", &nocona_cost, 0, 0, 0, 0, 0},\n@@ -3313,7 +3313,7 @@ ix86_option_override_internal (bool main_args_p,\n       {\"i486\", PROCESSOR_I486, CPU_NONE, 0},\n       {\"i586\", PROCESSOR_PENTIUM, CPU_PENTIUM, 0},\n       {\"pentium\", PROCESSOR_PENTIUM, CPU_PENTIUM, 0},\n-      {\"iamcu\", PROCESSOR_IAMCU, CPU_PENTIUM, 0},\n+      {\"lakemount\", PROCESSOR_LAKEMOUNT, CPU_PENTIUM, 0},\n       {\"pentium-mmx\", PROCESSOR_PENTIUM, CPU_PENTIUM, PTA_MMX},\n       {\"winchip-c6\", PROCESSOR_I486, CPU_NONE, PTA_MMX},\n       {\"winchip2\", PROCESSOR_I486, CPU_NONE, PTA_MMX | PTA_3DNOW | PTA_PRFCHW},\n@@ -26196,7 +26196,7 @@ ix86_issue_rate (void)\n   switch (ix86_tune)\n     {\n     case PROCESSOR_PENTIUM:\n-    case PROCESSOR_IAMCU:\n+    case PROCESSOR_LAKEMOUNT:\n     case PROCESSOR_BONNELL:\n     case PROCESSOR_SILVERMONT:\n     case PROCESSOR_KNL:\n@@ -26383,7 +26383,7 @@ ix86_adjust_cost (rtx_insn *insn, rtx link, rtx_insn *dep_insn, int cost)\n   switch (ix86_tune)\n     {\n     case PROCESSOR_PENTIUM:\n-    case PROCESSOR_IAMCU:\n+    case PROCESSOR_LAKEMOUNT:\n       /* Address Generation Interlock adds a cycle of latency.  */\n       if (insn_type == TYPE_LEA)\n \t{\n@@ -26593,7 +26593,7 @@ ia32_multipass_dfa_lookahead (void)\n   switch (ix86_tune)\n     {\n     case PROCESSOR_PENTIUM:\n-    case PROCESSOR_IAMCU:\n+    case PROCESSOR_LAKEMOUNT:\n       return 2;\n \n     case PROCESSOR_PENTIUMPRO:"}, {"sha": "adc1fedb2cd88f375e8c98327686b7b9c45bf01c", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e5941d8c79863857a60a41ce58d6a984df1bdf/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e5941d8c79863857a60a41ce58d6a984df1bdf/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=89e5941d8c79863857a60a41ce58d6a984df1bdf", "patch": "@@ -2280,7 +2280,7 @@ enum processor_type\n   PROCESSOR_I386,\t\t\t/* 80386 */\n   PROCESSOR_I486,\t\t\t/* 80486DX, 80486SX, 80486DX[24] */\n   PROCESSOR_PENTIUM,\n-  PROCESSOR_IAMCU,\n+  PROCESSOR_LAKEMOUNT,\n   PROCESSOR_PENTIUMPRO,\n   PROCESSOR_PENTIUM4,\n   PROCESSOR_NOCONA,"}, {"sha": "414c718041c6ae2e6ddf1d0a119eab21a384ae1e", "filename": "gcc/config/i386/x86-tune.def", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e5941d8c79863857a60a41ce58d6a984df1bdf/gcc%2Fconfig%2Fi386%2Fx86-tune.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e5941d8c79863857a60a41ce58d6a984df1bdf/gcc%2Fconfig%2Fi386%2Fx86-tune.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx86-tune.def?ref=89e5941d8c79863857a60a41ce58d6a984df1bdf", "patch": "@@ -40,7 +40,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n /* X86_TUNE_SCHEDULE: Enable scheduling.  */\n DEF_TUNE (X86_TUNE_SCHEDULE, \"schedule\",\n-          m_PENT | m_IAMCU | m_PPRO | m_CORE_ALL | m_BONNELL | m_SILVERMONT\n+          m_PENT | m_LAKEMOUNT | m_PPRO | m_CORE_ALL | m_BONNELL | m_SILVERMONT\n \t  | m_INTEL | m_KNL | m_K6_GEODE | m_AMD_MULTIPLE | m_GENERIC)\n \n /* X86_TUNE_PARTIAL_REG_DEPENDENCY: Enable more register renaming\n@@ -172,21 +172,21 @@ DEF_TUNE (X86_TUNE_PUSH_MEMORY, \"push_memory\",\n /* X86_TUNE_SINGLE_PUSH: Enable if single push insn is preferred\n    over esp subtraction.  */\n DEF_TUNE (X86_TUNE_SINGLE_PUSH, \"single_push\", m_386 | m_486 | m_PENT\n-\t  | m_IAMCU | m_K6_GEODE)\n+\t  | m_LAKEMOUNT | m_K6_GEODE)\n \n /* X86_TUNE_DOUBLE_PUSH. Enable if double push insn is preferred\n    over esp subtraction.  */\n-DEF_TUNE (X86_TUNE_DOUBLE_PUSH, \"double_push\", m_PENT | m_IAMCU\n+DEF_TUNE (X86_TUNE_DOUBLE_PUSH, \"double_push\", m_PENT | m_LAKEMOUNT\n \t  | m_K6_GEODE)\n \n /* X86_TUNE_SINGLE_POP: Enable if single pop insn is preferred\n    over esp addition.  */\n DEF_TUNE (X86_TUNE_SINGLE_POP, \"single_pop\", m_386 | m_486 | m_PENT\n-\t  | m_IAMCU | m_PPRO)\n+\t  | m_LAKEMOUNT | m_PPRO)\n \n /* X86_TUNE_DOUBLE_POP: Enable if double pop insn is preferred\n    over esp addition.  */\n-DEF_TUNE (X86_TUNE_DOUBLE_POP, \"double_pop\", m_PENT | m_IAMCU)\n+DEF_TUNE (X86_TUNE_DOUBLE_POP, \"double_pop\", m_PENT | m_LAKEMOUNT)\n \n /*****************************************************************************/\n /* Branch predictor tuning  \t\t                                     */\n@@ -226,7 +226,7 @@ DEF_TUNE (X86_TUNE_LCP_STALL, \"lcp_stall\", m_CORE_ALL | m_GENERIC)\n \n /* X86_TUNE_READ_MODIFY: Enable use of read-modify instructions such\n    as \"add mem, reg\".  */\n-DEF_TUNE (X86_TUNE_READ_MODIFY, \"read_modify\", ~(m_PENT | m_IAMCU | m_PPRO))\n+DEF_TUNE (X86_TUNE_READ_MODIFY, \"read_modify\", ~(m_PENT | m_LAKEMOUNT | m_PPRO))\n \n /* X86_TUNE_USE_INCDEC: Enable use of inc/dec instructions.   */\n DEF_TUNE (X86_TUNE_USE_INCDEC, \"use_incdec\",\n@@ -286,7 +286,7 @@ DEF_TUNE (X86_TUNE_USE_SAHF, \"use_sahf\",\n \n /* X86_TUNE_USE_CLTD: Controls use of CLTD and CTQO instructions.  */\n DEF_TUNE (X86_TUNE_USE_CLTD, \"use_cltd\",\n-\t  ~(m_PENT | m_IAMCU | m_BONNELL | m_SILVERMONT | m_KNL | m_INTEL\n+\t  ~(m_PENT | m_LAKEMOUNT | m_BONNELL | m_SILVERMONT | m_KNL | m_INTEL\n \t    | m_K6))\n \n /* X86_TUNE_USE_BT: Enable use of BT (bit test) instructions.  */\n@@ -307,7 +307,7 @@ DEF_TUNE (X86_TUNE_USE_HIMODE_FIOP, \"use_himode_fiop\",\n /* X86_TUNE_USE_SIMODE_FIOP: Enables use of x87 instructions with 32bit\n    integer operand.  */\n DEF_TUNE (X86_TUNE_USE_SIMODE_FIOP, \"use_simode_fiop\",\n-          ~(m_PENT | m_IAMCU | m_PPRO | m_CORE_ALL | m_BONNELL\n+          ~(m_PENT | m_LAKEMOUNT | m_PPRO | m_CORE_ALL | m_BONNELL\n \t    | m_SILVERMONT | m_KNL | m_INTEL | m_AMD_MULTIPLE | m_GENERIC))\n \n /* X86_TUNE_USE_FFREEP: Use freep instruction instead of fstp.  */\n@@ -448,7 +448,7 @@ DEF_TUNE (X86_TUNE_SHIFT1, \"shift1\", ~m_486)\n /* X86_TUNE_ZERO_EXTEND_WITH_AND: Use AND instruction instead\n    of mozbl/movwl.  */\n DEF_TUNE (X86_TUNE_ZERO_EXTEND_WITH_AND, \"zero_extend_with_and\",\n-\t  m_486 | m_PENT | m_IAMCU)\n+\t  m_486 | m_PENT | m_LAKEMOUNT)\n \n /* X86_TUNE_PROMOTE_HIMODE_IMUL: Modern CPUs have same latency for HImode\n    and SImode multiply, but 386 and 486 do HImode multiply faster.  */\n@@ -459,20 +459,20 @@ DEF_TUNE (X86_TUNE_PROMOTE_HIMODE_IMUL, \"promote_himode_imul\",\n    into 16bit/8bit when resulting sequence is shorter.  For example\n    for \"and $-65536, reg\" to 16bit store of 0.  */\n DEF_TUNE (X86_TUNE_FAST_PREFIX, \"fast_prefix\",\n-\t  ~(m_386 | m_486 | m_PENT | m_IAMCU))\n+\t  ~(m_386 | m_486 | m_PENT | m_LAKEMOUNT))\n \n /* X86_TUNE_READ_MODIFY_WRITE: Enable use of read modify write instructions\n    such as \"add $1, mem\".  */\n DEF_TUNE (X86_TUNE_READ_MODIFY_WRITE, \"read_modify_write\",\n-\t  ~(m_PENT | m_IAMCU))\n+\t  ~(m_PENT | m_LAKEMOUNT))\n \n /* X86_TUNE_MOVE_M1_VIA_OR: On pentiums, it is faster to load -1 via OR\n    than a MOV.  */\n-DEF_TUNE (X86_TUNE_MOVE_M1_VIA_OR, \"move_m1_via_or\", m_PENT | m_IAMCU)\n+DEF_TUNE (X86_TUNE_MOVE_M1_VIA_OR, \"move_m1_via_or\", m_PENT | m_LAKEMOUNT)\n \n /* X86_TUNE_NOT_UNPAIRABLE: NOT is not pairable on Pentium, while XOR is,\n    but one byte longer.  */\n-DEF_TUNE (X86_TUNE_NOT_UNPAIRABLE, \"not_unpairable\", m_PENT | m_IAMCU)\n+DEF_TUNE (X86_TUNE_NOT_UNPAIRABLE, \"not_unpairable\", m_PENT | m_LAKEMOUNT)\n \n /* X86_TUNE_PARTIAL_REG_STALL: Pentium pro, unlike later chips, handled\n    use of partial registers by renaming.  This improved performance of 16bit"}, {"sha": "844d254cca880216a8e3f638ad81b586d10dd58b", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e5941d8c79863857a60a41ce58d6a984df1bdf/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e5941d8c79863857a60a41ce58d6a984df1bdf/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=89e5941d8c79863857a60a41ce58d6a984df1bdf", "patch": "@@ -22219,8 +22219,8 @@ Intel i486 CPU@.  (No scheduling is implemented for this chip.)\n @itemx pentium\n Intel Pentium CPU with no MMX support.\n \n-@item iamcu\n-Intel MCU, based on Intel Pentium CPU.\n+@item lakemount\n+Intel Lakemount MCU, based on Intel Pentium CPU.\n \n @item pentium-mmx\n Intel Pentium MMX CPU, based on Pentium core with MMX instruction set support."}, {"sha": "193eb8e99b4d9ddb508b9ed00e6d69f9b2e080f9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e5941d8c79863857a60a41ce58d6a984df1bdf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e5941d8c79863857a60a41ce58d6a984df1bdf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=89e5941d8c79863857a60a41ce58d6a984df1bdf", "patch": "@@ -1,3 +1,10 @@\n+2015-09-24  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* gcc.target/i386/pr66749.c (dg-options): Replace -mtune=iamcu\n+\twith -mtune=lakemount.\n+\t* gcc.target/i386/pr66821.c (dg-options): Likewise.\n+\t* gcc.target/i386/pr67329.c (dg-options): Likewise.\n+\n 2015-09-24  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n \tPR driver/67640"}, {"sha": "27c02ad5053bb8003ce1c60cb7ca66e4b9048f91", "filename": "gcc/testsuite/gcc.target/i386/pr66749.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e5941d8c79863857a60a41ce58d6a984df1bdf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66749.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e5941d8c79863857a60a41ce58d6a984df1bdf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66749.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66749.c?ref=89e5941d8c79863857a60a41ce58d6a984df1bdf", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target ia32 } */\n /* { dg-require-effective-target nonpic } */\n-/* { dg-options \"-O2 -miamcu -mtune=iamcu\" } */\n+/* { dg-options \"-O2 -miamcu -mtune=lakemount\" } */\n \n char a[10], b[10];\n "}, {"sha": "9d08b1a2af031315e838b70c12a665e3d590af7b", "filename": "gcc/testsuite/gcc.target/i386/pr66821.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e5941d8c79863857a60a41ce58d6a984df1bdf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66821.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e5941d8c79863857a60a41ce58d6a984df1bdf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66821.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66821.c?ref=89e5941d8c79863857a60a41ce58d6a984df1bdf", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target ia32 } } */\n-/* { dg-options \"-O2 -fdump-tree-optimized -mtune=iamcu\" } */\n+/* { dg-options \"-O2 -fdump-tree-optimized -mtune=lakemount\" } */\n \n void bar (void);\n "}, {"sha": "fec94eb86d304e88b5ecabc3b15ba55f97a51993", "filename": "gcc/testsuite/gcc.target/i386/pr67329.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e5941d8c79863857a60a41ce58d6a984df1bdf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr67329.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e5941d8c79863857a60a41ce58d6a984df1bdf/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr67329.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr67329.c?ref=89e5941d8c79863857a60a41ce58d6a984df1bdf", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target ia32 } } */\n-/* { dg-options \"-O3 -fno-tree-fre -fno-tree-pre -fdump-tree-optimized -mtune=iamcu\" } */\n+/* { dg-options \"-O3 -fno-tree-fre -fno-tree-pre -fdump-tree-optimized -mtune=lakemount\" } */\n \n int\n foo ()"}]}