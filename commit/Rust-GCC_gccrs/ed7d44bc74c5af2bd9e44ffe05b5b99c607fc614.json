{"sha": "ed7d44bc74c5af2bd9e44ffe05b5b99c607fc614", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ3ZDQ0YmM3NGM1YWYyYmQ5ZTQ0ZmZlMDViNWI5OWM2MDdmYzYxNA==", "commit": {"author": {"name": "Dale Johannesen", "email": "dalej@apple.com", "date": "2002-03-20T09:41:46Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-03-20T09:41:46Z"}, "message": "PR optimization/5999, middle-end/5731\n\n\tPR optimization/5999, middle-end/5731\n\t* expr.c (expand_expr) [RDIV_EXPR]: Only convert real divisions into\n\tmultiplications by reciprocals.\n\n\t* gcc.c-torture/compile/20020319-1.c: New test.\n\nFrom-SVN: r51071", "tree": {"sha": "79ccb4c2d3eb0b8df336075f26872944075fde6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79ccb4c2d3eb0b8df336075f26872944075fde6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed7d44bc74c5af2bd9e44ffe05b5b99c607fc614", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed7d44bc74c5af2bd9e44ffe05b5b99c607fc614", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed7d44bc74c5af2bd9e44ffe05b5b99c607fc614", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed7d44bc74c5af2bd9e44ffe05b5b99c607fc614/comments", "author": null, "committer": null, "parents": [{"sha": "b525f5b0f7cccee5addcd54d84cdb86115ab1c7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b525f5b0f7cccee5addcd54d84cdb86115ab1c7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b525f5b0f7cccee5addcd54d84cdb86115ab1c7d"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "47c6ca9333a6467fb06ada8468367ca0995c4d0b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed7d44bc74c5af2bd9e44ffe05b5b99c607fc614/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed7d44bc74c5af2bd9e44ffe05b5b99c607fc614/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed7d44bc74c5af2bd9e44ffe05b5b99c607fc614", "patch": "@@ -1,3 +1,9 @@\n+2002-03-19 Dale Johannesen  <dalej@apple.com>\n+\n+\tPR optimization/5999, middle-end/5731\n+\t* expr.c (expand_expr) [RDIV_EXPR]: Only convert real divisions into\n+\tmultiplications by reciprocals.\n+\n 2002-03-20  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* Makefile.in: Update."}, {"sha": "ef532feb561be05fd73509fbf06e590b590785b3", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed7d44bc74c5af2bd9e44ffe05b5b99c607fc614/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed7d44bc74c5af2bd9e44ffe05b5b99c607fc614/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=ed7d44bc74c5af2bd9e44ffe05b5b99c607fc614", "patch": "@@ -7738,6 +7738,7 @@ expand_expr (exp, target, tmode, modifier)\n          expensive divide.  If not, combine will rebuild the original\n          computation.  */\n       if (flag_unsafe_math_optimizations && optimize && !optimize_size\n+\t  && TREE_CODE (type) == REAL_TYPE\n \t  && !real_onep (TREE_OPERAND (exp, 0)))\n         return expand_expr (build (MULT_EXPR, type, TREE_OPERAND (exp, 0),\n \t\t\t\t   build (RDIV_EXPR, type,"}, {"sha": "84baf8057120923e564a74e3e6fca0b763382a9e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed7d44bc74c5af2bd9e44ffe05b5b99c607fc614/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed7d44bc74c5af2bd9e44ffe05b5b99c607fc614/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ed7d44bc74c5af2bd9e44ffe05b5b99c607fc614", "patch": "@@ -4,6 +4,8 @@\n \n \t* gcc.dg/struct-by-value-1.c: New test.\n \n+\t* gcc.c-torture/compile/20020319-1.c: New test.\n+\n 2002-03-18  Jakub Jelinek  <jakub@redhat.com>\n \n \t* g++.dg/opt/conj1.C: New test."}, {"sha": "46a756d775ab9362bf4bac24c94a50a3fda103d7", "filename": "gcc/testsuite/gcc.dg/20020319-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed7d44bc74c5af2bd9e44ffe05b5b99c607fc614/gcc%2Ftestsuite%2Fgcc.dg%2F20020319-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed7d44bc74c5af2bd9e44ffe05b5b99c607fc614/gcc%2Ftestsuite%2Fgcc.dg%2F20020319-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020319-1.c?ref=ed7d44bc74c5af2bd9e44ffe05b5b99c607fc614", "patch": "@@ -0,0 +1,10 @@\n+/* PR optimization/5999\n+   This testcase ICEd because one a/b -> a * (1/b) optimization\n+   did not handle complex divides.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -ffast-math\" } */\n+\n+__complex__ double foo (__complex__ double x, __complex__ double y)\n+{\n+  return x / y;\n+}"}]}