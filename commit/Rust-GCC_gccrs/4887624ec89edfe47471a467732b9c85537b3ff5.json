{"sha": "4887624ec89edfe47471a467732b9c85537b3ff5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg4NzYyNGVjODllZGZlNDc0NzFhNDY3NzMyYjljODU1MzdiM2ZmNQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T13:54:30Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T13:54:30Z"}, "message": "[multiple changes]\n\n2014-08-01  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* sem_ch7.adb: Fix minor oversight in condition.\n\n2014-08-01  Bob Duff  <duff@adacore.com>\n\n\t* projects.texi: Minor documentation improvements.\n\n2014-08-01  Robert Dewar  <dewar@adacore.com>\n\n\t* aspects.ads, aspects.adb: Add aspect No_Elaboration_Code_All.\n\t* gnat_rm.texi: Document No_Elaboration_Code_All pragma and aspect.\n\t* lib-load.adb: Initialize No_Elab_Code_All field.\n\t* lib-writ.adb: Initialize No_Elab_Code_All.\n\t* lib.ads, lib.adb: New field No_Elab_Code_All.\n\t* par-prag.adb: Add dummy entry for pragma No_Elaboration_Code_All.\n\t* restrict.ads, restrict.adb: Restriction No_Elaboration_Code_All no\n\tlonger exists.\n\t* sem_ch10.adb (Analyze_Context): Processing for\n\tNo_Elaboration_Code_All removed.\n\t(Generate_Parent_References): Moved to Sem_Util.\n\t* sem_prag.adb: Add processing for pragma No_Elaboration_Code_All.\n\t* sem_util.ads, sem_util.adb (Get_Parent_Entity): Moved here from\n\tSem_Ch10.\n\t* snames.ads-tmpl: Add entry for pragma No_Elaboration_Code_All.\n\t* targparm.adb: Minor comment updates Add comments on ignoring\n\tpragma No_Elaboration_Code_All.\n\n2014-08-01  Nicolas Roche  <roche@adacore.com>\n\n\t* adaint.c (__gnat_set_close_on_exec): Ensure that\n\twe can unset \"close_on_exec\" flag.\n\n2014-08-01  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch9.adb (Build_Wrapper_Spec, Replicate_Formals): When building\n\tthe parameter specs of the wrapper program for a primitive operation\n\tof a synchronized type that implements an interface, copy the\n\tnull_exclusion indicator as well.\n\n2014-08-01  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_eval.ads: Minor reformatting.\n\nFrom-SVN: r213466", "tree": {"sha": "730356f0f97d8da4ff35bf55f0a7fb7f6e7f8da2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/730356f0f97d8da4ff35bf55f0a7fb7f6e7f8da2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4887624ec89edfe47471a467732b9c85537b3ff5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4887624ec89edfe47471a467732b9c85537b3ff5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4887624ec89edfe47471a467732b9c85537b3ff5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4887624ec89edfe47471a467732b9c85537b3ff5/comments", "author": null, "committer": null, "parents": [{"sha": "625d8a9f892e44db98fcde6e600a6e023fb475a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/625d8a9f892e44db98fcde6e600a6e023fb475a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/625d8a9f892e44db98fcde6e600a6e023fb475a4"}], "stats": {"total": 760, "additions": 396, "deletions": 364}, "files": [{"sha": "1d45bbcf333da39fcdc8a431a19349dc029cae28", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4887624ec89edfe47471a467732b9c85537b3ff5", "patch": "@@ -1,3 +1,47 @@\n+2014-08-01  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_ch7.adb: Fix minor oversight in condition.\n+\n+2014-08-01  Bob Duff  <duff@adacore.com>\n+\n+\t* projects.texi: Minor documentation improvements.\n+\n+2014-08-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* aspects.ads, aspects.adb: Add aspect No_Elaboration_Code_All.\n+\t* gnat_rm.texi: Document No_Elaboration_Code_All pragma and aspect.\n+\t* lib-load.adb: Initialize No_Elab_Code_All field.\n+\t* lib-writ.adb: Initialize No_Elab_Code_All.\n+\t* lib.ads, lib.adb: New field No_Elab_Code_All.\n+\t* par-prag.adb: Add dummy entry for pragma No_Elaboration_Code_All.\n+\t* restrict.ads, restrict.adb: Restriction No_Elaboration_Code_All no\n+\tlonger exists.\n+\t* sem_ch10.adb (Analyze_Context): Processing for\n+\tNo_Elaboration_Code_All removed.\n+\t(Generate_Parent_References): Moved to Sem_Util.\n+\t* sem_prag.adb: Add processing for pragma No_Elaboration_Code_All.\n+\t* sem_util.ads, sem_util.adb (Get_Parent_Entity): Moved here from\n+\tSem_Ch10.\n+\t* snames.ads-tmpl: Add entry for pragma No_Elaboration_Code_All.\n+\t* targparm.adb: Minor comment updates Add comments on ignoring\n+\tpragma No_Elaboration_Code_All.\n+\n+2014-08-01  Nicolas Roche  <roche@adacore.com>\n+\n+\t* adaint.c (__gnat_set_close_on_exec): Ensure that\n+\twe can unset \"close_on_exec\" flag.\n+\n+2014-08-01  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch9.adb (Build_Wrapper_Spec, Replicate_Formals): When building\n+\tthe parameter specs of the wrapper program for a primitive operation\n+\tof a synchronized type that implements an interface, copy the\n+\tnull_exclusion indicator as well.\n+\n+2014-08-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_eval.ads: Minor reformatting.\n+\n 2014-08-01  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* exp_ch3.adb (Build_Initialization_Call): Call Underlying_Type"}, {"sha": "f7ca0d8b56f574cf57bc97ab5b6e70b9c65b4da1", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=4887624ec89edfe47471a467732b9c85537b3ff5", "patch": "@@ -2968,7 +2968,7 @@ __gnat_set_close_on_exec (int fd ATTRIBUTE_UNUSED,\n     flags |= FD_CLOEXEC;\n   else\n     flags &= ~FD_CLOEXEC;\n-  return fcntl (fd, F_SETFD, flags | FD_CLOEXEC);\n+  return fcntl (fd, F_SETFD, flags);\n #elif defined(_WIN32)\n   HANDLE h = (HANDLE) _get_osfhandle (fd);\n   if (h == (HANDLE) -1)"}, {"sha": "7b003163323966efe37f51dd79842a2c5eca0406", "filename": "gcc/ada/aspects.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Faspects.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Faspects.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.adb?ref=4887624ec89edfe47471a467732b9c85537b3ff5", "patch": "@@ -543,6 +543,7 @@ package body Aspects is\n     Aspect_Linker_Section               => Aspect_Linker_Section,\n     Aspect_Lock_Free                    => Aspect_Lock_Free,\n     Aspect_Machine_Radix                => Aspect_Machine_Radix,\n+    Aspect_No_Elaboration_Code_All      => Aspect_No_Elaboration_Code_All,\n     Aspect_No_Return                    => Aspect_No_Return,\n     Aspect_Object_Size                  => Aspect_Object_Size,\n     Aspect_Output                       => Aspect_Output,"}, {"sha": "84567f3bcc03caf6822f5652527e2a4e60c2cdfa", "filename": "gcc/ada/aspects.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Faspects.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Faspects.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.ads?ref=4887624ec89edfe47471a467732b9c85537b3ff5", "patch": "@@ -145,6 +145,7 @@ package Aspects is\n \n       Aspect_All_Calls_Remote,\n       Aspect_Elaborate_Body,\n+      Aspect_No_Elaboration_Code_All,       -- GNAT\n       Aspect_Preelaborate,\n       Aspect_Pure,\n       Aspect_Remote_Call_Interface,\n@@ -426,6 +427,7 @@ package Aspects is\n       Aspect_Linker_Section               => Name_Linker_Section,\n       Aspect_Lock_Free                    => Name_Lock_Free,\n       Aspect_Machine_Radix                => Name_Machine_Radix,\n+      Aspect_No_Elaboration_Code_All      => Name_No_Elaboration_Code_All,\n       Aspect_No_Return                    => Name_No_Return,\n       Aspect_Object_Size                  => Name_Object_Size,\n       Aspect_Output                       => Name_Output,\n@@ -681,6 +683,7 @@ package Aspects is\n       Aspect_Global                       => Never_Delay,\n       Aspect_Initial_Condition            => Never_Delay,\n       Aspect_Initializes                  => Never_Delay,\n+      Aspect_No_Elaboration_Code_All      => Never_Delay,\n       Aspect_Part_Of                      => Never_Delay,\n       Aspect_Refined_Depends              => Never_Delay,\n       Aspect_Refined_Global               => Never_Delay,"}, {"sha": "4807ec26ab810dae716768c0ea55d133367c6b9c", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=4887624ec89edfe47471a467732b9c85537b3ff5", "patch": "@@ -2497,10 +2497,12 @@ package body Exp_Ch9 is\n               Make_Parameter_Specification (Loc,\n                 Defining_Identifier =>\n                   Make_Defining_Identifier (Loc,\n-                    Chars          => Chars (Defining_Identifier (Formal))),\n-                    In_Present     => In_Present  (Formal),\n-                    Out_Present    => Out_Present (Formal),\n-                    Parameter_Type => Param_Type));\n+                    Chars                  => Chars\n+                                             (Defining_Identifier (Formal))),\n+                    In_Present             => In_Present  (Formal),\n+                    Out_Present            => Out_Present (Formal),\n+                    Null_Exclusion_Present => Null_Exclusion_Present (Formal),\n+                    Parameter_Type         => Param_Type));\n \n             Next (Formal);\n          end loop;"}, {"sha": "1d39c8722f74b1b2c5839baf3c83fd37787b9526", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 29, "deletions": 18, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=4887624ec89edfe47471a467732b9c85537b3ff5", "patch": "@@ -204,6 +204,7 @@ Implementation Defined Pragmas\n * Pragma Main::\n * Pragma Main_Storage::\n * Pragma No_Body::\n+* Pragma No_Elaboration_Code_All::\n * Pragma No_Inline::\n * Pragma No_Return::\n * Pragma No_Run_Time::\n@@ -309,6 +310,7 @@ Implementation Defined Aspects\n * Aspect Invariant::\n * Aspect Iterable::\n * Aspect Linker_Section::\n+* Aspect No_Elaboration_Code_All::\n * Aspect Object_Size::\n * Aspect Part_Of::\n * Aspect Persistent_BSS::\n@@ -490,7 +492,6 @@ Partition-Wide Restrictions\n Program Unit Level Restrictions\n \n * No_Elaboration_Code::\n-* No_Elaboration_Code_All::\n * No_Entry_Queue::\n * No_Implementation_Aspect_Specifications::\n * No_Implementation_Attributes::\n@@ -1069,6 +1070,7 @@ consideration, the use of these pragmas should be minimized.\n * Pragma Main::\n * Pragma Main_Storage::\n * Pragma No_Body::\n+* Pragma No_Elaboration_Code_All::\n * Pragma No_Inline::\n * Pragma No_Return::\n * Pragma No_Run_Time::\n@@ -4668,6 +4670,24 @@ such a way that a body needed before is no longer needed. The provision of a\n dummy body with a No_Body pragma ensures that there is no interference from\n earlier versions of the package body.\n \n+@node Pragma No_Elaboration_Code_All\n+@unnumberedsec Pragma No_Elaboration_Code_All\n+@findex No_Elaboration_Code_All\n+@noindent\n+Syntax:\n+\n+@smallexample @c ada\n+pragma No_Elaboration_Code_All [(program_unit_NAME)];\n+@end smallexample\n+\n+@noindent\n+This is a program unit pragma (there is also an equivalent aspect of the\n+same name) that establishes the restriction @code{No_Elaboration_Code} for\n+the current unit and any extended main source units (body and subunits.\n+It also has has the effect of enforcing a transitive application of this\n+aspect, so that if any unit is implicitly or explicitly WITH'ed by the\n+current unit, it must also have the No_Elaboration_Code_All aspect set.\n+\n @node Pragma No_Inline\n @unnumberedsec Pragma No_Inline\n @findex No_Inline\n@@ -8043,6 +8063,7 @@ clause.\n * Aspect Iterable::\n * Aspect Linker_Section::\n * Aspect Lock_Free::\n+* Aspect No_Elaboration_Code_All::\n * Aspect Object_Size::\n * Aspect Part_Of::\n * Aspect Persistent_BSS::\n@@ -8304,6 +8325,13 @@ This aspect is equivalent to an @code{Linker_Section} pragma.\n @noindent\n This aspect is equivalent to pragma @code{Lock_Free}.\n \n+@node Aspect No_Elaboration_Code_All\n+@unnumberedsec Aspect No_Elaboration_Code_All\n+@findex No_Elaboration_Code_All\n+@noindent\n+This aspect is equivalent to a @code{pragma No_Elaboration_Code_All}\n+statement for a program unit.\n+\n @node Aspect Object_Size\n @unnumberedsec Aspect Object_Size\n @findex Object_Size\n@@ -10860,7 +10888,6 @@ other compilation units in the partition.\n \n @menu\n * No_Elaboration_Code::\n-* No_Elaboration_Code_All::\n * No_Entry_Queue::\n * No_Implementation_Aspect_Specifications::\n * No_Implementation_Attributes::\n@@ -10921,22 +10948,6 @@ Note that this the implementation of this restriction requires full\n code generation. If it is used in conjunction with \"semantics only\"\n checking, then some cases of violations may be missed.\n \n-@node No_Elaboration_Code_All\n-@unnumberedsubsec No_Elaboration_Code_All\n-@findex No_Elaboration_Code_All\n-\n-This restriction is identical in semantic effects to\n-@code{No_Elaboration_Code}, and\n-for most purposes is treated simply as a synonym of @code{No_Elaboration_Code}.\n-\n-The difference is that if @code{No_Elaboration_Code_All} is used then it\n-must appear within a package or subprogram spec. As is the case for\n-@code{No_Elaboration_Code}, it also applies to the corresponding body if\n-there is one. In addition, any with'ed unit must itself contain a\n-@code{No_Elaboration_Code_All} restriction,\n-thus allowing transitive enforcement of the requirement for no elaboration\n-code to be generated.\n-\n @node No_Entry_Queue\n @unnumberedsubsec No_Entry_Queue\n @findex No_Entry_Queue"}, {"sha": "34b20cc780b73c64b110f2b1d6aab3f9d0c9aa2f", "filename": "gcc/ada/lib-load.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Flib-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Flib-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-load.adb?ref=4887624ec89edfe47471a467732b9c85537b3ff5", "patch": "@@ -221,7 +221,7 @@ package body Lib.Load is\n         Main_Priority     => Default_Main_Priority,\n         Main_CPU          => Default_Main_CPU,\n         Munit_Index       => 0,\n-        No_Elab_Code      => None,\n+        No_Elab_Code_All  => False,\n         Serial_Number     => 0,\n         Source_Index      => No_Source_File,\n         Unit_File_Name    => Get_File_Name (Spec_Name, Subunit => False),\n@@ -328,7 +328,7 @@ package body Lib.Load is\n            Main_Priority     => Default_Main_Priority,\n            Main_CPU          => Default_Main_CPU,\n            Munit_Index       => 0,\n-           No_Elab_Code      => None,\n+           No_Elab_Code_All  => False,\n            Serial_Number     => 0,\n            Source_Index      => Main_Source_File,\n            Unit_File_Name    => Fname,\n@@ -692,7 +692,7 @@ package body Lib.Load is\n               Main_Priority     => Default_Main_Priority,\n               Main_CPU          => Default_Main_CPU,\n               Munit_Index       => 0,\n-              No_Elab_Code      => None,\n+              No_Elab_Code_All  => False,\n               Serial_Number     => 0,\n               Source_Index      => Src_Ind,\n               Unit_File_Name    => Fname,"}, {"sha": "1492852468b981c82947e13a9f524927a1ed2052", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=4887624ec89edfe47471a467732b9c85537b3ff5", "patch": "@@ -90,7 +90,7 @@ package body Lib.Writ is\n          Main_Priority     => -1,\n          Main_CPU          => -1,\n          Munit_Index       => 0,\n-         No_Elab_Code      => None,\n+         No_Elab_Code_All  => False,\n          Serial_Number     => 0,\n          Version           => 0,\n          Error_Location    => No_Location,\n@@ -148,7 +148,7 @@ package body Lib.Writ is\n         Main_Priority     => -1,\n         Main_CPU          => -1,\n         Munit_Index       => 0,\n-        No_Elab_Code      => None,\n+        No_Elab_Code_All  => False,\n         Serial_Number     => 0,\n         Version           => 0,\n         Error_Location    => No_Location,"}, {"sha": "609a03c55920dbd15b33cac015cc22c0b490dd92", "filename": "gcc/ada/lib.adb", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Flib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Flib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.adb?ref=4887624ec89edfe47471a467732b9c85537b3ff5", "patch": "@@ -146,10 +146,10 @@ package body Lib is\n       return Units.Table (U).Munit_Index;\n    end Munit_Index;\n \n-   function No_Elab_Code (U : Unit_Number_Type) return No_Elab_Code_T is\n+   function No_Elab_Code_All (U : Unit_Number_Type) return Boolean is\n    begin\n-      return Units.Table (U).No_Elab_Code;\n-   end No_Elab_Code;\n+      return Units.Table (U).No_Elab_Code_All;\n+   end No_Elab_Code_All;\n \n    function OA_Setting (U : Unit_Number_Type) return Character is\n    begin\n@@ -231,10 +231,13 @@ package body Lib is\n       Units.Table (U).Main_Priority := P;\n    end Set_Main_Priority;\n \n-   procedure Set_No_Elab_Code (U : Unit_Number_Type; N : No_Elab_Code_T) is\n+   procedure Set_No_Elab_Code_All\n+     (U : Unit_Number_Type;\n+      B : Boolean := True)\n+   is\n    begin\n-      Units.Table (U).No_Elab_Code := N;\n-   end Set_No_Elab_Code;\n+      Units.Table (U).No_Elab_Code_All := B;\n+   end Set_No_Elab_Code_All;\n \n    procedure Set_OA_Setting (U : Unit_Number_Type; C : Character) is\n    begin"}, {"sha": "4a9f7deac5f5911658244262d94a3272a651825f", "filename": "gcc/ada/lib.ads", "status": "modified", "additions": 10, "deletions": 34, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Flib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Flib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.ads?ref=4887624ec89edfe47471a467732b9c85537b3ff5", "patch": "@@ -347,34 +347,10 @@ package Lib is\n    --      The index of the unit within the file for multiple unit per file\n    --      mode. Set to zero in normal single unit per file mode.\n \n-   --    No_Elab_Code\n-   --      A value set when a pragma Restriction or Restriction_Warning for\n-   --      No_Elaboration_Code_All or No_Elaboration_Code is encountered. This\n-   --      is used to implement the transitive WITH rules (and for no other\n-   --      purpose). The possible values are:\n-\n-   type No_Elab_Code_T is\n-      (None,\n-       --  The unit contains no Elaboration_Code[_All} restrictions\n-\n-       No_Elab_Code,\n-       --  The unit contains a pragma Restrictions or Restriction_Warnings\n-       --  for No_Elaboration_Code, but does not contain either pragma for\n-       --  No_Elaboration_Code_All. Note: this setting is not currently used,\n-       --  but we maintain it for possible future use (e.g. if we decide after\n-       --  all that No_Elaboration_Code is good enough to satisfy the rule for\n-       --  transitive with's for No_Elaborate_Code_All.\n-\n-       No_Elab_Code_All_Warn,\n-       --  The unit contains a pragma Restrictions_Warning for restriction\n-       --  No_Elaboration_Code_All (but does not contain a pragma Restrictions\n-       --  for this restriction).\n-\n-       No_Elab_Code_All);\n-       --  The unit contains a pragma Restrictions (No_Elaboration_Code_All)\n-\n-   pragma Ordered (No_Elab_Code_T);\n-   --  This set of values is ordered, we record the highest value seen\n+   --    No_Elab_Code_All\n+   --      A flag set when a pragma or aspect No_Elaboration_Code_All applies\n+   --      to the unit. This is used to implement the transitive WITH rules\n+   --      (and for no other purpose).\n \n    --    OA_Setting\n    --      This is a character field containing L if Optimize_Alignment mode\n@@ -439,7 +415,7 @@ package Lib is\n    function Main_CPU          (U : Unit_Number_Type) return Int;\n    function Main_Priority     (U : Unit_Number_Type) return Int;\n    function Munit_Index       (U : Unit_Number_Type) return Nat;\n-   function No_Elab_Code      (U : Unit_Number_Type) return No_Elab_Code_T;\n+   function No_Elab_Code_All  (U : Unit_Number_Type) return Boolean;\n    function OA_Setting        (U : Unit_Number_Type) return Character;\n    function Source_Index      (U : Unit_Number_Type) return Source_File_Index;\n    function Unit_File_Name    (U : Unit_Number_Type) return File_Name_Type;\n@@ -456,7 +432,7 @@ package Lib is\n    procedure Set_Ident_String      (U : Unit_Number_Type; N : Node_Id);\n    procedure Set_Loading           (U : Unit_Number_Type; B : Boolean := True);\n    procedure Set_Main_CPU          (U : Unit_Number_Type; P : Int);\n-   procedure Set_No_Elab_Code      (U : Unit_Number_Type; N : No_Elab_Code_T);\n+   procedure Set_No_Elab_Code_All  (U : Unit_Number_Type; B : Boolean := True);\n    procedure Set_Main_Priority     (U : Unit_Number_Type; P : Int);\n    procedure Set_OA_Setting        (U : Unit_Number_Type; C : Character);\n    procedure Set_Unit_Name         (U : Unit_Number_Type; N : Unit_Name_Type);\n@@ -757,7 +733,7 @@ private\n    pragma Inline (Main_CPU);\n    pragma Inline (Main_Priority);\n    pragma Inline (Munit_Index);\n-   pragma Inline (No_Elab_Code);\n+   pragma Inline (No_Elab_Code_All);\n    pragma Inline (OA_Setting);\n    pragma Inline (Set_Cunit);\n    pragma Inline (Set_Cunit_Entity);\n@@ -767,7 +743,7 @@ private\n    pragma Inline (Set_Loading);\n    pragma Inline (Set_Main_CPU);\n    pragma Inline (Set_Main_Priority);\n-   pragma Inline (Set_No_Elab_Code);\n+   pragma Inline (Set_No_Elab_Code_All);\n    pragma Inline (Set_OA_Setting);\n    pragma Inline (Set_Unit_Name);\n    pragma Inline (Source_Index);\n@@ -793,7 +769,7 @@ private\n       Generate_Code     : Boolean;\n       Has_RACW          : Boolean;\n       Dynamic_Elab      : Boolean;\n-      No_Elab_Code      : No_Elab_Code_T;\n+      No_Elab_Code_All  : Boolean;\n       Filler            : Boolean;\n       Loading           : Boolean;\n       OA_Setting        : Character;\n@@ -823,7 +799,7 @@ private\n       Generate_Code     at 57 range 0 ..  7;\n       Has_RACW          at 58 range 0 ..  7;\n       Dynamic_Elab      at 59 range 0 ..  7;\n-      No_Elab_Code      at 60 range 0 ..  7;\n+      No_Elab_Code_All  at 60 range 0 ..  7;\n       Filler            at 61 range 0 ..  7;\n       OA_Setting        at 62 range 0 ..  7;\n       Loading           at 63 range 0 ..  7;"}, {"sha": "e0a71c80e0d9cfa413132b07e6a3de138f72db7e", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=4887624ec89edfe47471a467732b9c85537b3ff5", "patch": "@@ -1256,6 +1256,7 @@ begin\n            Pragma_Main_Storage                   |\n            Pragma_Memory_Size                    |\n            Pragma_No_Body                        |\n+           Pragma_No_Elaboration_Code_All        |\n            Pragma_No_Inline                      |\n            Pragma_No_Return                      |\n            Pragma_No_Run_Time                    |"}, {"sha": "9622e0511e0f5f32d030112d012e7c1a1b8ecbc6", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 153, "deletions": 162, "changes": 315, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=4887624ec89edfe47471a467732b9c85537b3ff5", "patch": "@@ -93,11 +93,10 @@ easily handled:\n   generating separate sets of object files for debugging and for production.\n @item Using a mostly-shared set of source files with different versions of\n   some units or subunits. It can be used for instance, for grouping and hiding\n+  all OS dependencies in a small number of implementation units.\n @end itemize\n \n @noindent\n-all OS dependencies in a small number of implementation units.\n-\n Project files can be used to achieve some of the effects of a source\n versioning system (for example, defining separate projects for\n the different sets of sources that comprise different releases) but the\n@@ -174,7 +173,6 @@ detailed later in this documentation. They are summarized here as a reference.\n   @b{Object_Dir} attribute. In order to store objects in\n   two or more object directories, the system must be split into\n   distinct subsystems with their own project file.\n-/first exam\n \n @end table\n \n@@ -197,7 +195,7 @@ common/\n   proc.adb\n @end group\n @group\n-common/release/\n+common/obj/\n   proc.ali, proc.o pack.ali, pack.o\n @end group\n @end smallexample\n@@ -238,12 +236,12 @@ should contain the following code:\n \n @noindent\n When you create a new project, the first thing to describe is how to find the\n-corresponding source files. This is the only settings that are needed by all\n+corresponding source files. These are the only settings that are needed by all\n the tools that will use this project (builder, compiler, binder and linker for\n the compilation, IDEs to edit the source files,@dots{}).\n \n @cindex Source directories\n-First step is to declare the source directories, which are the directories\n+The first step is to declare the source directories, which are the directories\n to be searched to find source files. In the case of the example,\n the @file{common} directory is the only source directory.\n \n@@ -266,15 +264,16 @@ There are several ways of defining source directories:\n @cindex portability\n   The syntax for directories is platform specific. For portability, however,\n   the project manager will always properly translate UNIX-like path names to\n-  the native format of specific platform. For instance, when the same project\n-  file is to be used both on Unix and Windows, \"/\" should be used as the\n-  directory separator rather than \"\\\".\n+  the native format of the specific platform. For instance, when the same\n+  project file is to be used both on Unix and Windows, \"/\" should be used as\n+  the directory separator rather than \"\\\".\n \n @item The attribute @b{Source_Dirs} can automatically include subdirectories\n-  using a special syntax inspired by some UNIX shells. If any of the path in\n-  the list ends with @emph{\"**\"}, then that path and all its subdirectories\n+  using a special syntax inspired by some UNIX shells. If any of the paths in\n+  the list ends with \"@file{**}\", then that path and all its subdirectories\n   (recursively) are included in the list of source directories. For instance,\n-  @file{**} and @file{./**} represent the complete directory tree rooted at \".\".\n+  @file{**} and @file{./**} represent the complete directory tree rooted at\n+  the directory in which the project file resides.\n @cindex Source directories, recursive\n \n @cindex @code{Excluded_Source_Dirs}\n@@ -321,7 +320,7 @@ their absolute or relative path names. The project manager is in charge of\n locating the specified source files in the specified source directories.\n \n @itemize @bullet\n-@item By default, the project manager  search for all source files of all\n+@item By default, the project manager searches for all source files of all\n   specified languages in all the source directories.\n \n   Since the project manager was initially developed for Ada environments, the\n@@ -415,15 +414,14 @@ to it and this is not explicitly indicated in the project file.\n @noindent\n If the order of the source directories is known statically, that is if\n @code{\"/**\"} is not used in the string list @code{Source_Dirs}, then there may\n-be several files with the same source file name sitting in different\n-directories of the project. In this case, only the file in the first directory\n-is considered as a source of the project and the others are hidden. If\n-@code{\"/**\"} is used in the string list @code{Source_Dirs}, it is an error\n-to have several files with the same source file name in the same directory\n-@code{\"/**\"} subtree, since there would be an ambiguity as to which one should\n-be used. However, two files with the same source file name may exist in two\n-single directories or directory subtrees. In this case, the one in the first\n-directory or directory subtree is a source of the project.\n+be several files with the same name sitting in different directories of the\n+project. In this case, only the file in the first directory is considered as a\n+source of the project and the others are hidden. If @code{\"/**\"} is used in the\n+string list @code{Source_Dirs}, it is an error to have several files with the\n+same name in the same directory @code{\"/**\"} subtree, since there would be an\n+ambiguity as to which one should be used. However, two files with the same name\n+may exist in two single directories or directory subtrees. In this case, the\n+one in the first directory or directory subtree is a source of the project.\n \n If there are two sources in different directories of the same @code{\"/**\"}\n subtree, one way to resolve the problem is to exclude the directory of the\n@@ -467,11 +465,11 @@ For our example, we can specify the object dir in this way:\n \n @noindent\n As mentioned earlier, there is a single object directory per project. As a\n-result, if you have an existing system where the object files are spread in\n+result, if you have an existing system where the object files are spread across\n several directories, you can either move all of them into the same directory if\n you want to build it with a single project file, or study the section on\n subsystems (@pxref{Organizing Projects into Subsystems}) to see how each\n-separate object directory can be associated with one of the subsystem\n+separate object directory can be associated with one of the subsystems\n constituting the application.\n \n When the @command{linker} is called, it usually creates an executable. By\n@@ -506,7 +504,7 @@ the project file is now\n @noindent\n In the previous section, executables were mentioned. The project manager needs\n to be taught what they are. In a project file, an executable is indicated by\n-pointing to source file of the main subprogram. In C this is the file that\n+pointing to the source file of a main subprogram. In C this is the file that\n contains the @code{main} function, and in Ada the file that contains the main\n unit.\n \n@@ -515,8 +513,8 @@ several executables can be built in the context of a single project file. Of\n course, one given executable might not (and in fact will not) need all the\n source files referenced by the project. As opposed to other build environments\n such as @command{makefile}, one does not need to specify the list of\n-dependencies of each executable, the project-aware builders knows enough of the\n-semantics of the languages to build ands link only the necessary elements.\n+dependencies of each executable, the project-aware builder knows enough of the\n+semantics of the languages to build and link only the necessary elements.\n \n @cindex @code{Main}\n The list of main files is specified via the @b{Main} attribute. It contains\n@@ -540,7 +538,7 @@ If this attribute is defined in the project, then spawning the builder\n with a command such as\n \n @smallexample\n-   gnatmake -Pbuild\n+   gprbuild -Pbuild\n @end smallexample\n \n @noindent\n@@ -555,32 +553,31 @@ or more executables on the command line to build a subset of them.\n \n @noindent\n We now have a project file that fully describes our environment, and can be\n-used to build the application with a simple @command{gnatmake} command as seen\n+used to build the application with a simple @command{gprbuild} command as seen\n in the previous section. In fact, the empty project we showed immediately at\n the beginning (with no attribute at all) could already fulfill that need if it\n was put in the @file{common} directory.\n \n-Of course, we always want more control. This section will show you how to\n-specify the compilation switches that the various tools involved in the\n-building of the executable should use.\n+Of course, we might want more control. This section shows you how to specify\n+the compilation switches that the various tools involved in the building of the\n+executable should use.\n \n @cindex command line length\n-Since source names and locations are described into the project file, it is not\n+Since source names and locations are described in the project file, it is not\n necessary to use switches on the command line for this purpose (switches such\n as -I for gcc). This removes a major source of command line length overflow.\n Clearly, the builders will have to communicate this information one way or\n another to the underlying compilers and tools they call but they usually use\n-response files for this and thus should not be subject to command line\n-overflows.\n+response files for this and thus are not subject to command line overflows.\n \n-Several tools are participating to the creation of an executable: the compiler\n+Several tools participate to the creation of an executable: the compiler\n produces object files from the source files; the binder (in the Ada case)\n-creates an source file that takes care, among other things, of elaboration\n-issues and global variables initialization; and the linker gathers everything\n-into a single executable that users can execute. All these tools are known by\n+creates a \"source\" file that takes care, among other things, of elaboration\n+issues and global variable initialization; and the linker gathers everything\n+into a single executable that users can execute. All these tools are known to\n the project manager and will be called with user defined switches from the\n project files. However, we need to introduce a new project file concept to\n-express which switches to be used for any of the tools involved in the build.\n+express the switches to be used for any of the tools involved in the build.\n \n @cindex project file packages\n A project file is subdivided into zero or more @b{packages}, each of which\n@@ -796,7 +793,7 @@ on Windows), we could configure our project file to build \"proc1\"\n @cindex @code{Executable_Suffix}\n Attribute @b{Executable_Suffix}, when specified, may change the suffix\n of the executable files, when no attribute @code{Executable} applies:\n-its value replace the platform-specific executable suffix.\n+its value replaces the platform-specific executable suffix.\n The default executable suffix is empty on UNIX and \".exe\" on Windows.\n \n It is also possible to change the name of the produced executable by using the\n@@ -1163,8 +1160,8 @@ so far in @file{build.gpr}, building the application would fail with an error\n indicating that the gtkada and logging units that are relied upon by the sources\n of this project cannot be found.\n \n-This is easily solved by adding the following @b{with} clauses at the beginning\n-of our project:\n+This is solved by adding the following @b{with} clauses at the beginning of our\n+project:\n \n @smallexample @c projectfile\n   @b{with} \"gtkada.gpr\";\n@@ -1176,16 +1173,16 @@ of our project:\n \n @noindent\n @cindex @code{Externally_Built}\n-When such a project is compiled, @command{gnatmake} will automatically\n-check the other projects and recompile their sources when needed. It will also\n+When such a project is compiled, @command{gprbuild} will automatically check\n+the other projects and recompile their sources when needed. It will also\n recompile the sources from @code{Build} when needed, and finally create the\n executable. In some cases, the implementation units needed to recompile a\n-project are not available, or come from some third-party and you do not want to\n-recompile it yourself. In this case, the attribute @b{Externally_Built} to\n-\"true\" can be set, indicating to the builder that this project can be assumed\n-to be up-to-date, and should not be considered for recompilation. In Ada, if\n-the sources of this externally built project were compiled with another version\n-of the compiler or with incompatible options, the binder will issue an error.\n+project are not available, or come from some third party and you do not want to\n+recompile it yourself. In this case, set the attribute @b{Externally_Built} to\n+\"true\", indicating to the builder that this project can be assumed to be\n+up-to-date, and should not be considered for recompilation. In Ada, if the\n+sources of this externally built project were compiled with another version of\n+the compiler or with incompatible options, the binder will issue an error.\n \n The project's @code{with} clause has several effects. It provides source\n visibility between projects during the compilation process. It also guarantees\n@@ -1214,8 +1211,7 @@ A solution if you need something like this is to use aggregate projects\n When a relative path or a base name is used, the\n project files are searched relative to each of the directories in the\n @b{project path}. This path includes all the directories found with the\n-following algorithm, in that order, as soon as a matching file is found,\n-the search stops:\n+following algorithm, in this order; the first matching file is used:\n \n @itemize @bullet\n @item First, the file is searched relative to the directory that contains the\n@@ -1236,8 +1232,8 @@ the search stops:\n   use @b{GPR_PROJECT_PATH_FILE} or @b{GPR_PROJECT_PATH}.\n \n @item Finally, it is searched relative to the default project directories.\n-  Such directories depends on the tool used. The different locations searched\n-  in the specified order are:\n+  Such directories depend on the tool used. The locations searched in the\n+  specified order are:\n \n   @itemize @bullet\n   @item @file{<prefix>/<target>/lib/gnat}\n@@ -1388,7 +1384,7 @@ There are two main approaches to avoiding this duplication:\n   @end smallexample\n \n @item The second approach is to define the switches in a third project.\n-  That project is setup without any sources (so that, as opposed to\n+  That project is set up without any sources (so that, as opposed to\n   the first example, none of the project plays a special role), and\n   will only be used to define the attributes. Such a project is\n   typically called @file{shared.gpr}.\n@@ -1480,21 +1476,21 @@ Various aspects of the projects can be modified based on @b{scenarios}. These\n are user-defined modes that change the behavior of a project. Typical\n examples are the setup of platform-specific compiler options, or the use of\n a debug and a release mode (the former would activate the generation of debug\n-information, when the second will focus on improving code optimization).\n+information, while the second will focus on improving code optimization).\n \n-Let's enhance our example to support a debug and a release modes.The issue is to\n-let the user choose what kind of system he is building:\n-use @option{-g} as compiler switches in debug mode and @option{-O2}\n-in release mode. We will also setup the projects so that we do not share the\n-same object directory in both modes, otherwise switching from one to the other\n-might trigger more recompilations than needed or mix objects from the 2 modes.\n+Let's enhance our example to support debug and release modes. The issue is to\n+let the user choose what kind of system he is building: use @option{-g} as\n+compiler switches in debug mode and @option{-O2} in release mode. We will also\n+set up the projects so that we do not share the same object directory in both\n+modes; otherwise switching from one to the other might trigger more\n+recompilations than needed or mix objects from the two modes.\n \n One naive approach is to create two different project files, say\n @file{build_debug.gpr} and @file{build_release.gpr}, that set the appropriate\n-attributes as explained in previous sections. This solution does not scale well,\n-because in presence of multiple projects depending on each other,\n-you will also have to duplicate the complete hierarchy and adapt the project\n-files to point to the right copies.\n+attributes as explained in previous sections. This solution does not scale\n+well, because in the presence of multiple projects depending on each other, you\n+will also have to duplicate the complete hierarchy and adapt the project files\n+to point to the right copies.\n \n @cindex scenarios\n Instead, project files support the notion of scenarios controlled\n@@ -1517,16 +1513,16 @@ order of priority):\n   When the external value does not come from the command line, it can come from\n   the value of environment variables of the appropriate name.\n   In our case, if an environment variable called \"mode\"\n-  exist, its value will be taken into account.\n+  exists, its value will be taken into account.\n \n-@item @b{External function second parameter}\n+@item @b{External function second parameter}.\n \n @end table\n \n @cindex @code{external}\n We now need to get that value in the project. The general form is to use\n the predefined function @b{external} which returns the current value of\n-the external. For instance, we could setup the object directory to point to\n+the external. For instance, we could set up the object directory to point to\n either @file{obj/debug} or @file{obj/release} by changing our project to\n \n @smallexample @c projectfile\n@@ -1580,7 +1576,7 @@ force the user to define the value. Finally, we can use a case construction to s\n switches depending on the scenario the user has chosen.\n \n Most aspects of the projects can depend on scenarios. The notable exception\n-are project dependencies (@code{with} clauses), which may not depend on a scenario.\n+are project dependencies (@code{with} clauses), which cannot depend on a scenario.\n \n Scenarios work the same way with @b{project hierarchies}: you can either\n duplicate a variable similar to @code{Mode} in each of the project (as long\n@@ -1601,7 +1597,7 @@ using system-specific means such as archives or windows DLLs.\n \n Library projects provide a system- and language-independent way of building both @b{static}\n and @b{dynamic} libraries. They also support the concept of @b{standalone\n-libraries} (SAL) which offers two significant properties: the elaboration\n+libraries} (SAL) which offer two significant properties: the elaboration\n (e.g. initialization) of the library is either automatic or very simple;\n a change in the\n implementation part of the library implies minimal post-compilation actions on\n@@ -1632,20 +1628,20 @@ installation of the library (i.e., copying associated source, object and\n \n @noindent\n Let's enhance our example and transform the @code{logging} subsystem into a\n-library.  In order to do so, a few changes need to be made to @file{logging.gpr}.\n-A number of specific attributes needs to be defined: at least @code{Library_Name}\n-and @code{Library_Dir}; in addition, a number of other attributes can be used\n-to specify specific aspects of the library. For readability, it is also\n-recommended (although not mandatory), to use the qualifier @code{library} in\n-front of the @code{project} keyword.\n+library.  In order to do so, a few changes need to be made to\n+@file{logging.gpr}.  Some attributes need to be defined: at least\n+@code{Library_Name} and @code{Library_Dir}; in addition, some other attributes\n+can be used to specify specific aspects of the library. For readability, it is\n+also recommended (although not mandatory), to use the qualifier @code{library}\n+in front of the @code{project} keyword.\n \n @table @asis\n @item @b{Library_Name}:\n @cindex @code{Library_Name}\n   This attribute is the name of the library to be built. There is no\n   restriction on the name of a library imposed by the project manager, except\n   for stand-alone libraries whose names must follow the syntax of Ada\n-  identifiers; however, there may be system specific restrictions on the name.\n+  identifiers; however, there may be system-specific restrictions on the name.\n   In general, it is recommended to stick to alphanumeric characters (and\n   possibly single underscores) to help portability.\n \n@@ -1656,7 +1652,7 @@ front of the @code{project} keyword.\n   the sources are compiled, the object files end up  in the explicit or\n   implicit @code{Object_Dir} directory. When all sources of a library\n   are compiled, some of the compilation artifacts, including the library itself,\n-  are copied to the library_dir directory. This directory must exists and be\n+  are copied to the library_dir directory. This directory must exist and be\n   writable. It must also be different from the object directory so that cleanup\n   activities in the Library_Dir do not affect recompilation needs.\n \n@@ -1694,11 +1690,10 @@ Other library-related attributes can be used to change the defaults:\n   a library on different operating systems.\n \n   If you need to build both a static and a dynamic library, it is recommended\n-  use two different object directories, since in some cases some extra code\n-  needs to be generated for the latter. For such cases, one can\n-  either define two different project files, or a single one which uses scenarios\n-  to indicate the various kinds of library to be built and their\n-  corresponding object_dir.\n+  to use two different object directories, since in some cases some extra code\n+  needs to be generated for the latter. For such cases, one can either define\n+  two different project files, or a single one that uses scenarios to indicate\n+  the various kinds of library to be built and their corresponding object_dir.\n \n @cindex @code{Library_ALI_Dir}\n @item @b{Library_ALI_Dir}:\n@@ -1711,7 +1706,7 @@ Other library-related attributes can be used to change the defaults:\n \n @cindex @code{Library_Version}\n @item @b{Library_Version}:\n-  This attribute is platform dependent, and has no effect on VMS and Windows.\n+  This attribute is platform dependent, and has no effect on Windows.\n   On Unix, it is used only for dynamic libraries as the internal\n   name of the library (the @code{\"soname\"}). If the library file name (built\n   from the @code{Library_Name}) is different from the @code{Library_Version},\n@@ -1740,15 +1735,15 @@ Other library-related attributes can be used to change the defaults:\n @item @b{Library_GCC}:\n   This attribute is the name of the tool to use instead of \"gcc\" to link shared\n   libraries. A common use of this attribute is to define a wrapper script that\n-  accomplishes specific actions before calling gcc (which itself is calling the\n+  accomplishes specific actions before calling gcc (which itself calls the\n   linker to build the library image).\n \n @item @b{Library_Options}:\n @cindex @code{Library_Options}\n   This attribute may be used to specify additional switches (last switches)\n   when linking a shared library.\n \n-  It may also be used to add foreign object files in a static library.\n+  It may also be used to add foreign object files to a static library.\n   Each string in Library_Options is an absolute or relative path of an object\n   file. When a relative path, it is relative to the object directory.\n \n@@ -1797,19 +1792,18 @@ corresponding to the sources of the project.\n \n A non-library project can import a library project. When the builder is invoked\n on the former, the library of the latter is only rebuilt when absolutely\n-necessary. For instance, if a unit of the\n-library is not up-to-date but non of the executables need this unit, then the\n-unit is not recompiled and the library is not reassembled.\n-For instance, let's assume in our example that logging has the following\n-sources: @file{log1.ads}, @file{log1.adb}, @file{log2.ads} and\n+necessary. For instance, if a unit of the library is not up-to-date but none of\n+the executables need this unit, then the unit is not recompiled and the library\n+is not reassembled.  For instance, let's assume in our example that logging has\n+the following sources: @file{log1.ads}, @file{log1.adb}, @file{log2.ads} and\n @file{log2.adb}. If @file{log1.adb} has been modified, then the library\n @file{liblogging} will be rebuilt when compiling all the sources of\n @code{Build} only if @file{proc.ads}, @file{pack.ads} or @file{pack.adb}\n include a @code{\"with Log1\"}.\n \n To ensure that all the sources in the @code{Logging} library are\n up to date, and that all the sources of @code{Build} are also up to date,\n-the following two commands needs to be used:\n+the following two commands need to be used:\n \n @smallexample\n gnatmake -Plogging.gpr\n@@ -1821,10 +1815,10 @@ All @file{ALI} files will also be copied from the object directory to the\n library directory. To build executables, @command{gnatmake} will use the\n library rather than the individual object files.\n \n-Library projects can also be useful to describe a library that need to be used\n+Library projects can also be useful to describe a library that needs to be used\n but, for some reason, cannot be rebuilt. For instance, it is the case when some\n-of the library sources are not available. Such library projects need simply to\n-use the @code{Externally_Built} attribute as in the example below:\n+of the library sources are not available. Such library projects need to use the\n+@code{Externally_Built} attribute as in the example below:\n \n @smallexample @c projectfile\n library @b{project} Extern_Lib @b{is}\n@@ -1894,7 +1888,7 @@ language and takes a list of sources as parameter.\n @smallexample @c projectfile\n @group\n      @b{for} Library_Dir @b{use} \"lib\";\n-     @b{for} Library_Name @b{use} \"loggin\";\n+     @b{for} Library_Name @b{use} \"logging\";\n      @b{for} Library_Interface @b{use} (\"lib1\", \"lib2\");  --@i{  unit names}\n @end group\n @end smallexample\n@@ -1914,7 +1908,7 @@ language and takes a list of sources as parameter.\n   build. Values are either @code{standard} (the default), @code{no} or\n   @code{encapsulated}. When @code{standard} is used the code to elaborate and\n   finalize the library is embedded, when @code{encapsulated} is used the\n-  library can furthermore only depends on static libraries (including\n+  library can furthermore depend only on static libraries (including\n   the GNAT runtime). This attribute can be set to @code{no} to make it clear\n   that the library should not be standalone in which case the\n   @code{Library_Interface} should not defined. Note that this attribute\n@@ -1924,7 +1918,7 @@ language and takes a list of sources as parameter.\n @smallexample @c projectfile\n @group\n      @b{for} Library_Dir @b{use} \"lib\";\n-     @b{for} Library_Name @b{use} \"loggin\";\n+     @b{for} Library_Name @b{use} \"logging\";\n      @b{for} Library_Kind @b{use} \"dynamic\";\n      @b{for} Library_Interface @b{use} (\"lib1\", \"lib2\");  --@i{  unit names}\n      @b{for} Library_Standalone @b{use} \"encapsulated\";\n@@ -1949,7 +1943,7 @@ included in the library.\n   platform and if attribute @b{Library_Auto_Init} is not specified or\n   is specified with the value \"true\". A static Stand-alone Library is never\n   automatically initialized. Specifying \"false\" for this attribute\n-  prevent automatic initialization.\n+  prevents automatic initialization.\n \n   When a non-automatically initialized stand-alone library is used in an\n   executable, its initialization procedure must be called before any service of\n@@ -1975,11 +1969,11 @@ included in the library.\n   This attribute defines the location (absolute or relative to the project\n   directory) where the sources of the interface units are copied at\n   installation time.\n-  These sources includes the specs of the interface units along with the closure\n-  of sources necessary to compile them successfully. That may include bodies and\n-  subunits, when pragmas @code{Inline} are used, or when there is a generic\n-  units in the spec. This directory cannot point to the object directory or\n-  one of the source directories, but it can point to the library directory,\n+  These sources includes the specs of the interface units along with the\n+  closure of sources necessary to compile them successfully. That may include\n+  bodies and subunits, when pragmas @code{Inline} are used, or when there are\n+  generic units in specs. This directory cannot point to the object directory\n+  or one of the source directories, but it can point to the library directory,\n   which is the default value for this attribute.\n \n @item @b{Library_Symbol_Policy}:\n@@ -2049,9 +2043,9 @@ a project file slightly different from the one used to build the library, by\n using the @code{externally_built} attribute. @ref{Using Library Projects}\n \n Another option is to use @command{gprinstall} to install the library in a\n-different context than the build location. A project to use this library is\n-generated automatically by @command{gprinstall} which also copy, in the install\n-location, the minimum set of sources needed to use the library.\n+different context than the build location. @command{gprinstall} automatically\n+generates a project to use this library, and also copies the minimum set of\n+sources needed to use the library to the install location.\n @ref{Installation}\n \n @c ---------------------------------------------\n@@ -2065,7 +2059,7 @@ modified versions of some of the source files, without changing the original\n sources. This can be achieved through the @b{project extension} facility.\n \n Suppose for instance that our example @code{Build} project is built every night\n-for the whole team, in some shared directory. A developer usually need to work\n+for the whole team, in some shared directory. A developer usually needs to work\n on a small part of the system, and might not want to have a copy of all the\n sources and all the object files (mostly because that would require too much\n disk space, time to recompile everything). He prefers to be able to override\n@@ -2075,7 +2069,7 @@ object files generated at night.\n Another example can be taken from large software systems, where it is common to have\n multiple implementations of a common interface; in Ada terms, multiple\n versions of a package body for the same spec.  For example, one implementation\n-might be safe for use in tasking programs, while another might only be used\n+might be safe for use in tasking programs, while another might be used only\n in sequential applications.  This can be modeled in GNAT using the concept\n of @emph{project extension}.  If one project (the ``child'') @emph{extends}\n another project (the ``parent'') then by default all source files of the\n@@ -2096,12 +2090,12 @@ Project extensions provide a flexible solution to create a new version\n of a subsystem while sharing and reusing as much as possible from the original\n one.\n \n-A project extension inherits implicitly all the sources and objects from the\n+A project extension implicitly inherits all the sources and objects from the\n project it extends. It is possible to create a new version of some of the\n-sources in one of the additional source dirs of the extending project. Those new\n-versions hide the original versions. Adding new sources or removing existing\n-ones is also possible. Here is an example on how to extend the project\n-@code{Build} from previous examples:\n+sources in one of the additional source directories of the extending\n+project. Those new versions hide the original versions. Adding new sources or\n+removing existing ones is also possible. Here is an example on how to extend\n+the project @code{Build} from previous examples:\n \n @smallexample @c projectfile\n    @b{project} Work @b{extends} \"../bld/build.gpr\" @b{is}\n@@ -2112,12 +2106,12 @@ ones is also possible. Here is an example on how to extend the project\n The project after @b{extends} is the one being extended. As usual, it can be\n specified using an absolute path, or a path relative to any of the directories\n in the project path (@pxref{Project Dependencies}). This project does not\n-specify source or object directories, so the default value for these attribute\n-will be used that is to say the current directory (where project @code{Work} is\n-placed). We can already compile that project with\n+specify source or object directories, so the default values for these\n+attributes will be used that is to say the current directory (where project\n+@code{Work} is placed). We can compile that project with\n \n @smallexample\n-   gnatmake -Pwork\n+   gprbuild -Pwork\n @end smallexample\n \n @noindent\n@@ -2127,14 +2121,14 @@ sources it inherited from @code{Build}, therefore all the object files\n in @code{Build} and its dependencies are still valid and are reused\n automatically.\n \n-Suppose we now want to supply an alternate version of @file{pack.adb}\n-but use the existing versions of @file{pack.ads} and @file{proc.adb}.\n-We can create the new file Work's current directory  (likely\n-by copying the one from the @code{Build} project and making changes to\n-it. If new packages are needed at the same time, we simply create\n-new files in the source directory of the extending project.\n+Suppose we now want to supply an alternate version of @file{pack.adb} but use\n+the existing versions of @file{pack.ads} and @file{proc.adb}.  We can create\n+the new file in Work's current directory (likely by copying the one from the\n+@code{Build} project and making changes to it. If new packages are needed at\n+the same time, we simply create new files in the source directory of the\n+extending project.\n \n-When we recompile, @command{gnatmake} will now automatically recompile\n+When we recompile, @command{gprbuild} will now automatically recompile\n this file (thus creating @file{pack.o} in the current directory) and\n any file that depends on it (thus creating @file{proc.o}). Finally, the\n executable is also linked locally.\n@@ -2183,7 +2177,7 @@ extended.\n At the project level, if they are not declared in the extending project, some\n attributes are inherited from the project being extended. They are:\n @code{Languages}, @code{Main} (for a root non library project) and\n-@code{Library_Name} (for a project extending a library project)\n+@code{Library_Name} (for a project extending a library project).\n \n @menu\n * Project Hierarchy Extension::\n@@ -2242,7 +2236,7 @@ import @file{b.gpr} which itself knows nothing about @file{a_ext.gpr}.\n When extending a large system spanning multiple projects, it is often\n inconvenient to extend every project in the hierarchy that is impacted by a\n small change introduced in a low layer. In such cases, it is possible to create\n-an @b{implicit extension} of entire hierarchy using @b{extends all}\n+an @b{implicit extension} of an entire hierarchy using @b{extends all}\n relationship.\n \n When the project is extended using @code{extends all} inheritance, all projects\n@@ -2259,7 +2253,7 @@ projects with the explicit ones.\n \n When building such a project hierarchy extension, the project manager will\n ensure that both modified sources and sources in implicit extending projects\n-that depend on them, are recompiled.\n+that depend on them are recompiled.\n \n Thus, in our example we could create the following projects instead:\n \n@@ -2363,7 +2357,7 @@ aggregate project, you will need to add \"p.gpr\" in the list of project\n files for the aggregate project, or the main will not be built when\n building the aggregate project.\n \n-Aggregate projects are only supported with @command{gprbuild}, but not with\n+Aggregate projects are supported only with @command{gprbuild}, not with\n @command{gnatmake}.\n \n @c ---------------------------------------------------------\n@@ -2442,9 +2436,8 @@ reference external variables in @code{with} statements, as in\n   @b{end} MyProject;\n @end smallexample\n \n-For various reasons, this isn't authorized. But using aggregate\n-projects provide an elegant solution. For instance, you could\n-use a project file like:\n+For various reasons, this is not allowed. But using aggregate projects provide\n+an elegant solution. For instance, you could use a project file like:\n \n @smallexample @c projectfile\n aggregate @b{project} Agg @b{is}\n@@ -2466,7 +2459,7 @@ aggregate @b{project} Agg @b{is}\n The loading of aggregate projects is optimized in @command{gprbuild},\n so that all files are searched for only once on the disk\n (thus reducing the number of system calls and contributing to faster\n-compilation times especially on systems with sources on remote\n+compilation times, especially on systems with sources on remote\n servers). As part of the loading, @command{gprbuild}\n computes how and where a source file should be compiled, and even if it is\n found several times in the aggregated projects it will be compiled only\n@@ -2517,12 +2510,9 @@ attributes and packages are forbidden in an aggregate project. Here is the\n \n The only package that is authorized (albeit optional) is\n Builder. Other packages (in particular Compiler, Binder and Linker)\n-are forbidden. It is an error to have any of these\n-(and such an error prevents the proper loading of the aggregate\n-project).\n+are forbidden.\n \n-Three new attributes have been created, which can only be used in the\n-context of aggregate projects:\n+The following three attributes can be used only in an aggregate project:\n \n @table @asis\n @item @b{Project_Files}:\n@@ -2578,16 +2568,17 @@ Here are a few valid examples:\n This attribute can be used to specify a list of directories in\n which to look for project files in @code{with} statements.\n \n-When you specify a project in Project_Files\n-say @code{\"x/y/a.gpr\"}), and this projects imports a project \"b.gpr\", only\n-b.gpr is searched in the project path. a.gpr must be exactly at\n-<dir of the aggregate>/x/y/a.gpr.\n+When you specify a project in Project_Files (say @code{x/y/a.gpr}), and\n+@code{a.gpr} imports a project @code{b.gpr}, only @code{b.gpr} is searched in\n+the project path. @code{a.gpr} must be exactly at\n+@code{<dir of the aggregate>/x/y/a.gpr}.\n \n This attribute, however, does not affect the search for the aggregated\n project files specified with @code{Project_Files}.\n \n-Each aggregate project has its own (that is if agg1.gpr includes\n-agg2.gpr, they can potentially both have a different project path).\n+Each aggregate project has its own @code{Project_Path} (that is if\n+@code{agg1.gpr} includes @code{agg2.gpr}, they can potentially both have a\n+different @code{Project_Path}).\n \n This project path is defined as the concatenation, in that order, of:\n \n@@ -2636,7 +2627,7 @@ this will be reported as an error by the builder.\n \n Directories are relative to the location of the aggregate project file.\n \n-Here are a few valid examples:\n+Example:\n \n @smallexample @c projectfile\n    @b{for} Project_Path @b{use} (\"/usr/local/gpr\", \"gpr/\");\n@@ -2665,7 +2656,7 @@ sources (each level overrides the previous levels):\n \n These override the value given by the attribute, so that\n users can override the value set in the (presumably shared\n-with others in his team) aggregate project.\n+with others team members) aggregate project.\n \n @item The -X command line switch to @command{gprbuild}\n \n@@ -2868,7 +2859,7 @@ Then, when you build with:\n @end smallexample\n \n This will build all units from projects A, B and C and will create a\n-static library named @file{libagg.a} into the @file{lagg}\n+static library named @file{libagg.a} in the @file{lagg}\n directory. An aggregate library project has the same set of\n restriction as a standard library project.\n \n@@ -3025,15 +3016,15 @@ GPR_PROJECT_PATH. Path names are case sensitive if file names in the host\n operating system are case sensitive. As a special case, the directory\n separator can always be \"/\" even on Windows systems, so that project files\n can be made portable across architectures.\n-The syntax of the environment variable ADA_PROJECT_PATH and\n+The syntax of the environment variables ADA_PROJECT_PATH and\n GPR_PROJECT_PATH is a list of directory names separated by colons on UNIX and\n semicolons on Windows.\n \n A given project name can appear only once in a context clause.\n \n It is illegal for a project imported by a context clause to refer, directly\n or indirectly, to the project in which this context clause appears (the\n-dependency graph cannot contain cycles), except when one of the with clause\n+dependency graph cannot contain cycles), except when one of the with clauses\n in the cycle is a @b{limited with}.\n @c ??? Need more details here\n \n@@ -3045,15 +3036,14 @@ in the cycle is a @b{limited with}.\n \n @noindent\n These dependencies form a @b{directed graph}, potentially cyclic when using\n-@b{limited with}. The subprogram reflecting the @b{extends} relations is a\n-tree.\n+@b{limited with}. The subgraph reflecting the @b{extends} relations is a tree.\n \n A project's @b{immediate sources} are the source files directly defined by\n that project, either implicitly by residing in the project source directories,\n or explicitly through any of the source-related attributes.\n-More generally, a project sources are the immediate sources of the project\n-together with the immediate sources (unless overridden) of any\n-project on which it depends directly or indirectly.\n+More generally, a project's @b{sources} are the immediate sources of the\n+project together with the immediate sources (unless overridden) of any project\n+on which it depends directly or indirectly.\n \n A @b{project hierarchy} can be created, where projects are children of\n other projects. The name of such a child project must be @code{Parent.Child},\n@@ -3737,7 +3727,8 @@ has not been set in a given package or project, its value defaults to the\n empty string or the empty list.\n \n @smallexample\n-attribute_reference ::= attribute_prefix ' @i{<simple_attribute>_}simple_name [ (string_literal) ]\n+attribute_reference ::=\n+  attribute_prefix ' @i{<simple_attribute>_}simple_name [ (string_literal) ]\n attribute_prefix ::= @i{project}\n   | @i{<project_>}simple_name\n   | package_identifier\n@@ -3774,8 +3765,8 @@ In the following sections, all predefined attributes are succinctly described,\n first the project level attributes, that is those attributes that are not in a\n package, then the attributes in the different packages.\n \n-It is possible for different tools to create dynamically new packages with\n-attributes, or new attribute in predefined packages. These attributes are\n+It is possible for different tools to dynamically create new packages with\n+attributes, or new attributes in predefined packages. These attributes are\n not documented here.\n \n The attributes under Configuration headings are usually found only in\n@@ -4083,9 +4074,9 @@ directory in the run path options.\n \n @item @b{Separate_Run_Path_Options}: single\n \n-Indicates if there may be or not several run path options specified when\n-linking an executable. Only authorized case-insensitive b=values are \"true\" or\n-\"false\" (the default).\n+Indicates if there may be several run path options specified when linking an\n+executable. Only authorized case-insensitive values are \"true\" or \"false\" (the\n+default).\n \n @item @b{Toolchain_Version}: single, indexed, case-insensitive index\n "}, {"sha": "3027ffa241cd465cdca59bc9317e223dce73d06c", "filename": "gcc/ada/restrict.adb", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Frestrict.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Frestrict.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.adb?ref=4887624ec89edfe47471a467732b9c85537b3ff5", "patch": "@@ -858,8 +858,8 @@ package body Restrict is\n    -- Process_Restriction_Synonyms --\n    ----------------------------------\n \n-   --  Note: body of this function must be coordinated with list of\n-   --  renaming declarations in System.Rident.\n+   --  Note: body of this function must be coordinated with list of renaming\n+   --  declarations in System.Rident.\n \n    function Process_Restriction_Synonyms (N : Node_Id) return Name_Id\n    is\n@@ -883,11 +883,6 @@ package body Restrict is\n          when Name_No_Task_Attributes =>\n             New_Name := Name_No_Task_Attributes_Package;\n \n-         --  No_Elaboration_Code_All is special, no warning needed\n-\n-         when Name_No_Elaboration_Code_All =>\n-            return Name_No_Elaboration_Code;\n-\n          --  SPARK is special in that we unconditionally warn\n \n          when Name_SPARK =>"}, {"sha": "64a6da1710ed60abecaa7a4424c302218ecef842", "filename": "gcc/ada/restrict.ads", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Frestrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Frestrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frestrict.ads?ref=4887624ec89edfe47471a467732b9c85537b3ff5", "patch": "@@ -336,8 +336,6 @@ package Restrict is\n    --  Id is a node whose Chars field contains the name of a restriction.\n    --  If it is one of synonyms that we allow for historical purposes (for\n    --  list see System.Rident), then the proper official name is returned.\n-   --  In addition, No_Elaboration_Code_All returns Name_No_Elaboration_Code.\n-   --  Otherwise the Chars field of the argument is returned unchanged.\n \n    function Restriction_Active (R : All_Restrictions) return Boolean;\n    pragma Inline (Restriction_Active);"}, {"sha": "63d837293699cc0c6a90b6405df46a7c31ab8b86", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 2, "deletions": 49, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=4887624ec89edfe47471a467732b9c85537b3ff5", "patch": "@@ -3,7 +3,7 @@\n --                         GNAT COMPILER COMPONENTS                         --\n --                                                                          --\n --                             S E M _ C H 1 0                              --\n---     s                                                                     --\n+--                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n --          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n@@ -109,13 +109,6 @@ package body Sem_Ch10 is\n    --  and of subunits. N is a defining_program_unit_name, and P_Id is the\n    --  immediate parent scope.\n \n-   function Get_Parent_Entity (Unit : Node_Id) return Entity_Id;\n-   --  Get defining entity of parent unit of a child unit. In most cases this\n-   --  is the defining entity of the unit, but for a child instance whose\n-   --  parent needs a body for inlining, the instantiation node of the parent\n-   --  has not yet been rewritten as a package declaration, and the entity has\n-   --  to be retrieved from the Instance_Spec of the unit.\n-\n    function Has_With_Clause\n      (C_Unit     : Node_Id;\n       Pack       : Entity_Id;\n@@ -1327,7 +1320,7 @@ package body Sem_Ch10 is\n \n       --  a) The first pass analyzes non-limited with-clauses and also any\n       --     configuration pragmas (we need to get the latter analyzed right\n-      --     away, since they can affect processing of subsequent items.\n+      --     away, since they can affect processing of subsequent items).\n \n       --  b) The second pass analyzes limited_with clauses (Ada 2005: AI-50217)\n \n@@ -1351,28 +1344,6 @@ package body Sem_Ch10 is\n                if Library_Unit (Item) /= Cunit (Current_Sem_Unit) then\n                   Analyze (Item);\n \n-                  --  This is the point at which we check for the case of an\n-                  --  improper WITH from a unit with No_Elaboration_Code_All.\n-\n-                  if No_Elab_Code (Current_Sem_Unit) >=\n-                       No_Elab_Code_All_Warn\n-                  then\n-                     if No_Elab_Code\n-                          (Get_Source_Unit (Library_Unit (Item))) /=\n-                             No_Elab_Code_All\n-                     then\n-                        Error_Msg_Warn :=\n-                          No_Elab_Code (Current_Sem_Unit) =\n-                            No_Elab_Code_All_Warn;\n-                        Error_Msg_N\n-                          (\"<unit with No_Elaboration_Code_All has bad WITH\",\n-                           Item);\n-                        Error_Msg_NE\n-                          (\"\\<unit& does not have No_Elaboration_Code_All\",\n-                           Item, Entity (Name (Item)));\n-                     end if;\n-                  end if;\n-\n                --  Here for the case of a useless with for the main unit\n \n                else\n@@ -3150,24 +3121,6 @@ package body Sem_Ch10 is\n       end if;\n    end Generate_Parent_References;\n \n-   -----------------------\n-   -- Get_Parent_Entity --\n-   -----------------------\n-\n-   function Get_Parent_Entity (Unit : Node_Id) return Entity_Id is\n-   begin\n-      if Nkind (Unit) = N_Package_Body\n-        and then Nkind (Original_Node (Unit)) = N_Package_Instantiation\n-      then\n-         return Defining_Entity\n-                  (Specification (Instance_Spec (Original_Node (Unit))));\n-      elsif Nkind (Unit) = N_Package_Instantiation then\n-         return Defining_Entity (Specification (Instance_Spec (Unit)));\n-      else\n-         return Defining_Entity (Unit);\n-      end if;\n-   end Get_Parent_Entity;\n-\n    ---------------------\n    -- Has_With_Clause --\n    ---------------------"}, {"sha": "163c845627fca51b6d7f940323d42790a63c02be", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=4887624ec89edfe47471a467732b9c85537b3ff5", "patch": "@@ -2078,8 +2078,8 @@ package body Sem_Ch7 is\n       Id := First_Entity (P);\n       while Present (Id) and then Id /= First_Private_Entity (P) loop\n          if Is_Private_Base_Type (Id)\n-           and then Comes_From_Source (Full_View (Id))\n            and then Present (Full_View (Id))\n+           and then Comes_From_Source (Full_View (Id))\n            and then Scope (Full_View (Id)) = Scope (Id)\n            and then Ekind (Full_View (Id)) /= E_Incomplete_Type\n          then"}, {"sha": "23bf2354705155413d47941716090350e10e144a", "filename": "gcc/ada/sem_eval.ads", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Fsem_eval.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Fsem_eval.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.ads?ref=4887624ec89edfe47471a467732b9c85537b3ff5", "patch": "@@ -454,20 +454,20 @@ package Sem_Eval is\n       Assume_Valid : Boolean := False;\n       Fixed_Int    : Boolean := False;\n       Int_Real     : Boolean := False) return Boolean;\n-   --  Returns True if it can be guaranteed at compile time that expression is\n-   --  known to be in range of the subtype Typ. A result of False does not mean\n-   --  that the expression is out of range, merely that it cannot be determined\n-   --  at compile time that it is in range. If Typ is a floating point type or\n-   --  Int_Real is set, any integer value is treated as though it was a real\n-   --  value (i.e. the underlying real value is used). In this case we use the\n-   --  corresponding real value, both for the bounds of Typ, and for the value\n-   --  of the expression N. If Typ is a fixed type or a discrete type and\n-   --  Int_Real is False but flag Fixed_Int is True then any fixed-point value\n-   --  is treated as though it was discrete value (i.e. the underlying integer\n-   --  value is used). In this case we use the corresponding integer value,\n-   --  both for the bounds of Typ, and for the value of the expression N. If\n-   --  Typ is a discrete type and Fixed_Int as well as Int_Real are false,\n-   --  integer values are used throughout.\n+   --  Returns True if it can be guaranteed at compile time that expression\n+   --  N is known to be in range of the subtype Typ. A result of False does\n+   --  not mean that the expression is out of range, merely that it cannot be\n+   --  determined at compile time that it is in range. If Typ is a floating\n+   --  point type or Int_Real is set, any integer value is treated as though it\n+   --  was a real value (i.e. the underlying real value is used). In this case\n+   --  we use the corresponding real value, both for the bounds of Typ, and for\n+   --  the value of the expression N. If Typ is a fixed type or a discrete type\n+   --  and Int_Real is False but flag Fixed_Int is True then any fixed-point\n+   --  value is treated as though it was discrete value (i.e. the underlying\n+   --  integer value is used). In this case we use the corresponding integer\n+   --  value, both for the bounds of Typ, and for the value of the expression\n+   --  N. If Typ is a discrete type and Fixed_Int as well as Int_Real are\n+   --  false, integer values are used throughout.\n    --\n    --  If Assume_Valid is set True, then N is always assumed to contain a valid\n    --  value. If Assume_Valid is set False, then N may be invalid (unless there"}, {"sha": "33d163b08edaef627e7c0879b56b764f9d2d20a8", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 67, "deletions": 53, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=4887624ec89edfe47471a467732b9c85537b3ff5", "patch": "@@ -8783,55 +8783,6 @@ package body Sem_Prag is\n             Id := Chars (Arg);\n             Expr := Get_Pragma_Arg (Arg);\n \n-            --  Special handling for No_Elaboration_Code\n-\n-            if Nkind (Expr) = N_Identifier\n-              and then Chars (Expr) = Name_No_Elaboration_Code\n-            then\n-               if No_Elab_Code (Current_Sem_Unit) < No_Elab_Code then\n-                  Set_No_Elab_Code (Current_Sem_Unit, No_Elab_Code);\n-               end if;\n-            end if;\n-\n-            --  Special handling for No_Elaboration_Code_All\n-\n-            if Nkind (Expr) = N_Identifier\n-              and then Chars (Expr) = Name_No_Elaboration_Code_All\n-            then\n-               --  Must appear within a spec\n-\n-               if not Nkind_In (Unit (Cunit (Current_Sem_Unit)),\n-                                N_Package_Declaration,\n-                                N_Subprogram_Declaration)\n-               then\n-                  Error_Msg_Name_1 := Id;\n-                  Error_Msg_N\n-                    (\"restriction% can appear only in package or \"\n-                     & \"subprogram spec\", Arg);\n-               end if;\n-\n-               --  Set special value in unit table\n-\n-               declare\n-                  New_Val : No_Elab_Code_T;\n-\n-               begin\n-                  if Warn then\n-                     New_Val := No_Elab_Code_All_Warn;\n-                  else\n-                     New_Val := No_Elab_Code_All;\n-                  end if;\n-\n-                  if No_Elab_Code (Current_Sem_Unit) < New_Val then\n-                     Set_No_Elab_Code (Current_Sem_Unit, New_Val);\n-                  end if;\n-               end;\n-\n-               --  Note that in the code below, Process_Restriction_Synonym\n-               --  will treat No_Elaboration_Code_All like No_Elaboration_Code.\n-\n-            end if;\n-\n             --  Case of no restriction identifier present\n \n             if Id = No_Name then\n@@ -8911,10 +8862,10 @@ package body Sem_Prag is\n                        (\"\\unless also specified in body or spec\", N);\n                      return;\n \n-                  --  If we have a No_Elaboration_Code pragma that we\n-                  --  accept, then it needs to be added to the configuration\n-                  --  restrcition set so that we get proper application to\n-                  --  other units in the main extended source as required.\n+                  --  If we accept a No_Elaboration_Code restriction, then it\n+                  --  needs to be added to the configuration restriction set so\n+                  --  that we get proper application to other units in the main\n+                  --  extended source as required.\n \n                   else\n                      Add_To_Config_Boolean_Restrictions (No_Elaboration_Code);\n@@ -16326,6 +16277,68 @@ package body Sem_Prag is\n             GNAT_Pragma;\n             Pragma_Misplaced;\n \n+         -----------------------------\n+         -- No_Elaboration_Code_All --\n+         -----------------------------\n+\n+         --  pragma No_Elaboration_Code_All;\n+\n+         when Pragma_No_Elaboration_Code_All => NECA : declare\n+            CL : constant List_Id := Context_Items (Cunit (Current_Sem_Unit));\n+            CI : Node_Id;\n+\n+         begin\n+            GNAT_Pragma;\n+            Check_Valid_Library_Unit_Pragma;\n+\n+            if Nkind (N) = N_Null_Statement then\n+               return;\n+            end if;\n+\n+            --  Must appear for a spec\n+\n+            if not Nkind_In (Unit (Cunit (Current_Sem_Unit)),\n+                             N_Package_Declaration,\n+                             N_Subprogram_Declaration)\n+            then\n+               Error_Pragma\n+                 (Fix_Error\n+                    (\"pragma% can only occur for package \"\n+                     & \"or subprogram spec\"));\n+            end if;\n+\n+            --  Set flag in unit table\n+\n+            Set_No_Elab_Code_All (Current_Sem_Unit);\n+\n+            --  Set restriction No_Elaboration_Code, including adding it to the\n+            --  set of configuration restrictions so it will apply to all units\n+            --  in the extended main source.\n+\n+            Set_Restriction (No_Elaboration_Code, N);\n+            Add_To_Config_Boolean_Restrictions (No_Elaboration_Code);\n+\n+            --  Here is where we check that the context clause for the current\n+            --  unit does not have any bad with's with respect to NECA rules.\n+\n+            CI := First (CL);\n+            while Present (CI) loop\n+               if Nkind (CI) = N_With_Clause\n+                 and then not\n+                   No_Elab_Code_All (Get_Source_Unit (Library_Unit (CI)))\n+               then\n+                  Error_Msg_Sloc := Sloc (CI);\n+                  Error_Msg_N\n+                    (\"violation of No_Elaboration_Code_All#\", N);\n+                  Error_Msg_NE\n+                    (\"\\unit& does not have No_Elaboration_Code_All\",\n+                     N, Entity (Name (CI)));\n+               end if;\n+\n+               Next (CI);\n+            end loop;\n+         end NECA;\n+\n          ---------------\n          -- No_Inline --\n          ---------------\n@@ -24797,6 +24810,7 @@ package body Sem_Prag is\n       Pragma_Memory_Size                    => -1,\n       Pragma_No_Return                      =>  0,\n       Pragma_No_Body                        =>  0,\n+      Pragma_No_Elaboration_Code_All        => -1,\n       Pragma_No_Inline                      =>  0,\n       Pragma_No_Run_Time                    => -1,\n       Pragma_No_Strict_Aliasing             => -1,"}, {"sha": "8bbf48cc116639e20d63e3b5207b5e8a012614d6", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=4887624ec89edfe47471a467732b9c85537b3ff5", "patch": "@@ -6791,6 +6791,23 @@ package body Sem_Util is\n       return Strval (Expr_Value_S (Arg));\n    end Get_Name_From_CTC_Pragma;\n \n+   -----------------------\n+   -- Get_Parent_Entity --\n+   -----------------------\n+\n+   function Get_Parent_Entity (Unit : Node_Id) return Entity_Id is\n+   begin\n+      if Nkind (Unit) = N_Package_Body\n+        and then Nkind (Original_Node (Unit)) = N_Package_Instantiation\n+      then\n+         return Defining_Entity\n+                  (Specification (Instance_Spec (Original_Node (Unit))));\n+      elsif Nkind (Unit) = N_Package_Instantiation then\n+         return Defining_Entity (Specification (Instance_Spec (Unit)));\n+      else\n+         return Defining_Entity (Unit);\n+      end if;\n+   end Get_Parent_Entity;\n    -------------------\n    -- Get_Pragma_Id --\n    -------------------"}, {"sha": "84b4572b0b1a587d6ad348524b9052d673c66fe7", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=4887624ec89edfe47471a467732b9c85537b3ff5", "patch": "@@ -833,6 +833,13 @@ package Sem_Util is\n    --  Return the Name component of Test_Case pragma N\n    --  Bad name now that this no longer applies to Contract_Case ???\n \n+   function Get_Parent_Entity (Unit : Node_Id) return Entity_Id;\n+   --  Get defining entity of parent unit of a child unit. In most cases this\n+   --  is the defining entity of the unit, but for a child instance whose\n+   --  parent needs a body for inlining, the instantiation node of the parent\n+   --  has not yet been rewritten as a package declaration, and the entity has\n+   --  to be retrieved from the Instance_Spec of the unit.\n+\n    function Get_Pragma_Id (N : Node_Id) return Pragma_Id;\n    pragma Inline (Get_Pragma_Id);\n    --  Obtains the Pragma_Id from the Chars field of Pragma_Identifier (N)"}, {"sha": "473a19fec9d9cda6116271b87d65b8379ae38313", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=4887624ec89edfe47471a467732b9c85537b3ff5", "patch": "@@ -549,6 +549,7 @@ package Snames is\n    Name_Main_Storage                   : constant Name_Id := N + $; -- GNAT\n    Name_Memory_Size                    : constant Name_Id := N + $; -- Ada 83\n    Name_No_Body                        : constant Name_Id := N + $; -- GNAT\n+   Name_No_Elaboration_Code_All        : constant Name_Id := N + $; -- GNAT\n    Name_No_Inline                      : constant Name_Id := N + $; -- GNAT\n    Name_No_Return                      : constant Name_Id := N + $; -- Ada 05\n    Name_Obsolescent                    : constant Name_Id := N + $; -- GNAT\n@@ -738,7 +739,6 @@ package Snames is\n    Name_No_Dynamic_Attachment          : constant Name_Id := N + $;\n    Name_No_Dynamic_Interrupts          : constant Name_Id := N + $;\n    Name_No_Elaboration_Code            : constant Name_Id := N + $;\n-   Name_No_Elaboration_Code_All        : constant Name_Id := N + $;\n    Name_No_Implementation_Extensions   : constant Name_Id := N + $;\n    Name_No_Obsolescent_Features        : constant Name_Id := N + $;\n    Name_No_Requeue                     : constant Name_Id := N + $;\n@@ -1861,6 +1861,7 @@ package Snames is\n       Pragma_Main_Storage,\n       Pragma_Memory_Size,\n       Pragma_No_Body,\n+      Pragma_No_Elaboration_Code_All,\n       Pragma_No_Inline,\n       Pragma_No_Return,\n       Pragma_Obsolescent,"}, {"sha": "8824f4fc2ef73d75465778d27659ca007dd62f3d", "filename": "gcc/ada/targparm.adb", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Ftargparm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4887624ec89edfe47471a467732b9c85537b3ff5/gcc%2Fada%2Ftargparm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.adb?ref=4887624ec89edfe47471a467732b9c85537b3ff5", "patch": "@@ -212,6 +212,16 @@ package body Targparm is\n \n       Opt.Address_Is_Private := False;\n \n+      --  Loop through source lines\n+\n+      --  Note: in the case or pragmas, we are only interested in pragmas that\n+      --  appear as configuration pragmas. These are left justified, so they\n+      --  do not have three spaces at the start. Pragmas appearing within the\n+      --  package (like Pure and No_Elaboration_Code_All) will have the three\n+      --  spaces at the start and so will be ignored.\n+\n+      --  For a special exception, see processing for pragma Pure below\n+\n       P := Source_First;\n       Line_Loop : while System_Text (P .. P + 10) /= \"end System;\" loop\n \n@@ -461,12 +471,6 @@ package body Targparm is\n             Opt.Polling_Required := True;\n             goto Line_Loop_Continue;\n \n-         --  Ignore pragma Pure (System)\n-\n-         elsif System_Text (P .. P + 20) = \"pragma Pure (System);\" then\n-            P := P + 21;\n-            goto Line_Loop_Continue;\n-\n          --  Queuing Policy\n \n          elsif System_Text (P .. P + 22) = \"pragma Queuing_Policy (\" then\n@@ -494,9 +498,20 @@ package body Targparm is\n             Opt.Task_Dispatching_Policy_Sloc := System_Location;\n             goto Line_Loop_Continue;\n \n-         --  No other pragmas are permitted\n+         --  No other configuration pragmas are permitted\n \n          elsif System_Text (P .. P + 6) = \"pragma \" then\n+\n+            --  Special exception, we allow pragma Pure (System) appearing in\n+            --  column one. This is an obsolete usage which may show up in old\n+            --  tests with an obsolete version of system.ads, so we recognize\n+            --  and ignore it to make life easier in handling such tests.\n+\n+            if System_Text (P .. P + 20) = \"pragma Pure (System);\" then\n+               P := P + 21;\n+               goto Line_Loop_Continue;\n+            end if;\n+\n             Set_Standard_Error;\n             Write_Line (\"unrecognized line in system.ads: \");\n "}]}