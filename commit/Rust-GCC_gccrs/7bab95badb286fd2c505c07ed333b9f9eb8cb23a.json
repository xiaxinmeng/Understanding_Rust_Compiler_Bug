{"sha": "7bab95badb286fd2c505c07ed333b9f9eb8cb23a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2JhYjk1YmFkYjI4NmZkMmM1MDVjMDdlZDMzM2I5ZjllYjhjYjIzYQ==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2004-09-22T01:03:40Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2004-09-22T01:03:40Z"}, "message": "tree-ssa.c (verify_def): Use print_generic_stmt, not debug_generic_stmt.\n\n2004-09-21  Daniel Berlin  <dberlin@dberlin.org>\n\n\t* tree-ssa.c (verify_def): Use print_generic_stmt,\n\tnot debug_generic_stmt.\n\t(verify_use): Ditto.\n\t(verify_phi_args): Ditto.\n\t(verify_ssa): Ditto.\n\nFrom-SVN: r87835", "tree": {"sha": "0ed919caa26000139b643badc68da45e73fd89c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ed919caa26000139b643badc68da45e73fd89c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7bab95badb286fd2c505c07ed333b9f9eb8cb23a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bab95badb286fd2c505c07ed333b9f9eb8cb23a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7bab95badb286fd2c505c07ed333b9f9eb8cb23a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7bab95badb286fd2c505c07ed333b9f9eb8cb23a/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "31b92e3226e488266ba70f9ce660450a587d06c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31b92e3226e488266ba70f9ce660450a587d06c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31b92e3226e488266ba70f9ce660450a587d06c3"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "ebae450392e26fcc8d7ddeef805a6d8b2f3a9659", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bab95badb286fd2c505c07ed333b9f9eb8cb23a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bab95badb286fd2c505c07ed333b9f9eb8cb23a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7bab95badb286fd2c505c07ed333b9f9eb8cb23a", "patch": "@@ -1,3 +1,11 @@\n+2004-09-21  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\t* tree-ssa.c (verify_def): Use print_generic_stmt,\n+\tnot debug_generic_stmt.\n+\t(verify_use): Ditto.\n+\t(verify_phi_args): Ditto.\n+\t(verify_ssa): Ditto.\n+\n 2004-09-21  Paul Brook  <paul@codesourcery.com>\n \n \t* varasm.c (default_assemble_integer): Return false for values wider"}, {"sha": "56c9c8f6be4f690549ace5ff0978c640c4e4d856", "filename": "gcc/tree-ssa.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7bab95badb286fd2c505c07ed333b9f9eb8cb23a/gcc%2Ftree-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7bab95badb286fd2c505c07ed333b9f9eb8cb23a/gcc%2Ftree-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa.c?ref=7bab95badb286fd2c505c07ed333b9f9eb8cb23a", "patch": "@@ -177,9 +177,9 @@ verify_def (basic_block bb, basic_block *definition_block, tree ssa_name,\n     {\n       error (\"SSA_NAME_DEF_STMT is wrong\");\n       fprintf (stderr, \"Expected definition statement:\\n\");\n-      debug_generic_stmt (SSA_NAME_DEF_STMT (ssa_name));\n+      print_generic_stmt (stderr, SSA_NAME_DEF_STMT (ssa_name), TDF_VOPS);\n       fprintf (stderr, \"\\nActual definition statement:\\n\");\n-      debug_generic_stmt (stmt);\n+      print_generic_stmt (stderr, stmt, TDF_VOPS);\n       goto err;\n     }\n \n@@ -189,7 +189,7 @@ verify_def (basic_block bb, basic_block *definition_block, tree ssa_name,\n   fprintf (stderr, \"while verifying SSA_NAME \");\n   print_generic_expr (stderr, ssa_name, 0);\n   fprintf (stderr, \" in statement\\n\");\n-  debug_generic_stmt (stmt);\n+  print_generic_stmt (stderr, stmt, TDF_VOPS);\n \n   return true;\n }\n@@ -254,9 +254,9 @@ verify_use (basic_block bb, basic_block def_bb, tree ssa_name,\n   if (err)\n     {\n       fprintf (stderr, \"for SSA_NAME: \");\n-      debug_generic_expr (ssa_name);\n+      print_generic_expr (stderr, ssa_name, TDF_VOPS);\n       fprintf (stderr, \"in statement:\\n\");\n-      debug_generic_stmt (stmt);\n+      print_generic_stmt (stderr, stmt, TDF_VOPS);\n     }\n \n   return err;\n@@ -319,7 +319,7 @@ verify_phi_args (tree phi, basic_block bb, basic_block *definition_block)\n       if (err)\n \t{\n \t  fprintf (stderr, \"PHI argument\\n\");\n-\t  debug_generic_stmt (op);\n+\t  print_generic_stmt (stderr, op, TDF_VOPS);\n \t  goto error;\n \t}\n \n@@ -342,7 +342,7 @@ verify_phi_args (tree phi, basic_block bb, basic_block *definition_block)\n   if (err)\n     {\n       fprintf (stderr, \"for PHI node\\n\");\n-      debug_generic_stmt (phi);\n+      print_generic_stmt (stderr, phi, TDF_VOPS);\n     }\n \n \n@@ -555,7 +555,7 @@ verify_ssa (void)\n \t      && NUM_V_MAY_DEFS (STMT_V_MAY_DEF_OPS (stmt)) == 0)\n \t    {\n \t      error (\"Statement makes aliased stores, but has no V_MAY_DEFS\");\n-\t      debug_generic_stmt (stmt);\n+\t      print_generic_stmt (stderr, stmt, TDF_VOPS);\n \t      goto err;\n \t    }\n \t    "}]}