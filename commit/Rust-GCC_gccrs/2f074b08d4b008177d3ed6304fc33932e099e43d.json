{"sha": "2f074b08d4b008177d3ed6304fc33932e099e43d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYwNzRiMDhkNGIwMDgxNzdkM2VkNjMwNGZjMzM5MzJlMDk5ZTQzZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-12-14T22:26:13Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-12-14T22:26:13Z"}, "message": "re PR c++/51248 (ICE with pointer to enum)\n\n\tPR c++/51248\n\t* decl.c (copy_type_enum): Also update variants.\n\t(finish_enum): Allow variants of complete enums.\n\nFrom-SVN: r182345", "tree": {"sha": "984187b8b10589fc31a6db3a3378989b3ced668b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/984187b8b10589fc31a6db3a3378989b3ced668b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f074b08d4b008177d3ed6304fc33932e099e43d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f074b08d4b008177d3ed6304fc33932e099e43d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f074b08d4b008177d3ed6304fc33932e099e43d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f074b08d4b008177d3ed6304fc33932e099e43d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3c72114c42aa6c7778f264579c16ad168753648b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c72114c42aa6c7778f264579c16ad168753648b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c72114c42aa6c7778f264579c16ad168753648b"}], "stats": {"total": 43, "additions": 32, "deletions": 11}, "files": [{"sha": "6677af341ba402c24dad69c3ae121a708a8c39f7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f074b08d4b008177d3ed6304fc33932e099e43d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f074b08d4b008177d3ed6304fc33932e099e43d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2f074b08d4b008177d3ed6304fc33932e099e43d", "patch": "@@ -1,3 +1,9 @@\n+2011-12-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/51248\n+\t* decl.c (copy_type_enum): Also update variants.\n+\t(finish_enum): Allow variants of complete enums.\n+\n 2011-12-14  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/51475"}, {"sha": "480d211871a2a265b934dce0b123280f21633571", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f074b08d4b008177d3ed6304fc33932e099e43d/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f074b08d4b008177d3ed6304fc33932e099e43d/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=2f074b08d4b008177d3ed6304fc33932e099e43d", "patch": "@@ -11908,15 +11908,19 @@ xref_basetypes (tree ref, tree base_list)\n static void\n copy_type_enum (tree dst, tree src)\n {\n-  TYPE_MIN_VALUE (dst) = TYPE_MIN_VALUE (src);\n-  TYPE_MAX_VALUE (dst) = TYPE_MAX_VALUE (src);\n-  TYPE_SIZE (dst) = TYPE_SIZE (src);\n-  TYPE_SIZE_UNIT (dst) = TYPE_SIZE_UNIT (src);\n-  SET_TYPE_MODE (dst, TYPE_MODE (src));\n-  TYPE_PRECISION (dst) = TYPE_PRECISION (src);\n-  TYPE_ALIGN (dst) = TYPE_ALIGN (src);\n-  TYPE_USER_ALIGN (dst) = TYPE_USER_ALIGN (src);\n-  TYPE_UNSIGNED (dst) = TYPE_UNSIGNED (src);\n+  tree t;\n+  for (t = dst; t; t = TYPE_NEXT_VARIANT (t))\n+    {\n+      TYPE_MIN_VALUE (t) = TYPE_MIN_VALUE (src);\n+      TYPE_MAX_VALUE (t) = TYPE_MAX_VALUE (src);\n+      TYPE_SIZE (t) = TYPE_SIZE (src);\n+      TYPE_SIZE_UNIT (t) = TYPE_SIZE_UNIT (src);\n+      SET_TYPE_MODE (dst, TYPE_MODE (src));\n+      TYPE_PRECISION (t) = TYPE_PRECISION (src);\n+      TYPE_ALIGN (t) = TYPE_ALIGN (src);\n+      TYPE_USER_ALIGN (t) = TYPE_USER_ALIGN (src);\n+      TYPE_UNSIGNED (t) = TYPE_UNSIGNED (src);\n+    }\n }\n \n /* Begin compiling the definition of an enumeration type.\n@@ -12285,9 +12289,12 @@ finish_enum (tree enumtype)\n       return;\n     }\n \n-  /* Here there should not be any variants of this type.  */\n+  /* If this is a forward declaration, there should not be any variants,\n+     though we can get a variant in the middle of an enum-specifier with\n+     wacky code like 'enum E { e = sizeof(const E*) };'  */\n   gcc_assert (enumtype == TYPE_MAIN_VARIANT (enumtype)\n-\t      && !TYPE_NEXT_VARIANT (enumtype));\n+\t      && (TYPE_VALUES (enumtype)\n+\t\t  || !TYPE_NEXT_VARIANT (enumtype)));\n }\n \n /* Build and install a CONST_DECL for an enumeration constant of the"}, {"sha": "e27689288a0be2957b252d2fbfcb8b7a0e32fd0c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f074b08d4b008177d3ed6304fc33932e099e43d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f074b08d4b008177d3ed6304fc33932e099e43d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2f074b08d4b008177d3ed6304fc33932e099e43d", "patch": "@@ -1,3 +1,8 @@\n+2011-12-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/51248\n+\t* g++.dg/other/enum2.C: New.\n+\n 2011-12-14  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/51475"}, {"sha": "3a28f2532c6d4b2e1d485f6dd235ed7f315572c5", "filename": "gcc/testsuite/g++.dg/other/enum2.C", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f074b08d4b008177d3ed6304fc33932e099e43d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fenum2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f074b08d4b008177d3ed6304fc33932e099e43d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fenum2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fenum2.C?ref=2f074b08d4b008177d3ed6304fc33932e099e43d", "patch": "@@ -0,0 +1,3 @@\n+// PR c++/51248\n+\n+enum E { e = sizeof(const E*) };"}]}