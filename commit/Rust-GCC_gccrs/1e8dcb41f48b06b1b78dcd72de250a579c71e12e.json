{"sha": "1e8dcb41f48b06b1b78dcd72de250a579c71e12e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU4ZGNiNDFmNDhiMDZiMWI3OGRjZDcyZGUyNTBhNTc5YzcxZTEyZQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@codesourcery.com", "date": "2004-01-11T00:52:18Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-01-11T00:52:18Z"}, "message": "genautomata.c (make_automaton, [...]): Print progress bars with '.' characters instead of '*'.\n\n\t* genautomata.c (make_automaton, NDFA_to_DFA):\n\tPrint progress bars with '.' characters instead of '*'.\n\t(build_automaton): Change notes to match.\n\nFrom-SVN: r75664", "tree": {"sha": "6480ef676ff053fdd4c073a2f959e059e6b0948a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6480ef676ff053fdd4c073a2f959e059e6b0948a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e8dcb41f48b06b1b78dcd72de250a579c71e12e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e8dcb41f48b06b1b78dcd72de250a579c71e12e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e8dcb41f48b06b1b78dcd72de250a579c71e12e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e8dcb41f48b06b1b78dcd72de250a579c71e12e/comments", "author": null, "committer": null, "parents": [{"sha": "9c10179d0a63ba0fa07e7ac5366b152944d7082b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c10179d0a63ba0fa07e7ac5366b152944d7082b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c10179d0a63ba0fa07e7ac5366b152944d7082b"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "2ac7526a1bbd1e589ffdc4f9ed47ef6fae699bb1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e8dcb41f48b06b1b78dcd72de250a579c71e12e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e8dcb41f48b06b1b78dcd72de250a579c71e12e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e8dcb41f48b06b1b78dcd72de250a579c71e12e", "patch": "@@ -1,3 +1,9 @@\n+2004-01-10  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* genautomata.c (make_automaton, NDFA_to_DFA):\n+\tPrint progress bars with '.' characters instead of '*'.\n+\t(build_automaton): Change notes to match.\n+\n 2004-01-10  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/m32r/m32r.md: Use define_constants for unspec and"}, {"sha": "12da0c7058d0822fb13570c83b3910f0c20bcd8a", "filename": "gcc/genautomata.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e8dcb41f48b06b1b78dcd72de250a579c71e12e/gcc%2Fgenautomata.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e8dcb41f48b06b1b78dcd72de250a579c71e12e/gcc%2Fgenautomata.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenautomata.c?ref=1e8dcb41f48b06b1b78dcd72de250a579c71e12e", "patch": "@@ -5733,7 +5733,7 @@ make_automaton (automaton_t automaton)\n                             VLA_PTR_ADD (state_stack, state2);\n \t\t\t    states_n++;\n \t\t\t    if (states_n % 100 == 0)\n-\t\t\t      fprintf (stderr, \"*\");\n+\t\t\t      fprintf (stderr, \".\");\n                           }\n \t\t\tadded_arc = add_arc (state, state2, ainsn, 1);\n \t\t\tif (!ndfa_flag)\n@@ -5764,7 +5764,7 @@ make_automaton (automaton_t automaton)\n           VLA_PTR_ADD (state_stack, state2);\n \t  states_n++;\n \t  if (states_n % 100 == 0)\n-\t    fprintf (stderr, \"*\");\n+\t    fprintf (stderr, \".\");\n         }\n       if (advance_cycle_ainsn == NULL)\n \tabort ();\n@@ -5935,7 +5935,7 @@ NDFA_to_DFA (automaton_t automaton)\n \t    {\n \t      states_n++;\n \t      if (states_n % 100 == 0)\n-\t\tfprintf (stderr, \"*\");\n+\t\tfprintf (stderr, \".\");\n \t    }\n \t}\n     }\n@@ -6396,9 +6396,9 @@ build_automaton (automaton_t automaton)\n \n   ticker_on (&NDFA_time);\n   if (automaton->corresponding_automaton_decl == NULL)\n-    fprintf (stderr, \"Create anonymous automaton (1 star is 100 new states):\");\n+    fprintf (stderr, \"Create anonymous automaton (1 dot is 100 new states):\");\n   else\n-    fprintf (stderr, \"Create automaton `%s' (1 star is 100 new states):\",\n+    fprintf (stderr, \"Create automaton `%s' (1 dot is 100 new states):\",\n \t     automaton->corresponding_automaton_decl->name);\n   make_automaton (automaton);\n   fprintf (stderr, \" done\\n\");\n@@ -6408,9 +6408,9 @@ build_automaton (automaton_t automaton)\n   automaton->NDFA_arcs_num = arcs_num;\n   ticker_on (&NDFA_to_DFA_time);\n   if (automaton->corresponding_automaton_decl == NULL)\n-    fprintf (stderr, \"Make anonymous DFA (1 star is 100 new states):\");\n+    fprintf (stderr, \"Make anonymous DFA (1 dot is 100 new states):\");\n   else\n-    fprintf (stderr, \"Make DFA `%s' (1 star is 100 new states):\",\n+    fprintf (stderr, \"Make DFA `%s' (1 dot is 100 new states):\",\n \t     automaton->corresponding_automaton_decl->name);\n   NDFA_to_DFA (automaton);\n   fprintf (stderr, \" done\\n\");"}]}