{"sha": "0c2200e4198df9294aba102519f662a907596623", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGMyMjAwZTQxOThkZjkyOTRhYmExMDI1MTlmNjYyYTkwNzU5NjYyMw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-12-09T23:43:44Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-12-09T23:46:19Z"}, "message": "go-test.exp: rewrite errchk regexp quoting\n\n\t* go.test/go-test.exp (errchk): Rewrite regexp quoting to use\n\tcurly braces, making it much simpler.", "tree": {"sha": "9415bca69cdc4185ab142fcca0e5af07a1371dba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9415bca69cdc4185ab142fcca0e5af07a1371dba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c2200e4198df9294aba102519f662a907596623", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c2200e4198df9294aba102519f662a907596623", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c2200e4198df9294aba102519f662a907596623", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c2200e4198df9294aba102519f662a907596623/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d9767cb8eea0f21c5b23b0183c53840e0433397", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d9767cb8eea0f21c5b23b0183c53840e0433397", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d9767cb8eea0f21c5b23b0183c53840e0433397"}], "stats": {"total": 62, "additions": 22, "deletions": 40}, "files": [{"sha": "d11a2c2bba4f240ed2e5fd9335afe8fcfe35db8d", "filename": "gcc/testsuite/go.test/go-test.exp", "status": "modified", "additions": 22, "deletions": 40, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c2200e4198df9294aba102519f662a907596623/gcc%2Ftestsuite%2Fgo.test%2Fgo-test.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c2200e4198df9294aba102519f662a907596623/gcc%2Ftestsuite%2Fgo.test%2Fgo-test.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgo.test%2Fgo-test.exp?ref=0c2200e4198df9294aba102519f662a907596623", "patch": "@@ -101,50 +101,32 @@ proc errchk { test opts } {\n \tset changed \"\"\n \twhile { $changed != $copy_line } {\n \t    set changed $copy_line\n-\t    regsub \"\\(// \\[^\\\"\\]*\\\"\\[^\\\"\\]*\\)\\\" \\\"\" $copy_line \"\\\\1|\" out_line\n+\t    regsub {(// [^\"]*\"[^\"]*)\" \"} $copy_line {\\1|} out_line\n \t    set copy_line $out_line\n \t}\n \n-\tregsub \"// \\(GCCGO_\\)?ERROR \\\"\\(\\[^\\\"\\]*\\)\\\" *\\(\\\\*/\\)?$\" $copy_line \"// \\{ dg-error \\\"\\\\2\\\" \\}\\\\3\" out_line\n-\tif [string match \"*dg-error*\\\\\\[*\" $out_line] {\n-\t    set index [string first \"dg-error\" $out_line]\n-\t    regsub -start $index -all \"\\\\\\\\\\\\\\[\" $out_line \"\\\\\\\\\\\\\\\\\\\\\\[\" out_line\n-\t}\n-\tif [string match \"*dg-error*\\\\\\]*\" $out_line] {\n-\t    set index [string first \"dg-error\" $out_line]\n-\t    regsub -start $index -all \"\\\\\\\\\\\\\\]\" $out_line \"\\\\\\\\\\\\\\\\\\\\\\]\" out_line\n-\t}\n-\tif [string match \"*dg-error*.\\**\" $out_line] {\n-\t    # I worked out the right number of backslashes by\n-\t    # experimentation, not analysis.\n-\t    regsub -all \"\\\\.\\\\*\" $out_line \"\\\\\\\\\\[ -~\\\\\\\\\\]*\" out_line\n-\t}\n-\tif [string match \"*dg-error*\\\\\\[?\\\\\\]*\" $out_line] {\n-\t    set index [string first \"dg-error\" $out_line]\n-\t    regsub -all \"\\\\\\[\\(.\\)\\\\\\]\" $out_line \"\\\\\\\\\\[\\\\1\\\\\\\\\\]\" out_line\n-\t}\n-\tif [string match \"*dg-error*\\{*\" $out_line] {\n-\t    set index [string first \"dg-error\" $out_line]\n-\t    regsub -start $index -all \"\\(\\[^\\\\\\\\]\\)\\{\" $out_line \"\\\\1\\\\\\\\\\[\\\\\\{\\\\\\\\\\]\" out_line\n-\t}\n-\tif [string match \"*dg-error*\\}*\\}\" $out_line] {\n-\t    set index [string first \"dg-error\" $out_line]\n-\t    regsub -start $index -all \"\\(\\[^\\\\\\\\]\\)\\}\\(.\\)\" $out_line \"\\\\1\\\\\\\\\\[\\\\\\}\\\\\\\\\\]\\\\2\" out_line\n-\t}\n-\tif [string match \"*dg-error*\\\\\\[^\\\\\\\\\\]\\(*\" $out_line] {\n-\t    set index [string first \"dg-error\" $out_line]\n-\t    regsub -start $index -all \"\\\\\\\\\\\\\\(\" $out_line \"\\\\\\\\\\[\\\\\\(\\\\\\\\\\]\" out_line\n-\t}\n-\tif [string match \"*dg-error*\\\\\\[^\\\\\\\\\\]\\)*\\}\" $out_line] {\n-\t    set index [string first \"dg-error\" $out_line]\n-\t    regsub -start $index -all \"\\\\\\\\\\\\\\)\\(.\\)\" $out_line \"\\\\\\\\\\[\\\\\\)\\\\\\\\\\]\\\\1\" out_line\n-\t}\n-\t# Special case for bug332, in which the error message wants to\n-\t# match the file name, which is not what dg-error expects.\n-\tif [string match \"*dg-error*bug332*\" $out_line] {\n-\t    set index [string first \"dg-error\" $out_line]\n-\t    regsub -start $index \"bug332\" $out_line \"undefined type\" out_line\n+\tset index [string first // $copy_line]\n+\tset eindex [string first ERROR $copy_line]\n+\tif { $index >= 0 && $eindex > $index } {\n+\t    # We're putting the regexp in curly braces, so replace any\n+\t    # curly braces in the regexp with hex escapes.\n+\t    regsub -start $index -all \"\\{\" $copy_line {\\x7b} copy_line\n+\t    regsub -start $index -all \"\\}\" $copy_line {\\x7d} copy_line\n+\n+\t    # Replace .* with [ -~]* because .* will eat newlines.\n+\t    # We can't easily use (?n) because this regexp will appear\n+\t    # in the middle of a large regexp.\n+\t    regsub -all {\\.\\*} $copy_line {[ -~]*} copy_line\n \t}\n+\n+\t# Change\n+\t#   // ERROR \"string\"\n+\t# to\n+\t#   // { dg-error {string} }\n+\t# The latter is what go-dg-runtest expects.\n+\t# Retain an optional trailing */, for syntax/semi6.go.\n+\tregsub {// (GCCGO_)?ERROR \"([^\"]*)\" *(\\*/)?$} $copy_line \"// \\{ dg-error \\{\\\\2\\} \\}\\\\3\" out_line\n+\n \tputs $fdout $out_line\n     }\n     close $fdin"}]}