{"sha": "71e9716137d47872f30f933ff99ba9ef3df1665c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzFlOTcxNjEzN2Q0Nzg3MmYzMGY5MzNmZjk5YmE5ZWYzZGYxNjY1Yw==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-08-27T18:11:24Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-08-27T18:11:24Z"}, "message": "libstdc++: Fix arithmetic bug in chrono::year_month::operator+\n\nThis fixes the months-based addition for year_month when the\nyear_month's month component is 0.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/chrono (year_month::operator+): Properly handle a\n\tmonth value of 0 by casting the month value to int before\n\tsubtracting 1 from it so that the difference is sign-extended in\n\tthe subsequent addition.\n\t* testsuite/std/time/year_month/1.cc: Test adding months to a\n\tyear_month whose month component is below or above the\n\tnormalized range of [1,12].", "tree": {"sha": "56ed98ef11b7279b60c08c1d43d45fe837f3d368", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56ed98ef11b7279b60c08c1d43d45fe837f3d368"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71e9716137d47872f30f933ff99ba9ef3df1665c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71e9716137d47872f30f933ff99ba9ef3df1665c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71e9716137d47872f30f933ff99ba9ef3df1665c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71e9716137d47872f30f933ff99ba9ef3df1665c/comments", "author": null, "committer": null, "parents": [{"sha": "7b743c67f04471a0129390ad2808e61e5538e0d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b743c67f04471a0129390ad2808e61e5538e0d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b743c67f04471a0129390ad2808e61e5538e0d3"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "9fc8f560d992029fe7b072368de012acca278a95", "filename": "libstdc++-v3/include/std/chrono", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71e9716137d47872f30f933ff99ba9ef3df1665c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fchrono", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71e9716137d47872f30f933ff99ba9ef3df1665c/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fchrono", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fchrono?ref=71e9716137d47872f30f933ff99ba9ef3df1665c", "patch": "@@ -2133,7 +2133,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t{\n \t  // TODO: Optimize?\n \t  auto __m = __ym.month() + __dm;\n-\t  auto __i = unsigned{__ym.month()} - 1 + __dm.count();\n+\t  auto __i = int(unsigned(__ym.month())) - 1 + __dm.count();\n \t  auto __y = (__i < 0\n \t\t      ? __ym.year() + years{(__i - 11) / 12}\n \t\t      : __ym.year() + years{__i / 12});"}, {"sha": "4c331dcdb5011ad3b7691a789162190320c30884", "filename": "libstdc++-v3/testsuite/std/time/year_month/1.cc", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71e9716137d47872f30f933ff99ba9ef3df1665c/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Ftime%2Fyear_month%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71e9716137d47872f30f933ff99ba9ef3df1665c/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Ftime%2Fyear_month%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Ftime%2Fyear_month%2F1.cc?ref=71e9716137d47872f30f933ff99ba9ef3df1665c", "patch": "@@ -83,4 +83,16 @@ constexpr_year_month()\n   static_assert(2017y/33 + months{0} == 2019y/9);\n \n   static_assert(2010y/January + months{-12} == 2009y/January);\n+\n+  static_assert(2010y/month{0} + months{-1} == 2009y/November);\n+  static_assert(2010y/month{0} + months{0} == 2009y/December);\n+  static_assert(2010y/month{0} + months{1} == 2010y/January);\n+  static_assert(2010y/month{0} + months{2} == 2010y/February);\n+  static_assert(2010y/month{0} + months{11} == 2010y/November);\n+  static_assert(2010y/month{0} + months{12} == 2010y/December);\n+  static_assert(2010y/month{0} + months{13} == 2011y/January);\n+\n+  static_assert(months{-1} + 2010y/month{37} == 2012y/December);\n+  static_assert(months{0} + 2010y/month{37} == 2013y/January);\n+  static_assert(months{1} + 2010y/month{37} == 2013y/February);\n }"}]}