{"sha": "f003579e9cdd2f28f7a5b0985d541c2f375bbf11", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjAwMzU3OWU5Y2RkMmYyOGY3YTViMDk4NWQ1NDFjMmYzNzViYmYxMQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-02-18T14:34:59Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-02-18T14:34:59Z"}, "message": "re PR middle-end/69553 (Optimizations O1/O2 makes std::array value incorrect when passed to function)\n\n2016-02-18  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/69553\n\t* fold-const.c (operand_equal_p): Properly compare offsets for\n\tIMAGPART_EXPR and ARRAY_REF.\n\n\t* g++.dg/torture/pr69553.C: New testcase.\n\nFrom-SVN: r233520", "tree": {"sha": "9b569cfccff7bab4a18c307b6ab2aca8d8a3955f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b569cfccff7bab4a18c307b6ab2aca8d8a3955f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f003579e9cdd2f28f7a5b0985d541c2f375bbf11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f003579e9cdd2f28f7a5b0985d541c2f375bbf11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f003579e9cdd2f28f7a5b0985d541c2f375bbf11", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f003579e9cdd2f28f7a5b0985d541c2f375bbf11/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cc7ab8a232b31a8e1edf7c3b3bd586798fa583ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc7ab8a232b31a8e1edf7c3b3bd586798fa583ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc7ab8a232b31a8e1edf7c3b3bd586798fa583ba"}], "stats": {"total": 75, "additions": 70, "deletions": 5}, "files": [{"sha": "b5bbb901c3f2c06801fd3579316d6aac841a90b7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f003579e9cdd2f28f7a5b0985d541c2f375bbf11/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f003579e9cdd2f28f7a5b0985d541c2f375bbf11/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f003579e9cdd2f28f7a5b0985d541c2f375bbf11", "patch": "@@ -1,3 +1,9 @@\n+2016-02-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/69553\n+\t* fold-const.c (operand_equal_p): Properly compare offsets for\n+\tIMAGPART_EXPR and ARRAY_REF.\n+\n 2016-02-18  Nick Clifton  <nickc@redhat.com>\n \n         PR target/62254"}, {"sha": "41c652e43ee5ed828c603598c0e21c97415cafe7", "filename": "gcc/fold-const.c", "status": "modified", "additions": 24, "deletions": 5, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f003579e9cdd2f28f7a5b0985d541c2f375bbf11/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f003579e9cdd2f28f7a5b0985d541c2f375bbf11/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=f003579e9cdd2f28f7a5b0985d541c2f375bbf11", "patch": "@@ -3008,8 +3008,15 @@ operand_equal_p (const_tree arg0, const_tree arg1, unsigned int flags)\n \t  flags &= ~OEP_ADDRESS_OF;\n \t  return OP_SAME (0);\n \n-\tcase REALPART_EXPR:\n \tcase IMAGPART_EXPR:\n+\t  /* Require the same offset.  */\n+\t  if (!operand_equal_p (TYPE_SIZE (TREE_TYPE (arg0)),\n+\t\t\t\tTYPE_SIZE (TREE_TYPE (arg1)),\n+\t\t\t\tflags & ~OEP_ADDRESS_OF))\n+\t    return 0;\n+\n+\t/* Fallthru.  */\n+\tcase REALPART_EXPR:\n \tcase VIEW_CONVERT_EXPR:\n \t  return OP_SAME (0);\n \n@@ -3049,17 +3056,29 @@ operand_equal_p (const_tree arg0, const_tree arg1, unsigned int flags)\n \n \tcase ARRAY_REF:\n \tcase ARRAY_RANGE_REF:\n-\t  /* Operands 2 and 3 may be null.\n-\t     Compare the array index by value if it is constant first as we\n-\t     may have different types but same value here.  */\n \t  if (!OP_SAME (0))\n \t    return 0;\n \t  flags &= ~OEP_ADDRESS_OF;\n+\t  /* Compare the array index by value if it is constant first as we\n+\t     may have different types but same value here.  */\n \t  return ((tree_int_cst_equal (TREE_OPERAND (arg0, 1),\n \t\t\t\t       TREE_OPERAND (arg1, 1))\n \t\t   || OP_SAME (1))\n \t\t  && OP_SAME_WITH_NULL (2)\n-\t\t  && OP_SAME_WITH_NULL (3));\n+\t\t  && OP_SAME_WITH_NULL (3)\n+\t\t  /* Compare low bound and element size as with OEP_ADDRESS_OF\n+\t\t     we have to account for the offset of the ref.  */\n+\t\t  && (TREE_TYPE (TREE_OPERAND (arg0, 0))\n+\t\t      == TREE_TYPE (TREE_OPERAND (arg1, 0))\n+\t\t      || (operand_equal_p (array_ref_low_bound\n+\t\t\t\t\t     (CONST_CAST_TREE (arg0)),\n+\t\t\t\t\t   array_ref_low_bound\n+\t\t\t\t\t     (CONST_CAST_TREE (arg1)), flags)\n+\t\t\t  && operand_equal_p (array_ref_element_size\n+\t\t\t\t\t        (CONST_CAST_TREE (arg0)),\n+\t\t\t\t\t      array_ref_element_size\n+\t\t\t\t\t        (CONST_CAST_TREE (arg1)),\n+\t\t\t\t\t      flags))));\n \n \tcase COMPONENT_REF:\n \t  /* Handle operand 2 the same as for ARRAY_REF.  Operand 0"}, {"sha": "90ed5deecf89e266d0aeb9c31759615f5b5f8de2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f003579e9cdd2f28f7a5b0985d541c2f375bbf11/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f003579e9cdd2f28f7a5b0985d541c2f375bbf11/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f003579e9cdd2f28f7a5b0985d541c2f375bbf11", "patch": "@@ -1,3 +1,8 @@\n+2016-02-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/69553\n+\t* g++.dg/torture/pr69553.C: New testcase.\n+\n 2016-02-18  Nick Clifton  <nickc@redhat.com>\n \n         PR target/62254"}, {"sha": "e68e42f935e3bb86d578a9b914b7f2620682ae3b", "filename": "gcc/testsuite/g++.dg/torture/pr69553.C", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f003579e9cdd2f28f7a5b0985d541c2f375bbf11/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr69553.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f003579e9cdd2f28f7a5b0985d541c2f375bbf11/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr69553.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr69553.C?ref=f003579e9cdd2f28f7a5b0985d541c2f375bbf11", "patch": "@@ -0,0 +1,35 @@\n+// { dg-do run }\n+template <typename _Tp, long _Nm> struct A {\n+    typedef _Tp _Type[_Nm];\n+    static _Tp &_S_ref(const _Type &p1, int p2) {\n+\treturn const_cast<_Tp &>(p1[p2]);\n+    }\n+};\n+template <typename _Tp, long _Nm> struct B {\n+    typedef A<_Tp, _Nm> _AT_Type;\n+    typename _AT_Type::_Type _M_elems;\n+    _Tp &operator[](long p1) const { return _AT_Type::_S_ref(_M_elems, p1); }\n+};\n+int t;\n+void foo(int p1, int &p2) {\n+    if ((t & 1) == 0) {\n+\tif (p1 != 1)\n+\t  __builtin_abort();\n+\tif (p2 != 2)\n+\t  __builtin_abort();\n+    }\n+    t++;\n+}\n+__attribute__((noinline))\n+     void test1(const B<int, 2> &p1) { foo(p1[0], p1[1]); }\n+     void test(B<B<int, 2>, 2> &p1) {\n+\t test1(p1[0]);\n+\t test1(p1[1]);\n+\t foo(p1[0][0], p1[0][1]);\n+     }\n+int main() {\n+    B<B<int, 2>, 2> t;\n+    t[0][0] = 1;\n+    t[0][1] = 2;\n+    test(t);\n+}"}]}