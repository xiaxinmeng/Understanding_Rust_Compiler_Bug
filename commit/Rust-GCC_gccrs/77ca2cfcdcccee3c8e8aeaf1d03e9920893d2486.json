{"sha": "77ca2cfcdcccee3c8e8aeaf1d03e9920893d2486", "node_id": "C_kwDOANBUbNoAKDc3Y2EyY2ZjZGNjY2VlM2M4ZThhZWFmMWQwM2U5OTIwODkzZDI0ODY", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-09-28T04:55:10Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-10-08T02:09:51Z"}, "message": "Support reduc_{plus,smax,smin,umax,min}_scal_v4hi.\n\ngcc/ChangeLog:\n\n\tPR target/102494\n\t* config/i386/i386-expand.c (emit_reduc_half): Hanlde V4HImode.\n\t* config/i386/mmx.md (reduc_plus_scal_v4hi): New.\n\t(reduc_<code>_scal_v4hi): New.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/i386/mmx-reduce-op-1.c: New test.\n\t* gcc.target/i386/mmx-reduce-op-2.c: New test.", "tree": {"sha": "5a13d925dac18a081d831f7b49f2a349d053898b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a13d925dac18a081d831f7b49f2a349d053898b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77ca2cfcdcccee3c8e8aeaf1d03e9920893d2486", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77ca2cfcdcccee3c8e8aeaf1d03e9920893d2486", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77ca2cfcdcccee3c8e8aeaf1d03e9920893d2486", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77ca2cfcdcccee3c8e8aeaf1d03e9920893d2486/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b8453c401b699ed93c085d0413ab4b5030bcdb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b8453c401b699ed93c085d0413ab4b5030bcdb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b8453c401b699ed93c085d0413ab4b5030bcdb8"}], "stats": {"total": 124, "additions": 124, "deletions": 0}, "files": [{"sha": "3e6f7d8ef7e942793ed2ee658bd4debbfebf048f", "filename": "gcc/config/i386/i386-expand.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77ca2cfcdcccee3c8e8aeaf1d03e9920893d2486/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77ca2cfcdcccee3c8e8aeaf1d03e9920893d2486/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.c?ref=77ca2cfcdcccee3c8e8aeaf1d03e9920893d2486", "patch": "@@ -16043,6 +16043,11 @@ emit_reduc_half (rtx dest, rtx src, int i)\n     case E_V2DFmode:\n       tem = gen_vec_interleave_highv2df (dest, src, src);\n       break;\n+    case E_V4HImode:\n+      d = gen_reg_rtx (V1DImode);\n+      tem = gen_mmx_lshrv1di3 (d, gen_lowpart (V1DImode, src),\n+\t\t\t       GEN_INT (i / 2));\n+      break;\n     case E_V16QImode:\n     case E_V8HImode:\n     case E_V8HFmode:"}, {"sha": "106d41c8fd952b2d4e30911a8a57b9caed3f2f9a", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77ca2cfcdcccee3c8e8aeaf1d03e9920893d2486/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77ca2cfcdcccee3c8e8aeaf1d03e9920893d2486/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=77ca2cfcdcccee3c8e8aeaf1d03e9920893d2486", "patch": "@@ -3965,6 +3965,42 @@\n   DONE;\n })\n \n+(define_expand \"reduc_plus_scal_v4hi\"\n+ [(plus:V4HI\n+    (match_operand:HI 0 \"register_operand\")\n+    (match_operand:V4HI 1 \"register_operand\"))]\n+ \"TARGET_MMX_WITH_SSE\"\n+{\n+  rtx tmp = gen_reg_rtx (V4HImode);\n+  ix86_expand_reduc (gen_addv4hi3, tmp, operands[1]);\n+  emit_insn (gen_vec_extractv4hihi (operands[0], tmp, const0_rtx));\n+  DONE;\n+})\n+\n+(define_expand \"reduc_<code>_scal_v4hi\"\n+  [(smaxmin:V4HI\n+     (match_operand:HI 0 \"register_operand\")\n+     (match_operand:V4HI 1 \"register_operand\"))]\n+  \"TARGET_MMX_WITH_SSE\"\n+{\n+  rtx tmp = gen_reg_rtx (V4HImode);\n+  ix86_expand_reduc (gen_<code>v4hi3, tmp, operands[1]);\n+  emit_insn (gen_vec_extractv4hihi (operands[0], tmp, const0_rtx));\n+  DONE;\n+})\n+\n+(define_expand \"reduc_<code>_scal_v4hi\"\n+  [(umaxmin:V4HI\n+     (match_operand:HI 0 \"register_operand\")\n+     (match_operand:V4HI 1 \"register_operand\"))]\n+  \"TARGET_MMX_WITH_SSE && TARGET_SSE4_1\"\n+{\n+  rtx tmp = gen_reg_rtx (V4HImode);\n+  ix86_expand_reduc (gen_<code>v4hi3, tmp, operands[1]);\n+  emit_insn (gen_vec_extractv4hihi (operands[0], tmp, const0_rtx));\n+  DONE;\n+})\n+\n (define_expand \"usadv8qi\"\n   [(match_operand:V2SI 0 \"register_operand\")\n    (match_operand:V8QI 1 \"register_operand\")"}, {"sha": "ac20ed0d41ff2b72b58c4f792160051096185e30", "filename": "gcc/testsuite/gcc.target/i386/mmx-reduce-op-1.c", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77ca2cfcdcccee3c8e8aeaf1d03e9920893d2486/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmmx-reduce-op-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77ca2cfcdcccee3c8e8aeaf1d03e9920893d2486/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmmx-reduce-op-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmmx-reduce-op-1.c?ref=77ca2cfcdcccee3c8e8aeaf1d03e9920893d2486", "patch": "@@ -0,0 +1,58 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump-times \"\\.REDUC_PLUS\" 1 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"\\.REDUC_MIN\" 2 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"\\.REDUC_MAX\" 2 \"optimized\" } } */\n+\n+#define MAX(a, b) ((a) > (b) ? (a) : (b))\n+#define MIN(a, b) ((a) > (b) ? (b) : (a))\n+\n+short\n+__attribute__((noipa, optimize(\"Ofast\"),target(\"sse2\")))\n+reduce_add (short* __restrict pa)\n+{\n+  short sum = 0;\n+  for (int i = 0; i != 4; i++)\n+    sum += pa[i];\n+  return sum;\n+}\n+\n+short\n+__attribute__((noipa, optimize(\"Ofast\"),target(\"sse2\")))\n+reduce_smax (short* __restrict pa)\n+{\n+  short sum = pa[0];\n+  for (int i = 0; i != 4; i++)\n+    sum = MAX(sum, pa[i]);\n+  return sum;\n+}\n+\n+short\n+__attribute__((noipa, optimize(\"Ofast\"),target(\"sse2\")))\n+reduce_smin (short* __restrict pa)\n+{\n+  short sum = pa[0];\n+  for (int i = 0; i != 4; i++)\n+    sum = MIN(sum, pa[i]);\n+  return sum;\n+}\n+\n+unsigned short\n+__attribute__((noipa, optimize(\"Ofast\"),target(\"sse4.1\")))\n+reduce_umax (unsigned short* __restrict pa)\n+{\n+  unsigned short sum = pa[0];\n+  for (int i = 0; i != 4; i++)\n+    sum = MAX(sum, pa[i]);\n+  return sum;\n+}\n+\n+unsigned short\n+__attribute__((noipa, optimize(\"Ofast\"),target(\"sse4.1\")))\n+reduce_umin (unsigned short* __restrict pa)\n+{\n+  unsigned short sum = pa[0];\n+  for (int i = 0; i != 4; i++)\n+    sum = MIN(sum, pa[i]);\n+  return sum;\n+}"}, {"sha": "0896cd6d9be39c828c9a0997ed014b14cf4c5116", "filename": "gcc/testsuite/gcc.target/i386/mmx-reduce-op-2.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77ca2cfcdcccee3c8e8aeaf1d03e9920893d2486/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmmx-reduce-op-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77ca2cfcdcccee3c8e8aeaf1d03e9920893d2486/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmmx-reduce-op-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmmx-reduce-op-2.c?ref=77ca2cfcdcccee3c8e8aeaf1d03e9920893d2486", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do run { target { ! ia32 } } } */\n+/* { dg-require-effective-target sse4 } */\n+/* { dg-options \"-O2 -msse4.1\" } */\n+\n+#include \"sse4_1-check.h\"\n+\n+#include \"mmx-reduce-op-1.c\"\n+\n+static void\n+sse4_1_test ()\n+{\n+  short p[4] = { -103, 23, 41, 200 };\n+  unsigned short up[4] = { 100, 30, 299, 1000 };\n+\n+  if (reduce_add (p) != 161)\n+    abort ();\n+  if (reduce_smin (p) != -103)\n+    abort ();\n+  if (reduce_smax (p) != 200)\n+    abort ();\n+  if (reduce_umin (up) != 30)\n+    abort ();\n+  if (reduce_umax (up) != 1000)\n+    abort();\n+}"}]}