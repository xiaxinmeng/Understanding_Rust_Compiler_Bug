{"sha": "6aa2ca21a442a775b7daf214b8c10fce8522ccda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFhMmNhMjFhNDQyYTc3NWI3ZGFmMjE0YjhjMTBmY2U4NTIyY2NkYQ==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-03-05T16:19:17Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-03-06T14:23:10Z"}, "message": "libstdc++: Add missing friend declaration to join_view::_Sentinel\n\nThe converting constructor of join_view::_Sentinel<true> needs to be able to\naccess the private members of join_view::_Sentinel<false>.\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/ranges (join_view::_Sentinel<_Const>): Befriend\n\tjoin_view::_Sentinel<!_Const>.\n\t* testsuite/std/ranges/adaptors/join.cc: Augment test.", "tree": {"sha": "ee462ef231ab641abe38f4e62e85795d7eb280a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee462ef231ab641abe38f4e62e85795d7eb280a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6aa2ca21a442a775b7daf214b8c10fce8522ccda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aa2ca21a442a775b7daf214b8c10fce8522ccda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6aa2ca21a442a775b7daf214b8c10fce8522ccda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aa2ca21a442a775b7daf214b8c10fce8522ccda/comments", "author": null, "committer": null, "parents": [{"sha": "6d082cd90131a9c0ce3142217e84194a5bf0de27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d082cd90131a9c0ce3142217e84194a5bf0de27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d082cd90131a9c0ce3142217e84194a5bf0de27"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "b3e8b9a25d23f36abf3dc15c2d2f24ac5c4a243f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa2ca21a442a775b7daf214b8c10fce8522ccda/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa2ca21a442a775b7daf214b8c10fce8522ccda/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6aa2ca21a442a775b7daf214b8c10fce8522ccda", "patch": "@@ -1,5 +1,9 @@\n 2020-03-06  Patrick Palka  <ppalka@redhat.com>\n \n+\t* include/std/ranges (join_view::_Sentinel<_Const>): Befriend\n+\tjoin_view::_Sentinel<!_Const>.\n+\t* testsuite/std/ranges/adaptors/join.cc: Augment test.\n+\n \tPR libstdc++/93978\n \t* include/bits/range_access.h (__cust_access::_Empty::operator()):\n \tDeclare return type to be bool instead of auto."}, {"sha": "eb54b110c044e9d6d676408cfbf426cb82d9dc5a", "filename": "libstdc++-v3/include/std/ranges", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa2ca21a442a775b7daf214b8c10fce8522ccda/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa2ca21a442a775b7daf214b8c10fce8522ccda/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges?ref=6aa2ca21a442a775b7daf214b8c10fce8522ccda", "patch": "@@ -2592,6 +2592,8 @@ namespace views\n \t  friend constexpr bool\n \t  operator==(const _Iterator<_Const>& __x, const _Sentinel& __y)\n \t  { return __y.__equal(__x); }\n+\n+\t  friend _Sentinel<!_Const>;\n \t};\n \n       _Vp _M_base = _Vp();"}, {"sha": "142c9feddcd5e7aa928c767d9fdcbb888502ec55", "filename": "libstdc++-v3/testsuite/std/ranges/adaptors/join.cc", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aa2ca21a442a775b7daf214b8c10fce8522ccda/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Fjoin.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aa2ca21a442a775b7daf214b8c10fce8522ccda/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Fjoin.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fadaptors%2Fjoin.cc?ref=6aa2ca21a442a775b7daf214b8c10fce8522ccda", "patch": "@@ -101,6 +101,28 @@ test05()\n   VERIFY( i == v.end() );\n }\n \n+void\n+test06()\n+{\n+  std::vector<std::string> x = {\"\"};\n+  auto i = std::counted_iterator(x.begin(), 1);\n+  auto r = ranges::subrange{i, std::default_sentinel};\n+  auto v = r | views::transform(std::identity{}) | views::join;\n+\n+  // Verify that _Iterator<false> is implicitly convertible to _Iterator<true>.\n+  static_assert(!std::same_as<decltype(ranges::begin(v)),\n+\t\t\t      decltype(ranges::cbegin(v))>);\n+  auto a = ranges::cbegin(v);\n+  a = ranges::begin(v);\n+\n+  // Verify that _Sentinel<false> is implicitly convertible to _Sentinel<true>.\n+  static_assert(!ranges::common_range<decltype(v)>);\n+  static_assert(!std::same_as<decltype(ranges::end(v)),\n+\t\t\t      decltype(ranges::cend(v))>);\n+  auto b = ranges::cend(v);\n+  b = ranges::end(v);\n+}\n+\n int\n main()\n {\n@@ -109,4 +131,5 @@ main()\n   test03();\n   test04();\n   test05();\n+  test06();\n }"}]}