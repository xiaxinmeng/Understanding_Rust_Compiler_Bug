{"sha": "82955615a53d80d4cad86bd0982639af5c252f38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI5NTU2MTVhNTNkODBkNGNhZDg2YmQwOTgyNjM5YWY1YzI1MmYzOA==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2003-03-10T12:40:19Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2003-03-10T12:40:19Z"}, "message": "fpa.md: New file.\n\n* fpa.md: New file.  Move all patterns relating to FPA co-processor\nto here...\n* arm.md: ... from here.\n(cirrus.md, fpa.md): Include at end of description.\n(divsf3, divdf3, modsf3, movdf3, sqrtsf2, sqrtdf2): New expands.\n(pic_load_addr_based): Remove register constraint from expander.\n(seq, sne, sgt, sle, slt, sge, sgeu, sleu, sgtu, sltu, sunordered)\n(sordered, sungt, sunle, sunge, sunlt): Likewise.\n(eh_epilogue, tablejump): Likewise.\n\nFrom-SVN: r64075", "tree": {"sha": "8cbfb00ca908163bd1a5959cf5741f143499454b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8cbfb00ca908163bd1a5959cf5741f143499454b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82955615a53d80d4cad86bd0982639af5c252f38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82955615a53d80d4cad86bd0982639af5c252f38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82955615a53d80d4cad86bd0982639af5c252f38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82955615a53d80d4cad86bd0982639af5c252f38/comments", "author": null, "committer": null, "parents": [{"sha": "1d719415f50716bb93edfafb789ee8d2fcf38bd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d719415f50716bb93edfafb789ee8d2fcf38bd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d719415f50716bb93edfafb789ee8d2fcf38bd1"}], "stats": {"total": 1493, "additions": 783, "deletions": 710}, "files": [{"sha": "202ded1e3d3111f3f8a310095600337ccca9e4df", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82955615a53d80d4cad86bd0982639af5c252f38/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82955615a53d80d4cad86bd0982639af5c252f38/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=82955615a53d80d4cad86bd0982639af5c252f38", "patch": "@@ -1,3 +1,15 @@\n+2003-03-10  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* fpa.md: New file.  Move all patterns relating to FPA co-processor\n+\tto here...\n+\t* arm.md: ... from here.\n+\t(cirrus.md, fpa.md): Include at end of description.\n+\t(divsf3, divdf3, modsf3, movdf3, sqrtsf2, sqrtdf2): New expands.\n+\t(pic_load_addr_based): Remove register constraint from expander.\n+\t(seq, sne, sgt, sle, slt, sge, sgeu, sleu, sgtu, sltu, sunordered)\n+\t(sordered, sungt, sunle, sunge, sunlt): Likewise.\n+\t(eh_epilogue, tablejump): Likewise.\n+\n 2003-03-09  David Edelsohn  <edelsohn@gnu.org>\n \t    Mostafa Hagog\n "}, {"sha": "bef84dc7499ae484428bb04f41abc52f2d342ada", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 56, "deletions": 710, "changes": 766, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82955615a53d80d4cad86bd0982639af5c252f38/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82955615a53d80d4cad86bd0982639af5c252f38/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=82955615a53d80d4cad86bd0982639af5c252f38", "patch": "@@ -240,44 +240,6 @@\n ;; (define_function_unit {name} {num-units} {n-users} {test}\n ;;                       {ready-delay} {issue-delay} [{conflict-list}])\n \n-;;--------------------------------------------------------------------\n-;; Floating point unit (FPA)\n-;;--------------------------------------------------------------------\n-(define_function_unit \"fpa\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n-\t\t\t\t     (eq_attr \"type\" \"fdivx\")) 71 69)\n-\n-(define_function_unit \"fpa\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n-\t\t\t\t     (eq_attr \"type\" \"fdivd\")) 59 57)\n-\n-(define_function_unit \"fpa\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n-\t\t\t\t     (eq_attr \"type\" \"fdivs\")) 31 29)\n-\n-(define_function_unit \"fpa\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n-\t\t\t\t     (eq_attr \"type\" \"fmul\")) 9 7)\n-\n-(define_function_unit \"fpa\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n-\t\t\t\t     (eq_attr \"type\" \"ffmul\")) 6 4)\n-\n-(define_function_unit \"fpa\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n-\t\t\t\t     (eq_attr \"type\" \"farith\")) 4 2)\n-\n-(define_function_unit \"fpa\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n-\t\t\t\t     (eq_attr \"type\" \"ffarith\")) 2 2)\n-\n-(define_function_unit \"fpa\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n-\t\t\t\t     (eq_attr \"type\" \"r_2_f\")) 5 3)\n-\n-(define_function_unit \"fpa\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n-\t\t\t\t     (eq_attr \"type\" \"f_2_r\")) 1 2)\n-\n-; The fpa10 doesn't really have a memory read unit, but it can start to\n-; speculatively execute the instruction in the pipeline, provided the data\n-; is already loaded, so pretend reads have a delay of 2 (and that the\n-; pipeline is infinite).\n-\n-(define_function_unit \"fpa_mem\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n-\t\t\t\t\t (eq_attr \"type\" \"f_load\")) 3 1)\n-\n ;;--------------------------------------------------------------------\n ;; Write buffer\n ;;--------------------------------------------------------------------\n@@ -389,8 +351,6 @@\n   (and (eq_attr \"core_cycles\" \"multi\")\n        (eq_attr \"type\" \"!mult,load,store1,store2,store3,store4\")) 32 32)\n \f\n-(include \"cirrus.md\")\n-\n ;;---------------------------------------------------------------------------\n ;; Insn patterns\n ;;\n@@ -817,18 +777,6 @@\n     operands[2] = force_reg (SFmode, operands[2]);\n \")\n \n-(define_insn \"*arm_addsf3\"\n-  [(set (match_operand:SF          0 \"s_register_operand\" \"=f,f\")\n-\t(plus:SF (match_operand:SF 1 \"s_register_operand\" \"%f,f\")\n-\t\t (match_operand:SF 2 \"fpa_add_operand\"    \"fG,H\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"@\n-   adf%?s\\\\t%0, %1, %2\n-   suf%?s\\\\t%0, %1, #%N2\"\n-  [(set_attr \"type\" \"farith\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n (define_expand \"adddf3\"\n   [(set (match_operand:DF          0 \"s_register_operand\" \"\")\n \t(plus:DF (match_operand:DF 1 \"s_register_operand\" \"\")\n@@ -840,54 +788,6 @@\n     operands[2] = force_reg (DFmode, operands[2]);\n \")\n \n-(define_insn \"*arm_adddf3\"\n-  [(set (match_operand:DF          0 \"s_register_operand\" \"=f,f\")\n-\t(plus:DF (match_operand:DF 1 \"s_register_operand\" \"%f,f\")\n-\t\t (match_operand:DF 2 \"fpa_add_operand\"    \"fG,H\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"@\n-   adf%?d\\\\t%0, %1, %2\n-   suf%?d\\\\t%0, %1, #%N2\"\n-  [(set_attr \"type\" \"farith\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n-(define_insn \"*adddf_esfdf_df\"\n-  [(set (match_operand:DF           0 \"s_register_operand\" \"=f,f\")\n-\t(plus:DF (float_extend:DF\n-\t\t  (match_operand:SF 1 \"s_register_operand\"  \"f,f\"))\n-\t\t (match_operand:DF  2 \"fpa_add_operand\"    \"fG,H\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"@\n-   adf%?d\\\\t%0, %1, %2\n-   suf%?d\\\\t%0, %1, #%N2\"\n-  [(set_attr \"type\" \"farith\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n-(define_insn \"*adddf_df_esfdf\"\n-  [(set (match_operand:DF           0 \"s_register_operand\" \"=f\")\n-\t(plus:DF (match_operand:DF  1 \"s_register_operand\"  \"f\")\n-\t\t (float_extend:DF\n-\t\t  (match_operand:SF 2 \"s_register_operand\"  \"f\"))))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"adf%?d\\\\t%0, %1, %2\"\n-  [(set_attr \"type\" \"farith\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n-(define_insn \"*adddf_esfdf_esfdf\"\n-  [(set (match_operand:DF           0 \"s_register_operand\" \"=f\")\n-\t(plus:DF (float_extend:DF \n-\t\t  (match_operand:SF 1 \"s_register_operand\" \"f\"))\n-\t\t (float_extend:DF\n-\t\t  (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"adf%?d\\\\t%0, %1, %2\"\n-  [(set_attr \"type\" \"farith\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n (define_expand \"subdi3\"\n  [(parallel\n    [(set (match_operand:DI            0 \"s_register_operand\" \"\")\n@@ -1105,17 +1005,6 @@\n     }\n \")\n \n-(define_insn \"*arm_subsf3\"\n-  [(set (match_operand:SF 0 \"s_register_operand\" \"=f,f\")\n-\t(minus:SF (match_operand:SF 1 \"fpa_rhs_operand\" \"f,G\")\n-\t\t  (match_operand:SF 2 \"fpa_rhs_operand\" \"fG,f\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"@\n-   suf%?s\\\\t%0, %1, %2\n-   rsf%?s\\\\t%0, %2, %1\"\n-  [(set_attr \"type\" \"farith\")]\n-)\n-\n (define_expand \"subdf3\"\n   [(set (match_operand:DF           0 \"s_register_operand\" \"\")\n \t(minus:DF (match_operand:DF 1 \"fpa_rhs_operand\"     \"\")\n@@ -1131,53 +1020,6 @@\n     }\n \")\n \n-(define_insn \"*arm_subdf3\"\n-  [(set (match_operand:DF           0 \"s_register_operand\" \"=f,f\")\n-\t(minus:DF (match_operand:DF 1 \"fpa_rhs_operand\"     \"f,G\")\n-\t\t  (match_operand:DF 2 \"fpa_rhs_operand\"    \"fG,f\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"@\n-   suf%?d\\\\t%0, %1, %2\n-   rsf%?d\\\\t%0, %2, %1\"\n-  [(set_attr \"type\" \"farith\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n-(define_insn \"*subdf_esfdf_df\"\n-  [(set (match_operand:DF            0 \"s_register_operand\" \"=f\")\n-\t(minus:DF (float_extend:DF\n-\t\t   (match_operand:SF 1 \"s_register_operand\"  \"f\"))\n-\t\t  (match_operand:DF  2 \"fpa_rhs_operand\"    \"fG\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"suf%?d\\\\t%0, %1, %2\"\n-  [(set_attr \"type\" \"farith\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n-(define_insn \"*subdf_df_esfdf\"\n-  [(set (match_operand:DF 0 \"s_register_operand\" \"=f,f\")\n-\t(minus:DF (match_operand:DF 1 \"fpa_rhs_operand\" \"f,G\")\n-\t\t  (float_extend:DF\n-\t\t   (match_operand:SF 2 \"s_register_operand\" \"f,f\"))))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"@\n-   suf%?d\\\\t%0, %1, %2\n-   rsf%?d\\\\t%0, %2, %1\"\n-  [(set_attr \"type\" \"farith\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n-(define_insn \"*subdf_esfdf_esfdf\"\n-  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n-\t(minus:DF (float_extend:DF\n-\t\t   (match_operand:SF 1 \"s_register_operand\" \"f\"))\n-\t\t  (float_extend:DF\n-\t\t   (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"suf%?d\\\\t%0, %1, %2\"\n-  [(set_attr \"type\" \"farith\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n \f\n ;; Multiplication insns\n \n@@ -1464,16 +1306,6 @@\n     operands[2] = force_reg (SFmode, operands[2]);\n \")\n \n-(define_insn \"*arm_mulsf3\"\n-  [(set (match_operand:SF 0 \"s_register_operand\" \"=f\")\n-\t(mult:SF (match_operand:SF 1 \"s_register_operand\" \"f\")\n-\t\t (match_operand:SF 2 \"fpa_rhs_operand\" \"fG\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"fml%?s\\\\t%0, %1, %2\"\n-  [(set_attr \"type\" \"ffmul\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n (define_expand \"muldf3\"\n   [(set (match_operand:DF          0 \"s_register_operand\" \"\")\n \t(mult:DF (match_operand:DF 1 \"s_register_operand\" \"\")\n@@ -1484,165 +1316,38 @@\n       && !cirrus_fp_register (operands[2], DFmode))\n     operands[2] = force_reg (DFmode, operands[2]);\n \")\n-\n-(define_insn \"*arm_muldf3\"\n-  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n-\t(mult:DF (match_operand:DF 1 \"s_register_operand\" \"f\")\n-\t\t (match_operand:DF 2 \"fpa_rhs_operand\" \"fG\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"muf%?d\\\\t%0, %1, %2\"\n-  [(set_attr \"type\" \"fmul\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n-(define_insn \"*muldf_esfdf_df\"\n-  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n-\t(mult:DF (float_extend:DF\n-\t\t  (match_operand:SF 1 \"s_register_operand\" \"f\"))\n-\t\t (match_operand:DF 2 \"fpa_rhs_operand\" \"fG\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"muf%?d\\\\t%0, %1, %2\"\n-  [(set_attr \"type\" \"fmul\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n-(define_insn \"*muldf_df_esfdf\"\n-  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n-\t(mult:DF (match_operand:DF 1 \"s_register_operand\" \"f\")\n-\t\t (float_extend:DF\n-\t\t  (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"muf%?d\\\\t%0, %1, %2\"\n-  [(set_attr \"type\" \"fmul\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n-(define_insn \"*muldf_esfdf_esfdf\"\n-  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n-\t(mult:DF\n-\t (float_extend:DF (match_operand:SF 1 \"s_register_operand\" \"f\"))\n-\t (float_extend:DF (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"muf%?d\\\\t%0, %1, %2\"\n-  [(set_attr \"type\" \"fmul\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n \f\n ;; Division insns\n \n-(define_insn \"divsf3\"\n-  [(set (match_operand:SF 0 \"s_register_operand\" \"=f,f\")\n-\t(div:SF (match_operand:SF 1 \"fpa_rhs_operand\" \"f,G\")\n-\t\t(match_operand:SF 2 \"fpa_rhs_operand\" \"fG,f\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"@\n-   fdv%?s\\\\t%0, %1, %2\n-   frd%?s\\\\t%0, %2, %1\"\n-  [(set_attr \"type\" \"fdivs\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n-(define_insn \"divdf3\"\n-  [(set (match_operand:DF 0 \"s_register_operand\" \"=f,f\")\n-\t(div:DF (match_operand:DF 1 \"fpa_rhs_operand\" \"f,G\")\n-\t\t(match_operand:DF 2 \"fpa_rhs_operand\" \"fG,f\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"@\n-   dvf%?d\\\\t%0, %1, %2\n-   rdf%?d\\\\t%0, %2, %1\"\n-  [(set_attr \"type\" \"fdivd\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n-(define_insn \"*divdf_esfdf_df\"\n-  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n-\t(div:DF (float_extend:DF\n-\t\t (match_operand:SF 1 \"s_register_operand\" \"f\"))\n-\t\t(match_operand:DF 2 \"fpa_rhs_operand\" \"fG\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"dvf%?d\\\\t%0, %1, %2\"\n-  [(set_attr \"type\" \"fdivd\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n-(define_insn \"*divdf_df_esfdf\"\n-  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n-\t(div:DF (match_operand:DF 1 \"fpa_rhs_operand\" \"fG\")\n-\t\t(float_extend:DF\n-\t\t (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n+(define_expand \"divsf3\"\n+  [(set (match_operand:SF 0 \"s_register_operand\" \"\")\n+\t(div:SF (match_operand:SF 1 \"fpa_rhs_operand\" \"\")\n+\t\t(match_operand:SF 2 \"fpa_rhs_operand\" \"\")))]\n   \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"rdf%?d\\\\t%0, %2, %1\"\n-  [(set_attr \"type\" \"fdivd\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n+  \"\")\n \n-(define_insn \"*divdf_esfdf_esfdf\"\n-  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n-\t(div:DF (float_extend:DF\n-\t\t (match_operand:SF 1 \"s_register_operand\" \"f\"))\n-\t\t(float_extend:DF\n-\t\t (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n+(define_expand \"divdf3\"\n+  [(set (match_operand:DF 0 \"s_register_operand\" \"\")\n+\t(div:DF (match_operand:DF 1 \"fpa_rhs_operand\" \"\")\n+\t\t(match_operand:DF 2 \"fpa_rhs_operand\" \"\")))]\n   \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"dvf%?d\\\\t%0, %1, %2\"\n-  [(set_attr \"type\" \"fdivd\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n+  \"\")\n \f\n ;; Modulo insns\n \n-(define_insn \"modsf3\"\n-  [(set (match_operand:SF 0 \"s_register_operand\" \"=f\")\n-\t(mod:SF (match_operand:SF 1 \"s_register_operand\" \"f\")\n-\t\t(match_operand:SF 2 \"fpa_rhs_operand\" \"fG\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"rmf%?s\\\\t%0, %1, %2\"\n-  [(set_attr \"type\" \"fdivs\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n-(define_insn \"moddf3\"\n-  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n-\t(mod:DF (match_operand:DF 1 \"s_register_operand\" \"f\")\n-\t\t(match_operand:DF 2 \"fpa_rhs_operand\" \"fG\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"rmf%?d\\\\t%0, %1, %2\"\n-  [(set_attr \"type\" \"fdivd\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n-(define_insn \"*moddf_esfdf_df\"\n-  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n-\t(mod:DF (float_extend:DF\n-\t\t (match_operand:SF 1 \"s_register_operand\" \"f\"))\n-\t\t(match_operand:DF 2 \"fpa_rhs_operand\" \"fG\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"rmf%?d\\\\t%0, %1, %2\"\n-  [(set_attr \"type\" \"fdivd\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n-(define_insn \"*moddf_df_esfdf\"\n-  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n-\t(mod:DF (match_operand:DF 1 \"s_register_operand\" \"f\")\n-\t\t(float_extend:DF\n-\t\t (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n+(define_expand \"modsf3\"\n+  [(set (match_operand:SF 0 \"s_register_operand\" \"\")\n+\t(mod:SF (match_operand:SF 1 \"s_register_operand\" \"\")\n+\t\t(match_operand:SF 2 \"fpa_rhs_operand\" \"\")))]\n   \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"rmf%?d\\\\t%0, %1, %2\"\n-  [(set_attr \"type\" \"fdivd\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n+  \"\")\n \n-(define_insn \"*moddf_esfdf_esfdf\"\n-  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n-\t(mod:DF (float_extend:DF\n-\t\t (match_operand:SF 1 \"s_register_operand\" \"f\"))\n-\t\t(float_extend:DF\n-\t\t (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n+(define_expand \"moddf3\"\n+  [(set (match_operand:DF 0 \"s_register_operand\" \"\")\n+\t(mod:DF (match_operand:DF 1 \"s_register_operand\" \"\")\n+\t\t(match_operand:DF 2 \"fpa_rhs_operand\" \"\")))]\n   \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"rmf%?d\\\\t%0, %1, %2\"\n-  [(set_attr \"type\" \"fdivd\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n+  \"\")\n \f\n ;; Boolean and,ior,xor insns\n \n@@ -2871,34 +2576,6 @@\n   \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n   \"\")\n \n-(define_insn \"*arm_negsf2\"\n-  [(set (match_operand:SF         0 \"s_register_operand\" \"=f\")\n-\t(neg:SF (match_operand:SF 1 \"s_register_operand\" \"f\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"mnf%?s\\\\t%0, %1\"\n-  [(set_attr \"type\" \"ffarith\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n-(define_insn \"*arm_negdf2\"\n-  [(set (match_operand:DF         0 \"s_register_operand\" \"=f\")\n-\t(neg:DF (match_operand:DF 1 \"s_register_operand\" \"f\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"mnf%?d\\\\t%0, %1\"\n-  [(set_attr \"type\" \"ffarith\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n-(define_insn \"*negdf_esfdf\"\n-  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n-\t(neg:DF (float_extend:DF\n-\t\t (match_operand:SF 1 \"s_register_operand\" \"f\"))))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"mnf%?d\\\\t%0, %1\"\n-  [(set_attr \"type\" \"ffarith\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n ;; abssi2 doesn't really clobber the condition codes if a different register\n ;; is being set.  To keep things simple, assume during rtl manipulations that\n ;; it does, but tell the final scan operator the truth.  Similarly for\n@@ -2946,67 +2623,23 @@\n   \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n   \"\")\n \n-(define_insn \"*arm_abssf2\"\n-  [(set (match_operand:SF          0 \"s_register_operand\" \"=f\")\n-\t (abs:SF (match_operand:SF 1 \"s_register_operand\" \"f\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"abs%?s\\\\t%0, %1\"\n-  [(set_attr \"type\" \"ffarith\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n (define_expand \"absdf2\"\n   [(set (match_operand:DF         0 \"s_register_operand\" \"\")\n \t(abs:DF (match_operand:DF 1 \"s_register_operand\" \"\")))]\n   \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n   \"\")\n \n-(define_insn \"*arm_absdf2\"\n-  [(set (match_operand:DF         0 \"s_register_operand\" \"=f\")\n-\t(abs:DF (match_operand:DF 1 \"s_register_operand\" \"f\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"abs%?d\\\\t%0, %1\"\n-  [(set_attr \"type\" \"ffarith\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n-(define_insn \"*absdf_esfdf\"\n-  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n-\t(abs:DF (float_extend:DF\n-\t\t (match_operand:SF 1 \"s_register_operand\" \"f\"))))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"abs%?d\\\\t%0, %1\"\n-  [(set_attr \"type\" \"ffarith\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n-(define_insn \"sqrtsf2\"\n-  [(set (match_operand:SF 0 \"s_register_operand\" \"=f\")\n-\t(sqrt:SF (match_operand:SF 1 \"s_register_operand\" \"f\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"sqt%?s\\\\t%0, %1\"\n-  [(set_attr \"type\" \"float_em\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n-(define_insn \"sqrtdf2\"\n-  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n-\t(sqrt:DF (match_operand:DF 1 \"s_register_operand\" \"f\")))]\n+(define_expand \"sqrtsf2\"\n+  [(set (match_operand:SF 0 \"s_register_operand\" \"\")\n+\t(sqrt:SF (match_operand:SF 1 \"s_register_operand\" \"\")))]\n   \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"sqt%?d\\\\t%0, %1\"\n-  [(set_attr \"type\" \"float_em\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n+  \"\")\n \n-(define_insn \"*sqrtdf_esfdf\"\n-  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n-\t(sqrt:DF (float_extend:DF\n-\t\t  (match_operand:SF 1 \"s_register_operand\" \"f\"))))]\n+(define_expand \"sqrtdf2\"\n+  [(set (match_operand:DF 0 \"s_register_operand\" \"\")\n+\t(sqrt:DF (match_operand:DF 1 \"s_register_operand\" \"\")))]\n   \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"sqt%?d\\\\t%0, %1\"\n-  [(set_attr \"type\" \"float_em\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n+  \"\")\n \n (define_insn_and_split \"one_cmpldi2\"\n   [(set (match_operand:DI 0 \"s_register_operand\" \"=&r,&r\")\n@@ -3085,15 +2718,6 @@\n     }\n \")\n \n-(define_insn \"*arm_floatsisf2\"\n-  [(set (match_operand:SF           0 \"s_register_operand\" \"=f\")\n-\t(float:SF (match_operand:SI 1 \"s_register_operand\" \"r\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"flt%?s\\\\t%0, %1\"\n-  [(set_attr \"type\" \"r_2_f\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n (define_expand \"floatsidf2\"\n   [(set (match_operand:DF           0 \"s_register_operand\" \"\")\n \t(float:DF (match_operand:SI 1 \"s_register_operand\" \"\")))]\n@@ -3106,15 +2730,6 @@\n     }\n \")\n \n-(define_insn \"*arm_floatsidf2\"\n-  [(set (match_operand:DF           0 \"s_register_operand\" \"=f\")\n-\t(float:DF (match_operand:SI 1 \"s_register_operand\" \"r\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"flt%?d\\\\t%0, %1\"\n-  [(set_attr \"type\" \"r_2_f\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n (define_expand \"fix_truncsfsi2\"\n   [(set (match_operand:SI         0 \"s_register_operand\" \"\")\n \t(fix:SI (fix:SF (match_operand:SF 1 \"s_register_operand\"  \"\"))))]\n@@ -3131,15 +2746,6 @@\n     }\n \")\n \n-(define_insn \"*arm_fix_truncsfsi2\"\n-  [(set (match_operand:SI         0 \"s_register_operand\" \"=r\")\n-\t(fix:SI (fix:SF (match_operand:SF 1 \"s_register_operand\" \"f\"))))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"fix%?z\\\\t%0, %1\"\n-  [(set_attr \"type\" \"f_2_r\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n (define_expand \"fix_truncdfsi2\"\n   [(set (match_operand:SI         0 \"s_register_operand\" \"\")\n \t(fix:SI (fix:DF (match_operand:DF 1 \"s_register_operand\"  \"\"))))]\n@@ -3154,15 +2760,6 @@\n     }\n \")\n \n-(define_insn \"*arm_fix_truncdfsi2\"\n-  [(set (match_operand:SI         0 \"s_register_operand\" \"=r\")\n-\t(fix:SI (fix:DF (match_operand:DF 1 \"s_register_operand\" \"f\"))))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"fix%?z\\\\t%0, %1\"\n-  [(set_attr \"type\" \"f_2_r\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n-\n ;; Truncation insns\n \n (define_expand \"truncdfsf2\"\n@@ -3172,16 +2769,6 @@\n   \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n   \"\"\n )\n-\n-(define_insn \"*arm_truncdfsf2\"\n-  [(set (match_operand:SF 0 \"s_register_operand\" \"=f\")\n-\t(float_truncate:SF\n-\t (match_operand:DF 1 \"s_register_operand\" \"f\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"mvf%?s\\\\t%0, %1\"\n-  [(set_attr \"type\" \"ffarith\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n \f\n ;; Zero and sign extension instructions.\n \n@@ -3911,15 +3498,6 @@\n   \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n   \"\"\n )\n-\n-(define_insn \"*arm_extendsfdf2\"\n-  [(set (match_operand:DF                  0 \"s_register_operand\" \"=f\")\n-\t(float_extend:DF (match_operand:SF 1 \"s_register_operand\"  \"f\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"mvf%?d\\\\t%0, %1\"\n-  [(set_attr \"type\" \"ffarith\")\n-   (set_attr \"predicable\" \"yes\")]\n-)\n \f\n ;; Move insns (including loads and stores)\n \n@@ -4214,7 +3792,7 @@\n ;; This variant is used for AOF assembly, since it needs to mention the\n ;; pic register in the rtl.\n (define_expand \"pic_load_addr_based\"\n-  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"\")\n \t(unspec:SI [(match_operand 1 \"\" \"\") (match_dup 2)] UNSPEC_PIC_SYM))]\n   \"TARGET_ARM && flag_pic\"\n   \"operands[2] = pic_offset_table_rtx;\"\n@@ -4995,35 +4573,6 @@\n   \"\n )\n \n-(define_insn \"*arm_movsf_hard_insn\"\n-  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=f,f,f, m,f,r,r,r, m\")\n-\t(match_operand:SF 1 \"general_operand\"      \"fG,H,mE,f,r,f,r,mE,r\"))]\n-  \"TARGET_ARM\n-   && TARGET_HARD_FLOAT\n-   && (GET_CODE (operands[0]) != MEM\n-       || register_operand (operands[1], SFmode))\"\n-  \"@\n-   mvf%?s\\\\t%0, %1\n-   mnf%?s\\\\t%0, #%N1\n-   ldf%?s\\\\t%0, %1\n-   stf%?s\\\\t%1, %0\n-   str%?\\\\t%1, [%|sp, #-4]!\\;ldf%?s\\\\t%0, [%|sp], #4\n-   stf%?s\\\\t%1, [%|sp, #-4]!\\;ldr%?\\\\t%0, [%|sp], #4\n-   mov%?\\\\t%0, %1\n-   ldr%?\\\\t%0, %1\\\\t%@ float\n-   str%?\\\\t%1, %0\\\\t%@ float\"\n-  [(set_attr \"length\" \"4,4,4,4,8,8,4,4,4\")\n-   (set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\"\n-\t \"ffarith,ffarith,f_load,f_store,r_mem_f,f_mem_r,*,load,store1\")\n-   (set_attr \"pool_range\" \"*,*,1024,*,*,*,*,4096,*\")\n-   (set_attr \"neg_pool_range\" \"*,*,1012,*,*,*,*,4084,*\")]\n-)\n-\n-;; Exactly the same as above, except that all `f' cases are deleted.\n-;; This is necessary to prevent reload from ever trying to use a `f' reg\n-;; when -msoft-float.\n-\n (define_insn \"*arm_movsf_soft_insn\"\n   [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=r,r,m\")\n \t(match_operand:SF 1 \"general_operand\"  \"r,mE,r\"))]\n@@ -5127,44 +4676,6 @@\n   }\"\n )\n \n-(define_insn \"*movdf_hard_insn\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\"\n-\t\t\t\t\t\t\"=r,Q,r,m,r, f, f,f, m,!f,!r\")\n-\t(match_operand:DF 1 \"general_operand\"\n-\t\t\t\t\t\t\"Q, r,r,r,mF,fG,H,mF,f,r, f\"))]\n-  \"TARGET_ARM\n-   && TARGET_HARD_FLOAT\n-   && (GET_CODE (operands[0]) != MEM\n-       || register_operand (operands[1], DFmode))\"\n-  \"*\n-  {\n-  switch (which_alternative)\n-    {\n-    default:\n-    case 0: return \\\"ldm%?ia\\\\t%m1, %M0\\\\t%@ double\\\";\n-    case 1: return \\\"stm%?ia\\\\t%m0, %M1\\\\t%@ double\\\";\n-    case 2: case 3: case 4: return output_move_double (operands);\n-    case 5: return \\\"mvf%?d\\\\t%0, %1\\\";\n-    case 6: return \\\"mnf%?d\\\\t%0, #%N1\\\";\n-    case 7: return \\\"ldf%?d\\\\t%0, %1\\\";\n-    case 8: return \\\"stf%?d\\\\t%1, %0\\\";\n-    case 9: return output_mov_double_fpa_from_arm (operands);\n-    case 10: return output_mov_double_arm_from_fpa (operands);\n-    }\n-  }\n-  \"\n-  [(set_attr \"length\" \"4,4,8,8,8,4,4,4,4,8,8\")\n-   (set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\"\n-    \"load,store2,*,store2,load,ffarith,ffarith,f_load,f_store,r_mem_f,f_mem_r\")\n-   (set_attr \"pool_range\" \"*,*,*,*,1020,*,*,1024,*,*,*\")\n-   (set_attr \"neg_pool_range\" \"*,*,*,*,1008,*,*,1008,*,*,*\")]\n-)\n-\n-;; Software floating point version.  This is essentially the same as movdi.\n-;; Do not use `f' as a constraint to prevent reload from ever trying to use\n-;; an `f' reg.\n-\n (define_insn \"*movdf_soft_insn\"\n   [(set (match_operand:DF 0 \"nonimmediate_soft_df_operand\" \"=r,r,m\")\n \t(match_operand:DF 1 \"soft_df_operand\" \"r,mF,r\"))]\n@@ -5217,36 +4728,6 @@\n    (set_attr \"type\" \"*,load,store2,load,store2,*\")\n    (set_attr \"pool_range\" \"*,*,*,1020,*,*\")]\n )\n-\n-\n-;; Saving and restoring the floating point registers in the prologue should\n-;; be done in XFmode, even though we don't support that for anything else\n-;; (Well, strictly it's 'internal representation', but that's effectively\n-;; XFmode).\n-\n-(define_insn \"*movxf_hard_insn\"\n-  [(set (match_operand:XF 0 \"nonimmediate_operand\" \"=f,f,f,m,f,r,r\")\n-\t(match_operand:XF 1 \"general_operand\" \"fG,H,m,f,r,f,r\"))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT && reload_completed\"\n-  \"*\n-  switch (which_alternative)\n-    {\n-    default:\n-    case 0: return \\\"mvf%?e\\\\t%0, %1\\\";\n-    case 1: return \\\"mnf%?e\\\\t%0, #%N1\\\";\n-    case 2: return \\\"ldf%?e\\\\t%0, %1\\\";\n-    case 3: return \\\"stf%?e\\\\t%1, %0\\\";\n-    case 4: return output_mov_long_double_fpa_from_arm (operands);\n-    case 5: return output_mov_long_double_arm_from_fpa (operands);\n-    case 6: return output_mov_long_double_arm_from_arm (operands);\n-    }\n-  \"\n-  [(set_attr \"length\" \"4,4,4,4,8,8,12\")\n-   (set_attr \"predicable\" \"yes\")\n-   (set_attr \"type\" \"ffarith,ffarith,f_load,f_store,r_mem_f,f_mem_r,*\")\n-   (set_attr \"pool_range\" \"*,*,1024,*,*,*,*\")\n-   (set_attr \"neg_pool_range\" \"*,*,1004,*,*,*,*\")]\n-)\n \f\n \n ;; load- and store-multiple insns\n@@ -5750,54 +5231,6 @@\n    ]\n )\n \n-(define_insn \"*cmpsf_insn\"\n-  [(set (reg:CCFP CC_REGNUM)\n-\t(compare:CCFP (match_operand:SF 0 \"s_register_operand\" \"f,f\")\n-\t\t      (match_operand:SF 1 \"fpa_add_operand\" \"fG,H\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"@\n-   cmf%?\\\\t%0, %1\n-   cnf%?\\\\t%0, #%N1\"\n-  [(set_attr \"conds\" \"set\")\n-   (set_attr \"type\" \"f_2_r\")]\n-)\n-\n-(define_insn \"*cmpdf_insn\"\n-  [(set (reg:CCFP CC_REGNUM)\n-\t(compare:CCFP (match_operand:DF 0 \"s_register_operand\" \"f,f\")\n-\t\t      (match_operand:DF 1 \"fpa_add_operand\" \"fG,H\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"@\n-   cmf%?\\\\t%0, %1\n-   cnf%?\\\\t%0, #%N1\"\n-  [(set_attr \"conds\" \"set\")\n-   (set_attr \"type\" \"f_2_r\")]\n-)\n-\n-(define_insn \"*cmpesfdf_df\"\n-  [(set (reg:CCFP CC_REGNUM)\n-\t(compare:CCFP (float_extend:DF\n-\t\t       (match_operand:SF 0 \"s_register_operand\" \"f,f\"))\n-\t\t      (match_operand:DF 1 \"fpa_add_operand\" \"fG,H\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"@\n-   cmf%?\\\\t%0, %1\n-   cnf%?\\\\t%0, #%N1\"\n-  [(set_attr \"conds\" \"set\")\n-   (set_attr \"type\" \"f_2_r\")]\n-)\n-\n-(define_insn \"*cmpdf_esfdf\"\n-  [(set (reg:CCFP CC_REGNUM)\n-\t(compare:CCFP (match_operand:DF 0 \"s_register_operand\" \"f\")\n-\t\t      (float_extend:DF\n-\t\t       (match_operand:SF 1 \"s_register_operand\" \"f\"))))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"cmf%?\\\\t%0, %1\"\n-  [(set_attr \"conds\" \"set\")\n-   (set_attr \"type\" \"f_2_r\")]\n-)\n-\n ;; Cirrus SF compare instruction\n (define_insn \"*cirrus_cmpsf\"\n   [(set (reg:CCFP CC_REGNUM)\n@@ -5841,54 +5274,6 @@\n    (set_attr \"cirrus\" \"compare\")]\n )\n \n-(define_insn \"*cmpsf_trap\"\n-  [(set (reg:CCFPE CC_REGNUM)\n-\t(compare:CCFPE (match_operand:SF 0 \"s_register_operand\" \"f,f\")\n-\t\t       (match_operand:SF 1 \"fpa_add_operand\" \"fG,H\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"@\n-   cmf%?e\\\\t%0, %1\n-   cnf%?e\\\\t%0, #%N1\"\n-  [(set_attr \"conds\" \"set\")\n-   (set_attr \"type\" \"f_2_r\")]\n-)\n-\n-(define_insn \"*cmpdf_trap\"\n-  [(set (reg:CCFPE CC_REGNUM)\n-\t(compare:CCFPE (match_operand:DF 0 \"s_register_operand\" \"f,f\")\n-\t\t       (match_operand:DF 1 \"fpa_add_operand\" \"fG,H\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"@\n-   cmf%?e\\\\t%0, %1\n-   cnf%?e\\\\t%0, #%N1\"\n-  [(set_attr \"conds\" \"set\")\n-   (set_attr \"type\" \"f_2_r\")]\n-)\n-\n-(define_insn \"*cmp_esfdf_df_trap\"\n-  [(set (reg:CCFPE CC_REGNUM)\n-\t(compare:CCFPE (float_extend:DF\n-\t\t\t(match_operand:SF 0 \"s_register_operand\" \"f,f\"))\n-\t\t       (match_operand:DF 1 \"fpa_add_operand\" \"fG,H\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"@\n-   cmf%?e\\\\t%0, %1\n-   cnf%?e\\\\t%0, #%N1\"\n-  [(set_attr \"conds\" \"set\")\n-   (set_attr \"type\" \"f_2_r\")]\n-)\n-\n-(define_insn \"*cmp_df_esfdf_trap\"\n-  [(set (reg:CCFPE CC_REGNUM)\n-\t(compare:CCFPE (match_operand:DF 0 \"s_register_operand\" \"f\")\n-\t\t       (float_extend:DF\n-\t\t\t(match_operand:SF 1 \"s_register_operand\" \"f\"))))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"cmf%?e\\\\t%0, %1\"\n-  [(set_attr \"conds\" \"set\")\n-   (set_attr \"type\" \"f_2_r\")]\n-)\n-\n ; This insn allows redundant compares to be removed by cse, nothing should\n ; ever appear in the output file since (set (reg x) (reg x)) is a no-op that\n ; is deleted later on. The match_dup will match the mode here, so that\n@@ -6185,117 +5570,117 @@\n ; scc insns\n \n (define_expand \"seq\"\n-  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"\")\n \t(eq:SI (match_dup 1) (const_int 0)))]\n   \"TARGET_ARM\"\n   \"operands[1] = arm_gen_compare_reg (EQ, arm_compare_op0, arm_compare_op1);\"\n )\n \n (define_expand \"sne\"\n-  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"\")\n \t(ne:SI (match_dup 1) (const_int 0)))]\n   \"TARGET_ARM\"\n   \"operands[1] = arm_gen_compare_reg (NE, arm_compare_op0, arm_compare_op1);\"\n )\n \n (define_expand \"sgt\"\n-  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"\")\n \t(gt:SI (match_dup 1) (const_int 0)))]\n   \"TARGET_ARM\"\n   \"operands[1] = arm_gen_compare_reg (GT, arm_compare_op0, arm_compare_op1);\"\n )\n \n (define_expand \"sle\"\n-  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"\")\n \t(le:SI (match_dup 1) (const_int 0)))]\n   \"TARGET_ARM\"\n   \"operands[1] = arm_gen_compare_reg (LE, arm_compare_op0, arm_compare_op1);\"\n )\n \n (define_expand \"sge\"\n-  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"\")\n \t(ge:SI (match_dup 1) (const_int 0)))]\n   \"TARGET_ARM\"\n   \"operands[1] = arm_gen_compare_reg (GE, arm_compare_op0, arm_compare_op1);\"\n )\n \n (define_expand \"slt\"\n-  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"\")\n \t(lt:SI (match_dup 1) (const_int 0)))]\n   \"TARGET_ARM\"\n   \"operands[1] = arm_gen_compare_reg (LT, arm_compare_op0, arm_compare_op1);\"\n )\n \n (define_expand \"sgtu\"\n-  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"\")\n \t(gtu:SI (match_dup 1) (const_int 0)))]\n   \"TARGET_ARM\"\n   \"operands[1] = arm_gen_compare_reg (GTU, arm_compare_op0, arm_compare_op1);\"\n )\n \n (define_expand \"sleu\"\n-  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"\")\n \t(leu:SI (match_dup 1) (const_int 0)))]\n   \"TARGET_ARM\"\n   \"operands[1] = arm_gen_compare_reg (LEU, arm_compare_op0, arm_compare_op1);\"\n )\n \n (define_expand \"sgeu\"\n-  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"\")\n \t(geu:SI (match_dup 1) (const_int 0)))]\n   \"TARGET_ARM\"\n   \"operands[1] = arm_gen_compare_reg (GEU, arm_compare_op0, arm_compare_op1);\"\n )\n \n (define_expand \"sltu\"\n-  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"\")\n \t(ltu:SI (match_dup 1) (const_int 0)))]\n   \"TARGET_ARM\"\n   \"operands[1] = arm_gen_compare_reg (LTU, arm_compare_op0, arm_compare_op1);\"\n )\n \n (define_expand \"sunordered\"\n-  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"\")\n \t(unordered:SI (match_dup 1) (const_int 0)))]\n   \"TARGET_ARM && TARGET_HARD_FLOAT\"\n   \"operands[1] = arm_gen_compare_reg (UNORDERED, arm_compare_op0,\n \t\t\t\t      arm_compare_op1);\"\n )\n \n (define_expand \"sordered\"\n-  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"\")\n \t(ordered:SI (match_dup 1) (const_int 0)))]\n   \"TARGET_ARM && TARGET_HARD_FLOAT\"\n   \"operands[1] = arm_gen_compare_reg (ORDERED, arm_compare_op0,\n \t\t\t\t      arm_compare_op1);\"\n )\n \n (define_expand \"sungt\"\n-  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"\")\n \t(ungt:SI (match_dup 1) (const_int 0)))]\n   \"TARGET_ARM && TARGET_HARD_FLOAT\"\n   \"operands[1] = arm_gen_compare_reg (UNGT, arm_compare_op0,\n \t\t\t\t      arm_compare_op1);\"\n )\n \n (define_expand \"sunge\"\n-  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"\")\n \t(unge:SI (match_dup 1) (const_int 0)))]\n   \"TARGET_ARM && TARGET_HARD_FLOAT\"\n   \"operands[1] = arm_gen_compare_reg (UNGE, arm_compare_op0,\n \t\t\t\t      arm_compare_op1);\"\n )\n \n (define_expand \"sunlt\"\n-  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"\")\n \t(unlt:SI (match_dup 1) (const_int 0)))]\n   \"TARGET_ARM && TARGET_HARD_FLOAT\"\n   \"operands[1] = arm_gen_compare_reg (UNLT, arm_compare_op0,\n \t\t\t\t      arm_compare_op1);\"\n )\n \n (define_expand \"sunle\"\n-  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"\")\n \t(unle:SI (match_dup 1) (const_int 0)))]\n   \"TARGET_ARM && TARGET_HARD_FLOAT\"\n   \"operands[1] = arm_gen_compare_reg (UNLE, arm_compare_op0,\n@@ -6306,14 +5691,14 @@\n ;;; simple ARM instructions. \n ;\n ; (define_expand \"suneq\"\n-;   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+;   [(set (match_operand:SI 0 \"s_register_operand\" \"\")\n ; \t(uneq:SI (match_dup 1) (const_int 0)))]\n ;   \"TARGET_ARM && TARGET_HARD_FLOAT\"\n ;   \"abort ();\"\n ; )\n ;\n ; (define_expand \"sltgt\"\n-;   [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+;   [(set (match_operand:SI 0 \"s_register_operand\" \"\")\n ; \t(ltgt:SI (match_dup 1) (const_int 0)))]\n ;   \"TARGET_ARM && TARGET_HARD_FLOAT\"\n ;   \"abort ();\"\n@@ -6436,28 +5821,6 @@\n    (set_attr \"conds\" \"use\")]\n )\n \n-(define_insn \"*movsfcc_hard_insn\"\n-  [(set (match_operand:SF 0 \"s_register_operand\" \"=f,f,f,f,f,f,f,f\")\n-\t(if_then_else:SF\n-\t (match_operator 3 \"arm_comparison_operator\" \n-\t  [(match_operand 4 \"cc_register\" \"\") (const_int 0)])\n-\t (match_operand:SF 1 \"fpa_add_operand\" \"0,0,fG,H,fG,fG,H,H\")\n-\t (match_operand:SF 2 \"fpa_add_operand\" \"fG,H,0,0,fG,H,fG,H\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"@\n-   mvf%D3s\\\\t%0, %2\n-   mnf%D3s\\\\t%0, #%N2\n-   mvf%d3s\\\\t%0, %1\n-   mnf%d3s\\\\t%0, #%N1\n-   mvf%d3s\\\\t%0, %1\\;mvf%D3s\\\\t%0, %2\n-   mvf%d3s\\\\t%0, %1\\;mnf%D3s\\\\t%0, #%N2\n-   mnf%d3s\\\\t%0, #%N1\\;mvf%D3s\\\\t%0, %2\n-   mnf%d3s\\\\t%0, #%N1\\;mnf%D3s\\\\t%0, #%N2\"\n-  [(set_attr \"length\" \"4,4,4,4,8,8,8,8\")\n-   (set_attr \"type\" \"ffarith\")\n-   (set_attr \"conds\" \"use\")]\n-)\n-\n (define_insn \"*movsfcc_soft_insn\"\n   [(set (match_operand:SF 0 \"s_register_operand\" \"=r,r\")\n \t(if_then_else:SF (match_operator 3 \"arm_comparison_operator\"\n@@ -6471,28 +5834,6 @@\n   [(set_attr \"conds\" \"use\")]\n )\n \n-(define_insn \"*movdfcc_insn\"\n-  [(set (match_operand:DF 0 \"s_register_operand\" \"=f,f,f,f,f,f,f,f\")\n-\t(if_then_else:DF\n-\t (match_operator 3 \"arm_comparison_operator\"\n-\t  [(match_operand 4 \"cc_register\" \"\") (const_int 0)])\n-\t (match_operand:DF 1 \"fpa_add_operand\" \"0,0,fG,H,fG,fG,H,H\")\n-\t (match_operand:DF 2 \"fpa_add_operand\" \"fG,H,0,0,fG,H,fG,H\")))]\n-  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n-  \"@\n-   mvf%D3d\\\\t%0, %2\n-   mnf%D3d\\\\t%0, #%N2\n-   mvf%d3d\\\\t%0, %1\n-   mnf%d3d\\\\t%0, #%N1\n-   mvf%d3d\\\\t%0, %1\\;mvf%D3d\\\\t%0, %2\n-   mvf%d3d\\\\t%0, %1\\;mnf%D3d\\\\t%0, #%N2\n-   mnf%d3d\\\\t%0, #%N1\\;mvf%D3d\\\\t%0, %2\n-   mnf%d3d\\\\t%0, #%N1\\;mnf%D3d\\\\t%0, #%N2\"\n-  [(set_attr \"length\" \"4,4,4,4,8,8,8,8\")\n-   (set_attr \"type\" \"ffarith\")\n-   (set_attr \"conds\" \"use\")]\n-)\n-\n \f\n ;; Jump and linkage insns\n \n@@ -8782,9 +8123,9 @@\n )\n \n (define_expand \"eh_epilogue\"\n-  [(use (match_operand:SI 0 \"register_operand\" \"r\"))\n-   (use (match_operand:SI 1 \"register_operand\" \"r\"))\n-   (use (match_operand:SI 2 \"register_operand\" \"r\"))]\n+  [(use (match_operand:SI 0 \"register_operand\" \"\"))\n+   (use (match_operand:SI 1 \"register_operand\" \"\"))\n+   (use (match_operand:SI 2 \"register_operand\" \"\"))]\n   \"TARGET_EITHER\"\n   \"\n   {\n@@ -9135,7 +8476,7 @@\n ;; Miscellaneous Thumb patterns\n \n (define_expand \"tablejump\"\n-  [(parallel [(set (pc) (match_operand:SI 0 \"register_operand\" \"l*r\"))\n+  [(parallel [(set (pc) (match_operand:SI 0 \"register_operand\" \"\"))\n \t      (use (label_ref (match_operand 1 \"\" \"\")))])]\n   \"TARGET_THUMB\"\n   \"\n@@ -9231,3 +8572,8 @@\n   \"\"\n   \"%@ %0 needed for prologue\"\n )\n+\n+;; Load the FPA co-processor patterns\n+(include \"fpa.md\")\n+;; Load the Maverick co-processor patterns\n+(include \"cirrus.md\")"}, {"sha": "6eba7b1220a644d56f552d56af6c228010d3ff65", "filename": "gcc/config/arm/fpa.md", "status": "added", "additions": 715, "deletions": 0, "changes": 715, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82955615a53d80d4cad86bd0982639af5c252f38/gcc%2Fconfig%2Farm%2Ffpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82955615a53d80d4cad86bd0982639af5c252f38/gcc%2Fconfig%2Farm%2Ffpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ffpa.md?ref=82955615a53d80d4cad86bd0982639af5c252f38", "patch": "@@ -0,0 +1,715 @@\n+;;- Machine description for FPA co-processor for ARM cpus.\n+;;  Copyright 1991, 1993, 1994, 1995, 1996, 1996, 1997, 1998, 1999, 2000,\n+;;  2001, 2002, 2003  Free Software Foundation, Inc.\n+;;  Contributed by Pieter `Tiggr' Schoenmakers (rcpieter@win.tue.nl)\n+;;  and Martin Simmons (@harleqn.co.uk).\n+;;  More major hacks by Richard Earnshaw (rearnsha@arm.com).\n+\n+;; This file is part of GCC.\n+\n+;; GCC is free software; you can redistribute it and/or modify it\n+;; under the terms of the GNU General Public License as published\n+;; by the Free Software Foundation; either version 2, or (at your\n+;; option) any later version.\n+\n+;; GCC is distributed in the hope that it will be useful, but WITHOUT\n+;; ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+;; or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+;; License for more details.\n+\n+;; You should have received a copy of the GNU General Public License\n+;; along with GCC; see the file COPYING.  If not, write to\n+;; the Free Software Foundation, 59 Temple Place - Suite 330,\n+;; Boston, MA 02111-1307, USA.\n+\n+;;--------------------------------------------------------------------\n+;; Floating point unit (FPA)\n+;;--------------------------------------------------------------------\n+(define_function_unit \"fpa\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n+\t\t\t\t     (eq_attr \"type\" \"fdivx\")) 71 69)\n+\n+(define_function_unit \"fpa\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n+\t\t\t\t     (eq_attr \"type\" \"fdivd\")) 59 57)\n+\n+(define_function_unit \"fpa\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n+\t\t\t\t     (eq_attr \"type\" \"fdivs\")) 31 29)\n+\n+(define_function_unit \"fpa\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n+\t\t\t\t     (eq_attr \"type\" \"fmul\")) 9 7)\n+\n+(define_function_unit \"fpa\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n+\t\t\t\t     (eq_attr \"type\" \"ffmul\")) 6 4)\n+\n+(define_function_unit \"fpa\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n+\t\t\t\t     (eq_attr \"type\" \"farith\")) 4 2)\n+\n+(define_function_unit \"fpa\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n+\t\t\t\t     (eq_attr \"type\" \"ffarith\")) 2 2)\n+\n+(define_function_unit \"fpa\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n+\t\t\t\t     (eq_attr \"type\" \"r_2_f\")) 5 3)\n+\n+(define_function_unit \"fpa\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n+\t\t\t\t     (eq_attr \"type\" \"f_2_r\")) 1 2)\n+\n+; The fpa10 doesn't really have a memory read unit, but it can start to\n+; speculatively execute the instruction in the pipeline, provided the data\n+; is already loaded, so pretend reads have a delay of 2 (and that the\n+; pipeline is infinite).\n+\n+(define_function_unit \"fpa_mem\" 1 0 (and (eq_attr \"fpu\" \"fpa\")\n+\t\t\t\t\t (eq_attr \"type\" \"f_load\")) 3 1)\n+\n+(define_insn \"*addsf3_fpa\"\n+  [(set (match_operand:SF          0 \"s_register_operand\" \"=f,f\")\n+\t(plus:SF (match_operand:SF 1 \"s_register_operand\" \"%f,f\")\n+\t\t (match_operand:SF 2 \"fpa_add_operand\"    \"fG,H\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"@\n+   adf%?s\\\\t%0, %1, %2\n+   suf%?s\\\\t%0, %1, #%N2\"\n+  [(set_attr \"type\" \"farith\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*adddf3_fpa\"\n+  [(set (match_operand:DF          0 \"s_register_operand\" \"=f,f\")\n+\t(plus:DF (match_operand:DF 1 \"s_register_operand\" \"%f,f\")\n+\t\t (match_operand:DF 2 \"fpa_add_operand\"    \"fG,H\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"@\n+   adf%?d\\\\t%0, %1, %2\n+   suf%?d\\\\t%0, %1, #%N2\"\n+  [(set_attr \"type\" \"farith\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*adddf_esfdf_df_fpa\"\n+  [(set (match_operand:DF           0 \"s_register_operand\" \"=f,f\")\n+\t(plus:DF (float_extend:DF\n+\t\t  (match_operand:SF 1 \"s_register_operand\"  \"f,f\"))\n+\t\t (match_operand:DF  2 \"fpa_add_operand\"    \"fG,H\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"@\n+   adf%?d\\\\t%0, %1, %2\n+   suf%?d\\\\t%0, %1, #%N2\"\n+  [(set_attr \"type\" \"farith\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*adddf_df_esfdf_fpa\"\n+  [(set (match_operand:DF           0 \"s_register_operand\" \"=f\")\n+\t(plus:DF (match_operand:DF  1 \"s_register_operand\"  \"f\")\n+\t\t (float_extend:DF\n+\t\t  (match_operand:SF 2 \"s_register_operand\"  \"f\"))))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"adf%?d\\\\t%0, %1, %2\"\n+  [(set_attr \"type\" \"farith\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*adddf_esfdf_esfdf_fpa\"\n+  [(set (match_operand:DF           0 \"s_register_operand\" \"=f\")\n+\t(plus:DF (float_extend:DF \n+\t\t  (match_operand:SF 1 \"s_register_operand\" \"f\"))\n+\t\t (float_extend:DF\n+\t\t  (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"adf%?d\\\\t%0, %1, %2\"\n+  [(set_attr \"type\" \"farith\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*subsf3_fpa\"\n+  [(set (match_operand:SF 0 \"s_register_operand\" \"=f,f\")\n+\t(minus:SF (match_operand:SF 1 \"fpa_rhs_operand\" \"f,G\")\n+\t\t  (match_operand:SF 2 \"fpa_rhs_operand\" \"fG,f\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"@\n+   suf%?s\\\\t%0, %1, %2\n+   rsf%?s\\\\t%0, %2, %1\"\n+  [(set_attr \"type\" \"farith\")]\n+)\n+\n+(define_insn \"*subdf3_fpa\"\n+  [(set (match_operand:DF           0 \"s_register_operand\" \"=f,f\")\n+\t(minus:DF (match_operand:DF 1 \"fpa_rhs_operand\"     \"f,G\")\n+\t\t  (match_operand:DF 2 \"fpa_rhs_operand\"    \"fG,f\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"@\n+   suf%?d\\\\t%0, %1, %2\n+   rsf%?d\\\\t%0, %2, %1\"\n+  [(set_attr \"type\" \"farith\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*subdf_esfdf_df_fpa\"\n+  [(set (match_operand:DF            0 \"s_register_operand\" \"=f\")\n+\t(minus:DF (float_extend:DF\n+\t\t   (match_operand:SF 1 \"s_register_operand\"  \"f\"))\n+\t\t  (match_operand:DF  2 \"fpa_rhs_operand\"    \"fG\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"suf%?d\\\\t%0, %1, %2\"\n+  [(set_attr \"type\" \"farith\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*subdf_df_esfdf_fpa\"\n+  [(set (match_operand:DF 0 \"s_register_operand\" \"=f,f\")\n+\t(minus:DF (match_operand:DF 1 \"fpa_rhs_operand\" \"f,G\")\n+\t\t  (float_extend:DF\n+\t\t   (match_operand:SF 2 \"s_register_operand\" \"f,f\"))))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"@\n+   suf%?d\\\\t%0, %1, %2\n+   rsf%?d\\\\t%0, %2, %1\"\n+  [(set_attr \"type\" \"farith\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*subdf_esfdf_esfdf_fpa\"\n+  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n+\t(minus:DF (float_extend:DF\n+\t\t   (match_operand:SF 1 \"s_register_operand\" \"f\"))\n+\t\t  (float_extend:DF\n+\t\t   (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"suf%?d\\\\t%0, %1, %2\"\n+  [(set_attr \"type\" \"farith\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*mulsf3_fpa\"\n+  [(set (match_operand:SF 0 \"s_register_operand\" \"=f\")\n+\t(mult:SF (match_operand:SF 1 \"s_register_operand\" \"f\")\n+\t\t (match_operand:SF 2 \"fpa_rhs_operand\" \"fG\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"fml%?s\\\\t%0, %1, %2\"\n+  [(set_attr \"type\" \"ffmul\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*muldf3_fpa\"\n+  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n+\t(mult:DF (match_operand:DF 1 \"s_register_operand\" \"f\")\n+\t\t (match_operand:DF 2 \"fpa_rhs_operand\" \"fG\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"muf%?d\\\\t%0, %1, %2\"\n+  [(set_attr \"type\" \"fmul\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*muldf_esfdf_df_fpa\"\n+  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n+\t(mult:DF (float_extend:DF\n+\t\t  (match_operand:SF 1 \"s_register_operand\" \"f\"))\n+\t\t (match_operand:DF 2 \"fpa_rhs_operand\" \"fG\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"muf%?d\\\\t%0, %1, %2\"\n+  [(set_attr \"type\" \"fmul\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*muldf_df_esfdf_fpa\"\n+  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n+\t(mult:DF (match_operand:DF 1 \"s_register_operand\" \"f\")\n+\t\t (float_extend:DF\n+\t\t  (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"muf%?d\\\\t%0, %1, %2\"\n+  [(set_attr \"type\" \"fmul\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*muldf_esfdf_esfdf_fpa\"\n+  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n+\t(mult:DF\n+\t (float_extend:DF (match_operand:SF 1 \"s_register_operand\" \"f\"))\n+\t (float_extend:DF (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"muf%?d\\\\t%0, %1, %2\"\n+  [(set_attr \"type\" \"fmul\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+;; Division insns\n+\n+(define_insn \"*divsf3_fpa\"\n+  [(set (match_operand:SF 0 \"s_register_operand\" \"=f,f\")\n+\t(div:SF (match_operand:SF 1 \"fpa_rhs_operand\" \"f,G\")\n+\t\t(match_operand:SF 2 \"fpa_rhs_operand\" \"fG,f\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"@\n+   fdv%?s\\\\t%0, %1, %2\n+   frd%?s\\\\t%0, %2, %1\"\n+  [(set_attr \"type\" \"fdivs\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*divdf3_fpa\"\n+  [(set (match_operand:DF 0 \"s_register_operand\" \"=f,f\")\n+\t(div:DF (match_operand:DF 1 \"fpa_rhs_operand\" \"f,G\")\n+\t\t(match_operand:DF 2 \"fpa_rhs_operand\" \"fG,f\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"@\n+   dvf%?d\\\\t%0, %1, %2\n+   rdf%?d\\\\t%0, %2, %1\"\n+  [(set_attr \"type\" \"fdivd\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*divdf_esfdf_df_fpa\"\n+  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n+\t(div:DF (float_extend:DF\n+\t\t (match_operand:SF 1 \"s_register_operand\" \"f\"))\n+\t\t(match_operand:DF 2 \"fpa_rhs_operand\" \"fG\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"dvf%?d\\\\t%0, %1, %2\"\n+  [(set_attr \"type\" \"fdivd\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*divdf_df_esfdf_fpa\"\n+  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n+\t(div:DF (match_operand:DF 1 \"fpa_rhs_operand\" \"fG\")\n+\t\t(float_extend:DF\n+\t\t (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"rdf%?d\\\\t%0, %2, %1\"\n+  [(set_attr \"type\" \"fdivd\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*divdf_esfdf_esfdf_fpa\"\n+  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n+\t(div:DF (float_extend:DF\n+\t\t (match_operand:SF 1 \"s_register_operand\" \"f\"))\n+\t\t(float_extend:DF\n+\t\t (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"dvf%?d\\\\t%0, %1, %2\"\n+  [(set_attr \"type\" \"fdivd\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*modsf3_fpa\"\n+  [(set (match_operand:SF 0 \"s_register_operand\" \"=f\")\n+\t(mod:SF (match_operand:SF 1 \"s_register_operand\" \"f\")\n+\t\t(match_operand:SF 2 \"fpa_rhs_operand\" \"fG\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"rmf%?s\\\\t%0, %1, %2\"\n+  [(set_attr \"type\" \"fdivs\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*moddf3_fpa\"\n+  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n+\t(mod:DF (match_operand:DF 1 \"s_register_operand\" \"f\")\n+\t\t(match_operand:DF 2 \"fpa_rhs_operand\" \"fG\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"rmf%?d\\\\t%0, %1, %2\"\n+  [(set_attr \"type\" \"fdivd\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*moddf_esfdf_df_fpa\"\n+  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n+\t(mod:DF (float_extend:DF\n+\t\t (match_operand:SF 1 \"s_register_operand\" \"f\"))\n+\t\t(match_operand:DF 2 \"fpa_rhs_operand\" \"fG\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"rmf%?d\\\\t%0, %1, %2\"\n+  [(set_attr \"type\" \"fdivd\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*moddf_df_esfdf_fpa\"\n+  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n+\t(mod:DF (match_operand:DF 1 \"s_register_operand\" \"f\")\n+\t\t(float_extend:DF\n+\t\t (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"rmf%?d\\\\t%0, %1, %2\"\n+  [(set_attr \"type\" \"fdivd\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*moddf_esfdf_esfdf_fpa\"\n+  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n+\t(mod:DF (float_extend:DF\n+\t\t (match_operand:SF 1 \"s_register_operand\" \"f\"))\n+\t\t(float_extend:DF\n+\t\t (match_operand:SF 2 \"s_register_operand\" \"f\"))))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"rmf%?d\\\\t%0, %1, %2\"\n+  [(set_attr \"type\" \"fdivd\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*negsf2_fpa\"\n+  [(set (match_operand:SF         0 \"s_register_operand\" \"=f\")\n+\t(neg:SF (match_operand:SF 1 \"s_register_operand\" \"f\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"mnf%?s\\\\t%0, %1\"\n+  [(set_attr \"type\" \"ffarith\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*negdf2_fpa\"\n+  [(set (match_operand:DF         0 \"s_register_operand\" \"=f\")\n+\t(neg:DF (match_operand:DF 1 \"s_register_operand\" \"f\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"mnf%?d\\\\t%0, %1\"\n+  [(set_attr \"type\" \"ffarith\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*negdf_esfdf_fpa\"\n+  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n+\t(neg:DF (float_extend:DF\n+\t\t (match_operand:SF 1 \"s_register_operand\" \"f\"))))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"mnf%?d\\\\t%0, %1\"\n+  [(set_attr \"type\" \"ffarith\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*abssf2_fpa\"\n+  [(set (match_operand:SF          0 \"s_register_operand\" \"=f\")\n+\t (abs:SF (match_operand:SF 1 \"s_register_operand\" \"f\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"abs%?s\\\\t%0, %1\"\n+  [(set_attr \"type\" \"ffarith\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*absdf2_fpa\"\n+  [(set (match_operand:DF         0 \"s_register_operand\" \"=f\")\n+\t(abs:DF (match_operand:DF 1 \"s_register_operand\" \"f\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"abs%?d\\\\t%0, %1\"\n+  [(set_attr \"type\" \"ffarith\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*absdf_esfdf_fpa\"\n+  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n+\t(abs:DF (float_extend:DF\n+\t\t (match_operand:SF 1 \"s_register_operand\" \"f\"))))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"abs%?d\\\\t%0, %1\"\n+  [(set_attr \"type\" \"ffarith\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*sqrtsf2_fpa\"\n+  [(set (match_operand:SF 0 \"s_register_operand\" \"=f\")\n+\t(sqrt:SF (match_operand:SF 1 \"s_register_operand\" \"f\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"sqt%?s\\\\t%0, %1\"\n+  [(set_attr \"type\" \"float_em\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*sqrtdf2_fpa\"\n+  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n+\t(sqrt:DF (match_operand:DF 1 \"s_register_operand\" \"f\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"sqt%?d\\\\t%0, %1\"\n+  [(set_attr \"type\" \"float_em\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*sqrtdf_esfdf_fpa\"\n+  [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n+\t(sqrt:DF (float_extend:DF\n+\t\t  (match_operand:SF 1 \"s_register_operand\" \"f\"))))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"sqt%?d\\\\t%0, %1\"\n+  [(set_attr \"type\" \"float_em\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*floatsisf2_fpa\"\n+  [(set (match_operand:SF           0 \"s_register_operand\" \"=f\")\n+\t(float:SF (match_operand:SI 1 \"s_register_operand\" \"r\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"flt%?s\\\\t%0, %1\"\n+  [(set_attr \"type\" \"r_2_f\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*floatsidf2_fpa\"\n+  [(set (match_operand:DF           0 \"s_register_operand\" \"=f\")\n+\t(float:DF (match_operand:SI 1 \"s_register_operand\" \"r\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"flt%?d\\\\t%0, %1\"\n+  [(set_attr \"type\" \"r_2_f\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*fix_truncsfsi2_fpa\"\n+  [(set (match_operand:SI         0 \"s_register_operand\" \"=r\")\n+\t(fix:SI (fix:SF (match_operand:SF 1 \"s_register_operand\" \"f\"))))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"fix%?z\\\\t%0, %1\"\n+  [(set_attr \"type\" \"f_2_r\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*fix_truncdfsi2_fpa\"\n+  [(set (match_operand:SI         0 \"s_register_operand\" \"=r\")\n+\t(fix:SI (fix:DF (match_operand:DF 1 \"s_register_operand\" \"f\"))))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"fix%?z\\\\t%0, %1\"\n+  [(set_attr \"type\" \"f_2_r\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*truncdfsf2_fpa\"\n+  [(set (match_operand:SF 0 \"s_register_operand\" \"=f\")\n+\t(float_truncate:SF\n+\t (match_operand:DF 1 \"s_register_operand\" \"f\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"mvf%?s\\\\t%0, %1\"\n+  [(set_attr \"type\" \"ffarith\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*extendsfdf2_fpa\"\n+  [(set (match_operand:DF                  0 \"s_register_operand\" \"=f\")\n+\t(float_extend:DF (match_operand:SF 1 \"s_register_operand\"  \"f\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"mvf%?d\\\\t%0, %1\"\n+  [(set_attr \"type\" \"ffarith\")\n+   (set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*movsf_fpa\"\n+  [(set (match_operand:SF 0 \"nonimmediate_operand\" \"=f,f,f, m,f,r,r,r, m\")\n+\t(match_operand:SF 1 \"general_operand\"      \"fG,H,mE,f,r,f,r,mE,r\"))]\n+  \"TARGET_ARM\n+   && TARGET_HARD_FLOAT\n+   && (GET_CODE (operands[0]) != MEM\n+       || register_operand (operands[1], SFmode))\"\n+  \"@\n+   mvf%?s\\\\t%0, %1\n+   mnf%?s\\\\t%0, #%N1\n+   ldf%?s\\\\t%0, %1\n+   stf%?s\\\\t%1, %0\n+   str%?\\\\t%1, [%|sp, #-4]!\\;ldf%?s\\\\t%0, [%|sp], #4\n+   stf%?s\\\\t%1, [%|sp, #-4]!\\;ldr%?\\\\t%0, [%|sp], #4\n+   mov%?\\\\t%0, %1\n+   ldr%?\\\\t%0, %1\\\\t%@ float\n+   str%?\\\\t%1, %0\\\\t%@ float\"\n+  [(set_attr \"length\" \"4,4,4,4,8,8,4,4,4\")\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"type\"\n+\t \"ffarith,ffarith,f_load,f_store,r_mem_f,f_mem_r,*,load,store1\")\n+   (set_attr \"pool_range\" \"*,*,1024,*,*,*,*,4096,*\")\n+   (set_attr \"neg_pool_range\" \"*,*,1012,*,*,*,*,4084,*\")]\n+)\n+\n+(define_insn \"*movdf_fpa\"\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\"\n+\t\t\t\t\t\t\"=r,Q,r,m,r, f, f,f, m,!f,!r\")\n+\t(match_operand:DF 1 \"general_operand\"\n+\t\t\t\t\t\t\"Q, r,r,r,mF,fG,H,mF,f,r, f\"))]\n+  \"TARGET_ARM\n+   && TARGET_HARD_FLOAT\n+   && (GET_CODE (operands[0]) != MEM\n+       || register_operand (operands[1], DFmode))\"\n+  \"*\n+  {\n+  switch (which_alternative)\n+    {\n+    default:\n+    case 0: return \\\"ldm%?ia\\\\t%m1, %M0\\\\t%@ double\\\";\n+    case 1: return \\\"stm%?ia\\\\t%m0, %M1\\\\t%@ double\\\";\n+    case 2: case 3: case 4: return output_move_double (operands);\n+    case 5: return \\\"mvf%?d\\\\t%0, %1\\\";\n+    case 6: return \\\"mnf%?d\\\\t%0, #%N1\\\";\n+    case 7: return \\\"ldf%?d\\\\t%0, %1\\\";\n+    case 8: return \\\"stf%?d\\\\t%1, %0\\\";\n+    case 9: return output_mov_double_fpa_from_arm (operands);\n+    case 10: return output_mov_double_arm_from_fpa (operands);\n+    }\n+  }\n+  \"\n+  [(set_attr \"length\" \"4,4,8,8,8,4,4,4,4,8,8\")\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"type\"\n+    \"load,store2,*,store2,load,ffarith,ffarith,f_load,f_store,r_mem_f,f_mem_r\")\n+   (set_attr \"pool_range\" \"*,*,*,*,1020,*,*,1024,*,*,*\")\n+   (set_attr \"neg_pool_range\" \"*,*,*,*,1008,*,*,1008,*,*,*\")]\n+)\n+\n+;; Saving and restoring the floating point registers in the prologue should\n+;; be done in XFmode, even though we don't support that for anything else\n+;; (Well, strictly it's 'internal representation', but that's effectively\n+;; XFmode).\n+\n+(define_insn \"*movxf_fpa\"\n+  [(set (match_operand:XF 0 \"nonimmediate_operand\" \"=f,f,f,m,f,r,r\")\n+\t(match_operand:XF 1 \"general_operand\" \"fG,H,m,f,r,f,r\"))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT && reload_completed\"\n+  \"*\n+  switch (which_alternative)\n+    {\n+    default:\n+    case 0: return \\\"mvf%?e\\\\t%0, %1\\\";\n+    case 1: return \\\"mnf%?e\\\\t%0, #%N1\\\";\n+    case 2: return \\\"ldf%?e\\\\t%0, %1\\\";\n+    case 3: return \\\"stf%?e\\\\t%1, %0\\\";\n+    case 4: return output_mov_long_double_fpa_from_arm (operands);\n+    case 5: return output_mov_long_double_arm_from_fpa (operands);\n+    case 6: return output_mov_long_double_arm_from_arm (operands);\n+    }\n+  \"\n+  [(set_attr \"length\" \"4,4,4,4,8,8,12\")\n+   (set_attr \"predicable\" \"yes\")\n+   (set_attr \"type\" \"ffarith,ffarith,f_load,f_store,r_mem_f,f_mem_r,*\")\n+   (set_attr \"pool_range\" \"*,*,1024,*,*,*,*\")\n+   (set_attr \"neg_pool_range\" \"*,*,1004,*,*,*,*\")]\n+)\n+\n+(define_insn \"*cmpsf_fpa\"\n+  [(set (reg:CCFP CC_REGNUM)\n+\t(compare:CCFP (match_operand:SF 0 \"s_register_operand\" \"f,f\")\n+\t\t      (match_operand:SF 1 \"fpa_add_operand\" \"fG,H\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"@\n+   cmf%?\\\\t%0, %1\n+   cnf%?\\\\t%0, #%N1\"\n+  [(set_attr \"conds\" \"set\")\n+   (set_attr \"type\" \"f_2_r\")]\n+)\n+\n+(define_insn \"*cmpdf_fpa\"\n+  [(set (reg:CCFP CC_REGNUM)\n+\t(compare:CCFP (match_operand:DF 0 \"s_register_operand\" \"f,f\")\n+\t\t      (match_operand:DF 1 \"fpa_add_operand\" \"fG,H\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"@\n+   cmf%?\\\\t%0, %1\n+   cnf%?\\\\t%0, #%N1\"\n+  [(set_attr \"conds\" \"set\")\n+   (set_attr \"type\" \"f_2_r\")]\n+)\n+\n+(define_insn \"*cmpesfdf_df_fpa\"\n+  [(set (reg:CCFP CC_REGNUM)\n+\t(compare:CCFP (float_extend:DF\n+\t\t       (match_operand:SF 0 \"s_register_operand\" \"f,f\"))\n+\t\t      (match_operand:DF 1 \"fpa_add_operand\" \"fG,H\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"@\n+   cmf%?\\\\t%0, %1\n+   cnf%?\\\\t%0, #%N1\"\n+  [(set_attr \"conds\" \"set\")\n+   (set_attr \"type\" \"f_2_r\")]\n+)\n+\n+(define_insn \"*cmpdf_esfdf_fpa\"\n+  [(set (reg:CCFP CC_REGNUM)\n+\t(compare:CCFP (match_operand:DF 0 \"s_register_operand\" \"f\")\n+\t\t      (float_extend:DF\n+\t\t       (match_operand:SF 1 \"s_register_operand\" \"f\"))))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"cmf%?\\\\t%0, %1\"\n+  [(set_attr \"conds\" \"set\")\n+   (set_attr \"type\" \"f_2_r\")]\n+)\n+\n+(define_insn \"*cmpsf_trap_fpa\"\n+  [(set (reg:CCFPE CC_REGNUM)\n+\t(compare:CCFPE (match_operand:SF 0 \"s_register_operand\" \"f,f\")\n+\t\t       (match_operand:SF 1 \"fpa_add_operand\" \"fG,H\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"@\n+   cmf%?e\\\\t%0, %1\n+   cnf%?e\\\\t%0, #%N1\"\n+  [(set_attr \"conds\" \"set\")\n+   (set_attr \"type\" \"f_2_r\")]\n+)\n+\n+(define_insn \"*cmpdf_trap_fpa\"\n+  [(set (reg:CCFPE CC_REGNUM)\n+\t(compare:CCFPE (match_operand:DF 0 \"s_register_operand\" \"f,f\")\n+\t\t       (match_operand:DF 1 \"fpa_add_operand\" \"fG,H\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"@\n+   cmf%?e\\\\t%0, %1\n+   cnf%?e\\\\t%0, #%N1\"\n+  [(set_attr \"conds\" \"set\")\n+   (set_attr \"type\" \"f_2_r\")]\n+)\n+\n+(define_insn \"*cmp_esfdf_df_trap_fpa\"\n+  [(set (reg:CCFPE CC_REGNUM)\n+\t(compare:CCFPE (float_extend:DF\n+\t\t\t(match_operand:SF 0 \"s_register_operand\" \"f,f\"))\n+\t\t       (match_operand:DF 1 \"fpa_add_operand\" \"fG,H\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"@\n+   cmf%?e\\\\t%0, %1\n+   cnf%?e\\\\t%0, #%N1\"\n+  [(set_attr \"conds\" \"set\")\n+   (set_attr \"type\" \"f_2_r\")]\n+)\n+\n+(define_insn \"*cmp_df_esfdf_trap_fpa\"\n+  [(set (reg:CCFPE CC_REGNUM)\n+\t(compare:CCFPE (match_operand:DF 0 \"s_register_operand\" \"f\")\n+\t\t       (float_extend:DF\n+\t\t\t(match_operand:SF 1 \"s_register_operand\" \"f\"))))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"cmf%?e\\\\t%0, %1\"\n+  [(set_attr \"conds\" \"set\")\n+   (set_attr \"type\" \"f_2_r\")]\n+)\n+\n+(define_insn \"*movsfcc_fpa\"\n+  [(set (match_operand:SF 0 \"s_register_operand\" \"=f,f,f,f,f,f,f,f\")\n+\t(if_then_else:SF\n+\t (match_operator 3 \"arm_comparison_operator\" \n+\t  [(match_operand 4 \"cc_register\" \"\") (const_int 0)])\n+\t (match_operand:SF 1 \"fpa_add_operand\" \"0,0,fG,H,fG,fG,H,H\")\n+\t (match_operand:SF 2 \"fpa_add_operand\" \"fG,H,0,0,fG,H,fG,H\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"@\n+   mvf%D3s\\\\t%0, %2\n+   mnf%D3s\\\\t%0, #%N2\n+   mvf%d3s\\\\t%0, %1\n+   mnf%d3s\\\\t%0, #%N1\n+   mvf%d3s\\\\t%0, %1\\;mvf%D3s\\\\t%0, %2\n+   mvf%d3s\\\\t%0, %1\\;mnf%D3s\\\\t%0, #%N2\n+   mnf%d3s\\\\t%0, #%N1\\;mvf%D3s\\\\t%0, %2\n+   mnf%d3s\\\\t%0, #%N1\\;mnf%D3s\\\\t%0, #%N2\"\n+  [(set_attr \"length\" \"4,4,4,4,8,8,8,8\")\n+   (set_attr \"type\" \"ffarith\")\n+   (set_attr \"conds\" \"use\")]\n+)\n+\n+(define_insn \"*movdfcc_fpa\"\n+  [(set (match_operand:DF 0 \"s_register_operand\" \"=f,f,f,f,f,f,f,f\")\n+\t(if_then_else:DF\n+\t (match_operator 3 \"arm_comparison_operator\"\n+\t  [(match_operand 4 \"cc_register\" \"\") (const_int 0)])\n+\t (match_operand:DF 1 \"fpa_add_operand\" \"0,0,fG,H,fG,fG,H,H\")\n+\t (match_operand:DF 2 \"fpa_add_operand\" \"fG,H,0,0,fG,H,fG,H\")))]\n+  \"TARGET_ARM && TARGET_HARD_FLOAT\"\n+  \"@\n+   mvf%D3d\\\\t%0, %2\n+   mnf%D3d\\\\t%0, #%N2\n+   mvf%d3d\\\\t%0, %1\n+   mnf%d3d\\\\t%0, #%N1\n+   mvf%d3d\\\\t%0, %1\\;mvf%D3d\\\\t%0, %2\n+   mvf%d3d\\\\t%0, %1\\;mnf%D3d\\\\t%0, #%N2\n+   mnf%d3d\\\\t%0, #%N1\\;mvf%D3d\\\\t%0, %2\n+   mnf%d3d\\\\t%0, #%N1\\;mnf%D3d\\\\t%0, #%N2\"\n+  [(set_attr \"length\" \"4,4,4,4,8,8,8,8\")\n+   (set_attr \"type\" \"ffarith\")\n+   (set_attr \"conds\" \"use\")]\n+)\n+"}]}