{"sha": "338f655dae09fc11f3fa4bc693360d93d9e72bb6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM4ZjY1NWRhZTA5ZmMxMWYzZmE0YmM2OTMzNjBkOTNkOWU3MmJiNg==", "commit": {"author": {"name": "Ira Rosen", "email": "ira.rosen@linaro.org", "date": "2011-07-19T06:25:07Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2011-07-19T06:25:07Z"}, "message": "re PR tree-optimization/49771 (wrong code with -ftree-vectorize)\n\n\n        PR tree-optimization/49771\n        * tree-vect-loop-manip.c (vect_vfa_segment_size): In case of\n        zero step, set segment length to the size of the data-ref's type.\n\nFrom-SVN: r176434", "tree": {"sha": "6cccd3872aa1d8d4da3bfbfd294117ba827a2837", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cccd3872aa1d8d4da3bfbfd294117ba827a2837"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/338f655dae09fc11f3fa4bc693360d93d9e72bb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/338f655dae09fc11f3fa4bc693360d93d9e72bb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/338f655dae09fc11f3fa4bc693360d93d9e72bb6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/338f655dae09fc11f3fa4bc693360d93d9e72bb6/comments", "author": null, "committer": null, "parents": [{"sha": "24d71c2b563c0dd873523118edae4878275fdf2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24d71c2b563c0dd873523118edae4878275fdf2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24d71c2b563c0dd873523118edae4878275fdf2e"}], "stats": {"total": 48, "additions": 45, "deletions": 3}, "files": [{"sha": "62293beeaa1f8dcafe221dbd6c86402d6751137f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/338f655dae09fc11f3fa4bc693360d93d9e72bb6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/338f655dae09fc11f3fa4bc693360d93d9e72bb6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=338f655dae09fc11f3fa4bc693360d93d9e72bb6", "patch": "@@ -1,3 +1,9 @@\n+2011-07-19  Ira Rosen  <ira.rosen@linaro.org>\n+\n+\tPR tree-optimization/49771\n+\t* tree-vect-loop-manip.c (vect_vfa_segment_size): In case of\n+\tzero step, set segment length to the size of the data-ref's type.\n+\n 2011-07-18  Martin Jambor  <mjambor@suse.cz>\n \n \t* ipa-prop.h: Include alloc-pool.h, all sorts of updates to general"}, {"sha": "ffc6f0baa7324304b9b531738bbfe97ce17a6971", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/338f655dae09fc11f3fa4bc693360d93d9e72bb6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/338f655dae09fc11f3fa4bc693360d93d9e72bb6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=338f655dae09fc11f3fa4bc693360d93d9e72bb6", "patch": "@@ -1,3 +1,8 @@\n+2011-07-19  Ira Rosen  <ira.rosen@linaro.org>\n+\n+\tPR tree-optimization/49771\n+\t* gcc.dg/vect/pr49771.c: New test.\n+\n 2011-07-18  Martin Jambor  <mjambor@suse.cz>\n \n \t* gcc.dg/ipa/ipa-1.c: Updated testcase dump scan."}, {"sha": "777f615365c9c0d5b1c512e6b35c14824ae75528", "filename": "gcc/testsuite/gcc.dg/vect/pr49771.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/338f655dae09fc11f3fa4bc693360d93d9e72bb6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr49771.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/338f655dae09fc11f3fa4bc693360d93d9e72bb6/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr49771.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr49771.c?ref=338f655dae09fc11f3fa4bc693360d93d9e72bb6", "patch": "@@ -0,0 +1,26 @@\n+#include <stdlib.h>\n+#include <stdarg.h>\n+\n+static int a[1000];\n+\n+int\n+foo (void)\n+{\n+  int j;\n+  int i;\n+  for (i = 0; i < 1000; i++)\n+    for (j = 0; j < 1000; j++)\n+      a[j] = a[i] + 1;\n+  return a[0];\n+}\n+\n+int\n+main (void)\n+{\n+  int res = foo ();\n+  if (res != 1999)\n+    abort ();\n+  return 0;\n+}\n+\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "6039c1609f457fcc576f16a73ed93a9df86b1b20", "filename": "gcc/tree-vect-loop-manip.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/338f655dae09fc11f3fa4bc693360d93d9e72bb6/gcc%2Ftree-vect-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/338f655dae09fc11f3fa4bc693360d93d9e72bb6/gcc%2Ftree-vect-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop-manip.c?ref=338f655dae09fc11f3fa4bc693360d93d9e72bb6", "patch": "@@ -2356,9 +2356,14 @@ static tree\n vect_vfa_segment_size (struct data_reference *dr, tree length_factor)\n {\n   tree segment_length;\n-  segment_length = size_binop (MULT_EXPR,\n-\t\t\t       fold_convert (sizetype, DR_STEP (dr)),\n-\t\t\t       fold_convert (sizetype, length_factor));\n+\n+  if (!compare_tree_int (DR_STEP (dr), 0))\n+    segment_length = TYPE_SIZE_UNIT (TREE_TYPE (DR_REF (dr)));\n+  else\n+    segment_length = size_binop (MULT_EXPR,\n+                                 fold_convert (sizetype, DR_STEP (dr)),\n+                                 fold_convert (sizetype, length_factor));\n+\n   if (vect_supportable_dr_alignment (dr, false)\n         == dr_explicit_realign_optimized)\n     {"}]}