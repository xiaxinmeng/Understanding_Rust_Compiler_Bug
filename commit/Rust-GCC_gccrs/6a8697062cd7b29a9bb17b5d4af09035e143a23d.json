{"sha": "6a8697062cd7b29a9bb17b5d4af09035e143a23d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE4Njk3MDYyY2Q3YjI5YTliYjE3YjVkNGFmMDkwMzVlMTQzYTIzZA==", "commit": {"author": {"name": "Erik Edelmann", "email": "eedelman@gcc.gnu.org", "date": "2005-11-01T21:40:06Z"}, "committer": {"name": "Erik Edelmann", "email": "eedelman@gcc.gnu.org", "date": "2005-11-01T21:40:06Z"}, "message": "re PR fortran/24245 (-fdump-parse-tree gives ICE for CONTAINED functions)\n\nfortran/\n2005-11-01  Erik Edelmann  <eedelman@gcc.gnu.org>\n\n        PR 24245\n        * trans.c (gfc_generate_code): Move code to create a main\n        program symbol from here ...\n        * parse.c (main_program_symbol): ... to this new\n        function, setting the locus from gfc_current_locus\n        instead of ns->code->loc.\n        (gfc_parse_file):  Call main_program_symbol for main programs.\n\nFrom-SVN: r106353", "tree": {"sha": "0ee1433fb0643d7286402f0cb08dcb92b6e4f0f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ee1433fb0643d7286402f0cb08dcb92b6e4f0f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a8697062cd7b29a9bb17b5d4af09035e143a23d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a8697062cd7b29a9bb17b5d4af09035e143a23d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a8697062cd7b29a9bb17b5d4af09035e143a23d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a8697062cd7b29a9bb17b5d4af09035e143a23d/comments", "author": null, "committer": null, "parents": [{"sha": "92119f26f7b3b4cb611ef71d5d786c9960434440", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92119f26f7b3b4cb611ef71d5d786c9960434440", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92119f26f7b3b4cb611ef71d5d786c9960434440"}], "stats": {"total": 58, "additions": 34, "deletions": 24}, "files": [{"sha": "7fad64cddf79a791e960d823230069ab290e2937", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a8697062cd7b29a9bb17b5d4af09035e143a23d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a8697062cd7b29a9bb17b5d4af09035e143a23d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6a8697062cd7b29a9bb17b5d4af09035e143a23d", "patch": "@@ -1,3 +1,13 @@\n+2005-11-01  Erik Edelmann  <eedelman@gcc.gnu.org>\n+\n+\tPR 24245\n+\t* trans.c (gfc_generate_code): Move code to create a main\n+\tprogram symbol from here ...\n+\t* parse.c (main_program_symbol): ... to this new\n+\tfunction, setting the locus from gfc_current_locus\n+\tinstead of ns->code->loc.\n+\t(gfc_parse_file):  Call main_program_symbol for main programs.\n+\n 2005-11-01  Tobias Schl\"uter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \tPR fortran/24404"}, {"sha": "0fc8f966adab0dd5efc044ee42437e75d56b8fbb", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a8697062cd7b29a9bb17b5d4af09035e143a23d/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a8697062cd7b29a9bb17b5d4af09035e143a23d/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=6a8697062cd7b29a9bb17b5d4af09035e143a23d", "patch": "@@ -970,6 +970,28 @@ gfc_ascii_statement (gfc_statement st)\n }\n \n \n+/* Create a symbol for the main program and assign it to ns->proc_name.  */\n+ \n+static void \n+main_program_symbol (gfc_namespace * ns)\n+{\n+  gfc_symbol *main_program;\n+  symbol_attribute attr;\n+\n+  gfc_get_symbol (\"MAIN__\", ns, &main_program);\n+  gfc_clear_attr (&attr);\n+  attr.flavor = FL_PROCEDURE;\n+  attr.proc = PROC_UNKNOWN;\n+  attr.subroutine = 1;\n+  attr.access = ACCESS_PUBLIC;\n+  attr.is_main_program = 1;\n+  main_program->attr = attr;\n+  main_program->declared_at = gfc_current_locus;\n+  ns->proc_name = main_program;\n+  gfc_commit_symbols ();\n+}\n+\n+\n /* Do whatever is necessary to accept the last statement.  */\n \n static void\n@@ -2590,6 +2612,7 @@ gfc_parse_file (void)\n       prog_locus = gfc_current_locus;\n \n       push_state (&s, COMP_PROGRAM, gfc_new_block);\n+      main_program_symbol(gfc_current_ns);\n       accept_statement (st);\n       add_global_program ();\n       parse_progunit (ST_NONE);\n@@ -2631,6 +2654,7 @@ gfc_parse_file (void)\n       prog_locus = gfc_current_locus;\n \n       push_state (&s, COMP_PROGRAM, gfc_new_block);\n+      main_program_symbol(gfc_current_ns);\n       parse_progunit (st);\n       break;\n     }"}, {"sha": "5f7c86063bd4461bd1e1b1fa15b26f0d2c235626", "filename": "gcc/fortran/trans.c", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a8697062cd7b29a9bb17b5d4af09035e143a23d/gcc%2Ffortran%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a8697062cd7b29a9bb17b5d4af09035e143a23d/gcc%2Ffortran%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.c?ref=6a8697062cd7b29a9bb17b5d4af09035e143a23d", "patch": "@@ -656,30 +656,6 @@ gfc_generate_code (gfc_namespace * ns)\n       return;\n     }\n \n-  /* Main program subroutine.  */\n-  if (!ns->proc_name)\n-    {\n-      gfc_symbol *main_program;\n-      symbol_attribute attr;\n-\n-      /* Lots of things get upset if a subroutine doesn't have a symbol, so we\n-         make one now.  Hopefully we've set all the required fields.  */\n-      gfc_get_symbol (\"MAIN__\", ns, &main_program);\n-      gfc_clear_attr (&attr);\n-      attr.flavor = FL_PROCEDURE;\n-      attr.proc = PROC_UNKNOWN;\n-      attr.subroutine = 1;\n-      attr.access = ACCESS_PUBLIC;\n-      attr.is_main_program = 1;\n-      main_program->attr = attr;\n-\n-      /* Set the location to the first line of code.  */\n-      if (ns->code)\n-\tmain_program->declared_at = ns->code->loc;\n-      ns->proc_name = main_program;\n-      gfc_commit_symbols ();\n-    }\n-\n   gfc_generate_function_code (ns);\n }\n "}]}