{"sha": "22fdd65e5971ec8f15368ba77046ce8c6c3cb329", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJmZGQ2NWU1OTcxZWM4ZjE1MzY4YmE3NzA0NmNlOGM2YzNjYjMyOQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2001-02-05T01:38:47Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2001-02-05T01:38:47Z"}, "message": "Remove V2 C++ library.\n\n\t* configure.in: Remove --enable-libstdcxx_v3 support.\n\n\t* Makefile.in (site.exp): Always set HAVE_LIBSTDCXX_V3.\n\t* configure.in: Remove --enable-libstdcxx_v3 support.\n\t* configure: Regenerated.\n\nFrom-SVN: r39445", "tree": {"sha": "177855d276d1c216598a7ec68ce2bb1412e384a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/177855d276d1c216598a7ec68ce2bb1412e384a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22fdd65e5971ec8f15368ba77046ce8c6c3cb329", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22fdd65e5971ec8f15368ba77046ce8c6c3cb329", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22fdd65e5971ec8f15368ba77046ce8c6c3cb329", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22fdd65e5971ec8f15368ba77046ce8c6c3cb329/comments", "author": null, "committer": null, "parents": [{"sha": "4322eb6c0ee5bac01fbca9846438084d33367120", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4322eb6c0ee5bac01fbca9846438084d33367120", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4322eb6c0ee5bac01fbca9846438084d33367120"}], "stats": {"total": 40976, "additions": 259, "deletions": 40717}, "files": [{"sha": "ba716508744429a11d1000b5a7fb2eddc3c06395", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22fdd65e5971ec8f15368ba77046ce8c6c3cb329/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22fdd65e5971ec8f15368ba77046ce8c6c3cb329/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=22fdd65e5971ec8f15368ba77046ce8c6c3cb329", "patch": "@@ -1,3 +1,8 @@\n+2001-02-04  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tRemove V2 C++ library.\n+\t* configure.in: Remove --enable-libstdcxx_v3 support.\n+\n 2001-01-31  Bryce McKinlay  <bryce@albatross.co.nz>\n \n \t* include/demangle.h: Add prototype for java_demangle_v3."}, {"sha": "de8c60b4c0d74dd0d394a953a5bbcfec4f30c075", "filename": "configure.in", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22fdd65e5971ec8f15368ba77046ce8c6c3cb329/configure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22fdd65e5971ec8f15368ba77046ce8c6c3cb329/configure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.in?ref=22fdd65e5971ec8f15368ba77046ce8c6c3cb329", "patch": "@@ -48,15 +48,9 @@ if [ \"${enable_gdbgui}\" = \"yes\" ] ; then\n \thost_libs=\"${host_libs} libgui\"\n fi\n \n-# Set up configure/Makefile variables if libstdc++-v3 is to be built.\n-if [ \"${enable_libstdcxx_v3}\" = \"yes\" ] && test -d $srcdir/libstdc++-v3; then\n-        libstdcxx_version=\"target-libstdc++-v3\"\n-\t# Don't use libstdc++-v3's flags to configure/build itself.\n-\tlibstdcxx_flags='`case $$dir in libstdc++-v3) ;; *) cat $$r/$(TARGET_SUBDIR)/libstdc++-v3/src/libstdc++.INC 2>/dev/null || : ;; esac` -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs'\n-else\n-        libstdcxx_version=\"target-libio target-libstdc++\"\n-        libstdcxx_flags='-isystem $$s/libstdc++ -isystem $$s/libstdc++/std -isystem $$s/libstdc++/stl -isystem $$s/libio -isystem $$r/$(TARGET_SUBDIR)/libio -L$$r/$(TARGET_SUBDIR)/libstdc++'\n-fi\n+libstdcxx_version=\"target-libstdc++-v3\"\n+# Don't use libstdc++-v3's flags to configure/build itself.\n+libstdcxx_flags='`case $$dir in libstdc++-v3) ;; *) cat $$r/$(TARGET_SUBDIR)/libstdc++-v3/src/libstdc++.INC 2>/dev/null || : ;; esac` -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src -L$$r/$(TARGET_SUBDIR)/libstdc++-v3/src/.libs'\n \n # these tools are built for the host environment\n # Note, the powerpc-eabi build depends on sim occurring before gdb in order to"}, {"sha": "4a35cb0213745acbfbffdb4811f9f45a7013f023", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22fdd65e5971ec8f15368ba77046ce8c6c3cb329/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22fdd65e5971ec8f15368ba77046ce8c6c3cb329/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=22fdd65e5971ec8f15368ba77046ce8c6c3cb329", "patch": "@@ -1,3 +1,9 @@\n+2001-02-04  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* Makefile.in (site.exp): Always set HAVE_LIBSTDCXX_V3.\n+\t* configure.in: Remove --enable-libstdcxx_v3 support.\n+\t* configure: Regenerated.\n+\n Sun Feb  4 15:52:44 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* diagnostic.h (set_internal_error_function): Renamed."}, {"sha": "4e9edaab4c3dd2f6399f5d1cc56b9f9012136324", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22fdd65e5971ec8f15368ba77046ce8c6c3cb329/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22fdd65e5971ec8f15368ba77046ce8c6c3cb329/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=22fdd65e5971ec8f15368ba77046ce8c6c3cb329", "patch": "@@ -2740,7 +2740,7 @@ site.exp: ./config.status Makefile\n # CFLAGS is set even though it's empty to show we reserve the right to set it.\n \t@echo \"set CFLAGS \\\"\\\"\" >> ./tmp0\n \t@echo \"set CXXFLAGS \\\"-I$(objdir)/../$(target_subdir)libio -I\\$$srcdir/../libg++/src -I\\$$srcdir/../libio -I\\$$srcdir/../libstdc++ -I\\$$srcdir/../libstdc++/stl -L$(objdir)/../$(target_subdir)libg++ -L$(objdir)/../$(target_subdir)libstdc++\\\"\" >> ./tmp0\n-\t@echo \"set HAVE_LIBSTDCXX_V3 @HAVE_LIBSTDCXX_V3@\" >> ./tmp0\n+\t@echo \"set HAVE_LIBSTDCXX_V3 1\" >> ./tmp0\n # If newlib has been configured, we need to pass -B to gcc so it can find\n # newlib's crt0.o if it exists.  This will cause a \"path prefix not used\"\n # message if it doesn't, but the testsuite is supposed to ignore the message -"}, {"sha": "0e491b671e08eedf6d81c49a3e5da79556641af3", "filename": "gcc/configure", "status": "modified", "additions": 243, "deletions": 270, "changes": 513, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22fdd65e5971ec8f15368ba77046ce8c6c3cb329/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22fdd65e5971ec8f15368ba77046ce8c6c3cb329/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=22fdd65e5971ec8f15368ba77046ce8c6c3cb329", "patch": "@@ -25,9 +25,6 @@ ac_help=\"$ac_help\n   --with-elf              arrange to use ELF instead of host debug format.\"\n ac_help=\"$ac_help\n   --with-local-prefix=DIR specifies directory to put local include.\"\n-ac_help=\"$ac_help\n-  --enable-libstdcxx-v3 \n-\t\t\t  enable libstdc++-v3 for building and installation\"\n ac_help=\"$ac_help\n   --with-gxx-include-dir=DIR\n                           specifies directory to put g++ header files.\"\n@@ -615,7 +612,7 @@ copy=cp\n # - two terminals occur directly after each other\n # - the path contains an element with a dot in it\n echo $ac_n \"checking LIBRARY_PATH variable\"\"... $ac_c\" 1>&6\n-echo \"configure:619: checking LIBRARY_PATH variable\" >&5\n+echo \"configure:616: checking LIBRARY_PATH variable\" >&5\n case ${LIBRARY_PATH} in\n   [:\\;]* | *[:\\;] | *[:\\;][:\\;]* |  *[:\\;]. | .[:\\;]*| . | *[:\\;].[:\\;]* )\n     library_path_setting=\"contains current directory\"\n@@ -640,7 +637,7 @@ fi\n # - two terminals occur directly after each other\n # - the path contains an element with a dot in it\n echo $ac_n \"checking GCC_EXEC_PREFIX variable\"\"... $ac_c\" 1>&6\n-echo \"configure:644: checking GCC_EXEC_PREFIX variable\" >&5\n+echo \"configure:641: checking GCC_EXEC_PREFIX variable\" >&5\n case ${GCC_EXEC_PREFIX} in\n   [:\\;]* | *[:\\;] | *[:\\;][:\\;]* |  *[:\\;]. | .[:\\;]*| . | *[:\\;].[:\\;]* )\n     gcc_exec_prefix_setting=\"contains current directory\"\n@@ -754,28 +751,6 @@ if test x$local_prefix = x; then\n \tlocal_prefix=/usr/local\n fi\n \n-# Build a new-libstdc++ system (ie libstdc++-v3)\n-echo $ac_n \"checking for libstdc++ to install\"\"... $ac_c\" 1>&6\n-echo \"configure:760: checking for libstdc++ to install\" >&5\n-# Check whether --enable-libstdcxx-v3 or --disable-libstdcxx-v3 was given.\n-if test \"${enable_libstdcxx_v3+set}\" = set; then\n-  enableval=\"$enable_libstdcxx_v3\"\n-  enable_libstdcxx_v3=\"$enableval\"\n-else\n-  enable_libstdcxx_v3=yes\n-fi\n-\n-\n-if test x$enable_libstdcxx_v3 = xyes; then\n-  echo \"$ac_t\"\"v3\" 1>&6\n-  HAVE_LIBSTDCXX_V3=1\n-  ac_esn=1\n-else\n-  echo \"$ac_t\"\"v2\" 1>&6\n-  HAVE_LIBSTDCXX_V3=0\n-  ac_esn=0\n-fi\n-\n # Don't set gcc_gxx_include_dir to gxx_include_dir since that's only\n # passed in by the toplevel make and thus we'd get different behavior\n # depending on where we built the sources.\n@@ -1013,7 +988,7 @@ else { echo \"configure: error: can not run $ac_config_sub\" 1>&2; exit 1; }\n fi\n \n echo $ac_n \"checking host system type\"\"... $ac_c\" 1>&6\n-echo \"configure:1017: checking host system type\" >&5\n+echo \"configure:992: checking host system type\" >&5\n \n host_alias=$host\n case \"$host_alias\" in\n@@ -1034,7 +1009,7 @@ host_os=`echo $host | sed 's/^\\([^-]*\\)-\\([^-]*\\)-\\(.*\\)$/\\3/'`\n echo \"$ac_t\"\"$host\" 1>&6\n \n echo $ac_n \"checking target system type\"\"... $ac_c\" 1>&6\n-echo \"configure:1038: checking target system type\" >&5\n+echo \"configure:1013: checking target system type\" >&5\n \n target_alias=$target\n case \"$target_alias\" in\n@@ -1052,7 +1027,7 @@ target_os=`echo $target | sed 's/^\\([^-]*\\)-\\([^-]*\\)-\\(.*\\)$/\\3/'`\n echo \"$ac_t\"\"$target\" 1>&6\n \n echo $ac_n \"checking build system type\"\"... $ac_c\" 1>&6\n-echo \"configure:1056: checking build system type\" >&5\n+echo \"configure:1031: checking build system type\" >&5\n \n build_alias=$build\n case \"$build_alias\" in\n@@ -1079,7 +1054,7 @@ test \"$host_alias\" != \"$target_alias\" &&\n # Extract the first word of \"gcc\", so it can be a program name with args.\n set dummy gcc; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:1083: checking for $ac_word\" >&5\n+echo \"configure:1058: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_CC'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1109,7 +1084,7 @@ if test -z \"$CC\"; then\n   # Extract the first word of \"cc\", so it can be a program name with args.\n set dummy cc; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:1113: checking for $ac_word\" >&5\n+echo \"configure:1088: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_CC'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1160,7 +1135,7 @@ fi\n       # Extract the first word of \"cl\", so it can be a program name with args.\n set dummy cl; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:1164: checking for $ac_word\" >&5\n+echo \"configure:1139: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_CC'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1192,7 +1167,7 @@ fi\n fi\n \n echo $ac_n \"checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works\"\"... $ac_c\" 1>&6\n-echo \"configure:1196: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works\" >&5\n+echo \"configure:1171: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works\" >&5\n \n ac_ext=c\n # CFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.\n@@ -1203,12 +1178,12 @@ cross_compiling=$ac_cv_prog_cc_cross\n \n cat > conftest.$ac_ext << EOF\n \n-#line 1207 \"configure\"\n+#line 1182 \"configure\"\n #include \"confdefs.h\"\n \n main(){return(0);}\n EOF\n-if { (eval echo configure:1212: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:1187: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   ac_cv_prog_cc_works=yes\n   # If we can't run a trivial program, we are probably using a cross compiler.\n   if (./conftest; exit) 2>/dev/null; then\n@@ -1234,12 +1209,12 @@ if test $ac_cv_prog_cc_works = no; then\n   { echo \"configure: error: installation or configuration problem: C compiler cannot create executables.\" 1>&2; exit 1; }\n fi\n echo $ac_n \"checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler\"\"... $ac_c\" 1>&6\n-echo \"configure:1238: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler\" >&5\n+echo \"configure:1213: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler\" >&5\n echo \"$ac_t\"\"$ac_cv_prog_cc_cross\" 1>&6\n cross_compiling=$ac_cv_prog_cc_cross\n \n echo $ac_n \"checking whether we are using GNU C\"\"... $ac_c\" 1>&6\n-echo \"configure:1243: checking whether we are using GNU C\" >&5\n+echo \"configure:1218: checking whether we are using GNU C\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_gcc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1248,7 +1223,7 @@ else\n   yes;\n #endif\n EOF\n-if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:1252: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then\n+if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:1227: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then\n   ac_cv_prog_gcc=yes\n else\n   ac_cv_prog_gcc=no\n@@ -1267,7 +1242,7 @@ ac_test_CFLAGS=\"${CFLAGS+set}\"\n ac_save_CFLAGS=\"$CFLAGS\"\n CFLAGS=\n echo $ac_n \"checking whether ${CC-cc} accepts -g\"\"... $ac_c\" 1>&6\n-echo \"configure:1271: checking whether ${CC-cc} accepts -g\" >&5\n+echo \"configure:1246: checking whether ${CC-cc} accepts -g\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_cc_g'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1300,10 +1275,10 @@ fi\n \n if test \"x$CC\" != xcc; then\n   echo $ac_n \"checking whether $CC and cc understand -c and -o together\"\"... $ac_c\" 1>&6\n-echo \"configure:1304: checking whether $CC and cc understand -c and -o together\" >&5\n+echo \"configure:1279: checking whether $CC and cc understand -c and -o together\" >&5\n else\n   echo $ac_n \"checking whether cc understands -c and -o together\"\"... $ac_c\" 1>&6\n-echo \"configure:1307: checking whether cc understands -c and -o together\" >&5\n+echo \"configure:1282: checking whether cc understands -c and -o together\" >&5\n fi\n set dummy $CC; ac_cc=\"`echo $2 |\n \t\t       sed -e 's/[^a-zA-Z0-9_]/_/g' -e 's/^[0-9]/_/'`\"\n@@ -1315,16 +1290,16 @@ else\n # We do the test twice because some compilers refuse to overwrite an\n # existing .o file with -o, though they will create one.\n ac_try='${CC-cc} -c conftest.c -o conftest.o 1>&5'\n-if { (eval echo configure:1319: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; } &&\n-   test -f conftest.o && { (eval echo configure:1320: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; };\n+if { (eval echo configure:1294: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; } &&\n+   test -f conftest.o && { (eval echo configure:1295: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; };\n then\n   eval ac_cv_prog_cc_${ac_cc}_c_o=yes\n   if test \"x$CC\" != xcc; then\n     # Test first that cc exists at all.\n-    if { ac_try='cc -c conftest.c 1>&5'; { (eval echo configure:1325: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }; }; then\n+    if { ac_try='cc -c conftest.c 1>&5'; { (eval echo configure:1300: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }; }; then\n       ac_try='cc -c conftest.c -o conftest.o 1>&5'\n-      if { (eval echo configure:1327: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; } &&\n-\t test -f conftest.o && { (eval echo configure:1328: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; };\n+      if { (eval echo configure:1302: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; } &&\n+\t test -f conftest.o && { (eval echo configure:1303: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; };\n       then\n         # cc works too.\n         :\n@@ -1360,15 +1335,15 @@ fi\n \n \n echo $ac_n \"checking for long double\"\"... $ac_c\" 1>&6\n-echo \"configure:1364: checking for long double\" >&5\n+echo \"configure:1339: checking for long double\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_c_long_double'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$GCC\" = yes; then\n   gcc_cv_c_long_double=yes\n else\n cat > conftest.$ac_ext <<EOF\n-#line 1372 \"configure\"\n+#line 1347 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n@@ -1378,7 +1353,7 @@ long double foo = 0.0;\n switch (0) case 0: case (sizeof(long double) >= sizeof(double)):;\n ; return 0; }\n EOF\n-if { (eval echo configure:1382: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1357: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   gcc_cv_c_long_double=yes\n else\n@@ -1401,21 +1376,21 @@ fi\n \n \n echo $ac_n \"checking whether ${CC-cc} accepts -Wno-long-long\"\"... $ac_c\" 1>&6\n-echo \"configure:1405: checking whether ${CC-cc} accepts -Wno-long-long\" >&5\n+echo \"configure:1380: checking whether ${CC-cc} accepts -Wno-long-long\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_cc_no_long_long'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   save_CFLAGS=\"$CFLAGS\"\n CFLAGS=\"-Wno-long-long\"\n cat > conftest.$ac_ext <<EOF\n-#line 1412 \"configure\"\n+#line 1387 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n \n ; return 0; }\n EOF\n-if { (eval echo configure:1419: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1394: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_prog_cc_no_long_long=yes\n else\n@@ -1459,7 +1434,7 @@ esac\n \n \n echo $ac_n \"checking whether ${MAKE-make} sets \\${MAKE}\"\"... $ac_c\" 1>&6\n-echo \"configure:1463: checking whether ${MAKE-make} sets \\${MAKE}\" >&5\n+echo \"configure:1438: checking whether ${MAKE-make} sets \\${MAKE}\" >&5\n set dummy ${MAKE-make}; ac_make=`echo \"$2\" | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_prog_make_${ac_make}_set'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n@@ -1487,7 +1462,7 @@ fi\n \n \n echo $ac_n \"checking whether a default assembler was specified\"\"... $ac_c\" 1>&6\n-echo \"configure:1491: checking whether a default assembler was specified\" >&5\n+echo \"configure:1466: checking whether a default assembler was specified\" >&5\n if test x\"${DEFAULT_ASSEMBLER+set}\" = x\"set\"; then\n     if test x\"$gas_flag\" = x\"no\"; then\n     \techo \"$ac_t\"\"yes ($DEFAULT_ASSEMBLER)\" 1>&6\n@@ -1499,7 +1474,7 @@ else\n fi\n \n echo $ac_n \"checking whether a default linker was specified\"\"... $ac_c\" 1>&6\n-echo \"configure:1503: checking whether a default linker was specified\" >&5\n+echo \"configure:1478: checking whether a default linker was specified\" >&5\n if test x\"${DEFAULT_LINKER+set}\" = x\"set\"; then\n     if test x\"$gnu_ld_flag\" = x\"no\"; then\n \techo \"$ac_t\"\"yes ($DEFAULT_LINKER)\" 1>&6\n@@ -1511,12 +1486,12 @@ else\n fi\n \n echo $ac_n \"checking for GNU C library\"\"... $ac_c\" 1>&6\n-echo \"configure:1515: checking for GNU C library\" >&5\n+echo \"configure:1490: checking for GNU C library\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_glibc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1520 \"configure\"\n+#line 1495 \"configure\"\n #include \"confdefs.h\"\n #include <features.h>\n int main() {\n@@ -1526,7 +1501,7 @@ int main() {\n #endif\n ; return 0; }\n EOF\n-if { (eval echo configure:1530: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1505: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   gcc_cv_glibc=yes\n else\n@@ -1547,21 +1522,21 @@ EOF\n fi\n \n echo $ac_n \"checking for inline\"\"... $ac_c\" 1>&6\n-echo \"configure:1551: checking for inline\" >&5\n+echo \"configure:1526: checking for inline\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_c_inline'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_cv_c_inline=no\n for ac_kw in inline __inline__ __inline; do\n   cat > conftest.$ac_ext <<EOF\n-#line 1558 \"configure\"\n+#line 1533 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n } $ac_kw foo() {\n ; return 0; }\n EOF\n-if { (eval echo configure:1565: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1540: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_c_inline=$ac_kw; break\n else\n@@ -1588,12 +1563,12 @@ esac\n \n \n # Find some useful tools\n-for ac_prog in mawk gawk nawk awk\n+for ac_prog in gawk mawk nawk awk\n do\n # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:1597: checking for $ac_word\" >&5\n+echo \"configure:1572: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_AWK'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1623,7 +1598,7 @@ test -n \"$AWK\" && break\n done\n \n echo $ac_n \"checking whether ln works\"\"... $ac_c\" 1>&6\n-echo \"configure:1627: checking whether ln works\" >&5\n+echo \"configure:1602: checking whether ln works\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_prog_LN'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1655,7 +1630,7 @@ else\n fi\n \n echo $ac_n \"checking whether ln -s works\"\"... $ac_c\" 1>&6\n-echo \"configure:1659: checking whether ln -s works\" >&5\n+echo \"configure:1634: checking whether ln -s works\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_prog_LN_S'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1687,19 +1662,19 @@ else\n fi\n \n echo $ac_n \"checking for volatile\"\"... $ac_c\" 1>&6\n-echo \"configure:1691: checking for volatile\" >&5\n+echo \"configure:1666: checking for volatile\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_c_volatile'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1696 \"configure\"\n+#line 1671 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n volatile int foo;\n ; return 0; }\n EOF\n-if { (eval echo configure:1703: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1678: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   gcc_cv_c_volatile=yes\n else\n@@ -1722,7 +1697,7 @@ fi\n # Extract the first word of \"ranlib\", so it can be a program name with args.\n set dummy ranlib; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:1726: checking for $ac_word\" >&5\n+echo \"configure:1701: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_RANLIB'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -1760,7 +1735,7 @@ fi\n # SVR4 /usr/ucb/install, which tries to use the nonexistent group \"staff\"\n # ./install, which can be erroneously created by make from ./install.sh.\n echo $ac_n \"checking for a BSD compatible install\"\"... $ac_c\" 1>&6\n-echo \"configure:1764: checking for a BSD compatible install\" >&5\n+echo \"configure:1739: checking for a BSD compatible install\" >&5\n if test -z \"$INSTALL\"; then\n if eval \"test \\\"`echo '$''{'ac_cv_path_install'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n@@ -1811,7 +1786,7 @@ test -z \"$INSTALL_DATA\" && INSTALL_DATA='${INSTALL} -m 644'\n \n \n echo $ac_n \"checking how to run the C preprocessor\"\"... $ac_c\" 1>&6\n-echo \"configure:1815: checking how to run the C preprocessor\" >&5\n+echo \"configure:1790: checking how to run the C preprocessor\" >&5\n # On Suns, sometimes $CPP names a directory.\n if test -n \"$CPP\" && test -d \"$CPP\"; then\n   CPP=\n@@ -1826,13 +1801,13 @@ else\n   # On the NeXT, cc -E runs the code through the compiler's parser,\n   # not just through cpp.\n   cat > conftest.$ac_ext <<EOF\n-#line 1830 \"configure\"\n+#line 1805 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:1836: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:1811: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   :\n@@ -1843,13 +1818,13 @@ else\n   rm -rf conftest*\n   CPP=\"${CC-cc} -E -traditional-cpp\"\n   cat > conftest.$ac_ext <<EOF\n-#line 1847 \"configure\"\n+#line 1822 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:1853: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:1828: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   :\n@@ -1860,13 +1835,13 @@ else\n   rm -rf conftest*\n   CPP=\"${CC-cc} -nologo -E\"\n   cat > conftest.$ac_ext <<EOF\n-#line 1864 \"configure\"\n+#line 1839 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:1870: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:1845: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   :\n@@ -1891,20 +1866,20 @@ fi\n echo \"$ac_t\"\"$CPP\" 1>&6\n \n echo $ac_n \"checking for ANSI C header files\"\"... $ac_c\" 1>&6\n-echo \"configure:1895: checking for ANSI C header files\" >&5\n+echo \"configure:1870: checking for ANSI C header files\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_stdc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1900 \"configure\"\n+#line 1875 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n #include <stdarg.h>\n #include <string.h>\n #include <float.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:1908: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:1883: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -1921,7 +1896,7 @@ rm -f conftest*\n if test $ac_cv_header_stdc = yes; then\n   # SunOS 4.x string.h does not declare mem*, contrary to ANSI.\n cat > conftest.$ac_ext <<EOF\n-#line 1925 \"configure\"\n+#line 1900 \"configure\"\n #include \"confdefs.h\"\n #include <string.h>\n EOF\n@@ -1939,7 +1914,7 @@ fi\n if test $ac_cv_header_stdc = yes; then\n   # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.\n cat > conftest.$ac_ext <<EOF\n-#line 1943 \"configure\"\n+#line 1918 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n EOF\n@@ -1960,7 +1935,7 @@ if test \"$cross_compiling\" = yes; then\n   :\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 1964 \"configure\"\n+#line 1939 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n #define ISLOWER(c) ('a' <= (c) && (c) <= 'z')\n@@ -1971,7 +1946,7 @@ if (XOR (islower (i), ISLOWER (i)) || toupper (i) != TOUPPER (i)) exit(2);\n exit (0); }\n \n EOF\n-if { (eval echo configure:1975: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:1950: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   :\n else\n@@ -1995,12 +1970,12 @@ EOF\n fi\n \n echo $ac_n \"checking whether time.h and sys/time.h may both be included\"\"... $ac_c\" 1>&6\n-echo \"configure:1999: checking whether time.h and sys/time.h may both be included\" >&5\n+echo \"configure:1974: checking whether time.h and sys/time.h may both be included\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_time'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2004 \"configure\"\n+#line 1979 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <sys/time.h>\n@@ -2009,7 +1984,7 @@ int main() {\n struct tm *tp;\n ; return 0; }\n EOF\n-if { (eval echo configure:2013: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:1988: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_header_time=yes\n else\n@@ -2030,20 +2005,20 @@ EOF\n fi\n \n echo $ac_n \"checking whether string.h and strings.h may both be included\"\"... $ac_c\" 1>&6\n-echo \"configure:2034: checking whether string.h and strings.h may both be included\" >&5\n+echo \"configure:2009: checking whether string.h and strings.h may both be included\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_header_string'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2039 \"configure\"\n+#line 2014 \"configure\"\n #include \"confdefs.h\"\n #include <string.h>\n #include <strings.h>\n int main() {\n \n ; return 0; }\n EOF\n-if { (eval echo configure:2047: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:2022: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   gcc_cv_header_string=yes\n else\n@@ -2064,12 +2039,12 @@ EOF\n fi\n \n echo $ac_n \"checking for sys/wait.h that is POSIX.1 compatible\"\"... $ac_c\" 1>&6\n-echo \"configure:2068: checking for sys/wait.h that is POSIX.1 compatible\" >&5\n+echo \"configure:2043: checking for sys/wait.h that is POSIX.1 compatible\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_sys_wait_h'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2073 \"configure\"\n+#line 2048 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <sys/wait.h>\n@@ -2085,7 +2060,7 @@ wait (&s);\n s = WIFEXITED (s) ? WEXITSTATUS (s) : 1;\n ; return 0; }\n EOF\n-if { (eval echo configure:2089: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:2064: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_header_sys_wait_h=yes\n else\n@@ -2112,17 +2087,17 @@ for ac_hdr in limits.h stddef.h string.h strings.h stdlib.h time.h \\\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:2116: checking for $ac_hdr\" >&5\n+echo \"configure:2091: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2121 \"configure\"\n+#line 2096 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:2126: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:2101: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -2152,17 +2127,17 @@ done\n # Check for thread headers.\n ac_safe=`echo \"thread.h\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for thread.h\"\"... $ac_c\" 1>&6\n-echo \"configure:2156: checking for thread.h\" >&5\n+echo \"configure:2131: checking for thread.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2161 \"configure\"\n+#line 2136 \"configure\"\n #include \"confdefs.h\"\n #include <thread.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:2166: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:2141: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -2186,17 +2161,17 @@ fi\n \n ac_safe=`echo \"pthread.h\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for pthread.h\"\"... $ac_c\" 1>&6\n-echo \"configure:2190: checking for pthread.h\" >&5\n+echo \"configure:2165: checking for pthread.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2195 \"configure\"\n+#line 2170 \"configure\"\n #include \"confdefs.h\"\n #include <pthread.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:2200: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:2175: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -2223,7 +2198,7 @@ fi\n # Extract the first word of \"gnatbind\", so it can be a program name with args.\n set dummy gnatbind; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:2227: checking for $ac_word\" >&5\n+echo \"configure:2202: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_gnat'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -2255,7 +2230,7 @@ fi\n # Extract the first word of \"mktemp\", so it can be a program name with args.\n set dummy mktemp; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:2259: checking for $ac_word\" >&5\n+echo \"configure:2234: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_have_mktemp_command'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -2294,7 +2269,7 @@ else\n   # Extract the first word of \"makeinfo\", so it can be a program name with args.\n set dummy makeinfo; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:2298: checking for $ac_word\" >&5\n+echo \"configure:2273: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_MAKEINFO'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -2323,13 +2298,13 @@ fi\n if test -n \"$MAKEINFO\"; then\n   # Found it, now check the version.\n   echo $ac_n \"checking for modern makeinfo\"\"... $ac_c\" 1>&6\n-echo \"configure:2327: checking for modern makeinfo\" >&5\n+echo \"configure:2302: checking for modern makeinfo\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_prog_makeinfo_modern'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n     ac_prog_version=`$MAKEINFO --version 2>&1 |\n                    sed -n 's/^.*GNU texinfo.* \\([0-9][0-9.]*\\).*$/\\1/p'`\n-  echo \"configure:2333: version of makeinfo is $ac_prog_version\" >&5\n+  echo \"configure:2308: version of makeinfo is $ac_prog_version\" >&5\n   case $ac_prog_version in\n     '')     gcc_cv_prog_makeinfo_modern=no;;\n     4.*)\n@@ -2357,7 +2332,7 @@ fi\n \n # Is pod2man recent enough to regenerate manpages?\n echo $ac_n \"checking for recent Pod::Man\"\"... $ac_c\" 1>&6\n-echo \"configure:2361: checking for recent Pod::Man\" >&5\n+echo \"configure:2336: checking for recent Pod::Man\" >&5\n if perl -e 'use 1.10 Pod::Man' >/dev/null 2>&1; then\n   echo \"$ac_t\"\"yes\" 1>&6\n   GENERATED_MANPAGES=generated-manpages\t\t\n@@ -2373,7 +2348,7 @@ else\n   # Extract the first word of \"flex\", so it can be a program name with args.\n set dummy flex; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:2377: checking for $ac_word\" >&5\n+echo \"configure:2352: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_FLEX'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -2410,7 +2385,7 @@ else\n   # Extract the first word of \"bison\", so it can be a program name with args.\n set dummy bison; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:2414: checking for $ac_word\" >&5\n+echo \"configure:2389: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_prog_BISON'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -2444,12 +2419,12 @@ fi\n \n \n echo $ac_n \"checking for preprocessor stringizing operator\"\"... $ac_c\" 1>&6\n-echo \"configure:2448: checking for preprocessor stringizing operator\" >&5\n+echo \"configure:2423: checking for preprocessor stringizing operator\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_c_stringize'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2453 \"configure\"\n+#line 2428 \"configure\"\n #include \"confdefs.h\"\n \n #define x(y) #y\n@@ -2482,20 +2457,20 @@ echo \"$ac_t\"\"${ac_cv_c_stringize}\" 1>&6\n # Use <inttypes.h> only if it exists,\n # doesn't clash with <sys/types.h>, and declares intmax_t.\n echo $ac_n \"checking for inttypes.h\"\"... $ac_c\" 1>&6\n-echo \"configure:2486: checking for inttypes.h\" >&5\n+echo \"configure:2461: checking for inttypes.h\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_header_inttypes_h'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2491 \"configure\"\n+#line 2466 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <inttypes.h>\n int main() {\n intmax_t i = -1;\n ; return 0; }\n EOF\n-if { (eval echo configure:2499: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:2474: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   gcc_cv_header_inttypes_h=yes\n else\n@@ -2520,15 +2495,15 @@ fi\n # be either signed or unsigned.\n #\n echo $ac_n \"checking for unsigned enumerated bitfields\"\"... $ac_c\" 1>&6\n-echo \"configure:2524: checking for unsigned enumerated bitfields\" >&5\n+echo \"configure:2499: checking for unsigned enumerated bitfields\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_enum_bf_unsigned'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   gcc_cv_enum_bf_unsigned=yes\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2532 \"configure\"\n+#line 2507 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n enum t { BLAH = 128 } ;\n@@ -2541,7 +2516,7 @@ int main(void)\n \n }\n EOF\n-if { (eval echo configure:2545: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:2520: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   gcc_cv_enum_bf_unsigned=yes\n else\n@@ -2569,12 +2544,12 @@ for ac_func in strtoul bsearch putenv popen bcopy \\\n \tfputs_unlocked getrusage iconv nl_langinfo\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:2573: checking for $ac_func\" >&5\n+echo \"configure:2548: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2578 \"configure\"\n+#line 2553 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -2597,7 +2572,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:2601: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:2576: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -2623,12 +2598,12 @@ done\n \n \n echo $ac_n \"checking for ssize_t\"\"... $ac_c\" 1>&6\n-echo \"configure:2627: checking for ssize_t\" >&5\n+echo \"configure:2602: checking for ssize_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_ssize_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2632 \"configure\"\n+#line 2607 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n@@ -2659,12 +2634,12 @@ fi\n # Try to determine the array type of the second argument of getgroups\n # for the target system (int or gid_t).\n echo $ac_n \"checking for uid_t in sys/types.h\"\"... $ac_c\" 1>&6\n-echo \"configure:2663: checking for uid_t in sys/types.h\" >&5\n+echo \"configure:2638: checking for uid_t in sys/types.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_uid_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2668 \"configure\"\n+#line 2643 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n EOF\n@@ -2693,15 +2668,15 @@ EOF\n fi\n \n echo $ac_n \"checking type of array argument to getgroups\"\"... $ac_c\" 1>&6\n-echo \"configure:2697: checking type of array argument to getgroups\" >&5\n+echo \"configure:2672: checking type of array argument to getgroups\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_getgroups'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   ac_cv_type_getgroups=cross\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2705 \"configure\"\n+#line 2680 \"configure\"\n #include \"confdefs.h\"\n \n /* Thanks to Mike Rendell for this test.  */\n@@ -2726,7 +2701,7 @@ main()\n }\n \n EOF\n-if { (eval echo configure:2730: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:2705: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n     ac_cv_type_getgroups=gid_t\n else\n@@ -2740,7 +2715,7 @@ fi\n \n if test $ac_cv_type_getgroups = cross; then\n         cat > conftest.$ac_ext <<EOF\n-#line 2744 \"configure\"\n+#line 2719 \"configure\"\n #include \"confdefs.h\"\n #include <unistd.h>\n EOF\n@@ -2781,12 +2756,12 @@ fi\n \n \n echo $ac_n \"checking for vprintf\"\"... $ac_c\" 1>&6\n-echo \"configure:2785: checking for vprintf\" >&5\n+echo \"configure:2760: checking for vprintf\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_vprintf'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2790 \"configure\"\n+#line 2765 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char vprintf(); below.  */\n@@ -2809,7 +2784,7 @@ vprintf();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:2813: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:2788: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_vprintf=yes\"\n else\n@@ -2833,12 +2808,12 @@ fi\n \n if test \"$ac_cv_func_vprintf\" != yes; then\n echo $ac_n \"checking for _doprnt\"\"... $ac_c\" 1>&6\n-echo \"configure:2837: checking for _doprnt\" >&5\n+echo \"configure:2812: checking for _doprnt\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func__doprnt'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2842 \"configure\"\n+#line 2817 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char _doprnt(); below.  */\n@@ -2861,7 +2836,7 @@ _doprnt();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:2865: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:2840: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func__doprnt=yes\"\n else\n@@ -2899,12 +2874,12 @@ fi\n for ac_func in strstr\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:2903: checking for $ac_func\" >&5\n+echo \"configure:2878: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2908 \"configure\"\n+#line 2883 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -2927,7 +2902,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:2931: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:2906: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -2954,15 +2929,15 @@ done\n \n    \n echo $ac_n \"checking whether the printf functions support %p\"\"... $ac_c\" 1>&6\n-echo \"configure:2958: checking whether the printf functions support %p\" >&5\n+echo \"configure:2933: checking whether the printf functions support %p\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_func_printf_ptr'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   gcc_cv_func_printf_ptr=no\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2966 \"configure\"\n+#line 2941 \"configure\"\n #include \"confdefs.h\"\n #include <stdio.h>\n \n@@ -2975,7 +2950,7 @@ int main()\n   return (p != q);\n }\n EOF\n-if { (eval echo configure:2979: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:2954: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   gcc_cv_func_printf_ptr=yes\n else\n@@ -3007,12 +2982,12 @@ case \"${host}\" in\n   ;;\n esac\n echo $ac_n \"checking for pid_t\"\"... $ac_c\" 1>&6\n-echo \"configure:3011: checking for pid_t\" >&5\n+echo \"configure:2986: checking for pid_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_pid_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3016 \"configure\"\n+#line 2991 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n@@ -3041,17 +3016,17 @@ fi\n \n ac_safe=`echo \"vfork.h\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for vfork.h\"\"... $ac_c\" 1>&6\n-echo \"configure:3045: checking for vfork.h\" >&5\n+echo \"configure:3020: checking for vfork.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3050 \"configure\"\n+#line 3025 \"configure\"\n #include \"confdefs.h\"\n #include <vfork.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:3055: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:3030: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -3076,18 +3051,18 @@ else\n fi\n \n echo $ac_n \"checking for working vfork\"\"... $ac_c\" 1>&6\n-echo \"configure:3080: checking for working vfork\" >&5\n+echo \"configure:3055: checking for working vfork\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_vfork_works'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   echo $ac_n \"checking for vfork\"\"... $ac_c\" 1>&6\n-echo \"configure:3086: checking for vfork\" >&5\n+echo \"configure:3061: checking for vfork\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_vfork'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3091 \"configure\"\n+#line 3066 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char vfork(); below.  */\n@@ -3110,7 +3085,7 @@ vfork();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3114: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3089: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_vfork=yes\"\n else\n@@ -3132,7 +3107,7 @@ fi\n ac_cv_func_vfork_works=$ac_cv_func_vfork\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3136 \"configure\"\n+#line 3111 \"configure\"\n #include \"confdefs.h\"\n /* Thanks to Paul Eggert for this test.  */\n #include <stdio.h>\n@@ -3227,7 +3202,7 @@ main() {\n   }\n }\n EOF\n-if { (eval echo configure:3231: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:3206: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_func_vfork_works=yes\n else\n@@ -3252,12 +3227,12 @@ fi\n for ac_func in getpagesize\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:3256: checking for $ac_func\" >&5\n+echo \"configure:3231: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3261 \"configure\"\n+#line 3236 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -3280,7 +3255,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3284: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3259: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -3551,7 +3526,7 @@ main ()\n EOF\n \n echo $ac_n \"checking for working mmap from /dev/zero\"\"... $ac_c\" 1>&6\n-echo \"configure:3555: checking for working mmap from /dev/zero\" >&5\n+echo \"configure:3530: checking for working mmap from /dev/zero\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_mmap_dev_zero'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -3567,11 +3542,11 @@ else\n   esac\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3571 \"configure\"\n+#line 3546 \"configure\"\n #include \"confdefs.h\"\n #include \"ct-mmap.inc\"\n EOF\n-if { (eval echo configure:3575: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:3550: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_func_mmap_dev_zero=yes\n else\n@@ -3598,7 +3573,7 @@ EOF\n fi\n \n echo $ac_n \"checking for working mmap with MAP_ANON(YMOUS)\"\"... $ac_c\" 1>&6\n-echo \"configure:3602: checking for working mmap with MAP_ANON(YMOUS)\" >&5\n+echo \"configure:3577: checking for working mmap with MAP_ANON(YMOUS)\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_mmap_anon'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -3608,12 +3583,12 @@ else\n  ac_cv_func_mmap_anon=no\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3612 \"configure\"\n+#line 3587 \"configure\"\n #include \"confdefs.h\"\n #define USE_MAP_ANON\n #include \"ct-mmap.inc\"\n EOF\n-if { (eval echo configure:3617: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:3592: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_func_mmap_anon=yes\n else\n@@ -3641,7 +3616,7 @@ fi\n rm -f ct-mmap.inc\n \n echo $ac_n \"checking for working mmap of a file\"\"... $ac_c\" 1>&6\n-echo \"configure:3645: checking for working mmap of a file\" >&5\n+echo \"configure:3620: checking for working mmap of a file\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_mmap_file'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -3656,7 +3631,7 @@ if test \"$cross_compiling\" = yes; then\n   ac_cv_func_mmap_file=no\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3660 \"configure\"\n+#line 3635 \"configure\"\n #include \"confdefs.h\"\n \n /* Test by Zack Weinberg.  Modified from MMAP_ANYWHERE test by\n@@ -3693,7 +3668,7 @@ int main()\n   exit(0);\n }\n EOF\n-if { (eval echo configure:3697: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:3672: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_func_mmap_file=yes\n else\n@@ -3726,12 +3701,12 @@ for ac_func in bcopy \\\n do\n   ac_tr_decl=HAVE_DECL_`echo $ac_func | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n echo $ac_n \"checking whether $ac_func is declared\"\"... $ac_c\" 1>&6\n-echo \"configure:3730: checking whether $ac_func is declared\" >&5\n+echo \"configure:3705: checking whether $ac_func is declared\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_have_decl_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3735 \"configure\"\n+#line 3710 \"configure\"\n #include \"confdefs.h\"\n #include \"gansidecl.h\"\n #include \"system.h\"\n@@ -3742,7 +3717,7 @@ char *(*pfn) = (char *(*)) $ac_func ;\n #endif\n ; return 0; }\n EOF\n-if { (eval echo configure:3746: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3721: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   eval \"gcc_cv_have_decl_$ac_func=yes\"\n else\n@@ -3835,12 +3810,12 @@ for ac_func in getrlimit setrlimit getrusage\n do\n   ac_tr_decl=HAVE_DECL_`echo $ac_func | tr 'abcdefghijklmnopqrstuvwxyz' 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'`\n echo $ac_n \"checking whether $ac_func is declared\"\"... $ac_c\" 1>&6\n-echo \"configure:3839: checking whether $ac_func is declared\" >&5\n+echo \"configure:3814: checking whether $ac_func is declared\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_have_decl_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3844 \"configure\"\n+#line 3819 \"configure\"\n #include \"confdefs.h\"\n #include \"gansidecl.h\"\n #include \"system.h\"\n@@ -3855,7 +3830,7 @@ char *(*pfn) = (char *(*)) $ac_func ;\n #endif\n ; return 0; }\n EOF\n-if { (eval echo configure:3859: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3834: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   eval \"gcc_cv_have_decl_$ac_func=yes\"\n else\n@@ -3898,12 +3873,12 @@ CFLAGS=\"$saved_CFLAGS\"\n \n # mkdir takes a single argument on some systems. \n echo $ac_n \"checking if mkdir takes one argument\"\"... $ac_c\" 1>&6\n-echo \"configure:3902: checking if mkdir takes one argument\" >&5\n+echo \"configure:3877: checking if mkdir takes one argument\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_mkdir_takes_one_arg'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3907 \"configure\"\n+#line 3882 \"configure\"\n #include \"confdefs.h\"\n \n #include <sys/types.h>\n@@ -3920,7 +3895,7 @@ int main() {\n mkdir (\"foo\", 0);\n ; return 0; }\n EOF\n-if { (eval echo configure:3924: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3899: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   gcc_cv_mkdir_takes_one_arg=no\n else\n@@ -4231,15 +4206,15 @@ fi\n \n \n         echo $ac_n \"checking for strerror in -lcposix\"\"... $ac_c\" 1>&6\n-echo \"configure:4235: checking for strerror in -lcposix\" >&5\n+echo \"configure:4210: checking for strerror in -lcposix\" >&5\n ac_lib_var=`echo cposix'_'strerror | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lcposix  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 4243 \"configure\"\n+#line 4218 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -4250,7 +4225,7 @@ int main() {\n strerror()\n ; return 0; }\n EOF\n-if { (eval echo configure:4254: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4229: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -4273,12 +4248,12 @@ fi\n   \n \n echo $ac_n \"checking for working const\"\"... $ac_c\" 1>&6\n-echo \"configure:4277: checking for working const\" >&5\n+echo \"configure:4252: checking for working const\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_c_const'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4282 \"configure\"\n+#line 4257 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n@@ -4327,7 +4302,7 @@ ccp = (char const *const *) p;\n \n ; return 0; }\n EOF\n-if { (eval echo configure:4331: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:4306: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_c_const=yes\n else\n@@ -4348,12 +4323,12 @@ EOF\n fi\n \n echo $ac_n \"checking for off_t\"\"... $ac_c\" 1>&6\n-echo \"configure:4352: checking for off_t\" >&5\n+echo \"configure:4327: checking for off_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_off_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4357 \"configure\"\n+#line 4332 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n@@ -4381,12 +4356,12 @@ EOF\n fi\n \n echo $ac_n \"checking for size_t\"\"... $ac_c\" 1>&6\n-echo \"configure:4385: checking for size_t\" >&5\n+echo \"configure:4360: checking for size_t\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_type_size_t'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4390 \"configure\"\n+#line 4365 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #if STDC_HEADERS\n@@ -4416,19 +4391,19 @@ fi\n # The Ultrix 4.2 mips builtin alloca declared by alloca.h only works\n # for constant arguments.  Useless!\n echo $ac_n \"checking for working alloca.h\"\"... $ac_c\" 1>&6\n-echo \"configure:4420: checking for working alloca.h\" >&5\n+echo \"configure:4395: checking for working alloca.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_alloca_h'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4425 \"configure\"\n+#line 4400 \"configure\"\n #include \"confdefs.h\"\n #include <alloca.h>\n int main() {\n char *p = alloca(2 * sizeof(int));\n ; return 0; }\n EOF\n-if { (eval echo configure:4432: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4407: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_cv_header_alloca_h=yes\n else\n@@ -4449,12 +4424,12 @@ EOF\n fi\n \n echo $ac_n \"checking for alloca\"\"... $ac_c\" 1>&6\n-echo \"configure:4453: checking for alloca\" >&5\n+echo \"configure:4428: checking for alloca\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_alloca_works'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4458 \"configure\"\n+#line 4433 \"configure\"\n #include \"confdefs.h\"\n \n #ifdef __GNUC__\n@@ -4482,7 +4457,7 @@ int main() {\n char *p = (char *) alloca(1);\n ; return 0; }\n EOF\n-if { (eval echo configure:4486: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4461: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_cv_func_alloca_works=yes\n else\n@@ -4514,12 +4489,12 @@ EOF\n \n \n echo $ac_n \"checking whether alloca needs Cray hooks\"\"... $ac_c\" 1>&6\n-echo \"configure:4518: checking whether alloca needs Cray hooks\" >&5\n+echo \"configure:4493: checking whether alloca needs Cray hooks\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_os_cray'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4523 \"configure\"\n+#line 4498 \"configure\"\n #include \"confdefs.h\"\n #if defined(CRAY) && ! defined(CRAY2)\n webecray\n@@ -4544,12 +4519,12 @@ echo \"$ac_t\"\"$ac_cv_os_cray\" 1>&6\n if test $ac_cv_os_cray = yes; then\n for ac_func in _getb67 GETB67 getb67; do\n   echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:4548: checking for $ac_func\" >&5\n+echo \"configure:4523: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4553 \"configure\"\n+#line 4528 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -4572,7 +4547,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:4576: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4551: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -4599,15 +4574,15 @@ done\n fi\n \n echo $ac_n \"checking stack direction for C alloca\"\"... $ac_c\" 1>&6\n-echo \"configure:4603: checking stack direction for C alloca\" >&5\n+echo \"configure:4578: checking stack direction for C alloca\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_c_stack_direction'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   ac_cv_c_stack_direction=0\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4611 \"configure\"\n+#line 4586 \"configure\"\n #include \"confdefs.h\"\n find_stack_direction ()\n {\n@@ -4626,7 +4601,7 @@ main ()\n   exit (find_stack_direction() < 0);\n }\n EOF\n-if { (eval echo configure:4630: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:4605: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_c_stack_direction=1\n else\n@@ -4653,17 +4628,17 @@ unistd.h sys/param.h\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:4657: checking for $ac_hdr\" >&5\n+echo \"configure:4632: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4662 \"configure\"\n+#line 4637 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:4667: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:4642: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -4693,12 +4668,12 @@ done\n strdup __argz_count __argz_stringify __argz_next\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:4697: checking for $ac_func\" >&5\n+echo \"configure:4672: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4702 \"configure\"\n+#line 4677 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -4721,7 +4696,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:4725: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4700: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -4750,12 +4725,12 @@ done\n      for ac_func in stpcpy\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:4754: checking for $ac_func\" >&5\n+echo \"configure:4729: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4759 \"configure\"\n+#line 4734 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -4778,7 +4753,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:4782: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4757: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -4812,19 +4787,19 @@ EOF\n \n    if test $ac_cv_header_locale_h = yes; then\n     echo $ac_n \"checking for LC_MESSAGES\"\"... $ac_c\" 1>&6\n-echo \"configure:4816: checking for LC_MESSAGES\" >&5\n+echo \"configure:4791: checking for LC_MESSAGES\" >&5\n if eval \"test \\\"`echo '$''{'am_cv_val_LC_MESSAGES'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4821 \"configure\"\n+#line 4796 \"configure\"\n #include \"confdefs.h\"\n #include <locale.h>\n int main() {\n return LC_MESSAGES\n ; return 0; }\n EOF\n-if { (eval echo configure:4828: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4803: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   am_cv_val_LC_MESSAGES=yes\n else\n@@ -4845,7 +4820,7 @@ EOF\n     fi\n   fi\n    echo $ac_n \"checking whether NLS is requested\"\"... $ac_c\" 1>&6\n-echo \"configure:4849: checking whether NLS is requested\" >&5\n+echo \"configure:4824: checking whether NLS is requested\" >&5\n         # Check whether --enable-nls or --disable-nls was given.\n if test \"${enable_nls+set}\" = set; then\n   enableval=\"$enable_nls\"\n@@ -4865,7 +4840,7 @@ fi\n EOF\n \n       echo $ac_n \"checking whether included gettext is requested\"\"... $ac_c\" 1>&6\n-echo \"configure:4869: checking whether included gettext is requested\" >&5\n+echo \"configure:4844: checking whether included gettext is requested\" >&5\n       # Check whether --with-included-gettext or --without-included-gettext was given.\n if test \"${with_included_gettext+set}\" = set; then\n   withval=\"$with_included_gettext\"\n@@ -4884,17 +4859,17 @@ fi\n \n \tac_safe=`echo \"libintl.h\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for libintl.h\"\"... $ac_c\" 1>&6\n-echo \"configure:4888: checking for libintl.h\" >&5\n+echo \"configure:4863: checking for libintl.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4893 \"configure\"\n+#line 4868 \"configure\"\n #include \"confdefs.h\"\n #include <libintl.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:4898: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:4873: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -4911,19 +4886,19 @@ fi\n if eval \"test \\\"`echo '$ac_cv_header_'$ac_safe`\\\" = yes\"; then\n   echo \"$ac_t\"\"yes\" 1>&6\n   echo $ac_n \"checking for gettext in libc\"\"... $ac_c\" 1>&6\n-echo \"configure:4915: checking for gettext in libc\" >&5\n+echo \"configure:4890: checking for gettext in libc\" >&5\n if eval \"test \\\"`echo '$''{'gt_cv_func_gettext_libc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 4920 \"configure\"\n+#line 4895 \"configure\"\n #include \"confdefs.h\"\n #include <libintl.h>\n int main() {\n return (int) gettext (\"\")\n ; return 0; }\n EOF\n-if { (eval echo configure:4927: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4902: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   gt_cv_func_gettext_libc=yes\n else\n@@ -4939,15 +4914,15 @@ echo \"$ac_t\"\"$gt_cv_func_gettext_libc\" 1>&6\n \n \t   if test \"$gt_cv_func_gettext_libc\" != \"yes\"; then\n \t     echo $ac_n \"checking for bindtextdomain in -lintl\"\"... $ac_c\" 1>&6\n-echo \"configure:4943: checking for bindtextdomain in -lintl\" >&5\n+echo \"configure:4918: checking for bindtextdomain in -lintl\" >&5\n ac_lib_var=`echo intl'_'bindtextdomain | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lintl  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 4951 \"configure\"\n+#line 4926 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -4958,7 +4933,7 @@ int main() {\n bindtextdomain()\n ; return 0; }\n EOF\n-if { (eval echo configure:4962: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4937: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -4974,20 +4949,20 @@ fi\n if eval \"test \\\"`echo '$ac_cv_lib_'$ac_lib_var`\\\" = yes\"; then\n   echo \"$ac_t\"\"yes\" 1>&6\n   echo $ac_n \"checking for gettext in libintl\"\"... $ac_c\" 1>&6\n-echo \"configure:4978: checking for gettext in libintl\" >&5\n+echo \"configure:4953: checking for gettext in libintl\" >&5\n if eval \"test \\\"`echo '$''{'gt_cv_func_gettext_libintl'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   echo $ac_n \"checking for gettext in -lintl\"\"... $ac_c\" 1>&6\n-echo \"configure:4983: checking for gettext in -lintl\" >&5\n+echo \"configure:4958: checking for gettext in -lintl\" >&5\n ac_lib_var=`echo intl'_'gettext | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-lintl  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 4991 \"configure\"\n+#line 4966 \"configure\"\n #include \"confdefs.h\"\n /* Override any gcc2 internal prototype to avoid an error.  */\n /* We use char because int might match the return type of a gcc2\n@@ -4998,7 +4973,7 @@ int main() {\n gettext()\n ; return 0; }\n EOF\n-if { (eval echo configure:5002: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:4977: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -5041,7 +5016,7 @@ EOF\n \t      # Extract the first word of \"msgfmt\", so it can be a program name with args.\n set dummy msgfmt; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:5045: checking for $ac_word\" >&5\n+echo \"configure:5020: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_path_MSGFMT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -5075,12 +5050,12 @@ fi\n \t\tfor ac_func in dcgettext\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:5079: checking for $ac_func\" >&5\n+echo \"configure:5054: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 5084 \"configure\"\n+#line 5059 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -5103,7 +5078,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:5107: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:5082: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -5130,7 +5105,7 @@ done\n \t\t# Extract the first word of \"gmsgfmt\", so it can be a program name with args.\n set dummy gmsgfmt; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:5134: checking for $ac_word\" >&5\n+echo \"configure:5109: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_path_GMSGFMT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -5166,7 +5141,7 @@ fi\n \t\t# Extract the first word of \"xgettext\", so it can be a program name with args.\n set dummy xgettext; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:5170: checking for $ac_word\" >&5\n+echo \"configure:5145: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_path_XGETTEXT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -5198,15 +5173,15 @@ else\n fi\n \n \t\tcat > conftest.$ac_ext <<EOF\n-#line 5202 \"configure\"\n+#line 5177 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n extern int _nl_msg_cat_cntr;\n \t\t\t       return _nl_msg_cat_cntr\n ; return 0; }\n EOF\n-if { (eval echo configure:5210: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:5185: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   CATOBJEXT=.gmo\n \t\t   DATADIRNAME=share\n@@ -5231,7 +5206,7 @@ fi\n \n         if test \"$CATOBJEXT\" = \"NONE\"; then\n \t  echo $ac_n \"checking whether catgets can be used\"\"... $ac_c\" 1>&6\n-echo \"configure:5235: checking whether catgets can be used\" >&5\n+echo \"configure:5210: checking whether catgets can be used\" >&5\n \t  # Check whether --with-catgets or --without-catgets was given.\n if test \"${with_catgets+set}\" = set; then\n   withval=\"$with_catgets\"\n@@ -5244,22 +5219,22 @@ fi\n \n \t  if test \"$nls_cv_use_catgets\" = \"yes\"; then\n \t    \t    echo $ac_n \"checking for main in -li\"\"... $ac_c\" 1>&6\n-echo \"configure:5248: checking for main in -li\" >&5\n+echo \"configure:5223: checking for main in -li\" >&5\n ac_lib_var=`echo i'_'main | sed 'y%./+-%__p_%'`\n if eval \"test \\\"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_save_LIBS=\"$LIBS\"\n LIBS=\"-li  $LIBS\"\n cat > conftest.$ac_ext <<EOF\n-#line 5256 \"configure\"\n+#line 5231 \"configure\"\n #include \"confdefs.h\"\n \n int main() {\n main()\n ; return 0; }\n EOF\n-if { (eval echo configure:5263: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:5238: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_lib_$ac_lib_var=yes\"\n else\n@@ -5287,12 +5262,12 @@ else\n fi\n \n \t    echo $ac_n \"checking for catgets\"\"... $ac_c\" 1>&6\n-echo \"configure:5291: checking for catgets\" >&5\n+echo \"configure:5266: checking for catgets\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_catgets'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 5296 \"configure\"\n+#line 5271 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char catgets(); below.  */\n@@ -5315,7 +5290,7 @@ catgets();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:5319: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:5294: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_catgets=yes\"\n else\n@@ -5337,7 +5312,7 @@ EOF\n \t       # Extract the first word of \"gencat\", so it can be a program name with args.\n set dummy gencat; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:5341: checking for $ac_word\" >&5\n+echo \"configure:5316: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_path_GENCAT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -5373,7 +5348,7 @@ fi\n \t\t # Extract the first word of \"gmsgfmt\", so it can be a program name with args.\n set dummy gmsgfmt; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:5377: checking for $ac_word\" >&5\n+echo \"configure:5352: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_path_GMSGFMT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -5410,7 +5385,7 @@ fi\n \t\t   # Extract the first word of \"msgfmt\", so it can be a program name with args.\n set dummy msgfmt; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:5414: checking for $ac_word\" >&5\n+echo \"configure:5389: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_path_GMSGFMT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -5448,7 +5423,7 @@ fi\n \t\t # Extract the first word of \"xgettext\", so it can be a program name with args.\n set dummy xgettext; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:5452: checking for $ac_word\" >&5\n+echo \"configure:5427: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_path_XGETTEXT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -5506,7 +5481,7 @@ fi\n         # Extract the first word of \"msgfmt\", so it can be a program name with args.\n set dummy msgfmt; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:5510: checking for $ac_word\" >&5\n+echo \"configure:5485: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_path_MSGFMT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -5540,7 +5515,7 @@ fi\n         # Extract the first word of \"gmsgfmt\", so it can be a program name with args.\n set dummy gmsgfmt; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:5544: checking for $ac_word\" >&5\n+echo \"configure:5519: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_path_GMSGFMT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -5579,7 +5554,7 @@ fi\n         # Extract the first word of \"xgettext\", so it can be a program name with args.\n set dummy xgettext; ac_word=$2\n echo $ac_n \"checking for $ac_word\"\"... $ac_c\" 1>&6\n-echo \"configure:5583: checking for $ac_word\" >&5\n+echo \"configure:5558: checking for $ac_word\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_path_XGETTEXT'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -5678,7 +5653,7 @@ fi\n        LINGUAS=\n      else\n        echo $ac_n \"checking for catalogs to be installed\"\"... $ac_c\" 1>&6\n-echo \"configure:5682: checking for catalogs to be installed\" >&5\n+echo \"configure:5657: checking for catalogs to be installed\" >&5\n        if test \"x$LINGUAS\" = \"x\"; then\n \t LINGUAS=$ALL_LINGUAS\n        else\n@@ -5710,17 +5685,17 @@ echo \"configure:5682: checking for catalogs to be installed\" >&5\n    if test \"$CATOBJEXT\" = \".cat\"; then\n      ac_safe=`echo \"linux/version.h\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for linux/version.h\"\"... $ac_c\" 1>&6\n-echo \"configure:5714: checking for linux/version.h\" >&5\n+echo \"configure:5689: checking for linux/version.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 5719 \"configure\"\n+#line 5694 \"configure\"\n #include \"confdefs.h\"\n #include <linux/version.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:5724: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:5699: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -5795,7 +5770,7 @@ fi\n \n \n echo $ac_n \"checking whether windows registry support is requested\"\"... $ac_c\" 1>&6\n-echo \"configure:5799: checking whether windows registry support is requested\" >&5\n+echo \"configure:5774: checking whether windows registry support is requested\" >&5\n if test x$enable_win32_registry != xno; then\n   cat >> confdefs.h <<\\EOF\n #define ENABLE_WIN32_REGISTRY 1\n@@ -5824,7 +5799,7 @@ esac\n \n if test x$enable_win32_registry != xno; then\n   echo $ac_n \"checking registry key on windows hosts\"\"... $ac_c\" 1>&6\n-echo \"configure:5828: checking registry key on windows hosts\" >&5\n+echo \"configure:5803: checking registry key on windows hosts\" >&5\n   cat >> confdefs.h <<EOF\n #define WIN32_REGISTRY_KEY \"$gcc_cv_win32_registry_key\"\n EOF\n@@ -5892,7 +5867,7 @@ out_object_file=`basename $out_file .c`.o\n tm_file_list=\n for f in $tm_file; do\n   case $f in\n-    gansidecl.h | defaults.h)\n+    gansidecl.h | defaults.h )\n        tm_file_list=\"${tm_file_list} $f\" ;;\n     *) tm_file_list=\"${tm_file_list} \\$(srcdir)/config/$f\" ;;\n   esac\n@@ -6004,7 +5979,7 @@ fi\n \n # Figure out what assembler we will be using.\n echo $ac_n \"checking what assembler to use\"\"... $ac_c\" 1>&6\n-echo \"configure:6008: checking what assembler to use\" >&5\n+echo \"configure:5983: checking what assembler to use\" >&5\n gcc_cv_as=\n gcc_cv_gas_major_version=\n gcc_cv_gas_minor_version=\n@@ -6089,7 +6064,7 @@ fi\n \n # Figure out what nm we will be using.\n echo $ac_n \"checking what nm to use\"\"... $ac_c\" 1>&6\n-echo \"configure:6093: checking what nm to use\" >&5\n+echo \"configure:6068: checking what nm to use\" >&5\n if test -x nm$host_exeext; then\n \tgcc_cv_nm=./nm$host_exeext\n elif test x$host = x$target; then\n@@ -6100,7 +6075,7 @@ echo \"$ac_t\"\"$gcc_cv_nm\" 1>&6\n \n # Figure out what assembler alignment features are present.\n echo $ac_n \"checking assembler alignment features\"\"... $ac_c\" 1>&6\n-echo \"configure:6104: checking assembler alignment features\" >&5\n+echo \"configure:6079: checking assembler alignment features\" >&5\n gcc_cv_as_alignment_features=none\n if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n \t# Gas version 2.6 and later support for .balign and .p2align.\n@@ -6148,7 +6123,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_alignment_features\" 1>&6\n \n echo $ac_n \"checking assembler subsection support\"\"... $ac_c\" 1>&6\n-echo \"configure:6152: checking assembler subsection support\" >&5\n+echo \"configure:6127: checking assembler subsection support\" >&5\n gcc_cv_as_subsections=no\n if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n   if test \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 9 -o \"$gcc_cv_gas_major_version\" -gt 2 && grep 'obj_format = elf' ../gas/Makefile > /dev/null; then\n@@ -6188,7 +6163,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_subsections\" 1>&6\n \n echo $ac_n \"checking assembler weak support\"\"... $ac_c\" 1>&6\n-echo \"configure:6192: checking assembler weak support\" >&5\n+echo \"configure:6167: checking assembler weak support\" >&5\n gcc_cv_as_weak=no\n if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n   if test \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 2 -o \"$gcc_cv_gas_major_version\" -gt 2; then\n@@ -6211,7 +6186,7 @@ fi\n echo \"$ac_t\"\"$gcc_cv_as_weak\" 1>&6\n \n echo $ac_n \"checking assembler hidden support\"\"... $ac_c\" 1>&6\n-echo \"configure:6215: checking assembler hidden support\" >&5\n+echo \"configure:6190: checking assembler hidden support\" >&5\n gcc_cv_as_hidden=no\n if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n   if test \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 10 -o \"$gcc_cv_gas_major_version\" -gt 2 && grep 'obj_format = elf' ../gas/Makefile > /dev/null; then\n@@ -6237,7 +6212,7 @@ echo \"$ac_t\"\"$gcc_cv_as_hidden\" 1>&6\n case \"$target\" in \n   sparc*-*-*)\n     echo $ac_n \"checking assembler .register pseudo-op support\"\"... $ac_c\" 1>&6\n-echo \"configure:6241: checking assembler .register pseudo-op support\" >&5\n+echo \"configure:6216: checking assembler .register pseudo-op support\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_register_pseudo_op'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -6265,7 +6240,7 @@ EOF\n     fi\n \n     echo $ac_n \"checking assembler supports -relax\"\"... $ac_c\" 1>&6\n-echo \"configure:6269: checking assembler supports -relax\" >&5\n+echo \"configure:6244: checking assembler supports -relax\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_relax_opt'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -6295,7 +6270,7 @@ EOF\n     case \"$tm_file\" in\n     *64*)\n \techo $ac_n \"checking for 64 bit support in assembler ($gcc_cv_as)\"\"... $ac_c\" 1>&6\n-echo \"configure:6299: checking for 64 bit support in assembler ($gcc_cv_as)\" >&5\n+echo \"configure:6274: checking for 64 bit support in assembler ($gcc_cv_as)\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_flags64'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -6340,7 +6315,7 @@ EOF\n \n     if test \"x$gcc_cv_as_flags64\" != xno; then\n \techo $ac_n \"checking for assembler offsetable %lo() support\"\"... $ac_c\" 1>&6\n-echo \"configure:6344: checking for assembler offsetable %lo() support\" >&5\n+echo \"configure:6319: checking for assembler offsetable %lo() support\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_offsetable_lo10'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -6379,7 +6354,7 @@ EOF\n \n   i[34567]86-*-*)\n     echo $ac_n \"checking assembler instructions\"\"... $ac_c\" 1>&6\n-echo \"configure:6383: checking assembler instructions\" >&5\n+echo \"configure:6358: checking assembler instructions\" >&5\n     gcc_cv_as_instructions=\n     if test x$gcc_cv_gas_major_version != x -a x$gcc_cv_gas_minor_version != x; then\n       if test \"$gcc_cv_gas_major_version\" -eq 2 -a \"$gcc_cv_gas_minor_version\" -ge 9 -o \"$gcc_cv_gas_major_version\" -gt 2; then\n@@ -6408,7 +6383,7 @@ EOF\n esac\n \n echo $ac_n \"checking assembler dwarf2 debug_line support\"\"... $ac_c\" 1>&6\n-echo \"configure:6412: checking assembler dwarf2 debug_line support\" >&5\n+echo \"configure:6387: checking assembler dwarf2 debug_line support\" >&5\n gcc_cv_as_dwarf2_debug_line=no\n # ??? Not all targets support dwarf2 debug_line, even within a version\n # of gas.  Moreover, we need to emit a valid instruction to trigger any\n@@ -6569,14 +6544,13 @@ fi\n \n \n cat >> confdefs.h <<EOF\n-#define ENABLE_STD_NAMESPACE $ac_esn\n+#define ENABLE_STD_NAMESPACE 1\n EOF\n \n \n \n-\n echo $ac_n \"checking whether to enable maintainer-specific portions of Makefiles\"\"... $ac_c\" 1>&6\n-echo \"configure:6580: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n+echo \"configure:6554: checking whether to enable maintainer-specific portions of Makefiles\" >&5\n     # Check whether --enable-maintainer-mode or --disable-maintainer-mode was given.\n if test \"${enable_maintainer_mode+set}\" = set; then\n   enableval=\"$enable_maintainer_mode\"\n@@ -7103,7 +7077,6 @@ s%@GGC@%$GGC%g\n s%@zlibdir@%$zlibdir%g\n s%@zlibinc@%$zlibinc%g\n s%@GXX_ABI_FLAG@%$GXX_ABI_FLAG%g\n-s%@HAVE_LIBSTDCXX_V3@%$HAVE_LIBSTDCXX_V3%g\n s%@MAINT@%$MAINT%g\n s%@build_canonical@%$build_canonical%g\n s%@host_canonical@%$host_canonical%g"}, {"sha": "73be99e1ab0989d3214c66f292dfcb8a4bde35c4", "filename": "gcc/configure.in", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22fdd65e5971ec8f15368ba77046ce8c6c3cb329/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22fdd65e5971ec8f15368ba77046ce8c6c3cb329/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=22fdd65e5971ec8f15368ba77046ce8c6c3cb329", "patch": "@@ -151,23 +151,6 @@ if test x$local_prefix = x; then\n \tlocal_prefix=/usr/local\n fi\n \n-# Build a new-libstdc++ system (ie libstdc++-v3)\n-AC_MSG_CHECKING([for libstdc++ to install])\n-AC_ARG_ENABLE(libstdcxx-v3,\n-[  --enable-libstdcxx-v3 \n-\t\t\t  enable libstdc++-v3 for building and installation],\n-  [enable_libstdcxx_v3=\"$enableval\"], [enable_libstdcxx_v3=yes])\n-\n-if test x$enable_libstdcxx_v3 = xyes; then\n-  AC_MSG_RESULT(v3)\n-  HAVE_LIBSTDCXX_V3=1\n-  ac_esn=1\n-else\n-  AC_MSG_RESULT(v2)\n-  HAVE_LIBSTDCXX_V3=0\n-  ac_esn=0\n-fi\n-\n # Don't set gcc_gxx_include_dir to gxx_include_dir since that's only\n # passed in by the toplevel make and thus we'd get different behavior\n # depending on where we built the sources.\n@@ -1599,9 +1582,8 @@ else\n fi\n AC_SUBST(GXX_ABI_FLAG)\n \n-AC_DEFINE_UNQUOTED(ENABLE_STD_NAMESPACE, $ac_esn,\n+AC_DEFINE_UNQUOTED(ENABLE_STD_NAMESPACE, 1,\n   [Define to 1 if you want to enable namespaces (-fhonor-std) by default.])\n-AC_SUBST(HAVE_LIBSTDCXX_V3)\n \n dnl Very limited version of automake's enable-maintainer-mode\n "}, {"sha": "9fc67ea02ca664164c9924a475fbcdd78d295e43", "filename": "libstdc++/ChangeLog", "status": "removed", "additions": 0, "deletions": 1539, "changes": 1539, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2FChangeLog?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,1539 +0,0 @@\n-2001-01-23  Chris Demetriou  <cgd@broadcom.com>\n-\n-\t* exception.cc (__terminate_func): Remove declaration.\n-\t(__terminate_func_ptr): New typedef.\n-\t(__terminate, __terminate_set_func): New extern function\n-\tprototypes.\n-\t(std::terminate): Use __terminate function.\n-\t(std::set_terminate): Use __terminate_set_func function.\n-\n-2000-11-24  Magnus Fromreide <magfr@lysator.liu.se>\n-\n-\t* sstream: Backport libstdc++-V3 sstream to V2.\n-\n-2000-10-23  Gabriel Dos Reis  <gdr@codesourcery.com>\n-\n-\t* std/std_valarray.h (valarray::valarray): Use __valarray_copy,\n-\tnot __valarray_copy_construct.\n-\n-2000-10-08  Philipp Thomas  <pthomas@suse.de>\n-\n-\t* Makefile.in (piclist): Fix sed command to also accept\n-\tnumbers in filenames.\n-\n-2000-10-07  Richard Henderson  <rth@cygnus.com>\n-\n-\t* del_op.cc, del_opnt.cc, del_opv.cc, del_opvnt.cc: New files.\n-\t* exception.cc, new_handler.cc, new_op.cc, new_opnt.cc: New files.\n-\t* new_opv.cc, new_opvnt.cc, tinfo.cc, tinfo2.cc, vec.cc: New files.\n-\t* cxxabi.h, exception, new, new.h, typeinfo, pure.c: New files.\n-\t* tinfo.hP: New file.\n-\n-\t* Makefile.in (OBJS, HEADERS): Add new files.\n-\t* configure.in (XCXXINCLUDES): Add ../include and ../gcc.\n-\n-2000-09-19  David Edelsohn  <edelsohn@gnu.org>\n-\n-\t* configure.in: Add AIX multithread support fragment.\n-\t* config/aix.mt: Define _PTHREADS in MT_CFLAGS if -pthread\n-\tcommandline option present.\n-\n-2000-08-14  Zack Weinberg  <zack@wolery.cumb.org>\n-\n-\t* configure.in: Accept *-*-linux* not just *-*-linux-gnu*.\n-\tHonor --disable-threads.\n-\n-2000-08-11  Jason Merrill  <jason@redhat.com>\n-\n-\t* std/straits.h (is_del): Boolify with !!.\n-\n-2000-08-11  \"Axel Habermann\" <Axel.Habermann@xtradyne.de>\n-\n-\t* std/bastring.cc (compare to charT*): Add rlen==n check.\n-\t* std/bastring.h (Rep::grab): Add x86 atomic version.\n-\n-2000-8-4  David E O'Brien  <obrien@FreeBSD.org>\n-\n-\t* std/mask_array.h (mask_array): Rename template type\n-\tparameter to avoid conflicts with ctype.h on BSD systems.\n-\t* std/slice_array.h (slice_array): Likewise.\n-\n-2000-07-17  Gabriel Dos Reis  <gdr@codesourcery.com>\n-\n-\t* std/valarray_array.h(__valarray_sum): Make inline.\n-\n-2000-07-15  Gabriel Dos Reis  <gdr@codesourcery.com>\n-\n-\t* std/valarray_array.h (__valarray_get_memory,\n-\t__valarray_get_storage, __valarray_release_storage): New\n-\tfunctions.\n-\t(_Array_default_ctor, _Array_init_ctor, _Array_copy_ctor,\n-\t_Array_copier): New traits classes.\n-\t(__valarray_default_construct): New function.  Implements valarray\n-\tdefault construction.\n-\t(__valarray_fill_construct): New function. Implements valarray\n-\tconstruction with initializer.\n-\t(__valarray_copy_construct): New function.  Implements valarray\n-\tcopy construction.\n-\t(__valarray_destroy_elements): New function. \n-\t(__valarray_copy, __valarray_fill): Tweak.\n-\t(__valarray_sum, __valarray_product): New helper functions.\n-\t(_Array<>::free_data): Remove.\n-\t(_Array<>::_Array): Tweak.\n-\n-\t* std/std_valarray.h (valarray<>::product): Remove.\n-\t(valarray<>::valarray): Use __valarray_get_storage.\n-\t(valarray<>::shift, valarray<>::cshift, valarray<>::resize):\n-\tTweak. \n-\n-\t* std/cpp_type_traits.h: New file.\n-\n-\t* valarray.cc (multiplies<>, accumulate, valarray<>::product):\n-\tRemove explicit instantiation. \n-\t(__valarray_product): New function.\n-\t(_Indexer::_Indexer): Use.\n-\n-2000-07-14  Jean-Francois Panisset <panisset@discreet.com>\n-\t\n-\t* std/bastring.h (basic_string<>::clear): Add function.\n-\n-2000-07-06  Zack Weinberg  <zack@wolery.cumb.org>\n-\n-\t* std/gslice_array.h, std/indirect_array.h, std/mask_array.h,\n-\tstd/slice_array.h, std/std_valarray.h, std/valarray_meta.h:\n-\tDo not paste anything after 'operator' keyword.\n-\n-2000-05-15  David Edelsohn  <edelsohn@gnu.org>\n-\n-\t* Makefile.in: Change \"pic\" to depend on $(PICFLAG), not\n-\ton $(enable_shared).\n-\t* config/aix.ml: Build AIX-style shared library.\n-\n-2000-05-10  Jakub Jelinek  <jakub@redhat.com>\n-\n-\t* configure.in: Use mh-sparcpic for sparc*-*-*.\n-\n-2000-04-24  Magnus Fromreide  <magfr@lysator.liu.se>\n-\n-\t* sstream: New file.\n-\t* Makefile.in (HEADERS): Add it.\n-\n-2000-03-29  Jason Merrill  <jason@casey.cygnus.com>\n-\n-\t* configure.in: -linux-gnu*, not -linux-gnu.\n-\n-2000-03-10  Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n-\n-\t* std/bastring.h (basic_string<>::push_back): Was missing.\n-\n-2000-01-12  Fred Fish  <fnf@be.com>\n-\n-\t* Makefile.in (SHOPT): New macro, flag to ld to create\n-\tshared library.  Defaults to \"-shared\".\n-\t(SHLIB): Use new SHOPT rather than hardcoded \"-shared\".\n-\t* configure.in: While configuring for *-*-beos*, if\n-\t--enable-shared is given, add beos.ml to list of makefile\n-\tfrags.\n-\t* config/beos.ml: New file.\n-\n-1999-12-15  Jason Merrill  <jason@casey.cygnus.com>\n-\n-\t* Makefile.in (MYCXXFLAGS): Include $(CXXFLAGS).\n-\t(MYCFLAGS): Include $(CFLAGS).\n-\t\n-1999-12-14  Martin v. L\ufffdwis  <loewis@informatik.hu-berlin.de>\n-\n-\t* std/bastring.h (basic_string::basic_string): Rename parameters\n-\tto avoid shadow warnings.\n-\t* std/bastring.cc (alloc): Likewise.\n-\n-1999-12-13  Jakub Jelinek  <jakub@redhat.com>\n-\n-\t* std/bastring.h (class basic_string::Rep): Use proper defines\n-\tfor sparc v9 and fix asm for sparc64.\n-\n-1999-11-19  Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n-\n-\t* std/valarray_meta.h (_DEFINE_EXPR_UNARY_FUNCTION): Don't forget\n-\tto define tanh. \n-\n-Sun Nov 14 09:47:51 1999  H.J. Lu  <hjl@gnu.org>\n-\n-\t* Makefile.in ($(OBJS)): Depend on stamp-picdir.\n-\n-1999-11-05  Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n-\n-\t* std/valarray_meta.h (_DEFINE_EXPR_UNARY_FUNCTION):  When\n-\tbuilding meta-expressions don't forget to take the contained\n-        closures.\n-\n-1999-10-19  Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n-\n-\t* std/valarray_meta.h: (_BinClos::_BinClos): Fix typo.\n-\n-1999-090-17 Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n-\n-\t* std/valarray_array.h (__valarray_copy): Fix typo.\n-\n-1999-09-17 Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n-\n-\t* std/complext.cc (pow): Don't expect floating point promotion\n-\tin presence of template argument deduction.  There is no such\n-\tthing. \n-\n-1999-09-01  Andreas Schwab  <schwab@suse.de>\n-\n-\t* configure.in: Move *-*-gnu* pattern below *-*-linux*.\n-\n-Wed Aug 25 01:31:11 1999  \"David O'Brien\" <obrien@NUXI.com>\n-\n-\t* configure.in: Alphabetize selection of .ml fragments.\n-\n-Thu Aug  5 02:00:13 1999  Loren Rittle  <ljrittle@acm.org>\n-\n-\t* Makefile.in (MARLINK, MSHLINK): Handle library version\n-\tnumber components with more than one numeric digit.\n-\n-Sat Jul 17 23:51:58 1999  Jeffrey A Law  (law@cygnus.com)\n-\n-\t* Makefile.in (INTERFACE): Bump to 3.\n-\n-1999-07-16  Markus Gyger (mgyger@gmu.edu)\n-\n-\t* stdexcepti.cc (__out_of_range): Use std:: qualifier for names \n-\tin std.\n-\t(__length_error): Likewise.\n-\n-Fri Jul  9 01:20:23 1999  Jeffrey A Law  (law@cygnus.com)\n-\n-\t* Makefile.in (VERSION): Bump to 2.10.0.\n-\n-Tue Jun  8 00:21:11 1999  Jeffrey A Law  (law@cygnus.com)\n-\n-\t* configure.in (*-*-freebsd2*): Add missing '*' at end of configure\n-\tstring.\n-\n-1999-06-05  Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n-\n-\t* std/std_valarray.h: Don't #include unconditionally <alloca.h>\n-\n-1999-06-05  Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n-\n-\t* std/std_valarray.h: New file.\n- \t* std/slice.h: New file.\n-\t* std/slice_array.h: New file.\n-\t* std/gslice.h: New file.\n-\t* std/gslice_array.h: New file.\n-\t* std/mask_array.h: New file.\n-\t* std/indirect_array.h: New file.\n-\t* std/valarray_array.h: New file.\n-\t* std/valarray_array.tcc: New file.\n-\t* std/valarray_meta.h: New file.\n-\t* valarray.cc: New file.\n-\t* valarray: New file\n-\n-\t* Makefile.in (OBJS): add valarray.o\n-\t(HEADERS): add valarray\n-\t(valarray.o): define dependency on valarray.cc\n-\t(install): make it possible to install valarray file.\n-\t\n-Wed Jun  2 00:21:54 1999  Robert Lipe  <robertlipe@usa.net>\n-\n-\t* std/bastring.h (class basic_string:Rep): Encode xlock opcode\n-\tas .bytes instead of mnemonics.\n-\n-1999-05-20  Angela Marie Thomas <angela@cygnus.com>\n-\n-\t* configure.in: Test for ${compiler_name}.exe as well.\n-\n-1999-05-15  Mark Kettenis  <kettenis@gnu.org>\n-\n-\t* configure.in: Add shared library support for the Hurd\n-\t(*-*-gnu*).\n-\t* config/gnu.ml: New file.\n-\n-1999-05-12  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* configure.in (compiler_name): Don't do the skip-this-dir thing\n-\tif we're reconfiguring.\n-\n-1999-05-07  Ulrich Drepper  <drepper@cygnus.com>\n-\n-\t* std/bastring.h (class basic_string::Rep): Make release member\n-\tfunction thread-safe for ix86 (x>=4) and UltraSPARC.\n-\n-\t* stlinst.cc: Make it possible to compile with __USE_MALLOC.\n-\n-Mon Apr 26 02:24:47 1999 \"Loren J. Rittle\" <rittle@supra.rsch.comm.mot.com>\n-\n-\t* config/freebsd.ml (LIBS): Add ARLINK.\n-\t* config/openbsd.ml (LIBS): Add ARLINK.\n-\n-Fri Apr  2 15:12:14 1999  H.J. Lu  (hjl@gnu.org)\n-\n-\t* libstdc++/configure.in (gxx_include_dir): Handle it.\n-\t* libstdc++/Makefile.in: Likewise.\n-\n-Wed Mar 24 22:36:45 1999  Mumit Khan  <khan@xraylith.wisc.edu>\n-\n-\t* configure.in (EXEEXT): Define.\n-\t(compiler_name): Use.\n-\n-Thu Mar 11 01:07:55 1999  Franz Sirl <Franz.Sirl-kernel@lauterbach.com>\n-\n-\t* configure.in: Add mh-*pic handling for alpha, arm, powerpc\n-\n-Fri Mar  5 02:16:39 1999  Doug Rabson  <dfr@freebsd.org>\n-\n-\t* configure.in: Support shared libs on FreeBSD 3.x and 4.x\n-\t* config/freebsd.ml: A copy of config/linux.ml since they are both\n-\tELF and both have a shared libm.\n-\n-1999-02-24  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* configure.in: Fix INSTALLDIR sed pattern for Solaris sed.\n-\n-Sat Feb 20 13:17:17 1999  Jeffrey A Law  (law@cygnus.com)\n-\n-\t* string, std/straits.h, std/bastring.h: Revert recent change.  Needs\n-\tsome libiberty support before it can be re-enabled.\n-\n-Thu Feb 18 19:53:17 1999  Marc Espie <espie@cvs.openbsd.org>\n-\n-\t* configure.in: Handle OpenBSD with and without threads.\n-\t* config/openbsd.ml: New file.\n-\t* config/openbsd.mt: New file.\n-\n-1999-02-04  Ulrich Drepper  <drepper@cygnus.com>\n-\n-\t* configure.in: Recognize --enable-threads=posix for all\n-\tplatforms.\n-\t* config/posix.mt: New file.\n-\n-\t* configure.in: Add fragments for Solaris defining macro specifying\n-\tthread library to be used.\n-\t* config/sol2pth.mt: New file\n-\t* config/sol2solth.mt: New file.\n-\t* stl/stl_alloc.h: Add support for Solaris thread library.\n-\t* stl/stl_config.h: Recognize _SOLTHREADS and define internal macros\n-\tappropriately.\n-\n-1999-01-28  Baron Roberts  <baron@sgi.com>\n-\n-\t* string: Uncomment wstring declaration.\n-\n-\t* std/straits.h: Remove #if 0/#endif from around\n-\tstruct string_char_traits <wchar_t>.\n-\t#include <cwchar>.\n-\tAdd missing definition for wchar_t move method.\n-\tAdd empty() method for trait-based empty string return.\n-\n-\t* std/bastring.h (c_str): Change return of \"\" to return of\n-\ttraits::empty() call so that proper empty string is returned\n-\tbased on the character type (i.e. \"\" or L\"\").\n-\n-1999-02-07  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* Makefile.in (stuff2): Tweak.\n-\n-1999-02-04  Ulrich Drepper  <drepper@cygnus.com>\n-\n-\t* configure.in: Recognize --enable-threads=posix for all\n-\tplatforms.\n-\t* config/posix.mt: New file.\n-\n-\t* configure.in: Add fragments for Solaris defining macro specifying\n-\tthread library to be used.\n-\t* config/sol2pth.mt: New file\n-\t* config/sol2solth.mt: New file.\n-\t* stl/stl_alloc.h: Add support for Solaris thread library.\n-\t* stl/stl_config.h: Recognize _SOLTHREADS and define internal macros\n-\tappropriately.\n-\n-Sat Jan 30 08:05:46 1999 Mumit Khan  <khan@xraylith.wisc.edu>\n-\n-\t* config/x86-interix.ml: New file.\n-\t* configure.in (i[3456]86-*-interix*): Add shared library support.\n-\n-1999-01-13  Ulrich Drepper  <drepper@cygnus.com>\n-\n-\t* configure.in: Test for \"ln -s\" and set LN_S in generated Makefile.\n-\t* Makefile.in: Use $(LN_S) instead of explicitly ln -s.\n-\n-Sun Jan 03 03:16:02 1999  Robert Lipe  <robertlipe@usa.net>\n-\n-\t* configure.in:  (*-*-sysv5, *-*-*udk*):  Treat like sysv4.\n-\n-Tue Dec  8 00:59:09 1998  Marc Espie <Marc.Espie@liafa.jussieu.fr>\n-\n-\t* Makefile.in: Be more selective about what files to install.\n-\n-1998-11-30  Ulrich Drepper  <drepper@cygnus.com>\n-\n-\t* std/bastring.cc (operator>>): Correct cast in last patch.\n-\t(getline): Likewise.\n-\n-1998-11-27  Alexandre Oliva  <oliva@dcc.unicamp.br>\n-\n-\t* Makefile.in (HEADERS): Install bitset.\n-\n-1998-11-26  Manfred Hollstein  <manfred@s-direktnet.de>\n-\n-\t* configure.in (compiler_name): Add check to detect if this\n-\tlanguage's compiler has been built.\n-\n-1998-11-23  Ulrich Drepper  <drepper@cygnus.com>\n-\n-\t* std/bastring.cc (operator>>): Cast new character to char before\n-\tadding to string.\n-\t(getline): Likewise.\n-\n-Thu Sep 17 01:29:46 1998  H.J. Lu  (hjl@gnu.org)\n-\n-\t* Makefile.in ($(ARLINK), $(SHLINK)): Don't rely on 'ln -f'.\n-\n-\t* Makefile.in (install): Don't rely on 'ln -f'.\n-\n-1998-09-09  Manfred Hollstein  <manfred@s-direktnet.de>\n-\n-\t* Makefile.in (install): Initialize RELINSTALLDIR correctly\n-\teven for multilib and cross configurations.\n-\n-\t* configure.in (INSTALLDIR): Don't change INSTALLDIR's init\n-\tvalue if --enable-version-specific-runtime-libs has been specified.\n-\n-Wed Sep  2 21:11:15 1998  H.J. Lu  (hjl@gnu.org)\n-\n-\t* Makefile.in (RELINSTALLDIR): New. Use it to make symlinks.\n-\n-\t* configure.in: Fix INSTALLDIR replacement for cross-compile.\n-\n-Sun Aug 30 22:17:41 1998  H.J. Lu  (hjl@gnu.org)\n-\n-\t* Makefile.in (INTERFACE): New, set to 2.\n-\t(ARLIB): Set to libstdc++.a.$(VERSION)\n-\t(ARLINK, MARLINK): New macros.\n-\t(LIBS): Add $(ARLINK).\n-\t($(ARLINK), marlink): New targets.\n-\t(install): Don't check $(libsubdir). Handle versioned libraries.\n-\n-\t* config/linux.ml (ARLIB, MARLINK, SHLIB, MSHLINK): New macros.\n-\t(LIBS): Add marlink $(ARLINK).\n-\n-\t* config/aix.ml (ARLIB): Set to libstdc++-ar.a.$(VERSION)\n-\t(ARLINK): New macros.\n-\t(BUILD_LIBS): Add $(ARLINK).\n-\n-\t* config/dec-osf.ml (LIBS): Add $(ARLINK).\n-\t* config/elf.ml (LIBS): Likewise.\n-\t* config/elfshlibm.ml (LIBS): Likewise.\n-\t* config/hpux.ml (LIBS): Likewise.\n-\t* config/iris5.ml (LIBS): Likewise.\n-\t* config/sol2shm.ml (LIBS): Likewise.\n-\t* config/sunos4.ml (LIBS): Likewise.\n-\n-\t* configure.in: Use ${topsrcdir}/config.if to put\n-\tLIBSTDCXX_INTERFACE, CXX_INTERFACE, LIBC_INTERFACE in\n-\t${package_makefile_frag}.\n-\n-1998-08-25  Martin von L\ufffdwis  <loewis@informatik.hu-berlin.de>\n-\n-\t* stdexcept: Remove __HONOR_STD.\n-\n-1998-08-23  Mark Mitchell  <mark@markmitchell.com>\n-\n-\t* sinst.cc: Don't explicitly instantiation string_char_traits<char>.\n-\t* cinst.cc: Likewiwse, for complex<float>, complex<double>,\n-\tcomplex<long double>.\n-\n-1998-08-17  Mark Mitchell  <mark@markmitchell.com>\n-\n-\t* stdexcept: Put things in the std namespace, if appropriate.\n-\n-1998-07-12  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* Makefile.in (VERSION): Bump to 2.9.0.\n-\n-1998-07-12  Lars Albertsson <lalle@sics.se>\n-\n-\t* std/bastring.cc (find_last_of): Fix.\n-\t(find_last_not_of): Likewise.\n-\n-1998-07-06  Manfred Hollstein  <manfred@s-direktnet.de>\n-\n-\t* configure.in (INSTALLDIR): Make sed pattern failsafe.\n-\n-1998-07-06  Ulrich Drepper  <drepper@cygnus.com>\n-\n-\t* std/bastring.h (class basic_string): Correct iterator return\n-\tvalues in insert member functions.\n-\n-1998-07-02  Ulrich Drepper  <drepper@cygnus.com>\n-\n-\t* std/bastring.h (class basic_string): Return correct iterators in\n-\terase member functions.\n-\n-1998-06-24  Manfred Hollstein  <manfred@s-direktnet.de>\n-\n-\t* Makefile.in (INSTALLDIR): Add comment to document the fact,\n-\tthis macro will be properly initialized at make's runtime.\n-\t(install): Add initialization of INSTALLDIR depending on $(libsubdir)\n-\tand ${enable_version_specific_runtime_libs}; use $${INSTALLDIR} shell\n-\tvariable instead of the $(INSTALLDIR) make macro.\n-\n-Tue Mar 24 10:13:07 1998  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* std/bastring.cc (basic_string::copy): Mark const here, too.\n-\n-1998-03-23 15:59  Ulrich Drepper  <drepper@cygnus.com>\n-\n-\t* std/bastring.h (basic_string::copy): Mark copy function as const.\n-\tReported by Scott Schurr <scotts@ims.com>.\n-\n-Thu Mar  5 09:23:28 1998  Manfred Hollstein  <manfred@s-direktnet.de>\n-\n-\t* configure.in: Make locating frag files failsafe even for the\n-\tspecial case if configuring and building in srcdir.\n-\n-1998-03-04 12:37  Ulrich Drepper <drepper@cygnus.com>\n-\n-\t* cinst.cc [INSERT] (operator<<): Correct type of numeric argument.\n-\n-Fri Feb  6 01:36:21 1998  Manfred Hollstein  <manfred@s-direktnet.de>\n-\n-\t* Makefile.in (piclist): Check value of enable_shared, not PICFLAG.\n-\t(stmp-string, ...): Dito.\n-\t(bigstmp-string, ...): Dito.\n-\n-Sun Feb  1 13:38:07 1998  H.J. Lu  (hjl@gnu.org)\n-\n-\t* config/linux.mt: Don't define _PTHREADS, but define\n-\t_IO_MTSAFE_IO.\n-\n-Wed Jan 28 10:27:11 1998  Manfred Hollstein  <manfred@s-direktnet.de>\n-\n-        * tests/configure.in, testsuite/configure.in: Update with yesterday's\n-\ttoplevel configure.in changes.\n-\n-Tue Jan 27 23:27:32 1998  Manfred Hollstein  <manfred@s-direktnet.de>\n-\n-\t* configure.in (package_makefile_rules_frag): New variable\n-\twhich is used in the call to config.shared; redirect file descriptor 2\n-\tto ${package_makefile_rules_frag}.\n-\n-Tue Jan 27 10:11:27 1998  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* Makefile.in (install): Remove the shared library symlink even if\n- \twe aren't installing it.\n-\n-Tue Jan 27 10:29:44 1998  H.J. Lu  (hjl@gnu.org)\n-\n-\t* configure.in (topsrcdir): New.\n-\t(configdirs): Check ${topsrcdir}/gcc instead.\n-\t(config-ml.in): Use ${topsrcdir}/config-ml.in.\n-\n-\t* tests/configure.in (topsrcdir): New.\n-\t(check): Check ${topsrcdir}/gcc instead.\n-\n-Sun Jan 25 14:01:50 1998  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* std/bastring.h (unique): We only need length bytes.\n-\t(c_str): Avoid writing over random memory.\n-\t#include <std/bastring.cc>.\n-\tLose _G_ALLOC_CONTROL.\n-\t* std/bastring.cc: Likewise.\n- \t(nilRep): Add initializer for selfish.\n-\t* sinst.cc: Just #include <string>.\n-\n-Tue Jan 13 21:23:05 1998  H.J. Lu  (hjl@gnu.org)\n-\n-\t* configure.in (configdirs): Include testsuite only if\n-\t${srcdir}/../gcc exists.\n-\n-\t* tests/configure.in (check): Set to ${CHECK} if\n-\t${srcdir}/../../gcc doesn't exists.\n-\n-1998-01-05  Brendan Kehoe  <brendan@lisa.cygnus.com>\n-\n-\t* std/bastring.cc (basic_string::Rep::operator delete): Don't claim\n-\tto return from deallocate, since this is a void method.\n-\n-Sat Jan  3 12:15:41 1998 Franz Sirl <franz.sirl-kernel@lauterbach.com>\n-\n-\t* configure.in: Finalize support for {alpha|powerpc}*-*-linux-gnulibc1\n-\n-Sun Dec  7 02:34:40 1997  Jody Goldberg\t<jodyg@idt.net>\n-\n-\t* libstdc++/std/bastring.h : Move closer to the draft standard\n-\timplementation of basic_string by adding 3 paramter 'Allocator'.\n-\tNOTE: this still differs from the standard in not offering per\n-\tinstance allocators.\n-\t* libstdc++/std/bastring.cc : Likewise.\n-\t* libstdc++/stlinst.cc : Handle thread safe allocators if they are the\n-\tdefault.\n-\n-Sun Dec  7 02:32:20 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* iosfwd: New header.\n-\t* Makefile.in (HEADERS): Add it.\n-\n-Sun Dec  7 02:32:20 1997  Gregory L. Galloway (gregg@eoeml.gtri.gatech.edu)\n-\n-\t* Makefile.in (HEADERS): Modified list of headers to\n-\tinstall to include all of SGI STL headers especially hash_set and\n-\thash_map, and added ANSI C++ style wrappers for fstream, iomanip,\n-\tiostream, and strstream.\n-\n-\t* fstream, iomanip, iostream, strstream: New forwarding headers\n-\tadded.\n-\n-Thu Nov 27 01:33:55 1997  Jeffrey A Law  (law@cygnus.com)\n-\n-\t* Makefile.in (install): Change gxx_includedir to gxx_include_dir.\n-\n-Tue Nov 25 23:16:44 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\tLondon changes to string:\n-\t* std/bastring.cc (check_realloc): Don't be selfish anymore.\n-\t* std/bastring.h (non-const operator[]): Be selfish.\n-\t(iterator forms of insert and erase): Stay selfish.\n-\n-Tue Nov 25 14:03:43 1997  H.J. Lu  (hjl@gnu.org)\n-\n-\t* Makefile.in (stmp-complex, bigstmp-complex): Changed to\n-\txxxx-complx.\n-\n-Mon Nov 24 14:41:33 1997  Jeffrey A Law  (law@cygnus.com)\n-\n-\t* Makefile.in: Use ln -f -s, not ln -s -f.\n-\n-Fri Nov 21 12:56:24 1997  Manfred Hollstein <manfred@s-direktnet.de>\n-\n-\t* Makefile.in (bigstmp-complex): Name changed to bigstmp-complx to\n-\tcope with filesystem not capable to handle names longer than\n-\t14 characters.\n-\n-Sun Nov 16 22:41:55 1997  Jeffrey A Law  (law@cygnus.com)\n-\n-\t* Makefile.in (SHLIB): Build with CC instead of CXX.\n-\n-Sun Nov  2 23:34:09 1997  Manfred Hollstein  <manfred@s-direktnet.de>\n-\n-\t* configure.in: Use delta.mt for m68k-motorola-sysv.\n-\t* config/delta.mt: New makefile fragment.\n-\n-Sun Nov  2 12:14:37 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* Makefile.in (install): Some of HEADERS come from the stl dir now.\n-\t* algorithm, deque, functional, iterator, list, map, memory, numeric,\n- \tqueue, set, stack, utility, vector: Now in stl dir.\n-\n-Fri Oct 10 00:40:00 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* std/bastring.h: Use ibegin internally.  Return passed iterator\n-\tinstead of recalculating it where appropriate.\n-\t* std/bastring.cc: Adjust for erase.\n-\n-\tFrom Yotam Medini:\n-\t* std/bastring.h: Replace remove with erase.\n-\n-Thu Oct  9 23:24:36 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* stdexcepti.cc (__out_of_range): New fn.\n-\t(__length_error): New fn.\n-\n-\t* std/bastring.h (OUTOFRANGE): Fix logic.  Use throwing functions.\n-\t(LENGTHERROR): Likewise.\n-\tRevert Oct 2 changes.\n-\t* string: Revert Oct 2 changes.\n-\n-Tue Oct  7 00:51:51 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* std/{f,d,ld}complex.h: Replace guiding fns if not -ansi.\n-\n-Thu Oct  2 00:08:18 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* std/bastring.h: Move exception stuff after definition of string.\n-\tMove typedef of string here.\n-\t* string: From here.\n-\n-Sat Sep 27 16:48:00 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* std/complext.h: Lose injection decls.\n-\t* std/fcomplex.h: Likewise.\n-\t* std/dcomplex.h: Likewise.\n-\t* std/ldcomplex.h: Likewise.\n-\n-Sat Sep 27 16:47:35 1997  Mark Mitchell  <mmitchell@usa.net>\n-\n-\t* std/complext.h: Declare templates before making them\n-\tfriends.  Use new friend <> syntax.\n-\t* std/complext.cc: Don't rely on guiding declarations.\n-\t* std/fcomplex.h: Use new friend <> syntax.\n-\t* std/dcomplex.h: Likewise.\n-\t* std/ldcomplex.h: Likewise.\n-\n-Thu Sep 25 19:55:56 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* std/bastring.h: Enable exceptions.\n- \t(assign, append, insert, replace): Implement member template versions.\n-\n-1997-09-15 02:37  Ulrich Drepper  <drepper@cygnus.com>\n-\n-\t* config/linux.mt: New file.  Make sure _PTHREADS is defined\n-\tif necessary.\n-\t* configure.in: Find linux.mt file.\n-\n-Thu Sep 11 15:03:20 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* std/bastring.h (class basic_string): Add global scope to\n-\tuse of reverse_iterator.\n-\n-Tue Sep  9 19:47:07 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* std/bastring.h: Adjust use of reverse_iterator template.\n-\n-Wed Aug 27 00:04:33 1997  Alexandre Oliva  (oliva@dcc.unicamp.br)\n-\n-\t* Makefile.in: Create correct multiple links to\n-\tshared libstdc++.\n-\n-Tue Aug 26 12:24:01 1997  H.J. Lu  (hjl@gnu.ai.mit.edu)\n-\n-\t* testsuite/Makefile.in (check): Don't depend on site.exp.\n-\t(just-check): Depend on site.exp.\n-\n-Mon Aug 25 14:26:45 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* Makefile.in (CXXFLAGS): Add -Weffc++.\n-\n-Sat Aug 23 21:25:37 1997  Mark Mitchell  <mmitchell@usa.net>\n-\n-\t* bastring.h: Enable reverse_iterator and its ilk.\n-\n-\t* bastring.h: Provide specializations of member function templates\n-\tfor const_iterator.\n-\n-Wed Jul 30 10:59:00 1997  Benjamin Kosnik  <bkoz@rhino.cygnus.com>\n-\n-\t* stlinst.cc: Add instantiation file for\n-\t__default_alloc_template<fale, 0> and\n-\t__malloc_alloc_template<0>\n-\n-Sun Jun  1 17:03:40 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* std/bastring.cc (find_last_of): Correct handling of POS.\n-\t(find_last_not_of): Likewise.\n-\n-Thu May  1 17:37:10 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* Makefile.in ($(SHLIB)): Add $(LIBCXXFLAGS).\n-\n-Wed Apr 30 12:06:23 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* Makefile.in (IO_DIR): Remove $(MULTIBUILDTOP).\n-\t(LIBIBERTY_DIR): Likewise.\n-\t* configure.in: Don't turn on multilib here.\n-\n-Fri Apr 25 16:09:15 1997  Bob Manson  <manson@charmed.cygnus.com>\n-\n-\t* testsuite/libstdc++.tests/test.exp, testsuite/lib/libstdc++.exp,\n-\t  testsuite/configure.in, testsuite/Makefile.in,\n-\t  testsuite/config/default.exp, testsuite/ChangeLog: New files.\n-\n-\t* configure.in: Add new testsuite directory to be configured.\n-\n-Tue Apr 22 19:03:39 1997  Alexandre Oliva <oliva@dcc.unicamp.br>\n-\n-\t* Makefile.in (install): Fix handling of mshlink.\n-\n-Fri Apr  4 03:25:13 1997  Ulrich Drepper  <drepper@cygnus.com>\n-\n-\t* Makefile.in (IO_DIR): Prepend $(MULTIBUILDTOP) to\n-\tsupport multilib build.\n-\t(LIBIBERTY_DIR): Likewise.\n-\n-\t* configure.in: Enable multilibing by default.\n-\tUpdate multilib template to read config-ml.in.\n-\n-Wed Mar 12 16:09:34 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* configure.in (XCXXINCLUDES): Add the STL directory.\n-\n-Thu Jan 23 08:08:43 1997  Brendan Kehoe  <brendan@lisa.cygnus.com>\n-\n-\t* stdexcept: Delete dtors for all of the error classes, to match\n-\ttheir removal in the Apr 1995 WP.\n- \t(class overflow_error): Define missing class, added in May 1996 WP.\n-\n-Mon Nov 18 16:57:25 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* Makefile.in (stuff[12]): More rules for my own evil purposes.\n-\t(CXXFLAGS, CFLAGS): Use -O instead of -O3 so debugging works.\n-\n-Wed Oct 16 13:47:45 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* config/irix5.ml: Do link against the math library.\n-\t* configure.in: Support shared libs on Irix 6.\n-\n-Fri Oct 11 18:06:09 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* config/linux.ml: Lose version overrides.\n-\n-\t* Makefile.in (MSHLINK): Defaults to .so.2.x\n-\t(mshlink): Indirect rule for making it.\n-\n-Tue Sep 24 17:58:31 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* Remove new, typeinfo, exception, stddef*.\n-\t* Move public headers from std/*.h to *.\n-\n-Sun Sep 22 05:35:55 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* Makefile.in: Remove new, exception, typeinfo handling.\n-\t* exceptioni.cc, newi.cc, typeinfoi.cc, std/exception.h, std/new.h,\n-\tstd/typeinfo.h, new.h: Remove.\n-\t* typeinfo, new, exception: Refer to the files with .h in gcc.\n-\n-Fri Sep 20 14:39:19 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* Makefile.in: Remove references to stl.list.\n-\t* configure.in (configdirs): Remove stl.\n-\n-Sat Sep 14 09:42:08 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* Makefile.in (stuff): Convenience for me.\n-\n-\t* std/bastring.h: Remove kludge obsoleted by new overloading code.\n-\n-Fri Sep  6 16:43:21 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* typeinfoi.cc (__dynamic_cast): Fix static_cast.\n-\t(__rtti_si): Likewise.\n-\t(dcast): Likewise.\n-\n-Thu Aug 29 17:06:23 1996  Michael Meissner  <meissner@tiktok.cygnus.com>\n-\n-\t* configure.in (i[345]86-*-*): Recognize i686 for pentium pro.\n-\n-Tue Jul 23 14:27:44 1996  Mike Stump  <mrs@cygnus.com>\n-\n-\t* Makefile.in (exceptioni.o): Use -fexceptions now.\n-\n-Mon Jun 17 13:57:24 1996  Per Bothner  <bothner@deneb.cygnus.com>\n-\n-\t* std/bastring.h (class basic_string::remove):  Add casts.\n-\n-\t* configure.in:  Use EXTRA_DISTCLEAN rather than DISTCLEAN.\n-\n-Fri Jun  7 14:09:20 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* typeinfoi.cc (BUILTIN): Align typeinfo object like a pointer.\n-\n-Wed May 29 16:48:35 1996  Mike Stump  <mrs@cygnus.com>\n-\n-\t* exceptioni.cc (__throw_bad_exception): Add.\n-\t* std/exception.h (bad_exception): Add.\n-\t* std/typeinfo.h: Remove leftovers of bad_cast_object.\n-\n-Mon May  6 14:04:42 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* std/complext.h: s/FLOAT/_FLT/g.\n-\n-Thu May  2 17:26:24 1996  Mike Stump  <mrs@cygnus.com>\n-\n-\t* exceptioni.cc (uncaught_exception): New routine.\n-\t* std/exception.h: Declare it.\n-\n-Thu Apr 25 13:20:57 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* Makefile.in (typeinfoi.o, stdexcepti.o): Use default rule.\n-\n-Wed Apr 24 18:38:24 1996  Mike Stump  <mrs@cygnus.com>\n-\n-\t* exceptioni.cc: Add #pragma implementation.\n-\t* std/exception.h: Add #pragma interface.  Moved exception from\n-\tstdexcept.\n-\t* std/stdexcept.h: Moved exception to exception.  Fix all constructor\n-\targuments to take strings to match ANSI.  Moved bad_cast and bad_typeid\n-\tto typeinfo.\n-\t* std/typeinfo.h: Moved bad_cast and bad_typeid from stdexcept.\n-\n-Wed Apr 24 10:43:07 1996  Doug Evans  <dje@blues.cygnus.com>\n-\n-\t* Makefile.in (newi.o,cstringi.o,stddefi.o,cstdlibi.o,cmathi.o): Add\n-\trules for SunOS VPATH.\n-\n-Fri Apr 19 17:24:51 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* Version 2.8.0b3.\n-\n-Wed Apr 10 14:38:05 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* typeinfoi.cc (base_info): Pack the latter three fields into 32 bits.\n-\n-Tue Apr  9 15:49:38 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* typeinfoi.cc: Add 'const'.\n-\t(__class_type_info): Now just one pointer to an array of structs,\n-\trather than four pointers to arrays.\n-\n-\t* typeinfoi.cc (__throw_type_match_rtti): Check for conversion to\n-\tvoid* before conversion to base*.\n-\t(dcast): Handle downcasting to X* given other X\tsubobjects in\n-\tthe most derived type.  Ack.\n-\n-Mon Apr  8 15:20:32 1996  Ian Lance Taylor  <ian@cygnus.com>\n-\n-\t* configure.in: Permit --enable-shared to specify a list of\n-\tdirectories.\n-\n-Sun Apr  7 22:50:53 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* typeinfoi.cc (__rtti_array): New entry point.\n-\n-Sat Apr  6 14:41:18 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* exceptioni.cc (__throw_bad_cast): New entry point for compiler.\n-\t* typeinfoi.cc: Remove __bad_cast_object.\n-\n-\t* typeinfoi.cc: Add nodes for unsigned builtins.\n-\n-Fri Apr  5 18:16:22 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* typeinfoi.cc, std/typeinfo.h: Total overhaul.  Move most\n- \teverything out of the header, move name field into type_info, add\n- \tsingle-inheritance case, rewrite pointer handling, add new\n- \tcompiler interface.  Compare addresses to check for equality.\n-\n-Wed Mar 27 11:54:08 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* Version 2.8.0b2.\n-\n-Fri Mar  8 13:56:18 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* std/[cs]inst.h: Remove.\n-\n-Thu Mar  7 07:29:00 1996  Lee Iverson  <leei@Canada.AI.SRI.COM>\n-\n-\t* Makefile.in (install): Restore deleted chdir to stl subdir.\n-\n-Thu Mar  7 15:02:58 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* std/complext.h: Fix __attribute__ usage.\n-\n-Wed Feb 28 10:00:24 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* Version 2.8.0b1.\n-\n-Mon Feb 26 17:26:26 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* std/cstring.h: New approach to changing signatures of string\n- \tmanipulation functions.  Still disabled.\n-\n-Tue Feb 20 18:29:30 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* std/complext.h (__doapl, __doami, __doaml, __doadv): Helper\n- \ttemplates to implement +=, -=, *= and /=, respectively, since\n- \tmember function templates do not apply to class specializations.\n-\t* std/{f,d,ld}complex.h, std/complext.cc, cinst.cc: Adjust.\n-\n-\t* std/bastring.h: The representation class is now a nested class.\n-\t* std/bastring.cc: Add templates for static data members.\n-\t* sinst.cc: Don't provide specializations for static data members.\n-\t* std/string.h: Use default template parameters.\n-\n-\t* Makefile.in (CXXFLAGS): Remove -pedantic -ansi.\n-\t(CFLAGS): Ditto.\n-\n-Wed Feb 14 14:39:07 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* std/bastring.cc (check_realloc): Fix for sizeof (charT) > 1.\n-\tFrom John Hickin <hickin@bnr.ca>.\n-\n-Wed Jan 10 11:05:04 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* std/bastring.h (insert): Fix iterator handling.\n-\tFrom Joe Buck <jbuck@synopsys.com>.\n-\n-Mon Jan  8 11:48:03 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* std/bastring.h (max_size): Fix for sizeof (charT) > 1.\n-\t* std/bastring.cc (replace): Use it.\n-\n-\t* std/bastring.cc (rfind): Fix for n > length ().\n-\n-Tue Dec 19 15:13:08 1995  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* config/aix.ml (SHFLAGS): Add -Wl,-unix.\n-\n-Mon Dec 18 12:48:25 1995  Mike Stump  <mrs@cygnus.com>\n-\n-\t* Makefile.in (exceptioni.o): Compile with -fhandle-exceptions, so\n-\twe can unwind through unexpected on machines that don't have a\n-\tworking __unwind_function.\n-\n-Sun Dec 17 00:28:31 1995  Jeffrey A Law  (law@cygnus.com)\n-\n-\t* Makefile.in (install): Make sure shared libraries\n-\tare installed with mode 555.\n-\n-Mon Nov 27 15:01:56 1995  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* Makefile.in (install): Make shared library links relative.\n-\t(install): Break up -sf into -s -f.\n-\t({M,}SHLINK): Ditto.\n-\n-Sun Nov 26 22:48:06 1995  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* queue: Include <stack.h> instead of <queue.h>.\n-\n-Sat Nov 25 11:33:13 1995  Doug Evans  <dje@canuck.cygnus.com>\n-\n-\t* Makefile.in (install): Fix setting of rootme.\n-\n-Tue Nov 21 14:20:34 1995  Ian Lance Taylor  <ian@cygnus.com>\n-\n-\t* configure.in: Check ${with_cross_host} rather than comparing\n-\t${host} and ${target}.\n-\n-Tue Nov 14 01:50:52 1995  Doug Evans  <dje@canuck.cygnus.com>\n-\n-\t* Makefile.in (IO_DIR): Delete MULTITOP, MULTISUBDIR.\n-\t(LIBIBERTY_DIR): Likewise.\n-\t(INSTALLDIR): Delete MULTISUBDIR.\n-\t* configure.in: Delete call to cfg-ml-com.in.  Call config-ml.in\n-\tinstead of cfg-ml-pos.in.\n-\t(XCXXINCLUDES): Delete MULTITOP.\n-\t* stl/configure.in (XCXXINCLUDES): Delete MULTITOP.\n-\t(config-ml.in): Call instead of cfg-ml-pos.in.\n-\n-Sun Nov 12 16:44:25 1995  Per Bothner  <bothner@kalessin.cygnus.com>\n-\n-\t* Makefile.in (VERSION):  Set to 2.7.1.\n-\n-Thu Nov  9 17:39:28 1995  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* config/{aix,dec-osf,irix5,linux,sol2shm}.ml: Remove LDLIBS defn;\n- \tno longer needed now that make check sets LD_LIBRARY_PATH.\n-\n-Wed Nov  8 19:46:35 1995  Brendan Kehoe  <brendan@lisa.cygnus.com>\n-\n-        * std/bastring.h: Wrap with #ifndef/#define/#endif.\n-        * std/cassert.h: Likewise.\n-        * std/cinst.h: Likewise.\n-        * std/complext.h: Likewise.\n-        * std/dcomplex.h: Likewise.\n-        * std/fcomplex.h: Likewise.\n-        * std/ldcomplex.h: Likewise.\n-        * std/sinst.h: Likewise.\n-\n-Wed Nov  8 16:15:48 1995  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* std/bastring.cc (getline): Update to September 95 WP.  Now we\n- \tdon't set failbit when reading an empty line.\n-\n-Tue Nov  7 16:09:04 1995  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* std/bastring.cc (new): Fix for sizeof (charT) != 1.\n-\n-Sat Nov  4 17:37:16 1995  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* std/complext.cc (operator / (FLOAT, const complex<FLOAT>&)):\n- \tReimplement along the lines of the other operator / templates.\n-\tFrom John Eaton <jwe@bevo.che.wisc.edu>.\n-\n-Sat Nov  4 13:33:50 1995  Per Bothner  <bothner@kalessin.cygnus.com>\n-\n-\t* configure.in (DISTCLEAN):  New, to add target-mkfrag.\n-\n-Tue Oct 31 13:59:32 1995  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* std/bastring.h: Use size_t for the reference count.\n-\t* std/bastring.cc (create): Set selfish.\n-\tFrom Joe Buck (jbuck@synopsys.com).\n-\n-Mon Oct 30 23:09:48 1995  Per Bothner  <bothner@kalessin.cygnus.com>\n-\n-\t* configure.in:  Don't bother changing LIBIBERTY for cross,\n-\tnow that we are using target-libiberty instead.\n-\t* Makefile.in (LIBIBERTY_DIR):  Simplify.\n-\t(LIBIBERTY):  Remove.\n-\n-Wed Oct 11 14:56:49 1995  Brendan Kehoe  <brendan@lisa.cygnus.com>\n-\n-\t* config/sol2shm.ml: New files with -rpath.\n-\t* configure (*-*-solaris*): Use sol2shm.ml.\n-\n-Thu Sep 28 09:26:52 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* std/straits.h (compare, copy, move, set): Fix for non-char charT's.\n-\t* std/bastring.h (basic_string::remove): Fix for non-char charT's.\n-\n-Tue Sep 26 15:22:56 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* config/irix5.ml: Pass -rpath to links.\n-\n-Fri Sep 15 00:17:47 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* config/linux.ml: Conform to Linux shared library numbering\n- \tscheme.\n-\t* Makefile.in: Ditto.\n-\n-Tue Sep 12 00:28:56 1995  Mike Stump  <mrs@cygnus.com>\n-\n-\t* typeinfoi.cc: (__pointer_type_info::__rtti_match): Moved from\n-\tthe headerfile, include all sorts of pointer conversions from 15.3\n-\tpara 2.\n-\t* std/typeinfo.h (__pointer_type_info::__rtti_match): Moved from here.\n-\n-Mon Sep 11 23:27:59 1995  Mike Stump  <mrs@cygnus.com>\n-\n-\t* std/typeinfo.h (__pointer_type_info::__rtti_match): We no longer\n-\thave to dereference the object pointer, as the pointer is always\n-\tpassed directly.\n-\n-Mon Sep 11 19:29:51 1995  Mike Stump  <mrs@cygnus.com>\n-\n-\t* std/typeinfo.h (__pointer_type_info::__rtti_match): Define so\n-\tthat pointer conversions can happen on catch type matching.\n-\t* typeinfoi.cc (__throw_type_match_rtti): Arrange for __rtti_match\n-\tto be used on pointers.\n-\n-Tue Sep  5 14:49:19 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* string.h: Remove for now.\n-\n-Thu Aug 31 14:14:01 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* std/bastring.cc (operator>>): Simplify and fix.\n-\t(resize): Fix order of arguments to append.\n-\t(getline): Simplify and fix.\n-\n-Thu Aug 24 17:44:09 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* std/cstdlib.h (abs): Provide default implementation for peons\n- \twithout labs.\n-\n-Tue Aug 22 08:43:07 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* std/cstdlib.h: Comment out definition of div(long,long) for now,\n- \tsince not all targets have ldiv.\n-\n-Mon Aug 21 11:46:03 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* std/cmath.h: Wrap abs(double) with #if ! _G_MATH_H_INLINES.\n-\n-\t* stl.h: Add, for compatibility with ObjectSpace STL.\n-\n-\t* std/complext.cc (operator /): Use abs instead of fabs.\n-\n-\t* std/bastring.h (replace): Update single-character replace method\n- \tas per my proposal.\n-\n-\t* std/cmath.h: Add abs(float), abs(double) and abs(long double).\n-  \tAdd commented-out declarations for other float and long double\n- \tmath functions.\n-\n-\t* std/cstdlib.h: Add abs(long) and div(long,long).\n-\n-\t* Makefile.in (install): Make shared library executable and\n- \tnon-writable.  Tidy.\n-\t(OBJS): Add cstdlibi.o and cmathi.o.\n-\n-\t* Rename implementation files to have different basenames.\n-\n-Mon Aug 21 00:57:03 1995  Jeffrey A. Law  <law@rtl.cygnus.com>\n-\n-\t* Makefile.in (install): Use \"cd stl\"; no need for $(srcdir)\n-\tprefix because we're already in $(srcdir).\n-\n-Tue Jul 25 18:41:29 1995  Per Bothner  <bothner@kalessin.cygnus.com>\n-\n-\t* std/stddef.h:  Remove obsolete definition of enum capacity.\n-\n-Sat Jul 22 13:37:01 1995  Doug Evans  <dje@canuck.cygnus.com>\n-\n-\t* Makefile.in (IO_DIR): Add multilib support.\n-\t(LIBIBERTY, LIBIBERTY_OBJS, INSTALLDIR, stdlist): Likewise.\n-\t(libiberty.a, install): Likewise.\n-\t* configure.in: Likewise.\n-\t(XCXXINCLUDES): Likewise.\n-\t* stl/configure.in: Likewise.\n-\t(XCXXINCLUDES): Likewise.\n-\n-Mon Jul 17 09:29:31 1995  Brendan Kehoe  <brendan@lisa.cygnus.com>\n-\n-\t* Makefile.in (typeinfo.o, stdexcept.o): Put an else for the if\n-\tstmt checking PICFLAG.\n-\t(stmp-string, bigstmp-string, stmp-complex, bigstmp-complex): Likewise.\n-\n-Wed Jun 28 17:05:29 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* std/*.h: Wrap with extern \"C++\".\n-\n-\t* std/ciso646.h: Don't worry about #undefing the keywords.\n-\n-Mon Jun 26 19:05:38 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* std/bastring.h (operator!=): If they've included the STL\n-        function.h, don't overload the operator templates that it defines.\n-\n-Fri Jun 23 16:54:17 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* Makefile.in (SHLINK): Force link.\n-\t(install): Ditto.\n-\n-\t* std/bastring.h (terminate): Never reallocate.\n-\t(alloc): No longer const.\n-\n-\t* std/bastring.cc (create): Always allocate an extra byte.\n-\t(check_realloc): Always leave room for an extra byte.\n-\t(*find*): Add missing 'const'.\n-\n-\t* Makefile.in (SHARLIB): Provide a default value.\n-\n-Tue Jun 20 16:29:52 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* std/cstring.h: Don't bother tweaking prototypes for now.  When\n-        we do, we will use new-style casts.\n-\n-Fri Jun 16 13:57:53 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* Makefile.in (VERSION): Update to 2.7.0.\n-\n-\t* config/aix.ml: Build both shared and archive libraries.\n-\n-Wed Jun 14 21:44:21 1995  Jason Merrill  <jason@python.cygnus.com>\n-\n-\t* configure.in (frags): Use linux.ml for Linux/ELF.\n-\t* config/linux.ml: New file.\n-\n-Wed Jun 14 17:56:23 1995  Niclas Andersson  <nican@ida.liu.se>\n-\n-\t* configure.in: Use xiberty when building cross-compiler.\n-\n-Wed Jun 14 12:57:47 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* std/*complex*, std/cinst.h, cinst.cc: Pass by reference to const\n-        rather than by value.\n-\t* std/*complex*: Add member functions real() and imag().\n-\n-Sat Jun 10 12:14:38 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* Makefile.in (bigstmp-string): Call main string object cstrmain.o\n-        instead of cstring.o.\n-\n-Wed Jun  7 11:15:15 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* std/cstring.h: Use #include_next to pick up <string.h>.\n-\n-\t* string.h: New file.\n-\n-\t* Makefile.in (MOSTLYCLEAN_JUNK): Remove piclist.\n-\n-\t* configure.in (MOSTLYCLEAN): Remove stamp-picdir.\n-\n-Mon Jun  5 18:36:39 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* config/*.ml: Build both shared and archive libraries.\n-\n-\t* configure.in (MOSTLYCLEAN): Remove pic.\n-\t(frags): Use toplevel pic frags.\n-\n-\t* Makefile.in (piclist): New rule.\n-\t(SHLIB): Use it.\n-\t(stl.list): Removed.\n-\t(typeinfo.o): Also build pic version.\n-\t(stdexcept.o): Ditto.\n-\t(*stmp-*): Ditto.\n-\n-Tue May 30 12:01:14 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* std/{complext,{f,d,ld}complex}.h: To declare specializations,\n-        use friend declarations in the class body...\n-\t* std/cinst.h: ...rather than macro hackery.\n-\n-\t* Makefile.in (stdlist): Renamed from list.\n-\n-\t* cstdarg: Don't define __CSTDARG__.\n-\t* complex.h: Similarly.\n-\n-Tue May  9 19:31:20 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* std/bastring.cc (operator>>): Use an int to store the return value\n-        of streambuf::sbumpc.\n-\t(getline): Ditto.\n-\t* std/bastring.* (replace): Reverse size_t and charT arguments.\n-\n-\t* configure.in (enable_shared): Support enable_shared under AIX.\n-\n-\t* Makefile.in (SHARLIB): New variable and rule for building an\n-        archive library containing a single shared object (for AIX).\n-\n-Mon May  8 01:43:19 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* std/bastring.h (remove): Forgot one.\n-\t(empty): And this.\n-\tDisable copy-on-write if someone takes an iterator.\n-\n-\t* std/bastring.cc (getline): Avoid resizing down if unnecessary.\n-\t(operator>>): Don't use private methods.\n-\n-Sun May  7 02:39:56 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* std/bastring.h (insert, replace): Fix.\n-\t* std/bastring.cc (find_*_of): Fix.\n-\n-Fri May  5 01:45:10 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* std/bastring.h: Add iterator remove fn.  Remove evil default\n-        arguments.\n-\n-\t* std/*complex*, std/cinst.h, cinst.cc: s/__complex/complex/g.\n-        complex<float> is now specialized.  Lose _*_complex in favor of\n-        'explicit' constructors.\n-\t* std/complex.h: Lose typedef of complex.\n-\t* std/fcomplex.h: New file.\n-\t* std/complext.cc (operator<<): Accept more input forms.\n-\n-\t* std/bastring.h: Add iterator insert fns.\n-\n-Thu May  4 02:30:04 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* std/bastring.*: Update to current draft.\n-\n-\t* std/bastring.*: Reorganize so that the pointer in a string\n-        object points to the data rather than the bsrep object, for\n-        debugging.\n-\n-Tue Apr 25 17:15:09 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* configure.in: Update to stay in sync with config.shared.\n-\n-Mon Apr 24 13:08:46 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* std/complext.h: Declare hypot.  Declare appropriate functions const.\n-\n-Wed Apr 12 15:26:25 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* Makefile.in (typeinfo.o): Don't use $<.\n-\t(stdexcept.o): Ditto.\n-\n-Sat Apr  8 15:35:00 1995  Mike Stump  <mrs@cygnus.com>\n-\n-\t* std/typeinfo.h: Move bad_cast, bad_typeid and __bad_cast_object\n-\tfrom here to stdexcept.\n-\t* std/stdexcept.h: Ditto.\n-\t* Makefile.in (stdexcept.o): Added rule to build typeinfo.o with\n-\t-frtti to support matching of thrown objects with rtti info for\n-\tbad_cast.\n-\n-Mon Apr  3 18:13:14 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* typeinfo: New file.\n-\n-\t* Makefile.in (HEADERS): Add typeinfo.\n-\n-Mon Apr  3 15:06:58 1995  Mike Stump  <mrs@cygnus.com>\n-\n-\t* Makefile.in (typeinfo.o): Added rule to build typeinfo.o with\n-\t-frtti to support matching of thrown objects with rtti info for\n-\tbad_cast.\n-\n-Wed Mar 29 15:56:06 1995  Mike Stump  <mrs@cygnus.com>\n-\n-\t* typeinfo.cc: (__throw_type_match_rtti): Added to support\n-\tmatching of thrown objects with rtti info.\n-\n-Thu Mar 23 18:42:30 1995  Jason Merrill  <jason@deneb.cygnus.com>\n-\n-\t* Makefile.in (HEADERS): Add stdexcept.\n-\n-Sun Mar 12 01:25:27 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* std/typeinfo.h: Add return statements to dummy methods.\n-\n-Wed Mar  8 16:09:50 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* config/dec-osf.ml: Use -rpath flag.\n-\n-Fri Feb 17 18:16:46 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* std/typeinfo.h: Add copyright header.\n-\n-\t* Makefile.in (CXXFLAGS): Add a bunch of warning options to keep\n-        me honest.\n-\n-Thu Feb 16 00:04:49 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* Makefile.in, config/*.ml: Generate shared library on most hosts\n-\tas libstdc++.so.$(VERSION), with a symlink to libstdc++.so, so that\n-\tmultiple versions can coexist.\n-\n-Fri Feb 10 02:59:39 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* std/exception.h: {set_,}{terminate,unexpected} have C++ linkage.\n-\n-\t* Makefile.in: Allow string and complex to be split up either by\n-        individual function or into I/O and non-I/O.  Default to the\n-        latter.\n-\n-Wed Feb  8 02:39:47 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* std/bastring.h: Start thinking about throwing exceptions.\n-\n-\t* typeinfo.cc: Remove private functions; defining them to call\n-        abort () just delays errors until runtime.  Define\n-        __bad_cast_object.\n-\n-\t* std/exception.h: Standard exceptions are now defined in\n-        stdexcept.h.  This header now contains declarations of terminate()\n-        et al.\n-\t* exception.cc: Move code from libg++/src/except.c here.\n-\t* std/typeinfo.h: Define RTTI-related exceptions here.\n-\t* stdexcept{,.cc},std/stdexcept.h: New files.\n-\n-Mon Feb  6 18:51:31 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* Makefile.in (HEADERS): Resurrect, add new STL header names.\n-\t(install): Install extensionless headers again.\n-\t* extensionless headers: Resurrect, add new STL headers.\n-        Currently only forward to std/whatever or stl/whatever.\n-\n-Mon Jan 30 13:53:22 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* std/bastring.h (basic_string (charT, size_t)): Mark explicit.\n-\n-\t* Makefile.in (install): Set rootme when installing stl headers.\n-\tOnly install *.* from std.\n-\n-Wed Jan 25 02:29:30 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* std/bastring.h (operator=): grab before releasing.\n-\n-Mon Jan 23 19:54:02 1995  Ronald F. Guilmette  <rfg@segfault.us.com>\n-\n-\t* Makefile.in (install): Also install STL headers.\n-\n-Mon Jan 23 04:09:35 1995  Jason Merrill  <jason@python.cygnus.com>\n-\n-\t* Makefile.in (list): Set $rootme before calling make.\n-\n-Wed Jan 11 19:24:47 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* typeinfo.cc (__rtti_match): Don't try to do pointer arithmetic\n-        with a void *.\n-\n-\t* move all headers into std subdirectory and update files accordingly.\n-\n-Thu Jan  5 01:51:49 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* bastring.ccI (basic_string (size_t, capacity)): s/reserve/::reserve/.\n-\n-Wed Jan  4 17:27:32 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* exception: s/string/__string/g.\n-\n-\t* configure.in (MOSTLYCLEAN): Add so_locations.\n-\n-\t* bastring.ccI (basic_string (size_t, capacity)): Fix thinko.\n-\t(various find functions): Ditto.\n-\n-Fri Dec 30 18:04:00 1994  Mike Stump  <mrs@cygnus.com>\n-\n-\t* typeinfo.h: Add support for the built-in type bool.\n-\n-Fri Dec 30 14:57:02 1994  Mike Stump  <mrs@cygnus.com>\n-\n-\t* typeinfo.{cc, h}: Guard against multiple inclusions, and add #p i/i.\n-\n-Fri Dec  2 17:56:05 1994  Mike Stump  <mrs@cygnus.com>\n-\n-\t* libg++ 2.6.2 released.\n-\n-\t* typeinfo.{cc, h} (__rtti_match): Change interface to compiler\n-        for dynamic_casting to gear up for exception handling's use of\n-        rtti for argument matching.\n-\n-Tue Nov 29 16:49:32 1994  Per Bothner  <bothner@kalessin.cygnus.com>\n-\n-\t* configure.in (configdirs):  Add stl.\n-\t* Makefile.in:  Build stl, and merge .o files from it.\n-\n-Thu Nov 17 15:30:57 1994  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* bastring.hI: Add iterator, const_iterator, begin() and end() to\n-        basic_string.\n-\n-Mon Nov  7 16:50:33 1994  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* Makefile.in, configure.in, config/*.ml, tests/Makefile.in,\n-\ttests/configure.in: Various changes to handle --enable-shared.\n-\n-Fri Nov  4 19:13:33 1994  Mike Stump  <mrs@cygnus.com>\n-\n-\t* exception{,.cc}: Added to support catching bad_cast's.\n-\n-Thu Nov  3 17:42:13 1994  Mike Stump  <mrs@cygnus.com>\n-\n-\t* typeinfo.h (type_info::{name, before}): Add to match draft.\n-\n-Thu Nov  3 00:56:34 1994  Jason Merrill  (jason@phydeaux.cygnus.com)\n-\n-\t* Makefile.in (LIBIBERTY_OBJS): Add strerror.o.\n-\n-Mon Oct 31 15:33:06 1994  Kung Hsu  (kung@mexican.cygnus.com)\n-\n-\t* typeinfo.cc: Fix a bug in the final return.\n-\t* typeinfo.cc: Fix the ANSI header version number.\n-\t* typeinfo.h: ditto.\n-\n-Fri Oct 28 14:23:12 1994  Mike Stump  <mrs@cygnus.com>\n-\n-\t* type_info.{cc,h}: Rename to typeinfo to better match current draft.\n-\n-Wed Oct 26 11:13:53 1994  Kung Hsu  (kung@mexican.cygnus.com)\n-\n-\t* type_info.h: new header file for rtti.\n-\t* type_info.cc: new code file for rtti.\n-\t* Makefile.in: change to include type_info.o in libstdc++ for rtti.\n-\n-Sat Oct 15 16:09:51 1994  Jason Merrill  (jason@phydeaux.cygnus.com)\n-\n-\t* libg++ 2.6.1 released.\n-\n-\t* cinst.hI: Also declare instantiations of out-of-line functions.\n-\n-Fri Oct 14 15:00:09 1994  Jason Merrill  (jason@phydeaux.cygnus.com)\n-\n-\t* configure.in (CXXINCLUDES): Use {} to wrap variable name.\n-\t* tests/configure.in (CXXINCLUDES): Ditto.\n-\n-\t* cinst.hI: Declare instantiations of two-argument functions so\n-        overload resolution will work.\n-\t* complext.hI: Always include cinst.hI.\n-\n-\t* bastring.ccI (operator>>): Tweak.\n-\n-Tue Oct 11 17:07:49 1994  Jason Merrill  (jason@phydeaux.cygnus.com)\n-\n-\t* stddef*: Do the #pragma i/i thang.\n-\n-\t* bastring.hI (basic_string::put_at): Use operator[].\n-\t(basic_string::terminate): Don't necessarily copy the rep.\n-\n-\t* bastring.ccI (operator>>): Avoid shrinking and then re-expanding\n-        the string.\n-\n-\t* bastring.*I, sinst.cc: Only allow allocation policy control if\n-\t_G_ALLOC_CONTROL is defined.\n-\n-\t* Makefile.in (libstdc++.a): Depend on iostream.list and libiberty.a.\n-\t(../libio/iostream.list): New rule.\n-\t(../libiberty/libiberty.a): New rule.\n-\t(OBJS): Add stddef.o.\n-\n-Sat Oct  8 23:59:45 1994  Jason Merrill (jason@phydeaux.cygnus.com)\n-\n-\t* *: First checkin."}, {"sha": "fa6fe0081087c7e022c6c9626c0e1877519e2252", "filename": "libstdc++/Makefile.in", "status": "removed", "additions": 0, "deletions": 411, "changes": 411, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2FMakefile.in?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,411 +0,0 @@\n-# Copyright (C) 1994, 1995, 1999, 2000 Free Software Foundation\n-\n-# This file is part of the GNU ANSI C++ Library.  This library is free\n-# software; you can redistribute it and/or modify it under the terms of\n-# the GNU General Public License as published by the Free Software\n-# Foundation; either version 2, or (at your option) any later version.\n-\n-# This library is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-\n-# You should have received a copy of the GNU General Public License\n-# along with this library; see the file COPYING.  If not, write to the Free\n-# Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n-\n-VERSION = 2.10.0\n-INTERFACE = 3\n-\n-gxx_include_dir=${includedir}/g++\n-\n-OBJS  = cstringi.o stdexcepti.o cstdlibi.o cmathi.o stlinst.o valarray.o \\\n-\tdel_op.o del_opnt.o del_opv.o del_opvnt.o exception.o new_handler.o \\\n-\tnew_op.o new_opnt.o new_opv.o new_opvnt.o tinfo.o tinfo2.o vec.o \\\n-\tpure.o\n-\t\n-SUBLIBS = $(STAMP)-string $(STAMP)-complx\n-\n-# C++ headers with no extension\n-HEADERS= cassert cctype cerrno cfloat ciso646 climits clocale cmath complex \\\n-\t csetjmp csignal cstdarg cstddef cstdio cstdlib cstring ctime \\\n-\t cwchar cwctype string stdexcept \\\n-\t algorithm deque functional hash_map hash_set iterator list map \\\n-\t memory numeric pthread_alloc queue rope set slist stack utility \\\n-\t vector fstream iomanip iostream strstream iosfwd bitset valarray \\\n-\t sstream exception new typeinfo\n-\n-ARLIB   = libstdc++.a.$(VERSION)\n-ARLINK  = libstdc++.a\n-MARLINK = libstdc++.a.`echo $(VERSION) | sed 's/\\([0-9]*[.][0-9]*\\).*/\\1/'`\n-SHLIB   = libstdc++.so.$(VERSION)\n-SHARLIB = libstdc++-sh.a\n-SHLINK  = libstdc++.so\n-MSHLINK = libstdc++.so.`echo $(VERSION) | sed 's/\\([0-9]*[.][0-9]*\\).*/\\1/'`\n-SHFLAGS =\n-SHDEPS  =\n-SHOPT\t= -shared\n-\n-STAMP   = bigstmp\n-\n-LIBS    = $(ARLIB) $(ARLINK)\n-\n-#### package, host, target, and site dependent Makefile fragments come in here.\n-##\n-\n-IO_DIR    = ../libio\n-LIBIBERTY_DIR = ../libiberty\n-\n-LIBIBERTY_OBJS = `cat $(LIBIBERTY_DIR)/needed-list` strerror.o\n-\n-tooldir = $(exec_prefix)/$(target)\n-# This is where the libraries will be installed; note, it will be set\n-# at make runtime now. See below at target install.\n-INSTALLDIR = $(libdir)\n-\n-MOSTLYCLEAN_JUNK = *stmp-* tlib*.a *.s *.ii stdlist piclist\n-CLEAN_JUNK = $(LIBS)\n-\n-.PHONY: libs\n-libs: $(LIBS)\n-\n-# The \"pic\" subdir must be created before we can put any object\n-# files into it.\n-$(OBJS): stamp-picdir\n-\n-stdlist: $(IO_DIR)/iostream.list $(OBJS) $(SUBLIBS) $(LIBIBERTY_DIR)/libiberty.a\n-\t-rm -f tlist\n-\ttouch tlist\n-\techo *.o >> tlist\n-\tfor f in `cat $(IO_DIR)/iostream.list` ; do \\\n-\t  echo \"$(IO_DIR)/$$f\" >> tlist ; \\\n-\tdone\n-\tfor f in $(LIBIBERTY_OBJS) ; do \\\n-\t  echo \"$(LIBIBERTY_DIR)/$$f\" >> tlist ; \\\n-\tdone\n-\tmv tlist stdlist\n-\n-piclist: stdlist\n-\t-rm -f tlist\n-\tcp stdlist tlist\n-\tif [ x\"$(PICFLAG)\" != x ]; then \\\n-\t  sed 's,\\([A-Za-z_0-9]*\\.o\\),pic/\\1,g' tlist > tlist2 ; \\\n-\t  mv tlist2 tlist ; \\\n-\telse true ; fi\n-\tmv tlist piclist\n-\n-$(ARLIB): stdlist\n-\t-rm -f t$(ARLIB)\n-\t$(AR) $(AR_FLAGS) t$(ARLIB) `cat stdlist`\n-\tmv t$(ARLIB) $(ARLIB)\n-\t$(RANLIB) $(ARLIB)\n-\n-$(ARLINK):\n-\t-rm -f $(ARLINK)\n-\t$(LN_S) $(ARLIB) $(ARLINK) || cp $(ARLIB) $(ARLINK)\n-\n-marlink:\n-\t@$(MAKE) $(MARLINK) \"ARLINK=$(MARLINK)\"\n-\n-$(SHLIB): piclist\n-\t$(CC) $(LIBCXXFLAGS) $(SHFLAGS) $(SHOPT) -o $(SHLIB) `cat piclist` $(SHDEPS)\n-\n-$(SHARLIB): $(SHLIB)\n-\t-rm -f t$(SHARLIB)\n-\t$(AR) $(AR_FLAGS) t$(SHARLIB) $(SHLIB)\n-\tmv t$(SHARLIB) $(SHARLIB)\n-\t$(RANLIB) $(SHARLIB)\n-\n-$(SHLINK):\n-\t-rm -f $(SHLINK)\n-\t$(LN_S) $(SHLIB) $(SHLINK) || cp $(ARLIB) $(ARLINK)\n-\n-mshlink:\n-\t@$(MAKE) $(MSHLINK) \"SHLINK=$(MSHLINK)\"\n-\n-$(IO_DIR)/iostream.list: force\n-\tcd $(IO_DIR) ; $(MAKE) $(FLAGS_TO_PASS) iostream.list\n-\n-$(LIBIBERTY_DIR)/libiberty.a:\n-\tcd $(LIBIBERTY_DIR) ; $(MAKE) $(FLAGS_TO_PASS)\n-\n-STRFUNCS = REP MAIN TRAITS ADDSS ADDPS ADDCS ADDSP ADDSC \\\n-\t   EQSS EQPS EQSP NESS NEPS NESP LTSS LTPS LTSP GTSS GTPS GTSP \\\n-\t   LESS LEPS LESP GESS GEPS GESP\n-STRIO\t = EXTRACT INSERT GETLINE\n-\n-# These are here for SunOS VPATH.\n-cinst.o: cinst.cc\n-cmathi.o: cmathi.cc\n-cstdlibi.o: cstdlibi.cc\n-cstringi.o: cstringi.cc\n-del_op.o: del_op.cc new\n-del_opnt.o: del_opnt.cc new\n-del_opv.o: del_opv.cc new\n-del_opvnt.o: del_opvnt.cc new\n-exception.o: exception.cc typeinfo $(srcdir)/../gcc/gansidecl.h \\\n-  $(srcdir)/../include/ansidecl.h $(srcdir)/../gcc/eh-common.h\n-new_handler.o: new_handler.cc new\n-new_op.o: new_op.cc new\n-new_opnt.o: new_opnt.cc new\n-new_opv.o: new_opv.cc new\n-new_opvnt.o: new_opvnt.cc new\n-sinst.o: sinst.cc\n-stdexcepti.o: stdexcepti.cc\n-stlinst.o: stlinst.cc\n-tinfo.o: tinfo.cc tinfo.hP typeinfo new\n-tinfo2.o: tinfo2.cc tinfo.hP typeinfo new\n-valarray.o: valarray.cc\n-vec.o: vec.cc\n-pure.o: pure.c\n-\n-# Later do wide strings, too.\n-stmp-string: ${srcdir}/sinst.cc ${srcdir}/std/bastring.h \\\n-\t     ${srcdir}/std/bastring.cc ${srcdir}/std/straits.h\n-\tfor name in $(STRFUNCS) $(STRIO); do \\\n-\t  echo c$${name}; \\\n-\t  if [ x\"$(PICFLAG)\" != x ]; then \\\n-\t    $(COMPILE.cc) $(PICFLAG) -DC -D$${name} ${srcdir}/sinst.cc \\\n-\t      -o pic/c$${name}.o; \\\n-\t  else true ; fi; \\\n-\t  if [ $$? -eq 0 ]; then true; else exit 1; fi; \\\n-\t  $(COMPILE.cc) -DC -D$${name} ${srcdir}/sinst.cc -o c$${name}.o; \\\n-\t  if [ $$? -eq 0 ]; then true; else exit 1; fi; \\\n-\tdone\n-\ttouch stmp-string\n-\n-bigstmp-string: ${srcdir}/sinst.cc ${srcdir}/std/bastring.h \\\n-\t        ${srcdir}/std/bastring.cc ${srcdir}/std/straits.h\n-\techo cstring\n-\tif [ x\"$(PICFLAG)\" != x ]; then \\\n-\t  $(COMPILE.cc) $(PICFLAG) -DC \\\n-\t    `for N in $(STRFUNCS); do echo \" -D$${N}\"; done` \\\n-\t    $(srcdir)/sinst.cc -o pic/cstrmain.o; \\\n-\telse true ; fi\n-\t$(COMPILE.cc) -DC `for N in $(STRFUNCS); do echo \" -D$${N}\"; done` \\\n-\t  $(srcdir)/sinst.cc -o cstrmain.o\n-\techo cstrio\n-\tif [ x\"$(PICFLAG)\" != x ]; then \\\n-\t  $(COMPILE.cc) $(PICFLAG) -DC \\\n-\t    `for N in $(STRIO); do echo \" -D$${N}\"; done` \\\n-\t    $(srcdir)/sinst.cc -o pic/cstrio.o; \\\n-\telse true ; fi\n-\t$(COMPILE.cc) -DC `for N in $(STRIO); do echo \" -D$${N}\"; done` \\\n-\t  $(srcdir)/sinst.cc -o cstrio.o\n-\ttouch bigstmp-string\n-\n-COMFUNCS = MAIN ADDCC ADDCF ADDFC SUBCC SUBCF SUBFC MULCC MULCF MULFC DIVCC \\\n-\t   DIVCF DIVFC PLUS MINUS EQCC EQCF EQFC NECC NECF NEFC ABS ARG POLAR \\\n-\t   CONJ NORM COS COSH EXP LOG POWCC POWCF POWCI POWFC SIN SINH SQRT\n-COMIO    = EXTRACT INSERT\n-\n-stmp-complx: ${srcdir}/cinst.cc ${srcdir}/std/complext.h \\\n-\t      ${srcdir}/std/complext.cc ${srcdir}/std/dcomplex.h \\\n-\t      ${srcdir}/std/ldcomplex.h\n-\tfor N in $(COMFUNCS) $(COMIO); do \\\n-\t  echo f$${N}; \\\n-\t  if [ x\"$(PICFLAG)\" != x ]; then \\\n-\t    $(COMPILE.cc) $(PICFLAG) -DF -D$${N} $(srcdir)/cinst.cc \\\n-\t      -o pic/f$${N}.o; \\\n-\t  else true ; fi; \\\n-\t  if [ $$? -eq 0 ]; then true; else exit 1; fi; \\\n-\t  $(COMPILE.cc) -DF -D$${N} ${srcdir}/cinst.cc -o f$${N}.o; \\\n-\t  if [ $$? -eq 0 ]; then true; else exit 1; fi; \\\n-\t  echo d$${N}; \\\n-\t  if [ x\"$(PICFLAG)\" != x ]; then \\\n-\t    $(COMPILE.cc) $(PICFLAG) -DD -D$${N} $(srcdir)/cinst.cc \\\n-\t      -o pic/d$${N}.o; \\\n-\t  else true ; fi; \\\n-\t  if [ $$? -eq 0 ]; then true; else exit 1; fi; \\\n-\t  $(COMPILE.cc) -DD -D$${N} ${srcdir}/cinst.cc -o d$${N}.o; \\\n-\t  if [ $$? -eq 0 ]; then true; else exit 1; fi; \\\n-\t  echo ld$${N}; \\\n-\t  if [ x\"$(PICFLAG)\" != x ]; then \\\n-\t    $(COMPILE.cc) $(PICFLAG) -DLD -D$${N} $(srcdir)/cinst.cc \\\n-\t      -o pic/ld$${N}.o; \\\n-\t  else true ; fi; \\\n-\t  if [ $$? -eq 0 ]; then true; else exit 1; fi; \\\n-\t  $(COMPILE.cc) -DLD -D$${N} ${srcdir}/cinst.cc -o ld$${N}.o; \\\n-\t  if [ $$? -eq 0 ]; then true; else exit 1; fi; \\\n-\tdone\n-\ttouch stmp-complx\n-\n-bigstmp-complx: ${srcdir}/cinst.cc ${srcdir}/std/complext.h \\\n-\t         ${srcdir}/std/complext.cc ${srcdir}/std/dcomplex.h \\\n-\t         ${srcdir}/std/ldcomplex.h\n-\techo fcomplex\n-\tif [ x\"$(PICFLAG)\" != x ]; then \\\n-\t  $(COMPILE.cc) $(PICFLAG) -DF \\\n-\t    `for N in $(COMFUNCS); do echo \" -D$${N}\"; done` \\\n-\t    $(srcdir)/cinst.cc -o pic/fcomplex.o; \\\n-\telse true ; fi\n-\t$(COMPILE.cc) -DF `for N in $(COMFUNCS); do echo \" -D$${N}\"; done` \\\n-\t  $(srcdir)/cinst.cc -o fcomplex.o\n-\techo fcomio\n-\tif [ x\"$(PICFLAG)\" != x ]; then \\\n-\t  $(COMPILE.cc) $(PICFLAG) -DF \\\n-\t    `for N in $(COMIO); do echo \" -D$${N}\"; done` \\\n-\t    $(srcdir)/cinst.cc -o pic/fcomio.o; \\\n-\telse true ; fi\n-\t$(COMPILE.cc) -DF `for N in $(COMIO); do echo \" -D$${N}\"; done` \\\n-\t  $(srcdir)/cinst.cc -o fcomio.o\n-\techo dcomplex\n-\tif [ x\"$(PICFLAG)\" != x ]; then \\\n-\t  $(COMPILE.cc) $(PICFLAG) -DD \\\n-\t    `for N in $(COMFUNCS); do echo \" -D$${N}\"; done` \\\n-\t    $(srcdir)/cinst.cc -o pic/dcomplex.o; \\\n-\telse true ; fi\n-\t$(COMPILE.cc) -DD `for N in $(COMFUNCS); do echo \" -D$${N}\"; done` \\\n-\t  $(srcdir)/cinst.cc -o dcomplex.o\n-\techo dcomio\n-\tif [ x\"$(PICFLAG)\" != x ]; then \\\n-\t  $(COMPILE.cc) $(PICFLAG) -DD \\\n-\t    `for N in $(COMIO); do echo \" -D$${N}\"; done` \\\n-\t    $(srcdir)/cinst.cc -o pic/dcomio.o; \\\n-\telse true ; fi\n-\t$(COMPILE.cc) -DD `for N in $(COMIO); do echo \" -D$${N}\"; done` \\\n-\t  $(srcdir)/cinst.cc -o dcomio.o\n-\techo ldcomplex\n-\tif [ x\"$(PICFLAG)\" != x ]; then \\\n-\t  $(COMPILE.cc) $(PICFLAG) -DLD \\\n-\t    `for N in $(COMFUNCS); do echo \" -D$${N}\"; done` \\\n-\t    $(srcdir)/cinst.cc -o pic/ldcomplex.o; \\\n-\telse true ; fi\n-\t$(COMPILE.cc) -DLD `for N in $(COMFUNCS); do echo \" -D$${N}\"; done` \\\n-\t  $(srcdir)/cinst.cc -o ldcomplex.o\n-\techo ldcomio\n-\tif [ x\"$(PICFLAG)\" != x ]; then \\\n-\t  $(COMPILE.cc) $(PICFLAG) -DLD \\\n-\t    `for N in $(COMIO); do echo \" -D$${N}\"; done` \\\n-\t    $(srcdir)/cinst.cc -o pic/ldcomio.o; \\\n-\telse true ; fi\n-\t$(COMPILE.cc) -DLD `for N in $(COMIO); do echo \" -D$${N}\"; done` \\\n-\t  $(srcdir)/cinst.cc -o ldcomio.o\n-\ttouch bigstmp-complx\n-\n-.PHONY: install\n-install:\n-\trootme=`pwd`/ ; export rootme ; \\\n-\tif [ -z \"$(MULTISUBDIR)\" ]; then \\\n-\t  cd $(srcdir); \\\n-\t  for FILE in $(HEADERS); do \\\n-\t    rm -f $(gxx_include_dir)/$$FILE ; \\\n-\t    if [ -f stl/$$FILE ]; then \\\n-\t      $(INSTALL_DATA) stl/$$FILE $(gxx_include_dir)/$$FILE ; \\\n-\t    else \\\n-\t      $(INSTALL_DATA) $$FILE $(gxx_include_dir)/$$FILE ; \\\n-\t    fi ; \\\n-\t    chmod a-x $(gxx_include_dir)/$$FILE ; \\\n-\t  done ; \\\n-\t  for FILE in *.h std/*.h std/*.cc std/*.tcc; do \\\n-\t    rm -f $(gxx_include_dir)/$$FILE ; \\\n-\t    $(INSTALL_DATA) $$FILE $(gxx_include_dir)/$$FILE ; \\\n-\t    chmod a-x $(gxx_include_dir)/$$FILE ; \\\n-\t  done ; \\\n-\t  cd stl; \\\n-\t  for FILE in *.h; do \\\n-\t    rm -f $(gxx_include_dir)/$$FILE ; \\\n-\t    $(INSTALL_DATA) $$FILE $(gxx_include_dir)/$$FILE ; \\\n-\t    chmod a-x $(gxx_include_dir)/$$FILE ; \\\n-\t  done ; \\\n-\telse true ; \\\n-\tfi\n-\trootme=`pwd`/ ; export rootme ; \\\n-\tif [ x$(enable_version_specific_runtime_libs) != xyes ]; then \\\n-\t  INSTALLDIR=$(libdir); \\\n-\telse \\\n-\t  INSTALLDIR=$(libsubdir); \\\n-\tfi; \\\n-\tINSTALLLINKDIR=$(libsubdir); \\\n-\tif [ $${INSTALLLINKDIR}$(MULTISUBDIR) = $${INSTALLDIR}$(MULTISUBDIR) ]; then \\\n-\t  RELINSTALLDIR=; \\\n-\telif [ x$(MULTISUBDIR) = x ]; then \\\n-\t  if [ $(build_alias) = $(target_alias) ]; then \\\n-\t    RELINSTALLDIR=../../../; \\\n-\t  else \\\n-\t    RELINSTALLDIR=../../../../$(target_alias)/lib/; \\\n-\t  fi; \\\n-\telse \\\n-\t  if [ $(build_alias) = $(target_alias) ]; then \\\n-\t    RELINSTALLDIR=../../..`echo $(MULTISUBDIR) | sed -e 's,/[^/]*,/..,g'`$(MULTISUBDIR)/; \\\n-\t  else \\\n-\t    RELINSTALLDIR=../../../..`echo $(MULTISUBDIR) | sed -e 's,/[^/]*,/..,g'`/$(target_alias)/lib$(MULTISUBDIR)/; \\\n-\t  fi; \\\n-\tfi; \\\n-\tif [ $(build_alias) != $(target_alias) ]; then \\\n-\t  case $$RELINSTALLDIR in \\\n-\t  ../../../|../../../../) \\\n-\t    RELINSTALLDIR=../$${RELINSTALLDIR}$(target_alias)/lib/;; \\\n-\t  esac; \\\n-\tfi; \\\n-\trm -f $${INSTALLLINKDIR}$(MULTISUBDIR)/$(SHLINK) ; \\\n-\trm -f $${INSTALLLINKDIR}$(MULTISUBDIR)/$(ARLINK) ; \\\n-\tfor FILE in $(LIBS) ; do \\\n-\t  rm -f $${INSTALLDIR}$(MULTISUBDIR)/$$FILE ; \\\n-\t  if [ $$FILE = $(SHLINK) ] ; then \\\n-\t    if [ -f $${INSTALLDIR}/$(MSHLINK) ]; then \\\n-\t      rm -f $${INSTALLLINKDIR}$(MULTISUBDIR)/$$FILE ; \\\n-\t      $(LN_S) $${RELINSTALLDIR}$(MSHLINK) $${INSTALLLINKDIR}$(MULTISUBDIR)/$$FILE \\\n-\t\t|| cp $${RELINSTALLDIR}$(MSHLINK) $${INSTALLLINKDIR}$(MULTISUBDIR)/$$FILE ; \\\n-\t    else \\\n-\t      rm -f $${INSTALLLINKDIR}$(MULTISUBDIR)/$$FILE ; \\\n-\t      $(LN_S) $${RELINSTALLDIR}$(SHLIB) $${INSTALLLINKDIR}$(MULTISUBDIR)/$$FILE \\\n-\t\t|| cp $${RELINSTALLDIR}$(SHLIB) $${INSTALLLINKDIR}$(MULTISUBDIR)/$$FILE ; \\\n-\t    fi; \\\n-\t  elif [ $$FILE = $(ARLINK) ] ; then \\\n-\t    if [ -f $${INSTALLDIR}/$(MARLINK) ]; then \\\n-\t      rm -f $${INSTALLLINKDIR}$(MULTISUBDIR)/$$FILE ; \\\n-\t      $(LN_S) $${RELINSTALLDIR}$(MARLINK) $${INSTALLLINKDIR}$(MULTISUBDIR)/$$FILE \\\n-\t\t|| cp $${RELINSTALLDIR}$(MARLINK) $${INSTALLLINKDIR}$(MULTISUBDIR)/$$FILE ; \\\n-\t    else \\\n-\t      rm -f $${INSTALLLINKDIR}$(MULTISUBDIR)/$$FILE ; \\\n-\t      $(LN_S) $${RELINSTALLDIR}$(ARLIB) $${INSTALLLINKDIR}$(MULTISUBDIR)/$$FILE \\\n-\t\t|| cp $${RELINSTALLDIR}$(ARLIB) $${INSTALLLINKDIR}$(MULTISUBDIR)/$$FILE ; \\\n-\t    fi; \\\n-\t  elif [ $$FILE = mshlink ]; then \\\n-\t    for FILE in $(MSHLINK) ; do \\\n-\t      rm -f $${INSTALLDIR}$(MULTISUBDIR)/$$FILE ; \\\n-\t      $(LN_S) $(SHLIB) $${INSTALLDIR}$(MULTISUBDIR)/$$FILE \\\n-\t\t|| cp $(SHLIB) $${INSTALLDIR}$(MULTISUBDIR)/$$FILE ; \\\n-\t    done; \\\n-\t  elif [ $$FILE = marlink ]; then \\\n-\t    for FILE in $(MARLINK) ; do \\\n-\t      rm -f $${INSTALLDIR}$(MULTISUBDIR)/$$FILE ; \\\n-\t      $(LN_S) $(ARLIB) $${INSTALLDIR}$(MULTISUBDIR)/$$FILE \\\n-\t\t|| cp $(ARLIB) $${INSTALLDIR}$(MULTISUBDIR)/$$FILE ; \\\n-\t    done; \\\n-\t  elif [ $$FILE = $(SHLIB) ]; then \\\n-\t    $(INSTALL_PROGRAM) $$FILE $${INSTALLDIR}$(MULTISUBDIR)/$$FILE ; \\\n-\t    : On the HP, shared libraries must be mode 555. ;\\\n-\t    chmod 555 $${INSTALLDIR}$(MULTISUBDIR)/$$FILE ; \\\n-\t  else \\\n-\t    $(INSTALL_DATA) $$FILE $${INSTALLDIR}$(MULTISUBDIR)/$$FILE ; \\\n-\t    $(RANLIB) $${INSTALLDIR}$(MULTISUBDIR)/$$FILE ; \\\n-\t    chmod a-x $${INSTALLDIR}$(MULTISUBDIR)/$$FILE ; \\\n-\t  fi ; \\\n-\tdone\n-\t@rootme=`pwd`/ ; export rootme ; \\\n-\t$(MULTIDO) $(FLAGS_TO_PASS) multi-do DO=install\n-\n-.PHONY: force\n-force:\n-\n-MYCXXFLAGS = $(CXXFLAGS) -g -O2 -Wpointer-arith -Wnested-externs -Woverloaded-virtual -Wbad-function-cast -Winline -Wwrite-strings -pedantic -Wno-long-long\n-MYCFLAGS = $(CFLAGS) -g -O2 -Wpointer-arith -Wnested-externs\n-\n-.PHONY: stuff\n-stuff:\n-\t$(MAKE) stuff1\n-\t$(MAKE) stuff2\n-\n-stuff1:\n-\t$(MAKE) clean\n-\t$(MAKE) -C ../libio c++clean\n-\trm -f ../../gcc/cplib2.txt\n-\n-stuff2:\n-\t$(MAKE) -C ../../gcc/ LANGUAGES='c c++' libgcc.a\n-\t$(MAKE) CXXFLAGS=\"$(MYCXXFLAGS)\" CFLAGS=\"$(MYCFLAGS)\"\n-\t-$(MAKE) check\n-\t-$(MAKE) -C ../libio check\n-\t-$(MAKE) -C ../../gcc check-g++"}, {"sha": "89e866e7d3f854f26cc30951e9beebe9c5af9d8a", "filename": "libstdc++/NEWS", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2FNEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2FNEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2FNEWS?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,9 +0,0 @@\n-SUMMARY OF RECENT MAJOR CHANGES to LIBSTDC++.\n-(Also check ../libio/NEWS.)\n-\n-*** Noteworthy changes in libstdc++ for EGCS\n-\n-* EGCS includes the SGI STL implementation without changes.\n-\n-* As a result of these and other changes, libstc++ for EGCS is not binary\n-  compatible with previous releases of libstdc++."}, {"sha": "b4165bfae7fe1c6969414a576e4ed5fc259a8f3b", "filename": "libstdc++/cassert", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcassert", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcassert", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fcassert?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,7 +0,0 @@\n-// -*- C++ -*- forwarding header.\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#ifndef __CASSERT__\n-#define __CASSERT__\n-#include <assert.h>\n-#endif"}, {"sha": "e2765aed50a6a696168a973924fed3fff1376ccb", "filename": "libstdc++/cctype", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcctype", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcctype", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fcctype?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,7 +0,0 @@\n-// The -*- C++ -*- character type header.\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#ifndef __CCTYPE__\n-#define __CCTYPE__\n-#include <ctype.h>\n-#endif"}, {"sha": "ce493469597ee65b36bea921798842a14885eff5", "filename": "libstdc++/cerrno", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcerrno", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcerrno", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fcerrno?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,7 +0,0 @@\n-// The -*- C++ -*- error number header.\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#ifndef __CERRNO__\n-#define __CERRNO__\n-#include <errno.h>\n-#endif"}, {"sha": "cf59eadfb793e7c9277a1a0385107ea5c031fd1c", "filename": "libstdc++/cfloat", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcfloat", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcfloat", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fcfloat?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,7 +0,0 @@\n-// -*- C++ -*- forwarding header.\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#ifndef __CFLOAT__\n-#define __CFLOAT__\n-#include <float.h>\n-#endif"}, {"sha": "983e8a9caa7699981dca8d54ef5872a446897b97", "filename": "libstdc++/cinst.cc", "status": "removed", "additions": 0, "deletions": 154, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcinst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcinst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fcinst.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,154 +0,0 @@\n-// Instantiation file for the -*- C++ -*- complex number classes.\n-// Copyright (C) 1994 Free Software Foundation\n-\n-#ifdef F\n-typedef float f;\n-#endif\n-#ifdef D\n-typedef double f;\n-#endif\n-#ifdef LD\n-typedef long double f;\n-#endif\n-\n-#if defined (MAIN) && defined (__GNUG__)\n-#ifdef F\n-#pragma implementation \"fcomplex\"\n-#endif\n-#ifdef D\n-#pragma implementation \"dcomplex\"\n-#endif\n-#ifdef LD\n-#pragma implementation \"ldcomplex\"\n-#endif\n-#endif\n-\n-#if 0\n-#define _G_NO_EXTERN_TEMPLATES\n-#endif\n-#include <std/complext.cc>\n-\n-typedef complex<f> c;\n-typedef const c& ccr;\n-\n-#ifdef MAIN\n-template c& __doapl (c*, ccr);\n-template c& __doaml (c*, ccr);\n-template c& __doami (c*, ccr);\n-template c& __doadv (c*, ccr);\n-#endif\n-\n-#ifdef ADDCC\n-template c operator+ (ccr, ccr);\n-#endif\n-#ifdef ADDCF\n-template c operator+ (ccr, f);\n-#endif\n-#ifdef ADDFC\n-template c operator+ (f, ccr);\n-#endif\n-#ifdef SUBCC\n-template c operator- (ccr, ccr);\n-#endif\n-#ifdef SUBCF\n-template c operator- (ccr, f);\n-#endif\n-#ifdef SUBFC\n-template c operator- (f, ccr);\n-#endif\n-#ifdef MULCC\n-template c operator* (ccr, ccr);\n-#endif\n-#ifdef MULCF\n-template c operator* (ccr, f);\n-#endif\n-#ifdef MULFC\n-template c operator* (f, ccr);\n-#endif\n-#ifdef DIVCC\n-template c operator/ (ccr, ccr);\n-#endif\n-#ifdef DIVCF\n-template c operator/ (ccr, f);\n-#endif\n-#ifdef DIVFC\n-template c operator/ (f, ccr);\n-#endif\n-#ifdef PLUS\n-template c operator+ (ccr);\n-#endif\n-#ifdef MINUS\n-template c operator- (ccr);\n-#endif\n-#ifdef EQCC\n-template bool operator== (ccr, ccr);\n-#endif\n-#ifdef EQCF\n-template bool operator== (ccr, f);\n-#endif\n-#ifdef EQFC\n-template bool operator== (f, ccr);\n-#endif\n-#ifdef NECC\n-template bool operator!= (ccr, ccr);\n-#endif\n-#ifdef NECF\n-template bool operator!= (ccr, f);\n-#endif\n-#ifdef NEFC\n-template bool operator!= (f, ccr);\n-#endif\n-#ifdef ABS\n-template f abs (ccr);\n-#endif\n-#ifdef ARG\n-template f arg (ccr);\n-#endif\n-#ifdef POLAR\n-template c polar (f, f);\n-#endif\n-#ifdef CONJ\n-template c conj (ccr);\n-#endif\n-#ifdef NORM\n-template f norm (ccr);\n-#endif\n-#ifdef COS\n-template c cos (ccr);\n-#endif\n-#ifdef COSH\n-template c cosh (ccr);\n-#endif\n-#ifdef EXP\n-template c exp (ccr);\n-#endif\n-#ifdef LOG\n-template c log (ccr);\n-#endif\n-#ifdef POWCC\n-template c pow (ccr, ccr);\n-#endif\n-#ifdef POWCF\n-template c pow (ccr, f);\n-#endif\n-#ifdef POWCI\n-template c pow (ccr, int);\n-#endif\n-#ifdef POWFC\n-template c pow (f, ccr);\n-#endif\n-#ifdef SIN\n-template c sin (ccr);\n-#endif\n-#ifdef SINH\n-template c sinh (ccr);\n-#endif\n-#ifdef SQRT\n-template c sqrt (ccr);\n-#endif\n-#ifdef EXTRACT\n-template istream& operator>> (istream&, complex<f>&);\n-#endif\n-#ifdef INSERT\n-template ostream& operator<< (ostream&, const complex<f>&);\n-#endif"}, {"sha": "4d8200d73dc6d99a655c1e3b81a8231080c0adb1", "filename": "libstdc++/ciso646", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fciso646", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fciso646", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fciso646?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,7 +0,0 @@\n-// -*- C++ -*- forwarding header.\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#ifndef __CISO646__\n-#define __CISO646__\n-#include <iso646.h>\n-#endif"}, {"sha": "1b29b3af01eced3aaaf928dc9218a811e1394496", "filename": "libstdc++/climits", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fclimits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fclimits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fclimits?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,7 +0,0 @@\n-// -*- C++ -*- forwarding header.\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#ifndef __CLIMITS__\n-#define __CLIMITS__\n-#include <limits.h>\n-#endif"}, {"sha": "b67cf31c9d2e58155a5e4b21bb9c4971e8b5a4f8", "filename": "libstdc++/clocale", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fclocale", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fclocale", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fclocale?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,7 +0,0 @@\n-// The -*- C++ -*- locale support header.\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#ifndef __CLOCALE__\n-#define __CLOCALE__\n-#include <locale.h>\n-#endif"}, {"sha": "b18ea0b428c67991bb3d2fc6eb6ccf5c23d5cca5", "filename": "libstdc++/cmath", "status": "removed", "additions": 0, "deletions": 76, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcmath", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcmath", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fcmath?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,76 +0,0 @@\n-// The -*- C++ -*- math functions header.\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#ifndef __CMATH__\n-#define __CMATH__\n-#include <_G_config.h>\n-#include <math.h>\n-\n-#ifdef __GNUG__\n-#pragma interface \"cmath\"\n-#endif\n-\n-extern \"C++\" {\n-#if 0\n-float acos (float);\n-float asin (float);\n-float atan (float);\n-float atan2(float, float);\n-float ceil (float);\n-float cos  (float);\n-float cosh (float);\n-float exp  (float);\n-float fabs (float);\n-float floor(float);\n-float fmod (float, float);\n-float frexp(float, int*);\n-float modf (float, float*);\n-float ldexp(float, int);\n-float log  (float);\n-float log10(float);\n-float pow  (float, float);\n-float pow  (float, int);\n-float sin  (float);\n-float sinh (float);\n-float sqrt (float);\n-float tan  (float);\n-float tanh (float);\n-#endif\n-\n-inline float  abs (float  x) { return fabs (x); }\n-#if ! _G_MATH_H_INLINES /* hpux and SCO define this in math.h */\n-inline double abs (double x) { return fabs (x); }\n-#endif\n-\n-#if 0\n-double pow(double, int);\n-\n-long double acos (long double);\n-long double asin (long double);\n-long double atan (long double);\n-long double atan2(long double, long double);\n-long double ceil (long double);\n-long double cos  (long double);\n-long double cosh (long double);\n-long double exp  (long double);\n-long double fabs (long double);\n-long double floor(long double);\n-long double frexp(long double, int*);\n-long double fmod (long double, long double);\n-long double frexp(long double, int*);\n-long double log  (long double);\n-long double log10(long double);\n-long double modf (long double, long double*);\n-long double pow  (long double, long double);\n-long double pow  (long double, int);\n-long double sin  (long double);\n-long double sinh (long double);\n-long double sqrt (long double);\n-long double tan  (long double);\n-long double tanh (long double);\n-#endif\n-inline long double abs (long double x) { return fabs (x); }\n-\n-} // extern \"C++\"\n-\n-#endif"}, {"sha": "afd740f013e9fb903a3dc1d70718650f54ef491a", "filename": "libstdc++/cmathi.cc", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcmathi.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcmathi.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fcmathi.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,7 +0,0 @@\n-// Implementation file for the -*- C++ -*- math functions header.\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#ifdef __GNUG__\n-#pragma implementation \"cmath\"\n-#endif\n-#include <cmath>"}, {"sha": "bfdd352b462323651583bcde5aec6e84e002ca7c", "filename": "libstdc++/complex", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcomplex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcomplex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fcomplex?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,18 +0,0 @@\n-// Main header for the -*- C++ -*- complex number classes.\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#ifndef __COMPLEX__\n-#define __COMPLEX__\n-\n-#include <std/complext.h>\n-\n-extern \"C++\" {\n-#define __STD_COMPLEX\n-\n-// ANSI complex types\n-typedef complex<float> float_complex;\n-typedef complex<double> double_complex;\n-typedef complex<long double> long_double_complex;\n-}\n-\n-#endif"}, {"sha": "2e88de854a68102f100308195cb941cbb376763d", "filename": "libstdc++/complex.h", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcomplex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcomplex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fcomplex.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,6 +0,0 @@\n-// -*- C++ -*- backward compatiblity header.\n-// Copyright (C) 1994 Free Software Foundation\n-\n-#ifndef __COMPLEX_H__\n-#include <complex>\n-#endif"}, {"sha": "5d6b6b245eb31313f4255e30e46975f535e5f951", "filename": "libstdc++/config/aix.ml", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Faix.ml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Faix.ml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fconfig%2Faix.ml?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,30 +0,0 @@\n-# AIX has weird shared/non-shared libraries.\n-\n-ARLIB    =\n-ARLINK   =\n-\n-# Build shared object with interface versioning in name.\n-# Archive resulting shared object in a library.\n-AIXLINK  = libstdc++.a\n-AIXLIB   = libstdc++-$(VERSION).a\n-AIXSHLIB = shr$(LIBSTDCXX_INTERFACE)$(CXX_INTERFACE).o\n-SHFLAGS  = -Wl,-bexpall\n-SHDEPS   = -lm\n-SHOPT    = -shared\n-\n-LIBS     = $(AIXLIB) $(AIXLINK)\n-\n-$(AIXSHLIB): stdlist\n-\t$(CC) $(LIBCXXFLAGS) $(SHFLAGS) $(SHOPT) -o $(AIXSHLIB) `cat stdlist` $(SHDEPS)\n-\n-# Delete $(AIXSHLIB) so that it is not included in stdlist if rebuilding.\n-$(AIXLIB): $(AIXSHLIB)\n-\t-rm -f t$(AIXLIB)\n-\t$(AR) $(AR_FLAGS) t$(AIXLIB) $(AIXSHLIB)\n-\tmv t$(AIXLIB) $(AIXLIB)\n-\t-rm -f $(AIXSHLIB)\n-\n-$(AIXLINK):\n-\t-rm -f $(AIXLINK)\n-\t$(LN_S) $(AIXLIB) $(AIXLINK) || cp $(AIXLIB) $(AIXLINK)\n-"}, {"sha": "d24e14fe83e1ec1f4c391a54a367ddfe9c056914", "filename": "libstdc++/config/aix.mt", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Faix.mt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Faix.mt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fconfig%2Faix.mt?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1 +0,0 @@\n-MT_CFLAGS = `case \"$(CXXFLAGS)\" in *-pthread* ) echo -D_PTHREADS ;; esac`"}, {"sha": "f90b0b0235798367e6df6c2584aaea86027b2c97", "filename": "libstdc++/config/beos.ml", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Fbeos.ml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Fbeos.ml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fconfig%2Fbeos.ml?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,4 +0,0 @@\n-LIBS\t= $(ARLIB) $(ARLINK) $(SHLIB) mshlink $(SHLINK)\n-SHFLAGS\t= -Wl,-soname,$(MSHLINK)\n-DEPLIBS\t= ../$(SHLIB)\n-SHOPT\t= -nostart"}, {"sha": "a11f373d84c144d69bd2f54b2b63b86d7d8a3a5e", "filename": "libstdc++/config/dec-osf.ml", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Fdec-osf.ml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Fdec-osf.ml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fconfig%2Fdec-osf.ml?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,6 +0,0 @@\n-# We don't need -fpic on the alpha, so let's install both the shared and\n-# non-shared versions.\n-\n-LIBS     = $(ARLIB) $(ARLINK) $(SHLIB) $(SHLINK)\n-DEPLIBS  = ../$(SHLIB)\n-SHDEPS   = -lm"}, {"sha": "b0b36db1062c64166661c7fa7e8e70beedea094d", "filename": "libstdc++/config/delta.mt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Fdelta.mt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Fdelta.mt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fconfig%2Fdelta.mt?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,2 +0,0 @@\n-# If FPU instructions are generated by default, we have to use a special libm.a\n-MLDLIBS = $(LDLIBS) `case \"$(CXXFLAGS)\" in *-m68000* | *-mc68000* | *-msoft-float* ) echo -lm ;; * ) echo -lm881 ;; esac`"}, {"sha": "bd711debf836f6b8e722b62c6e58cb6eb303f088", "filename": "libstdc++/config/elf.ml", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Felf.ml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Felf.ml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fconfig%2Felf.ml?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,8 +0,0 @@\n-# Elf without shared libm -- we have to link with the archive library, even\n-# for programs that don't use complex.\n-\n-LIBS    = $(ARLIB) $(ARLINK) $(SHLIB) $(SHLINK)\n-SHFLAGS = -h $(SHLIB)\n-DEPLIBS = ../$(SHLIB)\n-LDLIBS  = -L.. -lstdc++ -lm\n-MLDLIBS = -L.. -lstdc++ -lm"}, {"sha": "826f0bc0917ed6f7bcb0d8f346c1f41e06343150", "filename": "libstdc++/config/elfshlibm.ml", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Felfshlibm.ml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Felfshlibm.ml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fconfig%2Felfshlibm.ml?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,6 +0,0 @@\n-# Elf with shared libm, so we can link it into the shared libstdc++.\n-\n-LIBS    = $(ARLIB) $(ARLINK) $(SHLIB) $(SHLINK)\n-SHFLAGS = -h $(SHLIB)\n-SHDEPS  = -lm\n-DEPLIBS = ../$(SHLIB)"}, {"sha": "3ee682690ad5cedaa6c96164e5fb75551387bb31", "filename": "libstdc++/config/freebsd.ml", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Ffreebsd.ml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Ffreebsd.ml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fconfig%2Ffreebsd.ml?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,6 +0,0 @@\n-# Elf with shared libm, so we can link it into the shared libstdc++.\n-\n-LIBS    = $(ARLIB) $(ARLINK) $(SHLIB) $(SHLINK) mshlink\n-SHFLAGS = -Wl,-soname,$(MSHLINK)\n-SHDEPS  = -lm\n-DEPLIBS = ../$(SHLIB)"}, {"sha": "2a0380327f7c183b4ddcc8769084044f97d3e02f", "filename": "libstdc++/config/gnu.ml", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Fgnu.ml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Fgnu.ml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fconfig%2Fgnu.ml?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,6 +0,0 @@\n-# Elf with shared libm, so we can link it into the shared libstdc++.\n-\n-LIBS    = $(ARLIB) $(ARLINK) $(SHLIB) $(SHLINK)\n-SHFLAGS = -Wl,-soname,$(SHLIB)\n-SHDEPS  = -lm\n-DEPLIBS = ../$(SHLIB)"}, {"sha": "a39602a640323b6cfb0e9a38afcc004872d294d8", "filename": "libstdc++/config/hpux.ml", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Fhpux.ml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Fhpux.ml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fconfig%2Fhpux.ml?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,6 +0,0 @@\n-# HPUX uses the .sl suffix for shared libraries.\n-\n-SHLIB   = libstdc++.sl\n-LIBS    = $(ARLIB) $(ARLINK) $(SHLIB)\n-DEPLIBS = ../$(SHLIB)\n-SHFLAGS = $(PICFLAG)"}, {"sha": "055c832c26e6596154bf4f4c45012a1e691dc745", "filename": "libstdc++/config/irix5.ml", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Firix5.ml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Firix5.ml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fconfig%2Firix5.ml?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,6 +0,0 @@\n-# We don't need -fpic on IRIX, so let's install both the shared and\n-# non-shared versions.\n-\n-LIBS     = $(ARLIB) $(ARLINK) $(SHLIB) $(SHLINK)\n-DEPLIBS  = ../$(SHLIB)\n-SHDEPS   = -lm"}, {"sha": "14dcb45b79df5dd1078e97d3e2aff50355c9c41c", "filename": "libstdc++/config/linux.ml", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Flinux.ml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Flinux.ml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fconfig%2Flinux.ml?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,11 +0,0 @@\n-# Elf with shared libm, so we can link it into the shared libstdc++.\n-\n-ARLIB   = libstdc++-$(LIBSTDCXX_INTERFACE)$(LIBC_INTERFACE)$(CXX_INTERFACE)-$(VERSION).a\n-MARLINK = libstdc++$(LIBC_INTERFACE)$(CXX_INTERFACE).a.$(LIBSTDCXX_INTERFACE)\n-SHLIB   = libstdc++-$(LIBSTDCXX_INTERFACE)$(LIBC_INTERFACE)$(CXX_INTERFACE)-$(VERSION).so\n-MSHLINK = libstdc++$(LIBC_INTERFACE)$(CXX_INTERFACE).so.$(LIBSTDCXX_INTERFACE)\n-\n-LIBS    = $(ARLIB) marlink $(ARLINK) $(SHLIB) mshlink $(SHLINK)\n-SHFLAGS = -Wl,-soname,$(MSHLINK)\n-SHDEPS  = -lm\n-DEPLIBS = ../$(SHLIB)"}, {"sha": "5848851be8ac4da2e148290e9995237f79e9d0af", "filename": "libstdc++/config/linux.mt", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Flinux.mt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Flinux.mt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fconfig%2Flinux.mt?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,2 +0,0 @@\n-# tell we want the mt-safe version\n-MT_CFLAGS = -D_IO_MTSAFE_IO"}, {"sha": "09c40235adf6e67dfad6dfeb201a0f57310619d9", "filename": "libstdc++/config/openbsd.ml", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Fopenbsd.ml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Fopenbsd.ml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fconfig%2Fopenbsd.ml?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,7 +0,0 @@\n-# Base shared lib for OpenBSD i386\n-\n-LIBS    = $(ARLIB) $(ARLINK) $(SHLIB) $(SHLINK) mshlink\n-SHFLAGS = -nostdlib -Wl,-Bshareable,-Bforcearchive\n-SHDEPS  = -lm\n-DEPLIBS = ../$(SHLIB)\n-"}, {"sha": "29da11cf454ebb344b7a5cb036286ac13ee09e72", "filename": "libstdc++/config/openbsd.mt", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Fopenbsd.mt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Fopenbsd.mt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fconfig%2Fopenbsd.mt?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,3 +0,0 @@\n-# tell we want the mt-safe version\n-MT_CFLAGS = -D_IO_MTSAFE_IO -D_PTHREADS\n-"}, {"sha": "6afe1e514d93f3401e2ce6d283662a5403a2f730", "filename": "libstdc++/config/posix.mt", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Fposix.mt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Fposix.mt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fconfig%2Fposix.mt?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1 +0,0 @@\n-MT_CFLAGS = -D_PTHREADS"}, {"sha": "6afe1e514d93f3401e2ce6d283662a5403a2f730", "filename": "libstdc++/config/sol2pth.mt", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Fsol2pth.mt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Fsol2pth.mt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fconfig%2Fsol2pth.mt?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1 +0,0 @@\n-MT_CFLAGS = -D_PTHREADS"}, {"sha": "e87f079e46cb08d1dc0e19c4ed0bba931f0c6792", "filename": "libstdc++/config/sol2shm.ml", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Fsol2shm.ml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Fsol2shm.ml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fconfig%2Fsol2shm.ml?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,6 +0,0 @@\n-# Solaris2 with shared libm, so we can link it into the shared libstdc++.\n-\n-LIBS    = $(ARLIB) $(ARLINK) $(SHLIB) $(SHLINK)\n-SHFLAGS = -h $(SHLIB)\n-SHDEPS  = -lm\n-DEPLIBS = ../$(SHLIB)"}, {"sha": "f809d0ace861fb9937bb567cd74354c4cc5ba8c6", "filename": "libstdc++/config/sol2solth.mt", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Fsol2solth.mt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Fsol2solth.mt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fconfig%2Fsol2solth.mt?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1 +0,0 @@\n-MT_CFLAGS = -D_SOLTHREADS"}, {"sha": "3c5de27ab50848aee61ae9e2e9b6d5cf48e05257", "filename": "libstdc++/config/sunos4.ml", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Fsunos4.ml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Fsunos4.ml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fconfig%2Fsunos4.ml?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,9 +0,0 @@\n-# SunOS doesn't provide a shared libm, so we have to link with the archive\n-# library, even for programs that don't use complex.\n-# SunOS requires a version number in shared library filenames.\n-\n-LIBS    = $(ARLIB) $(ARLINK) $(SHLIB)\n-SHFLAGS = $(PICFLAG)\n-DEPLIBS = ../$(SHLIB)\n-LDLIBS\t= -L.. -lstdc++ -lm\n-MLDLIBS = -L.. -lstdc++ -lm"}, {"sha": "8b8774e3a7a32b875461815130877ee2b877c5ef", "filename": "libstdc++/config/x86-interix.ml", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Fx86-interix.ml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfig%2Fx86-interix.ml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fconfig%2Fx86-interix.ml?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,9 +0,0 @@\n-# x86 Interix. SHLINK is defined to be .dummy to avoid running into \n-# the lack of symbolic links.\n-\n-SHLINK  = .dummy\n-SHLIB   = libstdc++.so\n-LIBS    = $(ARLIB) $(SHLIB)\n-DEPLIBS = ../$(SHLIB)\n-SHFLAGS = $(PICFLAG)\n-"}, {"sha": "54483d2d451d84c6e6933958a01e3e0426b3c482", "filename": "libstdc++/configure.in", "status": "removed", "additions": 0, "deletions": 209, "changes": 209, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fconfigure.in?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,209 +0,0 @@\n-# This file is a shell script fragment that supplies the information\n-# necessary for a configure script to process the program in\n-# this directory.  For more information, look at ../configure.\n-\n-# If the language specific compiler does not exist, but the \"gcc\" directory \n-# does, we do not build anything. Note, $r is set by the top-level Makefile.\n-# Note that when we look for the compiler, we search both with and without\n-# extension to handle cross and canadian cross builds. \n-# Note that if $norecursion is set we're being called from config.status,\n-# so don't check for the compiler; we might be doing a make clean.\n-compiler_name=cc1plus\n-rm -f skip-this-dir\n-if test -n \"$r\" && [ -z \"$norecursion\" ] ; then\n-  if test -d \"$r\"/gcc; then\n-    if test -f \"$r\"/gcc/$compiler_name \\\n-       || test -f \"$r\"/gcc/$compiler_name.exe; then\n-      true\n-    else\n-      echo \"rm -f multilib.out\" > skip-this-dir\n-    fi\n-  fi\n-fi\n-\n-if [ \"${srcdir}\" = \".\" ] ; then\n-  if [ \"${with_target_subdir}\" != \".\" ] ; then\n-    topsrcdir=${with_multisrctop}../..\n-  else\n-    topsrcdir=${with_multisrctop}..\n-  fi\n-else\n-  topsrcdir=${srcdir}/..\n-fi\n-\n-if [ -d ${topsrcdir}/gcc ] ; then\n-  configdirs=\"tests testsuite\"\n-else\n-  configdirs=\"tests\"\n-fi\n-srctrigger=sinst.cc\n-srcname=\"ANSI C++ library\"\n-package_makefile_frag=Make.pack\n-package_makefile_rules_frag=Make.pack.r\n-\n-# per-host:\n-\n-# per-target:\n-\n-echo \"# Warning: this fragment is automatically generated\" > temp.mt\n-frags=\n-\n-# If they didn't specify --enable-shared, don't generate shared libs.\n-case \"${enable_shared}\" in\n-  yes) shared=yes ;;\n-  no) shared=no ;;\n-  *libstdc++*) shared=yes ;;\n-  *) shared=no ;;\n-esac\n-\n-if [ \"${shared}\" = \"yes\" ]; then\n-  case \"${target}\" in\n-    alpha*-*-linux*)\tfrags=../../config/mh-elfalphapic ;;\n-    arm*-*-*)\t\tfrags=../../config/mh-armpic ;;\n-    hppa*-*-*)\t\tfrags=../../config/mh-papic ;;\n-    i[3456]86-*-*)\tfrags=../../config/mh-x86pic ;;\n-    powerpc*-*-aix*)\t;;\n-    powerpc*-*-*)\tfrags=../../config/mh-ppcpic ;;\n-    sparc*-*-*)\t\tfrags=../../config/mh-sparcpic ;;\n-    *-*-*) \t\tfrags=../../config/mh-${target_cpu}pic ;;\n-  esac\n-  case \"${target}\" in\n-    *-*-aix*)\t\tfrags=\"${frags} aix.ml\" ;;\n-    *-*-beos*)\t\tfrags=\"${frags} beos.ml\" ;;\n-    *-dec-osf*)\t\tfrags=\"${frags} dec-osf.ml\";;\n-    *-*-freebsd2*)\t;;\n-    *-*-freebsd*)\tfrags=\"${frags} freebsd.ml\" ;;\n-    *-*-hpux*)\t\tfrags=\"${frags} hpux.ml\" ;;\n-    *-*-irix[56]*)\tfrags=\"${frags} irix5.ml\" ;;\n-    *-*-linux*aout*)\t;;\n-    *-*-linux*)\t\tfrags=\"${frags} linux.ml\" ;;\n-    # This must come after *-*-linux*\n-    *-*-gnu*)\t\tfrags=\"${frags} gnu.ml\" ;;\n-    *-*-openbsd*)\t\tfrags=\"${frags} openbsd.ml\" ;;\n-    *-*-sysv[45]*|*-*-udk*)\tfrags=\"${frags} elf.ml\" ;;\n-    *-*-solaris*)\tfrags=\"${frags} sol2shm.ml\" ;;\n-    *-*-sunos4*)\tfrags=\"${frags} sunos4.ml\" ;;\n-    i[3456]86-*-interix*)\tfrags=\"${frags} x86-interix.ml\" ;;\n-  esac\n-fi\n-\n-# Make sure the right flags are defined for multi-threading.\n-case \"${target}\" in\n-  *-*-aix*)\t\n-\tfrags=\"${frags} aix.mt\" ;;\n-  *-*-linux*)\n-\tcase \"x${enable_threads}\" in\n-\t\txyes|xposix)\tfrags=\"${frags} linux.mt\" ;;\n-\tesac;;\n-  *-*-openbsd*)\t\n-  \tcase \"x${enable_threads}\" in\n-\t\txyes|xposix)\tfrags=\"${frags} openbsd.mt\" ;;\n-\tesac;;\n-  m68k-motorola-sysv)\t\tfrags=\"${frags} delta.mt\" ;;\n-  *-*-solaris*)\n-    case \"x${enable_threads}\" in\n-      xposix)\t\t\tfrags=\"${frags} sol2pth.mt\" ;;\n-      xsolaris)\t\t\tfrags=\"${frags} sol2solth.mt\" ;;\n-    esac ;;\n-  *)\n-    case \"x${enable_threads}\" in\n-      xposix)\t\t\tfrags=\"${frags} posix.mt\" ;;\n-    esac ;;\n-esac\n-\n-for frag in ${frags}; do\n-  case ${frag} in\n-    ../* )\n-      if [ ${srcdir} = . ]; then\n-\t[ -n \"${with_target_subdir}\" ] && frag=../${frag}\n-\t[ -n \"${with_multisrctop}\" ] && frag=${with_multisrctop}${frag}\n-      fi\n-      ;;\n-  esac\n-  frag=${srcdir}/config/$frag\n-  if [ -f ${frag} ]; then\n-    echo \"Appending ${frag} to target-mkfrag\"\n-    echo \"# Following fragment copied from ${frag}\" >> temp.mt\n-    cat ${frag} >> temp.mt\n-  fi\n-done\n-\n-target_makefile_frag=target-mkfrag\n-${moveifchange} temp.mt target-mkfrag\n-\n-LIBDIR=yes\n-TO_TOPDIR=../\n-ALL='libs'\n-XCXXINCLUDES=\"-I${srcdir} -I${srcdir}/stl -I${TO_TOPDIR}libio -I${srcdir}/${TO_TOPDIR}libio -I${srcdir}/${TO_TOPDIR}include -I${srcdir}/${TO_TOPDIR}gcc\"\n-MOSTLYCLEAN='*.o pic stamp-picdir core so_locations $(MOSTLYCLEAN_JUNK)'\n-CLEAN='$(CLEAN_JUNK)'\n-EXTRA_DISTCLEAN='target-mkfrag'\n-\n-(. ${srcdir}/${TO_TOPDIR}libio/config.shared) >${package_makefile_frag} 2>${package_makefile_rules_frag}\n-\n-. ${topsrcdir}/config.if\n-echo \"\n-LIBSTDCXX_INTERFACE=${libstdcxx_interface}\n-CXX_INTERFACE=${cxx_interface}\n-LIBC_INTERFACE=${libc_interface}\n-\" >> ${package_makefile_frag}\n-\n-# This duplicated the AC_PROG_LN_S macro in GNU autoconf.\n-rm -f conttestdata\n-if ln -s X conftestdata 2>/dev/null\n-then\n-  rm -f conftestdata\n-  LN_S=\"ln -s\"\n-else\n-  LN_S=ln\n-fi\n-echo \"\n-LN_S=$LN_S\n-\" >> ${package_makefile_frag}\n-\n-# post-target:\n-\n-# If cross-compiling, we install in $(tooldir)/lib or in $(libsubdir)\n-# depending on --enable-version-specific-runtime-libs.\n-if [ -n \"${with_cross_host}\" ] ; then\n-    rm -f Makefile.tem\n-    sed \\\n-        -e 's|^\\([ \t]*INSTALLDIR[ \t]*=[ \t]*\\)\\$(libdir)|\\1$(tooldir)/lib|' \\\n-        Makefile >Makefile.tem\n-    mv -f Makefile.tem Makefile\n-fi\n-\n-# enable multilib-ing by default.\n-if [ -z \"${enable_multilib}\" ]; then\n-    enable_multilib=yes\n-fi\n-\n-. ${topsrcdir}/config-ml.in\n-\n-gxx_include_dir=\n-# Specify the g++ header file directory\n-# Check whether --with-gxx-include-dir or --without-gxx-include-dir was given.\n-if test \"${with_gxx_include_dir+set}\" = set; then\n-  withval=\"$with_gxx_include_dir\"\n-  case \"${withval}\" in\n-    yes)\n-      echo \"configure.in: error: bad value ${withval} given for g++ include directory\" 1>&2\n-      exit 1\n-      ;;\n-    no)\t;;\n-    *)\tgxx_include_dir=$with_gxx_include_dir ;;\n-  esac\n-fi\n-\n-if test x${gxx_include_dir} = x; then\n-  if test x${enable_version_specific_runtime_libs} = xyes; then\n-    gxx_include_dir='${libsubdir}/include/g++'\n-  else\n-    gxx_include_dir='${prefix}/include/g++'-${libstdcxx_interface}\n-  fi\n-fi\n-\n-rm -f Makefile.tem\n-sed -e \"s%^gxx_include_dir[ \t]*=.*$%gxx_include_dir=${gxx_include_dir}%\" \\\n-       Makefile >Makefile.tem\n-mv -f Makefile.tem Makefile"}, {"sha": "4bba048dcb5e9fa3cfd137ce72a4531ad1a04d3d", "filename": "libstdc++/csetjmp", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcsetjmp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcsetjmp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fcsetjmp?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,8 +0,0 @@\n-// The -*- C++ -*- setjmp/longjmp header.\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#ifndef __CSETJMP__\n-#define __CSETJMP__\n-#include <setjmp.h>\n-#endif\n-"}, {"sha": "6febfb7b2ed5c5b3bbc5d14de96caed929d5b16a", "filename": "libstdc++/csignal", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcsignal", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcsignal", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fcsignal?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,7 +0,0 @@\n-// The -*- C++ -*- signal handling header.\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#ifndef __CSIGNAL__\n-#define __CSIGNAL__\n-#include <signal.h>\n-#endif"}, {"sha": "324f5a1c19b106c7b18e902330cb60a489f56fe9", "filename": "libstdc++/cstdarg", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcstdarg", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcstdarg", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fcstdarg?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,7 +0,0 @@\n-// -*- C++ -*- forwarding header.\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#ifndef __CSTDARG__\n-#define __CSTDARG__\n-#include <stdarg.h>\n-#endif"}, {"sha": "db5cbe4003743b49caf04101583ab8b8baa91281", "filename": "libstdc++/cstddef", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcstddef", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcstddef", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fcstddef?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,7 +0,0 @@\n-// -*- C++ -*- forwarding header.\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#ifndef __CSTDDEF__\n-#define __CSTDDEF__\n-#include <stddef.h>\n-#endif"}, {"sha": "1fe1456b5bdf903bd72b9ce85f3dd40bd28919f2", "filename": "libstdc++/cstdio", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcstdio", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcstdio", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fcstdio?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,7 +0,0 @@\n-// The -*- C++ -*- standard I/O header.\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#ifndef __CSTDIO__\n-#define __CSTDIO__\n-#include <stdio.h>\n-#endif"}, {"sha": "e7c1a5160a56ade965017f2659ef2155565aa44a", "filename": "libstdc++/cstdlib", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcstdlib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcstdlib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fcstdlib?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,23 +0,0 @@\n-// The -*- C++ -*- standard library header.\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#ifndef __CSTDLIB__\n-#define __CSTDLIB__\n-#include <stdlib.h>\n-\n-#ifdef __GNUG__\n-#pragma interface \"cstdlib\"\n-#endif\n-\n-extern \"C++\" {\n-\n-#if _G_HAS_LABS\n-inline long   abs(long x)\t\t{ return labs (x); }\n-#else\n-inline long   abs(long x)\t\t{ return x >= 0 ? x : -x; }\n-#endif\n-//inline ldiv_t div(long x, long y)\t{ return ldiv (x, y); }\n-\n-} // extern \"C++\"\n-\n-#endif"}, {"sha": "abbfa03464a5f7223a2a16b69ac8e6bee6baa6f3", "filename": "libstdc++/cstdlibi.cc", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcstdlibi.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcstdlibi.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fcstdlibi.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,7 +0,0 @@\n-// Implementation file for the -*- C++ -*- standard library header.\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#ifdef __GNUG__\n-#pragma implementation \"cstdlib\"\n-#endif\n-#include <cstdlib>"}, {"sha": "d8d03a765b65cdc8d20a7f83cba10a410635d0e2", "filename": "libstdc++/cstring", "status": "removed", "additions": 0, "deletions": 96, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcstring", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcstring", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fcstring?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,96 +0,0 @@\n-// The -*- C++ -*- null-terminated string header.\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#ifndef __CSTRING__\n-#define __CSTRING__\n-\n-#include <string.h>\n-\n-#if 0 // Let's not bother with this just yet.\n-#include <cstddef>\n-\n-#ifdef __GNUG__\n-#pragma interface \"cstring\"\n-#endif\n-\n-// The ANSI C prototypes for these functions have a const argument type and\n-// non-const return type, so we can't use them.\n-\n-extern \"C++\" {\n-extern inline const char *\n-_G_strchr (const char *s, int c)\n-{\n-  return strchr (s, c);\n-}\n-\n-extern inline char *\n-_G_strchr (char *s, int c)\n-{\n-  return const_cast<char *> (strchr (s, c));\n-}\n-\n-extern inline const char *\n-_G_strpbrk (const char *s1, const char *s2)\n-{\n-  return strpbrk (s1, s2);\n-}\n-\n-extern inline char *\n-_G_strpbrk (char *s1, const char *s2)\n-{\n-  return const_cast<char *> (strpbrk (s1, s2));\n-}\n-\n-extern inline const char *\n-_G_strrchr (const char *s, int c)\n-{\n-  return strrchr (s, c);\n-}\n-\n-extern inline char *\n-_G_strrchr (char *s, int c)\n-{\n-  return const_cast<char *> (strrchr (s, c));\n-}\n-\n-extern inline const char *\n-_G_strstr (const char *s1, const char *s2)\n-{\n-  return strstr (s1, s2);\n-}\n-\n-extern inline char *\n-_G_strstr (char *s1, const char *s2)\n-{\n-  return const_cast<char *> (strstr (s1, s2));\n-}\n-\n-extern inline const void *\n-_G_memchr (const void *s, int c, size_t n)\n-{\n-  return memchr (s, c, n);\n-}\n-\n-extern inline void *\n-_G_memchr (void *s, int c, size_t n)\n-{\n-  return const_cast<void *> (memchr (s, c, n));\n-}\n-} // extern \"C++\"\n-\n-// Lose any vendor macros for these functions.\n-#undef strchr\n-#undef strpbrk\n-#undef strrchr\n-#undef strstr\n-#undef memchr\n-\n-// Ewww, namespace pollution.  Anyone have a better idea?\n-#define strchr  _G_strchr\n-#define strpbrk _G_strpbrk\n-#define strrchr _G_strrchr\n-#define strstr  _G_strstr\n-#define memchr  _G_memchr\n-#endif // 0\n-\n-#endif // !defined (__CSTRING__)"}, {"sha": "2676febc9b0f2e9260f3c514aab69c4426da2f7f", "filename": "libstdc++/cstringi.cc", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcstringi.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcstringi.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fcstringi.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,7 +0,0 @@\n-// Implementation file for the -*- C++ -*- null-terminated string header.\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#ifdef __GNUG__\n-#pragma implementation \"cstring\"\n-#endif\n-#include <cstring>"}, {"sha": "0184da5929f3dc672d2ac297b6255e4b338fa699", "filename": "libstdc++/ctime", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fctime", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fctime", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fctime?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,7 +0,0 @@\n-// The -*- C++ -*- time header.\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#ifndef __CTIME__\n-#define __CTIME__\n-#include <time.h>\n-#endif"}, {"sha": "1674c12b61f0b4c976367fa2c5b4c98b989062d8", "filename": "libstdc++/cwchar", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcwchar", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcwchar", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fcwchar?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,7 +0,0 @@\n-// The -*- C++ -*- wide character header.\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#ifndef __CWCHAR__\n-#define __CWCHAR__\n-#include <wchar.h>\n-#endif"}, {"sha": "81122012bd04eb0d5b45777fb9482b5e0f355934", "filename": "libstdc++/cwctype", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcwctype", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcwctype", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fcwctype?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,7 +0,0 @@\n-// The -*- C++ -*- wide character type header.\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#ifndef __CWCTYPE__\n-#define __CWCTYPE__\n-#include <wctype.h>\n-#endif"}, {"sha": "908d7c467fec0b25c5bc20e955090e5a7fbb454e", "filename": "libstdc++/cxxabi.h", "status": "removed", "additions": 0, "deletions": 519, "changes": 519, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcxxabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fcxxabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fcxxabi.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,519 +0,0 @@\n-/* new abi support -*- C++ -*-\n-   Copyright (C) 2000\n-   Free Software Foundation, Inc.\n-   Written by Nathan Sidwell, Codesourcery LLC, <nathan@codesourcery.com>  */\n-\n-// This file is part of GNU CC.\n-//\n-// GNU CC is free software; you can redistribute it and/or modify\n-// it under the terms of the GNU General Public License as published by\n-// the Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-// \n-// GNU CC is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-// \n-// You should have received a copy of the GNU General Public License\n-// along with GNU CC; see the file COPYING.  If not, write to\n-// the Free Software Foundation, 59 Temple Place - Suite 330,\n-// Boston, MA 02111-1307, USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-/* This file declares the new abi entry points into the runtime. It is not\n-   normally necessary for user programs to include this header, or use the\n-   entry points directly. However, this header is available should that be\n-   needed.\n-   \n-   Some of the entry points are intended for both C and C++, thus this header\n-   is includable from both C and C++. Though the C++ specific parts are not\n-   available in C, naturally enough.  */\n-\n-#ifndef __CXXABI_H\n-#define __CXXABI_H 1\n-\n-#if defined(__cplusplus) && (!defined(__GXX_ABI_VERSION) || __GXX_ABI_VERSION < 100)\n-/* These structures only make sense when targeting the new abi, catch a\n-   bonehead error early rather than let the user get very confused.  */\n-#error \"Not targetting the new abi, supply -fnew-abi\"\n-#endif\n-\n-#ifdef __cplusplus\n-\n-// We use the compiler builtins __SIZE_TYPE__ and __PTRDIFF_TYPE__ instead of\n-// std::size_t and std::ptrdiff_t respectively. This makes us independant of\n-// the conformance level of <cstddef> and whether -fhonor-std was supplied.\n-// <cstddef> is not currently available during compiler building anyway.\n-// Including <stddef.h> would be wrong, as that would rudely place size_t in\n-// the global namespace.\n-\n-#include <typeinfo>\n-\n-namespace __cxxabiv1\n-{\n-\n-/* type information for int, float etc */\n-class __fundamental_type_info\n-  : public std::type_info\n-{\n-public:\n-  virtual ~__fundamental_type_info ();\n-public:\n-  explicit __fundamental_type_info (const char *__n)\n-    : std::type_info (__n)\n-    { }\n-};\n-\n-/* type information for array objects */\n-class __array_type_info\n-  : public std::type_info\n-{\n-/* abi defined member functions */\n-protected:\n-  virtual ~__array_type_info ();\n-public:\n-  explicit __array_type_info (const char *__n)\n-    : std::type_info (__n)\n-    { }\n-};\n-\n-/* type information for functions (both member and non-member) */\n-class __function_type_info\n-  : public std::type_info\n-{\n-/* abi defined member functions */\n-public:\n-  virtual ~__function_type_info ();\n-public:\n-  explicit __function_type_info (const char *__n)\n-    : std::type_info (__n)\n-    { }\n-  \n-/* implementation defined member functions */\n-protected:\n-  virtual bool __is_function_p () const;\n-};\n-\n-/* type information for enumerations */\n-class __enum_type_info\n-  : public std::type_info\n-{\n-/* abi defined member functions */\n-public:\n-  virtual ~__enum_type_info ();\n-public:\n-  explicit __enum_type_info (const char *__n)\n-    : std::type_info (__n)\n-    { }\n-};\n-\n-/* common type information for simple pointers and pointers to member */\n-class __pbase_type_info\n-  : public std::type_info\n-{\n-/* abi defined member variables */\n-public:\n-  unsigned int __qualifier_flags; /* qualification of the target object */\n-  const std::type_info *__pointee;   /* type of pointed to object */\n-\n-/* abi defined member functions */\n-public:\n-  virtual ~__pbase_type_info ();\n-public:\n-  explicit __pbase_type_info (const char *__n,\n-                                int __quals,\n-                                const std::type_info *__type)\n-    : std::type_info (__n), __qualifier_flags (__quals), __pointee (__type)\n-    { }\n-\n-/* implementation defined types */\n-public:\n-  enum __qualifier_masks {\n-    __const_mask = 0x1,\n-    __volatile_mask = 0x2,\n-    __restrict_mask = 0x4,\n-    __incomplete_mask = 0x8,\n-    __incomplete_class_mask = 0x10\n-  };\n-\n-/* implementation defined member functions */\n-protected:\n-  virtual bool __do_catch (const std::type_info *__thr_type,\n-                           void **__thr_obj,\n-                           unsigned __outer) const;\n-protected:\n-  inline virtual bool __pointer_catch (const __pbase_type_info *__thr_type,\n-                                       void **__thr_obj,\n-                                       unsigned __outer) const;\n-};\n-\n-/* type information for simple pointers */\n-class __pointer_type_info\n-  : public __pbase_type_info\n-{\n-/* abi defined member functions */\n-public:\n-  virtual ~__pointer_type_info ();\n-public:\n-  explicit __pointer_type_info (const char *__n,\n-                                int __quals,\n-                                const std::type_info *__type)\n-    : __pbase_type_info (__n, __quals, __type)\n-    { }\n-\n-/* implementation defined member functions */\n-protected:\n-  virtual bool __is_pointer_p () const;\n-\n-protected:\n-  virtual bool __pointer_catch (const __pbase_type_info *__thr_type,\n-                                void **__thr_obj,\n-                                unsigned __outer) const;\n-};\n-\n-/* type information for a pointer to member variable */\n-class __pointer_to_member_type_info\n-  : public __pbase_type_info\n-{\n-/* abi defined member variables */\n-public:\n-  __class_type_info *__context_class;   /* class of the member */\n-\n-/* abi defined member functions */\n-public:\n-  virtual ~__pointer_to_member_type_info ();\n-public:\n-  explicit __pointer_to_member_type_info (const char *__n,\n-                                          int __quals,\n-                                          const std::type_info *__type,\n-                                          __class_type_info *__klass)\n-    : __pbase_type_info (__n, __quals, __type), __context_class (__klass)\n-    { }\n-\n-/* implementation defined member functions */\n-protected:\n-  virtual bool __pointer_catch (const __pbase_type_info *__thr_type,\n-                                void **__thr_obj,\n-                                unsigned __outer) const;\n-};\n-\n-class __class_type_info;\n-\n-/* helper class for __vmi_class_type */\n-class __base_class_info\n-{\n-/* abi defined member variables */\n-public:\n-  const __class_type_info *__base;    /* base class type */\n-  long __offset_flags;            /* offset and info */\n-\n-/* implementation defined types */\n-public:\n-  enum __offset_flags_masks {\n-    __virtual_mask = 0x1,\n-    __public_mask = 0x2,\n-    hwm_bit = 2,\n-    offset_shift = 8          /* bits to shift offset by */\n-  };\n-  \n-/* implementation defined member functions */\n-public:\n-  bool __is_virtual_p () const\n-    { return __offset_flags & __virtual_mask; }\n-  bool __is_public_p () const\n-    { return __offset_flags & __public_mask; }\n-  __PTRDIFF_TYPE__ __offset () const\n-    { \n-      // This shift, being of a signed type, is implementation defined. GCC\n-      // implements such shifts as arithmetic, which is what we want.\n-      return static_cast<__PTRDIFF_TYPE__> (__offset_flags) >> offset_shift;\n-    }\n-};\n-\n-/* type information for a class */\n-class __class_type_info\n-  : public std::type_info\n-{\n-/* abi defined member functions */\n-public:\n-  virtual ~__class_type_info ();\n-public:\n-  explicit __class_type_info (const char *__n)\n-    : type_info (__n)\n-    { }\n-\n-/* implementation defined types */\n-public:\n-  /* sub_kind tells us about how a base object is contained within a derived\n-     object. We often do this lazily, hence the UNKNOWN value. At other times\n-     we may use NOT_CONTAINED to mean not publicly contained. */\n-  enum __sub_kind\n-  {\n-    __unknown = 0,              /* we have no idea */\n-    __not_contained,            /* not contained within us (in some */\n-                                /* circumstances this might mean not contained */\n-                                /* publicly) */\n-    __contained_ambig,          /* contained ambiguously */\n-    \n-    __contained_virtual_mask = __base_class_info::__virtual_mask, /* via a virtual path */\n-    __contained_public_mask = __base_class_info::__public_mask,   /* via a public path */\n-    __contained_mask = 1 << __base_class_info::hwm_bit,         /* contained within us */\n-    \n-    __contained_private = __contained_mask,\n-    __contained_public = __contained_mask | __contained_public_mask\n-  };\n-\n-public:  \n-  struct __upcast_result;\n-  struct __dyncast_result;\n-\n-/* implementation defined member functions */\n-protected:\n-  virtual bool __do_upcast (const __class_type_info *__dst_type, void **__obj_ptr) const;\n-\n-protected:\n-  virtual bool __do_catch (const type_info *__thr_type, void **__thr_obj,\n-                           unsigned __outer) const;\n-\n-\n-public:\n-  /* Helper for upcast. See if DST is us, or one of our bases. */\n-  /* Return false if not found, true if found. */\n-  virtual bool __do_upcast (const __class_type_info *__dst,\n-                            const void *__obj,\n-                            __upcast_result &__restrict __result) const;\n-\n-public:\n-  /* Indicate whether SRC_PTR of type SRC_TYPE is contained publicly within\n-     OBJ_PTR. OBJ_PTR points to a base object of our type, which is the\n-     destination type. SRC2DST indicates how SRC objects might be contained\n-     within this type.  If SRC_PTR is one of our SRC_TYPE bases, indicate the\n-     virtuality. Returns not_contained for non containment or private\n-     containment. */\n-  inline __sub_kind __find_public_src (__PTRDIFF_TYPE__ __src2dst,\n-                                       const void *__obj_ptr,\n-                                       const __class_type_info *__src_type,\n-                                       const void *__src_ptr) const;\n-\n-public:\n-  /* dynamic cast helper. ACCESS_PATH gives the access from the most derived\n-     object to this base. DST_TYPE indicates the desired type we want. OBJ_PTR\n-     points to a base of our type within the complete object. SRC_TYPE\n-     indicates the static type started from and SRC_PTR points to that base\n-     within the most derived object. Fill in RESULT with what we find. Return\n-     true if we have located an ambiguous match. */\n-  virtual bool __do_dyncast (__PTRDIFF_TYPE__ __src2dst,\n-                             __sub_kind __access_path,\n-                             const __class_type_info *__dst_type,\n-                             const void *__obj_ptr,\n-                             const __class_type_info *__src_type,\n-                             const void *__src_ptr,\n-                             __dyncast_result &__result) const;\n-public:\n-  /* Helper for find_public_subobj. SRC2DST indicates how SRC_TYPE bases are\n-     inherited by the type started from -- which is not necessarily the\n-     current type. The current type will be a base of the destination type.\n-     OBJ_PTR points to the current base. */\n-  virtual __sub_kind __do_find_public_src (__PTRDIFF_TYPE__ __src2dst,\n-                                           const void *__obj_ptr,\n-                                           const __class_type_info *__src_type,\n-                                           const void *__src_ptr) const;\n-};\n-\n-/* type information for a class with a single non-virtual base */\n-class __si_class_type_info\n-  : public __class_type_info\n-{\n-/* abi defined member variables */\n-public:\n-  const __class_type_info *__base_type;\n-\n-/* abi defined member functions */\n-public:\n-  virtual ~__si_class_type_info ();\n-public:\n-  explicit __si_class_type_info (const char *__n,\n-                                 const __class_type_info *__base)\n-    : __class_type_info (__n), __base_type (__base)\n-    { }\n-\n-/* implementation defined member functions */\n-protected:\n-  virtual bool __do_dyncast (__PTRDIFF_TYPE__ __src2dst,\n-                             __sub_kind __access_path,\n-                             const __class_type_info *__dst_type,\n-                             const void *__obj_ptr,\n-                             const __class_type_info *__src_type,\n-                             const void *__src_ptr,\n-                             __dyncast_result &__result) const;\n-  virtual __sub_kind __do_find_public_src (__PTRDIFF_TYPE__ __src2dst,\n-                                           const void *__obj_ptr,\n-                                           const __class_type_info *__src_type,\n-                                           const void *__sub_ptr) const;\n-  virtual bool __do_upcast (const __class_type_info *__dst,\n-                            const void *__obj,\n-                            __upcast_result &__restrict __result) const;\n-};\n-\n-/* type information for a class with multiple and/or virtual bases */\n-class __vmi_class_type_info : public __class_type_info {\n-/* abi defined member variables */\n-public:\n-  unsigned int __flags;         /* details about the class heirarchy */\n-  unsigned int __base_count;    /* number of direct bases */\n-  __base_class_info const __base_info[1]; /* array of bases */\n-  /* The array of bases uses the trailing array struct hack\n-     so this class is not constructable with a normal constructor. It is\n-     internally generated by the compiler. */\n-\n-/* abi defined member functions */\n-public:\n-  virtual ~__vmi_class_type_info ();\n-public:\n-  explicit __vmi_class_type_info (const char *__n,\n-                                  int ___flags)\n-    : __class_type_info (__n), __flags (___flags), __base_count (0)\n-    { }\n-\n-/* implementation defined types */\n-public:\n-  enum __flags_masks {\n-    __non_diamond_repeat_mask = 0x1,   /* distinct instance of repeated base */\n-    __diamond_shaped_mask = 0x2,       /* diamond shaped multiple inheritance */\n-    non_public_base_mask = 0x4,      /* has non-public direct or indirect base */\n-    public_base_mask = 0x8,          /* has public base (direct) */\n-    \n-    __flags_unknown_mask = 0x10\n-  };\n-\n-/* implementation defined member functions */\n-protected:\n-  virtual bool __do_dyncast (__PTRDIFF_TYPE__ __src2dst,\n-                             __sub_kind __access_path,\n-                             const __class_type_info *__dst_type,\n-                             const void *__obj_ptr,\n-                             const __class_type_info *__src_type,\n-                             const void *__src_ptr,\n-                             __dyncast_result &__result) const;\n-  virtual __sub_kind __do_find_public_src (__PTRDIFF_TYPE__ __src2dst,\n-                                           const void *__obj_ptr,\n-                                           const __class_type_info *__src_type,\n-                                           const void *__src_ptr) const;\n-  virtual bool __do_upcast (const __class_type_info *__dst,\n-                            const void *__obj,\n-                            __upcast_result &__restrict __result) const;\n-};\n-\n-/* dynamic cast runtime */\n-extern \"C\"\n-void *__dynamic_cast (const void *__src_ptr,    /* object started from */\n-                      const __class_type_info *__src_type, /* static type of object */\n-                      const __class_type_info *__dst_type, /* desired target type */\n-                      __PTRDIFF_TYPE__ __src2dst); /* how src and dst are related */\n-\n-    /* src2dst has the following possible values\n-       >= 0: src_type is a unique public non-virtual base of dst_type\n-             dst_ptr + src2dst == src_ptr\n-       -1: unspecified relationship\n-       -2: src_type is not a public base of dst_type\n-       -3: src_type is a multiple public non-virtual base of dst_type */\n-\n-/* array ctor/dtor routines */\n-\n-/* allocate and construct array */\n-extern \"C\"\n-void *__cxa_vec_new (__SIZE_TYPE__ __element_count,\n-                     __SIZE_TYPE__ __element_size,\n-                     __SIZE_TYPE__ __padding_size,\n-                     void (*__constructor) (void *),\n-                     void (*__destructor) (void *));\n-\n-extern \"C\"\n-void *__cxa_vec_new2 (__SIZE_TYPE__ __element_count,\n-                      __SIZE_TYPE__ __element_size,\n-                      __SIZE_TYPE__ __padding_size,\n-                      void (*__constructor) (void *),\n-                      void (*__destructor) (void *),\n-                      void *(*__alloc) (__SIZE_TYPE__),\n-                      void (*__dealloc) (void *));\n-\n-extern \"C\"\n-void *__cxa_vec_new3 (__SIZE_TYPE__ __element_count,\n-                      __SIZE_TYPE__ __element_size,\n-                      __SIZE_TYPE__ __padding_size,\n-                      void (*__constructor) (void *),\n-                      void (*__destructor) (void *),\n-                      void *(*__alloc) (__SIZE_TYPE__),\n-                      void (*__dealloc) (void *, __SIZE_TYPE__));\n-\n-/* construct array */\n-extern \"C\"\n-void __cxa_vec_ctor (void *__array_address,\n-                     __SIZE_TYPE__ __element_count,\n-                     __SIZE_TYPE__ __element_size,\n-                     void (*__constructor) (void *),\n-                     void (*__destructor) (void *));\n-\n-extern \"C\"\n-void __cxa_vec_cctor (void *dest_array,\n-\t\t      void *src_array,\n-\t\t      __SIZE_TYPE__ element_count,\n-\t\t      __SIZE_TYPE__ element_size,\n-\t\t      void (*constructor) (void *, void *),\n-\t\t      void (*destructor) (void *));\n- \n-/* destruct array */\n-extern \"C\"\n-void __cxa_vec_dtor (void *__array_address,\n-                     __SIZE_TYPE__ __element_count,\n-                     __SIZE_TYPE__ __element_size,\n-                     void (*__destructor) (void *));\n-\n-/* destruct and release array */\n-extern \"C\"\n-void __cxa_vec_delete (void *__array_address,\n-                       __SIZE_TYPE__ __element_size,\n-                       __SIZE_TYPE__ __padding_size,\n-                       void (*__destructor) (void *));\n-\n-extern \"C\"\n-void __cxa_vec_delete2 (void *__array_address,\n-                        __SIZE_TYPE__ __element_size,\n-                        __SIZE_TYPE__ __padding_size,\n-                        void (*__destructor) (void *),\n-                        void (*__dealloc) (void *));\n-                  \n-extern \"C\"\n-void __cxa_vec_delete3 (void *__array_address,\n-                        __SIZE_TYPE__ __element_size,\n-                        __SIZE_TYPE__ __padding_size,\n-                        void (*__destructor) (void *),\n-                        void (*__dealloc) (void *, __SIZE_TYPE__));\n-                  \n-/* demangling routines */\n-\n-extern \"C\" \n-char *__cxa_demangle (const char *__mangled_name,\n-\t\t      char *__output_buffer,\n-\t\t      __SIZE_TYPE__ *__length,\n-\t\t      int *__status);\n-\n-} /* namespace __cxxabiv1 */\n-\n-/* User programs should use the alias `abi'. */\n-namespace abi = __cxxabiv1;\n-\n-#else\n-#endif /* __cplusplus */\n-\n-\n-#endif /* __CXXABI_H */"}, {"sha": "c009a1637c648cfb6702ca61860525a09b1d7584", "filename": "libstdc++/del_op.cc", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fdel_op.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fdel_op.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fdel_op.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,39 +0,0 @@\n-// Boilerplate support routines for -*- C++ -*- dynamic memory management.\n-// Copyright (C) 1997, 1998, 1999, 2000 Free Software Foundation\n-//\n-// This file is part of GNU CC.\n-//\n-// GNU CC is free software; you can redistribute it and/or modify\n-// it under the terms of the GNU General Public License as published by\n-// the Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-//\n-// GNU CC is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License\n-// along with GNU CC; see the file COPYING.  If not, write to\n-// the Free Software Foundation, 59 Temple Place - Suite 330,\n-// Boston, MA 02111-1307, USA.\n-//\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#include \"new\"\n-\n-extern \"C\" void free (void *);\n-\n-void\n-operator delete (void *ptr) throw ()\n-{\n-  if (ptr)\n-    free (ptr);\n-}"}, {"sha": "d5d619e803db2f1f349e91c84681a36cb0b36f6c", "filename": "libstdc++/del_opnt.cc", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fdel_opnt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fdel_opnt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fdel_opnt.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,39 +0,0 @@\n-// Boilerplate support routines for -*- C++ -*- dynamic memory management.\n-// Copyright (C) 1997, 1998, 1999, 2000 Free Software Foundation\n-//\n-// This file is part of GNU CC.\n-//\n-// GNU CC is free software; you can redistribute it and/or modify\n-// it under the terms of the GNU General Public License as published by\n-// the Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-//\n-// GNU CC is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License\n-// along with GNU CC; see the file COPYING.  If not, write to\n-// the Free Software Foundation, 59 Temple Place - Suite 330,\n-// Boston, MA 02111-1307, USA.\n-//\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#include \"new\"\n-\n-extern \"C\" void free (void *);\n-\n-void\n-operator delete (void *ptr, const std::nothrow_t&) throw ()\n-{\n-  if (ptr)\n-    free (ptr);\n-}"}, {"sha": "b43d45a35a1588ea05db4f6dc2036a82d9c040c3", "filename": "libstdc++/del_opv.cc", "status": "removed", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fdel_opv.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fdel_opv.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fdel_opv.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,36 +0,0 @@\n-// Boilerplate support routines for -*- C++ -*- dynamic memory management.\n-// Copyright (C) 1997, 1998, 1999, 2000 Free Software Foundation\n-//\n-// This file is part of GNU CC.\n-//\n-// GNU CC is free software; you can redistribute it and/or modify\n-// it under the terms of the GNU General Public License as published by\n-// the Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-//\n-// GNU CC is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License\n-// along with GNU CC; see the file COPYING.  If not, write to\n-// the Free Software Foundation, 59 Temple Place - Suite 330,\n-// Boston, MA 02111-1307, USA.\n-//\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#include \"new\"\n-\n-void\n-operator delete[] (void *ptr) throw ()\n-{\n-  ::operator delete (ptr);\n-}"}, {"sha": "e91096c4af6ac86ca613e80c9d823a3c4d1321be", "filename": "libstdc++/del_opvnt.cc", "status": "removed", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fdel_opvnt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fdel_opvnt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fdel_opvnt.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,36 +0,0 @@\n-// Boilerplate support routines for -*- C++ -*- dynamic memory management.\n-// Copyright (C) 1997, 1998, 1999, 2000 Free Software Foundation\n-//\n-// This file is part of GNU CC.\n-//\n-// GNU CC is free software; you can redistribute it and/or modify\n-// it under the terms of the GNU General Public License as published by\n-// the Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-//\n-// GNU CC is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License\n-// along with GNU CC; see the file COPYING.  If not, write to\n-// the Free Software Foundation, 59 Temple Place - Suite 330,\n-// Boston, MA 02111-1307, USA.\n-//\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#include \"new\"\n-\n-void\n-operator delete[] (void *ptr, const std::nothrow_t&) throw ()\n-{\n-  ::operator delete (ptr);\n-}"}, {"sha": "4d35c56c4054ecadc6615534e174c4479aaeba30", "filename": "libstdc++/exception", "status": "removed", "additions": 0, "deletions": 65, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fexception", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fexception", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fexception?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,65 +0,0 @@\n-// Exception Handling support header for -*- C++ -*-\n-// Copyright (C) 1995, 1996, 1997, 1998, 2000 Free Software Foundation\n-\n-// This file is part of GNU CC.\n-//\n-// GNU CC is free software; you can redistribute it and/or modify\n-// it under the terms of the GNU General Public License as published by\n-// the Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-// \n-// GNU CC is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-// \n-// You should have received a copy of the GNU General Public License\n-// along with GNU CC; see the file COPYING.  If not, write to\n-// the Free Software Foundation, 59 Temple Place - Suite 330,\n-// Boston, MA 02111-1307, USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#ifndef __EXCEPTION__\n-#define __EXCEPTION__\n-\n-#pragma interface \"exception\"\n-\n-extern \"C++\" {\n-\n-namespace std {\n-\n-class exception {\n-public:\n-  exception () { }\n-  virtual ~exception () { }\n-  virtual const char* what () const;\n-};\n-\n-class bad_exception : public exception {\n-public:\n-  bad_exception () { }\n-  virtual ~bad_exception () { }\n-};\n-\n-typedef void (*terminate_handler) ();\n-typedef void (*unexpected_handler) ();\n-\n-terminate_handler set_terminate (terminate_handler);\n-void terminate () __attribute__ ((__noreturn__));\n-unexpected_handler set_unexpected (unexpected_handler);\n-void unexpected () __attribute__ ((__noreturn__));\n-bool uncaught_exception ();\n-\n-} // namespace std\n-\n-} // extern \"C++\"\n-\n-#endif"}, {"sha": "c27b8ff9603388f0bc103ccc7f94ab3f147e10ee", "filename": "libstdc++/exception.cc", "status": "removed", "additions": 0, "deletions": 404, "changes": 404, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fexception.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fexception.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fexception.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,404 +0,0 @@\n-// Functions for Exception Support for -*- C++ -*-\n-// Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000 Free Software Foundation\n-\n-// This file is part of GNU CC.\n-\n-// GNU CC is free software; you can redistribute it and/or modify\n-// it under the terms of the GNU General Public License as published by\n-// the Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// GNU CC is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License\n-// along with GNU CC; see the file COPYING.  If not, write to\n-// the Free Software Foundation, 59 Temple Place - Suite 330,\n-// Boston, MA 02111-1307, USA. \n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#pragma implementation \"exception\"\n-\n-#include \"typeinfo\"\n-#include \"exception\"\n-#include <stddef.h>\n-#include \"gansidecl.h\" /* Needed to support macros used in eh-common.h. */\n-#include \"eh-common.h\"\n-\n-/* Define terminate, unexpected, set_terminate, set_unexpected as\n-   well as the default terminate func and default unexpected func.  */\n-\n-/* __terminate and __terminate_set_func, defined in libgcc2. */\n-typedef void (*__terminate_func_ptr)(void) __attribute__ ((__noreturn__));\n-extern \"C\" void __terminate (void) __attribute__ ((__noreturn__));\n-extern \"C\" __terminate_func_ptr __terminate_set_func (__terminate_func_ptr);\n-\n-using std::terminate;\n-\n-void\n-std::terminate ()\n-{\n-  __terminate ();\n-}\n-\n-void\n-__default_unexpected ()\n-{\n-  terminate ();\n-}\n-\n-static std::unexpected_handler __unexpected_func __attribute__((__noreturn__))\n-  = __default_unexpected;\n-\n-std::terminate_handler\n-std::set_terminate (std::terminate_handler func)\n-{\n-  return __terminate_set_func (func);\n-}\n-\n-std::unexpected_handler\n-std::set_unexpected (std::unexpected_handler func)\n-{\n-  std::unexpected_handler old = __unexpected_func;\n-\n-  __unexpected_func = func;\n-  return old;\n-}\n-\n-void\n-std::unexpected ()\n-{\n-  __unexpected_func ();\n-}\n-\n-/* The type of a function called to clean up an exception object.\n-   (These will be destructors.)  Under the old ABI, these take a\n-   second argument (the `in-charge' argument), that indicates whether\n-   or not do delete the object, and whether or not to destroy virtual\n-   bases.  Under the new ABI, there is no second argument.  */\n-#if !defined (__GXX_ABI_VERSION) || __GXX_ABI_VERSION < 100\n-typedef void (*cleanup_fn)(void *, int);\n-/* The `2' is the value for the in-charge parameter that indicates\n-   that virtual bases should be destroyed.  */\n-#define CALL_CLEANUP(FN, THIS) FN (THIS, 2)\n-#else\n-typedef void (*cleanup_fn)(void *);\n-#define CALL_CLEANUP(FN, THIS) FN (THIS)\n-#endif\n-\n-/* C++-specific state about the current exception.\n-   This must match init_exception_processing().\n-\n-   Note that handlers and caught are not redundant; when rethrown, an\n-   exception can have multiple active handlers and still be considered\n-   uncaught.  */\n-\n-struct cp_eh_info\n-{\n-  __eh_info eh_info;\n-  void *value;\n-  void *type;\n-  cleanup_fn cleanup;\n-  bool caught;\n-  cp_eh_info *next;\n-  long handlers;\n-  void *original_value;\n-};\n-\n-/* Language-specific EH info pointer, defined in libgcc2. */\n-\n-extern \"C\" cp_eh_info **__get_eh_info (); \t// actually void **\n-\n-/* Exception allocate and free, defined in libgcc2. */\n-extern \"C\" void *__eh_alloc(size_t);\n-extern \"C\" void __eh_free(void *);\n-\n-/* Is P the type_info node for a pointer of some kind?  */\n-\n-extern bool __is_pointer (void *);\n-\n-\n-/* OLD Compiler hook to return a pointer to the info for the current exception.\n-   Used by get_eh_info ().  This fudges the actualy returned value to\n-   point to the beginning of what USE to be the cp_eh_info structure.\n-   THis is so that old code that dereferences this pointer will find\n-   things where it expects it to be.*/\n-extern \"C\" void *\n-__cp_exception_info (void)\n-{\n-  return &((*__get_eh_info ())->value);\n-}\n-\n-#define CP_EH_INFO ((cp_eh_info *) *__get_eh_info ())\n-\n-/* Old Compiler hook to return a pointer to the info for the current exception.\n-   Used by get_eh_info ().  */\n-\n-extern \"C\" cp_eh_info *\n-__cp_eh_info (void)\n-{\n-  cp_eh_info *p = CP_EH_INFO;\n-  return p;\n-}\n-\n-/* Compiler hook to return a pointer to the info for the current exception,\n-   Set the caught bit, and increment the number of handlers that are\n-   looking at this exception. This makes handlers smaller. */\n-\n-extern \"C\" cp_eh_info *\n-__start_cp_handler (void)\n-{\n-  cp_eh_info *p = CP_EH_INFO;\n-  p->caught = 1;\n-  p->handlers++;\n-  return p;\n-}\n-\n-extern \"C\" int __throw_type_match_rtti_2 (const void *, const void *,\n-\t\t\t\t\t void *, void **);\n-\n-extern \"C\" void *\n-__cplus_type_matcher (__eh_info *info_, void *match_info,\n-\t\t      exception_descriptor *exception_table)\n-{\n-  cp_eh_info *info = (cp_eh_info *)info_;\n-\n-  /* No exception table implies the old style mechanism, so don't check. */\n-  if (exception_table != NULL \n-      && exception_table->lang.language != EH_LANG_C_plus_plus)\n-    return NULL;\n-\n-  if (match_info == CATCH_ALL_TYPE)\n-    return (void *)1;\n-\n-  /* we don't worry about version info yet, there is only one version! */\n-  \n-  void *match_type = match_info;\n-  \n-#if !defined (__GXX_ABI_VERSION) || __GXX_ABI_VERSION < 100\n-  match_type  = ((void *(*)())match_type) ();\n-#endif\n-\n-  if (__throw_type_match_rtti_2 (match_type, info->type,\n-\t\t\t\t info->original_value, &info->value))\n-    // Arbitrary non-null pointer.\n-    return (void *)1;\n-  else\n-    return NULL;\n-}\n-\n-/* Compiler hook to push a new exception onto the stack.\n-   Used by expand_throw().  */\n-\n-extern \"C\" void\n-__cp_push_exception (void *value, void *type, cleanup_fn cleanup)\n-{\n-  cp_eh_info *p = (cp_eh_info *) __eh_alloc (sizeof (cp_eh_info));\n-\n-  p->value = value;\n-  p->type = type;\n-  p->cleanup = cleanup;\n-  p->handlers = 0;\n-  p->caught = false;\n-  p->original_value = value;\n-\n-  p->eh_info.match_function = __cplus_type_matcher;\n-  p->eh_info.language = EH_LANG_C_plus_plus;\n-  p->eh_info.version = 1;\n-\n-  cp_eh_info **q = __get_eh_info ();\n-\n-  p->next = *q;\n-  *q = p;\n-}\n-\n-/* Compiler hook to pop an exception that has been finalized.  Used by\n-   push_eh_cleanup().  P is the info for the exception caught by the\n-   current catch block.  */\n-\n-extern \"C\" void\n-__cp_pop_exception (cp_eh_info *p)\n-{\n-  cp_eh_info **stack = __get_eh_info ();\n-  cp_eh_info **q = stack;\n-\n-  --p->handlers;\n-\n-  /* Do nothing if our exception is being rethrown (i.e. if the active\n-     exception is our exception and it is uncaught).  */\n-  if (p == *q && !p->caught)\n-    return;\n-\n-  /* Don't really pop if there are still active handlers for our exception;\n-     rather, push it down past any uncaught exceptions.  */\n-  if (p->handlers != 0)\n-    {\n-      if (p == *q && p->next && !p->next->caught)\n-\t{\n-\t  q = &(p->next);\n-\t  while (1)\n-\t    {\n-\t      if (*q == 0 || (*q)->caught)\n-\t\tbreak;\n-\n-\t      q = &((*q)->next);\n-\t    }\n-\t  *stack = p->next;\n-\t  p->next = *q;\n-\t  *q = p;\n-\t}\n-      return;\n-    }\n-\n-  for (; *q; q = &((*q)->next))\n-    if (*q == p)\n-      break;\n-\n-  if (! *q)\n-    terminate ();\n-\n-  *q = p->next;\n-\n-  if (p->cleanup)\n-    // value may have been adjusted.\n-    CALL_CLEANUP (p->cleanup, p->original_value);\n-\n-  if (! __is_pointer (p->type))\n-    __eh_free (p->original_value);  // value may have been adjusted.\n-\n-  __eh_free (p);\n-}\n-\n-/* We're doing a rethrow.  Find the currently handled exception, mark it\n-   uncaught, and move it to the top of the EH stack.  */\n-\n-extern \"C\" void\n-__uncatch_exception (void)\n-{\n-  cp_eh_info **stack = __get_eh_info ();\n-  cp_eh_info **q = stack;\n-  cp_eh_info *p;\n-\n-  while (1)\n-    {\n-      p = *q;\n-\n-      if (p == 0)\n-\tterminate ();\n-      if (p->caught)\n-\tbreak;\n-\n-      q = &(p->next);\n-    }\n-\n-  if (q != stack)\n-    {\n-      *q = p->next;\n-      p->next = *stack;\n-      *stack = p;\n-    }\n-\n-  p->caught = false;\n-}\n-\n-/* As per [except.unexpected]:\n-   If an exception is thrown, we check it against the spec.  If it doesn't\n-   match, we call unexpected ().  If unexpected () throws, we check that\n-   exception against the spec.  If it doesn't match, if the spec allows\n-   bad_exception we throw that; otherwise we call terminate ().\n-\n-   The compiler treats an exception spec as a try block with a generic\n-   handler that just calls this function with a list of the allowed\n-   exception types, so we have an active exception that can be rethrown.\n-\n-   This function does not return.  */   \n-\n-extern \"C\" void\n-__check_eh_spec (int n, const void **spec)\n-{\n-  cp_eh_info *p = CP_EH_INFO;\n-  void *d;\n-\n-  for (int i = 0; i < n; ++i)\n-    {\n-      if (__throw_type_match_rtti_2 (spec[i], p->type, p->value, &d))\n-\tthrow;\n-    }\n-\n-  try\n-    {\n-      std::unexpected ();\n-    }\n-  catch (...)\n-    {\n-      // __exception_info is an artificial var pushed into each catch block.\n-      if (p != __exception_info)\n-\t{\n-\t  p = __exception_info;\n-\t  for (int i = 0; i < n; ++i)\n-\t    {\n-\t      if (__throw_type_match_rtti_2 (spec[i], p->type, p->value, &d))\n-\t\tthrow;\n-\t    }\n-\t}\n-\n-      const std::type_info &bad_exc = typeid (std::bad_exception);\n-      for (int i = 0; i < n; ++i)\n-\t{\n-\t  if (__throw_type_match_rtti_2 (spec[i], &bad_exc, p->value, &d))\n-\t    throw std::bad_exception ();\n-\t}\n-\n-      terminate ();\n-    }\n-}\n-\n-/* Special case of the above for throw() specs.  */\n-\n-extern \"C\" void\n-__check_null_eh_spec (void)\n-{\n-  __check_eh_spec (0, 0);\n-}\n-\n-// Helpers for rtti. Although these don't return, we give them return types so\n-// that the type system is not broken.\n-\n-extern \"C\" void *\n-__throw_bad_cast ()\n-{\n-  throw std::bad_cast ();\n-  return 0;\n-}\n-\n-extern \"C\" std::type_info const &\n-__throw_bad_typeid ()\n-{\n-  throw std::bad_typeid ();\n-  return typeid (void);\n-}\n-\n-/* Has the current exception been caught?  */\n-\n-bool\n-std::uncaught_exception ()\n-{\n-  cp_eh_info *p = CP_EH_INFO;\n-  return p && ! p->caught;\n-}\n-\n-const char * std::exception::\n-what () const\n-{\n-  return typeid (*this).name ();\n-}"}, {"sha": "2c35ca92b0398bdaf2e209f2fc137ef801c53cd8", "filename": "libstdc++/fstream", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ffstream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ffstream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Ffstream?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,7 +0,0 @@\n-// -*- C++ -*- forwarding header.\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#ifndef __FSTREAM__\n-#define __FSTREAM__\n-#include <fstream.h>\n-#endif"}, {"sha": "817948579ce7905eb9cf082de0bb62e0b70f513b", "filename": "libstdc++/iomanip", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fiomanip", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fiomanip", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fiomanip?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,7 +0,0 @@\n-// -*- C++ -*- forwarding header.\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#ifndef __IOMANIP__\n-#define __IOMANIP__\n-#include <iomanip.h>\n-#endif"}, {"sha": "8314cf7b73f6ae566131df41b9fe9da027fbe26d", "filename": "libstdc++/iosfwd", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fiosfwd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fiosfwd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fiosfwd?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,15 +0,0 @@\n-// -*- C++ -*- I/O forward declaration header.\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#ifndef __IOSFWD__\n-#define __IOSFWD__\n-class ios;\n-class streambuf;\n-class istream;\n-class ostream;\n-class iostream;\n-class filebuf;\n-class ifstream;\n-class ofstream;\n-class fstream;\n-#endif"}, {"sha": "7ecba6e8dafce0d25d9b667c457b4465ae251eb9", "filename": "libstdc++/iostream", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fiostream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fiostream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fiostream?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,7 +0,0 @@\n-// -*- C++ -*- forwarding header.\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#ifndef __IOSTREAM__\n-#define __IOSTREAM__\n-#include <iostream.h>\n-#endif"}, {"sha": "cbb8d107acff183f8d109e5d341ff9fd00cab464", "filename": "libstdc++/new", "status": "removed", "additions": 0, "deletions": 68, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fnew", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fnew", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fnew?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,68 +0,0 @@\n-// The -*- C++ -*- dynamic memory management header.\n-// Copyright (C) 1994, 1996, 1997, 1998, 2000 Free Software Foundation\n-\n-// This file is part of GNU CC.\n-//\n-// GNU CC is free software; you can redistribute it and/or modify\n-// it under the terms of the GNU General Public License as published by\n-// the Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-// \n-// GNU CC is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-// \n-// You should have received a copy of the GNU General Public License\n-// along with GNU CC; see the file COPYING.  If not, write to\n-// the Free Software Foundation, 59 Temple Place - Suite 330,\n-// Boston, MA 02111-1307, USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#ifndef __NEW__\n-#define __NEW__\n-\n-#pragma interface \"new\"\n-#include <stddef.h>\n-#include <exception>\n-\n-extern \"C++\" {\n-\n-namespace std {\n-\n-  class bad_alloc : public exception {\n-  public:\n-    virtual const char* what() const throw() { return \"bad_alloc\"; }\n-  };\n-\n-  struct nothrow_t {};\n-  extern const nothrow_t nothrow;\n-  typedef void (*new_handler)();\n-  new_handler set_new_handler (new_handler);\n-\n-} // namespace std\n-\n-// replaceable signatures\n-void *operator new (size_t) throw (std::bad_alloc);\n-void *operator new[] (size_t) throw (std::bad_alloc);\n-void operator delete (void *) throw();\n-void operator delete[] (void *) throw();\n-void *operator new (size_t, const std::nothrow_t&) throw();\n-void *operator new[] (size_t, const std::nothrow_t&) throw();\n-void operator delete (void *, const std::nothrow_t&) throw();\n-void operator delete[] (void *, const std::nothrow_t&) throw();\n-\n-// default placement versions of operator new\n-inline void *operator new(size_t, void *place) throw() { return place; }\n-inline void *operator new[](size_t, void *place) throw() { return place; }\n-} // extern \"C++\"\n-\n-#endif"}, {"sha": "cb1fa4cb5caa3becee3728a9a79acb64649d8205", "filename": "libstdc++/new.h", "status": "removed", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fnew.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fnew.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fnew.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,38 +0,0 @@\n-// -*- C++ -*- forwarding header.\n-// Copyright (C) 2000 Free Software Foundation\n-\n-// This file is part of GNU CC.\n-//\n-// GNU CC is free software; you can redistribute it and/or modify\n-// it under the terms of the GNU General Public License as published by\n-// the Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-// \n-// GNU CC is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-// \n-// You should have received a copy of the GNU General Public License\n-// along with GNU CC; see the file COPYING.  If not, write to\n-// the Free Software Foundation, 59 Temple Place - Suite 330,\n-// Boston, MA 02111-1307, USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#ifndef __NEW_H__\n-#define __NEW_H__\n-\n-#include <new>\n-\n-using std::new_handler;\n-using std::set_new_handler;\n-\n-#endif // __NEW_H__"}, {"sha": "183d1b29882fa839a73e76e1cfd16a12db063bda", "filename": "libstdc++/new_handler.cc", "status": "removed", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fnew_handler.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fnew_handler.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fnew_handler.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,44 +0,0 @@\n-// Implementation file for the -*- C++ -*- dynamic memory management header.\n-// Copyright (C) 1996, 1997, 1998, 2000 Free Software Foundation\n-//\n-// This file is part of GNU CC.\n-//\n-// GNU CC is free software; you can redistribute it and/or modify\n-// it under the terms of the GNU General Public License as published by\n-// the Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-//\n-// GNU CC is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License\n-// along with GNU CC; see the file COPYING.  If not, write to\n-// the Free Software Foundation, 59 Temple Place - Suite 330,\n-// Boston, MA 02111-1307, USA. \n-//\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#pragma implementation \"new\"\n-#include \"new\"\n-\n-const std::nothrow_t std::nothrow = { };\n-\n-using std::new_handler;\n-new_handler __new_handler;\n-\n-new_handler\n-std::set_new_handler (new_handler handler)\n-{\n-  new_handler prev_handler = __new_handler;\n-  __new_handler = handler;\n-  return prev_handler;\n-}"}, {"sha": "92577e2f6c8c8f9f4d4e6125ddcfadd977655db4", "filename": "libstdc++/new_op.cc", "status": "removed", "additions": 0, "deletions": 56, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fnew_op.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fnew_op.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fnew_op.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,56 +0,0 @@\n-// Support routines for the -*- C++ -*- dynamic memory management.\n-// Copyright (C) 1997, 1998, 1999, 2000 Free Software Foundation\n-//\n-// This file is part of GNU CC.\n-//\n-// GNU CC is free software; you can redistribute it and/or modify\n-// it under the terms of the GNU General Public License as published by\n-// the Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-//\n-// GNU CC is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License\n-// along with GNU CC; see the file COPYING.  If not, write to\n-// the Free Software Foundation, 59 Temple Place - Suite 330,\n-// Boston, MA 02111-1307, USA.\n-//\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#include \"new\"\n-using std::new_handler;\n-using std::bad_alloc;\n-\n-extern \"C\" void *malloc (size_t);\n-extern new_handler __new_handler;\n-\n-void *\n-operator new (size_t sz) throw (std::bad_alloc)\n-{\n-  void *p;\n-\n-  /* malloc (0) is unpredictable; avoid it.  */\n-  if (sz == 0)\n-    sz = 1;\n-  p = (void *) malloc (sz);\n-  while (p == 0)\n-    {\n-      new_handler handler = __new_handler;\n-      if (! handler)\n-\tthrow bad_alloc ();\n-      handler ();\n-      p = (void *) malloc (sz);\n-    }\n-\n-  return p;\n-}"}, {"sha": "27a9283f165ff2f1fbc8da277655d06d21844e44", "filename": "libstdc++/new_opnt.cc", "status": "removed", "additions": 0, "deletions": 64, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fnew_opnt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fnew_opnt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fnew_opnt.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,64 +0,0 @@\n-// Support routines for the -*- C++ -*- dynamic memory management.\n-// Copyright (C) 1997, 1998, 1999, 2000 Free Software Foundation\n-//\n-// This file is part of GNU CC.\n-//\n-// GNU CC is free software; you can redistribute it and/or modify\n-// it under the terms of the GNU General Public License as published by\n-// the Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-//\n-// GNU CC is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License\n-// along with GNU CC; see the file COPYING.  If not, write to\n-// the Free Software Foundation, 59 Temple Place - Suite 330,\n-// Boston, MA 02111-1307, USA.\n-//\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#include \"new\"\n-using std::new_handler;\n-using std::bad_alloc;\n-\n-extern \"C\" void *malloc (size_t);\n-extern new_handler __new_handler;\n-\n-void *\n-operator new (size_t sz, const std::nothrow_t&) throw()\n-{\n-  void *p;\n-\n-  /* malloc (0) is unpredictable; avoid it.  */\n-  if (sz == 0)\n-    sz = 1;\n-  p = (void *) malloc (sz);\n-  while (p == 0)\n-    {\n-      new_handler handler = __new_handler;\n-      if (! handler)\n-\treturn 0;\n-      try\n-\t{\n-\t  handler ();\n-\t}\n-      catch (bad_alloc &)\n-\t{\n-\t  return 0;\n-\t}\n-\n-      p = (void *) malloc (sz);\n-    }\n-\n-  return p;\n-}"}, {"sha": "1e14ca81cf6ae004a896964c095d9f2453ba2397", "filename": "libstdc++/new_opv.cc", "status": "removed", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fnew_opv.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fnew_opv.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fnew_opv.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,36 +0,0 @@\n-// Boilerplate support routines for -*- C++ -*- dynamic memory management.\n-// Copyright (C) 1997, 1998, 1999, 2000 Free Software Foundation\n-//\n-// This file is part of GNU CC.\n-//\n-// GNU CC is free software; you can redistribute it and/or modify\n-// it under the terms of the GNU General Public License as published by\n-// the Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-//\n-// GNU CC is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License\n-// along with GNU CC; see the file COPYING.  If not, write to\n-// the Free Software Foundation, 59 Temple Place - Suite 330,\n-// Boston, MA 02111-1307, USA.\n-//\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#include \"new\"\n-\n-void *\n-operator new[] (size_t sz) throw (std::bad_alloc)\n-{\n-  return ::operator new(sz);\n-}"}, {"sha": "dde0a7c3cf99d048348fed62ab4481eecaa24fe4", "filename": "libstdc++/new_opvnt.cc", "status": "removed", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fnew_opvnt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fnew_opvnt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fnew_opvnt.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,36 +0,0 @@\n-// Boilerplate support routines for -*- C++ -*- dynamic memory management.\n-// Copyright (C) 1997, 1998, 1999, 2000 Free Software Foundation\n-//\n-// This file is part of GNU CC.\n-//\n-// GNU CC is free software; you can redistribute it and/or modify\n-// it under the terms of the GNU General Public License as published by\n-// the Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-//\n-// GNU CC is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-//\n-// You should have received a copy of the GNU General Public License\n-// along with GNU CC; see the file COPYING.  If not, write to\n-// the Free Software Foundation, 59 Temple Place - Suite 330,\n-// Boston, MA 02111-1307, USA.\n-//\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-#include \"new\"\n-\n-void *\n-operator new[] (size_t sz, const std::nothrow_t& nothrow) throw()\n-{\n-  return ::operator new(sz, nothrow);\n-}"}, {"sha": "abaed59177fd851c5a1a1fc4ea97be15ed3cad7b", "filename": "libstdc++/pure.c", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fpure.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fpure.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fpure.c?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,16 +0,0 @@\n-#include <stdio.h>\n-\n-#ifdef __GNU_LIBRARY__\n-  /* Avoid forcing the library's meaning of `write' on the user program\n-     by using the \"internal\" name (for use within the library)  */\n-#define write(fd, buf, n)\t__write((fd), (buf), (n))\n-#endif\n-\n-#define MESSAGE \"pure virtual method called\\n\"\n-\n-void\n-__pure_virtual (void)\n-{\n-  write (2, MESSAGE, sizeof (MESSAGE) - 1);\n-  __terminate ();\n-}"}, {"sha": "0b3617ece6204d159ca1e22f7754b194cd04593c", "filename": "libstdc++/sinst.cc", "status": "removed", "additions": 0, "deletions": 135, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fsinst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fsinst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fsinst.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,135 +0,0 @@\n-// Instantiation file for the -*- C++ -*- string classes.\n-// Copyright (C) 1994 Free Software Foundation\n-\n-// This file is part of the GNU ANSI C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License\n-// along with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n-\n-// As a special exception, if you link this library with files\n-// compiled with a GNU compiler to produce an executable, this does not cause\n-// the resulting executable to be covered by the GNU General Public License.\n-// This exception does not however invalidate any other reasons why\n-// the executable file might be covered by the GNU General Public License.\n-\n-// Written by Jason Merrill based upon the specification by Takanori Adachi\n-// in ANSI X3J16/94-0013R2.\n-\n-#ifdef __GNUG__\n-#ifdef TRAITS\n-#ifdef C\n-#pragma implementation \"std/straits.h\"\n-#endif\n-#endif\n-#endif\n-\n-#include <string>\n-\n-#ifdef C\n-typedef char c;\n-#endif\n-#ifdef W\n-typedef wchar_t c;\n-#endif\n-\n-#if defined(TRAITS) && !defined(C)\n-template class string_char_traits <c>;\n-#else\n-/* string_char_traits<char> is already explicitly specialized in\n-   std/straits.h.  */\n-#endif\n-\n-typedef basic_string <c> s;\n-\n-#ifdef MAIN\n-template class basic_string <c>;\n-#endif\n-\n-#ifdef ADDSS\n-template s operator+ (const s&, const s&);\n-#endif\n-#ifdef ADDPS\n-template s operator+ (const c*, const s&);\n-#endif\n-#ifdef ADDCS\n-template s operator+ (c, const s&);\n-#endif\n-#ifdef ADDSP\n-template s operator+ (const s&, const c*);\n-#endif\n-#ifdef ADDSC\n-template s operator+ (const s&, c);\n-#endif\n-#ifdef EQSS\n-template bool operator== (const s&, const s&);\n-#endif\n-#ifdef EQPS\n-template bool operator== (const c*, const s&);\n-#endif\n-#ifdef EQSP\n-template bool operator== (const s&, const c*);\n-#endif\n-#ifdef NESS\n-template bool operator!= (const s&, const s&);\n-#endif\n-#ifdef NEPS\n-template bool operator!= (const c*, const s&);\n-#endif\n-#ifdef NESP\n-template bool operator!= (const s&, const c*);\n-#endif\n-#ifdef LTSS\n-template bool operator< (const s&, const s&);\n-#endif\n-#ifdef LTPS\n-template bool operator< (const c*, const s&);\n-#endif\n-#ifdef LTSP\n-template bool operator< (const s&, const c*);\n-#endif\n-#ifdef GTSS\n-template bool operator> (const s&, const s&);\n-#endif\n-#ifdef GTPS\n-template bool operator> (const c*, const s&);\n-#endif\n-#ifdef GTSP\n-template bool operator> (const s&, const c*);\n-#endif\n-#ifdef LESS\n-template bool operator<= (const s&, const s&);\n-#endif\n-#ifdef LEPS\n-template bool operator<= (const c*, const s&);\n-#endif\n-#ifdef LESP\n-template bool operator<= (const s&, const c*);\n-#endif\n-#ifdef GESS\n-template bool operator>= (const s&, const s&);\n-#endif\n-#ifdef GEPS\n-template bool operator>= (const c*, const s&);\n-#endif\n-#ifdef GESP\n-template bool operator>= (const s&, const c*);\n-#endif\n-#ifdef EXTRACT\n-template istream& operator>> (istream&, s&);\n-#endif // EXTRACT\n-#ifdef INSERT\n-template ostream& operator<< (ostream&, const s&);\n-#endif // INSERT\n-#ifdef GETLINE\n-template istream& getline (istream&, s&, c);\n-#endif"}, {"sha": "45393b14761ebc8030263a7709aa13ad151a0be9", "filename": "libstdc++/sstream", "status": "removed", "additions": 0, "deletions": 343, "changes": 343, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fsstream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fsstream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fsstream?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,343 +0,0 @@\n-/* This is part of libio/iostream, providing -*- C++ -*- input/output.\n-Copyright (C) 2000 Free Software Foundation\n-\n-This file is part of the GNU IO Library.  This library is free\n-software; you can redistribute it and/or modify it under the\n-terms of the GNU General Public License as published by the\n-Free Software Foundation; either version 2, or (at your option)\n-any later version.\n-\n-This library is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-You should have received a copy of the GNU General Public License\n-along with this library; see the file COPYING.  If not, write to the Free\n-Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n-\n-As a special exception, if you link this library with files\n-compiled with a GNU compiler to produce an executable, this does not cause\n-the resulting executable to be covered by the GNU General Public License.\n-This exception does not however invalidate any other reasons why\n-the executable file might be covered by the GNU General Public License. */\n-\n-/* Written by Magnus Fromreide (magfr@lysator.liu.se). */\n-/* seekoff and ideas for overflow is largely borrowed from libstdc++-v3 */\n-\n-#ifndef __SSTREAM__\n-#define __SSTREAM__\n-\n-#include <iostream.h>\n-#include <streambuf.h>\n-#include <string>\n-\n-namespace std\n-{\n-  class stringbuf : public streambuf\n-  {\n-  public:\n-    typedef char\tchar_type;\n-    typedef int\t\tint_type;\n-    typedef streampos\tpos_type;\n-    typedef streamoff\toff_type;\n-\n-    explicit\n-    stringbuf(int which=ios::in|ios::out)\n-      : streambuf(), mode(static_cast<ios::open_mode>(which)),\n-\tstream(NULL), stream_len(0)\n-    {\n-      stringbuf_init();\n-    }\n-\n-    explicit\n-    stringbuf(const string &str, int which=ios::in|ios::out)\n-      : streambuf(), mode(static_cast<ios::open_mode>(which)),\n-\tstream(NULL), stream_len(0)\n-    {\n-      if (mode & (ios::in|ios::out))\n-\t{\n-\t  stream_len = str.size();\n-\t  stream = new char_type[stream_len];\n-\t  str.copy(stream, stream_len);\n-\t}\n-      stringbuf_init();\n-    }\n-\n-    virtual\n-    ~stringbuf()\n-    {\n-      delete[] stream;\n-    }\n-\n-    string\n-    str() const\n-    {\n-      if (pbase() != 0)\n-\treturn string(stream, pptr()-pbase());\n-      else\n-\treturn string();\n-    }\n-\n-    void\n-    str(const string& str)\n-    {\n-      delete[] stream;\n-      stream_len = str.size();\n-      stream = new char_type[stream_len];\n-      str.copy(stream, stream_len);\n-      stringbuf_init();\n-    }\n-\n-  protected:\n-    // The buffer is already in gptr, so if it ends then it is out of data.\n-    virtual int\n-    underflow()\n-    {\n-      return EOF;\n-    }\n-\n-    virtual int\n-    overflow(int c = EOF)\n-    {\n-      int res;\n-      if (mode & ios::out)\n-\t{\n-\t  if (c != EOF)\n-\t    {\n-\t      streamsize old_stream_len = stream_len;\n-\t      stream_len += 1;\n-\t      char_type* new_stream = new char_type[stream_len];\n-\t      memcpy(new_stream, stream, old_stream_len);\n-\t      delete[] stream;\n-\t      stream = new_stream;\n-\t      stringbuf_sync(gptr()-eback(), pptr()-pbase());\n-\t      sputc(c);\n-\t      res = c;\n-\t    }\n-\t  else\n-\t    res = EOF;\n-\t}\n-      else\n-\tres = 0;\n-      return res;\n-    }\n-\n-    virtual streambuf*\n-    setbuf(char_type* s, streamsize n)\n-    {\n-      if (n != 0)\n-\t{\n-\t  delete[] stream;\n-\t  stream = new char_type[n];\n-\t  memcpy(stream, s, n);\n-\t  stream_len = n;\n-\t  stringbuf_sync(0, 0);\n-\t}\n-      return this;\n-    }\n-\n-    virtual pos_type\n-    seekoff(off_type off, ios::seek_dir way, int which = ios::in | ios::out)\n-    {\n-      pos_type ret =  pos_type(off_type(-1));\n-      bool testin = which & ios::in && mode & ios::in;\n-      bool testout = which & ios::out && mode & ios::out;\n-      bool testboth = testin && testout && way != ios::cur;\n-\n-      if (stream_len && ((testin != testout) || testboth))\n-\t{\n-\t  char_type* beg = stream;\n-\t  char_type* curi = NULL;\n-\t  char_type* curo = NULL;\n-\t  char_type* endi = NULL;\n-\t  char_type* endo = NULL;\n-\n-\t  if (testin)\n-\t    {\n-\t      curi = gptr();\n-\t      endi = egptr();\n-\t    }\n-\t  if (testout)\n-\t    {\n-\t      curo = pptr();\n-\t      endo = epptr();\n-\t    }\n-\n-\t  off_type newoffi = 0;\n-\t  off_type newoffo = 0;\n-\t  if (way == ios::beg)\n-\t    {\n-\t      newoffi = beg - curi;\n-\t      newoffo = beg - curo;\n-\t    }\n-\t  else if (way == ios::end)\n-\t    {\n-\t      newoffi = endi - curi;\n-\t      newoffo = endo - curo;\n-\t    }\n-\n-\t  if (testin && newoffi + off + curi - beg >= 0 &&\n-\t      endi - beg >= newoffi + off + curi - beg)\n-\t    {\n-\t      gbump(newoffi + off);\n-\t      ret = pos_type(newoffi + off + curi);\n-\t    }\n-\t  if (testout && newoffo + off + curo - beg >= 0 &&\n-\t      endo - beg >= newoffo + off + curo - beg)\n-\t    {\n-\t      pbump(newoffo + off);\n-\t      ret = pos_type(newoffo + off + curo);\n-\t    }\n-\t}\n-      return ret;\n-    }\n-\n-    virtual pos_type\n-    seekpos(pos_type sp, int which = ios::in | ios::out)\n-    {\n-      pos_type ret = seekoff(sp, ios::beg, which);\n-      return ret;\n-    }\n-\n-  private:\n-    void\n-    stringbuf_sync(streamsize i, streamsize o)\n-    {\n-      if (mode & ios::in)\n-\tsetg(stream, stream + i, stream + stream_len);\n-      if (mode & ios::out)\n-\t{\n-\t  setp(stream, stream + stream_len);\n-\t  pbump(o);\n-\t}\n-    }\n-    void\n-    stringbuf_init()\n-    {\n-      if (mode & ios::ate)\n-\tstringbuf_sync(0, stream_len);\n-      else\n-\tstringbuf_sync(0, 0);\n-    }\n-\n-  private:\n-    ios::open_mode\tmode;\n-    char_type*\t\tstream;\n-    streamsize\t\tstream_len;\n-  };\n-\f\n-  class istringstream : public istream {\n-  public:\n-    typedef char\tchar_type;\n-    typedef int\t\tint_type;\n-    typedef streampos\tpos_type;\n-    typedef streamoff\toff_type;\n-\n-    explicit\n-    istringstream(int which=ios::in)\n-      : istream(&sb), sb(which | ios::in)\n-    { }\n-\n-    explicit\n-    istringstream(const string& str, int which=ios::in)\n-      : istream(&sb), sb(str, which | ios::in)\n-    { }\n-\n-    stringbuf*\n-    rdbuf() const\n-    {\n-      return const_cast<stringbuf*>(&sb);\n-    }\n-\n-    string\n-    str() const\n-    {\n-      return rdbuf()->str();\n-    }\n-    void\n-    str(const string& s)\n-    {\n-      rdbuf()->str(s);\n-    }\n-  private:\n-    stringbuf sb;\n-  };\n-\f\n-  class ostringstream : public ostream {\n-  public:\n-    typedef char\tchar_type;\n-    typedef int\t\tint_type;\n-    typedef streampos\tpos_type;\n-    typedef streamoff\toff_type;\n-\n-    explicit\n-    ostringstream(int which=ios::out)\n-      : ostream(&sb), sb(which | ios::out)\n-    { }\n-\n-    explicit\n-    ostringstream(const string& str, int which=ios::out)\n-      : ostream(&sb), sb(str, which | ios::out)\n-    { }\n-\n-    stringbuf*\n-    rdbuf() const\n-    {\n-      return const_cast<stringbuf*>(&sb);\n-    }\n-\n-    string\n-    str() const\n-    {\n-      return rdbuf()->str();\n-    }\n-\n-    void str(const string& s)\n-    {\n-      rdbuf()->str(s);\n-    }\n-  private:\n-    stringbuf sb;\n-  };\n-\f\n-  class stringstream : public iostream {\n-  public:\n-    typedef char\tchar_type;\n-    typedef int\t\tint_type;\n-    typedef streampos\tpos_type;\n-    typedef streamoff\toff_type;\n-\n-    explicit\n-    stringstream(int which=ios::out|ios::in)\n-      : iostream(&sb), sb(which)\n-    { }\n-\n-    explicit\n-    stringstream(const string& str, int which=ios::out|ios::in)\n-      : iostream(&sb), sb(str, which)\n-    { }\n-\n-    stringbuf*\n-    rdbuf() const\n-    {\n-      return const_cast<stringbuf*>(&sb);\n-    }\n-\n-    string\n-    str() const\n-    {\n-      return rdbuf()->str();\n-    }\n-\n-    void\n-    str(const string& s)\n-    {\n-      rdbuf()->str(s);\n-    }\n-  private:\n-    stringbuf sb;\n-  };\n-};\n-\n-#endif /* not __STRSTREAM__ */"}, {"sha": "b8fec4fa7dba9c98d6b02f30288ebbbebfbb3c17", "filename": "libstdc++/std/bastring.cc", "status": "removed", "additions": 0, "deletions": 526, "changes": 526, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fbastring.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fbastring.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fbastring.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,526 +0,0 @@\n-// Member templates for the -*- C++ -*- string classes.\n-// Copyright (C) 1994, 1999, 2000 Free Software Foundation\n-\n-// This file is part of the GNU ANSI C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License\n-// along with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n-\n-// As a special exception, if you link this library with files\n-// compiled with a GNU compiler to produce an executable, this does not cause\n-// the resulting executable to be covered by the GNU General Public License.\n-// This exception does not however invalidate any other reasons why\n-// the executable file might be covered by the GNU General Public License.\n-\n-// Written by Jason Merrill based upon the specification by Takanori Adachi\n-// in ANSI X3J16/94-0013R2.\n-\n-extern \"C++\" {\n-template <class charT, class traits, class Allocator>\n-inline void * basic_string <charT, traits, Allocator>::Rep::\n-operator new (size_t s, size_t extra)\n-{\n-  return Allocator::allocate(s + extra * sizeof (charT));\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline void basic_string <charT, traits, Allocator>::Rep::\n-operator delete (void * ptr)\n-{\n-  Allocator::deallocate(ptr, sizeof(Rep) +\n-\t\t\treinterpret_cast<Rep *>(ptr)->res *\n-\t\t\tsizeof (charT));\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline size_t basic_string <charT, traits, Allocator>::Rep::\n-frob_size (size_t s)\n-{\n-  size_t i = 16;\n-  while (i < s) i *= 2;\n-  return i;\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline basic_string <charT, traits, Allocator>::Rep *\n-basic_string <charT, traits, Allocator>::Rep::\n-create (size_t extra)\n-{\n-  extra = frob_size (extra + 1);\n-  Rep *p = new (extra) Rep;\n-  p->res = extra;\n-  p->ref = 1;\n-  p->selfish = false;\n-  return p;\n-}\n-\n-template <class charT, class traits, class Allocator>\n-charT * basic_string <charT, traits, Allocator>::Rep::\n-clone ()\n-{\n-  Rep *p = Rep::create (len);\n-  p->copy (0, data (), len);\n-  p->len = len;\n-  return p->data ();\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline bool basic_string <charT, traits, Allocator>::Rep::\n-excess_slop (size_t s, size_t r)\n-{\n-  return 2 * (s <= 16 ? 16 : s) < r;\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline bool basic_string <charT, traits, Allocator>::\n-check_realloc (basic_string::size_type s) const\n-{\n-  s += sizeof (charT);\n-  rep ()->selfish = false;\n-  return (rep ()->ref > 1\n-\t  || s > capacity ()\n-\t  || Rep::excess_slop (s, capacity ()));\n-}\n-\n-template <class charT, class traits, class Allocator>\n-void basic_string <charT, traits, Allocator>::\n-alloc (basic_string::size_type __size, bool __save)\n-{\n-  if (! check_realloc (__size))\n-    return;\n-\n-  Rep *p = Rep::create (__size);\n-\n-  if (__save)\n-    {\n-      p->copy (0, data (), length ());\n-      p->len = length ();\n-    }\n-  else\n-    p->len = 0;\n-\n-  repup (p);\n-}\n-\n-template <class charT, class traits, class Allocator>\n-basic_string <charT, traits, Allocator>&\n-basic_string <charT, traits, Allocator>::\n-replace (size_type pos1, size_type n1,\n-\t const basic_string& str, size_type pos2, size_type n2)\n-{\n-  const size_t len2 = str.length ();\n-\n-  if (pos1 == 0 && n1 >= length () && pos2 == 0 && n2 >= len2)\n-    return operator= (str);\n-\n-  OUTOFRANGE (pos2 > len2);\n-\n-  if (n2 > len2 - pos2)\n-    n2 = len2 - pos2;\n-\n-  return replace (pos1, n1, str.data () + pos2, n2);\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline void basic_string <charT, traits, Allocator>::Rep::\n-copy (size_t pos, const charT *s, size_t n)\n-{\n-  if (n)\n-    traits::copy (data () + pos, s, n);\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline void basic_string <charT, traits, Allocator>::Rep::\n-move (size_t pos, const charT *s, size_t n)\n-{\n-  if (n)\n-    traits::move (data () + pos, s, n);\n-}\n-\n-template <class charT, class traits, class Allocator>\n-basic_string <charT, traits, Allocator>&\n-basic_string <charT, traits, Allocator>::\n-replace (size_type pos, size_type n1, const charT* s, size_type n2)\n-{\n-  const size_type len = length ();\n-  OUTOFRANGE (pos > len);\n-  if (n1 > len - pos)\n-    n1 = len - pos;\n-  LENGTHERROR (len - n1 > max_size () - n2);\n-  size_t newlen = len - n1 + n2;\n-\n-  if (check_realloc (newlen))\n-    {\n-      Rep *p = Rep::create (newlen);\n-      p->copy (0, data (), pos);\n-      p->copy (pos + n2, data () + pos + n1, len - (pos + n1));\n-      p->copy (pos, s, n2);\n-      repup (p);\n-    }\n-  else\n-    {\n-      rep ()->move (pos + n2, data () + pos + n1, len - (pos + n1));\n-      rep ()->copy (pos, s, n2);\n-    }\n-  rep ()->len = newlen;\n-\n-  return *this;\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline void basic_string <charT, traits, Allocator>::Rep::\n-set (size_t pos, const charT c, size_t n)\n-{\n-  traits::set  (data () + pos, c, n);\n-}\n-\n-template <class charT, class traits, class Allocator>\n-basic_string <charT, traits, Allocator>& basic_string <charT, traits, Allocator>::\n-replace (size_type pos, size_type n1, size_type n2, charT c)\n-{\n-  const size_t len = length ();\n-  OUTOFRANGE (pos > len);\n-  if (n1 > len - pos)\n-    n1 = len - pos;\n-  LENGTHERROR (len - n1 > max_size () - n2);\n-  size_t newlen = len - n1 + n2;\n-\n-  if (check_realloc (newlen))\n-    {\n-      Rep *p = Rep::create (newlen);\n-      p->copy (0, data (), pos);\n-      p->copy (pos + n2, data () + pos + n1, len - (pos + n1));\n-      p->set  (pos, c, n2);\n-      repup (p);\n-    }\n-  else\n-    {\n-      rep ()->move (pos + n2, data () + pos + n1, len - (pos + n1));\n-      rep ()->set  (pos, c, n2);\n-    }\n-  rep ()->len = newlen;\n-\n-  return *this;\n-}\n-\n-template <class charT, class traits, class Allocator>\n-void basic_string <charT, traits, Allocator>::\n-resize (size_type n, charT c)\n-{\n-  LENGTHERROR (n > max_size ());\n-\n-  if (n > length ())\n-    append (n - length (), c);\n-  else\n-    erase (n);\n-}\n-\n-template <class charT, class traits, class Allocator>\n-basic_string <charT, traits, Allocator>::size_type\n-basic_string <charT, traits, Allocator>::\n-copy (charT* s, size_type n, size_type pos) const\n-{\n-  OUTOFRANGE (pos > length ());\n-\n-  if (n > length () - pos)\n-    n = length () - pos;\n-\n-  traits::copy (s, data () + pos, n);\n-  return n;\n-}\n-\n-template <class charT, class traits, class Allocator>\n-basic_string <charT, traits, Allocator>::size_type\n-basic_string <charT, traits, Allocator>::\n-find (const charT* s, size_type pos, size_type n) const\n-{\n-  size_t xpos = pos;\n-  for (; xpos + n <= length (); ++xpos)\n-    if (traits::eq (data () [xpos], *s)\n-\t&& traits::compare (data () + xpos, s, n) == 0)\n-      return xpos;\n-  return npos;\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline basic_string <charT, traits, Allocator>::size_type\n-basic_string <charT, traits, Allocator>::\n-_find (const charT* ptr, charT c, size_type xpos, size_type len)\n-{\n-  for (; xpos < len; ++xpos)\n-    if (traits::eq (ptr [xpos], c))\n-      return xpos;\n-  return npos;\n-}\n-\n-template <class charT, class traits, class Allocator>\n-basic_string <charT, traits, Allocator>::size_type\n-basic_string <charT, traits, Allocator>::\n-find (charT c, size_type pos) const\n-{\n-  return _find (data (), c, pos, length ());\n-}\n-\n-template <class charT, class traits, class Allocator>\n-basic_string <charT, traits, Allocator>::size_type\n-basic_string <charT, traits, Allocator>::\n-rfind (const charT* s, size_type pos, size_type n) const\n-{\n-  if (n > length ())\n-    return npos;\n-\n-  size_t xpos = length () - n;\n-  if (xpos > pos)\n-    xpos = pos;\n-\n-  for (++xpos; xpos-- > 0; )\n-    if (traits::eq (data () [xpos], *s)\n-\t&& traits::compare (data () + xpos, s, n) == 0)\n-      return xpos;\n-  return npos;\n-}\n-\n-template <class charT, class traits, class Allocator>\n-basic_string <charT, traits, Allocator>::size_type\n-basic_string <charT, traits, Allocator>::\n-rfind (charT c, size_type pos) const\n-{\n-  if (1 > length ())\n-    return npos;\n-\n-  size_t xpos = length () - 1;\n-  if (xpos > pos)\n-    xpos = pos;\n-\n-  for (++xpos; xpos-- > 0; )\n-    if (traits::eq (data () [xpos], c))\n-      return xpos;\n-  return npos;\n-}\n-\n-template <class charT, class traits, class Allocator>\n-basic_string <charT, traits, Allocator>::size_type\n-basic_string <charT, traits, Allocator>::\n-find_first_of (const charT* s, size_type pos, size_type n) const\n-{\n-  size_t xpos = pos;\n-  for (; xpos < length (); ++xpos)\n-    if (_find (s, data () [xpos], 0, n) != npos)\n-      return xpos;\n-  return npos;\n-}\n-\n-template <class charT, class traits, class Allocator>\n-basic_string <charT, traits, Allocator>::size_type\n-basic_string <charT, traits, Allocator>::\n-find_last_of (const charT* s, size_type pos, size_type n) const\n-{\n-  if (length() == 0)\n-    return npos;\n-  size_t xpos = length () - 1;\n-  if (xpos > pos)\n-    xpos = pos;\n-  for (++xpos; xpos-- > 0;)\n-    if (_find (s, data () [xpos], 0, n) != npos)\n-      return xpos;\n-  return npos;\n-}\n-\n-template <class charT, class traits, class Allocator>\n-basic_string <charT, traits, Allocator>::size_type\n-basic_string <charT, traits, Allocator>::\n-find_first_not_of (const charT* s, size_type pos, size_type n) const\n-{\n-  size_t xpos = pos;\n-  for (; xpos < length (); ++xpos)\n-    if (_find (s, data () [xpos], 0, n) == npos)\n-      return xpos;\n-  return npos;\n-}\n-\n-template <class charT, class traits, class Allocator>\n-basic_string <charT, traits, Allocator>::size_type\n-basic_string <charT, traits, Allocator>::\n-find_first_not_of (charT c, size_type pos) const\n-{\n-  size_t xpos = pos;\n-  for (; xpos < length (); ++xpos)\n-    if (traits::ne (data () [xpos], c))\n-      return xpos;\n-  return npos;\n-}\n-\n-template <class charT, class traits, class Allocator>\n-basic_string <charT, traits, Allocator>::size_type\n-basic_string <charT, traits, Allocator>::\n-find_last_not_of (const charT* s, size_type pos, size_type n) const\n-{\n-  if (length() == 0)\n-    return npos;\n-  size_t xpos = length () - 1;\n-  if (xpos > pos)\n-    xpos = pos;\n-  for (++xpos; xpos-- > 0;)\n-    if (_find (s, data () [xpos], 0, n) == npos)\n-      return xpos;\n-  return npos;\n-}\n-\n-template <class charT, class traits, class Allocator>\n-basic_string <charT, traits, Allocator>::size_type\n-basic_string <charT, traits, Allocator>::\n-find_last_not_of (charT c, size_type pos) const\n-{\n-  if (length() == 0)\n-    return npos;\n-  size_t xpos = length () - 1;\n-  if (xpos > pos)\n-    xpos = pos;\n-  for (++xpos; xpos-- > 0;)\n-    if (traits::ne (data () [xpos], c))\n-      return xpos;\n-  return npos;\n-}\n-\n-template <class charT, class traits, class Allocator>\n-int basic_string <charT, traits, Allocator>::\n-compare (const basic_string& str, size_type pos, size_type n) const\n-{\n-  OUTOFRANGE (pos > length ());\n-\n-  size_t rlen = length () - pos;\n-  if (rlen > n)\n-    rlen = n;\n-  if (rlen > str.length ())\n-    rlen = str.length ();\n-  int r = traits::compare (data () + pos, str.data (), rlen);\n-  if (r != 0)\n-    return r;\n-  if (rlen == n)\n-    return 0;\n-  return (length () - pos) - str.length ();\n-}\n-\n-template <class charT, class traits, class Allocator>\n-int basic_string <charT, traits, Allocator>::\n-compare (const charT* s, size_type pos, size_type n) const\n-{\n-  OUTOFRANGE (pos > length ());\n-\n-  size_t rlen = length () - pos;\n-  if (rlen > n)\n-    rlen = n;\n-  int r = traits::compare (data () + pos, s, rlen);\n-  if (r != 0)\n-    return r;\n-  if (rlen == n)   \n-    return 0;\n-  return (length () - pos) - n;\n-}\n-\n-#include <iostream.h>\n-\n-template <class charT, class traits, class Allocator>\n-istream &\n-operator>> (istream &is, basic_string <charT, traits, Allocator> &s)\n-{\n-  int w = is.width (0);\n-  if (is.ipfx0 ())\n-    {\n-      register streambuf *sb = is.rdbuf ();\n-      s.resize (0);\n-      while (1)\n-\t{\n-\t  int ch = sb->sbumpc ();\n-\t  if (ch == EOF)\n-\t    {\n-\t      is.setstate (ios::eofbit);\n-\t      break;\n-\t    }\n-\t  else if (traits::is_del (ch))\n-\t    {\n-\t      sb->sungetc ();\n-\t      break;\n-\t    }\n-\t  s += static_cast<charT> (ch);\n-\t  if (--w == 1)\n-\t    break;\n-\t}\n-    }\n-\n-  is.isfx ();\n-  if (s.length () == 0)\n-    is.setstate (ios::failbit);\n-\n-  return is;\n-}\n-\n-template <class charT, class traits, class Allocator>\n-ostream &\n-operator<< (ostream &o, const basic_string <charT, traits, Allocator>& s)\n-{\n-  return o.write (s.data (), s.length ());\n-}\n-\n-template <class charT, class traits, class Allocator>\n-istream&\n-getline (istream &is, basic_string <charT, traits, Allocator>& s, charT delim)\n-{\n-  if (is.ipfx1 ())\n-    {\n-      _IO_size_t count = 0;\n-      streambuf *sb = is.rdbuf ();\n-      s.resize (0);\n-\n-      while (1)\n-\t{\n-\t  int ch = sb->sbumpc ();\n-\t  if (ch == EOF)\n-\t    {\n-\t      is.setstate (count == 0\n-\t\t\t   ? (ios::failbit|ios::eofbit)\n-\t\t\t   : ios::eofbit);\n-\t      break;\n-\t    }\n-\n-\t  ++count;\n-\n-\t  if (ch == delim)\n-\t    break;\n-\n-\t  s += static_cast<charT> (ch);\n-\n-\t  if (s.length () == s.npos - 1)\n-\t    {\n-\t      is.setstate (ios::failbit);\n-\t      break;\n-\t    }\n-\t}\n-    }\n-\n-  // We need to be friends with istream to do this.\n-  // is._gcount = count;\n-  is.isfx ();\n-\n-  return is;\n-}\n-\n-template <class charT, class traits, class Allocator>\n-basic_string <charT, traits, Allocator>::Rep\n-basic_string<charT, traits, Allocator>::nilRep = { 0, 0, 1, false };\n-\n-template <class charT, class traits, class Allocator>\n-const basic_string <charT, traits, Allocator>::size_type\n-basic_string <charT, traits, Allocator>::npos;\n-\n-} // extern \"C++\""}, {"sha": "5551ec1fe478ca5d6daac9ddd2b6f23ff286fed4", "filename": "libstdc++/std/bastring.h", "status": "removed", "additions": 0, "deletions": 671, "changes": 671, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fbastring.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fbastring.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fbastring.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,671 +0,0 @@\n-// Main templates for the -*- C++ -*- string classes.\n-// Copyright (C) 1994, 1995, 1999 Free Software Foundation\n-\n-// This file is part of the GNU ANSI C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License\n-// along with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n-\n-// As a special exception, if you link this library with files\n-// compiled with a GNU compiler to produce an executable, this does not cause\n-// the resulting executable to be covered by the GNU General Public License.\n-// This exception does not however invalidate any other reasons why\n-// the executable file might be covered by the GNU General Public License.\n-\n-// Written by Jason Merrill based upon the specification by Takanori Adachi\n-// in ANSI X3J16/94-0013R2.\n-\n-#ifndef __BASTRING__\n-#define __BASTRING__\n-\n-#ifdef __GNUG__\n-#pragma interface\n-#endif\n-\n-#include <cstddef>\n-#include <std/straits.h>\n-\n-// NOTE : This does NOT conform to the draft standard and is likely to change\n-#include <alloc.h>\n-\n-extern \"C++\" {\n-class istream; class ostream;\n-\n-#include <iterator>\n-\n-#ifdef __STL_USE_EXCEPTIONS\n-\n-extern void __out_of_range (const char *);\n-extern void __length_error (const char *);\n-\n-#define OUTOFRANGE(cond) \\\n-  do { if (cond) __out_of_range (#cond); } while (0)\n-#define LENGTHERROR(cond) \\\n-  do { if (cond) __length_error (#cond); } while (0)\n-\n-#else\n-\n-#include <cassert>\n-#define OUTOFRANGE(cond) assert (!(cond))\n-#define LENGTHERROR(cond) assert (!(cond))\n-\n-#endif\n-\n-template <class charT, class traits = string_char_traits<charT>,\n-\t  class Allocator = alloc >\n-class basic_string\n-{\n-private:\n-  struct Rep {\n-    size_t len, res, ref;\n-    bool selfish;\n-\n-    charT* data () { return reinterpret_cast<charT *>(this + 1); }\n-    charT& operator[] (size_t s) { return data () [s]; }\n-#if defined __i486__ || defined __i586__ || defined __i686__\n-    charT* grab () { if (selfish) return clone (); \n-      asm (\"lock; addl %0, (%1)\"\n-           : : \"a\" (1), \"d\" (&ref)\n-           : \"memory\");\n-      return data (); }\n-\n-    void release () \n-      {\n-\tsize_t __val;\n-\t// This opcode exists as a .byte instead of as a mnemonic for the\n-\t// benefit of SCO OpenServer 5.  The system assembler (which is \n-\t// essentially required on this target) can't assemble xaddl in \n-\t//COFF mode.\n-\tasm (\".byte 0xf0, 0x0f, 0xc1, 0x02\" // lock; xaddl %eax, (%edx)\n-\t    : \"=a\" (__val)\n-\t    : \"0\" (-1), \"m\" (ref), \"d\" (&ref)\n-\t    : \"memory\");\n-\n-\tif (__val == 1)\n-\t  delete this;\n-      }\n-#elif defined __sparc_v9__\n-    charT* grab () { if (selfish) return clone (); ++ref; return data (); }\n-    void release ()\n-      {\n-\tsize_t __newval, __oldval = ref;\n-\tdo\n-\t  {\n-\t    __newval = __oldval - 1;\n-\t    __asm__ (\n-#ifdef __arch64__\n-\t\t     \"casx\t[%4], %2, %0\"\n-#else\n-\t\t     \"cas\t[%4], %2, %0\"\n-#endif\n-\t\t     : \"=r\" (__oldval), \"=m\" (ref)\n-\t\t     : \"r\" (__oldval), \"m\" (ref), \"r\"(&(ref)), \"0\" (__newval));\n-\t  }\n-\twhile (__newval != __oldval);\n-\n-\tif (__oldval == 0)\n-\t  delete this;\n-      }\n-#else\n-    charT* grab () { if (selfish) return clone (); ++ref; return data (); }\n-    void release () { if (--ref == 0) delete this; }\n-#endif\n-\n-    inline static void * operator new (size_t, size_t);\n-    inline static void operator delete (void *);\n-    inline static Rep* create (size_t);\n-    charT* clone ();\n-\n-    inline void copy (size_t, const charT *, size_t);\n-    inline void move (size_t, const charT *, size_t);\n-    inline void set  (size_t, const charT,   size_t);\n-\n-    inline static bool excess_slop (size_t, size_t);\n-    inline static size_t frob_size (size_t);\n-\n-  private:\n-    Rep &operator= (const Rep &);\n-  };\n-\n-public:\n-// types:\n-  typedef\t   traits\t\ttraits_type;\n-  typedef typename traits::char_type\tvalue_type;\n-  typedef\t   Allocator\t\tallocator_type;\n-\n-  typedef size_t size_type;\n-  typedef ptrdiff_t difference_type;\n-  typedef charT& reference;\n-  typedef const charT& const_reference;\n-  typedef charT* pointer;\n-  typedef const charT* const_pointer;\n-  typedef pointer iterator;\n-  typedef const_pointer const_iterator;\n-  typedef ::reverse_iterator<iterator> reverse_iterator;\n-  typedef ::reverse_iterator<const_iterator> const_reverse_iterator;\n-  static const size_type npos = static_cast<size_type>(-1);\n-\n-private:\n-  Rep *rep () const { return reinterpret_cast<Rep *>(dat) - 1; }\n-  void repup (Rep *p) { rep ()->release (); dat = p->data (); }\n-\n-public:\n-  const charT* data () const\n-    { return rep ()->data(); }\n-  size_type length () const\n-    { return rep ()->len; }\n-  size_type size () const\n-    { return rep ()->len; }\n-  size_type capacity () const\n-    { return rep ()->res; }\n-  size_type max_size () const\n-    { return (npos - 1)/sizeof (charT); }\t\t// XXX\n-  bool empty () const\n-    { return size () == 0; }\n-\n-// _lib.string.cons_ construct/copy/destroy:\n-  basic_string& operator= (const basic_string& str)\n-    {\n-      if (&str != this) { rep ()->release (); dat = str.rep ()->grab (); }\n-      return *this;\n-    }\n-\n-  explicit basic_string (): dat (nilRep.grab ()) { }\n-  basic_string (const basic_string& str): dat (str.rep ()->grab ()) { }\n-  basic_string (const basic_string& str, size_type pos, size_type n = npos)\n-    : dat (nilRep.grab ()) { assign (str, pos, n); }\n-  basic_string (const charT* s, size_type n)\n-    : dat (nilRep.grab ()) { assign (s, n); }\n-  basic_string (const charT* s)\n-    : dat (nilRep.grab ()) { assign (s); }\n-  basic_string (size_type n, charT c)\n-    : dat (nilRep.grab ()) { assign (n, c); }\n-#ifdef __STL_MEMBER_TEMPLATES\n-  template<class InputIterator>\n-    basic_string(InputIterator __begin, InputIterator __end)\n-#else\n-  basic_string(const_iterator __begin, const_iterator __end)\n-#endif\n-    : dat (nilRep.grab ()) { assign (__begin, __end); }\n-\n-  ~basic_string ()\n-    { rep ()->release (); }\n-\n-  void swap (basic_string &s) { charT *d = dat; dat = s.dat; s.dat = d; }\n-\n-  basic_string& append (const basic_string& str, size_type pos = 0,\n-\t\t\tsize_type n = npos)\n-    { return replace (length (), 0, str, pos, n); }\n-  basic_string& append (const charT* s, size_type n)\n-    { return replace (length (), 0, s, n); }\n-  basic_string& append (const charT* s)\n-    { return append (s, traits::length (s)); }\n-  basic_string& append (size_type n, charT c)\n-    { return replace (length (), 0, n, c); }\n-#ifdef __STL_MEMBER_TEMPLATES\n-  template<class InputIterator>\n-    basic_string& append(InputIterator first, InputIterator last)\n-#else\n-  basic_string& append(const_iterator first, const_iterator last)\n-#endif\n-    { return replace (iend (), iend (), first, last); }\n-\n-  void push_back(charT __c)\n-  { append(1, __c); }\n-\n-  basic_string& assign (const basic_string& str, size_type pos = 0,\n-\t\t\tsize_type n = npos)\n-    { return replace (0, npos, str, pos, n); }\n-  basic_string& assign (const charT* s, size_type n)\n-    { return replace (0, npos, s, n); }\n-  basic_string& assign (const charT* s)\n-    { return assign (s, traits::length (s)); }\n-  basic_string& assign (size_type n, charT c)\n-    { return replace (0, npos, n, c); }\n-#ifdef __STL_MEMBER_TEMPLATES\n-  template<class InputIterator>\n-    basic_string& assign(InputIterator first, InputIterator last)\n-#else\n-  basic_string& assign(const_iterator first, const_iterator last)\n-#endif\n-    { return replace (ibegin (), iend (), first, last); }\n-\n-  basic_string& operator= (const charT* s)\n-    { return assign (s); }\n-  basic_string& operator= (charT c)\n-    { return assign (1, c); }\n-\n-  basic_string& operator+= (const basic_string& rhs)\n-    { return append (rhs); }\n-  basic_string& operator+= (const charT* s)\n-    { return append (s); }\n-  basic_string& operator+= (charT c)\n-    { return append (1, c); }\n-\n-  basic_string& insert (size_type pos1, const basic_string& str,\n-\t\t\tsize_type pos2 = 0, size_type n = npos)\n-    { return replace (pos1, 0, str, pos2, n); }\n-  basic_string& insert (size_type pos, const charT* s, size_type n)\n-    { return replace (pos, 0, s, n); }\n-  basic_string& insert (size_type pos, const charT* s)\n-    { return insert (pos, s, traits::length (s)); }\n-  basic_string& insert (size_type pos, size_type n, charT c)\n-    { return replace (pos, 0, n, c); }\n-  iterator insert(iterator p, charT c)\n-    { size_type __o = p - ibegin ();\n-      insert (p - ibegin (), 1, c); selfish ();\n-      return ibegin () + __o; }\n-  iterator insert(iterator p, size_type n, charT c)\n-    { size_type __o = p - ibegin ();\n-      insert (p - ibegin (), n, c); selfish ();\n-      return ibegin () + __o; }\n-#ifdef __STL_MEMBER_TEMPLATES\n-  template<class InputIterator>\n-    void insert(iterator p, InputIterator first, InputIterator last)\n-#else\n-  void insert(iterator p, const_iterator first, const_iterator last)\n-#endif\n-    { replace (p, p, first, last); }\n-\n-  basic_string& erase (size_type pos = 0, size_type n = npos)\n-    { return replace (pos, n, (size_type)0, (charT)0); }\n-  iterator erase(iterator p)\n-    { size_type __o = p - begin();\n-      replace (__o, 1, (size_type)0, (charT)0); selfish ();\n-      return ibegin() + __o; }\n-  iterator erase(iterator f, iterator l)\n-    { size_type __o = f - ibegin();\n-      replace (__o, l-f, (size_type)0, (charT)0);selfish ();\n-      return ibegin() + __o; }\n-\n-  basic_string& replace (size_type pos1, size_type n1, const basic_string& str,\n-\t\t\t size_type pos2 = 0, size_type n2 = npos);\n-  basic_string& replace (size_type pos, size_type n1, const charT* s,\n-\t\t\t size_type n2);\n-  basic_string& replace (size_type pos, size_type n1, const charT* s)\n-    { return replace (pos, n1, s, traits::length (s)); }\n-  basic_string& replace (size_type pos, size_type n1, size_type n2, charT c);\n-  basic_string& replace (size_type pos, size_type n, charT c)\n-    { return replace (pos, n, 1, c); }\n-  basic_string& replace (iterator i1, iterator i2, const basic_string& str)\n-    { return replace (i1 - ibegin (), i2 - i1, str); }\n-  basic_string& replace (iterator i1, iterator i2, const charT* s, size_type n)\n-    { return replace (i1 - ibegin (), i2 - i1, s, n); }\n-  basic_string& replace (iterator i1, iterator i2, const charT* s)\n-    { return replace (i1 - ibegin (), i2 - i1, s); }\n-  basic_string& replace (iterator i1, iterator i2, size_type n, charT c)\n-    { return replace (i1 - ibegin (), i2 - i1, n, c); }\n-#ifdef __STL_MEMBER_TEMPLATES\n-  template<class InputIterator>\n-    basic_string& replace(iterator i1, iterator i2,\n-\t\t\t  InputIterator j1, InputIterator j2);\n-#else\n-  basic_string& replace(iterator i1, iterator i2,\n-\t\t\tconst_iterator j1, const_iterator j2);\n-#endif\n-\n-private:\n-  static charT eos () { return traits::eos (); }\n-  void unique () { if (rep ()->ref > 1) alloc (length (), true); }\n-  void selfish () { unique (); rep ()->selfish = true; }\n-\n-public:\n-  charT operator[] (size_type pos) const\n-    {\n-      if (pos == length ())\n-\treturn eos ();\n-      return data ()[pos];\n-    }\n-\n-  reference operator[] (size_type pos)\n-    { selfish (); return (*rep ())[pos]; }\n-\n-  reference at (size_type pos)\n-    {\n-      OUTOFRANGE (pos >= length ());\n-      return (*this)[pos];\n-    }\n-  const_reference at (size_type pos) const\n-    {\n-      OUTOFRANGE (pos >= length ());\n-      return data ()[pos];\n-    }\n-\n-private:\n-  void terminate () const\n-    { traits::assign ((*rep ())[length ()], eos ()); }\n-\n-public:\n-  const charT* c_str () const\n-    { if (length () == 0) return \"\"; terminate (); return data (); }\n-  void resize (size_type n, charT c);\n-  void resize (size_type n)\n-    { resize (n, eos ()); }\n-  void reserve (size_type) { }\n-\n-  void clear() { erase(begin(), end()); }\n-\n-  size_type copy (charT* s, size_type n, size_type pos = 0) const;\n-\n-  size_type find (const basic_string& str, size_type pos = 0) const\n-    { return find (str.data(), pos, str.length()); }\n-  size_type find (const charT* s, size_type pos, size_type n) const;\n-  size_type find (const charT* s, size_type pos = 0) const\n-    { return find (s, pos, traits::length (s)); }\n-  size_type find (charT c, size_type pos = 0) const;\n-\n-  size_type rfind (const basic_string& str, size_type pos = npos) const\n-    { return rfind (str.data(), pos, str.length()); }\n-  size_type rfind (const charT* s, size_type pos, size_type n) const;\n-  size_type rfind (const charT* s, size_type pos = npos) const\n-    { return rfind (s, pos, traits::length (s)); }\n-  size_type rfind (charT c, size_type pos = npos) const;\n-\n-  size_type find_first_of (const basic_string& str, size_type pos = 0) const\n-    { return find_first_of (str.data(), pos, str.length()); }\n-  size_type find_first_of (const charT* s, size_type pos, size_type n) const;\n-  size_type find_first_of (const charT* s, size_type pos = 0) const\n-    { return find_first_of (s, pos, traits::length (s)); }\n-  size_type find_first_of (charT c, size_type pos = 0) const\n-    { return find (c, pos); }\n-\n-  size_type find_last_of (const basic_string& str, size_type pos = npos) const\n-    { return find_last_of (str.data(), pos, str.length()); }\n-  size_type find_last_of (const charT* s, size_type pos, size_type n) const;\n-  size_type find_last_of (const charT* s, size_type pos = npos) const\n-    { return find_last_of (s, pos, traits::length (s)); }\n-  size_type find_last_of (charT c, size_type pos = npos) const\n-    { return rfind (c, pos); }\n-\n-  size_type find_first_not_of (const basic_string& str, size_type pos = 0) const\n-    { return find_first_not_of (str.data(), pos, str.length()); }\n-  size_type find_first_not_of (const charT* s, size_type pos, size_type n) const;\n-  size_type find_first_not_of (const charT* s, size_type pos = 0) const\n-    { return find_first_not_of (s, pos, traits::length (s)); }\n-  size_type find_first_not_of (charT c, size_type pos = 0) const;\n-\n-  size_type find_last_not_of (const basic_string& str, size_type pos = npos) const\n-    { return find_last_not_of (str.data(), pos, str.length()); }\n-  size_type find_last_not_of (const charT* s, size_type pos, size_type n) const;\n-  size_type find_last_not_of (const charT* s, size_type pos = npos) const\n-    { return find_last_not_of (s, pos, traits::length (s)); }\n-  size_type find_last_not_of (charT c, size_type pos = npos) const;\n-\n-  basic_string substr (size_type pos = 0, size_type n = npos) const\n-    { return basic_string (*this, pos, n); }\n-\n-  int compare (const basic_string& str, size_type pos = 0, size_type n = npos) const;\n-  // There is no 'strncmp' equivalent for charT pointers.\n-  int compare (const charT* s, size_type pos, size_type n) const;\n-  int compare (const charT* s, size_type pos = 0) const\n-    { return compare (s, pos, traits::length (s)); }\n-\n-  iterator begin () { selfish (); return &(*this)[0]; }\n-  iterator end () { selfish (); return &(*this)[length ()]; }\n-\n-private:\n-  iterator ibegin () const { return &(*rep ())[0]; }\n-  iterator iend () const { return &(*rep ())[length ()]; }\n-\n-public:\n-  const_iterator begin () const { return ibegin (); }\n-  const_iterator end () const { return iend (); }\n-\n-  reverse_iterator       rbegin() { return reverse_iterator (end ()); }\n-  const_reverse_iterator rbegin() const\n-    { return const_reverse_iterator (end ()); }\n-  reverse_iterator       rend() { return reverse_iterator (begin ()); }\n-  const_reverse_iterator rend() const\n-    { return const_reverse_iterator (begin ()); }\n-\n-private:\n-  void alloc (size_type size, bool save);\n-  static size_type _find (const charT* ptr, charT c, size_type xpos, size_type len);\n-  inline bool check_realloc (size_type s) const;\n-\n-  static Rep nilRep;\n-  charT *dat;\n-};\n-\n-#ifdef __STL_MEMBER_TEMPLATES\n-template <class charT, class traits, class Allocator> template <class InputIterator>\n-basic_string <charT, traits, Allocator>& basic_string <charT, traits, Allocator>::\n-replace (iterator i1, iterator i2, InputIterator j1, InputIterator j2)\n-#else\n-template <class charT, class traits, class Allocator>\n-basic_string <charT, traits, Allocator>& basic_string <charT, traits, Allocator>::\n-replace (iterator i1, iterator i2, const_iterator j1, const_iterator j2)\n-#endif\n-{\n-  const size_type len = length ();\n-  size_type pos = i1 - ibegin ();\n-  size_type n1 = i2 - i1;\n-  size_type n2 = j2 - j1;\n-\n-  OUTOFRANGE (pos > len);\n-  if (n1 > len - pos)\n-    n1 = len - pos;\n-  LENGTHERROR (len - n1 > max_size () - n2);\n-  size_t newlen = len - n1 + n2;\n-\n-  if (check_realloc (newlen))\n-    {\n-      Rep *p = Rep::create (newlen);\n-      p->copy (0, data (), pos);\n-      p->copy (pos + n2, data () + pos + n1, len - (pos + n1));\n-      for (; j1 != j2; ++j1, ++pos)\n-\ttraits::assign ((*p)[pos], *j1);\n-      repup (p);\n-    }\n-  else\n-    {\n-      rep ()->move (pos + n2, data () + pos + n1, len - (pos + n1));\n-      for (; j1 != j2; ++j1, ++pos)\n-\ttraits::assign ((*rep ())[pos], *j1);\n-    }\n-  rep ()->len = newlen;\n-\n-  return *this;\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline basic_string <charT, traits, Allocator>\n-operator+ (const basic_string <charT, traits, Allocator>& lhs,\n-\t   const basic_string <charT, traits, Allocator>& rhs)\n-{\n-  basic_string <charT, traits, Allocator> str (lhs);\n-  str.append (rhs);\n-  return str;\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline basic_string <charT, traits, Allocator>\n-operator+ (const charT* lhs, const basic_string <charT, traits, Allocator>& rhs)\n-{\n-  basic_string <charT, traits, Allocator> str (lhs);\n-  str.append (rhs);\n-  return str;\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline basic_string <charT, traits, Allocator>\n-operator+ (charT lhs, const basic_string <charT, traits, Allocator>& rhs)\n-{\n-  basic_string <charT, traits, Allocator> str (1, lhs);\n-  str.append (rhs);\n-  return str;\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline basic_string <charT, traits, Allocator>\n-operator+ (const basic_string <charT, traits, Allocator>& lhs, const charT* rhs)\n-{\n-  basic_string <charT, traits, Allocator> str (lhs);\n-  str.append (rhs);\n-  return str;\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline basic_string <charT, traits, Allocator>\n-operator+ (const basic_string <charT, traits, Allocator>& lhs, charT rhs)\n-{\n-  basic_string <charT, traits, Allocator> str (lhs);\n-  str.append (1, rhs);\n-  return str;\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline bool\n-operator== (const basic_string <charT, traits, Allocator>& lhs,\n-\t    const basic_string <charT, traits, Allocator>& rhs)\n-{\n-  return (lhs.compare (rhs) == 0);\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline bool\n-operator== (const charT* lhs, const basic_string <charT, traits, Allocator>& rhs)\n-{\n-  return (rhs.compare (lhs) == 0);\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline bool\n-operator== (const basic_string <charT, traits, Allocator>& lhs, const charT* rhs)\n-{\n-  return (lhs.compare (rhs) == 0);\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline bool\n-operator!= (const charT* lhs, const basic_string <charT, traits, Allocator>& rhs)\n-{\n-  return (rhs.compare (lhs) != 0);\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline bool\n-operator!= (const basic_string <charT, traits, Allocator>& lhs, const charT* rhs)\n-{\n-  return (lhs.compare (rhs) != 0);\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline bool\n-operator< (const basic_string <charT, traits, Allocator>& lhs,\n-\t    const basic_string <charT, traits, Allocator>& rhs)\n-{\n-  return (lhs.compare (rhs) < 0);\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline bool\n-operator< (const charT* lhs, const basic_string <charT, traits, Allocator>& rhs)\n-{\n-  return (rhs.compare (lhs) > 0);\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline bool\n-operator< (const basic_string <charT, traits, Allocator>& lhs, const charT* rhs)\n-{\n-  return (lhs.compare (rhs) < 0);\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline bool\n-operator> (const charT* lhs, const basic_string <charT, traits, Allocator>& rhs)\n-{\n-  return (rhs.compare (lhs) < 0);\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline bool\n-operator> (const basic_string <charT, traits, Allocator>& lhs, const charT* rhs)\n-{\n-  return (lhs.compare (rhs) > 0);\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline bool\n-operator<= (const charT* lhs, const basic_string <charT, traits, Allocator>& rhs)\n-{\n-  return (rhs.compare (lhs) >= 0);\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline bool\n-operator<= (const basic_string <charT, traits, Allocator>& lhs, const charT* rhs)\n-{\n-  return (lhs.compare (rhs) <= 0);\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline bool\n-operator>= (const charT* lhs, const basic_string <charT, traits, Allocator>& rhs)\n-{\n-  return (rhs.compare (lhs) <= 0);\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline bool\n-operator>= (const basic_string <charT, traits, Allocator>& lhs, const charT* rhs)\n-{\n-  return (lhs.compare (rhs) >= 0);\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline bool\n-operator!= (const basic_string <charT, traits, Allocator>& lhs,\n-\t    const basic_string <charT, traits, Allocator>& rhs)\n-{\n-  return (lhs.compare (rhs) != 0);\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline bool\n-operator> (const basic_string <charT, traits, Allocator>& lhs,\n-\t   const basic_string <charT, traits, Allocator>& rhs)\n-{\n-  return (lhs.compare (rhs) > 0);\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline bool\n-operator<= (const basic_string <charT, traits, Allocator>& lhs,\n-\t    const basic_string <charT, traits, Allocator>& rhs)\n-{\n-  return (lhs.compare (rhs) <= 0);\n-}\n-\n-template <class charT, class traits, class Allocator>\n-inline bool\n-operator>= (const basic_string <charT, traits, Allocator>& lhs,\n-\t    const basic_string <charT, traits, Allocator>& rhs)\n-{\n-  return (lhs.compare (rhs) >= 0);\n-}\n-\n-class istream; class ostream;\n-template <class charT, class traits, class Allocator> istream&\n-operator>> (istream&, basic_string <charT, traits, Allocator>&);\n-template <class charT, class traits, class Allocator> ostream&\n-operator<< (ostream&, const basic_string <charT, traits, Allocator>&);\n-template <class charT, class traits, class Allocator> istream&\n-getline (istream&, basic_string <charT, traits, Allocator>&, charT delim = '\\n');\n-\n-} // extern \"C++\"\n-\n-#include <std/bastring.cc>\n-\n-#endif"}, {"sha": "60227f213299e6e3759ab7283153af9852d95d99", "filename": "libstdc++/std/complext.cc", "status": "removed", "additions": 0, "deletions": 273, "changes": 273, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fcomplext.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fcomplext.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fcomplext.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,273 +0,0 @@\n-// Member templates for the -*- C++ -*- complex number classes.\n-// Copyright (C) 1994 Free Software Foundation\n-\n-// This file is part of the GNU ANSI C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License\n-// along with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n-\n-// As a special exception, if you link this library with files\n-// compiled with a GNU compiler to produce an executable, this does not cause\n-// the resulting executable to be covered by the GNU General Public License.\n-// This exception does not however invalidate any other reasons why\n-// the executable file might be covered by the GNU General Public License.\n-\n-// Written by Jason Merrill based upon the specification in the 27 May 1994\n-// C++ working paper, ANSI document X3J16/94-0098.\n-\n-#include <complex>\n-\n-extern \"C++\" {\n-template <class FLOAT> complex<FLOAT>\n-cos (const complex<FLOAT>& x)\n-{\n-  return complex<FLOAT> (cos (real (x)) * cosh (imag (x)),\n-\t\t\t   - sin (real (x)) * sinh (imag (x)));\n-}\n-\n-template <class FLOAT> complex<FLOAT>\n-cosh (const complex<FLOAT>& x)\n-{\n-  return complex<FLOAT> (cosh (real (x)) * cos (imag (x)),\n-\t\t\t   sinh (real (x)) * sin (imag (x)));\n-}\n-\n-template <class FLOAT> complex<FLOAT>\n-exp (const complex<FLOAT>& x)\n-{\n-  return polar (FLOAT (exp (real (x))), imag (x));\n-}\n-\n-template <class FLOAT> complex<FLOAT>\n-log (const complex<FLOAT>& x)\n-{\n-  return complex<FLOAT> (log (abs (x)), arg (x));\n-}\n-\n-template <class FLOAT> complex<FLOAT>\n-pow (const complex<FLOAT>& x, const complex<FLOAT>& y)\n-{\n-  FLOAT logr = log (abs (x));\n-  FLOAT t = arg (x);\n-\n-  return polar (FLOAT (exp (logr * real (y) - imag (y) * t)),\n-\t\tFLOAT (imag (y) * logr + real (y) * t));\n-}\n-\n-template <class FLOAT> complex<FLOAT>\n-pow (const complex<FLOAT>& x, FLOAT y)\n-{\n-  return exp (FLOAT (y) * log (x));\n-}\n-\n-template <class FLOAT> complex<FLOAT>\n-pow (FLOAT x, const complex<FLOAT>& y)\n-{\n-  return exp (y * FLOAT (log (x)));\n-}\n-\n-template <class FLOAT> complex<FLOAT>\n-sin (const complex<FLOAT>& x)\n-{\n-  return complex<FLOAT> (sin (real (x)) * cosh (imag (x)),\n-\t\t\t   cos (real (x)) * sinh (imag (x)));\n-}\n-\n-template <class FLOAT> complex<FLOAT>\n-sinh (const complex<FLOAT>& x)\n-{\n-  return complex<FLOAT> (sinh (real (x)) * cos (imag (x)),\n-\t\t\t   cosh (real (x)) * sin (imag (x)));\n-}\n-\n-#include <iostream.h>\n-\n-template <class FLOAT> istream&\n-operator >> (istream& is, complex<FLOAT>& x)\n-{\n-  FLOAT re, im = 0;\n-  char ch = 0;\n-\n-  if (is.ipfx0 ())\n-    {\n-      if (is.peek () == '(')\n-\tis >> ch;\n-      is >> re;\n-      if (ch == '(')\n-\t{\n-\t  is >> ch;\n-\t  if (ch == ',')\n-\t    is >> im >> ch;\n-\t}\n-    }\n-  is.isfx ();\n-\n-  if (ch != 0 && ch != ')')\n-    is.setstate (ios::failbit);\n-  else if (is.good ())\n-    x = complex<FLOAT> (re, im);\n-\n-  return is;\n-}\n-\n-template <class FLOAT> ostream&\n-operator << (ostream& os, const complex<FLOAT>& x)\n-{\n-  return os << '(' << real (x) << ',' << imag (x) << ')';\n-}\n-\n-// The code below is adapted from f2c's libF77, and is subject to this\n-// copyright:\n-\n-/****************************************************************\n-Copyright 1990, 1991, 1992, 1993 by AT&T Bell Laboratories and Bellcore.\n-\n-Permission to use, copy, modify, and distribute this software\n-and its documentation for any purpose and without fee is hereby\n-granted, provided that the above copyright notice appear in all\n-copies and that both that the copyright notice and this\n-permission notice and warranty disclaimer appear in supporting\n-documentation, and that the names of AT&T Bell Laboratories or\n-Bellcore or any of their entities not be used in advertising or\n-publicity pertaining to distribution of the software without\n-specific, written prior permission.\n-\n-AT&T and Bellcore disclaim all warranties with regard to this\n-software, including all implied warranties of merchantability\n-and fitness.  In no event shall AT&T or Bellcore be liable for\n-any special, indirect or consequential damages or any damages\n-whatsoever resulting from loss of use, data or profits, whether\n-in an action of contract, negligence or other tortious action,\n-arising out of or in connection with the use or performance of\n-this software.\n-****************************************************************/\n-\n-template <class FLOAT> complex<FLOAT>&\n-__doadv (complex<FLOAT>* ths, const complex<FLOAT>& y)\n-{\n-  FLOAT ar = abs (y.re);\n-  FLOAT ai = abs (y.im);\n-  FLOAT nr, ni;\n-  FLOAT t, d;\n-  if (ar <= ai)\n-    {\n-      t = y.re / y.im;\n-      d = y.im * (1 + t*t);\n-      nr = (ths->re * t + ths->im) / d;\n-      ni = (ths->im * t - ths->re) / d;\n-    }\n-  else\n-    {\n-      t = y.im / y.re;\n-      d = y.re * (1 + t*t);\n-      nr = (ths->re + ths->im * t) / d;\n-      ni = (ths->im - ths->re * t) / d;\n-    }\n-  ths->re = nr;\n-  ths->im = ni;\n-  return *ths;\n-}\n-\n-template <class FLOAT> complex<FLOAT>\n-operator / (const complex<FLOAT>& x, const complex<FLOAT>& y)\n-{\n-  FLOAT ar = abs (real (y));\n-  FLOAT ai = abs (imag (y));\n-  FLOAT nr, ni;\n-  FLOAT t, d;\n-  if (ar <= ai)\n-    {\n-      t = real (y) / imag (y);\n-      d = imag (y) * (1 + t*t);\n-      nr = (real (x) * t + imag (x)) / d;\n-      ni = (imag (x) * t - real (x)) / d;\n-    }\n-  else\n-    {\n-      t = imag (y) / real (y);\n-      d = real (y) * (1 + t*t);\n-      nr = (real (x) + imag (x) * t) / d;\n-      ni = (imag (x) - real (x) * t) / d;\n-    }\n-  return complex<FLOAT> (nr, ni);\n-}\n-\n-template <class FLOAT> complex<FLOAT>\n-operator / (FLOAT x, const complex<FLOAT>& y)\n-{\n-  FLOAT ar = abs (real (y));\n-  FLOAT ai = abs (imag (y));\n-  FLOAT nr, ni;\n-  FLOAT t, d;\n-  if (ar <= ai)\n-    {\n-      t = real (y) / imag (y);\n-      d = imag (y) * (1 + t*t);\n-      nr = x * t / d;\n-      ni = -x / d;\n-    }\n-  else\n-    {\n-      t = imag (y) / real (y);\n-      d = real (y) * (1 + t*t);\n-      nr = x / d;\n-      ni = -x * t / d;\n-    }\n-  return complex<FLOAT> (nr, ni);\n-}\n-\n-template <class FLOAT> complex<FLOAT>\n-pow (const complex<FLOAT>& xin, int y)\n-{\n-  if (y == 0)\n-    return complex<FLOAT> (1.0);\n-  complex<FLOAT> r (1.0);\n-  complex<FLOAT> x (xin);\n-  if (y < 0)\n-    {\n-      y = -y;\n-      x = FLOAT(1)/x;\n-    }\n-  for (;;)\n-    {\n-      if (y & 1)\n-\tr *= x;\n-      if (y >>= 1)\n-\tx *= x;\n-      else\n-\treturn r;\n-    }\n-}\n-\n-template <class FLOAT> complex<FLOAT>\n-sqrt (const complex<FLOAT>& x)\n-{\n-  FLOAT r = abs (x);\n-  FLOAT nr, ni;\n-  if (r == 0.0)\n-    nr = ni = r;\n-  else if (real (x) > 0)\n-    {\n-      nr = sqrt (0.5 * (r + real (x)));\n-      ni = imag (x) / nr / 2;\n-    }\n-  else\n-    {\n-      ni = sqrt (0.5 * (r - real (x)));\n-      if (imag (x) < 0)\n-\tni = - ni;\n-      nr = imag (x) / ni / 2;\n-    }\n-  return complex<FLOAT> (nr, ni); \n-}\n-} // extern \"C++\""}, {"sha": "6c55037bf94bc868f6c078fb5a4b3746872b5ee2", "filename": "libstdc++/std/complext.h", "status": "removed", "additions": 0, "deletions": 400, "changes": 400, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fcomplext.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fcomplext.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fcomplext.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,400 +0,0 @@\n-// The template and inlines for the -*- C++ -*- complex number classes.\n-// Copyright (C) 1994 Free Software Foundation\n-\n-// This file is part of the GNU ANSI C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the terms of\n-// the GNU General Public License as published by the Free Software\n-// Foundation; either version 2, or (at your option) any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License\n-// along with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n-\n-// As a special exception, if you link this library with files compiled\n-// with a GNU compiler to produce an executable, this does not cause the\n-// resulting executable to be covered by the GNU General Public License.\n-// This exception does not however invalidate any other reasons why the\n-// executable file might be covered by the GNU General Public License.\n-\n-// Written by Jason Merrill based upon the specification in the 27 May 1994\n-// C++ working paper, ANSI document X3J16/94-0098.\n-\n-#ifndef __COMPLEXT__\n-#define __COMPLEXT__\n-\n-#ifdef __GNUG__\n-#pragma interface\n-#endif\n-\n-#include <cmath>\n-\n-#if ! defined (__GNUG__) && ! defined (__attribute__)\n-#define __attribute__(foo) /* Ignore.  */\n-#endif\n-\n-class istream;\n-class ostream;\n-\n-extern \"C++\" {\n-template <class _FLT> class complex;\n-template <class _FLT> complex<_FLT>&\n-  __doapl (complex<_FLT>* ths, const complex<_FLT>& r);\n-template <class _FLT> complex<_FLT>&\n-  __doami (complex<_FLT>* ths, const complex<_FLT>& r);\n-template <class _FLT> complex<_FLT>&\n-  __doaml (complex<_FLT>* ths, const complex<_FLT>& r);\n-template <class _FLT> complex<_FLT>&\n-  __doadv (complex<_FLT>* ths, const complex<_FLT>& r);\n-\n-template <class _FLT>\n-class complex\n-{\n-public:\n-  complex (_FLT r = 0, _FLT i = 0): re (r), im (i) { }\n-  complex& operator += (const complex&);\n-  complex& operator -= (const complex&);\n-  complex& operator *= (const complex&);\n-  complex& operator /= (const complex&);\n-  _FLT real () const { return re; }\n-  _FLT imag () const { return im; }\n-private:\n-  _FLT re, im;\n-\n-  friend complex& __doapl<> (complex *, const complex&);\n-  friend complex& __doami<> (complex *, const complex&);\n-  friend complex& __doaml<> (complex *, const complex&);\n-  friend complex& __doadv<> (complex *, const complex&);\n-};\n-\n-// Declare specializations.\n-class complex<float>;\n-class complex<double>;\n-class complex<long double>;\n-\n-template <class _FLT>\n-inline complex<_FLT>&\n-__doapl (complex<_FLT>* ths, const complex<_FLT>& r)\n-{\n-  ths->re += r.re;\n-  ths->im += r.im;\n-  return *ths;\n-}\n-template <class _FLT>\n-inline complex<_FLT>&\n-complex<_FLT>::operator += (const complex<_FLT>& r)\n-{\n-  return __doapl (this, r);\n-}\n-\n-template <class _FLT>\n-inline complex<_FLT>&\n-__doami (complex<_FLT>* ths, const complex<_FLT>& r)\n-{\n-  ths->re -= r.re;\n-  ths->im -= r.im;\n-  return *ths;\n-}\n-template <class _FLT>\n-inline complex<_FLT>&\n-complex<_FLT>::operator -= (const complex<_FLT>& r)\n-{\n-  return __doami (this, r);\n-}\n-\n-template <class _FLT>\n-inline complex<_FLT>&\n-__doaml (complex<_FLT>* ths, const complex<_FLT>& r)\n-{\n-  _FLT f = ths->re * r.re - ths->im * r.im;\n-  ths->im = ths->re * r.im + ths->im * r.re;\n-  ths->re = f;\n-  return *ths;\n-}\n-template <class _FLT>\n-inline complex<_FLT>&\n-complex<_FLT>::operator *= (const complex<_FLT>& r)\n-{\n-  return __doaml (this, r);\n-}\n-\n-template <class _FLT>\n-inline complex<_FLT>&\n-complex<_FLT>::operator /= (const complex<_FLT>& r)\n-{\n-  return __doadv (this, r);\n-}\n-\n-template <class _FLT> inline _FLT\n-imag (const complex<_FLT>& x) __attribute__ ((const));\n-\n-template <class _FLT> inline _FLT\n-imag (const complex<_FLT>& x)\n-{\n-  return x.imag ();\n-}\n-\n-template <class _FLT> inline _FLT\n-real (const complex<_FLT>& x) __attribute__ ((const));\n-\n-template <class _FLT> inline _FLT\n-real (const complex<_FLT>& x)\n-{\n-  return x.real ();\n-}\n-\n-template <class _FLT> inline complex<_FLT>\n-operator + (const complex<_FLT>& x, const complex<_FLT>& y) __attribute__ ((const));\n-\n-template <class _FLT> inline complex<_FLT>\n-operator + (const complex<_FLT>& x, const complex<_FLT>& y)\n-{\n-  return complex<_FLT> (real (x) + real (y), imag (x) + imag (y));\n-}\n-\n-template <class _FLT> inline complex<_FLT>\n-operator + (const complex<_FLT>& x, _FLT y) __attribute__ ((const));\n-\n-template <class _FLT> inline complex<_FLT>\n-operator + (const complex<_FLT>& x, _FLT y)\n-{\n-  return complex<_FLT> (real (x) + y, imag (x));\n-}\n-\n-template <class _FLT> inline complex<_FLT>\n-operator + (_FLT x, const complex<_FLT>& y) __attribute__ ((const));\n-\n-template <class _FLT> inline complex<_FLT>\n-operator + (_FLT x, const complex<_FLT>& y)\n-{\n-  return complex<_FLT> (x + real (y), imag (y));\n-}\n-\n-template <class _FLT> inline complex<_FLT>\n-operator - (const complex<_FLT>& x, const complex<_FLT>& y) __attribute__ ((const));\n-\n-template <class _FLT> inline complex<_FLT>\n-operator - (const complex<_FLT>& x, const complex<_FLT>& y)\n-{\n-  return complex<_FLT> (real (x) - real (y), imag (x) - imag (y));\n-}\n-\n-template <class _FLT> inline complex<_FLT>\n-operator - (const complex<_FLT>& x, _FLT y) __attribute__ ((const));\n-\n-template <class _FLT> inline complex<_FLT>\n-operator - (const complex<_FLT>& x, _FLT y)\n-{\n-  return complex<_FLT> (real (x) - y, imag (x));\n-}\n-\n-template <class _FLT> inline complex<_FLT>\n-operator - (_FLT x, const complex<_FLT>& y) __attribute__ ((const));\n-\n-template <class _FLT> inline complex<_FLT>\n-operator - (_FLT x, const complex<_FLT>& y)\n-{\n-  return complex<_FLT> (x - real (y), - imag (y));\n-}\n-\n-template <class _FLT> inline complex<_FLT>\n-operator * (const complex<_FLT>& x, const complex<_FLT>& y) __attribute__ ((const));\n-\n-template <class _FLT> inline complex<_FLT>\n-operator * (const complex<_FLT>& x, const complex<_FLT>& y)\n-{\n-  return complex<_FLT> (real (x) * real (y) - imag (x) * imag (y),\n-\t\t\t   real (x) * imag (y) + imag (x) * real (y));\n-}\n-\n-template <class _FLT> inline complex<_FLT>\n-operator * (const complex<_FLT>& x, _FLT y) __attribute__ ((const));\n-\n-template <class _FLT> inline complex<_FLT>\n-operator * (const complex<_FLT>& x, _FLT y)\n-{\n-  return complex<_FLT> (real (x) * y, imag (x) * y);\n-}\n-\n-template <class _FLT> inline complex<_FLT>\n-operator * (_FLT x, const complex<_FLT>& y) __attribute__ ((const));\n-\n-template <class _FLT> inline complex<_FLT>\n-operator * (_FLT x, const complex<_FLT>& y)\n-{\n-  return complex<_FLT> (x * real (y), x * imag (y));\n-}\n-\n-template <class _FLT> complex<_FLT>\n-operator / (const complex<_FLT>& x, _FLT y) __attribute__ ((const));\n-\n-template <class _FLT> complex<_FLT>\n-operator / (const complex<_FLT>& x, _FLT y)\n-{\n-  return complex<_FLT> (real (x) / y, imag (x) / y);\n-}\n-\n-template <class _FLT> inline complex<_FLT>\n-operator + (const complex<_FLT>& x) __attribute__ ((const));\n-\n-template <class _FLT> inline complex<_FLT>\n-operator + (const complex<_FLT>& x)\n-{\n-  return x;\n-}\n-\n-template <class _FLT> inline complex<_FLT>\n-operator - (const complex<_FLT>& x) __attribute__ ((const));\n-\n-template <class _FLT> inline complex<_FLT>\n-operator - (const complex<_FLT>& x)\n-{\n-  return complex<_FLT> (-real (x), -imag (x));\n-}\n-\n-template <class _FLT> inline bool\n-operator == (const complex<_FLT>& x, const complex<_FLT>& y) __attribute__ ((const));\n-\n-template <class _FLT> inline bool\n-operator == (const complex<_FLT>& x, const complex<_FLT>& y)\n-{\n-  return real (x) == real (y) && imag (x) == imag (y);\n-}\n-\n-template <class _FLT> inline bool\n-operator == (const complex<_FLT>& x, _FLT y) __attribute__ ((const));\n-\n-template <class _FLT> inline bool\n-operator == (const complex<_FLT>& x, _FLT y)\n-{\n-  return real (x) == y && imag (x) == 0;\n-}\n-\n-template <class _FLT> inline bool\n-operator == (_FLT x, const complex<_FLT>& y) __attribute__ ((const));\n-\n-template <class _FLT> inline bool\n-operator == (_FLT x, const complex<_FLT>& y)\n-{\n-  return x == real (y) && imag (y) == 0;\n-}\n-\n-template <class _FLT> inline bool\n-operator != (const complex<_FLT>& x, const complex<_FLT>& y) __attribute__ ((const));\n-\n-template <class _FLT> inline bool\n-operator != (const complex<_FLT>& x, const complex<_FLT>& y)\n-{\n-  return real (x) != real (y) || imag (x) != imag (y);\n-}\n-\n-template <class _FLT> inline bool\n-operator != (const complex<_FLT>& x, _FLT y) __attribute__ ((const));\n-\n-template <class _FLT> inline bool\n-operator != (const complex<_FLT>& x, _FLT y)\n-{\n-  return real (x) != y || imag (x) != 0;\n-}\n-\n-template <class _FLT> inline bool\n-operator != (_FLT x, const complex<_FLT>& y) __attribute__ ((const));\n-\n-template <class _FLT> inline bool\n-operator != (_FLT x, const complex<_FLT>& y)\n-{\n-  return x != real (y) || imag (y) != 0;\n-}\n-\n-// Some targets don't provide a prototype for hypot when -ansi.\n-extern \"C\" double hypot (double, double) __attribute__ ((const));\n-\n-template <class _FLT> inline _FLT\n-abs (const complex<_FLT>& x) __attribute__ ((const));\n-\n-template <class _FLT> inline _FLT\n-abs (const complex<_FLT>& x)\n-{\n-  return hypot (real (x), imag (x));\n-}\n-\n-template <class _FLT> inline _FLT\n-arg (const complex<_FLT>& x) __attribute__ ((const));\n-\n-template <class _FLT> inline _FLT\n-arg (const complex<_FLT>& x)\n-{\n-  return atan2 (imag (x), real (x));\n-}\n-\n-template <class _FLT> inline complex<_FLT>\n-polar (_FLT r, _FLT t) __attribute__ ((const));\n-\n-template <class _FLT> inline complex<_FLT>\n-polar (_FLT r, _FLT t)\n-{\n-  return complex<_FLT> (r * cos (t), r * sin (t));\n-}\n-\n-template <class _FLT> inline complex<_FLT>\n-conj (const complex<_FLT>& x)  __attribute__ ((const));\n-\n-template <class _FLT> inline complex<_FLT>\n-conj (const complex<_FLT>& x) \n-{\n-  return complex<_FLT> (real (x), -imag (x));\n-}\n-\n-template <class _FLT> inline _FLT\n-norm (const complex<_FLT>& x) __attribute__ ((const));\n-\n-template <class _FLT> inline _FLT\n-norm (const complex<_FLT>& x)\n-{\n-  return real (x) * real (x) + imag (x) * imag (x);\n-}\n-\n-// Declarations of templates in complext.ccI\n-\n-template <class _FLT> complex<_FLT>\n-  operator / (const complex<_FLT>&, const complex<_FLT>&) __attribute__ ((const));\n-template <class _FLT> complex<_FLT>\n-  operator / (_FLT, const complex<_FLT>&) __attribute__ ((const));\n-template <class _FLT> complex<_FLT>\n-  cos (const complex<_FLT>&) __attribute__ ((const));\n-template <class _FLT> complex<_FLT>\n-  cosh (const complex<_FLT>&) __attribute__ ((const));\n-template <class _FLT> complex<_FLT>\n-  exp (const complex<_FLT>&) __attribute__ ((const));\n-template <class _FLT> complex<_FLT>\n-  log (const complex<_FLT>&) __attribute__ ((const));\n-template <class _FLT> complex<_FLT>\n-  pow (const complex<_FLT>&, const complex<_FLT>&) __attribute__ ((const));\n-template <class _FLT> complex<_FLT>\n-  pow (const complex<_FLT>&, _FLT) __attribute__ ((const));\n-template <class _FLT> complex<_FLT>\n-  pow (const complex<_FLT>&, int) __attribute__ ((const));\n-template <class _FLT> complex<_FLT>\n-  pow (_FLT, const complex<_FLT>&) __attribute__ ((const));\n-template <class _FLT> complex<_FLT>\n-  sin (const complex<_FLT>&) __attribute__ ((const));\n-template <class _FLT> complex<_FLT>\n-  sinh (const complex<_FLT>&) __attribute__ ((const));\n-template <class _FLT> complex<_FLT>\n-  sqrt (const complex<_FLT>&) __attribute__ ((const));\n-\n-template <class _FLT> istream& operator >> (istream&, complex<_FLT>&);\n-template <class _FLT> ostream& operator << (ostream&, const complex<_FLT>&);\n-} // extern \"C++\"\n-\n-// Specializations and such\n-\n-#include <std/fcomplex.h>\n-#include <std/dcomplex.h>\n-#include <std/ldcomplex.h>\n-\n-#endif"}, {"sha": "1a065b4efa8127a892558100abe06af04404d312", "filename": "libstdc++/std/cpp_type_traits.h", "status": "removed", "additions": 0, "deletions": 299, "changes": 299, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fcpp_type_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fcpp_type_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fcpp_type_traits.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,299 +0,0 @@\n-// The  -*- C++ -*- type traits classes for internal use in libstdc++\n-\n-// Copyright (C) 2000 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-// Written by Gabriel Dos Reis <dosreis@cmla.ens-cachan.fr>\n-\n-#ifndef _CPP_BITS_CPP_TYPE_TRAITS_H\n-#define _CPP_BITS_CPP_TYPE_TRAITS_H 1\n-\n-//\n-// This file provides some compile-time information about various types.\n-// These informations were designed, on purpose, to be constant-expressions\n-// and not types as found in <stl/bits/type_traits.h>.  In particular, they\n-// can be used in control structures and the optimizer, hopefully, will do\n-// the obvious thing.\n-//\n-// Why integral expressions, and not functions nor types?\n-// Firstly, these compile-time information entities are used as\n-// template-arguments so function return values won't work.  We\n-// need compile-time entities.  We're left with types and iintegral constant\n-// expressions.\n-// Secondly, from the point of view of ease of use, type-based compile-time\n-// information is -not- *that* convenient.  One has to write lots of\n-// overloaded functions and to hope that the compiler will select the right\n-// one. As a net effect, the overall structure isn't very clear at first\n-// glance.\n-// Thirdly, partial ordering and overload resolution (of template functions)\n-// is very costly in terms of compiler-resource.  It is a Good Thing to\n-// keep these resource consumption as least as possible.  Please, direct\n-// any comment to <dosreis@cmla.ens-cachan.fr>.\n-//\n-// -- Gaby (dosreis@cmla.ens-cachan.fr) 2000-03-06.\n-//\n-\n-extern \"C++\" {\n-  template<typename _Tp>\n-  struct __is_void\n-  {\n-    enum\n-    {\n-      _M_type = 0\n-    };\n-  };\n-  \n-  template<>\n-  struct __is_void<void>\n-  {\n-    enum\n-    {\n-      _M_type = 1\n-    };\n-  };\n-  \n-  //\n-  // Integer types\n-  //\n-  template<typename _Tp>\n-  struct __is_integer\n-  {\n-    enum\n-    {\n-      _M_type = 0\n-    };\n-  };\n-  \n-  // Thirteen specializations (yes there are eleven standard integer\n-  // types; 'long long' and 'unsigned long long' are supported as\n-  // extensions)\n-  template<>\n-  struct __is_integer<bool>\n-  {\n-    enum\n-    {\n-      _M_type = 1\n-    };\n-  };\n-  \n-  template<>\n-  struct __is_integer<char>\n-  {\n-    enum\n-    {\n-      _M_type = 1\n-    };\n-  };\n-  \n-  template<>\n-  struct __is_integer<signed char>\n-  {\n-    enum\n-    {\n-      _M_type = 1\n-    };\n-  };\n-  \n-  template<>\n-  struct __is_integer<unsigned char>\n-  {\n-    enum\n-    {\n-      _M_type = 1\n-    };\n-  };\n-  \n-# if 0\n-  template<>\n-  struct __is_integer<wchar_t>\n-  {\n-    enum\n-    {\n-      _M_type = 1\n-    };\n-  };\n-# endif\n-\n-  template<>\n-  struct __is_integer<short>\n-  {\n-    enum\n-    {\n-      _M_type = 1\n-    };\n-  };\n-  \n-  template<>\n-  struct __is_integer<unsigned short>\n-  {\n-    enum\n-    {\n-      _M_type = 1\n-    };\n-  };\n-  \n-  template<>\n-  struct __is_integer<int>\n-  {\n-    enum\n-    {\n-      _M_type = 1\n-    };\n-  };\n-  \n-  template<>\n-  struct __is_integer<unsigned int>\n-  {\n-    enum\n-    {\n-      _M_type = 1\n-    };\n-  };\n-  \n-  template<>\n-  struct __is_integer<long>\n-  {\n-    enum\n-    {\n-      _M_type = 1\n-    };\n-  };\n-  \n-  template<>\n-  struct __is_integer<unsigned long>\n-  {\n-    enum\n-    {\n-      _M_type = 1\n-    };\n-  };\n-\n-# if 0\n-  template<>\n-  struct __is_integer<long long>\n-  {\n-    enum\n-    {\n-      _M_type = 1\n-    };\n-  };\n-  \n-  template<>\n-  struct __is_integer<unsigned long long>\n-  {\n-    enum\n-    {\n-      _M_type = 1\n-    };\n-  };\n-# endif\n-\n-  //\n-  // Floating point types\n-  //\n-  template<typename _Tp>\n-  struct __is_floating\n-  {\n-    enum\n-    {\n-      _M_type = 0\n-    };\n-  };\n-  \n-  // three specializations (float, double and 'long double')\n-  template<>\n-  struct __is_floating<float>\n-  {\n-    enum\n-    {\n-      _M_type = 1\n-    };\n-  };\n-  \n-  template<>\n-  struct __is_floating<double>\n-  {\n-    enum\n-    {\n-      _M_type = 1\n-    };\n-  };\n-  \n-  template<>\n-  struct __is_floating<long double>\n-  {\n-    enum\n-    {\n-      _M_type = 1\n-    };\n-  };\n-  \n-  //\n-  // An arithmetic type is an integer type or a floating point type\n-  //\n-  template<typename _Tp>\n-  struct __is_arithmetic\n-  {\n-    enum\n-    {\n-      _M_type = __is_integer<_Tp>::_M_type || __is_floating<_Tp>::_M_type\n-    };\n-  };\n-  \n-  //\n-  // A fundamental type is `void' or and arithmetic type\n-  //\n-  template<typename _Tp>\n-  struct __is_fundamental\n-  {\n-    enum\n-    {\n-      _M_type = __is_void<_Tp>::_M_type || __is_arithmetic<_Tp>::_M_type\n-    };\n-  };\n-  \n-  //\n-  // For the immediate use, the following is a good approximation\n-  //\n-  template<typename _Tp>\n-  struct __is_pod\n-  {\n-    enum\n-    {\n-      _M_type = __is_fundamental<_Tp>::_M_type\n-    };\n-  };\n-} // extern \"C++\"\n-\n-#endif //_CPP_BITS_CPP_TYPE_TRAITS_H\n-\n-\n-\n-\n-\n-\n-"}, {"sha": "5812d9fa7dfd0f3daa01dee6669df143fab55262", "filename": "libstdc++/std/dcomplex.h", "status": "removed", "additions": 0, "deletions": 91, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fdcomplex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fdcomplex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fdcomplex.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,91 +0,0 @@\n-// The -*- C++ -*- double_complex class.\n-// Copyright (C) 1994 Free Software Foundation\n-\n-// This file is part of the GNU ANSI C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License\n-// along with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n-\n-// As a special exception, if you link this library with files\n-// compiled with a GNU compiler to produce an executable, this does not cause\n-// the resulting executable to be covered by the GNU General Public License.\n-// This exception does not however invalidate any other reasons why\n-// the executable file might be covered by the GNU General Public License.\n-\n-// Written by Jason Merrill based upon the specification in the 27 May 1994\n-// C++ working paper, ANSI document X3J16/94-0098.\n-\n-#ifndef __DCOMPLEX__\n-#define __DCOMPLEX__\n-\n-#ifdef __GNUG__\n-#pragma interface \"dcomplex\"\n-#endif\n-\n-extern \"C++\" {\n-class complex<double>\n-{\n-public:\n-  complex (double r = 0, double i = 0): re (r), im (i) { }\n-  complex (const complex<float>& r): re (r.real ()), im (r.imag ()) { }\n-  explicit complex (const complex<long double>& r);\n-\n-  complex& operator+= (const complex& r) { return __doapl (this, r); }\n-  complex& operator-= (const complex& r) { return __doami (this, r); }\n-  complex& operator*= (const complex& r) { return __doaml (this, r); }\n-  complex& operator/= (const complex& r) { return __doadv (this, r); }\n-\n-  double real () const { return re; }\n-  double imag () const { return im; }\n-private:\n-  double re, im;\n-\n-  friend complex& __doapl<> (complex *, const complex&);\n-  friend complex& __doami<> (complex *, const complex&);\n-  friend complex& __doaml<> (complex *, const complex&);\n-  friend complex& __doadv<> (complex *, const complex&);\n-\n-#ifndef __STRICT_ANSI__\n-  friend inline complex operator + (const complex& x, double y)\n-    { return operator+<> (x, y); }\n-  friend inline complex operator + (double x, const complex& y)\n-    { return operator+<> (x, y); }\n-  friend inline complex operator - (const complex& x, double y)\n-    { return operator-<> (x, y); }\n-  friend inline complex operator - (double x, const complex& y)\n-    { return operator-<> (x, y); }\n-  friend inline complex operator * (const complex& x, double y)\n-    { return operator*<> (x, y); }\n-  friend inline complex operator * (double x, const complex& y)\n-    { return operator*<> (x, y); }\n-  friend inline complex operator / (const complex& x, double y)\n-    { return operator/<> (x, y); }\n-  friend inline complex operator / (double x, const complex& y)\n-    { return operator/<> (x, y); }\n-  friend inline bool operator == (const complex& x, double y)\n-    { return operator==<> (x, y); }\n-  friend inline bool operator == (double x, const complex& y)\n-    { return operator==<> (x, y); }\n-  friend inline bool operator != (const complex& x, double y)\n-    { return operator!=<> (x, y); }\n-  friend inline bool operator != (double x, const complex& y)\n-    { return operator!=<> (x, y); }\n-#endif /* __STRICT_ANSI__ */\n-};\n-\n-inline complex<float>::complex (const complex<double>& r)\n-: re (r.real ()), im (r.imag ())\n-{ }\n-} // extern \"C++\"\n-\n-#endif"}, {"sha": "cd9af1a2e0ceb75d33c3c345951e0da1ecf8cd3b", "filename": "libstdc++/std/fcomplex.h", "status": "removed", "additions": 0, "deletions": 87, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Ffcomplex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Ffcomplex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Ffcomplex.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,87 +0,0 @@\n-// The -*- C++ -*- float_complex class.\n-// Copyright (C) 1994 Free Software Foundation\n-\n-// This file is part of the GNU ANSI C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License\n-// along with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n-\n-// As a special exception, if you link this library with files\n-// compiled with a GNU compiler to produce an executable, this does not cause\n-// the resulting executable to be covered by the GNU General Public License.\n-// This exception does not however invalidate any other reasons why\n-// the executable file might be covered by the GNU General Public License.\n-\n-// Written by Jason Merrill based upon the specification in the 27 May 1994\n-// C++ working paper, ANSI document X3J16/94-0098.\n-\n-#ifndef __FCOMPLEX__\n-#define __FCOMPLEX__\n-\n-#ifdef __GNUG__\n-#pragma interface \"fcomplex\"\n-#endif\n-\n-extern \"C++\" {\n-class complex<float>\n-{\n-public:\n-  complex (float r = 0, float i = 0): re (r), im (i) { }\n-  explicit complex (const complex<double>& r);\n-  explicit complex (const complex<long double>& r);\n-\n-  complex& operator+= (const complex& r) { return __doapl (this, r); }\n-  complex& operator-= (const complex& r) { return __doami (this, r); }\n-  complex& operator*= (const complex& r) { return __doaml (this, r); }\n-  complex& operator/= (const complex& r) { return __doadv (this, r); }\n-\n-  float real () const { return re; }\n-  float imag () const { return im; }\n-private:\n-  float re, im;\n-\n-  friend complex& __doapl<> (complex *, const complex&);\n-  friend complex& __doami<> (complex *, const complex&);\n-  friend complex& __doaml<> (complex *, const complex&);\n-  friend complex& __doadv<> (complex *, const complex&);\n-\n-#ifndef __STRICT_ANSI__\n-  friend inline complex operator + (const complex& x, float y)\n-    { return operator+<> (x, y); }\n-  friend inline complex operator + (float x, const complex& y)\n-    { return operator+<> (x, y); }\n-  friend inline complex operator - (const complex& x, float y)\n-    { return operator-<> (x, y); }\n-  friend inline complex operator - (float x, const complex& y)\n-    { return operator-<> (x, y); }\n-  friend inline complex operator * (const complex& x, float y)\n-    { return operator*<> (x, y); }\n-  friend inline complex operator * (float x, const complex& y)\n-    { return operator*<> (x, y); }\n-  friend inline complex operator / (const complex& x, float y)\n-    { return operator/<> (x, y); }\n-  friend inline complex operator / (float x, const complex& y)\n-    { return operator/<> (x, y); }\n-  friend inline bool operator == (const complex& x, float y)\n-    { return operator==<> (x, y); }\n-  friend inline bool operator == (float x, const complex& y)\n-    { return operator==<> (x, y); }\n-  friend inline bool operator != (const complex& x, float y)\n-    { return operator!=<> (x, y); }\n-  friend inline bool operator != (float x, const complex& y)\n-    { return operator!=<> (x, y); }\n-#endif /* __STRICT_ANSI__ */\n-};\n-} // extern \"C++\"\n-\n-#endif"}, {"sha": "4f6e854a14c0fc7c0e14dedc890232784454f7ae", "filename": "libstdc++/std/gslice.h", "status": "removed", "additions": 0, "deletions": 111, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fgslice.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fgslice.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fgslice.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,111 +0,0 @@\n-// The template and inlines for the -*- C++ -*- gslice class.\n-\n-// Copyright (C) 1997-1999 Cygnus Solutions\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@DPTMaths.ENS-Cachan.Fr>\n-\n-#ifndef __GSLICE__\n-#define __GSLICE__\n-\n-extern \"C++\" {\n-\n-struct _Indexer {\n-    size_t _M_count;\n-    size_t _M_start;\n-    valarray<size_t> _M_size;\n-    valarray<size_t> _M_stride;\n-    valarray<size_t> _M_index;\n-    _Indexer(size_t, const valarray<size_t>&, const valarray<size_t>&);\n-    void _M_increment_use() { ++_M_count; }\n-    size_t _M_decrement_use() { return --_M_count; }\n-};\n-\n-    \n-class gslice\n-{\n-public:\n-    gslice ();\n-    gslice (size_t, const valarray<size_t>&, const valarray<size_t>&);\n-    gslice(const gslice&);\n-    ~gslice();\n-\n-    gslice& operator= (const gslice&);\n-    size_t           start () const;\n-    valarray<size_t> size () const;\n-    valarray<size_t> stride () const;\n-    \n-private:\n-    _Indexer* _M_index;\n-    \n-    template<typename _Tp> friend class valarray;\n-};\n-    \n-inline size_t\n-gslice::start () const\n-{ return _M_index ? _M_index->_M_start : 0; }\n-\n-inline valarray<size_t>\n-gslice::size () const\n-{ return _M_index ? _M_index->_M_size : valarray<size_t>(); }\n-\n-inline valarray<size_t>\n-gslice::stride () const\n-{ return _M_index ? _M_index->_M_stride : valarray<size_t>(); }\n-\n-inline gslice::gslice () : _M_index(0) {}\n-\n-inline\n-gslice::gslice(size_t __o, const valarray<size_t>& __l,\n-               const valarray<size_t>& __s)\n-        : _M_index(new _Indexer(__o, __l, __s)) {}\n-\n-inline\n-gslice::gslice(const gslice& __g) : _M_index(__g._M_index)\n-{ if (_M_index) _M_index->_M_increment_use(); }\n-\n-inline\n-gslice::~gslice()\n-{ if (_M_index && _M_index->_M_decrement_use() == 0) delete _M_index; }\n-\n-inline gslice&\n-gslice::operator= (const gslice& __g)\n-{\n-    if (__g._M_index) __g._M_index->_M_increment_use();\n-    if (_M_index && _M_index->_M_decrement_use() == 0) delete _M_index;\n-    _M_index = __g._M_index;\n-    return *this;\n-}\n-\n-\n-} // extern \"C++\"\n-\n-#endif // __GSLICE__\n-\n-// Local Variables:\n-// mode:c++\n-// End:"}, {"sha": "9ea61ffc03c237ed89c4a6c5eab7676d12effb79", "filename": "libstdc++/std/gslice_array.h", "status": "removed", "additions": 0, "deletions": 170, "changes": 170, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fgslice_array.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fgslice_array.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fgslice_array.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,170 +0,0 @@\n-// The template and inlines for the -*- C++ -*- gslice_array class.\n-\n-// Copyright (C) 1997-1999 Cygnus Solutions\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@DPTMaths.ENS-Cachan.Fr>\n-\n-#ifndef __GSLICE_ARRAY__\n-#define __GSLICE_ARRAY__\n-\n-extern \"C++\" {\n-\n-template<typename _Tp> class gslice_array\n-{\n-public:\n-    typedef _Tp value_type;\n-    \n-    void operator=  (const valarray<_Tp>&) const;\n-    void operator*= (const valarray<_Tp>&) const;\n-    void operator/= (const valarray<_Tp>&) const;\n-    void operator%= (const valarray<_Tp>&) const;\n-    void operator+= (const valarray<_Tp>&) const;\n-    void operator-= (const valarray<_Tp>&) const;\n-    void operator^= (const valarray<_Tp>&) const;\n-    void operator&= (const valarray<_Tp>&) const;\n-    void operator|= (const valarray<_Tp>&) const;\n-    void operator<<=(const valarray<_Tp>&) const;\n-    void operator>>=(const valarray<_Tp>&) const;\n-    void operator=(const _Tp&);\n-    \n-    template<class _Dom>\n-    void operator= (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator*= (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator/= (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator%= (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator+= (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator-= (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator^= (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator&= (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator|= (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator<<= (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator>>= (const _Expr<_Dom,_Tp>&) const;\n-    \n-private:\n-    _Array<_Tp>    _M_array;\n-    const valarray<size_t>& _M_index;\n-    \n-    friend class valarray<_Tp>;\n-    \n-    gslice_array (_Array<_Tp>, const valarray<size_t>&);\n-    \n-    // this constructor needs to be implemented.\n-    gslice_array (const gslice_array&);\n-    \n-    // not implemented\n-    gslice_array();\n-    gslice_array& operator= (const gslice_array&);\n-};\n-\n-template<typename _Tp>\n-inline\n-gslice_array<_Tp>::gslice_array (_Array<_Tp> __a,\n-                                 const valarray<size_t>& __i)\n-        : _M_array (__a), _M_index (__i) {}\n-\n-\n-template<typename _Tp>\n-inline\n-gslice_array<_Tp>::gslice_array (const gslice_array<_Tp>& __a)\n-        : _M_array (__a._M_array), _M_index (__a._M_index) {}\n-\n-\n-template<typename _Tp>\n-inline void\n-gslice_array<_Tp>::operator= (const _Tp& __t) \n-{ \n-    __valarray_fill (_M_array, _Array<size_t>(_M_index),\n-                     _M_index.size(), __t); \n-}\n-\n-template<typename _Tp>\n-inline void\n-gslice_array<_Tp>::operator= (const valarray<_Tp>& __v) const\n-{\n-    __valarray_copy (_Array<_Tp> (__v), __v.size (),\n-                     _M_array, _Array<size_t>(_M_index));\n-}\n-\n-template<typename _Tp>\n-template<class E>\n-inline void\n-gslice_array<_Tp>::operator= (const _Expr<E, _Tp>& __e) const\n-{\n-    __valarray_copy (__e, _M_index.size(), _M_array,\n-                     _Array<size_t>(_M_index));\n-}\n-\n-#undef _DEFINE_VALARRAY_OPERATOR\n-#define _DEFINE_VALARRAY_OPERATOR(op, name)\t\t\t\t\\\n-template<typename _Tp>\t\t\t\t\t\t\t\\\n-inline void\t\t\t\t\t\t\t\t\\\n-gslice_array<_Tp>::operator op##= (const valarray<_Tp>& __v) const\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-    _Array_augmented_##name (_M_array, _Array<size_t>(_M_index),\t\\\n-                              _Array<_Tp> (__v), __v.size ());\t\t\\\n-}\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-template<typename _Tp> template<class E>        \t\t\t\\\n-inline void \t\t\t\t\t\t\t\t\\\n-gslice_array<_Tp>::operator op##= (const _Expr<E, _Tp>& __e) const\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-    _Array_augmented_##name (_M_array, _Array<size_t>(_M_index), __e,\t\\\n-                              _M_index.size());\t\t\t\t\\\n-}\n-\n-_DEFINE_VALARRAY_OPERATOR(*, multiplies)\n-_DEFINE_VALARRAY_OPERATOR(/, divides)    \n-_DEFINE_VALARRAY_OPERATOR(%, modulus)\n-_DEFINE_VALARRAY_OPERATOR(+, plus)    \n-_DEFINE_VALARRAY_OPERATOR(-, minus)\n-_DEFINE_VALARRAY_OPERATOR(^, xor)\n-_DEFINE_VALARRAY_OPERATOR(&, and)\n-_DEFINE_VALARRAY_OPERATOR(|, or)\n-_DEFINE_VALARRAY_OPERATOR(<<, shift_left)\n-_DEFINE_VALARRAY_OPERATOR(>>, shift_right)\n-\n-#undef _DEFINE_VALARRAY_OPERATOR\n-\n-} // extern \"C++\"\n-\n-    \n-#endif // __GSLICE_ARRAY__\n-\n-// Local Variables:\n-// mode:c++\n-// End:"}, {"sha": "7a1d3c2b0d137daf9c61bd91460202ef863bed49", "filename": "libstdc++/std/indirect_array.h", "status": "removed", "additions": 0, "deletions": 157, "changes": 157, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Findirect_array.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Findirect_array.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Findirect_array.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,157 +0,0 @@\n-// The template and inlines for the -*- C++ -*- indirect_array class.\n-\n-// Copyright (C) 1997-1999 Cygnus Solutions\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@DPTMaths.ENS-Cachan.Fr>\n-\n-#ifndef __INDIRECT_ARRAY__\n-#define __INDIRECT_ARRAY__\n-\n-extern \"C++\" {\n-\n-template <class _Tp> class indirect_array\n-{\n-public:\n-    typedef _Tp value_type;\n-    \n-    void operator=  (const valarray<_Tp>&) const;\n-    void operator*= (const valarray<_Tp>&) const;\n-    void operator/= (const valarray<_Tp>&) const;\n-    void operator%= (const valarray<_Tp>&) const; \n-    void operator+= (const valarray<_Tp>&) const;\n-    void operator-= (const valarray<_Tp>&) const;  \n-    void operator^= (const valarray<_Tp>&) const;\n-    void operator&= (const valarray<_Tp>&) const;\n-    void operator|= (const valarray<_Tp>&) const;\n-    void operator<<= (const valarray<_Tp>&) const;\n-    void operator>>= (const valarray<_Tp>&) const; \n-    void operator= (const _Tp&);\n-    \n-    template<class _Dom>\n-    void operator=  (const _Expr<_Dom, _Tp>&) const;\n-    template<class _Dom>\n-    void operator*= (const _Expr<_Dom, _Tp>&) const;\n-    template<class _Dom>\n-    void operator/= (const _Expr<_Dom, _Tp>&) const;\n-    template<class _Dom>\n-    void operator%= (const _Expr<_Dom, _Tp>&) const;\n-    template<class _Dom>\n-    void operator+= (const _Expr<_Dom, _Tp>&) const;\n-    template<class _Dom>\n-    void operator-= (const _Expr<_Dom, _Tp>&) const;\n-    template<class _Dom>\n-    void operator^= (const _Expr<_Dom, _Tp>&) const;\n-    template<class _Dom>\n-    void operator&= (const _Expr<_Dom, _Tp>&) const;\n-    template<class _Dom>\n-    void operator|= (const _Expr<_Dom, _Tp>&) const;\n-    template<class _Dom>\n-    void operator<<= (const _Expr<_Dom, _Tp>&) const;\n-    template<class _Dom>\n-    void operator>>= (const _Expr<_Dom, _Tp>&) const; \n-    \n-private:\n-    indirect_array (const indirect_array&);\n-    indirect_array (_Array<_Tp>, size_t, _Array<size_t>);\n-    \n-    friend class valarray<_Tp>;\n-    friend class gslice_array<_Tp>;\n-    \n-    const size_t \t _M_sz;\n-    const _Array<size_t> _M_index;\n-    const _Array<_Tp> \t _M_array;\n-    \n-    // not implemented\n-    indirect_array ();\n-    indirect_array& operator= (const indirect_array&);\n-};\n-\n-template<typename _Tp>\n-inline indirect_array<_Tp>::indirect_array(const indirect_array<_Tp>& __a)\n-        : _M_sz (__a._M_sz), _M_index (__a._M_index),\n-          _M_array (__a._M_array) {}\n-\n-template<typename _Tp>\n-inline\n-indirect_array<_Tp>::indirect_array (_Array<_Tp> __a, size_t __s, \n-                                     _Array<size_t> __i)\n-        : _M_sz (__s), _M_index (__i), _M_array (__a) {}\n-\n-\n-template<typename _Tp>\n-inline void\n-indirect_array<_Tp>::operator= (const _Tp& __t)\n-{ __valarray_fill(_M_array, _M_index, _M_sz, __t); }\n-\n-template<typename _Tp>\n-inline void\n-indirect_array<_Tp>::operator= (const valarray<_Tp>& __v) const\n-{ __valarray_copy (_Array<_Tp> (__v), _M_sz, _M_array, _M_index); }\n-\n-template<typename _Tp>\n-template<class _Dom>\n-inline void\n-indirect_array<_Tp>::operator= (const _Expr<_Dom,_Tp>& __e) const\n-{ __valarray_copy (__e, _M_sz, _M_array, _M_index); }\n-\n-#undef _DEFINE_VALARRAY_OPERATOR\n-#define _DEFINE_VALARRAY_OPERATOR(op, name)\t\t\t\t\\\n-template<typename _Tp>\t\t\t\t\t\t\t\\\n-inline void\t\t\t\t\t\t\t\t\\\n-indirect_array<_Tp>::operator op##= (const valarray<_Tp>& __v) const\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  _Array_augmented_##name (_M_array, _M_index, _Array<_Tp> (__v), _M_sz); \\\n-}\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-template<typename _Tp> template<class _Dom>\t\t\t\t\\\n-inline void\t\t\t\t\t\t\t\t\\\n-indirect_array<_Tp>::operator op##= (const _Expr<_Dom,_Tp>& __e) const  \\\n-{\t\t\t\t\t\t\t\t\t\\\n-  _Array_augmented_##name (_M_array, _M_index, __e, _M_sz);\t\t\\\n-}\n-\n-_DEFINE_VALARRAY_OPERATOR(*, multiplies)\n-_DEFINE_VALARRAY_OPERATOR(/, divides)\n-_DEFINE_VALARRAY_OPERATOR(%, modulus)\n-_DEFINE_VALARRAY_OPERATOR(+, plus)\n-_DEFINE_VALARRAY_OPERATOR(-, minus)\n-_DEFINE_VALARRAY_OPERATOR(^, xor)\n-_DEFINE_VALARRAY_OPERATOR(&, and)\n-_DEFINE_VALARRAY_OPERATOR(|, or)\n-_DEFINE_VALARRAY_OPERATOR(<<, shift_left)\n-_DEFINE_VALARRAY_OPERATOR(>>, shift_right)\n-\n-#undef _DEFINE_VALARRAY_OPERATOR\n-\n-} // extern \"C++\"\n-\n-#endif // __INDIRECT_ARRAY__\n-\n-// Local Variables:\n-// mode:c++\n-// End:"}, {"sha": "bc91fa422bf7ee5a1d373346629af8b3c638df25", "filename": "libstdc++/std/ldcomplex.h", "status": "removed", "additions": 0, "deletions": 95, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fldcomplex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fldcomplex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fldcomplex.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,95 +0,0 @@\n-// The -*- C++ -*- long_double_complex class.\n-// Copyright (C) 1994 Free Software Foundation\n-\n-// This file is part of the GNU ANSI C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License\n-// along with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n-\n-// As a special exception, if you link this library with files\n-// compiled with a GNU compiler to produce an executable, this does not cause\n-// the resulting executable to be covered by the GNU General Public License.\n-// This exception does not however invalidate any other reasons why\n-// the executable file might be covered by the GNU General Public License.\n-\n-// Written by Jason Merrill based upon the specification in the 27 May 1994\n-// C++ working paper, ANSI document X3J16/94-0098.\n-\n-#ifndef __LDCOMPLEX__\n-#define __LDCOMPLEX__\n-\n-#ifdef __GNUG__\n-#pragma interface \"ldcomplex\"\n-#endif\n-\n-extern \"C++\" {\n-class complex<long double>\n-{\n-public:\n-  complex (long double r = 0, long double i = 0): re (r), im (i) { }\n-  complex (const complex<float>& r): re (r.real ()), im (r.imag ()) { }\n-  complex (const complex<double>& r): re (r.real ()), im (r.imag ()) { }\n-\n-  complex& operator+= (const complex& r) { return __doapl (this, r); }\n-  complex& operator-= (const complex& r) { return __doami (this, r); }\n-  complex& operator*= (const complex& r) { return __doaml (this, r); }\n-  complex& operator/= (const complex& r) { return __doadv (this, r); }\n-\n-  long double real () const { return re; }\n-  long double imag () const { return im; }\n-private:\n-  long double re, im;\n-\n-  friend complex& __doapl<> (complex *, const complex&);\n-  friend complex& __doami<> (complex *, const complex&);\n-  friend complex& __doaml<> (complex *, const complex&);\n-  friend complex& __doadv<> (complex *, const complex&);\n-\n-#ifndef __STRICT_ANSI__\n-  friend inline complex operator + (const complex& x, long double y)\n-    { return operator+<> (x, y); }\n-  friend inline complex operator + (long double x, const complex& y)\n-    { return operator+<> (x, y); }\n-  friend inline complex operator - (const complex& x, long double y)\n-    { return operator-<> (x, y); }\n-  friend inline complex operator - (long double x, const complex& y)\n-    { return operator-<> (x, y); }\n-  friend inline complex operator * (const complex& x, long double y)\n-    { return operator*<> (x, y); }\n-  friend inline complex operator * (long double x, const complex& y)\n-    { return operator*<> (x, y); }\n-  friend inline complex operator / (const complex& x, long double y)\n-    { return operator/<> (x, y); }\n-  friend inline complex operator / (long double x, const complex& y)\n-    { return operator/<> (x, y); }\n-  friend inline bool operator == (const complex& x, long double y)\n-    { return operator==<> (x, y); }\n-  friend inline bool operator == (long double x, const complex& y)\n-    { return operator==<> (x, y); }\n-  friend inline bool operator != (const complex& x, long double y)\n-    { return operator!=<> (x, y); }\n-  friend inline bool operator != (long double x, const complex& y)\n-    { return operator!=<> (x, y); }\n-#endif /* __STRICT_ANSI__ */\n-};\n-\n-inline complex<float>::complex (const complex<long double>& r)\n-: re (r.real ()), im (r.imag ())\n-{ }\n-\n-inline complex<double>::complex (const complex<long double>& r)\n-: re (r.real ()), im (r.imag ())\n-{ }\n-} // extern \"C++\"\n-\n-#endif"}, {"sha": "033e6f218fa863029fc535b1d797bd897168f3a9", "filename": "libstdc++/std/mask_array.h", "status": "removed", "additions": 0, "deletions": 154, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fmask_array.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fmask_array.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fmask_array.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,154 +0,0 @@\n-// The template and inlines for the -*- C++ -*- mask_array class.\n-\n-// Copyright (C) 1997-1999 Cygnus Solutions\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@DPTMaths.ENS-Cachan.Fr>\n-\n-#ifndef __MASK_ARRAY__\n-#define __MASK_ARRAY__\n-\n-extern \"C++\" {\n-\n-template <class _Tp> class mask_array\n-{ \n-public:\n-    typedef _Tp value_type;\n-    \n-    void operator=  (const valarray<_Tp>&) const;\n-    void operator*= (const valarray<_Tp>&) const;\n-    void operator/= (const valarray<_Tp>&) const;\n-    void operator%= (const valarray<_Tp>&) const;\n-    void operator+= (const valarray<_Tp>&) const; \n-    void operator-= (const valarray<_Tp>&) const;\n-    void operator^= (const valarray<_Tp>&) const;  \n-    void operator&= (const valarray<_Tp>&) const;\n-    void operator|= (const valarray<_Tp>&) const;\n-    void operator<<=(const valarray<_Tp>&) const;  \n-    void operator>>=(const valarray<_Tp>&) const; \n-    void operator= (const _Tp&);\n-    \n-    template<class _Dom>\n-    void operator=  (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator*= (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator/= (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator%= (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator+= (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator-= (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator^= (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator&= (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator|= (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator<<=(const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator>>=(const _Expr<_Dom,_Tp>&) const; \n-    \n-private:\n-    mask_array (_Array<_Tp>, size_t, _Array<bool>);\n-    friend class valarray<_Tp>;\n-    \n-    const size_t       _M_sz;\n-    const _Array<bool> _M_mask;\n-    const _Array<_Tp>   _M_array;\n-    \n-    mask_array (const mask_array&);\n-    \n-    // not implemented\n-    mask_array ();\n-    mask_array& operator= (const mask_array&);\n-};\n-\n-template<typename _Tp>\n-inline mask_array<_Tp>::mask_array (const mask_array<_Tp>& a)\n-        : _M_sz (a._M_sz), _M_mask (a._M_mask), _M_array (a._M_array) {}\n-\n-template<typename _Tp>\n-inline \n-mask_array<_Tp>::mask_array (_Array<_Tp> __a, size_t __s, _Array<bool> __m)\n-        : _M_sz (__s), _M_mask (__m), _M_array (__a) {}\n-\n-template<typename _Tp>\n-inline void\n-mask_array<_Tp>::operator= (const _Tp& __t)\n-{ __valarray_fill (_M_array, _M_sz, _M_mask, __t); }\n-    \n-template<typename _Tp>\n-inline void\n-mask_array<_Tp>::operator= (const valarray<_Tp>& __v) const\n-{ __valarray_copy (_Array<_Tp> (__v), __v.size (), _M_array, _M_mask); }\n-\n-template<typename _Tp>\n-template<class E>\n-inline void\n-mask_array<_Tp>::operator= (const _Expr<E, _Tp>& __e) const\n-{ __valarray_copy (__e, __e.size (), _M_array, _M_mask); }\n-\n-#undef _DEFINE_VALARRAY_OPERATOR\n-#define _DEFINE_VALARRAY_OPERATOR(op, name)\t\t\t\t\\\n-template<typename _Tp>\t\t\t\t\t\t\t\\\n-inline void\t\t\t\t\t\t\t\t\\\n-mask_array<_Tp>::operator op##= (const valarray<_Tp>& __v) const\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  _Array_augmented_##name (_M_array, _M_mask, \t\t\t\t\\\n-                           _Array<_Tp> (__v), __v.size ());\t\t\\\n-}\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-template<typename _Tp> template<class E>\t\t\t\t\t\\\n-inline void\t\t\t\t\t\t\t\t\\\n-mask_array<_Tp>::operator op##= (const _Expr<E, _Tp>& __e) const\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  _Array_augmented_##name (_M_array, _M_mask, __e, __e.size ());\t\\\n-}\n-\n-_DEFINE_VALARRAY_OPERATOR(*, multiplies)\n-_DEFINE_VALARRAY_OPERATOR(/, divides)\n-_DEFINE_VALARRAY_OPERATOR(%, modulus)\n-_DEFINE_VALARRAY_OPERATOR(+, plus)\n-_DEFINE_VALARRAY_OPERATOR(-, minus)\n-_DEFINE_VALARRAY_OPERATOR(^, xor)\n-_DEFINE_VALARRAY_OPERATOR(&, and)\n-_DEFINE_VALARRAY_OPERATOR(|, or)\n-_DEFINE_VALARRAY_OPERATOR(<<, shift_left)\n-_DEFINE_VALARRAY_OPERATOR(>>, shift_right)\n-\n-#undef _DEFINE_VALARRAY_OPERATOR    \n-\n-} // extern \"C++\"\n-    \n-#endif // __MASK_ARRAY__ \n-\n-// Local Variables:\n-// mode:c++\n-// End:"}, {"sha": "cf2fb283de95a69183fe9c2bcb19f1ba89f25b90", "filename": "libstdc++/std/slice.h", "status": "removed", "additions": 0, "deletions": 76, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fslice.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fslice.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fslice.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,76 +0,0 @@\n-// The template and inlines for the -*- C++ -*- slice class.\n-\n-// Copyright (C) 1997-1999 Cygnus Solutions\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@DPTMaths.ENS-Cachan.Fr>\n-\n-#ifndef __SLICE__\n-#define __SLICE__\n-\n-extern \"C++\" {\n-\n-class slice\n-{\n-public:\n-    slice ();\n-    slice (size_t, size_t, size_t);\n-\n-    size_t start () const;\n-    size_t size () const;\n-    size_t stride () const;\n-\n-private:\n-    size_t _M_off;                      // offset\n-    size_t _M_sz;\t\t\t// size\n-    size_t _M_st;\t\t\t// stride unit\n-};\n-\n-inline slice::slice () {}\n-\n-inline slice::slice (size_t __o, size_t __d, size_t __s)\n-        : _M_off (__o), _M_sz (__d), _M_st (__s) {}\n-\n-inline size_t\n-slice::start () const\n-  { return _M_off; }\n-\n-inline size_t\n-slice::size () const\n-  { return _M_sz; }\n-\n-inline size_t\n-slice::stride () const\n-  { return _M_st; }\n-\n-} // extern \"C++\"\n-    \n-#endif // __SLICE__\n-\n-// Local Variables:\n-// mode:c++\n-// End:"}, {"sha": "0d3ac794753620de09d2f326fa0a9b2017a7134d", "filename": "libstdc++/std/slice_array.h", "status": "removed", "additions": 0, "deletions": 156, "changes": 156, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fslice_array.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fslice_array.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fslice_array.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,156 +0,0 @@\n-// The template and inlines for the -*- C++ -*- slice_array class.\n-\n-// Copyright (C) 1997-1999 Cygnus Solutions\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@DPTMaths.ENS-Cachan.Fr>\n-\n-#ifndef __SLICE_ARRAY__\n-#define __SLICE_ARRAY__\n-\n-extern \"C++\" {\n-\n-template<typename _Tp>\n-class slice_array\n-{\n-public:\n-    typedef _Tp value_type;\n-    \n-    void operator=   (const valarray<_Tp>&) const;\n-    void operator*=  (const valarray<_Tp>&) const;\n-    void operator/=  (const valarray<_Tp>&) const;\n-    void operator%=  (const valarray<_Tp>&) const;\n-    void operator+=  (const valarray<_Tp>&) const;\n-    void operator-=  (const valarray<_Tp>&) const;\n-    void operator^=  (const valarray<_Tp>&) const;\n-    void operator&=  (const valarray<_Tp>&) const;\n-    void operator|=  (const valarray<_Tp>&) const;\n-    void operator<<= (const valarray<_Tp>&) const;\n-    void operator>>= (const valarray<_Tp>&) const;\n-    void operator= (const _Tp &);\n-    \n-    template<class _Dom>\n-    void operator=   (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator*=  (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator/=  (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator%=  (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator+=  (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator-=  (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator^=  (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator&=  (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator|=  (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator<<= (const _Expr<_Dom,_Tp>&) const;\n-    template<class _Dom>\n-    void operator>>= (const _Expr<_Dom,_Tp>&) const;\n-    \n-private:\n-    friend class valarray<_Tp>;\n-    slice_array(_Array<_Tp>, const slice&);\n-    \n-    const size_t     _M_sz;\n-    const size_t     _M_stride;\n-    const _Array<_Tp> _M_array;\n-    \n-    // this constructor is implemented since we need to return a value.\n-    slice_array (const slice_array&);\n-    \n-    // not implemented\n-    slice_array ();\n-    slice_array& operator= (const slice_array&);\n-};\n-\n-template<typename _Tp>\n-inline slice_array<_Tp>::slice_array (_Array<_Tp> __a, const slice& __s)\n-        : _M_sz (__s.size ()), _M_stride (__s.stride ()),\n-          _M_array (__a.begin () + __s.start ()) {}\n-\n-template<typename _Tp>\n-inline slice_array<_Tp>::slice_array(const slice_array<_Tp>& a)\n-        : _M_sz(a._M_sz), _M_stride(a._M_stride), _M_array(a._M_array) {}\n-\n-template<typename _Tp>\n-inline void\n-slice_array<_Tp>::operator= (const _Tp& __t) \n-{ __valarray_fill (_M_array, _M_sz, _M_stride, __t); }\n-\n-template<typename _Tp>\n-inline void\n-slice_array<_Tp>::operator= (const valarray<_Tp>& __v) const\n-{ __valarray_copy (_Array<_Tp> (__v), _M_array, _M_sz, _M_stride); }\n-\n-template<typename _Tp>\n-template<class _Dom>\n-inline void\n-slice_array<_Tp>::operator= (const _Expr<_Dom,_Tp>& __e) const\n-{ __valarray_copy (__e, _M_sz, _M_array, _M_stride); }\n-\n-#undef _DEFINE_VALARRAY_OPERATOR\n-#define _DEFINE_VALARRAY_OPERATOR(op, name)\t\t\t\t\\\n-template<typename _Tp>\t\t\t\t\t\t\t\\\n-inline void\t\t\t\t\t\t\t\t\\\n-slice_array<_Tp>::operator op##= (const valarray<_Tp>& __v) const\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  _Array_augmented_##name (_M_array, _M_sz, _M_stride, _Array<_Tp> (__v));\\\n-}\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-template<typename _Tp> template<class _Dom>\t\t\t\t\\\n-inline void\t\t\t\t\t\t\t\t\\\n-slice_array<_Tp>::operator op##= (const _Expr<_Dom,_Tp>& __e) const\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-    _Array_augmented_##name (_M_array, _M_stride, __e, _M_sz);\t\t\\\n-}\n-\n-\n-_DEFINE_VALARRAY_OPERATOR(*, multiplies)\n-_DEFINE_VALARRAY_OPERATOR(/, divides)\n-_DEFINE_VALARRAY_OPERATOR(%, modulus)\n-_DEFINE_VALARRAY_OPERATOR(+, plus)\n-_DEFINE_VALARRAY_OPERATOR(-, minus)\n-_DEFINE_VALARRAY_OPERATOR(^, xor)\n-_DEFINE_VALARRAY_OPERATOR(&, and)\n-_DEFINE_VALARRAY_OPERATOR(|, or)\n-_DEFINE_VALARRAY_OPERATOR(<<, shift_left)\n-_DEFINE_VALARRAY_OPERATOR(>>, shift_right)\n-\n-#undef _DEFINE_VALARRAY_OPERATOR\n-\n-} // extern \"C++\"\n-    \n-#endif // __SLICE_ARRAY__\n-\n-// Local Variables:\n-// mode:c++\n-// End:"}, {"sha": "8d4c94aa045c740fc6325b0ee7a6ab5583ac7ee3", "filename": "libstdc++/std/std_valarray.h", "status": "removed", "additions": 0, "deletions": 737, "changes": 737, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fstd_valarray.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fstd_valarray.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fstd_valarray.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,737 +0,0 @@\n-// The template and inlines for the -*- C++ -*- valarray class.\n-\n-// Copyright (C) 1997-1999 Cygnus Solutions\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@DPTMaths.ENS-Cachan.Fr>\n-\n-#ifndef __STD_VALARRAY__\n-#define __STD_VALARRAY__\n-#define _G_NO_VALARRAY_TEMPLATE_EXPORT 1\n-\n-#include <cstddef>\n-#include <cmath>\n-#include <cstdlib>\n-#include <numeric>\n-#include <functional>\n-#include <algorithm>\n-\n-#ifndef alloca\n-#ifdef __GNUC__\n-#define alloca __builtin_alloca\n-#else /* not GNU C.  */\n-#if (!defined (__STDC__) && defined (sparc)) || defined (__sparc__) || defined (__sparc) || defined (__sgi)\n-#include <alloca.h>\n-#else /* not sparc */\n-#if defined (MSDOS) && !defined (__TURBOC__)\n-#include <malloc.h>\n-#else /* not MSDOS, or __TURBOC__ */\n-#if defined(_AIX)\n-#include <malloc.h>\n- #pragma alloca\n-#else /* not MSDOS, __TURBOC__, or _AIX */\n-#ifdef __hpux\n-#endif /* __hpux */\n-#endif /* not _AIX */\n-#endif /* not MSDOS, or __TURBOC__ */\n-#endif /* not sparc.  */\n-#endif /* not GNU C.  */\n-#endif /* alloca not defined.  */\n-\n-extern \"C\" {\n-   void* alloca(size_t);\n-}\n-\n-extern \"C++\" {\n-\n-template<class _Clos, typename _Tp> class _Expr;\n-\n-template<typename _Tp1, typename _Tp2> class _ValArray;    \n-\n-template<template<class> class _Oper,\n-    template<class, class> class _Meta, class _Dom> struct _UnClos;\n-\n-template<template<class> class _Oper,\n-    template<class, class> class _Meta1,\n-    template<class, class> class _Meta2,\n-    class _Dom1, class _Dom2> class _BinClos;\n-\n-template<template<class, class> class _Meta, class _Dom> class _SClos;\n-\n-template<template<class, class> class _Meta, class _Dom> class _GClos;\n-    \n-template<template<class, class> class _Meta, class _Dom> class _IClos;\n-    \n-template<template<class, class> class _Meta, class _Dom> class _ValFunClos;\n-\n-template<template<class, class> class _Meta, class _Dom> class _RefFunClos;\n-\n-template<class _Tp> struct _Unary_plus;\n-template<class _Tp> struct _Bitwise_and;\n-template<class _Tp> struct _Bitwise_or;\n-template<class _Tp> struct _Bitwise_xor;  \n-template<class _Tp> struct _Bitwise_not;\n-template<class _Tp> struct _Shift_left;\n-template<class _Tp> struct _Shift_right;\n-\n-template<class _Tp> class valarray;   // An array of type _Tp\n-class slice;                          // BLAS-like slice out of an array\n-template<class _Tp> class slice_array;\n-class gslice;                         // generalized slice out of an array\n-template<class _Tp> class gslice_array;\n-template<class _Tp> class mask_array;     // masked array\n-template<class _Tp> class indirect_array; // indirected array\n-\n-} // extern \"C++\"\n-\n-#include <std/valarray_array.h>\n-#include <std/valarray_meta.h>\n-\n-extern \"C++\" {\n-\n-template<class _Tp> class valarray\n-{\n-public:\n-    typedef _Tp value_type;\n-    \n-    // _lib.valarray.cons_ construct/destroy:\n-    valarray();\n-    explicit valarray(size_t);\n-    valarray(const _Tp&, size_t);\n-    valarray(const _Tp* __restrict__, size_t);\n-    valarray(const valarray&);\n-    valarray(const slice_array<_Tp>&);\n-    valarray(const gslice_array<_Tp>&);\n-    valarray(const mask_array<_Tp>&);\n-    valarray(const indirect_array<_Tp>&);\n-    template<class _Dom>\n-    valarray(const _Expr<_Dom,_Tp>& __e);\n-    ~valarray();\n-    \n-    // _lib.valarray.assign_ assignment:\n-    valarray<_Tp>& operator=(const valarray<_Tp>&);\n-    valarray<_Tp>& operator=(const _Tp&);\n-    valarray<_Tp>& operator=(const slice_array<_Tp>&);\n-    valarray<_Tp>& operator=(const gslice_array<_Tp>&);\n-    valarray<_Tp>& operator=(const mask_array<_Tp>&);\n-    valarray<_Tp>& operator=(const indirect_array<_Tp>&);\n-    \n-    template<class _Dom> valarray<_Tp>&\n-    operator= (const _Expr<_Dom,_Tp>&);\n-    \n-    // _lib.valarray.access_ element access:\n-    _Tp                 operator[](size_t) const;\n-    _Tp&                operator[](size_t);\t\t\n-    // _lib.valarray.sub_ subset operations:\n-    _Expr<_SClos<_ValArray,_Tp>, _Tp> operator[](slice) const;\n-    slice_array<_Tp>    operator[](slice);\n-    _Expr<_GClos<_ValArray,_Tp>, _Tp> operator[](const gslice&) const;\n-    gslice_array<_Tp>   operator[](const gslice&);\n-    valarray<_Tp>     \t operator[](const valarray<bool>&) const;\n-    mask_array<_Tp>     operator[](const valarray<bool>&);\n-    _Expr<_IClos<_ValArray, _Tp>, _Tp>\n-    operator[](const valarray<size_t>&) const;\n-    indirect_array<_Tp> operator[](const valarray<size_t>&);\n-    \n-    // _lib.valarray.unary_ unary operators:\n-    _Expr<_UnClos<_Unary_plus,_ValArray,_Tp>,_Tp>  operator+ () const;\n-    _Expr<_UnClos<negate,_ValArray,_Tp>,_Tp> operator- () const;\n-    _Expr<_UnClos<_Bitwise_not,_ValArray,_Tp>,_Tp> operator~ () const;\n-    _Expr<_UnClos<logical_not,_ValArray,_Tp>,bool> operator! () const;\n-    \n-    // _lib.valarray.cassign_ computed assignment:\n-    valarray<_Tp>& operator*= (const _Tp&);\n-    valarray<_Tp>& operator/= (const _Tp&);\n-    valarray<_Tp>& operator%= (const _Tp&);\n-    valarray<_Tp>& operator+= (const _Tp&);\n-    valarray<_Tp>& operator-= (const _Tp&);\n-    valarray<_Tp>& operator^= (const _Tp&);\n-    valarray<_Tp>& operator&= (const _Tp&);\n-    valarray<_Tp>& operator|= (const _Tp&);\n-    valarray<_Tp>& operator<<=(const _Tp&);\n-    valarray<_Tp>& operator>>=(const _Tp&);\n-    valarray<_Tp>& operator*= (const valarray<_Tp>&);\n-    valarray<_Tp>& operator/= (const valarray<_Tp>&);\n-    valarray<_Tp>& operator%= (const valarray<_Tp>&);\n-    valarray<_Tp>& operator+= (const valarray<_Tp>&);\n-    valarray<_Tp>& operator-= (const valarray<_Tp>&);\n-    valarray<_Tp>& operator^= (const valarray<_Tp>&);\n-    valarray<_Tp>& operator|= (const valarray<_Tp>&);\n-    valarray<_Tp>& operator&= (const valarray<_Tp>&);\n-    valarray<_Tp>& operator<<=(const valarray<_Tp>&);\n-    valarray<_Tp>& operator>>=(const valarray<_Tp>&);\n-\n-    template<class _Dom>\n-    valarray<_Tp>& operator*= (const _Expr<_Dom,_Tp>&);\n-    template<class _Dom>\n-       valarray<_Tp>& operator/= (const _Expr<_Dom,_Tp>&);\n-    template<class _Dom>\n-       valarray<_Tp>& operator%= (const _Expr<_Dom,_Tp>&);\n-    template<class _Dom>\n-       valarray<_Tp>& operator+= (const _Expr<_Dom,_Tp>&);\n-    template<class _Dom>\n-       valarray<_Tp>& operator-= (const _Expr<_Dom,_Tp>&);\n-    template<class _Dom>\n-       valarray<_Tp>& operator^= (const _Expr<_Dom,_Tp>&);\n-    template<class _Dom>\n-       valarray<_Tp>& operator|= (const _Expr<_Dom,_Tp>&);\n-    template<class _Dom>\n-       valarray<_Tp>& operator&= (const _Expr<_Dom,_Tp>&);\n-    template<class _Dom>\n-       valarray<_Tp>& operator<<=(const _Expr<_Dom,_Tp>&);\n-    template<class _Dom>\n-       valarray<_Tp>& operator>>=(const _Expr<_Dom,_Tp>&);\n-\n-      \n-    // _lib.valarray.members_ member functions:\n-    size_t size() const;\n-    _Tp    sum() const;\t\n-    _Tp    min() const;\t\n-    _Tp    max() const;\t\n-  \n-    valarray<_Tp> shift (int) const;\n-    valarray<_Tp> cshift(int) const;\n-    _Expr<_ValFunClos<_ValArray,_Tp>,_Tp> apply(_Tp func(_Tp)) const;\n-    _Expr<_RefFunClos<_ValArray,_Tp>,_Tp> apply(_Tp func(const _Tp&)) const;\n-    void resize(size_t __size, _Tp __c = _Tp());\n-    \n-private:\n-    size_t _M_size;\n-    _Tp* __restrict__ _M_data;\n-\n-    friend class _Array<_Tp>;\n-};\n-\n-\n-template<typename _Tp> struct _Unary_plus : unary_function<_Tp,_Tp> {\n-    _Tp operator() (const _Tp& __t) const { return __t; }\n-};\n-\n-template<typename _Tp> struct _Bitwise_and : binary_function<_Tp,_Tp,_Tp> {\n-    _Tp operator() (_Tp __x, _Tp __y) const { return __x & __y; }\n-};\n-\n-template<typename _Tp> struct _Bitwise_or : binary_function<_Tp,_Tp,_Tp> {\n-    _Tp operator() (_Tp __x, _Tp __y) const { return __x | __y; }\n-};\n-\n-template<typename _Tp> struct _Bitwise_xor : binary_function<_Tp,_Tp,_Tp> {\n-    _Tp operator() (_Tp __x, _Tp __y) const { return __x ^ __y; }\n-};\n-\n-template<typename _Tp> struct _Bitwise_not : unary_function<_Tp,_Tp> {\n-    _Tp operator() (_Tp __t) const { return ~__t; }\n-};\n-\n-template<typename _Tp> struct _Shift_left : unary_function<_Tp,_Tp> {\n-    _Tp operator() (_Tp __x, _Tp __y) const { return __x << __y; }\n-};\n-\n-template<typename _Tp> struct _Shift_right : unary_function<_Tp,_Tp> {\n-    _Tp operator() (_Tp __x, _Tp __y) const { return __x >> __y; }\n-};\n-\n-  \n-template<typename _Tp>\n-inline _Tp\n-valarray<_Tp>::operator[] (size_t __i) const\n-{ return _M_data[__i]; }\n-\n-template<typename _Tp>\n-inline _Tp&\n-valarray<_Tp>::operator[] (size_t __i)\n-{ return _M_data[__i]; }\n-\n-} // extern \"C++\"\n-\n-#include <std/slice.h>\n-#include <std/slice_array.h>\n-#include <std/gslice.h>\n-#include <std/gslice_array.h>\n-#include <std/mask_array.h>\n-#include <std/indirect_array.h>\n-\n-extern \"C++\" {\n-\n-template<typename _Tp>\n-inline valarray<_Tp>::valarray () : _M_size (0), _M_data (0) {}\n-\n-template<typename _Tp>\n-inline valarray<_Tp>::valarray (size_t __n) \n-  : _M_size (__n), _M_data(__valarray_get_storage<_Tp>(__n))\n-{ __valarray_default_construct(_M_data, _M_data + __n); }\n-\n-template<typename _Tp>\n-inline valarray<_Tp>::valarray (const _Tp& __t, size_t __n)\n-  : _M_size (__n), _M_data(__valarray_get_storage<_Tp>(__n))\n-{ __valarray_fill_construct(_M_data, _M_data + __n, __t); }\n-\n-template<typename _Tp>\n-inline valarray<_Tp>::valarray (const _Tp* __restrict__ __pT, size_t __n)\n-        : _M_size (__n), _M_data(__valarray_get_storage<_Tp>(__n))\n-{ __valarray_copy_construct(__pT, __pT + __n, _M_data); }\n-\n-template<typename _Tp>\n-inline valarray<_Tp>::valarray (const valarray<_Tp>& __v)\n-  : _M_size (__v._M_size), _M_data(__valarray_get_storage<_Tp>(__v._M_size))\n-{ __valarray_copy_construct (__v._M_data, __v._M_data + _M_size, _M_data); }\n-\n-template<typename _Tp>\n-inline valarray<_Tp>::valarray (const slice_array<_Tp>& __sa)\n-  : _M_size (__sa._M_sz), _M_data(__valarray_get_storage<_Tp>(__sa._M_sz))\n-{\n-  __valarray_copy\n-    (__sa._M_array, __sa._M_sz, __sa._M_stride, _Array<_Tp>(_M_data));\n-}\n-\n-template<typename _Tp>\n-inline valarray<_Tp>::valarray (const gslice_array<_Tp>& __ga)\n-  : _M_size (__ga._M_index.size()),\n-    _M_data(__valarray_get_storage<_Tp>(_M_size))\n-{\n-  __valarray_copy\n-    (__ga._M_array, _Array<size_t>(__ga._M_index),\n-     _Array<_Tp>(_M_data), _M_size);\n-}\n-\n-template<typename _Tp>\n-inline valarray<_Tp>::valarray (const mask_array<_Tp>& __ma)\n-  : _M_size (__ma._M_sz), _M_data(__valarray_get_storage<_Tp>(__ma._M_sz))\n-{\n-  __valarray_copy\n-    (__ma._M_array, __ma._M_mask, _Array<_Tp>(_M_data), _M_size);\n-}\n-\n-template<typename _Tp>\n-inline valarray<_Tp>::valarray (const indirect_array<_Tp>& __ia)\n-  : _M_size (__ia._M_sz), _M_data(__valarray_get_storage<_Tp>(__ia._M_size))\n-{\n-  __valarray_copy\n-    (__ia._M_array, __ia._M_index, _Array<_Tp>(_M_data), _M_size);\n-}\n-\n-template<typename _Tp> template<class _Dom>\n-inline valarray<_Tp>::valarray (const _Expr<_Dom, _Tp>& __e)\n-  : _M_size (__e.size ()), _M_data (__valarray_get_storage<_Tp>(_M_size))\n-{ __valarray_copy (__e, _M_size, _Array<_Tp>(_M_data)); }\n-\n-template<typename _Tp>\n-inline valarray<_Tp>::~valarray ()\n-{\n-  __valarray_destroy_elements(_M_data, _M_data + _M_size);\n-  __valarray_release_storage(_M_data);\n-}\n-\n-template<typename _Tp>\n-inline valarray<_Tp>&\n-valarray<_Tp>::operator= (const valarray<_Tp>& __v)\n-{\n-    __valarray_copy(__v._M_data, _M_size, _M_data);\n-    return *this;\n-}\n-\n-template<typename _Tp>\n-inline valarray<_Tp>&\n-valarray<_Tp>::operator= (const _Tp& __t)\n-{\n-    __valarray_fill (_M_data, _M_size, __t);\n-    return *this;\n-}\n-\n-template<typename _Tp>\n-inline valarray<_Tp>&\n-valarray<_Tp>::operator= (const slice_array<_Tp>& __sa)\n-{\n-    __valarray_copy (__sa._M_array, __sa._M_sz,\n-                     __sa._M_stride, _Array<_Tp>(_M_data));\n-    return *this;\n-}\n-\n-template<typename _Tp>\n-inline valarray<_Tp>&\n-valarray<_Tp>::operator= (const gslice_array<_Tp>& __ga)\n-{\n-    __valarray_copy (__ga._M_array, _Array<size_t>(__ga._M_index),\n-                     _Array<_Tp>(_M_data), _M_size);\n-    return *this;\n-}\n-\n-template<typename _Tp>\n-inline valarray<_Tp>&\n-valarray<_Tp>::operator= (const mask_array<_Tp>& __ma)\n-{\n-    __valarray_copy (__ma._M_array, __ma._M_mask,\n-                     _Array<_Tp>(_M_data), _M_size);\n-    return *this;\n-}\n-\n-template<typename _Tp>\n-inline valarray<_Tp>&\n-valarray<_Tp>::operator= (const indirect_array<_Tp>& __ia)\n-{\n-    __valarray_copy (__ia._M_array, __ia._M_index,\n-                     _Array<_Tp>(_M_data), _M_size);\n-    return *this;\n-}\n-\n-template<typename _Tp> template<class _Dom>\n-inline valarray<_Tp>&\n-valarray<_Tp>::operator= (const _Expr<_Dom, _Tp>& __e)\n-{\n-    __valarray_copy (__e, _M_size, _Array<_Tp>(_M_data));\n-    return *this;\n-}\n-\n-template<typename _Tp>\n-inline _Expr<_SClos<_ValArray,_Tp>, _Tp>\n-valarray<_Tp>::operator[] (slice __s) const\n-{\n-    typedef _SClos<_ValArray,_Tp> _Closure;\n-    return _Expr<_Closure, _Tp> (_Closure (_Array<_Tp>(_M_data), __s));\n-}\n-\n-template<typename _Tp>\n-inline slice_array<_Tp>\n-valarray<_Tp>::operator[] (slice __s)\n-{\n-    return slice_array<_Tp> (_Array<_Tp>(_M_data), __s);\n-}\n-\n-template<typename _Tp>\n-inline _Expr<_GClos<_ValArray,_Tp>, _Tp>\n-valarray<_Tp>::operator[] (const gslice& __gs) const\n-{\n-    typedef _GClos<_ValArray,_Tp> _Closure;\n-    return _Expr<_Closure, _Tp>\n-        (_Closure (_Array<_Tp>(_M_data), __gs._M_index->_M_index));\n-}\n-\n-template<typename _Tp>\n-inline gslice_array<_Tp>\n-valarray<_Tp>::operator[] (const gslice& __gs)\n-{\n-    return gslice_array<_Tp>\n-        (_Array<_Tp>(_M_data), __gs._M_index->_M_index);\n-}\n-\n-template<typename _Tp>\n-inline valarray<_Tp>\n-valarray<_Tp>::operator[] (const valarray<bool>& __m) const\n-{\n-    size_t __s (0);\n-    size_t __e (__m.size ());\n-    for (size_t __i=0; __i<__e; ++__i)\n-        if (__m[__i]) ++__s;\n-    return valarray<_Tp> (mask_array<_Tp> (_Array<_Tp>(_M_data), __s,\n-                                           _Array<bool> (__m)));\n-}\n-\n-template<typename _Tp>\n-inline mask_array<_Tp>\n-valarray<_Tp>::operator[] (const valarray<bool>& __m)\n-{\n-    size_t __s (0);\n-    size_t __e (__m.size ());\n-    for (size_t __i=0; __i<__e; ++__i)\n-        if (__m[__i]) ++__s;\n-    return mask_array<_Tp> (_Array<_Tp>(_M_data), __s, _Array<bool> (__m));\n-}\n-\n-template<typename _Tp>\n-inline _Expr<_IClos<_ValArray,_Tp>, _Tp>\n-valarray<_Tp>::operator[] (const valarray<size_t>& __i) const\n-{\n-    typedef _IClos<_ValArray,_Tp> _Closure;\n-    return _Expr<_Closure, _Tp> (_Closure (*this, __i));\n-}\n-\n-template<typename _Tp>\n-inline indirect_array<_Tp>\n-valarray<_Tp>::operator[] (const valarray<size_t>& __i)\n-{\n-    return indirect_array<_Tp> (_Array<_Tp>(_M_data), __i.size(),\n-                                _Array<size_t> (__i));\n-}\n-\n-template<class _Tp>\n-inline size_t valarray<_Tp>::size () const { return _M_size; }\n-\n-template<class _Tp>\n-inline _Tp\n-valarray<_Tp>::sum () const\n-{\n-  return __valarray_sum(_M_data, _M_data + _M_size);\n-}\n-\n-template <class _Tp>\n-inline valarray<_Tp>\n-valarray<_Tp>::shift (int __n) const\n-{\n-    _Tp* const __a = static_cast<_Tp*> (alloca (sizeof(_Tp) * _M_size));\n-    if (! __n)                          // __n == 0: no shift\n-        __valarray_copy_construct (_M_data, _M_size, __a);\n-    else if (__n > 0) {                  // __n > 0: shift left\n-        if (__n > _M_size)\n-            __valarray_default_construct(__a, __a + __n);\n-        else {\n-            __valarray_copy_construct (_M_data+__n, _M_size-__n, __a);\n-            __valarray_default_construct (__a+_M_size-__n, __a + _M_size);\n-        }\n-    }\n-    else {                             // __n < 0: shift right\n-      __valarray_copy_construct (_M_data, _M_data+_M_size+__n, __a-__n);\n-        __valarray_default_construct(__a, __a-__n);\n-    }\n-    return valarray<_Tp> (__a, _M_size);\n-}\n-\n-template <class _Tp>\n-inline valarray<_Tp>\n-valarray<_Tp>::cshift (int __n) const\n-{\n-    _Tp* const __a = static_cast<_Tp*> (alloca (sizeof(_Tp) * _M_size));\n-    if (__n == 0)                          // __n == 0: no cshift\n-      __valarray_copy_construct(_M_data, _M_data + _M_size, __a);\n-    else if (__n > 0) {                 // __n > 0: cshift left\n-      __valarray_copy_construct (_M_data, _M_data + __n, __a + _M_size-__n);\n-      __valarray_copy_construct (_M_data + __n, _M_data + _M_size, __a);\n-    }\n-    else {                            // __n < 0: cshift right\n-      __valarray_copy_construct\n-        (_M_data + _M_size + __n, _M_data + _M_size, __a);\n-        __valarray_copy_construct\n-          (_M_data, _M_data + _M_size + __n, __a - __n);\n-    }\n-    return valarray<_Tp> (__a, _M_size);\n-}\n-\n-template <class _Tp>\n-inline void\n-valarray<_Tp>::resize (size_t __n, _Tp __c)\n-{\n-  // this is so to make valarray<valarray<T> > work\n-  // even though it is not required by the standard.\n-  __valarray_destroy_elements(_M_data, _M_data + _M_size);\n-  if (_M_size != __n) {\n-    __valarray_release_storage(_M_data);\n-    _M_size = __n;\n-    _M_data = __valarray_get_storage<_Tp>(__n);\n-  }\n-  __valarray_fill_construct (_M_data, _M_data + _M_size, __c);\n-}\n-\n-template<typename _Tp>\n-inline _Tp\n-valarray<_Tp>::min() const\n-{\n-    return *min_element (_M_data, _M_data+_M_size);\n-}\n-\n-template<typename _Tp>\n-inline _Tp\n-valarray<_Tp>::max() const\n-{\n-    return *max_element (_M_data, _M_data+_M_size);\n-}\n-\n-template<class _Tp>\n-inline _Expr<_ValFunClos<_ValArray,_Tp>,_Tp>\n-valarray<_Tp>::apply (_Tp func (_Tp)) const\n-{\n-    typedef _ValFunClos<_ValArray,_Tp> _Closure;\n-    return _Expr<_Closure,_Tp> (_Closure (*this, func));\n-}\n-\n-template<class _Tp>\n-inline _Expr<_RefFunClos<_ValArray,_Tp>,_Tp>\n-valarray<_Tp>::apply (_Tp func (const _Tp &)) const\n-{\n-    typedef _RefFunClos<_ValArray,_Tp> _Closure;\n-    return _Expr<_Closure,_Tp> (_Closure (*this, func));\n-}\n-\n-#define _DEFINE_VALARRAY_UNARY_OPERATOR(_Op, _Name)                     \\\n-  template<typename _Tp>\t\t\t\t\t\t\\\n-  inline _Expr<_UnClos<_Name,_ValArray,_Tp>, _Tp>               \t\\\n-  valarray<_Tp>::operator _Op() const\t\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-      typedef _UnClos<_Name,_ValArray,_Tp> _Closure;\t                \\\n-      return _Expr<_Closure, _Tp> (_Closure (*this));\t\t\t\\\n-  }\n-\n-    _DEFINE_VALARRAY_UNARY_OPERATOR(+, _Unary_plus)\n-    _DEFINE_VALARRAY_UNARY_OPERATOR(-, negate)\n-    _DEFINE_VALARRAY_UNARY_OPERATOR(~, _Bitwise_not)\n-\n-#undef _DEFINE_VALARRAY_UNARY_OPERATOR\n-  \n-  template<typename _Tp>\n-  inline _Expr<_UnClos<logical_not,_ValArray,_Tp>, bool>\n-  valarray<_Tp>::operator!() const\n-  {\n-      typedef _UnClos<logical_not,_ValArray,_Tp> _Closure;\n-      return _Expr<_Closure, bool> (_Closure (*this));\n-  }\n-\n-#define _DEFINE_VALARRAY_AUGMENTED_ASSIGNMENT(_Op, _Name)               \\\n-  template<class _Tp>\t\t\t\t\t\t\t\\\n-  inline valarray<_Tp> &\t\t\t\t\t\t\\\n-  valarray<_Tp>::operator _Op##= (const _Tp &__t)\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-      _Array_augmented_##_Name (_Array<_Tp>(_M_data), _M_size, __t);\t\\\n-      return *this;\t\t\t\t\t\t\t\\\n-  }\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  template<class _Tp>\t\t\t\t\t\t\t\\\n-  inline valarray<_Tp> &\t\t\t\t\t\t\\\n-  valarray<_Tp>::operator _Op##= (const valarray<_Tp> &__v)\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-      _Array_augmented_##_Name (_Array<_Tp>(_M_data), _M_size, \t\t\\\n-                               _Array<_Tp>(__v._M_data));\t\t\\\n-      return *this;\t\t\t\t\t\t\t\\\n-  }\n-\n-_DEFINE_VALARRAY_AUGMENTED_ASSIGNMENT(+, plus)\n-_DEFINE_VALARRAY_AUGMENTED_ASSIGNMENT(-, minus)\n-_DEFINE_VALARRAY_AUGMENTED_ASSIGNMENT(*, multiplies)\n-_DEFINE_VALARRAY_AUGMENTED_ASSIGNMENT(/, divides)\n-_DEFINE_VALARRAY_AUGMENTED_ASSIGNMENT(%, modulus)\n-_DEFINE_VALARRAY_AUGMENTED_ASSIGNMENT(^, xor)\n-_DEFINE_VALARRAY_AUGMENTED_ASSIGNMENT(&, and)\n-_DEFINE_VALARRAY_AUGMENTED_ASSIGNMENT(|, or)\n-_DEFINE_VALARRAY_AUGMENTED_ASSIGNMENT(<<, shift_left)\n-_DEFINE_VALARRAY_AUGMENTED_ASSIGNMENT(>>, shift_right)\n-\n-#undef _DEFINE_VALARRAY_AUGMENTED_ASSIGNMENT\n-\n-\n-#define _DEFINE_VALARRAY_EXPR_AUGMENTED_ASSIGNMENT(_Op, _Name)          \\\n-  template<class _Tp> template<class _Dom>\t\t\t\t\\\n-  inline valarray<_Tp> &\t\t\t\t\t\t\\\n-  valarray<_Tp>::operator _Op##= (const _Expr<_Dom,_Tp> &__e)\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-      _Array_augmented_##_Name (_Array<_Tp>(_M_data), __e, _M_size);\t\\\n-      return *this;\t\t\t\t\t\t\t\\\n-  }\n-\n-_DEFINE_VALARRAY_EXPR_AUGMENTED_ASSIGNMENT(+, plus)\n-_DEFINE_VALARRAY_EXPR_AUGMENTED_ASSIGNMENT(-, minus)\n-_DEFINE_VALARRAY_EXPR_AUGMENTED_ASSIGNMENT(*, multiplies)\n-_DEFINE_VALARRAY_EXPR_AUGMENTED_ASSIGNMENT(/, divides)\n-_DEFINE_VALARRAY_EXPR_AUGMENTED_ASSIGNMENT(%, modulus)\n-_DEFINE_VALARRAY_EXPR_AUGMENTED_ASSIGNMENT(^, xor)\n-_DEFINE_VALARRAY_EXPR_AUGMENTED_ASSIGNMENT(&, and)\n-_DEFINE_VALARRAY_EXPR_AUGMENTED_ASSIGNMENT(|, or)\n-_DEFINE_VALARRAY_EXPR_AUGMENTED_ASSIGNMENT(<<, shift_left)\n-_DEFINE_VALARRAY_EXPR_AUGMENTED_ASSIGNMENT(>>, shift_right)\n-\n-#undef _DEFINE_VALARRAY_EXPR_AUGMENTED_ASSIGNMENT\n-    \n-\n-#define _DEFINE_BINARY_OPERATOR(_Op, _Name)\t\t\t\t\\\n-  template<typename _Tp>\t\t\t\t\t\t\\\n-  inline _Expr<_BinClos<_Name,_ValArray,_ValArray,_Tp,_Tp>, _Tp>        \\\n-  operator _Op (const valarray<_Tp> &__v, const valarray<_Tp> &__w)\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-      typedef _BinClos<_Name,_ValArray,_ValArray,_Tp,_Tp> _Closure;     \\\n-      return _Expr<_Closure, _Tp> (_Closure (__v, __w));\t\t\\\n-  }\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  template<typename _Tp>\t\t\t\t\t\t\\\n-  inline _Expr<_BinClos<_Name,_ValArray,_Constant,_Tp,_Tp>,_Tp>         \\\n-  operator _Op (const valarray<_Tp> &__v, const _Tp &__t)\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-      typedef _BinClos<_Name,_ValArray,_Constant,_Tp,_Tp> _Closure;\t\\\n-      return _Expr<_Closure, _Tp> (_Closure (__v, __t));\t        \\\n-  }\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  template<typename _Tp>\t\t\t\t\t\t\\\n-  inline _Expr<_BinClos<_Name,_Constant,_ValArray,_Tp,_Tp>,_Tp>         \\\n-  operator _Op (const _Tp &__t, const valarray<_Tp> &__v)\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-      typedef _BinClos<_Name,_Constant,_ValArray,_Tp,_Tp> _Closure;     \\\n-      return _Expr<_Closure, _Tp> (_Closure (__t, __v));        \t\\\n-  }\n-\n-_DEFINE_BINARY_OPERATOR(+, plus)\n-_DEFINE_BINARY_OPERATOR(-, minus)\n-_DEFINE_BINARY_OPERATOR(*, multiplies)\n-_DEFINE_BINARY_OPERATOR(/, divides)\n-_DEFINE_BINARY_OPERATOR(%, modulus)\n-_DEFINE_BINARY_OPERATOR(^, _Bitwise_xor)\n-_DEFINE_BINARY_OPERATOR(&, _Bitwise_and)\n-_DEFINE_BINARY_OPERATOR(|, _Bitwise_or)\n-_DEFINE_BINARY_OPERATOR(<<, _Shift_left)\n-_DEFINE_BINARY_OPERATOR(>>, _Shift_right)\n-\n-#undef _DEFINE_BINARY_OPERATOR\n-\n-#define _DEFINE_LOGICAL_OPERATOR(_Op, _Name)\t\t\t\t\\\n-  template<typename _Tp>\t\t\t\t\t\t\\\n-  inline _Expr<_BinClos<_Name,_ValArray,_ValArray,_Tp,_Tp>,bool>        \\\n-  operator _Op (const valarray<_Tp> &__v, const valarray<_Tp> &__w)\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-      typedef _BinClos<_Name,_ValArray,_ValArray,_Tp,_Tp> _Closure;     \\\n-      return _Expr<_Closure, bool> (_Closure (__v, __w));               \\\n-  }\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  template<class _Tp>\t\t\t\t\t\t\t\\\n-  inline _Expr<_BinClos<_Name,_ValArray,_Constant,_Tp,_Tp>,bool>        \\\n-  operator _Op (const valarray<_Tp> &__v, const _Tp &__t)\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-      typedef _BinClos<_Name,_ValArray,_Constant,_Tp,_Tp> _Closure;     \\\n-      return _Expr<_Closure, bool> (_Closure (__v, __t));       \t\\\n-  }\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  template<class _Tp>\t\t\t\t\t\t\t\\\n-  inline _Expr<_BinClos<_Name,_Constant,_ValArray,_Tp,_Tp>,bool>        \\\n-  operator _Op (const _Tp &__t, const valarray<_Tp> &__v)\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-      typedef _BinClos<_Name,_Constant,_ValArray,_Tp,_Tp> _Closure;     \\\n-      return _Expr<_Closure, bool> (_Closure (__t, __v));\t        \\\n-  }\n-\n-_DEFINE_LOGICAL_OPERATOR(&&, logical_and)\n-_DEFINE_LOGICAL_OPERATOR(||, logical_or)\n-_DEFINE_LOGICAL_OPERATOR(==, equal_to)\n-_DEFINE_LOGICAL_OPERATOR(!=, not_equal_to)\n-_DEFINE_LOGICAL_OPERATOR(<, less)\n-_DEFINE_LOGICAL_OPERATOR(>, greater)\n-_DEFINE_LOGICAL_OPERATOR(<=, less_equal)\n-_DEFINE_LOGICAL_OPERATOR(>=, greater_equal)\n-\n-#undef _DEFINE_VALARRAY_OPERATOR\n-\n-#undef _G_NO_VALARRAY_TEMPLATE_EXPORT\n-\n-} // extern \"C++\"\n-\n-#endif // __STD_VALARRAY__\n-\n-// Local Variables:\n-// mode:c++\n-// End:"}, {"sha": "eada4fc4d859c463f5026cdc0bf02c755810e07b", "filename": "libstdc++/std/straits.h", "status": "removed", "additions": 0, "deletions": 161, "changes": 161, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fstraits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fstraits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fstraits.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,161 +0,0 @@\n-// Character traits template for the -*- C++ -*- string classes.\n-// Copyright (C) 1994, 2000 Free Software Foundation\n-\n-// This file is part of the GNU ANSI C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License\n-// along with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n-\n-// As a special exception, if you link this library with files\n-// compiled with a GNU compiler to produce an executable, this does not cause\n-// the resulting executable to be covered by the GNU General Public License.\n-// This exception does not however invalidate any other reasons why\n-// the executable file might be covered by the GNU General Public License.\n-\n-// Written by Jason Merrill based upon the specification by Takanori Adachi\n-// in ANSI X3J16/94-0013R2.\n-\n-#ifndef __STRING_CHAR_TRAITS__\n-#define __STRING_CHAR_TRAITS__\n-\n-#ifdef __GNUG__\n-// For string_char_traits <char>\n-#pragma interface \"std/straits.h\"\n-#endif\n-\n-#include <cstddef>\n-\n-extern \"C++\" {\n-template <class charT>\n-struct string_char_traits {\n-  typedef charT char_type; // for users to acquire the basic character type\n-\n-  // constraints\n-\n-  static void assign (char_type& c1, const char_type& c2)\n-    { c1 = c2; }\n-  static bool eq (const char_type& c1, const char_type& c2)\n-    { return (c1 == c2); }\n-  static bool ne (const char_type& c1, const char_type& c2)\n-    { return !(c1 == c2); }\n-  static bool lt (const char_type& c1, const char_type& c2)\n-    { return (c1 < c2); }\n-  static char_type eos () { return char_type(); } // the null character\n-  static bool is_del(char_type a) { return 0; }\n-  // characteristic function for delimiters of charT\n-  \n-  // speed-up functions\n-\n-  static int compare (const char_type* s1, const char_type* s2, size_t n)\n-    {\n-      size_t i;\n-      for (i = 0; i < n; ++i)\n-\tif (ne (s1[i], s2[i]))\n-\t  return lt (s1[i], s2[i]) ? -1 : 1;\n-\n-      return 0;\n-    }\n-    \n-  static size_t length (const char_type* s)\n-    {\n-      size_t l = 0;\n-      while (ne (*s++, eos ()))\n-\t++l;\n-      return l;\n-    }\n-\n-  static char_type* copy (char_type* s1, const char_type* s2, size_t n)\n-    {\n-      for (; n--; )\n-\tassign (s1[n], s2[n]);\n-      return s1;\n-    }\n-\n-  static char_type* move (char_type* s1, const char_type* s2, size_t n)\n-    {\n-      char_type a[n];\n-      size_t i;\n-      for (i = 0; i < n; ++i)\n-\tassign (a[i], s2[i]);\n-      for (i = 0; i < n; ++i)\n-\tassign (s1[i], a[i]);\n-      return s1;\n-    }\n-\n-  static char_type* set (char_type* s1, const char_type& c, size_t n)\n-    {\n-      for (; n--; )\n-\tassign (s1[n], c);\n-      return s1;\n-    }\n-};\n-\n-class istream;\n-class ostream;\n-#include <cctype>\n-#include <cstring>\n-\n-struct string_char_traits <char> {\n-  typedef char char_type;\n-\n-  static void assign (char_type& c1, const char_type& c2)\n-    { c1 = c2; }\n-  static bool eq (const char_type & c1, const char_type& c2)\n-    { return (c1 == c2); }\n-  static bool ne (const char_type& c1, const char_type& c2)\n-    { return (c1 != c2); }\n-  static bool lt (const char_type& c1, const char_type& c2)\n-    { return (c1 < c2); }\n-  static char_type eos () { return 0; }\n-  static bool is_del(char_type a) { return !!isspace(a); }\n-\n-  static int compare (const char_type* s1, const char_type* s2, size_t n)\n-    { return memcmp (s1, s2, n); }\n-  static size_t length (const char_type* s)\n-    { return strlen (s); }\n-  static char_type* copy (char_type* s1, const char_type* s2, size_t n)\n-    { return (char_type*) memcpy (s1, s2, n); }\n-  static char_type* move (char_type* s1, const char_type* s2, size_t n)\n-    { return (char_type*) memmove (s1, s2, n); }\n-  static char_type* set (char_type* s1, const char_type& c, size_t n)\n-    { return (char_type*) memset (s1, c, n); }\n-};\n-\n-#if 0\n-#include <cwctype>\n-struct string_char_traits <wchar_t> {\n-  typedef wchar_t char_type;\n-\n-  static void assign (char_type& c1, const char_type& c2)\n-    { c1 = c2; }\n-  static bool eq (const char_type & c1, const char_type& c2)\n-    { return (c1 == c2); }\n-  static bool ne (const char_type& c1, const char_type& c2)\n-    { return (c1 != c2); }\n-  static bool lt (const char_type& c1, const char_type& c2)\n-    { return (c1 < c2); }\n-  static char_type eos () { return 0; }\n-  static bool is_del(char_type a) { return !!iswspace(a); }\n-\n-  static int compare (const char_type* s1, const char_type* s2, size_t n)\n-    { return wmemcmp (s1, s2, n); }\n-  static size_t length (const char_type* s)\n-    { return wcslen (s); }\n-  static char_type* copy (char_type* s1, const char_type* s2, size_t n)\n-    { return wmemcpy (s1, s2, n); }\n-  static char_type* set (char_type* s1, const char_type& c, size_t n)\n-    { return wmemset (s1, c, n); }\n-};\n-#endif\n-} // extern \"C++\"\n-#endif"}, {"sha": "bb429b0bc7e6f4261e31705d35d018deaec2d6ba", "filename": "libstdc++/std/valarray_array.h", "status": "removed", "additions": 0, "deletions": 538, "changes": 538, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fvalarray_array.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fvalarray_array.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fvalarray_array.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,538 +0,0 @@\n-// The template and inlines for the -*- C++ -*- internal _Array helper class.\n-\n-// Copyright (C) 1997-1999 Cygnus Solutions\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@DPTMaths.ENS-Cachan.Fr>\n-\n-#ifndef __VALARRAY_ARRAY__\n-#define __VALARRAY_ARRAY__\n-\n-#include <cstdlib>\n-#include <cstring>\n-#include <std/cpp_type_traits.h>\n-\n-extern \"C++\" {\n-\n-//\n-// Helper functions on raw pointers\n-//\n-  \n-  inline void*\n-  __valarray_get_memory(size_t __n)\n-  { return operator new(__n); }\n-\n-  template<typename _Tp>\n-  inline _Tp*__restrict__\n-  __valarray_get_storage(size_t __n)\n-  {\n-    return static_cast<_Tp*__restrict__>\n-      (__valarray_get_memory(__n * sizeof(_Tp)));\n-  }\n-  \n-  // Return memory to the system\n-  inline void\n-  __valarray_release_storage(void* __p)\n-  { operator delete(__p); }\n-\n-  // Turn a raw-memory into an array of _Tp filled with _Tp()\n-  // This is required in 'valarray<T> v(n);'\n-  template<typename _Tp, bool>\n-  struct _Array_default_ctor\n-  {\n-    // Please note that this isn't exception safe.  But\n-    // valarrays aren't required to be exception safe.\n-    inline static void\n-    _S_do_it(_Tp* __restrict__ __b, _Tp* __restrict__ __e)\n-    { while (__b != __e) new(__b++) _Tp(); }\n-  };\n-\n-  template<typename _Tp>\n-  struct _Array_default_ctor<_Tp, true>\n-  {\n-    // For fundamental types, it suffices to say 'memset()'\n-    inline static void\n-    _S_do_it(_Tp* __restrict__ __b, _Tp* __restrict__ __e)\n-    { memset(__b, 0, (__e - __b)*sizeof(_Tp)); }\n-  };\n-\n-  template<typename _Tp>\n-  inline void\n-  __valarray_default_construct(_Tp* __restrict__ __b, _Tp* __restrict__ __e)\n-  {\n-    _Array_default_ctor<_Tp, __is_fundamental<_Tp>::_M_type>::\n-      _S_do_it(__b, __e);\n-  }\n-    \n-  // Turn a raw-memory into an array of _Tp filled with __t\n-  // This is the required in valarray<T> v(n, t).  Also\n-  // used in valarray<>::resize().\n-  template<typename _Tp, bool>\n-  struct _Array_init_ctor\n-  {\n-    // Please note that this isn't exception safe.  But\n-    // valarrays aren't required to be exception safe.\n-    inline static void\n-    _S_do_it(_Tp* __restrict__ __b, _Tp* __restrict__ __e, const _Tp __t)\n-    { while (__b != __e) new(__b++) _Tp(__t); }\n-  };\n-\n-  template<typename _Tp>\n-  struct _Array_init_ctor<_Tp, true>\n-  {\n-    inline static void\n-    _S_do_it(_Tp* __restrict__ __b, _Tp* __restrict__ __e,  const _Tp __t)\n-    { while (__b != __e) *__b++ = __t; }\n-  };\n-\n-  template<typename _Tp>\n-  inline void\n-  __valarray_fill_construct(_Tp* __restrict__ __b, _Tp* __restrict__ __e,\n-                            const _Tp __t)\n-  {\n-    _Array_init_ctor<_Tp, __is_fundamental<_Tp>::_M_type>::\n-      _S_do_it(__b, __e, __t);\n-  }\n-\n-  //\n-  // copy-construct raw array [__o, *) from plain array [__b, __e)\n-  // We can't just say 'memcpy()'\n-  //\n-  template<typename _Tp, bool>\n-  struct _Array_copy_ctor\n-  {\n-    // Please note that this isn't exception safe.  But\n-    // valarrays aren't required to be exception safe.\n-    inline static void\n-    _S_do_it(const _Tp* __restrict__ __b, const _Tp* __restrict__ __e,\n-             _Tp* __restrict__ __o)\n-    { while (__b != __e) new(__o++) _Tp(*__b++); }\n-  };\n-\n-  template<typename _Tp>\n-  struct _Array_copy_ctor<_Tp, true>\n-  {\n-    inline static void\n-    _S_do_it(const _Tp* __restrict__ __b, const _Tp* __restrict__ __e,\n-             _Tp* __restrict__ __o)\n-    { memcpy(__o, __b, (__e - __b)*sizeof(_Tp)); }\n-  };\n-\n-  template<typename _Tp>\n-  inline void\n-  __valarray_copy_construct(const _Tp* __restrict__ __b,\n-                            const _Tp* __restrict__ __e,\n-                            _Tp* __restrict__ __o)\n-  {\n-    _Array_copy_ctor<_Tp, __is_fundamental<_Tp>::_M_type>::\n-      _S_do_it(__b, __e, __o);\n-  }\n-\n-  // copy-construct raw array [__o, *) from strided array __a[<__n : __s>]\n-  template<typename _Tp>\n-  inline void\n-  __valarray_copy_construct (const _Tp* __restrict__ __a, size_t __n,\n-                             size_t __s, _Tp* __restrict__ __o)\n-  {\n-    if (__is_fundamental<_Tp>::_M_type)\n-      while (__n--) { *__o++ = *__a; __a += __s; }\n-    else\n-      while (__n--) { new(__o++) _Tp(*__a);  __a += __s; }\n-  }\n-\n-  // copy-construct raw array [__o, *) from indexed array __a[__i[<__n>]]\n-  template<typename _Tp>\n-  inline void\n-  __valarray_copy_construct (const _Tp* __restrict__ __a,\n-                             const size_t* __restrict__ __i,\n-                             _Tp* __restrict__ __o, size_t __n)\n-  {\n-    if (__is_fundamental<_Tp>::_M_type)\n-      while (__n--) *__o++ = __a[*__i++];\n-    else\n-      while (__n--) new (__o++) _Tp(__a[*__i++]);\n-  }\n-\n-  // Do the necessary cleanup when we're done with arrays.\n-  template<typename _Tp>\n-  inline void\n-  __valarray_destroy_elements(_Tp* __restrict__ __b, _Tp* __restrict__ __e)\n-  {\n-    if (!__is_fundamental<_Tp>::_M_type)\n-      while (__b != __e) { __b->~_Tp(); ++__b; }\n-  }\n-\n-  \n-  // fill plain array __a[<__n>] with __t\n-  template<typename _Tp>\n-  inline void\n-  __valarray_fill (_Tp* __restrict__ __a, size_t __n, const _Tp& __t)\n-  { while (__n--) *__a++ = __t; }\n-  \n-  // fill strided array __a[<__n-1 : __s>] with __t\n-  template<typename _Tp>\n-  inline void\n-  __valarray_fill (_Tp* __restrict__ __a, size_t __n,\n-                   size_t __s, const _Tp& __t)\n-  { for (size_t __i=0; __i<__n; ++__i, __a+=__s) *__a = __t; }\n-  \n-  // fill indirect array __a[__i[<__n>]] with __i\n-  template<typename _Tp>\n-  inline void\n-  __valarray_fill(_Tp* __restrict__ __a, const size_t* __restrict__ __i,\n-                  size_t __n, const _Tp& __t)\n-  { for (size_t __j=0; __j<__n; ++__j, ++__i) __a[*__i] = __t; }\n-  \n-  // copy plain array __a[<__n>] in __b[<__n>]\n-  // For non-fundamental types, it is wrong to say 'memcpy()'\n-  template<typename _Tp, bool>\n-  struct _Array_copier\n-  {\n-    inline static void\n-    _S_do_it(const _Tp* __restrict__ __a, size_t __n, _Tp* __restrict__ __b)\n-    { while (__n--) *__b++ = *__a++; }      \n-  };\n-  \n-  template<typename _Tp>\n-  struct _Array_copier<_Tp, true>\n-  {\n-    inline static void\n-    _S_do_it(const _Tp* __restrict__ __a, size_t __n, _Tp* __restrict__ __b)\n-    { memcpy (__b, __a, __n * sizeof (_Tp)); }\n-  };\n-\n-  template<typename _Tp>\n-  inline void\n-  __valarray_copy (const _Tp* __restrict__ __a, size_t __n,\n-                   _Tp* __restrict__ __b)\n-  {\n-    _Array_copier<_Tp, __is_fundamental<_Tp>::_M_type>::\n-      _S_do_it(__a, __n, __b);\n-  }\n-\n-// copy strided array __a[<__n : __s>] in plain __b[<__n>]\n-template<typename _Tp>\n-inline void\n-__valarray_copy (const _Tp* __restrict__ __a, size_t __n, size_t __s,\n-                 _Tp* __restrict__ __b)\n-{ for (size_t __i=0; __i<__n; ++__i, ++__b, __a += __s) *__b = *__a; }\n-\n-// copy plain __a[<__n>] in strided __b[<__n : __s>]\n-template<typename _Tp>\n-inline void\n-__valarray_copy (const _Tp* __restrict__ __a, _Tp* __restrict__ __b,\n-                 size_t __n, size_t __s)\n-{ for (size_t __i=0; __i<__n; ++__i, ++__a, __b+=__s) *__b = *__a; }\n-\n-// copy indexed __a[__i[<__n>]] in plain __b[<__n>]\n-template<typename _Tp>\n-inline void\n-__valarray_copy (const _Tp* __restrict__ __a,\n-                 const size_t* __restrict__ __i,\n-                 _Tp* __restrict__ __b, size_t __n)\n-{ for (size_t __j=0; __j<__n; ++__j, ++__b, ++__i) *__b = __a[*__i]; }\n-\n-// copy plain __a[<__n>] in indexed __b[__i[<__n>]]\n-template<typename _Tp>\n-inline void\n-__valarray_copy (const _Tp* __restrict__ __a, size_t __n,\n-                 _Tp* __restrict__ __b, const size_t* __restrict__ __i)\n-{ for (size_t __j=0; __j<__n; ++__j, ++__a, ++__i) __b[*__i] = *__a; }\n-\n-  //\n-  // Compute the sum of elements in range [__f, __l)\n-  // This is a naive algorithm.  It suffers from cancelling.\n-  // In the future try to specialize\n-  // for _Tp = float, double, long double using a more accurate\n-  // algorithm.\n-  //\n-  template<typename _Tp>\n-  inline _Tp\n-  __valarray_sum(const _Tp* __restrict__ __f, const _Tp* __restrict__ __l)\n-  {\n-    _Tp __r = _Tp();\n-    while (__f != __l) __r = __r + *__f++;\n-    return __r;\n-  }\n-\n-  // Compute the product of all elements in range [__f, __l)\n-  template<typename _Tp>\n-  inline _Tp\n-  __valarray_product(const _Tp* __restrict__ __f,\n-                     const _Tp* __restrict__ __l)\n-  {\n-    _Tp __r = _Tp(1);\n-    while (__f != __l) __r = __r * *__f++;\n-    return __r;\n-  }\n-  \n-\n-//\n-// Helper class _Array, first layer of valarray abstraction.\n-// All operations on valarray should be forwarded to this class\n-// whenever possible. -- gdr\n-//\n-\n-template<typename _Tp> struct _Array {\n-    \n-    explicit _Array (size_t);\n-    explicit _Array (_Tp* const __restrict__);\n-    explicit _Array (const valarray<_Tp>&);\n-    _Array (const _Tp* __restrict__, size_t);\n-    \n-    _Tp* begin () const;\n-    \n-    _Tp* const __restrict__ _M_data;\n-};\n-\n-template<typename _Tp>\n-inline void\n-__valarray_fill (_Array<_Tp> __a, size_t __n, const _Tp& __t)\n-{ __valarray_fill (__a._M_data, __n, __t); }\n-\n-template<typename _Tp>\n-inline void\n-__valarray_fill (_Array<_Tp> __a, size_t __n, size_t __s, const _Tp& __t)\n-{ __valarray_fill (__a._M_data, __n, __s, __t); }\n-\n-template<typename _Tp>\n-inline void\n-__valarray_fill (_Array<_Tp> __a, _Array<size_t> __i, \n-                 size_t __n, const _Tp& __t)\n-{ __valarray_fill (__a._M_data, __i._M_data, __n, __t); }\n-\n-template<typename _Tp>\n-inline void\n-__valarray_copy (_Array<_Tp> __a, size_t __n, _Array<_Tp> __b)\n-{ __valarray_copy (__a._M_data, __n, __b._M_data); }\n-\n-template<typename _Tp>\n-inline void\n-__valarray_copy (_Array<_Tp> __a, size_t __n, size_t __s, _Array<_Tp> __b)\n-{ __valarray_copy(__a._M_data, __n, __s, __b._M_data); }\n-\n-template<typename _Tp>\n-inline void\n-__valarray_copy (_Array<_Tp> __a, _Array<_Tp> __b, size_t __n, size_t __s)\n-{ __valarray_copy (__a._M_data, __b._M_data, __n, __s); }\n-\n-template<typename _Tp>\n-inline void\n-__valarray_copy (_Array<_Tp> __a, _Array<size_t> __i, \n-                 _Array<_Tp> __b, size_t __n)\n-{ __valarray_copy (__a._M_data, __i._M_data, __b._M_data, __n); }\n-\n-template<typename _Tp>\n-inline void\n-__valarray_copy (_Array<_Tp> __a, size_t __n, _Array<_Tp> __b, \n-                 _Array<size_t> __i)\n-{ __valarray_copy (__a._M_data, __n, __b._M_data, __i._M_data); }\n-\n-template<typename _Tp>\n-inline\n-_Array<_Tp>::_Array (size_t __n)\n-  : _M_data (__valarray_get_storage<_Tp>(__n))\n-{ __valarray_default_construct(_M_data, _M_data + __n); }\n-\n-template<typename _Tp>\n-inline\n-_Array<_Tp>::_Array (_Tp* const __restrict__ __p) : _M_data (__p) {}\n-\n-template<typename _Tp>\n-inline _Array<_Tp>::_Array (const valarray<_Tp>& __v) \n-        : _M_data (__v._M_data) {}\n-\n-template<typename _Tp>\n-inline\n-_Array<_Tp>::_Array (const _Tp* __restrict__ __b, size_t __s) \n-  : _M_data (__valarray_get_storage<_Tp>(__s ))\n-{ __valarray_copy_construct(__b, __s, _M_data); }\n-\n-template<typename _Tp>\n-inline _Tp*\n-_Array<_Tp>::begin () const\n-{ return _M_data; }\n-\n-#define _DEFINE_ARRAY_FUNCTION(_Op, _Name)\t\t\t\t\\\n-template<typename _Tp>\t\t\t\t\t\t\t\\\n-inline void\t\t\t\t\t\t\t\t\\\n-_Array_augmented_##_Name (_Array<_Tp> __a, size_t __n, const _Tp& __t)\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-    for (_Tp* __p=__a._M_data; __p<__a._M_data+__n; ++__p) \t\t\\\n-      *__p _Op##= __t;\t\t\t\t\t\t\t\\\n-}\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-template<typename _Tp>\t\t\t\t\t\t\t\\\n-inline void\t\t\t\t\t\t\t\t\\\n-_Array_augmented_##_Name (_Array<_Tp> __a, size_t __n, _Array<_Tp> __b)\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-    _Tp* __p (__a._M_data);\t\t\t\t\t\t\\\n-    for (_Tp* __q=__b._M_data; __q<__b._M_data+__n; ++__p, ++__q) \t\\\n-      *__p _Op##= *__q;\t\t\t\t\t\t\t\\\n-}\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-template<typename _Tp, class _Dom>\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\t\\\n-_Array_augmented_##_Name (_Array<_Tp> __a, \t\t\t\t\\\n-                         const _Expr<_Dom,_Tp>& __e, size_t __n)\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-    _Tp* __p (__a._M_data);\t\t\t\t\t\t\\\n-    for (size_t __i=0; __i<__n; ++__i, ++__p) *__p _Op##= __e[__i];\t\\\n-}\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-template<typename _Tp>\t\t\t\t\t\t\t\\\n-inline void\t\t\t\t\t\t\t\t\\\n-_Array_augmented_##_Name (_Array<_Tp> __a, size_t __n, size_t __s, \t\\\n-\t\t\t _Array<_Tp> __b)\t\t\t\t\\\n-{\t\t\t\t\t       \t\t\t\t\\\n-    _Tp* __q (__b._M_data);\t\t\t\t\t\t\\\n-    for (_Tp* __p=__a._M_data; __p<__a._M_data+__s*__n; __p+=__s, ++__q) \\\n-      *__p _Op##= *__q;\t\t\t\t\t\t\t\\\n-}\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-template<typename _Tp>\t\t\t\t\t\t\t\\\n-inline void\t\t\t\t\t\t\t\t\\\n-_Array_augmented_##_Name (_Array<_Tp> __a, _Array<_Tp> __b, \t\t\\\n-\t\t\t size_t __n, size_t __s)\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-    _Tp* __q (__b._M_data);\t\t\t\t\t\t\\\n-    for (_Tp* __p=__a._M_data; __p<__a._M_data+__n; ++__p, __q+=__s)\t\\\n-      *__p _Op##= *__q;\t\t\t\t\t\t\t\\\n-}\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-template<typename _Tp, class _Dom>\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\t\\\n-_Array_augmented_##_Name (_Array<_Tp> __a, size_t __s,\t\t\t\\\n-                          const _Expr<_Dom,_Tp>& __e, size_t __n)\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-    _Tp* __p (__a._M_data);\t\t\t\t\t\t\\\n-    for (size_t __i=0; __i<__n; ++__i, __p+=__s) *__p _Op##= __e[__i];\t\\\n-}\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-template<typename _Tp>\t\t\t\t\t\t\t\\\n-inline void\t\t\t\t\t\t\t\t\\\n-_Array_augmented_##_Name (_Array<_Tp> __a, _Array<size_t> __i,\t\t\\\n-                          _Array<_Tp> __b, size_t __n)\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-    _Tp* __q (__b._M_data);\t\t\t\t\t\t\\\n-    for (size_t* __j=__i._M_data; __j<__i._M_data+__n; ++__j, ++__q)\t\\\n-        __a._M_data[*__j] _Op##= *__q;\t\t\t\t\t\\\n-}\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-template<typename _Tp>\t\t\t\t\t\t\t\\\n-inline void\t\t\t\t\t\t\t\t\\\n-_Array_augmented_##_Name (_Array<_Tp> __a, size_t __n,\t\t\t\\\n-                          _Array<_Tp> __b, _Array<size_t> __i)\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-    _Tp* __p (__a._M_data);\t\t\t\t\t\t\\\n-    for (size_t* __j=__i._M_data; __j<__i._M_data+__n; ++__j, ++__p)\t\\\n-        *__p _Op##= __b._M_data[*__j];\t\t\t\t\t\\\n-}\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-template<typename _Tp, class _Dom>\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\t\\\n-_Array_augmented_##_Name (_Array<_Tp> __a, _Array<size_t> __i,\t\t\\\n-                          const _Expr<_Dom, _Tp>& __e, size_t __n)\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-    size_t* __j (__i._M_data);\t\t\t\t\t\t\\\n-    for (size_t __k=0; __k<__n; ++__k, ++__j) \t\t\t\t\\\n-      __a._M_data[*__j] _Op##= __e[__k];\t\t\t\t\\\n-}\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-template<typename _Tp>\t\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\t\\\n-_Array_augmented_##_Name (_Array<_Tp> __a, _Array<bool> __m,\t\t\\\n-                          _Array<_Tp> __b, size_t __n)\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-    bool* ok (__m._M_data);\t\t\t\t\t\t\\\n-    _Tp* __p (__a._M_data);\t\t\t\t\t\t\\\n-    for (_Tp* __q=__b._M_data; __q<__b._M_data+__n; ++__q, ++ok, ++__p) { \\\n-        while (! *ok) {\t\t\t\t\t\t\t\\\n-            ++ok;\t\t\t\t\t\t\t\\\n-            ++__p;\t\t\t\t\t\t\t\\\n-        }\t\t\t\t\t\t\t\t\\\n-        *__p _Op##= *__q;\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-}\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-template<typename _Tp>\t\t\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\t\\\n-_Array_augmented_##_Name (_Array<_Tp> __a, size_t __n,\t\t\t\\\n-                         _Array<_Tp> __b, _Array<bool> __m)\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-    bool* ok (__m._M_data);\t\t\t\t\t\t\\\n-    _Tp* __q (__b._M_data);\t\t\t\t\t\t\\\n-    for (_Tp* __p=__a._M_data; __p<__a._M_data+__n; ++__p, ++ok, ++__q) { \\\n-        while (! *ok) {\t\t\t\t\t\t\t\\\n-            ++ok;\t\t\t\t\t\t\t\\\n-            ++__q;\t\t\t\t\t\t\t\\\n-        }\t\t\t\t\t\t\t\t\\\n-        *__p _Op##= *__q;\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-}\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-template<typename _Tp, class _Dom>\t\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\t\\\n-_Array_augmented_##_Name (_Array<_Tp> __a, _Array<bool> __m,\t\t\\\n-                          const _Expr<_Dom, _Tp>& __e, size_t __n)\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-    bool* ok(__m._M_data);\t\t\t\t\t\t\\\n-    _Tp* __p (__a._M_data);\t\t\t\t\t\t\\\n-    for (size_t __i=0; __i<__n; ++__i, ++ok, ++__p) {\t\t\t\\\n-        while (! *ok) {\t\t\t\t\t\t\t\\\n-            ++ok;\t\t\t\t\t\t\t\\\n-            ++__p;\t\t\t\t\t\t\t\\\n-        }\t\t\t\t\t\t\t\t\\\n-        *__p _Op##= __e[__i];\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n-}\n-\n-_DEFINE_ARRAY_FUNCTION(+, plus)\n-_DEFINE_ARRAY_FUNCTION(-, minus)\n-_DEFINE_ARRAY_FUNCTION(*, multiplies)\n-_DEFINE_ARRAY_FUNCTION(/, divides)\n-_DEFINE_ARRAY_FUNCTION(%, modulus)\n-_DEFINE_ARRAY_FUNCTION(^, xor)\n-_DEFINE_ARRAY_FUNCTION(|, or)\n-_DEFINE_ARRAY_FUNCTION(&, and)    \n-_DEFINE_ARRAY_FUNCTION(<<, shift_left)\n-_DEFINE_ARRAY_FUNCTION(>>, shift_right)\n-\n-#undef _DEFINE_ARRAY_FUNCTION    \n-\n-} // extern \"C++\"\n-    \n-#ifdef _G_NO_VALARRAY_TEMPLATE_EXPORT\n-# define export \n-# include <std/valarray_array.tcc>    \n-#endif\n-           \n-#endif // __VALARRAY_ARRAY__\n-\n-// Local Variables:\n-// mode:c++\n-// End:"}, {"sha": "bd6692571fdd551bac0e7b8f116db14466f8b23c", "filename": "libstdc++/std/valarray_array.tcc", "status": "removed", "additions": 0, "deletions": 130, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fvalarray_array.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fvalarray_array.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fvalarray_array.tcc?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,130 +0,0 @@\n-// The template and inlines for the -*- C++ -*- internal _Array helper class.\n-\n-// Copyright (C) 1997-1999 Cygnus Solutions\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@DPTMaths.ENS-Cachan.Fr>\n-\n-#ifndef __VALARRAY_ARRAY_TCC__\n-#define __VALARRAY_ARRAY_TCC__\n-\n-extern \"C++\" {\n-\n-export template<typename _Tp>\n-void\n-__valarray_fill (_Array<_Tp> __a, size_t __n, _Array<bool> __m, const _Tp& __t)\n-{\n-    _Tp* __p = __a._M_data;\n-    bool* __ok (__m._M_data);\n-    for (size_t __i=0; __i<__n; ++__i, ++__ok, ++__p) {\n-        while (! *__ok) {\n-            ++__ok;\n-            ++__p;\n-        }\n-        *__p = __t;\n-    }\n-}\n-\n-export template<typename _Tp>\n-void\n-__valarray_copy (_Array<_Tp> __a, _Array<bool> __m, _Array<_Tp> __b, size_t __n)\n-{\n-    _Tp* __p (__a._M_data);\n-    bool* __ok (__m._M_data);\n-    for (_Tp* __q=__b._M_data; __q<__b._M_data+__n; ++__q, ++__ok, ++__p) {\n-        while (! *__ok) {\n-            ++__ok;\n-            ++__p;\n-        }\n-        *__q = *__p;\n-    }\n-}\n-\n-export template<typename _Tp>\n-void\n-__valarray_copy (_Array<_Tp> __a, size_t __n, _Array<_Tp> __b, _Array<bool> __m)\n-{\n-    _Tp* __q (__b._M_data);\n-    bool* __ok (__m._M_data);\n-    for (_Tp* __p=__a._M_data; __p<__a._M_data+__n; ++__p, ++__ok, ++__q) {\n-        while (! *__ok) {\n-            ++__ok;\n-            ++__q;\n-        }\n-        *__q = *__p;\n-    }\n-}\n-\n-export template<typename _Tp, class _Dom>\n-void\n-__valarray_copy (const _Expr<_Dom, _Tp>& __e, size_t __n, _Array<_Tp> __a)\n-{\n-    _Tp* __p (__a._M_data);\n-    for (size_t __i=0; __i<__n; ++__i, ++__p) *__p = __e[__i];\n-}\n-\n-export template<typename _Tp, class _Dom>\n-void\n-__valarray_copy (const _Expr<_Dom, _Tp>& __e, size_t __n, \n-                 _Array<_Tp> __a, size_t __s)\n-{\n-    _Tp* __p (__a._M_data);\n-    for (size_t __i=0; __i<__n; ++__i, __p+=__s) *__p = __e[__i];\n-}\n-\n-export template<typename _Tp, class _Dom>\n-void\n-__valarray_copy (const _Expr<_Dom, _Tp>& __e, size_t __n, \n-                 _Array<_Tp> __a, _Array<size_t> __i)\n-{\n-    size_t* __j (__i._M_data);\n-    for (size_t __k=0; __k<__n; ++__k, ++__j) __a._M_data[*__j] = __e[__k];\n-}\n-\n-export template<typename _Tp, class _Dom>\n-void\n-__valarray_copy (const _Expr<_Dom, _Tp>& __e, size_t __n, \n-                 _Array<_Tp> __a, _Array<bool> __m)\n-{\n-    bool* __ok (__m._M_data);\n-    _Tp* __p (__a._M_data);\n-    for (size_t __i=0; __i<__n; ++__i, ++__ok, ++__p) {\n-        while (! *__ok) {\n-            ++__ok;\n-            ++__p;\n-        }\n-        *__p = __e[__i];\n-    }\n-}\n-\n-} // extern \"C++\"\n-\n-#endif // __VALARRAY_ARRAY_TCC__\n-\n-// Local Variables:\n-// mode:c++\n-// End:"}, {"sha": "9ad026587070f98e7c5b021da07f5488c71a56aa", "filename": "libstdc++/std/valarray_meta.h", "status": "removed", "additions": 0, "deletions": 1046, "changes": 1046, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fvalarray_meta.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstd%2Fvalarray_meta.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fvalarray_meta.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,1046 +0,0 @@\n-// The template and inlines for the -*- C++ -*- internal _Meta class.\n-\n-// Copyright (C) 1997-1999 Cygnus Solutions\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-// Written by Gabriel Dos Reis <Gabriel.Dos-Reis@cmla.ens-cachan.fr>\n-\n-#ifndef _CPP_VALARRAY_META_H\n-#define _CPP_VALARRAY_META_H 1\n-\n-//\n-// Implementing a loosened valarray return value is tricky.\n-// First we need to meet 26.3.1/3: we should not add more than\n-// two levels of template nesting. Therefore we resort to template\n-// template to \"flatten\" loosened return value types.\n-// At some point we use partial specialization to remove one level\n-// template nesting due to _Expr<>\n-//\n-    \n-\n-// This class is NOT defined. It doesn't need to.\n-template<typename _Tp1, typename _Tp2> class _Constant;\n-\n-//\n-// Unary function application closure.\n-//\n-template<class _Dom> class _UnFunBase {\n-public:\n-    typedef typename _Dom::value_type value_type;\n-    typedef value_type _Vt;\n-    \n-    _UnFunBase (const _Dom& __e, _Vt __f(_Vt))\n-            : _M_expr(__e), _M_func(__f) {}\n-    \n-    _Vt operator[] (size_t __i) const { return _M_func(_M_expr[__i]); }\n-    size_t size () const { return _M_expr.size(); }\n-    \n-private:\n-    const _Dom& _M_expr;\n-    _Vt (*_M_func)(_Vt);\n-};\n-\n-template<template<class, class> class _Meta, class _Dom> class _UnFunClos;\n-\n-template<class _Dom>\n-struct _UnFunClos<_Expr,_Dom> : _UnFunBase<_Dom> {\n-    typedef _UnFunBase<_Dom> _Base;\n-    typedef typename _Base::value_type value_type;\n-    \n-    _UnFunClos (const _Dom& __e, value_type __f(value_type))\n-            : _Base (__e, __f) {}\n-};\n-\n-template<typename _Tp>\n-struct _UnFunClos<_ValArray,_Tp> : _UnFunBase<valarray<_Tp> > {\n-    typedef _UnFunBase<valarray<_Tp> > _Base;\n-    typedef typename _Base::value_type value_type;\n-    \n-    _UnFunClos (const valarray<_Tp>& __v, _Tp __f(_Tp))\n-            : _Base (__v, __f) {}\n-};\n-\n-//\n-// Binary function application closure.\n-//\n-template<template<class, class> class _Meta1,\n-    template<class, class> class Meta2,\n-    class _Dom1, class _Dom2> class _BinFunClos;\n-\n-template<class _Dom1, class _Dom2> class _BinFunBase {\n-public:\n-    typedef typename _Dom1::value_type value_type;\n-    typedef value_type _Vt;\n-    \n-    _BinFunBase (const _Dom1& __e1, const _Dom2& __e2,\n-                 _Vt __f (_Vt, _Vt))\n-            : _M_expr1 (__e1), _M_expr2 (__e2), _M_func (__f) {}\n-    \n-    value_type operator[] (size_t __i) const\n-    { return _M_func (_M_expr1[__i], _M_expr2[__i]); }\n-    size_t size () const { return _M_expr1.size (); }\n-    \n-private:\n-    const _Dom1& _M_expr1;\n-    const _Dom2& _M_expr2;\n-    _Vt (*_M_func)(_Vt, _Vt);\n-};\n-\n-template<class _Dom> class _BinFunBase1 {\n-public:\n-    typedef typename _Dom::value_type value_type ;\n-    typedef value_type _Vt;\n-    \n-    _BinFunBase1 (const _Vt& __c, const _Dom& __e, _Vt __f(_Vt, _Vt))\n-            : _M_expr1 (__c), _M_expr2 (__e), _M_func (__f) {}\n-    \n-    value_type operator[] (size_t __i) const\n-    { return _M_func (_M_expr1, _M_expr2[__i]); }\n-    size_t size () const { return _M_expr2.size (); }\n-    \n-private:\n-    const _Vt& _M_expr1;\n-    const _Dom& _M_expr2;\n-    _Vt (*_M_func)(_Vt, _Vt);\n-};\n-\n-template<class _Dom> class _BinFunBase2 {\n-public:\n-    typedef typename _Dom::value_type value_type;\n-    typedef value_type _Vt;\n-    \n-    _BinFunBase2 (const _Dom& __e, const _Vt& __c, _Vt __f(_Vt, _Vt))\n-            : _M_expr1 (__e), _M_expr2 (__c), _M_func (__f) {}\n-    \n-    value_type operator[] (size_t __i) const\n-    { return _M_func (_M_expr1[__i], _M_expr2); }\n-    size_t size () const { return _M_expr1.size (); }\n-    \n-private:\n-    const _Dom& _M_expr1;\n-    const _Vt& _M_expr2;\n-    _Vt (*_M_func)(_Vt, _Vt);\n-};\n-\n-template<class _Dom1, class _Dom2>\n-struct _BinFunClos<_Expr,_Expr,_Dom1,_Dom2> : _BinFunBase<_Dom1,_Dom2> {\n-    typedef _BinFunBase<_Dom1,_Dom2> _Base;\n-    typedef typename _Base::value_type value_type;\n-    typedef value_type _Tp;\n-    \n-    _BinFunClos (const _Dom1& __e1, const _Dom2& __e2,\n-                 _Tp __f(_Tp, _Tp))\n-            : _Base (__e1, __e2, __f) {}\n-};\n-\n-template<typename _Tp>\n-struct _BinFunClos<_ValArray,_ValArray,_Tp,_Tp>\n-    : _BinFunBase<valarray<_Tp>, valarray<_Tp> > {\n-    typedef _BinFunBase<valarray<_Tp>, valarray<_Tp> > _Base;\n-    typedef _Tp value_type;\n-    \n-    _BinFunClos (const valarray<_Tp>& __v, const valarray<_Tp>& __w,\n-                 _Tp __f(_Tp, _Tp))\n-            : _Base (__v, __w, __f) {}\n-};\n-\n-template<class _Dom>\n-struct _BinFunClos<_Expr,_ValArray,_Dom,typename _Dom::value_type>\n-    : _BinFunBase<_Dom,valarray<typename _Dom::value_type> > {\n-    typedef typename _Dom::value_type _Tp;\n-    typedef _BinFunBase<_Dom,valarray<_Tp> > _Base;\n-    typedef _Tp value_type;\n-    \n-    _BinFunClos (const _Dom& __e, const valarray<_Tp>& __v,\n-                 _Tp __f(_Tp, _Tp))\n-            : _Base (__e, __v, __f) {}\n-};\n-\n-template<class _Dom>\n-struct _BinFunClos<_ValArray,_Expr,typename _Dom::value_type,_Dom>\n-    : _BinFunBase<valarray<typename _Dom::value_type>,_Dom> {\n-    typedef typename _Dom::value_type _Tp;\n-    typedef _BinFunBase<_Dom,valarray<_Tp> > _Base;\n-    typedef _Tp value_type;\n-    \n-    _BinFunClos (const valarray<_Tp>& __v, const _Dom& __e,\n-                 _Tp __f(_Tp, _Tp))\n-            : _Base (__v, __e, __f) {}\n-};\n-\n-template<class _Dom>\n-struct _BinFunClos<_Expr,_Constant,_Dom,typename _Dom::value_type>\n-    : _BinFunBase2<_Dom> {\n-    typedef typename _Dom::value_type _Tp;\n-    typedef _Tp value_type;\n-    typedef _BinFunBase2<_Dom> _Base;\n-    \n-    _BinFunClos (const _Dom& __e, const _Tp& __t, _Tp __f (_Tp, _Tp))\n-            : _Base (__e, __t, __f) {}\n-};\n-\n-template<class _Dom>\n-struct _BinFunClos<_Constant,_Expr,_Dom,typename _Dom::value_type>\n-    : _BinFunBase1<_Dom> {\n-    typedef typename _Dom::value_type _Tp;\n-    typedef _Tp value_type;\n-    typedef _BinFunBase1<_Dom> _Base;\n-    \n-    _BinFunClos (const _Tp& __t, const _Dom& __e, _Tp __f (_Tp, _Tp))\n-            : _Base (__t, __e, __f) {}\n-};\n-\n-template<typename _Tp>\n-struct _BinFunClos<_ValArray,_Constant,_Tp,_Tp>\n-    : _BinFunBase2<valarray<_Tp> > {\n-    typedef _BinFunBase2<valarray<_Tp> > _Base;\n-    typedef _Tp value_type;\n-    \n-    _BinFunClos (const valarray<_Tp>& __v, const _Tp& __t,\n-                 _Tp __f(_Tp, _Tp))\n-            : _Base (__v, __t, __f) {}\n-};\n-\n-template<typename _Tp>\n-struct _BinFunClos<_Constant,_ValArray,_Tp,_Tp>\n-    : _BinFunBase1<valarray<_Tp> > {\n-    typedef _BinFunBase1<valarray<_Tp> > _Base;\n-    typedef _Tp value_type;\n-    \n-    _BinFunClos (const _Tp& __t, const valarray<_Tp>& __v,\n-                 _Tp __f (_Tp, _Tp))\n-            : _Base (__t, __v, __f) {}\n-};\n-\n-//\n-// Apply function taking a value/const reference closure\n-//\n-\n-template<typename _Dom, typename _Arg> class _FunBase {\n-public:\n-    typedef typename _Dom::value_type value_type;\n-    \n-    _FunBase (const _Dom& __e, value_type __f(_Arg))\n-            : _M_expr (__e), _M_func (__f) {}\n-    \n-    value_type operator[] (size_t __i) const\n-    { return _M_func (_M_expr[__i]); }\n-    size_t size() const { return _M_expr.size ();}\n-    \n-private:\n-    const _Dom& _M_expr;\n-    value_type (*_M_func)(_Arg);\n-};\n-\n-template<class _Dom>\n-struct _ValFunClos<_Expr,_Dom>\n-    : _FunBase<_Dom, typename _Dom::value_type> {\n-    typedef _FunBase<_Dom, typename _Dom::value_type> _Base;\n-    typedef typename _Base::value_type value_type;\n-    typedef value_type _Tp;\n-    \n-    _ValFunClos (const _Dom& __e, _Tp __f (_Tp)) : _Base (__e, __f) {}\n-};\n-\n-template<typename _Tp>\n-struct _ValFunClos<_ValArray,_Tp>\n-    : _FunBase<valarray<_Tp>, _Tp> {\n-    typedef _FunBase<valarray<_Tp>, _Tp> _Base;\n-    typedef _Tp value_type;\n-    \n-    _ValFunClos (const valarray<_Tp>& __v, _Tp __f(_Tp))\n-            : _Base (__v, __f) {}\n-};\n-\n-template<class _Dom>\n-struct _RefFunClos<_Expr,_Dom> :\n-    _FunBase<_Dom, const typename _Dom::value_type&> {\n-    typedef _FunBase<_Dom, const typename _Dom::value_type&> _Base;\n-    typedef typename _Base::value_type value_type;\n-    typedef value_type _Tp;\n-    \n-    _RefFunClos (const _Dom& __e, _Tp __f (const _Tp&))\n-            : _Base (__e, __f) {}\n-};\n-\n-template<typename _Tp>\n-struct _RefFunClos<_ValArray,_Tp>\n-    : _FunBase<valarray<_Tp>, const _Tp&> {\n-    typedef _FunBase<valarray<_Tp>, const _Tp&> _Base;\n-    typedef _Tp value_type;\n-    \n-    _RefFunClos (const valarray<_Tp>& __v, _Tp __f(const _Tp&))\n-            : _Base (__v, __f) {}\n-};\n-\n-//\n-// Unary expression closure.\n-//\n-\n-template<template<class> class _Oper, typename _Arg>\n-class _UnBase {\n-public:\n-    typedef _Oper<typename _Arg::value_type> _Op;\n-    typedef typename _Op::result_type value_type;\n-    \n-    _UnBase (const _Arg& __e) : _M_expr(__e) {}\n-    value_type operator[] (size_t) const;\n-    size_t size () const { return _M_expr.size (); }\n-    \n-private:\n-    const _Arg& _M_expr;\n-};\n-\n-template<template<class> class _Oper, typename _Arg>\n-inline typename _UnBase<_Oper, _Arg>::value_type\n-_UnBase<_Oper, _Arg>::operator[] (size_t __i) const\n-{ return _Op() (_M_expr[__i]); }\n-\n-template<template<class> class _Oper, class _Dom>\n-struct _UnClos<_Oper, _Expr, _Dom> :  _UnBase<_Oper, _Dom> {\n-    typedef _Dom _Arg;\n-    typedef _UnBase<_Oper, _Dom> _Base;\n-    typedef typename _Base::value_type value_type;\n-    \n-    _UnClos (const _Arg& __e) : _Base(__e) {}\n-};\n-\n-template<template<class> class _Oper, typename _Tp>\n-struct _UnClos<_Oper, _ValArray, _Tp> : _UnBase<_Oper, valarray<_Tp> > {\n-    typedef valarray<_Tp> _Arg;\n-    typedef _UnBase<_Oper, valarray<_Tp> > _Base;\n-    typedef typename _Base::value_type value_type;\n-    \n-    _UnClos (const _Arg& __e) : _Base(__e) {}\n-};\n-\n-\n-//\n-// Binary expression closure.\n-//\n-\n-template<template<class> class _Oper, typename _FirstArg, typename _SecondArg>\n-class _BinBase {\n-public:\n-    typedef _Oper<typename _FirstArg::value_type> _Op;\n-    typedef typename _Op::result_type value_type;\n-    \n-    _BinBase (const _FirstArg& __e1, const _SecondArg& __e2)\n-            : _M_expr1 (__e1), _M_expr2 (__e2) {}\n-    value_type operator[] (size_t) const;\n-    size_t size () const { return _M_expr1.size (); }\n-    \n-private:\n-    const _FirstArg& _M_expr1;\n-    const _SecondArg& _M_expr2;\n-};\n-\n-template<template<class> class _Oper, typename _FirstArg, typename _SecondArg>\n-inline typename _BinBase<_Oper,_FirstArg,_SecondArg>::value_type\n-_BinBase<_Oper,_FirstArg,_SecondArg>::operator[] (size_t __i) const\n-{ return _Op() (_M_expr1[__i], _M_expr2[__i]); }\n-\n-\n-template<template<class> class _Oper, class _Clos>\n-class _BinBase2 {\n-public:\n-        typedef typename _Clos::value_type _Vt;\n-    typedef _Oper<_Vt> _Op;\n-    typedef typename _Op::result_type value_type;\n-    \n-    _BinBase2 (const _Clos& __e, const _Vt& __t)\n-            : _M_expr1 (__e), _M_expr2 (__t) {}\n-    value_type operator[] (size_t) const;\n-    size_t size () const { return _M_expr1.size (); }\n-    \n-private:\n-    const _Clos& _M_expr1;\n-    const _Vt& _M_expr2;\n-};\n-\n-template<template<class> class _Oper, class _Clos>\n-inline typename _BinBase2<_Oper,_Clos>::value_type\n-_BinBase2<_Oper,_Clos>::operator[] (size_t __i) const\n-{ return _Op() (_M_expr1[__i], _M_expr2); }\n-\n-\n-template<template<class> class _Oper, class _Clos>\n-class _BinBase1 {\n-public:\n-    typedef typename _Clos::value_type _Vt;\n-    typedef _Oper<_Vt> _Op;\n-    typedef typename _Op::result_type value_type;\n-    \n-    _BinBase1 (const _Vt& __t, const _Clos& __e)\n-            : _M_expr1 (__t), _M_expr2 (__e) {}\n-    value_type operator[] (size_t) const;\n-    size_t size () const { return _M_expr2.size (); }\n-    \n-private:\n-    const _Vt& _M_expr1;\n-    const _Clos& _M_expr2;\n-};\n-\n-template<template<class> class _Oper, class _Clos>\n-inline typename\n-_BinBase1<_Oper,_Clos>::value_type\n-_BinBase1<_Oper,_Clos>:: operator[] (size_t __i) const\n-{ return _Op() (_M_expr1, _M_expr2[__i]); }\n-\n-\n-template<template<class> class _Oper, class _Dom1, class _Dom2>\n-struct  _BinClos<_Oper, _Expr, _Expr, _Dom1, _Dom2>\n-    : _BinBase<_Oper,_Dom1,_Dom2> {\n-    typedef _BinBase<_Oper,_Dom1,_Dom2> _Base;\n-    typedef typename _Base::value_type value_type;\n-    \n-    _BinClos(const _Dom1& __e1, const _Dom2& __e2) : _Base(__e1, __e2) {}\n-};\n-\n-template<template<class> class _Oper, typename _Tp>\n-struct _BinClos<_Oper,_ValArray,_ValArray,_Tp,_Tp>\n-    : _BinBase<_Oper,valarray<_Tp>,valarray<_Tp> > {\n-    typedef _BinBase<_Oper,valarray<_Tp>,valarray<_Tp> > _Base;\n-    typedef _Tp value_type;\n-    \n-    _BinClos (const valarray<_Tp>& __v, const valarray<_Tp>& __w)\n-            : _Base (__v, __w) {}\n-};\n-\n-template<template<class> class _Oper, class _Dom>\n-struct  _BinClos<_Oper,_Expr,_ValArray,_Dom,typename _Dom::value_type>\n-    : _BinBase<_Oper,_Dom,valarray<typename _Dom::value_type> > {\n-        typedef typename _Dom::value_type _Tp;\n-    typedef _BinBase<_Oper,_Dom,valarray<_Tp> > _Base;\n-    typedef typename _Base::value_type value_type;\n-    \n-    _BinClos(const _Dom& __e1, const valarray<_Tp>& __e2)\n-            : _Base (__e1, __e2) {}\n-};\n-\n-template<template<class> class _Oper, class _Dom>\n-struct  _BinClos<_Oper,_ValArray,_Expr,typename _Dom::value_type,_Dom>\n-    : _BinBase<_Oper,valarray<typename _Dom::value_type>,_Dom> {\n-    typedef typename _Dom::value_type _Tp;\n-    typedef _BinBase<_Oper,valarray<_Tp>,_Dom> _Base;\n-    typedef typename _Base::value_type value_type;\n-    \n-    _BinClos (const valarray<_Tp>& __e1, const _Dom& __e2)\n-            : _Base (__e1, __e2) {}\n-};\n-\n-template<template<class> class _Oper, class _Dom>\n-struct _BinClos<_Oper,_Expr,_Constant,_Dom,typename _Dom::value_type>\n-    : _BinBase2<_Oper,_Dom> {\n-    typedef typename _Dom::value_type _Tp;\n-    typedef _BinBase2<_Oper,_Dom> _Base;\n-    typedef typename _Base::value_type value_type;\n-    \n-    _BinClos (const _Dom& __e1, const _Tp& __e2) : _Base (__e1, __e2) {}\n-};\n-\n-template<template<class> class _Oper, class _Dom>\n-struct _BinClos<_Oper,_Constant,_Expr,typename _Dom::value_type,_Dom>\n-    : _BinBase1<_Oper,_Dom> {\n-    typedef typename _Dom::value_type _Tp;\n-    typedef _BinBase1<_Oper,_Dom> _Base;\n-    typedef typename _Base::value_type value_type;\n-    \n-    _BinClos (const _Tp& __e1, const _Dom& __e2) : _Base (__e1, __e2) {}\n-};\n-\n-template<template<class> class _Oper, typename _Tp>\n-struct _BinClos<_Oper,_ValArray,_Constant,_Tp,_Tp>\n-    : _BinBase2<_Oper,valarray<_Tp> > {\n-    typedef _BinBase2<_Oper,valarray<_Tp> > _Base;\n-    typedef typename _Base::value_type value_type;\n-    \n-    _BinClos (const valarray<_Tp>& __v, const _Tp& __t)\n-            : _Base (__v, __t) {}\n-};\n-\n-template<template<class> class _Oper, typename _Tp>\n-struct _BinClos<_Oper,_Constant,_ValArray,_Tp,_Tp>\n-    : _BinBase1<_Oper,valarray<_Tp> > {\n-    typedef _BinBase1<_Oper,valarray<_Tp> > _Base;\n-    typedef typename _Base::value_type value_type;\n-    \n-    _BinClos (const _Tp& __t, const valarray<_Tp>& __v)\n-            : _Base (__t, __v) {}\n-};\n-\n-\n-//\n-// slice_array closure.\n-//\n-template<typename _Dom>  class _SBase {\n-public:\n-    typedef typename _Dom::value_type value_type;\n-    \n-    _SBase (const _Dom& __e, const slice& __s)\n-            : _M_expr (__e), _M_slice (__s) {}\n-    value_type operator[] (size_t __i) const\n-    { return _M_expr[_M_slice.start () + __i * _M_slice.stride ()]; }\n-    size_t size() const { return _M_slice.size (); }\n-    \n-private:\n-    const _Dom& _M_expr;\n-    const slice& _M_slice;\n-};\n-\n-template<typename _Tp> class _SBase<_Array<_Tp> > {\n-public:\n-    typedef _Tp value_type;\n-    \n-    _SBase (_Array<_Tp> __a, const slice& __s)\n-            : _M_array (__a._M_data+__s.start()), _M_size (__s.size()),\n-              _M_stride (__s.stride()) {}\n-    value_type operator[] (size_t __i) const\n-    { return _M_array._M_data[__i * _M_stride]; }\n-    size_t size() const { return _M_size; }\n-    \n-private:\n-    const _Array<_Tp> _M_array;\n-    const size_t _M_size;\n-    const size_t _M_stride;\n-};\n-\n-template<class _Dom> struct  _SClos<_Expr,_Dom> : _SBase<_Dom> {\n-    typedef _SBase<_Dom> _Base;\n-    typedef typename _Base::value_type value_type;\n-    \n-    _SClos (const _Dom& __e, const slice& __s) : _Base (__e, __s) {}\n-};\n-\n-template<typename _Tp>\n-struct _SClos<_ValArray,_Tp> : _SBase<_Array<_Tp> > {\n-    typedef  _SBase<_Array<_Tp> > _Base;\n-    typedef _Tp value_type;\n-    \n-    _SClos (_Array<_Tp> __a, const slice& __s) : _Base (__a, __s) {}\n-};\n-\n-//\n-// gslice_array closure.\n-//\n-template<class _Dom> class _GBase {\n-public:\n-    typedef typename _Dom::value_type value_type;\n-    \n-    _GBase (const _Dom& __e, const valarray<size_t>& __i)\n-            : _M_expr (__e), _M_index(__i) {}\n-    value_type operator[] (size_t __i) const\n-    { return _M_expr[_M_index[__i]]; }\n-    size_t size () const { return _M_index.size(); }\n-    \n-private:\n-    const _Dom&\t _M_expr;\n-    const valarray<size_t>& _M_index;\n-};\n-\n-template<typename _Tp> class _GBase<_Array<_Tp> > {\n-public:\n-    typedef _Tp value_type;\n-    \n-    _GBase (_Array<_Tp> __a, const valarray<size_t>& __i)\n-            : _M_array (__a), _M_index(__i) {}\n-    value_type operator[] (size_t __i) const\n-    { return _M_array._M_data[_M_index[__i]]; }\n-    size_t size () const { return _M_index.size(); }\n-    \n-private:\n-    const _Array<_Tp>     _M_array;\n-    const valarray<size_t>& _M_index;\n-};\n-\n-template<class _Dom> struct _GClos<_Expr,_Dom> : _GBase<_Dom> {\n-    typedef _GBase<_Dom> _Base;\n-    typedef typename _Base::value_type value_type;\n-\n-    _GClos (const _Dom& __e, const valarray<size_t>& __i)\n-            : _Base (__e, __i) {}\n-};\n-\n-template<typename _Tp>\n-struct _GClos<_ValArray,_Tp> : _GBase<_Array<_Tp> > {\n-    typedef _GBase<_Array<_Tp> > _Base;\n-    typedef typename _Base::value_type value_type;\n-    \n-    _GClos (_Array<_Tp> __a, const valarray<size_t>& __i)\n-            : _Base (__a, __i) {}\n-};\n-\n-//\n-// indirect_array closure\n-//\n-\n-template<class _Dom> class _IBase {\n-public:\n-    typedef typename _Dom::value_type value_type;\n-\n-    _IBase (const _Dom& __e, const valarray<size_t>& __i)\n-            : _M_expr (__e), _M_index (__i) {}\n-    value_type operator[] (size_t __i) const\n-    { return _M_expr[_M_index[__i]]; }\n-    size_t size() const { return _M_index.size(); }\n-    \n-private:\n-    const _Dom& \t    _M_expr;\n-    const valarray<size_t>& _M_index;\n-};\n-\n-template<class _Dom> struct _IClos<_Expr,_Dom> : _IBase<_Dom> {\n-    typedef _IBase<_Dom> _Base;\n-    typedef typename _Base::value_type value_type;\n-    \n-    _IClos (const _Dom& __e, const valarray<size_t>& __i)\n-            : _Base (__e, __i) {}\n-};\n-\n-template<typename _Tp>\n-struct _IClos<_ValArray,_Tp>  : _IBase<valarray<_Tp> > {\n-    typedef _IBase<valarray<_Tp> > _Base;\n-    typedef _Tp value_type;\n-    \n-    _IClos (const valarray<_Tp>& __a, const valarray<size_t>& __i)\n-            : _Base (__a, __i) {}\n-};\n-\n-//\n-// class _Expr\n-//      \n-template<class _Clos, typename _Tp> class _Expr {\n-public:\n-    typedef _Tp value_type;\n-    \n-    _Expr (const _Clos&);\n-    \n-    const _Clos& operator() () const;\n-    \n-    value_type operator[] (size_t) const;\n-    valarray<value_type> operator[] (slice) const;\n-    valarray<value_type> operator[] (const gslice&) const;\n-    valarray<value_type> operator[] (const valarray<bool>&) const;\n-    valarray<value_type> operator[] (const valarray<size_t>&) const;\n-    \n-    _Expr<_UnClos<_Unary_plus,_Expr,_Clos>, value_type>\n-    operator+ () const;\n-    \n-    _Expr<_UnClos<negate,_Expr,_Clos>, value_type>\n-    operator- () const;\n-    \n-    _Expr<_UnClos<_Bitwise_not,_Expr,_Clos>, value_type>\n-    operator~ () const;\n-    \n-    _Expr<_UnClos<logical_not,_Expr,_Clos>, bool>\n-    operator! () const;\n-    \n-    size_t size () const;\n-    value_type sum () const;\n-    \n-    valarray<value_type> shift (int) const;\n-    valarray<value_type> cshift (int) const;\n-//     _Meta<_ApplyFunctionWithValue<_Expr>, value_type>\n-//     apply (value_type _M_func (value_type)) const;\n-//     _Meta<_ApplyFunctionWithConstRef<_Expr>, value_type>\n-//     apply (value_type _M_func (const value_type&)) const;\n-        \n-private:\n-    const _Clos _M_closure;\n-};\n-    \n-template<class _Clos, typename _Tp>\n-inline\n-_Expr<_Clos,_Tp>::_Expr (const _Clos& __c) : _M_closure(__c) {}\n-\n-template<class _Clos, typename _Tp>\n-inline const _Clos&\n-_Expr<_Clos,_Tp>::operator() () const\n-{ return _M_closure; }\n-\n-template<class _Clos, typename _Tp>\n-inline _Tp\n-_Expr<_Clos,_Tp>::operator[] (size_t __i) const\n-{ return _M_closure[__i]; }\n-\n-template<class _Clos, typename _Tp>\n-inline valarray<_Tp>\n-_Expr<_Clos,_Tp>::operator[] (slice __s) const\n-{ return _M_closure[__s]; }\n-\n-template<class _Clos, typename _Tp>\n-inline valarray<_Tp>\n-_Expr<_Clos,_Tp>::operator[] (const gslice& __gs) const\n-{ return _M_closure[__gs]; }\n-\n-template<class _Clos, typename _Tp>\n-inline valarray<_Tp>\n-_Expr<_Clos,_Tp>::operator[] (const valarray<bool>& __m) const\n-{ return _M_closure[__m]; }\n-\n-template<class _Clos, typename _Tp>\n-inline valarray<_Tp>\n-_Expr<_Clos,_Tp>::operator[] (const valarray<size_t>& __i) const\n-{ return _M_closure[__i]; }\n-\n-template<class _Clos, typename _Tp>\n-inline size_t\n-_Expr<_Clos,_Tp>::size () const  { return _M_closure.size (); }\n-\n-// XXX: replace this with a more robust summation algorithm.\n-template<class _Clos, typename _Tp>\n-inline _Tp\n-_Expr<_Clos,_Tp>::sum () const\n-{\n-        _Tp __s(_Tp());\n-        size_t __n (_M_closure.size ());\n-        for (size_t __i=0; __i<__n; ++__i) __s += _M_closure[__i];\n-        return __s;\n-}\n-\n-template<class _Dom, typename _Tp>\n-inline _Tp\n-min (const _Expr<_Dom,_Tp>& __e)\n-{\n-    size_t __s (__e.size ());\n-    _Tp  __m (__e[0]);\n-    for (size_t __i=1; __i<__s; ++__i)\n-        if (__m > __e[__i]) __m = __e[__i];\n-    return __m;\n-}\n-\n-template<class _Dom, typename _Tp>\n-inline _Tp\n-max (const _Expr<_Dom,_Tp>& __e)\n-{\n-    size_t __s (__e.size());\n-    _Tp __m (__e[0]);\n-    for (size_t __i=1; __i<__s; ++__i)\n-        if (__m < __e[__i]) __m = __e[__i];\n-    return __m;\n-}\n-\n-template<class _Dom, typename _Tp>\n-inline _Expr<_UnClos<logical_not,_Expr,_Dom>, bool>\n-_Expr<_Dom,_Tp>::operator! () const\n-{\n-    typedef _UnClos<logical_not,_Expr,_Dom> _Closure;\n-    return _Expr<_Closure,_Tp> (_Closure(this->_M_closure));\n-}\n-\n-#define _DEFINE_EXPR_UNARY_OPERATOR(_Op, _Name)                         \\\n-template<class _Dom, typename _Tp>                                      \\\n-inline _Expr<_UnClos<_Name,_Expr,_Dom>,_Tp>                             \\\n-_Expr<_Dom,_Tp>::operator _Op () const                                 \\\n-{                                                                       \\\n-    typedef _UnClos<_Name,_Expr,_Dom> _Closure;                         \\\n-    return _Expr<_Closure,_Tp> (_Closure (this->_M_closure));           \\\n-}\n-\n-    _DEFINE_EXPR_UNARY_OPERATOR(+, _Unary_plus)\n-    _DEFINE_EXPR_UNARY_OPERATOR(-, negate)\n-    _DEFINE_EXPR_UNARY_OPERATOR(~, _Bitwise_not)\n-\n-#undef _DEFINE_EXPR_UNARY_OPERATOR\n-\n-\n-#define _DEFINE_EXPR_BINARY_OPERATOR(_Op, _Name)                        \\\n-template<class _Dom1, class _Dom2>\t\t\t\t\t\\\n-inline _Expr<_BinClos<_Name,_Expr,_Expr,_Dom1,_Dom2>,                   \\\n-             typename _Name<typename _Dom1::value_type>::result_type>   \\\n-operator _Op (const _Expr<_Dom1,typename _Dom1::value_type>& __v,      \\\n-              const _Expr<_Dom2,typename _Dom2::value_type>& __w)       \\\n-{                                                                       \\\n-    typedef typename _Dom1::value_type _Arg;                            \\\n-    typedef typename _Name<_Arg>::result_type _Value;                   \\\n-    typedef _BinClos<_Name,_Expr,_Expr,_Dom1,_Dom2> _Closure;           \\\n-    return _Expr<_Closure,_Value> (_Closure (__v (), __w ()));          \\\n-}                                                                       \\\n-                                                                        \\\n-template<class _Dom>                                                    \\\n-inline _Expr<_BinClos<_Name,_Expr,_Constant,_Dom,typename _Dom::value_type>, \\\n-             typename _Name<typename _Dom::value_type>::result_type>    \\\n-operator _Op (const _Expr<_Dom,typename _Dom::value_type>& __v,        \\\n-              const typename _Dom::value_type& __t)                     \\\n-{                                                                       \\\n-    typedef typename _Dom::value_type _Arg;                             \\\n-    typedef typename _Name<_Arg>::result_type _Value;                   \\\n-    typedef _BinClos<_Name,_Expr,_Constant,_Dom,_Arg> _Closure;         \\\n-    return _Expr<_Closure,_Value> (_Closure (__v (), __t));             \\\n-}                                                                       \\\n-                                                                        \\\n-template<class _Dom>                                                    \\\n-inline _Expr<_BinClos<_Name,_Constant,_Expr,typename _Dom::value_type,_Dom>, \\\n-             typename _Name<typename _Dom::value_type>::result_type>    \\\n-operator _Op (const typename _Dom::value_type& __t,                    \\\n-               const _Expr<_Dom,typename _Dom::value_type>& __v)        \\\n-{                                                                       \\\n-    typedef typename _Dom::value_type _Arg;                             \\\n-    typedef typename _Name<_Arg>::result_type _Value;                   \\\n-    typedef _BinClos<_Name,_Constant,_Expr,_Arg,_Dom> _Closure;         \\\n-    return _Expr<_Closure,_Value> (_Closure (__t, __v ()));             \\\n-}                                                                       \\\n-                                                                        \\\n-template<class _Dom>                                                    \\\n-inline _Expr<_BinClos<_Name,_Expr,_ValArray,_Dom,typename _Dom::value_type>, \\\n-             typename _Name<typename _Dom::value_type>::result_type>    \\\n-operator _Op (const _Expr<_Dom,typename _Dom::value_type>& __e,        \\\n-               const valarray<typename _Dom::value_type>& __v)          \\\n-{                                                                       \\\n-    typedef typename _Dom::value_type _Arg;                             \\\n-    typedef typename _Name<_Arg>::result_type _Value;                   \\\n-    typedef _BinClos<_Name,_Expr,_ValArray,_Dom,_Arg> _Closure;         \\\n-    return  _Expr<_Closure,_Value> (_Closure (__e (), __v));            \\\n-}                                                                       \\\n-                                                                        \\\n-template<class _Dom>                                                    \\\n-inline _Expr<_BinClos<_Name,_ValArray,_Expr,typename _Dom::value_type,_Dom>, \\\n-             typename _Name<typename _Dom::value_type>::result_type>    \\\n-operator _Op (const valarray<typename _Dom::value_type>& __v,          \\\n-               const _Expr<_Dom,typename _Dom::value_type>& __e)        \\\n-{                                                                       \\\n-    typedef typename _Dom::value_type _Tp;                              \\\n-    typedef typename _Name<_Tp>::result_type _Value;                    \\\n-    typedef _BinClos<_Name,_ValArray,_Expr,_Tp,_Dom> _Closure;          \\\n-    return _Expr<_Closure,_Value> (_Closure (__v, __e ()));             \\\n-}\n-\n-    _DEFINE_EXPR_BINARY_OPERATOR(+, plus)\n-    _DEFINE_EXPR_BINARY_OPERATOR(-, minus)\n-    _DEFINE_EXPR_BINARY_OPERATOR(*, multiplies)\n-    _DEFINE_EXPR_BINARY_OPERATOR(/, divides)\n-    _DEFINE_EXPR_BINARY_OPERATOR(%, modulus)\n-    _DEFINE_EXPR_BINARY_OPERATOR(^, _Bitwise_xor)\n-    _DEFINE_EXPR_BINARY_OPERATOR(&, _Bitwise_and)\n-    _DEFINE_EXPR_BINARY_OPERATOR(|, _Bitwise_or)\n-    _DEFINE_EXPR_BINARY_OPERATOR(<<, _Shift_left)\n-    _DEFINE_EXPR_BINARY_OPERATOR(>>, _Shift_right)\n-\n-#undef _DEFINE_EXPR_BINARY_OPERATOR\n-    \n-#define _DEFINE_EXPR_RELATIONAL_OPERATOR(_Op, _Name)                    \\\n-template<class _Dom1, class _Dom2>\t\t\t\t\t\\\n-inline _Expr<_BinClos<_Name,_Expr,_Expr,_Dom1,_Dom2>, bool>             \\\n-operator _Op (const _Expr<_Dom1,typename _Dom1::value_type>& __v,       \\\n-              const _Expr<_Dom2,typename _Dom2::value_type>& __w)       \\\n-{                                                                       \\\n-    typedef typename _Dom1::value_type _Arg;                            \\\n-    typedef _BinClos<_Name,_Expr,_Expr,_Dom1,_Dom2> _Closure;           \\\n-    return _Expr<_Closure,bool> (_Closure (__v (), __w ()));            \\\n-}                                                                       \\\n-                                                                        \\\n-template<class _Dom>                                                    \\\n-inline _Expr<_BinClos<_Name,_Expr,_Constant,_Dom,typename _Dom::value_type>, \\\n-             bool>                                                      \\\n-operator _Op (const _Expr<_Dom,typename _Dom::value_type>& __v,         \\\n-              const typename _Dom::value_type& __t)                     \\\n-{                                                                       \\\n-    typedef typename _Dom::value_type _Arg;                             \\\n-    typedef _BinClos<_Name,_Expr,_Constant,_Dom,_Arg> _Closure;         \\\n-    return _Expr<_Closure,bool> (_Closure (__v (), __t));               \\\n-}                                                                       \\\n-                                                                        \\\n-template<class _Dom>                                                    \\\n-inline _Expr<_BinClos<_Name,_Constant,_Expr,typename _Dom::value_type,_Dom>, \\\n-             bool>                                                      \\\n-operator _Op (const typename _Dom::value_type& __t,                     \\\n-               const _Expr<_Dom,typename _Dom::value_type>& __v)        \\\n-{                                                                       \\\n-    typedef typename _Dom::value_type _Arg;                             \\\n-    typedef _BinClos<_Name,_Constant,_Expr,_Arg,_Dom> _Closure;         \\\n-    return _Expr<_Closure,bool> (_Closure (__t, __v ()));               \\\n-}                                                                       \\\n-                                                                        \\\n-template<class _Dom>                                                    \\\n-inline _Expr<_BinClos<_Name,_Expr,_ValArray,_Dom,typename _Dom::value_type>, \\\n-             bool>                                                      \\\n-operator _Op (const _Expr<_Dom,typename _Dom::value_type>& __e,         \\\n-               const valarray<typename _Dom::value_type>& __v)          \\\n-{                                                                       \\\n-    typedef typename _Dom::value_type _Tp;                              \\\n-    typedef _BinClos<_Name,_Expr,_ValArray,_Dom,_Tp> _Closure;          \\\n-    return  _Expr<_Closure,bool> (_Closure (__e (), __v));              \\\n-}                                                                       \\\n-                                                                        \\\n-template<class _Dom>                                                    \\\n-inline _Expr<_BinClos<_Name,_ValArray,_Expr,typename _Dom::value_type,_Dom>, \\\n-             bool>                                                      \\\n-operator _Op (const valarray<typename _Dom::value_type>& __v,           \\\n-               const _Expr<_Dom,typename _Dom::value_type>& __e)        \\\n-{                                                                       \\\n-    typedef typename _Dom::value_type _Tp;                              \\\n-    typedef _BinClos<_Name,_ValArray,_Expr,_Tp,_Dom> _Closure;          \\\n-    return _Expr<_Closure,bool> (_Closure (__v, __e ()));               \\\n-}\n-\n-    _DEFINE_EXPR_RELATIONAL_OPERATOR(&&, logical_and)\n-    _DEFINE_EXPR_RELATIONAL_OPERATOR(||, logical_or)\n-    _DEFINE_EXPR_RELATIONAL_OPERATOR(==, equal_to)\n-    _DEFINE_EXPR_RELATIONAL_OPERATOR(!=, not_equal_to)\n-    _DEFINE_EXPR_RELATIONAL_OPERATOR(<, less)\n-    _DEFINE_EXPR_RELATIONAL_OPERATOR(>, greater)\n-    _DEFINE_EXPR_RELATIONAL_OPERATOR(<=, less_equal)\n-    _DEFINE_EXPR_RELATIONAL_OPERATOR(>=, greater_equal)\n-\n-#undef _DEFINE_EXPR_RELATIONAL_OPERATOR\n-\n-\n-\n-#define _DEFINE_EXPR_UNARY_FUNCTION(_Name)                              \\\n-template<class _Dom>                                                    \\\n-inline _Expr<_UnFunClos<_Expr,_Dom>,typename _Dom::value_type>          \\\n-_Name(const _Expr<_Dom,typename _Dom::value_type>& __e)                 \\\n-{                                                                       \\\n-    typedef typename _Dom::value_type _Tp;                              \\\n-    typedef _UnFunClos<_Expr,_Dom> _Closure;                            \\\n-    return _Expr<_Closure,_Tp>(_Closure(__e(), (_Tp(*)(_Tp))(&_Name))); \\\n-}                                                                       \\\n-                                                                        \\\n-template<typename _Tp>                                                  \\\n-inline _Expr<_UnFunClos<_ValArray,_Tp>,_Tp>                             \\\n-_Name(const valarray<_Tp>& __v)                                         \\\n-{                                                                       \\\n-    typedef _UnFunClos<_ValArray,_Tp> _Closure;                         \\\n-    return _Expr<_Closure,_Tp> (_Closure (__v, (_Tp(*)(_Tp))(&_Name))); \\\n-}\n-\n-\n-    _DEFINE_EXPR_UNARY_FUNCTION(abs)\n-    _DEFINE_EXPR_UNARY_FUNCTION(cos)\n-    _DEFINE_EXPR_UNARY_FUNCTION(acos)\n-    _DEFINE_EXPR_UNARY_FUNCTION(cosh)    \n-    _DEFINE_EXPR_UNARY_FUNCTION(sin)\n-    _DEFINE_EXPR_UNARY_FUNCTION(asin)\n-    _DEFINE_EXPR_UNARY_FUNCTION(sinh)    \n-    _DEFINE_EXPR_UNARY_FUNCTION(tan)\n-    _DEFINE_EXPR_UNARY_FUNCTION(tanh)\n-    _DEFINE_EXPR_UNARY_FUNCTION(atan)\n-    _DEFINE_EXPR_UNARY_FUNCTION(exp)    \n-    _DEFINE_EXPR_UNARY_FUNCTION(log)\n-    _DEFINE_EXPR_UNARY_FUNCTION(log10)\n-    _DEFINE_EXPR_UNARY_FUNCTION(sqrt)\n-\n-#undef _DEFINE_EXPR_UNARY_FUNCTION\n-\n-\n-#define _DEFINE_EXPR_BINARY_FUNCTION(_Name)                             \\\n-template<class _Dom1, class _Dom2>                                      \\\n-inline _Expr<_BinFunClos<_Expr,_Expr,_Dom1,_Dom2>,typename _Dom1::value_type>\\\n-_Name (const _Expr<_Dom1,typename _Dom1::value_type>& __e1,             \\\n-       const _Expr<_Dom2,typename _Dom2::value_type>& __e2)             \\\n-{                                                                       \\\n-    typedef typename _Dom1::value_type _Tp;                             \\\n-    typedef _BinFunClos<_Expr,_Expr,_Dom1,_Dom2> _Closure;              \\\n-    return _Expr<_Closure,_Tp>                                          \\\n-        (_Closure (__e1 (), __e2 (), (_Tp(*)(_Tp, _Tp))(&_Name)));      \\\n-}                                                                       \\\n-                                                                        \\\n-template<class _Dom>                                                    \\\n-inline _Expr<_BinFunClos<_Expr,_ValArray,_Dom,typename _Dom::value_type>, \\\n-             typename _Dom::value_type>                                 \\\n-_Name (const _Expr<_Dom,typename _Dom::value_type>& __e,                \\\n-       const valarray<typename _Dom::value_type>& __v)                  \\\n-{                                                                       \\\n-    typedef typename _Dom::value_type _Tp;                              \\\n-    typedef _BinFunClos<_Expr,_ValArray,_Dom,_Tp> _Closure;             \\\n-    return _Expr<_Closure,_Tp>                                          \\\n-        (_Closure (__e (), __v, (_Tp(*)(_Tp, _Tp))(&_Name)));           \\\n-}                                                                       \\\n-                                                                        \\\n-template<class _Dom>                                                    \\\n-inline _Expr<_BinFunClos<_ValArray,_Expr,typename _Dom::value_type,_Dom>, \\\n-             typename _Dom::value_type>                                 \\\n-_Name (const valarray<typename _Dom::valarray>& __v,                    \\\n-       const _Expr<_Dom,typename _Dom::value_type>& __e)                \\\n-{                                                                       \\\n-    typedef typename _Dom::value_type _Tp;                              \\\n-    typedef _BinFunClos<_ValArray,_Expr,_Tp,_Dom> _Closure;             \\\n-    return _Expr<_Closure,_Tp>                                          \\\n-        (_Closure (__v, __e (), (_Tp(*)(_Tp, _Tp))(&_Name)));           \\\n-}                                                                       \\\n-                                                                        \\\n-template<class _Dom>                                                    \\\n-inline _Expr<_BinFunClos<_Expr,_Constant,_Dom,typename _Dom::value_type>, \\\n-             typename _Dom::value_type>                                 \\\n-_Name (const _Expr<_Dom, typename _Dom::value_type>& __e,               \\\n-       const typename _Dom::value_type& __t)                            \\\n-{                                                                       \\\n-    typedef typename _Dom::value_type _Tp;                              \\\n-    typedef _BinFunClos<_Expr,_Constant,_Dom,_Tp> _Closure;             \\\n-    return _Expr<_Closure,_Tp>                                          \\\n-        (_Closure (__e (), __t, (_Tp(*)(_Tp, _Tp))(&_Name)));           \\\n-}                                                                       \\\n-                                                                        \\\n-template<class _Dom>                                                    \\\n-inline _Expr<_BinFunClos<_Constant,_Expr,typename _Dom::value_type,_Dom>, \\\n-             typename _Dom::value_type>                                 \\\n-_Name (const typename _Dom::value_type& __t,                            \\\n-       const _Expr<_Dom,typename _Dom::value_type>& __e)                \\\n-{                                                                       \\\n-    typedef typename _Dom::value_type _Tp;                              \\\n-    typedef _BinFunClos<_Constant,_Expr,_Tp,_Dom> _Closure;             \\\n-    return _Expr<_Closure,_Tp>                                          \\\n-        (_Closure (__t, __e (), (_Tp(*)(_Tp, _Tp))(&_Name)));           \\\n-}                                                                       \\\n-                                                                        \\\n-template<typename _Tp>                                                  \\\n-inline _Expr<_BinFunClos<_ValArray,_ValArray,_Tp,_Tp>, _Tp>             \\\n-_Name (const valarray<_Tp>& __v, const valarray<_Tp>& __w)              \\\n-{                                                                       \\\n-    typedef _BinFunClos<_ValArray,_ValArray,_Tp,_Tp> _Closure;          \\\n-    return _Expr<_Closure,_Tp>                                          \\\n-        (_Closure (__v, __w, (_Tp(*)(_Tp,_Tp))(&_Name)));               \\\n-}                                                                       \\\n-                                                                        \\\n-template<typename _Tp>                                                  \\\n-inline _Expr<_BinFunClos<_ValArray,_Constant,_Tp,_Tp>,_Tp>              \\\n-_Name (const valarray<_Tp>& __v, const _Tp& __t)                        \\\n-{                                                                       \\\n-    typedef _BinFunClos<_ValArray,_Constant,_Tp,_Tp> _Closure;          \\\n-    return _Expr<_Closure,_Tp>                                          \\\n-        (_Closure (__v, __t, (_Tp(*)(_Tp,_Tp))(&_Name)));               \\\n-}                                                                       \\\n-                                                                        \\\n-template<typename _Tp>                                                  \\\n-inline _Expr<_BinFunClos<_Constant,_ValArray,_Tp,_Tp>,_Tp>              \\\n-_Name (const _Tp& __t, const valarray<_Tp>& __v)                        \\\n-{                                                                       \\\n-    typedef _BinFunClos<_Constant,_ValArray,_Tp,_Tp> _Closure;          \\\n-    return _Expr<_Closure,_Tp>                                          \\\n-        (_Closure (__t, __v, (_Tp(*)(_Tp,_Tp))(&_Name)));               \\\n-}\n-\n-_DEFINE_EXPR_BINARY_FUNCTION(atan2)\n-_DEFINE_EXPR_BINARY_FUNCTION(pow)\n-\n-#undef _DEFINE_EXPR_BINARY_FUNCTION\n-\n-#endif // _CPP_VALARRAY_META_H \n-\n-// Local Variables:\n-// mode:c++\n-// End:"}, {"sha": "69e9627d5778d858bddb62f195f633e61a7cdd66", "filename": "libstdc++/stdexcept", "status": "removed", "additions": 0, "deletions": 97, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstdexcept", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstdexcept", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstdexcept?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,97 +0,0 @@\n-// Methods for Exception Support for -*- C++ -*-\n-// Copyright (C) 1994, 1995, 1997 Free Software Foundation\n-\n-// This file is part of the GNU ANSI C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License\n-// along with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n-\n-// As a special exception, if you link this library with files\n-// compiled with a GNU compiler to produce an executable, this does not cause\n-// the resulting executable to be covered by the GNU General Public License.\n-// This exception does not however invalidate any other reasons why\n-// the executable file might be covered by the GNU General Public License.\n-\n-// Written by Mike Stump based upon the specification in the 20 September 1994\n-// C++ working paper, ANSI document X3J16/94-0158.\n-\n-#ifndef __STDEXCEPT__\n-#define __STDEXCEPT__\n-\n-#ifdef __GNUG__\n-#pragma interface \"stdexcept\"\n-#endif\n-\n-#include <exception>\n-#include <string>\n-\n-extern \"C++\" {\n-\n-namespace std {\n-\n-class logic_error : public exception {\n-  string _what;\n-public:\n-  logic_error(const string& what_arg): _what (what_arg) { }\n-  virtual const char* what () const { return _what.c_str (); }\n-};\n-\n-class domain_error : public logic_error {\n-public:\n-  domain_error (const string& what_arg): logic_error (what_arg) { }\n-};\n-\n-class invalid_argument : public logic_error {\n-public:\n-  invalid_argument (const string& what_arg): logic_error (what_arg) { }\n-};\n-\n-class length_error : public logic_error {\n-public:\n-  length_error (const string& what_arg): logic_error (what_arg) { }\n-};\n-\n-class out_of_range : public logic_error {\n-public:\n-  out_of_range (const string& what_arg): logic_error (what_arg) { }\n-};\n-\n-class runtime_error : public exception {\n-  string _what;\n-public:\n-  runtime_error(const string& what_arg): _what (what_arg) { }\n-  virtual const char* what () const { return _what.c_str (); }\n-protected:\n-  runtime_error(): exception () { }\n-};\n-\n-class range_error : public runtime_error {\n-public:\n-  range_error (const string& what_arg): runtime_error (what_arg) { }\n-};\n-\n-class overflow_error : public runtime_error {\n-public:\n-  overflow_error (const string& what_arg): runtime_error (what_arg) { }\n-};\n-\n-class underflow_error : public runtime_error {\n-public:\n-  underflow_error (const string& what_arg): runtime_error (what_arg) { }\n-};\n-\n-} // namespace std\n- \n-} // extern \"C++\"\n-\n-#endif"}, {"sha": "9c02c71f4976071b5b16e958aaf9236e150e9988", "filename": "libstdc++/stdexcepti.cc", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstdexcepti.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstdexcepti.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstdexcepti.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,21 +0,0 @@\n-// Implementation file for Exception Support for -*- C++ -*-\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#ifdef __GNUG__\n-#pragma implementation \"stdexcept\"\n-#endif\n-\n-#include <stdexcept>\n-\n-// Entry points for string.\n-\n-void\n-__out_of_range (const char *s)\n-{\n-  throw std::out_of_range (s);\n-}\n-\n-void __length_error (const char *s)\n-{\n-  throw std::length_error (s);\n-}"}, {"sha": "4b270742c9cfb34883c5a9c30baab525ef95bfe1", "filename": "libstdc++/stl.h", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,15 +0,0 @@\n-// -*- C++ -*- compatibility header.\n-// This file is part of the GNU ANSI C++ Library.\n-\n-#include <algorithm>\n-#include <deque>\n-#include <functional>\n-#include <iterator>\n-#include <list>\n-#include <map>\n-#include <memory>\n-#include <numeric>\n-#include <set>\n-#include <stack>\n-#include <utility>\n-#include <vector>"}, {"sha": "8c1f2e31d0337eab581c438f13f6d5febcd00e7d", "filename": "libstdc++/stl/ChangeLog", "status": "removed", "additions": 0, "deletions": 387, "changes": 387, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2FChangeLog?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,387 +0,0 @@\n-2000-11-08  Jan van Male  <jan.vanmale@fenk.wau.nl>\n-\t    Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n-\n-\t* README: Fix typo. Remove incorrect reference to Cygnus.\n-\n-2000-08-22  Geoff Berry  <geoffb@bops.com>\n-\n-\t* bitset (bitset::_M_is_any): Don't use __BITSET_WORDS macro\n-\ton _Nw since _Nw is already the number of words in the bitset.\n-\n-2000-07-10  Martin v. L\ufffdwis (loewis@informatik.hu-berlin.de)\n-\n-\t* stl_function.h (bind1st, bind2nd): Rename __opr to __oper, \n-\tas __opr is used internally by egcs.\n-\t* stl_numeric.h (__power, power): Likewise.\n-\n-2000-07-10  Alexandre Oliva  <oliva@dcc.unicamp.br>\n-\t\n-\t* stl_algo.h (transform): Rename __opr to __oper, as __opr is used \n-\tinternally by egcs.\n-\tReported by Harri Porten <porten@tu-harburg.de>\n-\t\n-2000-01-19  Gabriel Dos Reis  <dosreis@cmla.ens-cachan.fr>\n-\n-\t* stl_iterator.h: Make it possible to use standard class\n-\t`iterator'. \n-\n-1999-12-14  Mumit Khan  <khan@xraylith.wisc.edu>\n-\n-\t* stl_config.h (__MINGW32__): Define __STL_WIN32THREADS for thread\n-\tsafe runtime.\n-\n-1999-11-10  Benjamin Kosnik  <bkoz@haight.constant.com>\n-            Matthias Klose  <doko@cs.tu-berlin.de>\n-\n-\t* stl_rope.h: Fix initialization order.\n-\t* stl_deque.h: Use static_casts<size_type>(signed_type).\n-\n-1999-11-06  Martin v. L\ufffdwis  <loewis@informatik.hu-berlin.de>\n-\n-\t* bitset (class bitset): Declare reference as our friend.\n-\t* bitset: Include limits.h.\n-\n-1999-08-08  Alexandre Oliva  <oliva@dcc.unicamp.br>\n-\n-\t* pthread_alloc: Solaris' ctype.h defines _U to 01; use _Up as\n-\ttemplate parameter instead.\n-\n-1999-06-18  Martin von L\ufffdwis  <loewis@informatik.hu-berlin.de>\n-\n-\t* stl_queue.h: Rename _M_c to c, and _M_comp to comp.\n-\n-1999-05-17  Mark Kettenis  <kettenis@gnu.org>\n-\n-\t* stl_config.h: Only define __STL_PTHREADS with GLIBC >= 2 for\n-\tLinux.\n-\n-Mon May 17 03:33:47 1999  Mumit Khan  <khan@xraylith.wisc.edu>\n-\n-\t* stl_config.h (__CYGWIN__): Cygwin newlib RTL lacks drand48.\n-\n-1999-05-07  Ulrich Drepper  <drepper@cygnus.com>\n-\n-\t* stl_alloc.h: Make it possible to compile with __USE_MALLOC.\n-\n-Tue Apr 13 00:32:57 1999  Mumit Khan  <khan@xraylith.wisc.edu>\n-\n-\t* stl_config.h (__MINGW32__): Mingw32 RTL lacks drand48.\n-\n-Sun Apr 11 23:48:30 1999  Jeffrey A Law  (law@cygnus.com)\n-\n-\t* bitset: Re-install Alexandre's lost patch from 1998-11-27.\n-\n-1999-01-20  Ulrich Drepper  <drepper@cygnus.com>\n-\n-\t* stl_construct.h (__destroy_aux): Use != instead of < for\n-\tForwardIterator comparison.\n-\tPatch by jmaurer@menuett.rhein-main.de (Jens Maurer).\n-\n-1999-01-20  Mark Mitchell  <mark@markmitchell.com>\n-\n-\t* stl_config.h (__STL_USE_NAMESPACES): Define.\n-\n-1998-11-27  Alexandre Oliva  <oliva@dcc.unicamp.br>\n-\n-\t* bitset: Explicitly convert basic_string<...>::npos to size_t in\n-\tdefault argument to constructor, to avoid parse error at `>'.\n-\t(__STL_EXPLICIT_FUNCTION_TMPL_ARGS): Replace #if with #ifdef.\n-\n-1998-11-01  Mark Mitchell  <mark@markmitchell.com>\n-\n-\t* stl_alloc.h (default_alloc_template::_S_free_list): Don't\n-\tqualify _NFREELISTS.\n-\n-1998-10-11  Mark Mitchell  <mark@markmitchell.com>\n-\n-\t* stl_config.h (__SGI_STL_USE_AUTO_PTR_CONVERSIONS): Define.\n-\t* memory (auto_ptr::operator auto_ptr_ref<_Tp1>): Fix typo.\n-\t(auto_ptr::operator auto_ptr<_Tp1>): Add missing\n-\tsemicolon.\n-\n-1998-09-03  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* stl_config.h: Define __STL_HAS_WCHAR_T,\n-\t__STL_MEMBER_TEMPLATE_CLASSES, __STL_HAS_NAMESPACES,\n-\t__STL_NO_NAMESPACES and __STL_LONG_LONG.\n-\n-1998-09-02  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* algorithm alloc.h defalloc.h hash_map.h hash_set.h iterator\n-\tmemory pthread_alloc pthread_alloc.h rope ropeimpl.h stl_algo.h\n-\tstl_algobase.h stl_alloc.h stl_bvector.h stl_config.h\n-\tstl_construct.h stl_deque.h stl_function.h stl_hash_fun.h\n-\tstl_hash_map.h stl_hash_set.h stl_hashtable.h stl_heap.h\n-\tstl_iterator.h stl_list.h stl_map.h stl_multimap.h stl_multiset.h\n-\tstl_numeric.h stl_pair.h stl_queue.h stl_raw_storage_iter.h\n-\tstl_relops.h stl_rope.h stl_set.h stl_slist.h stl_stack.h\n-\tstl_tempbuf.h stl_tree.h stl_uninitialized.h stl_vector.h\n-\ttempbuf.h type_traits.h: Update to SGI STL 3.11.\n-\n-Fri Jul 10 15:20:09 1998  Klaus-Georg Adams <Klaus-Georg.Adams@chemie.uni-karlsruhe.de>\n-\n-\t* stl_tempbuf.h (temporary_buffer): Add missing typename.\n-\t* type_traits.h: update comments.\n-\n-Sun Jun 28 00:49:42 1998  Jeffrey A Law  (law@cygnus.com)\n-\n-\t* stl_config.h (__STL_PTHREADS): Don't define for glibc 2 if\n-\t_G_USING_THUNKS is not defined.\n-\n-1998-04-07 18:32  Ulrich Drepper  <drepper@cygnus.com>\n-\n-\t* stl_hashtable.h (__stl_prime_list): Mark last two numbers as\n-\tunsigned long since they are otherwise too large for long int on\n-\t32bit machines.\n-\n-Fri Feb 20 16:15:05 1998  H.J. Lu  (hjl@gnu.org)\n-\t\t\t  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* ropeimpl.h: Check __STL_PTHREADS instead of _PTHREADS.\n-\t* stl_alloc.h: Ditto.\n-\t* stl_config.h: Ditto.\n-\t* stl_rope.h: Ditto.\n-\n-\t* stl_config.h: include <_G_config.h> if __GNUG__ is defined.\n-\t(__STL_PTHREADS): Defined if _PTHREADS is defined or\n-\t__GLIBC__ >= 2.\n-\n-Tue Jan 27 12:01:25 1998  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* stl_algo.h (__lg): Fix for n == 0.\n-\n-Sat Nov  8 00:45:17 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* stl_hash_set.h (swap): Fix typo.\n-\n-Fri Nov  7 10:27:40 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* stl_hashtable.h: Fix typo.\n-\n-Thu Nov  6 11:19:09 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* stl_algo.h, stl_algobase.h, stl_bvector.h,\n- \tstl_deque.h: Update to October 28 SGI release.\n-\n-Sun Nov  2 12:14:56 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* algo.h, algobase.h, alloc.h, bvector.h, defalloc.h, deque.h,\n- \tfunction.h, hash_map.h, hash_set.h, hashtable.h, heap.h, iterator.h,\n- \tlist.h, map.h, multimap.h, multiset.h, pair.h, pthread_alloc.h,\n- \trope.h, ropeimpl.h, set.h, slist.h, stack.h, stl_config.h, tempbuf.h,\n- \ttree.h, type_traits.h, vector.h: Update to October 27 SGI snapshot.\n-\t* algorithm, deque, functional, hash_map, hash_set, iterator, list,\n- \tmap, memory, numeric, pthread_alloc, queue, rope, set, slist, stack,\n- \tstl_algo.h, stl_algobase.h, stl_alloc.h, stl_bvector.h,\n- \tstl_construct.h, stl_deque.h, stl_function.h, stl_hash_fun.h,\n- \tstl_hash_map.h, stl_hash_set.h, stl_hashtable.h, stl_heap.h,\n- \tstl_iterator.h, stl_list.h, stl_map.h, stl_multimap.h, stl_multiset.h,\n- \tstl_numeric.h, stl_pair.h, stl_queue.h, stl_raw_storage_iter.h,\n- \tstl_relops.h, stl_rope.h, stl_set.h, stl_slist.h, stl_stack.h,\n- \tstl_tempbuf.h, stl_tree.h, stl_uninitialized.h, stl_vector.h,\n- \tutility, vector: New files in October 27 SGI snapshot.\n-\n-Fri Oct 17 19:07:42 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* tree.h, vector.h: Fix accidental divergence from SGI release.\n-\n-Tue Sep  9 19:47:28 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* algo.h, algobase.h, alloc.h, bvector.h, deque.h, hashtable.h,\n-\titerator.h, list.h, rope.h, ropeimpl.h, slist.h, stl_config.h,\n-\ttree.h, vector.h: Update To September 8 SGI release.\n-\n-Tue Sep  9 17:38:47 1997  Mark Mitchell  <mmitchell@usa.net>\n-\n-\t* stl_config.h (__STL_MEMBER_TEMPLATES): Enable.\n-\n-Tue Aug  5 17:06:01 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* deque.h, function.h, hashtable.h, list.h, rope.h, ropeimpl.h,\n-\ttree.h:  Update to July 31 SGI release.\n-\n-Fri Jul 18 10:06:56 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* algo.h, defalloc.h, hashtable.h, rope.h, ropeimpl.h, slist.h:\n-\tUpdate to June 30 SGI release.\n-\n-Fri Jul 04 02:17:15 1997  Ulrich Drepper  <drepper@cygnus.com>\n-\n-\t* tree.h (rb_tree): Reverse order of member initializations\n-\tto prevent warnings.\n-\n-Sun Jun 15 18:17:21 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* *.h: Update to 6/13 SGI release.\n-\n-Fri May 23 10:56:18 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* stl_config.h: Add support for exceptions with g++.\n-\n-\t* *.h: Update to 5/8 SGI release.\n-\n-Thu Apr 24 19:00:23 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* *.h: Update to 3/24 SGI release.\n-\n-Wed Feb 19 18:19:18 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* *.h: Update to 2/18 SGI release.\n-\n-\t* bool.h: Lose.\n-\n-Mon Feb 10 16:33:23 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* alloc.h: Don't define __USE_MALLOC for g++.\n-\t* bool.h: Lose g++ case.\n-\n-\t* *.h: Update to 2/4 SGI release.\n-\n-Mon Jan 13 14:39:16 1997  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* *.h: Update to 1/8 SGI release.\n-\n-Mon Sep 30 17:56:43 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* alloc.h (__unlock): Never use __lock_release.\n-\n-Fri Sep 27 19:03:06 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* alloc.h (__default_alloc_template): lock is a friend.\n-\n-Thu Sep 19 20:10:37 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\tPropagate these changes to new STL code:\n-\t* tree.h: Rearrange member initializers in rb_tree constructors.\n-\t* vector.h (insert): Cast iterator difference to size_type to\n-        avoid warning.\n-\n-\t* *.h: Update to SGI snapshot (fixed).\n-\t* *.c, Makefile.in, configure.in: Removed.\n-\n-Sat Sep 14 09:43:06 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* deque.h, list.h, tree.h: Remove kludge obsoleted by new\n- \toverloading code.\n-\n-Sat Aug 10 14:59:50 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* tempbuf.cc (__stl_temp_buffer): Align like a pointer.\n-\n-Wed Jun 26 13:00:44 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* iterator.h: Add default template parameters.\n-\n-Wed Apr 24 10:45:22 1996  Doug Evans  <dje@blues.cygnus.com>\n-\n-\t* Makefile.in (tempbuf.o,random.o): Add rules for SunOS VPATH.\n-\n-Fri Apr  5 17:52:31 1996  Per Bothner  <bothner@kalessin.cygnus.com>\n-\n-\t* configure.in (EXTRA_MOSTLYCLEAN):  New, to remove stl.list.\n-\n-Fri Mar 22 14:58:30 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\tPropagate these changes to new STL code:\n-\t* tree.h: Rearrange member initializers in rb_tree constructors.\n-\t* vector.h (insert): Cast iterator difference to size_type to\n-        avoid warning.\n-\n-Sun Mar 10 07:49:03 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* deque.h (distance_type): Add overload for g++.\n-\tFrom Joe Buck.\n-\n-Thu Feb 22 14:07:12 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* bool.h: Revert.\n-\t* algo.h bvector.h deque.h function.h iterator.h list.h\n-\tpair.h stack.h tree.h vector.h: Wrap #include <bool.h> with\n-\t#ifndef __GNUG__.\n-\t* defalloc.h list.h deque.h tree.h: Use __GNUG__ to control\n-\tworkarounds.\n-\n-Wed Feb 21 17:13:02 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* bool.h (TRUE, FALSE): Define for people expecting the bool.h\n- \tfrom libg++.  Is this a good idea?\n-\n-Tue Feb 20 18:40:02 1996  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* algo.h bool.h bvector.h defalloc.h deque.h function.h heap.h\n- \titerator.h list.h map.h pair.h random.cc stack.h tree.c tree.h\n- \tvector.h: Revert to HP release with workarounds for missing\n- \toverloading functionality.\n-\t* Makefile.in (STL_OBJECTS): Remove tree.o.\n-\n-Thu Nov  9 17:05:23 1995  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* algo.h algobase.h bvector.h defalloc.h deque.h function.h heap.h\n- \titerator.h list.h map.h multimap.h multiset.h pair.h projectn.h\n- \tset.h stack.h tempbuf.h tree.h vector.h: Wrap #include <bool.h>\n- \twith #ifndef __GNUG__.\n-\n-Thu Nov  2 17:05:44 1995  Jason Merrill  <jason@yorick.cygnus.com>\n-\n-\t* deque.h (deque<T>::insert): Fix merge typo.\n-\t* vector.h (value_type): Lose.\n-\n-Thu Nov  2 14:33:47 1995  Per Bothner  <bothner@kalessin.cygnus.com>\n-\n-\t* algo.h, algobase.h, deque.h, function.h, list.h, pair.h, random.cc:\n-\tMerge in Oct 31 1995 release from HP.\n-\n-Fri Aug 11 17:11:12 1995  Per Bothner  <bothner@kalessin.cygnus.com>\n-\n-\t* list.h: Avoid duplicate construction and destruction of list_nodes.\n-\tPatch from Klamer Schutte <klamer@ph.tn.tudelft.nl>.\n-\n-Fri Aug 11 16:45:18 1995  Per Bothner  <bothner@kalessin.cygnus.com>\n-\n-\t* algo.h, algobase.h, deque.h:  Merged in Jul 12 1995 release from HP.\n-\n-Mon Jun  5 18:38:56 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* Makefile.in (stl.list): Depend on stamp-picdir.\n-\n-Wed May 17 02:30:47 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* tree.h: Rearrange member initializers in rb_tree constructors.\n-\n-\t* Update to HP's February 7, 1995 release.\n-\n-Fri May  5 10:45:31 1995  Mike Stump  <mrs@cygnus.com>\n-\n-\t* random.cc (seed): Move `for' decl out of `for' statement.\n-\n-Wed Apr 26 13:09:16 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* configure.in (XCXXINCLUDES): Rename.\n-\n-Wed Mar 29 19:24:56 1995  Jason Merrill  <jason@phydeaux.cygnus.com>\n-\n-\t* tree.h (insert): Return a value.\n-\n-\t* vector.h (insert): Cast iterator difference to size_type to\n-        avoid warning.\n-\n-Sun Feb 12 09:12:17 1995  Mike Stump  <mrs@cygnus.com>\n-\n-\t* tree.h (rb_tree::max_size): Add definition when using GNU\n-\tworkaround.\n-\n-Thu Jan 12 01:37:42 1995  deanm@medulla.LABS.TEK.COM (Dean Messing)\n-\n-\t* configure.in (LIBDIR): Set to yes.\n-\n-Fri Dec 30 18:26:20 1994  Mike Stump  <mrs@cygnus.com>\n-\n-\t* iterator.h: Add default template parameters where possible.\n-\n-Fri Dec 30 16:29:39 1994  Mike Stump  <mrs@cygnus.com>\n-\n-\t* algo.h: Change rand to __rand to fix make check on linux systems.\n-\n-Tue Nov 29 15:30:30 1994  Per Bothner  <bothner@kalessin.cygnus.com>\n-\n-\t* Initial check-in, based on HP's October 21, 1994."}, {"sha": "6cf254f36e49a6edf78d4aab9d12140c2e27ffd8", "filename": "libstdc++/stl/README", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2FREADME?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,13 +0,0 @@\n-This directory contains an SGI release of the C++ Standard Template\n-Library, slightly modified to work with g++.\n-\n-Note that this is based on a pre-Draft Standard for C++.\n-Things are likely to change.  For example, the header file names\n-are very likely to change.  The Allocator interface will change.  Etc, etc.\n-WE MAKE NO COMMITMENT (yet) TO SUPPORT BACKWARD COMPATIBILITY FOR STL.\n-\n-For examples of things that should work, look in the ../tests directory.\n-\n-DOCUMENTATION:\n-See http://www.sgi.com/Technology/STL/ or http://www.dinkumware.com/\n-on the World-Wide Web."}, {"sha": "1707868c7c43bb803c846e422f1f961c54087980", "filename": "libstdc++/stl/algo.h", "status": "removed", "additions": 0, "deletions": 114, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Falgo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Falgo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Falgo.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,114 +0,0 @@\n-/*\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n- * Copyright (c) 1996,1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_ALGO_H\n-#define __SGI_STL_ALGO_H\n-\n-#include <algobase.h>\n-#include <tempbuf.h>\n-#include <stl_algo.h>\n-#include <stl_numeric.h>\n-\n-#ifdef __STL_USE_NAMESPACES\n-\n-// Names from <stl_algo.h>\n-using __STD::for_each; \n-using __STD::find; \n-using __STD::find_if; \n-using __STD::adjacent_find; \n-using __STD::count; \n-using __STD::count_if; \n-using __STD::search; \n-using __STD::search_n; \n-using __STD::swap_ranges; \n-using __STD::transform; \n-using __STD::replace; \n-using __STD::replace_if; \n-using __STD::replace_copy; \n-using __STD::replace_copy_if; \n-using __STD::generate; \n-using __STD::generate_n; \n-using __STD::remove; \n-using __STD::remove_if; \n-using __STD::remove_copy; \n-using __STD::remove_copy_if; \n-using __STD::unique; \n-using __STD::unique_copy; \n-using __STD::reverse; \n-using __STD::reverse_copy; \n-using __STD::rotate; \n-using __STD::rotate_copy; \n-using __STD::random_shuffle; \n-using __STD::random_sample; \n-using __STD::random_sample_n; \n-using __STD::partition; \n-using __STD::stable_partition; \n-using __STD::sort; \n-using __STD::stable_sort; \n-using __STD::partial_sort; \n-using __STD::partial_sort_copy; \n-using __STD::nth_element; \n-using __STD::lower_bound; \n-using __STD::upper_bound; \n-using __STD::equal_range; \n-using __STD::binary_search; \n-using __STD::merge; \n-using __STD::inplace_merge; \n-using __STD::includes; \n-using __STD::set_union; \n-using __STD::set_intersection; \n-using __STD::set_difference; \n-using __STD::set_symmetric_difference; \n-using __STD::min_element; \n-using __STD::max_element; \n-using __STD::next_permutation; \n-using __STD::prev_permutation; \n-using __STD::find_first_of; \n-using __STD::find_end; \n-using __STD::is_sorted; \n-using __STD::is_heap; \n-\n-// Names from stl_heap.h\n-using __STD::push_heap;\n-using __STD::pop_heap;\n-using __STD::make_heap;\n-using __STD::sort_heap;\n-\n-// Names from <stl_numeric.h>\n-using __STD::accumulate; \n-using __STD::inner_product; \n-using __STD::partial_sum; \n-using __STD::adjacent_difference; \n-using __STD::power; \n-using __STD::iota; \n-\n-#endif /* __STL_USE_NAMESPACES */\n-\n-#endif /* __SGI_STL_ALGO_H */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "f35e7af4a97648b4c6d349ceb298f1bc06b7a343", "filename": "libstdc++/stl/algobase.h", "status": "removed", "additions": 0, "deletions": 71, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Falgobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Falgobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Falgobase.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,71 +0,0 @@\n-/*\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- * Copyright (c) 1996,1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_ALGOBASE_H\n-#define __SGI_STL_ALGOBASE_H\n-\n-#ifndef __SGI_STL_PAIR_H\n-#include <pair.h>\n-#endif\n-#ifndef __SGI_STL_ITERATOR_H\n-#include <iterator.h>\n-#endif\n-#ifndef __SGI_STL_INTERNAL_ALGOBASE_H\n-#include <stl_algobase.h>\n-#endif\n-#ifndef __SGI_STL_INTERNAL_UNINITIALIZED_H\n-#include <stl_uninitialized.h>\n-#endif\n-\n-#ifdef __STL_USE_NAMESPACES\n-\n-// Names from stl_algobase.h\n-using __STD::iter_swap; \n-using __STD::swap; \n-using __STD::min; \n-using __STD::max; \n-using __STD::copy; \n-using __STD::copy_backward; \n-using __STD::copy_n; \n-using __STD::fill; \n-using __STD::fill_n; \n-using __STD::mismatch; \n-using __STD::equal; \n-using __STD::lexicographical_compare; \n-using __STD::lexicographical_compare_3way; \n-\n-// Names from stl_uninitialized.h\n-using __STD::uninitialized_copy;\n-using __STD::uninitialized_copy_n;\n-using __STD::uninitialized_fill;\n-using __STD::uninitialized_fill_n;\n-\n-#endif /* __STL_USE_NAMESPACES */\n-\n-#endif /* __SGI_STL_ALGOBASE_H */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "1ba584f06d4a54895672d0ab5a19576945f1bbff", "filename": "libstdc++/stl/algorithm", "status": "removed", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Falgorithm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Falgorithm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Falgorithm?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,40 +0,0 @@\n-/*\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n- * Copyright (c) 1996,1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_ALGORITHM\n-#define __SGI_STL_ALGORITHM\n-\n-#include <stl_algobase.h>\n-#include <stl_construct.h>\n-#include <stl_uninitialized.h>\n-#include <stl_tempbuf.h>\n-#include <stl_algo.h>\n-\n-#endif /* __SGI_STL_ALGORITHM */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "f99a862316eeb9dd2fb7ea4bcdb1bcc15d1c3c4a", "filename": "libstdc++/stl/alloc.h", "status": "removed", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Falloc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Falloc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Falloc.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,46 +0,0 @@\n-/*\n- * Copyright (c) 1996-1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_ALLOC_H\n-#define __SGI_STL_ALLOC_H\n-\n-#ifndef __STL_CONFIG_H\n-#include <stl_config.h>\n-#endif\n-#ifndef __SGI_STL_INTERNAL_ALLOC_H\n-#include <stl_alloc.h>\n-#endif\n-\n-#ifdef __STL_USE_NAMESPACES\n-\n-using __STD::__malloc_alloc_template; \n-using __STD::malloc_alloc; \n-using __STD::simple_alloc; \n-using __STD::debug_alloc; \n-using __STD::__default_alloc_template; \n-using __STD::alloc; \n-using __STD::single_client_alloc; \n-#ifdef __STL_STATIC_TEMPLATE_MEMBER_BUG\n-using __STD::__malloc_alloc_oom_handler; \n-#endif /* __STL_STATIC_TEMPLATE_MEMBER_BUG */\n-#ifdef __STL_USE_STD_ALLOCATORS \n-using __STD::allocator;\n-#endif /* __STL_USE_STD_ALLOCATORS */\n-\n-#endif /* __STL_USE_NAMESPACES */\n-\n-#endif /* __SGI_STL_ALLOC_H */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "3b702ab1f4c0be766b96989259c153acb5956a07", "filename": "libstdc++/stl/bitset", "status": "removed", "additions": 0, "deletions": 1066, "changes": 1066, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fbitset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fbitset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fbitset?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,1066 +0,0 @@\n-/*\n- * Copyright (c) 1998\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_BITSET\n-#define __SGI_STL_BITSET\n-\n-// This implementation of bitset<> has a second template parameter,\n-// _WordT, which defaults to unsigned long.  *YOU SHOULD NOT USE\n-// THIS FEATURE*.  It is experimental, and it may be removed in\n-// future releases.\n-\n-// A bitset of size N, using words of type _WordT, will have\n-// N % (sizeof(_WordT) * CHAR_BIT) unused bits.  (They are the high-\n-// order bits in the highest word.)  It is a class invariant\n-// of class bitset<> that those unused bits are always zero.\n-\n-// Most of the actual code isn't contained in bitset<> itself, but in the\n-// base class _Base_bitset.  The base class works with whole words, not with\n-// individual bits.  This allows us to specialize _Base_bitset for the\n-// important special case where the bitset is only a single word.\n-\n-// The C++ standard does not define the precise semantics of operator[].\n-// In this implementation the const version of operator[] is equivalent\n-// to test(), except that it does no range checking.  The non-const version\n-// returns a reference to a bit, again without doing any range checking.\n-\n-\n-#include <stddef.h>     // for size_t\n-#include <limits.h>     // for CHAR_BIT\n-#include <string>\n-#include <stdexcept>    // for invalid_argument, out_of_range, overflow_error\n-#include <iostream.h>   // for istream, ostream\n-\n-#define __BITS_PER_WORDT(__wt) (CHAR_BIT*sizeof(__wt))\n-#define __BITSET_WORDS(__n,__wt) \\\n- ((__n) < 1 ? 1 : ((__n) + __BITS_PER_WORDT(__wt) - 1)/__BITS_PER_WORDT(__wt))\n-\n-__STL_BEGIN_NAMESPACE\n-\n-#if defined(__sgi) && !defined(__GNUC__) && (_MIPS_SIM != _MIPS_SIM_ABI32)\n-#pragma set woff 1209\n-#endif\n-\n-// structure to aid in counting bits\n-template<bool __dummy>\n-struct _Bit_count {\n-  static unsigned char _S_bit_count[256];\n-};\n-\n-// Mapping from 8 bit unsigned integers to the index of the first one\n-// bit:\n-template<bool __dummy>\n-struct _First_one {\n-  static unsigned char _S_first_one[256];\n-};\n-\n-//\n-// Base class: general case.\n-//\n-\n-template<size_t _Nw, class _WordT>\n-struct _Base_bitset {\n-  _WordT _M_w[_Nw];                // 0 is the least significant word.\n-\n-  _Base_bitset( void ) { _M_do_reset(); }\n-\n-  _Base_bitset(unsigned long __val);\n-\n-  static size_t _S_whichword( size_t __pos ) {\n-    return __pos / __BITS_PER_WORDT(_WordT);\n-  }\n-  static size_t _S_whichbyte( size_t __pos ) {\n-    return (__pos % __BITS_PER_WORDT(_WordT)) / CHAR_BIT;\n-  }\n-  static size_t _S_whichbit( size_t __pos ) {\n-    return __pos % __BITS_PER_WORDT(_WordT);\n-  }\n-  static _WordT _S_maskbit( size_t __pos ) {\n-    return (static_cast<_WordT>(1)) << _S_whichbit(__pos);\n-  }\n-\n-  _WordT& _M_getword(size_t __pos)       { return _M_w[_S_whichword(__pos)]; }\n-  _WordT  _M_getword(size_t __pos) const { return _M_w[_S_whichword(__pos)]; }\n-\n-  _WordT& _M_hiword()       { return _M_w[_Nw - 1]; }\n-  _WordT  _M_hiword() const { return _M_w[_Nw - 1]; }\n-\n-  void _M_do_and(const _Base_bitset<_Nw,_WordT>& __x) {\n-    for ( size_t __i = 0; __i < _Nw; __i++ ) {\n-      _M_w[__i] &= __x._M_w[__i];\n-    }\n-  }\n-\n-  void _M_do_or(const _Base_bitset<_Nw,_WordT>& __x) {\n-    for ( size_t __i = 0; __i < _Nw; __i++ ) {\n-      _M_w[__i] |= __x._M_w[__i];\n-    }\n-  }\n-\n-  void _M_do_xor(const _Base_bitset<_Nw,_WordT>& __x) {\n-    for ( size_t __i = 0; __i < _Nw; __i++ ) {\n-      _M_w[__i] ^= __x._M_w[__i];\n-    }\n-  }\n-\n-  void _M_do_left_shift(size_t __shift);\n-\n-  void _M_do_right_shift(size_t __shift);\n-\n-  void _M_do_flip() {\n-    for ( size_t __i = 0; __i < _Nw; __i++ ) {\n-      _M_w[__i] = ~_M_w[__i];\n-    }\n-  }\n-\n-  void _M_do_set() {\n-    for ( size_t __i = 0; __i < _Nw; __i++ ) {\n-      _M_w[__i] = ~static_cast<_WordT>(0);\n-    }\n-  }\n-\n-  void _M_do_reset() {\n-    for ( size_t __i = 0; __i < _Nw; __i++ ) {\n-      _M_w[__i] = 0;\n-    }\n-  }\n-\n-  bool _M_is_equal(const _Base_bitset<_Nw,_WordT>& __x) const {\n-    for (size_t __i = 0; __i < _Nw; ++__i) {\n-      if (_M_w[__i] != __x._M_w[__i])\n-        return false;\n-    }\n-    return true;\n-  }\n-\n-  bool _M_is_any() const {\n-    for ( size_t __i = 0; __i < _Nw; __i++ ) {\n-      if ( _M_w[__i] != static_cast<_WordT>(0) )\n-        return true;\n-    }\n-    return false;\n-  }\n-\n-  size_t _M_do_count() const {\n-    size_t __result = 0;\n-    const unsigned char* __byte_ptr = (const unsigned char*)_M_w;\n-    const unsigned char* __end_ptr = (const unsigned char*)(_M_w+_Nw);\n-\n-    while ( __byte_ptr < __end_ptr ) {\n-      __result += _Bit_count<true>::_S_bit_count[*__byte_ptr];\n-      __byte_ptr++;\n-    }\n-    return __result;\n-  }\n-\n-  unsigned long _M_do_to_ulong() const;\n-\n-  // find first \"on\" bit\n-  size_t _M_do_find_first(size_t __not_found) const;\n-\n-  // find the next \"on\" bit that follows \"prev\"\n-  size_t _M_do_find_next(size_t __prev, size_t __not_found) const;\n-};\n-\n-//\n-// Definitions of non-inline functions from _Base_bitset.\n-//\n-\n-template<size_t _Nw, class _WordT>\n-_Base_bitset<_Nw, _WordT>::_Base_bitset(unsigned long __val)\n-{\n-  _M_do_reset();\n-  const size_t __n = min(sizeof(unsigned long)*CHAR_BIT,\n-                         __BITS_PER_WORDT(_WordT)*_Nw);\n-  for(size_t __i = 0; __i < __n; ++__i, __val >>= 1)\n-    if ( __val & 0x1 )\n-      _M_getword(__i) |= _S_maskbit(__i);\n-}\n-\n-template<size_t _Nw, class _WordT>\n-void _Base_bitset<_Nw, _WordT>::_M_do_left_shift(size_t __shift)\n-{\n-  if (__shift != 0) {\n-    const size_t __wshift = __shift / __BITS_PER_WORDT(_WordT);\n-    const size_t __offset = __shift % __BITS_PER_WORDT(_WordT);\n-    const size_t __sub_offset = __BITS_PER_WORDT(_WordT) - __offset;\n-    size_t __n = _Nw - 1;\n-    for ( ; __n > __wshift; --__n)\n-      _M_w[__n] = (_M_w[__n - __wshift] << __offset) |\n-                (_M_w[__n - __wshift - 1] >> __sub_offset);\n-    if (__n == __wshift)\n-      _M_w[__n] = _M_w[0] << __offset;\n-    for (size_t __n1 = 0; __n1 < __n; ++__n1)\n-      _M_w[__n1] = static_cast<_WordT>(0);\n-  }\n-}\n-\n-template<size_t _Nw, class _WordT>\n-void _Base_bitset<_Nw, _WordT>::_M_do_right_shift(size_t __shift)\n-{\n-  if (__shift != 0) {\n-    const size_t __wshift = __shift / __BITS_PER_WORDT(_WordT);\n-    const size_t __offset = __shift % __BITS_PER_WORDT(_WordT);\n-    const size_t __sub_offset = __BITS_PER_WORDT(_WordT) - __offset;\n-    const size_t __limit = _Nw - __wshift - 1;\n-    size_t __n = 0;\n-    for ( ; __n < __limit; ++__n)\n-      _M_w[__n] = (_M_w[__n + __wshift] >> __offset) |\n-                  (_M_w[__n + __wshift + 1] << __sub_offset);\n-    _M_w[__limit] = _M_w[_Nw-1] >> __offset;\n-    for (size_t __n1 = __limit + 1; __n1 < _Nw; ++__n1)\n-      _M_w[__n1] = static_cast<_WordT>(0);\n-  }\n-}\n-\n-template<size_t _Nw, class _WordT>\n-unsigned long _Base_bitset<_Nw, _WordT>::_M_do_to_ulong() const\n-{\n-  const overflow_error __overflow(\"bitset\");\n-\n-  if (sizeof(_WordT) >= sizeof(unsigned long)) {\n-    for (size_t __i = 1; __i < _Nw; ++__i)\n-      if (_M_w[__i])\n-        __STL_THROW(__overflow);\n-\n-    const _WordT __mask = static_cast<_WordT>(static_cast<unsigned long>(-1));\n-    if (_M_w[0] & ~__mask)\n-      __STL_THROW(__overflow);\n-\n-    return static_cast<unsigned long>(_M_w[0] & __mask);\n-  }\n-  else {                      // sizeof(_WordT) < sizeof(unsigned long).\n-    const size_t __nwords =\n-      (sizeof(unsigned long) + sizeof(_WordT) - 1) / sizeof(_WordT);\n-\n-    size_t __min_nwords = __nwords;\n-    if (_Nw > __nwords) {\n-      for (size_t __i = __nwords; __i < _Nw; ++__i)\n-        if (_M_w[__i])\n-          __STL_THROW(__overflow);\n-    }\n-    else\n-      __min_nwords = _Nw;\n-\n-    // If unsigned long is 8 bytes and _WordT is 6 bytes, then an unsigned\n-    // long consists of all of one word plus 2 bytes from another word.\n-    const size_t __part = sizeof(unsigned long) % sizeof(_WordT);\n-\n-    if (__part != 0 && __nwords <= _Nw &&\n-        (_M_w[__min_nwords - 1] >> ((sizeof(_WordT) - __part) * CHAR_BIT)) != 0)\n-      __STL_THROW(__overflow);\n-\n-    unsigned long __result = 0;\n-    for (size_t __i = 0; __i < __min_nwords; ++__i) {\n-      __result |= static_cast<unsigned long>(\n-         _M_w[__i]) << (__i * sizeof(_WordT) * CHAR_BIT);\n-    }\n-    return __result;\n-  }\n-} // End _M_do_to_ulong\n-\n-template<size_t _Nw, class _WordT>\n-size_t _Base_bitset<_Nw, _WordT>::_M_do_find_first(size_t __not_found) const\n-{\n-  for ( size_t __i = 0; __i < _Nw; __i++ ) {\n-    _WordT __thisword = _M_w[__i];\n-    if ( __thisword != static_cast<_WordT>(0) ) {\n-      // find byte within word\n-      for ( size_t __j = 0; __j < sizeof(_WordT); __j++ ) {\n-        unsigned char __this_byte\n-          = static_cast<unsigned char>(__thisword & (~(unsigned char)0));\n-        if ( __this_byte )\n-          return __i*__BITS_PER_WORDT(_WordT) + __j*CHAR_BIT +\n-            _First_one<true>::_S_first_one[__this_byte];\n-\n-        __thisword >>= CHAR_BIT;\n-      }\n-    }\n-  }\n-  // not found, so return an indication of failure.\n-  return __not_found;\n-}\n-\n-template<size_t _Nw, class _WordT>\n-size_t\n-_Base_bitset<_Nw, _WordT>::_M_do_find_next(size_t __prev,\n-                                           size_t __not_found) const\n-{\n-  // make bound inclusive\n-  ++__prev;\n-\n-  // check out of bounds\n-  if ( __prev >= _Nw * __BITS_PER_WORDT(_WordT) )\n-    return __not_found;\n-\n-    // search first word\n-  size_t __i = _S_whichword(__prev);\n-  _WordT __thisword = _M_w[__i];\n-\n-    // mask off bits below bound\n-  __thisword &= (~static_cast<_WordT>(0)) << _S_whichbit(__prev);\n-\n-  if ( __thisword != static_cast<_WordT>(0) ) {\n-    // find byte within word\n-    // get first byte into place\n-    __thisword >>= _S_whichbyte(__prev) * CHAR_BIT;\n-    for ( size_t __j = _S_whichbyte(__prev); __j < sizeof(_WordT); __j++ ) {\n-      unsigned char __this_byte\n-        = static_cast<unsigned char>(__thisword & (~(unsigned char)0));\n-      if ( __this_byte )\n-        return __i*__BITS_PER_WORDT(_WordT) + __j*CHAR_BIT +\n-          _First_one<true>::_S_first_one[__this_byte];\n-\n-      __thisword >>= CHAR_BIT;\n-    }\n-  }\n-\n-  // check subsequent words\n-  __i++;\n-  for ( ; __i < _Nw; __i++ ) {\n-    _WordT __thisword = _M_w[__i];\n-    if ( __thisword != static_cast<_WordT>(0) ) {\n-      // find byte within word\n-      for ( size_t __j = 0; __j < sizeof(_WordT); __j++ ) {\n-        unsigned char __this_byte\n-          = static_cast<unsigned char>(__thisword & (~(unsigned char)0));\n-        if ( __this_byte )\n-          return __i*__BITS_PER_WORDT(_WordT) + __j*CHAR_BIT +\n-            _First_one<true>::_S_first_one[__this_byte];\n-\n-        __thisword >>= CHAR_BIT;\n-      }\n-    }\n-  }\n-\n-  // not found, so return an indication of failure.\n-  return __not_found;\n-} // end _M_do_find_next\n-\n-\n-// ------------------------------------------------------------\n-\n-//\n-// Base class: specialization for a single word.\n-//\n-\n-template<class _WordT>\n-struct _Base_bitset<1, _WordT> {\n-  _WordT _M_w;\n-\n-  _Base_bitset( void ) { _M_do_reset(); }\n-\n-  _Base_bitset(unsigned long __val);\n-\n-  static size_t _S_whichword( size_t __pos ) {\n-    return __pos / __BITS_PER_WORDT(_WordT);\n-  }\n-  static size_t _S_whichbyte( size_t __pos ) {\n-    return (__pos % __BITS_PER_WORDT(_WordT)) / CHAR_BIT;\n-  }\n-  static size_t _S_whichbit( size_t __pos ) {\n-    return __pos % __BITS_PER_WORDT(_WordT);\n-  }\n-  static _WordT _S_maskbit( size_t __pos ) {\n-    return (static_cast<_WordT>(1)) << _S_whichbit(__pos);\n-  }\n-\n-  _WordT& _M_getword(size_t)       { return _M_w; }\n-  _WordT  _M_getword(size_t) const { return _M_w; }\n-\n-  _WordT& _M_hiword()       { return _M_w; }\n-  _WordT  _M_hiword() const { return _M_w; }\n-\n-  void _M_do_and(const _Base_bitset<1,_WordT>& __x) { _M_w &= __x._M_w; }\n-  void _M_do_or(const _Base_bitset<1,_WordT>& __x)  { _M_w |= __x._M_w; }\n-  void _M_do_xor(const _Base_bitset<1,_WordT>& __x) { _M_w ^= __x._M_w; }\n-  void _M_do_left_shift(size_t __shift)     { _M_w <<= __shift; }\n-  void _M_do_right_shift(size_t __shift)    { _M_w >>= __shift; }\n-  void _M_do_flip()                       { _M_w = ~_M_w; }\n-  void _M_do_set()                        { _M_w = ~static_cast<_WordT>(0); }\n-  void _M_do_reset()                      { _M_w = 0; }\n-\n-  bool _M_is_equal(const _Base_bitset<1,_WordT>& __x) const {\n-    return _M_w == __x._M_w;\n-  }\n-  bool _M_is_any() const {\n-    return _M_w != 0;\n-  }\n-\n-  size_t _M_do_count() const {\n-    size_t __result = 0;\n-    const unsigned char* __byte_ptr = (const unsigned char*)&_M_w;\n-    const unsigned char* __end_ptr = ((const unsigned char*)&_M_w)+sizeof(_M_w);\n-    while ( __byte_ptr < __end_ptr ) {\n-      __result += _Bit_count<true>::_S_bit_count[*__byte_ptr];\n-      __byte_ptr++;\n-    }\n-    return __result;\n-  }\n-\n-  unsigned long _M_do_to_ulong() const {\n-    if (sizeof(_WordT) <= sizeof(unsigned long))\n-        return static_cast<unsigned long>(_M_w);\n-    else {\n-      const _WordT __mask = static_cast<_WordT>(static_cast<unsigned long>(-1));\n-      if (_M_w & ~__mask)\n-        __STL_THROW(overflow_error(\"bitset\"));\n-      return static_cast<unsigned long>(_M_w);\n-    }\n-  }\n-\n-  size_t _M_do_find_first(size_t __not_found) const;\n-\n-  // find the next \"on\" bit that follows \"prev\"\n-  size_t _M_do_find_next(size_t __prev, size_t __not_found) const;\n-\n-};\n-\n-//\n-// Definitions of non-inline functions from the single-word version of\n-//  _Base_bitset.\n-//\n-\n-template <class _WordT>\n-_Base_bitset<1, _WordT>::_Base_bitset(unsigned long __val)\n-{\n-  _M_do_reset();\n-  const size_t __n = min(sizeof(unsigned long)*CHAR_BIT,\n-                         __BITS_PER_WORDT(_WordT)*_Nw);\n-  for(size_t __i = 0; __i < __n; ++__i, __val >>= 1)\n-    if ( __val & 0x1 )\n-      _M_w |= _S_maskbit(__i);\n-}\n-\n-template <class _WordT>\n-size_t _Base_bitset<1, _WordT>::_M_do_find_first(size_t __not_found) const\n-{\n-  _WordT __thisword = _M_w;\n-\n-  if ( __thisword != static_cast<_WordT>(0) ) {\n-    // find byte within word\n-    for ( size_t __j = 0; __j < sizeof(_WordT); __j++ ) {\n-      unsigned char __this_byte\n-        = static_cast<unsigned char>(__thisword & (~(unsigned char)0));\n-      if ( __this_byte )\n-        return __j*CHAR_BIT + _First_one<true>::_S_first_one[__this_byte];\n-\n-      __thisword >>= CHAR_BIT;\n-    }\n-  }\n-  // not found, so return a value that indicates failure.\n-  return __not_found;\n-}\n-\n-template <class _WordT>\n-size_t\n-_Base_bitset<1, _WordT>::_M_do_find_next(size_t __prev,\n-                                         size_t __not_found ) const\n-{\n-  // make bound inclusive\n-  ++__prev;\n-\n-  // check out of bounds\n-  if ( __prev >= __BITS_PER_WORDT(_WordT) )\n-    return __not_found;\n-\n-    // search first (and only) word\n-  _WordT __thisword = _M_w;\n-\n-  // mask off bits below bound\n-  __thisword &= (~static_cast<_WordT>(0)) << _S_whichbit(__prev);\n-\n-  if ( __thisword != static_cast<_WordT>(0) ) {\n-    // find byte within word\n-    // get first byte into place\n-    __thisword >>= _S_whichbyte(__prev) * CHAR_BIT;\n-    for ( size_t __j = _S_whichbyte(__prev); __j < sizeof(_WordT); __j++ ) {\n-      unsigned char __this_byte\n-        = static_cast<unsigned char>(__thisword & (~(unsigned char)0));\n-      if ( __this_byte )\n-        return __j*CHAR_BIT + _First_one<true>::_S_first_one[__this_byte];\n-\n-      __thisword >>= CHAR_BIT;\n-    }\n-  }\n-\n-  // not found, so return a value that indicates failure.\n-  return __not_found;\n-} // end _M_do_find_next\n-\n-//\n-// One last specialization: _M_do_to_ulong() and the constructor from\n-// unsigned long are very simple if the bitset consists of a single\n-// word of type unsigned long.\n-//\n-\n-template<>\n-inline unsigned long\n-_Base_bitset<1, unsigned long>::_M_do_to_ulong() const { return _M_w; }\n-\n-template<>\n-inline _Base_bitset<1, unsigned long>::_Base_bitset(unsigned long __val) {\n-  _M_w = __val;\n-}\n-\n-\n-// ------------------------------------------------------------\n-// Helper class to zero out the unused high-order bits in the highest word.\n-\n-template <class _WordT, size_t _Extrabits> struct _Sanitize {\n-  static void _M_do_sanitize(_WordT& __val)\n-    { __val &= ~((~static_cast<_WordT>(0)) << _Extrabits); }\n-};\n-\n-template <class _WordT> struct _Sanitize<_WordT, 0> {\n-  static void _M_do_sanitize(_WordT) {}\n-};\n-\n-// ------------------------------------------------------------\n-// Class bitset.\n-//   _Nb may be any nonzero number of type size_t.\n-//   Type _WordT may be any unsigned integral type.\n-\n-template<size_t _Nb, class _WordT = unsigned long>\n-class bitset : private _Base_bitset<__BITSET_WORDS(_Nb,_WordT), _WordT>\n-{\n-private:\n-  typedef _Base_bitset<__BITSET_WORDS(_Nb,_WordT), _WordT> _Base;\n-\n-  // Import base's protected interface.  Necessary because of new template\n-  // name resolution rules.\n-  using _Base::_S_whichword;\n-  using _Base::_S_whichbyte;\n-  using _Base::_S_whichbit;\n-  using _Base::_S_maskbit;\n-  using _Base::_M_getword;\n-  using _Base::_M_hiword;\n-  using _Base::_M_do_and;\n-  using _Base::_M_do_or;\n-  using _Base::_M_do_xor;\n-  using _Base::_M_do_left_shift;\n-  using _Base::_M_do_right_shift;\n-  using _Base::_M_do_flip;\n-  using _Base::_M_do_set;\n-  using _Base::_M_do_reset;\n-  using _Base::_M_is_equal;\n-  using _Base::_M_is_any;\n-  using _Base::_M_do_count;\n-  using _Base::_M_do_to_ulong;\n-  using _Base::_M_do_find_first;\n-  using _Base::_M_do_find_next;\n-\n-private:\n-  void _M_do_sanitize() {\n-    _Sanitize<_WordT,_Nb%__BITS_PER_WORDT(_WordT) >\n-      ::_M_do_sanitize(_M_hiword());\n-  }\n-\n-public:\n-\n-  // bit reference:\n-  class reference;\n-  friend class reference;\n-  class reference {\n-    friend class bitset;\n-\n-    _WordT *_M_wp;\n-    size_t _M_bpos;\n-\n-    // left undefined\n-    reference();\n-\n-    reference( bitset& __b, size_t __pos ) {\n-      _M_wp = &__b._M_getword(__pos);\n-      _M_bpos = _S_whichbit(__pos);\n-    }\n-\n-  public:\n-    ~reference() {}\n-\n-    // for b[i] = __x;\n-    reference& operator=(bool __x) {\n-      if ( __x )\n-        *_M_wp |= _S_maskbit(_M_bpos);\n-      else\n-        *_M_wp &= ~_S_maskbit(_M_bpos);\n-\n-      return *this;\n-    }\n-\n-    // for b[i] = b[__j];\n-    reference& operator=(const reference& __j) {\n-      if ( (*(__j._M_wp) & _S_maskbit(__j._M_bpos)) )\n-        *_M_wp |= _S_maskbit(_M_bpos);\n-      else\n-        *_M_wp &= ~_S_maskbit(_M_bpos);\n-\n-      return *this;\n-    }\n-\n-    // flips the bit\n-    bool operator~() const { return (*(_M_wp) & _S_maskbit(_M_bpos)) == 0; }\n-\n-    // for __x = b[i];\n-    operator bool() const { return (*(_M_wp) & _S_maskbit(_M_bpos)) != 0; }\n-\n-    // for b[i].flip();\n-    reference& flip() {\n-      *_M_wp ^= _S_maskbit(_M_bpos);\n-      return *this;\n-    }\n-  };\n-\n-  // 23.3.5.1 constructors:\n-  bitset() {}\n-  bitset(unsigned long __val) :\n-    _Base_bitset<__BITSET_WORDS(_Nb,_WordT), _WordT>(__val) {}\n-\n-  template<class _CharT, class _Traits, class _Alloc>\n-  explicit bitset(const basic_string<_CharT,_Traits,_Alloc>& __s,\n-                  size_t __pos = 0,\n-                  size_t __n = size_t(basic_string<_CharT,_Traits,_Alloc>::npos))\n-    : _Base()\n-  {\n-    if (__pos > __s.size())\n-      __STL_THROW(out_of_range(\"bitset\"));\n-    _M_copy_from_string(__s, __pos, __n);\n-  }\n-\n-  // 23.3.5.2 bitset operations:\n-  bitset<_Nb,_WordT>& operator&=(const bitset<_Nb,_WordT>& __rhs) {\n-    _M_do_and(__rhs);\n-    return *this;\n-  }\n-\n-  bitset<_Nb,_WordT>& operator|=(const bitset<_Nb,_WordT>& __rhs) {\n-    _M_do_or(__rhs);\n-    return *this;\n-  }\n-\n-  bitset<_Nb,_WordT>& operator^=(const bitset<_Nb,_WordT>& __rhs) {\n-    _M_do_xor(__rhs);\n-    return *this;\n-  }\n-\n-  bitset<_Nb,_WordT>& operator<<=(size_t __pos) {\n-    _M_do_left_shift(__pos);\n-    _M_do_sanitize();\n-    return *this;\n-  }\n-\n-  bitset<_Nb,_WordT>& operator>>=(size_t __pos) {\n-    _M_do_right_shift(__pos);\n-    _M_do_sanitize();\n-    return *this;\n-  }\n-\n-  //\n-  // Extension:\n-  // Versions of single-bit set, reset, flip, test with no range checking.\n-  //\n-\n-  bitset<_Nb,_WordT>& _Unchecked_set(size_t __pos) {\n-    _M_getword(__pos) |= _S_maskbit(__pos);\n-    return *this;\n-  }\n-\n-  bitset<_Nb,_WordT>& _Unchecked_set(size_t __pos, int __val) {\n-    if (__val)\n-      _M_getword(__pos) |= _S_maskbit(__pos);\n-    else\n-      _M_getword(__pos) &= ~_S_maskbit(__pos);\n-\n-    return *this;\n-  }\n-\n-  bitset<_Nb,_WordT>& _Unchecked_reset(size_t __pos) {\n-    _M_getword(__pos) &= ~_S_maskbit(__pos);\n-    return *this;\n-  }\n-\n-  bitset<_Nb,_WordT>& _Unchecked_flip(size_t __pos) {\n-    _M_getword(__pos) ^= _S_maskbit(__pos);\n-    return *this;\n-  }\n-\n-  bool _Unchecked_test(size_t __pos) const {\n-    return (_M_getword(__pos) & _S_maskbit(__pos)) != static_cast<_WordT>(0);\n-  }\n-\n-  // Set, reset, and flip.\n-\n-  bitset<_Nb,_WordT>& set() {\n-    _M_do_set();\n-    _M_do_sanitize();\n-    return *this;\n-  }\n-\n-  bitset<_Nb,_WordT>& set(size_t __pos) {\n-    if (__pos >= _Nb)\n-      __STL_THROW(out_of_range(\"bitset\"));\n-\n-    return _Unchecked_set(__pos);\n-  }\n-\n-  bitset<_Nb,_WordT>& set(size_t __pos, int __val) {\n-    if (__pos >= _Nb)\n-      __STL_THROW(out_of_range(\"bitset\"));\n-\n-    return _Unchecked_set(__pos, __val);\n-  }\n-\n-  bitset<_Nb,_WordT>& reset() {\n-    _M_do_reset();\n-    return *this;\n-  }\n-\n-  bitset<_Nb,_WordT>& reset(size_t __pos) {\n-    if (__pos >= _Nb)\n-      __STL_THROW(out_of_range(\"bitset\"));\n-\n-    return _Unchecked_reset(__pos);\n-  }\n-\n-  bitset<_Nb,_WordT>& flip() {\n-    _M_do_flip();\n-    _M_do_sanitize();\n-    return *this;\n-  }\n-\n-  bitset<_Nb,_WordT>& flip(size_t __pos) {\n-    if (__pos >= _Nb)\n-      __STL_THROW(out_of_range(\"bitset\"));\n-\n-    return _Unchecked_flip(__pos);\n-  }\n-\n-  bitset<_Nb,_WordT> operator~() const {\n-    return bitset<_Nb,_WordT>(*this).flip();\n-  }\n-\n-  // element access:\n-  //for b[i];\n-  reference operator[](size_t __pos) { return reference(*this,__pos); }\n-  bool operator[](size_t __pos) const { return _Unchecked_test(__pos); }\n-\n-  unsigned long to_ulong() const { return _M_do_to_ulong(); }\n-\n-#ifdef __STL_EXPLICIT_FUNCTION_TMPL_ARGS\n-  template <class _CharT, class _Traits, class _Alloc>\n-  basic_string<_CharT, _Traits, _Alloc> to_string() const {\n-    basic_string<_CharT, _Traits, _Alloc> __result;\n-    _M_copy_to_string(__result);\n-    return __result;\n-  }\n-#endif /* __STL_EXPLICIT_FUNCTION_TMPL_ARGS */\n-\n-  // Helper functions for string operations.\n-  template<class _CharT, class _Traits, class _Alloc>\n-  void _M_copy_from_string(const basic_string<_CharT,_Traits,_Alloc>& __s,\n-                          size_t,\n-                          size_t);\n-\n-  // Helper functions for string operations.\n-  template<class _CharT, class _Traits, class _Alloc>\n-  void _M_copy_to_string(basic_string<_CharT,_Traits,_Alloc>&) const;\n-\n-  size_t count() const { return _M_do_count(); }\n-\n-  size_t size() const { return _Nb; }\n-\n-  bool operator==(const bitset<_Nb,_WordT>& __rhs) const {\n-    return _M_is_equal(__rhs);\n-  }\n-  bool operator!=(const bitset<_Nb,_WordT>& __rhs) const {\n-    return !_M_is_equal(__rhs);\n-  }\n-\n-  bool test(size_t __pos) const {\n-    if (__pos > _Nb)\n-      __STL_THROW(out_of_range(\"bitset\"));\n-\n-    return _Unchecked_test(__pos);\n-  }\n-\n-  bool any() const { return _M_is_any(); }\n-  bool none() const { return !_M_is_any(); }\n-\n-  bitset<_Nb,_WordT> operator<<(size_t __pos) const\n-    { return bitset<_Nb,_WordT>(*this) <<= __pos; }\n-  bitset<_Nb,_WordT> operator>>(size_t __pos) const\n-    { return bitset<_Nb,_WordT>(*this) >>= __pos; }\n-\n-  //\n-  // EXTENSIONS: bit-find operations.  These operations are\n-  // experimental, and are subject to change or removal in future\n-  // versions.\n-  //\n-\n-  // find the index of the first \"on\" bit\n-  size_t _Find_first() const\n-    { return _M_do_find_first(_Nb); }\n-\n-  // find the index of the next \"on\" bit after prev\n-  size_t _Find_next( size_t __prev ) const\n-    { return _M_do_find_next(__prev, _Nb); }\n-\n-};\n-\n-//\n-// Definitions of non-inline member functions.\n-//\n-\n-template <size_t _Nb, class _WordT>\n-template<class _CharT, class _Traits, class _Alloc>\n-void bitset<_Nb, _WordT>\n-  ::_M_copy_from_string(const basic_string<_CharT,_Traits,_Alloc>& __s,\n-                        size_t __pos,\n-                        size_t __n)\n-{\n-  reset();\n-  const size_t __nbits = min(_Nb, min(__n, __s.size() - __pos));\n-  for (size_t __i = 0; __i < __nbits; ++__i) {\n-    switch(__s[__pos + __nbits - __i - 1]) {\n-    case '0':\n-      break;\n-    case '1':\n-      set(__i);\n-      break;\n-    default:\n-      __STL_THROW(invalid_argument(\"bitset\"));\n-    }\n-  }\n-}\n-\n-template <size_t _Nb, class _WordT>\n-template <class _CharT, class _Traits, class _Alloc>\n-void bitset<_Nb, _WordT>\n-  ::_M_copy_to_string(basic_string<_CharT, _Traits, _Alloc>& __s) const\n-{\n-  __s.assign(_Nb, '0');\n-\n-  for (size_t __i = 0; __i < _Nb; ++__i)\n-    if (_Unchecked_test(__i))\n-      __s[_Nb - 1 - __i] = '1';\n-}\n-\n-// ------------------------------------------------------------\n-\n-//\n-// 23.3.5.3 bitset operations:\n-//\n-\n-template <size_t _Nb, class _WordT>\n-inline bitset<_Nb,_WordT> operator&(const bitset<_Nb,_WordT>& __x,\n-                                    const bitset<_Nb,_WordT>& __y) {\n-  bitset<_Nb,_WordT> __result(__x);\n-  __result &= __y;\n-  return __result;\n-}\n-\n-\n-template <size_t _Nb, class _WordT>\n-inline bitset<_Nb,_WordT> operator|(const bitset<_Nb,_WordT>& __x,\n-                                    const bitset<_Nb,_WordT>& __y) {\n-  bitset<_Nb,_WordT> __result(__x);\n-  __result |= __y;\n-  return __result;\n-}\n-\n-template <size_t _Nb, class _WordT>\n-inline bitset<_Nb,_WordT> operator^(const bitset<_Nb,_WordT>& __x,\n-                                    const bitset<_Nb,_WordT>& __y) {\n-  bitset<_Nb,_WordT> __result(__x);\n-  __result ^= __y;\n-  return __result;\n-}\n-\n-// NOTE: these must be rewritten once we have templatized iostreams.\n-\n-template <size_t _Nb, class _WordT>\n-istream&\n-operator>>(istream& __is, bitset<_Nb,_WordT>& __x) {\n-  string __tmp;\n-  __tmp.reserve(_Nb);\n-\n-  // In new templatized iostreams, use istream::sentry\n-  if (__is.flags() & ios::skipws) {\n-    char __c;\n-    do\n-      __is.get(__c);\n-    while (__is && isspace(__c));\n-    if (__is)\n-      __is.putback(__c);\n-  }\n-\n-  for (size_t __i = 0; __i < _Nb; ++__i) {\n-    char __c;\n-    __is.get(__c);\n-\n-    if (!__is)\n-      break;\n-    else if (__c != '0' && __c != '1') {\n-      __is.putback(__c);\n-      break;\n-    }\n-    else\n-      __tmp.push_back(__c);\n-  }\n-\n-  if (__tmp.empty())\n-    __is.clear(__is.rdstate() | ios::failbit);\n-  else\n-    __x._M_copy_from_string(__tmp, static_cast<size_t>(0), _Nb);\n-\n-  return __is;\n-}\n-\n-template <size_t _Nb, class _WordT>\n-ostream& operator<<(ostream& __os, const bitset<_Nb,_WordT>& __x) {\n-  string __tmp;\n-  __x._M_copy_to_string(__tmp);\n-  return __os << __tmp;\n-}\n-\n-// ------------------------------------------------------------\n-// Lookup tables for find and count operations.\n-\n-template<bool __dummy>\n-unsigned char _Bit_count<__dummy>::_S_bit_count[] = {\n-  0, /*   0 */ 1, /*   1 */ 1, /*   2 */ 2, /*   3 */ 1, /*   4 */\n-  2, /*   5 */ 2, /*   6 */ 3, /*   7 */ 1, /*   8 */ 2, /*   9 */\n-  2, /*  10 */ 3, /*  11 */ 2, /*  12 */ 3, /*  13 */ 3, /*  14 */\n-  4, /*  15 */ 1, /*  16 */ 2, /*  17 */ 2, /*  18 */ 3, /*  19 */\n-  2, /*  20 */ 3, /*  21 */ 3, /*  22 */ 4, /*  23 */ 2, /*  24 */\n-  3, /*  25 */ 3, /*  26 */ 4, /*  27 */ 3, /*  28 */ 4, /*  29 */\n-  4, /*  30 */ 5, /*  31 */ 1, /*  32 */ 2, /*  33 */ 2, /*  34 */\n-  3, /*  35 */ 2, /*  36 */ 3, /*  37 */ 3, /*  38 */ 4, /*  39 */\n-  2, /*  40 */ 3, /*  41 */ 3, /*  42 */ 4, /*  43 */ 3, /*  44 */\n-  4, /*  45 */ 4, /*  46 */ 5, /*  47 */ 2, /*  48 */ 3, /*  49 */\n-  3, /*  50 */ 4, /*  51 */ 3, /*  52 */ 4, /*  53 */ 4, /*  54 */\n-  5, /*  55 */ 3, /*  56 */ 4, /*  57 */ 4, /*  58 */ 5, /*  59 */\n-  4, /*  60 */ 5, /*  61 */ 5, /*  62 */ 6, /*  63 */ 1, /*  64 */\n-  2, /*  65 */ 2, /*  66 */ 3, /*  67 */ 2, /*  68 */ 3, /*  69 */\n-  3, /*  70 */ 4, /*  71 */ 2, /*  72 */ 3, /*  73 */ 3, /*  74 */\n-  4, /*  75 */ 3, /*  76 */ 4, /*  77 */ 4, /*  78 */ 5, /*  79 */\n-  2, /*  80 */ 3, /*  81 */ 3, /*  82 */ 4, /*  83 */ 3, /*  84 */\n-  4, /*  85 */ 4, /*  86 */ 5, /*  87 */ 3, /*  88 */ 4, /*  89 */\n-  4, /*  90 */ 5, /*  91 */ 4, /*  92 */ 5, /*  93 */ 5, /*  94 */\n-  6, /*  95 */ 2, /*  96 */ 3, /*  97 */ 3, /*  98 */ 4, /*  99 */\n-  3, /* 100 */ 4, /* 101 */ 4, /* 102 */ 5, /* 103 */ 3, /* 104 */\n-  4, /* 105 */ 4, /* 106 */ 5, /* 107 */ 4, /* 108 */ 5, /* 109 */\n-  5, /* 110 */ 6, /* 111 */ 3, /* 112 */ 4, /* 113 */ 4, /* 114 */\n-  5, /* 115 */ 4, /* 116 */ 5, /* 117 */ 5, /* 118 */ 6, /* 119 */\n-  4, /* 120 */ 5, /* 121 */ 5, /* 122 */ 6, /* 123 */ 5, /* 124 */\n-  6, /* 125 */ 6, /* 126 */ 7, /* 127 */ 1, /* 128 */ 2, /* 129 */\n-  2, /* 130 */ 3, /* 131 */ 2, /* 132 */ 3, /* 133 */ 3, /* 134 */\n-  4, /* 135 */ 2, /* 136 */ 3, /* 137 */ 3, /* 138 */ 4, /* 139 */\n-  3, /* 140 */ 4, /* 141 */ 4, /* 142 */ 5, /* 143 */ 2, /* 144 */\n-  3, /* 145 */ 3, /* 146 */ 4, /* 147 */ 3, /* 148 */ 4, /* 149 */\n-  4, /* 150 */ 5, /* 151 */ 3, /* 152 */ 4, /* 153 */ 4, /* 154 */\n-  5, /* 155 */ 4, /* 156 */ 5, /* 157 */ 5, /* 158 */ 6, /* 159 */\n-  2, /* 160 */ 3, /* 161 */ 3, /* 162 */ 4, /* 163 */ 3, /* 164 */\n-  4, /* 165 */ 4, /* 166 */ 5, /* 167 */ 3, /* 168 */ 4, /* 169 */\n-  4, /* 170 */ 5, /* 171 */ 4, /* 172 */ 5, /* 173 */ 5, /* 174 */\n-  6, /* 175 */ 3, /* 176 */ 4, /* 177 */ 4, /* 178 */ 5, /* 179 */\n-  4, /* 180 */ 5, /* 181 */ 5, /* 182 */ 6, /* 183 */ 4, /* 184 */\n-  5, /* 185 */ 5, /* 186 */ 6, /* 187 */ 5, /* 188 */ 6, /* 189 */\n-  6, /* 190 */ 7, /* 191 */ 2, /* 192 */ 3, /* 193 */ 3, /* 194 */\n-  4, /* 195 */ 3, /* 196 */ 4, /* 197 */ 4, /* 198 */ 5, /* 199 */\n-  3, /* 200 */ 4, /* 201 */ 4, /* 202 */ 5, /* 203 */ 4, /* 204 */\n-  5, /* 205 */ 5, /* 206 */ 6, /* 207 */ 3, /* 208 */ 4, /* 209 */\n-  4, /* 210 */ 5, /* 211 */ 4, /* 212 */ 5, /* 213 */ 5, /* 214 */\n-  6, /* 215 */ 4, /* 216 */ 5, /* 217 */ 5, /* 218 */ 6, /* 219 */\n-  5, /* 220 */ 6, /* 221 */ 6, /* 222 */ 7, /* 223 */ 3, /* 224 */\n-  4, /* 225 */ 4, /* 226 */ 5, /* 227 */ 4, /* 228 */ 5, /* 229 */\n-  5, /* 230 */ 6, /* 231 */ 4, /* 232 */ 5, /* 233 */ 5, /* 234 */\n-  6, /* 235 */ 5, /* 236 */ 6, /* 237 */ 6, /* 238 */ 7, /* 239 */\n-  4, /* 240 */ 5, /* 241 */ 5, /* 242 */ 6, /* 243 */ 5, /* 244 */\n-  6, /* 245 */ 6, /* 246 */ 7, /* 247 */ 5, /* 248 */ 6, /* 249 */\n-  6, /* 250 */ 7, /* 251 */ 6, /* 252 */ 7, /* 253 */ 7, /* 254 */\n-  8  /* 255 */\n-}; // end _Bit_count\n-\n-template<bool __dummy>\n-unsigned char _First_one<__dummy>::_S_first_one[] = {\n-  0, /*   0 */ 0, /*   1 */ 1, /*   2 */ 0, /*   3 */ 2, /*   4 */\n-  0, /*   5 */ 1, /*   6 */ 0, /*   7 */ 3, /*   8 */ 0, /*   9 */\n-  1, /*  10 */ 0, /*  11 */ 2, /*  12 */ 0, /*  13 */ 1, /*  14 */\n-  0, /*  15 */ 4, /*  16 */ 0, /*  17 */ 1, /*  18 */ 0, /*  19 */\n-  2, /*  20 */ 0, /*  21 */ 1, /*  22 */ 0, /*  23 */ 3, /*  24 */\n-  0, /*  25 */ 1, /*  26 */ 0, /*  27 */ 2, /*  28 */ 0, /*  29 */\n-  1, /*  30 */ 0, /*  31 */ 5, /*  32 */ 0, /*  33 */ 1, /*  34 */\n-  0, /*  35 */ 2, /*  36 */ 0, /*  37 */ 1, /*  38 */ 0, /*  39 */\n-  3, /*  40 */ 0, /*  41 */ 1, /*  42 */ 0, /*  43 */ 2, /*  44 */\n-  0, /*  45 */ 1, /*  46 */ 0, /*  47 */ 4, /*  48 */ 0, /*  49 */\n-  1, /*  50 */ 0, /*  51 */ 2, /*  52 */ 0, /*  53 */ 1, /*  54 */\n-  0, /*  55 */ 3, /*  56 */ 0, /*  57 */ 1, /*  58 */ 0, /*  59 */\n-  2, /*  60 */ 0, /*  61 */ 1, /*  62 */ 0, /*  63 */ 6, /*  64 */\n-  0, /*  65 */ 1, /*  66 */ 0, /*  67 */ 2, /*  68 */ 0, /*  69 */\n-  1, /*  70 */ 0, /*  71 */ 3, /*  72 */ 0, /*  73 */ 1, /*  74 */\n-  0, /*  75 */ 2, /*  76 */ 0, /*  77 */ 1, /*  78 */ 0, /*  79 */\n-  4, /*  80 */ 0, /*  81 */ 1, /*  82 */ 0, /*  83 */ 2, /*  84 */\n-  0, /*  85 */ 1, /*  86 */ 0, /*  87 */ 3, /*  88 */ 0, /*  89 */\n-  1, /*  90 */ 0, /*  91 */ 2, /*  92 */ 0, /*  93 */ 1, /*  94 */\n-  0, /*  95 */ 5, /*  96 */ 0, /*  97 */ 1, /*  98 */ 0, /*  99 */\n-  2, /* 100 */ 0, /* 101 */ 1, /* 102 */ 0, /* 103 */ 3, /* 104 */\n-  0, /* 105 */ 1, /* 106 */ 0, /* 107 */ 2, /* 108 */ 0, /* 109 */\n-  1, /* 110 */ 0, /* 111 */ 4, /* 112 */ 0, /* 113 */ 1, /* 114 */\n-  0, /* 115 */ 2, /* 116 */ 0, /* 117 */ 1, /* 118 */ 0, /* 119 */\n-  3, /* 120 */ 0, /* 121 */ 1, /* 122 */ 0, /* 123 */ 2, /* 124 */\n-  0, /* 125 */ 1, /* 126 */ 0, /* 127 */ 7, /* 128 */ 0, /* 129 */\n-  1, /* 130 */ 0, /* 131 */ 2, /* 132 */ 0, /* 133 */ 1, /* 134 */\n-  0, /* 135 */ 3, /* 136 */ 0, /* 137 */ 1, /* 138 */ 0, /* 139 */\n-  2, /* 140 */ 0, /* 141 */ 1, /* 142 */ 0, /* 143 */ 4, /* 144 */\n-  0, /* 145 */ 1, /* 146 */ 0, /* 147 */ 2, /* 148 */ 0, /* 149 */\n-  1, /* 150 */ 0, /* 151 */ 3, /* 152 */ 0, /* 153 */ 1, /* 154 */\n-  0, /* 155 */ 2, /* 156 */ 0, /* 157 */ 1, /* 158 */ 0, /* 159 */\n-  5, /* 160 */ 0, /* 161 */ 1, /* 162 */ 0, /* 163 */ 2, /* 164 */\n-  0, /* 165 */ 1, /* 166 */ 0, /* 167 */ 3, /* 168 */ 0, /* 169 */\n-  1, /* 170 */ 0, /* 171 */ 2, /* 172 */ 0, /* 173 */ 1, /* 174 */\n-  0, /* 175 */ 4, /* 176 */ 0, /* 177 */ 1, /* 178 */ 0, /* 179 */\n-  2, /* 180 */ 0, /* 181 */ 1, /* 182 */ 0, /* 183 */ 3, /* 184 */\n-  0, /* 185 */ 1, /* 186 */ 0, /* 187 */ 2, /* 188 */ 0, /* 189 */\n-  1, /* 190 */ 0, /* 191 */ 6, /* 192 */ 0, /* 193 */ 1, /* 194 */\n-  0, /* 195 */ 2, /* 196 */ 0, /* 197 */ 1, /* 198 */ 0, /* 199 */\n-  3, /* 200 */ 0, /* 201 */ 1, /* 202 */ 0, /* 203 */ 2, /* 204 */\n-  0, /* 205 */ 1, /* 206 */ 0, /* 207 */ 4, /* 208 */ 0, /* 209 */\n-  1, /* 210 */ 0, /* 211 */ 2, /* 212 */ 0, /* 213 */ 1, /* 214 */\n-  0, /* 215 */ 3, /* 216 */ 0, /* 217 */ 1, /* 218 */ 0, /* 219 */\n-  2, /* 220 */ 0, /* 221 */ 1, /* 222 */ 0, /* 223 */ 5, /* 224 */\n-  0, /* 225 */ 1, /* 226 */ 0, /* 227 */ 2, /* 228 */ 0, /* 229 */\n-  1, /* 230 */ 0, /* 231 */ 3, /* 232 */ 0, /* 233 */ 1, /* 234 */\n-  0, /* 235 */ 2, /* 236 */ 0, /* 237 */ 1, /* 238 */ 0, /* 239 */\n-  4, /* 240 */ 0, /* 241 */ 1, /* 242 */ 0, /* 243 */ 2, /* 244 */\n-  0, /* 245 */ 1, /* 246 */ 0, /* 247 */ 3, /* 248 */ 0, /* 249 */\n-  1, /* 250 */ 0, /* 251 */ 2, /* 252 */ 0, /* 253 */ 1, /* 254 */\n-  0, /* 255 */\n-}; // end _First_one\n-\n-#if defined(__sgi) && !defined(__GNUC__) && (_MIPS_SIM != _MIPS_SIM_ABI32)\n-#pragma reset woff 1209\n-#endif\n-\n-__STL_END_NAMESPACE\n-\n-\n-#undef __BITS_PER_WORDT\n-#undef __BITSET_WORDS\n-\n-#endif /* __SGI_STL_BITSET */\n-\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "03a3fb1c7f2352dd856528412680ee5644501e03", "filename": "libstdc++/stl/bvector.h", "status": "removed", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fbvector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fbvector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fbvector.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,51 +0,0 @@\n-/*\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n- * Copyright (c) 1996\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_BVECTOR_H\n-#define __SGI_STL_BVECTOR_H\n-\n-#ifdef __STL_CLASS_PARTIAL_SPECIALIZATION\n-#include <vector.h>\n-#else\n-#include <algobase.h>\n-#include <alloc.h>\n-#endif \n-\n-#include <stl_bvector.h>\n-\n-#ifdef __STL_USE_NAMESPACES\n-\n-using __STD::bit_vector;\n-\n-#endif /* __STL_USE_NAMESPACES */\n-\n-#endif /* __SGI_STL_BVECTOR_H */\n-\n-// Local Variables:\n-// mode:C++\n-// End:\n-\n-"}, {"sha": "0bfcc2c20a51d42f3e6ba252925c4c14799d1218", "filename": "libstdc++/stl/defalloc.h", "status": "removed", "additions": 0, "deletions": 87, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fdefalloc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fdefalloc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fdefalloc.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,87 +0,0 @@\n-/*\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- */\n-\n-// Inclusion of this file is DEPRECATED.  This is the original HP\n-// default allocator.  It is provided only for backward compatibility.\n-// This file WILL BE REMOVED in a future release.\n-//\n-// DO NOT USE THIS FILE unless you have an old container implementation\n-// that requires an allocator with the HP-style interface.  \n-//\n-// Standard-conforming allocators have a very different interface.  The\n-// standard default allocator is declared in the header <memory>.\n-\n-#ifndef DEFALLOC_H\n-#define DEFALLOC_H\n-\n-#include <new.h>\n-#include <stddef.h>\n-#include <stdlib.h>\n-#include <limits.h>\n-#include <iostream.h>\n-#include <algobase.h>\n-\n-\n-template <class T>\n-inline T* allocate(ptrdiff_t size, T*) {\n-    set_new_handler(0);\n-    T* tmp = (T*)(::operator new((size_t)(size * sizeof(T))));\n-    if (tmp == 0) {\n-\tcerr << \"out of memory\" << endl; \n-\texit(1);\n-    }\n-    return tmp;\n-}\n-\n-\n-template <class T>\n-inline void deallocate(T* buffer) {\n-    ::operator delete(buffer);\n-}\n-\n-template <class T>\n-class allocator {\n-public:\n-    typedef T value_type;\n-    typedef T* pointer;\n-    typedef const T* const_pointer;\n-    typedef T& reference;\n-    typedef const T& const_reference;\n-    typedef size_t size_type;\n-    typedef ptrdiff_t difference_type;\n-    pointer allocate(size_type n) { \n-\treturn ::allocate((difference_type)n, (pointer)0);\n-    }\n-    void deallocate(pointer p) { ::deallocate(p); }\n-    pointer address(reference x) { return (pointer)&x; }\n-    const_pointer const_address(const_reference x) { \n-\treturn (const_pointer)&x; \n-    }\n-    size_type init_page_size() { \n-\treturn max(size_type(1), size_type(4096/sizeof(T))); \n-    }\n-    size_type max_size() const { \n-\treturn max(size_type(1), size_type(UINT_MAX/sizeof(T))); \n-    }\n-};\n-\n-class allocator<void> {\n-public:\n-    typedef void* pointer;\n-};\n-\n-\n-\n-#endif"}, {"sha": "61654acad5bb0e40e50d5eeb902a864d20b542b9", "filename": "libstdc++/stl/deque", "status": "removed", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fdeque", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fdeque", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fdeque?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,40 +0,0 @@\n-/*\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n- * Copyright (c) 1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_DEQUE\n-#define __SGI_STL_DEQUE\n-\n-#include <stl_algobase.h>\n-#include <stl_alloc.h>\n-#include <stl_construct.h>\n-#include <stl_uninitialized.h>\n-#include <stl_deque.h>\n-\n-#endif /* __SGI_STL_DEQUE */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "ede38b1ceba81c92347d8dc2392f08cad8147834", "filename": "libstdc++/stl/deque.h", "status": "removed", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fdeque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fdeque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fdeque.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,42 +0,0 @@\n-/*\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n- * Copyright (c) 1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_DEQUE_H\n-#define __SGI_STL_DEQUE_H\n-\n-#include <algobase.h>\n-#include <alloc.h>\n-#include <stl_deque.h>\n-\n-#ifdef __STL_USE_NAMESPACES\n-using __STD::deque;\n-#endif /* __STL_USE_NAMESPACES */\n-\n-#endif /* __SGI_STL_DEQUE_H */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "6474dd99fa2e0546c5bcf730389e653914b19949", "filename": "libstdc++/stl/function.h", "status": "removed", "additions": 0, "deletions": 118, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Ffunction.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,118 +0,0 @@\n-/*\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n- * Copyright (c) 1996,1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_FUNCTION_H\n-#define __SGI_STL_FUNCTION_H\n-\n-#ifndef __STL_CONFIG_H\n-#include <stl_config.h>\n-#endif\n-#ifndef __SGI_STL_INTERNAL_RELOPS\n-#include <stl_relops.h>\n-#endif\n-#include <stddef.h>\n-#ifndef __SGI_STL_INTERNAL_FUNCTION_H\n-#include <stl_function.h>\n-#endif\n-\n-#ifdef __STL_USE_NAMESPACE_FOR_RELOPS\n-\n-// Names from stl_relops.h\n-using __STD_RELOPS::operator!=;\n-using __STD_RELOPS::operator>;\n-using __STD_RELOPS::operator<=;\n-using __STD_RELOPS::operator>=;\n-\n-#endif /* __STL_USE_NAMESPACE_FOR_RELOPS */\n-\n-#ifdef __STL_USE_NAMESPACES\n-\n-// Names from stl_function.h\n-using __STD::unary_function; \n-using __STD::binary_function; \n-using __STD::plus; \n-using __STD::minus; \n-using __STD::multiplies; \n-using __STD::divides; \n-using __STD::identity_element; \n-using __STD::modulus; \n-using __STD::negate; \n-using __STD::equal_to; \n-using __STD::not_equal_to; \n-using __STD::greater; \n-using __STD::less; \n-using __STD::greater_equal; \n-using __STD::less_equal; \n-using __STD::logical_and; \n-using __STD::logical_or; \n-using __STD::logical_not; \n-using __STD::unary_negate; \n-using __STD::binary_negate; \n-using __STD::not1; \n-using __STD::not2; \n-using __STD::binder1st; \n-using __STD::binder2nd; \n-using __STD::bind1st; \n-using __STD::bind2nd; \n-using __STD::unary_compose; \n-using __STD::binary_compose; \n-using __STD::compose1; \n-using __STD::compose2; \n-using __STD::pointer_to_unary_function; \n-using __STD::pointer_to_binary_function; \n-using __STD::ptr_fun; \n-using __STD::identity; \n-using __STD::select1st; \n-using __STD::select2nd; \n-using __STD::project1st; \n-using __STD::project2nd; \n-using __STD::constant_void_fun; \n-using __STD::constant_unary_fun; \n-using __STD::constant_binary_fun; \n-using __STD::constant0; \n-using __STD::constant1; \n-using __STD::constant2; \n-using __STD::subtractive_rng; \n-using __STD::mem_fun_t; \n-using __STD::const_mem_fun_t; \n-using __STD::mem_fun_ref_t; \n-using __STD::const_mem_fun_ref_t; \n-using __STD::mem_fun1_t; \n-using __STD::const_mem_fun1_t; \n-using __STD::mem_fun1_ref_t; \n-using __STD::const_mem_fun1_ref_t; \n-using __STD::mem_fun; \n-using __STD::mem_fun_ref; \n-using __STD::mem_fun1; \n-using __STD::mem_fun1_ref; \n-\n-#endif /* __STL_USE_NAMESPACES */\n-\n-#endif /* __SGI_STL_FUNCTION_H */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "d046dbb036d67c6667976640a11c73beb26ac471", "filename": "libstdc++/stl/functional", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Ffunctional?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,26 +0,0 @@\n-/*\n- * Copyright (c) 1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- */\n-\n-#ifndef __SGI_STL_FUNCTIONAL\n-#define __SGI_STL_FUNCTIONAL\n-\n-#include <stl_config.h>\n-#include <stddef.h>\n-#include <stl_function.h>\n-\n-#endif /* __SGI_STL_FUNCTIONAL */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "f7421e026fab01b342cf2f347543e23a7cb9c5c5", "filename": "libstdc++/stl/hash_map", "status": "removed", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fhash_map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fhash_map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fhash_map?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,40 +0,0 @@\n-/*\n- * Copyright (c) 1996\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- */\n-\n-#ifndef __SGI_STL_HASH_MAP\n-#define __SGI_STL_HASH_MAP\n-\n-#ifndef __SGI_STL_INTERNAL_HASHTABLE_H\n-#include <stl_hashtable.h>\n-#endif \n-\n-#include <stl_hash_map.h>\n-\n-#endif /* __SGI_STL_HASH_MAP */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "f3471627044cf80fd32601ff989d71dc959fd147", "filename": "libstdc++/stl/hash_map.h", "status": "removed", "additions": 0, "deletions": 49, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fhash_map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fhash_map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fhash_map.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,49 +0,0 @@\n-/*\n- * Copyright (c) 1996\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- */\n-\n-#ifndef __SGI_STL_HASH_MAP_H\n-#define __SGI_STL_HASH_MAP_H\n-\n-#ifndef __SGI_STL_INTERNAL_HASHTABLE_H\n-#include <stl_hashtable.h>\n-#endif \n-\n-#include <algobase.h>\n-#include <stl_hash_map.h>\n-\n-#ifdef __STL_USE_NAMESPACES\n-using __STD::hash;\n-using __STD::hashtable;\n-using __STD::hash_map;\n-using __STD::hash_multimap;\n-#endif /* __STL_USE_NAMESPACES */\n-\n-\n-#endif /* __SGI_STL_HASH_MAP_H */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "2244f47cfa01a796e121212ecaa645e95453d3b7", "filename": "libstdc++/stl/hash_set", "status": "removed", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fhash_set", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fhash_set", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fhash_set?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,40 +0,0 @@\n-/*\n- * Copyright (c) 1996\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- */\n-\n-#ifndef __SGI_STL_HASH_SET\n-#define __SGI_STL_HASH_SET\n-\n-#ifndef __SGI_STL_INTERNAL_HASHTABLE_H\n-#include <stl_hashtable.h>\n-#endif \n-\n-#include <stl_hash_set.h>\n-\n-#endif /* __SGI_STL_HASH_SET */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "d3e93c0c26bed5fa5301fdcab5b6f0f1c1731180", "filename": "libstdc++/stl/hash_set.h", "status": "removed", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fhash_set.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fhash_set.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fhash_set.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,44 +0,0 @@\n-/*\n- * Copyright (c) 1996\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- */\n-\n-#ifndef __SGI_STL_HASH_SET_H\n-#define __SGI_STL_HASH_SET_H\n-\n-#ifndef __SGI_STL_INTERNAL_HASHTABLE_H\n-#include <stl_hashtable.h>\n-#endif \n-\n-#include <algobase.h>\n-#include <stl_hash_set.h>\n-\n-#ifdef __STL_USE_NAMESPACES\n-using __STD::hash;\n-using __STD::hashtable;\n-using __STD::hash_set;\n-using __STD::hash_multiset;\n-#endif /* __STL_USE_NAMESPACES */\n-\n-#endif /* __SGI_STL_HASH_SET_H */"}, {"sha": "15dbfc91644100934cd601b4115a85f72a084903", "filename": "libstdc++/stl/hashtable.h", "status": "removed", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fhashtable.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fhashtable.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fhashtable.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,48 +0,0 @@\n-/*\n- * Copyright (c) 1996,1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- */\n-\n-/* NOTE: This is an internal header file, included by other STL headers.\n- *   You should not attempt to use it directly.\n- */\n-\n-#ifndef __SGI_STL_HASHTABLE_H\n-#define __SGI_STL_HASHTABLE_H\n-\n-#include <stl_hashtable.h>\n-#include <algo.h>\n-#include <alloc.h>\n-#include <vector.h>\n-\n-#ifdef __STL_USE_NAMESPACES\n-using __STD::hash;\n-using __STD::hashtable;\n-#endif /* __STL_USE_NAMESPACES */\n-\n-#endif /* __SGI_STL_HASHTABLE_H */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "2ec93c07b765b826496466042ce9f49a19ee5bda", "filename": "libstdc++/stl/heap.h", "status": "removed", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fheap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fheap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fheap.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,46 +0,0 @@\n-/*\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- * Copyright (c) 1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_HEAP_H\n-#define __SGI_STL_HEAP_H\n-\n-#include <stl_config.h>\n-#include <stl_heap.h>\n-\n-#ifdef __STL_USE_NAMESPACES\n-\n-using __STD::push_heap;\n-using __STD::pop_heap;\n-using __STD::make_heap;\n-using __STD::sort_heap;\n-\n-#endif /* __STL_USE_NAMESPACES */\n-\n-\n-#endif /* __SGI_STL_HEAP_H */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "4ddd208f2755d9ecbb5be006b42daa64bf97d023", "filename": "libstdc++/stl/iterator", "status": "removed", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fiterator", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fiterator", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fiterator?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,44 +0,0 @@\n-/*\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n- * Copyright (c) 1996,1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_ITERATOR\n-#define __SGI_STL_ITERATOR\n-\n-#include <stl_config.h>\n-#include <stl_relops.h>\n-#include <stddef.h>       /* XXX should use <cstddef> */\n-#if 0                     /* XXX define a flag for this */\n-#include <iostream>\n-#else\n-#include <iostream.h>\n-#endif\n-#include <stl_iterator.h>\n-\n-#endif /* __SGI_STL_ITERATOR */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "f8a023774228f5aeece1c575a4ba6d1719de10c7", "filename": "libstdc++/stl/iterator.h", "status": "removed", "additions": 0, "deletions": 104, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fiterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fiterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fiterator.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,104 +0,0 @@\n-/*\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n- * Copyright (c) 1996\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_ITERATOR_H\n-#define __SGI_STL_ITERATOR_H\n-\n-#ifndef __SGI_STL_FUNCTION_H\n-#include <function.h>\n-#endif\n-#include <stddef.h>\n-#include <iostream.h>\n-#ifndef __SGI_STL_INTERNAL_ITERATOR_H\n-#include <stl_iterator.h>\n-#endif\n-#ifndef __TYPE_TRAITS_H\n-#include <type_traits.h>\n-#endif\n-#ifndef __SGI_STL_INTERNAL_CONSTRUCT_H\n-#include <stl_construct.h>\n-#endif\n-#ifndef __SGI_STL_INTERNAL_RAW_STORAGE_ITERATOR_H\n-#include <stl_raw_storage_iter.h>\n-#endif\n-\n-#ifdef __STL_USE_NAMESPACES\n-\n-// Names from stl_iterator.h\n-\n-using __STD::input_iterator_tag;\n-using __STD::output_iterator_tag;\n-using __STD::forward_iterator_tag;\n-using __STD::bidirectional_iterator_tag;\n-using __STD::random_access_iterator_tag;\n-\n-#if 0\n-using __STD::iterator;\n-#endif\n-using __STD::input_iterator;\n-using __STD::output_iterator;\n-using __STD::forward_iterator;\n-using __STD::bidirectional_iterator;\n-using __STD::random_access_iterator;\n-\n-#ifdef __STL_CLASS_PARTIAL_SPECIALIZATION\n-using __STD::iterator_traits;\n-#endif\n-\n-using __STD::iterator_category;\n-using __STD::distance_type;\n-using __STD::value_type;\n-\n-using __STD::distance; \n-using __STD::advance; \n-\n-using __STD::insert_iterator;\n-using __STD::front_insert_iterator;\n-using __STD::back_insert_iterator;\n-using __STD::inserter;\n-using __STD::front_inserter;\n-using __STD::back_inserter;\n-\n-using __STD::reverse_iterator;\n-using __STD::reverse_bidirectional_iterator;\n-\n-using __STD::istream_iterator;\n-using __STD::ostream_iterator;\n-\n-// Names from stl_construct.h\n-using __STD::construct;\n-using __STD::destroy;\n-\n-// Names from stl_raw_storage_iter.h\n-using __STD::raw_storage_iterator;\n-\n-#endif /* __STL_USE_NAMESPACES */\n-\n-#endif /* __SGI_STL_ITERATOR_H */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "5294f39fea69f21431adaa99d40ed9e91c8db4e6", "filename": "libstdc++/stl/list", "status": "removed", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Flist", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Flist", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Flist?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,40 +0,0 @@\n-/*\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n- * Copyright (c) 1996,1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_LIST\n-#define __SGI_STL_LIST\n-\n-#include <stl_algobase.h>\n-#include <stl_alloc.h>\n-#include <stl_construct.h>\n-#include <stl_uninitialized.h>\n-#include <stl_list.h>\n-\n-#endif /* __SGI_STL_LIST */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "4e6ee0b4113b29adea95ed99844373e4d4f2d259", "filename": "libstdc++/stl/list.h", "status": "removed", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Flist.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Flist.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Flist.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,42 +0,0 @@\n-/*\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n- * Copyright (c) 1996,1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_LIST_H\n-#define __SGI_STL_LIST_H\n-\n-#include <algobase.h>\n-#include <alloc.h>\n-#include <stl_list.h>\n-\n-#ifdef __STL_USE_NAMESPACES\n-using __STD::list;\n-#endif /* __STL_USE_NAMESPACES */\n-\n-#endif /* __SGI_STL_LIST_H */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "4cfb7652c54551d8f7152f88bfe17d16b564a78a", "filename": "libstdc++/stl/map", "status": "removed", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fmap", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fmap", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fmap?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,40 +0,0 @@\n-/*\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n- * Copyright (c) 1996,1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_MAP\n-#define __SGI_STL_MAP\n-\n-#ifndef __SGI_STL_INTERNAL_TREE_H\n-#include <stl_tree.h>\n-#endif\n-#include <stl_map.h>\n-#include <stl_multimap.h>\n-\n-#endif /* __SGI_STL_MAP */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "a89bd31e81cdeaa72d22568502ff516d7722c032", "filename": "libstdc++/stl/map.h", "status": "removed", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fmap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fmap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fmap.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,41 +0,0 @@\n-/*\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n- * Copyright (c) 1996,1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_MAP_H\n-#define __SGI_STL_MAP_H\n-\n-#include <tree.h>\n-#include <stl_map.h>\n-\n-#ifdef __STL_USE_NAMESPACES\n-using __STD::map;\n-#endif /* __STL_USE_NAMESPACES */\n-\n-#endif /* __SGI_STL_MAP_H */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "64338dd313a6a070360463b2fbe7a1db6826f3a4", "filename": "libstdc++/stl/memory", "status": "removed", "additions": 0, "deletions": 108, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fmemory", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fmemory", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fmemory?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,108 +0,0 @@\n-/*\n- * Copyright (c) 1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- */\n-\n-#ifndef __SGI_STL_MEMORY\n-#define __SGI_STL_MEMORY\n-\n-#include <stl_algobase.h>\n-#include <stl_alloc.h>\n-#include <stl_construct.h>\n-#include <stl_tempbuf.h>\n-#include <stl_uninitialized.h>\n-#include <stl_raw_storage_iter.h>\n-\n-\n-#if defined(__STL_MEMBER_TEMPLATES)\n-\n-__STL_BEGIN_NAMESPACE\n-\n-template <class _Tp> class auto_ptr {\n-private:\n-  _Tp* _M_ptr;\n-\n-public:\n-  typedef _Tp element_type;\n-  explicit auto_ptr(_Tp* __p = 0) __STL_NOTHROW : _M_ptr(__p) {}\n-  auto_ptr(auto_ptr& __a) __STL_NOTHROW : _M_ptr(__a.release()) {}\n-  template <class _Tp1> auto_ptr(auto_ptr<_Tp1>& __a) __STL_NOTHROW\n-    : _M_ptr(__a.release()) {}\n-  auto_ptr& operator=(auto_ptr& __a) __STL_NOTHROW {\n-    if (&__a != this) {\n-      delete _M_ptr;\n-      _M_ptr = __a.release();\n-    }\n-    return *this;\n-  }\n-  template <class _Tp1>\n-  auto_ptr& operator=(auto_ptr<_Tp1>& __a) __STL_NOTHROW {\n-    if (__a.get() != this->get()) {\n-      delete _M_ptr;\n-      _M_ptr = __a.release();\n-    }\n-    return *this;\n-  }\n-  ~auto_ptr() __STL_NOTHROW { delete _M_ptr; }\n-\n-  _Tp& operator*() const __STL_NOTHROW {\n-    return *_M_ptr;\n-  }\n-  _Tp* operator->() const __STL_NOTHROW {\n-    return _M_ptr;\n-  }\n-  _Tp* get() const __STL_NOTHROW {\n-    return _M_ptr;\n-  }\n-  _Tp* release() __STL_NOTHROW {\n-    _Tp* __tmp = _M_ptr;\n-    _M_ptr = 0;\n-    return __tmp;\n-  }\n-  void reset(_Tp* __p = 0) __STL_NOTHROW {\n-    delete _M_ptr;\n-    _M_ptr = __p;\n-  }\n-\n-  // According to the C++ standard, these conversions are required.  Most\n-  // present-day compilers, however, do not enforce that requirement---and, \n-  // in fact, most present-day compilers do not support the language \n-  // features that these conversions rely on.\n-  \n-#ifdef __SGI_STL_USE_AUTO_PTR_CONVERSIONS\n-\n-private:\n-  template<class _Tp1> struct auto_ptr_ref {\n-    _Tp1* _M_ptr;\n-    auto_ptr_ref(_Tp1* __p) : _M_ptr(__p) {}\n-  };\n-\n-public:\n-  auto_ptr(auto_ptr_ref<_Tp> __ref) __STL_NOTHROW\n-    : _M_ptr(__ref._M_ptr) {}\n-  template <class _Tp1> operator auto_ptr_ref<_Tp1>() __STL_NOTHROW \n-    { return auto_ptr_ref<_Tp>(this->release()); }\n-  template <class _Tp1> operator auto_ptr<_Tp1>() __STL_NOTHROW\n-    { return auto_ptr<_Tp1>(this->release()); }\n-\n-#endif /* __SGI_STL_USE_AUTO_PTR_CONVERSIONS */\n-};\n-\n-__STL_END_NAMESPACE\n-#endif /* member templates */\n-\n-#endif /* __SGI_STL_MEMORY */\n-\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "1a8ec4af4f945c20ca3c41e59e520ae23d058c1d", "filename": "libstdc++/stl/multimap.h", "status": "removed", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fmultimap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fmultimap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fmultimap.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,41 +0,0 @@\n-/*\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n- * Copyright (c) 1996,1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_MULTIMAP_H\n-#define __SGI_STL_MULTIMAP_H\n-\n-#include <tree.h>\n-#include <stl_multimap.h>\n-\n-#ifdef __STL_USE_NAMESPACES\n-using __STD::multimap;\n-#endif /* __STL_USE_NAMESPACES */\n-\n-#endif /* __SGI_STL_MULTIMAP_H */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "3024fd74c03d481855598a5fef510803468a9044", "filename": "libstdc++/stl/multiset.h", "status": "removed", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fmultiset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fmultiset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fmultiset.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,41 +0,0 @@\n-/*\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n- * Copyright (c) 1996,1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_MULTISET_H\n-#define __SGI_STL_MULTISET_H\n-\n-#include <tree.h>\n-#include <stl_multiset.h>\n-\n-#ifdef __STL_USE_NAMESPACES\n-using __STD::multiset;\n-#endif /* __STL_USE_NAMESPACES */\n-\n-#endif /* __SGI_STL_MULTISET_H */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "7f048e11b568e5ce3428b34c8ef414ac27612225", "filename": "libstdc++/stl/numeric", "status": "removed", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fnumeric", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fnumeric", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fnumeric?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,42 +0,0 @@\n-/*\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n- * Copyright (c) 1996,1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_NUMERIC\n-#define __SGI_STL_NUMERIC\n-\n-#include <stl_config.h>\n-#include <stl_relops.h>\n-#include <stddef.h>\n-#include <iostream.h>\n-#include <stl_iterator.h>\n-#include <stl_function.h>\n-#include <stl_numeric.h>\n-\n-#endif /* __SGI_STL_NUMERIC */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "00f5caddb61418b8f93bf2c0e34d27e23c6efe35", "filename": "libstdc++/stl/pair.h", "status": "removed", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fpair.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fpair.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fpair.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,51 +0,0 @@\n-/*\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n- * Copyright (c) 1996,1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_PAIR_H\n-#define __SGI_STL_PAIR_H\n-\n-#ifndef __STL_CONFIG_H\n-#include <stl_config.h>\n-#endif\n-#ifndef __SGI_STL_INTERNAL_RELOPS\n-#include <stl_relops.h>\n-#endif\n-#ifndef __SGI_STL_INTERNAL_PAIR_H\n-#include <stl_pair.h>\n-#endif\n-\n-#ifdef __STL_USE_NAMESPACES\n-\n-using __STD::pair;\n-using __STD::make_pair;\n-\n-#endif /* __STL_USE_NAMESPACES */\n-\n-#endif /* __SGI_STL_PAIR_H */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "1852908095b0a26765a8564b108e0ed09811d21f", "filename": "libstdc++/stl/pthread_alloc", "status": "removed", "additions": 0, "deletions": 479, "changes": 479, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fpthread_alloc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fpthread_alloc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fpthread_alloc?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,479 +0,0 @@\n-/*\n- * Copyright (c) 1996\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_PTHREAD_ALLOC\n-#define __SGI_STL_PTHREAD_ALLOC\n-\n-// Pthread-specific node allocator.\n-// This is similar to the default allocator, except that free-list\n-// information is kept separately for each thread, avoiding locking.\n-// This should be reasonably fast even in the presence of threads.\n-// The down side is that storage may not be well-utilized.\n-// It is not an error to allocate memory in thread A and deallocate\n-// it in thread B.  But this effectively transfers ownership of the memory,\n-// so that it can only be reallocated by thread B.  Thus this can effectively\n-// result in a storage leak if it's done on a regular basis.\n-// It can also result in frequent sharing of\n-// cache lines among processors, with potentially serious performance\n-// consequences.\n-\n-#include <stl_config.h>\n-#include <stl_alloc.h>\n-#ifndef __RESTRICT\n-#  define __RESTRICT\n-#endif\n-\n-__STL_BEGIN_NAMESPACE\n-\n-#define __STL_DATA_ALIGNMENT 8\n-\n-union _Pthread_alloc_obj {\n-    union _Pthread_alloc_obj * __free_list_link;\n-    char __client_data[__STL_DATA_ALIGNMENT];    /* The client sees this.    */\n-};\n-\n-// Pthread allocators don't appear to the client to have meaningful\n-// instances.  We do in fact need to associate some state with each\n-// thread.  That state is represented by\n-// _Pthread_alloc_per_thread_state<_Max_size>.\n-\n-template<size_t _Max_size>\n-struct _Pthread_alloc_per_thread_state {\n-  typedef _Pthread_alloc_obj __obj;\n-  enum { _S_NFREELISTS = _Max_size/__STL_DATA_ALIGNMENT };\n-  _Pthread_alloc_obj* volatile __free_list[_S_NFREELISTS]; \n-  _Pthread_alloc_per_thread_state<_Max_size> * __next; \n-\t// Free list link for list of available per thread structures.\n-  \t// When one of these becomes available for reuse due to thread\n-\t// termination, any objects in its free list remain associated\n-\t// with it.  The whole structure may then be used by a newly\n-\t// created thread.\n-  _Pthread_alloc_per_thread_state() : __next(0)\n-  {\n-    memset((void *)__free_list, 0, _S_NFREELISTS * sizeof(__obj *));\n-  }\n-  // Returns an object of size __n, and possibly adds to size n free list.\n-  void *_M_refill(size_t __n);\n-};\n-\n-// Pthread-specific allocator.\n-// The argument specifies the largest object size allocated from per-thread\n-// free lists.  Larger objects are allocated using malloc_alloc.\n-// Max_size must be a power of 2.\n-template <size_t _Max_size = 128>\n-class _Pthread_alloc_template {\n-\n-public: // but only for internal use:\n-\n-  typedef _Pthread_alloc_obj __obj;\n-\n-  // Allocates a chunk for nobjs of size \"size\".  nobjs may be reduced\n-  // if it is inconvenient to allocate the requested number.\n-  static char *_S_chunk_alloc(size_t __size, int &__nobjs);\n-\n-  enum {_S_ALIGN = __STL_DATA_ALIGNMENT};\n-\n-  static size_t _S_round_up(size_t __bytes) {\n-        return (((__bytes) + _S_ALIGN-1) & ~(_S_ALIGN - 1));\n-  }\n-  static size_t _S_freelist_index(size_t __bytes) {\n-        return (((__bytes) + _S_ALIGN-1)/_S_ALIGN - 1);\n-  }\n-\n-private:\n-  // Chunk allocation state. And other shared state.\n-  // Protected by _S_chunk_allocator_lock.\n-  static pthread_mutex_t _S_chunk_allocator_lock;\n-  static char *_S_start_free;\n-  static char *_S_end_free;\n-  static size_t _S_heap_size;\n-  static _Pthread_alloc_per_thread_state<_Max_size>* _S_free_per_thread_states;\n-  static pthread_key_t _S_key;\n-  static bool _S_key_initialized;\n-        // Pthread key under which per thread state is stored. \n-        // Allocator instances that are currently unclaimed by any thread.\n-  static void _S_destructor(void *instance);\n-        // Function to be called on thread exit to reclaim per thread\n-        // state.\n-  static _Pthread_alloc_per_thread_state<_Max_size> *_S_new_per_thread_state();\n-        // Return a recycled or new per thread state.\n-  static _Pthread_alloc_per_thread_state<_Max_size> *_S_get_per_thread_state();\n-        // ensure that the current thread has an associated\n-        // per thread state.\n-  friend class _M_lock;\n-  class _M_lock {\n-      public:\n-        _M_lock () { pthread_mutex_lock(&_S_chunk_allocator_lock); }\n-        ~_M_lock () { pthread_mutex_unlock(&_S_chunk_allocator_lock); }\n-  };\n-\n-public:\n-\n-  /* n must be > 0      */\n-  static void * allocate(size_t __n)\n-  {\n-    __obj * volatile * __my_free_list;\n-    __obj * __RESTRICT __result;\n-    _Pthread_alloc_per_thread_state<_Max_size>* __a;\n-\n-    if (__n > _Max_size) {\n-        return(malloc_alloc::allocate(__n));\n-    }\n-    if (!_S_key_initialized ||\n-        !(__a = (_Pthread_alloc_per_thread_state<_Max_size>*)\n-                                 pthread_getspecific(_S_key))) {\n-        __a = _S_get_per_thread_state();\n-    }\n-    __my_free_list = __a -> __free_list + _S_freelist_index(__n);\n-    __result = *__my_free_list;\n-    if (__result == 0) {\n-        void *__r = __a -> _M_refill(_S_round_up(__n));\n-        return __r;\n-    }\n-    *__my_free_list = __result -> __free_list_link;\n-    return (__result);\n-  };\n-\n-  /* p may not be 0 */\n-  static void deallocate(void *__p, size_t __n)\n-  {\n-    __obj *__q = (__obj *)__p;\n-    __obj * volatile * __my_free_list;\n-    _Pthread_alloc_per_thread_state<_Max_size>* __a;\n-\n-    if (__n > _Max_size) {\n-        malloc_alloc::deallocate(__p, __n);\n-        return;\n-    }\n-    if (!_S_key_initialized ||\n-        !(__a = (_Pthread_alloc_per_thread_state<_Max_size> *)\n-                pthread_getspecific(_S_key))) {\n-        __a = _S_get_per_thread_state();\n-    }\n-    __my_free_list = __a->__free_list + _S_freelist_index(__n);\n-    __q -> __free_list_link = *__my_free_list;\n-    *__my_free_list = __q;\n-  }\n-\n-  static void * reallocate(void *__p, size_t __old_sz, size_t __new_sz);\n-\n-} ;\n-\n-typedef _Pthread_alloc_template<> pthread_alloc;\n-\n-\n-template <size_t _Max_size>\n-void _Pthread_alloc_template<_Max_size>::_S_destructor(void * __instance)\n-{\n-    _M_lock __lock_instance;\t// Need to acquire lock here.\n-    _Pthread_alloc_per_thread_state<_Max_size>* __s =\n-        (_Pthread_alloc_per_thread_state<_Max_size> *)__instance;\n-    __s -> __next = _S_free_per_thread_states;\n-    _S_free_per_thread_states = __s;\n-}\n-\n-template <size_t _Max_size>\n-_Pthread_alloc_per_thread_state<_Max_size> *\n-_Pthread_alloc_template<_Max_size>::_S_new_per_thread_state()\n-{    \n-    /* lock already held here.\t*/\n-    if (0 != _S_free_per_thread_states) {\n-        _Pthread_alloc_per_thread_state<_Max_size> *__result =\n-\t\t\t\t\t_S_free_per_thread_states;\n-        _S_free_per_thread_states = _S_free_per_thread_states -> __next;\n-        return __result;\n-    } else {\n-        return new _Pthread_alloc_per_thread_state<_Max_size>;\n-    }\n-}\n-\n-template <size_t _Max_size>\n-_Pthread_alloc_per_thread_state<_Max_size> *\n-_Pthread_alloc_template<_Max_size>::_S_get_per_thread_state()\n-{\n-    /*REFERENCED*/\n-    _M_lock __lock_instance;\t// Need to acquire lock here.\n-    _Pthread_alloc_per_thread_state<_Max_size> * __result;\n-    if (!_S_key_initialized) {\n-        if (pthread_key_create(&_S_key, _S_destructor)) {\n-            abort();  // failed\n-        }\n-        _S_key_initialized = true;\n-    }\n-    __result = _S_new_per_thread_state();\n-    if (pthread_setspecific(_S_key, __result)) abort();\n-    return __result;\n-}\n-\n-/* We allocate memory in large chunks in order to avoid fragmenting     */\n-/* the malloc heap too much.                                            */\n-/* We assume that size is properly aligned.                             */\n-template <size_t _Max_size>\n-char *_Pthread_alloc_template<_Max_size>\n-::_S_chunk_alloc(size_t __size, int &__nobjs)\n-{\n-  {\n-    char * __result;\n-    size_t __total_bytes;\n-    size_t __bytes_left;\n-    /*REFERENCED*/\n-    _M_lock __lock_instance;         // Acquire lock for this routine\n-\n-    __total_bytes = __size * __nobjs;\n-    __bytes_left = _S_end_free - _S_start_free;\n-    if (__bytes_left >= __total_bytes) {\n-        __result = _S_start_free;\n-        _S_start_free += __total_bytes;\n-        return(__result);\n-    } else if (__bytes_left >= __size) {\n-        __nobjs = __bytes_left/__size;\n-        __total_bytes = __size * __nobjs;\n-        __result = _S_start_free;\n-        _S_start_free += __total_bytes;\n-        return(__result);\n-    } else {\n-        size_t __bytes_to_get =\n-\t\t2 * __total_bytes + _S_round_up(_S_heap_size >> 4);\n-        // Try to make use of the left-over piece.\n-        if (__bytes_left > 0) {\n-            _Pthread_alloc_per_thread_state<_Max_size>* __a = \n-                (_Pthread_alloc_per_thread_state<_Max_size>*)\n-\t\t\tpthread_getspecific(_S_key);\n-            __obj * volatile * __my_free_list =\n-                        __a->__free_list + _S_freelist_index(__bytes_left);\n-\n-            ((__obj *)_S_start_free) -> __free_list_link = *__my_free_list;\n-            *__my_free_list = (__obj *)_S_start_free;\n-        }\n-#       ifdef _SGI_SOURCE\n-          // Try to get memory that's aligned on something like a\n-          // cache line boundary, so as to avoid parceling out\n-          // parts of the same line to different threads and thus\n-          // possibly different processors.\n-          {\n-            const int __cache_line_size = 128;  // probable upper bound\n-            __bytes_to_get &= ~(__cache_line_size-1);\n-            _S_start_free = (char *)memalign(__cache_line_size, __bytes_to_get); \n-            if (0 == _S_start_free) {\n-              _S_start_free = (char *)malloc_alloc::allocate(__bytes_to_get);\n-            }\n-          }\n-#       else  /* !SGI_SOURCE */\n-          _S_start_free = (char *)malloc_alloc::allocate(__bytes_to_get);\n-#       endif\n-        _S_heap_size += __bytes_to_get;\n-        _S_end_free = _S_start_free + __bytes_to_get;\n-    }\n-  }\n-  // lock is released here\n-  return(_S_chunk_alloc(__size, __nobjs));\n-}\n-\n-\n-/* Returns an object of size n, and optionally adds to size n free list.*/\n-/* We assume that n is properly aligned.                                */\n-/* We hold the allocation lock.                                         */\n-template <size_t _Max_size>\n-void *_Pthread_alloc_per_thread_state<_Max_size>\n-::_M_refill(size_t __n)\n-{\n-    int __nobjs = 128;\n-    char * __chunk =\n-\t_Pthread_alloc_template<_Max_size>::_S_chunk_alloc(__n, __nobjs);\n-    __obj * volatile * __my_free_list;\n-    __obj * __result;\n-    __obj * __current_obj, * __next_obj;\n-    int __i;\n-\n-    if (1 == __nobjs)  {\n-        return(__chunk);\n-    }\n-    __my_free_list = __free_list\n-\t\t + _Pthread_alloc_template<_Max_size>::_S_freelist_index(__n);\n-\n-    /* Build free list in chunk */\n-      __result = (__obj *)__chunk;\n-      *__my_free_list = __next_obj = (__obj *)(__chunk + __n);\n-      for (__i = 1; ; __i++) {\n-        __current_obj = __next_obj;\n-        __next_obj = (__obj *)((char *)__next_obj + __n);\n-        if (__nobjs - 1 == __i) {\n-            __current_obj -> __free_list_link = 0;\n-            break;\n-        } else {\n-            __current_obj -> __free_list_link = __next_obj;\n-        }\n-      }\n-    return(__result);\n-}\n-\n-template <size_t _Max_size>\n-void *_Pthread_alloc_template<_Max_size>\n-::reallocate(void *__p, size_t __old_sz, size_t __new_sz)\n-{\n-    void * __result;\n-    size_t __copy_sz;\n-\n-    if (__old_sz > _Max_size\n-\t&& __new_sz > _Max_size) {\n-        return(realloc(__p, __new_sz));\n-    }\n-    if (_S_round_up(__old_sz) == _S_round_up(__new_sz)) return(__p);\n-    __result = allocate(__new_sz);\n-    __copy_sz = __new_sz > __old_sz? __old_sz : __new_sz;\n-    memcpy(__result, __p, __copy_sz);\n-    deallocate(__p, __old_sz);\n-    return(__result);\n-}\n-\n-template <size_t _Max_size>\n-_Pthread_alloc_per_thread_state<_Max_size> *\n-_Pthread_alloc_template<_Max_size>::_S_free_per_thread_states = 0;\n-\n-template <size_t _Max_size>\n-pthread_key_t _Pthread_alloc_template<_Max_size>::_S_key;\n-\n-template <size_t _Max_size>\n-bool _Pthread_alloc_template<_Max_size>::_S_key_initialized = false;\n-\n-template <size_t _Max_size>\n-pthread_mutex_t _Pthread_alloc_template<_Max_size>::_S_chunk_allocator_lock\n-= PTHREAD_MUTEX_INITIALIZER;\n-\n-template <size_t _Max_size>\n-char *_Pthread_alloc_template<_Max_size>\n-::_S_start_free = 0;\n-\n-template <size_t _Max_size>\n-char *_Pthread_alloc_template<_Max_size>\n-::_S_end_free = 0;\n-\n-template <size_t _Max_size>\n-size_t _Pthread_alloc_template<_Max_size>\n-::_S_heap_size = 0;\n-\n-#ifdef __STL_USE_STD_ALLOCATORS\n-\n-template <class _Tp>\n-class pthread_allocator {\n-  typedef pthread_alloc _S_Alloc;          // The underlying allocator.\n-public:\n-  typedef size_t     size_type;\n-  typedef ptrdiff_t  difference_type;\n-  typedef _Tp*       pointer;\n-  typedef const _Tp* const_pointer;\n-  typedef _Tp&       reference;\n-  typedef const _Tp& const_reference;\n-  typedef _Tp        value_type;\n-\n-  template <class _Up> struct rebind {\n-    typedef pthread_allocator<_Up> other;\n-  };\n-\n-  pthread_allocator() __STL_NOTHROW {}\n-  pthread_allocator(const pthread_allocator& a) __STL_NOTHROW {}\n-  template <class _Up> pthread_allocator(const pthread_allocator<_Up>&)\n-\t\t__STL_NOTHROW {}\n-  ~pthread_allocator() __STL_NOTHROW {}\n-\n-  pointer address(reference __x) const { return &__x; }\n-  const_pointer address(const_reference __x) const { return &__x; }\n-\n-  // __n is permitted to be 0.  The C++ standard says nothing about what\n-  // the return value is when __n == 0.\n-  _Tp* allocate(size_type __n, const void* = 0) {\n-    return __n != 0 ? static_cast<_Tp*>(_S_Alloc::allocate(__n * sizeof(_Tp)))\n-                    : 0;\n-  }\n-\n-  // p is not permitted to be a null pointer.\n-  void deallocate(pointer __p, size_type __n)\n-    { _S_Alloc::deallocate(__p, __n * sizeof(_Tp)); }\n-\n-  size_type max_size() const __STL_NOTHROW \n-    { return size_t(-1) / sizeof(_Tp); }\n-\n-  void construct(pointer __p, const _Tp& __val) { new(__p) _Tp(__val); }\n-  void destroy(pointer _p) { _p->~_Tp(); }\n-};\n-\n-template<>\n-class pthread_allocator<void> {\n-public:\n-  typedef size_t      size_type;\n-  typedef ptrdiff_t   difference_type;\n-  typedef void*       pointer;\n-  typedef const void* const_pointer;\n-  typedef void        value_type;\n-\n-  template <class _Up> struct rebind {\n-    typedef pthread_allocator<_Up> other;\n-  };\n-};\n-\n-template <size_t _Max_size>\n-inline bool operator==(const _Pthread_alloc_template<_Max_size>&,\n-                       const _Pthread_alloc_template<_Max_size>&)\n-{\n-  return true;\n-}\n-\n-template <class _T1, class _T2>\n-inline bool operator==(const pthread_allocator<_T1>&,\n-                       const pthread_allocator<_T2>& a2) \n-{\n-  return true;\n-}\n-\n-template <class _T1, class _T2>\n-inline bool operator!=(const pthread_allocator<_T1>&,\n-                       const pthread_allocator<_T2>&)\n-{\n-  return false;\n-}\n-\n-template <class _Tp, size_t _Max_size>\n-struct _Alloc_traits<_Tp, _Pthread_alloc_template<_Max_size> >\n-{\n-  static const bool _S_instanceless = true;\n-  typedef simple_alloc<_Tp, _Pthread_alloc_template<_Max_size> > _Alloc_type;\n-  typedef __allocator<_Tp, _Pthread_alloc_template<_Max_size> > \n-          allocator_type;\n-};\n-\n-template <class _Tp, class _Up, size_t _Max>\n-struct _Alloc_traits<_Tp, __allocator<_Up, _Pthread_alloc_template<_Max> > >\n-{\n-  static const bool _S_instanceless = true;\n-  typedef simple_alloc<_Tp, _Pthread_alloc_template<_Max> > _Alloc_type;\n-  typedef __allocator<_Tp, _Pthread_alloc_template<_Max> > allocator_type;\n-};\n-\n-template <class _Tp, class _Up>\n-struct _Alloc_traits<_Tp, pthread_allocator<_Up> >\n-{\n-  static const bool _S_instanceless = true;\n-  typedef simple_alloc<_Tp, _Pthread_alloc_template<> > _Alloc_type;\n-  typedef pthread_allocator<_Tp> allocator_type;\n-};\n-\n-\n-#endif /* __STL_USE_STD_ALLOCATORS */\n-\n-__STL_END_NAMESPACE\n-\n-#endif /* __SGI_STL_PTHREAD_ALLOC */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "774ef04edc828c3cb32a9e240d1552be85d7eee2", "filename": "libstdc++/stl/pthread_alloc.h", "status": "removed", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fpthread_alloc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fpthread_alloc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fpthread_alloc.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,31 +0,0 @@\n-/*\n- * Copyright (c) 1996-1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_PTHREAD_ALLOC_H\n-#define __SGI_STL_PTHREAD_ALLOC_H\n-\n-#include <pthread_alloc>\n-\n-#ifdef __STL_USE_NAMESPACES\n-\n-using __STD::_Pthread_alloc_template;\n-using __STD::pthread_alloc;\n-\n-#endif /* __STL_USE_NAMESPACES */\n-\n-\n-#endif /* __SGI_STL_PTHREAD_ALLOC_H */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "f9417fb1fbb6231b5a665193c3bdb97994473341", "filename": "libstdc++/stl/queue", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fqueue", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fqueue", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fqueue?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,45 +0,0 @@\n-/*\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n- * Copyright (c) 1996,1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_QUEUE\n-#define __SGI_STL_QUEUE\n-\n-#include <stl_algobase.h>\n-#include <stl_alloc.h>\n-#include <stl_construct.h>\n-#include <stl_uninitialized.h>\n-#include <stl_vector.h>\n-#include <stl_bvector.h>\n-#include <stl_heap.h>\n-#include <stl_deque.h>\n-#include <stl_function.h>\n-#include <stl_queue.h>\n-\n-#endif /* __SGI_STL_QUEUE */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "f861500000b571c6b19d10d1119a2e61446ba661", "filename": "libstdc++/stl/rope", "status": "removed", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Frope", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Frope", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Frope?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,32 +0,0 @@\n-/*\n- * Copyright (c) 1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_ROPE\n-#define __SGI_STL_ROPE\n-\n-#include <stl_algobase.h>\n-#include <stl_tempbuf.h>\n-#include <stl_algo.h>\n-#include <stl_function.h>\n-#include <stl_numeric.h>\n-#include <stl_alloc.h>\n-#include <stl_construct.h>\n-#include <stl_uninitialized.h>\n-#include <stl_hash_fun.h>\n-#include <stl_rope.h>\n-\n-#endif /* __SGI_STL_ROPE */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "d767fa32e7a2e69027a9e9aab6260bbbd32c55fa", "filename": "libstdc++/stl/rope.h", "status": "removed", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Frope.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Frope.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Frope.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,34 +0,0 @@\n-/*\n- * Copyright (c) 1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_ROPE_H\n-#define __SGI_STL_ROPE_H\n-\n-#include <hashtable.h>\n-#include <stl_rope.h>\n-\n-#ifdef __STL_USE_NAMESPACES\n-\n-using __STD::char_producer; \n-using __STD::sequence_buffer; \n-using __STD::rope; \n-using __STD::crope; \n-using __STD::wrope; \n-\n-#endif /* __STL_USE_NAMESPACES */\n-\n-#endif /* __SGI_STL_ROPE_H */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "18bb2c9ec9d187f0d017458c2c53e6d2a7c540ae", "filename": "libstdc++/stl/ropeimpl.h", "status": "removed", "additions": 0, "deletions": 1550, "changes": 1550, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fropeimpl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fropeimpl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fropeimpl.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,1550 +0,0 @@\n-/*\n- * Copyright (c) 1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-/* NOTE: This is an internal header file, included by other STL headers.\n- *   You should not attempt to use it directly.\n- */\n-\n-# include <stdio.h>     /* XXX should use <cstdio> */\n-# include <iostream.h>  /* XXX should use <iostream> */\n-\n-__STL_BEGIN_NAMESPACE\n-\n-#if defined(__sgi) && !defined(__GNUC__) && (_MIPS_SIM != _MIPS_SIM_ABI32)\n-#pragma set woff 1174\n-#endif\n-\n-// Set buf_start, buf_end, and buf_ptr appropriately, filling tmp_buf\n-// if necessary.  Assumes _M_path_end[leaf_index] and leaf_pos are correct.\n-// Results in a valid buf_ptr if the iterator can be legitimately\n-// dereferenced.\n-template <class _CharT, class _Alloc>\n-void _Rope_iterator_base<_CharT,_Alloc>::_S_setbuf( \n-  _Rope_iterator_base<_CharT,_Alloc>& __x)\n-{\n-    const _RopeRep* __leaf = __x._M_path_end[__x._M_leaf_index];\n-    size_t __leaf_pos = __x._M_leaf_pos;\n-    size_t __pos = __x._M_current_pos;\n-\n-    switch(__leaf->_M_tag) {\n-\tcase _RopeRep::_S_leaf:\n-\t    __x._M_buf_start = \n-\t      ((_Rope_RopeLeaf<_CharT,_Alloc>*)__leaf)->_M_data;\n-\t    __x._M_buf_ptr = __x._M_buf_start + (__pos - __leaf_pos);\n-\t    __x._M_buf_end = __x._M_buf_start + __leaf->_M_size;\n-\t    break;\n-\tcase _RopeRep::_S_function:\n-\tcase _RopeRep::_S_substringfn:\n-\t    {\n-\t\tsize_t __len = _S_iterator_buf_len;\n-\t\tsize_t __buf_start_pos = __leaf_pos;\n-\t\tsize_t __leaf_end = __leaf_pos + __leaf->_M_size;\n-\t\tchar_producer<_CharT>* __fn =\n-\t\t\t((_Rope_RopeFunction<_CharT,_Alloc>*)__leaf)->_M_fn;\n-\n-\t\tif (__buf_start_pos + __len <= __pos) {\n-\t\t    __buf_start_pos = __pos - __len/4;\n-\t\t    if (__buf_start_pos + __len > __leaf_end) {\n-\t\t\t__buf_start_pos = __leaf_end - __len;\n-\t\t    }\n-\t\t}\n-\t\tif (__buf_start_pos + __len > __leaf_end) {\n-\t\t    __len = __leaf_end - __buf_start_pos;\n-\t\t}\n-\t\t(*__fn)(__buf_start_pos - __leaf_pos, __len, __x._M_tmp_buf);\n-\t\t__x._M_buf_ptr = __x._M_tmp_buf + (__pos - __buf_start_pos);\n-\t\t__x._M_buf_start = __x._M_tmp_buf;\n-\t\t__x._M_buf_end = __x._M_tmp_buf + __len;\n-\t    }\n-\t    break;\n-\tdefault:\n-\t    __stl_assert(0);\n-    }\n-}\n-\n-// Set path and buffer inside a rope iterator.  We assume that \n-// pos and root are already set.\n-template <class _CharT, class _Alloc>\n-void _Rope_iterator_base<_CharT,_Alloc>::_S_setcache\n-(_Rope_iterator_base<_CharT,_Alloc>& __x)\n-{\n-    const _RopeRep* __path[_RopeRep::_S_max_rope_depth+1];\n-    const _RopeRep* __curr_rope;\n-    int __curr_depth = -1;  /* index into path    */\n-    size_t __curr_start_pos = 0;\n-    size_t __pos = __x._M_current_pos;\n-    unsigned char __dirns = 0; // Bit vector marking right turns in the path\n-\n-    __stl_assert(__pos <= __x._M_root->_M_size);\n-    if (__pos >= __x._M_root->_M_size) {\n-\t__x._M_buf_ptr = 0;\n-\treturn;\n-    }\n-    __curr_rope = __x._M_root;\n-    if (0 != __curr_rope->_M_c_string) {\n-\t/* Treat the root as a leaf. */\n-\t__x._M_buf_start = __curr_rope->_M_c_string;\n-\t__x._M_buf_end = __curr_rope->_M_c_string + __curr_rope->_M_size;\n-\t__x._M_buf_ptr = __curr_rope->_M_c_string + __pos;\n-\t__x._M_path_end[0] = __curr_rope;\n-\t__x._M_leaf_index = 0;\n-\t__x._M_leaf_pos = 0;\n-\treturn;\n-    }\n-    for(;;) {\n-\t++__curr_depth;\n-\t__stl_assert(__curr_depth <= _RopeRep::_S_max_rope_depth);\n-\t__path[__curr_depth] = __curr_rope;\n-\tswitch(__curr_rope->_M_tag) {\n-\t  case _RopeRep::_S_leaf:\n-\t  case _RopeRep::_S_function:\n-\t  case _RopeRep::_S_substringfn:\n-\t    __x._M_leaf_pos = __curr_start_pos;\n-\t    goto done;\n-\t  case _RopeRep::_S_concat:\n-\t    {\n-\t\t_Rope_RopeConcatenation<_CharT,_Alloc>* __c =\n-\t\t\t(_Rope_RopeConcatenation<_CharT,_Alloc>*)__curr_rope;\n-\t\t_RopeRep* __left = __c->_M_left;\n-\t\tsize_t __left_len = __left->_M_size;\n-\t\t\n-\t\t__dirns <<= 1;\n-\t\tif (__pos >= __curr_start_pos + __left_len) {\n-\t\t    __dirns |= 1;\n-\t\t    __curr_rope = __c->_M_right;\n-\t\t    __curr_start_pos += __left_len;\n-\t\t} else {\n-\t\t    __curr_rope = __left;\n-\t\t}\n-\t    }\n-\t    break;\n-\t}\n-    }\n-  done:\n-    // Copy last section of path into _M_path_end.\n-      {\n-\tint __i = -1;\n-\tint __j = __curr_depth + 1 - _S_path_cache_len;\n-\n-\tif (__j < 0) __j = 0;\n-\twhile (__j <= __curr_depth) {\n-\t    __x._M_path_end[++__i] = __path[__j++];\n-\t}\n-\t__x._M_leaf_index = __i;\n-      }\n-      __x._M_path_directions = __dirns;\n-      _S_setbuf(__x);\n-}\n-\n-// Specialized version of the above.  Assumes that\n-// the path cache is valid for the previous position.\n-template <class _CharT, class _Alloc>\n-void _Rope_iterator_base<_CharT,_Alloc>::_S_setcache_for_incr\n-(_Rope_iterator_base<_CharT,_Alloc>& __x)\n-{\n-    int __current_index = __x._M_leaf_index;\n-    const _RopeRep* __current_node = __x._M_path_end[__current_index];\n-    size_t __len = __current_node->_M_size;\n-    size_t __node_start_pos = __x._M_leaf_pos;\n-    unsigned char __dirns = __x._M_path_directions;\n-    _Rope_RopeConcatenation<_CharT,_Alloc>* __c;\n-\n-    __stl_assert(__x._M_current_pos <= __x._M_root->_M_size);\n-    if (__x._M_current_pos - __node_start_pos < __len) {\n-\t/* More stuff in this leaf, we just didn't cache it. */\n-\t_S_setbuf(__x);\n-\treturn;\n-    }\n-    __stl_assert(__node_start_pos + __len == __x._M_current_pos);\n-    //  node_start_pos is starting position of last_node.\n-    while (--__current_index >= 0) {\n-\tif (!(__dirns & 1) /* Path turned left */) \n-\t  break;\n-\t__current_node = __x._M_path_end[__current_index];\n-\t__c = (_Rope_RopeConcatenation<_CharT,_Alloc>*)__current_node;\n-\t// Otherwise we were in the right child.  Thus we should pop\n-\t// the concatenation node.\n-\t__node_start_pos -= __c->_M_left->_M_size;\n-\t__dirns >>= 1;\n-    }\n-    if (__current_index < 0) {\n-\t// We underflowed the cache. Punt.\n-\t_S_setcache(__x);\n-\treturn;\n-    }\n-    __current_node = __x._M_path_end[__current_index];\n-    __c = (_Rope_RopeConcatenation<_CharT,_Alloc>*)__current_node;\n-    // current_node is a concatenation node.  We are positioned on the first\n-    // character in its right child.\n-    // node_start_pos is starting position of current_node.\n-    __node_start_pos += __c->_M_left->_M_size;\n-    __current_node = __c->_M_right;\n-    __x._M_path_end[++__current_index] = __current_node;\n-    __dirns |= 1;\n-    while (_RopeRep::_S_concat == __current_node->_M_tag) {\n-\t++__current_index;\n-\tif (_S_path_cache_len == __current_index) {\n-\t    int __i;\n-\t    for (__i = 0; __i < _S_path_cache_len-1; __i++) {\n-\t\t__x._M_path_end[__i] = __x._M_path_end[__i+1];\n-\t    }\n-\t    --__current_index;\n-\t}\n-\t__current_node =\n-\t    ((_Rope_RopeConcatenation<_CharT,_Alloc>*)__current_node)->_M_left;\n-\t__x._M_path_end[__current_index] = __current_node;\n-\t__dirns <<= 1;\n-\t// node_start_pos is unchanged.\n-    }\n-    __x._M_leaf_index = __current_index;\n-    __x._M_leaf_pos = __node_start_pos;\n-    __x._M_path_directions = __dirns;\n-    _S_setbuf(__x);\n-}\n-\n-template <class _CharT, class _Alloc>\n-void _Rope_iterator_base<_CharT,_Alloc>::_M_incr(size_t __n) {\n-    _M_current_pos += __n;\n-    if (0 != _M_buf_ptr) {\n-        size_t __chars_left = _M_buf_end - _M_buf_ptr;\n-        if (__chars_left > __n) {\n-            _M_buf_ptr += __n;\n-        } else if (__chars_left == __n) {\n-            _M_buf_ptr += __n;\n-            _S_setcache_for_incr(*this);\n-        } else {\n-            _M_buf_ptr = 0;\n-        }\n-    }\n-}\n-\n-template <class _CharT, class _Alloc>\n-void _Rope_iterator_base<_CharT,_Alloc>::_M_decr(size_t __n) {\n-    if (0 != _M_buf_ptr) {\n-        size_t __chars_left = _M_buf_ptr - _M_buf_start;\n-        if (__chars_left >= __n) {\n-            _M_buf_ptr -= __n;\n-        } else {\n-            _M_buf_ptr = 0;\n-        }\n-    }\n-    _M_current_pos -= __n;\n-}\n-\n-template <class _CharT, class _Alloc>\n-void _Rope_iterator<_CharT,_Alloc>::_M_check() {\n-    if (_M_root_rope->_M_tree_ptr != _M_root) {\n-        // _Rope was modified.  Get things fixed up.\n-        _RopeRep::_S_unref(_M_root);\n-        _M_root = _M_root_rope->_M_tree_ptr;\n-        _RopeRep::_S_ref(_M_root);\n-        _M_buf_ptr = 0;\n-    }\n-}\n-\n-template <class _CharT, class _Alloc>\n-inline \n-_Rope_const_iterator<_CharT, _Alloc>::_Rope_const_iterator(\n-  const _Rope_iterator<_CharT,_Alloc>& __x)\n-: _Rope_iterator_base<_CharT,_Alloc>(__x) \n-{ }\n-\n-template <class _CharT, class _Alloc>\n-inline _Rope_iterator<_CharT,_Alloc>::_Rope_iterator(\n-  rope<_CharT,_Alloc>& __r, size_t __pos)\n-: _Rope_iterator_base<_CharT,_Alloc>(__r._M_tree_ptr, __pos), \n-  _M_root_rope(&__r)\n-{\n-    _RopeRep::_S_ref(_M_root);\n-}\n-\n-template <class _CharT, class _Alloc>\n-inline size_t \n-rope<_CharT,_Alloc>::_S_char_ptr_len(const _CharT* __s)\n-{\n-    const _CharT* __p = __s;\n-\n-    while (!_S_is0(*__p)) { ++__p; }\n-    return (__p - __s);\n-}\n-\n-\n-#ifndef __GC\n-\n-template <class _CharT, class _Alloc>\n-inline void _Rope_RopeRep<_CharT,_Alloc>::_M_free_c_string()\n-{\n-    _CharT* __cstr = _M_c_string;\n-    if (0 != __cstr) {\n-\tsize_t __size = _M_size + 1;\n-\tdestroy(__cstr, __cstr + __size);\n-\t_Data_deallocate(__cstr, __size);\n-    }\n-}\n-\n-\n-template <class _CharT, class _Alloc>\n-#ifdef __STL_USE_STD_ALLOCATORS\n-  inline void _Rope_RopeRep<_CharT,_Alloc>::_S_free_string(_CharT* __s,\n-\t\t\t\t\t\t\t   size_t __n,\n-\t\t\t\t\t\t           allocator_type __a)\n-#else\n-  inline void _Rope_RopeRep<_CharT,_Alloc>::_S_free_string(_CharT* __s,\n-\t\t\t\t\t\t\t   size_t __n)\n-#endif\n-{\n-    if (!_S_is_basic_char_type((_CharT*)0)) {\n-\tdestroy(__s, __s + __n);\n-    }\n-//  This has to be a static member, so this gets a bit messy\n-#   ifdef __STL_USE_STD_ALLOCATORS\n-        __a.deallocate(\n-\t    __s, _Rope_RopeLeaf<_CharT,_Alloc>::_S_rounded_up_size(__n));\n-#   else\n-\t_Data_deallocate(\n-\t    __s, _Rope_RopeLeaf<_CharT,_Alloc>::_S_rounded_up_size(__n));\n-#   endif\n-}\n-\n-\n-//  There are several reasons for not doing this with virtual destructors\n-//  and a class specific delete operator:\n-//  - A class specific delete operator can't easily get access to\n-//    allocator instances if we need them.\n-//  - Any virtual function would need a 4 or byte vtable pointer;\n-//    this only requires a one byte tag per object.\n-template <class _CharT, class _Alloc>\n-void _Rope_RopeRep<_CharT,_Alloc>::_M_free_tree()\n-{\n-    switch(_M_tag) {\n-\tcase _S_leaf:\n-\t    {\n-\t        _Rope_RopeLeaf<_CharT,_Alloc>* __l\n-\t\t\t= (_Rope_RopeLeaf<_CharT,_Alloc>*)this;\n-\t        __l->_Rope_RopeLeaf<_CharT,_Alloc>::~_Rope_RopeLeaf();\n-\t        _L_deallocate(__l, 1);\n-\t        break;\n-\t    }\n-\tcase _S_concat:\n-\t    {\n-\t        _Rope_RopeConcatenation<_CharT,_Alloc>* __c\n-\t\t    = (_Rope_RopeConcatenation<_CharT,_Alloc>*)this;\n-\t        __c->_Rope_RopeConcatenation<_CharT,_Alloc>::\n-\t\t       ~_Rope_RopeConcatenation();\n-\t        _C_deallocate(__c, 1);\n-\t        break;\n-\t    }\n-\tcase _S_function:\n-\t    {\n-\t        _Rope_RopeFunction<_CharT,_Alloc>* __f\n-\t\t    = (_Rope_RopeFunction<_CharT,_Alloc>*)this;\n-\t        __f->_Rope_RopeFunction<_CharT,_Alloc>::~_Rope_RopeFunction();\n-\t        _F_deallocate(__f, 1);\n-\t        break;\n-\t    }\n-\tcase _S_substringfn:\n-\t    {\n-\t        _Rope_RopeSubstring<_CharT,_Alloc>* __ss =\n-\t\t\t(_Rope_RopeSubstring<_CharT,_Alloc>*)this;\n-\t\t__ss->_Rope_RopeSubstring<_CharT,_Alloc>::\n-\t\t        ~_Rope_RopeSubstring();\n-\t\t_S_deallocate(__ss, 1);\n-\t\tbreak;\n-\t    }\n-    }\n-}\n-#else\n-\n-template <class _CharT, class _Alloc>\n-#ifdef __STL_USE_STD_ALLOCATORS\n-  inline void _Rope_RopeRep<_CharT,_Alloc>::_S_free_string\n-\t\t(const _CharT*, size_t, allocator_type)\n-#else\n-  inline void _Rope_RopeRep<_CharT,_Alloc>::_S_free_string\n-\t\t(const _CharT*, size_t)\n-#endif\n-{}\n-\n-#endif\n-\n-\n-// Concatenate a C string onto a leaf rope by copying the rope data.\n-// Used for short ropes.\n-template <class _CharT, class _Alloc>\n-rope<_CharT,_Alloc>::_RopeLeaf*\n-rope<_CharT,_Alloc>::_S_leaf_concat_char_iter\n-\t\t(_RopeLeaf* __r, const _CharT* __iter, size_t __len)\n-{\n-    size_t __old_len = __r->_M_size;\n-    _CharT* __new_data = (_CharT*)\n-\t_Data_allocate(_S_rounded_up_size(__old_len + __len));\n-    _RopeLeaf* __result;\n-    \n-    uninitialized_copy_n(__r->_M_data, __old_len, __new_data);\n-    uninitialized_copy_n(__iter, __len, __new_data + __old_len);\n-    _S_cond_store_eos(__new_data[__old_len + __len]);\n-    __STL_TRY {\n-\t__result = _S_new_RopeLeaf(__new_data, __old_len + __len,\n-\t\t\t\t   __r->get_allocator());\n-    }\n-    __STL_UNWIND(_RopeRep::__STL_FREE_STRING(__new_data, __old_len + __len,\n-\t\t\t\t\t     __r->get_allocator()));\n-    return __result;\n-}\n-\n-#ifndef __GC\n-// As above, but it's OK to clobber original if refcount is 1\n-template <class _CharT, class _Alloc>\n-rope<_CharT,_Alloc>::_RopeLeaf*\n-rope<_CharT,_Alloc>::_S_destr_leaf_concat_char_iter\n-\t\t(_RopeLeaf* __r, const _CharT* __iter, size_t __len)\n-{\n-    __stl_assert(__r->_M_refcount >= 1);\n-    if (__r->_M_refcount > 1)\n-      return _S_leaf_concat_char_iter(__r, __iter, __len);\n-    size_t __old_len = __r->_M_size;\n-    if (_S_allocated_capacity(__old_len) >= __old_len + __len) {\n-\t// The space has been partially initialized for the standard\n-\t// character types.  But that doesn't matter for those types.\n-\tuninitialized_copy_n(__iter, __len, __r->_M_data + __old_len);\n-\tif (_S_is_basic_char_type((_CharT*)0)) {\n-\t    _S_cond_store_eos(__r->_M_data[__old_len + __len]);\n-\t    __stl_assert(__r->_M_c_string == __r->_M_data);\n-\t} else if (__r->_M_c_string != __r->_M_data && 0 != __r->_M_c_string) {\n-\t    __r->_M_free_c_string();\n-\t    __r->_M_c_string = 0;\n-\t}\n-\t__r->_M_size = __old_len + __len;\n-\t__stl_assert(__r->_M_refcount == 1);\n-\t__r->_M_refcount = 2;\n-\treturn __r;\n-    } else {\n-\t_RopeLeaf* __result = _S_leaf_concat_char_iter(__r, __iter, __len);\n-\t__stl_assert(__result->_M_refcount == 1);\n-\treturn __result;\n-    }\n-}\n-#endif\n-\n-// Assumes left and right are not 0.\n-// Does not increment (nor decrement on exception) child reference counts.\n-// Result has ref count 1.\n-template <class _CharT, class _Alloc>\n-rope<_CharT,_Alloc>::_RopeRep*\n-rope<_CharT,_Alloc>::_S_tree_concat (_RopeRep* __left, _RopeRep* __right)\n-{\n-    _RopeConcatenation* __result =\n-      _S_new_RopeConcatenation(__left, __right, __left->get_allocator());\n-    size_t __depth = __result->_M_depth;\n-    \n-#   ifdef __STL_USE_STD_ALLOCATORS\n-      __stl_assert(__left->get_allocator() == __right->get_allocator());\n-#   endif\n-    if (__depth > 20 && (__result->_M_size < 1000 ||\n-\t\t\t __depth > _RopeRep::_S_max_rope_depth)) {\n-        _RopeRep* __balanced;\n-      \n-\t__STL_TRY {\n-\t   __balanced = _S_balance(__result);\n-#          ifndef __GC\n-\t     if (__result != __balanced) {\n-\t\t__stl_assert(1 == __result->_M_refcount\n-\t\t\t     && 1 == __balanced->_M_refcount);\n-\t     }\n-#          endif\n-\t   __result->_M_unref_nonnil();\n-        }\n-\t__STL_UNWIND((_C_deallocate(__result,1)));\n-\t\t// In case of exception, we need to deallocate\n-\t\t// otherwise dangling result node.  But caller\n-\t\t// still owns its children.  Thus unref is\n-\t\t// inappropriate.\n-\treturn __balanced;\n-    } else {\n-\treturn __result;\n-    }\n-}\n-\n-template <class _CharT, class _Alloc>\n-rope<_CharT,_Alloc>::_RopeRep* rope<_CharT,_Alloc>::_S_concat_char_iter\n-\t\t(_RopeRep* __r, const _CharT*__s, size_t __slen)\n-{\n-    _RopeRep* __result;\n-    if (0 == __slen) {\n-\t_S_ref(__r);\n-\treturn __r;\n-    }\n-    if (0 == __r)\n-      return __STL_ROPE_FROM_UNOWNED_CHAR_PTR(__s, __slen,\n-\t\t\t\t\t      __r->get_allocator());\n-    if (_RopeRep::_S_leaf == __r->_M_tag && \n-          __r->_M_size + __slen <= _S_copy_max) {\n-\t__result = _S_leaf_concat_char_iter((_RopeLeaf*)__r, __s, __slen);\n-#       ifndef __GC\n-\t  __stl_assert(1 == __result->_M_refcount);\n-#       endif\n-\treturn __result;\n-    }\n-    if (_RopeRep::_S_concat == __r->_M_tag\n-\t&& _RopeRep::_S_leaf == ((_RopeConcatenation*)__r)->_M_right->_M_tag) {\n-\t_RopeLeaf* __right = \n-\t  (_RopeLeaf* )(((_RopeConcatenation* )__r)->_M_right);\n-\tif (__right->_M_size + __slen <= _S_copy_max) {\n-\t  _RopeRep* __left = ((_RopeConcatenation*)__r)->_M_left;\n-\t  _RopeRep* __nright = \n-\t    _S_leaf_concat_char_iter((_RopeLeaf*)__right, __s, __slen);\n-\t  __left->_M_ref_nonnil();\n-\t  __STL_TRY {\n-\t    __result = _S_tree_concat(__left, __nright);\n-          }\n-\t  __STL_UNWIND(_S_unref(__left); _S_unref(__nright));\n-#         ifndef __GC\n-\t    __stl_assert(1 == __result->_M_refcount);\n-#         endif\n-\t  return __result;\n-\t}\n-    }\n-    _RopeRep* __nright =\n-      __STL_ROPE_FROM_UNOWNED_CHAR_PTR(__s, __slen, __r->get_allocator());\n-    __STL_TRY {\n-      __r->_M_ref_nonnil();\n-      __result = _S_tree_concat(__r, __nright);\n-    }\n-    __STL_UNWIND(_S_unref(__r); _S_unref(__nright));\n-#   ifndef __GC\n-      __stl_assert(1 == __result->_M_refcount);\n-#   endif\n-    return __result;\n-}\n-\n-#ifndef __GC\n-template <class _CharT, class _Alloc>\n-rope<_CharT,_Alloc>::_RopeRep* \n-rope<_CharT,_Alloc>::_S_destr_concat_char_iter(\n-  _RopeRep* __r, const _CharT* __s, size_t __slen)\n-{\n-    _RopeRep* __result;\n-    if (0 == __r)\n-      return __STL_ROPE_FROM_UNOWNED_CHAR_PTR(__s, __slen,\n-\t\t\t\t\t      __r->get_allocator());\n-    size_t __count = __r->_M_refcount;\n-    size_t __orig_size = __r->_M_size;\n-    __stl_assert(__count >= 1);\n-    if (__count > 1) return _S_concat_char_iter(__r, __s, __slen);\n-    if (0 == __slen) {\n-\t__r->_M_refcount = 2;      // One more than before\n-\treturn __r;\n-    }\n-    if (__orig_size + __slen <= _S_copy_max && \n-          _RopeRep::_S_leaf == __r->_M_tag) {\n-\t__result = _S_destr_leaf_concat_char_iter((_RopeLeaf*)__r, __s, __slen);\n-\treturn __result;\n-    }\n-    if (_RopeRep::_S_concat == __r->_M_tag) {\n-\t_RopeLeaf* __right = (_RopeLeaf*)(((_RopeConcatenation*)__r)->_M_right);\n-\tif (_RopeRep::_S_leaf == __right->_M_tag\n-\t    && __right->_M_size + __slen <= _S_copy_max) {\n-\t  _RopeRep* __new_right = \n-\t    _S_destr_leaf_concat_char_iter(__right, __s, __slen);\n-\t  if (__right == __new_right) {\n-\t      __stl_assert(__new_right->_M_refcount == 2);\n-\t      __new_right->_M_refcount = 1;\n-\t  } else {\n-\t      __stl_assert(__new_right->_M_refcount >= 1);\n-\t      __right->_M_unref_nonnil();\n-\t  }\n-\t  __stl_assert(__r->_M_refcount == 1);\n-\t  __r->_M_refcount = 2;    // One more than before.\n-\t  ((_RopeConcatenation*)__r)->_M_right = __new_right;\n-\t  __r->_M_size = __orig_size + __slen;\n-\t  if (0 != __r->_M_c_string) {\n-\t      __r->_M_free_c_string();\n-\t      __r->_M_c_string = 0;\n-\t  }\n-\t  return __r;\n-\t}\n-    }\n-    _RopeRep* __right =\n-      __STL_ROPE_FROM_UNOWNED_CHAR_PTR(__s, __slen, __r->get_allocator());\n-    __r->_M_ref_nonnil();\n-    __STL_TRY {\n-      __result = _S_tree_concat(__r, __right);\n-    }\n-    __STL_UNWIND(_S_unref(__r); _S_unref(__right))\n-    __stl_assert(1 == __result->_M_refcount);\n-    return __result;\n-}\n-#endif /* !__GC */\n-\n-template <class _CharT, class _Alloc>\n-rope<_CharT,_Alloc>::_RopeRep*\n-rope<_CharT,_Alloc>::_S_concat(_RopeRep* __left, _RopeRep* __right)\n-{\n-    if (0 == __left) {\n-\t_S_ref(__right);\n-\treturn __right;\n-    }\n-    if (0 == __right) {\n-\t__left->_M_ref_nonnil();\n-\treturn __left;\n-    }\n-    if (_RopeRep::_S_leaf == __right->_M_tag) {\n-\tif (_RopeRep::_S_leaf == __left->_M_tag) {\n-\t  if (__right->_M_size + __left->_M_size <= _S_copy_max) {\n-\t    return _S_leaf_concat_char_iter((_RopeLeaf*)__left,\n-\t\t\t\t\t ((_RopeLeaf*)__right)->_M_data,\n-\t\t\t\t\t __right->_M_size);\n-\t  }\n-\t} else if (_RopeRep::_S_concat == __left->_M_tag\n-\t\t   && _RopeRep::_S_leaf ==\n-\t\t      ((_RopeConcatenation*)__left)->_M_right->_M_tag) {\n-\t  _RopeLeaf* __leftright =\n-\t\t    (_RopeLeaf*)(((_RopeConcatenation*)__left)->_M_right); \n-\t  if (__leftright->_M_size + __right->_M_size <= _S_copy_max) {\n-\t    _RopeRep* __leftleft = ((_RopeConcatenation*)__left)->_M_left;\n-\t    _RopeRep* __rest = _S_leaf_concat_char_iter(__leftright,\n-\t\t\t\t\t   ((_RopeLeaf*)__right)->_M_data,\n-\t\t\t\t\t   __right->_M_size);\n-\t    __leftleft->_M_ref_nonnil();\n-\t    __STL_TRY {\n-\t      return(_S_tree_concat(__leftleft, __rest));\n-            }\n-\t    __STL_UNWIND(_S_unref(__leftleft); _S_unref(__rest))\n-\t  }\n-\t}\n-    }\n-    __left->_M_ref_nonnil();\n-    __right->_M_ref_nonnil();\n-    __STL_TRY {\n-      return(_S_tree_concat(__left, __right));\n-    }\n-    __STL_UNWIND(_S_unref(__left); _S_unref(__right));\n-}\n-\n-template <class _CharT, class _Alloc>\n-rope<_CharT,_Alloc>::_RopeRep*\n-rope<_CharT,_Alloc>::_S_substring(_RopeRep* __base, \n-                               size_t __start, size_t __endp1)\n-{\n-    if (0 == __base) return 0;\n-    size_t __len = __base->_M_size;\n-    size_t __adj_endp1;\n-    const size_t __lazy_threshold = 128;\n-    \n-    if (__endp1 >= __len) {\n-\tif (0 == __start) {\n-\t    __base->_M_ref_nonnil();\n-\t    return __base;\n-\t} else {\n-\t    __adj_endp1 = __len;\n-\t}\n-    } else {\n-\t__adj_endp1 = __endp1;\n-    }\n-    switch(__base->_M_tag) {\n-\tcase _RopeRep::_S_concat:\n-\t    {\n-\t\t_RopeConcatenation* __c = (_RopeConcatenation*)__base;\n-\t\t_RopeRep* __left = __c->_M_left;\n-\t\t_RopeRep* __right = __c->_M_right;\n-\t\tsize_t __left_len = __left->_M_size;\n-\t\t_RopeRep* __result;\n-\n-\t\tif (__adj_endp1 <= __left_len) {\n-\t\t    return _S_substring(__left, __start, __endp1);\n-\t\t} else if (__start >= __left_len) {\n-\t\t    return _S_substring(__right, __start - __left_len,\n-\t\t\t\t  __adj_endp1 - __left_len);\n-\t\t}\n-\t\t_Self_destruct_ptr __left_result(\n-\t\t  _S_substring(__left, __start, __left_len));\n-\t\t_Self_destruct_ptr __right_result(\n-\t\t  _S_substring(__right, 0, __endp1 - __left_len));\n-\t\t__result = _S_concat(__left_result, __right_result);\n-#               ifndef __GC\n-\t\t  __stl_assert(1 == __result->_M_refcount);\n-#               endif\n-\t\treturn __result;\n-\t    }\n-\tcase _RopeRep::_S_leaf:\n-\t    {\n-\t\t_RopeLeaf* __l = (_RopeLeaf*)__base;\n-\t\t_RopeLeaf* __result;\n-\t\tsize_t __result_len;\n-\t\tif (__start >= __adj_endp1) return 0;\n-\t\t__result_len = __adj_endp1 - __start;\n-\t\tif (__result_len > __lazy_threshold) goto lazy;\n-#               ifdef __GC\n-\t\t    const _CharT* __section = __l->_M_data + __start;\n-\t\t    __result = _S_new_RopeLeaf(__section, __result_len,\n-\t\t\t\t\t  __base->get_allocator());\n-\t\t    __result->_M_c_string = 0;  // Not eos terminated.\n-#               else\n-\t\t    // We should sometimes create substring node instead.\n-\t\t    __result = __STL_ROPE_FROM_UNOWNED_CHAR_PTR(\n-\t\t\t\t\t__l->_M_data + __start, __result_len,\n-\t\t\t\t\t__base->get_allocator());\n-#               endif\n-\t\treturn __result;\n-\t    }\n-\tcase _RopeRep::_S_substringfn:\n-\t    // Avoid introducing multiple layers of substring nodes.\n-\t    {\n-\t\t_RopeSubstring* __old = (_RopeSubstring*)__base;\n-\t\tsize_t __result_len;\n-\t\tif (__start >= __adj_endp1) return 0;\n-\t\t__result_len = __adj_endp1 - __start;\n-\t\tif (__result_len > __lazy_threshold) {\n-\t\t    _RopeSubstring* __result =\n-\t\t\t_S_new_RopeSubstring(__old->_M_base,\n-\t\t\t\t\t  __start + __old->_M_start,\n-\t\t\t\t\t  __adj_endp1 - __start,\n-\t\t\t\t\t  __base->get_allocator());\n-\t\t    return __result;\n-\n-\t\t} // *** else fall through: ***\n-\t    }\n-\tcase _RopeRep::_S_function:\n-\t    {\n-\t\t_RopeFunction* __f = (_RopeFunction*)__base;\n-\t\t_CharT* __section;\n-\t\tsize_t __result_len;\n-\t\tif (__start >= __adj_endp1) return 0;\n-\t\t__result_len = __adj_endp1 - __start;\n-\n-\t\tif (__result_len > __lazy_threshold) goto lazy;\n-\t\t__section = (_CharT*)\n-\t\t\t_Data_allocate(_S_rounded_up_size(__result_len));\n-\t\t__STL_TRY {\n-\t\t  (*(__f->_M_fn))(__start, __result_len, __section);\n-                }\n-\t\t__STL_UNWIND(_RopeRep::__STL_FREE_STRING(\n-\t               __section, __result_len, __base->get_allocator()));\n-\t\t_S_cond_store_eos(__section[__result_len]);\n-\t\treturn _S_new_RopeLeaf(__section, __result_len,\n-\t\t\t\t       __base->get_allocator());\n-\t    }\n-    }\n-    /*NOTREACHED*/\n-    __stl_assert(false);\n-  lazy:\n-    {\n-\t// Create substring node.\n-\treturn _S_new_RopeSubstring(__base, __start, __adj_endp1 - __start,\n-\t\t\t       __base->get_allocator());\n-    }\n-}\n-\n-template<class _CharT>\n-class _Rope_flatten_char_consumer : public _Rope_char_consumer<_CharT> {\n-    private:\n-\t_CharT* _M_buf_ptr;\n-    public:\n-\t//  _CharT* _M_buffer;  // XXX not used\n-\n-\t_Rope_flatten_char_consumer(_CharT* __buffer) {\n-\t    _M_buf_ptr = __buffer;\n-\t};\n-\t~_Rope_flatten_char_consumer() {}\n-\tbool operator() (const _CharT* __leaf, size_t __n) {\n-\t    uninitialized_copy_n(__leaf, __n, _M_buf_ptr);\n-\t    _M_buf_ptr += __n;\n-\t    return true;\n-\t}\n-};\n-\t    \n-template<class _CharT>\n-class _Rope_find_char_char_consumer : public _Rope_char_consumer<_CharT> {\n-    private:\n-\t_CharT _M_pattern;\n-    public:\n-\tsize_t _M_count;  // Number of nonmatching characters\n-\t_Rope_find_char_char_consumer(_CharT __p) \n-\t  : _M_pattern(__p), _M_count(0) {}\n-\t~_Rope_find_char_char_consumer() {}\n-\tbool operator() (const _CharT* __leaf, size_t __n) {\n-\t    size_t __i;\n-\t    for (__i = 0; __i < __n; __i++) {\n-\t\tif (__leaf[__i] == _M_pattern) {\n-\t\t    _M_count += __i; return false;\n-\t\t}\n-\t    }\n-\t    _M_count += __n; return true;\n-\t}\n-};\n-\t    \n-template<class _CharT>\n-class _Rope_insert_char_consumer : public _Rope_char_consumer<_CharT> {\n-    private:\n-\ttypedef ostream _Insert_ostream;\n-\t_Insert_ostream& _M_o;\n-    public:\n-\t// _CharT* buffer;    // XXX not used\n-\t_Rope_insert_char_consumer(_Insert_ostream& __writer) \n-\t  : _M_o(__writer) {};\n-\t~_Rope_insert_char_consumer() { };\n-\t\t// Caller is presumed to own the ostream\n-\tbool operator() (const _CharT* __leaf, size_t __n);\n-\t\t// Returns true to continue traversal.\n-};\n-\t    \n-template<class _CharT>\n-bool _Rope_insert_char_consumer<_CharT>::operator()\n-\t\t\t\t\t(const _CharT* __leaf, size_t __n)\n-{\n-    size_t __i;\n-    //  We assume that formatting is set up correctly for each element.\n-    for (__i = 0; __i < __n; __i++) _M_o << __leaf[__i];\n-    return true;\n-}\n-\n-inline bool _Rope_insert_char_consumer<char>::operator()\n-\t\t\t\t\t(const char* __leaf, size_t __n)\n-{\n-    size_t __i;\n-    for (__i = 0; __i < __n; __i++) _M_o.put(__leaf[__i]);\n-    return true;\n-}\n-\n-#if 0\n-// I couldn't get this to work work with the VC++ version of basic_ostream.\n-// It also doesn't really do the right thing unless o is a wide stream.\n-// Given that wchar_t is often 4 bytes, its not clear to me how useful\n-// this stuff is anyway.\n-inline bool _Rope_insert_char_consumer<wchar_t>::operator()\n-\t\t\t\t\t(const wchar_t* __leaf, size_t __n)\n-{\n-    size_t __i;\n-    for (__i = 0; __i < __n; __i++) _M_o.put(__leaf[__i]);\n-    return true;\n-}\n-#endif /* !_MSC_VER  && !BORLAND */\n-\n-template <class _CharT, class _Alloc>\n-bool rope<_CharT, _Alloc>::_S_apply_to_pieces(\n-\t\t\t\t_Rope_char_consumer<_CharT>& __c,\n-\t\t\t\tconst _RopeRep* __r,\n-\t\t\t\tsize_t __begin, size_t __end)\n-{\n-    if (0 == __r) return true;\n-    switch(__r->_M_tag) {\n-\tcase _RopeRep::_S_concat:\n-\t    {\n-\t\t_RopeConcatenation* __conc = (_RopeConcatenation*)__r;\n-\t\t_RopeRep* __left =  __conc->_M_left;\n-\t\tsize_t __left_len = __left->_M_size;\n-\t\tif (__begin < __left_len) {\n-\t\t    size_t __left_end = min(__left_len, __end);\n-\t\t    if (!_S_apply_to_pieces(__c, __left, __begin, __left_end))\n-\t\t\treturn false;\n-\t\t}\n-\t\tif (__end > __left_len) {\n-\t\t    _RopeRep* __right =  __conc->_M_right;\n-\t\t    size_t __right_start = max(__left_len, __begin);\n-\t\t    if (!_S_apply_to_pieces(__c, __right,\n-\t\t\t\t\t __right_start - __left_len,\n-\t\t\t\t\t __end - __left_len)) {\n-\t\t\treturn false;\n-\t\t    }\n-\t\t}\n-\t    }\n-\t    return true;\n-\tcase _RopeRep::_S_leaf:\n-\t    {\n-\t\t_RopeLeaf* __l = (_RopeLeaf*)__r;\n-\t\treturn __c(__l->_M_data + __begin, __end - __begin);\n-\t    }\n-\tcase _RopeRep::_S_function:\n-\tcase _RopeRep::_S_substringfn:\n-\t    {\n-\t\t_RopeFunction* __f = (_RopeFunction*)__r;\n-\t\tsize_t __len = __end - __begin;\n-\t\tbool __result;\n-\t\t_CharT* __buffer =\n-\t\t  (_CharT*)alloc::allocate(__len * sizeof(_CharT));\n-\t\t__STL_TRY {\n-\t\t  (*(__f->_M_fn))(__begin, __end, __buffer);\n-\t\t  __result = __c(__buffer, __len);\n-                  alloc::deallocate(__buffer, __len * sizeof(_CharT));\n-                }\n-\t\t__STL_UNWIND((alloc::deallocate(__buffer,\n-\t\t\t\t\t\t__len * sizeof(_CharT))))\n-\t\treturn __result;\n-\t    }\n-\tdefault:\n-\t    __stl_assert(false);\n-\t    /*NOTREACHED*/\n-\t    return false;\n-    }\n-}\n-\n-inline void _Rope_fill(ostream& __o, size_t __n)\n-{\n-    char __f = __o.fill();\n-    size_t __i;\n-\n-    for (__i = 0; __i < __n; __i++) __o.put(__f);\n-}\n-    \n-\n-template <class _CharT> inline bool _Rope_is_simple(_CharT*) { return false; }\n-inline bool _Rope_is_simple(char*) { return true; }\n-inline bool _Rope_is_simple(wchar_t*) { return true; }\n-\n-\n-template<class _CharT, class _Alloc>\n-ostream& operator<< (ostream& __o, const rope<_CharT, _Alloc>& __r)\n-{\n-    size_t __w = __o.width();\n-    bool __left = bool(__o.flags() & ios::left);\n-    size_t __pad_len;\n-    size_t __rope_len = __r.size();\n-    _Rope_insert_char_consumer<_CharT> __c(__o);\n-    bool __is_simple = _Rope_is_simple((_CharT*)0);\n-    \n-    if (__rope_len < __w) {\n-\t__pad_len = __w - __rope_len;\n-    } else {\n-\t__pad_len = 0;\n-    }\n-    if (!__is_simple) __o.width(__w/__rope_len);\n-    __STL_TRY {\n-      if (__is_simple && !__left && __pad_len > 0) {\n-\t_Rope_fill(__o, __pad_len);\n-      }\n-      __r.apply_to_pieces(0, __r.size(), __c);\n-      if (__is_simple && __left && __pad_len > 0) {\n-\t_Rope_fill(__o, __pad_len);\n-      }\n-      if (!__is_simple)\n-        __o.width(__w);\n-    }\n-    __STL_UNWIND(if (!__is_simple) __o.width(__w))\n-    return __o;\n-}\n-\n-template <class _CharT, class _Alloc>\n-_CharT*\n-rope<_CharT,_Alloc>::_S_flatten(_RopeRep* __r,\n-\t\t\t\t size_t __start, size_t __len,\n-\t\t\t\t _CharT* __buffer)\n-{\n-    _Rope_flatten_char_consumer<_CharT> __c(__buffer);\n-    _S_apply_to_pieces(__c, __r, __start, __start + __len);\n-    return(__buffer + __len);\n-}\n-\n-template <class _CharT, class _Alloc>\n-size_t\n-rope<_CharT,_Alloc>::find(_CharT __pattern, size_t __start) const\n-{\n-    _Rope_find_char_char_consumer<_CharT> __c(__pattern);\n-    _S_apply_to_pieces(__c, _M_tree_ptr, __start, size());\n-    size_type __result_pos = __start + __c._M_count;\n-#   ifndef __STL_OLD_ROPE_SEMANTICS\n-\tif (__result_pos == size()) __result_pos = npos;\n-#   endif\n-    return __result_pos;\n-}\n-\n-template <class _CharT, class _Alloc>\n-_CharT*\n-rope<_CharT,_Alloc>::_S_flatten(_RopeRep* __r, _CharT* __buffer)\n-{\n-    if (0 == __r) return __buffer;\n-    switch(__r->_M_tag) {\n-\tcase _RopeRep::_S_concat:\n-\t    {\n-\t\t_RopeConcatenation* __c = (_RopeConcatenation*)__r;\n-\t\t_RopeRep* __left = __c->_M_left;\n-\t\t_RopeRep* __right = __c->_M_right;\n-\t\t_CharT* __rest = _S_flatten(__left, __buffer);\n-\t\treturn _S_flatten(__right, __rest);\n-\t    }\n-\tcase _RopeRep::_S_leaf:\n-\t    {\n-\t\t_RopeLeaf* __l = (_RopeLeaf*)__r;\n-\t\treturn copy_n(__l->_M_data, __l->_M_size, __buffer).second;\n-\t    }\n-\tcase _RopeRep::_S_function:\n-\tcase _RopeRep::_S_substringfn:\n-\t    // We dont yet do anything with substring nodes.\n-\t    // This needs to be fixed before ropefiles will work well.\n-\t    {\n-\t\t_RopeFunction* __f = (_RopeFunction*)__r;\n-\t\t(*(__f->_M_fn))(0, __f->_M_size, __buffer);\n-\t\treturn __buffer + __f->_M_size;\n-\t    }\n-\tdefault:\n-\t    __stl_assert(false);\n-\t    /*NOTREACHED*/\n-\t    return 0;\n-    }\n-}\n-\n-\n-// This needs work for _CharT != char\n-template <class _CharT, class _Alloc>\n-void\n-rope<_CharT,_Alloc>::_S_dump(_RopeRep* __r, int __indent)\n-{\n-    for (int __i = 0; __i < __indent; __i++) putchar(' ');\n-    if (0 == __r) {\n-\tprintf(\"NULL\\n\"); return;\n-    }\n-    if (_RopeRep::_S_concat == __r->_M_tag) {\n-\t_RopeConcatenation* __c = (_RopeConcatenation*)__r;\n-\t_RopeRep* __left = __c->_M_left;\n-\t_RopeRep* __right = __c->_M_right;\n-\n-#       ifdef __GC\n-\t  printf(\"Concatenation %p (depth = %d, len = %ld, %s balanced)\\n\",\n-\t    __r, __r->_M_depth, __r->_M_size, __r->_M_is_balanced? \"\" : \"not\");\n-#       else\n-\t  printf(\"Concatenation %p (rc = %ld, depth = %d, \"\n-\t           \"len = %ld, %s balanced)\\n\",\n-\t\t __r, __r->_M_refcount, __r->_M_depth, __r->_M_size,\n-\t\t __r->_M_is_balanced? \"\" : \"not\");\n-#       endif\n-\t_S_dump(__left, __indent + 2);\n-\t_S_dump(__right, __indent + 2);\n-\treturn;\n-    } else {\n-\tchar* __kind;\n-\n-\tswitch (__r->_M_tag) {\n-\t    case _RopeRep::_S_leaf:\n-\t\t__kind = \"Leaf\";\n-\t\tbreak;\n-\t    case _RopeRep::_S_function:\n-\t\t__kind = \"Function\";\n-\t\tbreak;\n-\t    case _RopeRep::_S_substringfn:\n-\t\t__kind = \"Function representing substring\";\n-\t\tbreak;\n-\t    default:\n-\t\t__kind = \"(corrupted kind field!)\";\n-\t}\n-#       ifdef __GC\n-\t  printf(\"%s %p (depth = %d, len = %ld) \",\n-\t\t __kind, __r, __r->_M_depth, __r->_M_size);\n-#       else\n-\t  printf(\"%s %p (rc = %ld, depth = %d, len = %ld) \",\n-\t\t __kind, __r, __r->_M_refcount, __r->_M_depth, __r->_M_size);\n-#       endif\n-\tif (_S_is_one_byte_char_type((_CharT*)0)) {\n-\t    const int __max_len = 40;\n-\t    _Self_destruct_ptr __prefix(_S_substring(__r, 0, __max_len));\n-\t    _CharT __buffer[__max_len + 1];\n-\t    bool __too_big = __r->_M_size > __prefix->_M_size;\n-\n-\t    _S_flatten(__prefix, __buffer);\n-\t    __buffer[__prefix->_M_size] = _S_eos((_CharT*)0); \n-\t    printf(\"%s%s\\n\", \n-\t           (char*)__buffer, __too_big? \"...\\n\" : \"\\n\");\n-\t} else {\n-\t    printf(\"\\n\");\n-\t}\n-    }\n-}\n-\n-template <class _CharT, class _Alloc>\n-const unsigned long\n-rope<_CharT,_Alloc>::_S_min_len[\n-  _Rope_RopeRep<_CharT,_Alloc>::_S_max_rope_depth + 1] = {\n-/* 0 */1, /* 1 */2, /* 2 */3, /* 3 */5, /* 4 */8, /* 5 */13, /* 6 */21,\n-/* 7 */34, /* 8 */55, /* 9 */89, /* 10 */144, /* 11 */233, /* 12 */377,\n-/* 13 */610, /* 14 */987, /* 15 */1597, /* 16 */2584, /* 17 */4181,\n-/* 18 */6765, /* 19 */10946, /* 20 */17711, /* 21 */28657, /* 22 */46368,\n-/* 23 */75025, /* 24 */121393, /* 25 */196418, /* 26 */317811,\n-/* 27 */514229, /* 28 */832040, /* 29 */1346269, /* 30 */2178309,\n-/* 31 */3524578, /* 32 */5702887, /* 33 */9227465, /* 34 */14930352,\n-/* 35 */24157817, /* 36 */39088169, /* 37 */63245986, /* 38 */102334155,\n-/* 39 */165580141, /* 40 */267914296, /* 41 */433494437,\n-/* 42 */701408733, /* 43 */1134903170, /* 44 */1836311903,\n-/* 45 */2971215073u };\n-// These are Fibonacci numbers < 2**32.\n-\n-template <class _CharT, class _Alloc>\n-rope<_CharT,_Alloc>::_RopeRep*\n-rope<_CharT,_Alloc>::_S_balance(_RopeRep* __r)\n-{\n-    _RopeRep* __forest[_RopeRep::_S_max_rope_depth + 1];\n-    _RopeRep* __result = 0;\n-    int __i;\n-    // Invariant:\n-    // The concatenation of forest in descending order is equal to __r.\n-    // __forest[__i]._M_size >= _S_min_len[__i]\n-    // __forest[__i]._M_depth = __i\n-    // References from forest are included in refcount.\n-\n-    for (__i = 0; __i <= _RopeRep::_S_max_rope_depth; ++__i) \n-      __forest[__i] = 0;\n-    __STL_TRY {\n-      _S_add_to_forest(__r, __forest);\n-      for (__i = 0; __i <= _RopeRep::_S_max_rope_depth; ++__i) \n-        if (0 != __forest[__i]) {\n-#\tifndef __GC\n-\t  _Self_destruct_ptr __old(__result);\n-#\tendif\n-\t  __result = _S_concat(__forest[__i], __result);\n-\t__forest[__i]->_M_unref_nonnil();\n-#\tif !defined(__GC) && defined(__STL_USE_EXCEPTIONS)\n-\t  __forest[__i] = 0;\n-#\tendif\n-      }\n-    }\n-    __STL_UNWIND(for(__i = 0; __i <= _RopeRep::_S_max_rope_depth; __i++)\n-\t\t _S_unref(__forest[__i]))\n-    if (__result->_M_depth > _RopeRep::_S_max_rope_depth) abort();\n-    return(__result);\n-}\n-\n-\n-template <class _CharT, class _Alloc>\n-void\n-rope<_CharT,_Alloc>::_S_add_to_forest(_RopeRep* __r, _RopeRep** __forest)\n-{\n-    if (__r->_M_is_balanced) {\n-\t_S_add_leaf_to_forest(__r, __forest);\n-\treturn;\n-    }\n-    __stl_assert(__r->_M_tag == _RopeRep::_S_concat);\n-    {\n-\t_RopeConcatenation* __c = (_RopeConcatenation*)__r;\n-\n-\t_S_add_to_forest(__c->_M_left, __forest);\n-\t_S_add_to_forest(__c->_M_right, __forest);\n-    }\n-}\n-\n-\n-template <class _CharT, class _Alloc>\n-void\n-rope<_CharT,_Alloc>::_S_add_leaf_to_forest(_RopeRep* __r, _RopeRep** __forest)\n-{\n-    _RopeRep* __insertee;   \t\t// included in refcount\n-    _RopeRep* __too_tiny = 0;    \t// included in refcount\n-    int __i;  \t\t\t\t// forest[0..__i-1] is empty\n-    size_t __s = __r->_M_size;\n-\n-    for (__i = 0; __s >= _S_min_len[__i+1]/* not this bucket */; ++__i) {\n-\tif (0 != __forest[__i]) {\n-#\t    ifndef __GC\n-\t      _Self_destruct_ptr __old(__too_tiny);\n-#\t    endif\n-\t    __too_tiny = _S_concat_and_set_balanced(__forest[__i], __too_tiny);\n-\t    __forest[__i]->_M_unref_nonnil();\n-\t    __forest[__i] = 0;\n-\t}\n-    }\n-    {\n-#\tifndef __GC\n-\t  _Self_destruct_ptr __old(__too_tiny);\n-#\tendif\n-\t__insertee = _S_concat_and_set_balanced(__too_tiny, __r);\n-    }\n-    // Too_tiny dead, and no longer included in refcount.\n-    // Insertee is live and included.\n-    __stl_assert(_S_is_almost_balanced(__insertee));\n-    __stl_assert(__insertee->_M_depth <= __r->_M_depth + 1);\n-    for (;; ++__i) {\n-\tif (0 != __forest[__i]) {\n-#\t    ifndef __GC\n-\t      _Self_destruct_ptr __old(__insertee);\n-#\t    endif\n-\t    __insertee = _S_concat_and_set_balanced(__forest[__i], __insertee);\n-\t    __forest[__i]->_M_unref_nonnil();\n-\t    __forest[__i] = 0;\n-\t    __stl_assert(_S_is_almost_balanced(__insertee));\n-\t}\n-\t__stl_assert(_S_min_len[__i] <= __insertee->_M_size);\n-\t__stl_assert(__forest[__i] == 0);\n-\tif (__i == _RopeRep::_S_max_rope_depth || \n-\t      __insertee->_M_size < _S_min_len[__i+1]) {\n-\t    __forest[__i] = __insertee;\n-\t    // refcount is OK since __insertee is now dead.\n-\t    return;\n-\t}\n-    }\n-}\n-\n-template <class _CharT, class _Alloc>\n-_CharT\n-rope<_CharT,_Alloc>::_S_fetch(_RopeRep* __r, size_type __i)\n-{\n-    __GC_CONST _CharT* __cstr = __r->_M_c_string;\n-\n-    __stl_assert(__i < __r->_M_size);\n-    if (0 != __cstr) return __cstr[__i]; \n-    for(;;) {\n-      switch(__r->_M_tag) {\n-\tcase _RopeRep::_S_concat:\n-\t    {\n-\t\t_RopeConcatenation* __c = (_RopeConcatenation*)__r;\n-\t\t_RopeRep* __left = __c->_M_left;\n-\t\tsize_t __left_len = __left->_M_size;\n-\n-\t\tif (__i >= __left_len) {\n-\t\t    __i -= __left_len;\n-\t\t    __r = __c->_M_right;\n-\t\t} else {\n-\t\t    __r = __left;\n-\t\t}\n-\t    }\n-\t    break;\n-\tcase _RopeRep::_S_leaf:\n-\t    {\n-\t\t_RopeLeaf* __l = (_RopeLeaf*)__r;\n-\t\treturn __l->_M_data[__i];\n-\t    }\n-\tcase _RopeRep::_S_function:\n-\tcase _RopeRep::_S_substringfn:\n-\t    {\n-\t\t_RopeFunction* __f = (_RopeFunction*)__r;\n-\t\t_CharT __result;\n-\n-\t\t(*(__f->_M_fn))(__i, 1, &__result);\n-\t\treturn __result;\n-\t    }\n-      }\n-    }\n-}\n-\n-# ifndef __GC\n-// Return a uniquely referenced character slot for the given\n-// position, or 0 if that's not possible.\n-template <class _CharT, class _Alloc>\n-_CharT*\n-rope<_CharT,_Alloc>::_S_fetch_ptr(_RopeRep* __r, size_type __i)\n-{\n-    _RopeRep* __clrstack[_RopeRep::_S_max_rope_depth];\n-    size_t __csptr = 0;\n-\n-    for(;;) {\n-      if (__r->_M_refcount > 1) return 0;\n-      switch(__r->_M_tag) {\n-\tcase _RopeRep::_S_concat:\n-\t    {\n-\t\t_RopeConcatenation* __c = (_RopeConcatenation*)__r;\n-\t\t_RopeRep* __left = __c->_M_left;\n-\t\tsize_t __left_len = __left->_M_size;\n-\n-\t\tif (__c->_M_c_string != 0) __clrstack[__csptr++] = __c;\n-\t\tif (__i >= __left_len) {\n-\t\t    __i -= __left_len;\n-\t\t    __r = __c->_M_right;\n-\t\t} else {\n-\t\t    __r = __left;\n-\t\t}\n-\t    }\n-\t    break;\n-\tcase _RopeRep::_S_leaf:\n-\t    {\n-\t\t_RopeLeaf* __l = (_RopeLeaf*)__r;\n-\t\tif (__l->_M_c_string != __l->_M_data && __l->_M_c_string != 0)\n-\t\t    __clrstack[__csptr++] = __l;\n-\t\twhile (__csptr > 0) {\n-\t\t    -- __csptr;\n-\t\t    _RopeRep* __d = __clrstack[__csptr];\n-\t\t    __d->_M_free_c_string();\n-\t\t    __d->_M_c_string = 0;\n-\t\t}\n-\t\treturn __l->_M_data + __i;\n-\t    }\n-\tcase _RopeRep::_S_function:\n-\tcase _RopeRep::_S_substringfn:\n-\t    return 0;\n-      }\n-    }\n-}\n-# endif /* __GC */\n-\n-// The following could be implemented trivially using\n-// lexicographical_compare_3way.\n-// We do a little more work to avoid dealing with rope iterators for\n-// flat strings.\n-template <class _CharT, class _Alloc>\n-int\n-rope<_CharT,_Alloc>::_S_compare (const _RopeRep* __left, \n-                                 const _RopeRep* __right)\n-{\n-    size_t __left_len;\n-    size_t __right_len;\n-\n-    if (0 == __right) return 0 != __left;\n-    if (0 == __left) return -1;\n-    __left_len = __left->_M_size;\n-    __right_len = __right->_M_size;\n-    if (_RopeRep::_S_leaf == __left->_M_tag) {\n-\t_RopeLeaf* __l = (_RopeLeaf*) __left;\n-\tif (_RopeRep::_S_leaf == __right->_M_tag) {\n-\t    _RopeLeaf* __r = (_RopeLeaf*) __right;\n-\t    return lexicographical_compare_3way(\n-\t\t\t__l->_M_data, __l->_M_data + __left_len,\n-\t\t\t__r->_M_data, __r->_M_data + __right_len);\n-\t} else {\n-\t    const_iterator __rstart(__right, 0);\n-\t    const_iterator __rend(__right, __right_len);\n-\t    return lexicographical_compare_3way(\n-\t\t\t__l->_M_data, __l->_M_data + __left_len,\n-\t\t\t__rstart, __rend);\n-\t}\n-    } else {\n-\tconst_iterator __lstart(__left, 0);\n-\tconst_iterator __lend(__left, __left_len);\n-\tif (_RopeRep::_S_leaf == __right->_M_tag) {\n-\t    _RopeLeaf* __r = (_RopeLeaf*) __right;\n-\t    return lexicographical_compare_3way(\n-\t\t\t\t   __lstart, __lend,\n-\t\t\t\t   __r->_M_data, __r->_M_data + __right_len);\n-\t} else {\n-\t    const_iterator __rstart(__right, 0);\n-\t    const_iterator __rend(__right, __right_len);\n-\t    return lexicographical_compare_3way(\n-\t\t\t\t   __lstart, __lend,\n-\t\t\t\t   __rstart, __rend);\n-\t}\n-    }\n-}\n-\n-// Assignment to reference proxies.\n-template <class _CharT, class _Alloc>\n-_Rope_char_ref_proxy<_CharT, _Alloc>&\n-_Rope_char_ref_proxy<_CharT, _Alloc>::operator= (_CharT __c) {\n-    _RopeRep* __old = _M_root->_M_tree_ptr;\n-#   ifndef __GC\n-\t// First check for the case in which everything is uniquely\n-\t// referenced.  In that case we can do this destructively.\n-\t_CharT* __ptr = _My_rope::_S_fetch_ptr(__old, _M_pos);\n-\tif (0 != __ptr) {\n-\t    *__ptr = __c;\n-\t    return *this;\n-\t}\n-#   endif\n-    _Self_destruct_ptr __left(\n-      _My_rope::_S_substring(__old, 0, _M_pos));\n-    _Self_destruct_ptr __right(\n-      _My_rope::_S_substring(__old, _M_pos+1, __old->_M_size));\n-    _Self_destruct_ptr __result_left(\n-      _My_rope::_S_destr_concat_char_iter(__left, &__c, 1));\n-\n-#   ifndef __GC\n-      __stl_assert(__left == __result_left || 1 == __result_left->_M_refcount);\n-#   endif\n-    _RopeRep* __result =\n-\t\t_My_rope::_S_concat(__result_left, __right);\n-#   ifndef __GC\n-      __stl_assert(1 <= __result->_M_refcount);\n-      _RopeRep::_S_unref(__old);\n-#   endif\n-    _M_root->_M_tree_ptr = __result;\n-    return *this;\n-}\n-\n-template <class _CharT, class _Alloc>\n-inline _Rope_char_ref_proxy<_CharT, _Alloc>::operator _CharT () const\n-{\n-    if (_M_current_valid) {\n-\treturn _M_current;\n-    } else {\n-        return _My_rope::_S_fetch(_M_root->_M_tree_ptr, _M_pos);\n-    }\n-}\n-template <class _CharT, class _Alloc>\n-_Rope_char_ptr_proxy<_CharT, _Alloc>\n-_Rope_char_ref_proxy<_CharT, _Alloc>::operator& () const {\n-    return _Rope_char_ptr_proxy<_CharT, _Alloc>(*this);\n-}\n-\n-template <class _CharT, class _Alloc>\n-rope<_CharT, _Alloc>::rope(size_t __n, _CharT __c,\n-\t\t\t   const allocator_type& __a)\n-: _Base(__a)\n-{\n-    rope<_CharT,_Alloc> __result;\n-    const size_t __exponentiate_threshold = 32;\n-    size_t __exponent;\n-    size_t __rest;\n-    _CharT* __rest_buffer;\n-    _RopeRep* __remainder;\n-    rope<_CharT,_Alloc> __remainder_rope;\n-\n-    if (0 == __n)\n-      return;\n-    \n-    __exponent = __n / __exponentiate_threshold;\n-    __rest = __n % __exponentiate_threshold;\n-    if (0 == __rest) {\n-\t__remainder = 0;\n-    } else {\n-\t__rest_buffer = _Data_allocate(_S_rounded_up_size(__rest));\n-\tuninitialized_fill_n(__rest_buffer, __rest, __c);\n-\t_S_cond_store_eos(__rest_buffer[__rest]);\n-\t__STL_TRY {\n-\t    __remainder = _S_new_RopeLeaf(__rest_buffer, __rest, __a);\n-        }\n-\t__STL_UNWIND(_RopeRep::__STL_FREE_STRING(__rest_buffer, __rest, __a))\n-    }\n-    __remainder_rope._M_tree_ptr = __remainder;\n-    if (__exponent != 0) {\n-\t_CharT* __base_buffer =\n-\t  _Data_allocate(_S_rounded_up_size(__exponentiate_threshold));\n-\t_RopeLeaf* __base_leaf;\n-\trope __base_rope;\n-\tuninitialized_fill_n(__base_buffer, __exponentiate_threshold, __c);\n-\t_S_cond_store_eos(__base_buffer[__exponentiate_threshold]);\n-\t__STL_TRY {\n-          __base_leaf = _S_new_RopeLeaf(__base_buffer,\n-                                        __exponentiate_threshold, __a);\n-        }\n-\t__STL_UNWIND(_RopeRep::__STL_FREE_STRING(__base_buffer, \n-\t                                         __exponentiate_threshold, __a))\n-\t__base_rope._M_tree_ptr = __base_leaf;\n- \tif (1 == __exponent) {\n-\t  __result = __base_rope;\n-#         ifndef __GC\n-\t    __stl_assert(2 == __result._M_tree_ptr->_M_refcount);\n-\t\t// One each for base_rope and __result\n-#         endif\n-\t} else {\n-\t  // XXX what is power()?\n-\t  __result = power(__base_rope, __exponent, _Concat_fn());\n-\t}\n-\tif (0 != __remainder) {\n-\t  __result += __remainder_rope;\n-\t}\n-    } else {\n-\t__result = __remainder_rope;\n-    }\n-    _M_tree_ptr = __result._M_tree_ptr;\n-    _M_tree_ptr->_M_ref_nonnil();\n-}\n-\n-template<class _CharT, class _Alloc>\n-  _CharT rope<_CharT,_Alloc>::_S_empty_c_str[1];\n-\n-# ifdef __STL_PTHREADS\n-    template<class _CharT, class _Alloc>\n-    pthread_mutex_t \n-    rope<_CharT,_Alloc>::_S_swap_lock = PTHREAD_MUTEX_INITIALIZER;\n-# endif\n-\n-template<class _CharT, class _Alloc>\n-const _CharT* rope<_CharT,_Alloc>::c_str() const {\n-    if (0 == _M_tree_ptr) {\n-        _S_empty_c_str[0] = _S_eos((_CharT*)0);  // Possibly redundant,\n-\t\t\t\t\t     // but probably fast.\n-        return _S_empty_c_str;\n-    }\n-    __GC_CONST _CharT* __old_c_string = _M_tree_ptr->_M_c_string;\n-    if (0 != __old_c_string) return(__old_c_string);\n-    size_t __s = size();\n-    _CharT* __result = _Data_allocate(__s + 1);\n-    _S_flatten(_M_tree_ptr, __result);\n-    __result[__s] = _S_eos((_CharT*)0);\n-#   ifdef __GC\n-\t_M_tree_ptr->_M_c_string = __result;\n-#   else\n-      if ((__old_c_string = \n-             _S_atomic_swap(&(_M_tree_ptr->_M_c_string), __result)) != 0) {\n-\t// It must have been added in the interim.  Hence it had to have been\n-\t// separately allocated.  Deallocate the old copy, since we just\n-\t// replaced it.\n-\tdestroy(__old_c_string, __old_c_string + __s + 1);\n-\t_Data_deallocate(__old_c_string, __s + 1);\n-      }\n-#   endif\n-    return(__result);\n-}\n-\n-template<class _CharT, class _Alloc>\n-const _CharT* rope<_CharT,_Alloc>::replace_with_c_str() {\n-    if (0 == _M_tree_ptr) {\n-        _S_empty_c_str[0] = _S_eos((_CharT*)0);\n-        return _S_empty_c_str;\n-    }\n-    __GC_CONST _CharT* __old_c_string = _M_tree_ptr->_M_c_string;\n-    if (_RopeRep::_S_leaf == _M_tree_ptr->_M_tag && 0 != __old_c_string) {\n-\treturn(__old_c_string);\n-    }\n-    size_t __s = size();\n-    _CharT* __result = _Data_allocate(_S_rounded_up_size(__s));\n-    _S_flatten(_M_tree_ptr, __result);\n-    __result[__s] = _S_eos((_CharT*)0);\n-    _M_tree_ptr->_M_unref_nonnil();\n-    _M_tree_ptr = _S_new_RopeLeaf(__result, __s, get_allocator());\n-    return(__result);\n-}\n-\n-// Algorithm specializations.  More should be added.\n-\n-#ifndef _MSC_VER\n-// I couldn't get this to work with VC++\n-template<class _CharT,class _Alloc>\n-void\n-_Rope_rotate(_Rope_iterator<_CharT,_Alloc> __first,\n-              _Rope_iterator<_CharT,_Alloc> __middle,\n-              _Rope_iterator<_CharT,_Alloc> __last)\n-{\n-    __stl_assert(__first.container() == __middle.container()\n-                 && __middle.container() == __last.container());\n-    rope<_CharT,_Alloc>& __r(__first.container());\n-    rope<_CharT,_Alloc> __prefix = __r.substr(0, __first.index());\n-    rope<_CharT,_Alloc> __suffix = \n-      __r.substr(__last.index(), __r.size() - __last.index());\n-    rope<_CharT,_Alloc> __part1 = \n-      __r.substr(__middle.index(), __last.index() - __middle.index());\n-    rope<_CharT,_Alloc> __part2 = \n-      __r.substr(__first.index(), __middle.index() - __first.index());\n-    __r = __prefix;\n-    __r += __part1;\n-    __r += __part2;\n-    __r += __suffix;\n-}\n-\n-#if !defined(__GNUC__)\n-// Appears to confuse g++\n-inline void rotate(_Rope_iterator<char,__STL_DEFAULT_ALLOCATOR(char)> __first,\n-                   _Rope_iterator<char,__STL_DEFAULT_ALLOCATOR(char)> __middle,\n-                   _Rope_iterator<char,__STL_DEFAULT_ALLOCATOR(char)> __last) {\n-    _Rope_rotate(__first, __middle, __last);\n-}\n-#endif\n-\n-# if 0\n-// Probably not useful for several reasons:\n-// - for SGIs 7.1 compiler and probably some others,\n-//   this forces lots of rope<wchar_t, ...> instantiations, creating a\n-//   code bloat and compile time problem.  (Fixed in 7.2.)\n-// - wchar_t is 4 bytes wide on most UNIX platforms, making it unattractive\n-//   for unicode strings.  Unsigned short may be a better character\n-//   type.\n-inline void rotate(\n-\t\t_Rope_iterator<wchar_t,__STL_DEFAULT_ALLOCATOR(char)> __first,\n-                _Rope_iterator<wchar_t,__STL_DEFAULT_ALLOCATOR(char)> __middle,\n-                _Rope_iterator<wchar_t,__STL_DEFAULT_ALLOCATOR(char)> __last) {\n-    _Rope_rotate(__first, __middle, __last);\n-}\n-# endif\n-#endif /* _MSC_VER */\n-\n-#if defined(__sgi) && !defined(__GNUC__) && (_MIPS_SIM != _MIPS_SIM_ABI32)\n-#pragma reset woff 1174\n-#endif\n-\n-__STL_END_NAMESPACE\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "c836c4596d28f0cedb1215d29025675e2c5e2255", "filename": "libstdc++/stl/set", "status": "removed", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fset", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fset", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fset?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,40 +0,0 @@\n-/*\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n- * Copyright (c) 1996,1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_SET\n-#define __SGI_STL_SET\n-\n-#ifndef __SGI_STL_INTERNAL_TREE_H\n-#include <stl_tree.h>\n-#endif\n-#include <stl_set.h>\n-#include <stl_multiset.h>\n-\n-#endif /* __SGI_STL_SET */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "9004d2e04770baab18243b9bff924b27102f9c5d", "filename": "libstdc++/stl/set.h", "status": "removed", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fset.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,41 +0,0 @@\n-/*\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n- * Copyright (c) 1996,1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_SET_H\n-#define __SGI_STL_SET_H\n-\n-#include <tree.h>\n-#include <stl_set.h>\n-\n-#ifdef __STL_USE_NAMESPACES\n-using __STD::set;\n-#endif /* __STL_USE_NAMESPACES */\n-\n-#endif /* __SGI_STL_SET_H */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "c3ec74204c55d073b6fd48b536dd6325d1f63347", "filename": "libstdc++/stl/slist", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fslist", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fslist", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fslist?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,28 +0,0 @@\n-/*\n- * Copyright (c) 1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- */\n-\n-#ifndef __SGI_STL_SLIST\n-#define __SGI_STL_SLIST\n-\n-#include <stl_algobase.h>\n-#include <stl_alloc.h>\n-#include <stl_construct.h>\n-#include <stl_uninitialized.h>\n-#include <stl_slist.h>\n-\n-#endif /* __SGI_STL_SLIST */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "d2377b0cf5aef6b8e9446349316f3fdd7f346cca", "filename": "libstdc++/stl/slist.h", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fslist.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fslist.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fslist.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,30 +0,0 @@\n-/*\n- * Copyright (c) 1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- */\n-\n-#ifndef __SGI_STL_SLIST_H\n-#define __SGI_STL_SLIST_H\n-\n-#include <algobase.h>\n-#include <alloc.h>\n-#include <stl_slist.h>\n-\n-#ifdef __STL_USE_NAMESPACES\n-using __STD::slist;\n-#endif /* __STL_USE_NAMESPACES */\n-\n-#endif /* __SGI_STL_SLIST_H */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "36461d95b8c46373cd1f59f3f2c9160d89e985d2", "filename": "libstdc++/stl/stack", "status": "removed", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstack", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstack", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstack?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,41 +0,0 @@\n-/*\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n- * Copyright (c) 1996,1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_STACK\n-#define __SGI_STL_STACK\n-\n-#include <stl_algobase.h>\n-#include <stl_alloc.h>\n-#include <stl_construct.h>\n-#include <stl_uninitialized.h>\n-#include <stl_deque.h>\n-#include <stl_stack.h>\n-\n-#endif /* __SGI_STL_STACK */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "89beca82f1288e35fa4b9c1149f837c76d85ce38", "filename": "libstdc++/stl/stack.h", "status": "removed", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstack.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstack.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstack.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120", "patch": "@@ -1,46 +0,0 @@\n-/*\n- *\n- * Copyright (c) 1994\n- * Hewlett-Packard Company\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Hewlett-Packard Company makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- *\n- *\n- * Copyright (c) 1996,1997\n- * Silicon Graphics Computer Systems, Inc.\n- *\n- * Permission to use, copy, modify, distribute and sell this software\n- * and its documentation for any purpose is hereby granted without fee,\n- * provided that the above copyright notice appear in all copies and\n- * that both that copyright notice and this permission notice appear\n- * in supporting documentation.  Silicon Graphics makes no\n- * representations about the suitability of this software for any\n- * purpose.  It is provided \"as is\" without express or implied warranty.\n- */\n-\n-#ifndef __SGI_STL_STACK_H\n-#define __SGI_STL_STACK_H\n-\n-#include <vector.h>\n-#include <deque.h>\n-#include <heap.h>\n-#include <stl_stack.h>\n-#include <stl_queue.h>\n-\n-#ifdef __STL_USE_NAMESPACES\n-using __STD::stack;\n-using __STD::queue;\n-using __STD::priority_queue;\n-#endif /* __STL_USE_NAMESPACES */\n-\n-#endif /* __SGI_STL_STACK_H */\n-\n-// Local Variables:\n-// mode:C++\n-// End:"}, {"sha": "e9beaee15f11a5d01f85bdef3032a01265dcb7f1", "filename": "libstdc++/stl/stl_algo.h", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_algo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_algo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_algo.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "15e535f483d26385b1f6e133f100a12900989791", "filename": "libstdc++/stl/stl_algobase.h", "status": "removed", "additions": 0, "deletions": 526, "changes": 526, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_algobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_algobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_algobase.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "208309a389b56de98736efc9136021880059e331", "filename": "libstdc++/stl/stl_alloc.h", "status": "removed", "additions": 0, "deletions": 1057, "changes": 1057, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_alloc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_alloc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_alloc.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "0d0cdb6c828fca7badb5955af188949a280177f6", "filename": "libstdc++/stl/stl_bvector.h", "status": "removed", "additions": 0, "deletions": 838, "changes": 838, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_bvector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_bvector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_bvector.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "bffce401def8fe45a4719cedbdb3c7fdcf68bc72", "filename": "libstdc++/stl/stl_config.h", "status": "removed", "additions": 0, "deletions": 359, "changes": 359, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_config.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_config.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_config.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "761784d57da0df2339ba5bd8b672e450ce1a2108", "filename": "libstdc++/stl/stl_construct.h", "status": "removed", "additions": 0, "deletions": 90, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_construct.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_construct.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_construct.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "af240af2efa5ea648c8156f6737454dd2f660776", "filename": "libstdc++/stl/stl_deque.h", "status": "removed", "additions": 0, "deletions": 1698, "changes": 1698, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_deque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_deque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_deque.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "a5a8486576e9aedfd09a452b6084b8e4de2c3619", "filename": "libstdc++/stl/stl_function.h", "status": "removed", "additions": 0, "deletions": 700, "changes": 700, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_function.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_function.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_function.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "44ab9bb567937a6cfe2b2193bc0b9ae25956db38", "filename": "libstdc++/stl/stl_hash_fun.h", "status": "removed", "additions": 0, "deletions": 93, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_hash_fun.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_hash_fun.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_hash_fun.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "bf16f60ecad73d610b19a3de4aa833522123ee67", "filename": "libstdc++/stl/stl_hash_map.h", "status": "removed", "additions": 0, "deletions": 416, "changes": 416, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_hash_map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_hash_map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_hash_map.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "b623a642cfc07d17cce4566c5a7b02b0c1ad8e61", "filename": "libstdc++/stl/stl_hash_set.h", "status": "removed", "additions": 0, "deletions": 401, "changes": 401, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_hash_set.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_hash_set.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_hash_set.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "78b36c1d5a04ca89a94afa7f7f418b312efe8428", "filename": "libstdc++/stl/stl_hashtable.h", "status": "removed", "additions": 0, "deletions": 1039, "changes": 1039, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_hashtable.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_hashtable.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_hashtable.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "62f142ec9706da68360f05e0aef412957ffce7a6", "filename": "libstdc++/stl/stl_heap.h", "status": "removed", "additions": 0, "deletions": 281, "changes": 281, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_heap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_heap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_heap.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "517bc5feda16e70f49541ab4d53b26634e5150ae", "filename": "libstdc++/stl/stl_iterator.h", "status": "removed", "additions": 0, "deletions": 913, "changes": 913, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_iterator.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "5d95d641e52d16d206e372369f115eb55a3458fc", "filename": "libstdc++/stl/stl_list.h", "status": "removed", "additions": 0, "deletions": 840, "changes": 840, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_list.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "a702e8023efa78237b323cc3d13ff55e60506d1f", "filename": "libstdc++/stl/stl_map.h", "status": "removed", "additions": 0, "deletions": 242, "changes": 242, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_map.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "b7d3b87e52d1da81aa99be488bc0e76efcfffc3b", "filename": "libstdc++/stl/stl_multimap.h", "status": "removed", "additions": 0, "deletions": 232, "changes": 232, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_multimap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_multimap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_multimap.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "7378e43f8b360668aa9ebc7229cd328588e81498", "filename": "libstdc++/stl/stl_multiset.h", "status": "removed", "additions": 0, "deletions": 224, "changes": 224, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_multiset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_multiset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_multiset.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "392515a3d87d7311aa4c58c66d4f9d081031d6f2", "filename": "libstdc++/stl/stl_numeric.h", "status": "removed", "additions": 0, "deletions": 239, "changes": 239, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_numeric.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_numeric.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_numeric.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "3aa290b59edb4f20ccd3c42ff12189c267aa6cd2", "filename": "libstdc++/stl/stl_pair.h", "status": "removed", "additions": 0, "deletions": 77, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_pair.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_pair.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_pair.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "c1e2b6984403619f3d757801d55e8b18ea336bb8", "filename": "libstdc++/stl/stl_queue.h", "status": "removed", "additions": 0, "deletions": 202, "changes": 202, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_queue.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_queue.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_queue.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "6f3951cb8af83b43443c3804484e6755415c8c76", "filename": "libstdc++/stl/stl_raw_storage_iter.h", "status": "removed", "additions": 0, "deletions": 81, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_raw_storage_iter.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_raw_storage_iter.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_raw_storage_iter.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "16cad1b84e20feed343226f3c00e5b028ba462d1", "filename": "libstdc++/stl/stl_relops.h", "status": "removed", "additions": 0, "deletions": 62, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_relops.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_relops.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_relops.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "0d8766a43bcc2283428434d6b0f5d70aa49c5074", "filename": "libstdc++/stl/stl_rope.h", "status": "removed", "additions": 0, "deletions": 2540, "changes": 2540, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_rope.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_rope.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_rope.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "003069cb074bfd508049e69706f9e9cf9dbf9f4b", "filename": "libstdc++/stl/stl_set.h", "status": "removed", "additions": 0, "deletions": 216, "changes": 216, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_set.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_set.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_set.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "6da234d92c2cadf5ac2c7732b5a3d7fb3527aa5f", "filename": "libstdc++/stl/stl_slist.h", "status": "removed", "additions": 0, "deletions": 945, "changes": 945, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_slist.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_slist.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_slist.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "2a04b21e5070d3f1a9166b660eb25465cd821eb4", "filename": "libstdc++/stl/stl_stack.h", "status": "removed", "additions": 0, "deletions": 111, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_stack.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_stack.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_stack.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "e1b2eadafcbf930d9485c1943f00d77304fb30ef", "filename": "libstdc++/stl/stl_tempbuf.h", "status": "removed", "additions": 0, "deletions": 156, "changes": 156, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_tempbuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_tempbuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_tempbuf.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "c82943f568abe90bbbf7e2d1ebf5af26ccaa4e96", "filename": "libstdc++/stl/stl_tree.h", "status": "removed", "additions": 0, "deletions": 1333, "changes": 1333, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_tree.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "3146c82a71c98801d21ecff36a528d1d8f262450", "filename": "libstdc++/stl/stl_uninitialized.h", "status": "removed", "additions": 0, "deletions": 279, "changes": 279, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_uninitialized.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_uninitialized.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_uninitialized.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "d1149e9af66d4af01fc1043fad4165c964d3e6f8", "filename": "libstdc++/stl/stl_vector.h", "status": "removed", "additions": 0, "deletions": 823, "changes": 823, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_vector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fstl_vector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fstl_vector.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "aa4f289c582bb879f3ac0febb666350f7fc2c20c", "filename": "libstdc++/stl/tempbuf.h", "status": "removed", "additions": 0, "deletions": 61, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Ftempbuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Ftempbuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Ftempbuf.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "77c57cbbba1f4f16cb8c74a32608e9a8b38268ad", "filename": "libstdc++/stl/tree.h", "status": "removed", "additions": 0, "deletions": 46, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Ftree.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "b6a7dfc6de95f188e15a84d603f086bc1cca6024", "filename": "libstdc++/stl/type_traits.h", "status": "removed", "additions": 0, "deletions": 373, "changes": 373, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Ftype_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Ftype_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Ftype_traits.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "df8c224388dba3599c92e6c58cfde7e308bb25d3", "filename": "libstdc++/stl/utility", "status": "removed", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Futility", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Futility", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Futility?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "4bcdebcc1861002889e95b6a77b28b36660ba310", "filename": "libstdc++/stl/vector", "status": "removed", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fvector", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fvector", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fvector?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "231a227b7e3a04647a05f0a365150d144216a571", "filename": "libstdc++/stl/vector.h", "status": "removed", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fvector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstl%2Fvector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstl%2Fvector.h?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "2a221fbaee9866fcfda74670c7e11269129ffd97", "filename": "libstdc++/stlinst.cc", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstlinst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstlinst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstlinst.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "fa6f1abaa70c1dcb7f22f14250d9ae5a8a554c02", "filename": "libstdc++/string", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstring", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstring", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstring?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "ee360e0b7e43ed13235370bfa77d405defe90648", "filename": "libstdc++/strstream", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstrstream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fstrstream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstrstream?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "87ce0fc6c193de97f8d6e68b7b8a75c50c7c7932", "filename": "libstdc++/tests/ChangeLog", "status": "removed", "additions": 0, "deletions": 112, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Ftests%2FChangeLog?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "057482f185ebd9872fcb10ab652735a5d51968c0", "filename": "libstdc++/tests/Makefile.in", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Ftests%2FMakefile.in?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "06c56192beb5d93bab246d8ba1f241e0e435a707", "filename": "libstdc++/tests/configure.in", "status": "removed", "additions": 0, "deletions": 65, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Ftests%2Fconfigure.in?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "5311f0d8b7a1a22385763dde1558f52e4768d3cc", "filename": "libstdc++/tests/tcomplex.cc", "status": "removed", "additions": 0, "deletions": 151, "changes": 151, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2Ftcomplex.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2Ftcomplex.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Ftests%2Ftcomplex.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "5bef15cd37692b6d22cee88ca3362d6cd2f3180f", "filename": "libstdc++/tests/tcomplex.exp", "status": "removed", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2Ftcomplex.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2Ftcomplex.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Ftests%2Ftcomplex.exp?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "c4e1d84660f279e8f69994e4520566b1cb467966", "filename": "libstdc++/tests/tcomplex.inp", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2Ftcomplex.inp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2Ftcomplex.inp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Ftests%2Ftcomplex.inp?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "a37c999d0b55ae030037d157e326a3e067f8f571", "filename": "libstdc++/tests/tlist.cc", "status": "removed", "additions": 0, "deletions": 151, "changes": 151, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2Ftlist.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2Ftlist.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Ftests%2Ftlist.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "65f7806826f604eb44d060986297453eb52ad7e3", "filename": "libstdc++/tests/tlist.exp", "status": "removed", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2Ftlist.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2Ftlist.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Ftests%2Ftlist.exp?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "900e66f506bd5dd5c9803ac1a89f21611dd0a559", "filename": "libstdc++/tests/tmap.cc", "status": "removed", "additions": 0, "deletions": 59, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2Ftmap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2Ftmap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Ftests%2Ftmap.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "b7b5df249fb0096b8eda33260bca9cac467b8b5d", "filename": "libstdc++/tests/tmap.exp", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2Ftmap.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2Ftmap.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Ftests%2Ftmap.exp?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "833d3d964604fe112e20988051c4ea4a448cb6ca", "filename": "libstdc++/tests/tstring.cc", "status": "removed", "additions": 0, "deletions": 249, "changes": 249, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2Ftstring.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2Ftstring.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Ftests%2Ftstring.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "4526279b888a1c65d2ebe84e6e05fd55aade77ae", "filename": "libstdc++/tests/tstring.exp", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2Ftstring.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2Ftstring.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Ftests%2Ftstring.exp?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "b0883f382e1a80609b7b2c7904e701fbe6760b14", "filename": "libstdc++/tests/tstring.inp", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2Ftstring.inp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2Ftstring.inp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Ftests%2Ftstring.inp?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "ef238ef52da524ae3f445dfef7c883998d987fc3", "filename": "libstdc++/tests/tvector.cc", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2Ftvector.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2Ftvector.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Ftests%2Ftvector.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "84a9d1bf3a4dc86497dc694aadd95d321d29958c", "filename": "libstdc++/tests/tvector.exp", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2Ftvector.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftests%2Ftvector.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Ftests%2Ftvector.exp?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "7b1a9f0c3c5f9e69ade7a66e59a6092728b1760b", "filename": "libstdc++/testsuite/ChangeLog", "status": "removed", "additions": 0, "deletions": 74, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Ftestsuite%2FChangeLog?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "7c85678e1fe3851b5d72ac87c9175d27267d6819", "filename": "libstdc++/testsuite/Makefile.in", "status": "removed", "additions": 0, "deletions": 67, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Ftestsuite%2FMakefile.in?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "90967cccc18afeb470c705244f4cb9e44f15eb0d", "filename": "libstdc++/testsuite/config/default.exp", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftestsuite%2Fconfig%2Fdefault.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftestsuite%2Fconfig%2Fdefault.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Ftestsuite%2Fconfig%2Fdefault.exp?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "ad5f232b08532e47f4295a1dbd7b2b1b79aead91", "filename": "libstdc++/testsuite/configure.in", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftestsuite%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftestsuite%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Ftestsuite%2Fconfigure.in?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "3333ddad6c781966709acce20a577173eb3d87c5", "filename": "libstdc++/testsuite/lib/libstdc++.exp", "status": "removed", "additions": 0, "deletions": 179, "changes": 179, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "7368cfb282e8629b8a5b9221478bdc2cd0ca20ff", "filename": "libstdc++/testsuite/libstdc++.tests/test.exp", "status": "removed", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftestsuite%2Flibstdc%2B%2B.tests%2Ftest.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftestsuite%2Flibstdc%2B%2B.tests%2Ftest.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Ftestsuite%2Flibstdc%2B%2B.tests%2Ftest.exp?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "ffad6e72994bad5649b8bbc8d50ddf852f03ec46", "filename": "libstdc++/tinfo.cc", "status": "removed", "additions": 0, "deletions": 1210, "changes": 1210, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftinfo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftinfo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Ftinfo.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "6be77bae26833b86900cd14744798b12bd4728f9", "filename": "libstdc++/tinfo.hP", "status": "removed", "additions": 0, "deletions": 223, "changes": 223, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftinfo.hP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftinfo.hP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Ftinfo.hP?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "6e1c916f17720b1572adfc2d199333a5e97ecd4b", "filename": "libstdc++/tinfo2.cc", "status": "removed", "additions": 0, "deletions": 452, "changes": 452, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftinfo2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftinfo2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Ftinfo2.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "91f0de2c720c8b7885685bdb2ffc9f34e7c1a55b", "filename": "libstdc++/typeinfo", "status": "removed", "additions": 0, "deletions": 134, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftypeinfo", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Ftypeinfo", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Ftypeinfo?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "a938b6a68639caddb9210478df0197668747c0c9", "filename": "libstdc++/valarray", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fvalarray", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fvalarray", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fvalarray?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "5de4e9299821a9a2a4432afb49e1373e814a7184", "filename": "libstdc++/valarray.cc", "status": "removed", "additions": 0, "deletions": 58, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fvalarray.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fvalarray.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fvalarray.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}, {"sha": "966feb486de49a7f124dd1b9263d6e60e7681454", "filename": "libstdc++/vec.cc", "status": "removed", "additions": 0, "deletions": 279, "changes": 279, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fvec.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4322eb6c0ee5bac01fbca9846438084d33367120/libstdc%2B%2B%2Fvec.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fvec.cc?ref=4322eb6c0ee5bac01fbca9846438084d33367120"}]}