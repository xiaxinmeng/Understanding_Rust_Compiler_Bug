{"sha": "b0b74f371eb96d60047b221711bb98361fde5f58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjBiNzRmMzcxZWI5NmQ2MDA0N2IyMjE3MTFiYjk4MzYxZmRlNWY1OA==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2003-02-07T21:33:05Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2003-02-07T21:33:05Z"}, "message": "JarFile.java (JarFile(String, boolean)): Read manifest when verify is true.\n\n       * java/util/jar/JarFile.java (JarFile(String, boolean)): Read manifest\n       when verify is true.\n       (JarFile(File, boolean)): Likewise.\n       (manifestRead): Set manifestRead field correctly.\n\nFrom-SVN: r62545", "tree": {"sha": "4fc6fb5d08af0c5b9517d44d9a6fd1ad92e7589e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fc6fb5d08af0c5b9517d44d9a6fd1ad92e7589e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0b74f371eb96d60047b221711bb98361fde5f58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0b74f371eb96d60047b221711bb98361fde5f58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0b74f371eb96d60047b221711bb98361fde5f58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0b74f371eb96d60047b221711bb98361fde5f58/comments", "author": null, "committer": null, "parents": [{"sha": "5ccbcd8cf9f1036b918569805e274374e603f4bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ccbcd8cf9f1036b918569805e274374e603f4bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ccbcd8cf9f1036b918569805e274374e603f4bc"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "37240097bd1fab12a823ee872106d593ce001965", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0b74f371eb96d60047b221711bb98361fde5f58/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0b74f371eb96d60047b221711bb98361fde5f58/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=b0b74f371eb96d60047b221711bb98361fde5f58", "patch": "@@ -1,3 +1,10 @@\n+2003-02-07  Mark Wielaard  <mark@klomp.org>\n+\n+\t* java/util/jar/JarFile.java (JarFile(String, boolean)): Read manifest\n+\twhen verify is true.\n+\t(JarFile(File, boolean)): Likewise.\n+\t(manifestRead): Set manifestRead field correctly.\n+\n 2003-02-07  Stephen Crawley  <crawley@dstc.edu.au>\n \n \t* java/math/BigDecimal(valueOf): fix DiagBigDecimal val008, val013"}, {"sha": "394b51af6d0616ed45f16c1f8aeb399322d7ca44", "filename": "libjava/java/util/jar/JarFile.java", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0b74f371eb96d60047b221711bb98361fde5f58/libjava%2Fjava%2Futil%2Fjar%2FJarFile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0b74f371eb96d60047b221711bb98361fde5f58/libjava%2Fjava%2Futil%2Fjar%2FJarFile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fjar%2FJarFile.java?ref=b0b74f371eb96d60047b221711bb98361fde5f58", "patch": "@@ -1,5 +1,5 @@\n /* JarFile.java - Representation of a jar file\n-   Copyright (C) 2000 Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2003 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -71,10 +71,10 @@ public class JarFile extends ZipFile\n    */\n   private Manifest manifest;\n \n-  /** Wether to verify the manifest and all entries. */\n+  /** Whether to verify the manifest and all entries. */\n   private boolean verify;\n \n-  /** Wether the has already been loaded. */\n+  /** Whether the has already been loaded. */\n   private boolean manifestRead = false;\n \n   // Constructors\n@@ -109,6 +109,11 @@ public JarFile(String fileName, boolean verify) throws\n     FileNotFoundException, IOException\n   {\n     super(fileName);\n+    if (verify)\n+      {\n+\tmanifest = readManifest();\n+\tverify();\n+      }\n   }\n \n   /**\n@@ -141,6 +146,11 @@ public JarFile(File file, boolean verify) throws FileNotFoundException,\n     IOException\n   {\n     super(file);\n+    if (verify)\n+      {\n+\tmanifest = readManifest();\n+\tverify();\n+      }\n   }\n \n   /**\n@@ -165,6 +175,11 @@ public JarFile(File file, boolean verify, int mode) throws\n     FileNotFoundException, IOException, IllegalArgumentException\n   {\n     super(file, mode);\n+    if (verify)\n+      {\n+\tmanifest = readManifest();\n+\tverify();\n+      }\n   }\n \n   // Methods\n@@ -196,15 +211,18 @@ private Manifest readManifest()\n \tif (manEntry != null)\n \t  {\n \t    InputStream in = super.getInputStream(manEntry);\n+\t    manifestRead = true;\n \t    return new Manifest(in);\n \t  }\n \telse\n \t  {\n+\t    manifestRead = true;\n \t    return null;\n \t  }\n       }\n     catch (IOException ioe)\n       {\n+\tmanifestRead = true;\n \treturn null;\n       }\n   }"}]}