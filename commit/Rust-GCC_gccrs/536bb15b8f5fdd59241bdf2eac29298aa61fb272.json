{"sha": "536bb15b8f5fdd59241bdf2eac29298aa61fb272", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM2YmIxNWI4ZjVmZGQ1OTI0MWJkZjJlYWMyOTI5OGFhNjFmYjI3Mg==", "commit": {"author": {"name": "Charles Hannum", "email": "mycroft@gnu.org", "date": "1992-06-26T12:50:34Z"}, "committer": {"name": "Charles Hannum", "email": "mycroft@gnu.org", "date": "1992-06-26T12:50:34Z"}, "message": "entered into RCS\n\nFrom-SVN: r1299", "tree": {"sha": "541b0501e6efe43e71bc33c73ff0ed3b688359d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/541b0501e6efe43e71bc33c73ff0ed3b688359d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/536bb15b8f5fdd59241bdf2eac29298aa61fb272", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/536bb15b8f5fdd59241bdf2eac29298aa61fb272", "html_url": "https://github.com/Rust-GCC/gccrs/commit/536bb15b8f5fdd59241bdf2eac29298aa61fb272", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/536bb15b8f5fdd59241bdf2eac29298aa61fb272/comments", "author": null, "committer": null, "parents": [{"sha": "f32fd77815fe440a8f9a7a2760e74ea9c7fe5e8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f32fd77815fe440a8f9a7a2760e74ea9c7fe5e8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f32fd77815fe440a8f9a7a2760e74ea9c7fe5e8c"}], "stats": {"total": 34, "additions": 24, "deletions": 10}, "files": [{"sha": "8861436a5ee4471f9e7ff4b530fe457548f9d5e3", "filename": "gcc/ginclude/va-m88k.h", "status": "modified", "additions": 24, "deletions": 10, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536bb15b8f5fdd59241bdf2eac29298aa61fb272/gcc%2Fginclude%2Fva-m88k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536bb15b8f5fdd59241bdf2eac29298aa61fb272/gcc%2Fginclude%2Fva-m88k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fva-m88k.h?ref=536bb15b8f5fdd59241bdf2eac29298aa61fb272", "patch": "@@ -1,25 +1,26 @@\n-/* This file contains changes made by Data General, December 1989.  */\n /* GNU C varargs support for the Motorola 88100  */\n \n-#ifndef __INT_VARARGS_H\t\t/* Prevent multiple inclusions of this file */\n-#define __INT_VARARGS_H\t\t/* and _int_varargs.h under DG/UX */\n+/* Define __gnuc_va_list.  */\n+\n+#ifndef __GNUC_VA_LIST\n+#define __GNUC_VA_LIST\n \n typedef struct\n {\n   int  __va_arg;\t\t/* argument number */\n   int *__va_stk;\t\t/* start of args passed on stack */\n   int *__va_reg;\t\t/* start of args passed in regs */\n-} va_list;\n+} __gnuc_va_list;\n+#endif /* not __GNUC_VA_LIST */\n \n-#else\n-#undef __va_size\n-#undef __va_reg_p\n-#endif /* __INT_VARARGS_H */\n+/* If this is for internal libc use, don't define anything but\n+   __gnuc_va_list.  */\n+#if defined (_STDARG_H) || defined (_VARARGS_H)\n \n #ifdef _STDARG_H /* stdarg.h support */\n \n #if __GNUC__ > 1 /* GCC 2.0 and beyond */\n-#define va_start(AP,LASTARG) ((AP) = *(va_list *)__builtin_saveregs())\n+#define va_start(AP,LASTARG) ((AP) = *(__gnuc_va_list *)__builtin_saveregs())\n #else\n #define va_start(AP,LASTARG) \\\n   ( (AP).__va_reg = (int *) __builtin_saveregs2(0), \\\n@@ -30,7 +31,7 @@ typedef struct\n #else /* varargs.h support */\n \n #if __GNUC__ > 1 /* GCC 2.0 and beyond */\n-#define va_start(AP) ((AP) = *(va_list *)__builtin_saveregs())\n+#define va_start(AP) ((AP) = *(__gnuc_va_list *)__builtin_saveregs())\n #else\n #define va_start(AP) \\\n   ( (AP).__va_reg = (int *) __builtin_saveregs2(1), \\\n@@ -42,6 +43,17 @@ typedef struct\n \n #endif /* _STDARG_H */\n \n+/* Avoid trouble between this file and _int_varargs.h under DG/UX.  This file\n+   can be included by <stdio.h> and others and provides definitions of\n+   __va_size and __va_reg_p and  a va_list typedef.  Avoid defining va_list\n+   again with _VA_LIST.  */\n+#ifdef __INT_VARARGS_H\n+#undef __va_size\n+#undef __va_reg_p\n+#define __gnuc_va_list va_list\n+#define _VA_LIST\n+#endif\n+\n #define __va_reg_p(TYPE) \\\n   (__builtin_classify_type(*(TYPE *)0) < 12 \\\n    ? sizeof(TYPE) <= 8 : sizeof(TYPE) == 4 && __alignof__(TYPE) == 4)\n@@ -57,3 +69,5 @@ typedef struct\n \t\t+ ((AP).__va_arg - __va_size(TYPE)))))\n \n #define va_end(AP)\n+\n+#endif /* defined (_STDARG_H) || defined (_VARARGS_H) */"}]}