{"sha": "a5edb32e6bf15519852b9cc321aa397ed238efef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVlZGIzMmU2YmYxNTUxOTg1MmI5Y2MzMjFhYTM5N2VkMjM4ZWZlZg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2016-04-09T19:09:02Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2016-04-09T19:09:02Z"}, "message": "re PR fortran/68566 (ICE on using unusable array in reshape (double free or corruption))\n\n2016-04-09  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/68566\n\t* array.c (match_array_element_spec): Add check for non-integer.\n\t* simplify.c (gfc_simplify_reshape): If source shape is NULL return.\n\n\tPR fortran/68566\n\t* gfortran.dg/pr36192.f90: Update test.\n\t* gfortran.dg/pr36192_1.f90: Update test.\n\t* gfortran.dg/real_dimension_1.f: Update test.\n\t* gfortran.dg/parameter_array_init_7.f90: New test.\n\nFrom-SVN: r234864", "tree": {"sha": "1ced5448c700f915d81da68df88da1b2b68dd7ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ced5448c700f915d81da68df88da1b2b68dd7ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5edb32e6bf15519852b9cc321aa397ed238efef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5edb32e6bf15519852b9cc321aa397ed238efef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5edb32e6bf15519852b9cc321aa397ed238efef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5edb32e6bf15519852b9cc321aa397ed238efef/comments", "author": null, "committer": null, "parents": [{"sha": "c532c87139a9410212ab0eff59a4980d28646bfa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c532c87139a9410212ab0eff59a4980d28646bfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c532c87139a9410212ab0eff59a4980d28646bfa"}], "stats": {"total": 66, "additions": 50, "deletions": 16}, "files": [{"sha": "961167b01292cd857e7f4a6f52ad122826fe69b2", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5edb32e6bf15519852b9cc321aa397ed238efef/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5edb32e6bf15519852b9cc321aa397ed238efef/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a5edb32e6bf15519852b9cc321aa397ed238efef", "patch": "@@ -1,3 +1,9 @@\n+2016-04-09  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/68566\n+\t* array.c (match_array_element_spec): Add check for non-integer.\n+\t* simplify.c (gfc_simplify_reshape): If source shape is NULL return.\n+\n 2016-04-06  Patrick Palka  <ppalka@gcc.gnu.org>\n \n \tPR c/70436"}, {"sha": "1430e80251d66368dabadefec905279710ad0c9e", "filename": "gcc/fortran/array.c", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5edb32e6bf15519852b9cc321aa397ed238efef/gcc%2Ffortran%2Farray.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5edb32e6bf15519852b9cc321aa397ed238efef/gcc%2Ffortran%2Farray.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Farray.c?ref=a5edb32e6bf15519852b9cc321aa397ed238efef", "patch": "@@ -421,10 +421,15 @@ match_array_element_spec (gfc_array_spec *as)\n   if (!gfc_expr_check_typed (*upper, gfc_current_ns, false))\n     return AS_UNKNOWN;\n \n-  if ((*upper)->expr_type == EXPR_FUNCTION && (*upper)->ts.type == BT_UNKNOWN\n-      && (*upper)->symtree && strcmp ((*upper)->symtree->name, \"null\") == 0)\n-    {\n-      gfc_error (\"Expecting a scalar INTEGER expression at %C\");\n+  if (((*upper)->expr_type == EXPR_CONSTANT\n+\t&& (*upper)->ts.type != BT_INTEGER) ||\n+      ((*upper)->expr_type == EXPR_FUNCTION\n+\t&& (*upper)->ts.type == BT_UNKNOWN\n+\t&& (*upper)->symtree\n+\t&& strcmp ((*upper)->symtree->name, \"null\") == 0))\n+    {\n+      gfc_error (\"Expecting a scalar INTEGER expression at %C, found %s\",\n+\t\t gfc_basic_typename ((*upper)->ts.type));\n       return AS_UNKNOWN;\n     }\n \n@@ -448,10 +453,15 @@ match_array_element_spec (gfc_array_spec *as)\n   if (!gfc_expr_check_typed (*upper, gfc_current_ns, false))\n     return AS_UNKNOWN;\n \n-  if ((*upper)->expr_type == EXPR_FUNCTION && (*upper)->ts.type == BT_UNKNOWN\n-      && (*upper)->symtree && strcmp ((*upper)->symtree->name, \"null\") == 0)\n+  if (((*upper)->expr_type == EXPR_CONSTANT\n+\t&& (*upper)->ts.type != BT_INTEGER) ||\n+      ((*upper)->expr_type == EXPR_FUNCTION\n+\t&& (*upper)->ts.type == BT_UNKNOWN\n+\t&& (*upper)->symtree\n+\t&& strcmp ((*upper)->symtree->name, \"null\") == 0))\n     {\n-      gfc_error (\"Expecting a scalar INTEGER expression at %C\");\n+      gfc_error (\"Expecting a scalar INTEGER expression at %C, found %s\",\n+\t\t gfc_basic_typename ((*upper)->ts.type));\n       return AS_UNKNOWN;\n     }\n "}, {"sha": "a63101072f1389ab72d59a32d6dc217a51daa000", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5edb32e6bf15519852b9cc321aa397ed238efef/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5edb32e6bf15519852b9cc321aa397ed238efef/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=a5edb32e6bf15519852b9cc321aa397ed238efef", "patch": "@@ -5163,6 +5163,9 @@ gfc_simplify_reshape (gfc_expr *source, gfc_expr *shape_exp,\n       || !is_constant_array_expr (order_exp))\n     return NULL;\n \n+  if (source->shape == NULL)\n+    return NULL;\n+\n   /* Proceed with simplification, unpacking the array.  */\n \n   mpz_init (index);"}, {"sha": "9784a4b6f054d1e4a194e827a873613e58b53d9e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5edb32e6bf15519852b9cc321aa397ed238efef/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5edb32e6bf15519852b9cc321aa397ed238efef/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a5edb32e6bf15519852b9cc321aa397ed238efef", "patch": "@@ -1,3 +1,11 @@\n+2016-04-09  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/68566\n+\t* gfortran.dg/pr36192.f90: Update test.\n+\t* gfortran.dg/pr36192_1.f90: Update test.\n+\t* gfortran.dg/real_dimension_1.f: Update test.\n+\t* gfortran.dg/parameter_array_init_7.f90: New test.\n+\n 2016-04-09  John David Anglin  <danglin@gcc.gnu.org>\n \n \tPR testsuite/64039"}, {"sha": "890da35da98ccf3fc31b12cfd077d88320c0b1d6", "filename": "gcc/testsuite/gfortran.dg/parameter_array_init_7.f90", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5edb32e6bf15519852b9cc321aa397ed238efef/gcc%2Ftestsuite%2Fgfortran.dg%2Fparameter_array_init_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5edb32e6bf15519852b9cc321aa397ed238efef/gcc%2Ftestsuite%2Fgfortran.dg%2Fparameter_array_init_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fparameter_array_init_7.f90?ref=a5edb32e6bf15519852b9cc321aa397ed238efef", "patch": "@@ -0,0 +1,8 @@\n+! { dg-do compile }\n+! PR68566  ICE on using unusable array in reshape\n+program p\n+   integer, parameter :: n = 2\n+   integer, parameter :: a(:) = 0  !{ dg-error \"automatic or of deferred shape\" }\n+   integer, parameter :: b(n, n) = reshape([a, 1+a], [n, n])\n+end\n+"}, {"sha": "ebf95e35bfecad138eaca38bb9f1a499bf8ae540", "filename": "gcc/testsuite/gfortran.dg/pr36192.f90", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5edb32e6bf15519852b9cc321aa397ed238efef/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr36192.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5edb32e6bf15519852b9cc321aa397ed238efef/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr36192.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr36192.f90?ref=a5edb32e6bf15519852b9cc321aa397ed238efef", "patch": "@@ -3,7 +3,6 @@\n !\n program three_body\n   real, parameter :: n = 2, d = 2\n-  real, dimension(n,d) :: x      ! { dg-error \"of INTEGER type|of INTEGER type\" }\n-  x(1,:) = (/ 1.0, 0.0 /)\n+  real, dimension(n,d) :: x  ! { dg-error \"Expecting a scalar INTEGER\" }\n+  x(1,:) = (/ 1.0, 0.0 /)    ! { dg-error \"Unclassifiable\" }\n end program three_body\n-! { dg-prune-output \"have constant shape\" }"}, {"sha": "687a465f8c08e63ce97487afc7f780dcfd309ae7", "filename": "gcc/testsuite/gfortran.dg/pr36192_1.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5edb32e6bf15519852b9cc321aa397ed238efef/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr36192_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5edb32e6bf15519852b9cc321aa397ed238efef/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr36192_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr36192_1.f90?ref=a5edb32e6bf15519852b9cc321aa397ed238efef", "patch": "@@ -2,11 +2,11 @@\n ! PR fortran/36192\n program three_body\n    real, parameter ::  n = 2, d = 2\n-   real, dimension(n,d) :: x_hq ! { dg-error \"of INTEGER type|of INTEGER type\" }\n+   real, dimension(n,d) :: x_hq ! { dg-error \"Expecting a scalar INTEGER\" }\n    call step(x_hq)\n    contains\n    subroutine step(x)\n       real, dimension(:,:), intent(in) :: x\n    end subroutine step\n end program three_body\n-! { dg-prune-output \"must have constant shape\" }\n+! { dg-prune-output \"Rank mismatch in argument\" }"}, {"sha": "3dd1a5afc36334b3df124835f076894e82add3a8", "filename": "gcc/testsuite/gfortran.dg/real_dimension_1.f", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5edb32e6bf15519852b9cc321aa397ed238efef/gcc%2Ftestsuite%2Fgfortran.dg%2Freal_dimension_1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5edb32e6bf15519852b9cc321aa397ed238efef/gcc%2Ftestsuite%2Fgfortran.dg%2Freal_dimension_1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freal_dimension_1.f?ref=a5edb32e6bf15519852b9cc321aa397ed238efef", "patch": "@@ -1,7 +1,7 @@\n ! { dg-do compile }\n-! PR 34305 - make sure there's an error message for specifying a\n+! PR 34305 - Test for specifying a real as dimension\n       program test\n-      parameter (datasize = 1000) \n-      dimension idata (datasize)  ! { dg-error \"must be of INTEGER type|must have constant shape\" }\n-      idata (1) = -1\n+      real , parameter :: dsize = 1000\n+      dimension idata (dsize) ! { dg-error \"scalar INTEGER expression\" }\n+      idata (1) = -1    ! { dg-error \"must have the pointer attribute\" }\n       end"}]}