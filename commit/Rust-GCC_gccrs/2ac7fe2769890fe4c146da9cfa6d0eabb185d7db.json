{"sha": "2ac7fe2769890fe4c146da9cfa6d0eabb185d7db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFjN2ZlMjc2OTg5MGZlNGMxNDZkYTljZmE2ZDBlYWJiMTg1ZDdkYg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-08-03T20:16:50Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-08-03T20:16:50Z"}, "message": "cpp: Do not use @dots for ... tokens in code examples\n\nThis prevents a ... token in code examples from being turned into a\nsingle HORIZONTAL ELLIPSIS glyph (e.g. via the HTML &hellip; entity).\n\ngcc/ChangeLog:\n\n\t* doc/cpp.texi (Variadic Macros): Use the exact ... token in\n\tcode examples.", "tree": {"sha": "85da11a2c1509343d69a64b0464913fda301d18f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85da11a2c1509343d69a64b0464913fda301d18f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ac7fe2769890fe4c146da9cfa6d0eabb185d7db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ac7fe2769890fe4c146da9cfa6d0eabb185d7db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ac7fe2769890fe4c146da9cfa6d0eabb185d7db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ac7fe2769890fe4c146da9cfa6d0eabb185d7db/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73e89414882ecb8bd7de1bceb9d003e1af598c11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73e89414882ecb8bd7de1bceb9d003e1af598c11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73e89414882ecb8bd7de1bceb9d003e1af598c11"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "33f876ab706a944008e5c978b747049d4ff0cbce", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ac7fe2769890fe4c146da9cfa6d0eabb185d7db/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ac7fe2769890fe4c146da9cfa6d0eabb185d7db/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=2ac7fe2769890fe4c146da9cfa6d0eabb185d7db", "patch": "@@ -1631,7 +1631,7 @@ a function can.  The syntax for defining the macro is similar to that of\n a function.  Here is an example:\n \n @smallexample\n-#define eprintf(@dots{}) fprintf (stderr, __VA_ARGS__)\n+#define eprintf(...) fprintf (stderr, __VA_ARGS__)\n @end smallexample\n \n This kind of macro is called @dfn{variadic}.  When the macro is invoked,\n@@ -1655,11 +1655,11 @@ below for an important special case for @samp{##}.)\n If your macro is complicated, you may want a more descriptive name for\n the variable argument than @code{@w{__VA_ARGS__}}.  CPP permits\n this, as an extension.  You may write an argument name immediately\n-before the @samp{@dots{}}; that name is used for the variable argument.\n+before the @samp{...}; that name is used for the variable argument.\n The @code{eprintf} macro above could be written\n \n @smallexample\n-#define eprintf(args@dots{}) fprintf (stderr, args)\n+#define eprintf(args...) fprintf (stderr, args)\n @end smallexample\n \n @noindent\n@@ -1670,7 +1670,7 @@ You can have named arguments as well as variable arguments in a variadic\n macro.  We could define @code{eprintf} like this, instead:\n \n @smallexample\n-#define eprintf(format, @dots{}) fprintf (stderr, format, __VA_ARGS__)\n+#define eprintf(format, ...) fprintf (stderr, format, __VA_ARGS__)\n @end smallexample\n \n @noindent\n@@ -1709,7 +1709,7 @@ invocation expands to its argument; but if the variable argument does\n not have any tokens, the @code{@w{__VA_OPT__}} expands to nothing:\n \n @smallexample\n-#define eprintf(format, @dots{}) \\\n+#define eprintf(format, ...) \\\n   fprintf (stderr, format __VA_OPT__(,) __VA_ARGS__)\n @end smallexample\n \n@@ -1722,7 +1722,7 @@ the introduction of @code{@w{__VA_OPT__}}, this extension remains\n supported in GNU CPP, for backward compatibility.  If you write\n \n @smallexample\n-#define eprintf(format, @dots{}) fprintf (stderr, format, ##__VA_ARGS__)\n+#define eprintf(format, ...) fprintf (stderr, format, ##__VA_ARGS__)\n @end smallexample\n \n @noindent\n@@ -1758,7 +1758,7 @@ replacement list of a variadic macro.\n Variadic macros became a standard part of the C language with C99.  \n GNU CPP previously supported them\n with a named variable argument\n-(@samp{args@dots{}}, not @samp{@dots{}} and @code{@w{__VA_ARGS__}}), which\n+(@samp{args...}, not @samp{...} and @code{@w{__VA_ARGS__}}), which\n is still supported for backward compatibility.\n \n @node Predefined Macros"}]}