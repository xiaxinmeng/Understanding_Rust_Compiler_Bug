{"sha": "2afd55a57d48106c3fab218ddeaa0a539aa3f000", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFmZDU1YTU3ZDQ4MTA2YzNmYWIyMThkZGVhYTBhNTM5YWEzZjAwMA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-10-06T19:14:01Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-24T10:16:02Z"}, "message": "[Ada] Small cleanup in the Ada.Text_IO hierarchy\n\ngcc/ada/\n\n\t* libgnat/a-wtdeio.adb (TFT): Delete and adjust throughout.\n\t* libgnat/a-wtenau.adb (TFT): Likewise.\n\t* libgnat/a-wtfiio.adb (TFT): Likewise.\n\t* libgnat/a-wtflio.adb (TFT): Likewise.\n\t* libgnat/a-wtinio.adb (TFT): Likewise.\n\t* libgnat/a-wtinio__128.adb (TFT): Likewise.\n\t* libgnat/a-wtmoio.adb (TFT): Likewise.\n\t* libgnat/a-wtmoio__128.adb (TFT): Likewise.\n\t* libgnat/a-ztdeio.adb (TFT): Likewise.\n\t* libgnat/a-ztenau.adb (TFT): Likewise.\n\t* libgnat/a-ztfiio.adb (TFT): Likewise.\n\t* libgnat/a-ztflio.adb (TFT): Likewise.\n\t* libgnat/a-ztinio.adb (TFT): Likewise.\n\t* libgnat/a-ztinio__128.adb (TFT): Likewise.\n\t* libgnat/a-ztmoio.adb (TFT): Likewise.\n\t* libgnat/a-ztmoio__128.adb (TFT): Likewise.", "tree": {"sha": "c0ae195912c3f3fcd2104ae6a3cc89561fd255a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0ae195912c3f3fcd2104ae6a3cc89561fd255a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2afd55a57d48106c3fab218ddeaa0a539aa3f000", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2afd55a57d48106c3fab218ddeaa0a539aa3f000", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2afd55a57d48106c3fab218ddeaa0a539aa3f000", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2afd55a57d48106c3fab218ddeaa0a539aa3f000/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80a09e02289bb693ada2601ea4cc9e0b6df3f375", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80a09e02289bb693ada2601ea4cc9e0b6df3f375", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80a09e02289bb693ada2601ea4cc9e0b6df3f375"}], "stats": {"total": 180, "additions": 66, "deletions": 114}, "files": [{"sha": "5e328b231bcdf259175f4339eeab2f50101d2d50", "filename": "gcc/ada/libgnat/a-wtdeio.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-wtdeio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-wtdeio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtdeio.adb?ref=2afd55a57d48106c3fab218ddeaa0a539aa3f000", "patch": "@@ -36,9 +36,6 @@ with System.WCh_WtS; use System.WCh_WtS;\n \n package body Ada.Wide_Text_IO.Decimal_IO is\n \n-   subtype TFT is Ada.Wide_Text_IO.File_Type;\n-   --  File type required for calls to routines in Aux\n-\n    package Aux renames Ada.Wide_Text_IO.Decimal_Aux;\n \n    Scale : constant Integer := Num'Scale;\n@@ -54,9 +51,9 @@ package body Ada.Wide_Text_IO.Decimal_IO is\n    is\n    begin\n       if Num'Size > Integer'Size then\n-         Item := Num'Fixed_Value (Aux.Get_LLD (TFT (File), Width, Scale));\n+         Item := Num'Fixed_Value (Aux.Get_LLD (File, Width, Scale));\n       else\n-         Item := Num'Fixed_Value (Aux.Get_Dec (TFT (File), Width, Scale));\n+         Item := Num'Fixed_Value (Aux.Get_Dec (File, Width, Scale));\n       end if;\n    exception\n       when Constraint_Error => raise Data_Error;\n@@ -112,11 +109,11 @@ package body Ada.Wide_Text_IO.Decimal_IO is\n    begin\n       if Num'Size > Integer'Size then\n          Aux.Put_LLD\n-           (TFT (File), Long_Long_Integer'Integer_Value (Item),\n+           (File, Long_Long_Integer'Integer_Value (Item),\n             Fore, Aft, Exp, Scale);\n       else\n          Aux.Put_Dec\n-           (TFT (File), Integer'Integer_Value (Item), Fore, Aft, Exp, Scale);\n+           (File, Integer'Integer_Value (Item), Fore, Aft, Exp, Scale);\n       end if;\n    end Put;\n "}, {"sha": "6dcda301027e9cc40a60adf2bbe381f46d728ea9", "filename": "gcc/ada/libgnat/a-wtenau.adb", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-wtenau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-wtenau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtenau.adb?ref=2afd55a57d48106c3fab218ddeaa0a539aa3f000", "patch": "@@ -36,9 +36,6 @@ with System.WCh_Con;               use System.WCh_Con;\n \n package body Ada.Wide_Text_IO.Enumeration_Aux is\n \n-   subtype TFT is Ada.Wide_Text_IO.File_Type;\n-   --  File type required for calls to routines in Aux\n-\n    -----------------------\n    -- Local Subprograms --\n    -----------------------\n@@ -69,8 +66,8 @@ package body Ada.Wide_Text_IO.Enumeration_Aux is\n \n    begin\n       Buflen := 0;\n-      Load_Skip (TFT (File));\n-      ch := Nextc (TFT (File));\n+      Load_Skip (File);\n+      ch := Nextc (File);\n \n       --  Character literal case. If the initial character is a quote, then\n       --  we read as far as we can without backup (see ACVC test CE3905L)\n@@ -79,7 +76,7 @@ package body Ada.Wide_Text_IO.Enumeration_Aux is\n          Get (File, WC);\n          Store_Char (WC, Buf, Buflen);\n \n-         ch := Nextc (TFT (File));\n+         ch := Nextc (File);\n \n          if ch = LM or else ch = EOF then\n             return;\n@@ -88,7 +85,7 @@ package body Ada.Wide_Text_IO.Enumeration_Aux is\n          Get (File, WC);\n          Store_Char (WC, Buf, Buflen);\n \n-         ch := Nextc (TFT (File));\n+         ch := Nextc (File);\n \n          if ch /= Character'Pos (''') then\n             return;\n@@ -117,7 +114,7 @@ package body Ada.Wide_Text_IO.Enumeration_Aux is\n             Get (File, WC);\n             Store_Char (WC, Buf, Buflen);\n \n-            ch := Nextc (TFT (File));\n+            ch := Nextc (File);\n \n             exit when ch = EOF;\n \n@@ -155,7 +152,7 @@ package body Ada.Wide_Text_IO.Enumeration_Aux is\n         Integer'Max (Integer (Width), Item'Length);\n \n    begin\n-      Check_On_One_Line (TFT (File), Actual_Width);\n+      Check_On_One_Line (File, Actual_Width);\n \n       if Set = Lower_Case and then Item (Item'First) /= ''' then\n          declare"}, {"sha": "9f1e724f6a01103b370bbc41fddb1e0506633f5f", "filename": "gcc/ada/libgnat/a-wtfiio.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-wtfiio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-wtfiio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtfiio.adb?ref=2afd55a57d48106c3fab218ddeaa0a539aa3f000", "patch": "@@ -35,9 +35,6 @@ with System.WCh_WtS; use System.WCh_WtS;\n \n package body Ada.Wide_Text_IO.Fixed_IO is\n \n-   subtype TFT is Ada.Wide_Text_IO.File_Type;\n-   --  File type required for calls to routines in Aux\n-\n    package Aux renames Ada.Wide_Text_IO.Float_Aux;\n \n    ---------\n@@ -50,7 +47,7 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n       Width : Field := 0)\n    is\n    begin\n-      Aux.Get (TFT (File), Long_Long_Float (Item), Width);\n+      Aux.Get (File, Long_Long_Float (Item), Width);\n \n    exception\n       when Constraint_Error => raise Data_Error;\n@@ -94,7 +91,7 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      Aux.Put (TFT (File), Long_Long_Float (Item), Fore, Aft, Exp);\n+      Aux.Put (File, Long_Long_Float (Item), Fore, Aft, Exp);\n    end Put;\n \n    procedure Put"}, {"sha": "a7df6d991dd01d04120d1d90950ff25a2b8cffc9", "filename": "gcc/ada/libgnat/a-wtflio.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-wtflio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-wtflio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtflio.adb?ref=2afd55a57d48106c3fab218ddeaa0a539aa3f000", "patch": "@@ -36,9 +36,6 @@ with System.WCh_WtS; use System.WCh_WtS;\n \n package body Ada.Wide_Text_IO.Float_IO is\n \n-   subtype TFT is Ada.Wide_Text_IO.File_Type;\n-   --  File type required for calls to routines in Aux\n-\n    package Aux renames Ada.Wide_Text_IO.Float_Aux;\n \n    ---------\n@@ -51,7 +48,7 @@ package body Ada.Wide_Text_IO.Float_IO is\n       Width : Field := 0)\n    is\n    begin\n-      Aux.Get (TFT (File), Long_Long_Float (Item), Width);\n+      Aux.Get (File, Long_Long_Float (Item), Width);\n \n    exception\n       when Constraint_Error => raise Data_Error;\n@@ -95,7 +92,7 @@ package body Ada.Wide_Text_IO.Float_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      Aux.Put (TFT (File), Long_Long_Float (Item), Fore, Aft, Exp);\n+      Aux.Put (File, Long_Long_Float (Item), Fore, Aft, Exp);\n    end Put;\n \n    procedure Put"}, {"sha": "dff0b68258c8771652bfb31e20667eeeb166ffad", "filename": "gcc/ada/libgnat/a-wtinio.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-wtinio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-wtinio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtinio.adb?ref=2afd55a57d48106c3fab218ddeaa0a539aa3f000", "patch": "@@ -65,9 +65,6 @@ package body Ada.Wide_Text_IO.Integer_IO is\n    --  Boolean is used to test for these cases and since it is a constant, only\n    --  code for the relevant case will be included in the instance.\n \n-   subtype TFT is Ada.Wide_Text_IO.File_Type;\n-   --  File type required for calls to routines in Aux\n-\n    ---------\n    -- Get --\n    ---------\n@@ -84,9 +81,9 @@ package body Ada.Wide_Text_IO.Integer_IO is\n \n    begin\n       if Need_LLI then\n-         Aux_LLI.Get (TFT (File), Long_Long_Integer (Item), Width);\n+         Aux_LLI.Get (File, Long_Long_Integer (Item), Width);\n       else\n-         Aux_Int.Get (TFT (File), Integer (Item), Width);\n+         Aux_Int.Get (File, Integer (Item), Width);\n       end if;\n \n    exception\n@@ -140,9 +137,9 @@ package body Ada.Wide_Text_IO.Integer_IO is\n    is\n    begin\n       if Need_LLI then\n-         Aux_LLI.Put (TFT (File), Long_Long_Integer (Item), Width, Base);\n+         Aux_LLI.Put (File, Long_Long_Integer (Item), Width, Base);\n       else\n-         Aux_Int.Put (TFT (File), Integer (Item), Width, Base);\n+         Aux_Int.Put (File, Integer (Item), Width, Base);\n       end if;\n    end Put;\n "}, {"sha": "8936f499fcca30e0e7193af0f815946515d7c234", "filename": "gcc/ada/libgnat/a-wtinio__128.adb", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-wtinio__128.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-wtinio__128.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtinio__128.adb?ref=2afd55a57d48106c3fab218ddeaa0a539aa3f000", "patch": "@@ -79,9 +79,6 @@ package body Ada.Wide_Text_IO.Integer_IO is\n    --  are used to test for these cases and since they are constant, only code\n    --  for the relevant case will be included in the instance.\n \n-   subtype TFT is Ada.Wide_Text_IO.File_Type;\n-   --  File type required for calls to routines in Aux\n-\n    ---------\n    -- Get --\n    ---------\n@@ -98,11 +95,11 @@ package body Ada.Wide_Text_IO.Integer_IO is\n \n    begin\n       if Need_LLLI then\n-         Aux_LLLI.Get (TFT (File), Long_Long_Long_Integer (Item), Width);\n+         Aux_LLLI.Get (File, Long_Long_Long_Integer (Item), Width);\n       elsif Need_LLI then\n-         Aux_LLI.Get (TFT (File), Long_Long_Integer (Item), Width);\n+         Aux_LLI.Get (File, Long_Long_Integer (Item), Width);\n       else\n-         Aux_Int.Get (TFT (File), Integer (Item), Width);\n+         Aux_Int.Get (File, Integer (Item), Width);\n       end if;\n \n    exception\n@@ -158,11 +155,11 @@ package body Ada.Wide_Text_IO.Integer_IO is\n    is\n    begin\n       if Need_LLLI then\n-         Aux_LLLI.Put (TFT (File), Long_Long_Long_Integer (Item), Width, Base);\n+         Aux_LLLI.Put (File, Long_Long_Long_Integer (Item), Width, Base);\n       elsif Need_LLI then\n-         Aux_LLI.Put (TFT (File), Long_Long_Integer (Item), Width, Base);\n+         Aux_LLI.Put (File, Long_Long_Integer (Item), Width, Base);\n       else\n-         Aux_Int.Put (TFT (File), Integer (Item), Width, Base);\n+         Aux_Int.Put (File, Integer (Item), Width, Base);\n       end if;\n    end Put;\n "}, {"sha": "4fe5beb6c9d07aa1820da66897b31ed2d7395b51", "filename": "gcc/ada/libgnat/a-wtmoio.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-wtmoio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-wtmoio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtmoio.adb?ref=2afd55a57d48106c3fab218ddeaa0a539aa3f000", "patch": "@@ -65,9 +65,6 @@ package body Ada.Wide_Text_IO.Modular_IO is\n    --  Boolean is used to test for these cases and since it is a constant, only\n    --  code for the relevant case will be included in the instance.\n \n-   subtype TFT is Ada.Wide_Text_IO.File_Type;\n-   --  File type required for calls to routines in Aux\n-\n    ---------\n    -- Get --\n    ---------\n@@ -83,9 +80,9 @@ package body Ada.Wide_Text_IO.Modular_IO is\n \n    begin\n       if Need_LLU then\n-         Aux_LLU.Get (TFT (File), Long_Long_Unsigned (Item), Width);\n+         Aux_LLU.Get (File, Long_Long_Unsigned (Item), Width);\n       else\n-         Aux_Uns.Get (TFT (File), Unsigned (Item), Width);\n+         Aux_Uns.Get (File, Unsigned (Item), Width);\n       end if;\n \n    exception\n@@ -138,9 +135,9 @@ package body Ada.Wide_Text_IO.Modular_IO is\n    is\n    begin\n       if Need_LLU then\n-         Aux_LLU.Put (TFT (File), Long_Long_Unsigned (Item), Width, Base);\n+         Aux_LLU.Put (File, Long_Long_Unsigned (Item), Width, Base);\n       else\n-         Aux_Uns.Put (TFT (File), Unsigned (Item), Width, Base);\n+         Aux_Uns.Put (File, Unsigned (Item), Width, Base);\n       end if;\n    end Put;\n "}, {"sha": "0dbf06ec0f450baba7370e5bdb194968dcd5a881", "filename": "gcc/ada/libgnat/a-wtmoio__128.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-wtmoio__128.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-wtmoio__128.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtmoio__128.adb?ref=2afd55a57d48106c3fab218ddeaa0a539aa3f000", "patch": "@@ -79,9 +79,6 @@ package body Ada.Wide_Text_IO.Modular_IO is\n    --  are used to test for these cases and since they are constant, only code\n    --  for the relevant case will be included in the instance.\n \n-   subtype TFT is Ada.Wide_Text_IO.File_Type;\n-   --  File type required for calls to routines in Aux\n-\n    ---------\n    -- Get --\n    ---------\n@@ -99,9 +96,9 @@ package body Ada.Wide_Text_IO.Modular_IO is\n       if Need_LLLU then\n          Aux_LLLU.Get (File, Long_Long_Long_Unsigned (Item), Width);\n       elsif Need_LLU then\n-         Aux_LLU.Get (TFT (File), Long_Long_Unsigned (Item), Width);\n+         Aux_LLU.Get (File, Long_Long_Unsigned (Item), Width);\n       else\n-         Aux_Uns.Get (TFT (File), Unsigned (Item), Width);\n+         Aux_Uns.Get (File, Unsigned (Item), Width);\n       end if;\n \n    exception\n@@ -158,9 +155,9 @@ package body Ada.Wide_Text_IO.Modular_IO is\n       if Need_LLLU then\n          Aux_LLLU.Put (File, Long_Long_Long_Unsigned (Item), Width, Base);\n       elsif Need_LLU then\n-         Aux_LLU.Put (TFT (File), Long_Long_Unsigned (Item), Width, Base);\n+         Aux_LLU.Put (File, Long_Long_Unsigned (Item), Width, Base);\n       else\n-         Aux_Uns.Put (TFT (File), Unsigned (Item), Width, Base);\n+         Aux_Uns.Put (File, Unsigned (Item), Width, Base);\n       end if;\n    end Put;\n "}, {"sha": "4cc27380ae46614d2094d0335587dec7d3ab2c93", "filename": "gcc/ada/libgnat/a-ztdeio.adb", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-ztdeio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-ztdeio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztdeio.adb?ref=2afd55a57d48106c3fab218ddeaa0a539aa3f000", "patch": "@@ -36,9 +36,6 @@ with System.WCh_WtS; use System.WCh_WtS;\n \n package body Ada.Wide_Wide_Text_IO.Decimal_IO is\n \n-   subtype TFT is Ada.Wide_Wide_Text_IO.File_Type;\n-   --  File type required for calls to routines in Aux\n-\n    package Aux renames Ada.Wide_Wide_Text_IO.Decimal_Aux;\n \n    Scale : constant Integer := Num'Scale;\n@@ -54,9 +51,9 @@ package body Ada.Wide_Wide_Text_IO.Decimal_IO is\n    is\n    begin\n       if Num'Size > Integer'Size then\n-         Item := Num'Fixed_Value (Aux.Get_LLD (TFT (File), Width, Scale));\n+         Item := Num'Fixed_Value (Aux.Get_LLD (File, Width, Scale));\n       else\n-         Item := Num'Fixed_Value (Aux.Get_Dec (TFT (File), Width, Scale));\n+         Item := Num'Fixed_Value (Aux.Get_Dec (File, Width, Scale));\n       end if;\n    exception\n       when Constraint_Error => raise Data_Error;\n@@ -112,15 +109,15 @@ package body Ada.Wide_Wide_Text_IO.Decimal_IO is\n    begin\n       if Num'Size > Integer'Size then\n          Aux.Put_LLD\n---           (TFT (File), Long_Long_Integer'Integer_Value (Item),\n+--           (File, Long_Long_Integer'Integer_Value (Item),\n --  ???\n-           (TFT (File), Long_Long_Integer (Item),\n+           (File, Long_Long_Integer (Item),\n             Fore, Aft, Exp, Scale);\n       else\n          Aux.Put_Dec\n---           (TFT (File), Integer'Integer_Value (Item), Fore, Aft, Exp, Scale);\n+--           (File, Integer'Integer_Value (Item), Fore, Aft, Exp, Scale);\n --  ???\n-           (TFT (File), Integer (Item), Fore, Aft, Exp, Scale);\n+           (File, Integer (Item), Fore, Aft, Exp, Scale);\n \n       end if;\n    end Put;"}, {"sha": "f3b11afa0d611dbaf4591abacafd6816946e1647", "filename": "gcc/ada/libgnat/a-ztenau.adb", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-ztenau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-ztenau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztenau.adb?ref=2afd55a57d48106c3fab218ddeaa0a539aa3f000", "patch": "@@ -37,9 +37,6 @@ with System.WCh_Con;                    use System.WCh_Con;\n \n package body Ada.Wide_Wide_Text_IO.Enumeration_Aux is\n \n-   subtype TFT is Ada.Wide_Wide_Text_IO.File_Type;\n-   --  File type required for calls to routines in Aux\n-\n    -----------------------\n    -- Local Subprograms --\n    -----------------------\n@@ -70,8 +67,8 @@ package body Ada.Wide_Wide_Text_IO.Enumeration_Aux is\n \n    begin\n       Buflen := 0;\n-      Load_Skip (TFT (File));\n-      ch := Nextc (TFT (File));\n+      Load_Skip (File);\n+      ch := Nextc (File);\n \n       --  Character literal case. If the initial character is a quote, then\n       --  we read as far as we can without backup (see ACVC test CE3905L)\n@@ -80,7 +77,7 @@ package body Ada.Wide_Wide_Text_IO.Enumeration_Aux is\n          Get (File, WC);\n          Store_Char (WC, Buf, Buflen);\n \n-         ch := Nextc (TFT (File));\n+         ch := Nextc (File);\n \n          if ch = LM or else ch = EOF then\n             return;\n@@ -89,7 +86,7 @@ package body Ada.Wide_Wide_Text_IO.Enumeration_Aux is\n          Get (File, WC);\n          Store_Char (WC, Buf, Buflen);\n \n-         ch := Nextc (TFT (File));\n+         ch := Nextc (File);\n \n          if ch /= Character'Pos (''') then\n             return;\n@@ -118,7 +115,7 @@ package body Ada.Wide_Wide_Text_IO.Enumeration_Aux is\n             Get (File, WC);\n             Store_Char (WC, Buf, Buflen);\n \n-            ch := Nextc (TFT (File));\n+            ch := Nextc (File);\n \n             exit when ch = EOF;\n \n@@ -156,7 +153,7 @@ package body Ada.Wide_Wide_Text_IO.Enumeration_Aux is\n         Integer'Max (Integer (Width), Item'Length);\n \n    begin\n-      Check_On_One_Line (TFT (File), Actual_Width);\n+      Check_On_One_Line (File, Actual_Width);\n \n       if Set = Lower_Case and then Item (Item'First) /= ''' then\n          declare"}, {"sha": "bfe24ac3edcef811c7184e07794483f1a3143f49", "filename": "gcc/ada/libgnat/a-ztfiio.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-ztfiio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-ztfiio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztfiio.adb?ref=2afd55a57d48106c3fab218ddeaa0a539aa3f000", "patch": "@@ -35,9 +35,6 @@ with System.WCh_WtS; use System.WCh_WtS;\n \n package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n \n-   subtype TFT is Ada.Wide_Wide_Text_IO.File_Type;\n-   --  File type required for calls to routines in Aux\n-\n    package Aux renames Ada.Wide_Wide_Text_IO.Float_Aux;\n \n    ---------\n@@ -50,7 +47,7 @@ package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n       Width : Field := 0)\n    is\n    begin\n-      Aux.Get (TFT (File), Long_Long_Float (Item), Width);\n+      Aux.Get (File, Long_Long_Float (Item), Width);\n \n    exception\n       when Constraint_Error => raise Data_Error;\n@@ -94,7 +91,7 @@ package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      Aux.Put (TFT (File), Long_Long_Float (Item), Fore, Aft, Exp);\n+      Aux.Put (File, Long_Long_Float (Item), Fore, Aft, Exp);\n    end Put;\n \n    procedure Put"}, {"sha": "bb52f3806b948c33692851f149fca25cecac879f", "filename": "gcc/ada/libgnat/a-ztflio.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-ztflio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-ztflio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztflio.adb?ref=2afd55a57d48106c3fab218ddeaa0a539aa3f000", "patch": "@@ -35,9 +35,6 @@ with System.WCh_WtS; use System.WCh_WtS;\n \n package body Ada.Wide_Wide_Text_IO.Float_IO is\n \n-   subtype TFT is Ada.Wide_Wide_Text_IO.File_Type;\n-   --  File type required for calls to routines in Aux\n-\n    package Aux renames Ada.Wide_Wide_Text_IO.Float_Aux;\n \n    ---------\n@@ -50,7 +47,7 @@ package body Ada.Wide_Wide_Text_IO.Float_IO is\n       Width : Field := 0)\n    is\n    begin\n-      Aux.Get (TFT (File), Long_Long_Float (Item), Width);\n+      Aux.Get (File, Long_Long_Float (Item), Width);\n \n    exception\n       when Constraint_Error => raise Data_Error;\n@@ -94,7 +91,7 @@ package body Ada.Wide_Wide_Text_IO.Float_IO is\n       Exp  : Field := Default_Exp)\n    is\n    begin\n-      Aux.Put (TFT (File), Long_Long_Float (Item), Fore, Aft, Exp);\n+      Aux.Put (File, Long_Long_Float (Item), Fore, Aft, Exp);\n    end Put;\n \n    procedure Put"}, {"sha": "4d4708ae5a1fe5f07c9527db6731ca9c6535d67b", "filename": "gcc/ada/libgnat/a-ztinio.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-ztinio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-ztinio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztinio.adb?ref=2afd55a57d48106c3fab218ddeaa0a539aa3f000", "patch": "@@ -65,9 +65,6 @@ package body Ada.Wide_Wide_Text_IO.Integer_IO is\n    --  Boolean is used to test for these cases and since it is a constant, only\n    --  code for the relevant case will be included in the instance.\n \n-   subtype TFT is Ada.Wide_Wide_Text_IO.File_Type;\n-   --  File type required for calls to routines in Aux\n-\n    ---------\n    -- Get --\n    ---------\n@@ -84,9 +81,9 @@ package body Ada.Wide_Wide_Text_IO.Integer_IO is\n \n    begin\n       if Need_LLI then\n-         Aux_LLI.Get (TFT (File), Long_Long_Integer (Item), Width);\n+         Aux_LLI.Get (File, Long_Long_Integer (Item), Width);\n       else\n-         Aux_Int.Get (TFT (File), Integer (Item), Width);\n+         Aux_Int.Get (File, Integer (Item), Width);\n       end if;\n \n    exception\n@@ -140,9 +137,9 @@ package body Ada.Wide_Wide_Text_IO.Integer_IO is\n    is\n    begin\n       if Need_LLI then\n-         Aux_LLI.Put (TFT (File), Long_Long_Integer (Item), Width, Base);\n+         Aux_LLI.Put (File, Long_Long_Integer (Item), Width, Base);\n       else\n-         Aux_Int.Put (TFT (File), Integer (Item), Width, Base);\n+         Aux_Int.Put (File, Integer (Item), Width, Base);\n       end if;\n    end Put;\n "}, {"sha": "560539a92e604e2ccc668d9a3ad2057d9bd4063a", "filename": "gcc/ada/libgnat/a-ztinio__128.adb", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-ztinio__128.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-ztinio__128.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztinio__128.adb?ref=2afd55a57d48106c3fab218ddeaa0a539aa3f000", "patch": "@@ -79,9 +79,6 @@ package body Ada.Wide_Wide_Text_IO.Integer_IO is\n    --  are used to test for these cases and since they are constant, only code\n    --  for the relevant case will be included in the instance.\n \n-   subtype TFT is Ada.Wide_Wide_Text_IO.File_Type;\n-   --  File type required for calls to routines in Aux\n-\n    ---------\n    -- Get --\n    ---------\n@@ -98,11 +95,11 @@ package body Ada.Wide_Wide_Text_IO.Integer_IO is\n \n    begin\n       if Need_LLLI then\n-         Aux_LLLI.Get (TFT (File), Long_Long_Long_Integer (Item), Width);\n+         Aux_LLLI.Get (File, Long_Long_Long_Integer (Item), Width);\n       elsif Need_LLI then\n-         Aux_LLI.Get (TFT (File), Long_Long_Integer (Item), Width);\n+         Aux_LLI.Get (File, Long_Long_Integer (Item), Width);\n       else\n-         Aux_Int.Get (TFT (File), Integer (Item), Width);\n+         Aux_Int.Get (File, Integer (Item), Width);\n       end if;\n \n    exception\n@@ -158,11 +155,11 @@ package body Ada.Wide_Wide_Text_IO.Integer_IO is\n    is\n    begin\n       if Need_LLLI then\n-         Aux_LLLI.Put (TFT (File), Long_Long_Long_Integer (Item), Width, Base);\n+         Aux_LLLI.Put (File, Long_Long_Long_Integer (Item), Width, Base);\n       elsif Need_LLI then\n-         Aux_LLI.Put (TFT (File), Long_Long_Integer (Item), Width, Base);\n+         Aux_LLI.Put (File, Long_Long_Integer (Item), Width, Base);\n       else\n-         Aux_Int.Put (TFT (File), Integer (Item), Width, Base);\n+         Aux_Int.Put (File, Integer (Item), Width, Base);\n       end if;\n    end Put;\n "}, {"sha": "67087c60d2dde40ac4be39e27b06ac7b4b477817", "filename": "gcc/ada/libgnat/a-ztmoio.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-ztmoio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-ztmoio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztmoio.adb?ref=2afd55a57d48106c3fab218ddeaa0a539aa3f000", "patch": "@@ -65,9 +65,6 @@ package body Ada.Wide_Wide_Text_IO.Modular_IO is\n    --  Boolean is used to test for these cases and since it is a constant, only\n    --  code for the relevant case will be included in the instance.\n \n-   subtype TFT is Ada.Wide_Wide_Text_IO.File_Type;\n-   --  File type required for calls to routines in Aux\n-\n    ---------\n    -- Get --\n    ---------\n@@ -83,9 +80,9 @@ package body Ada.Wide_Wide_Text_IO.Modular_IO is\n \n    begin\n       if Need_LLU then\n-         Aux_LLU.Get (TFT (File), Long_Long_Unsigned (Item), Width);\n+         Aux_LLU.Get (File, Long_Long_Unsigned (Item), Width);\n       else\n-         Aux_Uns.Get (TFT (File), Unsigned (Item), Width);\n+         Aux_Uns.Get (File, Unsigned (Item), Width);\n       end if;\n \n    exception\n@@ -138,9 +135,9 @@ package body Ada.Wide_Wide_Text_IO.Modular_IO is\n    is\n    begin\n       if Need_LLU then\n-         Aux_LLU.Put (TFT (File), Long_Long_Unsigned (Item), Width, Base);\n+         Aux_LLU.Put (File, Long_Long_Unsigned (Item), Width, Base);\n       else\n-         Aux_Uns.Put (TFT (File), Unsigned (Item), Width, Base);\n+         Aux_Uns.Put (File, Unsigned (Item), Width, Base);\n       end if;\n    end Put;\n "}, {"sha": "71626cc27044c33da98651a5a9050a2d82a048d3", "filename": "gcc/ada/libgnat/a-ztmoio__128.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-ztmoio__128.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2afd55a57d48106c3fab218ddeaa0a539aa3f000/gcc%2Fada%2Flibgnat%2Fa-ztmoio__128.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztmoio__128.adb?ref=2afd55a57d48106c3fab218ddeaa0a539aa3f000", "patch": "@@ -79,9 +79,6 @@ package body Ada.Wide_Wide_Text_IO.Modular_IO is\n    --  are used to test for these cases and since they are constant, only code\n    --  for the relevant case will be included in the instance.\n \n-   subtype TFT is Ada.Wide_Wide_Text_IO.File_Type;\n-   --  File type required for calls to routines in Aux\n-\n    ---------\n    -- Get --\n    ---------\n@@ -99,9 +96,9 @@ package body Ada.Wide_Wide_Text_IO.Modular_IO is\n       if Need_LLLU then\n          Aux_LLLU.Get (File, Long_Long_Long_Unsigned (Item), Width);\n       elsif Need_LLU then\n-         Aux_LLU.Get (TFT (File), Long_Long_Unsigned (Item), Width);\n+         Aux_LLU.Get (File, Long_Long_Unsigned (Item), Width);\n       else\n-         Aux_Uns.Get (TFT (File), Unsigned (Item), Width);\n+         Aux_Uns.Get (File, Unsigned (Item), Width);\n       end if;\n \n    exception\n@@ -158,9 +155,9 @@ package body Ada.Wide_Wide_Text_IO.Modular_IO is\n       if Need_LLLU then\n          Aux_LLLU.Put (File, Long_Long_Long_Unsigned (Item), Width, Base);\n       elsif Need_LLU then\n-         Aux_LLU.Put (TFT (File), Long_Long_Unsigned (Item), Width, Base);\n+         Aux_LLU.Put (File, Long_Long_Unsigned (Item), Width, Base);\n       else\n-         Aux_Uns.Put (TFT (File), Unsigned (Item), Width, Base);\n+         Aux_Uns.Put (File, Unsigned (Item), Width, Base);\n       end if;\n    end Put;\n "}]}