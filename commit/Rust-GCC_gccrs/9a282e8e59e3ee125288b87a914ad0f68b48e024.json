{"sha": "9a282e8e59e3ee125288b87a914ad0f68b48e024", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWEyODJlOGU1OWUzZWUxMjUyODhiODdhOTE0YWQwZjY4YjQ4ZTAyNA==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2004-03-11T08:47:52Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-03-11T08:47:52Z"}, "message": "PlainDatagramSocketImpl.java: Reformated to match classpath's version more.\n\n2004-03-11  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/net/PlainDatagramSocketImpl.java:\n\tReformated to match classpath's version more.\n\nFrom-SVN: r79314", "tree": {"sha": "4600fd47785c764f8fc4d4d00b6c621d49602343", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4600fd47785c764f8fc4d4d00b6c621d49602343"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a282e8e59e3ee125288b87a914ad0f68b48e024", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a282e8e59e3ee125288b87a914ad0f68b48e024", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a282e8e59e3ee125288b87a914ad0f68b48e024", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a282e8e59e3ee125288b87a914ad0f68b48e024/comments", "author": null, "committer": null, "parents": [{"sha": "1f2b471546f747ae0de24c7919cf51a8b3d9b4c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f2b471546f747ae0de24c7919cf51a8b3d9b4c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f2b471546f747ae0de24c7919cf51a8b3d9b4c1"}], "stats": {"total": 52, "additions": 29, "deletions": 23}, "files": [{"sha": "0c2af3595b44a74a479d68de7322c6bc8b37ca97", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a282e8e59e3ee125288b87a914ad0f68b48e024/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a282e8e59e3ee125288b87a914ad0f68b48e024/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=9a282e8e59e3ee125288b87a914ad0f68b48e024", "patch": "@@ -1,3 +1,8 @@\n+2004-03-11  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/net/PlainDatagramSocketImpl.java:\n+\tReformated to match classpath's version more.\n+\n 2004-03-11  Michael Koch  <konqueror@gmx.de>\n \n \t* gnu/java/awt/peer/ClasspathFontPeer.java:"}, {"sha": "83d80722450b9ce2a22801cd73877e070982590a", "filename": "libjava/gnu/java/net/PlainDatagramSocketImpl.java", "status": "modified", "additions": 24, "deletions": 23, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a282e8e59e3ee125288b87a914ad0f68b48e024/libjava%2Fgnu%2Fjava%2Fnet%2FPlainDatagramSocketImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a282e8e59e3ee125288b87a914ad0f68b48e024/libjava%2Fgnu%2Fjava%2Fnet%2FPlainDatagramSocketImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2FPlainDatagramSocketImpl.java?ref=9a282e8e59e3ee125288b87a914ad0f68b48e024", "patch": "@@ -135,13 +135,13 @@ public int getNativeFD()\n    *\n    * @exception SocketException If an error occurs\n    */\n-  protected native void bind(int lport, InetAddress laddr)\n-\tthrows SocketException;\n+  protected native void bind(int port, InetAddress addr)\n+    throws SocketException;\n \n-  protected native void connect (InetAddress i, int port)\n-\tthrows SocketException;\n+  protected native void connect(InetAddress addr, int port)\n+    throws SocketException;\n   \n-  protected native void disconnect ();\n+  protected native void disconnect();\n   \n   /**\n    * Creates a new datagram socket\n@@ -150,9 +150,9 @@ protected native void connect (InetAddress i, int port)\n    */\n   protected native void create() throws SocketException;\n   \n-  protected native int peek(InetAddress i) throws IOException;\n+  protected native int peek(InetAddress addr) throws IOException;\n   \n-  protected native int peekData (DatagramPacket dp) throws IOException;\n+  protected native int peekData(DatagramPacket packet) throws IOException;\n \n   /**\n    * Sets the Time to Live value for the socket\n@@ -188,7 +188,7 @@ protected native void connect (InetAddress i, int port)\n    *\n    * @exception IOException IOException If an error occurs\n    */\n-  protected native void receive(DatagramPacket p) throws IOException;\n+  protected native void receive(DatagramPacket packet) throws IOException;\n \n   /**\n    * Sets the value of an option on the socket\n@@ -198,7 +198,8 @@ protected native void connect (InetAddress i, int port)\n    *\n    * @exception SocketException If an error occurs\n    */\n-  public native void setOption(int optID, Object value) throws SocketException;\n+  public native void setOption(int option_id, Object val)\n+    throws SocketException;\n \n   /**\n    * Retrieves the value of an option on the socket\n@@ -209,8 +210,9 @@ protected native void connect (InetAddress i, int port)\n    *\n    * @exception SocketException If an error occurs\n    */\n-  public native Object getOption(int optID) throws SocketException;\n-  \n+  public native Object getOption(int option_id)\n+    throws SocketException;\n+\n   /**\n    * Joins or leaves a broadcasting group on a given network interface.\n    * If the network interface is <code>null</code> the group is join/left on\n@@ -222,8 +224,7 @@ protected native void connect (InetAddress i, int port)\n    *\n    * @exception IOException If an error occurs.\n    */\n-  private native void mcastGrp(InetAddress inetAddr,\n-\t\t  \t       NetworkInterface netIf,\n+  private native void mcastGrp(InetAddress inetAddr, NetworkInterface netIf,\n \t\t               boolean join)\n     throws IOException;\n \n@@ -267,9 +268,9 @@ protected void setTTL(byte ttl) throws IOException\n    *\n    * @exception IOException If an error occurs\n    */\n-  protected void join(InetAddress inetaddr) throws IOException\n+  protected void join(InetAddress addr) throws IOException\n   {\n-    mcastGrp(inetaddr, null, true);\n+    mcastGrp(addr, null, true);\n   }\n \n   /**\n@@ -279,20 +280,20 @@ protected void join(InetAddress inetaddr) throws IOException\n    *\n    * @exception IOException If an error occurs\n    */\n-  protected void leave(InetAddress inetaddr) throws IOException\n+  protected void leave(InetAddress addr) throws IOException\n   {\n-    mcastGrp(inetaddr, null, false);\n+    mcastGrp(addr, null, false);\n   }\n \n-  protected void joinGroup (SocketAddress mcastaddr, NetworkInterface netIf)\n-\t  throws IOException\n+  protected void joinGroup(SocketAddress mcastaddr, NetworkInterface netIf)\n+    throws IOException\n   {\n-    mcastGrp(((InetSocketAddress)mcastaddr).getAddress(), netIf, true);\n+    mcastGrp(((InetSocketAddress) mcastaddr).getAddress(), netIf, true);\n   }\n \n-  protected void leaveGroup (SocketAddress mcastaddr, NetworkInterface netIf)\n-\t  throws IOException\n+  protected void leaveGroup(SocketAddress mcastaddr, NetworkInterface netIf)\n+    throws IOException\n   {\n-    mcastGrp(((InetSocketAddress)mcastaddr).getAddress(), netIf, false);\n+    mcastGrp(((InetSocketAddress) mcastaddr).getAddress(), netIf, false);\n   }\n }"}]}