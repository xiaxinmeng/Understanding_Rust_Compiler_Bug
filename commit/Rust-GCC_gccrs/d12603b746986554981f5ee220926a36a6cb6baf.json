{"sha": "d12603b746986554981f5ee220926a36a6cb6baf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDEyNjAzYjc0Njk4NjU1NDk4MWY1ZWUyMjA5MjZhMzZhNmNiNmJhZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-11-16T08:06:41Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-11-16T08:33:04Z"}, "message": "tree-optimization/97835 - fix step vector construction for SLP induction\n\nWe're stripping conversions off access functions of inductions and\nthus the step can be of different sign.  Fix bogus step CTORs by\nconverting the elements rather than the whole vector.\n\n2020-11-16  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/97835\n\t* tree-vect-loop.c (vectorizable_induction): Convert step\n\tscalars rather than step vector.\n\n\t* gcc.dg/vect/pr97835.c: New testcase.", "tree": {"sha": "15d11b0beea6361085e43d7020db3d43bddee765", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15d11b0beea6361085e43d7020db3d43bddee765"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d12603b746986554981f5ee220926a36a6cb6baf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d12603b746986554981f5ee220926a36a6cb6baf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d12603b746986554981f5ee220926a36a6cb6baf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d12603b746986554981f5ee220926a36a6cb6baf/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aaccdb9cec423ef4de9d541dbe0a95fa3346f430", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaccdb9cec423ef4de9d541dbe0a95fa3346f430", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aaccdb9cec423ef4de9d541dbe0a95fa3346f430"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "5ca477bf806fcc9f172ebc3ea946e55aa8de1f32", "filename": "gcc/testsuite/gcc.dg/vect/pr97835.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d12603b746986554981f5ee220926a36a6cb6baf/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr97835.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d12603b746986554981f5ee220926a36a6cb6baf/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr97835.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr97835.c?ref=d12603b746986554981f5ee220926a36a6cb6baf", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_int } */\n+\n+struct co {\n+  int gx;\n+  int ty;\n+};\n+\n+void\n+x0 (struct co *yy, long int kc, int wi, int md)\n+{\n+  while (wi < 1)\n+    {\n+      yy[wi].gx = md;\n+      yy[wi].ty = wi;\n+      md += kc;\n+      ++wi;\n+    }\n+}\n+\n+/* { dg-final { scan-tree-dump \"vectorizing stmts using SLP\" \"vect\" } } */"}, {"sha": "4d5532f71d0b1ee8a271c845ecb95d9f534a1fb4", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d12603b746986554981f5ee220926a36a6cb6baf/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d12603b746986554981f5ee220926a36a6cb6baf/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=d12603b746986554981f5ee220926a36a6cb6baf", "patch": "@@ -7999,6 +7999,7 @@ vectorizable_induction (loop_vec_info loop_vinfo,\n \t    {\n \t      /* The scalar steps of the IVs.  */\n \t      tree elt = steps[(ivn*const_nunits + eltn) % group_size];\n+\t      elt = gimple_convert (&init_stmts, TREE_TYPE (step_vectype), elt);\n \t      step_elts.quick_push (elt);\n \t      if (!init_node)\n \t\t{\n@@ -8018,7 +8019,6 @@ vectorizable_induction (loop_vec_info loop_vinfo,\n \t\t\t\t   : build_int_cstu (stept, mul_elt));\n \t    }\n \t  vec_step = gimple_build_vector (&init_stmts, &step_elts);\n-\t  vec_step = gimple_convert (&init_stmts, step_vectype, vec_step);\n \t  vec_steps.safe_push (vec_step);\n \t  tree step_mul = gimple_build_vector (&init_stmts, &mul_elts);\n \t  if (peel_mul)"}]}