{"sha": "2a4fa5dcae09e1c819a937e9aeeb5e5551837223", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE0ZmE1ZGNhZTA5ZTFjODE5YTkzN2U5YWVlYjVlNTU1MTgzNzIyMw==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2014-09-23T21:15:36Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2014-09-23T21:15:36Z"}, "message": "Properly regenerate gcc/configure.\n\n\tgcc/\n\t* configure: Regenerate.\n\nFrom-SVN: r215532", "tree": {"sha": "b67f759fe3caac26e1ef65c62c1df8fa6d73801d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b67f759fe3caac26e1ef65c62c1df8fa6d73801d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a4fa5dcae09e1c819a937e9aeeb5e5551837223", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a4fa5dcae09e1c819a937e9aeeb5e5551837223", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a4fa5dcae09e1c819a937e9aeeb5e5551837223", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a4fa5dcae09e1c819a937e9aeeb5e5551837223/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ed052e94aa6ed5dba5e0cdbcc6598e26c01a4155", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed052e94aa6ed5dba5e0cdbcc6598e26c01a4155", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed052e94aa6ed5dba5e0cdbcc6598e26c01a4155"}], "stats": {"total": 36, "additions": 6, "deletions": 30}, "files": [{"sha": "f2b7b2dd79401d9cac48cf82a4f45dccc739f0ca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a4fa5dcae09e1c819a937e9aeeb5e5551837223/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a4fa5dcae09e1c819a937e9aeeb5e5551837223/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a4fa5dcae09e1c819a937e9aeeb5e5551837223", "patch": "@@ -1,3 +1,7 @@\n+2014-09-23  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* configure: Regenerate.\n+\n 2014-09-23  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* combine.c (simplify_shift_const_1): Allow commuting (ashiftrt (xor))"}, {"sha": "380a235860ab5bba8dddc33c425016baed2b7187", "filename": "gcc/configure", "status": "modified", "additions": 2, "deletions": 30, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a4fa5dcae09e1c819a937e9aeeb5e5551837223/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a4fa5dcae09e1c819a937e9aeeb5e5551837223/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=2a4fa5dcae09e1c819a937e9aeeb5e5551837223", "patch": "@@ -6607,35 +6607,7 @@ fi\n if test $enable_werror_always = yes; then :\n   strict_warn=\"$strict_warn${strict_warn:+ }-Werror\"\n fi\n- if test \"xmanual\" != xmanual; then :\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC is GCC >=manual\" >&5\n-$as_echo_n \"checking whether $CC is GCC >=manual... \" >&6; }\n-if test \"${acx_cv_prog_cc_gcc_manual_or_newer+set}\" = set; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  set fnord `echo manual | tr '.' ' '`\n-     shift\n-     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-#if __GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__ \\\n-  < $1 * 10000 + $2 * 100 + $3\n-#error insufficient\n-#endif\n-_ACEOF\n-if ac_fn_c_try_cpp \"$LINENO\"; then :\n-  acx_cv_prog_cc_gcc_manual_or_newer=yes\n-else\n-  acx_cv_prog_cc_gcc_manual_or_newer=no\n-fi\n-rm -f conftest.err conftest.$ac_ext\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $acx_cv_prog_cc_gcc_manual_or_newer\" >&5\n-$as_echo \"$acx_cv_prog_cc_gcc_manual_or_newer\" >&6; }\n- if test $acx_cv_prog_cc_gcc_manual_or_newer = yes; then :\n-  strict_warn=\"$strict_warn${strict_warn:+ }-Werror\"\n-fi\n \n-fi\n \n \n # The above macros do nothing if the compiler is not GCC.  However, the\n@@ -18077,7 +18049,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18080 \"configure\"\n+#line 18052 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18183,7 +18155,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18186 \"configure\"\n+#line 18158 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}]}