{"sha": "b2b7d40a91814eacee40e1b0539426ae7b8b27dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJiN2Q0MGE5MTgxNGVhY2VlNDBlMWIwNTM5NDI2YWU3YjhiMjdkYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-02-28T12:19:29Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-02-28T12:19:29Z"}, "message": "cp-tree.h (TYPENAME_TYPE_FULLNAME): New macro.\n\n\t* cp-tree.h (TYPENAME_TYPE_FULLNAME): New macro.\n\t* parse.y (nested_name_specifier): Add 'template' case.\n\t(explicit_template_type): New rule.\n\t(typename_sub): Use it.\n\t* decl.c (make_typename_type): Handle getting a template-id for NAME.\n\t* pt.c (tsubst): Likewise.\n\nFrom-SVN: r18296", "tree": {"sha": "0546fc238ee8b670c7ed22a5ff31450097b5e8e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0546fc238ee8b670c7ed22a5ff31450097b5e8e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2b7d40a91814eacee40e1b0539426ae7b8b27dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2b7d40a91814eacee40e1b0539426ae7b8b27dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2b7d40a91814eacee40e1b0539426ae7b8b27dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2b7d40a91814eacee40e1b0539426ae7b8b27dc/comments", "author": null, "committer": null, "parents": [{"sha": "5feca98414e6dfd82e6bf2315478443004bc21b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5feca98414e6dfd82e6bf2315478443004bc21b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5feca98414e6dfd82e6bf2315478443004bc21b1"}], "stats": {"total": 6856, "additions": 3464, "deletions": 3392}, "files": [{"sha": "79e371db5e8170cb2cdf39244628689c2aa93eb4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2b7d40a91814eacee40e1b0539426ae7b8b27dc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2b7d40a91814eacee40e1b0539426ae7b8b27dc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b2b7d40a91814eacee40e1b0539426ae7b8b27dc", "patch": "@@ -1,3 +1,12 @@\n+Sat Feb 28 12:06:44 1998  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* cp-tree.h (TYPENAME_TYPE_FULLNAME): New macro.\n+\t* parse.y (nested_name_specifier): Add 'template' case.\n+\t(explicit_template_type): New rule.\n+\t(typename_sub): Use it.\n+\t* decl.c (make_typename_type): Handle getting a template-id for NAME.\n+\t* pt.c (tsubst): Likewise.\n+\n Fri Feb 27 11:17:50 1998  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* pt.c (add_to_template_args): Fix thinko."}, {"sha": "c657471a8b463f5d27d29c381370dce40747334d", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 37, "deletions": 9, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2b7d40a91814eacee40e1b0539426ae7b8b27dc/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2b7d40a91814eacee40e1b0539426ae7b8b27dc/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=b2b7d40a91814eacee40e1b0539426ae7b8b27dc", "patch": "@@ -4474,33 +4474,61 @@ make_typename_type (context, name)\n      tree context, name;\n {\n   tree t, d;\n+  tree fullname;\n \n   if (TREE_CODE_CLASS (TREE_CODE (name)) == 't')\n     name = TYPE_IDENTIFIER (name);\n   else if (TREE_CODE (name) == TYPE_DECL)\n     name = DECL_NAME (name);\n-  else if (TREE_CODE (name) != IDENTIFIER_NODE)\n+\n+  fullname = name;\n+\n+  if (TREE_CODE (name) == TEMPLATE_ID_EXPR)\n+    name = TREE_OPERAND (name, 0);\n+  if (TREE_CODE (name) != IDENTIFIER_NODE)\n     my_friendly_abort (2000);\n \n   if (! uses_template_parms (context)\n       || context == current_class_type)\n     {\n-      if (IS_AGGR_TYPE (context))\n-\tt = lookup_field (context, name, 0, 1);\n-      else\n-\tt = NULL_TREE;\n+      if (TREE_CODE (fullname) == TEMPLATE_ID_EXPR)\n+\t{\n+\t  if (IS_AGGR_TYPE (context))\n+\t    t = lookup_field (context, name, 0, 0);\n+\t  else\n+\t    t = NULL_TREE;\n+\n+\t  if (t == NULL_TREE || TREE_CODE (t) != TEMPLATE_DECL\n+\t      || TREE_CODE (DECL_RESULT (t)) != TYPE_DECL)\n+\t    {\n+\t      cp_error (\"no class template named `%#T' in `%#T'\",\n+\t\t\tname, context);\n+\t      return error_mark_node;\n+\t    }\n \n-      if (t == NULL_TREE)\n+\t  return lookup_template_class (t, TREE_OPERAND (fullname, 1),\n+\t\t\t\t\tNULL_TREE, context);\n+\t}\n+      else\n \t{\n-\t  cp_error (\"no type named `%#T' in `%#T'\", name, context);\n-\t  return error_mark_node;\n+\t  if (IS_AGGR_TYPE (context))\n+\t    t = lookup_field (context, name, 0, 1);\n+\t  else\n+\t    t = NULL_TREE;\n+\n+\t  if (t == NULL_TREE)\n+\t    {\n+\t      cp_error (\"no type named `%#T' in `%#T'\", name, context);\n+\t      return error_mark_node;\n+\t    }\n+\t  return TREE_TYPE (t);\n \t}\n-      return TREE_TYPE (t);\n     }\n \n   if (processing_template_decl)\n     push_obstacks (&permanent_obstack, &permanent_obstack);\n   t = make_lang_type (TYPENAME_TYPE);\n+  TYPENAME_TYPE_FULLNAME (t) = fullname;\n   d = build_decl (TYPE_DECL, name, t);\n   if (processing_template_decl)\n     pop_obstacks ();"}, {"sha": "f1a437357a83bd091c5a122867d4ca04a243a2a1", "filename": "gcc/cp/parse.c", "status": "modified", "additions": 3406, "deletions": 3382, "changes": 6788, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2b7d40a91814eacee40e1b0539426ae7b8b27dc/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2b7d40a91814eacee40e1b0539426ae7b8b27dc/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=b2b7d40a91814eacee40e1b0539426ae7b8b27dc"}, {"sha": "4cae11ebdbb9e5c23b5f234b50b2751af30a7891", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2b7d40a91814eacee40e1b0539426ae7b8b27dc/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2b7d40a91814eacee40e1b0539426ae7b8b27dc/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=b2b7d40a91814eacee40e1b0539426ae7b8b27dc", "patch": "@@ -265,6 +265,7 @@ empty_parms ()\n %type <ttype> new_initializer new_placement\n %type <ttype> using_decl .poplevel\n %type <ttype> typename_sub typename_sub0 typename_sub1 typename_sub2\n+%type <ttype> explicit_template_type\n /* in order to recognize aggr tags as defining and thus shadowing.  */\n %token TYPENAME_DEFN IDENTIFIER_DEFN PTYPENAME_DEFN\n %type <ttype> named_class_head_sans_basetype_defn\n@@ -3168,6 +3169,8 @@ nested_name_specifier:\n \t  nested_name_specifier_1\n \t| nested_name_specifier nested_name_specifier_1\n \t\t{ $$ = $2; }\n+\t| nested_name_specifier TEMPLATE template_type SCOPE\n+\t\t{ got_scope = $$ = complete_type (TREE_TYPE ($3)); }\n \t;\n \n /* Why the @#$%^& do type_name and notype_identifier need to be expanded\n@@ -3254,6 +3257,8 @@ typename_sub1:\n \t\t\t$$ = TREE_TYPE ($$);\n \t\t    }\n \t\t}\n+\t| typename_sub1 explicit_template_type SCOPE\n+\t\t{ got_scope = $$ = make_typename_type ($1, $2); }\n \t;\n \n typename_sub2:\n@@ -3285,6 +3290,11 @@ typename_sub2:\n \t\t}\n \t;\n \n+explicit_template_type:\n+\t  TEMPLATE identifier '<' template_arg_list_opt template_close_bracket\n+\t\t{ $$ = build_min_nt (TEMPLATE_ID_EXPR, $2, $4); }\n+\t;\n+\n complex_type_name:\n \t  global_scope type_name\n \t\t{"}, {"sha": "b02aa500bd411a63c06c2e3b46fea7a67f981525", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2b7d40a91814eacee40e1b0539426ae7b8b27dc/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2b7d40a91814eacee40e1b0539426ae7b8b27dc/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=b2b7d40a91814eacee40e1b0539426ae7b8b27dc", "patch": "@@ -4288,7 +4288,8 @@ tsubst (t, args, in_decl)\n     case TYPENAME_TYPE:\n       {\n \ttree ctx = tsubst (TYPE_CONTEXT (t), args, in_decl);\n-\ttree f = make_typename_type (ctx, TYPE_IDENTIFIER (t));\n+\ttree f = tsubst_copy (TYPENAME_TYPE_FULLNAME (t), args, in_decl);\n+\tf = make_typename_type (ctx, f);\n \treturn cp_build_type_variant\n \t  (f, TYPE_READONLY (f) || TYPE_READONLY (t),\n \t   TYPE_VOLATILE (f) || TYPE_VOLATILE (t));"}]}