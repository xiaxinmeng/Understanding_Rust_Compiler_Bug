{"sha": "7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2I0OWM5ZTFjMGE0OGViMGIxOTFiZjJmNjUwZDEzM2EwYzcwOTNhOQ==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2013-09-06T13:37:56Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2013-09-06T13:37:56Z"}, "message": "[ARM,AARCH64] Insn type reclassification. Split f_cvt type.\n\ngcc/\n\t* config/arm/types.md\n\t(type): Split f_cvt as f_cvt, f_cvtf2i, f_cvti2f.\n\t* config/aarch64/aarch64.md\n\t(l<fcvt_pattern><su_optab><GPF:mode><GPI:mode>2): Update with\n\tnew attributes.\n\t(fix_trunc<GPF:mode><GPI:mode>2): Likewise.\n\t(fixuns_trunc<GPF:mode><GPI:mode>2): Likewise.\n\t(float<GPI:mode><GPF:mode>2): Likewise.\n\t* config/arm/vfp.md\n\t(*truncsisf2_vfp): Update with new attributes.\n\t(*truncsidf2_vfp): Likewise.\n\t(fixuns_truncsfsi2): Likewise.\n\t(fixuns_truncdfsi2): Likewise.\n\t(*floatsisf2_vfp): Likewise.\n\t(*floatsidf2_vfp): Likewise.\n\t(floatunssisf2): Likewise.\n\t(floatunssidf2): Likewise.\n\t(*combine_vcvt_f32_<FCVTI32typename>): Likewise.\n\t(*combine_vcvt_f64_<FCVTI32typename>): Likewise.\n\t* config/arm/arm1020e.md: Update with new attributes.\n\t* config/arm/cortex-a15-neon.md: Update with new attributes.\n\t* config/arm/cortex-a5.md: Update with new attributes.\n\t* config/arm/cortex-a53.md: Update with new attributes.\n\t* config/arm/cortex-a7.md: Update with new attributes.\n\t* config/arm/cortex-a8-neon.md: Update with new attributes.\n\t* config/arm/cortex-a9.md: Update with new attributes.\n\t* config/arm/cortex-m4-fpu.md: Update with new attributes.\n\t* config/arm/cortex-r4f.md: Update with new attributes.\n\t* config/arm/marvell-pj4.md: Update with new attributes.\n\t* config/arm/vfp11.md: Update with new attributes.\n\nFrom-SVN: r202328", "tree": {"sha": "56297e4bc4e6a28711d4dd7cb44eade5dc2c5647", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56297e4bc4e6a28711d4dd7cb44eade5dc2c5647"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e7df8af8d5cba8191e3e8969f43478c397efce9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7df8af8d5cba8191e3e8969f43478c397efce9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7df8af8d5cba8191e3e8969f43478c397efce9b"}], "stats": {"total": 93, "additions": 67, "deletions": 26}, "files": [{"sha": "d70d0e4e5b8971193ca743c3569991b56abdf267", "filename": "gcc/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9", "patch": "@@ -1,3 +1,36 @@\n+2013-09-06  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config/arm/types.md\n+\t(type): Split f_cvt as f_cvt, f_cvtf2i, f_cvti2f.\n+\t* config/aarch64/aarch64.md\n+\t(l<fcvt_pattern><su_optab><GPF:mode><GPI:mode>2): Update with\n+\tnew attributes.\n+\t(fix_trunc<GPF:mode><GPI:mode>2): Likewise.\n+\t(fixuns_trunc<GPF:mode><GPI:mode>2): Likewise.\n+\t(float<GPI:mode><GPF:mode>2): Likewise.\n+\t* config/arm/vfp.md\n+\t(*truncsisf2_vfp): Update with new attributes.\n+\t(*truncsidf2_vfp): Likewise.\n+\t(fixuns_truncsfsi2): Likewise.\n+\t(fixuns_truncdfsi2): Likewise.\n+\t(*floatsisf2_vfp): Likewise.\n+\t(*floatsidf2_vfp): Likewise.\n+\t(floatunssisf2): Likewise.\n+\t(floatunssidf2): Likewise.\n+\t(*combine_vcvt_f32_<FCVTI32typename>): Likewise.\n+\t(*combine_vcvt_f64_<FCVTI32typename>): Likewise.\n+\t* config/arm/arm1020e.md: Update with new attributes.\n+\t* config/arm/cortex-a15-neon.md: Update with new attributes.\n+\t* config/arm/cortex-a5.md: Update with new attributes.\n+\t* config/arm/cortex-a53.md: Update with new attributes.\n+\t* config/arm/cortex-a7.md: Update with new attributes.\n+\t* config/arm/cortex-a8-neon.md: Update with new attributes.\n+\t* config/arm/cortex-a9.md: Update with new attributes.\n+\t* config/arm/cortex-m4-fpu.md: Update with new attributes.\n+\t* config/arm/cortex-r4f.md: Update with new attributes.\n+\t* config/arm/marvell-pj4.md: Update with new attributes.\n+\t* config/arm/vfp11.md: Update with new attributes.\n+\n 2013-09-06  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/aarch64/arm_neon.h"}, {"sha": "6a4a975bb89c48311659db0091c76266d29cdba2", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9", "patch": "@@ -3685,7 +3685,7 @@\n   \"TARGET_FLOAT\"\n   \"fcvt<frint_suffix><su>\\\\t%<GPI:w>0, %<GPF:s>1\"\n   [(set_attr \"v8type\" \"fcvtf2i\")\n-   (set_attr \"type\" \"f_cvt\")\n+   (set_attr \"type\" \"f_cvtf2i\")\n    (set_attr \"mode\" \"<GPF:MODE>\")\n    (set_attr \"mode2\" \"<GPI:MODE>\")]\n )\n@@ -3785,7 +3785,7 @@\n   \"TARGET_FLOAT\"\n   \"fcvtzs\\\\t%<GPI:w>0, %<GPF:s>1\"\n   [(set_attr \"v8type\" \"fcvtf2i\")\n-   (set_attr \"type\" \"f_cvt\")\n+   (set_attr \"type\" \"f_cvtf2i\")\n    (set_attr \"mode\" \"<GPF:MODE>\")\n    (set_attr \"mode2\" \"<GPI:MODE>\")]\n )\n@@ -3796,7 +3796,7 @@\n   \"TARGET_FLOAT\"\n   \"fcvtzu\\\\t%<GPI:w>0, %<GPF:s>1\"\n   [(set_attr \"v8type\" \"fcvtf2i\")\n-   (set_attr \"type\" \"f_cvt\")\n+   (set_attr \"type\" \"f_cvtf2i\")\n    (set_attr \"mode\" \"<GPF:MODE>\")\n    (set_attr \"mode2\" \"<GPI:MODE>\")]\n )\n@@ -3807,7 +3807,7 @@\n   \"TARGET_FLOAT\"\n   \"scvtf\\\\t%<GPF:s>0, %<GPI:w>1\"\n   [(set_attr \"v8type\" \"fcvti2f\")\n-   (set_attr \"type\" \"f_cvt\")\n+   (set_attr \"type\" \"f_cvti2f\")\n    (set_attr \"mode\" \"<GPF:MODE>\")\n    (set_attr \"mode2\" \"<GPI:MODE>\")]\n )"}, {"sha": "e16e862c1f49b36f75ba1faf20c2095fb9aeacdf", "filename": "gcc/config/arm/arm1020e.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Farm%2Farm1020e.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Farm%2Farm1020e.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm1020e.md?ref=7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9", "patch": "@@ -289,7 +289,7 @@\n \n (define_insn_reservation \"v10_cvt\" 5\n  (and (eq_attr \"vfp10\" \"yes\")\n-      (eq_attr \"type\" \"f_cvt\"))\n+      (eq_attr \"type\" \"f_cvt,f_cvti2f,f_cvtf2i\"))\n  \"1020a_e+v10_fmac\")\n \n (define_insn_reservation \"v10_fmul\" 6"}, {"sha": "b5d14e7f7f9c3965e02e0d6e0edf0044df341812", "filename": "gcc/config/arm/cortex-a15-neon.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Farm%2Fcortex-a15-neon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Farm%2Fcortex-a15-neon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a15-neon.md?ref=7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9", "patch": "@@ -471,7 +471,7 @@\n \n (define_insn_reservation \"cortex_a15_vfp_cvt\" 6\n   (and (eq_attr \"tune\" \"cortexa15\")\n-       (eq_attr \"type\" \"f_cvt\"))\n+       (eq_attr \"type\" \"f_cvt,f_cvtf2i,f_cvti2f\"))\n   \"ca15_issue1,ca15_cx_vfp\")\n \n (define_insn_reservation \"cortex_a15_vfp_cmpd\" 8"}, {"sha": "54c8c420324a155523bc961917c475c5aeb86a96", "filename": "gcc/config/arm/cortex-a5.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Farm%2Fcortex-a5.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Farm%2Fcortex-a5.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a5.md?ref=7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9", "patch": "@@ -168,7 +168,8 @@\n \n (define_insn_reservation \"cortex_a5_fpalu\" 4\n   (and (eq_attr \"tune\" \"cortexa5\")\n-       (eq_attr \"type\" \"ffariths, fadds, ffarithd, faddd, fcpys, fmuls, f_cvt,\\\n+       (eq_attr \"type\" \"ffariths, fadds, ffarithd, faddd, fcpys, fmuls,\\\n+                        f_cvt,f_cvtf2i,f_cvti2f,\\\n \t\t\tfcmps, fcmpd\"))\n   \"cortex_a5_ex1+cortex_a5_fpadd_pipe\")\n "}, {"sha": "e84b9ea1a71ef1df2476d3b25900522469074914", "filename": "gcc/config/arm/cortex-a53.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Farm%2Fcortex-a53.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Farm%2Fcortex-a53.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a53.md?ref=7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9", "patch": "@@ -209,7 +209,8 @@\n \n (define_insn_reservation \"cortex_a53_fpalu\" 4\n   (and (eq_attr \"tune\" \"cortexa53\")\n-       (eq_attr \"type\" \"ffariths, fadds, ffarithd, faddd, fcpys, fmuls, f_cvt,\\\n+       (eq_attr \"type\" \"ffariths, fadds, ffarithd, faddd, fcpys, fmuls,\\\n+                        f_cvt,f_cvtf2i,f_cvti2f,\\\n \t\t\tfcmps, fcmpd, fcsel\"))\n   \"cortex_a53_slot0+cortex_a53_fpadd_pipe\")\n "}, {"sha": "6d7b43685a3afe8f89e7b1d9f336326f511fea7b", "filename": "gcc/config/arm/cortex-a7.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Farm%2Fcortex-a7.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Farm%2Fcortex-a7.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a7.md?ref=7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9", "patch": "@@ -205,7 +205,7 @@\n (define_insn_reservation \"cortex_a7_fpalu\" 4\n   (and (eq_attr \"tune\" \"cortexa7\")\n        (eq_attr \"type\" \"ffariths, fadds, ffarithd, faddd, fcpys,\\\n-                        f_cvt, fcmps, fcmpd\"))\n+                        f_cvt, f_cvtf2i, f_cvti2f, fcmps, fcmpd\"))\n   \"cortex_a7_ex1+cortex_a7_fpadd_pipe\")\n \n ;; For fconsts and fconstd, 8-bit immediate data is passed directly from"}, {"sha": "6953a9590a5c486bf4817ff2521caa299c8ecf93", "filename": "gcc/config/arm/cortex-a8-neon.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Farm%2Fcortex-a8-neon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Farm%2Fcortex-a8-neon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a8-neon.md?ref=7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9", "patch": "@@ -177,7 +177,7 @@\n \n (define_insn_reservation \"cortex_a8_vfp_cvt\" 7\n   (and (eq_attr \"tune\" \"cortexa8\")\n-       (eq_attr \"type\" \"f_cvt\"))\n+       (eq_attr \"type\" \"f_cvt,f_cvtf2i,f_cvti2f\"))\n   \"cortex_a8_vfp,cortex_a8_vfplite*6\")\n \n ;; NEON -> core transfers."}, {"sha": "a66481807cf4c9263d0b565b370d6057d21a043e", "filename": "gcc/config/arm/cortex-a9.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Farm%2Fcortex-a9.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Farm%2Fcortex-a9.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-a9.md?ref=7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9", "patch": "@@ -233,7 +233,7 @@ cortex_a9_store3_4, cortex_a9_store1_2,  cortex_a9_load3_4\")\n \n (define_insn_reservation \"cortex_a9_fadd\" 4\n   (and (eq_attr \"tune\" \"cortexa9\")\n-       (eq_attr \"type\" \"fadds, faddd, f_cvt\"))\n+       (eq_attr \"type\" \"fadds, faddd, f_cvt, f_cvtf2i, f_cvti2f\"))\n   \"ca9fp_add\")\n \n (define_insn_reservation \"cortex_a9_fcmp\" 1"}, {"sha": "81c12b74f65cf6fe113b77cb4368af5383916c44", "filename": "gcc/config/arm/cortex-m4-fpu.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Farm%2Fcortex-m4-fpu.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Farm%2Fcortex-m4-fpu.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-m4-fpu.md?ref=7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9", "patch": "@@ -77,7 +77,7 @@\n \n (define_insn_reservation \"cortex_m4_f_cvt\" 2\n   (and (eq_attr \"tune\" \"cortexm4\")\n-       (eq_attr \"type\" \"f_cvt\"))\n+       (eq_attr \"type\" \"f_cvt,f_cvtf2i,f_cvti2f\"))\n   \"cortex_m4_ex_v\")\n \n (define_insn_reservation \"cortex_m4_f_load\" 2"}, {"sha": "06e061e2b1451afcd7207186a2875cc2da3c771c", "filename": "gcc/config/arm/cortex-r4f.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Farm%2Fcortex-r4f.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Farm%2Fcortex-r4f.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcortex-r4f.md?ref=7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9", "patch": "@@ -146,7 +146,7 @@\n \n (define_insn_reservation \"cortex_r4_f_cvt\" 8\n  (and (eq_attr \"tune_cortexr4\" \"yes\")\n-      (eq_attr \"type\" \"f_cvt\"))\n+      (eq_attr \"type\" \"f_cvt,f_cvtf2i,f_cvti2f\"))\n  \"cortex_r4_single_issue*3\")\n \n (define_insn_reservation \"cortex_r4_f_memd\" 8"}, {"sha": "d9cf8d4b6b57967be185bcb5f9be0b4f6e2faf9a", "filename": "gcc/config/arm/marvell-pj4.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Farm%2Fmarvell-pj4.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Farm%2Fmarvell-pj4.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fmarvell-pj4.md?ref=7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9", "patch": "@@ -209,7 +209,8 @@\n (define_insn_reservation \"pj4_vfp_cpy\"  4\n   (and (eq_attr \"tune\" \"marvell_pj4\")\n        (eq_attr \"type\" \"fcpys,ffariths,ffarithd,fconsts,fconstd,\\\n-                        fcmps,fcmpd,f_cvt\"))  \"pj4_is,nothing*2,vissue,vfast,nothing*2\")\n+                        fcmps,fcmpd,f_cvt,f_cvtf2i,f_cvti2f\"))\n+\"pj4_is,nothing*2,vissue,vfast,nothing*2\")\n \n ;; Enlarge latency, and wish that more nondependent insns are\n ;; scheduled immediately after VFP load."}, {"sha": "de817634ec98c4c568ade6d1e3d5a8910d886075", "filename": "gcc/config/arm/types.md", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Farm%2Ftypes.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Farm%2Ftypes.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ftypes.md?ref=7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9", "patch": "@@ -55,7 +55,9 @@\n ; clz                count leading zeros (CLZ).\n ; csel               From ARMv8-A: conditional select.\n ; extend             extend instruction (SXTB, SXTH, UXTB, UXTH).\n-; f_cvt              conversion between float and integral.\n+; f_cvt              conversion between float representations.\n+; f_cvtf2i           conversion between float and integral types.\n+; f_cvti2f           conversion between integral and float types.\n ; f_flag             transfer of co-processor flags to the CPSR.\n ; f_load[d,s]        double/single load from memory.  Used for VFP unit.\n ; f_mcr              transfer arm to vfp reg.\n@@ -311,6 +313,8 @@\n   csel,\\\n   extend,\\\n   f_cvt,\\\n+  f_cvtf2i,\\\n+  f_cvti2f,\\\n   f_flag,\\\n   f_loadd,\\\n   f_loads,\\"}, {"sha": "0e61c6eff004cf764d4fd801a508049f18a1e09f", "filename": "gcc/config/arm/vfp.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Farm%2Fvfp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Farm%2Fvfp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvfp.md?ref=7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9", "patch": "@@ -991,7 +991,7 @@\n   \"ftosizs%?\\\\t%0, %1\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n-   (set_attr \"type\" \"f_cvt\")]\n+   (set_attr \"type\" \"f_cvtf2i\")]\n )\n \n (define_insn \"*truncsidf2_vfp\"\n@@ -1001,7 +1001,7 @@\n   \"ftosizd%?\\\\t%0, %P1\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n-   (set_attr \"type\" \"f_cvt\")]\n+   (set_attr \"type\" \"f_cvtf2i\")]\n )\n \n \n@@ -1012,7 +1012,7 @@\n   \"ftouizs%?\\\\t%0, %1\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n-   (set_attr \"type\" \"f_cvt\")]\n+   (set_attr \"type\" \"f_cvtf2i\")]\n )\n \n (define_insn \"fixuns_truncdfsi2\"\n@@ -1022,7 +1022,7 @@\n   \"ftouizd%?\\\\t%0, %P1\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n-   (set_attr \"type\" \"f_cvt\")]\n+   (set_attr \"type\" \"f_cvtf2i\")]\n )\n \n \n@@ -1033,7 +1033,7 @@\n   \"fsitos%?\\\\t%0, %1\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n-   (set_attr \"type\" \"f_cvt\")]\n+   (set_attr \"type\" \"f_cvti2f\")]\n )\n \n (define_insn \"*floatsidf2_vfp\"\n@@ -1043,7 +1043,7 @@\n   \"fsitod%?\\\\t%P0, %1\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n-   (set_attr \"type\" \"f_cvt\")]\n+   (set_attr \"type\" \"f_cvti2f\")]\n )\n \n \n@@ -1054,7 +1054,7 @@\n   \"fuitos%?\\\\t%0, %1\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n-   (set_attr \"type\" \"f_cvt\")]\n+   (set_attr \"type\" \"f_cvti2f\")]\n )\n \n (define_insn \"floatunssidf2\"\n@@ -1064,7 +1064,7 @@\n   \"fuitod%?\\\\t%P0, %1\"\n   [(set_attr \"predicable\" \"yes\")\n    (set_attr \"predicable_short_it\" \"no\")\n-   (set_attr \"type\" \"f_cvt\")]\n+   (set_attr \"type\" \"f_cvti2f\")]\n )\n \n \n@@ -1229,7 +1229,7 @@\n   \"TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP3 && !flag_rounding_math\"\n   \"vcvt.f32.<FCVTI32typename>\\\\t%0, %1, %v2\"\n  [(set_attr \"predicable\" \"no\")\n-  (set_attr \"type\" \"f_cvt\")]\n+  (set_attr \"type\" \"f_cvti2f\")]\n )\n \n ;; Not the ideal way of implementing this. Ideally we would be able to split\n@@ -1246,7 +1246,7 @@\n   vmov.f32\\\\t%0, %1\\;vcvt.f64.<FCVTI32typename>\\\\t%P0, %P0, %v2\n   vmov.f64\\\\t%P0, %1, %1\\;vcvt.f64.<FCVTI32typename>\\\\t%P0, %P0, %v2\"\n  [(set_attr \"predicable\" \"no\")\n-  (set_attr \"type\" \"f_cvt\")\n+  (set_attr \"type\" \"f_cvti2f\")\n   (set_attr \"length\" \"8\")]\n )\n "}, {"sha": "3cc343e0186d3d64b4f43360a5d94c0429706efa", "filename": "gcc/config/arm/vfp11.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Farm%2Fvfp11.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9/gcc%2Fconfig%2Farm%2Fvfp11.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvfp11.md?ref=7b49c9e1c0a48eb0b191bf2f650d133a0c7093a9", "patch": "@@ -56,7 +56,8 @@\n \n (define_insn_reservation \"vfp_farith\" 8\n  (and (eq_attr \"generic_vfp\" \"yes\")\n-      (eq_attr \"type\" \"fadds,faddd,fconsts,fconstd,f_cvt,fmuls,fmacs,ffmas\"))\n+      (eq_attr \"type\" \"fadds,faddd,fconsts,fconstd,f_cvt,f_cvtf2i,f_cvti2f,\\\n+                       fmuls,fmacs,ffmas\"))\n  \"fmac\")\n \n (define_insn_reservation \"vfp_fmul\" 9"}]}