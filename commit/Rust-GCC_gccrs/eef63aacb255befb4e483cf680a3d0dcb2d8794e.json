{"sha": "eef63aacb255befb4e483cf680a3d0dcb2d8794e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWVmNjNhYWNiMjU1YmVmYjRlNDgzY2Y2ODBhM2QwZGNiMmQ4Nzk0ZQ==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-06-30T13:59:43Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2020-06-30T15:32:39Z"}, "message": "coroutines: Fix a diagnostic trailing space warning.\n\nA recently add diagnostic has a trailing space.\nFixed thus.\n\ngcc/cp/ChangeLog:\n\n\t* coroutines.cc (morph_fn_to_coro): Remove trailing\n\tspace in a diagnostic.", "tree": {"sha": "3c7e4c90fd17e247a7c09861aafbd7b71cbb2be4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c7e4c90fd17e247a7c09861aafbd7b71cbb2be4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eef63aacb255befb4e483cf680a3d0dcb2d8794e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eef63aacb255befb4e483cf680a3d0dcb2d8794e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eef63aacb255befb4e483cf680a3d0dcb2d8794e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eef63aacb255befb4e483cf680a3d0dcb2d8794e/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c3b4224875d7b8bfd4126b9dd1d9cb028997285", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c3b4224875d7b8bfd4126b9dd1d9cb028997285", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c3b4224875d7b8bfd4126b9dd1d9cb028997285"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "bec7f2f20276709ca43083ebe0d733a48eda2a3a", "filename": "gcc/cp/coroutines.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eef63aacb255befb4e483cf680a3d0dcb2d8794e/gcc%2Fcp%2Fcoroutines.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eef63aacb255befb4e483cf680a3d0dcb2d8794e/gcc%2Fcp%2Fcoroutines.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcoroutines.cc?ref=eef63aacb255befb4e483cf680a3d0dcb2d8794e", "patch": "@@ -4119,7 +4119,7 @@ morph_fn_to_coro (tree orig, tree *resumer, tree *destroyer)\n     else if (!grooaf && TYPE_NOTHROW_P (TREE_TYPE (func)))\n       warning_at (fn_start, 0, \"%qE is marked %<throw()%> or %<noexcept%> but\"\n \t\t  \" no usable %<get_return_object_on_allocation_failure%>\"\n-\t\t  \" is provided by %qT \", nwname, promise_type);\n+\t\t  \" is provided by %qT\", nwname, promise_type);\n     }\n   else /* No operator new in the promise.  */\n     {"}]}