{"sha": "fba303ed8c190cc2b8695d737efd7af409596398", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJhMzAzZWQ4YzE5MGNjMmI4Njk1ZDczN2VmZDdhZjQwOTU5NjM5OA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2018-02-14T22:02:43Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2018-02-14T22:02:43Z"}, "message": "PR middle-end/84108 - incorrect -Wattributes warning for packed/aligned conflict on struct members\n\ngcc/ChangeLog:\n\n\tPR c/84108\n\t* attribs.c (diag_attr_exclusions): Consider the exclusion(s)\n\tthat correspond to the kind of a declaration.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c/84108\n\t* gcc.dg/Wattributes-8.c: New test.\n\nFrom-SVN: r257674", "tree": {"sha": "002e7f40bf82a0465272aea8e6c554cac2590d82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/002e7f40bf82a0465272aea8e6c554cac2590d82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fba303ed8c190cc2b8695d737efd7af409596398", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fba303ed8c190cc2b8695d737efd7af409596398", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fba303ed8c190cc2b8695d737efd7af409596398", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fba303ed8c190cc2b8695d737efd7af409596398/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ee3bb1b7a2f73c9ccc99b0861e8a3408d408ca2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee3bb1b7a2f73c9ccc99b0861e8a3408d408ca2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee3bb1b7a2f73c9ccc99b0861e8a3408d408ca2d"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "e16acd45413e62ca271d9bdfd27b752f734c55c7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba303ed8c190cc2b8695d737efd7af409596398/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba303ed8c190cc2b8695d737efd7af409596398/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fba303ed8c190cc2b8695d737efd7af409596398", "patch": "@@ -1,3 +1,9 @@\n+2018-02-14  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/84108\n+\t* attribs.c (diag_attr_exclusions): Consider the exclusion(s)\n+\tthat correspond to the kind of a declaration.\n+\n 2018-02-14  John David Anglin  <danglin@gcc.gnu.org>\n \n \tPR target/83984"}, {"sha": "140863be1d955e3b8f4d3fa5f9f90ba804ae700c", "filename": "gcc/attribs.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba303ed8c190cc2b8695d737efd7af409596398/gcc%2Fattribs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba303ed8c190cc2b8695d737efd7af409596398/gcc%2Fattribs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattribs.c?ref=fba303ed8c190cc2b8695d737efd7af409596398", "patch": "@@ -410,6 +410,22 @@ diag_attr_exclusions (tree last_decl, tree node, tree attrname,\n \t  if (!lookup_attribute (excl->name, attrs[i]))\n \t    continue;\n \n+\t  /* An exclusion may apply either to a function declaration,\n+\t     type declaration, or a field/variable declaration, or\n+\t     any subset of the three.  */\n+\t  if (TREE_CODE (node) == FUNCTION_DECL\n+\t      && !excl->function)\n+\t    continue;\n+\n+\t  if (TREE_CODE (node) == TYPE_DECL\n+\t      && !excl->type)\n+\t    continue;\n+\n+\t  if ((TREE_CODE (node) == FIELD_DECL\n+\t       || TREE_CODE (node) == VAR_DECL)\n+\t      && !excl->variable)\n+\t    continue;\n+\n \t  found = true;\n \n \t  /* Print a note?  */"}, {"sha": "2044efc69978fcc77c4c292ef5da611b1e5b8f13", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba303ed8c190cc2b8695d737efd7af409596398/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba303ed8c190cc2b8695d737efd7af409596398/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fba303ed8c190cc2b8695d737efd7af409596398", "patch": "@@ -1,3 +1,8 @@\n+2018-02-14  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR c/84108\n+\t* gcc.dg/Wattributes-8.c: New test.\n+\n 2018-02-14  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/84385"}, {"sha": "a4b4c00c08f4470c6bccb4f319a85860971bf409", "filename": "gcc/testsuite/gcc.dg/Wattributes-8.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fba303ed8c190cc2b8695d737efd7af409596398/gcc%2Ftestsuite%2Fgcc.dg%2FWattributes-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fba303ed8c190cc2b8695d737efd7af409596398/gcc%2Ftestsuite%2Fgcc.dg%2FWattributes-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWattributes-8.c?ref=fba303ed8c190cc2b8695d737efd7af409596398", "patch": "@@ -0,0 +1,38 @@\n+/* PR middle-end/84108 - incorrect -Wattributes warning for packed/aligned\n+   conflict on struct members\n+   { dg-do compile }\n+   { dg-options \"-Wall -Wattributes\" } */\n+\n+#define ATTR(list) __attribute__ (list)\n+#define ASSERT(e) _Static_assert (e, #e)\n+\n+/* GCC is inconsistent in how it treats attribute aligned between\n+   variable and member declarations.  Attribute aligned alone is\n+   sufficient to reduce a variable's alignment requirement but\n+   the attribute must be paired with packed to have the same\n+   effect on a member.  Worse, declaring a variable both aligned\n+   and packed emits a warning.  */\n+\n+/* Avoid exercising this since emitting a warning for these given\n+   the requirement for members seems like a misfeature:\n+   int a ATTR ((packed, aligned (2)));   // -Wattributes\n+   int b ATTR ((aligned (2), packed));   // -Wattributes\n+   ASSERT (_Alignof (a) == 2);\n+   ASSERT (_Alignof (b) == 2);  */\n+\n+int c ATTR ((aligned (2)));           // okay (reduces alignment)\n+ASSERT (_Alignof (c) == 2);\n+\n+struct {\n+  int a ATTR ((packed, aligned (2)));   /* { dg-bogus \"\\\\\\[-Wattributes\" } */\n+  int b ATTR ((aligned (2), packed));   /* { dg-bogus \"\\\\\\[-Wattributes\" } */\n+\n+  /* Avoid exercising this since the attribute has no effect yet\n+     there is no warning.\n+     int c ATTR ((aligned (2)));           // missing warning?  */\n+} s;\n+\n+ASSERT (_Alignof (s.a) == 2);\n+ASSERT (_Alignof (s.b) == 2);\n+\n+/* ASSERT (_Alignof (s.c) == 4); */"}]}