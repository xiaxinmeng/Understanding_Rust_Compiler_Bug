{"sha": "6130646b8811ec5af4d58bd08fee7ebd8ffbc973", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjEzMDY0NmI4ODExZWM1YWY0ZDU4YmQwOGZlZTdlYmQ4ZmZiYzk3Mw==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2011-07-29T09:33:54Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2011-07-29T09:33:54Z"}, "message": "re PR target/49313 (Inefficient libgcc implementations for avr)\n\n\t\n\tPR target/49313\n\t* config/avr/libgcc.S (__ffshi2): Don't skip 2-word instruction.\n\t(__ctzsi2): Result for 0 may be undefined.\n\t(__ctzhi2): Result for 0 may be undefined.\n\t(__popcounthi2): Don't clobber r30. Use __popcounthi2_tail.\n\t(__popcountsi2): Ditto. And don't clobber r26.\n\t(__popcountdi2): Ditto. And don't clobber r27.\n\t* config/avr/avr.md (UNSPEC_COPYSIGN): New c_enum.\n\t(parityhi2): New expand.\n\t(paritysi2): New expand.\n\t(popcounthi2): New expand.\n\t(popcountsi2): New expand.\n\t(clzhi2): New expand.\n\t(clzsi2): New expand.\n\t(ctzhi2): New expand.\n\t(ctzsi2): New expand.\n\t(ffshi2): New expand.\n\t(ffssi2): New expand.\n\t(copysignsf3): New insn.\n\t(bswapsi2): New expand.\n\t(*parityhi2.libgcc): New insn.\n\t(*parityqihi2.libgcc): New insn.\n\t(*paritysihi2.libgcc): New insn.\n\t(*popcounthi2.libgcc): New insn.\n\t(*popcountsi2.libgcc): New insn.\n\t(*popcountqi2.libgcc): New insn.\n\t(*popcountqihi2.libgcc): New insn-and-split.\n\t(*clzhi2.libgcc): New insn.\n\t(*clzsihi2.libgcc): New insn.\n\t(*ctzhi2.libgcc): New insn.\n\t(*ctzsihi2.libgcc): New insn.\n\t(*ffshi2.libgcc): New insn.\n\t(*ffssihi2.libgcc): New insn.\n\t(*bswapsi2.libgcc): New insn.\n\nFrom-SVN: r176920", "tree": {"sha": "6f22c438fb8d622f073b27db738c553a713ab2b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f22c438fb8d622f073b27db738c553a713ab2b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6130646b8811ec5af4d58bd08fee7ebd8ffbc973", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6130646b8811ec5af4d58bd08fee7ebd8ffbc973", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6130646b8811ec5af4d58bd08fee7ebd8ffbc973", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6130646b8811ec5af4d58bd08fee7ebd8ffbc973/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2b4b91a9e3b311038effb3b200ded7e6cdba777", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2b4b91a9e3b311038effb3b200ded7e6cdba777", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2b4b91a9e3b311038effb3b200ded7e6cdba777"}], "stats": {"total": 374, "additions": 355, "deletions": 19}, "files": [{"sha": "2d12436df0c40fb3f41ea8da62e5491a846b7882", "filename": "gcc/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6130646b8811ec5af4d58bd08fee7ebd8ffbc973/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6130646b8811ec5af4d58bd08fee7ebd8ffbc973/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6130646b8811ec5af4d58bd08fee7ebd8ffbc973", "patch": "@@ -1,3 +1,40 @@\n+2011-07-29  Georg-Johann Lay  <avr@gjlay.de>\n+\t\n+\tPR target/49313\n+\t* config/avr/libgcc.S (__ffshi2): Don't skip 2-word instruction.\n+\t(__ctzsi2): Result for 0 may be undefined.\n+\t(__ctzhi2): Result for 0 may be undefined.\n+\t(__popcounthi2): Don't clobber r30. Use __popcounthi2_tail.\n+\t(__popcountsi2): Ditto. And don't clobber r26.\n+\t(__popcountdi2): Ditto. And don't clobber r27.\n+\t* config/avr/avr.md (UNSPEC_COPYSIGN): New c_enum.\n+\t(parityhi2): New expand.\n+\t(paritysi2): New expand.\n+\t(popcounthi2): New expand.\n+\t(popcountsi2): New expand.\n+\t(clzhi2): New expand.\n+\t(clzsi2): New expand.\n+\t(ctzhi2): New expand.\n+\t(ctzsi2): New expand.\n+\t(ffshi2): New expand.\n+\t(ffssi2): New expand.\n+\t(copysignsf3): New insn.\n+\t(bswapsi2): New expand.\n+\t(*parityhi2.libgcc): New insn.\n+\t(*parityqihi2.libgcc): New insn.\n+\t(*paritysihi2.libgcc): New insn.\n+\t(*popcounthi2.libgcc): New insn.\n+\t(*popcountsi2.libgcc): New insn.\n+\t(*popcountqi2.libgcc): New insn.\n+\t(*popcountqihi2.libgcc): New insn-and-split.\n+\t(*clzhi2.libgcc): New insn.\n+\t(*clzsihi2.libgcc): New insn.\n+\t(*ctzhi2.libgcc): New insn.\n+\t(*ctzsihi2.libgcc): New insn.\n+\t(*ffshi2.libgcc): New insn.\n+\t(*ffssihi2.libgcc): New insn.\n+\t(*bswapsi2.libgcc): New insn.\n+\n 2011-07-29  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-vrp.c (get_value_range): Only set parameter default"}, {"sha": "2c215fdecc575fee37a0039b6c2465f68bd54533", "filename": "gcc/config/avr/avr.md", "status": "modified", "additions": 290, "deletions": 0, "changes": 290, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6130646b8811ec5af4d58bd08fee7ebd8ffbc973/gcc%2Fconfig%2Favr%2Favr.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6130646b8811ec5af4d58bd08fee7ebd8ffbc973/gcc%2Fconfig%2Favr%2Favr.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.md?ref=6130646b8811ec5af4d58bd08fee7ebd8ffbc973", "patch": "@@ -55,6 +55,7 @@\n    UNSPEC_FMUL\n    UNSPEC_FMULS\n    UNSPEC_FMULSU\n+   UNSPEC_COPYSIGN\n    ])\n \n (define_c_enum \"unspecv\"\n@@ -3941,6 +3942,295 @@\n   [(set_attr \"length\" \"9\")\n    (set_attr \"cc\" \"clobber\")])\n \n+\n+;; Parity\n+\n+(define_expand \"parityhi2\"\n+  [(set (reg:HI 24)\n+        (match_operand:HI 1 \"register_operand\" \"\"))\n+   (set (reg:HI 24)\n+        (parity:HI (reg:HI 24)))\n+   (set (match_operand:HI 0 \"register_operand\" \"\")\n+        (reg:HI 24))]\n+  \"\"\n+  \"\")\n+\n+(define_expand \"paritysi2\"\n+  [(set (reg:SI 22)\n+        (match_operand:SI 1 \"register_operand\" \"\"))\n+   (set (reg:HI 24)\n+        (parity:HI (reg:SI 22)))\n+   (set (match_dup 2)\n+        (reg:HI 24))\n+   (set (match_operand:SI 0 \"register_operand\" \"\")\n+        (zero_extend:SI (match_dup 2)))]\n+  \"\"\n+  {\n+    operands[2] = gen_reg_rtx (HImode);\n+  })\n+\n+(define_insn \"*parityhi2.libgcc\"\n+  [(set (reg:HI 24)\n+        (parity:HI (reg:HI 24)))]\n+  \"\"\n+  \"%~call __parityhi2\"\n+  [(set_attr \"type\" \"xcall\")\n+   (set_attr \"cc\" \"clobber\")])\n+\n+(define_insn \"*parityqihi2.libgcc\"\n+  [(set (reg:HI 24)\n+        (parity:HI (reg:QI 24)))]\n+  \"\"\n+  \"%~call __parityqi2\"\n+  [(set_attr \"type\" \"xcall\")\n+   (set_attr \"cc\" \"clobber\")])\n+\n+(define_insn \"*paritysihi2.libgcc\"\n+  [(set (reg:HI 24)\n+        (parity:HI (reg:SI 22)))]\n+  \"\"\n+  \"%~call __paritysi2\"\n+  [(set_attr \"type\" \"xcall\")\n+   (set_attr \"cc\" \"clobber\")])\n+\n+\n+;; Popcount\n+\n+(define_expand \"popcounthi2\"\n+  [(set (reg:HI 24)\n+        (match_operand:HI 1 \"register_operand\" \"\"))\n+   (set (reg:HI 24)\n+        (popcount:HI (reg:HI 24)))\n+   (set (match_operand:HI 0 \"register_operand\" \"\")\n+        (reg:HI 24))]\n+  \"\"\n+  \"\")\n+\n+(define_expand \"popcountsi2\"\n+  [(set (reg:SI 22)\n+        (match_operand:SI 1 \"register_operand\" \"\"))\n+   (set (reg:HI 24)\n+        (popcount:HI (reg:SI 22)))\n+   (set (match_dup 2)\n+        (reg:HI 24))\n+   (set (match_operand:SI 0 \"register_operand\" \"\")\n+        (zero_extend:SI (match_dup 2)))]\n+  \"\"\n+  {\n+    operands[2] = gen_reg_rtx (HImode);\n+  })\n+\n+(define_insn \"*popcounthi2.libgcc\"\n+  [(set (reg:HI 24)\n+        (popcount:HI (reg:HI 24)))]\n+  \"\"\n+  \"%~call __popcounthi2\"\n+  [(set_attr \"type\" \"xcall\")\n+   (set_attr \"cc\" \"clobber\")])\n+\n+(define_insn \"*popcountsi2.libgcc\"\n+  [(set (reg:HI 24)\n+        (popcount:HI (reg:SI 22)))]\n+  \"\"\n+  \"%~call __popcountsi2\"\n+  [(set_attr \"type\" \"xcall\")\n+   (set_attr \"cc\" \"clobber\")])\n+\n+(define_insn \"*popcountqi2.libgcc\"\n+  [(set (reg:QI 24)\n+        (popcount:QI (reg:QI 24)))]\n+  \"\"\n+  \"%~call __popcountqi2\"\n+  [(set_attr \"type\" \"xcall\")\n+   (set_attr \"cc\" \"clobber\")])\n+\n+(define_insn_and_split \"*popcountqihi2.libgcc\"\n+  [(set (reg:HI 24)\n+        (popcount:HI (reg:QI 24)))]\n+  \"\"\n+  \"#\"\n+  \"\"\n+  [(set (reg:QI 24)\n+        (popcount:QI (reg:QI 24)))\n+   (set (reg:QI 25)\n+        (const_int 0))]\n+  \"\")\n+\n+;; Count Leading Zeros\n+\n+(define_expand \"clzhi2\"\n+  [(set (reg:HI 24)\n+        (match_operand:HI 1 \"register_operand\" \"\"))\n+   (parallel [(set (reg:HI 24)\n+                   (clz:HI (reg:HI 24)))\n+              (clobber (reg:QI 26))])\n+   (set (match_operand:HI 0 \"register_operand\" \"\")\n+        (reg:HI 24))]\n+  \"\"\n+  \"\")\n+\n+(define_expand \"clzsi2\"\n+  [(set (reg:SI 22)\n+        (match_operand:SI 1 \"register_operand\" \"\"))\n+   (parallel [(set (reg:HI 24)\n+                   (clz:HI (reg:SI 22)))\n+              (clobber (reg:QI 26))])\n+   (set (match_dup 2)\n+        (reg:HI 24))\n+   (set (match_operand:SI 0 \"register_operand\" \"\")\n+        (zero_extend:SI (match_dup 2)))]\n+  \"\"\n+  {\n+    operands[2] = gen_reg_rtx (HImode);\n+  })\n+\n+(define_insn \"*clzhi2.libgcc\"\n+  [(set (reg:HI 24)\n+        (clz:HI (reg:HI 24)))\n+   (clobber (reg:QI 26))]\n+  \"\"\n+  \"%~call __clzhi2\"\n+  [(set_attr \"type\" \"xcall\")\n+   (set_attr \"cc\" \"clobber\")])\n+\n+(define_insn \"*clzsihi2.libgcc\"\n+  [(set (reg:HI 24)\n+        (clz:HI (reg:SI 22)))\n+   (clobber (reg:QI 26))]\n+  \"\"\n+  \"%~call __clzsi2\"\n+  [(set_attr \"type\" \"xcall\")\n+   (set_attr \"cc\" \"clobber\")])\n+\n+;; Count Trailing Zeros\n+\n+(define_expand \"ctzhi2\"\n+  [(set (reg:HI 24)\n+        (match_operand:HI 1 \"register_operand\" \"\"))\n+   (parallel [(set (reg:HI 24)\n+                   (ctz:HI (reg:HI 24)))\n+              (clobber (reg:QI 26))])\n+   (set (match_operand:HI 0 \"register_operand\" \"\")\n+        (reg:HI 24))]\n+  \"\"\n+  \"\")\n+\n+(define_expand \"ctzsi2\"\n+  [(set (reg:SI 22)\n+        (match_operand:SI 1 \"register_operand\" \"\"))\n+   (parallel [(set (reg:HI 24)\n+                   (ctz:HI (reg:SI 22)))\n+              (clobber (reg:QI 22))\n+              (clobber (reg:QI 26))])\n+   (set (match_dup 2)\n+        (reg:HI 24))\n+   (set (match_operand:SI 0 \"register_operand\" \"\")\n+        (zero_extend:SI (match_dup 2)))]\n+  \"\"\n+  {\n+    operands[2] = gen_reg_rtx (HImode);\n+  })\n+\n+(define_insn \"*ctzhi2.libgcc\"\n+  [(set (reg:HI 24)\n+        (ctz:HI (reg:HI 24)))\n+   (clobber (reg:QI 26))]\n+  \"\"\n+  \"%~call __ctzhi2\"\n+  [(set_attr \"type\" \"xcall\")\n+   (set_attr \"cc\" \"clobber\")])\n+\n+(define_insn \"*ctzsihi2.libgcc\"\n+  [(set (reg:HI 24)\n+        (ctz:HI (reg:SI 22)))\n+   (clobber (reg:QI 22))\n+   (clobber (reg:QI 26))]\n+  \"\"\n+  \"%~call __ctzsi2\"\n+  [(set_attr \"type\" \"xcall\")\n+   (set_attr \"cc\" \"clobber\")])\n+\n+;; Find First Set\n+\n+(define_expand \"ffshi2\"\n+  [(set (reg:HI 24)\n+        (match_operand:HI 1 \"register_operand\" \"\"))\n+   (parallel [(set (reg:HI 24)\n+                   (ffs:HI (reg:HI 24)))\n+              (clobber (reg:QI 26))])\n+   (set (match_operand:HI 0 \"register_operand\" \"\")\n+        (reg:HI 24))]\n+  \"\"\n+  \"\")\n+\n+(define_expand \"ffssi2\"\n+  [(set (reg:SI 22)\n+        (match_operand:SI 1 \"register_operand\" \"\"))\n+   (parallel [(set (reg:HI 24)\n+                   (ffs:HI (reg:SI 22)))\n+              (clobber (reg:QI 22))\n+              (clobber (reg:QI 26))])\n+   (set (match_dup 2)\n+        (reg:HI 24))\n+   (set (match_operand:SI 0 \"register_operand\" \"\")\n+        (zero_extend:SI (match_dup 2)))]\n+  \"\"\n+  {\n+    operands[2] = gen_reg_rtx (HImode);\n+  })\n+\n+(define_insn \"*ffshi2.libgcc\"\n+  [(set (reg:HI 24)\n+        (ffs:HI (reg:HI 24)))\n+   (clobber (reg:QI 26))]\n+  \"\"\n+  \"%~call __ffshi2\"\n+  [(set_attr \"type\" \"xcall\")\n+   (set_attr \"cc\" \"clobber\")])\n+\n+(define_insn \"*ffssihi2.libgcc\"\n+  [(set (reg:HI 24)\n+        (ffs:HI (reg:SI 22)))\n+   (clobber (reg:QI 22))\n+   (clobber (reg:QI 26))]\n+  \"\"\n+  \"%~call __ffssi2\"\n+  [(set_attr \"type\" \"xcall\")\n+   (set_attr \"cc\" \"clobber\")])\n+\n+;; Copysign\n+\n+(define_insn \"copysignsf3\"\n+  [(set (match_operand:SF 0 \"register_operand\"             \"=r\")\n+        (unspec:SF [(match_operand:SF 1 \"register_operand\"  \"0\")\n+                    (match_operand:SF 2 \"register_operand\"  \"r\")]\n+                   UNSPEC_COPYSIGN))]\n+  \"\"\n+  \"bst %D2,7\\;bld %D0,7\"\n+  [(set_attr \"length\" \"2\")\n+   (set_attr \"cc\" \"none\")])\n+  \n+;; Swap Bytes (change byte-endianess)\n+\n+(define_expand \"bswapsi2\"\n+  [(set (reg:SI 22)\n+        (match_operand:SI 1 \"register_operand\" \"\"))\n+   (set (reg:SI 22)\n+        (bswap:SI (reg:SI 22)))\n+   (set (match_operand:SI 0 \"register_operand\" \"\")\n+        (reg:SI 22))]\n+  \"\"\n+  \"\")\n+\n+(define_insn \"*bswapsi2.libgcc\"\n+  [(set (reg:SI 22)\n+        (bswap:SI (reg:SI 22)))]\n+  \"\"\n+  \"%~call __bswapsi2\"\n+  [(set_attr \"type\" \"xcall\")\n+   (set_attr \"cc\" \"clobber\")])\n+\n+\n ;; CPU instructions\n \n ;; NOP taking 1 or 2 Ticks "}, {"sha": "f6084a7051823d1b29578d8267eaa2fa40af368c", "filename": "gcc/config/avr/libgcc.S", "status": "modified", "additions": 28, "deletions": 19, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6130646b8811ec5af4d58bd08fee7ebd8ffbc973/gcc%2Fconfig%2Favr%2Flibgcc.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6130646b8811ec5af4d58bd08fee7ebd8ffbc973/gcc%2Fconfig%2Favr%2Flibgcc.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Flibgcc.S?ref=6130646b8811ec5af4d58bd08fee7ebd8ffbc973", "patch": "@@ -1074,9 +1074,15 @@ ENDF __ffssi2\n ;; clobbers: r26\n DEFUN __ffshi2\n     clr  r26\n+#ifdef __AVR_HAVE_JMP_CALL__\n+    ;; Some cores have problem skipping 2-word instruction\n+    tst  r24\n+    breq 2f\n+#else\n     cpse r24, __zero_reg__\n+#endif /* __AVR_HAVE_JMP_CALL__ */\n 1:  XJMP __loop_ffsqi2\n-    ldi  r26, 8\n+2:  ldi  r26, 8\n     or   r24, r25\n     brne 1b\n     ret\n@@ -1106,25 +1112,25 @@ ENDF __loop_ffsqi2\n #if defined (L_ctzsi2)\n ;; count trailing zeros\n ;; r25:r24 = ctz32 (r25:r22)\n-;; ctz(0) = 32\n+;; clobbers: r26, r22\n+;; ctz(0) = 255\n+;; Note that ctz(0) in undefined for GCC\n DEFUN __ctzsi2\n     XCALL __ffssi2\n     dec  r24\n-    sbrc r24, 7\n-    ldi  r24, 32\n     ret\n ENDF __ctzsi2\n #endif /* defined (L_ctzsi2) */\n \n #if defined (L_ctzhi2)\n ;; count trailing zeros\n ;; r25:r24 = ctz16 (r25:r24)\n-;; ctz(0) = 16\n+;; clobbers: r26\n+;; ctz(0) = 255\n+;; Note that ctz(0) in undefined for GCC\n DEFUN __ctzhi2\n     XCALL __ffshi2\n     dec  r24\n-    sbrc r24, 7\n-    ldi  r24, 16\n     ret\n ENDF __ctzhi2\n #endif /* defined (L_ctzhi2) */\n@@ -1258,47 +1264,50 @@ ENDF __parityqi2\n #if defined (L_popcounthi2)\n ;; population count\n ;; r25:r24 = popcount16 (r25:r24)\n-;; clobbers: r30, __tmp_reg__\n+;; clobbers: __tmp_reg__\n DEFUN __popcounthi2\n     XCALL __popcountqi2\n-    mov  r30, r24\n+    push r24\n     mov  r24, r25\n     XCALL __popcountqi2\n-    add  r24, r30\n     clr  r25\n-    ret\n+    ;; FALLTHRU\n ENDF __popcounthi2\n+\n+DEFUN __popcounthi2_tail\n+    pop   __tmp_reg__\n+    add   r24, __tmp_reg__\n+    ret\n+ENDF __popcounthi2_tail\n #endif /* defined (L_popcounthi2) */\n \n #if defined (L_popcountsi2)\n ;; population count\n ;; r25:r24 = popcount32 (r25:r22)\n-;; clobbers: r26, r30, __tmp_reg__\n+;; clobbers: __tmp_reg__\n DEFUN __popcountsi2\n     XCALL __popcounthi2\n-    mov   r26, r24\n+    push  r24\n     mov_l r24, r22\n     mov_h r25, r23\n     XCALL __popcounthi2\n-    add   r24, r26\n-    ret\n+    XJMP  __popcounthi2_tail\n ENDF __popcountsi2\n #endif /* defined (L_popcountsi2) */\n \n #if defined (L_popcountdi2)\n ;; population count\n ;; r25:r24 = popcount64 (r25:r18)\n-;; clobbers: r22, r23, r26, r27, r30, __tmp_reg__\n+;; clobbers: r22, r23, __tmp_reg__\n DEFUN __popcountdi2\n     XCALL __popcountsi2\n-    mov   r27, r24\n+    push  r24\n     mov_l r22, r18\n     mov_h r23, r19\n     mov_l r24, r20\n     mov_h r25, r21\n     XCALL __popcountsi2\n-    add   r24, r27\n-    ret\n+    XJMP  __popcounthi2_tail\n ENDF __popcountdi2\n #endif /* defined (L_popcountdi2) */\n "}]}