{"sha": "a2544177b989c29fe893e55d422c8d9e6f27c6b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI1NDQxNzdiOTg5YzI5ZmU4OTNlNTVkNDIyYzhkOWU2ZjI3YzZiMw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-09-26T13:18:31Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-09-26T13:18:31Z"}, "message": "tree-ssa-live.c (var_map_base_init): Handle SSA names with DECL_IGNORED_P base VAR_DECLs like anonymous SSA names.\n\n2013-09-26  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-live.c (var_map_base_init): Handle SSA names with\n\tDECL_IGNORED_P base VAR_DECLs like anonymous SSA names.\n\t(loe_visit_block): Use gcc_checking_assert.\n\t* tree-ssa-coalesce.c (create_outofssa_var_map): Use\n\tgimple_assign_ssa_name_copy_p.\n\t(gimple_can_coalesce_p): Adjust according to the var_map_base_init\n\tchange.\n\n\t* gcc.dg/tree-ssa/coalesce-2.c: New testcase.\n\nFrom-SVN: r202944", "tree": {"sha": "3bd405507fb88ca50d81b2390e2a1e2748dce936", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bd405507fb88ca50d81b2390e2a1e2748dce936"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2544177b989c29fe893e55d422c8d9e6f27c6b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2544177b989c29fe893e55d422c8d9e6f27c6b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2544177b989c29fe893e55d422c8d9e6f27c6b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2544177b989c29fe893e55d422c8d9e6f27c6b3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6d1ca9a0f323e2de85299910ef0d8bcc9dc7a81d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d1ca9a0f323e2de85299910ef0d8bcc9dc7a81d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d1ca9a0f323e2de85299910ef0d8bcc9dc7a81d"}], "stats": {"total": 48, "additions": 41, "deletions": 7}, "files": [{"sha": "7d5e2c5a25991830f4f3737f650da6359bcc60a3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2544177b989c29fe893e55d422c8d9e6f27c6b3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2544177b989c29fe893e55d422c8d9e6f27c6b3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a2544177b989c29fe893e55d422c8d9e6f27c6b3", "patch": "@@ -1,3 +1,13 @@\n+2013-09-26  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-live.c (var_map_base_init): Handle SSA names with\n+\tDECL_IGNORED_P base VAR_DECLs like anonymous SSA names.\n+\t(loe_visit_block): Use gcc_checking_assert.\n+\t* tree-ssa-coalesce.c (create_outofssa_var_map): Use\n+\tgimple_assign_ssa_name_copy_p.\n+\t(gimple_can_coalesce_p): Adjust according to the var_map_base_init\n+\tchange.\n+\n 2013-09-26  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* config/rs6000/t-rs6000 (rs6000.o): Remove."}, {"sha": "9c95ef02e7423bcc161bc4fae3d6aa7cad08883f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2544177b989c29fe893e55d422c8d9e6f27c6b3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2544177b989c29fe893e55d422c8d9e6f27c6b3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a2544177b989c29fe893e55d422c8d9e6f27c6b3", "patch": "@@ -1,3 +1,7 @@\n+2013-09-26  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/coalesce-2.c: New testcase.\n+\n 2013-09-26  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/58539"}, {"sha": "56c5ccccc7f5ada730c4283c53279165dc740690", "filename": "gcc/testsuite/gcc.dg/tree-ssa/coalesce-2.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2544177b989c29fe893e55d422c8d9e6f27c6b3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcoalesce-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2544177b989c29fe893e55d422c8d9e6f27c6b3/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcoalesce-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fcoalesce-2.c?ref=a2544177b989c29fe893e55d422c8d9e6f27c6b3", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-rtl-expand-details\" } */\n+\n+float total = 0.2;\n+void foo(int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    total += i;\n+}\n+\n+/* Verify that out-of-ssa coalescing did its job by verifying there are not\n+   any partition copies inserted.  */\n+\n+/* { dg-final { scan-rtl-dump-not \"partition copy\" \"expand\"} } */\n+/* { dg-final { cleanup-rtl-dump \"expand\" } } */"}, {"sha": "cfcd1e07b8017a2c07ef11b5496e64850a003b90", "filename": "gcc/tree-ssa-coalesce.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2544177b989c29fe893e55d422c8d9e6f27c6b3/gcc%2Ftree-ssa-coalesce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2544177b989c29fe893e55d422c8d9e6f27c6b3/gcc%2Ftree-ssa-coalesce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-coalesce.c?ref=a2544177b989c29fe893e55d422c8d9e6f27c6b3", "patch": "@@ -980,10 +980,7 @@ create_outofssa_var_map (coalesce_list_p cl, bitmap used_in_copy)\n \t      {\n \t\ttree lhs = gimple_assign_lhs (stmt);\n \t\ttree rhs1 = gimple_assign_rhs1 (stmt);\n-\n-\t\tif (gimple_assign_copy_p (stmt)\n-                    && TREE_CODE (lhs) == SSA_NAME\n-\t\t    && TREE_CODE (rhs1) == SSA_NAME\n+\t\tif (gimple_assign_ssa_name_copy_p (stmt)\n \t\t    && gimple_can_coalesce_p (lhs, rhs1))\n \t\t  {\n \t\t    v1 = SSA_NAME_VERSION (lhs);\n@@ -1347,7 +1344,11 @@ gimple_can_coalesce_p (tree name1, tree name2)\n {\n   /* First check the SSA_NAME's associated DECL.  We only want to\n      coalesce if they have the same DECL or both have no associated DECL.  */\n-  if (SSA_NAME_VAR (name1) != SSA_NAME_VAR (name2))\n+  tree var1 = SSA_NAME_VAR (name1);\n+  tree var2 = SSA_NAME_VAR (name2);\n+  var1 = (var1 && (!VAR_P (var1) || !DECL_IGNORED_P (var1))) ? var1 : NULL_TREE;\n+  var2 = (var2 && (!VAR_P (var2) || !DECL_IGNORED_P (var2))) ? var2 : NULL_TREE;\n+  if (var1 != var2)\n     return false;\n \n   /* Now check the types.  If the types are the same, then we should"}, {"sha": "eb36a901faf947d203dbc51d7c2b4d1ab39d6d65", "filename": "gcc/tree-ssa-live.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2544177b989c29fe893e55d422c8d9e6f27c6b3/gcc%2Ftree-ssa-live.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2544177b989c29fe893e55d422c8d9e6f27c6b3/gcc%2Ftree-ssa-live.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-live.c?ref=a2544177b989c29fe893e55d422c8d9e6f27c6b3", "patch": "@@ -104,7 +104,9 @@ var_map_base_init (var_map map)\n       struct tree_int_map **slot;\n       unsigned baseindex;\n       var = partition_to_var (map, x);\n-      if (SSA_NAME_VAR (var))\n+      if (SSA_NAME_VAR (var)\n+\t  && (!VAR_P (SSA_NAME_VAR (var))\n+\t      || !DECL_IGNORED_P (SSA_NAME_VAR (var))))\n \tm->base.from = SSA_NAME_VAR (var);\n       else\n \t/* This restricts what anonymous SSA names we can coalesce\n@@ -990,9 +992,10 @@ loe_visit_block (tree_live_info_p live, basic_block bb, sbitmap visited,\n   edge_iterator ei;\n   basic_block pred_bb;\n   bitmap loe;\n-  gcc_assert (!bitmap_bit_p (visited, bb->index));\n \n+  gcc_checking_assert (!bitmap_bit_p (visited, bb->index));\n   bitmap_set_bit (visited, bb->index);\n+\n   loe = live_on_entry (live, bb);\n \n   FOR_EACH_EDGE (e, ei, bb->preds)"}]}