{"sha": "789306de0fa860eebe32a2677d87d1203bbb81f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg5MzA2ZGUwZmE4NjBlZWJlMzJhMjY3N2Q4N2QxMjAzYmJiODFmNA==", "commit": {"author": {"name": "Maxim Ostapenko", "email": "m.ostapenko@samsung.com", "date": "2016-11-08T22:07:50Z"}, "committer": {"name": "Maxim Ostapenko", "email": "chefmax@gcc.gnu.org", "date": "2016-11-08T22:07:50Z"}, "message": "sanitizer_stacktrace.cc (GetCanonicFrame): Assume we compiled code with GCC when extracting the caller PC for ARM if...\n\nlibsanitizer/\n\n\t* sanitizer_common/sanitizer_stacktrace.cc (GetCanonicFrame): Assume we\n\tcompiled code with GCC when extracting the caller PC for ARM if no\n\tvalid frame pointer is available.\n\nFrom-SVN: r241980", "tree": {"sha": "247ce07074665a9835ecf838a46ee3ef49537083", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/247ce07074665a9835ecf838a46ee3ef49537083"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/789306de0fa860eebe32a2677d87d1203bbb81f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/789306de0fa860eebe32a2677d87d1203bbb81f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/789306de0fa860eebe32a2677d87d1203bbb81f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/789306de0fa860eebe32a2677d87d1203bbb81f4/comments", "author": null, "committer": null, "parents": [{"sha": "103c4f759ab75305a7cb7927af6b35b1f5da5f06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/103c4f759ab75305a7cb7927af6b35b1f5da5f06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/103c4f759ab75305a7cb7927af6b35b1f5da5f06"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "7881ac7da395f889aaefd4de6bc4b376d3cb2f8f", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/789306de0fa860eebe32a2677d87d1203bbb81f4/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/789306de0fa860eebe32a2677d87d1203bbb81f4/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=789306de0fa860eebe32a2677d87d1203bbb81f4", "patch": "@@ -1,3 +1,9 @@\n+2016-11-09  Maxim Ostapenko  <m.ostapenko@samsung.com>\n+\n+\t* sanitizer_common/sanitizer_stacktrace.cc (GetCanonicFrame): Assume we\n+\tcompiled code with GCC when extracting the caller PC for ARM if no\n+\tvalid frame pointer is available.\n+\n 2016-11-09  Maxim Ostapenko  <m.ostapenko@samsung.com>\n \n \tPR sanitizer/63958"}, {"sha": "cbb3af270b6d7b456af5db6c6c44f5b16188e628", "filename": "libsanitizer/sanitizer_common/sanitizer_stacktrace.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/789306de0fa860eebe32a2677d87d1203bbb81f4/libsanitizer%2Fsanitizer_common%2Fsanitizer_stacktrace.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/789306de0fa860eebe32a2677d87d1203bbb81f4/libsanitizer%2Fsanitizer_common%2Fsanitizer_stacktrace.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_stacktrace.cc?ref=789306de0fa860eebe32a2677d87d1203bbb81f4", "patch": "@@ -55,8 +55,8 @@ static inline uhwptr *GetCanonicFrame(uptr bp,\n   // Nope, this does not look right either. This means the frame after next does\n   // not have a valid frame pointer, but we can still extract the caller PC.\n   // Unfortunately, there is no way to decide between GCC and LLVM frame\n-  // layouts. Assume LLVM.\n-  return bp_prev;\n+  // layouts. Assume GCC.\n+  return bp_prev - 1;\n #else\n   return (uhwptr*)bp;\n #endif"}]}