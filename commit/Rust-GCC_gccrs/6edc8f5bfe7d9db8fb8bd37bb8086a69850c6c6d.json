{"sha": "6edc8f5bfe7d9db8fb8bd37bb8086a69850c6c6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmVkYzhmNWJmZTdkOWRiOGZiOGJkMzdiYjgwODZhNjk4NTBjNmM2ZA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2020-09-23T21:04:32Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2020-09-23T21:10:20Z"}, "message": "Handle DECLs and EXPRESSIONs consistently (PR middle-end/97175).\n\ngcc/ChangeLog:\n\n\tPR middle-end/97175\n\t* builtins.c (maybe_warn_for_bound): Handle both DECLs and EXPRESSIONs\n\tin pad->dst.ref, same is pad->src.ref.\n\ngcc/testsuite/ChangeLog:\n\n\tPR middle-end/97175\n\t* gcc.dg/Wstringop-overflow-44.c: New test.", "tree": {"sha": "c64709a3a48fac8d149e61be1ff8144e8ff8025d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c64709a3a48fac8d149e61be1ff8144e8ff8025d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6edc8f5bfe7d9db8fb8bd37bb8086a69850c6c6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6edc8f5bfe7d9db8fb8bd37bb8086a69850c6c6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6edc8f5bfe7d9db8fb8bd37bb8086a69850c6c6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6edc8f5bfe7d9db8fb8bd37bb8086a69850c6c6d/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e977dd5edbcc3a3b88c3bd7efa1026c845af7487", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e977dd5edbcc3a3b88c3bd7efa1026c845af7487", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e977dd5edbcc3a3b88c3bd7efa1026c845af7487"}], "stats": {"total": 139, "additions": 137, "deletions": 2}, "files": [{"sha": "cac842fd4a39c4a3c1817ae76edee64e0e7ad417", "filename": "gcc/builtins.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6edc8f5bfe7d9db8fb8bd37bb8086a69850c6c6d/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6edc8f5bfe7d9db8fb8bd37bb8086a69850c6c6d/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=6edc8f5bfe7d9db8fb8bd37bb8086a69850c6c6d", "patch": "@@ -3480,8 +3480,14 @@ maybe_warn_for_bound (int opt, location_t loc, tree exp, tree func,\n   if (warned)\n     {\n       if (pad && pad->dst.ref)\n-\tinform (DECL_SOURCE_LOCATION (pad->dst.ref),\n-\t\t\"destination object declared here\");\n+\t{\n+\t  if (DECL_P (pad->dst.ref))\n+\t    inform (DECL_SOURCE_LOCATION (pad->dst.ref),\n+\t\t    \"destination object declared here\");\n+\t  else if (EXPR_HAS_LOCATION (pad->dst.ref))\n+\t    inform (EXPR_LOCATION (pad->dst.ref),\n+\t\t    \"destination object allocated here\");\n+\t}\n       TREE_NO_WARNING (exp) = true;\n     }\n "}, {"sha": "9e292a9b7f93d33b2c2c6804c286d1617eb86d78", "filename": "gcc/testsuite/gcc.dg/Wstringop-overflow-44.c", "status": "added", "additions": 129, "deletions": 0, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6edc8f5bfe7d9db8fb8bd37bb8086a69850c6c6d/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-44.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6edc8f5bfe7d9db8fb8bd37bb8086a69850c6c6d/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-44.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWstringop-overflow-44.c?ref=6edc8f5bfe7d9db8fb8bd37bb8086a69850c6c6d", "patch": "@@ -0,0 +1,129 @@\n+/* PR middle-end/97175 - ICE on an excessive strncpy bound\n+   { dg-do compile }\n+   { dg-options \"-O -Wall\" } */\n+\n+int n;\n+\n+char *d;\n+\n+void sink (void*);\n+\n+/* Exercise calls with a destination of unknown size.  */\n+\n+void f0 (const void *s)\n+{\n+  if (n > 0) return;\n+  __builtin_memcpy (d, s, n);       // eliminated\n+}\n+\n+void f1 (const void *s)\n+{\n+  if (n > 0) return;\n+  __builtin_memmove (d, s, n);      // eliminated\n+}\n+\n+void f2 (void)\n+{\n+  if (n > 0) return;\n+  __builtin_memset (d, 0, n);       // eliminated\n+}\n+\n+void f3 (const char *s)\n+{\n+  if (n > 0) return;\n+  __builtin_strncpy (d, s, n);      // can be eliminated but isn't\n+}\n+\n+void f4 (const char *s)\n+{\n+  if (n > 0) return;\n+  *d = 0;\n+  __builtin_strncat (d, s, n);      // can be eliminated but isn't\n+}\n+\n+\n+/* Exercise the same calls but with a declared destination object.  */\n+\n+void g0 (const void *s)\n+{\n+  if (n > 0) return;\n+  char a[1];\n+  __builtin_memcpy (a, s, n);       // eliminated\n+  sink (a);\n+}\n+\n+void g1 (const void *s)\n+{\n+  if (n > 0) return;\n+  char a[1];\n+  __builtin_memmove (a, s, n);      // eliminated\n+  sink (a);\n+}\n+\n+void g2 (void)\n+{\n+  if (n > 0) return;\n+  char a[1];\n+  __builtin_memset (a, 0, n);       // eliminated\n+  sink (a);\n+}\n+\n+void g3 (const char *s)\n+{\n+  if (n > 0) return;\n+  char a[1];\n+  __builtin_strncpy (a, s, n);      // can be eliminated but isn't\n+  sink (a);\n+}\n+\n+void g4 (const char *s)\n+{\n+  if (n > 0) return;\n+  char a[1];\n+  *a = 0;\n+  __builtin_strncat (a, s, n);      // can be eliminated but isn't\n+  sink (a);\n+}\n+\n+\n+void h0 (const void *s)\n+{\n+  if (n > 0) return;\n+  d = __builtin_malloc (1);\n+  __builtin_memcpy (d, s, n);       // eliminated\n+}\n+\n+void h1 (const void *s)\n+{\n+  if (n > 0) return;\n+  d = __builtin_malloc (1);\n+  __builtin_memmove (d, s, n);      // eliminated\n+}\n+\n+void h2 (void)\n+{\n+  if (n > 0) return;\n+  d = __builtin_malloc (1);\n+  __builtin_memset (d, 0, n);       // eliminated\n+}\n+\n+void h3 (const char *s)\n+{\n+  if (n > 0) return;\n+  d = __builtin_malloc (1);\n+  __builtin_strncpy (d, s, n);      // can be eliminated but isn't\n+}\n+\n+void h4 (const char *s)\n+{\n+  if (n > 0) return;\n+  d = __builtin_malloc (1);\n+  *d = 0;\n+  __builtin_strncat (d, s, n);      // can be eliminated but isn't\n+}\n+\n+/* The calls above that aren't eliminated trigger\n+     warning: specified size between INT_MAX and SIZE_MAX exceed maximum\n+              object size PTRDIFF_MAX\n+  { dg-prune-output \"-Wstringop-overflow\" }\n+  { dg-prune-output \"-Wstringop-overread\" } */"}]}