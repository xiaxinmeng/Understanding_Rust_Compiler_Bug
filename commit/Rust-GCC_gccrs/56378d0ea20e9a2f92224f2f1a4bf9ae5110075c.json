{"sha": "56378d0ea20e9a2f92224f2f1a4bf9ae5110075c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTYzNzhkMGVhMjBlOWEyZjkyMjI0ZjJmMWE0YmY5YWU1MTEwMDc1Yw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2012-01-27T01:21:29Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2012-01-27T01:21:29Z"}, "message": "configure.ac (GLIBCXX_ENABLE_DEBUG_FLAGS): Use -gdwarf-4 -g3 -O0.\n\n2012-01-27  Benjamin Kosnik  <bkoz@redhat.com>\n\t    Matthias Klose  <doko@ubuntu.com>\n\n\t* configure.ac (GLIBCXX_ENABLE_DEBUG_FLAGS): Use -gdwarf-4 -g3 -O0.\n\t* configure.in: Regenerated.\n\t* src/Makefile.am (all-once, install-data-once): New rules.\n\t(all-local, install-data-local): Use them.\n\t(build-debug, install-debug): Tweak.\n\t* src/Makefile.in: Regenerate.\n\nCo-Authored-By: Matthias Klose <doko@ubuntu.com>\n\nFrom-SVN: r183599", "tree": {"sha": "c9b3e42e82c36cb21cea435adf1d75c6799a9388", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9b3e42e82c36cb21cea435adf1d75c6799a9388"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56378d0ea20e9a2f92224f2f1a4bf9ae5110075c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56378d0ea20e9a2f92224f2f1a4bf9ae5110075c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56378d0ea20e9a2f92224f2f1a4bf9ae5110075c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56378d0ea20e9a2f92224f2f1a4bf9ae5110075c/comments", "author": null, "committer": null, "parents": [{"sha": "7031e9dc17dde0877f69be2c102b68a43c4dfdbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7031e9dc17dde0877f69be2c102b68a43c4dfdbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7031e9dc17dde0877f69be2c102b68a43c4dfdbd"}], "stats": {"total": 162, "additions": 113, "deletions": 49}, "files": [{"sha": "923708f8a38b99faf2ce203ff67ea7539c6ae28d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56378d0ea20e9a2f92224f2f1a4bf9ae5110075c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56378d0ea20e9a2f92224f2f1a4bf9ae5110075c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=56378d0ea20e9a2f92224f2f1a4bf9ae5110075c", "patch": "@@ -1,3 +1,13 @@\n+2012-01-27  Benjamin Kosnik  <bkoz@redhat.com>\n+\t    Matthias Klose  <doko@ubuntu.com>\n+\n+\t* configure.ac (GLIBCXX_ENABLE_DEBUG_FLAGS): Use -gdwarf-4 -g3 -O0.\n+\t* configure.in: Regenerated.\n+\t* src/Makefile.am (all-once, install-data-once): New rules.\n+\t(all-local, install-data-local): Use them.\n+\t(build-debug, install-debug): Tweak.\n+\t* src/Makefile.in: Regenerate.\n+\n 2012-01-27  Richard Henderson  <rth@redhat.com>\n \n \t* include/bits/atomic_base.h (__atomic_flag_base): Define _M_i"}, {"sha": "5c1c4bbe639788c7add585a47bee7aedc18c9aa6", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56378d0ea20e9a2f92224f2f1a4bf9ae5110075c/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56378d0ea20e9a2f92224f2f1a4bf9ae5110075c/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=56378d0ea20e9a2f92224f2f1a4bf9ae5110075c", "patch": "@@ -1534,7 +1534,7 @@ Optional Features:\n   --enable-concept-checks use Boost-derived template checks [default=no]\n   --enable-libstdcxx-debug-flags=FLAGS\n                           pass compiler FLAGS when building debug library\n-                          [default=\"-g3 -O0\"]\n+                          [default=\"-gdwarf-4 -g3 -O0\"]\n   --enable-libstdcxx-debug\n                           build extra debug library [default=no]\n   --enable-cxx-flags=FLAGS\n@@ -17096,7 +17096,7 @@ if test \"${enable_libstdcxx_debug_flags+set}\" = set; then :\n       *)          as_fn_error \"--enable-libstdcxx-debug-flags needs compiler flags as arguments\" \"$LINENO\" 5 ;;\n      esac\n else\n-  enable_libstdcxx_debug_flags=\"-g3 -O0\"\n+  enable_libstdcxx_debug_flags=\"-gdwarf-4 -g3 -O0\"\n fi\n \n "}, {"sha": "7607e5b732e7f352584fe5c9c4ea0faf7c5cbe12", "filename": "libstdc++-v3/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56378d0ea20e9a2f92224f2f1a4bf9ae5110075c/libstdc%2B%2B-v3%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56378d0ea20e9a2f92224f2f1a4bf9ae5110075c/libstdc%2B%2B-v3%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.ac?ref=56378d0ea20e9a2f92224f2f1a4bf9ae5110075c", "patch": "@@ -124,7 +124,7 @@ GLIBCXX_ENABLE_LONG_LONG([yes])\n GLIBCXX_ENABLE_WCHAR_T([yes])\n GLIBCXX_ENABLE_C99([yes])\n GLIBCXX_ENABLE_CONCEPT_CHECKS([no])\n-GLIBCXX_ENABLE_DEBUG_FLAGS([\"-g3 -O0\"])\n+GLIBCXX_ENABLE_DEBUG_FLAGS([\"-gdwarf-4 -g3 -O0\"])\n GLIBCXX_ENABLE_DEBUG([no])\n GLIBCXX_ENABLE_PARALLEL([yes])\n GLIBCXX_ENABLE_CXX_FLAGS"}, {"sha": "2cd27749fa66579ce6f92489ee5b16e8d79d5385", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 49, "deletions": 22, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56378d0ea20e9a2f92224f2f1a4bf9ae5110075c/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56378d0ea20e9a2f92224f2f1a4bf9ae5110075c/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=56378d0ea20e9a2f92224f2f1a4bf9ae5110075c", "patch": "@@ -168,16 +168,16 @@ version_arg =\n version_dep =\n endif\n \n-# Added rules.\n-# 1 debug library\n-# 2 supra-convenience library\n-if GLIBCXX_BUILD_DEBUG\n-all-local: libstdc++convenience.la build_debug\n-install-data-local: install_debug\n-else\n-all-local: libstdc++convenience.la\n-install-data-local:\n-endif\n+\n+# Control additional build primary rules.\n+# EXTRA_LTLIBRARIES =\n+all-once: libstdc++convenience.la $(STAMP_DEBUG)\n+install-data-once: $(STAMP_INSTALL_DEBUG)\n+\n+all-local: all-once\n+install-data-local: install-data-once\n+clean-local:\n+\trm -rf libstdc++convenience.la stamp* $(CLEAN_DEBUG)\n \n # Make a non-installed convenience library, so that --disable-static\n # may work.\n@@ -188,30 +188,57 @@ libstdc++convenience.la: $(toolexeclib_LTLIBRARIES)\n \tfi; \\\n \techo `date` > stamp-libstdc++convenience;\n \n-debugdir = debug\n+# Added rules.\n+# 1 debug library\n+# 2 supra-convenience library\n+if GLIBCXX_BUILD_DEBUG\n+STAMP_DEBUG = build-debug\n+STAMP_INSTALL_DEBUG = install-debug\n+CLEAN_DEBUG = debug\n+else\n+STAMP_DEBUG =\n+STAMP_INSTALL_DEBUG =\n+CLEAN_DEBUG =\n+endif\n \n-# Build a set of debug objects here.\n+# Build a debug variant.\n # Take care to fix all possibly-relative paths.\n+debugdir = ${glibcxx_builddir}/src/debug\n stamp-debug:\n \tif test ! -d ${debugdir}; then \\\n \t  mkdir -p ${debugdir}; \\\n+\t  for d in $(SUBDIRS); do mkdir -p  ${debugdir}/$$d; done; \\\n \t  (cd ${debugdir}; \\\n \t  sed -e 's/top_builddir = \\.\\./top_builddir = ..\\/../' \\\n \t      -e 's/top_build_prefix = \\.\\./top_build_prefix = ..\\/../' \\\n \t      -e 's/srcdir = \\.\\./srcdir = ..\\/../' \\\n \t      -e 's/VPATH = \\.\\./VPATH = ..\\/../' \\\n \t      -e 's/glibcxx_basedir = \\.\\./glibcxx_basedir = ..\\/../' \\\n \t      -e 's/MKDIR_P = \\.\\./MKDIR_P = ..\\/../' \\\n-\t      -e 's/all-local: build_debug/all-local:/' \\\n-\t      -e 's/install-data-local: install_debug/install-data-local:/' \\\n-\t  < ../Makefile > Makefile) ; \\\n+\t  < ../Makefile > Makefile ; \\\n+\t  for d in . $(SUBDIRS); do \\\n+\t  sed -e 's/top_builddir = \\.\\./top_builddir = ..\\/../' \\\n+\t      -e 's/top_build_prefix = \\.\\./top_build_prefix = ..\\/../' \\\n+\t      -e 's/srcdir = \\.\\./srcdir = ..\\/../' \\\n+\t      -e 's/VPATH = \\.\\./VPATH = ..\\/../' \\\n+\t      -e 's/glibcxx_basedir = \\.\\./glibcxx_basedir = ..\\/../' \\\n+\t      -e 's/MKDIR_P = \\.\\./MKDIR_P = ..\\/../' \\\n+\t  < ../$$d/Makefile > $$d/Makefile ; \\\n+\t  done) ; \\\n \tfi; \\\n \techo `date` > stamp-debug;\n \n-build_debug: stamp-debug\n-\t(cd ${debugdir} && $(MAKE) CXXFLAGS='$(DEBUG_FLAGS)' all)\n-\n-# Install debug library here.\n-install_debug:\n-\t(cd ${debugdir} && $(MAKE) \\\n-\ttoolexeclibdir=$(glibcxx_toolexeclibdir)/debug install)\n+build-debug: stamp-debug\n+\t  (cd ${debugdir}; \\\n+\t  mv Makefile Makefile.tmp; \\\n+\t  sed -e 's,all-local: all-once,all-local:,' \\\n+\t      -e 's,install-data-local: install-data-once,install-data-local:,' \\\n+\t      -e 's,src/c,src/debug/c,' \\\n+\t  < Makefile.tmp > Makefile ; \\\n+\t  $(MAKE) CXXFLAGS='$(DEBUG_FLAGS)' \\\n+\t  toolexeclibdir=$(glibcxx_toolexeclibdir)/debug all) ;\n+\n+# Install debug library.\n+install-debug: build-debug\n+\t(cd ${debugdir} && $(MAKE) CXXFLAGS='$(DEBUG_FLAGS)' \\\n+\ttoolexeclibdir=$(glibcxx_toolexeclibdir)/debug install) ;"}, {"sha": "79340a2c7fd6e6b22f1ccce7142d94bd17059a71", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 51, "deletions": 24, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56378d0ea20e9a2f92224f2f1a4bf9ae5110075c/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56378d0ea20e9a2f92224f2f1a4bf9ae5110075c/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=56378d0ea20e9a2f92224f2f1a4bf9ae5110075c", "patch": "@@ -405,7 +405,20 @@ CXXLINK = $(LIBTOOL) --tag CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \\\n @ENABLE_SYMVERS_GNU_TRUE@@ENABLE_SYMVERS_SOL2_FALSE@@ENABLE_SYMVERS_TRUE@version_dep = libstdc++-symbols.ver\n @ENABLE_SYMVERS_GNU_TRUE@@ENABLE_SYMVERS_SOL2_TRUE@@ENABLE_SYMVERS_TRUE@version_dep = libstdc++-symbols.ver-sol2\n @ENABLE_SYMVERS_SUN_TRUE@@ENABLE_SYMVERS_TRUE@version_dep = libstdc++-symbols.ver-sun\n-debugdir = debug\n+@GLIBCXX_BUILD_DEBUG_FALSE@STAMP_DEBUG = \n+\n+# Added rules.\n+# 1 debug library\n+# 2 supra-convenience library\n+@GLIBCXX_BUILD_DEBUG_TRUE@STAMP_DEBUG = build-debug\n+@GLIBCXX_BUILD_DEBUG_FALSE@STAMP_INSTALL_DEBUG = \n+@GLIBCXX_BUILD_DEBUG_TRUE@STAMP_INSTALL_DEBUG = install-debug\n+@GLIBCXX_BUILD_DEBUG_FALSE@CLEAN_DEBUG = \n+@GLIBCXX_BUILD_DEBUG_TRUE@CLEAN_DEBUG = debug\n+\n+# Build a debug variant.\n+# Take care to fix all possibly-relative paths.\n+debugdir = ${glibcxx_builddir}/src/debug\n all: all-recursive\n \n .SUFFIXES:\n@@ -655,8 +668,8 @@ maintainer-clean-generic:\n \t@echo \"it deletes files that may require special tools to rebuild.\"\n clean: clean-recursive\n \n-clean-am: clean-generic clean-libtool clean-toolexeclibLTLIBRARIES \\\n-\tmostlyclean-am\n+clean-am: clean-generic clean-libtool clean-local \\\n+\tclean-toolexeclibLTLIBRARIES mostlyclean-am\n \n distclean: distclean-recursive\n \t-rm -f Makefile\n@@ -727,7 +740,7 @@ uninstall-am: uninstall-toolexeclibLTLIBRARIES\n \n .PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \\\n \tall all-am all-local check check-am clean clean-generic \\\n-\tclean-libtool clean-toolexeclibLTLIBRARIES ctags \\\n+\tclean-libtool clean-local clean-toolexeclibLTLIBRARIES ctags \\\n \tctags-recursive distclean distclean-compile distclean-generic \\\n \tdistclean-libtool distclean-tags dvi dvi-am html html-am info \\\n \tinfo-am install install-am install-data install-data-am \\\n@@ -785,13 +798,15 @@ vpath % $(top_srcdir)\n @ENABLE_SYMVERS_DARWIN_TRUE@@ENABLE_SYMVERS_TRUE@\t    sed 's,/\\([^/.]*\\)\\.la,/.libs/\\1.a,g'` \\\n @ENABLE_SYMVERS_DARWIN_TRUE@@ENABLE_SYMVERS_TRUE@\t > $@ || (rm -f $@ ; exit 1)\n \n-# Added rules.\n-# 1 debug library\n-# 2 supra-convenience library\n-@GLIBCXX_BUILD_DEBUG_TRUE@all-local: libstdc++convenience.la build_debug\n-@GLIBCXX_BUILD_DEBUG_TRUE@install-data-local: install_debug\n-@GLIBCXX_BUILD_DEBUG_FALSE@all-local: libstdc++convenience.la\n-@GLIBCXX_BUILD_DEBUG_FALSE@install-data-local:\n+# Control additional build primary rules.\n+# EXTRA_LTLIBRARIES =\n+all-once: libstdc++convenience.la $(STAMP_DEBUG)\n+install-data-once: $(STAMP_INSTALL_DEBUG)\n+\n+all-local: all-once\n+install-data-local: install-data-once\n+clean-local:\n+\trm -rf libstdc++convenience.la stamp* $(CLEAN_DEBUG)\n \n # Make a non-installed convenience library, so that --disable-static\n # may work.\n@@ -801,32 +816,44 @@ libstdc++convenience.la: $(toolexeclib_LTLIBRARIES)\n \t  cp .libs/libstdc++convenience.a .libs/libstdc++.a; \\\n \tfi; \\\n \techo `date` > stamp-libstdc++convenience;\n-\n-# Build a set of debug objects here.\n-# Take care to fix all possibly-relative paths.\n stamp-debug:\n \tif test ! -d ${debugdir}; then \\\n \t  mkdir -p ${debugdir}; \\\n+\t  for d in $(SUBDIRS); do mkdir -p  ${debugdir}/$$d; done; \\\n \t  (cd ${debugdir}; \\\n \t  sed -e 's/top_builddir = \\.\\./top_builddir = ..\\/../' \\\n \t      -e 's/top_build_prefix = \\.\\./top_build_prefix = ..\\/../' \\\n \t      -e 's/srcdir = \\.\\./srcdir = ..\\/../' \\\n \t      -e 's/VPATH = \\.\\./VPATH = ..\\/../' \\\n \t      -e 's/glibcxx_basedir = \\.\\./glibcxx_basedir = ..\\/../' \\\n \t      -e 's/MKDIR_P = \\.\\./MKDIR_P = ..\\/../' \\\n-\t      -e 's/all-local: build_debug/all-local:/' \\\n-\t      -e 's/install-data-local: install_debug/install-data-local:/' \\\n-\t  < ../Makefile > Makefile) ; \\\n+\t  < ../Makefile > Makefile ; \\\n+\t  for d in . $(SUBDIRS); do \\\n+\t  sed -e 's/top_builddir = \\.\\./top_builddir = ..\\/../' \\\n+\t      -e 's/top_build_prefix = \\.\\./top_build_prefix = ..\\/../' \\\n+\t      -e 's/srcdir = \\.\\./srcdir = ..\\/../' \\\n+\t      -e 's/VPATH = \\.\\./VPATH = ..\\/../' \\\n+\t      -e 's/glibcxx_basedir = \\.\\./glibcxx_basedir = ..\\/../' \\\n+\t      -e 's/MKDIR_P = \\.\\./MKDIR_P = ..\\/../' \\\n+\t  < ../$$d/Makefile > $$d/Makefile ; \\\n+\t  done) ; \\\n \tfi; \\\n \techo `date` > stamp-debug;\n \n-build_debug: stamp-debug\n-\t(cd ${debugdir} && $(MAKE) CXXFLAGS='$(DEBUG_FLAGS)' all)\n-\n-# Install debug library here.\n-install_debug:\n-\t(cd ${debugdir} && $(MAKE) \\\n-\ttoolexeclibdir=$(glibcxx_toolexeclibdir)/debug install)\n+build-debug: stamp-debug\n+\t  (cd ${debugdir}; \\\n+\t  mv Makefile Makefile.tmp; \\\n+\t  sed -e 's,all-local: all-once,all-local:,' \\\n+\t      -e 's,install-data-local: install-data-once,install-data-local:,' \\\n+\t      -e 's,src/c,src/debug/c,' \\\n+\t  < Makefile.tmp > Makefile ; \\\n+\t  $(MAKE) CXXFLAGS='$(DEBUG_FLAGS)' \\\n+\t  toolexeclibdir=$(glibcxx_toolexeclibdir)/debug all) ;\n+\n+# Install debug library.\n+install-debug: build-debug\n+\t(cd ${debugdir} && $(MAKE) CXXFLAGS='$(DEBUG_FLAGS)' \\\n+\ttoolexeclibdir=$(glibcxx_toolexeclibdir)/debug install) ;\n \n # Tell versions [3.59,3.63) of GNU make to not export all variables.\n # Otherwise a system limit (for SysV at least) may be exceeded."}]}