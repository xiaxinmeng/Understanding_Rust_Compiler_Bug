{"sha": "3011f1046628d5ce5e6e5f8e917a6aea1385fdc3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzAxMWYxMDQ2NjI4ZDVjZTVlNmU1ZjhlOTE3YTZhZWExMzg1ZmRjMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-06-04T09:17:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-06-04T09:17:05Z"}, "message": "c++: Fix up attribute handling in methods in templates [PR100872]\n\nThe following testcase FAILs because a dependent (late) attribute is never\ntsubsted.  While the testcase is OpenMP, I think it is a generic C++ FE problem\nthat could affect any other dependent attribute.\n\napply_late_template_attributes documents that it relies on\n  /* save_template_attributes puts the dependent attributes at the beginning of\n     the list; find the non-dependent ones.  */\nThe \"operator binding\" attributes that are sometimes added are added to the\nhead of DECL_ATTRIBUTES list though and because it doesn't have\nATTR_IS_DEPENDENT set it violates this requirement.\n\nThe following patch fixes it by adding that attribute after all\nATTR_IS_DEPENDENT attributes.  I'm not 100% sure if DECL_ATTRIBUTES can't be\nshared by multiple functions (e.g. the cdtor clones), but the code uses\nlater remove_attribute which could break that too.\n\nOther option would be to copy_list the ATTR_IS_DEPENDENT portion of the\nDECL_ATTRIBUTES list if we need to do this, that would be the same as this\npatch but replace that *ap = op_attr; at the end with\n      *ap = NULL_TREE;\n      DECL_ATTRIBUTES (cfn) = chainon (copy_list (DECL_ATTRIBUTES (cfn)),\n                                       op_attr);\nOr perhaps set ATTR_IS_DEPENDENT on the \"operator bindings\" attribute,\nthough it would need to be studied what would it try to do with the\nattribute during tsubst.\n\n2021-06-04  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/100872\n\t* name-lookup.c (maybe_save_operator_binding): Add op_attr after all\n\tATTR_IS_DEPENDENT attributes in the DECL_ATTRIBUTES list rather than\n\tto the start.\n\n\t* g++.dg/gomp/declare-simd-8.C: New test.", "tree": {"sha": "f62be98e3df30a61c8ee59805ae7d3ac003e5e85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f62be98e3df30a61c8ee59805ae7d3ac003e5e85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3011f1046628d5ce5e6e5f8e917a6aea1385fdc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3011f1046628d5ce5e6e5f8e917a6aea1385fdc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3011f1046628d5ce5e6e5f8e917a6aea1385fdc3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3011f1046628d5ce5e6e5f8e917a6aea1385fdc3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39e5a954c156f7af16aa1a8f87405433d8031c4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39e5a954c156f7af16aa1a8f87405433d8031c4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39e5a954c156f7af16aa1a8f87405433d8031c4e"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "241ad2b9c320498e49ec342080aed2878956e0eb", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3011f1046628d5ce5e6e5f8e917a6aea1385fdc3/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3011f1046628d5ce5e6e5f8e917a6aea1385fdc3/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=3011f1046628d5ce5e6e5f8e917a6aea1385fdc3", "patch": "@@ -9136,9 +9136,12 @@ maybe_save_operator_binding (tree e)\n   tree op_attr = lookup_attribute (op_bind_attrname, attributes);\n   if (!op_attr)\n     {\n+      tree *ap = &DECL_ATTRIBUTES (cfn);\n+      while (*ap && ATTR_IS_DEPENDENT (*ap))\n+\tap = &TREE_CHAIN (*ap);\n       op_attr = tree_cons (get_identifier (op_bind_attrname),\n-\t\t\t   NULL_TREE, attributes);\n-      DECL_ATTRIBUTES (cfn) = op_attr;\n+\t\t\t   NULL_TREE, *ap);\n+      *ap = op_attr;\n     }\n \n   tree op_bind = purpose_member (fnname, TREE_VALUE (op_attr));"}, {"sha": "01c91e890914315ccd50e11cbeb5ff7581491a7d", "filename": "gcc/testsuite/g++.dg/gomp/declare-simd-8.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3011f1046628d5ce5e6e5f8e917a6aea1385fdc3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fdeclare-simd-8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3011f1046628d5ce5e6e5f8e917a6aea1385fdc3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fdeclare-simd-8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fdeclare-simd-8.C?ref=3011f1046628d5ce5e6e5f8e917a6aea1385fdc3", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/100872\n+\n+template <int N, typename T>\n+struct S {\n+  #pragma omp declare simd aligned(a : N * 2) aligned(b) linear(ref(b): N)\n+  float foo (float *a, T *&b) { return *a + *b; }\n+};\n+\n+S<16, float> s;\n+\n+float\n+bar (float *a, float *p)\n+{\n+  return s.foo (a, p);\n+}"}]}