{"sha": "339746734abcaef4a7ff871efdd0c2b02ffa3afc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM5NzQ2NzM0YWJjYWVmNGE3ZmY4NzFlZmRkMGMyYjAyZmZhM2FmYw==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2010-08-04T18:32:37Z"}, "committer": {"name": "Steve Ellcey", "email": "sje@gcc.gnu.org", "date": "2010-08-04T18:32:37Z"}, "message": "re PR target/44583 (c-c++-common/torture/complex-sign-add.c fails for signed zeros)\n\n2010-07-29  Steve Ellcey  <sje@cup.hp.com>\n\n\tPR target/44583\n\t* config/ia64/constraints.md (Z): New.\n\t* config/ia64/predicates.md (fr_reg_or_signed_fp01_operand): New.\n\t(xfreg_or_signed_fp01_operand): New.\n\t* config/ia64/ia64.md (addsf3): Replace fr_reg_or_fp01_operand\n\twith fr_reg_or_signed_fp01_operand and constraint G with Z.\n\t(subsf3): Ditto.\n\t(*maddsf4): Ditto.\n\t(*msubsf4): Ditto.\n\t(adddf3): Ditto.\n\t(adddf3_trunc): Ditto.\n\t(subdf3): Ditto.\n\t(*subdf3_trunc): Ditto.\n\t(*madddf4): Ditto.\n\t(*madddf4_trunc): Ditto.\n\t(*msubdf4): Ditto.\n\t(*msubdf4_trunc): Ditto.\n\t(addxf3): Replace xfreg_or_fp01_operand with\n\txfreg_or_signed_fp01_operand and constraint G with Z.\n\t(*addxf3_truncsf): Ditto.\n\t(*addxf3_truncdf): Ditto.\n\t(subxf3): Ditto.\n\t(*subxf3_truncsf): Ditto.\n\t(*subxf3_truncdf): Ditto.\n\t(*maddxf4): Ditto.\n\t(*maddxf4_truncsf): Ditto.\n\t(*maddxf4_truncdf): Ditto.\n\t(*msubxf4): Ditto.\n\t(*msubxf4_truncsf): Ditto.\n\t(*msubxf4_truncdf): Ditto.\n\nFrom-SVN: r162869", "tree": {"sha": "aeb803c62cd134d45b19cbdee16678cff31e4443", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aeb803c62cd134d45b19cbdee16678cff31e4443"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/339746734abcaef4a7ff871efdd0c2b02ffa3afc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/339746734abcaef4a7ff871efdd0c2b02ffa3afc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/339746734abcaef4a7ff871efdd0c2b02ffa3afc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/339746734abcaef4a7ff871efdd0c2b02ffa3afc/comments", "author": null, "committer": null, "parents": [{"sha": "3b0c690efc298363b4043746b058852fdafc5799", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b0c690efc298363b4043746b058852fdafc5799", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b0c690efc298363b4043746b058852fdafc5799"}], "stats": {"total": 113, "additions": 83, "deletions": 30}, "files": [{"sha": "0fc6486523ba7179720911d4bf4cdba7456ee052", "filename": "gcc/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/339746734abcaef4a7ff871efdd0c2b02ffa3afc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/339746734abcaef4a7ff871efdd0c2b02ffa3afc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=339746734abcaef4a7ff871efdd0c2b02ffa3afc", "patch": "@@ -1,3 +1,36 @@\n+2010-08-04  Steve Ellcey  <sje@cup.hp.com>\n+\n+\tPR target/44583\n+\t* config/ia64/constraints.md (Z): New.\n+\t* config/ia64/predicates.md (fr_reg_or_signed_fp01_operand): New.\n+\t(xfreg_or_signed_fp01_operand): New.\n+\t* config/ia64/ia64.md (addsf3): Replace fr_reg_or_fp01_operand\n+\twith fr_reg_or_signed_fp01_operand and constraint G with Z.\n+\t(subsf3): Ditto.\n+\t(*maddsf4): Ditto.\n+\t(*msubsf4): Ditto.\n+\t(adddf3): Ditto.\n+\t(adddf3_trunc): Ditto.\n+\t(subdf3): Ditto.\n+\t(*subdf3_trunc): Ditto.\n+\t(*madddf4): Ditto.\n+\t(*madddf4_trunc): Ditto.\n+\t(*msubdf4): Ditto.\n+\t(*msubdf4_trunc): Ditto.\n+\t(addxf3): Replace xfreg_or_fp01_operand with\n+\txfreg_or_signed_fp01_operand and constraint G with Z.\n+\t(*addxf3_truncsf): Ditto.\n+\t(*addxf3_truncdf): Ditto.\n+\t(subxf3): Ditto.\n+\t(*subxf3_truncsf): Ditto.\n+\t(*subxf3_truncdf): Ditto.\n+\t(*maddxf4): Ditto.\n+\t(*maddxf4_truncsf): Ditto.\n+\t(*maddxf4_truncdf): Ditto.\n+\t(*msubxf4): Ditto.\n+\t(*msubxf4_truncsf): Ditto.\n+\t(*msubxf4_truncdf): Ditto.\n+\n 2010-08-04  Richard Guenther  <rguenther@suse.de>\n \n \t* alias.c (rtx_refs_may_alias_p): Do not resort to TBAA"}, {"sha": "aeb846e6c2477891f3eebeef84a1771f1c0d4768", "filename": "gcc/config/ia64/constraints.md", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/339746734abcaef4a7ff871efdd0c2b02ffa3afc/gcc%2Fconfig%2Fia64%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/339746734abcaef4a7ff871efdd0c2b02ffa3afc/gcc%2Fconfig%2Fia64%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fconstraints.md?ref=339746734abcaef4a7ff871efdd0c2b02ffa3afc", "patch": "@@ -95,6 +95,13 @@\n   (and (match_code \"const_double\")\n        (match_test \"op == CONST0_RTX (mode) || op == CONST1_RTX (mode)\")))\n \n+(define_constraint \"Z\"\n+  \"1.0 or (0.0 and !flag_signed_zeros)\"\n+  (and (match_code \"const_double\")\n+       (ior (match_test \"op == CONST1_RTX (mode)\")\n+\t    (and (match_test \"op == CONST0_RTX (mode)\")\n+\t\t (match_test \"!flag_signed_zeros\")))))\n+\n (define_constraint \"H\"\n   \"0.0\"\n   (and (match_code \"const_double\")"}, {"sha": "aa262487808dedc51a6276aed7ae6a7a0bc4c7fa", "filename": "gcc/config/ia64/ia64.md", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/339746734abcaef4a7ff871efdd0c2b02ffa3afc/gcc%2Fconfig%2Fia64%2Fia64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/339746734abcaef4a7ff871efdd0c2b02ffa3afc/gcc%2Fconfig%2Fia64%2Fia64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.md?ref=339746734abcaef4a7ff871efdd0c2b02ffa3afc", "patch": "@@ -2663,16 +2663,16 @@\n \n (define_insn \"addsf3\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n-\t(plus:SF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n-\t\t (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n+\t(plus:SF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"%fG\")\n+\t\t (match_operand:SF 2 \"fr_reg_or_signed_fp01_operand\" \"fZ\")))]\n   \"\"\n   \"fadd.s %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"subsf3\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(minus:SF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n-\t\t  (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n+\t\t  (match_operand:SF 2 \"fr_reg_or_signed_fp01_operand\" \"fZ\")))]\n   \"\"\n   \"fsub.s %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n@@ -2744,7 +2744,7 @@\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(plus:SF (mult:SF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t\t  (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"fG\"))\n-\t\t (match_operand:SF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n+\t\t (match_operand:SF 3 \"fr_reg_or_signed_fp01_operand\" \"fZ\")))]\n   \"TARGET_FUSED_MADD\"\n   \"fma.s %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n@@ -2753,7 +2753,7 @@\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(minus:SF (mult:SF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t\t   (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"fG\"))\n-\t\t  (match_operand:SF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n+\t\t  (match_operand:SF 3 \"fr_reg_or_signed_fp01_operand\" \"fZ\")))]\n   \"TARGET_FUSED_MADD\"\n   \"fms.s %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n@@ -2783,25 +2783,25 @@\n \n (define_insn \"adddf3\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n-\t(plus:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n-\t\t (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n+\t(plus:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"%fG\")\n+\t\t (match_operand:DF 2 \"fr_reg_or_signed_fp01_operand\" \"fZ\")))]\n   \"\"\n   \"fadd.d %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*adddf3_trunc\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(float_truncate:SF\n-\t  (plus:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n-\t\t   (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n+\t  (plus:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"%fG\")\n+\t\t   (match_operand:DF 2 \"fr_reg_or_signed_fp01_operand\" \"fZ\"))))]\n   \"\"\n   \"fadd.s %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"subdf3\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(minus:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n-\t\t  (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n+\t\t  (match_operand:DF 2 \"fr_reg_or_signed_fp01_operand\" \"fZ\")))]\n   \"\"\n   \"fsub.d %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n@@ -2810,7 +2810,7 @@\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(float_truncate:SF\n \t  (minus:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n-\t\t    (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n+\t\t    (match_operand:DF 2 \"fr_reg_or_signed_fp01_operand\" \"fZ\"))))]\n   \"\"\n   \"fsub.s %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n@@ -2891,7 +2891,7 @@\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(plus:DF (mult:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t\t  (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\"))\n-\t\t (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n+\t\t (match_operand:DF 3 \"fr_reg_or_signed_fp01_operand\" \"fZ\")))]\n   \"TARGET_FUSED_MADD\"\n   \"fma.d %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n@@ -2901,7 +2901,7 @@\n \t(float_truncate:SF\n \t  (plus:DF (mult:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t\t    (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\"))\n-\t\t   (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n+\t\t   (match_operand:DF 3 \"fr_reg_or_signed_fp01_operand\" \"fZ\"))))]\n   \"TARGET_FUSED_MADD\"\n   \"fma.s %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n@@ -2910,7 +2910,7 @@\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(minus:DF (mult:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t\t   (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\"))\n-\t\t  (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n+\t\t  (match_operand:DF 3 \"fr_reg_or_signed_fp01_operand\" \"fZ\")))]\n   \"TARGET_FUSED_MADD\"\n   \"fms.d %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n@@ -2920,7 +2920,7 @@\n \t(float_truncate:SF\n \t  (minus:DF (mult:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t\t     (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\"))\n-\t\t    (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n+\t\t    (match_operand:DF 3 \"fr_reg_or_signed_fp01_operand\" \"fZ\"))))]\n   \"TARGET_FUSED_MADD\"\n   \"fms.s %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n@@ -2969,34 +2969,34 @@\n \n (define_insn \"addxf3\"\n   [(set (match_operand:XF 0 \"fr_register_operand\" \"=f\")\n-\t(plus:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n-\t\t (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\")))]\n+\t(plus:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"%fG\")\n+\t\t (match_operand:XF 2 \"xfreg_or_signed_fp01_operand\" \"fZ\")))]\n   \"\"\n   \"fadd %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*addxf3_truncsf\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(float_truncate:SF\n-\t  (plus:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n-\t\t   (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\"))))]\n+\t  (plus:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"%fG\")\n+\t\t   (match_operand:XF 2 \"xfreg_or_signed_fp01_operand\" \"fZ\"))))]\n   \"\"\n   \"fadd.s %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*addxf3_truncdf\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(float_truncate:DF\n-\t  (plus:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n-\t\t   (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\"))))]\n+\t  (plus:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"%fG\")\n+\t\t   (match_operand:XF 2 \"xfreg_or_signed_fp01_operand\" \"fZ\"))))]\n   \"\"\n   \"fadd.d %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"subxf3\"\n   [(set (match_operand:XF 0 \"fr_register_operand\" \"=f\")\n \t(minus:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n-\t\t  (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\")))]\n+\t\t  (match_operand:XF 2 \"xfreg_or_signed_fp01_operand\" \"fZ\")))]\n   \"\"\n   \"fsub %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n@@ -3005,7 +3005,7 @@\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(float_truncate:SF\n \t  (minus:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n-\t\t    (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\"))))]\n+\t\t    (match_operand:XF 2 \"xfreg_or_signed_fp01_operand\" \"fZ\"))))]\n   \"\"\n   \"fsub.s %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n@@ -3014,7 +3014,7 @@\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(float_truncate:DF\n \t  (minus:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n-\t\t    (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\"))))]\n+\t\t    (match_operand:XF 2 \"xfreg_or_signed_fp01_operand\" \"fZ\"))))]\n   \"\"\n   \"fsub.d %0 = %F1, %F2\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n@@ -3104,7 +3104,7 @@\n   [(set (match_operand:XF 0 \"fr_register_operand\" \"=f\")\n \t(plus:XF (mult:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n \t\t\t  (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\"))\n-\t\t (match_operand:XF 3 \"xfreg_or_fp01_operand\" \"fG\")))]\n+\t\t (match_operand:XF 3 \"xfreg_or_signed_fp01_operand\" \"fZ\")))]\n   \"TARGET_FUSED_MADD\"\n   \"fma %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n@@ -3114,7 +3114,7 @@\n \t(float_truncate:SF\n \t  (plus:XF (mult:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n \t\t\t    (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\"))\n-\t\t   (match_operand:XF 3 \"xfreg_or_fp01_operand\" \"fG\"))))]\n+\t\t   (match_operand:XF 3 \"xfreg_or_signed_fp01_operand\" \"fZ\"))))]\n   \"TARGET_FUSED_MADD\"\n   \"fma.s %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n@@ -3124,7 +3124,7 @@\n \t(float_truncate:DF\n \t  (plus:XF (mult:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n \t\t\t    (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\"))\n-\t\t   (match_operand:XF 3 \"xfreg_or_fp01_operand\" \"fG\"))))]\n+\t\t   (match_operand:XF 3 \"xfreg_or_signed_fp01_operand\" \"fZ\"))))]\n   \"TARGET_FUSED_MADD\"\n   \"fma.d %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n@@ -3133,7 +3133,7 @@\n   [(set (match_operand:XF 0 \"fr_register_operand\" \"=f\")\n \t(minus:XF (mult:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n \t\t\t   (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\"))\n-\t\t  (match_operand:XF 3 \"xfreg_or_fp01_operand\" \"fG\")))]\n+\t\t  (match_operand:XF 3 \"xfreg_or_signed_fp01_operand\" \"fZ\")))]\n   \"TARGET_FUSED_MADD\"\n   \"fms %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n@@ -3143,7 +3143,7 @@\n \t(float_truncate:SF\n \t  (minus:XF (mult:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n \t\t\t     (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\"))\n-\t\t    (match_operand:XF 3 \"xfreg_or_fp01_operand\" \"fG\"))))]\n+\t\t    (match_operand:XF 3 \"xfreg_or_signed_fp01_operand\" \"fZ\"))))]\n   \"TARGET_FUSED_MADD\"\n   \"fms.s %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])\n@@ -3153,7 +3153,7 @@\n \t(float_truncate:DF\n \t  (minus:XF (mult:XF (match_operand:XF 1 \"xfreg_or_fp01_operand\" \"fG\")\n \t\t\t     (match_operand:XF 2 \"xfreg_or_fp01_operand\" \"fG\"))\n-\t\t    (match_operand:XF 3 \"xfreg_or_fp01_operand\" \"fG\"))))]\n+\t\t    (match_operand:XF 3 \"xfreg_or_signed_fp01_operand\" \"fZ\"))))]\n   \"TARGET_FUSED_MADD\"\n   \"fms.d %0 = %F1, %F2, %F3\"\n   [(set_attr \"itanium_class\" \"fmac\")])"}, {"sha": "af24827a8b5208743006553591f18481600e3cbc", "filename": "gcc/config/ia64/predicates.md", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/339746734abcaef4a7ff871efdd0c2b02ffa3afc/gcc%2Fconfig%2Fia64%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/339746734abcaef4a7ff871efdd0c2b02ffa3afc/gcc%2Fconfig%2Fia64%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fpredicates.md?ref=339746734abcaef4a7ff871efdd0c2b02ffa3afc", "patch": "@@ -542,6 +542,19 @@\n   (and (match_operand 0 \"fr_reg_or_fp01_operand\")\n        (not (match_code \"subreg\"))))\n \n+;; Like fr_reg_or_fp01_operand, but don't allow 0 if flag_signed_zero is set.\n+;; Using f0 as the second arg to fadd or fsub, or as the third arg to fma or\n+;; fms can cause a zero result to have the wrong sign.\n+(define_predicate \"fr_reg_or_signed_fp01_operand\"\n+  (ior (match_operand 0 \"fr_register_operand\")\n+       (and (match_code \"const_double\")\n+\t    (match_test \"satisfies_constraint_Z (op)\"))))\n+\n+;; Like fr_reg_or_signed_fp01_operand, but don't allow any SUBREGs.\n+(define_predicate \"xfreg_or_signed_fp01_operand\"\n+  (and (match_operand 0 \"fr_reg_or_signed_fp01_operand\")\n+       (not (match_code \"subreg\"))))\n+\n ;; True if OP is a constant zero, or a register.\n (define_predicate \"fr_reg_or_0_operand\"\n   (ior (match_operand 0 \"fr_register_operand\")"}]}