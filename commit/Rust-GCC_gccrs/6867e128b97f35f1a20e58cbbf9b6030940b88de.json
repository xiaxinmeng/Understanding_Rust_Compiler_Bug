{"sha": "6867e128b97f35f1a20e58cbbf9b6030940b88de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg2N2UxMjhiOTdmMzVmMWEyMGU1OGNiYmY5YjYwMzA5NDBiODhkZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2013-10-03T17:27:32Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2013-10-03T17:27:32Z"}, "message": "i386.c (ix86_issue_rate): Pentium4, Nocona has issue rate of 2.\n\n\t* i386.c (ix86_issue_rate): Pentium4, Nocona has issue rate of 2.\n\tCore2, Corei7 and Haswell has issue rate of 4.\n\t(ix86_adjust_cost): Remove ATOM case; fix core2/corei7/Haswell case.\n\nFrom-SVN: r203172", "tree": {"sha": "a82c980dd47861621de90355898987c3a014390c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a82c980dd47861621de90355898987c3a014390c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6867e128b97f35f1a20e58cbbf9b6030940b88de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6867e128b97f35f1a20e58cbbf9b6030940b88de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6867e128b97f35f1a20e58cbbf9b6030940b88de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6867e128b97f35f1a20e58cbbf9b6030940b88de/comments", "author": null, "committer": null, "parents": [{"sha": "c7f36d55a63c3328c60e4198781867d61e14d886", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7f36d55a63c3328c60e4198781867d61e14d886", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7f36d55a63c3328c60e4198781867d61e14d886"}], "stats": {"total": 48, "additions": 42, "deletions": 6}, "files": [{"sha": "2d5c759c1c24461b27957c9e7c03d5e4af363560", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6867e128b97f35f1a20e58cbbf9b6030940b88de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6867e128b97f35f1a20e58cbbf9b6030940b88de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6867e128b97f35f1a20e58cbbf9b6030940b88de", "patch": "@@ -1,3 +1,9 @@\n+2013-10-03  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.c (ix86_issue_rate): Pentium4, Nocona has issue rate of 2.\n+\tCore2, Corei7 and Haswell has issue rate of 4.\n+\t(ix86_adjust_cost): Remove ATOM case; fix core2/corei7/Haswell case.\n+\n 2013-10-03  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.c (ix86_option_override_internal): Do not enable"}, {"sha": "1713ad6f06d55079ac25f7da212ad618ff526027", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 36, "deletions": 6, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6867e128b97f35f1a20e58cbbf9b6030940b88de/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6867e128b97f35f1a20e58cbbf9b6030940b88de/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=6867e128b97f35f1a20e58cbbf9b6030940b88de", "patch": "@@ -24418,24 +24418,26 @@ ix86_issue_rate (void)\n     case PROCESSOR_SLM:\n     case PROCESSOR_K6:\n     case PROCESSOR_BTVER2:\n+    case PROCESSOR_PENTIUM4:\n+    case PROCESSOR_NOCONA:\n       return 2;\n \n     case PROCESSOR_PENTIUMPRO:\n-    case PROCESSOR_PENTIUM4:\n-    case PROCESSOR_CORE2:\n-    case PROCESSOR_COREI7:\n-    case PROCESSOR_HASWELL:\n     case PROCESSOR_ATHLON:\n     case PROCESSOR_K8:\n     case PROCESSOR_AMDFAM10:\n-    case PROCESSOR_NOCONA:\n     case PROCESSOR_GENERIC:\n     case PROCESSOR_BDVER1:\n     case PROCESSOR_BDVER2:\n     case PROCESSOR_BDVER3:\n     case PROCESSOR_BTVER1:\n       return 3;\n \n+    case PROCESSOR_CORE2:\n+    case PROCESSOR_COREI7:\n+    case PROCESSOR_HASWELL:\n+      return 4;\n+\n     default:\n       return 1;\n     }\n@@ -24692,10 +24694,15 @@ ix86_adjust_cost (rtx insn, rtx link, rtx dep_insn, int cost)\n     case PROCESSOR_BDVER3:\n     case PROCESSOR_BTVER1:\n     case PROCESSOR_BTVER2:\n-    case PROCESSOR_ATOM:\n     case PROCESSOR_GENERIC:\n       memory = get_attr_memory (insn);\n \n+      /* Stack engine allows to execute push&pop instructions in parall.  */\n+      if (((insn_type == TYPE_PUSH || insn_type == TYPE_POP)\n+\t   && (dep_insn_type == TYPE_PUSH || dep_insn_type == TYPE_POP))\n+\t  && (ix86_tune != PROCESSOR_ATHLON && ix86_tune != PROCESSOR_K8))\n+\treturn 0;\n+\n       /* Show ability of reorder buffer to hide latency of load by executing\n \t in parallel with previous instruction in case\n \t previous instruction is not needed to compute the address.  */\n@@ -24722,6 +24729,29 @@ ix86_adjust_cost (rtx insn, rtx link, rtx dep_insn, int cost)\n \t}\n       break;\n \n+    case PROCESSOR_CORE2:\n+    case PROCESSOR_COREI7:\n+    case PROCESSOR_HASWELL:\n+      memory = get_attr_memory (insn);\n+\n+      /* Stack engine allows to execute push&pop instructions in parall.  */\n+      if ((insn_type == TYPE_PUSH || insn_type == TYPE_POP)\n+\t  && (dep_insn_type == TYPE_PUSH || dep_insn_type == TYPE_POP))\n+\treturn 0;\n+\n+      /* Show ability of reorder buffer to hide latency of load by executing\n+\t in parallel with previous instruction in case\n+\t previous instruction is not needed to compute the address.  */\n+      if ((memory == MEMORY_LOAD || memory == MEMORY_BOTH)\n+\t  && !ix86_agi_dependent (dep_insn, insn))\n+\t{\n+\t  if (cost >= 4)\n+\t    cost -= 4;\n+\t  else\n+\t    cost = 0;\n+\t}\n+      break;\n+\n     case PROCESSOR_SLM:\n       if (!reload_completed)\n \treturn cost;"}]}