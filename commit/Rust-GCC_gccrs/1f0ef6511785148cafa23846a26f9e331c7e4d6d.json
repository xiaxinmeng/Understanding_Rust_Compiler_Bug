{"sha": "1f0ef6511785148cafa23846a26f9e331c7e4d6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWYwZWY2NTExNzg1MTQ4Y2FmYTIzODQ2YTI2ZjllMzMxYzdlNGQ2ZA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2003-06-10T22:00:43Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-06-10T22:00:43Z"}, "message": "fstream.tcc (close): Clean up a bit.\n\n2003-06-10  Paolo Carlini  <pcarlini@unitus.it>\n\n\t* include/bits/fstream.tcc (close): Clean up a bit.\n\n\t* include/bits/streambuf.tcc (sbumpc): Clean up a bit.\n\n\t* include/std/std_fstream.h (_M_destroy_pback): _M_pback_cur_save\n\t- the saved _M_in_cur, that is - cannot be null.\n\t(sync): Constify a variable.\n\n\t* include/std/std_streambuf.h: Tweak a comment.\n\t(in_avail): Constify a variable.\n\nFrom-SVN: r67738", "tree": {"sha": "5b58dfe6d9667340a91ac1704b87da6a4ba7cb96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b58dfe6d9667340a91ac1704b87da6a4ba7cb96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f0ef6511785148cafa23846a26f9e331c7e4d6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f0ef6511785148cafa23846a26f9e331c7e4d6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f0ef6511785148cafa23846a26f9e331c7e4d6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f0ef6511785148cafa23846a26f9e331c7e4d6d/comments", "author": null, "committer": null, "parents": [{"sha": "3b1b059cc3be458670373def6dbe5a3dedf0bb3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b1b059cc3be458670373def6dbe5a3dedf0bb3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b1b059cc3be458670373def6dbe5a3dedf0bb3b"}], "stats": {"total": 30, "additions": 20, "deletions": 10}, "files": [{"sha": "0c01a43308e49a7ae837a6e3cf8f64d35a6f8ab9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0ef6511785148cafa23846a26f9e331c7e4d6d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0ef6511785148cafa23846a26f9e331c7e4d6d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1f0ef6511785148cafa23846a26f9e331c7e4d6d", "patch": "@@ -1,3 +1,16 @@\n+2003-06-10  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* include/bits/fstream.tcc (close): Clean up a bit.\n+\n+\t* include/bits/streambuf.tcc (sbumpc): Clean up a bit.\n+\n+\t* include/std/std_fstream.h (_M_destroy_pback): _M_pback_cur_save\n+\t- the saved _M_in_cur, that is - cannot be null.\n+\t(sync): Constify a variable.\n+\n+\t* include/std/std_streambuf.h: Tweak a comment.\n+\t(in_avail): Constify a variable.\n+\n 2003-06-10  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* docs/html/17_intro/BUGS:  Update from 2.90.8 snapshot."}, {"sha": "908cc7567af6a1e75b92bb93de1f067accdb4bac", "filename": "libstdc++-v3/include/bits/fstream.tcc", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0ef6511785148cafa23846a26f9e331c7e4d6d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0ef6511785148cafa23846a26f9e331c7e4d6d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffstream.tcc?ref=1f0ef6511785148cafa23846a26f9e331c7e4d6d", "patch": "@@ -120,13 +120,12 @@ namespace std\n \t  bool __testfail = false;\n \t  try\n \t    {\n-\t      const int_type __eof = traits_type::eof();\n \t      const bool __testput = this->_M_out_beg < this->_M_out_lim;\n \n \t      if (__testput \n-\t\t  && traits_type::eq_int_type(this->overflow(), __eof))\n+\t\t  && traits_type::eq_int_type(this->overflow(),\n+\t\t\t\t\t      traits_type::eof()))\n \t\t__testfail = true;\n-\n #if 0\n \t      // XXX not done\n \t      if (_M_last_overflowed)"}, {"sha": "f6a96e855816153f98bce6125062c72976df6c34", "filename": "libstdc++-v3/include/bits/streambuf.tcc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0ef6511785148cafa23846a26f9e331c7e4d6d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0ef6511785148cafa23846a26f9e331c7e4d6d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc?ref=1f0ef6511785148cafa23846a26f9e331c7e4d6d", "patch": "@@ -47,9 +47,8 @@ namespace std\n       int_type __ret;\n       if (_M_in_cur < _M_in_end)\n \t{\n-\t  char_type __c = *this->_M_in_cur;\n+\t  __ret = traits_type::to_int_type(*this->_M_in_cur);\n \t  _M_move_in_cur(1);\n-\t  __ret = traits_type::to_int_type(__c);\n \t}\n       else \n \t__ret = this->uflow();"}, {"sha": "7cc0dbd8e1f9916ac21dbd06ddeb460d8c5404c7", "filename": "libstdc++-v3/include/std/std_fstream.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0ef6511785148cafa23846a26f9e331c7e4d6d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0ef6511785148cafa23846a26f9e331c7e4d6d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_fstream.h?ref=1f0ef6511785148cafa23846a26f9e331c7e4d6d", "patch": "@@ -191,8 +191,7 @@ namespace std\n \tif (_M_pback_init)\n \t  {\n \t    // Length _M_in_cur moved in the pback buffer.\n-\t    if (_M_pback_cur_save)\n-\t      _M_pback_cur_save += this->_M_in_cur != this->_M_in_beg;\n+\t    _M_pback_cur_save += this->_M_in_cur != this->_M_in_beg;\n \t    this->setg(this->_M_buf, _M_pback_cur_save, _M_pback_end_save);\n \t    _M_pback_init = false;\n \t  }\n@@ -373,7 +372,7 @@ namespace std\n \tif (__testput)\n \t  {\n \t    // Need to restore current position after the write.\n-\t    off_type __off = this->_M_out_cur - this->_M_out_lim;\n+\t    const off_type __off = this->_M_out_cur - this->_M_out_lim;\n \n \t    // _M_file.sync() will be called within.\n \t    if (traits_type::eq_int_type(this->overflow(), traits_type::eof()))"}, {"sha": "20928078d9dbd1c7ab1e17cd6e1fadd99a56cdd7", "filename": "libstdc++-v3/include/std/std_streambuf.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f0ef6511785148cafa23846a26f9e331c7e4d6d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f0ef6511785148cafa23846a26f9e331c7e4d6d/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h?ref=1f0ef6511785148cafa23846a26f9e331c7e4d6d", "patch": "@@ -181,7 +181,7 @@ namespace std\n        *  @if maint\n        *  setp (and _M_set_buffer(0) in basic_filebuf) set it equal to\n        *  _M_out_beg, then at each put operation it may be moved\n-       *  forward (toward _M_out_end) by _M_out_cur_move.\n+       *  forward (toward _M_out_end) by _M_move_out_cur.\n        *  @endif\n       */      \n       char_type*                _M_out_lim;    // End limit of used put area.\n@@ -328,7 +328,7 @@ namespace std\n       streamsize \n       in_avail() \n       { \n-\tstreamsize __ret = _M_in_end - _M_in_cur;\n+\tconst streamsize __ret = _M_in_end - _M_in_cur;\n \treturn __ret ? __ret : this->showmanyc();\n       }\n "}]}