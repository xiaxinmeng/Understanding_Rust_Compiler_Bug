{"sha": "9e04c65a52d300b345d4136d95c93d49aef54781", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUwNGM2NWE1MmQzMDBiMzQ1ZDQxMzZkOTVjOTNkNDlhZWY1NDc4MQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1997-12-22T09:31:41Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-12-22T09:31:41Z"}, "message": "cse.c (rtx_cost): Add default case in enumeration switch.\n\n        * cse.c (rtx_cost): Add default case in enumeration switch.\n        * fix-header.c (recognized_macro): Likewise.\n        (recognized_extern): Likewise.\n        (write_rbrac): Likewise.\n        * objc/objc-act.c (encode_aggregate): Likewise.\n        (gen_declarator): Likewise.\n        (gen_declspecs): Likewise.\n\nFrom-SVN: r17186", "tree": {"sha": "b605e199d2af799e1fad08d6fc58f9a34350d336", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b605e199d2af799e1fad08d6fc58f9a34350d336"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e04c65a52d300b345d4136d95c93d49aef54781", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e04c65a52d300b345d4136d95c93d49aef54781", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e04c65a52d300b345d4136d95c93d49aef54781", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e04c65a52d300b345d4136d95c93d49aef54781/comments", "author": null, "committer": null, "parents": [{"sha": "04029ca2457cdda7ac485532588705a219b2f980", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04029ca2457cdda7ac485532588705a219b2f980", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04029ca2457cdda7ac485532588705a219b2f980"}], "stats": {"total": 59, "additions": 55, "deletions": 4}, "files": [{"sha": "da504dccc737423f56083d8bfcf3e2e1d576acfe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e04c65a52d300b345d4136d95c93d49aef54781/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e04c65a52d300b345d4136d95c93d49aef54781/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e04c65a52d300b345d4136d95c93d49aef54781", "patch": "@@ -1,3 +1,13 @@\n+Mon Dec 22 11:24:01 1997  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+ \n+\t* cse.c (rtx_cost): Add default case in enumeration switch.\n+\t* fix-header.c (recognized_macro): Likewise.\n+\t(recognized_extern): Likewise.\n+\t(write_rbrac): Likewise.\n+\t* objc/objc-act.c (encode_aggregate): Likewise.\n+\t(gen_declarator): Likewise.\n+\t(gen_declspecs): Likewise.\n+\n Mon Dec 22 09:58:51 1997  Jeffrey A Law  (law@cygnus.com)\n \n \t* haifa-sched.c (create_reg_dead_note): Detect and handle another"}, {"sha": "247a3d8c40c0225fa4f05f6a842f833092484378", "filename": "gcc/cse.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e04c65a52d300b345d4136d95c93d49aef54781/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e04c65a52d300b345d4136d95c93d49aef54781/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=9e04c65a52d300b345d4136d95c93d49aef54781", "patch": "@@ -746,6 +746,9 @@ rtx_cost (x, outer_code)\n       RTX_COSTS (x, code, outer_code);\n #endif \n       CONST_COSTS (x, code, outer_code);\n+\n+    default:\n+      break;\n     }\n \n   /* Sum the costs of the sub-rtx's, plus cost of this operation,"}, {"sha": "3b5ec3a760ff080ac390da34fc9f76527fdce20a", "filename": "gcc/fix-header.c", "status": "modified", "additions": 32, "deletions": 4, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e04c65a52d300b345d4136d95c93d49aef54781/gcc%2Ffix-header.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e04c65a52d300b345d4136d95c93d49aef54781/gcc%2Ffix-header.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffix-header.c?ref=9e04c65a52d300b345d4136d95c93d49aef54781", "patch": "@@ -16,7 +16,7 @@ along with this program; if not, write to the Free Software\n Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n \n /* This program massages a system include file (such as stdio.h),\n-   into a form more conforming with ANSI/POSIX, and more suitable for C++:\n+   into a form that is compatible with GNU C and GNU C++.\n \n    * extern \"C\" { ... } braces are added (inside #ifndef __cplusplus),\n    if they seem to be needed.  These prevent C++ compilers from name\n@@ -145,14 +145,31 @@ typedef int symbol_flags;\n /* Used to mark names defined in the ANSI/ISO C standard.  */\n #define ANSI_SYMBOL 1\n \n+/* We no longer massage include files for POSIX or XOPEN symbols,\n+   as there are now several versions of the POSIX and XOPEN standards,\n+   and it would be a maintenance nightmare for us to track them all.\n+   Better to be compatible with the system include files.  */\n+/*#define ADD_MISSING_POSIX 1 */\n+/*#define ADD_MISSING_XOPEN 1 */\n+\n+#if ADD_MISSING_POSIX\n /* Used to mark names defined in the Posix.1 or Posix.2 standard.  */\n #define POSIX1_SYMBOL 2\n #define POSIX2_SYMBOL 4\n+#else\n+#define POSIX1_SYMBOL 0\n+#define POSIX2_SYMBOL 0\n+#endif\n \n+#if ADD_MISSING_XOPEN\n /* Used to mark names defined in X/Open Portability Guide.  */\n #define XOPEN_SYMBOL 8\n /* Used to mark names defined in X/Open UNIX Extensions.  */\n #define XOPEN_EXTENDED_SYMBOL 16\n+#else\n+#define XOPEN_SYMBOL 0\n+#define XOPEN_EXTENDED_SYMBOL 0\n+#endif\n \n /* Used to indicate names that are not functions */\n #define MACRO_SYMBOL 512\n@@ -239,7 +256,7 @@ tan\\0tanh\\0\" },\n   { \"stdio.h\", ANSI_SYMBOL,\n       \"clearerr\\0fclose\\0feof\\0ferror\\0fflush\\0fgetc\\0fgetpos\\0\\\n fgets\\0fopen\\0fprintf\\0fputc\\0fputs\\0fread\\0freopen\\0fscanf\\0fseek\\0\\\n-fsetpos\\0ftell\\0fwrite\\0getc\\0getchar\\0gets\\00perror\\0popen\\0\\\n+fsetpos\\0ftell\\0fwrite\\0getc\\0getchar\\0gets\\0perror\\0\\\n printf\\0putc\\0putchar\\0puts\\0remove\\0rename\\0rewind\\0scanf\\0setbuf\\0\\\n setvbuf\\0sprintf\\0sscanf\\0vprintf\\0vsprintf\\0vfprintf\\0tmpfile\\0\\\n tmpnam\\0ungetc\\0\" },\n@@ -475,6 +492,10 @@ recognized_macro (fname)\n \t  else if (strcmp (fname, \"S_IFREG\") == 0) seen_S_IFREG++;\n \t  else if (strcmp (fname, \"S_ISREG\") == 0) seen_S_ISREG++;\n \t}\n+      break;\n+\n+    default:\n+      break;\n     }\n }\n \n@@ -487,9 +508,12 @@ recognized_extern (name, name_length, type, type_length)\n   switch (special_file_handling)\n     {\n     case errno_h:\n-      if (strcmp (name, \"errno\") == 0 && !seen_errno)\n+      if (name_length == 5 && strncmp (name, \"errno\", 5) == 0 && !seen_errno)\n \tseen_errno = 1, required_other--;\n       break;\n+\n+    default:\n+      break;\n     }\n }\n \n@@ -830,6 +854,9 @@ write_rbrac ()\n \tfprintf (outf,\n \t\t \"#define S_ISREG(mode) (((mode) & S_IFMT) == S_IFREG)\\n\");\n       break;\n+\n+    default:\n+      break;\n     }\n \n \n@@ -1122,7 +1149,8 @@ main (argc, argv)\n       cur_symbol_table_size = 0;\n       for (entry = include_entry; ;)\n \t{\n-\t  add_symbols (entry->flags, entry->names);\n+\t  if (entry->flags)\n+\t    add_symbols (entry->flags, entry->names);\n \t  entry++;\n \t  if (entry->name != CONTINUED)\n \t    break;"}, {"sha": "7ebc0737101e6875202e487a6a4c3ba65e3433d9", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e04c65a52d300b345d4136d95c93d49aef54781/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e04c65a52d300b345d4136d95c93d49aef54781/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=9e04c65a52d300b345d4136d95c93d49aef54781", "patch": "@@ -6667,6 +6667,9 @@ encode_aggregate (type, curtype, format)\n     case ENUMERAL_TYPE:\n       obstack_1grow (&util_obstack, 'i');\n       break;\n+\n+    default:\n+      break;\n     }\n }\n \n@@ -7483,6 +7486,9 @@ gen_declarator (decl, buf, name)\n \t  /* Will only happen if we are processing a \"raw\" expr-decl.  */\n \t  strcpy (buf, IDENTIFIER_POINTER (decl));\n \t  return buf;\n+\n+\tdefault:\n+\t  break;\n \t}\n \n       return str;\n@@ -7740,6 +7746,10 @@ gen_declspecs (declspecs, buf, raw)\n \t\tstrcat (buf, \">\");\n \t      }\n \t  }\n+\t  break;\n+\t  \n+\tdefault:\n+\t  break;\n \t}\n     }\n }"}]}