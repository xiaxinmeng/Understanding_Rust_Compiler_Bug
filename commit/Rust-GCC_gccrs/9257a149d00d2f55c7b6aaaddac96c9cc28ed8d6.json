{"sha": "9257a149d00d2f55c7b6aaaddac96c9cc28ed8d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI1N2ExNDlkMDBkMmY1NWM3YjZhYWFkZGFjOTZjOWNjMjhlZDhkNg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-04-18T04:41:38Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-04-18T04:41:38Z"}, "message": "(FRAME_POINTER_REQUIRED, FRAME_POINTER_OFFSET):\n\nFrame pointer is no longer required for leaf functions.\n(OPTIMIZATION_OPTIONS): Define.\n\nFrom-SVN: r4180", "tree": {"sha": "1623b8aef339208fcd4ed5792ac27fdf09c523bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1623b8aef339208fcd4ed5792ac27fdf09c523bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9257a149d00d2f55c7b6aaaddac96c9cc28ed8d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9257a149d00d2f55c7b6aaaddac96c9cc28ed8d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9257a149d00d2f55c7b6aaaddac96c9cc28ed8d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9257a149d00d2f55c7b6aaaddac96c9cc28ed8d6/comments", "author": null, "committer": null, "parents": [{"sha": "475e85347d79a1c6b7c5ea6c63dd25f05bd7cfdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/475e85347d79a1c6b7c5ea6c63dd25f05bd7cfdb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/475e85347d79a1c6b7c5ea6c63dd25f05bd7cfdb"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "5c5d783fc5ce85a585f3804731b20aaa8253655d", "filename": "gcc/config/clipper/clipper.h", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9257a149d00d2f55c7b6aaaddac96c9cc28ed8d6/gcc%2Fconfig%2Fclipper%2Fclipper.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9257a149d00d2f55c7b6aaaddac96c9cc28ed8d6/gcc%2Fconfig%2Fclipper%2Fclipper.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fclipper%2Fclipper.h?ref=9257a149d00d2f55c7b6aaaddac96c9cc28ed8d6", "patch": "@@ -20,6 +20,7 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n extern struct rtx_def *clipper_builtin_saveregs ();\n+extern int clipper_frame_size ();\n \n /* Print subsidiary information on the compiler version in use.  */\n \n@@ -45,6 +46,18 @@ extern int target_flags;\n #ifndef TARGET_DEFAULT\n #define TARGET_DEFAULT 0\n #endif\n+\n+/* Omit frame pointer at -O2.  Inline functions at -O3.  */\n+\n+#define OPTIMIZATION_OPTIONS(LEVEL)\t\t\\\n+{\t\t\t\t\t\t\\\n+  if ((LEVEL) >= 2)\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      flag_omit_frame_pointer = 1;\t\t\\\n+    }\t\t\t\t\t\t\\\n+  if ((LEVEL) >= 3)\t\t\t\t\\\n+    flag_inline_functions = 1;\t\t\t\\\n+}\n \f\n /* Target machine storage layout */\n \n@@ -216,7 +229,8 @@ extern int target_flags;\n    Zero means the frame pointer need not be set up (and parms\n    may be accessed via the stack pointer) in functions that seem suitable.\n    This is computed in `reload', in reload1.c.  */\n-#define FRAME_POINTER_REQUIRED 1\n+#define FRAME_POINTER_REQUIRED \\\n+   (! leaf_function_p ())\n \n /* Base register for access to arguments of the function.  */\n #define ARG_POINTER_REGNUM FRAME_POINTER_REGNUM\n@@ -552,12 +566,11 @@ do\t\t\t\t\t\t\t\t\t\\\n /* Store in the variable DEPTH the initial difference between the\n    frame pointer reg contents and the stack pointer reg contents,\n    as of the start of the function body.  This depends on the layout\n-   of the fixed parts of the stack frame and on how registers are saved.\n+   of the fixed parts of the stack frame and on how registers are saved. */\n \n-   On the Clipper, FRAME_POINTER_REQUIRED is  1, so the definition of this\n-   this macro doesn't matter.  But it must be defined.  */\n+#define INITIAL_FRAME_POINTER_OFFSET(DEPTH) \\\n+  DEPTH = clipper_frame_size (get_frame_size ())\n \n-#define INITIAL_FRAME_POINTER_OFFSET(DEPTH) (DEPTH) = 0;\n \n /* Output assembler code for a block containing the constant parts\n    of a trampoline, leaving space for the variable parts.  */"}]}