{"sha": "192896142dfa777e46fec5cc68e8499a94ec9c61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTkyODk2MTQyZGZhNzc3ZTQ2ZmVjNWNjNjhlODQ5OWE5NGVjOWM2MQ==", "commit": {"author": {"name": "Keith Seitz", "email": "keiths@redhat.com", "date": "2006-09-20T16:56:53Z"}, "committer": {"name": "Keith Seitz", "email": "kseitz@gcc.gnu.org", "date": "2006-09-20T16:56:53Z"}, "message": "jvmti.cc (_Jv_JVMTI_GetErrorName): New function.\n\n        * jvmti.cc (_Jv_JVMTI_GetErrorName): New function.\n        (_Jv_JVMTI_Interface): Define GetErrorName member.\n        * testsuite/libjava.jvmti/geterrorname.java: New file.\n        * testsuite/libjava.jvmti/geterrorname.out: New file.\n        * testsuite/libjava.jvmti/natgeterrorname.cc: New file.\n\nFrom-SVN: r117086", "tree": {"sha": "63626f465e1f09923049f472ef29f6435e6a5d3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63626f465e1f09923049f472ef29f6435e6a5d3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/192896142dfa777e46fec5cc68e8499a94ec9c61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/192896142dfa777e46fec5cc68e8499a94ec9c61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/192896142dfa777e46fec5cc68e8499a94ec9c61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/192896142dfa777e46fec5cc68e8499a94ec9c61/comments", "author": {"login": "shtiek", "id": 107581324, "node_id": "U_kgDOBmmPjA", "avatar_url": "https://avatars.githubusercontent.com/u/107581324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shtiek", "html_url": "https://github.com/shtiek", "followers_url": "https://api.github.com/users/shtiek/followers", "following_url": "https://api.github.com/users/shtiek/following{/other_user}", "gists_url": "https://api.github.com/users/shtiek/gists{/gist_id}", "starred_url": "https://api.github.com/users/shtiek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shtiek/subscriptions", "organizations_url": "https://api.github.com/users/shtiek/orgs", "repos_url": "https://api.github.com/users/shtiek/repos", "events_url": "https://api.github.com/users/shtiek/events{/privacy}", "received_events_url": "https://api.github.com/users/shtiek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "85a92f7ef5a476cbbf36e83bb20bb304c8478d34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85a92f7ef5a476cbbf36e83bb20bb304c8478d34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85a92f7ef5a476cbbf36e83bb20bb304c8478d34"}], "stats": {"total": 360, "additions": 359, "deletions": 1}, "files": [{"sha": "e22d26aa8bde20a348f575f8b7fd64492ec8af16", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/192896142dfa777e46fec5cc68e8499a94ec9c61/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/192896142dfa777e46fec5cc68e8499a94ec9c61/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=192896142dfa777e46fec5cc68e8499a94ec9c61", "patch": "@@ -1,3 +1,11 @@\n+2006-09-20  Keith Seitz  <keiths@redhat.com>\n+\n+\t* jvmti.cc (_Jv_JVMTI_GetErrorName): New function.\n+\t(_Jv_JVMTI_Interface): Define GetErrorName member.\n+\t* testsuite/libjava.jvmti/geterrorname.java: New file.\n+\t* testsuite/libjava.jvmti/geterrorname.out: New file.\n+\t* testsuite/libjava.jvmti/natgeterrorname.cc: New file.\n+\n 2006-09-20  Gary Benson  <gbenson@redhat.com>\n \n \t* java/net/InetAddress.java: Mostly merged with Classpath."}, {"sha": "b18ac68dc789007cc7b0e4923280215166137ea7", "filename": "libjava/jvmti.cc", "status": "modified", "additions": 214, "deletions": 1, "changes": 215, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/192896142dfa777e46fec5cc68e8499a94ec9c61/libjava%2Fjvmti.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/192896142dfa777e46fec5cc68e8499a94ec9c61/libjava%2Fjvmti.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjvmti.cc?ref=192896142dfa777e46fec5cc68e8499a94ec9c61", "patch": "@@ -651,6 +651,219 @@ _Jv_JVMTI_GetObjectSize (MAYBE_UNUSED jvmtiEnv *env, jobject object,\n   return JVMTI_ERROR_NONE;\n }\n \n+jvmtiError\n+_Jv_JVMTI_GetErrorName (MAYBE_UNUSED jvmtiEnv *env, jvmtiError error,\n+\t\t\tchar **name_ptr)\n+{\n+  NULL_CHECK (name_ptr);\n+\n+  const char *name;\n+  switch (error)\n+    {\n+    case JVMTI_ERROR_NONE:\n+      name = \"none\";\n+      break;\n+\n+    case JVMTI_ERROR_NULL_POINTER:\n+      name = \"null pointer\";\n+      break;\n+\n+    case JVMTI_ERROR_OUT_OF_MEMORY:\n+      name = \"out of memory\";\n+      break;\n+\n+    case JVMTI_ERROR_ACCESS_DENIED:\n+      name = \"access denied\";\n+      break;\n+\n+    case JVMTI_ERROR_WRONG_PHASE:\n+      name = \"wrong phase\";\n+      break;\n+\n+    case JVMTI_ERROR_INTERNAL:\n+      name = \"internal error\";\n+      break;\n+\n+    case JVMTI_ERROR_UNATTACHED_THREAD:\n+      name = \"unattached thread\";\n+      break;\n+\n+    case JVMTI_ERROR_INVALID_ENVIRONMENT:\n+      name = \"invalid environment\";\n+      break;\n+\n+    case JVMTI_ERROR_INVALID_PRIORITY:\n+      name = \"invalid priority\";\n+      break;\n+\n+    case JVMTI_ERROR_THREAD_NOT_SUSPENDED:\n+      name = \"thread not suspended\";\n+      break;\n+\n+    case JVMTI_ERROR_THREAD_SUSPENDED:\n+      name = \"thread suspended\";\n+      break;\n+\n+    case JVMTI_ERROR_THREAD_NOT_ALIVE:\n+      name = \"thread not alive\";\n+      break;\n+\n+    case JVMTI_ERROR_CLASS_NOT_PREPARED:\n+      name = \"class not prepared\";\n+      break;\n+\n+    case JVMTI_ERROR_NO_MORE_FRAMES:\n+      name = \"no more frames\";\n+      break;\n+\n+    case JVMTI_ERROR_OPAQUE_FRAME:\n+      name = \"opaque frame\";\n+      break;\n+\n+    case JVMTI_ERROR_DUPLICATE:\n+      name = \"duplicate\";\n+      break;\n+\n+    case JVMTI_ERROR_NOT_FOUND:\n+      name = \"not found\";\n+      break;\n+\n+    case JVMTI_ERROR_NOT_MONITOR_OWNER:\n+      name = \"not monitor owner\";\n+      break;\n+\n+    case JVMTI_ERROR_INTERRUPT:\n+      name = \"interrupted\";\n+      break;\n+\n+    case JVMTI_ERROR_UNMODIFIABLE_CLASS:\n+      name = \"unmodifiable class\";\n+      break;\n+\n+    case JVMTI_ERROR_NOT_AVAILABLE:\n+      name = \"not available\";\n+      break;\n+\n+    case JVMTI_ERROR_ABSENT_INFORMATION:\n+      name = \"absent information\";\n+      break;\n+\n+    case JVMTI_ERROR_INVALID_EVENT_TYPE:\n+      name = \"invalid event type\";\n+      break;\n+\n+    case JVMTI_ERROR_NATIVE_METHOD:\n+      name = \"native method\";\n+      break;\n+\n+    case JVMTI_ERROR_INVALID_THREAD:\n+      name = \"invalid thread\";\n+      break;\n+\n+    case JVMTI_ERROR_INVALID_THREAD_GROUP:\n+      name = \"invalid thread group\";\n+      break;\n+\n+    case JVMTI_ERROR_INVALID_OBJECT:\n+      name = \"invalid object\";\n+      break;\n+\n+    case JVMTI_ERROR_INVALID_CLASS:\n+      name = \"invalid class\";\n+      break;\n+\n+    case JVMTI_ERROR_INVALID_METHODID:\n+      name = \"invalid method ID\";\n+      break;\n+\n+    case JVMTI_ERROR_INVALID_LOCATION:\n+      name = \"invalid location\";\n+      break;\n+\n+    case JVMTI_ERROR_INVALID_FIELDID:\n+      name = \"invalid field ID\";\n+      break;\n+\n+    case JVMTI_ERROR_TYPE_MISMATCH:\n+      name = \"type mismatch\";\n+      break;\n+\n+    case JVMTI_ERROR_INVALID_SLOT:\n+      name = \"invalid slot\";\n+      break;\n+\n+    case JVMTI_ERROR_INVALID_MONITOR:\n+      name = \"invalid monitor\";\n+      break;\n+\n+    case JVMTI_ERROR_INVALID_CLASS_FORMAT:\n+      name = \"invalid class format\";\n+      break;\n+\n+    case JVMTI_ERROR_CIRCULAR_CLASS_DEFINITION:\n+      name = \"circular class definition\";\n+      break;\n+\n+    case JVMTI_ERROR_UNSUPPORTED_REDEFINITION_METHOD_ADDED:\n+      name = \"unsupported redefinition: method added\";\n+      break;\n+\n+    case JVMTI_ERROR_UNSUPPORTED_REDEFINITION_SCHEMA_CHANGED:\n+      name = \"unsupported redefinition: schema changed\";\n+      break;\n+\n+    case JVMTI_ERROR_INVALID_TYPESTATE:\n+      name = \"invalid type state\";\n+      break;\n+\n+    case JVMTI_ERROR_FAILS_VERIFICATION:\n+      name = \"fails verification\";\n+      break;\n+\n+    case JVMTI_ERROR_UNSUPPORTED_REDEFINITION_HIERARCHY_CHANGED:\n+      name = \"unsupported redefinition: hierarchy changed\";\n+      break;\n+\n+    case JVMTI_ERROR_UNSUPPORTED_REDEFINITION_METHOD_DELETED:\n+      name = \"unsupported redefinition: method deleted\";\n+      break;\n+\n+    case JVMTI_ERROR_UNSUPPORTED_VERSION:\n+      name = \"unsupported version\";\n+      break;\n+\n+    case JVMTI_ERROR_NAMES_DONT_MATCH:\n+      name = \"names do not match\";\n+      break;\n+\n+    case JVMTI_ERROR_UNSUPPORTED_REDEFINITION_CLASS_MODIFIERS_CHANGED:\n+      name = \"unsupported redefinition: class modifiers changed\";\n+      break;\n+\n+    case JVMTI_ERROR_UNSUPPORTED_REDEFINITION_METHOD_MODIFIERS_CHANGED:\n+      name = \"unsupported redefinition: method modifiers changed\";\n+      break;\n+\n+    case JVMTI_ERROR_MUST_POSSESS_CAPABILITY:\n+      name = \"must possess capability\";\n+      break;\n+\n+    case JVMTI_ERROR_ILLEGAL_ARGUMENT:\n+      name = \"illegal argument\";\n+      break;\n+\n+    default:\n+      return JVMTI_ERROR_ILLEGAL_ARGUMENT;\n+    }\n+\n+  *name_ptr = (char *) _Jv_MallocUnchecked (strlen (name) + 1);\n+  if (*name_ptr == NULL)\n+    return JVMTI_ERROR_OUT_OF_MEMORY;\n+\n+  strcpy (*name_ptr, name);\n+  return JVMTI_ERROR_NONE;\n+}\n+\n #define RESERVED NULL\n #define UNIMPLEMENTED NULL\n \n@@ -783,7 +996,7 @@ struct _Jv_jvmtiEnv _Jv_JVMTI_Interface =\n   UNIMPLEMENTED,\t\t// GetExtensionEvents\n   UNIMPLEMENTED,\t\t// SetExtensionEventCallback\n   _Jv_JVMTI_DisposeEnvironment,\t// DisposeEnvironment\n-  UNIMPLEMENTED,\t\t// GetErrorName\n+  _Jv_JVMTI_GetErrorName,\t// GetErrorName\n   UNIMPLEMENTED,\t\t// GetJLocationFormat\n   UNIMPLEMENTED,\t\t// GetSystemProperties\n   _Jv_JVMTI_GetSystemProperty,\t// GetSystemProperty"}, {"sha": "b809b22d63bbfade4c254ec736fe16b7a067b8ef", "filename": "libjava/testsuite/libjava.jvmti/geterrorname.java", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/192896142dfa777e46fec5cc68e8499a94ec9c61/libjava%2Ftestsuite%2Flibjava.jvmti%2Fgeterrorname.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/192896142dfa777e46fec5cc68e8499a94ec9c61/libjava%2Ftestsuite%2Flibjava.jvmti%2Fgeterrorname.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jvmti%2Fgeterrorname.java?ref=192896142dfa777e46fec5cc68e8499a94ec9c61", "patch": "@@ -0,0 +1,12 @@\n+// Test JVMTI GetErrorName\n+\n+public class geterrorname\n+{\n+  public static native void do_errorname_tests ();\n+\n+  public static void main (String[] args)\n+  {\n+    System.out.println (\"JVMTI GetErrorName tests\");\n+    do_errorname_tests ();\n+  }\n+}"}, {"sha": "3b993d3b66e027b10087b51aaa4777070740b421", "filename": "libjava/testsuite/libjava.jvmti/geterrorname.out", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/192896142dfa777e46fec5cc68e8499a94ec9c61/libjava%2Ftestsuite%2Flibjava.jvmti%2Fgeterrorname.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/192896142dfa777e46fec5cc68e8499a94ec9c61/libjava%2Ftestsuite%2Flibjava.jvmti%2Fgeterrorname.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jvmti%2Fgeterrorname.out?ref=192896142dfa777e46fec5cc68e8499a94ec9c61", "patch": "@@ -0,0 +1,49 @@\n+JVMTI GetErrorName tests\n+none\n+null pointer\n+out of memory\n+access denied\n+wrong phase\n+internal error\n+unattached thread\n+invalid environment\n+invalid priority\n+thread not suspended\n+thread suspended\n+thread not alive\n+class not prepared\n+no more frames\n+opaque frame\n+duplicate\n+not found\n+not monitor owner\n+interrupted\n+unmodifiable class\n+not available\n+absent information\n+invalid event type\n+native method\n+invalid thread\n+invalid thread group\n+invalid object\n+invalid class\n+invalid method ID\n+invalid location\n+invalid field ID\n+type mismatch\n+invalid slot\n+invalid monitor\n+invalid class format\n+circular class definition\n+unsupported redefinition: method added\n+unsupported redefinition: schema changed\n+invalid type state\n+fails verification\n+unsupported redefinition: hierarchy changed\n+unsupported redefinition: method deleted\n+unsupported version\n+names do not match\n+unsupported redefinition: class modifiers changed\n+unsupported redefinition: method modifiers changed\n+must possess capability\n+illegal argument"}, {"sha": "46e2590ae06fd4725f7873c5206a995a02d01abe", "filename": "libjava/testsuite/libjava.jvmti/natgeterrorname.cc", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/192896142dfa777e46fec5cc68e8499a94ec9c61/libjava%2Ftestsuite%2Flibjava.jvmti%2Fnatgeterrorname.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/192896142dfa777e46fec5cc68e8499a94ec9c61/libjava%2Ftestsuite%2Flibjava.jvmti%2Fnatgeterrorname.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jvmti%2Fnatgeterrorname.cc?ref=192896142dfa777e46fec5cc68e8499a94ec9c61", "patch": "@@ -0,0 +1,76 @@\n+#include <gcj/cni.h>\n+\n+#include <jvm.h>\n+#include <jvmti.h>\n+#include <stdio.h>\n+\n+#include \"jvmti-int.h\"\n+#include \"geterrorname.h\"\n+\n+static void\n+get_error (jvmtiEnv *env, jvmtiError err)\n+{\n+  char *s;\n+  env->GetErrorName (err, &s);\n+  printf (\"%s\\n\", s);\n+  env->Deallocate (reinterpret_cast<unsigned char *> (s));\n+}\n+\n+void\n+geterrorname::do_errorname_tests ()\n+{\n+  jvmtiEnv *env;\n+  JavaVM *vm = _Jv_GetJavaVM ();\n+  vm->GetEnv (reinterpret_cast<void **> (&env), JVMTI_VERSION_1_0);\n+\n+  get_error (env, JVMTI_ERROR_NONE);\n+  get_error (env, JVMTI_ERROR_NULL_POINTER);\n+  get_error (env, JVMTI_ERROR_OUT_OF_MEMORY);\n+  get_error (env, JVMTI_ERROR_ACCESS_DENIED);\n+  get_error (env, JVMTI_ERROR_WRONG_PHASE);\n+  get_error (env, JVMTI_ERROR_INTERNAL);\n+  get_error (env, JVMTI_ERROR_UNATTACHED_THREAD);\n+  get_error (env, JVMTI_ERROR_INVALID_ENVIRONMENT);\n+  get_error (env, JVMTI_ERROR_INVALID_PRIORITY);\n+  get_error (env, JVMTI_ERROR_THREAD_NOT_SUSPENDED);\n+  get_error (env, JVMTI_ERROR_THREAD_SUSPENDED);\n+  get_error (env, JVMTI_ERROR_THREAD_NOT_ALIVE);\n+  get_error (env, JVMTI_ERROR_CLASS_NOT_PREPARED);\n+  get_error (env, JVMTI_ERROR_NO_MORE_FRAMES);\n+  get_error (env, JVMTI_ERROR_OPAQUE_FRAME);\n+  get_error (env, JVMTI_ERROR_DUPLICATE);\n+  get_error (env, JVMTI_ERROR_NOT_FOUND);\n+  get_error (env, JVMTI_ERROR_NOT_MONITOR_OWNER);\n+  get_error (env, JVMTI_ERROR_INTERRUPT);\n+  get_error (env, JVMTI_ERROR_UNMODIFIABLE_CLASS);\n+  get_error (env, JVMTI_ERROR_NOT_AVAILABLE);\n+  get_error (env, JVMTI_ERROR_ABSENT_INFORMATION);\n+  get_error (env, JVMTI_ERROR_INVALID_EVENT_TYPE);\n+  get_error (env, JVMTI_ERROR_NATIVE_METHOD);\n+  get_error (env, JVMTI_ERROR_INVALID_THREAD);\n+  get_error (env, JVMTI_ERROR_INVALID_THREAD_GROUP);\n+  get_error (env, JVMTI_ERROR_INVALID_OBJECT);\n+  get_error (env, JVMTI_ERROR_INVALID_CLASS);\n+  get_error (env, JVMTI_ERROR_INVALID_METHODID);\n+  get_error (env, JVMTI_ERROR_INVALID_LOCATION);\n+  get_error (env, JVMTI_ERROR_INVALID_FIELDID);\n+  get_error (env, JVMTI_ERROR_TYPE_MISMATCH);\n+  get_error (env, JVMTI_ERROR_INVALID_SLOT);\n+  get_error (env, JVMTI_ERROR_INVALID_MONITOR);\n+  get_error (env, JVMTI_ERROR_INVALID_CLASS_FORMAT);\n+  get_error (env, JVMTI_ERROR_CIRCULAR_CLASS_DEFINITION);\n+  get_error (env, JVMTI_ERROR_UNSUPPORTED_REDEFINITION_METHOD_ADDED);\n+  get_error (env, JVMTI_ERROR_UNSUPPORTED_REDEFINITION_SCHEMA_CHANGED);\n+  get_error (env, JVMTI_ERROR_INVALID_TYPESTATE);\n+  get_error (env, JVMTI_ERROR_FAILS_VERIFICATION);\n+  get_error (env, JVMTI_ERROR_UNSUPPORTED_REDEFINITION_HIERARCHY_CHANGED);\n+  get_error (env, JVMTI_ERROR_UNSUPPORTED_REDEFINITION_METHOD_DELETED);\n+  get_error (env, JVMTI_ERROR_UNSUPPORTED_VERSION);\n+  get_error (env, JVMTI_ERROR_NAMES_DONT_MATCH);\n+  get_error (env,\n+\t     JVMTI_ERROR_UNSUPPORTED_REDEFINITION_CLASS_MODIFIERS_CHANGED);\n+  get_error (env,\n+\t     JVMTI_ERROR_UNSUPPORTED_REDEFINITION_METHOD_MODIFIERS_CHANGED);\n+  get_error (env, JVMTI_ERROR_MUST_POSSESS_CAPABILITY);\n+  get_error (env, JVMTI_ERROR_ILLEGAL_ARGUMENT);\n+}"}]}