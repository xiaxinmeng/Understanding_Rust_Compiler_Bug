{"sha": "c6d3802a2ff97169d47cb701745a7871c758bad4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZkMzgwMmEyZmY5NzE2OWQ0N2NiNzAxNzQ1YTc4NzFjNzU4YmFkNA==", "commit": {"author": {"name": "Paul Koning", "email": "ni1d@arrl.net", "date": "2010-11-01T18:08:15Z"}, "committer": {"name": "Paul Koning", "email": "pkoning@gcc.gnu.org", "date": "2010-11-01T18:08:15Z"}, "message": "pdp11.c (pdp11_return_in_memory): Return vector and complex modes in memory.\n\n* config/pdp11/pdp11.c (pdp11_return_in_memory): Return vector and\ncomplex modes in memory.\n\nFrom-SVN: r166137", "tree": {"sha": "5421c53fb86f7dc1062db76882f36d131a066c22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5421c53fb86f7dc1062db76882f36d131a066c22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6d3802a2ff97169d47cb701745a7871c758bad4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6d3802a2ff97169d47cb701745a7871c758bad4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6d3802a2ff97169d47cb701745a7871c758bad4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6d3802a2ff97169d47cb701745a7871c758bad4/comments", "author": null, "committer": null, "parents": [{"sha": "eb8e7cb134c3f21eb682d125cf890aa0d6ace0c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb8e7cb134c3f21eb682d125cf890aa0d6ace0c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb8e7cb134c3f21eb682d125cf890aa0d6ace0c6"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "c267b92630c6d86980903500f3262f70ca2b4fec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6d3802a2ff97169d47cb701745a7871c758bad4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6d3802a2ff97169d47cb701745a7871c758bad4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c6d3802a2ff97169d47cb701745a7871c758bad4", "patch": "@@ -1,3 +1,8 @@\n+2010-11-01  Paul Koning  <ni1d@arrl.net>\n+\n+\t* config/pdp11/pdp11.c (pdp11_return_in_memory): Return vector and\n+\tcomplex modes in memory.\n+\n 2010-11-01  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* tree.c (build_vector_from_val): Use useless_type_conversion_p."}, {"sha": "5b5ebebe0e5dd5aff402c174ef45d675f2d1944b", "filename": "gcc/config/pdp11/pdp11.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6d3802a2ff97169d47cb701745a7871c758bad4/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6d3802a2ff97169d47cb701745a7871c758bad4/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.c?ref=c6d3802a2ff97169d47cb701745a7871c758bad4", "patch": "@@ -1816,14 +1816,12 @@ output_addr_const_pdp11 (FILE *file, rtx x)\n static bool\n pdp11_return_in_memory (const_tree type, const_tree fntype ATTRIBUTE_UNUSED)\n {\n-  /* Should probably return DImode and DFmode in memory, lest\n-     we fill up all regs!\n-\n-     have to, else we crash - exception: maybe return result in \n-     ac0 if DFmode and FPU present - compatibility problem with\n-     libraries for non-floating point....  */\n+  /* Integers 32 bits and under, and scalar floats (if FPU), are returned\n+     in registers.  The rest go into memory.  */\n   return (TYPE_MODE (type) == DImode\n-\t  || (FLOAT_MODE_P (TYPE_MODE (type)) && ! TARGET_AC0));\n+\t  || (FLOAT_MODE_P (TYPE_MODE (type)) && ! TARGET_AC0)\n+\t  || TREE_CODE (type) == VECTOR_TYPE\n+\t  || COMPLEX_MODE_P (TYPE_MODE (type)));\n }\n \n /* Worker function for TARGET_FUNCTION_VALUE."}]}