{"sha": "115a33c2196266e0462e516fac5bc7ff21276d13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE1YTMzYzIxOTYyNjZlMDQ2MmU1MTZmYWM1YmM3ZmYyMTI3NmQxMw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-01-18T03:44:16Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-01-18T03:44:16Z"}, "message": "sse.md (smaxv4sf3_finite, [...]): New.\n\n        * config/i386/sse.md (smaxv4sf3_finite, sse_vmsmaxv4sf3_finite,\n        sminv4sf3_finite, sse_vmsminv4sf3_finite, smaxv2df3_finite,\n        sse2_vmsmaxv2df3_finite, sminv2df3_finite,\n        sse2_vmsminv2df3_finite): New.\n        (smaxv4sf3, sse_vmsmaxv4sf3, sminv4sf3, sse_vmsminv4sf3, smaxv2df3,\n        sse2_vmsmaxv2df3, sminv2df3, sse2_vmsminv2df3): Remove commutative.\n        Force op1 into register.\n\nFrom-SVN: r93808", "tree": {"sha": "72c1f00d5ab702dcfbbb91afc02677862eb9e130", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72c1f00d5ab702dcfbbb91afc02677862eb9e130"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/115a33c2196266e0462e516fac5bc7ff21276d13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/115a33c2196266e0462e516fac5bc7ff21276d13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/115a33c2196266e0462e516fac5bc7ff21276d13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/115a33c2196266e0462e516fac5bc7ff21276d13/comments", "author": null, "committer": null, "parents": [{"sha": "d4512eb8bcf3a9ea3795c201e4b6a56d2353a341", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4512eb8bcf3a9ea3795c201e4b6a56d2353a341", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4512eb8bcf3a9ea3795c201e4b6a56d2353a341"}], "stats": {"total": 166, "additions": 146, "deletions": 20}, "files": [{"sha": "6ef223abdac680eb8741b685640a612b312fe52a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/115a33c2196266e0462e516fac5bc7ff21276d13/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/115a33c2196266e0462e516fac5bc7ff21276d13/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=115a33c2196266e0462e516fac5bc7ff21276d13", "patch": "@@ -1,3 +1,13 @@\n+2005-01-17  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/i386/sse.md (smaxv4sf3_finite, sse_vmsmaxv4sf3_finite,\n+\tsminv4sf3_finite, sse_vmsminv4sf3_finite, smaxv2df3_finite,\n+\tsse2_vmsmaxv2df3_finite, sminv2df3_finite,\n+\tsse2_vmsminv2df3_finite): New.\n+\t(smaxv4sf3, sse_vmsmaxv4sf3, sminv4sf3, sse_vmsminv4sf3, smaxv2df3,\n+\tsse2_vmsmaxv2df3, sminv2df3, sse2_vmsminv2df3): Remove commutative.\n+\tForce op1 into register.\n+\n 2005-01-17  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* Makefile.in (STAGEMOVESTUFF): Stage all the stamp files to prevent"}, {"sha": "68c48eab7770ae92431acd20c1de9b364530b562", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 136, "deletions": 20, "changes": 156, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/115a33c2196266e0462e516fac5bc7ff21276d13/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/115a33c2196266e0462e516fac5bc7ff21276d13/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=115a33c2196266e0462e516fac5bc7ff21276d13", "patch": "@@ -466,30 +466,61 @@\n   [(set_attr \"type\" \"sse\")\n    (set_attr \"mode\" \"SF\")])\n \n+;; ??? For !flag_finite_math_only, the representation with SMIN/SMAX\n+;; isn't really correct, as those rtl operators aren't defined when \n+;; applied to NaNs.  Hopefully the optimizers won't get too smart on us.\n+\n (define_expand \"smaxv4sf3\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"\")\n \t(smax:V4SF (match_operand:V4SF 1 \"nonimmediate_operand\" \"\")\n \t\t   (match_operand:V4SF 2 \"nonimmediate_operand\" \"\")))]\n   \"TARGET_SSE\"\n-  \"ix86_fixup_binary_operands_no_copy (SMAX, V4SFmode, operands);\")\n+{\n+  if (!flag_finite_math_only)\n+    operands[1] = force_reg (V4SFmode, operands[1]);\n+  ix86_fixup_binary_operands_no_copy (SMAX, V4SFmode, operands);\n+})\n \n-(define_insn \"*smaxv4sf3\"\n+(define_insn \"*smaxv4sf3_finite\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n \t(smax:V4SF (match_operand:V4SF 1 \"nonimmediate_operand\" \"%0\")\n \t\t   (match_operand:V4SF 2 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_SSE && ix86_binary_operator_ok (SMAX, V4SFmode, operands)\"\n+  \"TARGET_SSE && flag_finite_math_only\n+   && ix86_binary_operator_ok (SMAX, V4SFmode, operands)\"\n   \"maxps\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sse\")\n    (set_attr \"mode\" \"V4SF\")])\n \n-(define_insn \"sse_vmsmaxv4sf3\"\n+(define_insn \"*smaxv4sf3\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n+\t(smax:V4SF (match_operand:V4SF 1 \"register_operand\" \"0\")\n+\t\t   (match_operand:V4SF 2 \"nonimmediate_operand\" \"xm\")))]\n+  \"TARGET_SSE\"\n+  \"maxps\\t{%2, %0|%0, %2}\"\n+  [(set_attr \"type\" \"sse\")\n+   (set_attr \"mode\" \"V4SF\")])\n+\n+(define_insn \"*sse_vmsmaxv4sf3_finite\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n \t(vec_merge:V4SF\n \t (smax:V4SF (match_operand:V4SF 1 \"nonimmediate_operand\" \"%0\")\n \t\t    (match_operand:V4SF 2 \"nonimmediate_operand\" \"xm\"))\n \t (match_dup 1)\n \t (const_int 1)))]\n-  \"TARGET_SSE && ix86_binary_operator_ok (SMAX, V4SFmode, operands)\"\n+  \"TARGET_SSE && flag_finite_math_only\n+   && ix86_binary_operator_ok (SMAX, V4SFmode, operands)\"\n+  \"maxss\\t{%2, %0|%0, %2}\"\n+  [(set_attr \"type\" \"sse\")\n+   (set_attr \"mode\" \"SF\")])\n+\n+(define_insn \"sse_vmsmaxv4sf3\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n+\t(vec_merge:V4SF\n+\t (smax:V4SF (match_operand:V4SF 1 \"register_operand\" \"0\")\n+\t\t    (match_operand:V4SF 2 \"nonimmediate_operand\" \"xm\"))\n+\t (match_dup 1)\n+\t (const_int 1)))]\n+  \"TARGET_SSE\"\n   \"maxss\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sse\")\n    (set_attr \"mode\" \"SF\")])\n@@ -499,25 +530,52 @@\n \t(smin:V4SF (match_operand:V4SF 1 \"nonimmediate_operand\" \"\")\n \t\t   (match_operand:V4SF 2 \"nonimmediate_operand\" \"\")))]\n   \"TARGET_SSE\"\n-  \"ix86_fixup_binary_operands_no_copy (SMIN, V4SFmode, operands);\")\n+{\n+  if (!flag_finite_math_only)\n+    operands[1] = force_reg (V4SFmode, operands[1]);\n+  ix86_fixup_binary_operands_no_copy (SMIN, V4SFmode, operands);\n+})\n \n-(define_insn \"*sminv4sf3\"\n+(define_insn \"*sminv4sf3_finite\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n \t(smin:V4SF (match_operand:V4SF 1 \"nonimmediate_operand\" \"%0\")\n \t\t   (match_operand:V4SF 2 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_SSE && ix86_binary_operator_ok (SMIN, V4SFmode, operands)\"\n+  \"TARGET_SSE && flag_finite_math_only\n+   && ix86_binary_operator_ok (SMIN, V4SFmode, operands)\"\n   \"minps\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sse\")\n    (set_attr \"mode\" \"V4SF\")])\n \n-(define_insn \"sse_vmsminv4sf3\"\n+(define_insn \"*sminv4sf3\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n+\t(smin:V4SF (match_operand:V4SF 1 \"register_operand\" \"0\")\n+\t\t   (match_operand:V4SF 2 \"nonimmediate_operand\" \"xm\")))]\n+  \"TARGET_SSE\"\n+  \"minps\\t{%2, %0|%0, %2}\"\n+  [(set_attr \"type\" \"sse\")\n+   (set_attr \"mode\" \"V4SF\")])\n+\n+(define_insn \"*sse_vmsminv4sf3_finite\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n \t(vec_merge:V4SF\n \t (smin:V4SF (match_operand:V4SF 1 \"nonimmediate_operand\" \"%0\")\n \t\t    (match_operand:V4SF 2 \"nonimmediate_operand\" \"xm\"))\n \t (match_dup 1)\n \t (const_int 1)))]\n-  \"TARGET_SSE && ix86_binary_operator_ok (SMIN, V4SFmode, operands)\"\n+  \"TARGET_SSE && flag_finite_math_only\n+   && ix86_binary_operator_ok (SMIN, V4SFmode, operands)\"\n+  \"minss\\t{%2, %0|%0, %2}\"\n+  [(set_attr \"type\" \"sse\")\n+   (set_attr \"mode\" \"SF\")])\n+\n+(define_insn \"sse_vmsminv4sf3\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n+\t(vec_merge:V4SF\n+\t (smin:V4SF (match_operand:V4SF 1 \"register_operand\" \"0\")\n+\t\t    (match_operand:V4SF 2 \"nonimmediate_operand\" \"xm\"))\n+\t (match_dup 1)\n+\t (const_int 1)))]\n+  \"TARGET_SSE\"\n   \"minss\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sse\")\n    (set_attr \"mode\" \"SF\")])\n@@ -1321,30 +1379,61 @@\n   [(set_attr \"type\" \"sse\")\n    (set_attr \"mode\" \"SF\")])\n \n+;; ??? For !flag_finite_math_only, the representation with SMIN/SMAX\n+;; isn't really correct, as those rtl operators aren't defined when \n+;; applied to NaNs.  Hopefully the optimizers won't get too smart on us.\n+\n (define_expand \"smaxv2df3\"\n   [(set (match_operand:V2DF 0 \"register_operand\" \"\")\n \t(smax:V2DF (match_operand:V2DF 1 \"nonimmediate_operand\" \"\")\n \t\t   (match_operand:V2DF 2 \"nonimmediate_operand\" \"\")))]\n   \"TARGET_SSE2\"\n-  \"ix86_fixup_binary_operands_no_copy (SMAX, V2DFmode, operands);\")\n+{\n+  if (!flag_finite_math_only)\n+    operands[1] = force_reg (V2DFmode, operands[1]);\n+  ix86_fixup_binary_operands_no_copy (SMAX, V2DFmode, operands);\n+})\n \n-(define_insn \"*smaxv2df3\"\n+(define_insn \"*smaxv2df3_finite\"\n   [(set (match_operand:V2DF 0 \"register_operand\" \"=x\")\n \t(smax:V2DF (match_operand:V2DF 1 \"nonimmediate_operand\" \"%0\")\n \t\t   (match_operand:V2DF 2 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_SSE2 && ix86_binary_operator_ok (SMAX, V2DFmode, operands)\"\n+  \"TARGET_SSE2 && flag_finite_math_only\n+   && ix86_binary_operator_ok (SMAX, V2DFmode, operands)\"\n   \"maxpd\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseadd\")\n    (set_attr \"mode\" \"V2DF\")])\n \n-(define_insn \"sse2_vmsmaxv2df3\"\n+(define_insn \"*smaxv2df3\"\n+  [(set (match_operand:V2DF 0 \"register_operand\" \"=x\")\n+\t(smax:V2DF (match_operand:V2DF 1 \"register_operand\" \"0\")\n+\t\t   (match_operand:V2DF 2 \"nonimmediate_operand\" \"xm\")))]\n+  \"TARGET_SSE2\"\n+  \"maxpd\\t{%2, %0|%0, %2}\"\n+  [(set_attr \"type\" \"sseadd\")\n+   (set_attr \"mode\" \"V2DF\")])\n+\n+(define_insn \"*sse2_vmsmaxv2df3_finite\"\n   [(set (match_operand:V2DF 0 \"register_operand\" \"=x\")\n \t(vec_merge:V2DF\n \t  (smax:V2DF (match_operand:V2DF 1 \"nonimmediate_operand\" \"%0\")\n \t\t     (match_operand:V2DF 2 \"nonimmediate_operand\" \"xm\"))\n \t  (match_dup 1)\n \t  (const_int 1)))]\n-  \"TARGET_SSE2 && ix86_binary_operator_ok (SMAX, V2DFmode, operands)\"\n+  \"TARGET_SSE2 && flag_finite_math_only\n+   && ix86_binary_operator_ok (SMAX, V2DFmode, operands)\"\n+  \"maxsd\\t{%2, %0|%0, %2}\"\n+  [(set_attr \"type\" \"sseadd\")\n+   (set_attr \"mode\" \"DF\")])\n+\n+(define_insn \"sse2_vmsmaxv2df3\"\n+  [(set (match_operand:V2DF 0 \"register_operand\" \"=x\")\n+\t(vec_merge:V2DF\n+\t  (smax:V2DF (match_operand:V2DF 1 \"register_operand\" \"0\")\n+\t\t     (match_operand:V2DF 2 \"nonimmediate_operand\" \"xm\"))\n+\t  (match_dup 1)\n+\t  (const_int 1)))]\n+  \"TARGET_SSE2\"\n   \"maxsd\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseadd\")\n    (set_attr \"mode\" \"DF\")])\n@@ -1354,25 +1443,52 @@\n \t(smin:V2DF (match_operand:V2DF 1 \"nonimmediate_operand\" \"\")\n \t\t   (match_operand:V2DF 2 \"nonimmediate_operand\" \"\")))]\n   \"TARGET_SSE2\"\n-  \"ix86_fixup_binary_operands_no_copy (SMIN, V2DFmode, operands);\")\n+{\n+  if (!flag_finite_math_only)\n+    operands[1] = force_reg (V2DFmode, operands[1]);\n+  ix86_fixup_binary_operands_no_copy (SMIN, V2DFmode, operands);\n+})\n \n-(define_insn \"*sminv2df3\"\n+(define_insn \"*sminv2df3_finite\"\n   [(set (match_operand:V2DF 0 \"register_operand\" \"=x\")\n \t(smin:V2DF (match_operand:V2DF 1 \"nonimmediate_operand\" \"%0\")\n \t\t   (match_operand:V2DF 2 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_SSE2 && ix86_binary_operator_ok (SMIN, V2DFmode, operands)\"\n+  \"TARGET_SSE2 && flag_finite_math_only\n+   && ix86_binary_operator_ok (SMIN, V2DFmode, operands)\"\n   \"minpd\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseadd\")\n    (set_attr \"mode\" \"V2DF\")])\n \n-(define_insn \"sse2_vmsminv2df3\"\n+(define_insn \"*sminv2df3\"\n+  [(set (match_operand:V2DF 0 \"register_operand\" \"=x\")\n+\t(smin:V2DF (match_operand:V2DF 1 \"register_operand\" \"0\")\n+\t\t   (match_operand:V2DF 2 \"nonimmediate_operand\" \"xm\")))]\n+  \"TARGET_SSE2\"\n+  \"minpd\\t{%2, %0|%0, %2}\"\n+  [(set_attr \"type\" \"sseadd\")\n+   (set_attr \"mode\" \"V2DF\")])\n+\n+(define_insn \"*sse2_vmsminv2df3_finite\"\n   [(set (match_operand:V2DF 0 \"register_operand\" \"=x\")\n \t(vec_merge:V2DF\n \t  (smin:V2DF (match_operand:V2DF 1 \"nonimmediate_operand\" \"%0\")\n \t\t     (match_operand:V2DF 2 \"nonimmediate_operand\" \"xm\"))\n \t  (match_dup 1)\n \t  (const_int 1)))]\n-  \"TARGET_SSE2 && ix86_binary_operator_ok (SMIN, V2DFmode, operands)\"\n+  \"TARGET_SSE2 && flag_finite_math_only\n+   && ix86_binary_operator_ok (SMIN, V2DFmode, operands)\"\n+  \"minsd\\t{%2, %0|%0, %2}\"\n+  [(set_attr \"type\" \"sseadd\")\n+   (set_attr \"mode\" \"DF\")])\n+\n+(define_insn \"sse2_vmsminv2df3\"\n+  [(set (match_operand:V2DF 0 \"register_operand\" \"=x\")\n+\t(vec_merge:V2DF\n+\t  (smin:V2DF (match_operand:V2DF 1 \"register_operand\" \"0\")\n+\t\t     (match_operand:V2DF 2 \"nonimmediate_operand\" \"xm\"))\n+\t  (match_dup 1)\n+\t  (const_int 1)))]\n+  \"TARGET_SSE2\"\n   \"minsd\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseadd\")\n    (set_attr \"mode\" \"DF\")])"}]}