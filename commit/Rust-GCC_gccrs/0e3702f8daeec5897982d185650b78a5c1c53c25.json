{"sha": "0e3702f8daeec5897982d185650b78a5c1c53c25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGUzNzAyZjhkYWVlYzU4OTc5ODJkMTg1NjUwYjc4YTVjMWM1M2MyNQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-05-14T17:21:47Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-05-14T17:21:47Z"}, "message": "Fortran/OpenMP: Support 'omp parallel master'\n\ngcc/fortran/ChangeLog:\n\n\t* dump-parse-tree.c (show_omp_node, show_code_node): Handle\n\tEXEC_OMP_PARALLEL_MASTER.\n\t* frontend-passes.c (gfc_code_walker): Likewise.\n\t* gfortran.h (enum gfc_statement): Add ST_OMP_PARALLEL_MASTER and\n\tST_OMP_END_PARALLEL_MASTER.\n\t(enum gfc_exec_op): Add EXEC_OMP_PARALLEL_MASTER..\n\t* match.h (gfc_match_omp_parallel_master): Handle it.\n\t* openmp.c (gfc_match_omp_parallel_master, resolve_omp_clauses,\n\tomp_code_to_statement, gfc_resolve_omp_directive): Likewise.\n\t* parse.c (decode_omp_directive, case_exec_markers,\n\tgfc_ascii_statement, parse_omp_structured_block,\n\tparse_executable): Likewise.\n\t* resolve.c (gfc_resolve_blocks, gfc_resolve_code): Likewise.\n\t* st.c (gfc_free_statement): Likewise.\n\t* trans-openmp.c (gfc_trans_omp_parallel_master,\n\tgfc_trans_omp_workshare, gfc_trans_omp_directive): Likewise.\n\t* trans.c (trans_code): Likewise.\n\nlibgomp/ChangeLog:\n\n\t* testsuite/libgomp.fortran/parallel-master.f90: New test.\n\ngcc/testsuite/ChangeLog:\n\n\t* gfortran.dg/gomp/parallel-master-1.f90: New test.\n\t* gfortran.dg/gomp/parallel-master-2.f90: New test.", "tree": {"sha": "71d5ab38dc9b5a3312ee5df07f2d3aa1ed8d4111", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71d5ab38dc9b5a3312ee5df07f2d3aa1ed8d4111"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e3702f8daeec5897982d185650b78a5c1c53c25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e3702f8daeec5897982d185650b78a5c1c53c25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e3702f8daeec5897982d185650b78a5c1c53c25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e3702f8daeec5897982d185650b78a5c1c53c25/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62e1bd651f60cfe3daaad91b41b7612bc7fa7460", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62e1bd651f60cfe3daaad91b41b7612bc7fa7460", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62e1bd651f60cfe3daaad91b41b7612bc7fa7460"}], "stats": {"total": 115, "additions": 112, "deletions": 3}, "files": [{"sha": "874e6d4a837640653292c2f7fa6b6c5a2aedc36d", "filename": "gcc/fortran/dump-parse-tree.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e3702f8daeec5897982d185650b78a5c1c53c25/gcc%2Ffortran%2Fdump-parse-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e3702f8daeec5897982d185650b78a5c1c53c25/gcc%2Ffortran%2Fdump-parse-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdump-parse-tree.c?ref=0e3702f8daeec5897982d185650b78a5c1c53c25", "patch": "@@ -1856,6 +1856,7 @@ show_omp_node (int level, gfc_code *c)\n     case EXEC_OMP_PARALLEL: name = \"PARALLEL\"; break;\n     case EXEC_OMP_PARALLEL_DO: name = \"PARALLEL DO\"; break;\n     case EXEC_OMP_PARALLEL_DO_SIMD: name = \"PARALLEL DO SIMD\"; break;\n+    case EXEC_OMP_PARALLEL_MASTER: name = \"PARALLEL MASTER\"; break;\n     case EXEC_OMP_PARALLEL_SECTIONS: name = \"PARALLEL SECTIONS\"; break;\n     case EXEC_OMP_PARALLEL_WORKSHARE: name = \"PARALLEL WORKSHARE\"; break;\n     case EXEC_OMP_SCAN: name = \"SCAN\"; break;\n@@ -1927,6 +1928,7 @@ show_omp_node (int level, gfc_code *c)\n     case EXEC_OMP_PARALLEL:\n     case EXEC_OMP_PARALLEL_DO:\n     case EXEC_OMP_PARALLEL_DO_SIMD:\n+    case EXEC_OMP_PARALLEL_MASTER:\n     case EXEC_OMP_PARALLEL_SECTIONS:\n     case EXEC_OMP_PARALLEL_WORKSHARE:\n     case EXEC_OMP_SCAN:\n@@ -3139,6 +3141,7 @@ show_code_node (int level, gfc_code *c)\n     case EXEC_OMP_PARALLEL:\n     case EXEC_OMP_PARALLEL_DO:\n     case EXEC_OMP_PARALLEL_DO_SIMD:\n+    case EXEC_OMP_PARALLEL_MASTER:\n     case EXEC_OMP_PARALLEL_SECTIONS:\n     case EXEC_OMP_PARALLEL_WORKSHARE:\n     case EXEC_OMP_SCAN:"}, {"sha": "ffe2db4881d1dd44492fb4bfda02d32982e23402", "filename": "gcc/fortran/frontend-passes.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e3702f8daeec5897982d185650b78a5c1c53c25/gcc%2Ffortran%2Ffrontend-passes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e3702f8daeec5897982d185650b78a5c1c53c25/gcc%2Ffortran%2Ffrontend-passes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ffrontend-passes.c?ref=0e3702f8daeec5897982d185650b78a5c1c53c25", "patch": "@@ -5542,6 +5542,7 @@ gfc_code_walker (gfc_code **c, walk_code_fn_t codefn, walk_expr_fn_t exprfn,\n \t    case EXEC_OMP_PARALLEL:\n \t    case EXEC_OMP_PARALLEL_DO:\n \t    case EXEC_OMP_PARALLEL_DO_SIMD:\n+\t    case EXEC_OMP_PARALLEL_MASTER:\n \t    case EXEC_OMP_PARALLEL_SECTIONS:\n \n \t      in_omp_workshare = false;"}, {"sha": "bab785bceb7d5a83aebc95e61a0161c9c1d51b86", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e3702f8daeec5897982d185650b78a5c1c53c25/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e3702f8daeec5897982d185650b78a5c1c53c25/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=0e3702f8daeec5897982d185650b78a5c1c53c25", "patch": "@@ -266,7 +266,8 @@ enum gfc_statement\n   ST_OMP_REQUIRES, ST_PROCEDURE, ST_GENERIC, ST_CRITICAL, ST_END_CRITICAL,\n   ST_GET_FCN_CHARACTERISTICS, ST_LOCK, ST_UNLOCK, ST_EVENT_POST,\n   ST_EVENT_WAIT, ST_FAIL_IMAGE, ST_FORM_TEAM, ST_CHANGE_TEAM,\n-  ST_END_TEAM, ST_SYNC_TEAM, ST_NONE\n+  ST_END_TEAM, ST_SYNC_TEAM,  ST_OMP_PARALLEL_MASTER,\n+  ST_OMP_END_PARALLEL_MASTER, ST_NONE\n };\n \n /* Types of interfaces that we can have.  Assignment interfaces are\n@@ -2704,7 +2705,8 @@ enum gfc_exec_op\n   EXEC_OMP_TARGET_ENTER_DATA, EXEC_OMP_TARGET_EXIT_DATA,\n   EXEC_OMP_TARGET_PARALLEL, EXEC_OMP_TARGET_PARALLEL_DO,\n   EXEC_OMP_TARGET_PARALLEL_DO_SIMD, EXEC_OMP_TARGET_SIMD,\n-  EXEC_OMP_TASKLOOP, EXEC_OMP_TASKLOOP_SIMD, EXEC_OMP_SCAN, EXEC_OMP_DEPOBJ\n+  EXEC_OMP_TASKLOOP, EXEC_OMP_TASKLOOP_SIMD, EXEC_OMP_SCAN, EXEC_OMP_DEPOBJ,\n+  EXEC_OMP_PARALLEL_MASTER\n };\n \n typedef struct gfc_code"}, {"sha": "09c572324bc2f6b4f3ca250c275e09440b3382ee", "filename": "gcc/fortran/match.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e3702f8daeec5897982d185650b78a5c1c53c25/gcc%2Ffortran%2Fmatch.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e3702f8daeec5897982d185650b78a5c1c53c25/gcc%2Ffortran%2Fmatch.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.h?ref=0e3702f8daeec5897982d185650b78a5c1c53c25", "patch": "@@ -174,6 +174,7 @@ match gfc_match_omp_ordered_depend (void);\n match gfc_match_omp_parallel (void);\n match gfc_match_omp_parallel_do (void);\n match gfc_match_omp_parallel_do_simd (void);\n+match gfc_match_omp_parallel_master (void);\n match gfc_match_omp_parallel_sections (void);\n match gfc_match_omp_parallel_workshare (void);\n match gfc_match_omp_requires (void);"}, {"sha": "294b6d05506577dfeb7bdbbce54d9a1f8d6f41dc", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e3702f8daeec5897982d185650b78a5c1c53c25/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e3702f8daeec5897982d185650b78a5c1c53c25/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=0e3702f8daeec5897982d185650b78a5c1c53c25", "patch": "@@ -3769,6 +3769,13 @@ gfc_match_omp_parallel_do_simd (void)\n }\n \n \n+match\n+gfc_match_omp_parallel_master (void)\n+{\n+  return match_omp (EXEC_OMP_PARALLEL_MASTER, OMP_PARALLEL_CLAUSES);\n+}\n+\n+\n match\n gfc_match_omp_parallel_sections (void)\n {\n@@ -4833,6 +4840,7 @@ resolve_omp_clauses (gfc_code *code, gfc_omp_clauses *omp_clauses,\n \n \t    case EXEC_OMP_PARALLEL:\n \t    case EXEC_OMP_PARALLEL_DO:\n+\t    case EXEC_OMP_PARALLEL_MASTER:\n \t    case EXEC_OMP_PARALLEL_SECTIONS:\n \t    case EXEC_OMP_PARALLEL_WORKSHARE:\n \t    case EXEC_OMP_DISTRIBUTE_PARALLEL_DO:\n@@ -6796,6 +6804,8 @@ omp_code_to_statement (gfc_code *code)\n     {\n     case EXEC_OMP_PARALLEL:\n       return ST_OMP_PARALLEL;\n+    case EXEC_OMP_PARALLEL_MASTER:\n+      return ST_OMP_PARALLEL_MASTER;\n     case EXEC_OMP_PARALLEL_SECTIONS:\n       return ST_OMP_PARALLEL_SECTIONS;\n     case EXEC_OMP_SECTIONS:\n@@ -7312,6 +7322,7 @@ gfc_resolve_omp_directive (gfc_code *code, gfc_namespace *ns)\n     case EXEC_OMP_CANCEL:\n     case EXEC_OMP_PARALLEL_WORKSHARE:\n     case EXEC_OMP_PARALLEL:\n+    case EXEC_OMP_PARALLEL_MASTER:\n     case EXEC_OMP_PARALLEL_SECTIONS:\n     case EXEC_OMP_SECTIONS:\n     case EXEC_OMP_SINGLE:"}, {"sha": "6efb3fd5e7b25741e0b74d2ae38498cc6c1caaa0", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e3702f8daeec5897982d185650b78a5c1c53c25/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e3702f8daeec5897982d185650b78a5c1c53c25/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=0e3702f8daeec5897982d185650b78a5c1c53c25", "patch": "@@ -925,6 +925,8 @@ decode_omp_directive (void)\n       matchs (\"end parallel do simd\", gfc_match_omp_eos_error,\n \t      ST_OMP_END_PARALLEL_DO_SIMD);\n       matcho (\"end parallel do\", gfc_match_omp_eos_error, ST_OMP_END_PARALLEL_DO);\n+      matcho (\"end parallel master\", gfc_match_omp_eos_error,\n+\t      ST_OMP_END_PARALLEL_MASTER);\n       matcho (\"end parallel sections\", gfc_match_omp_eos_error,\n \t      ST_OMP_END_PARALLEL_SECTIONS);\n       matcho (\"end parallel workshare\", gfc_match_omp_eos_error,\n@@ -990,6 +992,8 @@ decode_omp_directive (void)\n       matchs (\"parallel do simd\", gfc_match_omp_parallel_do_simd,\n \t      ST_OMP_PARALLEL_DO_SIMD);\n       matcho (\"parallel do\", gfc_match_omp_parallel_do, ST_OMP_PARALLEL_DO);\n+      matcho (\"parallel master\", gfc_match_omp_parallel_master,\n+\t      ST_OMP_PARALLEL_MASTER);\n       matcho (\"parallel sections\", gfc_match_omp_parallel_sections,\n \t      ST_OMP_PARALLEL_SECTIONS);\n       matcho (\"parallel workshare\", gfc_match_omp_parallel_workshare,\n@@ -1605,7 +1609,7 @@ next_statement (void)\n #define case_exec_markers case ST_DO: case ST_FORALL_BLOCK: \\\n   case ST_IF_BLOCK: case ST_BLOCK: case ST_ASSOCIATE: \\\n   case ST_WHERE_BLOCK: case ST_SELECT_CASE: case ST_SELECT_TYPE: \\\n-  case ST_SELECT_RANK: case ST_OMP_PARALLEL: \\\n+  case ST_SELECT_RANK: case ST_OMP_PARALLEL: case ST_OMP_PARALLEL_MASTER: \\\n   case ST_OMP_PARALLEL_SECTIONS: case ST_OMP_SECTIONS: case ST_OMP_ORDERED: \\\n   case ST_OMP_CRITICAL: case ST_OMP_MASTER: case ST_OMP_SINGLE: \\\n   case ST_OMP_DO: case ST_OMP_PARALLEL_DO: case ST_OMP_ATOMIC: \\\n@@ -2349,6 +2353,9 @@ gfc_ascii_statement (gfc_statement st)\n     case ST_OMP_END_PARALLEL_DO_SIMD:\n       p = \"!$OMP END PARALLEL DO SIMD\";\n       break;\n+    case ST_OMP_END_PARALLEL_MASTER:\n+      p = \"!$OMP END PARALLEL MASTER\";\n+      break;\n     case ST_OMP_END_PARALLEL_SECTIONS:\n       p = \"!$OMP END PARALLEL SECTIONS\";\n       break;\n@@ -2443,6 +2450,9 @@ gfc_ascii_statement (gfc_statement st)\n     case ST_OMP_PARALLEL_DO_SIMD:\n       p = \"!$OMP PARALLEL DO SIMD\";\n       break;\n+    case ST_OMP_PARALLEL_MASTER:\n+      p = \"!$OMP PARALLEL MASTER\";\n+      break;\n     case ST_OMP_PARALLEL_SECTIONS:\n       p = \"!$OMP PARALLEL SECTIONS\";\n       break;\n@@ -5255,6 +5265,9 @@ parse_omp_structured_block (gfc_statement omp_st, bool workshare_stmts_only)\n     case ST_OMP_PARALLEL:\n       omp_end_st = ST_OMP_END_PARALLEL;\n       break;\n+    case ST_OMP_PARALLEL_MASTER:\n+      omp_end_st = ST_OMP_END_PARALLEL_MASTER;\n+      break;\n     case ST_OMP_PARALLEL_SECTIONS:\n       omp_end_st = ST_OMP_END_PARALLEL_SECTIONS;\n       break;\n@@ -5379,6 +5392,7 @@ parse_omp_structured_block (gfc_statement omp_st, bool workshare_stmts_only)\n \t\t  break;\n \n \t\tcase ST_OMP_PARALLEL:\n+\t\tcase ST_OMP_PARALLEL_MASTER:\n \t\tcase ST_OMP_PARALLEL_SECTIONS:\n \t\t  parse_omp_structured_block (st, false);\n \t\t  break;\n@@ -5580,6 +5594,7 @@ parse_executable (gfc_statement st)\n \t  break;\n \n \tcase ST_OMP_PARALLEL:\n+\tcase ST_OMP_PARALLEL_MASTER:\n \tcase ST_OMP_PARALLEL_SECTIONS:\n \tcase ST_OMP_SECTIONS:\n \tcase ST_OMP_ORDERED:"}, {"sha": "c02bbed87395776baf68c9adcc89028dcd45f4d4", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e3702f8daeec5897982d185650b78a5c1c53c25/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e3702f8daeec5897982d185650b78a5c1c53c25/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=0e3702f8daeec5897982d185650b78a5c1c53c25", "patch": "@@ -10802,6 +10802,7 @@ gfc_resolve_blocks (gfc_code *b, gfc_namespace *ns)\n \tcase EXEC_OMP_PARALLEL:\n \tcase EXEC_OMP_PARALLEL_DO:\n \tcase EXEC_OMP_PARALLEL_DO_SIMD:\n+\tcase EXEC_OMP_PARALLEL_MASTER:\n \tcase EXEC_OMP_PARALLEL_SECTIONS:\n \tcase EXEC_OMP_PARALLEL_WORKSHARE:\n \tcase EXEC_OMP_SECTIONS:\n@@ -11763,6 +11764,7 @@ gfc_resolve_code (gfc_code *code, gfc_namespace *ns)\n \t    case EXEC_OMP_PARALLEL:\n \t    case EXEC_OMP_PARALLEL_DO:\n \t    case EXEC_OMP_PARALLEL_DO_SIMD:\n+\t    case EXEC_OMP_PARALLEL_MASTER:\n \t    case EXEC_OMP_PARALLEL_SECTIONS:\n \t    case EXEC_OMP_TARGET_PARALLEL:\n \t    case EXEC_OMP_TARGET_PARALLEL_DO:\n@@ -12243,6 +12245,7 @@ gfc_resolve_code (gfc_code *code, gfc_namespace *ns)\n \tcase EXEC_OMP_PARALLEL:\n \tcase EXEC_OMP_PARALLEL_DO:\n \tcase EXEC_OMP_PARALLEL_DO_SIMD:\n+\tcase EXEC_OMP_PARALLEL_MASTER:\n \tcase EXEC_OMP_PARALLEL_SECTIONS:\n \tcase EXEC_OMP_PARALLEL_WORKSHARE:\n \t  omp_workshare_save = omp_workshare_flag;"}, {"sha": "02a81dadb2a974660f99d7edda73b18818287321", "filename": "gcc/fortran/st.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e3702f8daeec5897982d185650b78a5c1c53c25/gcc%2Ffortran%2Fst.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e3702f8daeec5897982d185650b78a5c1c53c25/gcc%2Ffortran%2Fst.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fst.c?ref=0e3702f8daeec5897982d185650b78a5c1c53c25", "patch": "@@ -230,6 +230,7 @@ gfc_free_statement (gfc_code *p)\n     case EXEC_OMP_PARALLEL:\n     case EXEC_OMP_PARALLEL_DO:\n     case EXEC_OMP_PARALLEL_DO_SIMD:\n+    case EXEC_OMP_PARALLEL_MASTER:\n     case EXEC_OMP_PARALLEL_SECTIONS:\n     case EXEC_OMP_PARALLEL_WORKSHARE:\n     case EXEC_OMP_SCAN:"}, {"sha": "5666cd68c7ec7a1c9865cc5c28e0ddc499729e85", "filename": "gcc/fortran/trans-openmp.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e3702f8daeec5897982d185650b78a5c1c53c25/gcc%2Ffortran%2Ftrans-openmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e3702f8daeec5897982d185650b78a5c1c53c25/gcc%2Ffortran%2Ftrans-openmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-openmp.c?ref=0e3702f8daeec5897982d185650b78a5c1c53c25", "patch": "@@ -5553,6 +5553,28 @@ gfc_trans_omp_parallel_do_simd (gfc_code *code, stmtblock_t *pblock,\n   return gfc_finish_block (&block);\n }\n \n+static tree\n+gfc_trans_omp_parallel_master (gfc_code *code)\n+{\n+  stmtblock_t block;\n+  tree stmt, omp_clauses;\n+\n+  gfc_start_block (&block);\n+  omp_clauses = gfc_trans_omp_clauses (&block, code->ext.omp_clauses,\n+\t\t\t\t       code->loc);\n+  pushlevel ();\n+  stmt = gfc_trans_omp_master (code);\n+  if (TREE_CODE (stmt) != BIND_EXPR)\n+    stmt = build3_v (BIND_EXPR, NULL, stmt, poplevel (1, 0));\n+  else\n+    poplevel (0, 0);\n+  stmt = build2_loc (gfc_get_location (&code->loc), OMP_PARALLEL,\n+\t\t     void_type_node, stmt, omp_clauses);\n+  OMP_PARALLEL_COMBINED (stmt) = 1;\n+  gfc_add_expr_to_block (&block, stmt);\n+  return gfc_finish_block (&block);\n+}\n+\n static tree\n gfc_trans_omp_parallel_sections (gfc_code *code)\n {\n@@ -6092,6 +6114,7 @@ gfc_trans_omp_workshare (gfc_code *code, gfc_omp_clauses *clauses)\n \n \tcase EXEC_OMP_PARALLEL:\n \tcase EXEC_OMP_PARALLEL_DO:\n+\tcase EXEC_OMP_PARALLEL_MASTER:\n \tcase EXEC_OMP_PARALLEL_SECTIONS:\n \tcase EXEC_OMP_PARALLEL_WORKSHARE:\n \tcase EXEC_OMP_CRITICAL:\n@@ -6273,6 +6296,8 @@ gfc_trans_omp_directive (gfc_code *code)\n       return gfc_trans_omp_parallel_do (code, NULL, NULL);\n     case EXEC_OMP_PARALLEL_DO_SIMD:\n       return gfc_trans_omp_parallel_do_simd (code, NULL, NULL);\n+    case EXEC_OMP_PARALLEL_MASTER:\n+      return gfc_trans_omp_parallel_master (code);\n     case EXEC_OMP_PARALLEL_SECTIONS:\n       return gfc_trans_omp_parallel_sections (code);\n     case EXEC_OMP_PARALLEL_WORKSHARE:"}, {"sha": "9f296bd8c03200790e8f8f310a94ac542d55f41f", "filename": "gcc/fortran/trans.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e3702f8daeec5897982d185650b78a5c1c53c25/gcc%2Ffortran%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e3702f8daeec5897982d185650b78a5c1c53c25/gcc%2Ffortran%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.c?ref=0e3702f8daeec5897982d185650b78a5c1c53c25", "patch": "@@ -2174,6 +2174,7 @@ trans_code (gfc_code * code, tree cond)\n \tcase EXEC_OMP_PARALLEL:\n \tcase EXEC_OMP_PARALLEL_DO:\n \tcase EXEC_OMP_PARALLEL_DO_SIMD:\n+\tcase EXEC_OMP_PARALLEL_MASTER:\n \tcase EXEC_OMP_PARALLEL_SECTIONS:\n \tcase EXEC_OMP_PARALLEL_WORKSHARE:\n \tcase EXEC_OMP_SECTIONS:"}, {"sha": "2ccc18f0c736490e2dd7968a16ac1e4a68371ee0", "filename": "gcc/testsuite/gfortran.dg/gomp/parallel-master-1.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e3702f8daeec5897982d185650b78a5c1c53c25/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fparallel-master-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e3702f8daeec5897982d185650b78a5c1c53c25/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fparallel-master-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fparallel-master-1.f90?ref=0e3702f8daeec5897982d185650b78a5c1c53c25", "patch": "@@ -0,0 +1,23 @@\n+! { dg-additional-options \"-fdump-tree-original\" }\n+  implicit none\n+  integer :: k, p, s, r, nth, t, f\n+  logical(kind=2) l2\n+  !$omp threadprivate (t)\n+  \n+  external bar\n+  !$omp parallel master default(none) private (k)\n+    call bar (k)\n+  !$omp end parallel master\n+\n+  !$omp parallel master private (p) firstprivate (f) if (parallel: l2) default(shared) &\n+  !$omp& shared(s) reduction(+:r) num_threads (nth) proc_bind(spread) copyin(t)\n+     !\n+  !$omp end parallel master\n+end\n+\n+! { dg-final { scan-tree-dump \"omp parallel private\\\\(k\\\\) default\\\\(none\\\\)\" \"original\" } }\n+! { dg-final { scan-tree-dump-times \"#pragma omp master\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump \"D.\\[0-9\\]+ = l2;\" \"original\" } }\n+! { dg-final { scan-tree-dump \"D.\\[0-9\\]+ = nth;\" \"original\" } }\n+! { dg-final { scan-tree-dump \"#pragma omp parallel private\\\\(p\\\\) firstprivate\\\\(f\\\\) shared\\\\(s\\\\) copyin\\\\(t\\\\) reduction\\\\(\\\\+:r\\\\) if\\\\(parallel:D.\\[0-9\\]+\\\\) num_threads\\\\(D.\\[0-9\\]+\\\\) default\\\\(shared\\\\) proc_bind\\\\(spread\\\\)\" \"original\" } }\n+"}, {"sha": "2e12de63a102fabf388074997a61911534a6974e", "filename": "gcc/testsuite/gfortran.dg/gomp/parallel-master-2.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e3702f8daeec5897982d185650b78a5c1c53c25/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fparallel-master-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e3702f8daeec5897982d185650b78a5c1c53c25/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fparallel-master-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fparallel-master-2.f90?ref=0e3702f8daeec5897982d185650b78a5c1c53c25", "patch": "@@ -0,0 +1,9 @@\n+  use iso_c_binding, only: c_intptr_t\n+  implicit none (external, type)\n+  integer, parameter :: omp_event_handle_kind = c_intptr_t\n+  integer (kind=omp_event_handle_kind)  :: x\n+  !$omp parallel master default (none) ! { dg-message \"enclosing 'parallel'\" }\n+    !$omp task detach (x) ! { dg-error \"'x' not specified in enclosing 'parallel'\" }\n+    !$omp end task\n+  !$omp end parallel master\n+end "}, {"sha": "1e30b4807ef798821dac3c7440d3b0692a8a80e1", "filename": "libgomp/testsuite/libgomp.fortran/parallel-master.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e3702f8daeec5897982d185650b78a5c1c53c25/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fparallel-master.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e3702f8daeec5897982d185650b78a5c1c53c25/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fparallel-master.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fparallel-master.f90?ref=0e3702f8daeec5897982d185650b78a5c1c53c25", "patch": "@@ -0,0 +1,14 @@\n+! { dg-additional-options \"-fdump-tree-original\" }\n+program main\n+  use omp_lib\n+  implicit none (type, external)\n+  integer :: p, a(20)\n+  !$omp parallel master num_threads(4) private (p) shared(a)\n+    p = omp_get_thread_num ();\n+    if (p /= 0) stop 1\n+    a = 0\n+  !$omp end parallel master\n+end\n+\n+! { dg-final { scan-tree-dump \"#pragma omp parallel private\\\\(p\\\\) shared\\\\(a\\\\) num_threads\\\\(4\\\\)\" \"original\"} }\n+! { dg-final { scan-tree-dump \"#pragma omp master\" \"original\"} }"}]}