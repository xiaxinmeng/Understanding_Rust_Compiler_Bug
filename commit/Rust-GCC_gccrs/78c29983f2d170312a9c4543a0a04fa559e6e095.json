{"sha": "78c29983f2d170312a9c4543a0a04fa559e6e095", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhjMjk5ODNmMmQxNzAzMTJhOWM0NTQzYTBhMDRmYTU1OWU2ZTA5NQ==", "commit": {"author": {"name": "Marcus Shawcroft", "email": "marcus.shawcroft@arm.com", "date": "2014-04-22T13:19:44Z"}, "committer": {"name": "Marcus Shawcroft", "email": "mshawcroft@gcc.gnu.org", "date": "2014-04-22T13:19:44Z"}, "message": "[AArch64] Fix indentation.\n\nFrom-SVN: r209627", "tree": {"sha": "bf36e720439e90b24780ac68692981f28051d7d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf36e720439e90b24780ac68692981f28051d7d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78c29983f2d170312a9c4543a0a04fa559e6e095", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78c29983f2d170312a9c4543a0a04fa559e6e095", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78c29983f2d170312a9c4543a0a04fa559e6e095", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78c29983f2d170312a9c4543a0a04fa559e6e095/comments", "author": {"login": "mshawcroft", "id": 6357566, "node_id": "MDQ6VXNlcjYzNTc1NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/6357566?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mshawcroft", "html_url": "https://github.com/mshawcroft", "followers_url": "https://api.github.com/users/mshawcroft/followers", "following_url": "https://api.github.com/users/mshawcroft/following{/other_user}", "gists_url": "https://api.github.com/users/mshawcroft/gists{/gist_id}", "starred_url": "https://api.github.com/users/mshawcroft/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mshawcroft/subscriptions", "organizations_url": "https://api.github.com/users/mshawcroft/orgs", "repos_url": "https://api.github.com/users/mshawcroft/repos", "events_url": "https://api.github.com/users/mshawcroft/events{/privacy}", "received_events_url": "https://api.github.com/users/mshawcroft/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dbf23a7900dfa15dd4b6cc681c3310ca17276d6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbf23a7900dfa15dd4b6cc681c3310ca17276d6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbf23a7900dfa15dd4b6cc681c3310ca17276d6a"}], "stats": {"total": 49, "additions": 27, "deletions": 22}, "files": [{"sha": "809601a33a2321e22ef86ce08715c60829d2d5f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78c29983f2d170312a9c4543a0a04fa559e6e095/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78c29983f2d170312a9c4543a0a04fa559e6e095/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78c29983f2d170312a9c4543a0a04fa559e6e095", "patch": "@@ -1,3 +1,8 @@\n+2014-04-22  Marcus Shawcroft  <marcus.shawcroft@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_initial_elimination_offset):\n+\tFix indentation.\n+\n 2014-04-22  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* machmode.h (bitwise_mode_for_mode): Declare."}, {"sha": "e83e7216f32c7e9fedb12c08007d2f5b547244f1", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78c29983f2d170312a9c4543a0a04fa559e6e095/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78c29983f2d170312a9c4543a0a04fa559e6e095/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=78c29983f2d170312a9c4543a0a04fa559e6e095", "patch": "@@ -4147,32 +4147,32 @@ aarch64_initial_elimination_offset (unsigned from, unsigned to)\n \t\t+ crtl->outgoing_args_size\n \t\t+ cfun->machine->saved_varargs_size);\n \n-   frame_size = AARCH64_ROUND_UP (frame_size, STACK_BOUNDARY / BITS_PER_UNIT);\n-   offset = frame_size;\n+  frame_size = AARCH64_ROUND_UP (frame_size, STACK_BOUNDARY / BITS_PER_UNIT);\n+  offset = frame_size;\n \n-   if (to == HARD_FRAME_POINTER_REGNUM)\n-     {\n-       if (from == ARG_POINTER_REGNUM)\n-\t return offset - crtl->outgoing_args_size;\n+  if (to == HARD_FRAME_POINTER_REGNUM)\n+    {\n+      if (from == ARG_POINTER_REGNUM)\n+\treturn offset - crtl->outgoing_args_size;\n \n-       if (from == FRAME_POINTER_REGNUM)\n-\t return cfun->machine->frame.saved_regs_size + get_frame_size ();\n-     }\n+      if (from == FRAME_POINTER_REGNUM)\n+\treturn cfun->machine->frame.saved_regs_size + get_frame_size ();\n+    }\n \n-   if (to == STACK_POINTER_REGNUM)\n-     {\n-       if (from == FRAME_POINTER_REGNUM)\n-         {\n-           HOST_WIDE_INT elim = crtl->outgoing_args_size\n-                              + cfun->machine->frame.saved_regs_size\n-                              + get_frame_size ()\n-                              - cfun->machine->frame.fp_lr_offset;\n-           elim = AARCH64_ROUND_UP (elim, STACK_BOUNDARY / BITS_PER_UNIT);\n-           return elim;\n-         }\n-     }\n+  if (to == STACK_POINTER_REGNUM)\n+    {\n+      if (from == FRAME_POINTER_REGNUM)\n+\t{\n+\t  HOST_WIDE_INT elim = crtl->outgoing_args_size\n+\t    + cfun->machine->frame.saved_regs_size\n+\t    + get_frame_size ()\n+\t    - cfun->machine->frame.fp_lr_offset;\n+\t  elim = AARCH64_ROUND_UP (elim, STACK_BOUNDARY / BITS_PER_UNIT);\n+\t  return elim;\n+\t}\n+    }\n \n-   return offset;\n+  return offset;\n }\n \n "}]}