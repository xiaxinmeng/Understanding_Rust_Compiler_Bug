{"sha": "615cd49b9a70766688139f6ea85aad1831df8816", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE1Y2Q0OWI5YTcwNzY2Njg4MTM5ZjZlYTg1YWFkMTgzMWRmODgxNg==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@cambridge.redhat.com", "date": "2001-07-24T15:52:26Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2001-07-24T15:52:26Z"}, "message": "sh.md (ashlsi3_std splitter): Split only after reload.\n\n2001-07-18  Andrew Haley  <aph@cambridge.redhat.com>\n\n        * config/sh/sh.md (ashlsi3_std splitter): Split only after reload.\n        (ashlsi3_n splitter): Likewise.\n        (lshrsi3_n splitter): Likewise.\n\n        (GOTaddr2picreg): Make const SImode.\n        (sym_label2reg): Likewise.\n        (symGOT2reg): Likewise.\n        (symGOTOFF2reg) Likewise.\n\n        (casesi_worker_0): Make unspec SImode.\n\nFrom-SVN: r44304", "tree": {"sha": "e7972836ec00ba49e9cac5b230526c594f1a1bb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7972836ec00ba49e9cac5b230526c594f1a1bb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/615cd49b9a70766688139f6ea85aad1831df8816", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/615cd49b9a70766688139f6ea85aad1831df8816", "html_url": "https://github.com/Rust-GCC/gccrs/commit/615cd49b9a70766688139f6ea85aad1831df8816", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/615cd49b9a70766688139f6ea85aad1831df8816/comments", "author": null, "committer": null, "parents": [{"sha": "2b9d17c73c1b69e3e61a010ce31723338713a02d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b9d17c73c1b69e3e61a010ce31723338713a02d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b9d17c73c1b69e3e61a010ce31723338713a02d"}], "stats": {"total": 34, "additions": 24, "deletions": 10}, "files": [{"sha": "8fb3efe1151812953a9124fcb32e2f1f81476b46", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/615cd49b9a70766688139f6ea85aad1831df8816/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/615cd49b9a70766688139f6ea85aad1831df8816/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=615cd49b9a70766688139f6ea85aad1831df8816", "patch": "@@ -1,3 +1,16 @@\n+2001-07-18  Andrew Haley  <aph@cambridge.redhat.com>\n+\n+        * config/sh/sh.md (ashlsi3_std splitter): Split only after reload.\n+        (ashlsi3_n splitter): Likewise.\n+        (lshrsi3_n splitter): Likewise.\n+\n+        (GOTaddr2picreg): Make const SImode.\n+        (sym_label2reg): Likewise.\n+        (symGOT2reg): Likewise.\n+        (symGOTOFF2reg) Likewise.\n+\n+        (casesi_worker_0): Make unspec SImode.\n+\n 2001-07-18  Andrew Haley  <aph@cambridge.redhat.com>\n \n         * config/sh/sh.c (barrier_align): Check that an operand really is"}, {"sha": "5eba38e065f932ddca2a4ef9a672776d06e5cd2b", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/615cd49b9a70766688139f6ea85aad1831df8816/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/615cd49b9a70766688139f6ea85aad1831df8816/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=615cd49b9a70766688139f6ea85aad1831df8816", "patch": "@@ -1654,6 +1654,7 @@\n    shll%O2\t%0\n    #\"\n   \"TARGET_SH3\n+   && reload_completed\n    && GET_CODE (operands[2]) == CONST_INT\n    && ! CONST_OK_FOR_K (INTVAL (operands[2]))\"\n   [(set (match_dup 3) (match_dup 2))\n@@ -1696,7 +1697,7 @@\n \t(ashift:SI (match_operand:SI 1 \"arith_reg_operand\" \"\")\n \t\t   (match_operand:SI 2 \"const_int_operand\" \"n\")))\n    (clobber (reg:SI T_REG))]\n-  \"\"\n+  \"reload_completed\"\n   [(use (reg:SI R0_REG))]\n   \"\n {\n@@ -1744,7 +1745,7 @@\n \t(ashift:HI (match_operand:HI 1 \"arith_reg_operand\" \"\")\n \t\t   (match_operand:HI 2 \"const_int_operand\" \"n\")))\n    (clobber (reg:SI T_REG))]\n-  \"\"\n+  \"reload_completed\"\n   [(use (reg:SI R0_REG))]\n   \"\n {\n@@ -1904,7 +1905,7 @@\n \t(lshiftrt:SI (match_operand:SI 1 \"arith_reg_operand\" \"\")\n \t\t     (match_operand:SI 2 \"const_int_operand\" \"n\")))\n    (clobber (reg:SI T_REG))]\n-  \"\"\n+  \"reload_completed\"\n   [(use (reg:SI R0_REG))]\n   \"\n {\n@@ -3747,7 +3748,7 @@\n   [(set (reg:SI R0_REG)\n \t(unspec [(const (unspec [(match_dup 1)] UNSPEC_PIC))]\n \t\tUNSPEC_MOVA))\n-   (set (match_dup 0) (const (unspec [(match_dup 1)] UNSPEC_PIC)))\n+   (set (match_dup 0) (const:SI (unspec:SI [(match_dup 1)] UNSPEC_PIC)))\n    (set (match_dup 0) (plus:SI (match_dup 0) (reg:SI R0_REG)))]\n   \"\" \"\n {\n@@ -3778,15 +3779,15 @@\n (define_expand \"sym_label2reg\"\n   [(set (match_operand:SI 0 \"\" \"\")\n \t(const (minus:SI\n-\t\t(const (unspec [(match_operand:SI 1 \"\" \"\")] UNSPEC_PIC))\n+\t\t(const:SI (unspec:SI [(match_operand:SI 1 \"\" \"\")] UNSPEC_PIC))\n \t\t(const (plus:SI\n \t\t\t(match_operand:SI 2 \"\" \"\")\n \t\t\t(const_int 2))))))]\n   \"\" \"\")\n \n (define_expand \"symGOT2reg\"\n   [(set (match_operand:SI 0 \"\" \"\")\n-        (const (unspec [(match_operand:SI 1 \"\" \"\")] UNSPEC_GOT)))\n+        (const:SI (unspec:SI [(match_operand:SI 1 \"\" \"\")] UNSPEC_GOT)))\n   (set (match_dup 0) (plus:SI (match_dup 0) (match_dup 2)))\n   (set (match_dup 0) (mem:SI (match_dup 0)))]\n   \"\"\n@@ -3797,7 +3798,7 @@\n \n (define_expand \"symGOTOFF2reg\"\n   [(set (match_operand:SI 0 \"\" \"\")\n-\t(const (unspec [(match_operand:SI 1 \"\" \"\")] UNSPEC_GOTOFF)))\n+\t(const:SI (unspec:SI [(match_operand:SI 1 \"\" \"\")] UNSPEC_GOTOFF)))\n   (set (match_dup 0) (plus:SI (match_dup 0) (match_dup 2)))]\n   \"\"\n   \"\n@@ -3886,7 +3887,7 @@\n \n (define_insn \"casesi_worker_0\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n-\t(unspec [(match_operand 1 \"register_operand\" \"0,r\")\n+\t(unspec:SI [(match_operand 1 \"register_operand\" \"0,r\")\n \t\t (label_ref (match_operand 2 \"\" \"\"))] UNSPEC_CASESI))\n    (clobber (match_scratch:SI 3 \"=X,1\"))\n    (clobber (match_scratch:SI 4 \"=&z,z\"))]\n@@ -3910,14 +3911,14 @@\n \n (define_split\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n-\t(unspec [(match_operand 1 \"register_operand\" \"\")\n+\t(unspec:SI [(match_operand 1 \"register_operand\" \"\")\n \t\t (label_ref (match_operand 2 \"\" \"\"))] UNSPEC_CASESI))\n    (clobber (match_scratch:SI 3 \"\"))\n    (clobber (match_scratch:SI 4 \"\"))]\n   \"TARGET_SH2 && reload_completed\"\n   [(set (reg:SI R0_REG) (unspec [(label_ref (match_dup 2))] UNSPEC_MOVA))\n    (parallel [(set (match_dup 0)\n-\t      (unspec [(reg:SI R0_REG) (match_dup 1)\n+\t      (unspec:SI [(reg:SI R0_REG) (match_dup 1)\n \t\t       (label_ref (match_dup 2))] UNSPEC_CASESI))\n \t      (clobber (match_dup 3))])]\n   \"LABEL_NUSES (operands[2])++;\")"}]}