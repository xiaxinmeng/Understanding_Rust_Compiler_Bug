{"sha": "319078dad62eba942d33c8975bdcbb09d1c68ba6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzE5MDc4ZGFkNjJlYmE5NDJkMzNjODk3NWJkY2JiMDlkMWM2OGJhNg==", "commit": {"author": {"name": "Szabolcs Nagy", "email": "szabolcs.nagy@arm.com", "date": "2020-07-02T16:12:05Z"}, "committer": {"name": "Szabolcs Nagy", "email": "szabolcs.nagy@arm.com", "date": "2020-07-09T08:50:25Z"}, "message": "aarch64: Fix BTI support in libitm\n\nsjlj.S did not have the GNU property note markup and the BTI c\ninstructions that are necessary when it is built with branch\nprotection.\n\nThe notes are only added when libitm is built with branch\nprotection, because old linkers mishandle the note (merge\nthem incorrectly or emit warnings), the BTI instructions\nare added unconditionally.\n\n2020-07-09  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n\nlibitm/ChangeLog:\n\n\t* config/aarch64/sjlj.S: Add BTI marking and related definitions,\n\tand add BTI c to function entries.", "tree": {"sha": "cb9435da01ea5e7c5e3c9bc3d236467500447a6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb9435da01ea5e7c5e3c9bc3d236467500447a6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/319078dad62eba942d33c8975bdcbb09d1c68ba6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/319078dad62eba942d33c8975bdcbb09d1c68ba6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/319078dad62eba942d33c8975bdcbb09d1c68ba6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/319078dad62eba942d33c8975bdcbb09d1c68ba6/comments", "author": {"login": "nsz-arm", "id": 30925343, "node_id": "MDQ6VXNlcjMwOTI1MzQz", "avatar_url": "https://avatars.githubusercontent.com/u/30925343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nsz-arm", "html_url": "https://github.com/nsz-arm", "followers_url": "https://api.github.com/users/nsz-arm/followers", "following_url": "https://api.github.com/users/nsz-arm/following{/other_user}", "gists_url": "https://api.github.com/users/nsz-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/nsz-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nsz-arm/subscriptions", "organizations_url": "https://api.github.com/users/nsz-arm/orgs", "repos_url": "https://api.github.com/users/nsz-arm/repos", "events_url": "https://api.github.com/users/nsz-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/nsz-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nsz-arm", "id": 30925343, "node_id": "MDQ6VXNlcjMwOTI1MzQz", "avatar_url": "https://avatars.githubusercontent.com/u/30925343?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nsz-arm", "html_url": "https://github.com/nsz-arm", "followers_url": "https://api.github.com/users/nsz-arm/followers", "following_url": "https://api.github.com/users/nsz-arm/following{/other_user}", "gists_url": "https://api.github.com/users/nsz-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/nsz-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nsz-arm/subscriptions", "organizations_url": "https://api.github.com/users/nsz-arm/orgs", "repos_url": "https://api.github.com/users/nsz-arm/repos", "events_url": "https://api.github.com/users/nsz-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/nsz-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0f62fa0320762119446893c67cb52934bc5a05e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0f62fa0320762119446893c67cb52934bc5a05e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0f62fa0320762119446893c67cb52934bc5a05e"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "e2093ca1a97b928d631fc2e5d775d89d169d4d8a", "filename": "libitm/config/aarch64/sjlj.S", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/319078dad62eba942d33c8975bdcbb09d1c68ba6/libitm%2Fconfig%2Faarch64%2Fsjlj.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/319078dad62eba942d33c8975bdcbb09d1c68ba6/libitm%2Fconfig%2Faarch64%2Fsjlj.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Fconfig%2Faarch64%2Fsjlj.S?ref=319078dad62eba942d33c8975bdcbb09d1c68ba6", "patch": "@@ -24,13 +24,16 @@\n \n #include \"asmcfi.h\"\n \n+#define BTI_C\thint\t34\n+\n \t.text\n \t.align\t2\n \t.global\t_ITM_beginTransaction\n \t.type\t_ITM_beginTransaction, %function\n \n _ITM_beginTransaction:\n \tcfi_startproc\n+\tBTI_C\n \tmov\tx1, sp\n \tstp\tx29, x30, [sp, -11*16]!\n \tcfi_adjust_cfa_offset(11*16)\n@@ -70,6 +73,7 @@ GTM_longjmp:\n \t/* The first parameter becomes the return value (x0).\n \t   The third parameter is ignored for now.  */\n \tcfi_startproc\n+\tBTI_C\n \tldp\tx19, x20, [x1, 1*16]\n \tldp\tx21, x22, [x1, 2*16]\n \tldp\tx23, x24, [x1, 3*16]\n@@ -87,6 +91,29 @@ GTM_longjmp:\n \tcfi_endproc\n \t.size\tGTM_longjmp, . - GTM_longjmp\n \n+/* GNU_PROPERTY_AARCH64_* macros from elf.h for use in asm code.  */\n+#define FEATURE_1_AND 0xc0000000\n+#define FEATURE_1_BTI 1\n+#define FEATURE_1_PAC 2\n+\n+/* Add a NT_GNU_PROPERTY_TYPE_0 note.  */\n+#define GNU_PROPERTY(type, value)\t\\\n+  .section .note.gnu.property, \"a\";\t\\\n+  .p2align 3;\t\t\t\t\\\n+  .word 4;\t\t\t\t\\\n+  .word 16;\t\t\t\t\\\n+  .word 5;\t\t\t\t\\\n+  .asciz \"GNU\";\t\t\t\t\\\n+  .word type;\t\t\t\t\\\n+  .word 4;\t\t\t\t\\\n+  .word value;\t\t\t\t\\\n+  .word 0;\n+\n #if defined(__linux__) || defined(__FreeBSD__)\n .section .note.GNU-stack, \"\", %progbits\n+\n+/* Add GNU property note if built with branch protection.  */\n+# ifdef __ARM_FEATURE_BTI_DEFAULT\n+GNU_PROPERTY (FEATURE_1_AND, FEATURE_1_BTI)\n+# endif\n #endif"}]}