{"sha": "e08cf836163a847ddfa4ffb8514a16be6d747dff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA4Y2Y4MzYxNjNhODQ3ZGRmYTRmZmI4NTE0YTE2YmU2ZDc0N2RmZg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-08-28T06:24:23Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-08-28T06:24:23Z"}, "message": "rtl.h (get_pool_constant, [...]): Replace rtx parameters with const_rtx parameters.\n\ngcc/\n\t* rtl.h (get_pool_constant, rtx_referenced_p): Replace rtx parameters\n\twith const_rtx parameters.\n\t* varasm.c (get_pool_constant): Likewise.\n\t* rtlanal.c (rtx_referenced_p_1): Delete.\n\t(rtx_referenced_p): Use FOR_EACH_SUBRTX instead of for_each_rtx.\n\tAssert that the rtx we're looking for is nonnull.  Allow searches\n\tfor constant pool SYMBOL_REFs.\n\nFrom-SVN: r214654", "tree": {"sha": "7441d5b00c8fa3ed69eb9de67d3b23585faddea1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7441d5b00c8fa3ed69eb9de67d3b23585faddea1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e08cf836163a847ddfa4ffb8514a16be6d747dff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e08cf836163a847ddfa4ffb8514a16be6d747dff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e08cf836163a847ddfa4ffb8514a16be6d747dff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e08cf836163a847ddfa4ffb8514a16be6d747dff/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b37c2fe0fe71ba09d7eac796c4b1c03d5261d932", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b37c2fe0fe71ba09d7eac796c4b1c03d5261d932", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b37c2fe0fe71ba09d7eac796c4b1c03d5261d932"}], "stats": {"total": 62, "additions": 31, "deletions": 31}, "files": [{"sha": "9481150135bb8c2887138e86d4b97fc0a8c84586", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08cf836163a847ddfa4ffb8514a16be6d747dff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08cf836163a847ddfa4ffb8514a16be6d747dff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e08cf836163a847ddfa4ffb8514a16be6d747dff", "patch": "@@ -1,3 +1,13 @@\n+2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* rtl.h (get_pool_constant, rtx_referenced_p): Replace rtx parameters\n+\twith const_rtx parameters.\n+\t* varasm.c (get_pool_constant): Likewise.\n+\t* rtlanal.c (rtx_referenced_p_1): Delete.\n+\t(rtx_referenced_p): Use FOR_EACH_SUBRTX instead of for_each_rtx.\n+\tAssert that the rtx we're looking for is nonnull.  Allow searches\n+\tfor constant pool SYMBOL_REFs.\n+\n 2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* reload1.c: Include rtl-iter.h."}, {"sha": "925c384c63a6142edbbd9bb3f2a35441f2ff873c", "filename": "gcc/rtl.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08cf836163a847ddfa4ffb8514a16be6d747dff/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08cf836163a847ddfa4ffb8514a16be6d747dff/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=e08cf836163a847ddfa4ffb8514a16be6d747dff", "patch": "@@ -2557,7 +2557,7 @@ extern rtx force_const_mem (enum machine_mode, rtx);\n /* In varasm.c  */\n \n struct function;\n-extern rtx get_pool_constant (rtx);\n+extern rtx get_pool_constant (const_rtx);\n extern rtx get_pool_constant_mark (rtx, bool *);\n extern enum machine_mode get_pool_mode (const_rtx);\n extern rtx simplify_subtraction (rtx);\n@@ -2800,7 +2800,7 @@ extern void copy_reg_eh_region_note_backward (rtx, rtx, rtx);\n extern int inequality_comparisons_p (const_rtx);\n extern rtx replace_rtx (rtx, rtx, rtx);\n extern int replace_label (rtx *, void *);\n-extern int rtx_referenced_p (rtx, rtx);\n+extern bool rtx_referenced_p (const_rtx, const_rtx);\n extern bool tablejump_p (const_rtx, rtx *, rtx_jump_table_data **);\n extern int computed_jump_p (const_rtx);\n extern bool tls_referenced_p (rtx);"}, {"sha": "0e80426391fc482ea412878dae3e174ff4d011e8", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 18, "deletions": 28, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08cf836163a847ddfa4ffb8514a16be6d747dff/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08cf836163a847ddfa4ffb8514a16be6d747dff/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=e08cf836163a847ddfa4ffb8514a16be6d747dff", "patch": "@@ -43,7 +43,6 @@ along with GCC; see the file COPYING3.  If not see\n static void set_of_1 (rtx, const_rtx, void *);\n static bool covers_regno_p (const_rtx, unsigned int);\n static bool covers_regno_no_parallel_p (const_rtx, unsigned int);\n-static int rtx_referenced_p_1 (rtx *, void *);\n static int computed_jump_p_1 (const_rtx);\n static void parms_set (rtx, const_rtx, void *);\n \n@@ -2832,37 +2831,28 @@ replace_label (rtx *x, void *data)\n   return 0;\n }\n \n-/* When *BODY is equal to X or X is directly referenced by *BODY\n-   return nonzero, thus FOR_EACH_RTX stops traversing and returns nonzero\n-   too, otherwise FOR_EACH_RTX continues traversing *BODY.  */\n+/* Return true if X is referenced in BODY.  */\n \n-static int\n-rtx_referenced_p_1 (rtx *body, void *x)\n+bool\n+rtx_referenced_p (const_rtx x, const_rtx body)\n {\n-  rtx y = (rtx) x;\n-\n-  if (*body == NULL_RTX)\n-    return y == NULL_RTX;\n-\n-  /* Return true if a label_ref *BODY refers to label Y.  */\n-  if (GET_CODE (*body) == LABEL_REF && LABEL_P (y))\n-    return XEXP (*body, 0) == y;\n-\n-  /* If *BODY is a reference to pool constant traverse the constant.  */\n-  if (GET_CODE (*body) == SYMBOL_REF\n-      && CONSTANT_POOL_ADDRESS_P (*body))\n-    return rtx_referenced_p (y, get_pool_constant (*body));\n-\n-  /* By default, compare the RTL expressions.  */\n-  return rtx_equal_p (*body, y);\n-}\n+  subrtx_iterator::array_type array;\n+  FOR_EACH_SUBRTX (iter, array, body, ALL)\n+    if (const_rtx y = *iter)\n+      {\n+\t/* Check if a label_ref Y refers to label X.  */\n+\tif (GET_CODE (y) == LABEL_REF && LABEL_P (y) && XEXP (y, 0) == x)\n+\t  return true;\n \n-/* Return true if X is referenced in BODY.  */\n+\tif (rtx_equal_p (x, y))\n+\t  return true;\n \n-int\n-rtx_referenced_p (rtx x, rtx body)\n-{\n-  return for_each_rtx (&body, rtx_referenced_p_1, x);\n+\t/* If Y is a reference to pool constant traverse the constant.  */\n+\tif (GET_CODE (y) == SYMBOL_REF\n+\t    && CONSTANT_POOL_ADDRESS_P (y))\n+\t  iter.substitute (get_pool_constant (y));\n+      }\n+  return false;\n }\n \n /* If INSN is a tablejump return true and store the label (before jump table) to"}, {"sha": "c820f75096842893cbf180f9e1dc99883ac6b844", "filename": "gcc/varasm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08cf836163a847ddfa4ffb8514a16be6d747dff/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08cf836163a847ddfa4ffb8514a16be6d747dff/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=e08cf836163a847ddfa4ffb8514a16be6d747dff", "patch": "@@ -3724,7 +3724,7 @@ force_const_mem (enum machine_mode mode, rtx x)\n /* Given a constant pool SYMBOL_REF, return the corresponding constant.  */\n \n rtx\n-get_pool_constant (rtx addr)\n+get_pool_constant (const_rtx addr)\n {\n   return SYMBOL_REF_CONSTANT (addr)->constant;\n }"}]}