{"sha": "8f80cbdb26ca754ff3b6fe6c735eca6dd01401fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY4MGNiZGIyNmNhNzU0ZmYzYjZmZTZjNzM1ZWNhNmRkMDE0MDFmYQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2016-03-31T16:18:27Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2016-03-31T16:18:27Z"}, "message": "decl.c (start_preparsed_function): Remove unnecessary bracing.\n\n\t* decl.c (start_preparsed_function): Remove unnecessary bracing.\n\t(finish_destructor_body): Don't emit operator delete here.\n\nFrom-SVN: r234640", "tree": {"sha": "bad2b6cc426221a683c0fb7f1a3cf59c473c2cd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bad2b6cc426221a683c0fb7f1a3cf59c473c2cd6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f80cbdb26ca754ff3b6fe6c735eca6dd01401fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f80cbdb26ca754ff3b6fe6c735eca6dd01401fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f80cbdb26ca754ff3b6fe6c735eca6dd01401fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f80cbdb26ca754ff3b6fe6c735eca6dd01401fa/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "865c2770db7c23218e8c47f6200b54dbc4ccc179", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/865c2770db7c23218e8c47f6200b54dbc4ccc179", "html_url": "https://github.com/Rust-GCC/gccrs/commit/865c2770db7c23218e8c47f6200b54dbc4ccc179"}], "stats": {"total": 38, "additions": 6, "deletions": 32}, "files": [{"sha": "d457acc3f3321f98d66621a9c76367b68e9a1cc0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f80cbdb26ca754ff3b6fe6c735eca6dd01401fa/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f80cbdb26ca754ff3b6fe6c735eca6dd01401fa/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8f80cbdb26ca754ff3b6fe6c735eca6dd01401fa", "patch": "@@ -1,3 +1,8 @@\n+2016-03-31  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* decl.c (start_preparsed_function): Remove unnecessary bracing.\n+\t(finish_destructor_body): Don't emit operator delete here.\n+\n 2016-03-31  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/70393"}, {"sha": "a6c585515d5aec06bed7d6da71df0377360450e6", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 32, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f80cbdb26ca754ff3b6fe6c735eca6dd01401fa/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f80cbdb26ca754ff3b6fe6c735eca6dd01401fa/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=8f80cbdb26ca754ff3b6fe6c735eca6dd01401fa", "patch": "@@ -14170,9 +14170,7 @@ start_preparsed_function (tree decl1, tree attrs, int flags)\n   if (DECL_DESTRUCTOR_P (decl1)\n       || (DECL_CONSTRUCTOR_P (decl1)\n \t  && targetm.cxx.cdtor_returns_this ()))\n-    {\n-      cdtor_label = create_artificial_label (input_location);\n-    }\n+    cdtor_label = create_artificial_label (input_location);\n \n   start_fname_decls ();\n \n@@ -14428,35 +14426,6 @@ finish_destructor_body (void)\n      and member cleanups will be run when the function returns.  */\n   add_stmt (build_stmt (input_location, LABEL_EXPR, cdtor_label));\n \n-  /* In a virtual destructor, we must call delete.  */\n-  if (DECL_VIRTUAL_P (current_function_decl))\n-    {\n-      tree if_stmt;\n-      tree virtual_size = cxx_sizeof (current_class_type);\n-\n-      /* [class.dtor]\n-\n-      At the point of definition of a virtual destructor (including\n-      an implicit definition), non-placement operator delete shall\n-      be looked up in the scope of the destructor's class and if\n-      found shall be accessible and unambiguous.  */\n-      exprstmt = build_op_delete_call (DELETE_EXPR, current_class_ptr,\n-\t\t\t\t       virtual_size,\n-\t\t\t\t       /*global_p=*/false,\n-\t\t\t\t       /*placement=*/NULL_TREE,\n-\t\t\t\t       /*alloc_fn=*/NULL_TREE,\n-\t\t\t\t       tf_warning_or_error);\n-\n-      if_stmt = begin_if_stmt ();\n-      finish_if_stmt_cond (build2 (BIT_AND_EXPR, integer_type_node,\n-\t\t\t\t   current_in_charge_parm,\n-\t\t\t\t   integer_one_node),\n-\t\t\t   if_stmt);\n-      finish_expr_stmt (exprstmt);\n-      finish_then_clause (if_stmt);\n-      finish_if_stmt (if_stmt);\n-    }\n-\n   if (targetm.cxx.cdtor_returns_this ())\n     {\n       tree val;"}]}