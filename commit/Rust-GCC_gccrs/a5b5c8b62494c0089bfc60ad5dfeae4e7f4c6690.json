{"sha": "a5b5c8b62494c0089bfc60ad5dfeae4e7f4c6690", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTViNWM4YjYyNDk0YzAwODliZmM2MGFkNWRmZWFlNGU3ZjRjNjY5MA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-07-29T11:48:36Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-07-29T11:48:36Z"}, "message": "re PR c/71583 (ICE on invalid code on x86_64-linux-gnu (in c_parser_postfix_expression_after_paren_type, at c/c-parser.c:8192))\n\n\tPR c/71583\n\t* c-parser.c (c_parser_postfix_expression_after_paren_type): Also\n\tcheck expr.value.\n\n\t* gcc.dg/noncompile/pr71583.c: New test.\n\nFrom-SVN: r238861", "tree": {"sha": "82438dd0eee48ce62911adc53aee6ffa7ce76d1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82438dd0eee48ce62911adc53aee6ffa7ce76d1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5b5c8b62494c0089bfc60ad5dfeae4e7f4c6690", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5b5c8b62494c0089bfc60ad5dfeae4e7f4c6690", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5b5c8b62494c0089bfc60ad5dfeae4e7f4c6690", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5b5c8b62494c0089bfc60ad5dfeae4e7f4c6690/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0c4c49092a6bb3b9ec716c42194183b111e5d71e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c4c49092a6bb3b9ec716c42194183b111e5d71e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c4c49092a6bb3b9ec716c42194183b111e5d71e"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "a47b8a3b5edf4ef51c73cc5078ce8c766ceb1795", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b5c8b62494c0089bfc60ad5dfeae4e7f4c6690/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b5c8b62494c0089bfc60ad5dfeae4e7f4c6690/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=a5b5c8b62494c0089bfc60ad5dfeae4e7f4c6690", "patch": "@@ -1,3 +1,9 @@\n+2016-07-29  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c/71583\n+\t* c-parser.c (c_parser_postfix_expression_after_paren_type): Also\n+\tcheck expr.value.\n+\n 2016-07-22  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* c-typeck.c: Use HOST_WIDE_INT_1 instead of (HOST_WIDE_INT) 1,"}, {"sha": "a86cae29940f188fe0443560c5aa3051e181cb3b", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b5c8b62494c0089bfc60ad5dfeae4e7f4c6690/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b5c8b62494c0089bfc60ad5dfeae4e7f4c6690/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=a5b5c8b62494c0089bfc60ad5dfeae4e7f4c6690", "patch": "@@ -8232,7 +8232,9 @@ c_parser_postfix_expression_after_paren_type (c_parser *parser,\n   set_c_expr_source_range (&expr, init.src_range);\n   expr.original_code = ERROR_MARK;\n   expr.original_type = NULL;\n-  if (type != error_mark_node && type_expr)\n+  if (type != error_mark_node\n+      && expr.value != error_mark_node\n+      && type_expr)\n     {\n       if (TREE_CODE (expr.value) == C_MAYBE_CONST_EXPR)\n \t{"}, {"sha": "c1df9e98b1a1b5ebeadc925d99ca0b01c2abd68d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b5c8b62494c0089bfc60ad5dfeae4e7f4c6690/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b5c8b62494c0089bfc60ad5dfeae4e7f4c6690/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a5b5c8b62494c0089bfc60ad5dfeae4e7f4c6690", "patch": "@@ -3,6 +3,9 @@\n \tPR c/71574\n \t* c-c++-common/pr71574.c: New test.\n \n+\tPR c/71583\n+\t* gcc.dg/noncompile/pr71583.c: New test.\n+\n 2016-07-29  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \tPR middle-end/68217"}, {"sha": "5045b88b6aff4734ff7b16c5a342c48fd2e4fda0", "filename": "gcc/testsuite/gcc.dg/noncompile/pr71583.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5b5c8b62494c0089bfc60ad5dfeae4e7f4c6690/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fpr71583.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5b5c8b62494c0089bfc60ad5dfeae4e7f4c6690/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fpr71583.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fpr71583.c?ref=a5b5c8b62494c0089bfc60ad5dfeae4e7f4c6690", "patch": "@@ -0,0 +1,11 @@\n+/* PR c/71583 */\n+/* { dg-do compile } */\n+\n+void\n+f (int i)\n+{\n+  (int (*)[++i]) { int }; /* { dg-error \"expected\" } */\n+  (int (*)[++i]) { }; /* { dg-error \"empty\" } */\n+  (int (*)[++i]) { , }; /* { dg-error \"expected\" } */\n+  (int (*)[++i]) { f () }; /* { dg-error \"too few\" } */\n+}"}]}