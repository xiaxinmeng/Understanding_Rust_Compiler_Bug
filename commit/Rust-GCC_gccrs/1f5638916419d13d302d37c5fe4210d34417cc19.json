{"sha": "1f5638916419d13d302d37c5fe4210d34417cc19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY1NjM4OTE2NDE5ZDEzZDMwMmQzN2M1ZmU0MjEwZDM0NDE3Y2MxOQ==", "commit": {"author": {"name": "Robin Dapp", "email": "rdapp@linux.vnet.ibm.com", "date": "2016-09-28T05:13:19Z"}, "committer": {"name": "Markus Trippelsdorf", "email": "trippels@gcc.gnu.org", "date": "2016-09-28T05:13:19Z"}, "message": "re PR tree-optimization/77724 (bootstrap-O3 broken: ICE: in tree_to_uhwi, at tree.c:7330)\n\nFix PR tree-optimization/77724\n\n2016-09-27  Robin Dapp  <rdapp@linux.vnet.ibm.com>\n\n        PR tree-optimization/77724\n        * tree-vect-loop-manip.c (create_intersect_range_checks_index):\n        Add tree_fits_shwi_p check.\n\nFrom-SVN: r240565", "tree": {"sha": "cc8dcd93c833922b0e9a385007793ef6506b7931", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc8dcd93c833922b0e9a385007793ef6506b7931"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f5638916419d13d302d37c5fe4210d34417cc19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f5638916419d13d302d37c5fe4210d34417cc19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f5638916419d13d302d37c5fe4210d34417cc19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f5638916419d13d302d37c5fe4210d34417cc19/comments", "author": {"login": "rdapp1", "id": 22046046, "node_id": "MDQ6VXNlcjIyMDQ2MDQ2", "avatar_url": "https://avatars.githubusercontent.com/u/22046046?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdapp1", "html_url": "https://github.com/rdapp1", "followers_url": "https://api.github.com/users/rdapp1/followers", "following_url": "https://api.github.com/users/rdapp1/following{/other_user}", "gists_url": "https://api.github.com/users/rdapp1/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdapp1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdapp1/subscriptions", "organizations_url": "https://api.github.com/users/rdapp1/orgs", "repos_url": "https://api.github.com/users/rdapp1/repos", "events_url": "https://api.github.com/users/rdapp1/events{/privacy}", "received_events_url": "https://api.github.com/users/rdapp1/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c03049b614676692ccd99a99c0b39a69f61bebec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c03049b614676692ccd99a99c0b39a69f61bebec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c03049b614676692ccd99a99c0b39a69f61bebec"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "479364658a6254b4d61c5b1c240111306e46922e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f5638916419d13d302d37c5fe4210d34417cc19/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f5638916419d13d302d37c5fe4210d34417cc19/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f5638916419d13d302d37c5fe4210d34417cc19", "patch": "@@ -1,3 +1,9 @@\n+2016-09-27  Robin Dapp  <rdapp@linux.vnet.ibm.com>\n+\n+\tPR tree-optimization/77724\n+\t* tree-vect-loop-manip.c (create_intersect_range_checks_index):\n+\tAdd tree_fits_shwi_p check.\n+\n 2016-09-27  Jakub Jelinek  <jakub@redhat.com>\n \n \t* auto-inc-dec.c (try_merge): Remove break after return."}, {"sha": "b3411d681176d2697e3dba3c072dc6d3abf6568e", "filename": "gcc/testsuite/gcc.dg/vect/pr77724.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f5638916419d13d302d37c5fe4210d34417cc19/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr77724.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f5638916419d13d302d37c5fe4210d34417cc19/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr77724.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr77724.c?ref=1f5638916419d13d302d37c5fe4210d34417cc19", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+\n+int a[81];\n+int b, c;\n+\n+void\n+fn1()\n+{\n+  int d = b;\n+  for (; c; --c)\n+    a[c + d] = a[c];\n+}"}, {"sha": "a715fd931ce3d4ff747fabf2be423024791d1de5", "filename": "gcc/tree-vect-loop-manip.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f5638916419d13d302d37c5fe4210d34417cc19/gcc%2Ftree-vect-loop-manip.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f5638916419d13d302d37c5fe4210d34417cc19/gcc%2Ftree-vect-loop-manip.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop-manip.c?ref=1f5638916419d13d302d37c5fe4210d34417cc19", "patch": "@@ -2301,6 +2301,9 @@ create_intersect_range_checks_index (loop_vec_info loop_vinfo, tree *cond_expr,\n   if (!tree_fits_uhwi_p (dr_a.seg_len) || !tree_fits_uhwi_p (dr_b.seg_len))\n     return false;\n \n+  if (!tree_fits_shwi_p (DR_STEP (dr_a.dr)))\n+    return false;\n+\n   if (!operand_equal_p (DR_BASE_OBJECT (dr_a.dr), DR_BASE_OBJECT (dr_b.dr), 0))\n     return false;\n \n@@ -2310,9 +2313,8 @@ create_intersect_range_checks_index (loop_vec_info loop_vinfo, tree *cond_expr,\n   gcc_assert (TREE_CODE (DR_STEP (dr_a.dr)) == INTEGER_CST);\n \n   bool neg_step = tree_int_cst_compare (DR_STEP (dr_a.dr), size_zero_node) < 0;\n-  unsigned HOST_WIDE_INT abs_step = tree_to_uhwi (DR_STEP (dr_a.dr));\n-  if (neg_step)\n-    abs_step = -abs_step;\n+  unsigned HOST_WIDE_INT abs_step\n+    = absu_hwi (tree_to_shwi (DR_STEP (dr_a.dr)));\n \n   unsigned HOST_WIDE_INT seg_len1 = tree_to_uhwi (dr_a.seg_len);\n   unsigned HOST_WIDE_INT seg_len2 = tree_to_uhwi (dr_b.seg_len);\n@@ -2331,7 +2333,7 @@ create_intersect_range_checks_index (loop_vec_info loop_vinfo, tree *cond_expr,\n     {\n       tree access1 = DR_ACCESS_FN (dr_a.dr, i);\n       tree access2 = DR_ACCESS_FN (dr_b.dr, i);\n-      /* Two index must be the same if they are not scev, or not scev wrto\n+      /* Two indices must be the same if they are not scev, or not scev wrto\n \t current loop being vecorized.  */\n       if (TREE_CODE (access1) != POLYNOMIAL_CHREC\n \t  || TREE_CODE (access2) != POLYNOMIAL_CHREC\n@@ -2343,7 +2345,7 @@ create_intersect_range_checks_index (loop_vec_info loop_vinfo, tree *cond_expr,\n \n \t  return false;\n \t}\n-      /* Two index must have the same step.  */\n+      /* The two indices must have the same step.  */\n       if (!operand_equal_p (CHREC_RIGHT (access1), CHREC_RIGHT (access2), 0))\n \treturn false;\n "}]}