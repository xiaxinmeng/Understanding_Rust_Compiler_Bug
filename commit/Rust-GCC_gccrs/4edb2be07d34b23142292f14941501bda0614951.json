{"sha": "4edb2be07d34b23142292f14941501bda0614951", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVkYjJiZTA3ZDM0YjIzMTQyMjkyZjE0OTQxNTAxYmRhMDYxNDk1MQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-07-04T13:31:43Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-07-04T13:31:43Z"}, "message": "[multiple changes]\n\n2005-07-04  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n\t    Thomas Quinot  <quinot@adacore.com>\n\n\t* Make-lang.in: (ada/targtyps.o): Add missing TREE_H dependency.\n\tnew target gen-soccon.\n\n2005-07-04  Robert Dewar  <dewar@adacore.com>\n\n\t* s-mastop-irix.adb, s-mastop-vms.adb: Minor reformatting\n\n2005-07-04  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-socket.ads (Check_Selector): Minor rewording of comment.\n\n2005-07-04  Vincent Celier  <celier@adacore.com>\n\n\t* vms_data.ads: Add VMS qualifiers for new gnatpp switch --eol=\n\n2005-07-04  Thomas Quinot  <quinot@adacore.com>\n\n\t* gen-soccon.c: Add constants SO_SNDTIMEO and SO_RCVTIMEO.\n\n2005-07-04  Sergey Rybin  <rybin@adacore.com>\n\n        * gnat_ugn.texi: Add description of --eol gnatpp option\n\n2005-07-04  Eric Botcazou  <ebotcazou@adacore.com>\n\t    Thomas Quinot  <quinot@adacore.com>\n\n        * gnat_rm.texi: Add a note that pragma Unreferenced is not appropriate\n\tif the user wants all calls of a subprogram to be flagged,\n\tindependently of whether they are made from within the same unit or\n\tanother unit.\n        Mention restriction for pragma Linker_Alias on some platforms.\n        Document pragma Linker_Constructor and Linker_Destructor.\n        Rewrite documentation of Weak_External, Linker_Section and\n        Linker_Alias pragmas.\n\nFrom-SVN: r101598", "tree": {"sha": "57a0c3fc2827757acf848fd1a747b9168b6a77fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57a0c3fc2827757acf848fd1a747b9168b6a77fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4edb2be07d34b23142292f14941501bda0614951", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4edb2be07d34b23142292f14941501bda0614951", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4edb2be07d34b23142292f14941501bda0614951", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4edb2be07d34b23142292f14941501bda0614951/comments", "author": null, "committer": null, "parents": [{"sha": "d43d5ef7b552483264f6af5a831bdef1d1cd55cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d43d5ef7b552483264f6af5a831bdef1d1cd55cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d43d5ef7b552483264f6af5a831bdef1d1cd55cb"}], "stats": {"total": 330, "additions": 271, "deletions": 59}, "files": [{"sha": "c9d1c262b529b6e024c93eed5c6bfc9ffcce5002", "filename": "gcc/ada/Make-lang.in", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4edb2be07d34b23142292f14941501bda0614951/gcc%2Fada%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4edb2be07d34b23142292f14941501bda0614951/gcc%2Fada%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-lang.in?ref=4edb2be07d34b23142292f14941501bda0614951", "patch": "@@ -289,6 +289,16 @@ gnat-cross: force\n \tmake $(GNAT1_ADA_OBJS) CC=\"gcc -B../stage1/\" CFLAGS=\"-S -gnatp\" \\\n \t\t$(FLAGS_TO_PASS) $(ADA_FLAGS_TO_PASS) HOST_CFLAGS= HOST_CC=cc\n \n+gen-soccon: force\n+\t$(MAKE) -C ada $(FLAGS_TO_PASS)  \\\n+\t   GNATLIBFLAGS=\"$(GNATLIBFLAGS)\" \\\n+\t   GNATLIBCFLAGS=\"$(GNATLIBCFLAGS)\" \\\n+\t   TARGET_LIBGCC2_CFLAGS=\"$(TARGET_LIBGCC2_CFLAGS)\" \\\n+\t   THREAD_KIND=\"$(THREAD_KIND)\" \\\n+\t   TRACE=\"$(TRACE)\" \\\n+\t   LIBGNAT_OBJS=gen-soccon \\\n+\t   gnatlib\n+\n gt-ada-decl.h gt-ada-trans.h gt-ada-utils.h gtype-ada.h : s-gtype ; @true\n \f\n # Build hooks:\n@@ -1051,8 +1061,8 @@ ada/misc.o : ada/misc.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    ada/adadecode.h opts.h options.h target.h real.h\n \n ada/targtyps.o : ada/targtyps.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-   ada/ada.h ada/types.h ada/atree.h ada/nlists.h ada/elists.h ada/uintp.h \\\n-   ada/sinfo.h ada/einfo.h ada/namet.h ada/snames.h ada/stringt.h \\\n+   $(TREE_H) ada/ada.h ada/types.h ada/atree.h ada/nlists.h ada/elists.h \\\n+   ada/uintp.h ada/sinfo.h ada/einfo.h ada/namet.h ada/snames.h ada/stringt.h \\\n    ada/urealp.h ada/fe.h $(ADA_TREE_H) ada/gigi.h\n \n ada/trans.o : ada/trans.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\"}, {"sha": "7529c050892be204164b0857ac1d188f91b2595b", "filename": "gcc/ada/g-socket.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4edb2be07d34b23142292f14941501bda0614951/gcc%2Fada%2Fg-socket.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4edb2be07d34b23142292f14941501bda0614951/gcc%2Fada%2Fg-socket.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socket.ads?ref=4edb2be07d34b23142292f14941501bda0614951", "patch": "@@ -969,7 +969,7 @@ package GNAT.Sockets is\n    --  this procedure process blocking. Note that a Timeout of 0.0 returns\n    --  immediately. Also note that two different Socket_Set_Type objects must\n    --  be passed as R_Socket_Set and W_Socket_Set (even if they denote the\n-   --  same set of Sockets), or some event will be lost.\n+   --  same set of Sockets), or some event may be lost.\n    --  Socket_Error is raised when the select(2) system call returns an\n    --  error condition, or when a read error occurs on the signalling socket\n    --  used for the implementation of Abort_Selector."}, {"sha": "643f63997c5be6c715850afd3d73286caa85e189", "filename": "gcc/ada/gen-soccon.c", "status": "modified", "additions": 48, "deletions": 38, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4edb2be07d34b23142292f14941501bda0614951/gcc%2Fada%2Fgen-soccon.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4edb2be07d34b23142292f14941501bda0614951/gcc%2Fada%2Fgen-soccon.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgen-soccon.c?ref=4edb2be07d34b23142292f14941501bda0614951", "patch": "@@ -1,26 +1,26 @@\n-/*****************************************************************************\n-**                                                                          **\n-**                          GNAT SYSTEM UTILITIES                           **\n-**                                                                          **\n-**                           G E N - S O C C O N                            **\n-**                                                                          **\n-**            Copyright (C) 2004-2005 Free Software Foundation, Inc.        **\n-**                                                                          **\n-** GNAT is free software;  you can  redistribute it  and/or modify it under **\n-** terms of the  GNU General Public License as published  by the Free Soft- **\n-** ware  Foundation;  either version 2,  or (at your option) any later ver- **\n-** sion.  GNAT is distributed in the hope that it will be useful, but WITH- **\n-** OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY **\n-** or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License **\n-** for  more details.  You should have  received  a copy of the GNU General **\n-** Public License  distributed with GNAT;  see file COPYING.  If not, write **\n-** to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, **\n-** Boston, MA 02110-1301, USA.                                              **\n-**                                                                          **\n-** GNAT was originally developed  by the GNAT team at  New York University. **\n-** Extensive contributions were provided by Ada Core Technologies Inc.      **\n-**                                                                          **\n-******************************************************************************/\n+/****************************************************************************\n+ *                                                                          *\n+ *                          GNAT SYSTEM UTILITIES                           *\n+ *                                                                          *\n+ *                           G E N - S O C C O N                            *\n+ *                                                                          *\n+ *            Copyright (C) 2004-2005 Free Software Foundation, Inc.        *\n+ *                                                                          *\n+ * GNAT is free software;  you can  redistribute it  and/or modify it under *\n+ * terms of the  GNU General Public License as published  by the Free Soft- *\n+ * ware  Foundation;  either version 2,  or (at your option) any later ver- *\n+ * sion.  GNAT is distributed in the hope that it will be useful, but WITH- *\n+ * OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY *\n+ * or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License *\n+ * for  more details.  You should have  received  a copy of the GNU General *\n+ * Public License  distributed with GNAT;  see file COPYING.  If not, write *\n+ * to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, *\n+ * Boston, MA 02110-1301, USA.                                              *\n+ *                                                                          *\n+ * GNAT was originally developed  by the GNAT team at  New York University. *\n+ * Extensive contributions were provided by Ada Core Technologies Inc.      *\n+ *                                                                          *\n+ ****************************************************************************/\n \n /* This program generates g-soccon.ads */\n \n@@ -478,16 +478,6 @@ _NL\n #endif\n CND(TCP_NODELAY, \"Do not coalesce packets\")\n \n-#ifndef SO_SNDBUF\n-#define SO_SNDBUF -1\n-#endif\n-CND(SO_SNDBUF, \"Set/get send buffer size\")\n-\n-#ifndef SO_RCVBUF\n-#define SO_RCVBUF -1\n-#endif\n-CND(SO_RCVBUF, \"Set/get recv buffer size\")\n-\n #ifndef SO_REUSEADDR\n #define SO_REUSEADDR -1\n #endif\n@@ -503,16 +493,36 @@ CND(SO_KEEPALIVE, \"Enable keep-alive msgs\")\n #endif\n CND(SO_LINGER, \"Defer close to flush data\")\n \n-#ifndef SO_ERROR\n-#define SO_ERROR -1\n-#endif\n-CND(SO_ERROR, \"Get/clear error status\")\n-\n #ifndef SO_BROADCAST\n #define SO_BROADCAST -1\n #endif\n CND(SO_BROADCAST, \"Can send broadcast msgs\")\n \n+#ifndef SO_SNDBUF\n+#define SO_SNDBUF -1\n+#endif\n+CND(SO_SNDBUF, \"Set/get send buffer size\")\n+\n+#ifndef SO_RCVBUF\n+#define SO_RCVBUF -1\n+#endif\n+CND(SO_RCVBUF, \"Set/get recv buffer size\")\n+\n+#ifndef SO_SNDTIMEO\n+#define SO_SNDTIMEO -1\n+#endif\n+CND(SO_SNDTIMEO, \"Emission timeout\")\n+\n+#ifndef SO_RCVTIMEO\n+#define SO_RCVTIMEO -1\n+#endif\n+CND(SO_RCVTIMEO, \"Reception timeout\")\n+\n+#ifndef SO_ERROR\n+#define SO_ERROR -1\n+#endif\n+CND(SO_ERROR, \"Get/clear error status\")\n+\n #ifndef IP_MULTICAST_IF\n #define IP_MULTICAST_IF -1\n #endif"}, {"sha": "e31c8e821e6cca26e909f2b6a1d0b7a913839999", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 166, "deletions": 9, "changes": 175, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4edb2be07d34b23142292f14941501bda0614951/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4edb2be07d34b23142292f14941501bda0614951/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=4edb2be07d34b23142292f14941501bda0614951", "patch": "@@ -69,7 +69,7 @@ GNAT, The GNU Ada 95 Compiler@*\n GCC version @value{version-GCC}@*\n \n @noindent\n-Ada Core Technologies, Inc.\n+AdaCore\n \n @menu\n * About This Guide::\n@@ -149,6 +149,8 @@ Implementation Defined Pragmas\n * Pragma License::\n * Pragma Link_With::\n * Pragma Linker_Alias::\n+* Pragma Linker_Constructor::\n+* Pragma Linker_Destructor::\n * Pragma Linker_Section::\n * Pragma Long_Float::\n * Pragma Machine_Attribute::\n@@ -678,6 +680,8 @@ consideration, the use of these pragmas should be minimized.\n * Pragma License::\n * Pragma Link_With::\n * Pragma Linker_Alias::\n+* Pragma Linker_Constructor::\n+* Pragma Linker_Destructor::\n * Pragma Linker_Section::\n * Pragma Long_Float::\n * Pragma Machine_Attribute::\n@@ -2637,12 +2641,90 @@ Syntax:\n @smallexample @c ada\n pragma Linker_Alias (\n   [Entity =>] local_NAME\n-  [Alias  =>] static_string_EXPRESSION);\n+  [Target =>] static_string_EXPRESSION);\n @end smallexample\n \n @noindent\n-This pragma establishes a linker alias for the given named entity.  For\n-further details on the exact effect, consult the GCC manual.\n+@var{local_NAME} must refer to an object that is declared at the library\n+level. This pragma establishes the given entity as a linker alias for the\n+given target. It is equivalent to @code{__attribute__((alias))} in GNU C\n+and causes @var{local_NAME} to be emitted as an alias for the symbol\n+@var{static_string_EXPRESSION} in the object file, that is to say no space\n+is reserved for @var{local_NAME} by the assembler and it will be resolved\n+to the same address as @var{static_string_EXPRESSION} by the linker.\n+\n+The actual linker name for the target must be used (e.g. the fully\n+encoded name with qualification in Ada, or the mangled name in C++),\n+or it must be declared using the C convention with @code{pragma Import}\n+or @code{pragma Export}.\n+\n+Not all target machines support this pragma. On some of them it is accepted\n+only if @code{pragma Weak_External} has been applied to @var{local_NAME}.\n+\n+@smallexample @c ada\n+--  Example of the use of pragma Linker_Alias\n+\n+package p is\n+  i : Integer := 1;\n+  pragma Export (C, i);\n+\n+  new_name_for_i : Integer;\n+  pragma Linker_Alias (new_name_for_i, \"i\");\n+end p; \n+@end smallexample\n+\n+@node Pragma Linker_Constructor\n+@unnumberedsec Pragma Linker_Constructor\n+@findex Linker_Constructor\n+@noindent\n+Syntax:\n+\n+@smallexample @c ada\n+pragma Linker_Constructor (procedure_LOCAL_NAME);\n+@end smallexample\n+\n+@noindent\n+@var{procedure_local_NAME} must refer to a parameterless procedure that\n+is declared at the library level. A procedure to which this pragma is\n+applied will be treated as an initialization routine by the linker.\n+It is equivalent to @code{__attribute__((constructor))} in GNU C and\n+causes @var{procedure_LOCAL_NAME} to be invoked before the entry point\n+of the executable is called (or immediately after the shared library is\n+loaded if the procedure is linked in a shared library), in particular\n+before the Ada run-time environment is set up.\n+\n+Because of these specific contexts, the set of operations such a procedure\n+can perform is very limited and the type of objects it can manipulate is\n+essentially restricted to the elementary types. In particular, it must only\n+contain code to which pragma Restrictions (No_Elaboration_Code) applies.\n+\n+This pragma is used by GNAT to implement auto-initialization of shared Stand\n+Alone Libraries, which provides a related capability without the restrictions\n+listed above. Where possible, the use of Stand Alone Libraries is preferable\n+to the use of this pragma.\n+\n+@node Pragma Linker_Destructor\n+@unnumberedsec Pragma Linker_Destructor\n+@findex Linker_Destructor\n+@noindent\n+Syntax:\n+\n+@smallexample @c ada\n+pragma Linker_Destructor (procedure_LOCAL_NAME);\n+@end smallexample\n+\n+@noindent\n+@var{procedure_local_NAME} must refer to a parameterless procedure that\n+is declared at the library level. A procedure to which this pragma is\n+applied will be treated as a finalization routine by the linker.\n+It is equivalent to @code{__attribute__((destructor))} in GNU C and\n+causes @var{procedure_LOCAL_NAME} to be invoked after the entry point\n+of the executable has exited (or immediately before the shared library\n+is unloaded if the procedure is linked in a shared library), in particular\n+after the Ada run-time environment is shut down.\n+\n+See @code{pragma Linker_Constructor} for the set of restrictions that apply\n+because of these specific contexts.\n \n @node Pragma Linker_Section\n @unnumberedsec Pragma Linker_Section\n@@ -2657,8 +2739,41 @@ pragma Linker_Section (\n @end smallexample\n \n @noindent\n-This pragma specifies the name of the linker section for the given entity.\n-For further details on the exact effect, consult the GCC manual.\n+@var{local_NAME} must refer to an object that is declared at the library\n+level. This pragma specifies the name of the linker section for the given\n+entity. It is equivalent to @code{__attribute__((section))} in GNU C and\n+causes @var{local_NAME} to be placed in the @var{static_string_EXPRESSION}\n+section of the executable (assuming the linker doesn't rename the section).\n+\n+The compiler normally places library-level objects in standard sections\n+depending on their type: procedures and functions generally go in the\n+@code{.text} section, initialized variables in the @code{.data} section\n+and uninitialized variables in the @code{.bss} section.\n+\n+Other, special sections may exist on given target machines to map special\n+hardware, for example I/O ports or flash memory. This pragma is a means to\n+defer the final layout of the executable to the linker, thus fully working\n+at the symbolic level with the compiler.\n+\n+Some file formats do not support arbitrary sections so not all target\n+machines support this pragma. The use of this pragma may cause a program\n+execution to be erroneous if it is used to place an entity into an\n+inappropriate section (e.g. a modified variable into the @code{.text}\n+section). See also @code{pragma Persistent_BSS}.\n+\n+@smallexample @c ada\n+--  Example of the use of pragma Linker_Section\n+\n+package IO_Card is\n+  Port_A : Integer;\n+  pragma Volatile (Port_A);\n+  pragma Linker_Section (Port_A, \".bss.port_a\");\n+\n+  Port_B : Integer;\n+  pragma Volatile (Port_B);\n+  pragma Linker_Section (Port_B, \".bss.port_b\");\n+end IO_Card;\n+@end smallexample\n \n @node Pragma Long_Float\n @unnumberedsec Pragma Long_Float\n@@ -3914,6 +4029,12 @@ The left hand side of an assignment does not count as a reference for the\n purpose of this pragma. Thus it is fine to assign to an entity for which\n pragma Unreferenced is given.\n \n+Note that if a warning is desired for all calls to a given subprogram,\n+regardless of whether they occur in the same unit as the subprogram\n+declaration, then this pragma should not be used (calls from another\n+unit would not be flagged); pragma Obsolescent can be used instead\n+for this purpose (@xref{Pragma Obsolescent}).\n+\n @node Pragma Unreserve_All_Interrupts\n @unnumberedsec Pragma Unreserve_All_Interrupts\n @findex Unreserve_All_Interrupts\n@@ -4105,9 +4226,45 @@ pragma Weak_External ([Entity =>] local_NAME);\n @end smallexample\n \n @noindent\n-This pragma specifies that the given entity should be marked as a weak\n-external (one that does not have to be resolved) for the linker.  For\n-further details, consult the GCC manual.\n+@var{local_NAME} must refer to an object that is declared at the library\n+level. This pragma specifies that the given entity should be marked as a\n+weak symbol for the linker. It is equivalent to @code{__attribute__((weak))}\n+in GNU C and causes @var{local_NAME} to be emitted as a weak symbol instead\n+of a regular symbol, that is to say a symbol that does not have to be\n+resolved by the linker if used in conjunction with a pragma Import.\n+\n+When a weak symbol is not resolved by the linker, its address is set to\n+zero. This is useful in writing interfaces to external modules that may\n+or may not be linked in the final executable, for example depending on\n+configuration settings.\n+\n+If a program references at run time an entity to which this pragma has been\n+applied, and the corresponding symbol was not resolved at link time, then\n+the execution of the program is erroneous. It is not erroneous to take the\n+Address of such an entity, for example to guard potential references,\n+as shown in the example below.\n+\n+Some file formats do not support weak symbols so not all target machines\n+support this pragma. \n+\n+@smallexample @c ada\n+--  Example of the use of pragma Weak_External\n+\n+package External_Module is\n+  key : Integer;\n+  pragma Import (C, key);\n+  pragma Weak_External (key);\n+  function Present return boolean;\n+end External_Module;\n+\n+with System; use System;\n+package body External_Module is\n+  function Present return boolean is\n+  begin\n+    return key'Address /= System.Null_Address;\n+  end Present;\n+end External_Module;\n+@end smallexample\n \n @node Implementation Defined Attributes\n @chapter Implementation Defined Attributes"}, {"sha": "74b2c40fce39f94670593cbfd00b945ad660938b", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4edb2be07d34b23142292f14941501bda0614951/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4edb2be07d34b23142292f14941501bda0614951/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=4edb2be07d34b23142292f14941501bda0614951", "patch": "@@ -2860,7 +2860,7 @@ The build procedure for this application is similar to the last\n example's.  First, compile the foreign language files to generate object\n files:\n @smallexample\n-gcc -c main.c\n+^gcc -c main.c^gcc -c main.c^\n @end smallexample\n \n @item\n@@ -4948,14 +4948,14 @@ may not be properly initialized.\n @cindex Ada 2005 compatibility issues warnings\n For the most part Ada 2005 is upwards compatible with Ada 95,\n but there are some exceptions (for example the fact that\n-@code{interface} is now a reserved word in Ada 2005. This\n+@code{interface} is now a reserved word in Ada 2005). This\n switch activates several warnings to help in identifying\n and correcting such incompatibilities. The default is that\n these warnings are generated. Note that at one point Ada 2005\n was called Ada 0Y, hence the choice of character.\n \n @item -gnatwY\n-@emph{Disab le warnings for Ada 2005 compatibility issues.}\n+@emph{Disable warnings for Ada 2005 compatibility issues.}\n @cindex @option{-gnatwY} (@command{gcc})\n @cindex Ada 2005 compatibility issues warnings\n This switch suppresses several warnings intended to help in identifying\n@@ -15049,13 +15049,31 @@ already exists, it is overwritten.\n @cindex @option{^-rnb^/NO_BACKUP^} (@code{gnatpp})\n Replace the input source file with the reformatted output without\n creating any backup copy of the input source.\n+\n+@item ^--eol=@var{xxx}^/END_OF_LINE=@var{xxx}^\n+@cindex @option{^--eol^/END_OF_LINE^} (@code{gnatpp})\n+Specifies the format of the reformatted output file. The @var{xxx}\n+^string specified with the switch^option^ may be either\n+@itemize @bullet\n+@item ``@option{^dos^DOS^}'' MS DOS style, lines end with CR LF characters\n+@item ``@option{^crlf^CRLF^}''\n+the same as @option{^crlf^CRLF^}\n+@item ``@option{^unix^UNIX^}'' UNIX style, lines end with LF character\n+@item ``@option{^lf^LF^}''\n+the same as @option{^unix^UNIX^}\n+@end itemize\n+\n @end table\n \n @noindent\n Options @option{^-pipe^/STANDARD_OUTPUT^},\n @option{^-o^/OUTPUT^} and\n @option{^-of^/FORCED_OUTPUT^} are allowed only if the call to gnatpp\n-contains only one file to reformat\n+contains only one file to reformat.\n+Option\n+@option{^--eol^/END_OF_LINE^}\n+can not be used together\n+with @option{^-pipe^/STANDARD_OUTPUT^} option.\n \n @node Other gnatpp Switches\n @subsection Other @code{gnatpp} Switches"}, {"sha": "80f0d590a2d700492edf9b1afeb8a211f5da8d65", "filename": "gcc/ada/s-mastop-irix.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4edb2be07d34b23142292f14941501bda0614951/gcc%2Fada%2Fs-mastop-irix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4edb2be07d34b23142292f14941501bda0614951/gcc%2Fada%2Fs-mastop-irix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-mastop-irix.adb?ref=4edb2be07d34b23142292f14941501bda0614951", "patch": "@@ -420,7 +420,6 @@ package body System.Machine_State_Operations is\n    is\n       pragma Warnings (Off, M);\n       pragma Warnings (Off, Context);\n-\n    begin\n       null;\n    end Set_Signal_Machine_State;"}, {"sha": "764fe08753817ed5d5550d3f1a83fa30fae350a8", "filename": "gcc/ada/s-mastop-vms.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4edb2be07d34b23142292f14941501bda0614951/gcc%2Fada%2Fs-mastop-vms.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4edb2be07d34b23142292f14941501bda0614951/gcc%2Fada%2Fs-mastop-vms.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-mastop-vms.adb?ref=4edb2be07d34b23142292f14941501bda0614951", "patch": "@@ -7,7 +7,7 @@\n --                                 B o d y                                  --\n --                         (Version for Alpha/VMS)                          --\n --                                                                          --\n---          Copyright (C) 2001-2002 Ada Core Technologies, Inc.             --\n+--          Copyright (C) 2001-2005 Ada Core Technologies, Inc.             --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -311,7 +311,7 @@ package body System.Machine_State_Operations is\n          (Invo_Handle_Type, Invo_Context_Blk_Type),\n          (Value, Reference));\n \n-      ICB : Invo_Context_Blk_Type;\n+      ICB         : Invo_Context_Blk_Type;\n       Invo_Handle : aliased Invo_Handle_Type;\n \n    begin\n@@ -331,7 +331,6 @@ package body System.Machine_State_Operations is\n    is\n       pragma Warnings (Off, M);\n       pragma Warnings (Off, Context);\n-\n    begin\n       null;\n    end Set_Signal_Machine_State;"}, {"sha": "50ed1ee3ae1689a5ce816de75b236350e2a0505a", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4edb2be07d34b23142292f14941501bda0614951/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4edb2be07d34b23142292f14941501bda0614951/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=4edb2be07d34b23142292f14941501bda0614951", "patch": "@@ -4662,6 +4662,24 @@ package VMS_Data is\n    --   unless the indentation is set to 1: in that case the default value for\n    --   continuation line indentation is also 1.\n \n+   S_Pretty_Eol       : aliased constant S := \"/END_OF_LINE=\"              &\n+                                                \"DOS \"                     &\n+                                                   \"--eol=dos \"            &\n+                                                \"UNIX \"                    &\n+                                                   \"--eol=unix \"           &\n+                                                \"CRLF \"                    &\n+                                                   \"--eol=crlf \"           &\n+                                                \"LF \"                      &\n+                                                   \"--eol=lf\";\n+   --        /END_OF_LINE=[option]\n+   --\n+   --   Specifies the form of the line terminators in the produced source.\n+   --   By default, the form of the line terminator depends on the platforms.\n+   --   On Unix and VMS, it is a Line Feed (LF) chararcter. On Windows (DOS),\n+   --   It is a Carriage Return (CR) followed by a Line Feed.\n+   --   The Options DOS and CRLF are equivalent. The options UNIX and LF are\n+   --   also equivalent.\n+\n    S_Pretty_Ext       : aliased constant S := \"/EXTERNAL_REFERENCE=\" & '\"' &\n                                             \"-X\" & '\"';\n    --        /EXTERNAL_REFERENCE=\"name=val\"\n@@ -4924,9 +4942,10 @@ package VMS_Data is\n       S_Pretty_Config    'Access,\n       S_Pretty_Constr    'Access,\n       S_Pretty_Comind    'Access,\n-      S_Pretty_Ext       'Access,\n       S_Pretty_Current   'Access,\n       S_Pretty_Dico      'Access,\n+      S_Pretty_Eol       'Access,\n+      S_Pretty_Ext       'Access,\n       S_Pretty_Files     'Access,\n       S_Pretty_Forced    'Access,\n       S_Pretty_Formfeed  'Access,"}]}