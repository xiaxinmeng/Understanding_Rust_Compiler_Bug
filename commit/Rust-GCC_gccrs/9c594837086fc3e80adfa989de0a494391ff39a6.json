{"sha": "9c594837086fc3e80adfa989de0a494391ff39a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWM1OTQ4MzcwODZmYzNlODBhZGZhOTg5ZGUwYTQ5NDM5MWZmMzlhNg==", "commit": {"author": {"name": "Loren J. Rittle", "email": "ljrittle@acm.org", "date": "2003-04-18T09:53:58Z"}, "committer": {"name": "Loren J. Rittle", "email": "ljrittle@gcc.gnu.org", "date": "2003-04-18T09:53:58Z"}, "message": "porting.texi (_GLIBCPP_USE_C99_CHECK): New macro.\n\n\t* docs/html/17_intro/porting.texi (_GLIBCPP_USE_C99_CHECK): New macro.\n\t(_GLIBCPP_USE_C99_DYNAMIC): New macro.\n\t(_GLIBCPP_USE_C99_LONG_LONG_CHECK): New macro.\n\t(_GLIBCPP_USE_C99_LONG_LONG_DYNAMIC): New macro.\n\t* config/os/bsd/freebsd/os_defines.h (_GLIBCPP_USE_C99_CHECK):\n\tNew macro.\n\t(_GLIBCPP_USE_C99_DYNAMIC): New macro.\n\t(_GLIBCPP_USE_C99_LONG_LONG_CHECK): New macro.\n\t(_GLIBCPP_USE_C99_LONG_LONG_DYNAMIC): New macro.\n\t* include/c_std/std_cstdlib.h: Use new macros.\n\t* include/c_std/std_cstdio.h: Use new macros.\n\t* include/c_std/std_cwchar.h: Use new macros.\n\nFrom-SVN: r65778", "tree": {"sha": "0c5238f50226beeb4ebca7e5a0120a5db7fac2b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c5238f50226beeb4ebca7e5a0120a5db7fac2b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c594837086fc3e80adfa989de0a494391ff39a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c594837086fc3e80adfa989de0a494391ff39a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c594837086fc3e80adfa989de0a494391ff39a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c594837086fc3e80adfa989de0a494391ff39a6/comments", "author": null, "committer": null, "parents": [{"sha": "c04ec67ecdbf019e1f3bb43846441d4dfa5c3732", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c04ec67ecdbf019e1f3bb43846441d4dfa5c3732", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c04ec67ecdbf019e1f3bb43846441d4dfa5c3732"}], "stats": {"total": 96, "additions": 92, "deletions": 4}, "files": [{"sha": "8cba854cc5e3e6161d6670750ce17b0661fd4650", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c594837086fc3e80adfa989de0a494391ff39a6/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c594837086fc3e80adfa989de0a494391ff39a6/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9c594837086fc3e80adfa989de0a494391ff39a6", "patch": "@@ -3,6 +3,19 @@\n \t* include/c_std/std_cmath.h (C99 FP capture): Only undefine said\n \tC99 FP macros, if actually captured.\n \n+\t* docs/html/17_intro/porting.texi (_GLIBCPP_USE_C99_CHECK): New macro.\n+\t(_GLIBCPP_USE_C99_DYNAMIC): New macro.\n+\t(_GLIBCPP_USE_C99_LONG_LONG_CHECK): New macro.\n+\t(_GLIBCPP_USE_C99_LONG_LONG_DYNAMIC): New macro.\n+\t* config/os/bsd/freebsd/os_defines.h (_GLIBCPP_USE_C99_CHECK):\n+\tNew macro.\n+\t(_GLIBCPP_USE_C99_DYNAMIC): New macro.\n+\t(_GLIBCPP_USE_C99_LONG_LONG_CHECK): New macro.\n+\t(_GLIBCPP_USE_C99_LONG_LONG_DYNAMIC): New macro.\n+\t* include/c_std/std_cstdlib.h: Use new macros.\n+\t* include/c_std/std_cstdio.h: Use new macros.\n+\t* include/c_std/std_cwchar.h: Use new macros.\n+\n 2003-04-17  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/9555"}, {"sha": "55040a7ac4b9c020badebad4517ad050ba5f7020", "filename": "libstdc++-v3/config/os/bsd/freebsd/os_defines.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c594837086fc3e80adfa989de0a494391ff39a6/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fos_defines.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c594837086fc3e80adfa989de0a494391ff39a6/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fos_defines.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fos%2Fbsd%2Ffreebsd%2Fos_defines.h?ref=9c594837086fc3e80adfa989de0a494391ff39a6", "patch": "@@ -34,6 +34,10 @@\n // System-specific #define, typedefs, corrections, etc, go here.  This\n // file will come before all others.\n \n+#define _GLIBCPP_USE_C99_CHECK 1\n+#define _GLIBCPP_USE_C99_DYNAMIC (!(__ISO_C_VISIBLE >= 1999))\n+#define _GLIBCPP_USE_C99_LONG_LONG_CHECK 1\n+#define _GLIBCPP_USE_C99_LONG_LONG_DYNAMIC (_GLIBCPP_USE_C99_DYNAMIC || !defined __LONG_LONG_SUPPORTED)\n #define _GLIBCPP_USE_C99_FLOAT_TRANSCENDENTALS_CHECK 1\n #define _GLIBCPP_USE_C99_FLOAT_TRANSCENDENTALS_DYNAMIC defined _XOPEN_SOURCE\n "}, {"sha": "6f3618c637d57ec872ec55bdc397a2335f9f2b88", "filename": "libstdc++-v3/docs/html/17_intro/porting.texi", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c594837086fc3e80adfa989de0a494391ff39a6/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c594837086fc3e80adfa989de0a494391ff39a6/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Fporting.texi?ref=9c594837086fc3e80adfa989de0a494391ff39a6", "patch": "@@ -156,6 +156,28 @@ port doesn't use thunks (although it is unclear that this is still\n useful since libio support isn't currently working and the g++ v3 ABI\n invalidates the assumption that some ports don't use thunks).\n \n+@code{_GLIBCPP_USE_C99_CHECK} may be defined to 1 to check C99\n+function declarations (which are not covered by specialization below)\n+found in system headers against versions found in the library headers\n+derived from the standard.\n+\n+@code{_GLIBCPP_USE_C99_DYNAMIC} may be defined to an expression that\n+yields 0 if and only if the system headers are exposing proper support\n+for C99 functions (which are not covered by specialization below).  If\n+defined, it must be 0 while bootstrapping the compiler/rebuilding the\n+library.\n+\n+@code{_GLIBCPP_USE_C99_LONG_LONG_CHECK} may be defined to 1 to check\n+the set of C99 long long function declarations found in system headers\n+against versions found in the library headers derived from the\n+standard.\n+\n+@code{_GLIBCPP_USE_C99_LONG_LONG_DYNAMIC} may be defined to an\n+expression that yields 0 if and only if the system headers are\n+exposing proper support for the set of C99 long long functions.  If\n+defined, it must be 0 while bootstrapping the compiler/rebuilding the\n+library.\n+\n @code{_GLIBCPP_USE_C99_FP_MACROS_DYNAMIC} may be defined to an\n expression that yields 0 if and only if the system headers\n are exposing proper support for the related set of macros.  If defined,"}, {"sha": "3b4a6856739690f5286a31b1828731dca07ad0be", "filename": "libstdc++-v3/include/c_std/std_cstdio.h", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c594837086fc3e80adfa989de0a494391ff39a6/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cstdio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c594837086fc3e80adfa989de0a494391ff39a6/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cstdio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cstdio.h?ref=9c594837086fc3e80adfa989de0a494391ff39a6", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*- forwarding header.\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -152,11 +152,24 @@ namespace std\n \n namespace __gnu_cxx\n {\n+#if _GLIBCPP_USE_C99_CHECK || _GLIBCPP_USE_C99_DYNAMIC\n+  extern \"C\" int\n+    (snprintf)(char * restrict, size_t, const char * restrict, ...);\n+  extern \"C\" int\n+    (vfscanf)(FILE * restrict, const char * restrict, __gnuc_va_list);\n+  extern \"C\" int (vscanf)(const char * restrict, __gnuc_va_list);\n+  extern \"C\" int\n+    (vsnprintf)(char * restrict, size_t, const char * restrict, __gnuc_va_list);\n+  extern \"C\" int\n+    (vsscanf)(const char * restrict, const char * restrict, __gnuc_va_list);\n+#endif\n+#if !_GLIBCPP_USE_C99_DYNAMIC\n   using ::snprintf;\n   using ::vfscanf;\n   using ::vscanf;\n   using ::vsnprintf;\n   using ::vsscanf;\n+#endif\n }\n \n namespace std"}, {"sha": "e1436be1d7a17ef97d9636372c43910d25404049", "filename": "libstdc++-v3/include/c_std/std_cstdlib.h", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c594837086fc3e80adfa989de0a494391ff39a6/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cstdlib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c594837086fc3e80adfa989de0a494391ff39a6/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cstdlib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cstdlib.h?ref=9c594837086fc3e80adfa989de0a494391ff39a6", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*- forwarding header.\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -135,38 +135,60 @@ namespace std\n \n namespace __gnu_cxx\n {\n+#if !_GLIBCPP_USE_C99_LONG_LONG_DYNAMIC\n   using ::lldiv_t;\n+#endif\n+#if _GLIBCPP_USE_C99_CHECK || _GLIBCPP_USE_C99_DYNAMIC\n+  extern \"C\" void (_Exit)(int);\n+#endif\n+#if !_GLIBCPP_USE_C99_DYNAMIC\n   using ::_Exit;\n+#endif\n \n   inline long long \n   abs(long long __x) { return __x >= 0 ? __x : -__x; }\n \n   inline long long \n   llabs(long long __x) { return __x >= 0 ? __x : -__x; }\n \n+#if !_GLIBCPP_USE_C99_LONG_LONG_DYNAMIC\n   inline lldiv_t \n   div(long long __n, long long __d)\n   { lldiv_t __q; __q.quot = __n / __d; __q.rem = __n % __d; return __q; }\n \n   inline lldiv_t \n   lldiv(long long __n, long long __d)\n   { lldiv_t __q; __q.quot = __n / __d; __q.rem = __n % __d; return __q; }\n+#endif\n \n+#if _GLIBCPP_USE_C99_LONG_LONG_CHECK || _GLIBCPP_USE_C99_LONG_LONG_DYNAMIC\n+  extern \"C\" long long int (atoll)(const char *);\n+  extern \"C\" long long int\n+    (strtoll)(const char * restrict, char ** restrict, int);\n+  extern \"C\" unsigned long long int\n+    (strtoull)(const char * restrict, char ** restrict, int);\n+#endif\n+#if !_GLIBCPP_USE_C99_LONG_LONG_DYNAMIC\n   using ::atoll;\n-  using ::strtof;\n   using ::strtoll;\n   using ::strtoull;\n+#endif\n+  using ::strtof;\n   using ::strtold; \n } \n \n namespace std\n {\n+#if !_GLIBCPP_USE_C99_LONG_LONG_DYNAMIC \n   using __gnu_cxx::lldiv_t;\n+#endif\n   using __gnu_cxx::_Exit;\n   using __gnu_cxx::abs;\n   using __gnu_cxx::llabs; \n+#if !_GLIBCPP_USE_C99_LONG_LONG_DYNAMIC \n   using __gnu_cxx::div;\n   using __gnu_cxx::lldiv;\n+#endif\n   using __gnu_cxx::atoll;\n   using __gnu_cxx::strtof;\n   using __gnu_cxx::strtoll;"}, {"sha": "8b33c52282f1476131f8f637ea71248f10673cf5", "filename": "libstdc++-v3/include/c_std/std_cwchar.h", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c594837086fc3e80adfa989de0a494391ff39a6/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cwchar.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c594837086fc3e80adfa989de0a494391ff39a6/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cwchar.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstd_cwchar.h?ref=9c594837086fc3e80adfa989de0a494391ff39a6", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*- forwarding header.\n \n-// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002\n+// Copyright (C) 1997, 1998, 1999, 2000, 2001, 2002, 2003\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -225,9 +225,23 @@ namespace std\n \n namespace __gnu_cxx\n {\n+#if _GLIBCPP_USE_C99_CHECK || _GLIBCPP_USE_C99_DYNAMIC\n+  extern \"C\" long double\n+    (wcstold)(const wchar_t * restrict, wchar_t ** restrict);\n+#endif\n+#if !_GLIBCPP_USE_C99_DYNAMIC\n   using ::wcstold;\n+#endif\n+#if _GLIBCPP_USE_C99_LONG_LONG_CHECK || _GLIBCPP_USE_C99_LONG_LONG_DYNAMIC\n+  extern \"C\" long long int\n+    (wcstoll)(const wchar_t * restrict, wchar_t ** restrict, int);\n+  extern \"C\" unsigned long long int\n+    (wcstoull)(const wchar_t * restrict, wchar_t ** restrict, int);\n+#endif\n+#if !_GLIBCPP_USE_C99_LONG_LONG_DYNAMIC\n   using ::wcstoll;\n   using ::wcstoull;\n+#endif\n }\n \n namespace std"}]}