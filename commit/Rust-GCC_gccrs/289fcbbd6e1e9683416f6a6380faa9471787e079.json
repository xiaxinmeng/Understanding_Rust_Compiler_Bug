{"sha": "289fcbbd6e1e9683416f6a6380faa9471787e079", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg5ZmNiYmQ2ZTFlOTY4MzQxNmY2YTYzODBmYWE5NDcxNzg3ZTA3OQ==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2010-04-14T16:08:23Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2010-04-14T16:08:23Z"}, "message": "re PR other/42966 (add some indication that a warning has been converted to an error)\n\n2010-04-14  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\tPR 42966\n\t* diagnostics.c (diagnostic_report_diagnostic): Mark specially\n\twarnings converted to errors.\n\t\ntestsuite/\t\n\t* gcc.dg/cpp/warn-undef-2.c: Update.\n\t* gcc.dg/cpp/warn-traditional-2.c: Update.\n\t* gcc.dg/cpp/warn-comments-2.c: Update.\n\t* gcc.dg/cpp/warn-variadic-2.c: Update.\n\t* gcc.dg/cpp/warn-long-long-2.c: Update.\n\t* gcc.dg/cpp/warn-deprecated-2.c: Update.\n\t* gcc.dg/cpp/warn-multichar-2.c: Update.\n\t* gcc.dg/cpp/warn-normalized-3.c: Update.\n\t* gcc.dg/cpp/warn-cxx-compat-2.c: Update.\n\t* gcc.dg/cpp/warn-trigraphs-3.c: Update.\n\t* gcc.dg/cpp/warn-unused-macros-2.c: Update.\n\t* gcc.dg/cpp/warn-trigraphs-4.c: Update.\n\t* gcc.dg/cpp/warn-redefined-2.c: Update.\n\t* gfortran.dg/warning-directive-2.F90: Update.\n\t* c-c++-common/cpp/warning-directive-2.c: Update.\n\nFrom-SVN: r158349", "tree": {"sha": "c0e6c2e2517c577f772c0ff6ae13b4cceb5ccea8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0e6c2e2517c577f772c0ff6ae13b4cceb5ccea8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/289fcbbd6e1e9683416f6a6380faa9471787e079", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/289fcbbd6e1e9683416f6a6380faa9471787e079", "html_url": "https://github.com/Rust-GCC/gccrs/commit/289fcbbd6e1e9683416f6a6380faa9471787e079", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/289fcbbd6e1e9683416f6a6380faa9471787e079/comments", "author": null, "committer": null, "parents": [{"sha": "d58770e719cdc3c49707db835c5deeb7b35d1fb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d58770e719cdc3c49707db835c5deeb7b35d1fb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d58770e719cdc3c49707db835c5deeb7b35d1fb6"}], "stats": {"total": 117, "additions": 86, "deletions": 31}, "files": [{"sha": "98193265a610672f4a986e10d748b94db6d6e820", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=289fcbbd6e1e9683416f6a6380faa9471787e079", "patch": "@@ -1,3 +1,9 @@\n+2010-04-14  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR 42966\n+\t* diagnostics.c (diagnostic_report_diagnostic): Mark specially\n+\twarnings converted to errors.\n+\n 2010-04-14  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/alpha/alpha.c (alpha_adjust_cost): Remove set but not"}, {"sha": "ed14a2139334b99f5fc490f625565e376c5553e5", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 34, "deletions": 4, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=289fcbbd6e1e9683416f6a6380faa9471787e079", "patch": "@@ -426,11 +426,41 @@ diagnostic_report_diagnostic (diagnostic_context *context,\n   ++diagnostic_kind_count (context, diagnostic->kind);\n \n   saved_format_spec = diagnostic->message.format_spec;\n-  if (context->show_option_requested && diagnostic->option_index)\n-    diagnostic->message.format_spec\n-      = ACONCAT ((diagnostic->message.format_spec,\n-                  \" [\", cl_options[diagnostic->option_index].opt_text, \"]\", NULL));\n+  if (context->show_option_requested)\n+    {\n+      const char * option_text = NULL;\n \n+      if (diagnostic->option_index)\n+\t{\n+\t  /* A warning classified as an error.  */\n+\t  if ((orig_diag_kind == DK_WARNING || orig_diag_kind == DK_PEDWARN)\n+\t      && diagnostic->kind == DK_ERROR)\n+\t    option_text \n+\t      = ACONCAT ((cl_options[OPT_Werror_].opt_text,\n+\t\t\t  /* Skip over \"-W\".  */\n+\t\t\t  cl_options[diagnostic->option_index].opt_text + 2,\n+\t\t\t  NULL));\n+\t  /* A warning with option.  */\n+\t  else\n+\t    option_text = cl_options[diagnostic->option_index].opt_text;\n+\t}\n+      /* A warning without option classified as an error.  */\n+      else if (orig_diag_kind == DK_WARNING || orig_diag_kind == DK_PEDWARN\n+\t       || diagnostic->kind == DK_WARNING)\n+\t{\n+\t  if (context->warning_as_error_requested)\n+\t    option_text = cl_options[OPT_Werror].opt_text;\n+\t  else\n+\t    option_text = _(\"enabled by default\");\n+\t}\n+\n+      if (option_text)\n+\tdiagnostic->message.format_spec\n+\t  = ACONCAT ((diagnostic->message.format_spec,\n+\t\t      \" \", \n+\t\t      \"[\", option_text, \"]\",\n+\t\t      NULL));\n+    }\n   diagnostic->message.locus = &diagnostic->location;\n   diagnostic->message.abstract_origin = &diagnostic->abstract_origin;\n   diagnostic->abstract_origin = NULL;"}, {"sha": "5f46fd56ac5606d71d19cba1c8afba5ed24590d7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=289fcbbd6e1e9683416f6a6380faa9471787e079", "patch": "@@ -1,3 +1,22 @@\n+2010-04-14  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR 42966\n+\t* gcc.dg/cpp/warn-undef-2.c: Update.\n+\t* gcc.dg/cpp/warn-traditional-2.c: Update.\n+\t* gcc.dg/cpp/warn-comments-2.c: Update.\n+\t* gcc.dg/cpp/warn-variadic-2.c: Update.\n+\t* gcc.dg/cpp/warn-long-long-2.c: Update.\n+\t* gcc.dg/cpp/warn-deprecated-2.c: Update.\n+\t* gcc.dg/cpp/warn-multichar-2.c: Update.\n+\t* gcc.dg/cpp/warn-normalized-3.c: Update.\n+\t* gcc.dg/cpp/warn-cxx-compat-2.c: Update.\n+\t* gcc.dg/cpp/warn-trigraphs-3.c: Update.\n+\t* gcc.dg/cpp/warn-unused-macros-2.c: Update.\n+\t* gcc.dg/cpp/warn-trigraphs-4.c: Update.\n+\t* gcc.dg/cpp/warn-redefined-2.c: Update.\n+\t* gfortran.dg/warning-directive-2.F90: Update.\n+\t* c-c++-common/cpp/warning-directive-2.c: Update.\n+\n 2010-04-14  Michael Matz  <matz@suse.de>\n \n \tPR tree-optimization/42963"}, {"sha": "65edd7bb9fedfacf7db3ba8945e6f065ad85f14a", "filename": "gcc/testsuite/c-c++-common/cpp/warning-directive-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fwarning-directive-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fwarning-directive-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fwarning-directive-2.c?ref=289fcbbd6e1e9683416f6a6380faa9471787e079", "patch": "@@ -2,4 +2,4 @@\n // { dg-options \"-std=gnu99 -fdiagnostics-show-option -Werror=cpp\" { target c } }\n // { dg-options \"-fdiagnostics-show-option -Werror=cpp\" { target c++ } }\n /* { dg-message \"some warnings being treated as errors\" \"\" {target \"*-*-*\"} 0 } */\n-#warning \"Printed\"  // { dg-error \"\\\"Printed\\\" .-Wcpp.\" }\n+#warning \"Printed\"  // { dg-error \"\\\"Printed\\\" .-Werror=cpp.\" }"}, {"sha": "17cc9f1ce15b96e502d676f285a52e2a7986fab1", "filename": "gcc/testsuite/gcc.dg/cpp/warn-comments-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-comments-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-comments-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-comments-2.c?ref=289fcbbd6e1e9683416f6a6380faa9471787e079", "patch": "@@ -1,7 +1,7 @@\n // { dg-do preprocess }\n // { dg-options \"-std=gnu99 -fdiagnostics-show-option -Werror=comments\" }\n /* { dg-message \"some warnings being treated as errors\" \"\" {target \"*-*-*\"} 0 } */\n-/* /* */  // { dg-error \"\\\"\\.\\*\\\" within comment .-Wcomments.\" }\n+/* /* */  // { dg-error \"\\\"\\.\\*\\\" within comment .-Werror=comments.\" }\n \n // \\\n-          // { dg-error \"multi-line comment .-Wcomments.\" \"multi-line\" { target *-*-* } 6 }\n+          // { dg-error \"multi-line comment .-Werror=comments.\" \"multi-line\" { target *-*-* } 6 }"}, {"sha": "69c4cfa0c3e7d41a7ce83feaa141f96d05357cb4", "filename": "gcc/testsuite/gcc.dg/cpp/warn-cxx-compat-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-cxx-compat-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-cxx-compat-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-cxx-compat-2.c?ref=289fcbbd6e1e9683416f6a6380faa9471787e079", "patch": "@@ -1,4 +1,4 @@\n // { dg-do preprocess }\n // { dg-options \"-std=gnu99 -fdiagnostics-show-option -Werror=c++-compat\" }\n /* { dg-message \"some warnings being treated as errors\" \"\" {target \"*-*-*\"} 0 } */\n-#define not !  // { dg-error \"identifier \\\"not\\\" is a special operator name in C\\\\+\\\\+ .-Wc\\\\+\\\\+-compat.\" }\n+#define not !  // { dg-error \"identifier \\\"not\\\" is a special operator name in C\\\\+\\\\+ .-Werror=c\\\\+\\\\+-compat.\" }"}, {"sha": "8bd608ab7945a7faf82f24a62adf56eb297b6787", "filename": "gcc/testsuite/gcc.dg/cpp/warn-deprecated-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-deprecated-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-deprecated-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-deprecated-2.c?ref=289fcbbd6e1e9683416f6a6380faa9471787e079", "patch": "@@ -1,7 +1,7 @@\n // { dg-do preprocess }\n // { dg-options \"-std=gnu99 -fdiagnostics-show-option -Werror=deprecated\" }\n /* { dg-message \"some warnings being treated as errors\" \"\" {target \"*-*-*\"} 0 } */\n-#assert x(x)  // { dg-error \"#assert is a deprecated GCC extension .-Wdeprecated.\" }\n+#assert x(x)  // { dg-error \"#assert is a deprecated GCC extension .-Werror=deprecated.\" }\n \n-#if #x(x)     // { dg-error \"assertions are a deprecated extension .-Wdeprecated.\" }\n+#if #x(x)     // { dg-error \"assertions are a deprecated extension .-Werror=deprecated.\" }\n #endif"}, {"sha": "7b074a37c90603a0cbe444426a7beca87f7a57b1", "filename": "gcc/testsuite/gcc.dg/cpp/warn-long-long-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-long-long-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-long-long-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-long-long-2.c?ref=289fcbbd6e1e9683416f6a6380faa9471787e079", "patch": "@@ -1,6 +1,6 @@\n // { dg-do preprocess }\n // { dg-options \"-std=gnu99 -fdiagnostics-show-option -Wtraditional -Werror=long-long\" }\n /* { dg-message \"some warnings being treated as errors\" \"\" {target \"*-*-*\"} 0 } */\n-#if 0LL  // { dg-error \"traditional C rejects the \\\"LL\\\" suffix .-Wlong-long.\" }\n-         // { dg-error \"use of C99 long long integer constant .-Wlong-long.\" \"use long long\" { target *-*-* } 4 }\n+#if 0LL  // { dg-error \"traditional C rejects the \\\"LL\\\" suffix .-Werror=long-long.\" }\n+         // { dg-error \"use of C99 long long integer constant .-Werror=long-long.\" \"use long long\" { target *-*-* } 4 }\n #endif"}, {"sha": "f9fd4f6dfa042c7ab92aac17786d6e6c599e9153", "filename": "gcc/testsuite/gcc.dg/cpp/warn-multichar-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-multichar-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-multichar-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-multichar-2.c?ref=289fcbbd6e1e9683416f6a6380faa9471787e079", "patch": "@@ -1,5 +1,5 @@\n // { dg-do preprocess }\n // { dg-options \"-std=gnu99 -fdiagnostics-show-option -Werror=multichar\" }\n /* { dg-message \"some warnings being treated as errors\" \"\" {target \"*-*-*\"} 0 } */\n-#if 'abc'  // { dg-error \"multi-character character constant .-Wmultichar.\" }\n+#if 'abc'  // { dg-error \"multi-character character constant .-Werror=multichar.\" }\n #endif"}, {"sha": "24eaea035e7d7ffd73d46ee7a1f2a835422b7bec", "filename": "gcc/testsuite/gcc.dg/cpp/warn-normalized-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-normalized-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-normalized-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-normalized-3.c?ref=289fcbbd6e1e9683416f6a6380faa9471787e079", "patch": "@@ -2,4 +2,4 @@\n // { dg-options \"-std=gnu99 -fdiagnostics-show-option -fextended-identifiers -Werror=normalized=\" }\n /* { dg-message \"some warnings being treated as errors\" \"\" {target \"*-*-*\"} 0 } */\n         // { dg-prune-output \".*-Werror=normalized=: Set -Wnormalized=nfc.*\" }\n-\\u0F43  // { dg-error \"`.U00000f43' is not in NFC .-Wnormalized=.\" }\n+\\u0F43  // { dg-error \"`.U00000f43' is not in NFC .-Werror=normalized=.\" }"}, {"sha": "e6b209c1e706aabdac92cb0cc58df77b23484015", "filename": "gcc/testsuite/gcc.dg/cpp/warn-redefined-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-redefined-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-redefined-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-redefined-2.c?ref=289fcbbd6e1e9683416f6a6380faa9471787e079", "patch": "@@ -6,7 +6,7 @@\n // { dg-bogus \"__TIME__ builtin is not defined\" \"no-time\" { target *-*-* } 5 }\n #endif\n \n-#define __TIME__ \"X\"  // { dg-error \"\\\"__TIME__\\\" redefined .-Wbuiltin-macro-redefined.\" }\n+#define __TIME__ \"X\"  // { dg-error \"\\\"__TIME__\\\" redefined .-Werror=builtin-macro-redefined.\" }\n \n #define __TIME__ \"Y\"  // { dg-bogus \"-Wbuiltin-macro-redefined\" }\n                       // { dg-warning \"\\\"__TIME__\\\" redefined\" \"not-builtin-1\" { target *-*-* } 11 }"}, {"sha": "05477afefa9d73d0b3a55db09aeab5572a255c27", "filename": "gcc/testsuite/gcc.dg/cpp/warn-traditional-2.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-traditional-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-traditional-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-traditional-2.c?ref=289fcbbd6e1e9683416f6a6380faa9471787e079", "patch": "@@ -1,23 +1,23 @@\n // { dg-do compile }\n // { dg-options \"-std=gnu99 -fdiagnostics-show-option -Werror=traditional -Wno-deprecated -Wno-long-long\" }\n /* { dg-message \"some warnings being treated as errors\" \"\" {target \"*-*-*\"} 0 } */\n-#assert x(x)         // { dg-error \"suggest hiding #assert from traditional C with an indented # .-Wtraditional.\" }\n+#assert x(x)         // { dg-error \"suggest hiding #assert from traditional C with an indented # .-Werror=traditional.\" }\n \n- #define X X         // { dg-error \"traditional C ignores #define with the # indented .-Wtraditional.\" }\n+ #define X X         // { dg-error \"traditional C ignores #define with the # indented .-Werror=traditional.\" }\n \n #if 0\n-#elif 1              // { dg-error \"suggest not using #elif in traditional C .-Wtraditional.\" }\n+#elif 1              // { dg-error \"suggest not using #elif in traditional C .-Werror=traditional.\" }\n #endif\n \n #define f(X) X\n-int f;               // { dg-error \"function-like macro \\\"f\\\" must be used with arguments in traditional C .-Wtraditional.\" }\n+int f;               // { dg-error \"function-like macro \\\"f\\\" must be used with arguments in traditional C .-Werror=traditional.\" }\n \n-#if 0U               // { dg-error \"traditional C rejects the \\\"U\\\" suffix .-Wtraditional.\" }\n+#if 0U               // { dg-error \"traditional C rejects the \\\"U\\\" suffix .-Werror=traditional.\" }\n #endif\n \n-#if +1               // { dg-error \" traditional C rejects the unary plus operator .-Wtraditional.\" }\n+#if +1               // { dg-error \" traditional C rejects the unary plus operator .-Werror=traditional.\" }\n #endif\n \n-char *x = \"\\x0\";     // { dg-error \"the meaning of '.x' is different in traditional C .-Wtraditional.\" }\n-char *y = \"\\a\";      // { dg-error \"the meaning of '.a' is different in traditional C .-Wtraditional.\" }\n-char *z = \"\\u0F43\";  // { dg-error \"the meaning of '.u' is different in traditional C .-Wtraditional.\" }\n+char *x = \"\\x0\";     // { dg-error \"the meaning of '.x' is different in traditional C .-Werror=traditional.\" }\n+char *y = \"\\a\";      // { dg-error \"the meaning of '.a' is different in traditional C .-Werror=traditional.\" }\n+char *z = \"\\u0F43\";  // { dg-error \"the meaning of '.u' is different in traditional C .-Werror=traditional.\" }"}, {"sha": "e7537c8684d746dfda6c53f36112b6e36023e598", "filename": "gcc/testsuite/gcc.dg/cpp/warn-trigraphs-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-trigraphs-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-trigraphs-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-trigraphs-3.c?ref=289fcbbd6e1e9683416f6a6380faa9471787e079", "patch": "@@ -1,4 +1,4 @@\n // { dg-do preprocess }\n // { dg-options \"-std=gnu99 -fdiagnostics-show-option -trigraphs -Werror=trigraphs\" }\n /* { dg-message \"some warnings being treated as errors\" \"\" {target \"*-*-*\"} 0 } */\n-??=  // { dg-error \"trigraph \\\\?\\\\?= converted to # .-Wtrigraphs.\" }\n+??=  // { dg-error \"trigraph \\\\?\\\\?= converted to # .-Werror=trigraphs.\" }"}, {"sha": "d8333d4c3b5f0df84bbab829c0579fe6b3fe99a3", "filename": "gcc/testsuite/gcc.dg/cpp/warn-trigraphs-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-trigraphs-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-trigraphs-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-trigraphs-4.c?ref=289fcbbd6e1e9683416f6a6380faa9471787e079", "patch": "@@ -1,4 +1,4 @@\n // { dg-do preprocess }\n // { dg-options \"-std=gnu99 -fdiagnostics-show-option -Werror=trigraphs\" }\n /* { dg-message \"some warnings being treated as errors\" \"\" {target \"*-*-*\"} 0 } */\n-??=  // { dg-error \"trigraph \\\\?\\\\?= ignored, use -trigraphs to enable .-Wtrigraphs.\" }\n+??=  // { dg-error \"trigraph \\\\?\\\\?= ignored, use -trigraphs to enable .-Werror=trigraphs.\" }"}, {"sha": "15fdde95c10fb9313e9b7ae96fb0ea5b4c4d4136", "filename": "gcc/testsuite/gcc.dg/cpp/warn-undef-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-undef-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-undef-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-undef-2.c?ref=289fcbbd6e1e9683416f6a6380faa9471787e079", "patch": "@@ -1,5 +1,5 @@\n // { dg-do preprocess }\n // { dg-options \"-std=gnu99 -fdiagnostics-show-option -Werror=undef\" }\n /* { dg-message \"some warnings being treated as errors\" \"\" {target \"*-*-*\"} 0 } */\n-#if x  // { dg-error \"\\\"x\\\" is not defined .-Wundef.\" }\n+#if x  // { dg-error \"\\\"x\\\" is not defined .-Werror=undef.\" }\n #endif"}, {"sha": "d7fe145c8cce6313345a5479c3abb487aae93b93", "filename": "gcc/testsuite/gcc.dg/cpp/warn-unused-macros-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-unused-macros-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-unused-macros-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-unused-macros-2.c?ref=289fcbbd6e1e9683416f6a6380faa9471787e079", "patch": "@@ -1,4 +1,4 @@\n // { dg-do preprocess }\n // { dg-options \"-std=gnu99 -fdiagnostics-show-option -Werror=unused-macros\" }\n /* { dg-message \"some warnings being treated as errors\" \"\" {target \"*-*-*\"} 0 } */\n-#define X X  // { dg-error \"macro \\\"X\\\" is not used .-Wunused-macros.\" }\n+#define X X  // { dg-error \"macro \\\"X\\\" is not used .-Werror=unused-macros.\" }"}, {"sha": "1a266cd245faf408080dd99aadd99ece0d3d1d9c", "filename": "gcc/testsuite/gcc.dg/cpp/warn-variadic-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-variadic-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-variadic-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fwarn-variadic-2.c?ref=289fcbbd6e1e9683416f6a6380faa9471787e079", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do preprocess } */\n /* { dg-options \"-ansi -fdiagnostics-show-option -pedantic -Werror=variadic-macros\" } */\n /* { dg-message \"some warnings being treated as errors\" \"\" {target \"*-*-*\"} 0 } */\n-#define F(...) X   /* { dg-error \"anonymous variadic macros were introduced in C99 .-Wvariadic-macros.\" } */\n+#define F(...) X   /* { dg-error \"anonymous variadic macros were introduced in C99 .-Werror=variadic-macros.\" } */\n \n-#define G(X...) X  /* { dg-error \"ISO C does not permit named variadic macros .-Wvariadic-macros.\" } */\n+#define G(X...) X  /* { dg-error \"ISO C does not permit named variadic macros .-Werror=variadic-macros.\" } */"}, {"sha": "fa9460a787fa5060b8dd98588260b9a48674b791", "filename": "gcc/testsuite/gfortran.dg/warning-directive-2.F90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgfortran.dg%2Fwarning-directive-2.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/289fcbbd6e1e9683416f6a6380faa9471787e079/gcc%2Ftestsuite%2Fgfortran.dg%2Fwarning-directive-2.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fwarning-directive-2.F90?ref=289fcbbd6e1e9683416f6a6380faa9471787e079", "patch": "@@ -2,4 +2,4 @@\n ! { dg-options \"-std=f95 -fdiagnostics-show-option -Werror=cpp\" }\n ! { dg-warning \"some warnings being treated as errors\" \"\" {target \"*-*-*\"} 0 } \n #warning \"Printed\"\n-! { dg-error \"\\\"Printed\\\" .-Wcpp.\" \"\" { target *-*-* } 4 }\n+! { dg-error \"\\\"Printed\\\" .-Werror=cpp.\" \"\" { target *-*-* } 4 }"}]}