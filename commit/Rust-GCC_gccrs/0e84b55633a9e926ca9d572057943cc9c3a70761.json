{"sha": "0e84b55633a9e926ca9d572057943cc9c3a70761", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU4NGI1NTYzM2E5ZTkyNmNhOWQ1NzIwNTc5NDNjYzljM2E3MDc2MQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-11-12T13:53:40Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-11-12T13:53:40Z"}, "message": "(pattern_really_clobbers_lr): Setting a subreg of a mem is valid and safe.\n\nFrom-SVN: r6074", "tree": {"sha": "9b8bc433e411ac3516269c5f92db3375c5b7b605", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b8bc433e411ac3516269c5f92db3375c5b7b605"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e84b55633a9e926ca9d572057943cc9c3a70761", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e84b55633a9e926ca9d572057943cc9c3a70761", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e84b55633a9e926ca9d572057943cc9c3a70761", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e84b55633a9e926ca9d572057943cc9c3a70761/comments", "author": null, "committer": null, "parents": [{"sha": "b7d7295b1a15da3599100688c925bff755cea673", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7d7295b1a15da3599100688c925bff755cea673", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7d7295b1a15da3599100688c925bff755cea673"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "b0752076f1d88cb434b8568f6dd921e334d4d0c5", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e84b55633a9e926ca9d572057943cc9c3a70761/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e84b55633a9e926ca9d572057943cc9c3a70761/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=0e84b55633a9e926ca9d572057943cc9c3a70761", "patch": "@@ -1552,7 +1552,11 @@ output_ascii_pseudo_op (stream, p, len)\n \n /* Try to determine whether a pattern really clobbers the link register.\n    This information is useful when peepholing, so that lr need not be pushed\n-   if we combine a call followed by a return */\n+   if we combine a call followed by a return.\n+   NOTE: This code does not check for side-effect expressions in a SET_SRC:\n+   such a check should not be needed because these only update an existing\n+   value within a register; the register must still be set elsewhere within\n+   the function. */\n \n static int\n pattern_really_clobbers_lr (x)\n@@ -1570,6 +1574,8 @@ rtx x;\n         case SUBREG:\n \t  if (GET_CODE (XEXP (SET_DEST (x), 0)) == REG)\n \t    return REGNO (XEXP (SET_DEST (x), 0)) == 14;\n+\t  if (GET_CODE (XEXP (SET_DEST (x), 0)) == MEM)\n+\t    return 0;\n \t  abort ();\n         default:\n \t  return 0;"}]}