{"sha": "3d9a180f7d5719f4bfcd96df8188ea3a5e24550a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Q5YTE4MGY3ZDU3MTlmNGJmY2Q5NmRmODE4OGVhM2E1ZTI0NTUwYQ==", "commit": {"author": {"name": "Will Schmidt", "email": "will_schmidt@vnet.ibm.com", "date": "2017-08-09T19:06:35Z"}, "committer": {"name": "Will Schmidt", "email": "willschm@gcc.gnu.org", "date": "2017-08-09T19:06:35Z"}, "message": "fold-vec-msum-char.c: New.\n\n[gcc/testsuite]\n\n2017-08-09  Will Schmidt  <will_schmidt@vnet.ibm.com>\n\n\t* gcc.target/powerpc/fold-vec-msum-char.c: New.\n\t* gcc.target/powerpc/fold-vec-msum-short.c: New.\n\nFrom-SVN: r250997", "tree": {"sha": "0564946054e99ff18f20c0cbe6bf2d9e8a2a2ce8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0564946054e99ff18f20c0cbe6bf2d9e8a2a2ce8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d9a180f7d5719f4bfcd96df8188ea3a5e24550a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d9a180f7d5719f4bfcd96df8188ea3a5e24550a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d9a180f7d5719f4bfcd96df8188ea3a5e24550a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d9a180f7d5719f4bfcd96df8188ea3a5e24550a/comments", "author": {"login": "willschm", "id": 44359, "node_id": "MDQ6VXNlcjQ0MzU5", "avatar_url": "https://avatars.githubusercontent.com/u/44359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willschm", "html_url": "https://github.com/willschm", "followers_url": "https://api.github.com/users/willschm/followers", "following_url": "https://api.github.com/users/willschm/following{/other_user}", "gists_url": "https://api.github.com/users/willschm/gists{/gist_id}", "starred_url": "https://api.github.com/users/willschm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willschm/subscriptions", "organizations_url": "https://api.github.com/users/willschm/orgs", "repos_url": "https://api.github.com/users/willschm/repos", "events_url": "https://api.github.com/users/willschm/events{/privacy}", "received_events_url": "https://api.github.com/users/willschm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ee9a9e7b215b0800c5f277029379c632f52e5e1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee9a9e7b215b0800c5f277029379c632f52e5e1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee9a9e7b215b0800c5f277029379c632f52e5e1b"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "b5f06f26d8e5cbd1e1557804ef5f120ef2811869", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d9a180f7d5719f4bfcd96df8188ea3a5e24550a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d9a180f7d5719f4bfcd96df8188ea3a5e24550a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3d9a180f7d5719f4bfcd96df8188ea3a5e24550a", "patch": "@@ -1,3 +1,8 @@\n+2017-08-09  Will Schmidt  <will_schmidt@vnet.ibm.com>\n+\n+\t* gcc.target/powerpc/fold-vec-msum-char.c: New.\n+\t* gcc.target/powerpc/fold-vec-msum-short.c: New.\n+\n 2017-08-09  Will Schmidt  <will_schmidt@vnet.ibm.com>\n \n \t* gcc.target/powerpc/fold-vec-madd-double.c: New."}, {"sha": "53519d502930d05e3aeb591f977e4552664751db", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-msum-char.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d9a180f7d5719f4bfcd96df8188ea3a5e24550a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-msum-char.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d9a180f7d5719f4bfcd96df8188ea3a5e24550a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-msum-char.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-msum-char.c?ref=3d9a180f7d5719f4bfcd96df8188ea3a5e24550a", "patch": "@@ -0,0 +1,25 @@\n+/* Verify that overloaded built-ins for vec_msum() with char inputs\n+   produce the right results.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_altivec_ok } */\n+/* { dg-options \"-maltivec -O2\" } */\n+\n+#include <altivec.h>\n+\n+vector unsigned int\n+test_msum_ui_uc_uc_ui (vector unsigned char vuc2, vector unsigned char vuc3,\n+\t\t       vector unsigned int vui2)\n+{\n+  return vec_msum (vuc2, vuc3, vui2);\n+}\n+\n+vector signed int\n+test_msum_si_sc_uc_si (vector signed char vsc2, vector unsigned char vuc3,\n+\t\t       vector signed int vsi2)\n+{\n+  return vec_msum (vsc2, vuc3, vsi2);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vmsumubm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmsummbm\" 1 } } */"}, {"sha": "61e1d35c0d1f88ac5e9aa9e737ca1b836eaaca04", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-msum-short.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d9a180f7d5719f4bfcd96df8188ea3a5e24550a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-msum-short.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d9a180f7d5719f4bfcd96df8188ea3a5e24550a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-msum-short.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-msum-short.c?ref=3d9a180f7d5719f4bfcd96df8188ea3a5e24550a", "patch": "@@ -0,0 +1,25 @@\n+/* Verify that overloaded built-ins for vec_msum with int\n+   inputs produce the right results.  */\n+\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_altivec_ok } */\n+/* { dg-options \"-maltivec -O2\" } */\n+\n+#include <altivec.h>\n+\n+vector signed int\n+test_msum_si (vector signed short vss2, vector signed short vss3,\n+\t   vector signed int vsi2)\n+{\n+  return vec_msum (vss2, vss3, vsi2);\n+}\n+\n+vector unsigned int\n+test_msum)ui (vector unsigned short vus2, vector unsigned short vus3,\n+\t   vector unsigned int vui2)\n+{\n+  return vec_msum (vus2, vus3, vui2);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vmsumshm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmsumuhm\" 1 } } */"}]}