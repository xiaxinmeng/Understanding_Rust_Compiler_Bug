{"sha": "3c35efc322f7ff8d25b81cf9ebc01d0ec202bb89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MzNWVmYzMyMmY3ZmY4ZDI1YjgxY2Y5ZWJjMDFkMGVjMjAyYmI4OQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-01-25T16:57:32Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-01-25T16:57:32Z"}, "message": "Fix output_constructor_bitfield handling of wide bitfields (PR89037)\n\nThe testcase was failing because we were trying to access\nTREE_INT_CST_ELT (x, 1) of a 128-bit integer that was small enough\nto need only a single element.\n\n2019-01-25  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\tPR middle-end/89037\n\t* varasm.c (output_constructor_bitfield): Use wi::extract_uhwi\n\tinstead of accessing TREE_INT_CST_ELT directly.\n\ngcc/testsuite/\n\tPR middle-end/89037\n\t* gcc.dg/pr89037.c: New test.\n\nFrom-SVN: r268272", "tree": {"sha": "8c687e9e504a57ca6818174a9eb80e2cade73e41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c687e9e504a57ca6818174a9eb80e2cade73e41"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c35efc322f7ff8d25b81cf9ebc01d0ec202bb89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c35efc322f7ff8d25b81cf9ebc01d0ec202bb89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c35efc322f7ff8d25b81cf9ebc01d0ec202bb89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c35efc322f7ff8d25b81cf9ebc01d0ec202bb89/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "62fa42ce812c699b8cc270b486ef8d644c0342de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62fa42ce812c699b8cc270b486ef8d644c0342de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62fa42ce812c699b8cc270b486ef8d644c0342de"}], "stats": {"total": 57, "additions": 44, "deletions": 13}, "files": [{"sha": "2f7731afc2200d4f6035243c89e7196278841727", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c35efc322f7ff8d25b81cf9ebc01d0ec202bb89/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c35efc322f7ff8d25b81cf9ebc01d0ec202bb89/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c35efc322f7ff8d25b81cf9ebc01d0ec202bb89", "patch": "@@ -1,3 +1,9 @@\n+2019-01-25  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR middle-end/89037\n+\t* varasm.c (output_constructor_bitfield): Use wi::extract_uhwi\n+\tinstead of accessing TREE_INT_CST_ELT directly.\n+\n 2019-01-25  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* doc/sourcebuild.texi (Environment attributes): Add fenv and"}, {"sha": "29d6426febddbc393dd8bea105a44bbdf5b21301", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c35efc322f7ff8d25b81cf9ebc01d0ec202bb89/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c35efc322f7ff8d25b81cf9ebc01d0ec202bb89/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3c35efc322f7ff8d25b81cf9ebc01d0ec202bb89", "patch": "@@ -1,3 +1,8 @@\n+2019-01-25  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR middle-end/89037\n+\t* gcc.dg/pr89037.c: New test.\n+\n 2019-01-25  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* lib/target-supports.exp (check_effective_target_fenv): New."}, {"sha": "551136741d776185a4c10b85168b425cf2ed6de4", "filename": "gcc/testsuite/gcc.dg/pr89037.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c35efc322f7ff8d25b81cf9ebc01d0ec202bb89/gcc%2Ftestsuite%2Fgcc.dg%2Fpr89037.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c35efc322f7ff8d25b81cf9ebc01d0ec202bb89/gcc%2Ftestsuite%2Fgcc.dg%2Fpr89037.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr89037.c?ref=3c35efc322f7ff8d25b81cf9ebc01d0ec202bb89", "patch": "@@ -0,0 +1,24 @@\n+/* { dg-do run { target int128 } } */\n+/* { dg-options \"\" } */\n+\n+struct s\n+{\n+  __int128 y : 66;\n+};\n+typedef struct s T;\n+T a[] = { 1, 10000, 0x12345, 0xff000001, 1ULL << 63, (__int128) 1 << 64,\n+\t  ((__int128) 1 << 64) | 1 };\n+\n+int\n+main (void)\n+{\n+  if (a[0].y != 1\n+      || a[1].y != 10000\n+      || a[2].y != 0x12345\n+      || a[3].y != 0xff000001\n+      || a[4].y != (1ULL << 63)\n+      || a[5].y != ((__int128) 1 << 64)\n+      || a[6].y != (((__int128) 1 << 64) | 1))\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "0be44f1f39289f743c96bb3ba67535c15ba9383e", "filename": "gcc/varasm.c", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c35efc322f7ff8d25b81cf9ebc01d0ec202bb89/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c35efc322f7ff8d25b81cf9ebc01d0ec202bb89/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=3c35efc322f7ff8d25b81cf9ebc01d0ec202bb89", "patch": "@@ -5349,7 +5349,7 @@ output_constructor_bitfield (oc_local_state *local, unsigned int bit_offset)\n     {\n       int this_time;\n       int shift;\n-      HOST_WIDE_INT value;\n+      unsigned HOST_WIDE_INT value;\n       HOST_WIDE_INT next_byte = next_offset / BITS_PER_UNIT;\n       HOST_WIDE_INT next_bit = next_offset % BITS_PER_UNIT;\n \n@@ -5381,15 +5381,13 @@ output_constructor_bitfield (oc_local_state *local, unsigned int bit_offset)\n \t      this_time = end - shift + 1;\n \t    }\n \n-\t  /* Now get the bits from the appropriate constant word.  */\n-\t  value = TREE_INT_CST_ELT (local->val, shift / HOST_BITS_PER_WIDE_INT);\n-\t  shift = shift & (HOST_BITS_PER_WIDE_INT - 1);\n+\t  /* Now get the bits we want to insert.  */\n+\t  value = wi::extract_uhwi (wi::to_widest (local->val),\n+\t\t\t\t    shift, this_time);\n \n \t  /* Get the result.  This works only when:\n \t     1 <= this_time <= HOST_BITS_PER_WIDE_INT.  */\n-\t  local->byte |= (((value >> shift)\n-\t\t\t   & (((HOST_WIDE_INT) 2 << (this_time - 1)) - 1))\n-\t\t\t  << (BITS_PER_UNIT - this_time - next_bit));\n+\t  local->byte |= value << (BITS_PER_UNIT - this_time - next_bit);\n \t}\n       else\n \t{\n@@ -5406,15 +5404,13 @@ output_constructor_bitfield (oc_local_state *local, unsigned int bit_offset)\n \t    this_time\n \t      = HOST_BITS_PER_WIDE_INT - (shift & (HOST_BITS_PER_WIDE_INT - 1));\n \n-\t  /* Now get the bits from the appropriate constant word.  */\n-\t  value = TREE_INT_CST_ELT (local->val, shift / HOST_BITS_PER_WIDE_INT);\n-\t  shift = shift & (HOST_BITS_PER_WIDE_INT - 1);\n+\t  /* Now get the bits we want to insert.  */\n+\t  value = wi::extract_uhwi (wi::to_widest (local->val),\n+\t\t\t\t    shift, this_time);\n \n \t  /* Get the result.  This works only when:\n \t     1 <= this_time <= HOST_BITS_PER_WIDE_INT.  */\n-\t  local->byte |= (((value >> shift)\n-\t\t\t   & (((HOST_WIDE_INT) 2 << (this_time - 1)) - 1))\n-\t\t\t  << next_bit);\n+\t  local->byte |= value << next_bit;\n \t}\n \n       next_offset += this_time;"}]}