{"sha": "b24a46beddca2278e1879b1ed5086bfd957eebb7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjI0YTQ2YmVkZGNhMjI3OGUxODc5YjFlZDUwODZiZmQ5NTdlZWJiNw==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2018-08-16T19:44:38Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2018-08-16T19:44:38Z"}, "message": "rs6000: Remove \"length 4\" from other insns\n\nThere were many insns that set \"length 4\" explicitly while that does\nnot make anything clearer to the reader.  So, simplify the code.\n\n\n\t* config/rs6000/altivec.md: Don't set length attribute to the default\n\tvalue.\n\t* config/rs6000/darwin.md: Ditto.\n\t* config/rs6000/dfp.md: Ditto.\n\t* config/rs6000/htm.md: Ditto.\n\t* config/rs6000/rs6000.md: Ditto.\n\t* config/rs6000/sync.md: Ditto.\n\t* config/rs6000/vsx.md: Ditto.\n\nFrom-SVN: r263603", "tree": {"sha": "9797cafbb90c21d2defae0553788c821def36f82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9797cafbb90c21d2defae0553788c821def36f82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b24a46beddca2278e1879b1ed5086bfd957eebb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b24a46beddca2278e1879b1ed5086bfd957eebb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b24a46beddca2278e1879b1ed5086bfd957eebb7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b24a46beddca2278e1879b1ed5086bfd957eebb7/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a79db151ccd666c3c5e47454f52ee316fd766aad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a79db151ccd666c3c5e47454f52ee316fd766aad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a79db151ccd666c3c5e47454f52ee316fd766aad"}], "stats": {"total": 218, "additions": 80, "deletions": 138}, "files": [{"sha": "cf134ccdd5047ea9c7936d4fff45c589a6df5156", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b24a46beddca2278e1879b1ed5086bfd957eebb7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b24a46beddca2278e1879b1ed5086bfd957eebb7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b24a46beddca2278e1879b1ed5086bfd957eebb7", "patch": "@@ -1,3 +1,14 @@\n+2018-08-16  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/altivec.md: Don't set length attribute to the default\n+\tvalue.\n+\t* config/rs6000/darwin.md: Ditto.\n+\t* config/rs6000/dfp.md: Ditto.\n+\t* config/rs6000/htm.md: Ditto.\n+\t* config/rs6000/rs6000.md: Ditto.\n+\t* config/rs6000/sync.md: Ditto.\n+\t* config/rs6000/vsx.md: Ditto.\n+\n 2018-08-16  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/altivec.md: Don't set length attribute to the default"}, {"sha": "3419e3a7a1cb1d7e3da8cae559bf18161b0bee00", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 22, "deletions": 44, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b24a46beddca2278e1879b1ed5086bfd957eebb7/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b24a46beddca2278e1879b1ed5086bfd957eebb7/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=b24a46beddca2278e1879b1ed5086bfd957eebb7", "patch": "@@ -2042,8 +2042,7 @@\n   \"@\n    vperm %0,%1,%2,%3\n    xxperm %x0,%x1,%x3\"\n-  [(set_attr \"type\" \"vecperm\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"altivec_vperm_v8hiv16qi\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=v,?wo\")\n@@ -2055,8 +2054,7 @@\n   \"@\n    vperm %0,%1,%2,%3\n    xxperm %x0,%x1,%x3\"\n-  [(set_attr \"type\" \"vecperm\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"vecperm\")])\n \n (define_expand \"altivec_vperm_<mode>_uns\"\n   [(set (match_operand:VM 0 \"register_operand\")\n@@ -2083,8 +2081,7 @@\n   \"@\n    vperm %0,%1,%2,%3\n    xxperm %x0,%x1,%x3\"\n-  [(set_attr \"type\" \"vecperm\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"vecperm\")])\n \n (define_expand \"vec_permv16qi\"\n   [(set (match_operand:V16QI 0 \"register_operand\")\n@@ -2110,8 +2107,7 @@\n   \"@\n    vpermr %0,%1,%2,%3\n    xxpermr %x0,%x1,%x3\"\n-  [(set_attr \"type\" \"vecperm\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"altivec_vrfip\"\t\t; ceil\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=v\")\n@@ -3268,8 +3264,7 @@\n   \"@\n    vperm %0,%1,%2,%3\n    xxperm %x0,%x1,%x3\"\n-  [(set_attr \"type\" \"vecperm\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"vecperm\")])\n \n (define_insn \"vperm_v16qiv8hi\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=v,?wo\")\n@@ -3281,8 +3276,7 @@\n   \"@\n    vperm %0,%1,%2,%3\n    xxperm %x0,%x1,%x3\"\n-  [(set_attr \"type\" \"vecperm\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"vecperm\")])\n \n \n (define_expand \"vec_unpacku_hi_v16qi\"\n@@ -3857,8 +3851,7 @@\n \t(clz:VI2 (match_operand:VI2 1 \"register_operand\" \"v\")))]\n   \"TARGET_P8_VECTOR\"\n   \"vclz<wd> %0,%1\"\n-  [(set_attr \"length\" \"4\")\n-   (set_attr \"type\" \"vecsimple\")])\n+  [(set_attr \"type\" \"vecsimple\")])\n \n ;; Vector absolute difference unsigned\n (define_expand \"vadu<mode>3\"\n@@ -3884,26 +3877,23 @@\n \t(ctz:VI2 (match_operand:VI2 1 \"register_operand\" \"v\")))]\n   \"TARGET_P9_VECTOR\"\n   \"vctz<wd> %0,%1\"\n-  [(set_attr \"length\" \"4\")\n-   (set_attr \"type\" \"vecsimple\")])\n+  [(set_attr \"type\" \"vecsimple\")])\n \n ;; Vector population count\n (define_insn \"*p8v_popcount<mode>2\"\n   [(set (match_operand:VI2 0 \"register_operand\" \"=v\")\n         (popcount:VI2 (match_operand:VI2 1 \"register_operand\" \"v\")))]\n   \"TARGET_P8_VECTOR\"\n   \"vpopcnt<wd> %0,%1\"\n-  [(set_attr \"length\" \"4\")\n-   (set_attr \"type\" \"vecsimple\")])\n+  [(set_attr \"type\" \"vecsimple\")])\n \n ;; Vector parity\n (define_insn \"*p9v_parity<mode>2\"\n   [(set (match_operand:VParity 0 \"register_operand\" \"=v\")\n         (parity:VParity (match_operand:VParity 1 \"register_operand\" \"v\")))]\n   \"TARGET_P9_VECTOR\"\n   \"vprtyb<wd> %0,%1\"\n-  [(set_attr \"length\" \"4\")\n-   (set_attr \"type\" \"vecsimple\")])\n+  [(set_attr \"type\" \"vecsimple\")])\n \n ;; Vector Gather Bits by Bytes by Doubleword\n (define_insn \"p8v_vgbbd\"\n@@ -3912,8 +3902,7 @@\n \t\t      UNSPEC_VGBBD))]\n   \"TARGET_P8_VECTOR\"\n   \"vgbbd %0,%1\"\n-  [(set_attr \"length\" \"4\")\n-   (set_attr \"type\" \"vecsimple\")])\n+  [(set_attr \"type\" \"vecsimple\")])\n \n \f\n ;; 128-bit binary integer arithmetic\n@@ -3927,8 +3916,7 @@\n \t\t   (match_operand:V1TI 2 \"register_operand\" \"v\")))]\n   \"TARGET_VADDUQM\"\n   \"vadduqm %0,%1,%2\"\n-  [(set_attr \"length\" \"4\")\n-   (set_attr \"type\" \"vecsimple\")])\n+  [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vaddcuq\"\n   [(set (match_operand:V1TI 0 \"register_operand\" \"=v\")\n@@ -3937,17 +3925,15 @@\n \t\t     UNSPEC_VADDCUQ))]\n   \"TARGET_VADDUQM\"\n   \"vaddcuq %0,%1,%2\"\n-  [(set_attr \"length\" \"4\")\n-   (set_attr \"type\" \"vecsimple\")])\n+  [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vsubuqm\"\n   [(set (match_operand:V1TI 0 \"register_operand\" \"=v\")\n \t(minus:V1TI (match_operand:V1TI 1 \"register_operand\" \"v\")\n \t\t    (match_operand:V1TI 2 \"register_operand\" \"v\")))]\n   \"TARGET_VADDUQM\"\n   \"vsubuqm %0,%1,%2\"\n-  [(set_attr \"length\" \"4\")\n-   (set_attr \"type\" \"vecsimple\")])\n+  [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vsubcuq\"\n   [(set (match_operand:V1TI 0 \"register_operand\" \"=v\")\n@@ -3956,8 +3942,7 @@\n \t\t     UNSPEC_VSUBCUQ))]\n   \"TARGET_VADDUQM\"\n   \"vsubcuq %0,%1,%2\"\n-  [(set_attr \"length\" \"4\")\n-   (set_attr \"type\" \"vecsimple\")])\n+  [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vaddeuqm\"\n   [(set (match_operand:V1TI 0 \"register_operand\" \"=v\")\n@@ -3967,8 +3952,7 @@\n \t\t     UNSPEC_VADDEUQM))]\n   \"TARGET_VADDUQM\"\n   \"vaddeuqm %0,%1,%2,%3\"\n-  [(set_attr \"length\" \"4\")\n-   (set_attr \"type\" \"vecsimple\")])\n+  [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vaddecuq\"\n   [(set (match_operand:V1TI 0 \"register_operand\" \"=v\")\n@@ -3978,8 +3962,7 @@\n \t\t     UNSPEC_VADDECUQ))]\n   \"TARGET_VADDUQM\"\n   \"vaddecuq %0,%1,%2,%3\"\n-  [(set_attr \"length\" \"4\")\n-   (set_attr \"type\" \"vecsimple\")])\n+  [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vsubeuqm\"\n   [(set (match_operand:V1TI 0 \"register_operand\" \"=v\")\n@@ -3989,8 +3972,7 @@\n \t\t   UNSPEC_VSUBEUQM))]\n   \"TARGET_VADDUQM\"\n   \"vsubeuqm %0,%1,%2,%3\"\n-  [(set_attr \"length\" \"4\")\n-   (set_attr \"type\" \"vecsimple\")])\n+  [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"altivec_vsubecuq\"\n   [(set (match_operand:V1TI 0 \"register_operand\" \"=v\")\n@@ -4000,8 +3982,7 @@\n \t\t     UNSPEC_VSUBECUQ))]\n   \"TARGET_VADDUQM\"\n   \"vsubecuq %0,%1,%2,%3\"\n-  [(set_attr \"length\" \"4\")\n-   (set_attr \"type\" \"vecsimple\")])\n+  [(set_attr \"type\" \"vecsimple\")])\n \n ;; We use V2DI as the output type to simplify converting the permute\n ;; bits into an integer\n@@ -4093,8 +4074,7 @@\n    (clobber (reg:CCFP CR6_REGNO))]\n   \"TARGET_P8_VECTOR\"\n   \"bcd<bcd_add_sub>. %0,%1,%2,%3\"\n-  [(set_attr \"length\" \"4\")\n-   (set_attr \"type\" \"vecsimple\")])\n+  [(set_attr \"type\" \"vecsimple\")])\n \n ;; Use a floating point type (V2DFmode) for the compare to set CR6 so that we\n ;; can use the unordered test for BCD nans and add/subtracts that overflow.  An\n@@ -4112,8 +4092,7 @@\n    (clobber (match_scratch:V1TI 0 \"=v\"))]\n   \"TARGET_P8_VECTOR\"\n   \"bcd<bcd_add_sub>. %0,%1,%2,%3\"\n-  [(set_attr \"length\" \"4\")\n-   (set_attr \"type\" \"vecsimple\")])\n+  [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"*bcd<bcd_add_sub>_test2\"\n   [(set (match_operand:V1TI 0 \"register_operand\" \"=v\")\n@@ -4130,8 +4109,7 @@\n \t (match_operand:V2DF 4 \"zero_constant\" \"j\")))]\n   \"TARGET_P8_VECTOR\"\n   \"bcd<bcd_add_sub>. %0,%1,%2,%3\"\n-  [(set_attr \"length\" \"4\")\n-   (set_attr \"type\" \"vecsimple\")])\n+  [(set_attr \"type\" \"vecsimple\")])\n \n (define_insn \"darn_32\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")"}, {"sha": "37acb312b4b778bed88df7ee886f08af7d752b36", "filename": "gcc/config/rs6000/darwin.md", "status": "modified", "additions": 11, "deletions": 22, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b24a46beddca2278e1879b1ed5086bfd957eebb7/gcc%2Fconfig%2Frs6000%2Fdarwin.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b24a46beddca2278e1879b1ed5086bfd957eebb7/gcc%2Fconfig%2Frs6000%2Fdarwin.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.md?ref=b24a46beddca2278e1879b1ed5086bfd957eebb7", "patch": "@@ -23,8 +23,7 @@ You should have received a copy of the GNU General Public License\n         (plus:DI (match_operand:DI 1 \"gpc_reg_operand\" \"b\")\n                  (high:DI (match_operand 2 \"\" \"\"))))]\n   \"TARGET_MACHO && TARGET_64BIT\"\n-  \"addis %0,%1,ha16(%2)\"\n-  [(set_attr \"length\" \"4\")])\n+  \"addis %0,%1,ha16(%2)\")\n \n (define_insn \"movdf_low_si\"\n   [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=f,!r\")\n@@ -72,26 +71,23 @@ You should have received a copy of the GNU General Public License\n \tgcc_unreachable ();\n     }\n }\n-  [(set_attr \"type\" \"load\")\n-   (set_attr \"length\" \"4,4\")])\n+  [(set_attr \"type\" \"load\")])\n \n (define_insn \"movdf_low_st_si\"\n   [(set (mem:DF (lo_sum:SI (match_operand:SI 1 \"gpc_reg_operand\" \"b\")\n                            (match_operand 2 \"\" \"\")))\n \t(match_operand:DF 0 \"gpc_reg_operand\" \"f\"))]\n   \"TARGET_MACHO && TARGET_HARD_FLOAT && ! TARGET_64BIT\"\n   \"stfd %0,lo16(%2)(%1)\"\n-  [(set_attr \"type\" \"store\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"store\")])\n \n (define_insn \"movdf_low_st_di\"\n   [(set (mem:DF (lo_sum:DI (match_operand:DI 1 \"gpc_reg_operand\" \"b\")\n                            (match_operand 2 \"\" \"\")))\n \t(match_operand:DF 0 \"gpc_reg_operand\" \"f\"))]\n   \"TARGET_MACHO && TARGET_HARD_FLOAT && TARGET_64BIT\"\n   \"stfd %0,lo16(%2)(%1)\"\n-  [(set_attr \"type\" \"store\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"store\")])\n \n (define_insn \"movsf_low_si\"\n   [(set (match_operand:SF 0 \"gpc_reg_operand\" \"=f,!r\")\n@@ -101,8 +97,7 @@ You should have received a copy of the GNU General Public License\n   \"@\n    lfs %0,lo16(%2)(%1)\n    lwz %0,lo16(%2)(%1)\"\n-  [(set_attr \"type\" \"load\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"load\")])\n \n (define_insn \"movsf_low_di\"\n   [(set (match_operand:SF 0 \"gpc_reg_operand\" \"=f,!r\")\n@@ -112,8 +107,7 @@ You should have received a copy of the GNU General Public License\n   \"@\n    lfs %0,lo16(%2)(%1)\n    lwz %0,lo16(%2)(%1)\"\n-  [(set_attr \"type\" \"load\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"load\")])\n \n (define_insn \"movsf_low_st_si\"\n   [(set (mem:SF (lo_sum:SI (match_operand:SI 1 \"gpc_reg_operand\" \"b,b\")\n@@ -123,8 +117,7 @@ You should have received a copy of the GNU General Public License\n   \"@\n    stfs %0,lo16(%2)(%1)\n    stw %0,lo16(%2)(%1)\"\n-  [(set_attr \"type\" \"store\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"store\")])\n \n (define_insn \"movsf_low_st_di\"\n   [(set (mem:SF (lo_sum:DI (match_operand:DI 1 \"gpc_reg_operand\" \"b,b\")\n@@ -134,8 +127,7 @@ You should have received a copy of the GNU General Public License\n   \"@\n    stfs %0,lo16(%2)(%1)\n    stw %0,lo16(%2)(%1)\"\n-  [(set_attr \"type\" \"store\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"store\")])\n \n ;; 64-bit MachO load/store support\n (define_insn \"movdi_low\"\n@@ -146,17 +138,15 @@ You should have received a copy of the GNU General Public License\n   \"@\n    ld %0,lo16(%2)(%1)\n    lfd %0,lo16(%2)(%1)\"\n-  [(set_attr \"type\" \"load\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"load\")])\n \n (define_insn \"movsi_low_st\"\n   [(set (mem:SI (lo_sum:SI (match_operand:SI 1 \"gpc_reg_operand\" \"b\")\n                            (match_operand 2 \"\" \"\")))\n \t(match_operand:SI 0 \"gpc_reg_operand\" \"r\"))]\n   \"TARGET_MACHO && ! TARGET_64BIT\"\n   \"stw %0,lo16(%2)(%1)\"\n-  [(set_attr \"type\" \"store\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"store\")])\n \n (define_insn \"movdi_low_st\"\n   [(set (mem:DI (lo_sum:DI (match_operand:DI 1 \"gpc_reg_operand\" \"b,b\")\n@@ -166,8 +156,7 @@ You should have received a copy of the GNU General Public License\n   \"@\n    std %0,lo16(%2)(%1)\n    stfd %0,lo16(%2)(%1)\"\n-  [(set_attr \"type\" \"store\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"store\")])\n \n ;; Mach-O PIC trickery.\n (define_expand \"macho_high\""}, {"sha": "9bc98f978a5168aaaef5b111a40f46ef44d6dc4a", "filename": "gcc/config/rs6000/dfp.md", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b24a46beddca2278e1879b1ed5086bfd957eebb7/gcc%2Fconfig%2Frs6000%2Fdfp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b24a46beddca2278e1879b1ed5086bfd957eebb7/gcc%2Fconfig%2Frs6000%2Fdfp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdfp.md?ref=b24a46beddca2278e1879b1ed5086bfd957eebb7", "patch": "@@ -37,8 +37,7 @@\n    || gpc_reg_operand (operands[1], SDmode))\n    && TARGET_HARD_FLOAT\"\n   \"stfd%U0%X0 %1,%0\"\n-  [(set_attr \"type\" \"fpstore\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"fpstore\")])\n \n (define_insn \"movsd_load\"\n   [(set (match_operand:SD 0 \"nonimmediate_operand\" \"=f\")\n@@ -48,8 +47,7 @@\n    || gpc_reg_operand (operands[1], DDmode))\n    && TARGET_HARD_FLOAT\"\n   \"lfd%U1%X1 %0,%1\"\n-  [(set_attr \"type\" \"fpload\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"fpload\")])\n \n ;; Hardware support for decimal floating point operations.\n "}, {"sha": "96c8288285bb221e68f6408b5f3d003f96016dd1", "filename": "gcc/config/rs6000/htm.md", "status": "modified", "additions": 12, "deletions": 24, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b24a46beddca2278e1879b1ed5086bfd957eebb7/gcc%2Fconfig%2Frs6000%2Fhtm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b24a46beddca2278e1879b1ed5086bfd957eebb7/gcc%2Fconfig%2Frs6000%2Fhtm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fhtm.md?ref=b24a46beddca2278e1879b1ed5086bfd957eebb7", "patch": "@@ -72,8 +72,7 @@\n    (set (match_operand:BLK 2) (unspec:BLK [(match_dup 2)] UNSPEC_HTM_FENCE))]\n   \"TARGET_HTM\"\n   \"tabort. %0\"\n-  [(set_attr \"type\" \"htmsimple\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"htmsimple\")])\n \n (define_expand \"tabort<wd>c\"\n   [(parallel\n@@ -98,8 +97,7 @@\n    (set (match_operand:BLK 4) (unspec:BLK [(match_dup 4)] UNSPEC_HTM_FENCE))]\n   \"TARGET_HTM\"\n   \"tabort<wd>c. %0,%1,%2\"\n-  [(set_attr \"type\" \"htmsimple\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"htmsimple\")])\n \n (define_expand \"tabort<wd>ci\"\n   [(parallel\n@@ -124,8 +122,7 @@\n    (set (match_operand:BLK 4) (unspec:BLK [(match_dup 4)] UNSPEC_HTM_FENCE))]\n   \"TARGET_HTM\"\n   \"tabort<wd>ci. %0,%1,%2\"\n-  [(set_attr \"type\" \"htmsimple\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"htmsimple\")])\n \n (define_expand \"tbegin\"\n   [(parallel\n@@ -146,8 +143,7 @@\n    (set (match_operand:BLK 2) (unspec:BLK [(match_dup 2)] UNSPEC_HTM_FENCE))]\n   \"TARGET_HTM\"\n   \"tbegin. %0\"\n-  [(set_attr \"type\" \"htm\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"htm\")])\n \n (define_expand \"tcheck\"\n   [(parallel\n@@ -166,8 +162,7 @@\n    (set (match_operand:BLK 1) (unspec:BLK [(match_dup 1)] UNSPEC_HTM_FENCE))]\n   \"TARGET_HTM\"\n   \"tcheck %0\"\n-  [(set_attr \"type\" \"htm\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"htm\")])\n \n (define_expand \"tend\"\n   [(parallel\n@@ -188,8 +183,7 @@\n    (set (match_operand:BLK 2) (unspec:BLK [(match_dup 2)] UNSPEC_HTM_FENCE))]\n   \"TARGET_HTM\"\n   \"tend. %0\"\n-  [(set_attr \"type\" \"htm\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"htm\")])\n \n (define_expand \"trechkpt\"\n   [(parallel\n@@ -208,8 +202,7 @@\n    (set (match_operand:BLK 1) (unspec:BLK [(match_dup 1)] UNSPEC_HTM_FENCE))]\n   \"TARGET_HTM\"\n   \"trechkpt.\"\n-  [(set_attr \"type\" \"htmsimple\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"htmsimple\")])\n \n (define_expand \"treclaim\"\n   [(parallel\n@@ -230,8 +223,7 @@\n    (set (match_operand:BLK 2) (unspec:BLK [(match_dup 2)] UNSPEC_HTM_FENCE))]\n   \"TARGET_HTM\"\n   \"treclaim. %0\"\n-  [(set_attr \"type\" \"htmsimple\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"htmsimple\")])\n \n (define_expand \"tsr\"\n   [(parallel\n@@ -252,8 +244,7 @@\n    (set (match_operand:BLK 2) (unspec:BLK [(match_dup 2)] UNSPEC_HTM_FENCE))]\n   \"TARGET_HTM\"\n   \"tsr. %0\"\n-  [(set_attr \"type\" \"htmsimple\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"htmsimple\")])\n \n (define_expand \"ttest\"\n   [(parallel\n@@ -272,8 +263,7 @@\n    (set (match_operand:BLK 1) (unspec:BLK [(match_dup 1)] UNSPEC_HTM_FENCE))]\n   \"TARGET_HTM\"\n   \"tabortwci. 0,1,0\"\n-  [(set_attr \"type\" \"htmsimple\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"htmsimple\")])\n \n (define_insn \"htm_mfspr_<mode>\"\n   [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r\")\n@@ -282,8 +272,7 @@\n \t\t\t     UNSPECV_HTM_MFSPR))]\n   \"TARGET_HTM\"\n   \"mfspr %0,%1\";\n-  [(set_attr \"type\" \"htm\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"htm\")])\n \n (define_insn \"htm_mtspr_<mode>\"\n   [(set (match_operand:GPR 2 \"htm_spr_reg_operand\" \"\")\n@@ -292,5 +281,4 @@\n \t\t\t     UNSPECV_HTM_MTSPR))]\n   \"TARGET_HTM\"\n   \"mtspr %1,%0\";\n-  [(set_attr \"type\" \"htm\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"htm\")])"}, {"sha": "50c264f0dc1b83a10b68e3c23e94b4b7aabee43e", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 19, "deletions": 38, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b24a46beddca2278e1879b1ed5086bfd957eebb7/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b24a46beddca2278e1879b1ed5086bfd957eebb7/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=b24a46beddca2278e1879b1ed5086bfd957eebb7", "patch": "@@ -2378,17 +2378,15 @@\n \t (bswap:HSI (match_operand:HSI 1 \"memory_operand\" \"Z\"))))]\n   \"TARGET_POWERPC64\"\n   \"l<wd>brx %0,%y1\"\n-  [(set_attr \"length\" \"4\")\n-   (set_attr \"type\" \"load\")])\n+  [(set_attr \"type\" \"load\")])\n \n (define_insn \"*bswaphi2_extendsi\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n \t(zero_extend:SI\n \t (bswap:HI (match_operand:HI 1 \"memory_operand\" \"Z\"))))]\n   \"\"\n   \"lhbrx %0,%y1\"\n-  [(set_attr \"length\" \"4\")\n-   (set_attr \"type\" \"load\")])\n+  [(set_attr \"type\" \"load\")])\n \n ;; Separate the bswap patterns into load, store, and gpr<-gpr.  This prevents\n ;; the register allocator from converting a gpr<-gpr swap into a store and then\n@@ -6080,8 +6078,7 @@\n   \"@\n    fcfidu %0,%1\n    xscvuxddp %x0,%x1\"\n-  [(set_attr \"type\" \"fp\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"fp\")])\n \n (define_insn_and_split \"*floatunsdidf2_mem\"\n   [(set (match_operand:DF 0 \"gpc_reg_operand\" \"=d,ws\")\n@@ -6696,8 +6693,7 @@\n                            (match_operand 2 \"\" \"\"))))]\n   \"TARGET_MACHO && ! TARGET_64BIT\"\n   \"lwz %0,lo16(%2)(%1)\"\n-  [(set_attr \"type\" \"load\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"load\")])\n \n ;;\t\tMR           LA           LWZ          LFIWZX       LXSIWZX\n ;;\t\tSTW          STFIWX       STXSIWX      LI           LIS\n@@ -9407,8 +9403,7 @@\n \t\t\t(match_operand:TLSmode 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t       UNSPEC_TLSGD)))]\n   \"HAVE_AS_TLS && TARGET_TLS_MARKERS && TARGET_CMODEL != CMODEL_SMALL\"\n-  \"addis %0,%1,%2@got@tlsgd@ha\"\n-  [(set_attr \"length\" \"4\")])\n+  \"addis %0,%1,%2@got@tlsgd@ha\")\n \n (define_insn \"*tls_gd_low<TLSmode:tls_abi_suffix>\"\n   [(set (match_operand:TLSmode 0 \"gpc_reg_operand\" \"=b\")\n@@ -9417,8 +9412,7 @@\n \t\t\t(match_operand:TLSmode 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t       UNSPEC_TLSGD)))]\n   \"HAVE_AS_TLS && TARGET_TLS_MARKERS && TARGET_CMODEL != CMODEL_SMALL\"\n-  \"addi %0,%1,%2@got@tlsgd@l\"\n-  [(set_attr \"length\" \"4\")])\n+  \"addi %0,%1,%2@got@tlsgd@l\")\n \n (define_insn \"*tls_gd_call_aix<TLSmode:tls_abi_suffix>\"\n   [(set (match_operand:TLSmode 0 \"gpc_reg_operand\" \"=b\")\n@@ -9542,8 +9536,7 @@\n \t\t\t(match_operand:TLSmode 1 \"gpc_reg_operand\" \"b\")]\n \t\t       UNSPEC_TLSLD)))]\n   \"HAVE_AS_TLS && TARGET_TLS_MARKERS && TARGET_CMODEL != CMODEL_SMALL\"\n-  \"addis %0,%1,%&@got@tlsld@ha\"\n-  [(set_attr \"length\" \"4\")])\n+  \"addis %0,%1,%&@got@tlsld@ha\")\n \n (define_insn \"*tls_ld_low<TLSmode:tls_abi_suffix>\"\n   [(set (match_operand:TLSmode 0 \"gpc_reg_operand\" \"=b\")\n@@ -9552,8 +9545,7 @@\n                         (match_operand:TLSmode 2 \"gpc_reg_operand\" \"b\")]\n                        UNSPEC_TLSLD)))]\n   \"HAVE_AS_TLS && TARGET_TLS_MARKERS && TARGET_CMODEL != CMODEL_SMALL\"\n-  \"addi %0,%1,%&@got@tlsld@l\"\n-  [(set_attr \"length\" \"4\")])\n+  \"addi %0,%1,%&@got@tlsld@l\")\n \n (define_insn \"*tls_ld_call_aix<TLSmode:tls_abi_suffix>\"\n   [(set (match_operand:TLSmode 0 \"gpc_reg_operand\" \"=b\")\n@@ -9638,8 +9630,7 @@\n \t\t\t(match_operand:TLSmode 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t       UNSPEC_TLSGOTDTPREL)))]\n   \"HAVE_AS_TLS && TARGET_CMODEL != CMODEL_SMALL\"\n-  \"addis %0,%1,%2@got@dtprel@ha\"\n-  [(set_attr \"length\" \"4\")])\n+  \"addis %0,%1,%2@got@dtprel@ha\")\n \n (define_insn \"*tls_got_dtprel_low<TLSmode:tls_abi_suffix>\"\n   [(set (match_operand:TLSmode 0 \"gpc_reg_operand\" \"=r\")\n@@ -9648,8 +9639,7 @@\n \t\t\t  (match_operand:TLSmode 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t\t UNSPEC_TLSGOTDTPREL)))]\n   \"HAVE_AS_TLS && TARGET_CMODEL != CMODEL_SMALL\"\n-  \"l<TLSmode:tls_insn_suffix> %0,%2@got@dtprel@l(%1)\"\n-  [(set_attr \"length\" \"4\")])\n+  \"l<TLSmode:tls_insn_suffix> %0,%2@got@dtprel@l(%1)\")\n \n (define_insn \"tls_tprel_<TLSmode:tls_abi_suffix>\"\n   [(set (match_operand:TLSmode 0 \"gpc_reg_operand\" \"=r\")\n@@ -9707,8 +9697,7 @@\n \t\t\t(match_operand:TLSmode 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t       UNSPEC_TLSGOTTPREL)))]\n   \"HAVE_AS_TLS && TARGET_CMODEL != CMODEL_SMALL\"\n-  \"addis %0,%1,%2@got@tprel@ha\"\n-  [(set_attr \"length\" \"4\")])\n+  \"addis %0,%1,%2@got@tprel@ha\")\n \n (define_insn \"*tls_got_tprel_low<TLSmode:tls_abi_suffix>\"\n   [(set (match_operand:TLSmode 0 \"gpc_reg_operand\" \"=r\")\n@@ -9717,8 +9706,7 @@\n \t\t\t  (match_operand:TLSmode 2 \"rs6000_tls_symbol_ref\" \"\")]\n \t\t\t UNSPEC_TLSGOTTPREL)))]\n   \"HAVE_AS_TLS && TARGET_CMODEL != CMODEL_SMALL\"\n-  \"l<TLSmode:tls_insn_suffix> %0,%2@got@tprel@l(%1)\"\n-  [(set_attr \"length\" \"4\")])\n+  \"l<TLSmode:tls_insn_suffix> %0,%2@got@tprel@l(%1)\")\n \n (define_insn \"tls_tls_<TLSmode:tls_abi_suffix>\"\n   [(set (match_operand:TLSmode 0 \"gpc_reg_operand\" \"=r\")\n@@ -11098,8 +11086,7 @@\n    (set (attr \"indexed\")\n \t(if_then_else (match_operand 0 \"indexed_address_mem\")\n \t\t      (const_string \"yes\")\n-\t\t      (const_string \"no\")))\n-   (set_attr \"length\" \"4\")])\n+\t\t      (const_string \"no\")))])\n \n (define_insn \"probe_stack_range<P:mode>\"\n   [(set (match_operand:P 0 \"register_operand\" \"=&r\")\n@@ -12347,8 +12334,7 @@\n {\n   return output_cbranch (operands[0], NULL, 0, insn);\n }\n-  [(set_attr \"type\" \"jmpreg\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"jmpreg\")])\n \n ;; Logic on condition register values.\n \n@@ -13859,26 +13845,23 @@\n \t\t   UNSPEC_ADDG6S))]\n   \"TARGET_POPCNTD\"\n   \"addg6s %0,%1,%2\"\n-  [(set_attr \"type\" \"integer\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"integer\")])\n \n (define_insn \"cdtbcd\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(unspec:SI [(match_operand:SI 1 \"register_operand\" \"r\")]\n \t\t   UNSPEC_CDTBCD))]\n   \"TARGET_POPCNTD\"\n   \"cdtbcd %0,%1\"\n-  [(set_attr \"type\" \"integer\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"integer\")])\n \n (define_insn \"cbcdtd\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n \t(unspec:SI [(match_operand:SI 1 \"register_operand\" \"r\")]\n \t\t   UNSPEC_CBCDTD))]\n   \"TARGET_POPCNTD\"\n   \"cbcdtd %0,%1\"\n-  [(set_attr \"type\" \"integer\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"integer\")])\n \n (define_int_iterator UNSPEC_DIV_EXTEND [UNSPEC_DIVE\n \t\t\t\t\tUNSPEC_DIVEU])\n@@ -13935,8 +13918,7 @@\n \n   operands[3] = gen_rtx_REG (<FP128_64>mode, fp_regno);\n }\n-  [(set_attr \"type\" \"fp,fpstore,mffgpr,mftgpr,store\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"fp,fpstore,mffgpr,mftgpr,store\")])\n \n (define_insn_and_split \"unpack<mode>_nodm\"\n   [(set (match_operand:<FP128_64> 0 \"nonimmediate_operand\" \"=d,m\")\n@@ -13959,8 +13941,7 @@\n \n   operands[3] = gen_rtx_REG (<FP128_64>mode, fp_regno);\n }\n-  [(set_attr \"type\" \"fp,fpstore\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"fp,fpstore\")])\n \n (define_insn_and_split \"pack<mode>\"\n   [(set (match_operand:FMOVE128 0 \"register_operand\" \"=&d\")"}, {"sha": "ee98049cdd81dc1a6fd90853e0ed1abc7fe48b05", "filename": "gcc/config/rs6000/sync.md", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b24a46beddca2278e1879b1ed5086bfd957eebb7/gcc%2Fconfig%2Frs6000%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b24a46beddca2278e1879b1ed5086bfd957eebb7/gcc%2Fconfig%2Frs6000%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsync.md?ref=b24a46beddca2278e1879b1ed5086bfd957eebb7", "patch": "@@ -132,8 +132,7 @@\n   \"TARGET_SYNC_TI\n    && !reg_mentioned_p (operands[0], operands[1])\"\n   \"lq %0,%1\"\n-  [(set_attr \"type\" \"load\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"load\")])\n \n (define_expand \"atomic_load<mode>\"\n   [(set (match_operand:AINT 0 \"register_operand\")\t\t;; output\n@@ -196,8 +195,7 @@\n \t [(match_operand:PTI 1 \"quad_int_reg_operand\" \"r\")] UNSPEC_LSQ))]\n   \"TARGET_SYNC_TI\"\n   \"stq %1,%0\"\n-  [(set_attr \"type\" \"store\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"store\")])\n \n (define_expand \"atomic_store<mode>\"\n   [(set (match_operand:AINT 0 \"memory_operand\")\t\t;; memory"}, {"sha": "c3c099f40e949bb49acfa3a58886f78cd300a2d1", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b24a46beddca2278e1879b1ed5086bfd957eebb7/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b24a46beddca2278e1879b1ed5086bfd957eebb7/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=b24a46beddca2278e1879b1ed5086bfd957eebb7", "patch": "@@ -3267,8 +3267,7 @@\n    stfd%U0%X0 %1,%0\n    stxsd%U0x %x1,%y0\n    stxsd %1,%0\"\n-  [(set_attr \"type\" \"fpstore\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"fpstore\")])\n \n ;; Variable V2DI/V2DF extract shift\n (define_insn \"vsx_vslo_<mode>\""}]}