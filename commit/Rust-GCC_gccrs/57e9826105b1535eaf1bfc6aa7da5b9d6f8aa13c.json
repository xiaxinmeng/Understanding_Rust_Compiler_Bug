{"sha": "57e9826105b1535eaf1bfc6aa7da5b9d6f8aa13c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdlOTgyNjEwNWIxNTM1ZWFmMWJmYzZhYTdkYTViOWQ2ZjhhYTEzYw==", "commit": {"author": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2000-01-21T10:36:05Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2000-01-21T10:36:05Z"}, "message": "Typo fix.\n\nFrom-SVN: r31548", "tree": {"sha": "27e81671f40ee2a5cfcbae20d2fd396140bb8f7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27e81671f40ee2a5cfcbae20d2fd396140bb8f7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57e9826105b1535eaf1bfc6aa7da5b9d6f8aa13c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57e9826105b1535eaf1bfc6aa7da5b9d6f8aa13c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57e9826105b1535eaf1bfc6aa7da5b9d6f8aa13c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57e9826105b1535eaf1bfc6aa7da5b9d6f8aa13c/comments", "author": null, "committer": null, "parents": [{"sha": "fb0d0f72c6dd0887730ece9c63eb2c6248a851fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb0d0f72c6dd0887730ece9c63eb2c6248a851fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb0d0f72c6dd0887730ece9c63eb2c6248a851fe"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "4b24c26f109f7bc2b4db899c58932e37dfebbda5", "filename": "gcc/alias.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57e9826105b1535eaf1bfc6aa7da5b9d6f8aa13c/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57e9826105b1535eaf1bfc6aa7da5b9d6f8aa13c/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=57e9826105b1535eaf1bfc6aa7da5b9d6f8aa13c", "patch": "@@ -1185,7 +1185,7 @@ read_dependence (mem, x)\n    MEM2 if vice versa.  Otherwise, returns NULL_RTX.  If a non-NULL\n    value is returned MEM1 and MEM2 can never alias.  VARIES_P is used\n    to decide whether or not an address may vary; it should return\n-   nozero whenever variation is possible.  */\n+   nonzero whenever variation is possible.  */\n \n static rtx\n fixed_scalar_and_varying_struct_p (mem1, mem2, varies_p)"}]}