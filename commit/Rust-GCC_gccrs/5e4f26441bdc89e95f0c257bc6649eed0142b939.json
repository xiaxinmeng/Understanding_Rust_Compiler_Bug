{"sha": "5e4f26441bdc89e95f0c257bc6649eed0142b939", "node_id": "C_kwDOANBUbNoAKDVlNGYyNjQ0MWJkYzg5ZTk1ZjBjMjU3YmM2NjQ5ZWVkMDE0MmI5Mzk", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-08-01T18:19:49Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-08-02T12:50:25Z"}, "message": "More frange::set cleanups.\n\ngcc/ChangeLog:\n\n\t* value-range.cc (frange::set): Initialize m_props and cleanup.", "tree": {"sha": "a2c2cec0453097fe70d4432306ec043fed9ee0c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2c2cec0453097fe70d4432306ec043fed9ee0c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e4f26441bdc89e95f0c257bc6649eed0142b939", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e4f26441bdc89e95f0c257bc6649eed0142b939", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e4f26441bdc89e95f0c257bc6649eed0142b939", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e4f26441bdc89e95f0c257bc6649eed0142b939/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f3514756e0b4d8993ee43dcd958974eb1424061", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f3514756e0b4d8993ee43dcd958974eb1424061", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f3514756e0b4d8993ee43dcd958974eb1424061"}], "stats": {"total": 47, "additions": 28, "deletions": 19}, "files": [{"sha": "dd5a4303908563f9820401986bf377174a772b57", "filename": "gcc/value-range.cc", "status": "modified", "additions": 28, "deletions": 19, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e4f26441bdc89e95f0c257bc6649eed0142b939/gcc%2Fvalue-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e4f26441bdc89e95f0c257bc6649eed0142b939/gcc%2Fvalue-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.cc?ref=5e4f26441bdc89e95f0c257bc6649eed0142b939", "patch": "@@ -292,38 +292,47 @@ frange::set (tree min, tree max, value_range_kind kind)\n \n   m_kind = kind;\n   m_type = TREE_TYPE (min);\n-\n-  // Mark NANness.\n-  if (real_isnan (TREE_REAL_CST_PTR (min))\n-      || real_isnan (TREE_REAL_CST_PTR (max)))\n-    {\n-      gcc_checking_assert (operand_equal_p (min, max));\n-      m_props.nan_set_yes ();\n-    }\n-  else\n-    m_props.nan_set_no ();\n+  m_props.set_varying ();\n \n   bool is_min = vrp_val_is_min (min);\n   bool is_max = vrp_val_is_max (max);\n+  bool is_nan = (real_isnan (TREE_REAL_CST_PTR (min))\n+\t\t || real_isnan (TREE_REAL_CST_PTR (max)));\n \n-  // Mark when the endpoints can't be INF.\n-  if (!is_min)\n-    m_props.ninf_set_no ();\n-  if (!is_max)\n-    m_props.inf_set_no ();\n+  // Ranges with a NAN and a non-NAN endpoint are nonsensical.\n+  gcc_checking_assert (!is_nan || operand_equal_p (min, max));\n \n-  // Mark when the endpoints are definitely INF.\n+  // The properties for singletons can be all set ahead of time.\n   if (operand_equal_p (min, max))\n     {\n+      // Set INF properties.\n       if (is_min)\n \tm_props.ninf_set_yes ();\n-      else if (is_max)\n+      else\n+\tm_props.ninf_set_no ();\n+      if (is_max)\n \tm_props.inf_set_yes ();\n+      else\n+\tm_props.inf_set_no ();\n+      // Set NAN property.\n+      if (is_nan)\n+\tm_props.nan_set_yes ();\n+      else\n+\tm_props.nan_set_no ();\n+    }\n+  else\n+    {\n+      // Mark when the endpoints can't be +-INF.\n+      if (!is_min)\n+\tm_props.ninf_set_no ();\n+      if (!is_max)\n+\tm_props.inf_set_no ();\n     }\n \n   // Check for swapped ranges.\n-  gcc_checking_assert (m_props.nan_yes_p ()\n-\t\t       || tree_compare (LE_EXPR, min, max));\n+  gcc_checking_assert (is_nan || tree_compare (LE_EXPR, min, max));\n+\n+  normalize_kind ();\n \n   if (flag_checking)\n     verify_range ();"}]}