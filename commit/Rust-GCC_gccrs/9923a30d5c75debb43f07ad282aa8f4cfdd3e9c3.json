{"sha": "9923a30d5c75debb43f07ad282aa8f4cfdd3e9c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTkyM2EzMGQ1Yzc1ZGViYjQzZjA3YWQyODJhYThmNGNmZGQzZTljMw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-05-13T14:57:49Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1995-05-13T14:57:49Z"}, "message": "(back_branch_in_range_p): No longer static.\n\nFrom-SVN: r9677", "tree": {"sha": "e617fd34785ae3ffbc1e41aaa4ec232e6f4aa9a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e617fd34785ae3ffbc1e41aaa4ec232e6f4aa9a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9923a30d5c75debb43f07ad282aa8f4cfdd3e9c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9923a30d5c75debb43f07ad282aa8f4cfdd3e9c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9923a30d5c75debb43f07ad282aa8f4cfdd3e9c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9923a30d5c75debb43f07ad282aa8f4cfdd3e9c3/comments", "author": null, "committer": null, "parents": [{"sha": "09dcbd74f9c6a4173c48bb46284bea45f5ef0146", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09dcbd74f9c6a4173c48bb46284bea45f5ef0146", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09dcbd74f9c6a4173c48bb46284bea45f5ef0146"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "400b43bbe0b6ee2edabc9c96cdd9fa23a09fcb3e", "filename": "gcc/unroll.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9923a30d5c75debb43f07ad282aa8f4cfdd3e9c3/gcc%2Funroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9923a30d5c75debb43f07ad282aa8f4cfdd3e9c3/gcc%2Funroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funroll.c?ref=9923a30d5c75debb43f07ad282aa8f4cfdd3e9c3", "patch": "@@ -200,7 +200,6 @@ static rtx initial_reg_note_copy PROTO((rtx, struct inline_remap *));\n static void final_reg_note_copy PROTO((rtx, struct inline_remap *));\n static void copy_loop_body PROTO((rtx, rtx, struct inline_remap *, rtx, int,\n \t\t\t\t  enum unroll_types, rtx, rtx, rtx, rtx));\n-static int back_branch_in_range_p PROTO((rtx, rtx, rtx));\n static void iteration_info PROTO((rtx, rtx *, rtx *, rtx, rtx));\n static rtx approx_final_value PROTO((enum rtx_code, rtx, int *, int *));\n static int find_splittable_regs PROTO((enum unroll_types, rtx, rtx, rtx, int));\n@@ -2021,7 +2020,7 @@ emit_unrolled_add (dest_reg, src_reg, increment)\n    In practice, this is not a problem, because this function is seldom called,\n    and uses a negligible amount of CPU time on average.  */\n \n-static int\n+int\n back_branch_in_range_p (insn, loop_start, loop_end)\n      rtx insn;\n      rtx loop_start, loop_end;"}]}