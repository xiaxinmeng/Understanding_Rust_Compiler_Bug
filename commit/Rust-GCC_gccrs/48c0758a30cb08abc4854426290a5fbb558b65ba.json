{"sha": "48c0758a30cb08abc4854426290a5fbb558b65ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhjMDc1OGEzMGNiMDhhYmM0ODU0NDI2MjkwYTVmYmI1NThiNjViYQ==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2017-02-28T14:17:29Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2017-02-28T14:17:29Z"}, "message": "[ARM] Fix PR79742 incorrect scheduler choice.\n\nDue to an oversight, the changes to use the new CPU generation tables\nforgot to handle selecting a scheduler for a CPU other than the named\nCPU target.  This meant that if, say, cortex-a12 was used, the null\nscheduler was chosen rather than cortex-a17's scheduler as intended.\nThe fix is to correctly use the 'tune for' field when generating the\ntarget-specific data files.\n\nThis revealed a spelling mistake in the name of the tune target in\ncortex-m0.small-multiply.\n\n\tPR target/79742\n\t* config/arm/parsecpu.awk (gen_data): Set tuning target to 'tune for'\n\tentry, if present.\n\t* config/arm/arm-cpus.in (cortex-m0plus.small-multiply): Correct\n\t'tune for' CPU name.\n\t* config/arm/arm-cpu-data.h: Regenerated.\n\nFrom-SVN: r245775", "tree": {"sha": "821f6d7579271274c6e9ea247e5952d214a33cca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/821f6d7579271274c6e9ea247e5952d214a33cca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48c0758a30cb08abc4854426290a5fbb558b65ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48c0758a30cb08abc4854426290a5fbb558b65ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48c0758a30cb08abc4854426290a5fbb558b65ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48c0758a30cb08abc4854426290a5fbb558b65ba/comments", "author": null, "committer": null, "parents": [{"sha": "b54f986e4d2d49cf690deb3bd78fd6c177f1adaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b54f986e4d2d49cf690deb3bd78fd6c177f1adaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b54f986e4d2d49cf690deb3bd78fd6c177f1adaa"}], "stats": {"total": 354, "additions": 241, "deletions": 113}, "files": [{"sha": "ccbe5a3d612aed906ff9b4b2cc0374e4dc2d983c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48c0758a30cb08abc4854426290a5fbb558b65ba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48c0758a30cb08abc4854426290a5fbb558b65ba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=48c0758a30cb08abc4854426290a5fbb558b65ba", "patch": "@@ -1,3 +1,12 @@\n+2017-02-28  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR target/79742\n+\t* config/arm/parsecpu.awk (gen_data): Set tuning target to 'tune for'\n+\tentry, if present.\n+\t* config/arm/arm-cpus.in (cortex-m0plus.small-multiply): Correct\n+\t'tune for' CPU name.\n+\t* config/arm/arm-cpu-data.h: Regenerated.\n+\n 2017-02-28  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/79732"}, {"sha": "8d47e7c74929da5e7ac8eb41c2e1caa127b3b04d", "filename": "gcc/config/arm/arm-cpu-data.h", "status": "modified", "additions": 220, "deletions": 110, "changes": 330, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48c0758a30cb08abc4854426290a5fbb558b65ba/gcc%2Fconfig%2Farm%2Farm-cpu-data.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48c0758a30cb08abc4854426290a5fbb558b65ba/gcc%2Fconfig%2Farm%2Farm-cpu-data.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cpu-data.h?ref=48c0758a30cb08abc4854426290a5fbb558b65ba", "patch": "@@ -23,7 +23,8 @@\n static const struct processors all_cores[] =\n {\n   {\n-    \"arm2\", TARGET_CPU_arm2,\n+    \"arm2\",\n+    TARGET_CPU_arm2,\n     (TF_CO_PROC | TF_NO_MODE32),\n     \"2\", BASE_ARCH_2,\n     {\n@@ -33,7 +34,8 @@ static const struct processors all_cores[] =\n     &arm_slowmul_tune\n   },\n   {\n-    \"arm250\", TARGET_CPU_arm250,\n+    \"arm250\",\n+    TARGET_CPU_arm250,\n     (TF_CO_PROC | TF_NO_MODE32),\n     \"2\", BASE_ARCH_2,\n     {\n@@ -43,7 +45,8 @@ static const struct processors all_cores[] =\n     &arm_slowmul_tune\n   },\n   {\n-    \"arm3\", TARGET_CPU_arm3,\n+    \"arm3\",\n+    TARGET_CPU_arm3,\n     (TF_CO_PROC | TF_NO_MODE32),\n     \"2\", BASE_ARCH_2,\n     {\n@@ -53,7 +56,8 @@ static const struct processors all_cores[] =\n     &arm_slowmul_tune\n   },\n   {\n-    \"arm6\", TARGET_CPU_arm6,\n+    \"arm6\",\n+    TARGET_CPU_arm6,\n     (TF_CO_PROC),\n     \"3\", BASE_ARCH_3,\n     {\n@@ -63,7 +67,8 @@ static const struct processors all_cores[] =\n     &arm_slowmul_tune\n   },\n   {\n-    \"arm60\", TARGET_CPU_arm60,\n+    \"arm60\",\n+    TARGET_CPU_arm60,\n     (TF_CO_PROC),\n     \"3\", BASE_ARCH_3,\n     {\n@@ -73,7 +78,8 @@ static const struct processors all_cores[] =\n     &arm_slowmul_tune\n   },\n   {\n-    \"arm600\", TARGET_CPU_arm600,\n+    \"arm600\",\n+    TARGET_CPU_arm600,\n     (TF_CO_PROC | TF_WBUF),\n     \"3\", BASE_ARCH_3,\n     {\n@@ -83,7 +89,8 @@ static const struct processors all_cores[] =\n     &arm_slowmul_tune\n   },\n   {\n-    \"arm610\", TARGET_CPU_arm610,\n+    \"arm610\",\n+    TARGET_CPU_arm610,\n     (TF_WBUF),\n     \"3\", BASE_ARCH_3,\n     {\n@@ -93,7 +100,8 @@ static const struct processors all_cores[] =\n     &arm_slowmul_tune\n   },\n   {\n-    \"arm620\", TARGET_CPU_arm620,\n+    \"arm620\",\n+    TARGET_CPU_arm620,\n     (TF_CO_PROC | TF_WBUF),\n     \"3\", BASE_ARCH_3,\n     {\n@@ -103,7 +111,8 @@ static const struct processors all_cores[] =\n     &arm_slowmul_tune\n   },\n   {\n-    \"arm7\", TARGET_CPU_arm7,\n+    \"arm7\",\n+    TARGET_CPU_arm7,\n     (TF_CO_PROC),\n     \"3\", BASE_ARCH_3,\n     {\n@@ -113,7 +122,8 @@ static const struct processors all_cores[] =\n     &arm_slowmul_tune\n   },\n   {\n-    \"arm7d\", TARGET_CPU_arm7d,\n+    \"arm7d\",\n+    TARGET_CPU_arm7d,\n     (TF_CO_PROC),\n     \"3\", BASE_ARCH_3,\n     {\n@@ -123,7 +133,8 @@ static const struct processors all_cores[] =\n     &arm_slowmul_tune\n   },\n   {\n-    \"arm7di\", TARGET_CPU_arm7di,\n+    \"arm7di\",\n+    TARGET_CPU_arm7di,\n     (TF_CO_PROC),\n     \"3\", BASE_ARCH_3,\n     {\n@@ -133,7 +144,8 @@ static const struct processors all_cores[] =\n     &arm_slowmul_tune\n   },\n   {\n-    \"arm70\", TARGET_CPU_arm70,\n+    \"arm70\",\n+    TARGET_CPU_arm70,\n     (TF_CO_PROC),\n     \"3\", BASE_ARCH_3,\n     {\n@@ -143,7 +155,8 @@ static const struct processors all_cores[] =\n     &arm_slowmul_tune\n   },\n   {\n-    \"arm700\", TARGET_CPU_arm700,\n+    \"arm700\",\n+    TARGET_CPU_arm700,\n     (TF_CO_PROC | TF_WBUF),\n     \"3\", BASE_ARCH_3,\n     {\n@@ -153,7 +166,8 @@ static const struct processors all_cores[] =\n     &arm_slowmul_tune\n   },\n   {\n-    \"arm700i\", TARGET_CPU_arm700i,\n+    \"arm700i\",\n+    TARGET_CPU_arm700i,\n     (TF_CO_PROC | TF_WBUF),\n     \"3\", BASE_ARCH_3,\n     {\n@@ -163,7 +177,8 @@ static const struct processors all_cores[] =\n     &arm_slowmul_tune\n   },\n   {\n-    \"arm710\", TARGET_CPU_arm710,\n+    \"arm710\",\n+    TARGET_CPU_arm710,\n     (TF_WBUF),\n     \"3\", BASE_ARCH_3,\n     {\n@@ -173,7 +188,8 @@ static const struct processors all_cores[] =\n     &arm_slowmul_tune\n   },\n   {\n-    \"arm720\", TARGET_CPU_arm720,\n+    \"arm720\",\n+    TARGET_CPU_arm720,\n     (TF_WBUF),\n     \"3\", BASE_ARCH_3,\n     {\n@@ -183,7 +199,8 @@ static const struct processors all_cores[] =\n     &arm_slowmul_tune\n   },\n   {\n-    \"arm710c\", TARGET_CPU_arm710c,\n+    \"arm710c\",\n+    TARGET_CPU_arm710c,\n     (TF_WBUF),\n     \"3\", BASE_ARCH_3,\n     {\n@@ -193,7 +210,8 @@ static const struct processors all_cores[] =\n     &arm_slowmul_tune\n   },\n   {\n-    \"arm7100\", TARGET_CPU_arm7100,\n+    \"arm7100\",\n+    TARGET_CPU_arm7100,\n     (TF_WBUF),\n     \"3\", BASE_ARCH_3,\n     {\n@@ -203,7 +221,8 @@ static const struct processors all_cores[] =\n     &arm_slowmul_tune\n   },\n   {\n-    \"arm7500\", TARGET_CPU_arm7500,\n+    \"arm7500\",\n+    TARGET_CPU_arm7500,\n     (TF_WBUF),\n     \"3\", BASE_ARCH_3,\n     {\n@@ -213,7 +232,8 @@ static const struct processors all_cores[] =\n     &arm_slowmul_tune\n   },\n   {\n-    \"arm7500fe\", TARGET_CPU_arm7500fe,\n+    \"arm7500fe\",\n+    TARGET_CPU_arm7500fe,\n     (TF_CO_PROC | TF_WBUF),\n     \"3\", BASE_ARCH_3,\n     {\n@@ -223,7 +243,8 @@ static const struct processors all_cores[] =\n     &arm_slowmul_tune\n   },\n   {\n-    \"arm7m\", TARGET_CPU_arm7m,\n+    \"arm7m\",\n+    TARGET_CPU_arm7m,\n     (TF_CO_PROC),\n     \"3M\", BASE_ARCH_3M,\n     {\n@@ -233,7 +254,8 @@ static const struct processors all_cores[] =\n     &arm_fastmul_tune\n   },\n   {\n-    \"arm7dm\", TARGET_CPU_arm7dm,\n+    \"arm7dm\",\n+    TARGET_CPU_arm7dm,\n     (TF_CO_PROC),\n     \"3M\", BASE_ARCH_3M,\n     {\n@@ -243,7 +265,8 @@ static const struct processors all_cores[] =\n     &arm_fastmul_tune\n   },\n   {\n-    \"arm7dmi\", TARGET_CPU_arm7dmi,\n+    \"arm7dmi\",\n+    TARGET_CPU_arm7dmi,\n     (TF_CO_PROC),\n     \"3M\", BASE_ARCH_3M,\n     {\n@@ -253,7 +276,8 @@ static const struct processors all_cores[] =\n     &arm_fastmul_tune\n   },\n   {\n-    \"arm8\", TARGET_CPU_arm8,\n+    \"arm8\",\n+    TARGET_CPU_arm8,\n     (TF_LDSCHED),\n     \"4\", BASE_ARCH_4,\n     {\n@@ -263,7 +287,8 @@ static const struct processors all_cores[] =\n     &arm_fastmul_tune\n   },\n   {\n-    \"arm810\", TARGET_CPU_arm810,\n+    \"arm810\",\n+    TARGET_CPU_arm810,\n     (TF_LDSCHED),\n     \"4\", BASE_ARCH_4,\n     {\n@@ -273,7 +298,8 @@ static const struct processors all_cores[] =\n     &arm_fastmul_tune\n   },\n   {\n-    \"strongarm\", TARGET_CPU_strongarm,\n+    \"strongarm\",\n+    TARGET_CPU_strongarm,\n     (TF_LDSCHED | TF_STRONG),\n     \"4\", BASE_ARCH_4,\n     {\n@@ -283,7 +309,8 @@ static const struct processors all_cores[] =\n     &arm_strongarm_tune\n   },\n   {\n-    \"strongarm110\", TARGET_CPU_strongarm110,\n+    \"strongarm110\",\n+    TARGET_CPU_strongarm110,\n     (TF_LDSCHED | TF_STRONG),\n     \"4\", BASE_ARCH_4,\n     {\n@@ -293,7 +320,8 @@ static const struct processors all_cores[] =\n     &arm_strongarm_tune\n   },\n   {\n-    \"strongarm1100\", TARGET_CPU_strongarm1100,\n+    \"strongarm1100\",\n+    TARGET_CPU_strongarm1100,\n     (TF_LDSCHED | TF_STRONG),\n     \"4\", BASE_ARCH_4,\n     {\n@@ -303,7 +331,8 @@ static const struct processors all_cores[] =\n     &arm_strongarm_tune\n   },\n   {\n-    \"strongarm1110\", TARGET_CPU_strongarm1110,\n+    \"strongarm1110\",\n+    TARGET_CPU_strongarm1110,\n     (TF_LDSCHED | TF_STRONG),\n     \"4\", BASE_ARCH_4,\n     {\n@@ -313,7 +342,8 @@ static const struct processors all_cores[] =\n     &arm_strongarm_tune\n   },\n   {\n-    \"fa526\", TARGET_CPU_fa526,\n+    \"fa526\",\n+    TARGET_CPU_fa526,\n     (TF_LDSCHED),\n     \"4\", BASE_ARCH_4,\n     {\n@@ -323,7 +353,8 @@ static const struct processors all_cores[] =\n     &arm_fastmul_tune\n   },\n   {\n-    \"fa626\", TARGET_CPU_fa626,\n+    \"fa626\",\n+    TARGET_CPU_fa626,\n     (TF_LDSCHED),\n     \"4\", BASE_ARCH_4,\n     {\n@@ -333,7 +364,8 @@ static const struct processors all_cores[] =\n     &arm_fastmul_tune\n   },\n   {\n-    \"arm7tdmi\", TARGET_CPU_arm7tdmi,\n+    \"arm7tdmi\",\n+    TARGET_CPU_arm7tdmi,\n     (TF_CO_PROC),\n     \"4T\", BASE_ARCH_4T,\n     {\n@@ -343,7 +375,8 @@ static const struct processors all_cores[] =\n     &arm_fastmul_tune\n   },\n   {\n-    \"arm7tdmi-s\", TARGET_CPU_arm7tdmis,\n+    \"arm7tdmi-s\",\n+    TARGET_CPU_arm7tdmis,\n     (TF_CO_PROC),\n     \"4T\", BASE_ARCH_4T,\n     {\n@@ -353,7 +386,8 @@ static const struct processors all_cores[] =\n     &arm_fastmul_tune\n   },\n   {\n-    \"arm710t\", TARGET_CPU_arm710t,\n+    \"arm710t\",\n+    TARGET_CPU_arm710t,\n     (TF_WBUF),\n     \"4T\", BASE_ARCH_4T,\n     {\n@@ -363,7 +397,8 @@ static const struct processors all_cores[] =\n     &arm_fastmul_tune\n   },\n   {\n-    \"arm720t\", TARGET_CPU_arm720t,\n+    \"arm720t\",\n+    TARGET_CPU_arm720t,\n     (TF_WBUF),\n     \"4T\", BASE_ARCH_4T,\n     {\n@@ -373,7 +408,8 @@ static const struct processors all_cores[] =\n     &arm_fastmul_tune\n   },\n   {\n-    \"arm740t\", TARGET_CPU_arm740t,\n+    \"arm740t\",\n+    TARGET_CPU_arm740t,\n     (TF_WBUF),\n     \"4T\", BASE_ARCH_4T,\n     {\n@@ -383,7 +419,8 @@ static const struct processors all_cores[] =\n     &arm_fastmul_tune\n   },\n   {\n-    \"arm9\", TARGET_CPU_arm9,\n+    \"arm9\",\n+    TARGET_CPU_arm9,\n     (TF_LDSCHED),\n     \"4T\", BASE_ARCH_4T,\n     {\n@@ -393,7 +430,8 @@ static const struct processors all_cores[] =\n     &arm_fastmul_tune\n   },\n   {\n-    \"arm9tdmi\", TARGET_CPU_arm9tdmi,\n+    \"arm9tdmi\",\n+    TARGET_CPU_arm9tdmi,\n     (TF_LDSCHED),\n     \"4T\", BASE_ARCH_4T,\n     {\n@@ -403,7 +441,8 @@ static const struct processors all_cores[] =\n     &arm_fastmul_tune\n   },\n   {\n-    \"arm920\", TARGET_CPU_arm920,\n+    \"arm920\",\n+    TARGET_CPU_arm920,\n     (TF_LDSCHED),\n     \"4T\", BASE_ARCH_4T,\n     {\n@@ -413,7 +452,8 @@ static const struct processors all_cores[] =\n     &arm_fastmul_tune\n   },\n   {\n-    \"arm920t\", TARGET_CPU_arm920t,\n+    \"arm920t\",\n+    TARGET_CPU_arm920t,\n     (TF_LDSCHED),\n     \"4T\", BASE_ARCH_4T,\n     {\n@@ -423,7 +463,8 @@ static const struct processors all_cores[] =\n     &arm_fastmul_tune\n   },\n   {\n-    \"arm922t\", TARGET_CPU_arm922t,\n+    \"arm922t\",\n+    TARGET_CPU_arm922t,\n     (TF_LDSCHED),\n     \"4T\", BASE_ARCH_4T,\n     {\n@@ -433,7 +474,8 @@ static const struct processors all_cores[] =\n     &arm_fastmul_tune\n   },\n   {\n-    \"arm940t\", TARGET_CPU_arm940t,\n+    \"arm940t\",\n+    TARGET_CPU_arm940t,\n     (TF_LDSCHED),\n     \"4T\", BASE_ARCH_4T,\n     {\n@@ -443,7 +485,8 @@ static const struct processors all_cores[] =\n     &arm_fastmul_tune\n   },\n   {\n-    \"ep9312\", TARGET_CPU_ep9312,\n+    \"ep9312\",\n+    TARGET_CPU_ep9312,\n     (TF_LDSCHED),\n     \"4T\", BASE_ARCH_4T,\n     {\n@@ -453,7 +496,8 @@ static const struct processors all_cores[] =\n     &arm_fastmul_tune\n   },\n   {\n-    \"arm10tdmi\", TARGET_CPU_arm10tdmi,\n+    \"arm10tdmi\",\n+    TARGET_CPU_arm10tdmi,\n     (TF_LDSCHED),\n     \"5T\", BASE_ARCH_5T,\n     {\n@@ -463,7 +507,8 @@ static const struct processors all_cores[] =\n     &arm_fastmul_tune\n   },\n   {\n-    \"arm1020t\", TARGET_CPU_arm1020t,\n+    \"arm1020t\",\n+    TARGET_CPU_arm1020t,\n     (TF_LDSCHED),\n     \"5T\", BASE_ARCH_5T,\n     {\n@@ -473,7 +518,8 @@ static const struct processors all_cores[] =\n     &arm_fastmul_tune\n   },\n   {\n-    \"arm9e\", TARGET_CPU_arm9e,\n+    \"arm9e\",\n+    TARGET_CPU_arm9e,\n     (TF_LDSCHED),\n     \"5TE\", BASE_ARCH_5TE,\n     {\n@@ -483,7 +529,8 @@ static const struct processors all_cores[] =\n     &arm_9e_tune\n   },\n   {\n-    \"arm946e-s\", TARGET_CPU_arm946es,\n+    \"arm946e-s\",\n+    TARGET_CPU_arm946es,\n     (TF_LDSCHED),\n     \"5TE\", BASE_ARCH_5TE,\n     {\n@@ -493,7 +540,8 @@ static const struct processors all_cores[] =\n     &arm_9e_tune\n   },\n   {\n-    \"arm966e-s\", TARGET_CPU_arm966es,\n+    \"arm966e-s\",\n+    TARGET_CPU_arm966es,\n     (TF_LDSCHED),\n     \"5TE\", BASE_ARCH_5TE,\n     {\n@@ -503,7 +551,8 @@ static const struct processors all_cores[] =\n     &arm_9e_tune\n   },\n   {\n-    \"arm968e-s\", TARGET_CPU_arm968es,\n+    \"arm968e-s\",\n+    TARGET_CPU_arm968es,\n     (TF_LDSCHED),\n     \"5TE\", BASE_ARCH_5TE,\n     {\n@@ -513,7 +562,8 @@ static const struct processors all_cores[] =\n     &arm_9e_tune\n   },\n   {\n-    \"arm10e\", TARGET_CPU_arm10e,\n+    \"arm10e\",\n+    TARGET_CPU_arm10e,\n     (TF_LDSCHED),\n     \"5TE\", BASE_ARCH_5TE,\n     {\n@@ -523,7 +573,8 @@ static const struct processors all_cores[] =\n     &arm_fastmul_tune\n   },\n   {\n-    \"arm1020e\", TARGET_CPU_arm1020e,\n+    \"arm1020e\",\n+    TARGET_CPU_arm1020e,\n     (TF_LDSCHED),\n     \"5TE\", BASE_ARCH_5TE,\n     {\n@@ -533,7 +584,8 @@ static const struct processors all_cores[] =\n     &arm_fastmul_tune\n   },\n   {\n-    \"arm1022e\", TARGET_CPU_arm1022e,\n+    \"arm1022e\",\n+    TARGET_CPU_arm1022e,\n     (TF_LDSCHED),\n     \"5TE\", BASE_ARCH_5TE,\n     {\n@@ -543,7 +595,8 @@ static const struct processors all_cores[] =\n     &arm_fastmul_tune\n   },\n   {\n-    \"xscale\", TARGET_CPU_xscale,\n+    \"xscale\",\n+    TARGET_CPU_xscale,\n     (TF_LDSCHED | TF_XSCALE),\n     \"5TE\", BASE_ARCH_5TE,\n     {\n@@ -554,7 +607,8 @@ static const struct processors all_cores[] =\n     &arm_xscale_tune\n   },\n   {\n-    \"iwmmxt\", TARGET_CPU_iwmmxt,\n+    \"iwmmxt\",\n+    TARGET_CPU_iwmmxt,\n     (TF_LDSCHED | TF_XSCALE),\n     \"5TE\", BASE_ARCH_5TE,\n     {\n@@ -564,7 +618,8 @@ static const struct processors all_cores[] =\n     &arm_xscale_tune\n   },\n   {\n-    \"iwmmxt2\", TARGET_CPU_iwmmxt2,\n+    \"iwmmxt2\",\n+    TARGET_CPU_iwmmxt2,\n     (TF_LDSCHED | TF_XSCALE),\n     \"5TE\", BASE_ARCH_5TE,\n     {\n@@ -574,7 +629,8 @@ static const struct processors all_cores[] =\n     &arm_xscale_tune\n   },\n   {\n-    \"fa606te\", TARGET_CPU_fa606te,\n+    \"fa606te\",\n+    TARGET_CPU_fa606te,\n     (TF_LDSCHED),\n     \"5TE\", BASE_ARCH_5TE,\n     {\n@@ -584,7 +640,8 @@ static const struct processors all_cores[] =\n     &arm_9e_tune\n   },\n   {\n-    \"fa626te\", TARGET_CPU_fa626te,\n+    \"fa626te\",\n+    TARGET_CPU_fa626te,\n     (TF_LDSCHED),\n     \"5TE\", BASE_ARCH_5TE,\n     {\n@@ -594,7 +651,8 @@ static const struct processors all_cores[] =\n     &arm_9e_tune\n   },\n   {\n-    \"fmp626\", TARGET_CPU_fmp626,\n+    \"fmp626\",\n+    TARGET_CPU_fmp626,\n     (TF_LDSCHED),\n     \"5TE\", BASE_ARCH_5TE,\n     {\n@@ -604,7 +662,8 @@ static const struct processors all_cores[] =\n     &arm_9e_tune\n   },\n   {\n-    \"fa726te\", TARGET_CPU_fa726te,\n+    \"fa726te\",\n+    TARGET_CPU_fa726te,\n     (TF_LDSCHED),\n     \"5TE\", BASE_ARCH_5TE,\n     {\n@@ -614,7 +673,8 @@ static const struct processors all_cores[] =\n     &arm_fa726te_tune\n   },\n   {\n-    \"arm926ej-s\", TARGET_CPU_arm926ejs,\n+    \"arm926ej-s\",\n+    TARGET_CPU_arm926ejs,\n     (TF_LDSCHED),\n     \"5TEJ\", BASE_ARCH_5TEJ,\n     {\n@@ -624,7 +684,8 @@ static const struct processors all_cores[] =\n     &arm_9e_tune\n   },\n   {\n-    \"arm1026ej-s\", TARGET_CPU_arm1026ejs,\n+    \"arm1026ej-s\",\n+    TARGET_CPU_arm1026ejs,\n     (TF_LDSCHED),\n     \"5TEJ\", BASE_ARCH_5TEJ,\n     {\n@@ -634,7 +695,8 @@ static const struct processors all_cores[] =\n     &arm_9e_tune\n   },\n   {\n-    \"arm1136j-s\", TARGET_CPU_arm1136js,\n+    \"arm1136j-s\",\n+    TARGET_CPU_arm1136js,\n     (TF_LDSCHED),\n     \"6J\", BASE_ARCH_6J,\n     {\n@@ -644,7 +706,8 @@ static const struct processors all_cores[] =\n     &arm_9e_tune\n   },\n   {\n-    \"arm1136jf-s\", TARGET_CPU_arm1136jfs,\n+    \"arm1136jf-s\",\n+    TARGET_CPU_arm1136jfs,\n     (TF_LDSCHED),\n     \"6J\", BASE_ARCH_6J,\n     {\n@@ -655,7 +718,8 @@ static const struct processors all_cores[] =\n     &arm_9e_tune\n   },\n   {\n-    \"arm1176jz-s\", TARGET_CPU_arm1176jzs,\n+    \"arm1176jz-s\",\n+    TARGET_CPU_arm1176jzs,\n     (TF_LDSCHED),\n     \"6KZ\", BASE_ARCH_6KZ,\n     {\n@@ -665,7 +729,8 @@ static const struct processors all_cores[] =\n     &arm_9e_tune\n   },\n   {\n-    \"arm1176jzf-s\", TARGET_CPU_arm1176jzfs,\n+    \"arm1176jzf-s\",\n+    TARGET_CPU_arm1176jzfs,\n     (TF_LDSCHED),\n     \"6KZ\", BASE_ARCH_6KZ,\n     {\n@@ -676,7 +741,8 @@ static const struct processors all_cores[] =\n     &arm_9e_tune\n   },\n   {\n-    \"mpcorenovfp\", TARGET_CPU_mpcorenovfp,\n+    \"mpcorenovfp\",\n+    TARGET_CPU_mpcorenovfp,\n     (TF_LDSCHED),\n     \"6K\", BASE_ARCH_6K,\n     {\n@@ -686,7 +752,8 @@ static const struct processors all_cores[] =\n     &arm_9e_tune\n   },\n   {\n-    \"mpcore\", TARGET_CPU_mpcore,\n+    \"mpcore\",\n+    TARGET_CPU_mpcore,\n     (TF_LDSCHED),\n     \"6K\", BASE_ARCH_6K,\n     {\n@@ -697,7 +764,8 @@ static const struct processors all_cores[] =\n     &arm_9e_tune\n   },\n   {\n-    \"arm1156t2-s\", TARGET_CPU_arm1156t2s,\n+    \"arm1156t2-s\",\n+    TARGET_CPU_arm1156t2s,\n     (TF_LDSCHED),\n     \"6T2\", BASE_ARCH_6T2,\n     {\n@@ -707,7 +775,8 @@ static const struct processors all_cores[] =\n     &arm_v6t2_tune\n   },\n   {\n-    \"arm1156t2f-s\", TARGET_CPU_arm1156t2fs,\n+    \"arm1156t2f-s\",\n+    TARGET_CPU_arm1156t2fs,\n     (TF_LDSCHED),\n     \"6T2\", BASE_ARCH_6T2,\n     {\n@@ -718,7 +787,8 @@ static const struct processors all_cores[] =\n     &arm_v6t2_tune\n   },\n   {\n-    \"cortex-m1\", TARGET_CPU_cortexm1,\n+    \"cortex-m1\",\n+    TARGET_CPU_cortexm1,\n     (TF_LDSCHED),\n     \"6M\", BASE_ARCH_6M,\n     {\n@@ -728,7 +798,8 @@ static const struct processors all_cores[] =\n     &arm_v6m_tune\n   },\n   {\n-    \"cortex-m0\", TARGET_CPU_cortexm0,\n+    \"cortex-m0\",\n+    TARGET_CPU_cortexm0,\n     (TF_LDSCHED),\n     \"6M\", BASE_ARCH_6M,\n     {\n@@ -738,7 +809,8 @@ static const struct processors all_cores[] =\n     &arm_v6m_tune\n   },\n   {\n-    \"cortex-m0plus\", TARGET_CPU_cortexm0plus,\n+    \"cortex-m0plus\",\n+    TARGET_CPU_cortexm0plus,\n     (TF_LDSCHED),\n     \"6M\", BASE_ARCH_6M,\n     {\n@@ -748,7 +820,8 @@ static const struct processors all_cores[] =\n     &arm_v6m_tune\n   },\n   {\n-    \"cortex-m1.small-multiply\", TARGET_CPU_cortexm1smallmultiply,\n+    \"cortex-m1.small-multiply\",\n+    TARGET_CPU_cortexm1,\n     (TF_LDSCHED | TF_SMALLMUL),\n     \"6M\", BASE_ARCH_6M,\n     {\n@@ -758,7 +831,8 @@ static const struct processors all_cores[] =\n     &arm_v6m_tune\n   },\n   {\n-    \"cortex-m0.small-multiply\", TARGET_CPU_cortexm0smallmultiply,\n+    \"cortex-m0.small-multiply\",\n+    TARGET_CPU_cortexm0,\n     (TF_LDSCHED | TF_SMALLMUL),\n     \"6M\", BASE_ARCH_6M,\n     {\n@@ -768,7 +842,8 @@ static const struct processors all_cores[] =\n     &arm_v6m_tune\n   },\n   {\n-    \"cortex-m0plus.small-multiply\", TARGET_CPU_cortexm0plussmallmultiply,\n+    \"cortex-m0plus.small-multiply\",\n+    TARGET_CPU_cortexm0plus,\n     (TF_LDSCHED | TF_SMALLMUL),\n     \"6M\", BASE_ARCH_6M,\n     {\n@@ -778,7 +853,8 @@ static const struct processors all_cores[] =\n     &arm_v6m_tune\n   },\n   {\n-    \"generic-armv7-a\", TARGET_CPU_genericv7a,\n+    \"generic-armv7-a\",\n+    TARGET_CPU_genericv7a,\n     (TF_LDSCHED),\n     \"7A\", BASE_ARCH_7A,\n     {\n@@ -788,7 +864,8 @@ static const struct processors all_cores[] =\n     &arm_cortex_tune\n   },\n   {\n-    \"cortex-a5\", TARGET_CPU_cortexa5,\n+    \"cortex-a5\",\n+    TARGET_CPU_cortexa5,\n     (TF_LDSCHED),\n     \"7A\", BASE_ARCH_7A,\n     {\n@@ -798,7 +875,8 @@ static const struct processors all_cores[] =\n     &arm_cortex_a5_tune\n   },\n   {\n-    \"cortex-a7\", TARGET_CPU_cortexa7,\n+    \"cortex-a7\",\n+    TARGET_CPU_cortexa7,\n     (TF_LDSCHED),\n     \"7A\", BASE_ARCH_7A,\n     {\n@@ -808,7 +886,8 @@ static const struct processors all_cores[] =\n     &arm_cortex_a7_tune\n   },\n   {\n-    \"cortex-a8\", TARGET_CPU_cortexa8,\n+    \"cortex-a8\",\n+    TARGET_CPU_cortexa8,\n     (TF_LDSCHED),\n     \"7A\", BASE_ARCH_7A,\n     {\n@@ -818,7 +897,8 @@ static const struct processors all_cores[] =\n     &arm_cortex_a8_tune\n   },\n   {\n-    \"cortex-a9\", TARGET_CPU_cortexa9,\n+    \"cortex-a9\",\n+    TARGET_CPU_cortexa9,\n     (TF_LDSCHED),\n     \"7A\", BASE_ARCH_7A,\n     {\n@@ -828,7 +908,8 @@ static const struct processors all_cores[] =\n     &arm_cortex_a9_tune\n   },\n   {\n-    \"cortex-a12\", TARGET_CPU_cortexa12,\n+    \"cortex-a12\",\n+    TARGET_CPU_cortexa17,\n     (TF_LDSCHED),\n     \"7A\", BASE_ARCH_7A,\n     {\n@@ -838,7 +919,8 @@ static const struct processors all_cores[] =\n     &arm_cortex_a12_tune\n   },\n   {\n-    \"cortex-a15\", TARGET_CPU_cortexa15,\n+    \"cortex-a15\",\n+    TARGET_CPU_cortexa15,\n     (TF_LDSCHED),\n     \"7A\", BASE_ARCH_7A,\n     {\n@@ -848,7 +930,8 @@ static const struct processors all_cores[] =\n     &arm_cortex_a15_tune\n   },\n   {\n-    \"cortex-a17\", TARGET_CPU_cortexa17,\n+    \"cortex-a17\",\n+    TARGET_CPU_cortexa17,\n     (TF_LDSCHED),\n     \"7A\", BASE_ARCH_7A,\n     {\n@@ -858,7 +941,8 @@ static const struct processors all_cores[] =\n     &arm_cortex_a12_tune\n   },\n   {\n-    \"cortex-r4\", TARGET_CPU_cortexr4,\n+    \"cortex-r4\",\n+    TARGET_CPU_cortexr4,\n     (TF_LDSCHED),\n     \"7R\", BASE_ARCH_7R,\n     {\n@@ -868,7 +952,8 @@ static const struct processors all_cores[] =\n     &arm_cortex_tune\n   },\n   {\n-    \"cortex-r4f\", TARGET_CPU_cortexr4f,\n+    \"cortex-r4f\",\n+    TARGET_CPU_cortexr4f,\n     (TF_LDSCHED),\n     \"7R\", BASE_ARCH_7R,\n     {\n@@ -878,7 +963,8 @@ static const struct processors all_cores[] =\n     &arm_cortex_tune\n   },\n   {\n-    \"cortex-r5\", TARGET_CPU_cortexr5,\n+    \"cortex-r5\",\n+    TARGET_CPU_cortexr5,\n     (TF_LDSCHED),\n     \"7R\", BASE_ARCH_7R,\n     {\n@@ -889,7 +975,8 @@ static const struct processors all_cores[] =\n     &arm_cortex_tune\n   },\n   {\n-    \"cortex-r7\", TARGET_CPU_cortexr7,\n+    \"cortex-r7\",\n+    TARGET_CPU_cortexr7,\n     (TF_LDSCHED),\n     \"7R\", BASE_ARCH_7R,\n     {\n@@ -900,7 +987,8 @@ static const struct processors all_cores[] =\n     &arm_cortex_tune\n   },\n   {\n-    \"cortex-r8\", TARGET_CPU_cortexr8,\n+    \"cortex-r8\",\n+    TARGET_CPU_cortexr7,\n     (TF_LDSCHED),\n     \"7R\", BASE_ARCH_7R,\n     {\n@@ -911,7 +999,8 @@ static const struct processors all_cores[] =\n     &arm_cortex_tune\n   },\n   {\n-    \"cortex-m7\", TARGET_CPU_cortexm7,\n+    \"cortex-m7\",\n+    TARGET_CPU_cortexm7,\n     (TF_LDSCHED),\n     \"7EM\", BASE_ARCH_7EM,\n     {\n@@ -922,7 +1011,8 @@ static const struct processors all_cores[] =\n     &arm_cortex_m7_tune\n   },\n   {\n-    \"cortex-m4\", TARGET_CPU_cortexm4,\n+    \"cortex-m4\",\n+    TARGET_CPU_cortexm4,\n     (TF_LDSCHED),\n     \"7EM\", BASE_ARCH_7EM,\n     {\n@@ -932,7 +1022,8 @@ static const struct processors all_cores[] =\n     &arm_v7m_tune\n   },\n   {\n-    \"cortex-m3\", TARGET_CPU_cortexm3,\n+    \"cortex-m3\",\n+    TARGET_CPU_cortexm3,\n     (TF_LDSCHED),\n     \"7M\", BASE_ARCH_7M,\n     {\n@@ -943,7 +1034,8 @@ static const struct processors all_cores[] =\n     &arm_v7m_tune\n   },\n   {\n-    \"marvell-pj4\", TARGET_CPU_marvell_pj4,\n+    \"marvell-pj4\",\n+    TARGET_CPU_marvell_pj4,\n     (TF_LDSCHED),\n     \"7A\", BASE_ARCH_7A,\n     {\n@@ -953,7 +1045,8 @@ static const struct processors all_cores[] =\n     &arm_marvell_pj4_tune\n   },\n   {\n-    \"cortex-a15.cortex-a7\", TARGET_CPU_cortexa15cortexa7,\n+    \"cortex-a15.cortex-a7\",\n+    TARGET_CPU_cortexa7,\n     (TF_LDSCHED),\n     \"7A\", BASE_ARCH_7A,\n     {\n@@ -963,7 +1056,8 @@ static const struct processors all_cores[] =\n     &arm_cortex_a15_tune\n   },\n   {\n-    \"cortex-a17.cortex-a7\", TARGET_CPU_cortexa17cortexa7,\n+    \"cortex-a17.cortex-a7\",\n+    TARGET_CPU_cortexa7,\n     (TF_LDSCHED),\n     \"7A\", BASE_ARCH_7A,\n     {\n@@ -973,7 +1067,8 @@ static const struct processors all_cores[] =\n     &arm_cortex_a12_tune\n   },\n   {\n-    \"cortex-a32\", TARGET_CPU_cortexa32,\n+    \"cortex-a32\",\n+    TARGET_CPU_cortexa53,\n     (TF_LDSCHED),\n     \"8A\", BASE_ARCH_8A,\n     {\n@@ -983,7 +1078,8 @@ static const struct processors all_cores[] =\n     &arm_cortex_a35_tune\n   },\n   {\n-    \"cortex-a35\", TARGET_CPU_cortexa35,\n+    \"cortex-a35\",\n+    TARGET_CPU_cortexa53,\n     (TF_LDSCHED),\n     \"8A\", BASE_ARCH_8A,\n     {\n@@ -993,7 +1089,8 @@ static const struct processors all_cores[] =\n     &arm_cortex_a35_tune\n   },\n   {\n-    \"cortex-a53\", TARGET_CPU_cortexa53,\n+    \"cortex-a53\",\n+    TARGET_CPU_cortexa53,\n     (TF_LDSCHED),\n     \"8A\", BASE_ARCH_8A,\n     {\n@@ -1003,7 +1100,8 @@ static const struct processors all_cores[] =\n     &arm_cortex_a53_tune\n   },\n   {\n-    \"cortex-a57\", TARGET_CPU_cortexa57,\n+    \"cortex-a57\",\n+    TARGET_CPU_cortexa57,\n     (TF_LDSCHED),\n     \"8A\", BASE_ARCH_8A,\n     {\n@@ -1013,7 +1111,8 @@ static const struct processors all_cores[] =\n     &arm_cortex_a57_tune\n   },\n   {\n-    \"cortex-a72\", TARGET_CPU_cortexa72,\n+    \"cortex-a72\",\n+    TARGET_CPU_cortexa57,\n     (TF_LDSCHED),\n     \"8A\", BASE_ARCH_8A,\n     {\n@@ -1023,7 +1122,8 @@ static const struct processors all_cores[] =\n     &arm_cortex_a57_tune\n   },\n   {\n-    \"cortex-a73\", TARGET_CPU_cortexa73,\n+    \"cortex-a73\",\n+    TARGET_CPU_cortexa57,\n     (TF_LDSCHED),\n     \"8A\", BASE_ARCH_8A,\n     {\n@@ -1033,7 +1133,8 @@ static const struct processors all_cores[] =\n     &arm_cortex_a73_tune\n   },\n   {\n-    \"exynos-m1\", TARGET_CPU_exynosm1,\n+    \"exynos-m1\",\n+    TARGET_CPU_exynosm1,\n     (TF_LDSCHED),\n     \"8A\", BASE_ARCH_8A,\n     {\n@@ -1043,7 +1144,8 @@ static const struct processors all_cores[] =\n     &arm_exynosm1_tune\n   },\n   {\n-    \"falkor\", TARGET_CPU_falkor,\n+    \"falkor\",\n+    TARGET_CPU_cortexa57,\n     (TF_LDSCHED),\n     \"8A\", BASE_ARCH_8A,\n     {\n@@ -1053,7 +1155,8 @@ static const struct processors all_cores[] =\n     &arm_qdf24xx_tune\n   },\n   {\n-    \"qdf24xx\", TARGET_CPU_qdf24xx,\n+    \"qdf24xx\",\n+    TARGET_CPU_cortexa57,\n     (TF_LDSCHED),\n     \"8A\", BASE_ARCH_8A,\n     {\n@@ -1063,7 +1166,8 @@ static const struct processors all_cores[] =\n     &arm_qdf24xx_tune\n   },\n   {\n-    \"xgene1\", TARGET_CPU_xgene1,\n+    \"xgene1\",\n+    TARGET_CPU_xgene1,\n     (TF_LDSCHED),\n     \"8A\", BASE_ARCH_8A,\n     {\n@@ -1073,7 +1177,8 @@ static const struct processors all_cores[] =\n     &arm_xgene1_tune\n   },\n   {\n-    \"cortex-a57.cortex-a53\", TARGET_CPU_cortexa57cortexa53,\n+    \"cortex-a57.cortex-a53\",\n+    TARGET_CPU_cortexa53,\n     (TF_LDSCHED),\n     \"8A\", BASE_ARCH_8A,\n     {\n@@ -1083,7 +1188,8 @@ static const struct processors all_cores[] =\n     &arm_cortex_a57_tune\n   },\n   {\n-    \"cortex-a72.cortex-a53\", TARGET_CPU_cortexa72cortexa53,\n+    \"cortex-a72.cortex-a53\",\n+    TARGET_CPU_cortexa53,\n     (TF_LDSCHED),\n     \"8A\", BASE_ARCH_8A,\n     {\n@@ -1093,7 +1199,8 @@ static const struct processors all_cores[] =\n     &arm_cortex_a57_tune\n   },\n   {\n-    \"cortex-a73.cortex-a35\", TARGET_CPU_cortexa73cortexa35,\n+    \"cortex-a73.cortex-a35\",\n+    TARGET_CPU_cortexa53,\n     (TF_LDSCHED),\n     \"8A\", BASE_ARCH_8A,\n     {\n@@ -1103,7 +1210,8 @@ static const struct processors all_cores[] =\n     &arm_cortex_a73_tune\n   },\n   {\n-    \"cortex-a73.cortex-a53\", TARGET_CPU_cortexa73cortexa53,\n+    \"cortex-a73.cortex-a53\",\n+    TARGET_CPU_cortexa53,\n     (TF_LDSCHED),\n     \"8A\", BASE_ARCH_8A,\n     {\n@@ -1113,7 +1221,8 @@ static const struct processors all_cores[] =\n     &arm_cortex_a73_tune\n   },\n   {\n-    \"cortex-m23\", TARGET_CPU_cortexm23,\n+    \"cortex-m23\",\n+    TARGET_CPU_cortexm23,\n     (TF_LDSCHED),\n     \"8M_BASE\", BASE_ARCH_8M_BASE,\n     {\n@@ -1123,7 +1232,8 @@ static const struct processors all_cores[] =\n     &arm_v6m_tune\n   },\n   {\n-    \"cortex-m33\", TARGET_CPU_cortexm33,\n+    \"cortex-m33\",\n+    TARGET_CPU_cortexm33,\n     (TF_LDSCHED),\n     \"8M_MAIN\", BASE_ARCH_8M_MAIN,\n     {"}, {"sha": "d116b09eabba47adcc3ed749e3bfa3339b47686e", "filename": "gcc/config/arm/arm-cpus.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48c0758a30cb08abc4854426290a5fbb558b65ba/gcc%2Fconfig%2Farm%2Farm-cpus.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48c0758a30cb08abc4854426290a5fbb558b65ba/gcc%2Fconfig%2Farm%2Farm-cpus.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cpus.in?ref=48c0758a30cb08abc4854426290a5fbb558b65ba", "patch": "@@ -814,7 +814,7 @@ end cpu cortex-m0.small-multiply\n \n begin cpu cortex-m0plus.small-multiply\n  cname cortexm0plussmallmultiply\n- tune for cortexm0-plus\n+ tune for cortex-m0plus\n  tune flags LDSCHED SMALLMUL\n  architecture armv6-m\n  costs v6m"}, {"sha": "dac11a009eee4eb6dd6a28b2eef8a7956fcc1beb", "filename": "gcc/config/arm/parsecpu.awk", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48c0758a30cb08abc4854426290a5fbb558b65ba/gcc%2Fconfig%2Farm%2Fparsecpu.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48c0758a30cb08abc4854426290a5fbb558b65ba/gcc%2Fconfig%2Farm%2Fparsecpu.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fparsecpu.awk?ref=48c0758a30cb08abc4854426290a5fbb558b65ba", "patch": "@@ -124,7 +124,16 @@ function gen_data () {\n \n     for (n = 1; n <= ncpus; n++) {\n \tprint \"  {\"\n-\tprint \"    \\\"\" cpus[n] \"\\\", TARGET_CPU_\" cpu_cnames[cpus[n]] \",\"\n+\tprint \"    \\\"\" cpus[n] \"\\\",\"\n+\tif (cpus[n] in cpu_tune_for) {\n+\t    if (! (cpu_tune_for[cpus[n]] in cpu_cnames)) {\n+\t\tfatal(\"unknown \\\"tune for\\\" target \" cpu_tune_for[cpus[n]] \\\n+\t\t      \" for CPU \" cpus[n])\n+\t    }\n+\t    print \"    TARGET_CPU_\" cpu_cnames[cpu_tune_for[cpus[n]]] \",\"\n+\t} else {\n+\t    print \"    TARGET_CPU_\" cpu_cnames[cpus[n]] \",\"\n+\t}\n \tif (cpus[n] in cpu_tune_flags) {\n \t    print \"    (\" cpu_tune_flags[cpus[n]] \"),\"\n \t} else print \"    0,\"\n@@ -156,7 +165,7 @@ function gen_data () {\n \tprint \"  {\"\n \tif (! (arch_tune_for[archs[n]] in cpu_cnames)) {\n \t    fatal(\"unknown \\\"tune for\\\" target \" arch_tune_for[archs[n]] \\\n-\t\t  \"for architecture \" archs[n])\n+\t\t  \" for architecture \" archs[n])\n \t}\n \tprint \"    \\\"\" archs[n] \\\n \t    \"\\\", TARGET_CPU_\" cpu_cnames[arch_tune_for[archs[n]]] \",\""}]}