{"sha": "d13c6b70cbbd9b29e0dc776b6b0ae724cd286c9f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDEzYzZiNzBjYmJkOWIyOWUwZGM3NzZiNmIwYWU3MjRjZDI4NmM5Zg==", "commit": {"author": {"name": "Evgeny Gavrin", "email": "e.gavrin@samsung.com", "date": "2013-09-13T22:36:42Z"}, "committer": {"name": "Cary Coutant", "email": "ccoutant@gcc.gnu.org", "date": "2013-09-13T22:36:42Z"}, "message": "dwarf2out.c (should_emit_struct_debug): Add check for type_decl variable is not NULL.\n\n2013-09-13  Evgeny Gavrin <e.gavrin@samsung.com>\n\ngcc/\n        * dwarf2out.c (should_emit_struct_debug): Add check\n        for type_decl variable is not NULL.\n\ngcc/testsuite\n        * gcc.dg/debug/dwarf2/omp-fesdr.c: Add test.\n        * g++.dg/debug/dwarf2/omp-fesdr.C: Add test.\n\nFrom-SVN: r202582", "tree": {"sha": "0e097fead708e49c8767b756bf9a39bffaa4f5a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e097fead708e49c8767b756bf9a39bffaa4f5a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d13c6b70cbbd9b29e0dc776b6b0ae724cd286c9f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d13c6b70cbbd9b29e0dc776b6b0ae724cd286c9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d13c6b70cbbd9b29e0dc776b6b0ae724cd286c9f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d13c6b70cbbd9b29e0dc776b6b0ae724cd286c9f/comments", "author": {"login": "egavrin", "id": 782710, "node_id": "MDQ6VXNlcjc4MjcxMA==", "avatar_url": "https://avatars.githubusercontent.com/u/782710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/egavrin", "html_url": "https://github.com/egavrin", "followers_url": "https://api.github.com/users/egavrin/followers", "following_url": "https://api.github.com/users/egavrin/following{/other_user}", "gists_url": "https://api.github.com/users/egavrin/gists{/gist_id}", "starred_url": "https://api.github.com/users/egavrin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/egavrin/subscriptions", "organizations_url": "https://api.github.com/users/egavrin/orgs", "repos_url": "https://api.github.com/users/egavrin/repos", "events_url": "https://api.github.com/users/egavrin/events{/privacy}", "received_events_url": "https://api.github.com/users/egavrin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6e5e985e1e99e39513f9172845296e6aa7e1a9a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e5e985e1e99e39513f9172845296e6aa7e1a9a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e5e985e1e99e39513f9172845296e6aa7e1a9a7"}], "stats": {"total": 92, "additions": 88, "deletions": 4}, "files": [{"sha": "0224228f253df2f3e32325fa870c153ba4b73e78", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d13c6b70cbbd9b29e0dc776b6b0ae724cd286c9f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d13c6b70cbbd9b29e0dc776b6b0ae724cd286c9f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d13c6b70cbbd9b29e0dc776b6b0ae724cd286c9f", "patch": "@@ -1,3 +1,8 @@\n+2013-09-13  Evgeny Gavrin <e.gavrin@samsung.com>\n+\n+        * dwarf2out.c (should_emit_struct_debug): Add check\n+        for type_decl variable is not NULL.\n+\n 2013-09-13  Jacek Caban  <jacek@codeweavers.com>\n \n \t* config.gcc: Use new winnt-c.c target hooks"}, {"sha": "95049e4d18487b65223f204d531f227aa87d2dbf", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d13c6b70cbbd9b29e0dc776b6b0ae724cd286c9f/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d13c6b70cbbd9b29e0dc776b6b0ae724cd286c9f/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=d13c6b70cbbd9b29e0dc776b6b0ae724cd286c9f", "patch": "@@ -365,11 +365,15 @@ should_emit_struct_debug (tree type, enum debug_info_usage usage)\n \n   type_decl = TYPE_STUB_DECL (TYPE_MAIN_VARIANT (type));\n \n-  if (criterion == DINFO_STRUCT_FILE_SYS && DECL_IN_SYSTEM_HEADER (type_decl))\n-    return DUMP_GSTRUCT (type, usage, criterion, generic, false, true);\n+  if (type_decl != NULL)\n+    {\n+     if (criterion == DINFO_STRUCT_FILE_SYS && DECL_IN_SYSTEM_HEADER (type_decl))\n+        return DUMP_GSTRUCT (type, usage, criterion, generic, false, true);\n+\n+      if (matches_main_base (DECL_SOURCE_FILE (type_decl)))\n+        return DUMP_GSTRUCT (type, usage, criterion, generic, true, true);\n+    }\n \n-  if (matches_main_base (DECL_SOURCE_FILE (type_decl)))\n-    return DUMP_GSTRUCT (type, usage, criterion, generic, true, true);\n   return DUMP_GSTRUCT (type, usage, criterion, generic, false, false);\n }\n \f"}, {"sha": "aeff6d08b8aab9efe3a577d2dc65698750d8abb1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d13c6b70cbbd9b29e0dc776b6b0ae724cd286c9f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d13c6b70cbbd9b29e0dc776b6b0ae724cd286c9f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d13c6b70cbbd9b29e0dc776b6b0ae724cd286c9f", "patch": "@@ -1,3 +1,8 @@\n+2013-09-13  Evgeny Gavrin <e.gavrin@samsung.com>\n+\n+        * gcc.dg/debug/dwarf2/omp-fesdr.c: Add test.\n+        * g++.dg/debug/dwarf2/omp-fesdr.C: Add test.\n+\n 2013-09-13  Jacek Caban  <jacek@codeweavers.com>\n \n \t* g++.dg/abi/main.C: Added implicit C linkage tests"}, {"sha": "005acdf08651a3404ac0fac686d67fe309dcc61c", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/omp-fesdr.C", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d13c6b70cbbd9b29e0dc776b6b0ae724cd286c9f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fomp-fesdr.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d13c6b70cbbd9b29e0dc776b6b0ae724cd286c9f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fomp-fesdr.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fomp-fesdr.C?ref=d13c6b70cbbd9b29e0dc776b6b0ae724cd286c9f", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-g -fopenmp -gdwarf-2 -femit-struct-debug-reduced\" } */\n+\n+struct aa\n+{\n+  int a;\n+};\n+\n+int\n+f7 (void)\n+{\n+  int v7i = 6, v7j = 7, v7k = 9, v7l = 0, v7n = 0, v7o = 1;\n+\n+  #pragma omp parallel\n+  {\n+    #pragma omp master\n+    v7o++;\n+    #pragma omp for private (v7i) firstprivate (v7k) reduction (+:v7l)\n+    for (v7n = 0; v7n < 3; v7n++)\n+    {\n+      int v7m = v7j + v7k;\n+      v7i = 8;\n+      v7l++;\n+    }\n+  }\n+\n+  return v7i + v7j + v7k + v7l + v7n;\n+}\n+\n+int\n+main (void)\n+{\n+  f7 ();\n+  return 0;\n+}"}, {"sha": "005acdf08651a3404ac0fac686d67fe309dcc61c", "filename": "gcc/testsuite/gcc.dg/debug/dwarf2/omp-fesdr.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d13c6b70cbbd9b29e0dc776b6b0ae724cd286c9f/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fomp-fesdr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d13c6b70cbbd9b29e0dc776b6b0ae724cd286c9f/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fomp-fesdr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdebug%2Fdwarf2%2Fomp-fesdr.c?ref=d13c6b70cbbd9b29e0dc776b6b0ae724cd286c9f", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-g -fopenmp -gdwarf-2 -femit-struct-debug-reduced\" } */\n+\n+struct aa\n+{\n+  int a;\n+};\n+\n+int\n+f7 (void)\n+{\n+  int v7i = 6, v7j = 7, v7k = 9, v7l = 0, v7n = 0, v7o = 1;\n+\n+  #pragma omp parallel\n+  {\n+    #pragma omp master\n+    v7o++;\n+    #pragma omp for private (v7i) firstprivate (v7k) reduction (+:v7l)\n+    for (v7n = 0; v7n < 3; v7n++)\n+    {\n+      int v7m = v7j + v7k;\n+      v7i = 8;\n+      v7l++;\n+    }\n+  }\n+\n+  return v7i + v7j + v7k + v7l + v7n;\n+}\n+\n+int\n+main (void)\n+{\n+  f7 ();\n+  return 0;\n+}"}]}