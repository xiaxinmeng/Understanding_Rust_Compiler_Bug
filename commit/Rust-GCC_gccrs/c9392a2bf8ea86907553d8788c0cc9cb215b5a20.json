{"sha": "c9392a2bf8ea86907553d8788c0cc9cb215b5a20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzkzOTJhMmJmOGVhODY5MDc1NTNkODc4OGMwY2M5Y2IyMTViNWEyMA==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2005-05-05T15:04:39Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2005-05-05T15:04:39Z"}, "message": "ltconfig: Define file_list_spec.\n\n        * ltconfig: Define file_list_spec.  Pass file_list_spec and\n        with_gnu_ld to libtool.\n        * ltcf-c.sh (aix[45]): Define file_list_spec.\n        * ltcf-cxx.sh (aix[45]): Same.\n        * ltcf-gcj.sh (aix[45]): Same.\n        * ltmain.sh: If command exceeds max_cmd_len and file_list_spec\n        exists, write list of input files to temporary file.\n\nFrom-SVN: r99268", "tree": {"sha": "9dcfd0cb6000a08749cf71a027450c4e0142afdb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9dcfd0cb6000a08749cf71a027450c4e0142afdb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9392a2bf8ea86907553d8788c0cc9cb215b5a20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9392a2bf8ea86907553d8788c0cc9cb215b5a20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9392a2bf8ea86907553d8788c0cc9cb215b5a20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9392a2bf8ea86907553d8788c0cc9cb215b5a20/comments", "author": null, "committer": null, "parents": [{"sha": "c54c7322513c602b6a0e108afc3146ce9cc2b8f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c54c7322513c602b6a0e108afc3146ce9cc2b8f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c54c7322513c602b6a0e108afc3146ce9cc2b8f8"}], "stats": {"total": 174, "additions": 109, "deletions": 65}, "files": [{"sha": "1691020ae5e2d5be63b75fac948964fd95083faf", "filename": "ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9392a2bf8ea86907553d8788c0cc9cb215b5a20/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9392a2bf8ea86907553d8788c0cc9cb215b5a20/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=c9392a2bf8ea86907553d8788c0cc9cb215b5a20", "patch": "@@ -1,3 +1,13 @@\n+2005-05-05  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* ltconfig: Define file_list_spec.  Pass file_list_spec and\n+\twith_gnu_ld to libtool.\n+\t* ltcf-c.sh (aix[45]): Define file_list_spec.\n+\t* ltcf-cxx.sh (aix[45]): Same.\n+\t* ltcf-gcj.sh (aix[45]): Same.\n+\t* ltmain.sh: If command exceeds max_cmd_len and file_list_spec\n+\texists, write list of input files to temporary file.\n+\n 2005-05-04  Mike Stump  <mrs@apple.com>\n \n \t* configure.in: Always pass --target to target configures as"}, {"sha": "f2e5ed02e390e65981f3894f4f5672846eb9a6ad", "filename": "ltcf-c.sh", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9392a2bf8ea86907553d8788c0cc9cb215b5a20/ltcf-c.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9392a2bf8ea86907553d8788c0cc9cb215b5a20/ltcf-c.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ltcf-c.sh?ref=c9392a2bf8ea86907553d8788c0cc9cb215b5a20", "patch": "@@ -267,6 +267,7 @@ else\n     hardcode_direct=yes\n     hardcode_libdir_separator=':'\n     link_all_deplibs=yes\n+    file_list_spec='${wl}-f,'\n     # When large executables or shared objects are built, AIX ld can\n     # have problems creating the table of contents.  If linking a library\n     # or program results in \"error TOC overflow\" add -mminimal-toc to"}, {"sha": "240e40de3e90d43c0ba53be2eee228ccf24744fd", "filename": "ltcf-cxx.sh", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9392a2bf8ea86907553d8788c0cc9cb215b5a20/ltcf-cxx.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9392a2bf8ea86907553d8788c0cc9cb215b5a20/ltcf-cxx.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ltcf-cxx.sh?ref=c9392a2bf8ea86907553d8788c0cc9cb215b5a20", "patch": "@@ -128,6 +128,7 @@ case $host_os in\n     hardcode_direct=yes\n     hardcode_libdir_separator=':'\n     link_all_deplibs=yes\n+    file_list_spec='${wl}-f,'\n     # When large executables or shared objects are built, AIX ld can\n     # have problems creating the table of contents.  If linking a library\n     # or program results in \"error TOC overflow\" add -mminimal-toc to"}, {"sha": "4c6afeb2c27e18ab14c3d2e461dc8aa6aeefc8c4", "filename": "ltcf-gcj.sh", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9392a2bf8ea86907553d8788c0cc9cb215b5a20/ltcf-gcj.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9392a2bf8ea86907553d8788c0cc9cb215b5a20/ltcf-gcj.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ltcf-gcj.sh?ref=c9392a2bf8ea86907553d8788c0cc9cb215b5a20", "patch": "@@ -266,6 +266,7 @@ else\n     hardcode_direct=yes\n     hardcode_libdir_separator=':'\n     link_all_deplibs=yes\n+    file_list_spec='${wl}-f,'\n     # When large executables or shared objects are built, AIX ld can\n     # have problems creating the table of contents.  If linking a library\n     # or program results in \"error TOC overflow\" add -mminimal-toc to"}, {"sha": "53eb9421eab31f3c0155f79ad3a7b13d4d575980", "filename": "ltconfig", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9392a2bf8ea86907553d8788c0cc9cb215b5a20/ltconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9392a2bf8ea86907553d8788c0cc9cb215b5a20/ltconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ltconfig?ref=c9392a2bf8ea86907553d8788c0cc9cb215b5a20", "patch": "@@ -266,6 +266,7 @@ exclude_expsyms=\"_GLOBAL_OFFSET_TABLE_\"\n # rely on this symbol name, it's probably fine to never include it in\n # preloaded symbol tables.\n extract_expsyms_cmds=\n+file_list_spec=\n \n ## Tools:\n old_AR=\"$AR\"\n@@ -2164,7 +2165,7 @@ case $ltmain in\n     finish_cmds finish_eval global_symbol_pipe global_symbol_to_cdecl \\\n     hardcode_libdir_flag_spec hardcode_libdir_separator  \\\n     sys_lib_search_path_spec sys_lib_dlsearch_path_spec \\\n-    compiler_c_o need_locks exclude_expsyms include_expsyms; do\n+    compiler_c_o need_locks exclude_expsyms include_expsyms file_list_spec; do\n \n     case $var in\n     reload_cmds | old_archive_cmds | old_archive_from_new_cmds | \\\n@@ -2557,6 +2558,12 @@ exclude_expsyms=$exclude_expsyms\n # Symbols that must always be exported.\n include_expsyms=$include_expsyms\n \n+# Specify filename containing input files.\n+file_list_spec=$file_list_spec\n+\n+# with_gnu_ld value\n+with_gnu_ld=$with_gnu_ld\n+\n EOF\n \n if test -z \"$tagname\"; then"}, {"sha": "9882b46c96b624a53dd883c19d91382285fa6691", "filename": "ltmain.sh", "status": "modified", "additions": 88, "deletions": 64, "changes": 152, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9392a2bf8ea86907553d8788c0cc9cb215b5a20/ltmain.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9392a2bf8ea86907553d8788c0cc9cb215b5a20/ltmain.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ltmain.sh?ref=c9392a2bf8ea86907553d8788c0cc9cb215b5a20", "patch": "@@ -3272,7 +3272,6 @@ EOF\n           :\n         else\n \t  # The command line is too long to link in one step, link piecewise.\n-          $echo \"creating reloadable object files...\"\n \n \t  # Save the value of $output and $libobjs because we want to\n \t  # use them later.  If we have whole_archive_flag_spec, we\n@@ -3286,6 +3285,7 @@ EOF\n \t    save_libobjs=$libobjs\n \t  fi\n           save_output=$output\n+\t  output_la=`$echo \"X$output\" | $Xsed -e \"s,^.*/,,\"`\n \n \t  # Clear the reloadable object creation command queue and\n \t  # initialize k to one.\n@@ -3295,63 +3295,87 @@ EOF\n           delfiles=\n           last_robj=\n           k=1\n-          output=$output_objdir/$save_output-${k}.$objext\n-\t  # Loop over the list of objects to be linked.\n-          for obj in $save_libobjs\n-          do\n-            eval test_cmds=\\\"$reload_cmds $objlist $last_robj\\\"\n-            if test \"X$objlist\" = X ||\n-\t       { len=`expr \"X$test_cmds\" : \".*\"` &&\n-                 test $len -le $max_cmd_len; }; then\n-              objlist=\"$objlist $obj\"\n-            else\n-\t      # The command $test_cmds is almost too long, add a\n-\t      # command to the queue.\n-              if test $k -eq 1 ; then\n-\t        # The first file doesn't have a previous command to add.\n-                eval concat_cmds=\\\"$reload_cmds $objlist $last_robj\\\"\n-              else\n-\t        # All subsequent reloadable object files will link in\n-\t        # the last one created.\n-                eval concat_cmds=\\\"\\$concat_cmds~$reload_cmds $objlist $last_robj\\\"\n-              fi\n-              last_robj=$output_objdir/$save_output-${k}.$objext\n-              k=`expr $k + 1`\n-              output=$output_objdir/$save_output-${k}.$objext\n-              objlist=$obj\n-              len=1\n-            fi\n-          done\n-\t  # Handle the remaining objects by creating one last\n-\t  # reloadable object file.  All subsequent reloadable object\n-\t  # files will link in the last one created.\n-\t  test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n-          eval concat_cmds=\\\"\\${concat_cmds}$reload_cmds $objlist $last_robj\\\"\n-\n-\t  # Set up a command to remove the reloadale object files\n-\t  # after they are used.\n-          i=0\n-          while test $i -lt $k\n-          do\n-            i=`expr $i + 1`\n-            delfiles=\"$delfiles $output_objdir/$save_output-${i}.$objext\"\n-          done\n \n-          $echo \"creating a temporary reloadable object file: $output\"\n+\t  if test \"$with_gnu_ld\" = yes; then\n+\t    output=${output_objdir}/${output_la}.lnkscript\n+\t    $echo \"creating GNU ld script: $output\"\n+\t    $echo 'INPUT (' > $output\n+\t    for obj in $save_libobjs\n+\t    do\n+\t      $echo \\\"\"$obj\"\\\" >> $output\n+\t    done\n+\t    $echo ')' >> $output\n+\t    delfiles=\"$delfiles $output\"\n+\t  elif test \"X$file_list_spec\" != X; then\n+\t    output=${output_objdir}/${output_la}.lnk\n+\t    $echo \"creating linker input file list: $output\"\n+\t    : > $output\n+\t    for obj in $save_libobjs\n+\t    do\n+\t      $echo \"$obj\" >> $output\n+\t    done\n+\t    delfiles=\"$delfiles $output\"\n+\t    output=\\\"$file_list_spec$output\\\"\n+\t  else\n+\t    $echo \"creating reloadable object files...\"\n+\t    output=$output_objdir/$save_output-${k}.$objext\n+\t    # Loop over the list of objects to be linked.\n+\t    for obj in $save_libobjs\n+\t    do\n+\t      eval test_cmds=\\\"$reload_cmds $objlist $last_robj\\\"\n+\t      if test \"X$objlist\" = X ||\n+\t\t { len=`expr \"X$test_cmds\" : \".*\"` &&\n+\t\t   test $len -le $max_cmd_len; }; then\n+\t\tobjlist=\"$objlist $obj\"\n+\t      else\n+\t\t# The command $test_cmds is almost too long, add a\n+\t\t# command to the queue.\n+\t\tif test $k -eq 1 ; then\n+\t\t  # The first file doesn't have a previous command to add.\n+\t\t  eval concat_cmds=\\\"$reload_cmds $objlist $last_robj\\\"\n+\t\telse\n+\t\t  # All subsequent reloadable object files will link in\n+\t\t  # the last one created.\n+\t\t  eval concat_cmds=\\\"\\$concat_cmds~$reload_cmds $objlist $last_robj\\\"\n+\t\tfi\n+\t\tlast_robj=$output_objdir/$save_output-${k}.$objext\n+\t\tk=`expr $k + 1`\n+\t\toutput=$output_objdir/$save_output-${k}.$objext\n+\t\tobjlist=$obj\n+\t\tlen=1\n+\t      fi\n+\t    done\n+\t    # Handle the remaining objects by creating one last\n+\t    # reloadable object file.  All subsequent reloadable object\n+\t    # files will link in the last one created.\n+\t    test -z \"$concat_cmds\" || concat_cmds=$concat_cmds~\n+\t    eval concat_cmds=\\\"\\${concat_cmds}$reload_cmds $objlist $last_robj\\\"\n+\n+\t    # Set up a command to remove the reloadale object files\n+\t    # after they are used.\n+\t    i=0\n+\t    while test $i -lt $k\n+\t    do\n+\t      i=`expr $i + 1`\n+\t      delfiles=\"$delfiles $output_objdir/$save_output-${i}.$objext\"\n+\t    done\n \n-\t  # Loop through the commands generated above and execute them.\n-          IFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS='~'\n-          for cmd in $concat_cmds; do\n-            IFS=\"$save_ifs\"\n-\t    eval cmd=\\\"$cmd\\\"\n-            $show \"$cmd\"\n-            $run eval \"$cmd\" || exit $?\n-          done\n-          IFS=\"$save_ifs\"\n+\t    $echo \"creating a temporary reloadable object file: $output\"\n \n-          libobjs=$output\n+\t    # Loop through the commands generated above and execute them.\n+\t    IFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS='~'\n+\t    for cmd in $concat_cmds; do\n+\t      IFS=\"$save_ifs\"\n+\t      eval cmd=\\\"$cmd\\\"\n+\t      $show \"$cmd\"\n+\t      $run eval \"$cmd\" || exit $?\n+\t    done\n+\t    IFS=\"$save_ifs\"\n+\t  fi\n+\n+\t  libobjs=$output\n \t  # Restore the value of output.\n-          output=$save_output\n+\t  output=$save_output\n \n \t  if test -n \"$convenience\" && test -n \"$whole_archive_flag_spec\"; then\n \t    eval libobjs=\\\"\\$libobjs $whole_archive_flag_spec\\\"\n@@ -3364,20 +3388,20 @@ EOF\n \t    cmds=$archive_expsym_cmds\n \t  else\n \t    cmds=$archive_cmds\n-          fi\n+\t  fi\n \n \t  # Append the command to remove the reloadable object files\n \t  # to the just-reset $cmds.\n-          eval cmds=\\\"\\$cmds~$rm $delfiles\\\"\n-        fi\n-        IFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS='~'\n-        for cmd in $cmds; do\n-          IFS=\"$save_ifs\"\n+\t  eval cmds=\\\"\\$cmds~$rm $delfiles\\\"\n+\tfi\n+\tIFS=\"${IFS= \t}\"; save_ifs=\"$IFS\"; IFS='~'\n+\tfor cmd in $cmds; do\n+\t  IFS=\"$save_ifs\"\n \t  eval cmd=\\\"$cmd\\\"\n-          $show \"$cmd\"\n-          $run eval \"$cmd\" || exit $?\n-        done\n-        IFS=\"$save_ifs\"\n+\t  $show \"$cmd\"\n+\t  $run eval \"$cmd\" || exit $?\n+\tdone\n+\tIFS=\"$save_ifs\"\n \n \t# Restore the uninstalled library and exit\n \tif test \"$mode\" = relink; then"}]}