{"sha": "f84b87aa9f664a98de1d1c737eaed9b7f6d4b6d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg0Yjg3YWE5ZjY2NGE5OGRlMWQxYzczN2VhZWQ5YjdmNmQ0YjZkOQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-01-29T13:16:35Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-01-29T13:16:35Z"}, "message": "i386.c (ix86_mode_after): Make static.\n\n\t* config/i386/i386.c (ix86_mode_after): Make static.\n\nFrom-SVN: r220245", "tree": {"sha": "64a6b36ec1fc7a0eade56cf8de448abc2c61d95e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64a6b36ec1fc7a0eade56cf8de448abc2c61d95e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f84b87aa9f664a98de1d1c737eaed9b7f6d4b6d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f84b87aa9f664a98de1d1c737eaed9b7f6d4b6d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f84b87aa9f664a98de1d1c737eaed9b7f6d4b6d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f84b87aa9f664a98de1d1c737eaed9b7f6d4b6d9/comments", "author": null, "committer": null, "parents": [{"sha": "62c004451aaecf4d5cfdd0db776165410e017f75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62c004451aaecf4d5cfdd0db776165410e017f75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62c004451aaecf4d5cfdd0db776165410e017f75"}], "stats": {"total": 175, "additions": 92, "deletions": 83}, "files": [{"sha": "1caedf2c8665007b3bbfc815ddca3a7eff7d8334", "filename": "gcc/ChangeLog", "status": "modified", "additions": 91, "deletions": 82, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f84b87aa9f664a98de1d1c737eaed9b7f6d4b6d9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f84b87aa9f664a98de1d1c737eaed9b7f6d4b6d9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f84b87aa9f664a98de1d1c737eaed9b7f6d4b6d9", "patch": "@@ -1,3 +1,7 @@\n+2015-01-29  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (ix86_mode_after): Make static.\n+\n 2015-01-29  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/64844\n@@ -242,32 +246,32 @@\n \n 2015-01-27  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n-        * doc/extend.texi: s/390: Update documentation of hotpatch attribute.\n-        * doc/invoke.texi (-mhotpatch): s/390: Update documentation of\n-        -mhotpatch= option.\n-        * config/s390/s390.opt (mhotpatch): s/390: Remove -mhotpatch and\n-        -mno-hotpatch options.  Change syntax of -mhotpatch= option.\n-        * config/s390/s390.c (s390_hotpatch_trampoline_halfwords_default):\n-        Renamed.\n-        (s390_hotpatch_trampoline_halfwords_max): Renamed.\n-        (s390_hotpatch_hw_max): New name.\n-        (s390_hotpatch_trampoline_halfwords): Renamed.\n-        (s390_hotpatch_hw_before_label): New name.\n-        (get_hotpatch_attribute): Removed.\n-        (s390_hotpatch_hw_after_label): New name.\n-        (s390_handle_hotpatch_attribute): Add second parameter to hotpatch\n-        attribute.\n-        (s390_attribute_table): Ditto.\n-        (s390_function_num_hotpatch_trampoline_halfwords): Renamed.\n-        (s390_function_num_hotpatch_hw): New name.\n-        Remove special handling of inline functions and hotpatching.\n-        Return number of nops before and after the function label.\n-        (s390_can_inline_p): Removed.\n-        (s390_asm_output_function_label): Emit a configurable number of nops\n-        after the function label.\n-        (s390_option_override): Update -mhotpatch= syntax and remove -mhotpatch.\n-        (TARGET_CAN_INLINE_P) Removed.\n-        (TARGET_FUNCTION_ATTRIBUTE_INLINABLE_P): New.\n+\t* doc/extend.texi: s/390: Update documentation of hotpatch attribute.\n+\t* doc/invoke.texi (-mhotpatch): s/390: Update documentation of\n+\t-mhotpatch= option.\n+\t* config/s390/s390.opt (mhotpatch): s/390: Remove -mhotpatch and\n+\t-mno-hotpatch options.  Change syntax of -mhotpatch= option.\n+\t* config/s390/s390.c (s390_hotpatch_trampoline_halfwords_default):\n+\tRenamed.\n+\t(s390_hotpatch_trampoline_halfwords_max): Renamed.\n+\t(s390_hotpatch_hw_max): New name.\n+\t(s390_hotpatch_trampoline_halfwords): Renamed.\n+\t(s390_hotpatch_hw_before_label): New name.\n+\t(get_hotpatch_attribute): Removed.\n+\t(s390_hotpatch_hw_after_label): New name.\n+\t(s390_handle_hotpatch_attribute): Add second parameter to hotpatch\n+\tattribute.\n+\t(s390_attribute_table): Ditto.\n+\t(s390_function_num_hotpatch_trampoline_halfwords): Renamed.\n+\t(s390_function_num_hotpatch_hw): New name.\n+\tRemove special handling of inline functions and hotpatching.\n+\tReturn number of nops before and after the function label.\n+\t(s390_can_inline_p): Removed.\n+\t(s390_asm_output_function_label): Emit a configurable number of nops\n+\tafter the function label.\n+\t(s390_option_override): Update -mhotpatch= syntax and remove -mhotpatch.\n+\t(TARGET_CAN_INLINE_P) Removed.\n+\t(TARGET_FUNCTION_ATTRIBUTE_INLINABLE_P): New.\n \n 2015-01-27  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n \t    Jiong Wang  <jiong.wang@arm.com>\n@@ -374,7 +378,7 @@\n \n 2015-01-26  Uros Bizjak  <ubizjak@gmail.com>\n \n-        PR target/64795\n+\tPR target/64795\n \t* config/i386/i386.md (*movdi_internal): Also check operand 0\n \tto determine TYPE_LEA operand.\n \t(*movsi_internal): Ditto.\n@@ -407,7 +411,7 @@\n \t* config/arm/arm.c (arm_file_start): Update the assignment of\n \tTag_ABI_HardFP_use.\n \n-2014-01-25  James Greenhalgh  <james.greenhalgh@arm.com>\n+2015-01-25  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/arm/arm-cores.def (cortex-a57): Use the new Cortex-A57\n \tpipeline model.\n@@ -814,8 +818,7 @@\n \n 2015-01-21  Alan Hayward  <alan.hayward@arm.com>\n \n-\t* rtlanal.c (subreg_get_info): Exit early for simple and common\n-\tcases.\n+\t* rtlanal.c (subreg_get_info): Exit early for simple and common cases.\n \n 2015-01-21  Richard Henderson  <rth@redhat.com>\n \n@@ -920,11 +923,13 @@\n \n 2015-01-20  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n-\t* config/tilegx/mul-tables.c: Move symtab.h include after coretypes.h include.\n-\t* config/tilepro/mul-tables.c: Add includes hashtab.h, hash-set.h, vec.h,\n-\tmachmode.h, tm.h, hard-reg-set.h, input.h, function.h, rtl.h, flags.h, statistics.h,\n-\tdouble-int.h, real.h, fixed-value.h, alias.h, wide-int.h, inchash.h, tree.h,\n-\tinsn-config.h, expmed.h, dojump.h, explow.h, calls.h, emit-rtl.h, varasm.h, stmt.h.\n+\t* config/tilegx/mul-tables.c: Move symtab.h include after\n+\tcoretypes.h include.\n+\t* config/tilepro/mul-tables.c: Add includes hashtab.h, hash-set.h,\n+\tvec.h, machmode.h, tm.h, hard-reg-set.h, input.h, function.h, rtl.h,\n+\tflags.h, statistics.h, double-int.h, real.h, fixed-value.h, alias.h,\n+\twide-int.h, inchash.h, tree.h, insn-config.h, expmed.h, dojump.h,\n+\texplow.h, calls.h, emit-rtl.h, varasm.h, stmt.h.\n \n 2015-01-20  Igor Zamyatin  <igor.zamyatin@intel.com>\n \n@@ -1146,8 +1151,8 @@\n \tfreciprocal-math, fvect-cost-model, fsimd-cost-model): Mark as\n \tOptimization\n \t(fauto-profile, fcommon, fdata-sections, fipa-icf-variables,\n-        ftoplevel-reorder, funit-at-a-time, fwhole-program): Do not mark as\n-        Optimization.\n+\tftoplevel-reorder, funit-at-a-time, fwhole-program): Do not mark as\n+\tOptimization.\n \t* ipa-icf.c (gate, sem_item_optimizer::filter_removed_items):\n \tFix for IPA.\n \n@@ -1256,15 +1261,15 @@\n \t(xorqi3): Likewise.\n \t* config/rl78/rl78-protos.h (rl78_sfr_p): New.\n \n-        * config/rl78/constrains (Qs8): New constraint.\n-        * config/rl78/rl78.c (rl78_flags_already_set): New function.\n-        * config/rl78/rl78-protos.h (rl78_flags_already_set): New prototype.\n-        * config/rl78/rl78-real.md (update_Z): New attribute.\n-        Update patterns to set it.\n-        (cbranchqi4_real): Call rl78_flags_already_set() to determine if a\n-        shorter compare and branch sequence can be used.\n-        (cbranchhi4_real): Likewise.\n-        (cbranchhi4_real_inverted): Likewise.\n+\t* config/rl78/constrains (Qs8): New constraint.\n+\t* config/rl78/rl78.c (rl78_flags_already_set): New function.\n+\t* config/rl78/rl78-protos.h (rl78_flags_already_set): New prototype.\n+\t* config/rl78/rl78-real.md (update_Z): New attribute.\n+\tUpdate patterns to set it.\n+\t(cbranchqi4_real): Call rl78_flags_already_set() to determine if a\n+\tshorter compare and branch sequence can be used.\n+\t(cbranchhi4_real): Likewise.\n+\t(cbranchhi4_real_inverted): Likewise.\n \n \t* config/rl78/predicates.md (uword_operand): Allow symbol_refs.\n \t* config/rl78/rl78-c.c (rl78_register_pragmas): Register __near\n@@ -1288,7 +1293,8 @@\n \t(rl78_asm_init_sections): Initialize it.\n \t(rl78_select_section): Put __far readonly symbols in .frodata.\n \t(rl78_make_type_far): New.\n-\t(rl78_insert_attributes): Force all readonly symbols to be __far when -mes0.\n+\t(rl78_insert_attributes): Force all readonly symbols to be\n+\t__far when -mes0.\n \t(rl78_asm_out_integer): New.\n \t* config/rl78/rl78.h (ADDR_SPACE_NEAR): New.\n \t* config/rl78/rl78.opt (-mes0): New.\n@@ -1430,7 +1436,7 @@\n \tintroduced in revision 219724.\n \n 2015-01-16  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n-            Ramana Radhakrishnan <ramana.radhakrishnan@arm.com>\n+\t    Ramana Radhakrishnan <ramana.radhakrishnan@arm.com>\n \n \tPR target/64263\n \t* config/aarch64/aarch64.md (*movsi_aarch64): Don't split if the\n@@ -1954,7 +1960,7 @@\n \t* config/arm/aarch-cost-tables.h: Add cost tables for APM XGene-1\n \t* doc/invoke.texi: Document -mcpu=xgene1.\n \n-2015-10-15  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n+2015-01-15  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \t* dojump.h: New header file.\n \t* explow.h: Likewise.\n@@ -1979,20 +1985,22 @@\n \t(tree_expr_size): Likewise.\n \tInclude calls.h dojump.h emit-rtl.h explow.h expmed.h\n \tfixed-value.h hashtab.h statistics.h stmt.h varasm.h.\n-\t* genemit.c (main): Generate includes statistics.h, real.h, fixed-value.h,\n-\tinsn-config.h, expmed.h, dojump.h, explow.h, emit-rtl.h, stmt.h.\n-\t* genopinit.c (main): Generate includes hashtab.h, hard-reg-set.h, function.h,\n-\tstatistics.h, real.h, fixed-value.h, expmed.h, dojump.h, explow.h, emit-rtl.h,\n+\t* genemit.c (main): Generate includes statistics.h, real.h,\n+\tfixed-value.h, insn-config.h, expmed.h, dojump.h, explow.h, emit-rtl.h,\n \tstmt.h.\n+\t* genopinit.c (main): Generate includes hashtab.h, hard-reg-set.h,\n+\tfunction.h, statistics.h, real.h, fixed-value.h, expmed.h, dojump.h,\n+\texplow.h, emit-rtl.h, stmt.h.\n \t* genoutput.c (main): Generate includes hashtab.h, statistics.h, real.h,\n \tfixed-value.h, expmed.h, dojump.h, explow.h, emit-rtl.h, stmt.h.\n-\t* genemit.c (open_base_files): Generate includes flags.h, statistics.h, real.h,\n-\tfixed-value.h, tree.h, expmed.h, dojump.h, explow.h, calls.h, emit-rtl.h, varasm.h,\n-\tstmt.h.\n-\t* config/tilepro/gen-mul-tables.cc: Generate includes hashtab.h, hash-set.h, vec.h,\n-\tmachmode.h, tm.h, hard-reg-set.h, input.h, function.h, rtl.h, flags.h, statistics.h,\n-\tdouble-int.h, real.h, fixed-value.h, alias.h, wide-int.h, inchash.h, tree.h,\n-\tinsn-config.h, expmed.h, dojump.h, explow.h, calls.h, emit-rtl.h, varasm.h, stmt.h.\n+\t* genemit.c (open_base_files): Generate includes flags.h, statistics.h,\n+\treal.h, fixed-value.h, tree.h, expmed.h, dojump.h, explow.h, calls.h,\n+\temit-rtl.h, varasm.h, stmt.h.\n+\t* config/tilepro/gen-mul-tables.cc: Generate includes hashtab.h,\n+\thash-set.h, vec.h, machmode.h, tm.h, hard-reg-set.h, input.h,\n+\tfunction.h, rtl.h, flags.h, statistics.h, double-int.h, real.h,\n+\tfixed-value.h, alias.h, wide-int.h, inchash.h, tree.h, insn-config.h,\n+\texpmed.h, dojump.h, explow.h, calls.h, emit-rtl.h, varasm.h, stmt.h.\n \t* config/tilegx/mul-tables.c: Include alias.h calls.h dojump.h\n \tdouble-int.h emit-rtl.h explow.h expmed.h fixed-value.h flags.h\n \tfunction.h hard-reg-set.h hash-set.h hashtab.h inchash.h input.h\n@@ -2002,12 +2010,12 @@\n \texplow.h expmed.h fixed-value.h flags.h function.h hard-reg-set.h\n \thash-set.h hashtab.h inchash.h input.h insn-config.h machmode.h\n \treal.h statistics.h stmt.h tree.h varasm.h vec.h wide-int.h.\n-\t* cfgloopanal.c: Include alias.h calls.h dojump.h double-int.h emit-rtl.h\n-\texplow.h expmed.h fixed-value.h flags.h inchash.h insn-config.h\n-\treal.h statistics.h stmt.h tree.h varasm.h wide-int.h.\n+\t* cfgloopanal.c: Include alias.h calls.h dojump.h double-int.h\n+\temit-rtl.h explow.h expmed.h fixed-value.h flags.h inchash.h\n+\tinsn-config.h real.h statistics.h stmt.h tree.h varasm.h wide-int.h.\n \t* loop-iv.c: Likewise.\n-\t* lra-assigns.c: Include alias.h calls.h dojump.h double-int.h emit-rtl.h\n-\texplow.h expmed.h fixed-value.h flags.h inchash.h real.h\n+\t* lra-assigns.c: Include alias.h calls.h dojump.h double-int.h\n+\temit-rtl.h explow.h expmed.h fixed-value.h flags.h inchash.h real.h\n \tstatistics.h stmt.h tree.h varasm.h wide-int.h.\n \t* lra-constraints.c: Likewise.\n \t* lra-eliminations.c: Likewise.\n@@ -2024,9 +2032,9 @@\n \t* reload.c: Include alias.h calls.h dojump.h double-int.h emit-rtl.h\n \texplow.h expmed.h fixed-value.h inchash.h real.h rtl.h\n \tstatistics.h stmt.h tree.h varasm.h wide-int.h.\n-\t* caller-save.c: Include alias.h calls.h dojump.h double-int.h emit-rtl.h\n-\texplow.h expmed.h fixed-value.h inchash.h real.h statistics.h\n-\tstmt.h tree.h varasm.h wide-int.h.\n+\t* caller-save.c: Include alias.h calls.h dojump.h double-int.h\n+\temit-rtl.h explow.h expmed.h fixed-value.h inchash.h real.h\n+\tstatistics.h stmt.h tree.h varasm.h wide-int.h.\n \t* combine-stack-adj.c: Likewise.\n \t* cse.c: Likewise.\n \t* ddg.c: Likewise.\n@@ -2068,9 +2076,9 @@\n \tinsn-config.h real.h rtl.h statistics.h stmt.h tm.h varasm.h.\n \t* rtl-chkp.c: Likewise.\n \t* tree-chkp-opt.c: Likewise.\n-\t* config/arm/arm-builtins.c: Include calls.h dojump.h emit-rtl.h explow.h\n-\texpmed.h fixed-value.h flags.h function.h hard-reg-set.h hashtab.h\n-\tinsn-config.h real.h statistics.h stmt.h varasm.h.\n+\t* config/arm/arm-builtins.c: Include calls.h dojump.h emit-rtl.h\n+\texplow.h expmed.h fixed-value.h flags.h function.h hard-reg-set.h\n+\thashtab.h insn-config.h real.h statistics.h stmt.h varasm.h.\n \t* ipa-icf.c: Include calls.h dojump.h emit-rtl.h explow.h expmed.h\n \tfixed-value.h flags.h hashtab.h insn-config.h real.h rtl.h\n \tstatistics.h stmt.h.\n@@ -2232,23 +2240,24 @@\n \t* config/nvptx/nvptx.c: Include dojump.h emit-rtl.h explow.h expmed.h\n \tfixed-value.h flags.h hard-reg-set.h insn-config.h real.h\n \tstatistics.h stmt.h varasm.h.\n-\t* gimplify.c: Include dojump.h emit-rtl.h explow.h expmed.h fixed-value.h\n-\tflags.h hashtab.h insn-config.h real.h rtl.h statistics.h.\n+\t* gimplify.c: Include dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h flags.h hashtab.h insn-config.h real.h rtl.h statistics.h.\n \t* asan.c: Include dojump.h emit-rtl.h explow.h expmed.h fixed-value.h\n \tflags.h hashtab.h insn-config.h real.h rtl.h statistics.h stmt.h.\n \t* ipa-devirt.c: Include dojump.h emit-rtl.h explow.h expmed.h\n \tfixed-value.h flags.h hashtab.h insn-config.h real.h rtl.h\n \tstatistics.h stmt.h varasm.h.\n \t* ipa-polymorphic-call.c: Likewise.\n-\t* config/aarch64/aarch64.c: Include dojump.h emit-rtl.h explow.h expmed.h\n-\tfixed-value.h flags.h hashtab.h insn-config.h real.h statistics.h\n-\tstmt.h.\n-\t* config/c6x/c6x.c: Likewise.\n-\t* config/aarch64/aarch64-builtins.c: Include dojump.h emit-rtl.h explow.h\n+\t* config/aarch64/aarch64.c: Include dojump.h emit-rtl.h explow.h\n \texpmed.h fixed-value.h flags.h hashtab.h insn-config.h real.h\n+\tstatistics.h stmt.h.\n+\t* config/c6x/c6x.c: Likewise.\n+\t* config/aarch64/aarch64-builtins.c: Include dojump.h emit-rtl.h\n+\texplow.h expmed.h fixed-value.h flags.h hashtab.h insn-config.h real.h\n \tstatistics.h stmt.h varasm.h.\n-\t* ipa-prop.c: Include dojump.h emit-rtl.h explow.h expmed.h fixed-value.h\n-\thashtab.h insn-config.h real.h rtl.h statistics.h stmt.h varasm.h.\n+\t* ipa-prop.c: Include dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h hashtab.h insn-config.h real.h rtl.h statistics.h\n+\tstmt.h varasm.h.\n \t* ipa-split.c: Likewise.\n \t* tree-eh.c: Likewise.\n \t* tree-ssa-dce.c: Likewise.\n@@ -2312,8 +2321,8 @@\n \tfixed-value.h insn-config.h real.h statistics.h stmt.h varasm.h.\n \t* tree-inline.c: Include dojump.h emit-rtl.h explow.h expmed.h\n \tfixed-value.h real.h rtl.h statistics.h stmt.h varasm.h.\n-\t* builtins.c: Include dojump.h emit-rtl.h explow.h expmed.h fixed-value.h\n-\treal.h statistics.h stmt.h.\n+\t* builtins.c: Include dojump.h emit-rtl.h explow.h expmed.h\n+\tfixed-value.h real.h statistics.h stmt.h.\n \t* config/arc/arc.c: Include dojump.h emit-rtl.h explow.h expmed.h\n \tfixed-value.h statistics.h stmt.h.\n \t* config/visium/visium.c: Include dojump.h emit-rtl.h explow.h expmed.h"}, {"sha": "7f5796ab52e7644651e2c8227c3da232bbba9b90", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f84b87aa9f664a98de1d1c737eaed9b7f6d4b6d9/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f84b87aa9f664a98de1d1c737eaed9b7f6d4b6d9/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=f84b87aa9f664a98de1d1c737eaed9b7f6d4b6d9", "patch": "@@ -16719,7 +16719,7 @@ ix86_avx_u128_mode_after (int mode, rtx_insn *insn)\n \n /* Return the mode that an insn results in.  */\n \n-int\n+static int\n ix86_mode_after (int entity, int mode, rtx_insn *insn)\n {\n   switch (entity)"}]}