{"sha": "9a2dd2dd026c67d30b0937aee6b22b2472e95673", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWEyZGQyZGQwMjZjNjdkMzBiMDkzN2FlZTZiMjJiMjQ3MmU5NTY3Mw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-04-03T02:41:19Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-04-03T02:41:19Z"}, "message": "h8300-protos.h: Add a prototype for gtle_operator.\n\n\t* config/h8300/h8300-protos.h: Add a prototype for\n\tgtle_operator.\n\t* config/h8300/h8300.c (gtle_operator): New.\n\t* config/h8300/h8300.h (PREDICATE_CODES): Add an entry for\n\tgtle_operator.\n\t* config/h8300/h8300.md (a peephole2): Generalize to accept GT\n\tand LE.\n\nFrom-SVN: r65192", "tree": {"sha": "b7cbc319830506358fad6081581f419646fd0ba5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7cbc319830506358fad6081581f419646fd0ba5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a2dd2dd026c67d30b0937aee6b22b2472e95673", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a2dd2dd026c67d30b0937aee6b22b2472e95673", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a2dd2dd026c67d30b0937aee6b22b2472e95673", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a2dd2dd026c67d30b0937aee6b22b2472e95673/comments", "author": null, "committer": null, "parents": [{"sha": "378683cf6216f2edcd3bb5bf2f093fa54c6aa524", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/378683cf6216f2edcd3bb5bf2f093fa54c6aa524", "html_url": "https://github.com/Rust-GCC/gccrs/commit/378683cf6216f2edcd3bb5bf2f093fa54c6aa524"}], "stats": {"total": 41, "additions": 37, "deletions": 4}, "files": [{"sha": "7d50188e4bc35f00cd48ef533b08c627fb72cdb5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a2dd2dd026c67d30b0937aee6b22b2472e95673/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a2dd2dd026c67d30b0937aee6b22b2472e95673/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9a2dd2dd026c67d30b0937aee6b22b2472e95673", "patch": "@@ -1,3 +1,13 @@\n+2003-04-02  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300-protos.h: Add a prototype for\n+\tgtle_operator.\n+\t* config/h8300/h8300.c (gtle_operator): New.\n+\t* config/h8300/h8300.h (PREDICATE_CODES): Add an entry for\n+\tgtle_operator.\n+\t* config/h8300/h8300.md (a peephole2): Generalize to accept GT\n+\tand LE.\n+\n 2003-04-02  Richard Henderson  <rth@redhat.com>\n \n \t* libgcc-std.ver (_Unwind_GetCFA): New."}, {"sha": "55ef2f5f0f276a809e4ab40f3c9305561d900382", "filename": "gcc/config/h8300/h8300-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a2dd2dd026c67d30b0937aee6b22b2472e95673/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a2dd2dd026c67d30b0937aee6b22b2472e95673/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300-protos.h?ref=9a2dd2dd026c67d30b0937aee6b22b2472e95673", "patch": "@@ -68,6 +68,7 @@ extern int incdec_operand PARAMS ((rtx, enum machine_mode));\n extern int bit_operator PARAMS ((rtx, enum machine_mode));\n extern int nshift_operator PARAMS ((rtx, enum machine_mode));\n extern int eqne_operator PARAMS ((rtx, enum machine_mode));\n+extern int gtle_operator PARAMS ((rtx, enum machine_mode));\n extern int gtuleu_operator PARAMS ((rtx, enum machine_mode));\n extern int iorxor_operator PARAMS ((rtx, enum machine_mode));\n "}, {"sha": "69f0b535cca6c9204808184c5705462dd16a2e90", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a2dd2dd026c67d30b0937aee6b22b2472e95673/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a2dd2dd026c67d30b0937aee6b22b2472e95673/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=9a2dd2dd026c67d30b0937aee6b22b2472e95673", "patch": "@@ -1912,6 +1912,18 @@ eqne_operator (x, mode)\n   return (code == EQ || code == NE);\n }\n \n+/* Return nonzero if X is GT, LE, GTU, or LEU.  */\n+\n+int\n+gtle_operator (x, mode)\n+     rtx x;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n+{\n+  enum rtx_code code = GET_CODE (x);\n+\n+  return (code == GT || code == LE || code == GTU || code == LEU);\n+}\n+\n /* Return nonzero if X is either GTU or LEU.  */\n \n int"}, {"sha": "dc86668bb7d470a40390eb8535a9fce3be4d72f6", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a2dd2dd026c67d30b0937aee6b22b2472e95673/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a2dd2dd026c67d30b0937aee6b22b2472e95673/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=9a2dd2dd026c67d30b0937aee6b22b2472e95673", "patch": "@@ -1292,6 +1292,7 @@ struct cum_arg\n   {\"bit_operator\", {XOR, AND, IOR}},\t\t\t\t\t\\\n   {\"nshift_operator\", {ASHIFTRT, LSHIFTRT, ASHIFT}},\t\t\t\\\n   {\"eqne_operator\", {EQ, NE}},\t\t\t\t\t\t\\\n+  {\"gtle_operator\", {GT, LE, GTU, LEU}},\t\t\t\t\\\n   {\"gtuleu_operator\", {GTU, LEU}},\t\t\t\t\t\\\n   {\"iorxor_operator\", {IOR, XOR}},\n "}, {"sha": "190980f64947c510c80a2c49cf942b029588e172", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a2dd2dd026c67d30b0937aee6b22b2472e95673/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a2dd2dd026c67d30b0937aee6b22b2472e95673/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=9a2dd2dd026c67d30b0937aee6b22b2472e95673", "patch": "@@ -4324,7 +4324,7 @@\n \t(compare (match_operand:SI 0 \"register_operand\" \"\")\n \t\t (match_operand:SI 1 \"const_int_operand\" \"\")))\n    (set (pc)\n-\t(if_then_else (match_operator 2 \"gtuleu_operator\"\n+\t(if_then_else (match_operator 2 \"gtle_operator\"\n \t\t\t[(cc0) (const_int 0)])\n \t\t      (label_ref (match_operand 3 \"\" \"\"))\n \t\t      (pc)))]\n@@ -4346,9 +4346,18 @@\n \t(if_then_else (match_dup 4)\n \t\t      (label_ref (match_dup 3))\n \t\t      (pc)))]\n-  \"operands[4] = ((GET_CODE (operands[2]) == GTU) ?\n-\t\t  gen_rtx_NE (VOIDmode, cc0_rtx, const0_rtx) :\n-\t\t  gen_rtx_EQ (VOIDmode, cc0_rtx, const0_rtx));\n+  \"switch (GET_CODE (operands[2]))\n+     {\n+     case GTU:\n+       operands[4] = gen_rtx_NE (VOIDmode, cc0_rtx, const0_rtx);\n+       break;\n+     case LEU:\n+       operands[4] = gen_rtx_EQ (VOIDmode, cc0_rtx, const0_rtx);\n+       break;\n+     default:\n+       operands[4] = operands[2];\n+       break;\n+     }\n    operands[5] = GEN_INT (~INTVAL (operands[1]));\")\n \n ;; Transform A <= 65535 to (A & 0xffff0000) == 0."}]}