{"sha": "e738433e45336d14904a8142169bbbf4dd7faa28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTczODQzM2U0NTMzNmQxNDkwNGE4MTQyMTY5YmJiZjRkZDdmYWEyOA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2014-02-02T17:40:13Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2014-02-02T17:40:13Z"}, "message": "gcc.pot: Regenerate.\n\ngcc/po:\n\t* gcc.pot: Regenerate.\n\nlibcpp/po:\n\t* cpplib.pot: Regenerate.\n\nFrom-SVN: r207404", "tree": {"sha": "eb524c12f80a0f49d971a3f3837e4ed54acab352", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb524c12f80a0f49d971a3f3837e4ed54acab352"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e738433e45336d14904a8142169bbbf4dd7faa28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e738433e45336d14904a8142169bbbf4dd7faa28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e738433e45336d14904a8142169bbbf4dd7faa28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e738433e45336d14904a8142169bbbf4dd7faa28/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ea0a6515f5f5da72f91ff5cfdc3723cf2b79507", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ea0a6515f5f5da72f91ff5cfdc3723cf2b79507", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ea0a6515f5f5da72f91ff5cfdc3723cf2b79507"}], "stats": {"total": 23319, "additions": 13604, "deletions": 9715}, "files": [{"sha": "01cef036a9b6f0989f191452cfeaee6d147f7a53", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e738433e45336d14904a8142169bbbf4dd7faa28/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e738433e45336d14904a8142169bbbf4dd7faa28/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=e738433e45336d14904a8142169bbbf4dd7faa28", "patch": "@@ -1,3 +1,7 @@\n+2014-02-02  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.pot: Regenerate.\n+\n 2014-01-02  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \tUpdate copyright years"}, {"sha": "516794733b0bb389bfe6e6acb720e151faf05781", "filename": "gcc/po/gcc.pot", "status": "modified", "additions": 13452, "deletions": 9576, "changes": 23028, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e738433e45336d14904a8142169bbbf4dd7faa28/gcc%2Fpo%2Fgcc.pot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e738433e45336d14904a8142169bbbf4dd7faa28/gcc%2Fpo%2Fgcc.pot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2Fgcc.pot?ref=e738433e45336d14904a8142169bbbf4dd7faa28"}, {"sha": "73f4d1fbae06cca5615faf6ab0fd48ffa8beea81", "filename": "libcpp/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e738433e45336d14904a8142169bbbf4dd7faa28/libcpp%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e738433e45336d14904a8142169bbbf4dd7faa28/libcpp%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2FChangeLog?ref=e738433e45336d14904a8142169bbbf4dd7faa28", "patch": "@@ -1,3 +1,7 @@\n+2014-02-02  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* cpplib.pot: Regenerate.\n+\n 2013-12-18  Joseph Myers  <joseph@codesourcery.com>\n \n \t* pt_BR.po: New."}, {"sha": "077da7a9637dfa2bc63ac3a07483311e024bbdbf", "filename": "libcpp/po/cpplib.pot", "status": "modified", "additions": 144, "deletions": 139, "changes": 283, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e738433e45336d14904a8142169bbbf4dd7faa28/libcpp%2Fpo%2Fcpplib.pot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e738433e45336d14904a8142169bbbf4dd7faa28/libcpp%2Fpo%2Fcpplib.pot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2Fcpplib.pot?ref=e738433e45336d14904a8142169bbbf4dd7faa28", "patch": "@@ -8,7 +8,7 @@ msgid \"\"\n msgstr \"\"\n \"Project-Id-Version: PACKAGE VERSION\\n\"\n \"Report-Msgid-Bugs-To: http://gcc.gnu.org/bugs.html\\n\"\n-\"POT-Creation-Date: 2013-03-15 17:42+0000\\n\"\n+\"POT-Creation-Date: 2014-02-02 17:35+0000\\n\"\n \"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n\"\n \"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n\"\n \"Language-Team: LANGUAGE <LL@li.org>\\n\"\n@@ -37,7 +37,7 @@ msgid \"character 0x%lx is not in the basic source character set\\n\"\n msgstr \"\"\n \n #: charset.c:797\n-#: charset.c:1443\n+#: charset.c:1447\n msgid \"converting to execution character set\"\n msgstr \"\"\n \n@@ -46,111 +46,106 @@ msgstr \"\"\n msgid \"character 0x%lx is not unibyte in execution character set\"\n msgstr \"\"\n \n-#: charset.c:927\n-#, c-format\n-msgid \"Character %x might not be NFKC\"\n-msgstr \"\"\n-\n-#: charset.c:993\n+#: charset.c:997\n msgid \"universal character names are only valid in C++ and C99\"\n msgstr \"\"\n \n-#: charset.c:996\n+#: charset.c:1000\n #, c-format\n msgid \"the meaning of '\\\\%c' is different in traditional C\"\n msgstr \"\"\n \n-#: charset.c:1005\n+#: charset.c:1009\n msgid \"In _cpp_valid_ucn but not a UCN\"\n msgstr \"\"\n \n-#: charset.c:1030\n+#: charset.c:1034\n #, c-format\n msgid \"incomplete universal character name %.*s\"\n msgstr \"\"\n \n-#: charset.c:1045\n+#: charset.c:1049\n #, c-format\n msgid \"%.*s is not a valid universal character\"\n msgstr \"\"\n \n-#: charset.c:1055\n-#: lex.c:1117\n+#: charset.c:1059\n+#: lex.c:1126\n msgid \"'$' in identifier or number\"\n msgstr \"\"\n \n-#: charset.c:1065\n+#: charset.c:1069\n #, c-format\n msgid \"universal character %.*s is not valid in an identifier\"\n msgstr \"\"\n \n-#: charset.c:1069\n+#: charset.c:1073\n #, c-format\n msgid \"universal character %.*s is not valid at the start of an identifier\"\n msgstr \"\"\n \n-#: charset.c:1101\n-#: charset.c:1673\n+#: charset.c:1105\n+#: charset.c:1677\n msgid \"converting UCN to source character set\"\n msgstr \"\"\n \n-#: charset.c:1105\n+#: charset.c:1109\n msgid \"converting UCN to execution character set\"\n msgstr \"\"\n \n-#: charset.c:1177\n+#: charset.c:1181\n msgid \"the meaning of '\\\\x' is different in traditional C\"\n msgstr \"\"\n \n-#: charset.c:1194\n+#: charset.c:1198\n msgid \"\\\\x used with no following hex digits\"\n msgstr \"\"\n \n-#: charset.c:1201\n+#: charset.c:1205\n msgid \"hex escape sequence out of range\"\n msgstr \"\"\n \n-#: charset.c:1239\n+#: charset.c:1243\n msgid \"octal escape sequence out of range\"\n msgstr \"\"\n \n-#: charset.c:1305\n+#: charset.c:1309\n msgid \"the meaning of '\\\\a' is different in traditional C\"\n msgstr \"\"\n \n-#: charset.c:1312\n+#: charset.c:1316\n #, c-format\n msgid \"non-ISO-standard escape sequence, '\\\\%c'\"\n msgstr \"\"\n \n-#: charset.c:1320\n+#: charset.c:1324\n #, c-format\n msgid \"unknown escape sequence: '\\\\%c'\"\n msgstr \"\"\n \n-#: charset.c:1328\n+#: charset.c:1332\n #, c-format\n msgid \"unknown escape sequence: '\\\\%s'\"\n msgstr \"\"\n \n-#: charset.c:1335\n+#: charset.c:1339\n msgid \"converting escape sequence to execution character set\"\n msgstr \"\"\n \n-#: charset.c:1508\n-#: charset.c:1572\n+#: charset.c:1512\n+#: charset.c:1576\n msgid \"character constant too long for its type\"\n msgstr \"\"\n \n-#: charset.c:1511\n+#: charset.c:1515\n msgid \"multi-character character constant\"\n msgstr \"\"\n \n-#: charset.c:1611\n+#: charset.c:1615\n msgid \"empty character constant\"\n msgstr \"\"\n \n-#: charset.c:1720\n+#: charset.c:1724\n #, c-format\n msgid \"failure to convert %s to %s\"\n msgstr \"\"\n@@ -415,7 +410,7 @@ msgid \"unterminated #%s\"\n msgstr \"\"\n \n #: directives-only.c:221\n-#: lex.c:2234\n+#: lex.c:2311\n #: traditional.c:162\n msgid \"unterminated comment\"\n msgstr \"\"\n@@ -429,159 +424,159 @@ msgstr \"\"\n msgid \"%s: %s\"\n msgstr \"\"\n \n-#: expr.c:479\n-#: expr.c:577\n+#: expr.c:510\n+#: expr.c:620\n msgid \"fixed-point constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:504\n+#: expr.c:535\n msgid \"invalid prefix \\\"0b\\\" for floating constant\"\n msgstr \"\"\n \n-#: expr.c:514\n+#: expr.c:545\n msgid \"use of C99 hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:545\n+#: expr.c:588\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" on floating constant\"\n msgstr \"\"\n \n-#: expr.c:556\n-#: expr.c:616\n+#: expr.c:599\n+#: expr.c:659\n #, c-format\n msgid \"traditional C rejects the \\\"%.*s\\\" suffix\"\n msgstr \"\"\n \n-#: expr.c:564\n+#: expr.c:607\n msgid \"suffix for double constant is a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:570\n+#: expr.c:613\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" with hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:581\n+#: expr.c:624\n msgid \"decimal float constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:599\n+#: expr.c:642\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" on integer constant\"\n msgstr \"\"\n \n-#: expr.c:624\n-msgid \"use of C++0x long long integer constant\"\n+#: expr.c:667\n+msgid \"use of C++11 long long integer constant\"\n msgstr \"\"\n \n-#: expr.c:625\n+#: expr.c:668\n msgid \"use of C99 long long integer constant\"\n msgstr \"\"\n \n-#: expr.c:641\n+#: expr.c:684\n msgid \"imaginary constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:644\n-msgid \"binary constants are a GCC extension\"\n+#: expr.c:690\n+msgid \"binary constants are a C++1y feature or GCC extension\"\n msgstr \"\"\n \n-#: expr.c:737\n+#: expr.c:787\n msgid \"integer constant is too large for its type\"\n msgstr \"\"\n \n-#: expr.c:768\n+#: expr.c:818\n msgid \"integer constant is so large that it is unsigned\"\n msgstr \"\"\n \n-#: expr.c:863\n+#: expr.c:913\n msgid \"missing ')' after \\\"defined\\\"\"\n msgstr \"\"\n \n-#: expr.c:870\n+#: expr.c:920\n msgid \"operator \\\"defined\\\" requires an identifier\"\n msgstr \"\"\n \n-#: expr.c:878\n+#: expr.c:928\n #, c-format\n msgid \"(\\\"%s\\\" is an alternative token for \\\"%s\\\" in C++)\"\n msgstr \"\"\n \n-#: expr.c:888\n+#: expr.c:938\n msgid \"this use of \\\"defined\\\" may not be portable\"\n msgstr \"\"\n \n-#: expr.c:948\n+#: expr.c:998\n msgid \"user-defined literal in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:953\n+#: expr.c:1003\n msgid \"floating constant in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:959\n+#: expr.c:1009\n msgid \"imaginary number in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1007\n+#: expr.c:1057\n #, c-format\n msgid \"\\\"%s\\\" is not defined\"\n msgstr \"\"\n \n-#: expr.c:1020\n+#: expr.c:1070\n msgid \"assertions are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:1023\n+#: expr.c:1073\n msgid \"assertions are a deprecated extension\"\n msgstr \"\"\n \n-#: expr.c:1268\n+#: expr.c:1318\n #, c-format\n msgid \"unbalanced stack in %s\"\n msgstr \"\"\n \n-#: expr.c:1288\n+#: expr.c:1338\n #, c-format\n msgid \"impossible operator '%u'\"\n msgstr \"\"\n \n-#: expr.c:1389\n+#: expr.c:1439\n msgid \"missing ')' in expression\"\n msgstr \"\"\n \n-#: expr.c:1418\n+#: expr.c:1468\n msgid \"'?' without following ':'\"\n msgstr \"\"\n \n-#: expr.c:1428\n+#: expr.c:1478\n msgid \"integer overflow in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1433\n+#: expr.c:1483\n msgid \"missing '(' in expression\"\n msgstr \"\"\n \n-#: expr.c:1465\n+#: expr.c:1515\n #, c-format\n msgid \"the left operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.c:1470\n+#: expr.c:1520\n #, c-format\n msgid \"the right operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.c:1729\n+#: expr.c:1779\n msgid \"traditional C rejects the unary plus operator\"\n msgstr \"\"\n \n-#: expr.c:1812\n+#: expr.c:1877\n msgid \"comma operator in operand of #if\"\n msgstr \"\"\n \n-#: expr.c:1948\n+#: expr.c:2013\n msgid \"division by zero in #if\"\n msgstr \"\"\n \n@@ -617,149 +612,153 @@ msgstr \"\"\n msgid \"no include path in which to search for %s\"\n msgstr \"\"\n \n-#: files.c:1381\n+#: files.c:1389\n msgid \"Multiple include guards may be useful for:\\n\"\n msgstr \"\"\n \n-#: init.c:524\n+#: init.c:536\n msgid \"cppchar_t must be an unsigned type\"\n msgstr \"\"\n \n-#: init.c:528\n+#: init.c:540\n #, c-format\n msgid \"\"\n \"preprocessor arithmetic has maximum precision of %lu bits; target requires \"\n \"%lu bits\"\n msgstr \"\"\n \n-#: init.c:535\n+#: init.c:547\n msgid \"CPP arithmetic must be at least as precise as a target int\"\n msgstr \"\"\n \n-#: init.c:538\n+#: init.c:550\n msgid \"target char is less than 8 bits wide\"\n msgstr \"\"\n \n-#: init.c:542\n+#: init.c:554\n msgid \"target wchar_t is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:546\n+#: init.c:558\n msgid \"target int is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:551\n+#: init.c:563\n msgid \"CPP half-integer narrower than CPP character\"\n msgstr \"\"\n \n-#: init.c:555\n+#: init.c:567\n #, c-format\n msgid \"\"\n \"CPP on this host cannot handle wide character constants over %lu bits, but \"\n \"the target requires %lu bits\"\n msgstr \"\"\n \n-#: lex.c:910\n+#: lex.c:919\n msgid \"backslash and newline separated by space\"\n msgstr \"\"\n \n-#: lex.c:915\n+#: lex.c:924\n msgid \"backslash-newline at end of file\"\n msgstr \"\"\n \n-#: lex.c:931\n+#: lex.c:940\n #, c-format\n msgid \"trigraph ??%c converted to %c\"\n msgstr \"\"\n \n-#: lex.c:939\n+#: lex.c:948\n #, c-format\n msgid \"trigraph ??%c ignored, use -trigraphs to enable\"\n msgstr \"\"\n \n-#: lex.c:988\n+#: lex.c:997\n msgid \"\\\"/*\\\" within comment\"\n msgstr \"\"\n \n-#: lex.c:1046\n+#: lex.c:1055\n #, c-format\n msgid \"%s in preprocessing directive\"\n msgstr \"\"\n \n-#: lex.c:1055\n+#: lex.c:1064\n msgid \"null character(s) ignored\"\n msgstr \"\"\n \n-#: lex.c:1092\n+#: lex.c:1101\n #, c-format\n msgid \"`%.*s' is not in NFKC\"\n msgstr \"\"\n \n-#: lex.c:1095\n+#: lex.c:1104\n #, c-format\n msgid \"`%.*s' is not in NFC\"\n msgstr \"\"\n \n-#: lex.c:1164\n-#: lex.c:1241\n+#: lex.c:1173\n+#: lex.c:1253\n #, c-format\n msgid \"attempt to use poisoned \\\"%s\\\"\"\n msgstr \"\"\n \n-#: lex.c:1172\n-#: lex.c:1249\n+#: lex.c:1181\n+#: lex.c:1261\n msgid \"__VA_ARGS__ can only appear in the expansion of a C99 variadic macro\"\n msgstr \"\"\n \n-#: lex.c:1178\n-#: lex.c:1255\n+#: lex.c:1187\n+#: lex.c:1267\n #, c-format\n msgid \"identifier \\\"%s\\\" is a special operator name in C++\"\n msgstr \"\"\n \n-#: lex.c:1399\n+#: lex.c:1554\n msgid \"raw string delimiter longer than 16 characters\"\n msgstr \"\"\n \n-#: lex.c:1402\n+#: lex.c:1558\n+msgid \"invalid new-line in raw string delimiter\"\n+msgstr \"\"\n+\n+#: lex.c:1562\n #, c-format\n msgid \"invalid character '%c' in raw string delimiter\"\n msgstr \"\"\n \n-#: lex.c:1525\n-#: lex.c:1547\n+#: lex.c:1611\n+#: lex.c:1633\n msgid \"unterminated raw string\"\n msgstr \"\"\n \n-#: lex.c:1573\n-#: lex.c:1706\n+#: lex.c:1654\n+#: lex.c:1783\n msgid \"\"\n-\"invalid suffix on literal; C++11 requires a space between literal and \"\n-\"identifier\"\n+\"invalid suffix on literal; C++11 requires a space between literal and string \"\n+\"macro\"\n msgstr \"\"\n \n-#: lex.c:1684\n+#: lex.c:1765\n msgid \"null character(s) preserved in literal\"\n msgstr \"\"\n \n-#: lex.c:1687\n+#: lex.c:1768\n #, c-format\n msgid \"missing terminating %c character\"\n msgstr \"\"\n \n-#: lex.c:2245\n+#: lex.c:2322\n msgid \"C++ style comments are not allowed in ISO C90\"\n msgstr \"\"\n \n-#: lex.c:2247\n+#: lex.c:2324\n msgid \"(this will be reported only once per input file)\"\n msgstr \"\"\n \n-#: lex.c:2252\n+#: lex.c:2329\n msgid \"multi-line comment\"\n msgstr \"\"\n \n-#: lex.c:2583\n+#: lex.c:2660\n #, c-format\n msgid \"unspellable token %s\"\n msgstr \"\"\n@@ -770,125 +769,131 @@ msgid \"macro \\\"%s\\\" is not used\"\n msgstr \"\"\n \n #: macro.c:229\n-#: macro.c:426\n+#: macro.c:433\n #, c-format\n msgid \"invalid built-in macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:263\n+#: macro.c:236\n+#: macro.c:333\n+#, c-format\n+msgid \"macro \\\"%s\\\" might prevent reproducible builds\"\n+msgstr \"\"\n+\n+#: macro.c:267\n msgid \"could not determine file timestamp\"\n msgstr \"\"\n \n-#: macro.c:361\n+#: macro.c:368\n msgid \"could not determine date and time\"\n msgstr \"\"\n \n-#: macro.c:377\n+#: macro.c:384\n msgid \"__COUNTER__ expanded inside directive with -fdirectives-only\"\n msgstr \"\"\n \n-#: macro.c:535\n+#: macro.c:542\n msgid \"invalid string literal, ignoring final '\\\\'\"\n msgstr \"\"\n \n-#: macro.c:597\n+#: macro.c:604\n #, c-format\n msgid \"pasting \\\"%s\\\" and \\\"%s\\\" does not give a valid preprocessing token\"\n msgstr \"\"\n \n-#: macro.c:719\n+#: macro.c:726\n msgid \"ISO C99 requires rest arguments to be used\"\n msgstr \"\"\n \n-#: macro.c:724\n+#: macro.c:731\n #, c-format\n msgid \"macro \\\"%s\\\" requires %u arguments, but only %u given\"\n msgstr \"\"\n \n-#: macro.c:729\n+#: macro.c:736\n #, c-format\n msgid \"macro \\\"%s\\\" passed %u arguments, but takes just %u\"\n msgstr \"\"\n \n-#: macro.c:923\n+#: macro.c:930\n #: traditional.c:680\n #, c-format\n msgid \"unterminated argument list invoking macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:1074\n+#: macro.c:1081\n #, c-format\n msgid \"function-like macro \\\"%s\\\" must be used with arguments in traditional C\"\n msgstr \"\"\n \n-#: macro.c:1746\n+#: macro.c:1753\n #, c-format\n msgid \"\"\n \"invoking macro %s argument %d: empty macro arguments are undefined in ISO \"\n \"C90 and ISO C++98\"\n msgstr \"\"\n \n-#: macro.c:2708\n+#: macro.c:2715\n #, c-format\n msgid \"duplicate macro parameter \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:2754\n+#: macro.c:2761\n #, c-format\n msgid \"\\\"%s\\\" may not appear in macro parameter list\"\n msgstr \"\"\n \n-#: macro.c:2762\n+#: macro.c:2769\n msgid \"macro parameters must be comma-separated\"\n msgstr \"\"\n \n-#: macro.c:2779\n+#: macro.c:2786\n msgid \"parameter name missing\"\n msgstr \"\"\n \n-#: macro.c:2797\n+#: macro.c:2804\n msgid \"anonymous variadic macros were introduced in C99\"\n msgstr \"\"\n \n-#: macro.c:2802\n+#: macro.c:2809\n msgid \"ISO C does not permit named variadic macros\"\n msgstr \"\"\n \n-#: macro.c:2811\n+#: macro.c:2818\n msgid \"missing ')' in macro parameter list\"\n msgstr \"\"\n \n-#: macro.c:2860\n+#: macro.c:2867\n msgid \"'##' cannot appear at either end of a macro expansion\"\n msgstr \"\"\n \n-#: macro.c:2895\n+#: macro.c:2902\n msgid \"ISO C99 requires whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:2919\n+#: macro.c:2926\n msgid \"missing whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:2953\n+#: macro.c:2960\n msgid \"'#' is not followed by a macro parameter\"\n msgstr \"\"\n \n-#: macro.c:3111\n+#: macro.c:3118\n #, c-format\n msgid \"\\\"%s\\\" redefined\"\n msgstr \"\"\n \n-#: macro.c:3117\n+#: macro.c:3124\n msgid \"this is the location of the previous definition\"\n msgstr \"\"\n \n-#: macro.c:3178\n+#: macro.c:3185\n #, c-format\n msgid \"macro argument \\\"%s\\\" would be stringified in traditional C\"\n msgstr \"\"\n \n-#: macro.c:3205\n+#: macro.c:3212\n #, c-format\n msgid \"invalid hash type %d in cpp_macro_definition\"\n msgstr \"\""}]}