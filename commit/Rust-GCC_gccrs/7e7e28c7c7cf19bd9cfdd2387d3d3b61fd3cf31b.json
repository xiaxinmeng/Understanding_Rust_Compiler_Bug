{"sha": "7e7e28c7c7cf19bd9cfdd2387d3d3b61fd3cf31b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U3ZTI4YzdjN2NmMTliZDljZmRkMjM4N2QzZDNiNjFmZDNjZjMxYg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2007-03-09T20:13:10Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2007-03-09T20:13:10Z"}, "message": "re PR rtl-optimization/30643 (CSE pessimization)\n\ngcc/ChangeLog:\nPR rtl-optimization/30643\n* cse.c (cse_insn): Recompute dest_hash after insert_regs for\n(fold_rtx): Recurse, like before 2006-11-03.\ngcc/testsuite/ChangeLog:\nPR rtl-optimization/30643\n* gcc.dg/pr30643.c: New.\n\nFrom-SVN: r122760", "tree": {"sha": "709013022c7b1d9984a66229cbe7d5f71cc86b89", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/709013022c7b1d9984a66229cbe7d5f71cc86b89"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e7e28c7c7cf19bd9cfdd2387d3d3b61fd3cf31b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e7e28c7c7cf19bd9cfdd2387d3d3b61fd3cf31b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e7e28c7c7cf19bd9cfdd2387d3d3b61fd3cf31b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e7e28c7c7cf19bd9cfdd2387d3d3b61fd3cf31b/comments", "author": null, "committer": null, "parents": [{"sha": "a009aafece33ccff7dffb66ba0f1c8466e97b1f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a009aafece33ccff7dffb66ba0f1c8466e97b1f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a009aafece33ccff7dffb66ba0f1c8466e97b1f6"}], "stats": {"total": 75, "additions": 71, "deletions": 4}, "files": [{"sha": "115b84f0d5a4f5d05726bd03b9f72d972b7b3b0f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7e28c7c7cf19bd9cfdd2387d3d3b61fd3cf31b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7e28c7c7cf19bd9cfdd2387d3d3b61fd3cf31b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7e7e28c7c7cf19bd9cfdd2387d3d3b61fd3cf31b", "patch": "@@ -1,3 +1,9 @@\n+2007-03-09  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR rtl-optimization/30643\n+\t* cse.c (cse_insn): Recompute dest_hash after insert_regs for\n+\t(fold_rtx): Recurse, like before 2006-11-03.\n+\n 2007-03-09  DJ Delorie  <dj@redhat.com>\n \n \t* config/m32c/t-m32c (m32c-pragma.o): Add TM_H dependency to m32c-pragma.o"}, {"sha": "6976d455753c696a86045f875a9fdded9dc27603", "filename": "gcc/cse.c", "status": "modified", "additions": 34, "deletions": 4, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7e28c7c7cf19bd9cfdd2387d3d3b61fd3cf31b/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7e28c7c7cf19bd9cfdd2387d3d3b61fd3cf31b/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=7e7e28c7c7cf19bd9cfdd2387d3d3b61fd3cf31b", "patch": "@@ -1,6 +1,7 @@\n /* Common subexpression elimination for GNU compiler.\n    Copyright (C) 1987, 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998\n-   1999, 2000, 2001, 2002, 2003, 2004, 2005 Free Software Foundation, Inc.\n+   1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -3045,11 +3046,37 @@ fold_rtx (rtx x, rtx insn)\n       {\n \trtx folded_arg = XEXP (x, i), const_arg;\n \tenum machine_mode mode_arg = GET_MODE (folded_arg);\n+\n+\tswitch (GET_CODE (folded_arg))\n+\t  {\n+\t  case MEM:\n+\t  case REG:\n+\t  case SUBREG:\n+\t    const_arg = equiv_constant (folded_arg);\n+\t    break;\n+\n+\t  case CONST:\n+\t  case CONST_INT:\n+\t  case SYMBOL_REF:\n+\t  case LABEL_REF:\n+\t  case CONST_DOUBLE:\n+\t  case CONST_VECTOR:\n+\t    const_arg = folded_arg;\n+\t    break;\n+\n #ifdef HAVE_cc0\n-\tif (CC0_P (folded_arg))\n-\t  folded_arg = prev_insn_cc0, mode_arg = prev_insn_cc0_mode;\n+\t  case CC0:\n+\t    folded_arg = prev_insn_cc0;\n+\t    mode_arg = prev_insn_cc0_mode;\n+\t    const_arg = equiv_constant (folded_arg);\n+\t    break;\n #endif\n-\tconst_arg = equiv_constant (folded_arg);\n+\n+\t  default:\n+\t    folded_arg = fold_rtx (folded_arg, insn);\n+\t    const_arg = equiv_constant (folded_arg);\n+\t    break;\n+\t  }\n \n \t/* For the first three operands, see if the operand\n \t   is constant or equivalent to a constant.  */\n@@ -5254,8 +5281,11 @@ cse_insn (rtx insn, rtx libcall_insn)\n \t\t{\n \t\t  if (insert_regs (x, NULL, 0))\n \t\t    {\n+\t\t      rtx dest = SET_DEST (sets[i].rtl);\n+\n \t\t      rehash_using_reg (x);\n \t\t      hash = HASH (x, mode);\n+\t\t      sets[i].dest_hash = HASH (dest, GET_MODE (dest));\n \t\t    }\n \t\t  elt = insert (x, NULL, hash, mode);\n \t\t}"}, {"sha": "d407ff64bdf7c93699184cdca8bebb90d9b3bf44", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7e28c7c7cf19bd9cfdd2387d3d3b61fd3cf31b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7e28c7c7cf19bd9cfdd2387d3d3b61fd3cf31b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7e7e28c7c7cf19bd9cfdd2387d3d3b61fd3cf31b", "patch": "@@ -1,3 +1,8 @@\n+2007-03-09  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR rtl-optimization/30643\n+\t* gcc.dg/pr30643.c: New.\n+\n 2007-03-09  Chao-ying Fu  <fu@mips.com>\n \n \t* gcc.target/mips/mips32-dspr2-type.c: New test."}, {"sha": "67fe111a77f17fa0533fe34dc3ef047480d1cc30", "filename": "gcc/testsuite/gcc.dg/pr30643.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7e28c7c7cf19bd9cfdd2387d3d3b61fd3cf31b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30643.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7e28c7c7cf19bd9cfdd2387d3d3b61fd3cf31b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30643.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr30643.c?ref=7e7e28c7c7cf19bd9cfdd2387d3d3b61fd3cf31b", "patch": "@@ -0,0 +1,26 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-final { scan-assembler-not \"undefined\" } } */\n+\n+/* Make sure we optimize all calls away.  */\n+\n+extern void undefined (void);\n+struct s { int a, b; };\n+void bar (struct s *ps,  int *p, int *__restrict__ rp, int *__restrict__ rq)\n+{\n+  ps->a = 0;\n+  ps->b = 1;\n+  if (ps->a != 0)\n+    undefined ();\n+  p[0] = 0;\n+  p[1] = 1;\n+  if (p[0] != 0)\n+    undefined ();\n+  rp[0] = 0;\n+  rq[0] = 1;\n+  if (rp[0] != 0)\n+    undefined ();\n+}\n+int main (void) {\n+  return 0;\n+}"}]}