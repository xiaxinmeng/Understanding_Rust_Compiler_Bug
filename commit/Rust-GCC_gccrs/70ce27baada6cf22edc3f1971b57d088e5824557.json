{"sha": "70ce27baada6cf22edc3f1971b57d088e5824557", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBjZTI3YmFhZGE2Y2YyMmVkYzNmMTk3MWI1N2QwODhlNTgyNDU1Nw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-28T12:17:30Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-12-28T12:17:30Z"}, "message": "(parse_number): Improve error message for bogus numbers.\n\n(yylex): Consider `0xe-1' to be a (bogus) number if not traditional.\n\nFrom-SVN: r10891", "tree": {"sha": "a5d42e3e6fd8929f300eb7280a1c4dc684cecf27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5d42e3e6fd8929f300eb7280a1c4dc684cecf27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70ce27baada6cf22edc3f1971b57d088e5824557", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70ce27baada6cf22edc3f1971b57d088e5824557", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70ce27baada6cf22edc3f1971b57d088e5824557", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70ce27baada6cf22edc3f1971b57d088e5824557/comments", "author": null, "committer": null, "parents": [{"sha": "9fb1a98e76591ea389ebb0d5529ca0eb4802d889", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fb1a98e76591ea389ebb0d5529ca0eb4802d889", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fb1a98e76591ea389ebb0d5529ca0eb4802d889"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "bdc61c8d1d949a5af94a5f5dbb893e0fb419340d", "filename": "gcc/cexp.y", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70ce27baada6cf22edc3f1971b57d088e5824557/gcc%2Fcexp.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70ce27baada6cf22edc3f1971b57d088e5824557/gcc%2Fcexp.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcexp.y?ref=70ce27baada6cf22edc3f1971b57d088e5824557", "patch": "@@ -396,13 +396,6 @@ parse_number (olen)\n   register int digit, largest_digit = 0;\n   int spec_long = 0;\n \n-  for (c = 0; c < len; c++)\n-    if (p[c] == '.') {\n-      /* It's a float since it contains a point.  */\n-      yyerror (\"floating point numbers not allowed in #if expressions\");\n-      return ERROR;\n-    }\n-\n   yylval.integer.unsignedp = 0;\n \n   if (len >= 3 && (!strncmp (p, \"0x\", 2) || !strncmp (p, \"0X\", 2))) {\n@@ -439,8 +432,16 @@ parse_number (olen)\n \t      yyerror (\"two `u's in integer constant\");\n \t    yylval.integer.unsignedp = 1;\n \t  }\n-\telse\n-\t  break;\n+\telse {\n+\t  if (c == '.' || c == 'e' || c == 'E')\n+\t    yyerror (\"Floating point numbers not allowed in #if expressions\");\n+\t  else {\n+\t    char *buf = (char *) alloca (p - lexptr + 40);\n+\t    sprintf (buf, \"missing white space after number `%.*s'\",\n+\t\t     (int) (p - lexptr - 1), lexptr);\n+\t    yyerror (buf);\n+\t  }\n+\t}\n \n \tif (--len == 0)\n \t  break;\n@@ -456,11 +457,6 @@ parse_number (olen)\n     n = nd;\n   }\n \n-  if (len != 0) {\n-    yyerror (\"Invalid number in #if expression\");\n-    return ERROR;\n-  }\n-\n   if (base <= largest_digit)\n     warning (\"integer constant contains digits beyond the radix\");\n \n@@ -733,10 +729,14 @@ yylex ()\n \n   if (c >= '0' && c <= '9' && !keyword_parsing) {\n     /* It's a number */\n-    for (namelen = 0;\n-\t c = tokstart[namelen], is_idchar[c] || c == '.'; \n-\t namelen++)\n-      ;\n+    for (namelen = 1; ; namelen++) {\n+      int d = tokstart[namelen];\n+      if (! ((is_idchar[d] || d == '.')\n+\t     || ((d == '-' || d == '+') && (c == 'e' || c == 'E')\n+\t\t && ! traditional)))\n+\tbreak;\n+      c = d;\n+    }\n     return parse_number (namelen);\n   }\n "}]}