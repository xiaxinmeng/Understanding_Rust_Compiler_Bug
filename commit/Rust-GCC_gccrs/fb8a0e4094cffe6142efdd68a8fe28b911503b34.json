{"sha": "fb8a0e4094cffe6142efdd68a8fe28b911503b34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI4YTBlNDA5NGNmZmU2MTQyZWZkZDY4YThmZTI4YjkxMTUwM2IzNA==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2015-02-27T22:02:05Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2015-02-27T22:02:05Z"}, "message": "re PR rtl-optimization/64317 (Ineffective allocation of PIC base register)\n\n2015-02-27  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR target/64317\n\t* params.def (PARAM_LRA_INHERITANCE_EBB_PROBABILITY_CUTOFF): New.\n\t* params.h (LRA_INHERITANCE_EBB_PROBABILITY_CUTOFF): New.\n\t* lra-constraints.c: Include \"params.h\".\n\t(EBB_PROBABILITY_CUTOFF): Use\n\tLRA_INHERITANCE_EBB_PROBABILITY_CUTOFF.\n\t(lra_inheritance): Use '<' instead of '<=' for\n\tEBB_PROBABILITY_CUTOFF.\n\t* doc/invoke.texi (lra-inheritance-ebb-probability-cutoff):\n\tDocument change.\n\nFrom-SVN: r221070", "tree": {"sha": "ae377d5c8ca1e5541cbd91a12715c6659a96ad26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae377d5c8ca1e5541cbd91a12715c6659a96ad26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb8a0e4094cffe6142efdd68a8fe28b911503b34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb8a0e4094cffe6142efdd68a8fe28b911503b34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb8a0e4094cffe6142efdd68a8fe28b911503b34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb8a0e4094cffe6142efdd68a8fe28b911503b34/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b94097dc6f7ed9086e1c9577cbd4948173b0d847", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b94097dc6f7ed9086e1c9577cbd4948173b0d847", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b94097dc6f7ed9086e1c9577cbd4948173b0d847"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "766556bf190800e08907bafb7ef90e54b2ff9fbe", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8a0e4094cffe6142efdd68a8fe28b911503b34/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8a0e4094cffe6142efdd68a8fe28b911503b34/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb8a0e4094cffe6142efdd68a8fe28b911503b34", "patch": "@@ -1,3 +1,16 @@\n+2015-02-27  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/64317\n+\t* params.def (PARAM_LRA_INHERITANCE_EBB_PROBABILITY_CUTOFF): New.\n+\t* params.h (LRA_INHERITANCE_EBB_PROBABILITY_CUTOFF): New.\n+\t* lra-constraints.c: Include \"params.h\".\n+\t(EBB_PROBABILITY_CUTOFF): Use\n+\tLRA_INHERITANCE_EBB_PROBABILITY_CUTOFF.\n+\t(lra_inheritance): Use '<' instead of '<=' for\n+\tEBB_PROBABILITY_CUTOFF.\n+\t* doc/invoke.texi (lra-inheritance-ebb-probability-cutoff):\n+\tDocument change.\n+\n 2015-02-27  Martin Liska  <mliska@suse.cz>\n \n \t* ipa-icf.h (struct symbol_compare_hashmap_traits): Add missing"}, {"sha": "a87376e1cbb7255a2c36eb746a6d1d4fda15859c", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8a0e4094cffe6142efdd68a8fe28b911503b34/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8a0e4094cffe6142efdd68a8fe28b911503b34/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=fb8a0e4094cffe6142efdd68a8fe28b911503b34", "patch": "@@ -10570,6 +10570,14 @@ by this parameter.  The default value of the parameter is 2, which is\n the minimal number of registers needed by typical instructions.\n This value is the best found from numerous experiments.\n \n+@item lra-inheritance-ebb-probability-cutoff\n+LRA tries to reuse values reloaded in registers in subsequent insns.\n+This optimization is called inheritance.  EBB is used as a region to\n+do this optimization.  The parameter defines a minimal fall-through\n+edge probability in percentage used to add BB to inheritance EBB in\n+LRA.  The default value of the parameter is 40.  The value was chosen\n+from numerous runs of SPEC2000 on x86-64.\n+\n @item loop-invariant-max-bbs-in-loop\n Loop invariant motion can be very expensive, both in compilation time and\n in amount of needed compile-time memory, with very large loops.  Loops"}, {"sha": "0ddd842deea7fbf3205de29b762f5ae0cf0ff1d6", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8a0e4094cffe6142efdd68a8fe28b911503b34/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8a0e4094cffe6142efdd68a8fe28b911503b34/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=fb8a0e4094cffe6142efdd68a8fe28b911503b34", "patch": "@@ -154,6 +154,7 @@\n #include \"df.h\"\n #include \"ira.h\"\n #include \"rtl-error.h\"\n+#include \"params.h\"\n #include \"lra-int.h\"\n \n /* Value of LRA_CURR_RELOAD_NUM at the beginning of BB of the current\n@@ -5694,7 +5695,8 @@ inherit_in_ebb (rtx_insn *head, rtx_insn *tail)\n /* This value affects EBB forming.  If probability of edge from EBB to\n    a BB is not greater than the following value, we don't add the BB\n    to EBB.  */\n-#define EBB_PROBABILITY_CUTOFF ((REG_BR_PROB_BASE * 50) / 100)\n+#define EBB_PROBABILITY_CUTOFF \\\n+  ((REG_BR_PROB_BASE * LRA_INHERITANCE_EBB_PROBABILITY_CUTOFF) / 100)\n \n /* Current number of inheritance/split iteration.  */\n int lra_inheritance_iter;\n@@ -5740,7 +5742,7 @@ lra_inheritance (void)\n \t  e = find_fallthru_edge (bb->succs);\n \t  if (! e)\n \t    break;\n-\t  if (e->probability <= EBB_PROBABILITY_CUTOFF)\n+\t  if (e->probability < EBB_PROBABILITY_CUTOFF)\n \t    break;\n \t  bb = bb->next_bb;\n \t}"}, {"sha": "905c9e2679252881ae84dac59e38bdf6980a7b13", "filename": "gcc/params.def", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8a0e4094cffe6142efdd68a8fe28b911503b34/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8a0e4094cffe6142efdd68a8fe28b911503b34/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=fb8a0e4094cffe6142efdd68a8fe28b911503b34", "patch": "@@ -836,6 +836,11 @@ DEFPARAM (PARAM_LRA_MAX_CONSIDERED_RELOAD_PSEUDOS,\n \t  \"The max number of reload pseudos which are considered during spilling a non-reload pseudo\",\n \t  500, 0, 0)\n \n+DEFPARAM (PARAM_LRA_INHERITANCE_EBB_PROBABILITY_CUTOFF,\n+\t  \"lra-inheritance-ebb-probability-cutoff\",\n+\t  \"Minimal fall-through edge probability in percentage used to add BB to inheritance EEB in LRA\",\n+\t  40, 0, 100)\n+\n /* Switch initialization conversion will refuse to create arrays that are\n    bigger than this parameter times the number of switch branches.  */\n "}, {"sha": "28d077f5b1b1963c505b06210f4abf381d76a827", "filename": "gcc/params.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8a0e4094cffe6142efdd68a8fe28b911503b34/gcc%2Fparams.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8a0e4094cffe6142efdd68a8fe28b911503b34/gcc%2Fparams.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.h?ref=fb8a0e4094cffe6142efdd68a8fe28b911503b34", "patch": "@@ -202,6 +202,8 @@ extern void init_param_values (int *params);\n   PARAM_VALUE (PARAM_IRA_LOOP_RESERVED_REGS)\n #define LRA_MAX_CONSIDERED_RELOAD_PSEUDOS \\\n   PARAM_VALUE (PARAM_LRA_MAX_CONSIDERED_RELOAD_PSEUDOS)\n+#define LRA_INHERITANCE_EBB_PROBABILITY_CUTOFF \\\n+  PARAM_VALUE (PARAM_LRA_INHERITANCE_EBB_PROBABILITY_CUTOFF)\n #define SWITCH_CONVERSION_BRANCH_RATIO \\\n   PARAM_VALUE (PARAM_SWITCH_CONVERSION_BRANCH_RATIO)\n #define LOOP_INVARIANT_MAX_BBS_IN_LOOP \\"}]}