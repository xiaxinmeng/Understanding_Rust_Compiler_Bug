{"sha": "072c5071e0e95401cec2b700c3f276c9eb91abb1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDcyYzUwNzFlMGU5NTQwMWNlYzJiNzAwYzNmMjc2YzllYjkxYWJiMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-02-21T14:44:28Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-08T07:51:14Z"}, "message": "[Ada] AI12-0085 Missing aspect cases for Remote_Types\n\n2020-06-08  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* sem_cat.ads: Fix typo.\n\t* sem_cat.adb (Validate_Remote_Access_To_Class_Wide_Type): Add\n\thandling of N_Attribute_Definition_Clause.\n\t* sem_ch13.adb (Analyze_Attribute_Definition_Clause): Call\n\tValidate_Remote_Access_To_Class_Wide_Type for Storage_Size and\n\tStorage_Pool.\n\t* sem_attr.adb, exp_ch4.adb: Update comments.", "tree": {"sha": "7d5ca7ba0c75b608ef578e01fa4ce98fc6e67ce4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d5ca7ba0c75b608ef578e01fa4ce98fc6e67ce4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/072c5071e0e95401cec2b700c3f276c9eb91abb1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/072c5071e0e95401cec2b700c3f276c9eb91abb1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/072c5071e0e95401cec2b700c3f276c9eb91abb1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/072c5071e0e95401cec2b700c3f276c9eb91abb1/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a689887372e80f748fedd95e98ce9a85e7b09c9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a689887372e80f748fedd95e98ce9a85e7b09c9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a689887372e80f748fedd95e98ce9a85e7b09c9b"}], "stats": {"total": 39, "additions": 31, "deletions": 8}, "files": [{"sha": "69b36a4bec566efdae409b5ff52ef8f2e89576aa", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/072c5071e0e95401cec2b700c3f276c9eb91abb1/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/072c5071e0e95401cec2b700c3f276c9eb91abb1/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=072c5071e0e95401cec2b700c3f276c9eb91abb1", "patch": "@@ -4489,7 +4489,7 @@ package body Exp_Ch4 is\n          Error_Msg_N (\"?use of an anonymous access type allocator\", N);\n       end if;\n \n-      --  RM E.2.3(22). We enforce that the expected type of an allocator\n+      --  RM E.2.2(17). We enforce that the expected type of an allocator\n       --  shall not be a remote access-to-class-wide-limited-private type\n \n       --  Why is this being done at expansion time, seems clearly wrong ???"}, {"sha": "e82082bc07ad3c8cd8c8aba5fa98aff0d577ebe9", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/072c5071e0e95401cec2b700c3f276c9eb91abb1/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/072c5071e0e95401cec2b700c3f276c9eb91abb1/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=072c5071e0e95401cec2b700c3f276c9eb91abb1", "patch": "@@ -6004,7 +6004,7 @@ package body Sem_Attr is\n \n             --  Validate_Remote_Access_To_Class_Wide_Type for attribute\n             --  Storage_Pool since this attribute is not defined for such\n-            --  types (RM E.2.3(22)).\n+            --  types (RM E.2.2(17)).\n \n             Validate_Remote_Access_To_Class_Wide_Type (N);\n \n@@ -6038,9 +6038,9 @@ package body Sem_Attr is\n                Check_Type;\n                Set_Etype (N, Universal_Integer);\n \n-               --   Validate_Remote_Access_To_Class_Wide_Type for attribute\n-               --   Storage_Size since this attribute is not defined for\n-               --   such types (RM E.2.3(22)).\n+               --  Validate_Remote_Access_To_Class_Wide_Type for attribute\n+               --  Storage_Size since this attribute is not defined for\n+               --  such types (RM E.2.2(17)).\n \n                Validate_Remote_Access_To_Class_Wide_Type (N);\n "}, {"sha": "8d785af9f6df170440572ced7e26c9ad2969bf2f", "filename": "gcc/ada/sem_cat.adb", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/072c5071e0e95401cec2b700c3f276c9eb91abb1/gcc%2Fada%2Fsem_cat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/072c5071e0e95401cec2b700c3f276c9eb91abb1/gcc%2Fada%2Fsem_cat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.adb?ref=072c5071e0e95401cec2b700c3f276c9eb91abb1", "patch": "@@ -1815,7 +1815,17 @@ package body Sem_Cat is\n \n       --    4. called from sem_res Resolve_Actuals\n \n-      if K = N_Attribute_Reference then\n+      if K = N_Attribute_Definition_Clause then\n+         E := Etype (Entity (N));\n+\n+         if Is_Remote_Access_To_Class_Wide_Type (E) then\n+            Error_Msg_Name_1 := Chars (N);\n+            Error_Msg_N\n+              (\"cannot specify% aspect for a remote operand\", N);\n+            return;\n+         end if;\n+\n+      elsif K = N_Attribute_Reference then\n          E := Etype (Prefix (N));\n \n          if Is_Remote_Access_To_Class_Wide_Type (E) then"}, {"sha": "2c9589797127a86ef315ec6f907072fc9e30c731", "filename": "gcc/ada/sem_cat.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/072c5071e0e95401cec2b700c3f276c9eb91abb1/gcc%2Fada%2Fsem_cat.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/072c5071e0e95401cec2b700c3f276c9eb91abb1/gcc%2Fada%2Fsem_cat.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.ads?ref=072c5071e0e95401cec2b700c3f276c9eb91abb1", "patch": "@@ -120,8 +120,8 @@ package Sem_Cat is\n    --  Checks that Storage_Pool and Storage_Size attribute references are\n    --  not applied to remote access-to-class-wide types. Also checks that the\n    --  expected type for an allocator cannot be a remote access-to-class-wide\n-   --  type. ALso checks that a remote access-to-class-wide type cannot be an\n-   --  actual parameter for a generic formal access type. RM E.2.3(22).\n+   --  type. Also checks that a remote access-to-class-wide type cannot be an\n+   --  actual parameter for a generic formal access type. RM E.2.2(17).\n \n    procedure Validate_RT_RAT_Component (N : Node_Id);\n    --  Given N, the package library unit declaration node, we should check"}, {"sha": "878b4c5118cbc28d1289b4ea8225045a359413ff", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/072c5071e0e95401cec2b700c3f276c9eb91abb1/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/072c5071e0e95401cec2b700c3f276c9eb91abb1/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=072c5071e0e95401cec2b700c3f276c9eb91abb1", "patch": "@@ -48,6 +48,7 @@ with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n with Sem_Aux;  use Sem_Aux;\n with Sem_Case; use Sem_Case;\n+with Sem_Cat;  use Sem_Cat;\n with Sem_Ch3;  use Sem_Ch3;\n with Sem_Ch6;  use Sem_Ch6;\n with Sem_Ch7;  use Sem_Ch7;\n@@ -6415,6 +6416,12 @@ package body Sem_Ch13 is\n                return;\n             end if;\n \n+            --  Validate_Remote_Access_To_Class_Wide_Type for attribute\n+            --  Storage_Pool since this attribute cannot be defined for such\n+            --  types (RM E.2.2(17)).\n+\n+            Validate_Remote_Access_To_Class_Wide_Type (N);\n+\n             --  If the argument is a name that is not an entity name, then\n             --  we construct a renaming operation to define an entity of\n             --  type storage pool.\n@@ -6524,6 +6531,12 @@ package body Sem_Ch13 is\n                null;\n \n             else\n+               --  Validate_Remote_Access_To_Class_Wide_Type for attribute\n+               --  Storage_Size since this attribute cannot be defined for such\n+               --  types (RM E.2.2(17)).\n+\n+               Validate_Remote_Access_To_Class_Wide_Type (N);\n+\n                Analyze_And_Resolve (Expr, Any_Integer);\n \n                if Is_Access_Type (U_Ent) then"}]}