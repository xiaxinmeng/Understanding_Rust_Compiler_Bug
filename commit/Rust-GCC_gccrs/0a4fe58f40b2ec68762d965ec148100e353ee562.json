{"sha": "0a4fe58f40b2ec68762d965ec148100e353ee562", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGE0ZmU1OGY0MGIyZWM2ODc2MmQ5NjVlYzE0ODEwMGUzNTNlZTU2Mg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2006-08-02T09:34:34Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2006-08-02T09:34:34Z"}, "message": "PR gcov/profile/28480\n\n\tPR gcov/profile/28480\n\t* tree-cfg.c (change_bb_for_stmt): New function.\n\t(tree_merge_blocks, tree_split_blocks): Use it.\n\nFrom-SVN: r115873", "tree": {"sha": "cda3cd19800c29aae1a5538d400479190839eb9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cda3cd19800c29aae1a5538d400479190839eb9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a4fe58f40b2ec68762d965ec148100e353ee562", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a4fe58f40b2ec68762d965ec148100e353ee562", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a4fe58f40b2ec68762d965ec148100e353ee562", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a4fe58f40b2ec68762d965ec148100e353ee562/comments", "author": null, "committer": null, "parents": [{"sha": "1ec481b18c4a6008afbfd4fca00655c9fb4d0c0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ec481b18c4a6008afbfd4fca00655c9fb4d0c0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ec481b18c4a6008afbfd4fca00655c9fb4d0c0d"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "af8165e13cfee227420103b0f992abf3e33af1db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a4fe58f40b2ec68762d965ec148100e353ee562/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a4fe58f40b2ec68762d965ec148100e353ee562/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0a4fe58f40b2ec68762d965ec148100e353ee562", "patch": "@@ -1,3 +1,9 @@\n+2006-08-02  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR gcov/profile/28480\n+\t* tree-cfg.c (change_bb_for_stmt): New function.\n+\t(tree_merge_blocks, tree_split_blocks): Use it.\n+\n 2006-08-01  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \tPR c++/28250"}, {"sha": "02bc0083285289b61fcb0ea4a2fa3c5df1cdf00b", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a4fe58f40b2ec68762d965ec148100e353ee562/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a4fe58f40b2ec68762d965ec148100e353ee562/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=0a4fe58f40b2ec68762d965ec148100e353ee562", "patch": "@@ -112,6 +112,7 @@ static inline bool stmt_starts_bb_p (tree, tree);\n static int tree_verify_flow_info (void);\n static void tree_make_forwarder_block (edge);\n static void tree_cfg2vcg (FILE *);\n+static inline void change_bb_for_stmt (tree t, basic_block bb);\n \n /* Flowgraph optimization and cleanup.  */\n static void tree_merge_blocks (basic_block, basic_block);\n@@ -1386,7 +1387,7 @@ tree_merge_blocks (basic_block a, basic_block b)\n \t}\n       else\n \t{\n-\t  set_bb_for_stmt (bsi_stmt (bsi), a);\n+\t  change_bb_for_stmt (bsi_stmt (bsi), a);\n \t  bsi_next (&bsi);\n \t}\n     }\n@@ -2778,6 +2779,20 @@ set_bb_for_stmt (tree t, basic_block bb)\n     }\n }\n \n+/* Faster version of set_bb_for_stmt that assume that statement is being moved\n+   from one basic block to another.  \n+   For BB splitting we can run into quadratic case, so performance is quite\n+   important and knowing that the tables are big enought, change_bb_for_stmt\n+   can inline as leaf function.  */\n+static inline void\n+change_bb_for_stmt (tree t, basic_block bb)\n+{\n+  get_stmt_ann (t)->bb = bb;\n+  if (TREE_CODE (t) == LABEL_EXPR)\n+    VEC_replace (basic_block, label_to_block_map,\n+\t\t LABEL_DECL_UID (LABEL_EXPR_LABEL (t)), bb);\n+}\n+\n /* Finds iterator for STMT.  */\n \n extern block_stmt_iterator\n@@ -4203,7 +4218,7 @@ tree_split_block (basic_block bb, void *stmt)\n   new_bb->stmt_list = tsi_split_statement_list_before (&bsi.tsi);\n   for (tsi_tgt = tsi_start (new_bb->stmt_list);\n        !tsi_end_p (tsi_tgt); tsi_next (&tsi_tgt))\n-    set_bb_for_stmt (tsi_stmt (tsi_tgt), new_bb);\n+    change_bb_for_stmt (tsi_stmt (tsi_tgt), new_bb);\n \n   return new_bb;\n }"}]}