{"sha": "1ac7d389a554fb1b77b3856da85a69fd026463e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFjN2QzODlhNTU0ZmIxYjc3YjM4NTZkYTg1YTY5ZmQwMjY0NjNlMw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-03T08:55:41Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-03T08:55:41Z"}, "message": "If we find a link pointing to ., make a similar link to ., not a link to an absolute name.\n\nIf we find a link pointing to ., make a similar\nlink to ., not a link to an absolute name.\n(stdio.h): Change stdio.h to use stdarg.h to get va_list.\n\nWhen link points to a dir $dirname outside $INPUT,\ncopy that dir into $LIB/root$dirname.  Translate the link itself\ninto a link to that new dir.  Make a file DONE in each treetop dir\nso no treetop is scanned twice.  Improve progress messages.\n\nFrom-SVN: r2046", "tree": {"sha": "d4ebbafda170343a76819abfc58c9c9c5380c463", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4ebbafda170343a76819abfc58c9c9c5380c463"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ac7d389a554fb1b77b3856da85a69fd026463e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ac7d389a554fb1b77b3856da85a69fd026463e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ac7d389a554fb1b77b3856da85a69fd026463e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ac7d389a554fb1b77b3856da85a69fd026463e3/comments", "author": null, "committer": null, "parents": [{"sha": "cc6fc442d8094d41410ca714e7ff87f822a1b4c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc6fc442d8094d41410ca714e7ff87f822a1b4c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc6fc442d8094d41410ca714e7ff87f822a1b4c0"}], "stats": {"total": 88, "additions": 74, "deletions": 14}, "files": [{"sha": "f489a81df63edd6e350781c8d655a5b1f637d9b6", "filename": "gcc/fixincludes", "status": "modified", "additions": 74, "deletions": 14, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ac7d389a554fb1b77b3856da85a69fd026463e3/gcc%2Ffixincludes", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ac7d389a554fb1b77b3856da85a69fd026463e3/gcc%2Ffixincludes", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixincludes?ref=1ac7d389a554fb1b77b3856da85a69fd026463e3", "patch": "@@ -36,7 +36,7 @@ then echo fixincludes: no output directory specified\n exit 1\n fi\n \n-echo 'Building fixincludes in ' ${LIB}\n+echo Building fixed headers in ${LIB}\n \n # Determine whether this system has symbolic links.\n if ln -s X $LIB/ShouldNotExist 2>/dev/null; then\n@@ -46,7 +46,7 @@ else\n   LINKS=false\n fi\n \n-echo 'Making directories:'\n+echo Finding directories and links to directories\n cd ${INPUT}\n # Find all directories and all symlinks that point to directories.\n # Put the list in $files.\n@@ -62,6 +62,7 @@ do\n     newdirs=\n     for d in $dirs\n     do\n+\techo \" Searching $INPUT/$d\"\n \tif [ \"$d\" != . ]\n \tthen\n \t    d=$d/.\n@@ -80,7 +81,8 @@ do\n \t  theselinks=`find $d -type l -print`\n \tfor d1 in $theselinks --dummy--\n \tdo\n-\t    # If it is a directory, add it to $newdirs\n+\t    # If the link points to a directory,\n+\t    # add that dir to $newdirs\n \t    if [ -d $d1 ]\n \t    then\n \t\tnewdirs=\"$newdirs $d1\"\n@@ -93,7 +95,7 @@ do\n done\n \n dirs=\n-echo all directories:\n+echo \"All directories (including links to directories):\"\n echo $files\n \n for file in $files; do\n@@ -102,14 +104,15 @@ for file in $files; do\n   then mkdir $LIB/$file\n   fi\n done\n+mkdir $LIB/root\n \n # treetops gets an alternating list\n # of old directories to copy\n # and the new directories to copy to.\n treetops=\"${INPUT} ${LIB}\"\n \n if $LINKS; then\n-  echo 'Making internal symbolic directory links'\n+  echo 'Making symbolic directory links'\n   for file in $files; do\n     dest=`ls -ld $file | sed -n 's/.*-> //p'`\n     if [ \"$dest\" ]; then    \n@@ -124,21 +127,42 @@ if $LINKS; then\n \tcd $dest\n \t# X gets the dir that the link actually leads to.\n \tx=`pwd`\n+\t# If a link points to ., make a similar link to .\n+\tif [ $x = $INPUT ]; then\n+\t  echo $file '->' . ': Making link'\n+\t  rm -fr ${LIB}/$file > /dev/null 2>&1\n+\t  ln -s . ${LIB}/$file > /dev/null 2>&1\n \t# If link leads back into ${INPUT},\n \t# make a similar link here.\n-\tif expr $x : \"${INPUT}/.*\" > /dev/null; then\n+\telif expr $x : \"${INPUT}/.*\" > /dev/null; then\n \t  # Y gets the actual target dir name, relative to ${INPUT}.\n \t  y=`echo $x | sed -n \"s&${INPUT}/&&p\"`\n \t  echo $file '->' $y ': Making link'\n \t  rm -fr ${LIB}/$file > /dev/null 2>&1\n \t  ln -s ${LIB}/$y ${LIB}/$file > /dev/null 2>&1\n \telse\n-\t  # If the link is to outside ${INPUT},\n+\t  # If the link is to a dir $target outside ${INPUT},\n+\t  # repoint the link at ${INPUT}/root$target\n+\t  # and process $target into ${INPUT}/root$target\n \t  # treat this directory as if it actually contained the files.\n-# This line used to have $dest instead of $x.\n-# $dest seemed to be wrong for links found in subdirectories\n-# of ${INPUT}.  Does this change break anything?\n-\t  treetops=\"$treetops $x ${LIB}/$file\"\n+\t  echo $file '->' root$x ': Making link'\n+\t  if [ -d $LIB/root$x ]\n+\t  then true\n+\t  else\n+\t    dirname=root$x/\n+\t    dirmade=.\n+\t    cd $LIB\n+\t    while [ x$dirname != x ]; do\n+\t      component=`echo $dirname | sed -e 's|/.*$||'`\n+\t      mkdir $component >/dev/null 2>&1\n+\t      cd $component\n+\t      dirmade=$dirmade/$component\n+\t      dirname=`echo $dirname | sed -e 's|[^/]*/||'`\n+\t    done\n+\t  fi\n+\t  rm -fr ${LIB}/$file > /dev/null 2>&1\n+\t  ln -s ${LIB}/root$x ${LIB}/$file > /dev/null 2>&1\n+\t  treetops=\"$treetops $x ${LIB}/root$x\"\n \tfi\n       fi\n       cd $cwd\n@@ -149,13 +173,21 @@ fi\n set - $treetops\n while [ $# != 0 ]; do\n   # $1 is an old directory to copy, and $2 is the new directory to copy to.\n-  echo \"Finding header files in $1:\"\n   cd ${INPUT}\n   cd $1\n+# The same dir can appear more than once in treetops.\n+# There's no need to scan it more than once.\n+  if [ -f $2/DONE ]\n+  then\n+    files=\n+  else\n+    touch $2/DONE\n+    echo Fixing directory $1 into $2\n # Check .h files which are symlinks as well as those which are files.\n # A link to a header file will not be processed by anything but this.\n-  files=`find . -name '*.h' \\( -type f -o -type l \\) -print`\n-  echo 'Checking header files:'\n+    files=`find . -name '*.h' \\( -type f -o -type l \\) -print`\n+    echo Checking header files\n+  fi\n # Note that BSD43_* are used on recent MIPS systems.\n   for file in $files; do\n # This call to egrep is essential, since checking a file with egrep\n@@ -737,6 +769,34 @@ if [ -r ${LIB}/$file ]; then\n   fi\n fi\n \n+# Don't use or define the name va_list in stdio.h.\n+# This is for ANSI and also to interoperate properly with gvarargs.h.\n+file=stdio.h\n+if [ -r $file ] && [ ! -r ${LIB}/$file ]; then\n+  cp $file ${LIB}/$file >/dev/null 2>&1 || echo \"Can't copy $file\"\n+  chmod +w ${LIB}/$file 2>/dev/null\n+fi\n+\n+if [ -r ${LIB}/$file ]; then\n+  echo Fixing $file, use of va_list\n+  # Arrange for stdio.h to use stdarg.h to define __gnuc_va_list\n+  (echo \"#define __need___va_list\"\n+   echo \"#include <stdarg.h>\") > ${LIB}/${file}.sed\n+  # Use __gnuc_va_list in arg types in place of va_list.\n+  # Define __va_list__ (something harmless and unused) instead of va_list.\n+  # Don't claim to have defined va_list.\n+  sed -e 's@ va_list @ __gnuc_va_list @' \\\n+      -e 's@ va_list@ __va_list__@' \\\n+      -e 's@VA_LIST@DUMMY_VA_LIST@' \\\n+    ${LIB}/$file >> ${LIB}/${file}.sed\n+  \n+  rm -f ${LIB}/$file; mv ${LIB}/${file}.sed ${LIB}/$file\n+  if cmp $file ${LIB}/$file >/dev/null 2>&1; then\n+    echo Deleting ${LIB}/$file\\; no fixes were needed.\n+    rm -f ${LIB}/$file\n+  fi\n+fi\n+\n # Cancel out ansi_compat.h on Ultrix.  Replace it with empty file.\n file=ansi_compat.h\n if [ -r $file ] && [ ! -r ${LIB}/$file ]; then"}]}