{"sha": "e2113565144c24b2578835019ba7bedad93c3a1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIxMTM1NjUxNDRjMjRiMjU3ODgzNTAxOWJhN2JlZGFkOTNjM2ExZg==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2010-05-31T20:22:10Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2010-05-31T20:22:10Z"}, "message": "re PR fortran/36928 (array temporary for interleaving assignment with non-constant start values)\n\n2010-05-31  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/36928\n\t* dependency.c (gfc_check_section_vs_section):  Check\n\tfor interleaving array assignments without conflicts.\n\n2010-05-31  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/36928\n\t* gfortran.dg/dependency_27.f90:  New test.\n\t* gfortran.dg/array_assign_1.F90:  New test.\n\nFrom-SVN: r160085", "tree": {"sha": "6a2c91470e1a738871323945032bdd6f79c36507", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a2c91470e1a738871323945032bdd6f79c36507"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2113565144c24b2578835019ba7bedad93c3a1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2113565144c24b2578835019ba7bedad93c3a1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2113565144c24b2578835019ba7bedad93c3a1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2113565144c24b2578835019ba7bedad93c3a1f/comments", "author": null, "committer": null, "parents": [{"sha": "c71ad61ee029c7c75d75f8af9f7c9f1356e21656", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c71ad61ee029c7c75d75f8af9f7c9f1356e21656", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c71ad61ee029c7c75d75f8af9f7c9f1356e21656"}], "stats": {"total": 102, "additions": 102, "deletions": 0}, "files": [{"sha": "e798efeea1122e0f1340dfb6aba548f103b6108b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2113565144c24b2578835019ba7bedad93c3a1f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2113565144c24b2578835019ba7bedad93c3a1f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e2113565144c24b2578835019ba7bedad93c3a1f", "patch": "@@ -1,3 +1,9 @@\n+2010-05-31  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/36928\n+\t* dependency.c (gfc_check_section_vs_section):  Check\n+\tfor interleaving array assignments without conflicts.\n+\n 2010-05-30  Janus Weil  <janus@gcc.gnu.org>\n \n \t* gcc/fortran/gfortran.h (CLASS_DATA): New macro for accessing the"}, {"sha": "87f60df8e2a4a01a970ad2c25513fec3a2958463", "filename": "gcc/fortran/dependency.c", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2113565144c24b2578835019ba7bedad93c3a1f/gcc%2Ffortran%2Fdependency.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2113565144c24b2578835019ba7bedad93c3a1f/gcc%2Ffortran%2Fdependency.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdependency.c?ref=e2113565144c24b2578835019ba7bedad93c3a1f", "patch": "@@ -999,6 +999,42 @@ gfc_check_section_vs_section (gfc_ref *lref, gfc_ref *rref, int n)\n \treturn GFC_DEP_EQUAL;\n     }\n \n+  /* Handle cases like x:y:2 vs. x+1:z:4 as GFC_DEP_NODEP.\n+     There is no dependency if the remainder of\n+     (l_start - r_start) / gcd(l_stride, r_stride) is\n+     nonzero.\n+     TODO:\n+       - Handle cases where x is an expression.\n+       - Cases like a(1:4:2) = a(2:3) are still not handled.\n+  */\n+\n+#define IS_CONSTANT_INTEGER(a) ((a) && ((a)->expr_type == EXPR_CONSTANT) \\\n+\t\t\t      && (a)->ts.type == BT_INTEGER)\n+\n+  if (IS_CONSTANT_INTEGER(l_start) && IS_CONSTANT_INTEGER(r_start)\n+      && IS_CONSTANT_INTEGER(l_stride) && IS_CONSTANT_INTEGER(r_stride))\n+    {\n+      mpz_t gcd, tmp;\n+      int result;\n+\n+      mpz_init (gcd);\n+      mpz_init (tmp);\n+\n+      mpz_gcd (gcd, l_stride->value.integer, r_stride->value.integer);\n+      mpz_sub (tmp, l_start->value.integer, r_start->value.integer);\n+\n+      mpz_fdiv_r (tmp, tmp, gcd);\n+      result = mpz_cmp_si (tmp, 0L);\n+\n+      mpz_clear (gcd);\n+      mpz_clear (tmp);\n+\n+      if (result != 0)\n+\treturn GFC_DEP_NODEP;\n+    }\n+\n+#undef IS_CONSTANT_INTEGER\n+\n   /* Check for forward dependencies x:y vs. x+1:z.  */\n   if (l_dir == 1 && r_dir == 1\n       && l_start && r_start && gfc_dep_compare_expr (l_start, r_start) == -1"}, {"sha": "4011291c8c0dfbdb644574b2589eeafe8de73b64", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2113565144c24b2578835019ba7bedad93c3a1f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2113565144c24b2578835019ba7bedad93c3a1f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e2113565144c24b2578835019ba7bedad93c3a1f", "patch": "@@ -1,3 +1,9 @@\n+2010-05-31  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/36928\n+\t* gfortran.dg/dependency_27.f90:  New test.\n+\t* gfortran.dg/array_assign_1.F90:  New test.\n+\n 2010-05-31  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/44338"}, {"sha": "328107011cb2fa56a97a7cee7955b23ef02f90b7", "filename": "gcc/testsuite/gfortran.dg/array_assignment_1.F90", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2113565144c24b2578835019ba7bedad93c3a1f/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_assignment_1.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2113565144c24b2578835019ba7bedad93c3a1f/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_assignment_1.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_assignment_1.F90?ref=e2113565144c24b2578835019ba7bedad93c3a1f", "patch": "@@ -0,0 +1,39 @@\n+! { dg-do run }\n+! { dg-options \"-ffree-line-length-none\" }\n+! Test that different array assignments work even when interleaving,\n+! reversing etc.  Make sure the results from assignment with constants\n+! as array triples and runtime array triples (where we always create\n+! a temporary) match.\n+#define TST(b,c,d,e,f,g,r) a=init; a(b:c:d) = a(e:f:g); \\\n+       write(unit=line ,fmt=\"(9I1)\") a;\\\n+       if (line /= r) call abort ; \\\n+       call mytst(b,c,d,e,f,g,r);\n+\n+program main\n+  implicit none\n+  integer :: i\n+  integer, parameter :: n=9\n+  integer,  dimension(n) :: a\n+  character(len=n) :: line\n+  integer, dimension(n), parameter :: init = (/(i,i=1,n)/)\n+  TST(2,n,2,1,n-1,2,'113355779')\n+  TST(3,9,3,2,6,2,'122454786');\n+  TST(1,8,2,3,9,2,'325476989');\n+  TST(1,6,1,4,9,1,'456789789');\n+  TST(9,5,-1,1,5,1,'123454321');\n+  TST(9,5,-2,1,5,2,'123456381');\n+  TST(5,9,2,5,1,-2,'123456381');\n+  TST(1,6,1,2,7,1,'234567789');\n+  TST(2,7,1,1,6,1,'112345689');\n+end program main\n+\n+subroutine mytst(b,c,d,e,f,g,r)\n+  integer,intent(in) :: b,c,d,e,f,g\n+  character(len=9), intent(in) :: r\n+  character(len=9) :: line\n+  integer, dimension(9) :: a\n+  a = (/(i,i=1,9)/)\n+  a(b:c:d) = a(e:f:g)\n+  write (unit=line,fmt='(9I1)') a\n+  if (line /= r) call abort\n+end subroutine mytst"}, {"sha": "ee7c4fa42693caefa8e5cdbc1d669812b8b5aa72", "filename": "gcc/testsuite/gfortran.dg/dependency_27.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2113565144c24b2578835019ba7bedad93c3a1f/gcc%2Ftestsuite%2Fgfortran.dg%2Fdependency_27.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2113565144c24b2578835019ba7bedad93c3a1f/gcc%2Ftestsuite%2Fgfortran.dg%2Fdependency_27.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdependency_27.f90?ref=e2113565144c24b2578835019ba7bedad93c3a1f", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do compile }\n+! { dg-options \"-Warray-temporaries\" }\n+! PR 36928 - optimize array interleaving array temporaries\n+program main\n+  real, dimension(20) :: a\n+  read (10) a\n+  a(2:10:2) = a (1:9:2)\n+  write (11) a\n+  read (10) a\n+  a(2:10:4) = a(1:5:2)\n+  write (11) a\n+  read (10) a\n+  a(2:10:4) = a(5:1:-2)\n+  write (11) a\n+end program main"}]}