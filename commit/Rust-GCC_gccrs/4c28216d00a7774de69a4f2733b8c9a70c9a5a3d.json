{"sha": "4c28216d00a7774de69a4f2733b8c9a70c9a5a3d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGMyODIxNmQwMGE3Nzc0ZGU2OWE0ZjI3MzNiOGM5YTcwYzlhNWEzZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2003-03-06T19:33:44Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-03-06T19:33:44Z"}, "message": "tree-inline.c (inlinable_function_p): Revert earlier change pending investigation.\n\n        * tree-inline.c (inlinable_function_p): Revert earlier change\n        pending investigation.\n\nFrom-SVN: r63897", "tree": {"sha": "00eae8c337dfceb46951c18ec2453a7f8070e123", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00eae8c337dfceb46951c18ec2453a7f8070e123"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c28216d00a7774de69a4f2733b8c9a70c9a5a3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c28216d00a7774de69a4f2733b8c9a70c9a5a3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c28216d00a7774de69a4f2733b8c9a70c9a5a3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c28216d00a7774de69a4f2733b8c9a70c9a5a3d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "53ec7ec1f19f1279b4c035c6950ca0be56559ee0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53ec7ec1f19f1279b4c035c6950ca0be56559ee0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53ec7ec1f19f1279b4c035c6950ca0be56559ee0"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "2ec6190cf3dec951e5bbceb03b28f8eeafdb2d49", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c28216d00a7774de69a4f2733b8c9a70c9a5a3d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c28216d00a7774de69a4f2733b8c9a70c9a5a3d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4c28216d00a7774de69a4f2733b8c9a70c9a5a3d", "patch": "@@ -1,3 +1,8 @@\n+2003-03-06  Jason Merrill  <jason@redhat.com>\n+\n+\t* tree-inline.c (inlinable_function_p): Revert earlier change\n+\tpending investigation.\n+\n 2003-03-06  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.md (a new peephole2): New."}, {"sha": "e1fab06177b049da80338c22a7b1280797387d5e", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c28216d00a7774de69a4f2733b8c9a70c9a5a3d/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c28216d00a7774de69a4f2733b8c9a70c9a5a3d/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=4c28216d00a7774de69a4f2733b8c9a70c9a5a3d", "patch": "@@ -952,11 +952,6 @@ inlinable_function_p (fn, id)\n   if (DECL_UNINLINABLE (fn))\n     return 0;\n \n-  /* Check this now so that we instantiate C++ templates before reading\n-     DECL_NUM_STMTS.  */\n-  if ((*lang_hooks.tree_inlining.cannot_inline_tree_fn) (&fn))\n-    return 0;\n-\n   /* Assume it is not inlinable.  */\n   inlinable = 0;\n        \n@@ -1037,6 +1032,9 @@ inlinable_function_p (fn, id)\n \t}\n     }\n \n+  if (inlinable && (*lang_hooks.tree_inlining.cannot_inline_tree_fn) (&fn))\n+    inlinable = 0;\n+\n   /* If we don't have the function body available, we can't inline\n      it.  */\n   if (! DECL_SAVED_TREE (fn))"}]}