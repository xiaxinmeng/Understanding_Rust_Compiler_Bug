{"sha": "ea26c8e414ff21cc2dccf2a65476931c636c8147", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWEyNmM4ZTQxNGZmMjFjYzJkY2NmMmE2NTQ3NjkzMWM2MzZjODE0Nw==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2014-05-21T13:21:38Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-05-21T13:21:38Z"}, "message": "freeze.adb (Freeze_Record_Type): Update the use of Is_SPARK_Volatile.\n\n2014-05-21  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* freeze.adb (Freeze_Record_Type): Update the use of\n\tIs_SPARK_Volatile.\n\t* sem_ch3.adb (Analyze_Object_Contract): Update the use of\n\tIs_SPARK_Volatile.\n\t(Process_Discriminants): Update the use of Is_SPARK_Volatile.\n\t* sem_ch5.adb (Analyze_Iterator_Specification): Update the use\n\tof Is_SPARK_Volatile.\n\t(Analyze_Loop_Parameter_Specification):\n\tUpdate the use of Is_SPARK_Volatile.\n\t* sem_ch6.adb (Process_Formals): Catch an illegal use of an IN\n\tformal parameter when its type is volatile.\n\t* sem_prag.adb (Analyze_Global_Item): Update the use of\n\tIs_SPARK_Volatile.\n\t* sem_res.adb (Resolve_Entity_Name): Correct the guard which\n\tdetermines whether an entity is a volatile source SPARK object.\n\t* sem_util.adb (Has_Enabled_Property): Accout for external\n\tproperties being set on objects other than abstract states\n\tand variables. An example would be a formal parameter.\n\t(Is_SPARK_Volatile): New routine.\n\t(Is_SPARK_Volatile_Object):\n\tRemove the entity-specific tests. Call routine Is_SPARK_Volatile\n\twhen checking entities and/or types.\n\t* sem_util.ads (Is_SPARK_Volatile): New routine.\n\nFrom-SVN: r210708", "tree": {"sha": "5b82d2db5e38871b2e7859f7f8efd1b514974e81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b82d2db5e38871b2e7859f7f8efd1b514974e81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea26c8e414ff21cc2dccf2a65476931c636c8147", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea26c8e414ff21cc2dccf2a65476931c636c8147", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea26c8e414ff21cc2dccf2a65476931c636c8147", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea26c8e414ff21cc2dccf2a65476931c636c8147/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "65529f748184741575136af3aab497059ff2aa10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65529f748184741575136af3aab497059ff2aa10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65529f748184741575136af3aab497059ff2aa10"}], "stats": {"total": 129, "additions": 92, "deletions": 37}, "files": [{"sha": "dd5f7e1f42ca13fae1693f4ed310bbcbf4ccf676", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea26c8e414ff21cc2dccf2a65476931c636c8147/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea26c8e414ff21cc2dccf2a65476931c636c8147/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ea26c8e414ff21cc2dccf2a65476931c636c8147", "patch": "@@ -1,3 +1,29 @@\n+2014-05-21  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* freeze.adb (Freeze_Record_Type): Update the use of\n+\tIs_SPARK_Volatile.\n+\t* sem_ch3.adb (Analyze_Object_Contract): Update the use of\n+\tIs_SPARK_Volatile.\n+\t(Process_Discriminants): Update the use of Is_SPARK_Volatile.\n+\t* sem_ch5.adb (Analyze_Iterator_Specification): Update the use\n+\tof Is_SPARK_Volatile.\n+\t(Analyze_Loop_Parameter_Specification):\n+\tUpdate the use of Is_SPARK_Volatile.\n+\t* sem_ch6.adb (Process_Formals): Catch an illegal use of an IN\n+\tformal parameter when its type is volatile.\n+\t* sem_prag.adb (Analyze_Global_Item): Update the use of\n+\tIs_SPARK_Volatile.\n+\t* sem_res.adb (Resolve_Entity_Name): Correct the guard which\n+\tdetermines whether an entity is a volatile source SPARK object.\n+\t* sem_util.adb (Has_Enabled_Property): Accout for external\n+\tproperties being set on objects other than abstract states\n+\tand variables. An example would be a formal parameter.\n+\t(Is_SPARK_Volatile): New routine.\n+\t(Is_SPARK_Volatile_Object):\n+\tRemove the entity-specific tests. Call routine Is_SPARK_Volatile\n+\twhen checking entities and/or types.\n+\t* sem_util.ads (Is_SPARK_Volatile): New routine.\n+\n 2014-05-21  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_warn.adb: Minor fix to warning messages (use ?? instead"}, {"sha": "e48cb9fb542258d417dc13e03523eb1a67c434f8", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea26c8e414ff21cc2dccf2a65476931c636c8147/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea26c8e414ff21cc2dccf2a65476931c636c8147/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=ea26c8e414ff21cc2dccf2a65476931c636c8147", "patch": "@@ -3318,7 +3318,7 @@ package body Freeze is\n          --  they are not standard Ada legality rules.\n \n          if SPARK_Mode = On then\n-            if Is_SPARK_Volatile_Object (Rec) then\n+            if Is_SPARK_Volatile (Rec) then\n \n                --  A discriminated type cannot be volatile (SPARK RM C.6(4))\n \n@@ -3340,7 +3340,7 @@ package body Freeze is\n                Comp := First_Component (Rec);\n                while Present (Comp) loop\n                   if Comes_From_Source (Comp)\n-                    and then Is_SPARK_Volatile_Object (Comp)\n+                    and then Is_SPARK_Volatile (Comp)\n                   then\n                      Error_Msg_Name_1 := Chars (Rec);\n                      Error_Msg_N"}, {"sha": "293a3f695cdbfdfeb3efd9728738af5587a0f8e4", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea26c8e414ff21cc2dccf2a65476931c636c8147/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea26c8e414ff21cc2dccf2a65476931c636c8147/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=ea26c8e414ff21cc2dccf2a65476931c636c8147", "patch": "@@ -2988,7 +2988,7 @@ package body Sem_Ch3 is\n          --  actuals in instantiations (SPARK RM 7.1.3(6)).\n \n          if SPARK_Mode = On\n-           and then Is_SPARK_Volatile_Object (Obj_Id)\n+           and then Is_SPARK_Volatile (Obj_Id)\n            and then No (Corresponding_Generic_Association (Parent (Obj_Id)))\n          then\n             Error_Msg_N (\"constant cannot be volatile\", Obj_Id);\n@@ -3000,7 +3000,7 @@ package body Sem_Ch3 is\n          --  they are not standard Ada legality rules.\n \n          if SPARK_Mode = On then\n-            if Is_SPARK_Volatile_Object (Obj_Id) then\n+            if Is_SPARK_Volatile (Obj_Id) then\n \n                --  The declaration of a volatile object must appear at the\n                --  library level (SPARK RM 7.1.3(7), C.6(6)).\n@@ -3030,7 +3030,7 @@ package body Sem_Ch3 is\n                --  A non-volatile object cannot have volatile components\n                --  (SPARK RM 7.1.3(7)).\n \n-               if not Is_SPARK_Volatile_Object (Obj_Id)\n+               if not Is_SPARK_Volatile (Obj_Id)\n                  and then Has_Volatile_Component (Obj_Typ)\n                then\n                   Error_Msg_N\n@@ -18051,7 +18051,7 @@ package body Sem_Ch3 is\n          --  (SPARK RM 7.1.3(6)).\n \n          if SPARK_Mode = On\n-           and then Is_SPARK_Volatile_Object (Defining_Identifier (Discr))\n+           and then Is_SPARK_Volatile (Defining_Identifier (Discr))\n          then\n             Error_Msg_N (\"discriminant cannot be volatile\", Discr);\n          end if;"}, {"sha": "60080ed3d864cd57121ef4896eed85a8f84f4e9c", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea26c8e414ff21cc2dccf2a65476931c636c8147/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea26c8e414ff21cc2dccf2a65476931c636c8147/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=ea26c8e414ff21cc2dccf2a65476931c636c8147", "patch": "@@ -1986,7 +1986,7 @@ package body Sem_Ch5 is\n \n       if SPARK_Mode = On\n         and then not Of_Present (N)\n-        and then Is_SPARK_Volatile_Object (Ent)\n+        and then Is_SPARK_Volatile (Ent)\n       then\n          Error_Msg_N (\"loop parameter cannot be volatile\", Ent);\n       end if;\n@@ -2706,7 +2706,7 @@ package body Sem_Ch5 is\n       --  when SPARK_Mode is on as it is not a standard Ada legality check\n       --  (SPARK RM 7.1.3(6)).\n \n-      if SPARK_Mode = On and then Is_SPARK_Volatile_Object (Id) then\n+      if SPARK_Mode = On and then Is_SPARK_Volatile (Id) then\n          Error_Msg_N (\"loop parameter cannot be volatile\", Id);\n       end if;\n    end Analyze_Loop_Parameter_Specification;"}, {"sha": "01187831fe153f499544025e1cee20dafad31c33", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 25, "deletions": 13, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea26c8e414ff21cc2dccf2a65476931c636c8147/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea26c8e414ff21cc2dccf2a65476931c636c8147/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=ea26c8e414ff21cc2dccf2a65476931c636c8147", "patch": "@@ -11511,23 +11511,35 @@ package body Sem_Ch6 is\n          --  The following checks are relevant when SPARK_Mode is on as these\n          --  are not standard Ada legality rules.\n \n-         if SPARK_Mode = On\n-           and then Ekind_In (Scope (Formal), E_Function, E_Generic_Function)\n-         then\n-            --  A function cannot have a parameter of mode IN OUT or OUT\n-            --  (SPARK RM 6.1).\n+         if SPARK_Mode = On then\n+            if Ekind_In (Scope (Formal), E_Function, E_Generic_Function) then\n \n-            if Ekind_In (Formal, E_In_Out_Parameter, E_Out_Parameter) then\n-               Error_Msg_N\n-                 (\"function cannot have parameter of mode `OUT` or `IN OUT`\",\n-                  Formal);\n+               --  A function cannot have a parameter of mode IN OUT or OUT\n+               --  (SPARK RM 6.1).\n \n-            --  A function cannot have a volatile formal parameter\n-            --  (SPARK RM 7.1.3(10)).\n+               if Ekind_In (Formal, E_In_Out_Parameter, E_Out_Parameter) then\n+                  Error_Msg_N\n+                    (\"function cannot have parameter of mode `OUT` or \"\n+                     & \"`IN OUT`\", Formal);\n \n-            elsif Is_SPARK_Volatile_Object (Formal) then\n+               --  A function cannot have a volatile formal parameter\n+               --  (SPARK RM 7.1.3(10)).\n+\n+               elsif Is_SPARK_Volatile (Formal) then\n+                  Error_Msg_N\n+                    (\"function cannot have a volatile formal parameter\",\n+                     Formal);\n+               end if;\n+\n+            --  A procedure cannot have a formal parameter of mode IN because\n+            --  it behaves as a constant (SPARK RM 7.1.3(6)).\n+\n+            elsif Ekind (Scope (Formal)) = E_Procedure\n+              and then Ekind (Formal) = E_In_Parameter\n+              and then Is_SPARK_Volatile (Formal)\n+            then\n                Error_Msg_N\n-                 (\"function cannot have a volatile formal parameter\", Formal);\n+                 (\"formal parameter of mode `IN` cannot be volatile\", Formal);\n             end if;\n          end if;\n "}, {"sha": "62caba6abc48432445317a9437ebe9a21f65b39c", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea26c8e414ff21cc2dccf2a65476931c636c8147/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea26c8e414ff21cc2dccf2a65476931c636c8147/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ea26c8e414ff21cc2dccf2a65476931c636c8147", "patch": "@@ -2038,9 +2038,8 @@ package body Sem_Prag is\n                --  SPARK_Mode is on as they are not standard Ada legality\n                --  rules.\n \n-               elsif SPARK_Mode = On\n-                 and then Is_SPARK_Volatile_Object (Item_Id)\n-               then\n+               elsif SPARK_Mode = On and then Is_SPARK_Volatile (Item_Id) then\n+\n                   --  A volatile object cannot appear as a global item of a\n                   --  function (SPARK RM 7.1.3(9)).\n "}, {"sha": "2273fe873fc46dd63f3998c395a9bc1bb92193a3", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea26c8e414ff21cc2dccf2a65476931c636c8147/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea26c8e414ff21cc2dccf2a65476931c636c8147/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=ea26c8e414ff21cc2dccf2a65476931c636c8147", "patch": "@@ -6579,8 +6579,9 @@ package body Sem_Res is\n       --  standard Ada legality rules.\n \n       if SPARK_Mode = On\n-        and then Ekind_In (E, E_Abstract_State, E_Variable)\n-        and then Is_SPARK_Volatile_Object (E)\n+        and then Is_Object (E)\n+        and then Is_SPARK_Volatile (E)\n+        and then Comes_From_Source (E)\n         and then\n           (Async_Writers_Enabled (E)\n              or else Effective_Reads_Enabled (E))"}, {"sha": "29de16bdcd5cfc26756793a79232b4007aa9df24", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 22, "deletions": 10, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea26c8e414ff21cc2dccf2a65476931c636c8147/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea26c8e414ff21cc2dccf2a65476931c636c8147/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=ea26c8e414ff21cc2dccf2a65476931c636c8147", "patch": "@@ -7466,7 +7466,7 @@ package body Sem_Util is\n       begin\n          --  A non-volatile object can never possess external properties\n \n-         if not Is_SPARK_Volatile_Object (Item_Id) then\n+         if not Is_SPARK_Volatile (Item_Id) then\n             return False;\n \n          --  External properties related to variables come in two flavors -\n@@ -7514,11 +7514,19 @@ package body Sem_Util is\n    --  Start of processing for Has_Enabled_Property\n \n    begin\n+      --  Abstract states and variables have a flexible scheme of specifying\n+      --  external properties.\n+\n       if Ekind (Item_Id) = E_Abstract_State then\n          return State_Has_Enabled_Property;\n \n-      else pragma Assert (Ekind (Item_Id) = E_Variable);\n+      elsif Ekind (Item_Id) = E_Variable then\n          return Variable_Has_Enabled_Property;\n+\n+      --  Otherwise a property is enabled when the related object is volatile\n+\n+      else\n+         return Is_SPARK_Volatile (Item_Id);\n       end if;\n    end Has_Enabled_Property;\n \n@@ -11413,22 +11421,26 @@ package body Sem_Util is\n       end if;\n    end Is_SPARK_Object_Reference;\n \n+   -----------------------\n+   -- Is_SPARK_Volatile --\n+   -----------------------\n+\n+   function Is_SPARK_Volatile (Id : Entity_Id) return Boolean is\n+   begin\n+      return Is_Volatile (Id) or else Is_Volatile (Etype (Id));\n+   end Is_SPARK_Volatile;\n+\n    ------------------------------\n    -- Is_SPARK_Volatile_Object --\n    ------------------------------\n \n    function Is_SPARK_Volatile_Object (N : Node_Id) return Boolean is\n    begin\n-      if Nkind (N) = N_Defining_Identifier then\n-         return Is_Volatile (N) or else Is_Volatile (Etype (N));\n-\n-      elsif Is_Entity_Name (N) then\n-         return\n-           Is_SPARK_Volatile_Object (Entity (N))\n-             or else Is_Volatile (Etype (N));\n+      if Is_Entity_Name (N) then\n+         return Is_SPARK_Volatile (Entity (N));\n \n       elsif Nkind (N) = N_Expanded_Name then\n-         return Is_SPARK_Volatile_Object (Entity (N));\n+         return Is_SPARK_Volatile (Entity (N));\n \n       elsif Nkind (N) = N_Indexed_Component then\n          return Is_SPARK_Volatile_Object (Prefix (N));"}, {"sha": "8629d767d2b9fbc50db050d9d6d37acfe42ae133", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea26c8e414ff21cc2dccf2a65476931c636c8147/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea26c8e414ff21cc2dccf2a65476931c636c8147/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=ea26c8e414ff21cc2dccf2a65476931c636c8147", "patch": "@@ -1302,10 +1302,15 @@ package Sem_Util is\n    function Is_SPARK_Object_Reference (N : Node_Id) return Boolean;\n    --  Determines if the tree referenced by N represents an object in SPARK\n \n+   function Is_SPARK_Volatile (Id : Entity_Id) return Boolean;\n+   --  This routine is similar to predicate Is_Volatile, but it takes SPARK\n+   --  semantics into account. In SPARK volatile components to not render a\n+   --  type volatile.\n+\n    function Is_SPARK_Volatile_Object (N : Node_Id) return Boolean;\n    --  Determine whether an arbitrary node denotes a volatile object reference\n    --  according to the semantics of SPARK. To qualify as volatile, an object\n-   --  must be subject to aspect/pragma Volatile or Atomic or have a [sub]type\n+   --  must be subject to aspect/pragma Volatile or Atomic, or have a [sub]type\n    --  subject to the same attributes. Note that volatile components do not\n    --  render an object volatile.\n "}]}