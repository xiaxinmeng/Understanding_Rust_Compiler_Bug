{"sha": "3c53850d643480c7fa846a72db993c9d2a84ab16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M1Mzg1MGQ2NDM0ODBjN2ZhODQ2YTcyZGI5OTNjOWQyYTg0YWIxNg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-01-20T19:58:59Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-01-20T19:58:59Z"}, "message": "mips.c (mips_load_call_address): Make the call insn use $gp if it could be calling a lazy binding stub.\n\n\t* config/mips/mips.c (mips_load_call_address): Make the call insn\n\tuse $gp if it could be calling a lazy binding stub.\n\nFrom-SVN: r76224", "tree": {"sha": "46791ceeab538c80b4dd1202a82c59e695bc52fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46791ceeab538c80b4dd1202a82c59e695bc52fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c53850d643480c7fa846a72db993c9d2a84ab16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c53850d643480c7fa846a72db993c9d2a84ab16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c53850d643480c7fa846a72db993c9d2a84ab16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c53850d643480c7fa846a72db993c9d2a84ab16/comments", "author": null, "committer": null, "parents": [{"sha": "101ad855bae5308d423091dcf91484d84117400c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/101ad855bae5308d423091dcf91484d84117400c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/101ad855bae5308d423091dcf91484d84117400c"}], "stats": {"total": 38, "additions": 26, "deletions": 12}, "files": [{"sha": "e0a1d511f7e8aadf45c68c0ed163a23b15e96c10", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c53850d643480c7fa846a72db993c9d2a84ab16/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c53850d643480c7fa846a72db993c9d2a84ab16/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c53850d643480c7fa846a72db993c9d2a84ab16", "patch": "@@ -1,3 +1,8 @@\n+2004-01-20  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/mips/mips.c (mips_load_call_address): Make the call insn\n+\tuse $gp if it could be calling a lazy binding stub.\n+\n 2004-01-20  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/s390/s390.c (TARGET_PROMOTE_FUNCTION_ARGS): Define."}, {"sha": "c348f58dd56121ffb563aab98aea2f2d3988d833", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 21, "deletions": 12, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c53850d643480c7fa846a72db993c9d2a84ab16/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c53850d643480c7fa846a72db993c9d2a84ab16/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=3c53850d643480c7fa846a72db993c9d2a84ab16", "patch": "@@ -3244,37 +3244,46 @@ mips_load_call_address (rtx dest, rtx addr, int sibcall_p)\n void\n mips_expand_call (rtx result, rtx addr, rtx args_size, rtx aux, int sibcall_p)\n {\n+  rtx orig_addr, pattern, insn;\n+\n+  orig_addr = addr;\n   if (!call_insn_operand (addr, VOIDmode))\n     {\n-      rtx dest = gen_reg_rtx (Pmode);\n-      mips_load_call_address (dest, addr, sibcall_p);\n-      addr = dest;\n+      addr = gen_reg_rtx (Pmode);\n+      mips_load_call_address (addr, orig_addr, sibcall_p);\n     }\n \n   if (TARGET_MIPS16\n       && mips16_hard_float\n       && build_mips16_call_stub (result, addr, args_size,\n \t\t\t\t aux == 0 ? 0 : (int) GET_MODE (aux)))\n-    /* Nothing more to do */;\n-  else if (result == 0)\n-    emit_call_insn (sibcall_p\n-\t\t    ? gen_sibcall_internal (addr, args_size)\n-\t\t    : gen_call_internal (addr, args_size));\n+    return;\n+\n+  if (result == 0)\n+    pattern = (sibcall_p\n+\t       ? gen_sibcall_internal (addr, args_size)\n+\t       : gen_call_internal (addr, args_size));\n   else if (GET_CODE (result) == PARALLEL && XVECLEN (result, 0) == 2)\n     {\n       rtx reg1, reg2;\n \n       reg1 = XEXP (XVECEXP (result, 0, 0), 0);\n       reg2 = XEXP (XVECEXP (result, 0, 1), 0);\n-      emit_call_insn\n+      pattern =\n \t(sibcall_p\n \t ? gen_sibcall_value_multiple_internal (reg1, addr, args_size, reg2)\n \t : gen_call_value_multiple_internal (reg1, addr, args_size, reg2));\n     }\n   else\n-    emit_call_insn (sibcall_p\n-\t\t    ? gen_sibcall_value_internal (result, addr, args_size)\n-\t\t    : gen_call_value_internal (result, addr, args_size));\n+    pattern = (sibcall_p\n+\t       ? gen_sibcall_value_internal (result, addr, args_size)\n+\t       : gen_call_value_internal (result, addr, args_size));\n+\n+  insn = emit_call_insn (pattern);\n+\n+  /* Lazy-binding stubs require $gp to be valid on entry.  */\n+  if (global_got_operand (orig_addr, VOIDmode))\n+    use_reg (&CALL_INSN_FUNCTION_USAGE (insn), pic_offset_table_rtx);\n }\n \n "}]}