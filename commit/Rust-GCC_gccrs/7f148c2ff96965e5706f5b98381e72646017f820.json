{"sha": "7f148c2ff96965e5706f5b98381e72646017f820", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2YxNDhjMmZmOTY5NjVlNTcwNmY1Yjk4MzgxZTcyNjQ2MDE3ZjgyMA==", "commit": {"author": {"name": "Jan Beulich", "email": "jbeulich@novell.com", "date": "2004-09-03T05:26:27Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-09-03T05:26:27Z"}, "message": "Makefile.in (LIB2ADDEHDEP): Add unwind.h and unwind-pe.h.\n\n        * Makefile.in (LIB2ADDEHDEP): Add unwind.h and unwind-pe.h.\n        * mklibgcc.in (libgcc_dep): New, covering general dependencies, but\n        not unwind code specific ones.\n        (libgcc2_c_dep): Replace general dependencies with use of libgcc_dep.\n        Remove unwind code specific dependencies.\n        (libgcov_c_dep): Replace general dependencies with use of libgcc_dep.\n        Remove gbl-ctors.h.\n        Add libgcc_dep to output generated for LIB2ADD, LIB2ADDEH, and\n        LIB2ADD_ST. Add LIB2ADDEHDEP to output generated for LIB2ADDEH.\n\nFrom-SVN: r87026", "tree": {"sha": "fcf045b41ea79dda3c31fb92dd255537f76402fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcf045b41ea79dda3c31fb92dd255537f76402fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f148c2ff96965e5706f5b98381e72646017f820", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f148c2ff96965e5706f5b98381e72646017f820", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f148c2ff96965e5706f5b98381e72646017f820", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f148c2ff96965e5706f5b98381e72646017f820/comments", "author": null, "committer": null, "parents": [{"sha": "9e42ab3e45c060ceb91a552a045aa66a571bf163", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e42ab3e45c060ceb91a552a045aa66a571bf163", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e42ab3e45c060ceb91a552a045aa66a571bf163"}], "stats": {"total": 42, "additions": 33, "deletions": 9}, "files": [{"sha": "a9c847e09c0e59ca081bab00918ceee57193e783", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f148c2ff96965e5706f5b98381e72646017f820/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f148c2ff96965e5706f5b98381e72646017f820/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7f148c2ff96965e5706f5b98381e72646017f820", "patch": "@@ -1,3 +1,16 @@\n+2004-09-02  Jan Beulich  <jbeulich@novell.com>\n+\n+\t* Makefile.in (LIB2ADDEHDEP): Add unwind.h and unwind-pe.h.\n+\t* mklibgcc.in (libgcc_dep): New, covering general dependencies, but\n+\tnot unwind code specific ones.\n+\t(libgcc2_c_dep): Replace general dependencies with use of libgcc_dep.\n+\tRemove unwind code specific dependencies.\n+\t(libgcov_c_dep): Replace general dependencies with use of libgcc_dep.\n+\tRemove gbl-ctors.h.\n+\tAdd libgcc_dep to output generated for LIB2ADD, LIB2ADDEH, and\n+\tLIB2ADD_ST. Add LIB2ADDEHDEP to output generated for LIB2ADDEH.\n+\t* tsystem.h: Declare memcpy and memset when inhibit_libc.\n+\n 2004-09-02  Roman Zippel  <zippel@linux-m68k.org>\n  \n \t* combine.c (try_combine): Delay modifying of insns which cannot\n@@ -178,7 +191,7 @@\n 2004-09-01  Roger Sayle  <roger@eyesopen.com>\n \n \t* expmed.c (enum alg_code): Remove long unused enumeration values.\n-        (struct mult_cost): New structure to hold the \"score\" of a synthetic\n+\t(struct mult_cost): New structure to hold the \"score\" of a synthetic\n \tmultiply sequence, including both a rtx_cost and a latency field.\n \t(MULT_COST_LESS): New macro to compare mult_cost to a constant.\n \t(CHEAPER_MULT_COST): New macro to compare two mult_costs.\n@@ -301,8 +314,8 @@\n \n 2004-09-01  Richard Henderson  <rth@redhat.com>\n \n-        * config/ns32k/ns32k.h (TRANSFER_FROM_TRAMPOLINE): Remove.\n-        (TRAMPOLINE_TEMPLATE): Merge code from __trampoline inline.\n+\t* config/ns32k/ns32k.h (TRANSFER_FROM_TRAMPOLINE): Remove.\n+\t(TRAMPOLINE_TEMPLATE): Merge code from __trampoline inline.\n \n 2004-09-01  Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "19ce16031de5dc9f2fb4dafd80e224229e7d41e2", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f148c2ff96965e5706f5b98381e72646017f820/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f148c2ff96965e5706f5b98381e72646017f820/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=7f148c2ff96965e5706f5b98381e72646017f820", "patch": "@@ -532,7 +532,7 @@ CRTSTUFF_CFLAGS = -O2 $(GCC_CFLAGS) $(INCLUDES) $(MULTILIB_CFLAGS) -g0 \\\n # Additional sources to handle exceptions; overridden by targets as needed.\n LIB2ADDEH = $(srcdir)/unwind-dw2.c $(srcdir)/unwind-dw2-fde.c \\\n    $(srcdir)/unwind-sjlj.c $(srcdir)/gthr-gnat.c $(srcdir)/unwind-c.c\n-LIB2ADDEHDEP = unwind.inc unwind-dw2-fde.h unwind-dw2.h\n+LIB2ADDEHDEP = unwind.h unwind-pe.h unwind.inc unwind-dw2-fde.h unwind-dw2.h\n \n # nm flags to list global symbols in libgcc object files.\n SHLIB_NM_FLAGS = -pg"}, {"sha": "891e474b531087ed5ffbe543efeff1798f6bb86e", "filename": "gcc/mklibgcc.in", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f148c2ff96965e5706f5b98381e72646017f820/gcc%2Fmklibgcc.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f148c2ff96965e5706f5b98381e72646017f820/gcc%2Fmklibgcc.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmklibgcc.in?ref=7f148c2ff96965e5706f5b98381e72646017f820", "patch": "@@ -71,11 +71,14 @@ make_compile='$(MAKE) GCC_FOR_TARGET=\"$(GCC_FOR_TARGET)\" \\\n \t  BUILD_PREFIX_1=\"$(BUILD_PREFIX_1)\" \\\n \t  LANGUAGES=\"$(LANGUAGES)\"'\n \n+# Generic dependencies for libgcc\n+libgcc_dep='$(CONFIG_H) coretypes.h $(TM_H) $(MACHMODE_H) longlong.h config.status stmp-int-hdrs tsystem.h'\n+\n # Dependencies for libgcc2.c\n-libgcc2_c_dep='stmp-dirs $(srcdir)/libgcc2.c $(CONFIG_H) coretypes.h $(TM_H) $(MACHMODE_H) longlong.h gbl-ctors.h config.status stmp-int-hdrs tsystem.h'\" $LIB2ADDEHDEP\"\n+libgcc2_c_dep='stmp-dirs $(srcdir)/libgcc2.c gbl-ctors.h'\" $libgcc_dep\"\n \n # Dependencies for libgcov.c\n-libgcov_c_dep='stmp-dirs $(srcdir)/libgcov.c $(CONFIG_H) coretypes.h $(TM_H) $(MACHMODE_H) longlong.h gbl-ctors.h config.status stmp-int-hdrs tsystem.h $(srcdir)/gcov-io.h $(srcdir)/gcov-io.c gcov-iov.h'\n+libgcov_c_dep='stmp-dirs $(srcdir)/libgcov.c $(srcdir)/gcov-io.h $(srcdir)/gcov-io.c gcov-iov.h'\" $libgcc_dep\"\n \n # Dependencies for fp-bit.c\n fpbit_c_dep='stmp-dirs config.status tsystem.h'\n@@ -212,7 +215,7 @@ for file in $LIB2ADD; do\n       flags=\"$flags -xassembler-with-cpp\"\n     fi\n \n-    echo $out: stmp-dirs $file\n+    echo $out: stmp-dirs $file $libgcc_dep\n     echo \"\t$gcc_compile\" $flags -c $file -o $out\n   done\n   libgcc2_objs=\"$libgcc2_objs ${oname}${objext}\"\n@@ -230,7 +233,7 @@ for file in $LIB2ADDEH; do\n       flags=\"$flags -xassembler-with-cpp\"\n     fi\n \n-    echo $out: stmp-dirs $file\n+    echo $out: stmp-dirs $file $LIB2ADDEHDEP $libgcc_dep\n     echo \"\t$gcc_compile\" $flags -fexceptions -c $file -o $out\n   done\n   if [ \"$SHLIB_LINK\" ]; then\n@@ -252,7 +255,7 @@ for file in $LIB2ADD_ST; do\n       flags=\"$flags -xassembler-with-cpp\"\n     fi\n \n-    echo $out: stmp-dirs $file\n+    echo $out: stmp-dirs $file $libgcc_dep\n     echo \"\t$gcc_compile\" $flags -c $file -o $out\n   done\n   libgcc2_st_objs=\"$libgcc2_st_objs ${oname}${objext}\""}, {"sha": "7928b31b68a3501f308afab07dca65b476406cf7", "filename": "gcc/tsystem.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f148c2ff96965e5706f5b98381e72646017f820/gcc%2Ftsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f148c2ff96965e5706f5b98381e72646017f820/gcc%2Ftsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftsystem.h?ref=7f148c2ff96965e5706f5b98381e72646017f820", "patch": "@@ -69,6 +69,14 @@ extern void abort (void) __attribute__ ((__noreturn__));\n extern size_t strlen (const char *);\n #endif\n \n+#ifndef memcpy\n+extern void *memcpy (void *, const void *, size_t);\n+#endif\n+\n+#ifndef memset\n+extern void *memset (void *, int, size_t);\n+#endif\n+\n #else /* ! inhibit_libc */\n /* We disable this when inhibit_libc, so that gcc can still be built without\n    needing header files first.  */"}]}