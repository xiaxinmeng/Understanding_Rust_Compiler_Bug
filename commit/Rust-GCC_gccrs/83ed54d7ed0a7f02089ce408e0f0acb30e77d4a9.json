{"sha": "83ed54d7ed0a7f02089ce408e0f0acb30e77d4a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNlZDU0ZDdlZDBhN2YwMjA4OWNlNDA4ZTBmMGFjYjMwZTc3ZDRhOQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2015-03-01T18:27:48Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-03-01T18:27:48Z"}, "message": "c-ada-spec.c (is_tagged_type): Add guard for DECL_VINDEX.\n\n\t* c-ada-spec.c (is_tagged_type): Add guard for DECL_VINDEX.\n\t(dump_template_types): Adjust DECL_TEMPLATE_INSTANTIATIONS and\n\tDECL_TEMPLATE_RESULT emulations.\n\t(dump_ada_template)): Add guard for TYPE_METHODS.\n\nFrom-SVN: r221088", "tree": {"sha": "39338dd1e970b87a7e22e253b26dfebf139f9a96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39338dd1e970b87a7e22e253b26dfebf139f9a96"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83ed54d7ed0a7f02089ce408e0f0acb30e77d4a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83ed54d7ed0a7f02089ce408e0f0acb30e77d4a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83ed54d7ed0a7f02089ce408e0f0acb30e77d4a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83ed54d7ed0a7f02089ce408e0f0acb30e77d4a9/comments", "author": null, "committer": null, "parents": [{"sha": "7dff0c749a68341bdeb4e7854fc5e033a987e7e3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dff0c749a68341bdeb4e7854fc5e033a987e7e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dff0c749a68341bdeb4e7854fc5e033a987e7e3"}], "stats": {"total": 55, "additions": 49, "deletions": 6}, "files": [{"sha": "e1d4eff7bdca1638bbc5d66da66db78b12fb4d1b", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83ed54d7ed0a7f02089ce408e0f0acb30e77d4a9/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83ed54d7ed0a7f02089ce408e0f0acb30e77d4a9/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=83ed54d7ed0a7f02089ce408e0f0acb30e77d4a9", "patch": "@@ -1,3 +1,10 @@\n+2015-03-01  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* c-ada-spec.c (is_tagged_type): Add guard for DECL_VINDEX.\n+\t(dump_template_types): Adjust DECL_TEMPLATE_INSTANTIATIONS and\n+\tDECL_TEMPLATE_RESULT emulations.\n+\t(dump_ada_template)): Add guard for TYPE_METHODS.\n+\n 2015-02-27  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/65040"}, {"sha": "fcfefb03f79c8a3ed44f2d80e050a9b8f3fd5a4e", "filename": "gcc/c-family/c-ada-spec.c", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83ed54d7ed0a7f02089ce408e0f0acb30e77d4a9/gcc%2Fc-family%2Fc-ada-spec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83ed54d7ed0a7f02089ce408e0f0acb30e77d4a9/gcc%2Fc-family%2Fc-ada-spec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ada-spec.c?ref=83ed54d7ed0a7f02089ce408e0f0acb30e77d4a9", "patch": "@@ -961,7 +961,7 @@ is_tagged_type (const_tree type)\n     return false;\n \n   for (tmp = TYPE_METHODS (type); tmp; tmp = TREE_CHAIN (tmp))\n-    if (DECL_VINDEX (tmp))\n+    if (TREE_CODE (tmp) == FUNCTION_DECL && DECL_VINDEX (tmp))\n       return true;\n \n   return false;\n@@ -1730,10 +1730,15 @@ dump_template_types (pretty_printer *buffer, tree types, int spc)\n static int\n dump_ada_template (pretty_printer *buffer, tree t, int spc)\n {\n-  /* DECL_VINDEX is DECL_TEMPLATE_INSTANTIATIONS in this context.  */\n-  tree inst = DECL_VINDEX (t);\n-  /* DECL_RESULT_FLD is DECL_TEMPLATE_RESULT in this context.  */\n-  tree result = DECL_RESULT_FLD (t);\n+  /* DECL_SIZE_UNIT is DECL_TEMPLATE_INSTANTIATIONS in this context.  */\n+  tree inst = DECL_SIZE_UNIT (t);\n+  /* This emulates DECL_TEMPLATE_RESULT in this context.  */\n+  struct tree_template_decl {\n+    struct tree_decl_common common;\n+    tree arguments;\n+    tree result;\n+  };\n+  tree result = ((struct tree_template_decl *) t)->result;\n   int num_inst = 0;\n \n   /* Don't look at template declarations declaring something coming from\n@@ -1750,7 +1755,7 @@ dump_ada_template (pretty_printer *buffer, tree t, int spc)\n       if (TREE_VEC_LENGTH (types) == 0)\n \tbreak;\n \n-      if (!TYPE_P (instance) || !TYPE_METHODS (instance))\n+      if (!RECORD_OR_UNION_TYPE_P (instance) || !TYPE_METHODS (instance))\n \tbreak;\n \n       num_inst++;"}, {"sha": "33d69b01adf1e647886cb5fe9cd2ce47cbe45837", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83ed54d7ed0a7f02089ce408e0f0acb30e77d4a9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83ed54d7ed0a7f02089ce408e0f0acb30e77d4a9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=83ed54d7ed0a7f02089ce408e0f0acb30e77d4a9", "patch": "@@ -1,3 +1,7 @@\n+2015-03-01  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* g++.dg/other/dump-ada-spec-3.C: New test.\n+\n 2015-03-01  Martin Liska  <mliska@suse.cz>\n \n \t* gcc.target/i386/stackalign/longlong-2.c: Omit ICF."}, {"sha": "3d5e3f10dfcc5435cca12adac447bbd82cf1594b", "filename": "gcc/testsuite/g++.dg/other/dump-ada-spec-3.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83ed54d7ed0a7f02089ce408e0f0acb30e77d4a9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdump-ada-spec-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83ed54d7ed0a7f02089ce408e0f0acb30e77d4a9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdump-ada-spec-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fdump-ada-spec-3.C?ref=83ed54d7ed0a7f02089ce408e0f0acb30e77d4a9", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-fdump-ada-spec\" } */\n+\n+#include <iostream>\n+\n+using namespace std;\n+\n+class Base {\n+   public:\n+     int My_V;\n+     virtual void Primitive ();\n+\n+     Base ();\n+};\n+\n+void Base::Primitive () {\n+  cout << \"C++ Primitive  \" << this->My_V << \"\\n\";\n+}\n+\n+Base::Base () {\n+}\n+\n+void Dispatch (Base * B) {\n+  B->Primitive ();\n+}\n+\n+/* { dg-final { cleanup-ada-spec } } */"}]}