{"sha": "4e8310b33c37d1eaaa4ffd08aca404a787252cf5", "node_id": "C_kwDOANBUbNoAKDRlODMxMGIzM2MzN2QxZWFhYTRmZmQwOGFjYTQwNGE3ODcyNTJjZjU", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-05-09T06:56:27Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-06-01T08:43:19Z"}, "message": "[Ada] Do not freeze subprogram body without spec too early\n\nThis fixes a small oddity whereby a subprogram body declared without a spec\nwould be frozen before its entity is fully processed as an overloaded name.\nNow the latter step computes useful information, for example whether the\nbody is a (late) primitive of a tagged type, which can be required during\nthe freezing process.  The change also adjusts Check_Dispatching_Operation\naccordingly.  No functional changes.\n\ngcc/ada/\n\n\t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): For the case where\n\tthere is no previous declaration, freeze the body entity only after\n\tit has been processed as a new overloaded name.\n\tUse Was_Expression_Function to recognize expression functions.\n\t* sem_disp.adb (Check_Dispatching_Operation): Do not require a body\n\twhich is the last primitive to be frozen here.", "tree": {"sha": "a22b706c4c8350c6f8962a9cd87ef66daaef7eed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a22b706c4c8350c6f8962a9cd87ef66daaef7eed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e8310b33c37d1eaaa4ffd08aca404a787252cf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e8310b33c37d1eaaa4ffd08aca404a787252cf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e8310b33c37d1eaaa4ffd08aca404a787252cf5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e8310b33c37d1eaaa4ffd08aca404a787252cf5/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce0bbf28fb11b75ebc7d0140ccc38857c03303d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce0bbf28fb11b75ebc7d0140ccc38857c03303d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce0bbf28fb11b75ebc7d0140ccc38857c03303d9"}], "stats": {"total": 48, "additions": 26, "deletions": 22}, "files": [{"sha": "cfe396ec1dd7da4d9094e82f5a80146229fd42d5", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 24, "deletions": 19, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8310b33c37d1eaaa4ffd08aca404a787252cf5/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8310b33c37d1eaaa4ffd08aca404a787252cf5/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=4e8310b33c37d1eaaa4ffd08aca404a787252cf5", "patch": "@@ -4389,25 +4389,15 @@ package body Sem_Ch6 is\n             end if;\n \n             --  A subprogram body should cause freezing of its own declaration,\n-            --  but if there was no previous explicit declaration, then the\n-            --  subprogram will get frozen too late (there may be code within\n-            --  the body that depends on the subprogram having been frozen,\n-            --  such as uses of extra formals), so we force it to be frozen\n-            --  here. Same holds if the body and spec are compilation units.\n-            --  Finally, if the return type is an anonymous access to protected\n-            --  subprogram, it must be frozen before the body because its\n-            --  expansion has generated an equivalent type that is used when\n-            --  elaborating the body.\n-\n-            --  An exception in the case of Ada 2012, AI05-177: The bodies\n-            --  created for expression functions do not freeze.\n-\n-            if No (Spec_Id)\n-              and then Nkind (Original_Node (N)) /= N_Expression_Function\n+            --  so, if the body and spec are compilation units, we must do it\n+            --  manually here. Moreover, if the return type is anonymous access\n+            --  to protected subprogram, it must be frozen before the body\n+            --  because its expansion has generated an equivalent type that is\n+            --  used when elaborating the body.\n+\n+            if Present (Spec_Id)\n+              and then Nkind (Parent (N)) = N_Compilation_Unit\n             then\n-               Freeze_Before (N, Body_Id);\n-\n-            elsif Nkind (Parent (N)) = N_Compilation_Unit then\n                Freeze_Before (N, Spec_Id);\n \n             elsif Is_Access_Subprogram_Type (Etype (Body_Id)) then\n@@ -4775,13 +4765,28 @@ package body Sem_Ch6 is\n \n            --  No warnings for expression functions\n \n-           and then Nkind (Original_Node (N)) /= N_Expression_Function\n+           and then (Nkind (N) /= N_Subprogram_Body\n+                      or else not Was_Expression_Function (N))\n          then\n             Style.Body_With_No_Spec (N);\n          end if;\n \n          New_Overloaded_Entity (Body_Id);\n \n+         --  A subprogram body should cause freezing of its own declaration,\n+         --  but if there was no previous explicit declaration, then the\n+         --  subprogram will get frozen too late (there may be code within\n+         --  the body that depends on the subprogram having been frozen,\n+         --  such as uses of extra formals), so we force it to be frozen here.\n+         --  An exception in Ada 2012 is that the body created for expression\n+         --  functions does not freeze.\n+\n+         if Nkind (N) /= N_Subprogram_Body\n+           or else not Was_Expression_Function (N)\n+         then\n+            Freeze_Before (N, Body_Id);\n+         end if;\n+\n          if Nkind (N) /= N_Subprogram_Body_Stub then\n             Set_Acts_As_Spec (N);\n             Generate_Definition (Body_Id);"}, {"sha": "d5893914f275780479c5a5b53d7154511ac2158a", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e8310b33c37d1eaaa4ffd08aca404a787252cf5/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e8310b33c37d1eaaa4ffd08aca404a787252cf5/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=4e8310b33c37d1eaaa4ffd08aca404a787252cf5", "patch": "@@ -1516,11 +1516,10 @@ package body Sem_Disp is\n                        (\"\\spec should appear immediately after the type!\",\n                         Subp);\n \n-                  elsif Is_Frozen (Subp) then\n+                  else\n \n                      --  The subprogram body declares a primitive operation.\n-                     --  If the subprogram is already frozen, we must update\n-                     --  its dispatching information explicitly here. The\n+                     --  We must update its dispatching information here. The\n                      --  information is taken from the overridden subprogram.\n                      --  We must also generate a cross-reference entry because\n                      --  references to other primitives were already created"}]}