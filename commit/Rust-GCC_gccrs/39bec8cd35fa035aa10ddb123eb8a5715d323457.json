{"sha": "39bec8cd35fa035aa10ddb123eb8a5715d323457", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzliZWM4Y2QzNWZhMDM1YWExMGRkYjEyM2ViOGE1NzE1ZDMyMzQ1Nw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-01-05T12:50:40Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2020-01-05T12:50:40Z"}, "message": "re PR c++/93138 (elaborated type specifier visibility check problem)\n\n\tPR c++/93138\n\t* parser.c (cp_parser_check_class_key): Disable access checks for the\n\tsimple name lookup.\n\t(cp_parser_maybe_warn_enum_key): Likewise.  Return early if\n\t!warn_redundant_tags.\n\n\t* g++.dg/warn/Wredundant-tags-2.C: New test.\n\nFrom-SVN: r279886", "tree": {"sha": "2c53f7c315490272f70e8cfdffd5f28d5743572b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c53f7c315490272f70e8cfdffd5f28d5743572b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39bec8cd35fa035aa10ddb123eb8a5715d323457", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39bec8cd35fa035aa10ddb123eb8a5715d323457", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39bec8cd35fa035aa10ddb123eb8a5715d323457", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39bec8cd35fa035aa10ddb123eb8a5715d323457/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5205a4456b555b5b123ee3ec759e5c74dbd01057", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5205a4456b555b5b123ee3ec759e5c74dbd01057", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5205a4456b555b5b123ee3ec759e5c74dbd01057"}], "stats": {"total": 41, "additions": 38, "deletions": 3}, "files": [{"sha": "3e5f58cac2a2a97de242ca55fabcc842a8d099cf", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39bec8cd35fa035aa10ddb123eb8a5715d323457/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39bec8cd35fa035aa10ddb123eb8a5715d323457/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=39bec8cd35fa035aa10ddb123eb8a5715d323457", "patch": "@@ -1,3 +1,11 @@\n+2020-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/93138\n+\t* parser.c (cp_parser_check_class_key): Disable access checks for the\n+\tsimple name lookup.\n+\t(cp_parser_maybe_warn_enum_key): Likewise.  Return early if\n+\t!warn_redundant_tags.\n+\n 2010-01-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/93046"}, {"sha": "7cd8e150dd520a2a468a8aeae30d1b75f4f74434", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39bec8cd35fa035aa10ddb123eb8a5715d323457/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39bec8cd35fa035aa10ddb123eb8a5715d323457/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=39bec8cd35fa035aa10ddb123eb8a5715d323457", "patch": "@@ -30663,11 +30663,15 @@ static void\n cp_parser_maybe_warn_enum_key (cp_parser *parser, location_t key_loc,\n \t\t\t       tree type, rid scoped_key)\n {\n+  if (!warn_redundant_tags)\n+    return;\n+\n   tree type_decl = TYPE_MAIN_DECL (type);\n   tree name = DECL_NAME (type_decl);\n-  /* Look up the NAME to see if it unambiguously refers to the TYPE\n-     and set KEY_REDUNDANT if so.  */\n+  /* Look up the NAME to see if it unambiguously refers to the TYPE.  */\n+  push_deferring_access_checks (dk_no_check);\n   tree decl = cp_parser_lookup_name_simple (parser, name, input_location);\n+  pop_deferring_access_checks ();\n \n   /* The enum-key is redundant for uses of the TYPE that are not\n      declarations and for which name lookup returns just the type\n@@ -30837,7 +30841,9 @@ cp_parser_check_class_key (cp_parser *parser, location_t key_loc,\n   tree name = DECL_NAME (type_decl);\n   /* Look up the NAME to see if it unambiguously refers to the TYPE\n      and set KEY_REDUNDANT if so.  */\n+  push_deferring_access_checks (dk_no_check);\n   tree decl = cp_parser_lookup_name_simple (parser, name, input_location);\n+  pop_deferring_access_checks ();\n \n   /* The class-key is redundant for uses of the CLASS_TYPE that are\n      neither definitions of it nor declarations, and for which name"}, {"sha": "c3f541b7c5d5e0944c5a3f1a83a9599907b48062", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39bec8cd35fa035aa10ddb123eb8a5715d323457/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39bec8cd35fa035aa10ddb123eb8a5715d323457/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=39bec8cd35fa035aa10ddb123eb8a5715d323457", "patch": "@@ -1,4 +1,7 @@\n-2010-01-05  Jakub Jelinek  <jakub@redhat.com>\n+2020-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/93138\n+\t* g++.dg/warn/Wredundant-tags-2.C: New test.\n \n \tPR c++/93046\n \t* g++.dg/ext/cond4.C: New test."}, {"sha": "aee4963464b2be1feff6012c619308e09479176f", "filename": "gcc/testsuite/g++.dg/warn/Wredundant-tags-2.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39bec8cd35fa035aa10ddb123eb8a5715d323457/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWredundant-tags-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39bec8cd35fa035aa10ddb123eb8a5715d323457/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWredundant-tags-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWredundant-tags-2.C?ref=39bec8cd35fa035aa10ddb123eb8a5715d323457", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/93138\n+// { dg-do compile }\n+// { dg-options \"-Wredundant-tags\" }\n+\n+struct Foo\n+{\n+  enum Kind { a };\n+private:\n+  Kind Kind;\n+};\n+enum Foo::Kind foo ();\t\t// { dg-bogus \"is private within this context|redundant\" }\n+struct Bar\n+{\n+  struct Kind { int a; };\n+private:\n+  Kind Kind;\n+};\n+struct Bar::Kind bar ();\t// { dg-bogus \"is private within this context|redundant\" }"}]}