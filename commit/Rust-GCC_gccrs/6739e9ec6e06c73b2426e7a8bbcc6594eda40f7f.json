{"sha": "6739e9ec6e06c73b2426e7a8bbcc6594eda40f7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjczOWU5ZWM2ZTA2YzczYjI0MjZlN2E4YmJjYzY1OTRlZGE0MGY3Zg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2010-10-26T06:49:43Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-10-26T06:49:43Z"}, "message": "[multiple changes]\n\n2010-10-26  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/45451\n        * trans-stmt.c (gfc_trans_allocate): Do a deep-copy for SOURCE=.\n\n        PR fortran/43018\n        * trans-array.c (duplicate_allocatable): Use size of type and not\n        the size of the pointer to the type.\n\n2010-10-26  Tobias Burnus <burnus@net-b.de>\n\n        PR fortran/45451\n        * gfortran.dg/class_allocate_5.f90: New.\n\nFrom-SVN: r165936", "tree": {"sha": "d933685d1b7ebdc28c46d5067c940feaede7020a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d933685d1b7ebdc28c46d5067c940feaede7020a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6739e9ec6e06c73b2426e7a8bbcc6594eda40f7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6739e9ec6e06c73b2426e7a8bbcc6594eda40f7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6739e9ec6e06c73b2426e7a8bbcc6594eda40f7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6739e9ec6e06c73b2426e7a8bbcc6594eda40f7f/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "90ecaf87ff7b69272f0d5a1dd8cbe3a4ec7a9fd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90ecaf87ff7b69272f0d5a1dd8cbe3a4ec7a9fd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90ecaf87ff7b69272f0d5a1dd8cbe3a4ec7a9fd8"}], "stats": {"total": 56, "additions": 54, "deletions": 2}, "files": [{"sha": "73eb4ad04f6b452951e759039ba0b0db6029d4b1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6739e9ec6e06c73b2426e7a8bbcc6594eda40f7f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6739e9ec6e06c73b2426e7a8bbcc6594eda40f7f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6739e9ec6e06c73b2426e7a8bbcc6594eda40f7f", "patch": "@@ -1,3 +1,12 @@\n+2010-10-26  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/45451\n+\t* trans-stmt.c (gfc_trans_allocate): Do a deep-copy for SOURCE=.\n+\n+\tPR fortran/43018\n+\t* trans-array.c (duplicate_allocatable): Use size of type and not\n+\tthe size of the pointer to the type.\n+\n 2010-10-25  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/46140"}, {"sha": "db05734c233389131fb97d28b3cd4ff930999fa3", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6739e9ec6e06c73b2426e7a8bbcc6594eda40f7f/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6739e9ec6e06c73b2426e7a8bbcc6594eda40f7f/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=6739e9ec6e06c73b2426e7a8bbcc6594eda40f7f", "patch": "@@ -6072,7 +6072,7 @@ duplicate_allocatable (tree dest, tree src, tree type, int rank,\n       null_data = gfc_finish_block (&block);\n \n       gfc_init_block (&block);\n-      size = TYPE_SIZE_UNIT (type);\n+      size = TYPE_SIZE_UNIT (TREE_TYPE (type));\n       if (!no_malloc)\n \t{\n \t  tmp = gfc_call_malloc (&block, type, size);"}, {"sha": "d07923060ad01bb7ccbc3d6b01fc3824b3ad588c", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6739e9ec6e06c73b2426e7a8bbcc6594eda40f7f/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6739e9ec6e06c73b2426e7a8bbcc6594eda40f7f/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=6739e9ec6e06c73b2426e7a8bbcc6594eda40f7f", "patch": "@@ -4487,8 +4487,12 @@ gfc_trans_allocate (gfc_code * code)\n \t  /* Initialization via SOURCE block\n \t     (or static default initializer).  */\n \t  gfc_expr *rhs = gfc_copy_expr (code->expr3);\n-\t  if (al->expr->ts.type == BT_CLASS)\n+\t  if (al->expr->ts.type == BT_CLASS && rhs->expr_type == EXPR_VARIABLE\n+\t      && rhs->ts.type != BT_CLASS)\n+\t    tmp = gfc_trans_assignment (expr, rhs, false, false);\n+\t  else if (al->expr->ts.type == BT_CLASS)\n \t    {\n+\t      /* TODO: One needs to do a deep-copy for BT_CLASS; cf. PR 46174.  */\n \t      gfc_se dst,src;\n \t      if (rhs->ts.type == BT_CLASS)\n \t\tgfc_add_component_ref (rhs, \"$data\");"}, {"sha": "5eb2f5c35bfddffa13352d34754eaf8409938232", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6739e9ec6e06c73b2426e7a8bbcc6594eda40f7f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6739e9ec6e06c73b2426e7a8bbcc6594eda40f7f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6739e9ec6e06c73b2426e7a8bbcc6594eda40f7f", "patch": "@@ -1,3 +1,8 @@\n+2010-10-26  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/45451\n+\t* gfortran.dg/class_allocate_5.f90: New.\n+\n 2010-10-25  Rodrigo Rivas Costa <rodrigorivascosta@gmail.com>\n \n \tImplement opaque-enum-specifiers for C++0x"}, {"sha": "592161ef5196fa9a6cd06b81b70b7fb203d44871", "filename": "gcc/testsuite/gfortran.dg/class_allocate_5.f90", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6739e9ec6e06c73b2426e7a8bbcc6594eda40f7f/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_allocate_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6739e9ec6e06c73b2426e7a8bbcc6594eda40f7f/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_allocate_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fclass_allocate_5.f90?ref=6739e9ec6e06c73b2426e7a8bbcc6594eda40f7f", "patch": "@@ -0,0 +1,34 @@\n+! { dg-do run }\n+!\n+! PR fortran/45451\n+!\n+! Contributed by Salvatore Filippone and Janus Weil\n+!\n+! Check that ALLOCATE with SOURCE= does a deep copy.\n+!\n+program bug23\n+  implicit none\n+\n+  type  :: psb_base_sparse_mat\n+    integer, allocatable :: irp(:)\n+  end type psb_base_sparse_mat\n+\n+  class(psb_base_sparse_mat), allocatable  :: a \n+  type(psb_base_sparse_mat) :: acsr\n+\n+  allocate(acsr%irp(4)) \n+  acsr%irp(1:4) = (/1,3,4,5/)\n+\n+  write(*,*) acsr%irp(:)\n+\n+  allocate(a,source=acsr)\n+\n+  write(*,*) a%irp(:)\n+\n+  call move_alloc(acsr%irp, a%irp)\n+\n+  write(*,*) a%irp(:)\n+\n+  if (any (a%irp /= [1,3,4,5])) call abort()\n+end program bug23\n+"}]}