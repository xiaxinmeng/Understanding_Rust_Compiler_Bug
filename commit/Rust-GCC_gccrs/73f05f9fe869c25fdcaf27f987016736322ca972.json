{"sha": "73f05f9fe869c25fdcaf27f987016736322ca972", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNmMDVmOWZlODY5YzI1ZmRjYWYyN2Y5ODcwMTY3MzYzMjJjYTk3Mg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2015-11-12T11:09:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-11-12T11:09:59Z"}, "message": "exp_attr.adb (Compile_Stream_Body_In_Scope): When compiling a stream operation for an array type...\n\n2015-11-12  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_attr.adb (Compile_Stream_Body_In_Scope): When compiling\n\ta stream operation for an array type, install the scope of the\n\tcomponent type if it is private and not in scope, to prevent\n\tspurious errors if the full view of the component type has\n\tdefaulted discriminants.\n\nFrom-SVN: r230234", "tree": {"sha": "2c7efee59c601ee0513d77097395cce8b0062966", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c7efee59c601ee0513d77097395cce8b0062966"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73f05f9fe869c25fdcaf27f987016736322ca972", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73f05f9fe869c25fdcaf27f987016736322ca972", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73f05f9fe869c25fdcaf27f987016736322ca972", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73f05f9fe869c25fdcaf27f987016736322ca972/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b3b5c6a236cf0816e987626120419845c8177eb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3b5c6a236cf0816e987626120419845c8177eb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3b5c6a236cf0816e987626120419845c8177eb5"}], "stats": {"total": 51, "additions": 45, "deletions": 6}, "files": [{"sha": "9a799de64ec1611987f251ec15462201bb5ce342", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73f05f9fe869c25fdcaf27f987016736322ca972/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73f05f9fe869c25fdcaf27f987016736322ca972/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=73f05f9fe869c25fdcaf27f987016736322ca972", "patch": "@@ -1,3 +1,11 @@\n+2015-11-12  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_attr.adb (Compile_Stream_Body_In_Scope): When compiling\n+\ta stream operation for an array type, install the scope of the\n+\tcomponent type if it is private and not in scope, to prevent\n+\tspurious errors if the full view of the component type has\n+\tdefaulted discriminants.\n+\n 2015-11-12  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* sem_ch13.adb (Analyze_Attribute_Definition_Clause): For a"}, {"sha": "aaa3c728751e2eadde98fc021c8c445c019b39f5", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 37, "deletions": 6, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73f05f9fe869c25fdcaf27f987016736322ca972/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73f05f9fe869c25fdcaf27f987016736322ca972/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=73f05f9fe869c25fdcaf27f987016736322ca972", "patch": "@@ -109,6 +109,16 @@ package body Exp_Attr is\n    --  If we are within an instance body all visibility has been established\n    --  already and there is no need to install the package.\n \n+   --  This mechanism is now extended to the component types of the array type,\n+   --  when the component type is not in scope and is private, to handle\n+   --  properly the case when the full view has defaulted discriminants.\n+\n+   --  This special processing is ultimately caused by the fact that the\n+   --  compiler lacks a well-defined phase when full views are visible\n+   --  everywhere. Having such a separate pass would remove much of the\n+   --  special-case code that shuffles partial and full views in the middle\n+   --  of semantic analysis and expansion.\n+\n    procedure Expand_Access_To_Protected_Op\n      (N    : Node_Id;\n       Pref : Node_Id;\n@@ -624,31 +634,52 @@ package body Exp_Attr is\n       Arr   : Entity_Id;\n       Check : Boolean)\n    is\n-      Installed : Boolean := False;\n-      Scop      : constant Entity_Id := Scope (Arr);\n+      C_Type    : constant Entity_Id := Base_Type (Component_Type (Arr));\n       Curr      : constant Entity_Id := Current_Scope;\n \n+      Install   : Boolean := False;\n+      Scop      : Entity_Id := Scope (Arr);\n+\n    begin\n       if Is_Hidden (Arr)\n         and then not In_Open_Scopes (Scop)\n         and then Ekind (Scop) = E_Package\n+      then\n+         Install := True;\n+      else\n+\n+         --  The component type may be private, in which case we install\n+         --  its full view to compile the subprogram.\n \n-        --  If we are within an instance body, then all visibility has been\n-        --  established already and there is no need to install the package.\n+         Scop := Scope (C_Type);\n \n+         if Is_Private_Type (C_Type)\n+           and then Present (Full_View (C_Type))\n+           and then not In_Open_Scopes (Scop)\n+           and then Ekind (Scop) = E_Package\n+         then\n+            Install := True;\n+         end if;\n+      end if;\n+\n+      --  If we are within an instance body, then all visibility has been\n+      --  established already and there is no need to install the package.\n+\n+      if Install\n         and then not In_Instance_Body\n       then\n          Push_Scope (Scop);\n          Install_Visible_Declarations (Scop);\n          Install_Private_Declarations (Scop);\n-         Installed := True;\n \n          --  The entities in the package are now visible, but the generated\n          --  stream entity must appear in the current scope (usually an\n          --  enclosing stream function) so that itypes all have their proper\n          --  scopes.\n \n          Push_Scope (Curr);\n+      else\n+         Install := False;\n       end if;\n \n       if Check then\n@@ -657,7 +688,7 @@ package body Exp_Attr is\n          Insert_Action (N, Decl, Suppress => All_Checks);\n       end if;\n \n-      if Installed then\n+      if Install then\n \n          --  Remove extra copy of current scope, and package itself\n "}]}