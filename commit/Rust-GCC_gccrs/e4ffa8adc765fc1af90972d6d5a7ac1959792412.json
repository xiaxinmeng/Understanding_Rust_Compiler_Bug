{"sha": "e4ffa8adc765fc1af90972d6d5a7ac1959792412", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTRmZmE4YWRjNzY1ZmMxYWY5MDk3MmQ2ZDVhN2FjMTk1OTc5MjQxMg==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2006-02-15T09:43:11Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-02-15T09:43:11Z"}, "message": "prj-makr.adb (Make): Preserve the comments from the original project file.\n\n2006-02-13  Vincent Celier  <celier@adacore.com>\n\n\t* prj-makr.adb (Make): Preserve the comments from the original project\n\tfile.\n\tWhen removing nodes (attributes Source_Dirs, Source_Files,\n\tSource_List_File and package Naming), save the comments and attach the\n\tsaved comments to the newly created nodes.\n\tDo not add a with clause for the naming package if one already exists.\n\nFrom-SVN: r111085", "tree": {"sha": "9270455c527fb6abc96a8654cc56674125a91877", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9270455c527fb6abc96a8654cc56674125a91877"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4ffa8adc765fc1af90972d6d5a7ac1959792412", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4ffa8adc765fc1af90972d6d5a7ac1959792412", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4ffa8adc765fc1af90972d6d5a7ac1959792412", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4ffa8adc765fc1af90972d6d5a7ac1959792412/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97b7ca6ffff4e2f3ba40e9cfdb8d86ecc797ee78"}], "stats": {"total": 159, "additions": 111, "deletions": 48}, "files": [{"sha": "2fedbe7b7e733ed7c7eae9da2a0c43af258af4a7", "filename": "gcc/ada/prj-makr.adb", "status": "modified", "additions": 111, "deletions": 48, "changes": 159, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4ffa8adc765fc1af90972d6d5a7ac1959792412/gcc%2Fada%2Fprj-makr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4ffa8adc765fc1af90972d6d5a7ac1959792412/gcc%2Fada%2Fprj-makr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-makr.adb?ref=e4ffa8adc765fc1af90972d6d5a7ac1959792412", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -133,9 +133,14 @@ package body Prj.Makr is\n       Source_Dirs_List    : Project_Node_Id := Empty_Node;\n       Current_Source_Dir  : Project_Node_Id := Empty_Node;\n \n-      Project_Naming_Node : Project_Node_Id := Empty_Node;\n-      Project_Naming_Decl : Project_Node_Id := Empty_Node;\n-      Naming_Package      : Project_Node_Id := Empty_Node;\n+      Project_Naming_Node     : Project_Node_Id := Empty_Node;\n+      Project_Naming_Decl     : Project_Node_Id := Empty_Node;\n+      Naming_Package          : Project_Node_Id := Empty_Node;\n+      Naming_Package_Comments : Project_Node_Id := Empty_Node;\n+\n+      Source_Files_Comments     : Project_Node_Id := Empty_Node;\n+      Source_Dirs_Comments      : Project_Node_Id := Empty_Node;\n+      Source_List_File_Comments : Project_Node_Id := Empty_Node;\n \n       Project_Naming_File_Name : String (1 .. Output_Name'Length +\n                                            Naming_File_Suffix'Length);\n@@ -724,7 +729,8 @@ package body Prj.Makr is\n               (In_Tree                => Tree,\n                Project                => Project_Node,\n                Project_File_Name      => Output_Name (1 .. Output_Name_Last),\n-               Always_Errout_Finalize => False);\n+               Always_Errout_Finalize => False,\n+               Store_Comments         => True);\n \n             --  Fail if parsing was not successful\n \n@@ -768,7 +774,8 @@ package body Prj.Makr is\n \n                --  Remove attribute declarations of Source_Files,\n                --  Source_List_File, Source_Dirs, and the declaration of\n-               --  package Naming, if they exist.\n+               --  package Naming, if they exist, but preserve the comments\n+               --  attached to these nodes.\n \n                declare\n                   Declaration  : Project_Node_Id :=\n@@ -779,37 +786,59 @@ package body Prj.Makr is\n                   Previous     : Project_Node_Id := Empty_Node;\n                   Current_Node : Project_Node_Id := Empty_Node;\n \n+                  Name         : Name_Id;\n+                  Kind_Of_Node : Project_Node_Kind;\n+                  Comments     : Project_Node_Id;\n+\n                begin\n                   while Declaration /= Empty_Node loop\n                      Current_Node := Current_Item_Node (Declaration, Tree);\n \n-                     if (Kind_Of (Current_Node, Tree) = N_Attribute_Declaration\n-                           and then\n-                           (Prj.Tree.Name_Of (Current_Node, Tree) =\n-                              Name_Source_Files\n-                             or else Prj.Tree.Name_Of (Current_Node, Tree) =\n-                                               Name_Source_List_File\n-                             or else Prj.Tree.Name_Of (Current_Node, Tree) =\n-                                               Name_Source_Dirs))\n-                       or else\n-                       (Kind_Of (Current_Node, Tree) = N_Package_Declaration\n-                        and then Prj.Tree.Name_Of (Current_Node, Tree) =\n-                                   Name_Naming)\n+                     Kind_Of_Node := Kind_Of (Current_Node, Tree);\n+\n+                     if Kind_Of_Node = N_Attribute_Declaration or else\n+                       Kind_Of_Node = N_Package_Declaration\n                      then\n-                        if Previous = Empty_Node then\n-                           Set_First_Declarative_Item_Of\n-                             (Project_Declaration_Of (Project_Node, Tree),\n-                              Tree,\n-                              To => Next_Declarative_Item (Declaration, Tree));\n+                        Name := Prj.Tree.Name_Of (Current_Node, Tree);\n+\n+                        if Name = Name_Source_Files     or else\n+                           Name = Name_Source_List_File or else\n+                           Name = Name_Source_Dirs      or else\n+                           Name = Name_Naming\n+                        then\n+                           Comments :=\n+                             Tree.Project_Nodes.Table (Current_Node).Comments;\n+\n+                           if Name = Name_Source_Files then\n+                              Source_Files_Comments := Comments;\n+\n+                           elsif Name = Name_Source_List_File then\n+                              Source_List_File_Comments := Comments;\n+\n+                           elsif Name = Name_Source_Dirs then\n+                              Source_Dirs_Comments := Comments;\n+\n+                           elsif Name = Name_Naming then\n+                              Naming_Package_Comments := Comments;\n+                           end if;\n+\n+                           if Previous = Empty_Node then\n+                              Set_First_Declarative_Item_Of\n+                                (Project_Declaration_Of (Project_Node, Tree),\n+                                 Tree,\n+                                 To => Next_Declarative_Item\n+                                         (Declaration, Tree));\n+\n+                           else\n+                              Set_Next_Declarative_Item\n+                                (Previous, Tree,\n+                                 To => Next_Declarative_Item\n+                                         (Declaration, Tree));\n+                           end if;\n \n                         else\n-                           Set_Next_Declarative_Item\n-                             (Previous, Tree,\n-                              To => Next_Declarative_Item (Declaration, Tree));\n+                           Previous := Declaration;\n                         end if;\n-\n-                     else\n-                        Previous := Declaration;\n                      end if;\n \n                      Declaration := Next_Declarative_Item (Declaration, Tree);\n@@ -1058,30 +1087,41 @@ package body Prj.Makr is\n             Set_Current_Term (Term, Tree, To => Empty_List);\n          end;\n \n-         --  Add a with clause on the naming project in the main project\n+         --  Add a with clause on the naming project in the main project, if\n+         --  there is not already one.\n \n          declare\n-            With_Clause : constant Project_Node_Id :=\n-                            Default_Project_Node\n-                              (Of_Kind => N_With_Clause, In_Tree => Tree);\n+            With_Clause : Project_Node_Id :=\n+                                  First_With_Clause_Of (Project_Node, Tree);\n \n          begin\n-            Set_Next_With_Clause_Of\n-              (With_Clause, Tree,\n-               To => First_With_Clause_Of (Project_Node, Tree));\n-            Set_First_With_Clause_Of (Project_Node, Tree, To => With_Clause);\n-            Set_Name_Of (With_Clause, Tree, To => Project_Naming_Id);\n-\n-            --  We set the project node to something different than\n-            --  Empty_Node, so that Prj.PP does not generate a limited\n-            --  with clause.\n-\n-            Set_Project_Node_Of (With_Clause, Tree, Non_Empty_Node);\n+            while With_Clause /= Empty_Node loop\n+               exit when\n+                 Prj.Tree.Name_Of (With_Clause, Tree) = Project_Naming_Id;\n+               With_Clause := Next_With_Clause_Of (With_Clause, Tree);\n+            end loop;\n \n-            Name_Len := Project_Naming_Last;\n-            Name_Buffer (1 .. Name_Len) :=\n-              Project_Naming_File_Name (1 .. Project_Naming_Last);\n-            Set_String_Value_Of (With_Clause, Tree, To => Name_Find);\n+            if With_Clause = Empty_Node then\n+               With_Clause := Default_Project_Node\n+                 (Of_Kind => N_With_Clause, In_Tree => Tree);\n+               Set_Next_With_Clause_Of\n+                 (With_Clause, Tree,\n+                  To => First_With_Clause_Of (Project_Node, Tree));\n+               Set_First_With_Clause_Of\n+                 (Project_Node, Tree, To => With_Clause);\n+               Set_Name_Of (With_Clause, Tree, To => Project_Naming_Id);\n+\n+               --  We set the project node to something different than\n+               --  Empty_Node, so that Prj.PP does not generate a limited\n+               --  with clause.\n+\n+               Set_Project_Node_Of (With_Clause, Tree, Non_Empty_Node);\n+\n+               Name_Len := Project_Naming_Last;\n+               Name_Buffer (1 .. Name_Len) :=\n+                 Project_Naming_File_Name (1 .. Project_Naming_Last);\n+               Set_String_Value_Of (With_Clause, Tree, To => Name_Find);\n+            end if;\n          end;\n \n          Project_Declaration := Project_Declaration_Of (Project_Node, Tree);\n@@ -1109,6 +1149,12 @@ package body Prj.Makr is\n             Set_Name_Of (Naming, Tree, To => Name_Naming);\n             Set_Project_Of_Renamed_Package_Of\n               (Naming, Tree, To => Project_Naming_Node);\n+\n+            --  Attach the comments, if any, that were saved for package\n+            --  Naming.\n+\n+            Tree.Project_Nodes.Table (Naming).Comments :=\n+              Naming_Package_Comments;\n          end;\n \n          --  Add an attribute declaration for Source_Dirs, initialized as an\n@@ -1154,6 +1200,12 @@ package body Prj.Makr is\n                  In_Tree       => Tree,\n                  And_Expr_Kind => List);\n             Set_Current_Term (Term, Tree, To => Source_Dirs_List);\n+\n+            --  Attach the comments, if any, that were saved for attribute\n+            --  Source_Dirs.\n+\n+            Tree.Project_Nodes.Table (Attribute).Comments :=\n+              Source_Dirs_Comments;\n          end;\n \n          --  Add an attribute declaration for Source_List_File with the\n@@ -1204,6 +1256,17 @@ package body Prj.Makr is\n             Name_Buffer (1 .. Name_Len) :=\n               Source_List_Path (1 .. Source_List_Last);\n             Set_String_Value_Of (Value, Tree, To => Name_Find);\n+\n+            --  If there was no comments for attribute Source_List_File, put\n+            --  those for Source_Files, if they exist.\n+\n+            if Source_List_File_Comments /= Empty_Node then\n+               Tree.Project_Nodes.Table (Attribute).Comments :=\n+                 Source_List_File_Comments;\n+            else\n+               Tree.Project_Nodes.Table (Attribute).Comments :=\n+                 Source_Files_Comments;\n+            end if;\n          end;\n       end if;\n "}]}