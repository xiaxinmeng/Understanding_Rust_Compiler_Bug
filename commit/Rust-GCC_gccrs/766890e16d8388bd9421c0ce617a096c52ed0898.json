{"sha": "766890e16d8388bd9421c0ce617a096c52ed0898", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY2ODkwZTE2ZDgzODhiZDk0MjFjMGNlNjE3YTA5NmM1MmVkMDg5OA==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@suse.de", "date": "2001-07-02T14:46:12Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2001-07-02T14:46:12Z"}, "message": "ssa-dce.c (note_inherently_necessary_set): Add unused attribute.\n\n        * ssa-dce.c (note_inherently_necessary_set): Add unused attribute.\n        (find_inherently_necessary): Remove unused variable.\n\nFrom-SVN: r43690", "tree": {"sha": "3cd7eff2428b232bf54c9cc7d756f72d03ad1fe3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3cd7eff2428b232bf54c9cc7d756f72d03ad1fe3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/766890e16d8388bd9421c0ce617a096c52ed0898", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/766890e16d8388bd9421c0ce617a096c52ed0898", "html_url": "https://github.com/Rust-GCC/gccrs/commit/766890e16d8388bd9421c0ce617a096c52ed0898", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/766890e16d8388bd9421c0ce617a096c52ed0898/comments", "author": {"login": "ajaeger", "id": 16867, "node_id": "MDQ6VXNlcjE2ODY3", "avatar_url": "https://avatars.githubusercontent.com/u/16867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajaeger", "html_url": "https://github.com/ajaeger", "followers_url": "https://api.github.com/users/ajaeger/followers", "following_url": "https://api.github.com/users/ajaeger/following{/other_user}", "gists_url": "https://api.github.com/users/ajaeger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajaeger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajaeger/subscriptions", "organizations_url": "https://api.github.com/users/ajaeger/orgs", "repos_url": "https://api.github.com/users/ajaeger/repos", "events_url": "https://api.github.com/users/ajaeger/events{/privacy}", "received_events_url": "https://api.github.com/users/ajaeger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dfb5868dcf6fbe6552417338d514b959d8daceed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfb5868dcf6fbe6552417338d514b959d8daceed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfb5868dcf6fbe6552417338d514b959d8daceed"}], "stats": {"total": 30, "additions": 17, "deletions": 13}, "files": [{"sha": "b3b46e4134a493386180d54dca16a6096e926f4b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/766890e16d8388bd9421c0ce617a096c52ed0898/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/766890e16d8388bd9421c0ce617a096c52ed0898/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=766890e16d8388bd9421c0ce617a096c52ed0898", "patch": "@@ -1,3 +1,8 @@\n+2001-07-02  Andreas Jaeger  <aj@suse.de>\n+\n+\t* ssa-dce.c (note_inherently_necessary_set): Add unused attribute.\n+\t(find_inherently_necessary): Remove unused variable.\n+\n 2001-07-02  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* c-common.h (TDI_inlined): New ast dump phase."}, {"sha": "76a5162e15932e5877a04607d2f56ef3d8e21561", "filename": "gcc/ssa-dce.c", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/766890e16d8388bd9421c0ce617a096c52ed0898/gcc%2Fssa-dce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/766890e16d8388bd9421c0ce617a096c52ed0898/gcc%2Fssa-dce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fssa-dce.c?ref=766890e16d8388bd9421c0ce617a096c52ed0898", "patch": "@@ -1,5 +1,5 @@\n /* Dead-code elimination pass for the GNU compiler.\n-   Copyright (C) 2000 Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2001 Free Software Foundation, Inc.\n    Written by Jeffrey D. Oldham <oldham@codesourcery.com>.\n \n This file is part of GNU CC.\n@@ -36,7 +36,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n    The last step can require adding labels, deleting insns, and\n    modifying basic block structures.  Some conditional jumps may be\n    converted to unconditional jumps so the control-flow graph may be\n-   out-of-date.  \n+   out-of-date.\n \n    Edges from some infinite loops to the exit block can be added to\n    the control-flow graph, but will be removed after this pass is\n@@ -245,9 +245,9 @@ find_control_dependence (el, edge_index, pdom, cdbte)\n \n   if (INDEX_EDGE_PRED_BB (el, edge_index) == EXIT_BLOCK_PTR)\n     abort ();\n-  ending_block = \n-    (INDEX_EDGE_PRED_BB (el, edge_index) == ENTRY_BLOCK_PTR) \n-    ? BASIC_BLOCK (0) \n+  ending_block =\n+    (INDEX_EDGE_PRED_BB (el, edge_index) == ENTRY_BLOCK_PTR)\n+    ? BASIC_BLOCK (0)\n     : find_pdom (pdom, INDEX_EDGE_PRED_BB (el, edge_index));\n \n   for (current_block = INDEX_EDGE_SUCC_BB (el, edge_index);\n@@ -303,7 +303,7 @@ inherently_necessary_register_1 (current_rtx, data)\n     {\n     case CLOBBER:\n       /* Do not traverse the rest of the clobber.  */\n-      return -1;\t\t\n+      return -1;\n       break;\n     case PC:\n       return 0;\n@@ -333,11 +333,11 @@ inherently_necessary_register (current_rtx)\n \n /* Called via note_stores for each store in an insn.  Note whether\n    or not a particular store is inherently necessary.  Store a\n-   nonzero value in inherently_necessary_p if such a storeis found.  */\n-   \n+   nonzero value in inherently_necessary_p if such a store is found.  */\n+\n static void\n note_inherently_necessary_set (dest, set, data)\n-     rtx set;\n+     rtx set ATTRIBUTE_UNUSED;\n      rtx dest;\n      void *data;\n {\n@@ -364,14 +364,13 @@ static int\n find_inherently_necessary (x)\n      rtx x;\n {\n-  rtx pattern;\n   if (x == NULL_RTX)\n     return 0;\n   else if (inherently_necessary_register (x))\n     return !0;\n   else\n     switch (GET_CODE (x))\n-      {  \n+      {\n       case CALL_INSN:\n \treturn !0;\n       case CODE_LABEL:\n@@ -642,7 +641,7 @@ ssa_eliminate_dead_code ()\n \t  {\n \t    rtx lbl = find_block_label (BASIC_BLOCK (pdom_block_number));\n \t    rtx new_jump = emit_jump_insn_before (gen_jump (lbl), insn);\n-\t    \n+\n \t    /* Let jump know that label is in use.  */\n \t    JUMP_LABEL (new_jump) = lbl;\n \t    ++LABEL_NUSES (lbl);\n@@ -667,7 +666,7 @@ ssa_eliminate_dead_code ()\n     else if (!JUMP_P (insn))\n       delete_insn_bb (insn);\n   });\n-  \n+\n   /* Remove fake edges from the CFG.  */\n   remove_fake_edges ();\n "}]}