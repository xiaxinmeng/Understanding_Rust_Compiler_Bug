{"sha": "8c98e9d03d115da3dd1c238e7a24ad643aacf148", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM5OGU5ZDAzZDExNWRhM2RkMWMyMzhlN2EyNGFkNjQzYWFjZjE0OA==", "commit": {"author": {"name": "Fariborz Jahanian", "email": "fjahanian@gcc.gnu.org", "date": "2005-06-20T17:59:35Z"}, "committer": {"name": "Fariborz Jahanian", "email": "fjahanian@gcc.gnu.org", "date": "2005-06-20T17:59:35Z"}, "message": "re PR target/22077 (vec_all_eq does not produce good result)\n\nPR 22077.\nOked by Roger Sayle.\n\nFrom-SVN: r101211", "tree": {"sha": "cc5eff41893baddf4f356d0f4abc39561a3a63ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc5eff41893baddf4f356d0f4abc39561a3a63ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c98e9d03d115da3dd1c238e7a24ad643aacf148", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c98e9d03d115da3dd1c238e7a24ad643aacf148", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c98e9d03d115da3dd1c238e7a24ad643aacf148", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c98e9d03d115da3dd1c238e7a24ad643aacf148/comments", "author": null, "committer": null, "parents": [{"sha": "b376133b7f8699acafa6d21bac11474d7bfc7bee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b376133b7f8699acafa6d21bac11474d7bfc7bee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b376133b7f8699acafa6d21bac11474d7bfc7bee"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "3f64b73dd93cecc0a3da700a1162de6387de8bb6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c98e9d03d115da3dd1c238e7a24ad643aacf148/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c98e9d03d115da3dd1c238e7a24ad643aacf148/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c98e9d03d115da3dd1c238e7a24ad643aacf148", "patch": "@@ -1,3 +1,9 @@\n+2005-06-20  Roger Sayle  <roger@eyesopen.com>\n+2005-06-20  Fariborz Jahanian <fjahanian@apple.com>\n+\n+\t* combine.c (simplify_set): Simplify setting of CC register\n+\tby removing redundant compare with 0 on RHS.\n+\n 2005-06-20  Jan Beulich  <jbeulich@novell.com>\n \n \t* config/i386/netware-libgcc.def: Update copyright."}, {"sha": "e10d29f7e81436df8e0c79e67959148a9ec49262", "filename": "gcc/combine.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c98e9d03d115da3dd1c238e7a24ad643aacf148/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c98e9d03d115da3dd1c238e7a24ad643aacf148/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=8c98e9d03d115da3dd1c238e7a24ad643aacf148", "patch": "@@ -5274,6 +5274,11 @@ simplify_set (rtx x)\n \t  SUBST (SET_SRC (x), gen_rtx_COMPARE (compare_mode, op0, op1));\n \t  src = SET_SRC (x);\n \t}\n+      else if (GET_MODE (op0) == compare_mode && op1 == const0_rtx)\n+\t{\n+\t  SUBST(SET_SRC (x), op0);\n+\t  src = SET_SRC (x);\n+        }\n       else\n \t{\n \t  /* Otherwise, update the COMPARE if needed.  */"}, {"sha": "5c8c96b6b69dba4ea2dbb419da04c902183f81c5", "filename": "gcc/testsuite/gcc.dg/altivec-nomfcr.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c98e9d03d115da3dd1c238e7a24ad643aacf148/gcc%2Ftestsuite%2Fgcc.dg%2Faltivec-nomfcr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c98e9d03d115da3dd1c238e7a24ad643aacf148/gcc%2Ftestsuite%2Fgcc.dg%2Faltivec-nomfcr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Faltivec-nomfcr.c?ref=8c98e9d03d115da3dd1c238e7a24ad643aacf148", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile { target powerpc-*-* } } */\n+/* { dg-options \"-O3 -maltivec\" } */\n+/* { dg-final { scan-assembler-not \"mfcr\" } } */\n+\n+#include <altivec.h>\n+\n+int foo(vector float x, vector float y) {\n+        if (vec_all_eq(x,y)) return 3245;\n+        else return 12;\n+}"}]}