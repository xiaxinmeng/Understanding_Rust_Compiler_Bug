{"sha": "11e2040a34cb9f616f9ecbdc1793ae6500e28aac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFlMjA0MGEzNGNiOWY2MTZmOWVjYmRjMTc5M2FlNjUwMGUyOGFhYw==", "commit": {"author": {"name": "Bruce Korb", "email": "bkorb@gnu.org", "date": "2001-05-26T18:26:29Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2001-05-26T18:26:29Z"}, "message": "fixtests.c (stdc_0_in_system_headers_test): Must return \"FIX\" when fixincl is operating in test mode\n\n\t* fixinc/fixtests.c(stdc_0_in_system_headers_test): Must return \"FIX\"\n\twhen fixincl is operating in test mode\n\t* fixinc/inclhack.def(AAB_dgux_int_varargs) : aesthetics\n\t(AAB_ultrix_limits): remove redundant text\n\t(AAB_ultrix_memory): ditto\n\t(AAB_ultrix_string): ditto\n\t(djgpp_wchar_h): fix the test text\n\t(irix_stdio_va_list): add test text\n\t(irix_limits_const): add a testing output file (limits.h is overwritten)\n\t(strict_ansi_not_ctd): put limits.h second in list for same reason\n\t(solaris27_mutex_init): test text needed selection text, too\n\n\t* fixinc/fixtests.c(stdc_0_in_system_headers_test): in testing mode,\n\talways apply the fix\n\nFrom-SVN: r42642", "tree": {"sha": "e448453174bfd0b8c6214f7150349325b50141da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e448453174bfd0b8c6214f7150349325b50141da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11e2040a34cb9f616f9ecbdc1793ae6500e28aac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11e2040a34cb9f616f9ecbdc1793ae6500e28aac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11e2040a34cb9f616f9ecbdc1793ae6500e28aac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11e2040a34cb9f616f9ecbdc1793ae6500e28aac/comments", "author": {"login": "brkorb", "id": 1242936, "node_id": "MDQ6VXNlcjEyNDI5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1242936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brkorb", "html_url": "https://github.com/brkorb", "followers_url": "https://api.github.com/users/brkorb/followers", "following_url": "https://api.github.com/users/brkorb/following{/other_user}", "gists_url": "https://api.github.com/users/brkorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/brkorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brkorb/subscriptions", "organizations_url": "https://api.github.com/users/brkorb/orgs", "repos_url": "https://api.github.com/users/brkorb/repos", "events_url": "https://api.github.com/users/brkorb/events{/privacy}", "received_events_url": "https://api.github.com/users/brkorb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "62bafc5e39105846303ecf4d3435c217ea556b79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62bafc5e39105846303ecf4d3435c217ea556b79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62bafc5e39105846303ecf4d3435c217ea556b79"}], "stats": {"total": 50, "additions": 29, "deletions": 21}, "files": [{"sha": "3c9128c67f038bdbb1125a4c914c776bc5dbf84c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11e2040a34cb9f616f9ecbdc1793ae6500e28aac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11e2040a34cb9f616f9ecbdc1793ae6500e28aac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=11e2040a34cb9f616f9ecbdc1793ae6500e28aac", "patch": "@@ -2,6 +2,18 @@\n \n \t* fixinc/fixtests.c(stdc_0_in_system_headers_test): Must return \"FIX\"\n \twhen fixincl is operating in test mode\n+\t* fixinc/inclhack.def(AAB_dgux_int_varargs) : aesthetics\n+\t(AAB_ultrix_limits): remove redundant text\n+\t(AAB_ultrix_memory): ditto\n+\t(AAB_ultrix_string): ditto\n+\t(djgpp_wchar_h): fix the test text\n+\t(irix_stdio_va_list): add test text\n+\t(irix_limits_const): add a testing output file (limits.h is overwritten)\n+\t(strict_ansi_not_ctd): put limits.h second in list for same reason\n+\t(solaris27_mutex_init): test text needed selection text, too\n+\n+\t* fixinc/fixtests.c(stdc_0_in_system_headers_test): Must return \"FIX\"\n+\twhen fixincl is operating in test mode\n \n 2001-05-26  Philip Blundell  <philb@gnu.org>\n "}, {"sha": "03b99cf7c43923a7f28db4195482c2dfd156db2a", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 17, "deletions": 21, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11e2040a34cb9f616f9ecbdc1793ae6500e28aac/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11e2040a34cb9f616f9ecbdc1793ae6500e28aac/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=11e2040a34cb9f616f9ecbdc1793ae6500e28aac", "patch": "@@ -104,7 +104,8 @@ fix = {\n fix = {\n     hackname = AAB_dgux_int_varargs;\n     files    = _int_varargs.h;\n-    replace  = \"#ifndef __INT_VARARGS_H\n+    replace  =\n+\"#ifndef __INT_VARARGS_H\n \\#define __INT_VARARGS_H\n \n /************************************************************************/\n@@ -537,9 +538,7 @@ fix = {\n     files    = limits.h;\n     mach     = \"*-*-ultrix4.3\";\n     replace  =\n-'/*\t@(#)limits.h\t\t\t\t*/\n-/* This file was generated by fixincludes\t*/\n-\\#ifndef _LIMITS_INCLUDED\n+'#ifndef _LIMITS_INCLUDED\n \\#define _LIMITS_INCLUDED\n \\#include <sys/limits.h>\n \\#endif /* _LIMITS_INCLUDED */\n@@ -557,9 +556,7 @@ fix = {\n     files    = memory.h;\n     mach     = \"*-*-ultrix4.3\";\n     replace  =\n-'/*\t@(#)memory.h\t\t\t\t*/\n-/* This file was generated by fixincludes\t*/\n-\\#ifndef _MEMORY_INCLUDED\n+'#ifndef _MEMORY_INCLUDED\n \\#define _MEMORY_INCLUDED\n \\#include <strings.h>\n \\#endif /* _MEMORY_INCLUDED */\n@@ -577,9 +574,7 @@ fix = {\n     files    = string.h;\n     mach     = \"*-*-ultrix4.3\";\n     replace  =\n-'/*\t@(#)string.h\t\t\t\t*/\n-/* This file was generated by fixincludes\t*/\n-\\#ifndef _STRING_INCLUDED\n+'#ifndef _STRING_INCLUDED\n \\#define _STRING_INCLUDED\n \\#include <strings.h>\n \\#endif /* _STRING_INCLUDED */\n@@ -1035,7 +1030,8 @@ fix = {\n     c_fix     = format;\n     c_fix_arg = \"%0\\n#include <sys/djtypes.h>\";\n     c_fix_arg = \"#include <stddef.h>\";\n-    test_text = \"__DJ_wint_t\\n#undef __DJ_wint_t\\n#define __DJ_wint_t\";\n+    test_text = \"#include <stddef.h>\\n\"\n+                \"extern __DJ_wint_t x;\\n\";\n };\n \n /*\n@@ -1350,6 +1346,8 @@ fix = {\n     select = '(printf\\(.*), /\\* va_list \\*/ char \\*';\n     c_fix  = format;\n     c_fix_arg = \"%1, __gnuc_va_list\";\n+    test_text =\n+    \"extern int printf( const char *, /* va_list */ char * );\";\n };\n \n \n@@ -1358,11 +1356,11 @@ fix = {\n  */\n fix = {\n     hackname\t= irix_limits_const;\n-    files\t= limits.h;\n+    files\t= fixinc-test-limits.h, limits.h;\n     select\t= \"^extern const \";\n     c_fix\t= format;\n     c_fix_arg\t= \"extern __const \";\n-    test_text   = \"extern const char limit; /* test\\n\\tlimits */\";\n+    test_text   = \"extern const char limit; /* test limits */\";\n };\n \n \n@@ -1994,7 +1992,8 @@ fix = {\n                 \"#if __STDC__ == 0\\n\"\n                 \"#if __STDC__ != 1\\n\"\n                 \"#if __STDC__ - 0 == 0\"\n-               \"/* not std C */\\nint foo;\\n#endif\";\n+               \"/* not std C */\\nint foo;\\n\"\n+               \"\\n#end-end-end-end-if :-)\";\n };\n \n /*\n@@ -2003,12 +2002,7 @@ fix = {\n  */\n fix = {\n     hackname = strict_ansi_not_ctd;\n-    files=\"limits.h\";\n-    files=\"math.h\";\n-    files=\"stdio.h\";\n-    files=\"signal.h\";\n-    files=\"stdlib.h\";\n-    files=\"time.h\";\n+    files    = math.h, limits.h, stdio.h, signal.h, stdlib.h, time.h;\n     select   = \"^([ \\t]*[|&][|&][ \\t(]*)\"\n                \"(__STDC__[ \\t]*-[ \\t]*0[ \\t]*==[ \\t]*0\"\n                \")(.*)\";\n@@ -2073,7 +2067,9 @@ fix = {\n   c_fix = format;\n   c_fix_arg = \"%1, {0}}\";\n   c_fix_arg = \"(define[ \\t]+PTHREAD_MUTEX_INITIALIZER.*),[ \\t]*0}$\";\n-  test_text = \"#define PTHREAD_MUTEX_INITIALIZER {{{0},0}, {{{0}}}, 0}\";\n+  test_text =\n+  '#ident \"@(#)pthread.h  1.26  98/04/12 SMI\"'\"\\n\"\n+  \"#define PTHREAD_MUTEX_INITIALIZER {{{0},0}, {{{0}}}, 0}\";\n };\n \n "}]}