{"sha": "6992707b2a12c2323206c14f8c3983822d26c27c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk5MjcwN2IyYTEyYzIzMjMyMDZjMTRmOGMzOTgzODIyZDI2YzI3Yw==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2015-08-20T17:01:32Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2015-08-20T17:01:32Z"}, "message": "altivec.h (vec_pmsum_be): New #define.\n\n[gcc]\n\n2015-08-20  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* config/rs6000/altivec.h (vec_pmsum_be): New #define.\n\t(vec_shasigma_be): New #define.\n\t* config/rs6000/rs6000-builtin.def (VPMSUMB): New BU_P8V_AV2_2.\n\t(VPMSUMH): Likewise.\n\t(VPMSUMW): Likewise.\n\t(VPMSUMD): Likewise.\n\t(VPMSUM): New BU_P8V_OVERLOAD_2.\n\t* config/rs6000/rs6000-c.c (altivec_overloaded_builtins): New\n\tentries for VEC_MADD and VEC_VPMSUM.\n\n[gcc/testsuite]\n\n2015-08-20  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* gcc.target/powerpc/altivec-35.c (foo): Add tests for vec_madd.\n\t* gcc.target/powerpc/p8vector-builtin-8.c (foo): Add tests for\n\tvec_vpmsum_be and vec_shasigma_be.\n\nFrom-SVN: r227036", "tree": {"sha": "31a226902ac5c715d5d196d7f17608caaa767aae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31a226902ac5c715d5d196d7f17608caaa767aae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6992707b2a12c2323206c14f8c3983822d26c27c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6992707b2a12c2323206c14f8c3983822d26c27c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6992707b2a12c2323206c14f8c3983822d26c27c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6992707b2a12c2323206c14f8c3983822d26c27c/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b68db6d1892178c1f8dcdfd5fbfd1b2ef0c5b49d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b68db6d1892178c1f8dcdfd5fbfd1b2ef0c5b49d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b68db6d1892178c1f8dcdfd5fbfd1b2ef0c5b49d"}], "stats": {"total": 73, "additions": 72, "deletions": 1}, "files": [{"sha": "33da6a99ea9c8d07c638537f39c5f757ce38a284", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6992707b2a12c2323206c14f8c3983822d26c27c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6992707b2a12c2323206c14f8c3983822d26c27c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6992707b2a12c2323206c14f8c3983822d26c27c", "patch": "@@ -1,3 +1,15 @@\n+2015-08-20  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/altivec.h (vec_pmsum_be): New #define.\n+\t(vec_shasigma_be): New #define.\n+\t* config/rs6000/rs6000-builtin.def (VPMSUMB): New BU_P8V_AV2_2.\n+\t(VPMSUMH): Likewise.\n+\t(VPMSUMW): Likewise.\n+\t(VPMSUMD): Likewise.\n+\t(VPMSUM): New BU_P8V_OVERLOAD_2.\n+\t* config/rs6000/rs6000-c.c (altivec_overloaded_builtins): New\n+\tentries for VEC_MADD and VEC_VPMSUM.\n+\n 2015-08-20  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* config/avr/avr.c (avr_insert_attributes): In diagnostic essage:"}, {"sha": "1c00099c78d5d3c071ea5839071bfdc054a84955", "filename": "gcc/config/rs6000/altivec.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6992707b2a12c2323206c14f8c3983822d26c27c/gcc%2Fconfig%2Frs6000%2Faltivec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6992707b2a12c2323206c14f8c3983822d26c27c/gcc%2Fconfig%2Frs6000%2Faltivec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.h?ref=6992707b2a12c2323206c14f8c3983822d26c27c", "patch": "@@ -208,6 +208,8 @@\n #define vec_lvebx __builtin_vec_lvebx\n #define vec_lvehx __builtin_vec_lvehx\n #define vec_lvewx __builtin_vec_lvewx\n+#define vec_pmsum_be __builtin_vec_vpmsum\n+#define vec_shasigma_be __builtin_crypto_vshasigma\n /* Cell only intrinsics.  */\n #ifdef __PPU__\n #define vec_lvlx __builtin_vec_lvlx"}, {"sha": "85082ec0ee2112689b8849d4159f68db6ec3c8d5", "filename": "gcc/config/rs6000/rs6000-builtin.def", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6992707b2a12c2323206c14f8c3983822d26c27c/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6992707b2a12c2323206c14f8c3983822d26c27c/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def?ref=6992707b2a12c2323206c14f8c3983822d26c27c", "patch": "@@ -1489,6 +1489,10 @@ BU_P8V_AV_2 (VPKUDUM,\t\t\"vpkudum\",\tCONST,\taltivec_vpkudum)\n BU_P8V_AV_2 (VPKSDSS,\t\t\"vpksdss\",\tCONST,\taltivec_vpksdss)\n BU_P8V_AV_2 (VPKUDUS,\t\t\"vpkudus\",\tCONST,\taltivec_vpkudus)\n BU_P8V_AV_2 (VPKSDUS,\t\t\"vpksdus\",\tCONST,\taltivec_vpksdus)\n+BU_P8V_AV_2 (VPMSUMB,\t\t\"vpmsumb\",\tCONST,\tcrypto_vpmsumb)\n+BU_P8V_AV_2 (VPMSUMH,\t\t\"vpmsumh\",\tCONST,\tcrypto_vpmsumh)\n+BU_P8V_AV_2 (VPMSUMW,\t\t\"vpmsumw\",\tCONST,\tcrypto_vpmsumw)\n+BU_P8V_AV_2 (VPMSUMD,\t\t\"vpmsumd\",\tCONST,\tcrypto_vpmsumd)\n BU_P8V_AV_2 (VRLD,\t\t\"vrld\",\t\tCONST,\tvrotlv2di3)\n BU_P8V_AV_2 (VSLD,\t\t\"vsld\",\t\tCONST,\tvashlv2di3)\n BU_P8V_AV_2 (VSRD,\t\t\"vsrd\",\t\tCONST,\tvlshrv2di3)\n@@ -1570,6 +1574,7 @@ BU_P8V_OVERLOAD_2 (VPKSDSS,\t\"vpksdss\")\n BU_P8V_OVERLOAD_2 (VPKSDUS,\t\"vpksdus\")\n BU_P8V_OVERLOAD_2 (VPKUDUM,\t\"vpkudum\")\n BU_P8V_OVERLOAD_2 (VPKUDUS,\t\"vpkudus\")\n+BU_P8V_OVERLOAD_2 (VPMSUM,      \"vpmsum\")\n BU_P8V_OVERLOAD_2 (VRLD,\t\"vrld\")\n BU_P8V_OVERLOAD_2 (VSLD,\t\"vsld\")\n BU_P8V_OVERLOAD_2 (VSRAD,\t\"vsrad\")"}, {"sha": "5fc2b53adfe203f804c76e5b083efc371e2be01d", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6992707b2a12c2323206c14f8c3983822d26c27c/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6992707b2a12c2323206c14f8c3983822d26c27c/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=6992707b2a12c2323206c14f8c3983822d26c27c", "patch": "@@ -2937,6 +2937,14 @@ const struct altivec_builtin_types altivec_overloaded_builtins[] = {\n     RS6000_BTI_V4SF, RS6000_BTI_V4SF, RS6000_BTI_V4SF, RS6000_BTI_V4SF },\n   { ALTIVEC_BUILTIN_VEC_MADD, VSX_BUILTIN_XVMADDDP,\n     RS6000_BTI_V2DF, RS6000_BTI_V2DF, RS6000_BTI_V2DF, RS6000_BTI_V2DF },\n+  { ALTIVEC_BUILTIN_VEC_MADD, ALTIVEC_BUILTIN_VMLADDUHM,\n+    RS6000_BTI_V8HI, RS6000_BTI_V8HI, RS6000_BTI_V8HI, RS6000_BTI_V8HI },\n+  { ALTIVEC_BUILTIN_VEC_MADD, ALTIVEC_BUILTIN_VMLADDUHM,\n+    RS6000_BTI_V8HI, RS6000_BTI_V8HI, RS6000_BTI_unsigned_V8HI, RS6000_BTI_unsigned_V8HI },\n+  { ALTIVEC_BUILTIN_VEC_MADD, ALTIVEC_BUILTIN_VMLADDUHM,\n+    RS6000_BTI_V8HI, RS6000_BTI_unsigned_V8HI, RS6000_BTI_V8HI, RS6000_BTI_V8HI },\n+  { ALTIVEC_BUILTIN_VEC_MADD, ALTIVEC_BUILTIN_VMLADDUHM,\n+    RS6000_BTI_unsigned_V8HI, RS6000_BTI_unsigned_V8HI, RS6000_BTI_unsigned_V8HI, RS6000_BTI_unsigned_V8HI },\n   { ALTIVEC_BUILTIN_VEC_MADDS, ALTIVEC_BUILTIN_VMHADDSHS,\n     RS6000_BTI_V8HI, RS6000_BTI_V8HI, RS6000_BTI_V8HI, RS6000_BTI_V8HI },\n   { ALTIVEC_BUILTIN_VEC_MLADD, ALTIVEC_BUILTIN_VMLADDUHM,\n@@ -4171,6 +4179,19 @@ const struct altivec_builtin_types altivec_overloaded_builtins[] = {\n   { P8V_BUILTIN_VEC_VMRGOW, P8V_BUILTIN_VMRGOW,\n     RS6000_BTI_bool_V4SI, RS6000_BTI_bool_V4SI, RS6000_BTI_bool_V4SI, 0 },\n \n+  { P8V_BUILTIN_VEC_VPMSUM, P8V_BUILTIN_VPMSUMB,\n+    RS6000_BTI_unsigned_V8HI, RS6000_BTI_unsigned_V16QI,\n+    RS6000_BTI_unsigned_V16QI, 0 },\n+  { P8V_BUILTIN_VEC_VPMSUM, P8V_BUILTIN_VPMSUMH,\n+    RS6000_BTI_unsigned_V4SI, RS6000_BTI_unsigned_V8HI,\n+    RS6000_BTI_unsigned_V8HI, 0 },\n+  { P8V_BUILTIN_VEC_VPMSUM, P8V_BUILTIN_VPMSUMW,\n+    RS6000_BTI_unsigned_V2DI, RS6000_BTI_unsigned_V4SI,\n+    RS6000_BTI_unsigned_V4SI, 0 },\n+  { P8V_BUILTIN_VEC_VPMSUM, P8V_BUILTIN_VPMSUMD,\n+    RS6000_BTI_unsigned_V1TI, RS6000_BTI_unsigned_V2DI,\n+    RS6000_BTI_unsigned_V2DI, 0 },\n+\n   { P8V_BUILTIN_VEC_VPOPCNT, P8V_BUILTIN_VPOPCNTB,\n     RS6000_BTI_V16QI, RS6000_BTI_V16QI, 0, 0 },\n   { P8V_BUILTIN_VEC_VPOPCNT, P8V_BUILTIN_VPOPCNTB,"}, {"sha": "a91ce0d9b60c4b72a81a9eaf5ade3844e3147f52", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6992707b2a12c2323206c14f8c3983822d26c27c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6992707b2a12c2323206c14f8c3983822d26c27c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6992707b2a12c2323206c14f8c3983822d26c27c", "patch": "@@ -1,3 +1,9 @@\n+2015-08-20  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* gcc.target/powerpc/altivec-35.c (foo): Add tests for vec_madd.\n+\t* gcc.target/powerpc/p8vector-builtin-8.c (foo): Add tests for\n+\tvec_vpmsum_be and vec_shasigma_be.\n+\n 2015-08-20  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* lib/target-supports.exp"}, {"sha": "46e8eed7fea6701948a606fdb5956dc2d0f456c0", "filename": "gcc/testsuite/gcc.target/powerpc/altivec-35.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6992707b2a12c2323206c14f8c3983822d26c27c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-35.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6992707b2a12c2323206c14f8c3983822d26c27c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-35.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Faltivec-35.c?ref=6992707b2a12c2323206c14f8c3983822d26c27c", "patch": "@@ -7,10 +7,19 @@\n /* Test Altivec built-ins added for version 1.1 of ELFv2 ABI.  */\n \n vector signed int vsia, vsib;\n+vector signed short vssa, vssb, vssc;\n+vector unsigned short vusa, vusb, vusc;\n \n-void foo (vector signed int *vsir)\n+void foo (vector signed int *vsir,\n+\t  vector signed short *vssr,\n+\t  vector unsigned short *vusr)\n {\n   *vsir++ = vec_addc (vsia, vsib);\n+  *vssr++ = vec_madd (vssa, vssb, vssc);\n+  *vssr++ = vec_madd (vssa, vusb, vusc);\n+  *vssr++ = vec_madd (vusa, vssb, vssc);\n+  *vusr++ = vec_madd (vusa, vusb, vusc);\n }\n \n /* { dg-final { scan-assembler-times \"vaddcuw\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmladduhm\" 4 } } */"}, {"sha": "bb5e182832e194e65f7abbc78bb680b55893a9ae", "filename": "gcc/testsuite/gcc.target/powerpc/p8vector-builtin-8.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6992707b2a12c2323206c14f8c3983822d26c27c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp8vector-builtin-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6992707b2a12c2323206c14f8c3983822d26c27c/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp8vector-builtin-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fp8vector-builtin-8.c?ref=6992707b2a12c2323206c14f8c3983822d26c27c", "patch": "@@ -8,7 +8,9 @@\n \n vector unsigned char      vuca, vucb, vucc;\n vector bool     char      vbca, vbcb;\n+vector unsigned short     vusa, vusb;\n vector bool     short     vbsa, vbsb;\n+vector unsigned int       vuia, vuib;\n vector bool     int       vbia, vbib;\n vector signed   long long vsla, vslb;\n vector unsigned long long vula, vulb, vulc;\n@@ -19,7 +21,9 @@ vector          double    vda,  vdb;\n \n void foo (vector unsigned char *vucr,\n \t  vector bool char *vbcr,\n+\t  vector unsigned short *vusr,\n \t  vector bool short *vbsr,\n+\t  vector unsigned int *vuir,\n \t  vector bool int *vbir,\n \t  vector unsigned long long *vulr,\n \t  vector bool long long *vblr,\n@@ -48,6 +52,12 @@ void foo (vector unsigned char *vucr,\n   *vblr++ = vec_orc (vbla, vblb);\n   *vbsr++ = vec_orc (vbsa, vbsb);\n   *vblr++ = vec_perm (vbla, vblb, vucc);\n+  *vusr++ = vec_pmsum_be (vuca, vucb);\n+  *vuir++ = vec_pmsum_be (vusa, vusb);\n+  *vulr++ = vec_pmsum_be (vuia, vuib);\n+  *vuxr++ = vec_pmsum_be (vula, vulb);\n+  *vuir++ = vec_shasigma_be (vuia, 0, 1);\n+  *vulr++ = vec_shasigma_be (vula, 0, 1);\n }\n \n /* { dg-final { scan-assembler-times \"vaddcuq\" 2 } } */\n@@ -59,4 +69,10 @@ void foo (vector unsigned char *vucr,\n /* { dg-final { scan-assembler-times \"xxlnand\" 4 } } */\n /* { dg-final { scan-assembler-times \"xxlorc\" 4 } } */\n /* { dg-final { scan-assembler-times \"vperm\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpmsumb\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpmsumh\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpmsumw\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpmsumd\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vshasigmaw\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vshasigmad\" 1 } } */\n "}]}