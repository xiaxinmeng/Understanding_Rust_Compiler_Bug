{"sha": "495079550e135c7ad0605e9c549202c35625cde7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk1MDc5NTUwZTEzNWM3YWQwNjA1ZTljNTQ5MjAyYzM1NjI1Y2RlNw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-07-09T09:58:51Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2019-07-09T09:58:51Z"}, "message": "* ira-emit.c (emit_moves): Skip DEBUG_INSNs when setting the location.\n\nFrom-SVN: r273297", "tree": {"sha": "a352b4f90e8801018783b8d4abdd4009cc70b7f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a352b4f90e8801018783b8d4abdd4009cc70b7f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/495079550e135c7ad0605e9c549202c35625cde7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/495079550e135c7ad0605e9c549202c35625cde7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/495079550e135c7ad0605e9c549202c35625cde7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/495079550e135c7ad0605e9c549202c35625cde7/comments", "author": null, "committer": null, "parents": [{"sha": "4c12dc0556605578f4f35c4be27cff9fef28877b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c12dc0556605578f4f35c4be27cff9fef28877b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c12dc0556605578f4f35c4be27cff9fef28877b"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "5a6a7f432b460a2524b534baf7734d1477d60b4e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/495079550e135c7ad0605e9c549202c35625cde7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/495079550e135c7ad0605e9c549202c35625cde7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=495079550e135c7ad0605e9c549202c35625cde7", "patch": "@@ -1,3 +1,7 @@\n+2019-07-09  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* ira-emit.c (emit_moves): Skip DEBUG_INSNs when setting the location.\n+\n 2019-07-09  Sylvia Taylor  <sylvia.taylor@arm.com>\n \n \t* config/arm/crypto.md:"}, {"sha": "255af307b3c83ba3d7173598928ccb836e65643c", "filename": "gcc/ira-emit.c", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/495079550e135c7ad0605e9c549202c35625cde7/gcc%2Fira-emit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/495079550e135c7ad0605e9c549202c35625cde7/gcc%2Fira-emit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-emit.c?ref=495079550e135c7ad0605e9c549202c35625cde7", "patch": "@@ -997,27 +997,30 @@ emit_moves (void)\n   basic_block bb;\n   edge_iterator ei;\n   edge e;\n-  rtx_insn *insns, *tmp;\n+  rtx_insn *insns, *tmp, *next;\n \n   FOR_EACH_BB_FN (bb, cfun)\n     {\n       if (at_bb_start[bb->index] != NULL)\n \t{\n \t  at_bb_start[bb->index] = modify_move_list (at_bb_start[bb->index]);\n-\t  insns = emit_move_list (at_bb_start[bb->index],\n-\t\t\t\t  REG_FREQ_FROM_BB (bb));\n+\t  insns\n+\t    = emit_move_list (at_bb_start[bb->index], REG_FREQ_FROM_BB (bb));\n \t  tmp = BB_HEAD (bb);\n \t  if (LABEL_P (tmp))\n \t    tmp = NEXT_INSN (tmp);\n \t  if (NOTE_INSN_BASIC_BLOCK_P (tmp))\n \t    tmp = NEXT_INSN (tmp);\n-\t  /* Propagate the location of the current first instruction to the\n-\t     moves so that they don't inherit a random location.  */\n-\t  if (tmp != NULL_RTX && INSN_P (tmp))\n-\t    set_insn_locations (insns, INSN_LOCATION (tmp));\n+\t  /* Make sure to put the location of TMP or a subsequent instruction\n+\t     to avoid inheriting the location of the previous instruction.  */\n+\t  next = tmp;\n+\t  while (next && !NONDEBUG_INSN_P (next))\n+\t    next = NEXT_INSN (next);\n+\t  if (next)\n+\t    set_insn_locations (insns, INSN_LOCATION (next));\n \t  if (tmp == BB_HEAD (bb))\n \t    emit_insn_before (insns, tmp);\n-\t  else if (tmp != NULL_RTX)\n+\t  else if (tmp)\n \t    emit_insn_after (insns, PREV_INSN (tmp));\n \t  else\n \t    emit_insn_after (insns, get_last_insn ());"}]}