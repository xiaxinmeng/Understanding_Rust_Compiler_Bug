{"sha": "25b15e953ac48e5042e27a4419ca20211403b7cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjViMTVlOTUzYWM0OGU1MDQyZTI3YTQ0MTljYTIwMjExNDAzYjdjYg==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2017-12-06T17:47:45Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2017-12-06T17:47:45Z"}, "message": "PR tree-optimization/83075 - Invalid strncpy optimization\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/83075\n\t* tree-ssa-strlen.c (handle_builtin_stxncpy): Avoid assuming\n\tstrncat/strncpy don't change length of source string.\n\ngcc/testsuite/ChangeLog:\n\n\tPR tree-optimization/83075\n\t* gcc.dg/tree-ssa/strncat.c: New test.\n\t* gcc.dg/tree-ssa/strncpy-2.c: Same.\n\nFrom-SVN: r255446", "tree": {"sha": "8702db003aa73c7b1a8670612c78ec7cd47578ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8702db003aa73c7b1a8670612c78ec7cd47578ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25b15e953ac48e5042e27a4419ca20211403b7cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25b15e953ac48e5042e27a4419ca20211403b7cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25b15e953ac48e5042e27a4419ca20211403b7cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25b15e953ac48e5042e27a4419ca20211403b7cb/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4c413747a31d0dd8ecfc05312584725d2f0955f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c413747a31d0dd8ecfc05312584725d2f0955f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c413747a31d0dd8ecfc05312584725d2f0955f6"}], "stats": {"total": 57, "additions": 53, "deletions": 4}, "files": [{"sha": "5bcc6a9580b3bba0268bd5ea4ad7cbae3ea4a09f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25b15e953ac48e5042e27a4419ca20211403b7cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25b15e953ac48e5042e27a4419ca20211403b7cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=25b15e953ac48e5042e27a4419ca20211403b7cb", "patch": "@@ -1,3 +1,9 @@\n+2017-12-06  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/83075\n+\t* tree-ssa-strlen.c (handle_builtin_stxncpy): Avoid assuming\n+\tstrncat/strncpy don't change length of source string.\n+\n 2017-12-06  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tRevert"}, {"sha": "c39f3d260c6386664a240592557ca5130c0c88a2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25b15e953ac48e5042e27a4419ca20211403b7cb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25b15e953ac48e5042e27a4419ca20211403b7cb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=25b15e953ac48e5042e27a4419ca20211403b7cb", "patch": "@@ -1,3 +1,9 @@\n+2017-12-06  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/83075\n+\t* gcc.dg/tree-ssa/strncat.c: New test.\n+\t* gcc.dg/tree-ssa/strncpy-2.c: Same.\n+\n 2017-12-06  Bin Cheng  <bin.cheng@arm.com>\n \n \t* g++.dg/graphite/pr41305.C: Refine test option."}, {"sha": "93a60c8fd1ab4236475eeed9919f63a14f238721", "filename": "gcc/testsuite/gcc.dg/tree-ssa/strncat.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25b15e953ac48e5042e27a4419ca20211403b7cb/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstrncat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25b15e953ac48e5042e27a4419ca20211403b7cb/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstrncat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstrncat.c?ref=25b15e953ac48e5042e27a4419ca20211403b7cb", "patch": "@@ -0,0 +1,19 @@\n+/* PR tree-optimization/83075 - Invalid strncpy optimization\n+   { dg-do run }\n+   { dg-options \"-O2 -Wno-stringop-overflow\" } */\n+\n+int main (void)\n+{\n+  char a[8] = \"\";\n+\n+  __builtin_strcpy (a, \"123\");\n+\n+  unsigned n0 = __builtin_strlen (a);\n+\n+  __builtin_strncat (a + 3, a, n0);\n+\n+  unsigned n1 = __builtin_strlen (a);\n+\n+  if (n1 == n0)\n+    __builtin_abort ();\n+}"}, {"sha": "42203d5cda813761665360457f119ba9098ef395", "filename": "gcc/testsuite/gcc.dg/tree-ssa/strncpy-2.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25b15e953ac48e5042e27a4419ca20211403b7cb/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstrncpy-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25b15e953ac48e5042e27a4419ca20211403b7cb/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstrncpy-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fstrncpy-2.c?ref=25b15e953ac48e5042e27a4419ca20211403b7cb", "patch": "@@ -0,0 +1,19 @@\n+/* PR tree-optimization/83075 - Invalid strncpy optimization\n+   { dg-do run }\n+   { dg-options \"-O2 -Wno-stringop-overflow\" } */\n+\n+int main (void)\n+{\n+  char a[8] = \"\";\n+\n+  __builtin_strcpy (a, \"123\");\n+\n+  unsigned n0 = __builtin_strlen (a);\n+\n+  __builtin_strncpy (a + 3, a, n0);\n+\n+  unsigned n1 = __builtin_strlen (a);\n+\n+  if (n1 == n0)\n+    __builtin_abort ();\n+}"}, {"sha": "94f20efb4a1ae152bfa4ad0631fba096a26544f3", "filename": "gcc/tree-ssa-strlen.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25b15e953ac48e5042e27a4419ca20211403b7cb/gcc%2Ftree-ssa-strlen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25b15e953ac48e5042e27a4419ca20211403b7cb/gcc%2Ftree-ssa-strlen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-strlen.c?ref=25b15e953ac48e5042e27a4419ca20211403b7cb", "patch": "@@ -1941,10 +1941,9 @@ handle_builtin_stxncpy (built_in_function, gimple_stmt_iterator *gsi)\n   int sidx = get_stridx (src);\n   strinfo *sisrc = sidx > 0 ? get_strinfo (sidx) : NULL;\n \n-  /* Strncpy() et al. cannot modify the source string.  Prevent the rest\n-     of the pass from invalidating the strinfo data.  */\n-  if (sisrc)\n-    sisrc->dont_invalidate = true;\n+  /* strncat() and strncpy() can modify the source string by writing\n+     over the terminating nul so SISRC->DONT_INVALIDATE must be left\n+     clear.  */\n \n   /* Retrieve the strinfo data for the string S that LEN was computed\n      from as some function F of strlen (S) (i.e., LEN need not be equal"}]}