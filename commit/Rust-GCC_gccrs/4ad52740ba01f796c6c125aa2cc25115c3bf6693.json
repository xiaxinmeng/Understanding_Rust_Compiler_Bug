{"sha": "4ad52740ba01f796c6c125aa2cc25115c3bf6693", "node_id": "C_kwDOANBUbNoAKDRhZDUyNzQwYmEwMWY3OTZjNmMxMjVhYTJjYzI1MTE1YzNiZjY2OTM", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-08-05T00:16:24Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-08-05T00:16:24Z"}, "message": "Daily bump.", "tree": {"sha": "6b84ba79daa91618e7eaa69faf4a1cef1a6b6f75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b84ba79daa91618e7eaa69faf4a1cef1a6b6f75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ad52740ba01f796c6c125aa2cc25115c3bf6693", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ad52740ba01f796c6c125aa2cc25115c3bf6693", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ad52740ba01f796c6c125aa2cc25115c3bf6693", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ad52740ba01f796c6c125aa2cc25115c3bf6693/comments", "author": null, "committer": null, "parents": [{"sha": "cd093ee46853717ce81baabce9ecae70c22a08b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd093ee46853717ce81baabce9ecae70c22a08b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd093ee46853717ce81baabce9ecae70c22a08b9"}], "stats": {"total": 124, "additions": 123, "deletions": 1}, "files": [{"sha": "975c8f203d5f7208d42c6fc489b9aec735b09cd3", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ad52740ba01f796c6c125aa2cc25115c3bf6693/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ad52740ba01f796c6c125aa2cc25115c3bf6693/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=4ad52740ba01f796c6c125aa2cc25115c3bf6693", "patch": "@@ -1,3 +1,7 @@\n+2022-08-04  Eugene Rozenfeld  <erozen@microsoft.com>\n+\n+\t* MAINTAINERS: Add myself as AutoFDO maintainer.\n+\n 2022-08-01  Roger Sayle  <roger@nextmovesoftware.com>\n \t    Arnaud Charlet  <charlet@adacore.com>\n "}, {"sha": "73f427775415717f425c400471f78e7a04969170", "filename": "gcc/ChangeLog", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ad52740ba01f796c6c125aa2cc25115c3bf6693/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ad52740ba01f796c6c125aa2cc25115c3bf6693/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4ad52740ba01f796c6c125aa2cc25115c3bf6693", "patch": "@@ -1,3 +1,42 @@\n+2022-08-04  Andrew MacLeod  <amacleod@redhat.com>\n+\n+\tPR tree-optimization/106514\n+\t* gimple-range-path.cc (path_range_query::compute_ranges_in_block):\n+\tUse EXECUTE_IF_AND_IN_BITMAP to loop over 2 bitmaps.\n+\n+2022-08-04  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* match.pd: New bit_not rule.\n+\n+2022-08-04  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR middle-end/106519\n+\t* tree-ssa-phiopt.cc (tree_ssa_phiopt_worker): Check final phi edge for\n+\tdiamond shapes.\n+\n+2022-08-04  Sam Feifer  <sfeifer@redhat.com>\n+\n+\tPR tree-optimization/106243\n+\t* match.pd (-x & 1): New simplification.\n+\n+2022-08-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/106521\n+\t* gimple-loop-jam.cc (tree_loop_unroll_and_jam): Perform\n+\tCFG cleanup manually before rewriting into LC SSA.\n+\n+2022-08-04  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-threadbackward.cc (populate_worklist): Remove.\n+\t(back_threader::resolve_phi): Likewise.\n+\t(back_threader::find_paths_to_names): Rewrite greedy search.\n+\n+2022-08-04  Ilya Leoshkevich  <iii@linux.ibm.com>\n+\n+\t* config/s390/vector.md (V_HW_FT): New iterator.\n+\t* config/s390/vx-builtins.md (vsel<mode>): Use V_HW_FT instead\n+\tof V_HW.\n+\n 2022-08-03   Michael Meissner  <meissner@linux.ibm.com>\n \n \t* config/rs6000/rs6000.cc (rs6000_option_override_internal): Remove code"}, {"sha": "9f7125e822a746ba016af6c94e78e8c27a4fb65c", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ad52740ba01f796c6c125aa2cc25115c3bf6693/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ad52740ba01f796c6c125aa2cc25115c3bf6693/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=4ad52740ba01f796c6c125aa2cc25115c3bf6693", "patch": "@@ -1 +1 @@\n-20220804\n+20220805"}, {"sha": "98434c0fbe5fc75af4ceeffd56aba4c12d635970", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ad52740ba01f796c6c125aa2cc25115c3bf6693/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ad52740ba01f796c6c125aa2cc25115c3bf6693/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4ad52740ba01f796c6c125aa2cc25115c3bf6693", "patch": "@@ -1,3 +1,23 @@\n+2022-08-04  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* gcc.dg/subnot.c: New test.\n+\n+2022-08-04  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR middle-end/106519\n+\t* gcc.dg/pr106519.c: New test.\n+\n+2022-08-04  Sam Feifer  <sfeifer@redhat.com>\n+\n+\tPR tree-optimization/106243\n+\t* gcc.dg/pr106243-1.c: New test.\n+\t* gcc.dg/pr106243.c: New test.\n+\n+2022-08-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/106521\n+\t* gcc.dg/torture/pr106521.c: New testcase.\n+\n 2022-08-03  Jose E. Marchesi  <jose.marchesi@oracle.com>\n \n \tPR testsuite/106515"}, {"sha": "34495f5c0bc409d4c08e2cf16e72aca04536ad4c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ad52740ba01f796c6c125aa2cc25115c3bf6693/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ad52740ba01f796c6c125aa2cc25115c3bf6693/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4ad52740ba01f796c6c125aa2cc25115c3bf6693", "patch": "@@ -1,3 +1,62 @@\n+2022-08-04  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/string_view (basic_string_view(Range&&)): Add\n+\texplicit as per P2499R0.\n+\t* testsuite/21_strings/basic_string_view/cons/char/range_c++20.cc:\n+\tAdjust implicit conversions. Check implicit conversions fail.\n+\t* testsuite/21_strings/basic_string_view/cons/wchar_t/range_c++20.cc:\n+\tLikewise.\n+\n+2022-08-04  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/fs_dir.h (directory_iterator): Add comparison\n+\twith std::default_sentinel_t. Remove redundant operator!= for\n+\tC++20.\n+\t* (recursive_directory_iterator): Likewise.\n+\t* include/bits/iterator_concepts.h [!__cpp_lib_concepts]\n+\t(default_sentinel_t, default_sentinel): Define even if concepts\n+\tare not supported.\n+\t* include/bits/regex.h (regex_iterator): Add comparison with\n+\tstd::default_sentinel_t. Remove redundant operator!= for C++20.\n+\t(regex_token_iterator): Likewise.\n+\t(regex_token_iterator::_M_end_of_seq()): Add noexcept.\n+\t* testsuite/27_io/filesystem/iterators/lwg3719.cc: New test.\n+\t* testsuite/28_regex/iterators/regex_iterator/lwg3719.cc:\n+\tNew test.\n+\t* testsuite/28_regex/iterators/regex_token_iterator/lwg3719.cc:\n+\tNew test.\n+\n+2022-08-04  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/std/expected (unexpected::_M_val): Rename to _M_unex.\n+\t(bad_expected_access::_M_val): Likewise.\n+\n+2022-08-04  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/ios_base.h (__cpp_lib_ios_noreplace): Update\n+\tvalue to 202207L.\n+\t* include/std/version (__cpp_lib_ios_noreplace): Likewise.\n+\t* testsuite/27_io/basic_ofstream/open/char/noreplace.cc: Check\n+\tfor new value.\n+\t* testsuite/27_io/basic_ofstream/open/wchar_t/noreplace.cc:\n+\tLikewise.\n+\n+2022-08-04  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/106183\n+\t* include/bits/atomic_wait.h (__waiter_pool_base::_M_notify):\n+\tMove increment of _M_ver here.\n+\t[!_GLIBCXX_HAVE_PLATFORM_WAIT]: Lock mutex around increment.\n+\tUse relaxed memory order and always notify all waiters.\n+\t(__waiter_base::_M_do_wait) [!_GLIBCXX_HAVE_PLATFORM_WAIT]:\n+\tCheck value again after locking mutex.\n+\t(__waiter_base::_M_notify): Remove increment of _M_ver.\n+\n+2022-08-04  Ulrich Drepper  <drepper@gmail.com>\n+\n+\t* python/libstdcxx/v6/printers.py (class StdTuplePrinter): Use\n+\tzero-based indeces just like std:get takes.\n+\n 2022-07-29  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/104443"}]}