{"sha": "edfcd7e3d471b9dde2d9a84490a850d2f850f381", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWRmY2Q3ZTNkNDcxYjlkZGUyZDlhODQ0OTBhODUwZDJmODUwZjM4MQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-03-08T14:10:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-03-08T14:10:47Z"}, "message": "re PR tree-optimization/79955 (GLIBC build fails after r245840)\n\n2017-03-08  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/79955\n\t* tree-ssa-uninit.c (warn_uninitialized_vars): Do not warn\n\tfor accesses that are completely outside of the variable.\n\n\t* gcc.dg/uninit-24.c: New testcase.\n\nFrom-SVN: r245976", "tree": {"sha": "8052c1b41778ff9f1e2e9505b8521a982efc2e63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8052c1b41778ff9f1e2e9505b8521a982efc2e63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/edfcd7e3d471b9dde2d9a84490a850d2f850f381", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edfcd7e3d471b9dde2d9a84490a850d2f850f381", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edfcd7e3d471b9dde2d9a84490a850d2f850f381", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edfcd7e3d471b9dde2d9a84490a850d2f850f381/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6659fe59f3c39e991149fe60f17d0628d771a454", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6659fe59f3c39e991149fe60f17d0628d771a454", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6659fe59f3c39e991149fe60f17d0628d771a454"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "c59224eab3903c96d355c0021ff290720c4624fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfcd7e3d471b9dde2d9a84490a850d2f850f381/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfcd7e3d471b9dde2d9a84490a850d2f850f381/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=edfcd7e3d471b9dde2d9a84490a850d2f850f381", "patch": "@@ -1,3 +1,9 @@\n+2017-03-08  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/79955\n+\t* tree-ssa-uninit.c (warn_uninitialized_vars): Do not warn\n+\tfor accesses that are completely outside of the variable.\n+\n 2017-03-08  Andrew Haley  <aph@redhat.com>\n \n \tPR tree-optimization/79943"}, {"sha": "396ab3ad1218c104b1efa1b6ace29c91d35bfa59", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfcd7e3d471b9dde2d9a84490a850d2f850f381/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfcd7e3d471b9dde2d9a84490a850d2f850f381/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=edfcd7e3d471b9dde2d9a84490a850d2f850f381", "patch": "@@ -7,6 +7,11 @@\n \tPR tree-optimization/79943\n \t* gcc.dg/tree-ssa/pr79943.c: New test.\n \n+2017-03-08  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/79955\n+\t* gcc.dg/uninit-24.c: New testcase.\n+\n 2017-03-08  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/79920"}, {"sha": "30fe1e510fdb991c1d96105555b18dc4dd95510f", "filename": "gcc/testsuite/gcc.dg/uninit-24.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfcd7e3d471b9dde2d9a84490a850d2f850f381/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfcd7e3d471b9dde2d9a84490a850d2f850f381/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-24.c?ref=edfcd7e3d471b9dde2d9a84490a850d2f850f381", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -Wmaybe-uninitialized\" } */\n+\n+int foo (int x)\n+{\n+  int y;\n+  if (x)\n+    return *(&y + 1); /* { dg-bogus \"may be used uninitialized\" } */\n+  return 0;\n+}"}, {"sha": "e019ecc9d29e019af64fdf2b077fb7b4c80fb4a1", "filename": "gcc/tree-ssa-uninit.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/edfcd7e3d471b9dde2d9a84490a850d2f850f381/gcc%2Ftree-ssa-uninit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/edfcd7e3d471b9dde2d9a84490a850d2f850f381/gcc%2Ftree-ssa-uninit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-uninit.c?ref=edfcd7e3d471b9dde2d9a84490a850d2f850f381", "patch": "@@ -287,6 +287,17 @@ warn_uninitialized_vars (bool warn_possibly_uninitialized)\n \t\t  || TREE_NO_WARNING (base))\n \t\tcontinue;\n \n+\t      /* Do not warn if the access is fully outside of the\n+\t         variable.  */\n+\t      if (ref.size != -1\n+\t\t  && ref.max_size == ref.size\n+\t\t  && (ref.offset + ref.size <= 0\n+\t\t      || (ref.offset >= 0\n+\t\t\t  && TREE_CODE (DECL_SIZE (base)) == INTEGER_CST\n+\t\t\t  && compare_tree_int (DECL_SIZE (base),\n+\t\t\t\t\t       ref.offset) <= 0)))\n+\t\tcontinue;\n+\n \t      /* Limit the walking to a constant number of stmts after\n \t         we overcommit quadratic behavior for small functions\n \t\t and O(n) behavior.  */"}]}