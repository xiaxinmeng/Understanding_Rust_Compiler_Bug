{"sha": "fea0568fd39fa2582802b29ae3f770cd1b1f70df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmVhMDU2OGZkMzlmYTI1ODI4MDJiMjlhZTNmNzcwY2QxYjFmNzBkZg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2009-01-04T13:55:25Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-01-04T13:55:25Z"}, "message": "re PR libstdc++/38719 (_Fwd_list_iterator::_M_next() returns reference to local memory)\n\n2009-01-04  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/38719\n\t* include/bits/forward_list.h (_Fwd_list_iterator<>::_M_next,\n\t_Fwd_list_const_iterator::_M_next): Fix return type.\n\nFrom-SVN: r143052", "tree": {"sha": "feda5d21d14f4f3d81e61346d5f8af250aa3ffbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/feda5d21d14f4f3d81e61346d5f8af250aa3ffbb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fea0568fd39fa2582802b29ae3f770cd1b1f70df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fea0568fd39fa2582802b29ae3f770cd1b1f70df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fea0568fd39fa2582802b29ae3f770cd1b1f70df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fea0568fd39fa2582802b29ae3f770cd1b1f70df/comments", "author": null, "committer": null, "parents": [{"sha": "1df48f5c5809c8bccc3487c3c76c3a2c24faef51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1df48f5c5809c8bccc3487c3c76c3a2c24faef51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1df48f5c5809c8bccc3487c3c76c3a2c24faef51"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "cdf2770f945502eb58b76781e6a8c8b64fb8f4b9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fea0568fd39fa2582802b29ae3f770cd1b1f70df/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fea0568fd39fa2582802b29ae3f770cd1b1f70df/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=fea0568fd39fa2582802b29ae3f770cd1b1f70df", "patch": "@@ -1,3 +1,9 @@\n+2009-01-04  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/38719\n+\t* include/bits/forward_list.h (_Fwd_list_iterator<>::_M_next,\n+\t_Fwd_list_const_iterator::_M_next): Fix return type.\n+\n 2009-01-03  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* Revert last commit, reopen and suspend libstdc++/38678."}, {"sha": "e6a6a80d51342934a73b055fb040a14db4f9ab9b", "filename": "libstdc++-v3/include/bits/forward_list.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fea0568fd39fa2582802b29ae3f770cd1b1f70df/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fea0568fd39fa2582802b29ae3f770cd1b1f70df/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fforward_list.h?ref=fea0568fd39fa2582802b29ae3f770cd1b1f70df", "patch": "@@ -1,6 +1,6 @@\n // <forward_list.h> -*- C++ -*-\n \n-// Copyright (C) 2008 Free Software Foundation, Inc.\n+// Copyright (C) 2008, 2009 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -188,7 +188,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       operator!=(const _Self& __x) const\n       { return this->_M_node != __x._M_node; }\n \n-      const _Self&\n+      _Self\n       _M_next() const\n       {\n         if (_M_node)\n@@ -259,7 +259,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       operator!=(const _Self& __x) const\n       { return this->_M_node != __x._M_node; }\n \n-      const _Self&\n+      _Self\n       _M_next() const\n       {\n         if (this->_M_node)"}]}