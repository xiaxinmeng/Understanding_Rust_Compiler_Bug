{"sha": "d59a4c82a6fc608880b83b4339b9721ead432e95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU5YTRjODJhNmZjNjA4ODgwYjgzYjQzMzliOTcyMWVhZDQzMmU5NQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-12-05T00:53:44Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-12-05T00:53:44Z"}, "message": "compiler: Make sure we produce an error for a call to a non-function.\n\nFixes issue 19.\n\nFrom-SVN: r194174", "tree": {"sha": "3d75810243ea981e4f6f0f67dc1a584d44ac9a0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d75810243ea981e4f6f0f67dc1a584d44ac9a0a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d59a4c82a6fc608880b83b4339b9721ead432e95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d59a4c82a6fc608880b83b4339b9721ead432e95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d59a4c82a6fc608880b83b4339b9721ead432e95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d59a4c82a6fc608880b83b4339b9721ead432e95/comments", "author": null, "committer": null, "parents": [{"sha": "54d04de72b3232ec654ea4824f8b1e37f0cb1961", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54d04de72b3232ec654ea4824f8b1e37f0cb1961", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54d04de72b3232ec654ea4824f8b1e37f0cb1961"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "9da9414c3a69a81e12aca35ec486ee89a60a723f", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d59a4c82a6fc608880b83b4339b9721ead432e95/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d59a4c82a6fc608880b83b4339b9721ead432e95/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=d59a4c82a6fc608880b83b4339b9721ead432e95", "patch": "@@ -8544,6 +8544,16 @@ Call_expression::do_lower(Gogo* gogo, Named_object* function,\n     return Expression::make_cast(this->fn_->type(), this->args_->front(),\n \t\t\t\t loc);\n \n+  // Because do_type will return an error type and thus prevent future\n+  // errors, check for that case now to ensure that the error gets\n+  // reported.\n+  if (this->get_function_type() == NULL)\n+    {\n+      if (!this->fn_->type()->is_error())\n+\tthis->report_error(_(\"expected function\"));\n+      return Expression::make_error(loc);\n+    }\n+\n   // Recognize a call to a builtin function.\n   Func_expression* fne = this->fn_->func_expression();\n   if (fne != NULL"}]}