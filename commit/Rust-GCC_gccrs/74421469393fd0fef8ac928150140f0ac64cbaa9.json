{"sha": "74421469393fd0fef8ac928150140f0ac64cbaa9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ0MjE0NjkzOTNmZDBmZWY4YWM5MjgxNTAxNDBmMGFjNjRjYmFhOQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2005-02-21T21:39:33Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2005-02-21T21:39:33Z"}, "message": "re PR libfortran/19302 (intrinsic_nearest.f90 fails)\n\n\tPR libfortran/19302\n\t* intrinsics/c99_functions.c (nextafterf): Special-case infinite\n\tnumbers.\n\nFrom-SVN: r95353", "tree": {"sha": "d4a8c1881509a617ee87f2eb020a5f0f06bf2713", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4a8c1881509a617ee87f2eb020a5f0f06bf2713"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74421469393fd0fef8ac928150140f0ac64cbaa9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74421469393fd0fef8ac928150140f0ac64cbaa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74421469393fd0fef8ac928150140f0ac64cbaa9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74421469393fd0fef8ac928150140f0ac64cbaa9/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "10e7039248ce99bf0fcfb7d1d248785ad5d1788d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10e7039248ce99bf0fcfb7d1d248785ad5d1788d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10e7039248ce99bf0fcfb7d1d248785ad5d1788d"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "9c0561b04c34eb85013a44332d10b4f262a4a41c", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74421469393fd0fef8ac928150140f0ac64cbaa9/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74421469393fd0fef8ac928150140f0ac64cbaa9/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=74421469393fd0fef8ac928150140f0ac64cbaa9", "patch": "@@ -1,3 +1,9 @@\n+2005-02-21  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR libfortran/19302\n+\t* intrinsics/c99_functions.c (nextafterf): Special-case infinite\n+\tnumbers.\n+\n 2005-02-21  Steven G. Kargl  <kargls@comcast.net>\n \n \t* io/write.c (output_float):  Typo in error meesage."}, {"sha": "f7dc9777dd83c1d210d6cf2dd042f38d3d6a8a17", "filename": "libgfortran/intrinsics/c99_functions.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74421469393fd0fef8ac928150140f0ac64cbaa9/libgfortran%2Fintrinsics%2Fc99_functions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74421469393fd0fef8ac928150140f0ac64cbaa9/libgfortran%2Fintrinsics%2Fc99_functions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fc99_functions.c?ref=74421469393fd0fef8ac928150140f0ac64cbaa9", "patch": "@@ -218,6 +218,8 @@ nextafterf(float x, float y)\n     return x + y;\n   if (x == y)\n     return x;\n+  if (!isfinite (x))\n+    return x > 0 ? __FLT_MAX__ : - __FLT_MAX__;\n \n   /* absx = fabsf (x);  */\n   absx = (x < 0.0) ? -x : x;"}]}