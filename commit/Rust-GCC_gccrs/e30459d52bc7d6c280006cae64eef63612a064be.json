{"sha": "e30459d52bc7d6c280006cae64eef63612a064be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTMwNDU5ZDUyYmM3ZDZjMjgwMDA2Y2FlNjRlZWY2MzYxMmEwNjRiZQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-04-10T13:20:50Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-04-10T13:20:50Z"}, "message": "re PR middle-end/52888 (Unable to inline function pointer call with inexact signature match)\n\n2012-04-10  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/52888\n\t* gimple-low.c (gimple_check_call_args): Properly account for\n\tcompatible aggregate types.\n\nFrom-SVN: r186276", "tree": {"sha": "14de5cda4459eb380afbab27f59e8c6459a681d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14de5cda4459eb380afbab27f59e8c6459a681d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e30459d52bc7d6c280006cae64eef63612a064be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e30459d52bc7d6c280006cae64eef63612a064be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e30459d52bc7d6c280006cae64eef63612a064be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e30459d52bc7d6c280006cae64eef63612a064be/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0878843fd50d1ac01305b963a5b4c52732694f01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0878843fd50d1ac01305b963a5b4c52732694f01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0878843fd50d1ac01305b963a5b4c52732694f01"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "4b92e94866ec6f1752f8c4ddfe21e28150592db9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e30459d52bc7d6c280006cae64eef63612a064be/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e30459d52bc7d6c280006cae64eef63612a064be/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e30459d52bc7d6c280006cae64eef63612a064be", "patch": "@@ -1,3 +1,9 @@\n+2012-04-10  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/52888\n+\t* gimple-low.c (gimple_check_call_args): Properly account for\n+\tcompatible aggregate types.\n+\n 2012-04-10  Richard Guenther  <rguenther@suse.de>\n \n \t* toplev.h (tree_rest_of_compilation): Remove."}, {"sha": "4a1ae0bfa9ad8d755eb7e48f0a4680e704ac81b5", "filename": "gcc/gimple-low.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e30459d52bc7d6c280006cae64eef63612a064be/gcc%2Fgimple-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e30459d52bc7d6c280006cae64eef63612a064be/gcc%2Fgimple-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-low.c?ref=e30459d52bc7d6c280006cae64eef63612a064be", "patch": "@@ -240,31 +240,35 @@ gimple_check_call_args (gimple stmt, tree fndecl)\n \t   i < nargs;\n \t   i++, p = DECL_CHAIN (p))\n \t{\n+\t  tree arg;\n \t  /* We cannot distinguish a varargs function from the case\n \t     of excess parameters, still deferring the inlining decision\n \t     to the callee is possible.  */\n \t  if (!p)\n \t    break;\n+\t  arg = gimple_call_arg (stmt, i);\n \t  if (p == error_mark_node\n-\t      || gimple_call_arg (stmt, i) == error_mark_node\n-\t      || !fold_convertible_p (DECL_ARG_TYPE (p),\n-\t\t\t\t      gimple_call_arg (stmt, i)))\n+\t      || arg == error_mark_node\n+\t      || (!types_compatible_p (DECL_ARG_TYPE (p), TREE_TYPE (arg))\n+\t\t  && !fold_convertible_p (DECL_ARG_TYPE (p), arg)))\n             return false;\n \t}\n     }\n   else if (parms)\n     {\n       for (i = 0, p = parms; i < nargs; i++, p = TREE_CHAIN (p))\n \t{\n+\t  tree arg;\n \t  /* If this is a varargs function defer inlining decision\n \t     to callee.  */\n \t  if (!p)\n \t    break;\n+\t  arg = gimple_call_arg (stmt, i);\n \t  if (TREE_VALUE (p) == error_mark_node\n-\t      || gimple_call_arg (stmt, i) == error_mark_node\n+\t      || arg == error_mark_node\n \t      || TREE_CODE (TREE_VALUE (p)) == VOID_TYPE\n-\t      || !fold_convertible_p (TREE_VALUE (p),\n-\t\t\t\t      gimple_call_arg (stmt, i)))\n+\t      || (!types_compatible_p (TREE_VALUE (p), TREE_TYPE (arg))\n+\t\t  && !fold_convertible_p (TREE_VALUE (p), arg)))\n             return false;\n \t}\n     }"}]}