{"sha": "9fbb3ae64a8d1c6103f4d4a91e60f1ee8312b3f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWZiYjNhZTY0YThkMWM2MTAzZjRkNGE5MWU2MGYxZWU4MzEyYjNmMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-16T13:19:37Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-16T13:19:37Z"}, "message": "[multiple changes]\n\n2009-04-16  Robert Dewar  <dewar@adacore.com>\n\n\t* g-pehage.adb: Minor reformatting\n\n\t* sem_ch12.adb: Minor reformatting\n\n\t* exp_dist.adb: Minor reformatting\n\n\t* bindgen.adb: Minor style fixes.\n\n2009-04-16  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_eval.adb (Eval_Indexed_Component): Extend constant-folding of\n\tindexed components to the case where the prefix is a static string\n\tliteral.\n\n2009-04-16  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_ch3.adb (Expand_N_Object_Declaration): In case of build-in-place\n\tobjects avoid any further expansion of the expression initializing the\n\tobject.\n\nFrom-SVN: r146189", "tree": {"sha": "1e53df1d761fd3399a414a384940819f1d926a31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e53df1d761fd3399a414a384940819f1d926a31"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9fbb3ae64a8d1c6103f4d4a91e60f1ee8312b3f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fbb3ae64a8d1c6103f4d4a91e60f1ee8312b3f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fbb3ae64a8d1c6103f4d4a91e60f1ee8312b3f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fbb3ae64a8d1c6103f4d4a91e60f1ee8312b3f3/comments", "author": null, "committer": null, "parents": [{"sha": "44e9f0067860f38c31869181263a395ab43981d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44e9f0067860f38c31869181263a395ab43981d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44e9f0067860f38c31869181263a395ab43981d7"}], "stats": {"total": 97, "additions": 75, "deletions": 22}, "files": [{"sha": "4280b92150b5c4651fc625b7e72781422f49ca26", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fbb3ae64a8d1c6103f4d4a91e60f1ee8312b3f3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fbb3ae64a8d1c6103f4d4a91e60f1ee8312b3f3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9fbb3ae64a8d1c6103f4d4a91e60f1ee8312b3f3", "patch": "@@ -1,3 +1,25 @@\n+2009-04-16  Robert Dewar  <dewar@adacore.com>\n+\n+\t* g-pehage.adb: Minor reformatting\n+\n+\t* sem_ch12.adb: Minor reformatting\n+\n+\t* exp_dist.adb: Minor reformatting\n+\n+\t* bindgen.adb: Minor style fixes.\n+\n+2009-04-16  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_eval.adb (Eval_Indexed_Component): Extend constant-folding of\n+\tindexed components to the case where the prefix is a static string\n+\tliteral.\n+\n+2009-04-16  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch3.adb (Expand_N_Object_Declaration): In case of build-in-place\n+\tobjects avoid any further expansion of the expression initializing the\n+\tobject.\n+\n 2009-04-16  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch12.adb (Preanalyze_Actuals): If the instance is a child unit"}, {"sha": "ce81c7ae0058ac8a6cb0f420e1238a60971bb112", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fbb3ae64a8d1c6103f4d4a91e60f1ee8312b3f3/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fbb3ae64a8d1c6103f4d4a91e60f1ee8312b3f3/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=9fbb3ae64a8d1c6103f4d4a91e60f1ee8312b3f3", "patch": "@@ -2273,7 +2273,7 @@ package body Bindgen is\n \n                --  If the standard library is not suppressed, these variables\n                --  are in the runtime data area for easy access from the\n-               --  runtime\n+               --  runtime.\n \n                if not Suppress_Standard_Library_On_Target then\n                   WBI (\"\");\n@@ -2510,7 +2510,7 @@ package body Bindgen is\n \n       Gen_Adainit_Ada;\n \n-      --  Generate the adafinal routine unless there is no finalization to do.\n+      --  Generate the adafinal routine unless there is no finalization to do\n \n       if not Cumulative_Restrictions.Set (No_Finalization) then\n          Gen_Adafinal_Ada;"}, {"sha": "570b1f8aa5dc166eaf0a44d436c48b048e003521", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fbb3ae64a8d1c6103f4d4a91e60f1ee8312b3f3/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fbb3ae64a8d1c6103f4d4a91e60f1ee8312b3f3/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=9fbb3ae64a8d1c6103f4d4a91e60f1ee8312b3f3", "patch": "@@ -4145,7 +4145,6 @@ package body Exp_Ch3 is\n       Expr_Q   : Node_Id;\n       Id_Ref   : Node_Id;\n       New_Ref  : Node_Id;\n-      BIP_Call : Boolean := False;\n \n       Init_After : Node_Id := N;\n       --  Node after which the init proc call is to be inserted. This is\n@@ -4409,21 +4408,25 @@ package body Exp_Ch3 is\n          if Is_Delayed_Aggregate (Expr_Q) then\n             Convert_Aggr_In_Object_Decl (N);\n \n-         else\n-            --  Ada 2005 (AI-318-02): If the initialization expression is a\n-            --  call to a build-in-place function, then access to the declared\n-            --  object must be passed to the function. Currently we limit such\n-            --  functions to those with constrained limited result subtypes,\n-            --  but eventually we plan to expand the allowed forms of functions\n-            --  that are treated as build-in-place.\n+         --  Ada 2005 (AI-318-02): If the initialization expression is a call\n+         --  to a build-in-place function, then access to the declared object\n+         --  must be passed to the function. Currently we limit such functions\n+         --  to those with constrained limited result subtypes, but eventually\n+         --  plan to expand the allowed forms of functions that are treated as\n+         --  build-in-place.\n \n-            if Ada_Version >= Ada_05\n-              and then Is_Build_In_Place_Function_Call (Expr_Q)\n-            then\n-               Make_Build_In_Place_Call_In_Object_Declaration (N, Expr_Q);\n-               BIP_Call := True;\n-            end if;\n+         elsif Ada_Version >= Ada_05\n+           and then Is_Build_In_Place_Function_Call (Expr_Q)\n+         then\n+            Make_Build_In_Place_Call_In_Object_Declaration (N, Expr_Q);\n \n+            --  The previous call expands the expression initializing the\n+            --  built-in-place object into further code that will be analyzed\n+            --  later. No further expansion needed here.\n+\n+            return;\n+\n+         else\n             --  In most cases, we must check that the initial value meets any\n             --  constraint imposed by the declared type. However, there is one\n             --  very important exception to this rule. If the entity has an\n@@ -4571,7 +4574,6 @@ package body Exp_Ch3 is\n \n             if Needs_Finalization (Typ)\n               and then not Is_Inherently_Limited_Type (Typ)\n-              and then not BIP_Call\n             then\n                Insert_Actions_After (Init_After,\n                  Make_Adjust_Call ("}, {"sha": "58a128e63066c6be435d7bcadd371133912ad661", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fbb3ae64a8d1c6103f4d4a91e60f1ee8312b3f3/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fbb3ae64a8d1c6103f4d4a91e60f1ee8312b3f3/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=9fbb3ae64a8d1c6103f4d4a91e60f1ee8312b3f3", "patch": "@@ -7667,9 +7667,9 @@ package body Exp_Dist is\n          Request := Make_Defining_Identifier (Loc, Name_R);\n \n          RPC_Receiver_Spec :=\n-           Build_RPC_Receiver_Specification (\n-             RPC_Receiver      => RPC_Receiver,\n-             Request_Parameter => Request);\n+           Build_RPC_Receiver_Specification\n+             (RPC_Receiver      => RPC_Receiver,\n+              Request_Parameter => Request);\n \n          Subp_Id    := Make_Defining_Identifier (Loc, Name_P);\n          Subp_Index := Make_Defining_Identifier (Loc, Name_I);"}, {"sha": "5abb04c213896a4c9056e2bf93be198cbf2cf0f7", "filename": "gcc/ada/g-pehage.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fbb3ae64a8d1c6103f4d4a91e60f1ee8312b3f3/gcc%2Fada%2Fg-pehage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fbb3ae64a8d1c6103f4d4a91e60f1ee8312b3f3/gcc%2Fada%2Fg-pehage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-pehage.adb?ref=9fbb3ae64a8d1c6103f4d4a91e60f1ee8312b3f3", "patch": "@@ -1149,6 +1149,7 @@ package body GNAT.Perfect_Hash_Generators is\n       for W in Reduced (0) .. WT.Last loop\n          Free_Word (WT.Table (W));\n       end loop;\n+\n       IT.Init;\n \n       --  Initialize of computation variables"}, {"sha": "8902d0d546baf12e0f1f60a69ba154b356732082", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fbb3ae64a8d1c6103f4d4a91e60f1ee8312b3f3/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fbb3ae64a8d1c6103f4d4a91e60f1ee8312b3f3/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=9fbb3ae64a8d1c6103f4d4a91e60f1ee8312b3f3", "patch": "@@ -10888,10 +10888,10 @@ package body Sem_Ch12 is\n       Act   : Node_Id;\n       Errs  : constant Int := Serious_Errors_Detected;\n \n-      Cur   : Entity_Id := Empty;\n+      Cur : Entity_Id := Empty;\n       --  Current homograph of the instance name\n \n-      Vis   : Boolean;\n+      Vis : Boolean;\n       --  Saved visibility status of the current homograph\n \n    begin\n@@ -10905,6 +10905,7 @@ package body Sem_Ch12 is\n           (Current_Entity (Defining_Identifier (Defining_Unit_Name (N))))\n       then\n          Cur := Current_Entity (Defining_Identifier (Defining_Unit_Name (N)));\n+\n          if Is_Compilation_Unit (Cur) then\n             Vis := Is_Immediately_Visible (Cur);\n             Set_Is_Immediately_Visible (Cur, False);\n@@ -10991,6 +10992,7 @@ package body Sem_Ch12 is\n                end if;\n \n                if Present (Cur) then\n+\n                   --  For the case of a child instance hiding an outer homonym,\n                   --  provide additional warning which might explain the error.\n "}, {"sha": "627ea5bf9bbf12922d9bfc166eb9dbe6b362d4b3", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fbb3ae64a8d1c6103f4d4a91e60f1ee8312b3f3/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fbb3ae64a8d1c6103f4d4a91e60f1ee8312b3f3/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=9fbb3ae64a8d1c6103f4d4a91e60f1ee8312b3f3", "patch": "@@ -1779,6 +1779,32 @@ package body Sem_Eval is\n                         Set_Sloc (N, Loc);\n                      end if;\n                   end if;\n+\n+               --  We can also constant-fold if the prefix is a string literal.\n+               --  This will be useful in an instantiation or an inlining.\n+\n+               elsif Compile_Time_Known_Value (Sub)\n+                 and then Nkind (Arr) = N_String_Literal\n+                 and then Compile_Time_Known_Value (Lbd)\n+                 and then Expr_Value (Lbd) = 1\n+                 and then Expr_Value (Sub) <=\n+                   String_Literal_Length (Etype (Arr))\n+               then\n+                  declare\n+                     C : constant Char_Code :=\n+                           Get_String_Char (Strval (Arr),\n+                             UI_To_Int (Expr_Value (Sub)));\n+                  begin\n+                     Set_Character_Literal_Name (C);\n+\n+                     Elm :=\n+                       Make_Character_Literal (Loc,\n+                         Chars              => Name_Find,\n+                         Char_Literal_Value => UI_From_CC (C));\n+                     Set_Etype (Elm, Component_Type (Atyp));\n+                     Rewrite (N, Duplicate_Subexpr_No_Checks (Elm));\n+                     Set_Is_Static_Expression (N, False);\n+                  end;\n                end if;\n             end if;\n          end;"}]}