{"sha": "7e05dad86b2e9eb37c40c9fa2d8de7513e3474c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2UwNWRhZDg2YjJlOWViMzdjNDBjOWZhMmQ4ZGU3NTEzZTM0NzRjMg==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2016-02-13T00:50:25Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2016-02-13T00:50:25Z"}, "message": "re PR target/67636 ([SH] gcc.target/sh/pr54236-1.c failures)\n\ngcc/\n\tPR target/67636\n\tPR target/64345\n\t* config/sh/sh.md (*zero_extract_3): New insn_and_split pattern.\n\ngcc/testsuite/\n\tPR target/67636\n\tPR target/64345\n\t* gcc.target/sh/pr54236-1.c: Adjust optimization level.\n\nFrom-SVN: r233397", "tree": {"sha": "2294a92ac08d1206d74c43b39365ec35a39d013b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2294a92ac08d1206d74c43b39365ec35a39d013b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e05dad86b2e9eb37c40c9fa2d8de7513e3474c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e05dad86b2e9eb37c40c9fa2d8de7513e3474c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e05dad86b2e9eb37c40c9fa2d8de7513e3474c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e05dad86b2e9eb37c40c9fa2d8de7513e3474c2/comments", "author": null, "committer": null, "parents": [{"sha": "cd544f0db9789bfa5a11d5e04c5376ee6946154b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd544f0db9789bfa5a11d5e04c5376ee6946154b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd544f0db9789bfa5a11d5e04c5376ee6946154b"}], "stats": {"total": 44, "additions": 40, "deletions": 4}, "files": [{"sha": "de5a749dc76a0e5d2e67b53f4d784efe057ec029", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e05dad86b2e9eb37c40c9fa2d8de7513e3474c2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e05dad86b2e9eb37c40c9fa2d8de7513e3474c2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7e05dad86b2e9eb37c40c9fa2d8de7513e3474c2", "patch": "@@ -1,8 +1,13 @@\n+2016-02-13  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/67636\n+\tPR target/64345\n+\t* config/sh/sh.md (*zero_extract_3): New insn_and_split pattern.\n+\n 2016-02-12  Walter Lee  <walt@tilera.com>\n \n-        * config/tilepro/t-tilepro: Replace CC_FOR_BUILD with\n-          CXX_FOR_BUILD.\n-        * config/tilegx/t-tilegx: Likewise.\n+\t* config/tilepro/t-tilepro: Replace CC_FOR_BUILD with CXX_FOR_BUILD.\n+\t* config/tilegx/t-tilegx: Likewise.\n \n 2016-02-12  David Malcolm  <dmalcolm@redhat.com>\n "}, {"sha": "b5b0f9573b7165303fb17a9c58e956922ceadffa", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e05dad86b2e9eb37c40c9fa2d8de7513e3474c2/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e05dad86b2e9eb37c40c9fa2d8de7513e3474c2/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=7e05dad86b2e9eb37c40c9fa2d8de7513e3474c2", "patch": "@@ -14616,6 +14616,31 @@ label:\n   [(set (reg:SI T_REG)\n \t(zero_extract:SI (match_dup 0) (const_int 1) (match_dup 1)))])\n \n+(define_insn_and_split \"*zero_extract_3\"\n+  [(set (match_operand:SI 0 \"arith_reg_dest\")\n+  \t(and:SI (lshiftrt:SI (match_operand:SI 1 \"arith_reg_operand\")\n+  \t\t\t     (match_operand 2 \"const_int_operand\"))\n+  \t\t(match_operand 3 \"const_int_operand\")))\n+   (clobber (reg:SI T_REG))]\n+  \"TARGET_SH1 && can_create_pseudo_p ()\n+   && exact_log2 (INTVAL (operands[3])) >= 0\"\n+  \"#\"\n+  \"&& 1\"\n+  [(const_int 0)]\n+{\n+  int rshift = INTVAL (operands[2]);\n+  int lshift = exact_log2 (INTVAL (operands[3]));\n+\n+  rtx tmp = gen_reg_rtx (SImode);\n+  emit_insn (gen_rtx_PARALLEL (VOIDmode,\n+    gen_rtvec (2,\n+      gen_rtx_SET (tmp,\n+\t\t   gen_rtx_ZERO_EXTRACT (SImode, operands[1], const1_rtx,\n+\t\t\t\t\t GEN_INT (rshift + lshift))),\n+      gen_rtx_CLOBBER (VOIDmode, get_t_reg_rtx ()))));\n+  emit_insn (gen_ashlsi3 (operands[0], tmp, GEN_INT (lshift)));\n+})\n+\n ;; -------------------------------------------------------------------------\n ;; SH2A instructions for bitwise operations.\n ;; FIXME: Convert multiple instruction insns to insn_and_split."}, {"sha": "e2b7a57090d0a208cfd2f7b7f81c9c5526b812c9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e05dad86b2e9eb37c40c9fa2d8de7513e3474c2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e05dad86b2e9eb37c40c9fa2d8de7513e3474c2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7e05dad86b2e9eb37c40c9fa2d8de7513e3474c2", "patch": "@@ -1,3 +1,9 @@\n+2016-02-13  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/67636\n+\tPR target/64345\n+\t* gcc.target/sh/pr54236-1.c: Adjust optimization level.\n+\n 2016-02-12  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/69668"}, {"sha": "31008ca74be33d1423de1c243a1b16c0893bf3ee", "filename": "gcc/testsuite/gcc.target/sh/pr54236-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e05dad86b2e9eb37c40c9fa2d8de7513e3474c2/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr54236-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e05dad86b2e9eb37c40c9fa2d8de7513e3474c2/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr54236-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Fpr54236-1.c?ref=7e05dad86b2e9eb37c40c9fa2d8de7513e3474c2", "patch": "@@ -2,7 +2,7 @@\n    special cases.  If everything works as expected we won't see any\n    movt instructions in these cases.  */\n /* { dg-do compile }  */\n-/* { dg-options \"-O1\" } */\n+/* { dg-options \"-O2\" } */\n /* { dg-skip-if \"\" { \"sh*-*-*\" } { \"-m5*\"} { \"\" } } */\n /* { dg-final { scan-assembler-times \"addc\" 6 } } */\n /* { dg-final { scan-assembler-times \"subc\" 4 } } */"}]}