{"sha": "b47900aa0b511c57af99f2a7c88063e108b46dbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ3OTAwYWEwYjUxMWM1N2FmOTlmMmE3Yzg4MDYzZTEwOGI0NmRiYw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2002-12-20T20:40:57Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-12-20T20:40:57Z"}, "message": "h8300.c (dosize): Remove warnings.\n\n\t* config/h8300/h8300.c (dosize): Remove warnings.\n\t(print_operand): Likewise.\n\nFrom-SVN: r60374", "tree": {"sha": "83f8133b6228547ef015add3e1f4b7b5346a972f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83f8133b6228547ef015add3e1f4b7b5346a972f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b47900aa0b511c57af99f2a7c88063e108b46dbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b47900aa0b511c57af99f2a7c88063e108b46dbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b47900aa0b511c57af99f2a7c88063e108b46dbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b47900aa0b511c57af99f2a7c88063e108b46dbc/comments", "author": null, "committer": null, "parents": [{"sha": "3094247fd2404373d9bd706ede23ecef45d60b84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3094247fd2404373d9bd706ede23ecef45d60b84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3094247fd2404373d9bd706ede23ecef45d60b84"}], "stats": {"total": 31, "additions": 18, "deletions": 13}, "files": [{"sha": "1fd0beb6492cec6bec108369f0ba9a3d41269491", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b47900aa0b511c57af99f2a7c88063e108b46dbc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b47900aa0b511c57af99f2a7c88063e108b46dbc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b47900aa0b511c57af99f2a7c88063e108b46dbc", "patch": "@@ -1,3 +1,8 @@\n+2002-12-20  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.c (dosize): Remove warnings.\n+\t(print_operand): Likewise.\n+\n 2002-12-20  Richard Henderson  <rth@redhat.com>\n \n \t* config/alpha/alpha.c (decl_has_samegp): New."}, {"sha": "2d372dd8526998b40c3dd60f35175a5b6c127290", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b47900aa0b511c57af99f2a7c88063e108b46dbc/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b47900aa0b511c57af99f2a7c88063e108b46dbc/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=b47900aa0b511c57af99f2a7c88063e108b46dbc", "patch": "@@ -413,7 +413,7 @@ dosize (file, sign, size)\n \t  && sign < 0))\n     {\n       const char *op = (sign > 0) ? \"add\" : \"sub\";\n-      unsigned HOST_WIDE_INT amount;\n+      unsigned int amount;\n \n       /* Try different amounts in descending order.  */\n       for (amount = (TARGET_H8300H || TARGET_H8300S) ? 4 : 2;\n@@ -1303,7 +1303,7 @@ print_operand (file, x, code)\n \t  fprintf (file, \"%sl\", names_big[REGNO (x)]);\n \t  break;\n \tcase CONST_INT:\n-\t  fprintf (file, \"#%d\", (-INTVAL (x)) & 0xff);\n+\t  fprintf (file, \"#%ld\", (-INTVAL (x)) & 0xff);\n \t  break;\n \tdefault:\n \t  abort ();\n@@ -1316,7 +1316,7 @@ print_operand (file, x, code)\n \t  fprintf (file, \"%sh\", names_big[REGNO (x)]);\n \t  break;\n \tcase CONST_INT:\n-\t  fprintf (file, \"#%d\", ((-INTVAL (x)) & 0xff00) >> 8);\n+\t  fprintf (file, \"#%ld\", ((-INTVAL (x)) & 0xff00) >> 8);\n \t  break;\n \tdefault:\n \t  abort ();\n@@ -1325,7 +1325,7 @@ print_operand (file, x, code)\n     case 'G':\n       if (GET_CODE (x) != CONST_INT)\n \tabort ();\n-      fprintf (file, \"#%d\", 0xff & (-INTVAL (x)));\n+      fprintf (file, \"#%ld\", 0xff & (-INTVAL (x)));\n       break;\n     case 'S':\n       if (GET_CODE (x) == REG)\n@@ -1400,7 +1400,7 @@ print_operand (file, x, code)\n \t  print_operand (file, x, 0);\n \t  break;\n \tcase CONST_INT:\n-\t  fprintf (file, \"#%d\", ((INTVAL (x) >> 16) & 0xffff));\n+\t  fprintf (file, \"#%ld\", ((INTVAL (x) >> 16) & 0xffff));\n \t  break;\n \tcase CONST_DOUBLE:\n \t  {\n@@ -1430,7 +1430,7 @@ print_operand (file, x, code)\n \t  print_operand (file, x, 0);\n \t  break;\n \tcase CONST_INT:\n-\t  fprintf (file, \"#%d\", INTVAL (x) & 0xffff);\n+\t  fprintf (file, \"#%ld\", INTVAL (x) & 0xffff);\n \t  break;\n \tcase CONST_DOUBLE:\n \t  {\n@@ -1453,44 +1453,44 @@ print_operand (file, x, code)\n       break;\n     case 's':\n       if (GET_CODE (x) == CONST_INT)\n-\tfprintf (file, \"#%d\", (INTVAL (x)) & 0xff);\n+\tfprintf (file, \"#%ld\", (INTVAL (x)) & 0xff);\n       else\n \tfprintf (file, \"%s\", byte_reg (x, 0));\n       break;\n     case 't':\n       if (GET_CODE (x) == CONST_INT)\n-\tfprintf (file, \"#%d\", (INTVAL (x) >> 8) & 0xff);\n+\tfprintf (file, \"#%ld\", (INTVAL (x) >> 8) & 0xff);\n       else\n \tfprintf (file, \"%s\", byte_reg (x, 1));\n       break;\n     case 'u':\n       if (GET_CODE (x) != CONST_INT)\n \tabort ();\n-      fprintf (file, \"%d\", INTVAL (x));\n+      fprintf (file, \"%ld\", INTVAL (x));\n       break;\n     case 'w':\n       if (GET_CODE (x) == CONST_INT)\n-\tfprintf (file, \"#%d\", INTVAL (x) & 0xff);\n+\tfprintf (file, \"#%ld\", INTVAL (x) & 0xff);\n       else\n \tfprintf (file, \"%s\",\n \t\t byte_reg (x, TARGET_H8300 ? 2 : 0));\n       break;\n     case 'x':\n       if (GET_CODE (x) == CONST_INT)\n-\tfprintf (file, \"#%d\", (INTVAL (x) >> 8) & 0xff);\n+\tfprintf (file, \"#%ld\", (INTVAL (x) >> 8) & 0xff);\n       else\n \tfprintf (file, \"%s\",\n \t\t byte_reg (x, TARGET_H8300 ? 3 : 1));\n       break;\n     case 'y':\n       if (GET_CODE (x) == CONST_INT)\n-\tfprintf (file, \"#%d\", (INTVAL (x) >> 16) & 0xff);\n+\tfprintf (file, \"#%ld\", (INTVAL (x) >> 16) & 0xff);\n       else\n \tfprintf (file, \"%s\", byte_reg (x, 0));\n       break;\n     case 'z':\n       if (GET_CODE (x) == CONST_INT)\n-\tfprintf (file, \"#%d\", (INTVAL (x) >> 24) & 0xff);\n+\tfprintf (file, \"#%ld\", (INTVAL (x) >> 24) & 0xff);\n       else\n \tfprintf (file, \"%s\", byte_reg (x, 1));\n       break;"}]}