{"sha": "8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGViOGRjYWM2ZWQyNjVkOWRhMmQxOTcxZmY1YTQ3ZTA0ZmJmOWZiNQ==", "commit": {"author": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2020-10-08T10:29:00Z"}, "committer": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2020-10-27T16:34:56Z"}, "message": "aarch64: Add vcopy(q)__lane(q)_bf16 intrinsics\n\ngcc/ChangeLog\n\n2020-10-20  Andrea Corallo  <andrea.corallo@arm.com>\n\n\t* config/aarch64/arm_neon.h (vcopy_lane_bf16, vcopyq_lane_bf16)\n\t(vcopyq_laneq_bf16, vcopy_laneq_bf16): New intrinsics.\n\ngcc/testsuite/ChangeLog\n\n2020-10-20  Andrea Corallo  <andrea.corallo@arm.com>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/bf16_vect_copy_lane_1.c:\n\tNew test.\n\t* gcc.target/aarch64/advsimd-intrinsics/vcopy_lane_bf16_indices_1.c:\n\tLikewise.\n\t* gcc.target/aarch64/advsimd-intrinsics/vcopy_lane_bf16_indices_2.c:\n\tLikewise.\n\t* gcc.target/aarch64/advsimd-intrinsics/vcopy_laneq_bf16_indices_1.c:\n\tLikewise.\n\t* gcc.target/aarch64/advsimd-intrinsics/vcopy_laneq_bf16_indices_2.c:\n\tLikewise.\n\t* gcc.target/aarch64/advsimd-intrinsics/vcopyq_lane_bf16_indices_1.c:\n\tLikewise.\n\t* gcc.target/aarch64/advsimd-intrinsics/vcopyq_lane_bf16_indices_2.c:\n\tLikewise.\n\t* gcc.target/aarch64/advsimd-intrinsics/vcopyq_laneq_bf16_indices_1.c:\n\tLikewise.\n\t* gcc.target/aarch64/advsimd-intrinsics/vcopyq_laneq_bf16_indices_2.c:\n\tLikewise.", "tree": {"sha": "eaf891ae2fcba7e6cdce36b10856645d445edf5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eaf891ae2fcba7e6cdce36b10856645d445edf5b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5/comments", "author": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4fd8638be8a6f105bfaf1c0e3bcfad36aca03be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4fd8638be8a6f105bfaf1c0e3bcfad36aca03be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4fd8638be8a6f105bfaf1c0e3bcfad36aca03be"}], "stats": {"total": 206, "additions": 206, "deletions": 0}, "files": [{"sha": "55c2a6590aa5e8abc55f06002af9a726ecf72ddc", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5", "patch": "@@ -35716,6 +35716,42 @@ vcvtq_high_bf16_f32 (bfloat16x8_t __inactive, float32x4_t __a)\n   return __builtin_aarch64_bfcvtn2v8bf (__inactive, __a);\n }\n \n+__extension__ extern __inline bfloat16x4_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vcopy_lane_bf16 (bfloat16x4_t __a, const int __lane1,\n+\t\t bfloat16x4_t __b, const int __lane2)\n+{\n+  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),\n+\t\t\t\t  __a, __lane1);\n+}\n+\n+__extension__ extern __inline bfloat16x8_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vcopyq_lane_bf16 (bfloat16x8_t __a, const int __lane1,\n+\t\t  bfloat16x4_t __b, const int __lane2)\n+{\n+  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),\n+\t\t\t\t  __a, __lane1);\n+}\n+\n+__extension__ extern __inline bfloat16x4_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vcopy_laneq_bf16 (bfloat16x4_t __a, const int __lane1,\n+\t\t  bfloat16x8_t __b, const int __lane2)\n+{\n+  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),\n+\t\t\t\t  __a, __lane1);\n+}\n+\n+__extension__ extern __inline bfloat16x8_t\n+__attribute__ ((__always_inline__, __gnu_inline__, __artificial__))\n+vcopyq_laneq_bf16 (bfloat16x8_t __a, const int __lane1,\n+\t\t   bfloat16x8_t __b, const int __lane2)\n+{\n+  return __aarch64_vset_lane_any (__aarch64_vget_lane_any (__b, __lane2),\n+\t\t\t\t  __a, __lane1);\n+}\n+\n #pragma GCC pop_options\n \n /* AdvSIMD 8-bit Integer Matrix Multiply (I8MM) intrinsics.  */"}, {"sha": "d5aa215c21a3f7086ec22a39a028b352e3cd5aca", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/bf16_vect_copy_lane_1.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fbf16_vect_copy_lane_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fbf16_vect_copy_lane_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fbf16_vect_copy_lane_1.c?ref=8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5", "patch": "@@ -0,0 +1,32 @@\n+/* { dg-do assemble { target { aarch64*-*-* } } } */\n+/* { dg-require-effective-target arm_v8_2a_bf16_neon_ok } */\n+/* { dg-additional-options \"-march=armv8.2-a+bf16 -O3 --save-temps -std=gnu90\" } */\n+\n+#include \"arm_neon.h\"\n+\n+bfloat16x4_t __attribute__((noinline,noclone))\n+test_vcopy_lane_bf16 (bfloat16x4_t a, bfloat16x4_t b)\n+{\n+  return vcopy_lane_bf16 (a, 1, b, 2);\n+}\n+\n+bfloat16x8_t __attribute__((noinline,noclone))\n+test_vcopyq_lane_bf16 (bfloat16x8_t a, bfloat16x4_t b)\n+{\n+  return vcopyq_lane_bf16 (a, 1, b, 2);\n+}\n+\n+bfloat16x4_t __attribute__((noinline,noclone))\n+test_vcopy_laneq_bf16 (bfloat16x4_t a, bfloat16x8_t b)\n+{\n+  return vcopy_laneq_bf16 (a, 1, b, 2);\n+}\n+\n+bfloat16x8_t __attribute__((noinline,noclone))\n+test_vcopyq_laneq_bf16 (bfloat16x8_t a, bfloat16x8_t b)\n+{\n+  return vcopyq_laneq_bf16 (a, 1, b, 2);\n+}\n+\n+/* { dg-final { scan-assembler-times \"ins\\\\tv0.h\\\\\\[1\\\\\\], v1.h\\\\\\[2\\\\\\]\" 2 } } */\n+/* { dg-final { scan-assembler-times \"ins\\\\tv0.h\\\\\\[1\\\\\\], v1.h\\\\\\[0\\\\\\]\" 2 } } */"}, {"sha": "70579800eba0d4ba6d950fc8ff4d3a2e7884c907", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vcopy_lane_bf16_indices_1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcopy_lane_bf16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcopy_lane_bf16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcopy_lane_bf16_indices_1.c?ref=8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile { target { aarch64*-*-* } } } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n+/* { dg-require-effective-target arm_v8_2a_bf16_neon_ok } */\n+/* { dg-add-options arm_v8_2a_bf16_neon }  */\n+\n+#include <arm_neon.h>\n+\n+bfloat16x4_t\n+test_vcopy_lane_bf16 (bfloat16x4_t a, bfloat16x4_t b)\n+{\n+  bfloat16x4_t res;\n+  res = vcopy_lane_bf16 (a, 0, b, 4);\n+  res = vcopy_lane_bf16 (a, 0, b, -1);\n+  return res;\n+}\n+\n+/* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n+/* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */"}, {"sha": "a8ef9303689d2928ba7a02909d67129ca72708e4", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vcopy_lane_bf16_indices_2.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcopy_lane_bf16_indices_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcopy_lane_bf16_indices_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcopy_lane_bf16_indices_2.c?ref=8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile { target { aarch64*-*-* } } } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n+/* { dg-require-effective-target arm_v8_2a_bf16_neon_ok } */\n+/* { dg-add-options arm_v8_2a_bf16_neon }  */\n+\n+#include <arm_neon.h>\n+\n+bfloat16x4_t\n+test_vcopy_lane_bf16 (bfloat16x4_t a, bfloat16x4_t b)\n+{\n+  bfloat16x4_t res;\n+  res = vcopy_lane_bf16 (a, -1, b, 2);\n+  res = vcopy_lane_bf16 (a, 4, b, 2);\n+  return res;\n+}\n+\n+/* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n+/* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */"}, {"sha": "c156204bcfcc2676a662cbfd6dc91df57aaf07c0", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vcopy_laneq_bf16_indices_1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcopy_laneq_bf16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcopy_laneq_bf16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcopy_laneq_bf16_indices_1.c?ref=8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile { target { aarch64*-*-* } } } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n+/* { dg-require-effective-target arm_v8_2a_bf16_neon_ok } */\n+/* { dg-add-options arm_v8_2a_bf16_neon }  */\n+\n+#include <arm_neon.h>\n+\n+bfloat16x4_t\n+test_vcopy_laneq_bf16 (bfloat16x4_t a, bfloat16x8_t b)\n+{\n+  bfloat16x4_t res;\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n+  res = vcopy_laneq_bf16 (a, -1, b, 2);\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n+  res = vcopy_laneq_bf16 (a, 4, b, 2);\n+  return res;\n+}"}, {"sha": "036690b0be662a7bb642167d268217604de6f1ca", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vcopy_laneq_bf16_indices_2.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcopy_laneq_bf16_indices_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcopy_laneq_bf16_indices_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcopy_laneq_bf16_indices_2.c?ref=8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile { target { aarch64*-*-* } } } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n+/* { dg-require-effective-target arm_v8_2a_bf16_neon_ok } */\n+/* { dg-add-options arm_v8_2a_bf16_neon }  */\n+\n+#include <arm_neon.h>\n+\n+bfloat16x4_t\n+test_vcopy_laneq_bf16 (bfloat16x4_t a, bfloat16x8_t b)\n+{\n+  bfloat16x4_t res;\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n+  res = vcopy_laneq_bf16 (a, 1, b, -1);\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n+  res = vcopy_laneq_bf16 (a, 1, b, 8);\n+  return res;\n+}"}, {"sha": "15fce1b204513363f807eb500377ec0daec00315", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vcopyq_lane_bf16_indices_1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcopyq_lane_bf16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcopyq_lane_bf16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcopyq_lane_bf16_indices_1.c?ref=8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile { target { aarch64*-*-* } } } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n+/* { dg-require-effective-target arm_v8_2a_bf16_neon_ok } */\n+/* { dg-add-options arm_v8_2a_bf16_neon }  */\n+\n+#include <arm_neon.h>\n+\n+bfloat16x8_t\n+test_vcopyq_lane_bf16 (bfloat16x8_t a, bfloat16x4_t b)\n+{\n+  bfloat16x8_t res;\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n+  res = vcopyq_lane_bf16 (a, -1, b, 2);\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n+  res = vcopyq_lane_bf16 (a, 8, b, 2);\n+  return res;\n+}"}, {"sha": "6e8004a128722f1b0e6fc292292afbdd8a727533", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vcopyq_lane_bf16_indices_2.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcopyq_lane_bf16_indices_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcopyq_lane_bf16_indices_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcopyq_lane_bf16_indices_2.c?ref=8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile { target { aarch64*-*-* } } } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n+/* { dg-require-effective-target arm_v8_2a_bf16_neon_ok } */\n+/* { dg-add-options arm_v8_2a_bf16_neon }  */\n+\n+#include <arm_neon.h>\n+\n+bfloat16x8_t\n+test_vcopyq_lane_bf16 (bfloat16x8_t a, bfloat16x4_t b)\n+{\n+  bfloat16x8_t res;\n+  /* { dg-error \"lane -1 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n+  res = vcopyq_lane_bf16 (a, 2, b, -1);\n+  /* { dg-error \"lane 4 out of range 0 - 3\" \"\" { target *-*-* } 0 } */\n+  res = vcopyq_lane_bf16 (a, 2, b, 4);\n+  return res;\n+}"}, {"sha": "2a26b42ad9017cee1930bb19bd09f4497cb57576", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vcopyq_laneq_bf16_indices_1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcopyq_laneq_bf16_indices_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcopyq_laneq_bf16_indices_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcopyq_laneq_bf16_indices_1.c?ref=8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile { target { aarch64*-*-* } } } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n+/* { dg-require-effective-target arm_v8_2a_bf16_neon_ok } */\n+/* { dg-add-options arm_v8_2a_bf16_neon }  */\n+\n+#include <arm_neon.h>\n+\n+bfloat16x8_t\n+test_vcopyq_laneq_bf16 (bfloat16x8_t a, bfloat16x8_t b)\n+{\n+  bfloat16x8_t res;\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n+  res = vcopyq_laneq_bf16 (a, -1, b, 2);\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n+  res = vcopyq_laneq_bf16 (a, 8, b, 2);\n+  return res;\n+}"}, {"sha": "421cb2a452e52b20d072d7a1cb7dca8214ad7851", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vcopyq_laneq_bf16_indices_2.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcopyq_laneq_bf16_indices_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcopyq_laneq_bf16_indices_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvcopyq_laneq_bf16_indices_2.c?ref=8eb8dcac6ed265d9da2d1971ff5a47e04fbf9fb5", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile { target { aarch64*-*-* } } } */\n+/* { dg-skip-if \"\" { *-*-* } { \"-fno-fat-lto-objects\" } } */\n+/* { dg-require-effective-target arm_v8_2a_bf16_neon_ok } */\n+/* { dg-add-options arm_v8_2a_bf16_neon }  */\n+\n+#include <arm_neon.h>\n+\n+bfloat16x8_t\n+test_vcopyq_laneq_bf16 (bfloat16x8_t a, bfloat16x8_t b)\n+{\n+  bfloat16x8_t res;\n+  /* { dg-error \"lane -1 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n+  res = vcopyq_laneq_bf16 (a, 2, b, -1);\n+  /* { dg-error \"lane 8 out of range 0 - 7\" \"\" { target *-*-* } 0 } */\n+  res = vcopyq_laneq_bf16 (a, 2, b, 8);\n+  return res;\n+}"}]}