{"sha": "8b8bba2dd98b692b749bf023abf02c245ecd2515", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI4YmJhMmRkOThiNjkyYjc0OWJmMDIzYWJmMDJjMjQ1ZWNkMjUxNQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-11-03T13:30:48Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-11-03T13:30:48Z"}, "message": "re PR tree-optimization/46190 (ICE in vect_enhance_data_refs_alignment when building fma3d)\n\n2010-11-03  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/46190\n\t* tree-vect-data-refs.c (vect_enhance_data_refs_alignment):\n\tProperly compute peel iterations.\n\n\t* gfortran.dg/pr46190.f90: New testcase.\n\nFrom-SVN: r166244", "tree": {"sha": "d5ae6e84c8ada69121a074407f2d9138cbf36ace", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5ae6e84c8ada69121a074407f2d9138cbf36ace"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b8bba2dd98b692b749bf023abf02c245ecd2515", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b8bba2dd98b692b749bf023abf02c245ecd2515", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b8bba2dd98b692b749bf023abf02c245ecd2515", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b8bba2dd98b692b749bf023abf02c245ecd2515/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "623238466cd55becfd63ba1c739180febca29c5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/623238466cd55becfd63ba1c739180febca29c5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/623238466cd55becfd63ba1c739180febca29c5e"}], "stats": {"total": 81, "additions": 79, "deletions": 2}, "files": [{"sha": "30b39a62623fb0491fbb25baab509f8622ed6eab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b8bba2dd98b692b749bf023abf02c245ecd2515/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b8bba2dd98b692b749bf023abf02c245ecd2515/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8b8bba2dd98b692b749bf023abf02c245ecd2515", "patch": "@@ -1,3 +1,9 @@\n+2010-11-03  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/46190\n+\t* tree-vect-data-refs.c (vect_enhance_data_refs_alignment):\n+\tProperly compute peel iterations.\n+\n 2010-11-03  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/46286"}, {"sha": "f0a88888fd4fd241659c9d9f7d36dc00f1fd3700", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b8bba2dd98b692b749bf023abf02c245ecd2515/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b8bba2dd98b692b749bf023abf02c245ecd2515/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8b8bba2dd98b692b749bf023abf02c245ecd2515", "patch": "@@ -1,3 +1,8 @@\n+2010-11-03  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/46190\n+\t* gfortran.dg/pr46190.f90: New testcase.\n+\n 2010-11-03  Richard Guenther  <rguenther@suse.de>\n \n \tPR testsuite/46274"}, {"sha": "15fad041608d2234b098a054e403dd418b3ecb89", "filename": "gcc/testsuite/gfortran.dg/pr46190.f90", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b8bba2dd98b692b749bf023abf02c245ecd2515/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr46190.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b8bba2dd98b692b749bf023abf02c245ecd2515/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr46190.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr46190.f90?ref=8b8bba2dd98b692b749bf023abf02c245ecd2515", "patch": "@@ -0,0 +1,64 @@\n+! { dg-do compile }\n+! { dg-options \"-O2 -ftree-vectorize\" }\n+\n+      TYPE :: spot_weld_type                                            \n+        CHARACTER(8)     PLACE      ! Keyword \"NODE\" or \"POSITION\"         \n+      END TYPE                                                          \n+      TYPE (spot_weld_type),  DIMENSION(:), ALLOCATABLE :: SPOT_WELD    \n+      INTEGER, PARAMETER :: LSRT = 12 ! Length of sorted-element-distance array\n+      INTEGER                    &\n+     &          IETYP(LSRT)        ! -/- Sort array for closest el's, 0/1=tri/qu\n+      REAL(KIND(0D0))                                                          &\n+     &          DSQRD(LSRT)        ! -/- Sort array for closest el's, d**2\n+      LOGICAL                                                                  &\n+     &          COINCIDENT,                                                    &\n+     &          INSIDE_ELEMENT\n+      IF (SPOT_WELD(NSW)%PLACE .EQ. 'POSITION') THEN\n+        DO n = 1,LSRT\n+        ENDDO\n+        DO i = 1,NUMP3\n+          DO WHILE (Distance_Squared .GT. DSQRD(n) .AND. n .LE. LSRT)\n+          ENDDO\n+          IF (n .LT. LSRT) THEN\n+            DO k = LSRT-1,n,-1\n+              DSQRD(k+1) = DSQRD(k)\n+              IETYP(k+1) = IETYP(k)\n+            ENDDO\n+          ENDIF\n+          DO n = 1,LSRT\n+            IF (IETYP(n) .EQ. 0) THEN\n+              INSIDE_ELEMENT =                                                 &\n+     &          Xi1EL(n) .GE. 0.0 .AND. Xi2EL(n) .GE. 0.0\n+              IF (DSQRD(n) .LT. Dmin) THEN\n+              ENDIF\n+            ENDIF\n+          ENDDO\n+        ENDDO\n+        IF (Icount .GT. 0) THEN\n+          DO i = 1,Icount\n+            CALL USER_MESSAGE                                                  &\n+     &          (                                                              &\n+     &          )\n+          ENDDO\n+          CALL USER_MESSAGE                                                    &\n+     &          (                                                              &\n+     &          )\n+        ENDIF\n+        IF                                                                     &\n+     &          (                                                              &\n+     &          .NOT.COINCIDENT                                                &\n+     &          )                                                              &\n+     &    THEN\n+          IF (NP1 .GT. 0) THEN\n+            IF (NP1 .GT. 0) THEN\n+            ENDIF\n+          ENDIF\n+        ENDIF\n+        IF (.NOT.COINCIDENT) THEN\n+          DO i = 1,3\n+            IF (NP(i) .GT. 0) THEN\n+            ENDIF\n+          ENDDO\n+        ENDIF\n+      ENDIF\n+      END"}, {"sha": "ce872cf26187b2d7d829d2f367659ee970553c9d", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b8bba2dd98b692b749bf023abf02c245ecd2515/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b8bba2dd98b692b749bf023abf02c245ecd2515/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=8b8bba2dd98b692b749bf023abf02c245ecd2515", "patch": "@@ -1518,7 +1518,8 @@ vect_enhance_data_refs_alignment (loop_vec_info loop_vinfo)\n               mis = DR_MISALIGNMENT (dr) / GET_MODE_SIZE (TYPE_MODE (\n                                                 TREE_TYPE (DR_REF (dr))));\n               npeel_tmp = (negative\n-\t\t\t   ? (mis - nelements) : (nelements - mis)) & (vf - 1);\n+\t\t\t   ? (mis - nelements) : (nelements - mis))\n+\t\t  & (nelements - 1);\n \n               /* For multiple types, it is possible that the bigger type access\n                  will have more than one peeling option.  E.g., a loop with two\n@@ -1722,7 +1723,8 @@ vect_enhance_data_refs_alignment (loop_vec_info loop_vinfo)\n                  count.  */\n               mis = DR_MISALIGNMENT (dr0);\n               mis /= GET_MODE_SIZE (TYPE_MODE (TREE_TYPE (DR_REF (dr0))));\n-              npeel = (negative ? mis - nelements : nelements - mis) & (vf - 1);\n+              npeel = ((negative ? mis - nelements : nelements - mis)\n+\t\t       & (nelements - 1));\n             }\n \n \t  /* For interleaved data access every iteration accesses all the"}]}