{"sha": "1d0e51ba333e93a4166ebf5a9eda333b5ca647f3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQwZTUxYmEzMzNlOTNhNDE2NmViZjVhOWVkYTMzM2I1Y2E2NDdmMw==", "commit": {"author": {"name": "Jim Meyering", "email": "meyering@ascend.com", "date": "1999-08-25T22:01:36Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "1999-08-25T22:01:36Z"}, "message": "cpplib.c (detect_if_not_defined): New function.\n\n1999-08-25 13:51 -0700  Jim Meyering  <meyering@ascend.com>\n\n\t* cpplib.c (detect_if_not_defined): New function.\n\t(do_if): Use it to detect potential once-only headers.\n\nFrom-SVN: r28877", "tree": {"sha": "043d5cd70b9c8ffa0779ec456d472b3f4b89d9b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/043d5cd70b9c8ffa0779ec456d472b3f4b89d9b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d0e51ba333e93a4166ebf5a9eda333b5ca647f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d0e51ba333e93a4166ebf5a9eda333b5ca647f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d0e51ba333e93a4166ebf5a9eda333b5ca647f3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d0e51ba333e93a4166ebf5a9eda333b5ca647f3/comments", "author": null, "committer": null, "parents": [{"sha": "f362bcef805a7e50a7bda082b7c21037523ae410", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f362bcef805a7e50a7bda082b7c21037523ae410", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f362bcef805a7e50a7bda082b7c21037523ae410"}], "stats": {"total": 137, "additions": 109, "deletions": 28}, "files": [{"sha": "9e58e55861b6bc96bdfd2563b803d6fd93152522", "filename": "gcc/ChangeLog", "status": "modified", "additions": 32, "deletions": 27, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d0e51ba333e93a4166ebf5a9eda333b5ca647f3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d0e51ba333e93a4166ebf5a9eda333b5ca647f3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1d0e51ba333e93a4166ebf5a9eda333b5ca647f3", "patch": "@@ -1,3 +1,8 @@\n+1999-08-25 13:51 -0700  Jim Meyering  <meyering@ascend.com>\n+\n+\t* cpplib.c (detect_if_not_defined): New function.\n+\t(do_if): Use it to detect potential once-only headers.\n+\n Wed Aug 25 14:00:18 1999  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* c-common.c (combine_strings): Always set TREE_CONSTANT.\n@@ -659,7 +664,7 @@ Fri Aug 20 22:32:17 1999  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \t* gencheck.c: Do not define any *_CHECK1 macros.\n \n Thu Aug 19 14:42:38 1999  Mike Stump <mrs@wrs.com>\n-\t                  Mark Mitchell <mark@codesourcery.com>\n+\t\t          Mark Mitchell <mark@codesourcery.com>\n \n \t* c-common.c (c_get_alias_set): Fix support for poitners and\n \treferences.\n@@ -2147,17 +2152,17 @@ Thu Jul 29 09:21:42 1999  Nick Clifton  <nickc@cygnus.com>\n \n Wed Jul 28 12:50:48 1999  Geoff Keating  <geoffk@cygnus.com>\n \n-        * config/mips/mips.c: system.h handles MIN and MAX, don't undefine\n-        them here.\n+\t* config/mips/mips.c: system.h handles MIN and MAX, don't undefine\n+\tthem here.\n \n Wed Jul 28 13:18:35 1999  Jeffrey A Law  (law@cygnus.com)\n \n \t* pa.md (indirect_jump): Remove mode from match_operand.  Verify\n \tproper mode in the condition string.\n \t(icacheflush, dcacheflush): Remove modes from match_operands.\n \n-        * pa.c (emit_move_sequence): Always convert scratch_reg to the\n-        proper mode before using it.\n+\t* pa.c (emit_move_sequence): Always convert scratch_reg to the\n+\tproper mode before using it.\n \n \t* pa.md (adddi3, subdi3): Turn into a define_expand/define_insn\n \tpair.\n@@ -2174,7 +2179,7 @@ Wed Jul 28 13:18:35 1999  Jeffrey A Law  (law@cygnus.com)\n \t* pa.md (call, call_value): Use \"word_mode\" instead of \"SImode\" as\n \tneeded.\n \n-        * README: Update.\n+\t* README: Update.\n \n Wed Jul 28 11:28:04 1999  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n \n@@ -2772,7 +2777,7 @@ Mon Jul 19 09:36:27 1999  Bernd Schmidt  <bernds@cygnus.co.uk>\n \tdialects.\n \n 1999-07-17  Alexandre Oliva  <oliva@dcc.unicamp.br>\n-        \n+\t\n \t* gcc.texi: Update e-mail addresses and URLs to gcc.gnu.org.\n \tRemoved paragraph about compression of files and size limitation,\n \tduplicated in the FAQ.  Use gcc-patches for posting patches.\n@@ -2782,8 +2787,8 @@ Mon Jul 19 09:36:27 1999  Bernd Schmidt  <bernds@cygnus.co.uk>\n \n 1999-07-17  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n-        * Makefile.in (stmp-multilib-sub): Make the files extracted\n-        from $(LIBGCC1) writable.\n+\t* Makefile.in (stmp-multilib-sub): Make the files extracted\n+\tfrom $(LIBGCC1) writable.\n \n Sat Jul 17 14:25:46 1999  Nick Clifton  <nickc@cygnus.com>\n \n@@ -3126,7 +3131,7 @@ Fri Jul  2 01:36:36 1999  Robert Lipe  <robertlipe@usa.net>\n \tntohs.\n \n Fri Jul  2 00:46:47 1999  Richard Henderson  <rth@cygnus.com>\n-                          Jeff Law <law@cygnus.com>\n+\t                  Jeff Law <law@cygnus.com>\n \n \t* ginclude/varargs.h (va_dcl): Use word_mode for type of\n \t__builtin_va_list.\n@@ -3549,7 +3554,7 @@ Fri Jun 18 07:02 1999  Bruce Korb <ddsinc09@ix.netcom.com>\n \n Thu Jun 17 15:06:10 PDT 1999 Don Lindsay  <dlindsay@cygnus.com>\n \n-        * added support for -mpcrel (PC relative addressing for m68k) \n+\t* added support for -mpcrel (PC relative addressing for m68k) \n \tbased on code done by Michael Tiemann  <tiemann@axon.cygnus.com>.\n \t* invoke.texi (m68000 options): Add documentation for -mpcrel flag.\n \t* m68k.c (print_operand_address): Handle 32-bit PIC case.\n@@ -3697,8 +3702,8 @@ Mon Jun 14 17:26:40 1999  David Edelsohn  <edelsohn@gnu.org>\n \n Mon Jun 14 12:57:38 1999  David Mosberger  <davidm@hpl.hp.com>\n \n-        * combine.c (simplify_logical, case AND): Only call\n-        simplify_and_const_int if the mode is no wider than HOST_WIDE_INT\n+\t* combine.c (simplify_logical, case AND): Only call\n+\tsimplify_and_const_int if the mode is no wider than HOST_WIDE_INT\n \tor the constant is positive.\n \n Mon Jun 14 11:43:41 1999  Nick Clifton  <nickc@cygnus.com>\n@@ -3885,7 +3890,7 @@ Mon Jun  7 22:05:03 1999  Mark Kettenis  <kettenis@gnu.org>\n \t* fixinc/fixincl.x, fixinc/fixincl.sh: Rebuilt.\n \n Mon Jun  7 20:34:20 1999  Robert Lipe <robertlipe@usa.net>\n-                          Jeffrey A Law  (law@cygnus.com)\n+\t                  Jeffrey A Law  (law@cygnus.com)\n \n \t* varasm.c (assemble_start_function): Remove the function\n \tfrom the pending weak decls list when we define a function.\n@@ -4017,8 +4022,8 @@ Thu Jun  3 01:19:03 1999  Jeffrey A Law  (law@cygnus.com)\n \n Wed Jun  2 15:44:15 1999  Mark Mitchell <mark@codesourcery.com>\n \n-        Revert this change:\n-        * fold-const.c (fold): STRIP_NOPS when deciding whether or not\n+\tRevert this change:\n+\t* fold-const.c (fold): STRIP_NOPS when deciding whether or not\n \tsomething is a candidate for optimize_bit_field_compare.\n \n Wed Jun  2 21:53:05 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n@@ -4094,8 +4099,8 @@ Mon May 31 15:23:23 1999  Richard Henderson  <rth@cygnus.com>\n \n Mon May 31 11:48:07 1999  Mark Mitchell  <mark@codesourcery.com>\n \n-        * cccp.c (handle_directive): Handle backslash-newlines in quoted\n-        strings correctly.\n+\t* cccp.c (handle_directive): Handle backslash-newlines in quoted\n+\tstrings correctly.\n \n Mon May 31 09:36:11 1999  Cort Dougan  <cort@cs.nmt.edu>\n \n@@ -4118,7 +4123,7 @@ Mon May 31 00:46:17 1999  Jeffrey A Law  (law@cygnus.com)\n \t* configure.in (native gas tests): Search for an assembler in the\n \tsame manner that the installed compiler will.\n \t* configure: Rebuilt.\n-        * tm.texi (MD_EXEC_PREFIX): Note need to update configure.in too.\n+\t* tm.texi (MD_EXEC_PREFIX): Note need to update configure.in too.\n \n \t* alias.c (find_base_term): Improve handling of addresses\n \tconstructed from binary operations.\n@@ -4158,12 +4163,12 @@ Fri May 28 03:47:03 1999  Eric Raskin (ehr@listworks.com)\n \n Fri May 28 03:41:02 1999  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n \n-        * rs6000/sysv4.h (CC1_SPEC): Add support for -profile\n-        (LIB_LINUX_SPEC): Likewise.\n-        (LIB_LINUX_SPEC): Add support for -pthread\n-        (CPP_OS_LINUX_SPEC): Likewise.\n-        (CPP_SYSV_SPEC): Avoid redefinitions if both -fpic and -fPIC are\n-        specified.\n+\t* rs6000/sysv4.h (CC1_SPEC): Add support for -profile\n+\t(LIB_LINUX_SPEC): Likewise.\n+\t(LIB_LINUX_SPEC): Add support for -pthread\n+\t(CPP_OS_LINUX_SPEC): Likewise.\n+\t(CPP_SYSV_SPEC): Avoid redefinitions if both -fpic and -fPIC are\n+\tspecified.\n \n Thu May 27 13:04:52 1999  H.J. Lu  (hjl@gnu.org)\n \n@@ -4210,7 +4215,7 @@ Wed May 26 14:18:05 1999  Richard Henderson  <rth@cygnus.com>\n \n Wed May 26 09:53:05 1999  Mark Mitchell  <mark@codesourcery.com>\n \n-        * fold-const.c (fold): STRIP_NOPS when deciding whether or not\n+\t* fold-const.c (fold): STRIP_NOPS when deciding whether or not\n \tsomething is a candidate for optimize_bit_field_compare.\n \n Wed May 26 09:40:02 1999  Mark Mitchell  <mark@codesourcery.com>\n@@ -4279,7 +4284,7 @@ Mon May 24 01:02:12 1999  Mark Mitchell  <mark@codesourcery.com>\n \n Sun May 23 20:31:16 1999  Jeffrey A Law  (law@cygnus.com)\n \n-        * loop.c (strength_reduce): Grow reg_single_usage as needed.\n+\t* loop.c (strength_reduce): Grow reg_single_usage as needed.\n \n Sun May 23 10:13:20 1999  David O'Brien <obrien@FreeBSD.org>\n "}, {"sha": "5dde8870789b01dcb7c67b0d4300ac30afdb3b4d", "filename": "gcc/cpplib.c", "status": "modified", "additions": 77, "deletions": 1, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d0e51ba333e93a4166ebf5a9eda333b5ca647f3/gcc%2Fcpplib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d0e51ba333e93a4166ebf5a9eda333b5ca647f3/gcc%2Fcpplib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.c?ref=1d0e51ba333e93a4166ebf5a9eda333b5ca647f3", "patch": "@@ -1577,6 +1577,81 @@ do_sccs (pfile, keyword)\n }\n #endif\n \f\n+\n+/* We've found an `#if' directive.  If the only thing before it in\n+   this file is white space, and if it is of the form\n+   `#if ! defined SYMBOL', then SYMBOL is a possible controlling macro\n+   for inclusion of this file.  (See redundant_include_p in cppfiles.c\n+   for an explanation of controlling macros.)  If so, return a\n+   malloc'd copy of SYMBOL.  Otherwise, return NULL.  */\n+\n+static U_CHAR *\n+detect_if_not_defined (pfile)\n+     cpp_reader *pfile;\n+{\n+  U_CHAR *control_macro = 0;\n+\n+  if (pfile->only_seen_white == 2)\n+    {\n+      char *ident;\n+      enum cpp_token token;\n+      int base_offset;\n+      int token_offset;\n+      int need_rparen = 0;\n+\n+      /* Save state required for restore.  */\n+      pfile->no_macro_expand++;\n+      parse_set_mark (pfile);\n+      base_offset = CPP_WRITTEN (pfile);\n+\n+      /* Look for `!', */\n+      if (get_directive_token (pfile) != CPP_OTHER\n+\t  || CPP_WRITTEN (pfile) != (size_t) base_offset + 1\n+\t  || CPP_PWRITTEN (pfile)[-1] != '!')\n+\tgoto restore;\n+\n+      /* ...then `defined', */\n+      token_offset = CPP_WRITTEN (pfile);\n+      token = get_directive_token (pfile);\n+      if (token != CPP_NAME)\n+\tgoto restore;\n+      ident = pfile->token_buffer + token_offset;\n+      CPP_NUL_TERMINATE (pfile);\n+      if (strcmp (ident, \"defined\"))\n+\tgoto restore;\n+\n+      /* ...then an optional '(' and the name, */\n+      token_offset = CPP_WRITTEN (pfile);\n+      token = get_directive_token (pfile);\n+      if (token == CPP_LPAREN)\n+\t{\n+\t  token_offset = CPP_WRITTEN (pfile);\n+\t  token = get_directive_token (pfile);\n+\t  if (token != CPP_NAME)\n+\t    goto restore;\n+\t  need_rparen = 1;\n+\t}\n+      else if (token != CPP_NAME)\n+\tgoto restore;\n+\n+      ident = pfile->token_buffer + token_offset;\n+      CPP_NUL_TERMINATE (pfile);\n+\n+      /* ...then the ')', if necessary, */\n+      if ((!need_rparen || get_directive_token (pfile) == CPP_RPAREN)\n+\t  /* ...and make sure there's nothing else on the line.  */\n+\t  && get_directive_token (pfile) == CPP_VSPACE)\n+\tcontrol_macro = xstrdup (ident);\n+\n+    restore:\n+      CPP_SET_WRITTEN (pfile, base_offset);\n+      pfile->no_macro_expand--;\n+      parse_goto_mark (pfile);\n+    }\n+\n+  return control_macro;\n+}\n+\n /*\n  * handle #if command by\n  *   1) inserting special `defined' keyword into the hash table\n@@ -1595,8 +1670,9 @@ do_if (pfile, keyword)\n      cpp_reader *pfile;\n      struct directive *keyword ATTRIBUTE_UNUSED;\n {\n+  U_CHAR *control_macro = detect_if_not_defined (pfile);\n   HOST_WIDEST_INT value = eval_if_expression (pfile);\n-  conditional_skip (pfile, value == 0, T_IF, NULL_PTR);\n+  conditional_skip (pfile, value == 0, T_IF, control_macro);\n   return 0;\n }\n "}]}