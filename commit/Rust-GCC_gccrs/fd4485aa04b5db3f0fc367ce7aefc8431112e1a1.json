{"sha": "fd4485aa04b5db3f0fc367ce7aefc8431112e1a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQ0NDg1YWEwNGI1ZGIzZjBmYzM2N2NlN2FlZmM4NDMxMTEyZTFhMQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-05-09T13:03:45Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-05-09T13:03:45Z"}, "message": "Support {MIN,MAX}_EXPR in GIMPLE FE.\n\n2019-05-09  Martin Liska  <mliska@suse.cz>\n\n\t* gimple-pretty-print.c (dump_binary_rhs): Dump MIN_EXPR\n\tand MAX_EXPR in GIMPLE FE format.\n2019-05-09  Martin Liska  <mliska@suse.cz>\n\n\t* gimple-parser.c (c_parser_gimple_statement): Support __MIN and\n\t__MAX.\n\t(c_parser_gimple_unary_expression): Parse also binary expression\n\t__MIN and __MAX.\n\t(c_parser_gimple_parentized_binary_expression): New function.\n2019-05-09  Martin Liska  <mliska@suse.cz>\n\n\t* gcc.dg/gimplefe-39.c: New test.\n\nFrom-SVN: r271035", "tree": {"sha": "a5b080e2a38e8e3f6ee9397c56ddd2b383f6dab8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5b080e2a38e8e3f6ee9397c56ddd2b383f6dab8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd4485aa04b5db3f0fc367ce7aefc8431112e1a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd4485aa04b5db3f0fc367ce7aefc8431112e1a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd4485aa04b5db3f0fc367ce7aefc8431112e1a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd4485aa04b5db3f0fc367ce7aefc8431112e1a1/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d276406ac1e7fc7f9c380325c994cf477b3d6fb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d276406ac1e7fc7f9c380325c994cf477b3d6fb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d276406ac1e7fc7f9c380325c994cf477b3d6fb8"}], "stats": {"total": 91, "additions": 89, "deletions": 2}, "files": [{"sha": "126a15053b6cbccc97967ca5e1e13837bd39958b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd4485aa04b5db3f0fc367ce7aefc8431112e1a1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd4485aa04b5db3f0fc367ce7aefc8431112e1a1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fd4485aa04b5db3f0fc367ce7aefc8431112e1a1", "patch": "@@ -1,3 +1,8 @@\n+2019-05-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* gimple-pretty-print.c (dump_binary_rhs): Dump MIN_EXPR\n+\tand MAX_EXPR in GIMPLE FE format.\n+\n 2019-05-09  Martin Liska  <mliska@suse.cz>\n \n \t* tree-cfg.c (dump_function_to_file): Dump entry BB count."}, {"sha": "cb8bfcbd5e8fb6d4589ba63fb1eb5304cd3f7e2e", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd4485aa04b5db3f0fc367ce7aefc8431112e1a1/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd4485aa04b5db3f0fc367ce7aefc8431112e1a1/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=fd4485aa04b5db3f0fc367ce7aefc8431112e1a1", "patch": "@@ -1,3 +1,11 @@\n+2019-05-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* gimple-parser.c (c_parser_gimple_statement): Support __MIN and\n+\t__MAX.\n+\t(c_parser_gimple_unary_expression): Parse also binary expression\n+\t__MIN and __MAX.\n+\t(c_parser_gimple_parentized_binary_expression): New function.\n+\n 2019-05-09  Martin Liska  <mliska@suse.cz>\n \n \t* gimple-parser.c (struct gimple_parser): Add probability."}, {"sha": "99f764710b259bd70bcd30c7b307aa4f2772e1a0", "filename": "gcc/c/gimple-parser.c", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd4485aa04b5db3f0fc367ce7aefc8431112e1a1/gcc%2Fc%2Fgimple-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd4485aa04b5db3f0fc367ce7aefc8431112e1a1/gcc%2Fc%2Fgimple-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fgimple-parser.c?ref=fd4485aa04b5db3f0fc367ce7aefc8431112e1a1", "patch": "@@ -750,7 +750,9 @@ c_parser_gimple_statement (gimple_parser &parser, gimple_seq *seq)\n       {\n \ttree id = c_parser_peek_token (parser)->value;\n \tif (strcmp (IDENTIFIER_POINTER (id), \"__ABS\") == 0\n-\t    || strcmp (IDENTIFIER_POINTER (id), \"__ABSU\") == 0)\n+\t    || strcmp (IDENTIFIER_POINTER (id), \"__ABSU\") == 0\n+\t    || strcmp (IDENTIFIER_POINTER (id), \"__MIN\") == 0\n+\t    || strcmp (IDENTIFIER_POINTER (id), \"__MAX\") == 0)\n \t  goto build_unary_expr;\n \tbreak;\n       }\n@@ -989,6 +991,32 @@ c_parser_gimple_binary_expression (gimple_parser &parser)\n   return ret;\n }\n \n+/* Parse a gimple parentized binary expression.  */\n+\n+static c_expr\n+c_parser_gimple_parentized_binary_expression (gimple_parser &parser,\n+\t\t\t\t\t      location_t op_loc,\n+\t\t\t\t\t      tree_code code)\n+{\n+  struct c_expr ret;\n+  ret.set_error ();\n+\n+  c_parser_consume_token (parser);\n+  if (!c_parser_require (parser, CPP_OPEN_PAREN, \"expected %<(%>\"))\n+    return ret;\n+  c_expr op1 = c_parser_gimple_postfix_expression (parser);\n+  if (!c_parser_require (parser, CPP_COMMA, \"expected %<,%>\"))\n+    return ret;\n+  c_expr op2 = c_parser_gimple_postfix_expression (parser);\n+  if (!c_parser_require (parser, CPP_CLOSE_PAREN, \"expected %<)%>\"))\n+    return ret;\n+\n+  if (op1.value != error_mark_node && op2.value != error_mark_node)\n+    ret.value = build2_loc (op_loc,\n+\t\t\t    code, TREE_TYPE (op1.value), op1.value, op2.value);\n+  return ret;\n+}\n+\n /* Parse gimple unary expression.\n \n    gimple-unary-expression:\n@@ -1078,6 +1106,14 @@ c_parser_gimple_unary_expression (gimple_parser &parser)\n \t      op = c_parser_gimple_postfix_expression (parser);\n \t      return parser_build_unary_op (op_loc, ABSU_EXPR, op);\n \t    }\n+\t  else if (strcmp (IDENTIFIER_POINTER (id), \"__MIN\") == 0)\n+\t    return c_parser_gimple_parentized_binary_expression (parser,\n+\t\t\t\t\t\t\t\t op_loc,\n+\t\t\t\t\t\t\t\t MIN_EXPR);\n+\t  else if (strcmp (IDENTIFIER_POINTER (id), \"__MAX\") == 0)\n+\t    return c_parser_gimple_parentized_binary_expression (parser,\n+\t\t\t\t\t\t\t\t op_loc,\n+\t\t\t\t\t\t\t\t MAX_EXPR);\n \t  else\n \t    return c_parser_gimple_postfix_expression (parser);\n \t}"}, {"sha": "58212c4dcc14334158a6f7d566b6a4bf838ea6c2", "filename": "gcc/gimple-pretty-print.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd4485aa04b5db3f0fc367ce7aefc8431112e1a1/gcc%2Fgimple-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd4485aa04b5db3f0fc367ce7aefc8431112e1a1/gcc%2Fgimple-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-pretty-print.c?ref=fd4485aa04b5db3f0fc367ce7aefc8431112e1a1", "patch": "@@ -423,9 +423,22 @@ dump_binary_rhs (pretty_printer *buffer, gassign *gs, int spc,\n   enum tree_code code = gimple_assign_rhs_code (gs);\n   switch (code)\n     {\n-    case COMPLEX_EXPR:\n     case MIN_EXPR:\n     case MAX_EXPR:\n+      if (flags & TDF_GIMPLE)\n+\t{\n+\t  pp_string (buffer, code == MIN_EXPR ? \"__MIN (\" : \"__MAX (\");\n+\t  dump_generic_node (buffer, gimple_assign_rhs1 (gs), spc, flags,\n+\t\t\t     false);\n+\t  pp_string (buffer, \", \");\n+\t  dump_generic_node (buffer, gimple_assign_rhs2 (gs), spc, flags,\n+\t\t\t     false);\n+\t  pp_string (buffer, \")\");\n+\t  break;\n+\t}\n+      else\n+\tgcc_fallthrough ();\n+    case COMPLEX_EXPR:\n     case VEC_WIDEN_MULT_HI_EXPR:\n     case VEC_WIDEN_MULT_LO_EXPR:\n     case VEC_WIDEN_MULT_EVEN_EXPR:"}, {"sha": "a95271ccf0a69ee6301307e5865c9bc598da905d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd4485aa04b5db3f0fc367ce7aefc8431112e1a1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd4485aa04b5db3f0fc367ce7aefc8431112e1a1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fd4485aa04b5db3f0fc367ce7aefc8431112e1a1", "patch": "@@ -1,3 +1,7 @@\n+2019-05-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc.dg/gimplefe-39.c: New test.\n+\n 2019-05-09  Martin Liska  <mliska@suse.cz>\n \n \t* gcc.dg/gimplefe-37.c: New test."}, {"sha": "30677356d5b663d7f6d762874915b225ffcb2521", "filename": "gcc/testsuite/gcc.dg/gimplefe-39.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd4485aa04b5db3f0fc367ce7aefc8431112e1a1/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-39.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd4485aa04b5db3f0fc367ce7aefc8431112e1a1/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-39.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgimplefe-39.c?ref=fd4485aa04b5db3f0fc367ce7aefc8431112e1a1", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fgimple -fdump-tree-optimized\" } */\n+\n+int a, b;\n+\n+int __GIMPLE (ssa,guessed_local(1073741824))\n+main (int argc)\n+{\n+  int _1;\n+  int _2;\n+  int _4;\n+\n+  __BB(2,guessed_local(1073741824)):\n+  _1 = a;\n+  _2 = b;\n+  _4 = __MAX (_1, _2);\n+  return _4;\n+\n+}\n+\n+/* { dg-final { scan-tree-dump \"MAX_EXPR\" \"optimized\" } } */"}]}