{"sha": "d6a3e26499ed7c6ff937cdb7319c1f04029cb61c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDZhM2UyNjQ5OWVkN2M2ZmY5MzdjZGI3MzE5YzFmMDQwMjljYjYxYw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2011-01-12T17:45:42Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2011-01-12T17:45:42Z"}, "message": "mn10300: Clean up trampoline handling\n\nThe old code was failing in the testsuite.  I didn't try to\ndebug exactly why, since the existing code was needlessly\ncomplex.\n\nFrom-SVN: r168720", "tree": {"sha": "fdb2749be3712139374d777829a437d945232d45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fdb2749be3712139374d777829a437d945232d45"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d6a3e26499ed7c6ff937cdb7319c1f04029cb61c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6a3e26499ed7c6ff937cdb7319c1f04029cb61c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6a3e26499ed7c6ff937cdb7319c1f04029cb61c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6a3e26499ed7c6ff937cdb7319c1f04029cb61c/comments", "author": null, "committer": null, "parents": [{"sha": "0f8ab43451a04f7e1d492a72f30e6d87eed23f70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f8ab43451a04f7e1d492a72f30e6d87eed23f70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f8ab43451a04f7e1d492a72f30e6d87eed23f70"}], "stats": {"total": 62, "additions": 34, "deletions": 28}, "files": [{"sha": "0317cbbe6848690d81033404260feea3f1bede28", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a3e26499ed7c6ff937cdb7319c1f04029cb61c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a3e26499ed7c6ff937cdb7319c1f04029cb61c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d6a3e26499ed7c6ff937cdb7319c1f04029cb61c", "patch": "@@ -1,3 +1,10 @@\n+2011-01-12  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/mn10300/mn10300.c (mn10300_asm_trampoline_template): Remove.\n+\t(mn10300_trampoline_init): Rewrite without a template, an immediate\n+\tload and a direct branch.\n+\t* config/mn10300/mn10300.h (TRAMPOLINE_SIZE): Reduce to 16.\n+\n 2011-01-12  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/s390/s390.h (OUTPUT_ADDR_CONST_EXTRA): Remove."}, {"sha": "5f2d63b5e513581b78c75bdaa0a330ce0740a566", "filename": "gcc/config/mn10300/mn10300.c", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a3e26499ed7c6ff937cdb7319c1f04029cb61c/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a3e26499ed7c6ff937cdb7319c1f04029cb61c/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.c?ref=d6a3e26499ed7c6ff937cdb7319c1f04029cb61c", "patch": "@@ -2397,37 +2397,39 @@ mn10300_case_values_threshold (void)\n   return 6;\n }\n \n-/* Worker function for TARGET_ASM_TRAMPOLINE_TEMPLATE.  */\n-\n-static void\n-mn10300_asm_trampoline_template (FILE *f)\n-{\n-  fprintf (f, \"\\tadd -4,sp\\n\");\n-  fprintf (f, \"\\t.long 0x0004fffa\\n\");\n-  fprintf (f, \"\\tmov (0,sp),a0\\n\");\n-  fprintf (f, \"\\tadd 4,sp\\n\");\n-  fprintf (f, \"\\tmov (13,a0),a1\\n\");\t\n-  fprintf (f, \"\\tmov (17,a0),a0\\n\");\n-  fprintf (f, \"\\tjmp (a0)\\n\");\n-  fprintf (f, \"\\t.long 0\\n\");\n-  fprintf (f, \"\\t.long 0\\n\");\n-}\n-\n /* Worker function for TARGET_TRAMPOLINE_INIT.  */\n \n static void\n mn10300_trampoline_init (rtx m_tramp, tree fndecl, rtx chain_value)\n {\n-  rtx fnaddr = XEXP (DECL_RTL (fndecl), 0);\n-  rtx mem;\n+  rtx mem, disp, fnaddr = XEXP (DECL_RTL (fndecl), 0);\n+\n+  /* This is a strict alignment target, which means that we play\n+     some games to make sure that the locations at which we need\n+     to store <chain> and <disp> wind up at aligned addresses.\n+\n+\t0x28 0x00\t\t\tadd 0,d0\n+\t          0xfc 0xdd\t\tmov chain,a1\n+        <chain>\n+\t0xf8 0xed 0x00\t\t\tbtst 0,d1\n+\t               0xdc\t\tjmp fnaddr\n+\t<disp>\n+\n+     Note that the two extra insns are effectively nops; they \n+     clobber the flags but do not affect the contents of D0 or D1.  */\n \n-  emit_block_move (m_tramp, assemble_trampoline_template (),\n-\t\t   GEN_INT (TRAMPOLINE_SIZE), BLOCK_OP_NORMAL);\n+  disp = expand_binop (SImode, sub_optab, fnaddr,\n+\t\t       plus_constant (XEXP (m_tramp, 0), 11),\n+\t\t       NULL_RTX, 1, OPTAB_DIRECT);\n \n-  mem = adjust_address (m_tramp, SImode, 0x14);\n+  mem = adjust_address (m_tramp, SImode, 0);\n+  emit_move_insn (mem, gen_int_mode (0xddfc0028, SImode));\n+  mem = adjust_address (m_tramp, SImode, 4);\n   emit_move_insn (mem, chain_value);\n-  mem = adjust_address (m_tramp, SImode, 0x18);\n-  emit_move_insn (mem, fnaddr);\n+  mem = adjust_address (m_tramp, SImode, 8);\n+  emit_move_insn (mem, gen_int_mode (0xdc00edf8, SImode));\n+  mem = adjust_address (m_tramp, SImode, 12);\n+  emit_move_insn (mem, disp);\n }\n \n /* Output the assembler code for a C++ thunk function.\n@@ -2720,8 +2722,6 @@ mn10300_conditional_register_usage (void)\n #undef  TARGET_PREFERRED_OUTPUT_RELOAD_CLASS\n #define TARGET_PREFERRED_OUTPUT_RELOAD_CLASS mn10300_preferred_output_reload_class\n \n-#undef  TARGET_ASM_TRAMPOLINE_TEMPLATE\n-#define TARGET_ASM_TRAMPOLINE_TEMPLATE mn10300_asm_trampoline_template\n #undef  TARGET_TRAMPOLINE_INIT\n #define TARGET_TRAMPOLINE_INIT mn10300_trampoline_init\n "}, {"sha": "3f63498d0864b39ffc54f737aa9fa4cc0bed19d7", "filename": "gcc/config/mn10300/mn10300.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d6a3e26499ed7c6ff937cdb7319c1f04029cb61c/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d6a3e26499ed7c6ff937cdb7319c1f04029cb61c/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.h?ref=d6a3e26499ed7c6ff937cdb7319c1f04029cb61c", "patch": "@@ -533,9 +533,8 @@ struct cum_arg\n \n /* Length in units of the trampoline for entering a nested function.  */\n \n-#define TRAMPOLINE_SIZE 0x1b\n-\n-#define TRAMPOLINE_ALIGNMENT 32\n+#define TRAMPOLINE_SIZE\t\t16\n+#define TRAMPOLINE_ALIGNMENT\t32\n \n /* A C expression whose value is RTL representing the value of the return\n    address for the frame COUNT steps up from the current frame."}]}