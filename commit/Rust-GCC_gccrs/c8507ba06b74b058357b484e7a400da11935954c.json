{"sha": "c8507ba06b74b058357b484e7a400da11935954c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg1MDdiYTA2Yjc0YjA1ODM1N2I0ODRlN2E0MDBkYTExOTM1OTU0Yw==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1996-10-16T18:41:27Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "1996-10-16T18:41:27Z"}, "message": "* exlsi.h (CHECK_FLOAT_VALUE): Removed.\n\nFrom-SVN: r12970", "tree": {"sha": "7aaee42b07a729778be152eef51d2718e5a92430", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7aaee42b07a729778be152eef51d2718e5a92430"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8507ba06b74b058357b484e7a400da11935954c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8507ba06b74b058357b484e7a400da11935954c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8507ba06b74b058357b484e7a400da11935954c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8507ba06b74b058357b484e7a400da11935954c/comments", "author": null, "committer": null, "parents": [{"sha": "600139d3eaa20facd03b9d06096ef49ba1ef25d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/600139d3eaa20facd03b9d06096ef49ba1ef25d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/600139d3eaa20facd03b9d06096ef49ba1ef25d3"}], "stats": {"total": 21, "additions": 0, "deletions": 21}, "files": [{"sha": "d0d4c73807d2df7e6753680251498cc0f19c7eac", "filename": "gcc/config/elxsi/elxsi.h", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8507ba06b74b058357b484e7a400da11935954c/gcc%2Fconfig%2Felxsi%2Felxsi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8507ba06b74b058357b484e7a400da11935954c/gcc%2Fconfig%2Felxsi%2Felxsi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Felxsi%2Felxsi.h?ref=c8507ba06b74b058357b484e7a400da11935954c", "patch": "@@ -689,27 +689,6 @@ enum reg_class { NO_REGS, GENERAL_REGS, ALL_REGS, LIM_REG_CLASSES };\n \n /* #define UDIVSI3_LIBCALL \"*udiv\" */\n /* #define UMODSI3_LIBCALL \"*urem\" */\n-\n-/* Check a `double' value for validity for a particular machine mode.  */\n-\n-/* Note that it is very hard to accidentally create a number that fits in a\n-   double but not in a float, since their ranges are almost the same.  */\n-#define CHECK_FLOAT_VALUE(mode, d) \\\n-  if ((mode) == SFmode) \\\n-    { \\\n-      if ((d) > 1.7014117331926443e+38) \\\n-\t{ error (\"magnitude of constant too large for `float'\"); \\\n-\t  (d) = 1.7014117331926443e+38; } \\\n-      else if ((d) < -1.7014117331926443e+38) \\\n-\t{ error (\"magnitude of constant too large for `float'\"); \\\n-\t  (d) = -1.7014117331926443e+38; } \\\n-      else if (((d) > 0) && ((d) < 2.9387358770557188e-39)) \\\n-\t{ warning (\"`float' constant truncated to zero\"); \\\n-\t  (d) = 0.0; } \\\n-      else if (((d) < 0) && ((d) > -2.9387358770557188e-39)) \\\n-\t{ warning (\"`float' constant truncated to zero\"); \\\n-\t  (d) = 0.0; } \\\n-    }\n \f\n /* Tell final.c how to eliminate redundant test instructions.  */\n "}]}