{"sha": "41109364f57e758fb7afd2c4c519a7f4b6c6cd48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDExMDkzNjRmNTdlNzU4ZmI3YWZkMmM0YzUxOWE3ZjRiNmM2Y2Q0OA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-10T13:13:41Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-10T13:13:41Z"}, "message": "Use PROTO for varargs functions.\n\n(VPROTO): New macro.\n\nFrom-SVN: r6519", "tree": {"sha": "b41b227ae2df4ca28998d1e532dcdcaea7080f5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b41b227ae2df4ca28998d1e532dcdcaea7080f5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41109364f57e758fb7afd2c4c519a7f4b6c6cd48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41109364f57e758fb7afd2c4c519a7f4b6c6cd48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41109364f57e758fb7afd2c4c519a7f4b6c6cd48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41109364f57e758fb7afd2c4c519a7f4b6c6cd48/comments", "author": null, "committer": null, "parents": [{"sha": "ba63ed560e46903b5cdb272f3aa265215936da59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba63ed560e46903b5cdb272f3aa265215936da59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba63ed560e46903b5cdb272f3aa265215936da59"}], "stats": {"total": 38, "additions": 17, "deletions": 21}, "files": [{"sha": "c6e47b2fa21f897345314c650babfb0c25cd934f", "filename": "gcc/rtl.h", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41109364f57e758fb7afd2c4c519a7f4b6c6cd48/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41109364f57e758fb7afd2c4c519a7f4b6c6cd48/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=41109364f57e758fb7afd2c4c519a7f4b6c6cd48", "patch": "@@ -151,6 +151,14 @@ typedef struct rtx_def\n #endif\n #endif\n \n+#ifdef __STDC__\n+#define VPROTO(ARGS)\t\tARGS\n+#define VA_START(va_list,var)\tva_start(va_list,var)\n+#else\n+#define VPROTO(ARGS)\t\t(va_alist) va_dcl\n+#define VA_START(va_list,var)\tva_start(va_list)\n+#endif\n+\n #define NULL_RTX (rtx) 0\n \n /* Define a generic NULL if one hasn't already been defined.  */\n@@ -643,20 +651,11 @@ extern rtx plus_constant_for_output_wide PROTO((rtx, HOST_WIDE_INT));\n \n #define GEN_INT(N) gen_rtx (CONST_INT, VOIDmode, (HOST_WIDE_INT) (N))\n \n-#if 0\n-/* We cannot define prototypes for the variable argument functions,\n-   since they have not been ANSI-fied, and an ANSI compiler would\n-   complain when compiling the definition of these functions.  */\n+extern rtx bc_gen_rtx ();\n \n extern rtx gen_rtx\t\t\tPROTO((enum rtx_code, enum machine_mode, ...));\n extern rtvec gen_rtvec\t\t\tPROTO((int, ...));\n \n-#else\n-extern rtx bc_gen_rtx ();\n-extern rtx gen_rtx ();\n-extern rtvec gen_rtvec ();\n-#endif\n-\n #ifdef BUFSIZ\t\t\t/* stdio.h has been included */\n extern rtx read_rtx\t\t\tPROTO((FILE *));\n #else"}, {"sha": "ed5440afbf9b9b29001e4c308d3264b37990e451", "filename": "gcc/tree.h", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41109364f57e758fb7afd2c4c519a7f4b6c6cd48/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41109364f57e758fb7afd2c4c519a7f4b6c6cd48/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=41109364f57e758fb7afd2c4c519a7f4b6c6cd48", "patch": "@@ -1,5 +1,5 @@\n /* Front-end tree definitions for GNU compiler.\n-   Copyright (C) 1989, 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1993, 1994 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -987,6 +987,13 @@ union tree_node\n #endif\n #endif\n \n+#ifdef __STDC__\n+#define VPROTO(ARGS)            ARGS\n+#define VA_START(va_list,var)  va_start(va_list,var)\n+#else\n+#define VPROTO(ARGS)            (va_alist) va_dcl\n+#define VA_START(va_list,var)  va_start(va_list)\n+#endif\n \n #define NULL_TREE (tree) NULL\n \n@@ -1063,19 +1070,9 @@ extern tree get_identifier\t\tPROTO((char *));\n #define build_int_2(LO,HI)  \\\n   build_int_2_wide ((HOST_WIDE_INT) (LO), (HOST_WIDE_INT) (HI))\n \n-#if 0\n-/* We cannot define prototypes for the variable argument functions,\n-   since they have not been ANSI-fied, and an ANSI compiler would\n-   complain when compiling the definition of these functions.  */\n-\n extern tree build\t\t\tPROTO((enum tree_code, tree, ...));\n extern tree build_nt\t\t\tPROTO((enum tree_code, ...));\n extern tree build_parse_node\t\tPROTO((enum tree_code, ...));\n-#else\n-extern tree build ();\n-extern tree build_nt ();\n-extern tree build_parse_node ();\n-#endif\n \n extern tree build_int_2_wide\t\tPROTO((HOST_WIDE_INT, HOST_WIDE_INT));\n extern tree build_real\t\t\tPROTO((tree, REAL_VALUE_TYPE));"}]}