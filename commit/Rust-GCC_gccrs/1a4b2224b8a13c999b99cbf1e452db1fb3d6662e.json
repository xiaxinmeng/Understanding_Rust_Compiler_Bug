{"sha": "1a4b2224b8a13c999b99cbf1e452db1fb3d6662e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE0YjIyMjRiOGExM2M5OTliOTljYmYxZTQ1MmRiMWZiM2Q2NjYyZQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-07-01T19:27:00Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-07-01T22:00:11Z"}, "message": "soft-fp: Update soft-fp from glibc\n\nThis patch is updating soft-fp from glibc:\n\n1. Add __extendhfxf2 to return an IEEE half converted to IEEE extended.\n2. Add __truncxfhf2 to truncate IEEE extended into IEEE half.\n\nThese are needed by x86 _Float16 support.\n\n\t* soft-fp/extendhfxf2.c: New file.\n\t* soft-fp/truncxfhf2.c: Likewise.", "tree": {"sha": "20169e16d4a9f7b772af1262bca506ed0ad316e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/20169e16d4a9f7b772af1262bca506ed0ad316e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a4b2224b8a13c999b99cbf1e452db1fb3d6662e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a4b2224b8a13c999b99cbf1e452db1fb3d6662e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a4b2224b8a13c999b99cbf1e452db1fb3d6662e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a4b2224b8a13c999b99cbf1e452db1fb3d6662e/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b544c348e13ad33d55f0d954370ab1fb0f2bf683", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b544c348e13ad33d55f0d954370ab1fb0f2bf683", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b544c348e13ad33d55f0d954370ab1fb0f2bf683"}], "stats": {"total": 105, "additions": 105, "deletions": 0}, "files": [{"sha": "1cb5fef9477d2b487e2b59940350ba1ec560b6c9", "filename": "libgcc/soft-fp/extendhfxf2.c", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a4b2224b8a13c999b99cbf1e452db1fb3d6662e/libgcc%2Fsoft-fp%2Fextendhfxf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a4b2224b8a13c999b99cbf1e452db1fb3d6662e/libgcc%2Fsoft-fp%2Fextendhfxf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fextendhfxf2.c?ref=1a4b2224b8a13c999b99cbf1e452db1fb3d6662e", "patch": "@@ -0,0 +1,53 @@\n+/* Software floating-point emulation.\n+   Return an IEEE half converted to IEEE extended.\n+   Copyright (C) 2021 Free Software Foundation, Inc.\n+   This file is part of the GNU C Library.\n+\n+   The GNU C Library is free software; you can redistribute it and/or\n+   modify it under the terms of the GNU Lesser General Public\n+   License as published by the Free Software Foundation; either\n+   version 2.1 of the License, or (at your option) any later version.\n+\n+   In addition to the permissions in the GNU Lesser General Public\n+   License, the Free Software Foundation gives you unlimited\n+   permission to link the compiled version of this file into\n+   combinations with other programs, and to distribute those\n+   combinations without any restriction coming from the use of this\n+   file.  (The Lesser General Public License restrictions do apply in\n+   other respects; for example, they cover modification of the file,\n+   and distribution when not linked into a combine executable.)\n+\n+   The GNU C Library is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   Lesser General Public License for more details.\n+\n+   You should have received a copy of the GNU Lesser General Public\n+   License along with the GNU C Library; if not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#define FP_NO_EXACT_UNDERFLOW\n+#include \"soft-fp.h\"\n+#include \"half.h\"\n+#include \"extended.h\"\n+\n+XFtype\n+__extendhfxf2 (HFtype a)\n+{\n+  FP_DECL_EX;\n+  FP_DECL_H (A);\n+  FP_DECL_E (R);\n+  XFtype r;\n+\n+  FP_INIT_EXCEPTIONS;\n+  FP_UNPACK_RAW_H (A, a);\n+#if _FP_W_TYPE_SIZE < 64\n+  FP_EXTEND (E, H, 4, 1, R, A);\n+#else\n+  FP_EXTEND (E, H, 2, 1, R, A);\n+#endif\n+  FP_PACK_RAW_E (r, R);\n+  FP_HANDLE_EXCEPTIONS;\n+\n+  return r;\n+}"}, {"sha": "688ad24523d2fa2dda3e4e4513c407a874454e75", "filename": "libgcc/soft-fp/truncxfhf2.c", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a4b2224b8a13c999b99cbf1e452db1fb3d6662e/libgcc%2Fsoft-fp%2Ftruncxfhf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a4b2224b8a13c999b99cbf1e452db1fb3d6662e/libgcc%2Fsoft-fp%2Ftruncxfhf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ftruncxfhf2.c?ref=1a4b2224b8a13c999b99cbf1e452db1fb3d6662e", "patch": "@@ -0,0 +1,52 @@\n+/* Software floating-point emulation.\n+   Truncate IEEE extended into IEEE half.\n+   Copyright (C) 2021 Free Software Foundation, Inc.\n+   This file is part of the GNU C Library.\n+\n+   The GNU C Library is free software; you can redistribute it and/or\n+   modify it under the terms of the GNU Lesser General Public\n+   License as published by the Free Software Foundation; either\n+   version 2.1 of the License, or (at your option) any later version.\n+\n+   In addition to the permissions in the GNU Lesser General Public\n+   License, the Free Software Foundation gives you unlimited\n+   permission to link the compiled version of this file into\n+   combinations with other programs, and to distribute those\n+   combinations without any restriction coming from the use of this\n+   file.  (The Lesser General Public License restrictions do apply in\n+   other respects; for example, they cover modification of the file,\n+   and distribution when not linked into a combine executable.)\n+\n+   The GNU C Library is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+   Lesser General Public License for more details.\n+\n+   You should have received a copy of the GNU Lesser General Public\n+   License along with the GNU C Library; if not, see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+#include \"soft-fp.h\"\n+#include \"half.h\"\n+#include \"extended.h\"\n+\n+HFtype\n+__truncxfhf2 (XFtype a)\n+{\n+  FP_DECL_EX;\n+  FP_DECL_E (A);\n+  FP_DECL_H (R);\n+  HFtype r;\n+\n+  FP_INIT_ROUNDMODE;\n+  FP_UNPACK_SEMIRAW_E (A, a);\n+#if _FP_W_TYPE_SIZE < 64\n+  FP_TRUNC (H, E, 1, 4, R, A);\n+#else\n+  FP_TRUNC (H, E, 1, 2, R, A);\n+#endif\n+  FP_PACK_SEMIRAW_H (r, R);\n+  FP_HANDLE_EXCEPTIONS;\n+\n+  return r;\n+}"}]}