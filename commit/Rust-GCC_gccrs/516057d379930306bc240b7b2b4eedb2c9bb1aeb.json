{"sha": "516057d379930306bc240b7b2b4eedb2c9bb1aeb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE2MDU3ZDM3OTkzMDMwNmJjMjQwYjdiMmI0ZWVkYjJjOWJiMWFlYg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-05-21T14:52:05Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-21T14:52:05Z"}, "message": "[Ada] Error message on invalid conversion involving limited views\n\nA type conversion may be illegal if the expression in the conversion has a\nlimited view of a type. This patch expands the error report to indicate the\npresence of a limited view, and when the context is a package body it suggests\nthe addition of a regular with-clause to make the full view available.\n\nCompiling client.adb must yield:\n\n   client.adb:6:16: invalid conversion, not compatible with limited view\n      of type \"Map_Type\" defined at maps.ads:2\n   client.adb:6:16: add with_clause for \"Maps\" to current unit\n\n----\npackage Maps is\n  type Map_Type is null record;\nend;\n----\nlimited with Maps;\npackage Payloads is\n  function Get_Map return access Maps.Map_Type;\nend;\n----\nwith Maps;\npackage Maps2 is\n  type New_Map_Type is new Maps.Map_Type;\nend;\n----\nwith Maps2;\npackage Client is\n  procedure Foo (Map : Maps2.New_Map_Type) is null;\n  procedure Bar;\nend;\n----\nwith Payloads;\npackage body Client is\n  procedure Bar is\n  begin\n     Foo (Maps2.New_Map_Type (Payloads.Get_Map.all));\n  end;\nend;\n\n2018-05-21  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_res.adb (Valid_Conversion): Improve error message on an illegal\n\ttype conversion whose expression has a limited view of a type.\n\nFrom-SVN: r260466", "tree": {"sha": "cc70f2f649a9342809957071fbb75959fdf5cf0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc70f2f649a9342809957071fbb75959fdf5cf0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/516057d379930306bc240b7b2b4eedb2c9bb1aeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/516057d379930306bc240b7b2b4eedb2c9bb1aeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/516057d379930306bc240b7b2b4eedb2c9bb1aeb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/516057d379930306bc240b7b2b4eedb2c9bb1aeb/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "def6e435f48990bcf8aebe9432b9b1aea593e4e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/def6e435f48990bcf8aebe9432b9b1aea593e4e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/def6e435f48990bcf8aebe9432b9b1aea593e4e9"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "5cbb973ecd9ef98e7e9a878ae81d23b86adede83", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/516057d379930306bc240b7b2b4eedb2c9bb1aeb/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/516057d379930306bc240b7b2b4eedb2c9bb1aeb/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=516057d379930306bc240b7b2b4eedb2c9bb1aeb", "patch": "@@ -1,3 +1,8 @@\n+2018-04-04  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_res.adb (Valid_Conversion): Improve error message on an illegal\n+\ttype conversion whose expression has a limited view of a type.\n+\n 2018-05-21  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_ch5.adb (Build_Formal_Container_Iteration): If source has"}, {"sha": "d31aca2b056bac085848a6b4db9d03b18fffc541", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 27, "deletions": 2, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/516057d379930306bc240b7b2b4eedb2c9bb1aeb/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/516057d379930306bc240b7b2b4eedb2c9bb1aeb/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=516057d379930306bc240b7b2b4eedb2c9bb1aeb", "patch": "@@ -13011,8 +13011,33 @@ package body Sem_Res is\n       --  Here we have a real conversion error\n \n       else\n-         Conversion_Error_NE\n-           (\"invalid conversion, not compatible with }\", N, Opnd_Type);\n+\n+         --  Check for missing regular with_clause when only a limited view\n+         --  of target is available.\n+\n+         if From_Limited_With (Opnd_Type)\n+           and then In_Package_Body\n+         then\n+            Conversion_Error_NE\n+              (\"invalid conversion, not compatible with limited view of }\",\n+                N, Opnd_Type);\n+            Conversion_Error_NE (\"\\add with_clause for& to current unit!\", N,\n+              Scope (Opnd_Type));\n+\n+         elsif Is_Access_Type (Opnd_Type)\n+           and then From_Limited_With (Designated_Type (Opnd_Type))\n+           and then In_Package_Body\n+         then\n+            Conversion_Error_NE\n+              (\"invalid conversion, not compatible with }\", N, Opnd_Type);\n+            Conversion_Error_NE (\"\\add with_clause for& to current unit!\", N,\n+              Scope (Designated_Type (Opnd_Type)));\n+\n+         else\n+            Conversion_Error_NE\n+              (\"invalid conversion, not compatible with }\", N, Opnd_Type);\n+         end if;\n+\n          return False;\n       end if;\n    end Valid_Conversion;"}]}