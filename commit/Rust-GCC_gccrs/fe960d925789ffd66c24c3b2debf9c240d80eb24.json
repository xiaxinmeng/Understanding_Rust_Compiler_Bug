{"sha": "fe960d925789ffd66c24c3b2debf9c240d80eb24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU5NjBkOTI1Nzg5ZmZkNjZjMjRjM2IyZGViZjljMjQwZDgwZWIyNA==", "commit": {"author": {"name": "Chris Fairles", "email": "cfairles@gcc.gnu.org", "date": "2009-02-06T06:01:40Z"}, "committer": {"name": "Chris Fairles", "email": "cfairles@gcc.gnu.org", "date": "2009-02-06T06:01:40Z"}, "message": "tuple (_Head_base<>::_Head_base(_UHead&&)): Formatting.\n\n2009-02-05  Chris Fairles  <cfairles@gcc.gnu.org>\n\n        * include/std/tuple (_Head_base<>::_Head_base(_UHead&&)): Formatting.\n        (_Head_base<>::__swap_impl): Rename to _M_swap_impl.\n        (_Tuple_impl<>::__swap_impl): Likewise and make protected to avoid\n        exposing it in public std::tuple interface.\n\nFrom-SVN: r143979", "tree": {"sha": "336e6df3fc4da8190017dfc6c161d0dbb56168d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/336e6df3fc4da8190017dfc6c161d0dbb56168d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe960d925789ffd66c24c3b2debf9c240d80eb24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe960d925789ffd66c24c3b2debf9c240d80eb24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe960d925789ffd66c24c3b2debf9c240d80eb24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe960d925789ffd66c24c3b2debf9c240d80eb24/comments", "author": null, "committer": null, "parents": [{"sha": "6d39673dce04f511bc7e764a6773c2c5da6b0178", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d39673dce04f511bc7e764a6773c2c5da6b0178", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d39673dce04f511bc7e764a6773c2c5da6b0178"}], "stats": {"total": 33, "additions": 21, "deletions": 12}, "files": [{"sha": "a54b4d8d26efe378c44cda91f0e42df913f48f91", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe960d925789ffd66c24c3b2debf9c240d80eb24/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe960d925789ffd66c24c3b2debf9c240d80eb24/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=fe960d925789ffd66c24c3b2debf9c240d80eb24", "patch": "@@ -1,3 +1,10 @@\n+2009-02-05  Chris Fairles  <cfairles@gcc.gnu.org>\n+\n+\t* include/std/tuple (_Head_base<>::_Head_base(_UHead&&)): Formatting.\n+\t(_Head_base<>::__swap_impl): Rename to _M_swap_impl.\n+\t(_Tuple_impl<>::__swap_impl): Likewise and make protected to avoid\n+\texposing it in public std::tuple interface.\n+\n 2009-02-05  Chris Fairles  <cfairles@gcc.gnu.org>\n \t    Benjamin Kosnik  <bkoz@redhat.com>\n \t"}, {"sha": "d8e74f2d97efa989ba0124baeaeebfbc5e0ce7a0", "filename": "libstdc++-v3/include/std/tuple", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe960d925789ffd66c24c3b2debf9c240d80eb24/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe960d925789ffd66c24c3b2debf9c240d80eb24/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftuple?ref=fe960d925789ffd66c24c3b2debf9c240d80eb24", "patch": "@@ -76,13 +76,13 @@ namespace std\n       : _Head(__h) { }\n \n       template<typename _UHead>\n-      _Head_base(_UHead&& __h)\n-      : _Head(std::forward<_UHead>(__h)) { }\n+        _Head_base(_UHead&& __h)\n+\t: _Head(std::forward<_UHead>(__h)) { }\n \n       _Head&       _M_head()       { return *this; }\n       const _Head& _M_head() const { return *this; }\n-\n-      void __swap_impl(_Head&&) { /* no-op */ }\n+    \n+      void _M_swap_impl(_Head&&) { /* no-op */ }\n     };\n \n   template<std::size_t _Idx, typename _Head>\n@@ -95,14 +95,14 @@ namespace std\n       : _M_head_impl(__h) { }\n \n       template<typename _UHead>\n-      _Head_base(_UHead&& __h)\n-      : _M_head_impl(std::forward<_UHead>(__h)) { }\n+        _Head_base(_UHead&& __h)\n+\t: _M_head_impl(std::forward<_UHead>(__h)) { }\n \n       _Head&       _M_head()       { return _M_head_impl; }\n       const _Head& _M_head() const { return _M_head_impl; }        \n \n       void\n-      __swap_impl(_Head&& __h)\n+      _M_swap_impl(_Head&& __h)\n       { \n \tusing std::swap;\n \tswap(__h, _M_head_impl);\n@@ -129,7 +129,8 @@ namespace std\n   template<std::size_t _Idx>\n     struct _Tuple_impl<_Idx>\n     { \n-      void __swap_impl(_Tuple_impl&&) { /* no-op */ }\n+    protected:\n+      void _M_swap_impl(_Tuple_impl&&) { /* no-op */ }\n     };\n \n   /**\n@@ -216,11 +217,12 @@ namespace std\n \t  return *this;\n \t}\n \n+    protected:\n       void\n-      __swap_impl(_Tuple_impl&& __in)\n+      _M_swap_impl(_Tuple_impl&& __in)\n       {\n-\t_Base::__swap_impl(__in._M_head());\n-\t_Inherited::__swap_impl(__in._M_tail());\n+\t_Base::_M_swap_impl(__in._M_head());\n+\t_Inherited::_M_swap_impl(__in._M_tail());\n       }\n     };\n \n@@ -296,7 +298,7 @@ namespace std\n \n       void\n       swap(tuple&& __in)\n-      { _Inherited::__swap_impl(__in); }\n+      { _Inherited::_M_swap_impl(__in); }\n     };\n \n "}]}