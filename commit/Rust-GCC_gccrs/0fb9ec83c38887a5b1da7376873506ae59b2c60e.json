{"sha": "0fb9ec83c38887a5b1da7376873506ae59b2c60e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZiOWVjODNjMzg4ODdhNWIxZGE3Mzc2ODczNTA2YWU1OWIyYzYwZQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2017-01-27T02:45:32Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2017-01-27T02:45:32Z"}, "message": "gimple-ssa-sprintf.c (format_floating): Simplify the computation of precision to avoid preprocessor conditional.\n\ngcc/ChangeLog:\n\t* gimple-ssa-sprintf.c (format_floating): Simplify the computation\n\tof precision to avoid preprocessor conditional.\n\nFrom-SVN: r244961", "tree": {"sha": "a9b1d8c981798fe12d8087eaba24062985520177", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9b1d8c981798fe12d8087eaba24062985520177"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fb9ec83c38887a5b1da7376873506ae59b2c60e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fb9ec83c38887a5b1da7376873506ae59b2c60e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fb9ec83c38887a5b1da7376873506ae59b2c60e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fb9ec83c38887a5b1da7376873506ae59b2c60e/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c1c3f4f25d15ab546e8a3f95adb4eb70f15d47bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1c3f4f25d15ab546e8a3f95adb4eb70f15d47bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1c3f4f25d15ab546e8a3f95adb4eb70f15d47bc"}], "stats": {"total": 23, "additions": 9, "deletions": 14}, "files": [{"sha": "c625d7bdb76c82925cb16077ca14fb5b96fcb3ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fb9ec83c38887a5b1da7376873506ae59b2c60e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fb9ec83c38887a5b1da7376873506ae59b2c60e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0fb9ec83c38887a5b1da7376873506ae59b2c60e", "patch": "@@ -1,3 +1,8 @@\n+2017-01-26  Martin Sebor  <msebor@redhat.com>\n+\n+\t* gimple-ssa-sprintf.c (format_floating): Simplify the computation\n+\tof precision.\n+\n 2017-01-26  Martin Sebor  <msebor@redhat.com>\n \n \t* gimple-ssa-sprintf.c (format_floating): Test HAVE_XFmode and"}, {"sha": "bd15a397ccffaeb57ca3841aa0bf5e1cbe080ee8", "filename": "gcc/gimple-ssa-sprintf.c", "status": "modified", "additions": 4, "deletions": 14, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fb9ec83c38887a5b1da7376873506ae59b2c60e/gcc%2Fgimple-ssa-sprintf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fb9ec83c38887a5b1da7376873506ae59b2c60e/gcc%2Fgimple-ssa-sprintf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-sprintf.c?ref=0fb9ec83c38887a5b1da7376873506ae59b2c60e", "patch": "@@ -1686,20 +1686,10 @@ format_floating (const directive &dir, tree arg)\n \tprec[0] = -1;\n       if (prec[1] < 0)\n \t{\n-#ifdef HAVE_XFmode\n-\t  /* When L is specified use long double, otherwise double.  */\n-\t  unsigned fmtprec\n-\t    = (dir.modifier == FMT_LEN_L\n-\t       ? REAL_MODE_FORMAT (XFmode)->p\n-\t       : REAL_MODE_FORMAT (DFmode)->p);\n-#elif defined HAVE_DFmode\n-\t  /* No long double support, use double precision for both.  */\n-\t  unsigned fmtprec = REAL_MODE_FORMAT (DFmode)->p;\n-#else\n-\t  /* No long double or double support.  */\n-\t  unsigned fmtprec = 0;\n-#endif\n-\t  /* The precision of the IEEE 754 double format is 53.\n+          unsigned fmtprec\n+\t    = REAL_MODE_FORMAT (TYPE_MODE (TREE_TYPE (arg)))->p;\n+\n+\t       /* The precision of the IEEE 754 double format is 53.\n \t     The precision of all other GCC binary double formats\n \t     is 56 or less.  */\n \t  prec[1] = fmtprec <= 56 ? 13 : 15;"}]}