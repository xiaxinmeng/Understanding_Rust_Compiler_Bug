{"sha": "262991d8268891984cef22fca55a21fb77269df0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjYyOTkxZDgyNjg4OTE5ODRjZWYyMmZjYTU1YTIxZmI3NzI2OWRmMA==", "commit": {"author": {"name": "Pascal Obry", "email": "obry@adacore.com", "date": "2009-04-20T09:19:08Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-20T09:19:08Z"}, "message": "adaint.c (__gnat_get_libraries_from_registry): Fix code to avoid warning.\n\n2009-04-20  Pascal Obry  <obry@adacore.com>\n\n\t* adaint.c (__gnat_get_libraries_from_registry): Fix code to\n\tavoid warning. At the same time fix a memory leak.\n\n\t* osint.adb (Get_Libraries_From_Registry): Properly free memory\n\treturned by the above routine.\n\nFrom-SVN: r146380", "tree": {"sha": "d5b7203bf030876f1af774832c6fe133d43e6559", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5b7203bf030876f1af774832c6fe133d43e6559"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/262991d8268891984cef22fca55a21fb77269df0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/262991d8268891984cef22fca55a21fb77269df0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/262991d8268891984cef22fca55a21fb77269df0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/262991d8268891984cef22fca55a21fb77269df0/comments", "author": {"login": "TurboGit", "id": 467069, "node_id": "MDQ6VXNlcjQ2NzA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/467069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TurboGit", "html_url": "https://github.com/TurboGit", "followers_url": "https://api.github.com/users/TurboGit/followers", "following_url": "https://api.github.com/users/TurboGit/following{/other_user}", "gists_url": "https://api.github.com/users/TurboGit/gists{/gist_id}", "starred_url": "https://api.github.com/users/TurboGit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TurboGit/subscriptions", "organizations_url": "https://api.github.com/users/TurboGit/orgs", "repos_url": "https://api.github.com/users/TurboGit/repos", "events_url": "https://api.github.com/users/TurboGit/events{/privacy}", "received_events_url": "https://api.github.com/users/TurboGit/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d0f8d157fe68d5b224ba52e8891e17c1eb38d4de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0f8d157fe68d5b224ba52e8891e17c1eb38d4de"}], "stats": {"total": 151, "additions": 83, "deletions": 68}, "files": [{"sha": "68478df86cf763ea20aaf73de583b41ca23b920f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/262991d8268891984cef22fca55a21fb77269df0/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/262991d8268891984cef22fca55a21fb77269df0/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=262991d8268891984cef22fca55a21fb77269df0", "patch": "@@ -1,3 +1,11 @@\n+2009-04-20  Pascal Obry  <obry@adacore.com>\n+\n+\t* adaint.c (__gnat_get_libraries_from_registry): Fix code to\n+\tavoid warning. At the same time fix a memory leak.\n+\n+\t* osint.adb (Get_Libraries_From_Registry): Properly free memory\n+\treturned by the above routine.\n+\n 2009-04-20  Robert Dewar  <dewar@adacore.com>\n \n \t* s-conca5.adb, s-conca5.ads, s-conca7.adb, s-conca7.ads, s-conca9.adb,\n@@ -11,8 +19,7 @@\n \n \t* initialize.c (__gnat_initialize): Add braces to kill warning.\n \n-\t* adaint.c: Minor reformatting, untabify, remove trailing spaces.\n-\n+\t* adaint.c: Minor reformatting, remove trailing spaces.\n \n 2009-04-17  Arnaud Charlet  <charlet@adacore.com>\n "}, {"sha": "4977297141781e8b72e050ff1c4fb01a7ae1df1e", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 68, "deletions": 66, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/262991d8268891984cef22fca55a21fb77269df0/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/262991d8268891984cef22fca55a21fb77269df0/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=262991d8268891984cef22fca55a21fb77269df0", "patch": "@@ -1583,7 +1583,9 @@ __gnat_set_file_time_name (char *name, time_t time_stamp)\n char *\n __gnat_get_libraries_from_registry (void)\n {\n-  char *result = (char *) \"\";\n+  char *result = (char *) xmalloc (1);\n+\n+  result[0] = '\\0';\n \n #if defined (_WIN32) && ! defined (__vxworks) && ! defined (IS_CROSS) \\\n   && ! defined (RTX)\n@@ -1611,7 +1613,6 @@ __gnat_get_libraries_from_registry (void)\n \n   /* If the key exists, read out all the values in it and concatenate them\n      into a path.  */\n-\n   for (index = 0; res == ERROR_SUCCESS; index++)\n     {\n       value_size = name_size = 256;\n@@ -1626,14 +1627,15 @@ __gnat_get_libraries_from_registry (void)\n           strcpy (result, old_result);\n           strcat (result, value);\n           strcat (result, \";\");\n+          free (old_result);\n         }\n     }\n \n   /* Remove the trailing \";\".  */\n   if (result[0] != 0)\n     result[strlen (result) - 1] = 0;\n-#endif\n \n+#endif\n   return result;\n }\n \n@@ -1723,7 +1725,7 @@ __gnat_is_absolute_path (char *name, int length)\n #if defined (__EMX__) || defined (MSDOS) || defined (WINNT)\n       || (length > 1 && ISALPHA (name[0]) && name[1] == ':')\n #endif\n-          );\n+\t  );\n #endif\n }\n \n@@ -1774,34 +1776,34 @@ GetDriveTypeFromPath (TCHAR *wfullpath)\n \n       /* Is this a relative path, if so get current drive type. */\n       if (wpath[0] != _T('\\\\') ||\n-          (_tcslen (wpath) > 2 && wpath[0] == _T('\\\\') && wpath[1] != _T('\\\\')))\n-        return GetDriveType (NULL);\n+\t  (_tcslen (wpath) > 2 && wpath[0] == _T('\\\\') && wpath[1] != _T('\\\\')))\n+\treturn GetDriveType (NULL);\n \n       UINT result = GetDriveType (wpath);\n \n       /* Cannot guess the drive type, is this \\\\.\\ ? */\n \n       if (result == DRIVE_NO_ROOT_DIR &&\n-         _tcslen (wpath) >= 4 && wpath[0] == _T('\\\\') && wpath[1] == _T('\\\\')\n-          && wpath[2] == _T('.') && wpath[3] == _T('\\\\'))\n-        {\n-          if (_tcslen (wpath) == 4)\n-            _tcscat (wpath, wfilename);\n-\n-          LPTSTR p = &wpath[4];\n-          LPTSTR b = _tcschr (p, _T('\\\\'));\n-\n-          if (b != NULL)\n-            { /* logical drive \\\\.\\c\\dir\\file */\n-              *b++ = _T(':');\n-              *b++ = _T('\\\\');\n-              *b = _T('\\0');\n-            }\n-          else\n-            _tcscat (p, _T(\":\\\\\"));\n-\n-          return GetDriveType (p);\n-        }\n+\t _tcslen (wpath) >= 4 && wpath[0] == _T('\\\\') && wpath[1] == _T('\\\\')\n+\t  && wpath[2] == _T('.') && wpath[3] == _T('\\\\'))\n+\t{\n+\t  if (_tcslen (wpath) == 4)\n+\t    _tcscat (wpath, wfilename);\n+\n+\t  LPTSTR p = &wpath[4];\n+\t  LPTSTR b = _tcschr (p, _T('\\\\'));\n+\n+\t  if (b != NULL)\n+\t    { /* logical drive \\\\.\\c\\dir\\file */\n+\t      *b++ = _T(':');\n+\t      *b++ = _T('\\\\');\n+\t      *b = _T('\\0');\n+\t    }\n+\t  else\n+\t    _tcscat (p, _T(\":\\\\\"));\n+\n+\t  return GetDriveType (p);\n+\t}\n \n       return result;\n     }\n@@ -1901,9 +1903,9 @@ __gnat_set_OWNER_ACL\n   if (AccessMode == SET_ACCESS)\n     {\n       /*  SET_ACCESS, we want to set an explicte set of permissions, do not\n-          merge with current DACL.  */\n+\t  merge with current DACL.  */\n       if (SetEntriesInAcl (1, &ea, NULL, &pNewDACL) != ERROR_SUCCESS)\n-        return;\n+\treturn;\n     }\n   else\n     if (SetEntriesInAcl (1, &ea, pOldDACL, &pNewDACL) != ERROR_SUCCESS)\n@@ -1974,8 +1976,8 @@ __gnat_is_writable_file (char *name)\n       GenericMapping.GenericWrite = GENERIC_WRITE;\n \n       return __gnat_check_OWNER_ACL\n-        (wname, FILE_WRITE_DATA | FILE_APPEND_DATA, GenericMapping)\n-        && !(GetFileAttributes (wname) & FILE_ATTRIBUTE_READONLY);\n+\t(wname, FILE_WRITE_DATA | FILE_APPEND_DATA, GenericMapping)\n+\t&& !(GetFileAttributes (wname) & FILE_ATTRIBUTE_READONLY);\n     }\n   else\n     return !(GetFileAttributes (wname) & FILE_ATTRIBUTE_READONLY);\n@@ -2208,9 +2210,9 @@ __gnat_portable_spawn (char *args[])\n       /* The child. */\n       if (execv (args[0], MAYBE_TO_PTR32 (args)) != 0)\n #if defined (VMS)\n-        return -1; /* execv is in parent context on VMS.  */\n+\treturn -1; /* execv is in parent context on VMS.  */\n #else\n-        _exit (1);\n+\t_exit (1);\n #endif\n     }\n #endif\n@@ -2328,9 +2330,9 @@ remove_handle (HANDLE h)\n       if (pl->h == h)\n         {\n           if (pl == PLIST)\n-            PLIST = pl->next;\n+\t    PLIST = pl->next;\n           else\n-            prev->next = pl->next;\n+\t    prev->next = pl->next;\n           free (pl);\n           break;\n         }\n@@ -2505,9 +2507,9 @@ __gnat_portable_no_block_spawn (char *args[])\n       /* The child.  */\n       if (execv (args[0], MAYBE_TO_PTR32 (args)) != 0)\n #if defined (VMS)\n-        return -1; /* execv is in parent context on VMS. */\n+\treturn -1; /* execv is in parent context on VMS. */\n #else\n-        _exit (1);\n+\t_exit (1);\n #endif\n     }\n \n@@ -2617,17 +2619,17 @@ __gnat_locate_regular_file (char *file_name, char *path_val)\n       /* Skip the starting quote */\n \n       if (*path_val == '\"')\n-        path_val++;\n+\tpath_val++;\n \n       for (ptr = file_path; *path_val && *path_val != PATH_SEPARATOR; )\n-        *ptr++ = *path_val++;\n+\t*ptr++ = *path_val++;\n \n       ptr--;\n \n       /* Skip the ending quote */\n \n       if (*ptr == '\"')\n-        ptr--;\n+\tptr--;\n \n       if (*ptr != '/' && *ptr != DIR_SEPARATOR)\n         *++ptr = DIR_SEPARATOR;\n@@ -2755,8 +2757,8 @@ wildcard_translate_unix (char *name)\n     {\n       new_canonical_filelist_allocated += NEW_CANONICAL_FILELIST_INCREMENT;\n       new_canonical_filelist = (char **) xrealloc\n-        (new_canonical_filelist,\n-         new_canonical_filelist_allocated * sizeof (char *));\n+\t(new_canonical_filelist,\n+\t new_canonical_filelist_allocated * sizeof (char *));\n     }\n \n   new_canonical_filelist[new_canonical_filelist_in_use++] = xstrdup (buff);\n@@ -2792,11 +2794,11 @@ __gnat_to_canonical_file_list_init (char *filespec, int onlydirs)\n       char *ext;\n \n       for (i = 0; i < new_canonical_filelist_in_use; i++)\n-        {\n-          ext = strstr (new_canonical_filelist[i], \".dir\");\n-          if (ext)\n-            *ext = 0;\n-        }\n+\t{\n+\t  ext = strstr (new_canonical_filelist[i], \".dir\");\n+\t  if (ext)\n+\t    *ext = 0;\n+\t}\n     }\n \n   return new_canonical_filelist_in_use;\n@@ -2975,21 +2977,21 @@ __gnat_to_canonical_dir_spec (char *dirspec, int prefixflag)\n       char *dirspec1;\n \n       if (strchr (dirspec, ']') || strchr (dirspec, ':'))\n-        {\n-          strncpy (new_canonical_dirspec,\n-                   __gnat_translate_vms (dirspec),\n-                   MAXPATH);\n-        }\n+\t{\n+\t  strncpy (new_canonical_dirspec,\n+\t\t   __gnat_translate_vms (dirspec),\n+\t\t   MAXPATH);\n+\t}\n       else if (!strchr (dirspec, '/') && (dirspec1 = getenv (dirspec)) != 0)\n-        {\n-          strncpy (new_canonical_dirspec,\n-                  __gnat_translate_vms (dirspec1),\n-                  MAXPATH);\n-        }\n+\t{\n+\t  strncpy (new_canonical_dirspec,\n+\t\t  __gnat_translate_vms (dirspec1),\n+\t\t  MAXPATH);\n+\t}\n       else\n-        {\n-          strncpy (new_canonical_dirspec, dirspec, MAXPATH);\n-        }\n+\t{\n+\t  strncpy (new_canonical_dirspec, dirspec, MAXPATH);\n+\t}\n     }\n \n   len = strlen (new_canonical_dirspec);\n@@ -3020,16 +3022,16 @@ __gnat_to_canonical_file_spec (char *filespec)\n       char *tspec = (char *) __gnat_translate_vms (filespec);\n \n       if (tspec != (char *) -1)\n-        strncpy (new_canonical_filespec, tspec, MAXPATH);\n+\tstrncpy (new_canonical_filespec, tspec, MAXPATH);\n     }\n   else if ((strlen (filespec) == strspn (filespec,\n-            \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_\"))\n-        && (filespec1 = getenv (filespec)))\n+\t    \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_\"))\n+\t&& (filespec1 = getenv (filespec)))\n     {\n       char *tspec = (char *) __gnat_translate_vms (filespec1);\n \n       if (tspec != (char *) -1)\n-        strncpy (new_canonical_filespec, tspec, MAXPATH);\n+\tstrncpy (new_canonical_filespec, tspec, MAXPATH);\n     }\n   else\n     {\n@@ -3086,11 +3088,11 @@ __gnat_to_canonical_path_spec (char *pathspec)\n                 strncat (new_canonical_pathspec, \":\", MAXPATH);\n             }\n \n-          __gnat_to_canonical_file_list_free ();\n+\t  __gnat_to_canonical_file_list_free ();\n         }\n       else\n-        strncat (new_canonical_pathspec,\n-                __gnat_to_canonical_dir_spec (buff, 0), MAXPATH);\n+\tstrncat (new_canonical_pathspec,\n+\t\t__gnat_to_canonical_dir_spec (buff, 0), MAXPATH);\n \n       if (*next == 0)\n         break;"}, {"sha": "04e2919cc24ec8f8077d10e4aea550d88ce1ce10", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/262991d8268891984cef22fca55a21fb77269df0/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/262991d8268891984cef22fca55a21fb77269df0/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=262991d8268891984cef22fca55a21fb77269df0", "patch": "@@ -373,6 +373,9 @@ package body Osint is\n          procedure Strncpy (X : Address; Y : Address; Length : Integer);\n          pragma Import (C, Strncpy, \"strncpy\");\n \n+         procedure C_Free (Str : Address);\n+         pragma Import (C, C_Free, \"free\");\n+\n          Result_Ptr    : Address;\n          Result_Length : Integer;\n          Out_String    : String_Ptr;\n@@ -383,6 +386,9 @@ package body Osint is\n \n          Out_String := new String (1 .. Result_Length);\n          Strncpy (Out_String.all'Address, Result_Ptr, Result_Length);\n+\n+         C_Free (Result_Ptr);\n+\n          return Out_String;\n       end Get_Libraries_From_Registry;\n "}]}