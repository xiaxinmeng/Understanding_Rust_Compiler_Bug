{"sha": "1200933cccdd1bbab4758560f36809f46434294a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTIwMDkzM2NjY2RkMWJiYWI0NzU4NTYwZjM2ODA5ZjQ2NDM0Mjk0YQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2014-01-29T20:54:09Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-01-29T20:54:09Z"}, "message": "re PR c++/58561 ([c++11] ICE using declaration of function with auto in return type)\n\n2014-01-29  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/58561\n\t* dwarf2out.c (is_cxx_auto): New.\n\t(is_base_type): Use it.\n\t(gen_type_die_with_usage): Likewise.\n\n/testsuite\n2014-01-29  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/58561\n\t* g++.dg/cpp1y/auto-fn23.C: New.\n\nFrom-SVN: r207282", "tree": {"sha": "43560713e5a7f2a35f9db15893e66276d46a3fd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43560713e5a7f2a35f9db15893e66276d46a3fd1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1200933cccdd1bbab4758560f36809f46434294a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1200933cccdd1bbab4758560f36809f46434294a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1200933cccdd1bbab4758560f36809f46434294a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1200933cccdd1bbab4758560f36809f46434294a/comments", "author": null, "committer": null, "parents": [{"sha": "7651c656858e4c80febb67e1742c0aa0d716e1a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7651c656858e4c80febb67e1742c0aa0d716e1a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7651c656858e4c80febb67e1742c0aa0d716e1a1"}], "stats": {"total": 62, "additions": 47, "deletions": 15}, "files": [{"sha": "71fd8e6e301fc73a7aa7ee3631c1e51e382386c7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1200933cccdd1bbab4758560f36809f46434294a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1200933cccdd1bbab4758560f36809f46434294a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1200933cccdd1bbab4758560f36809f46434294a", "patch": "@@ -1,3 +1,10 @@\n+2014-01-29  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/58561\n+\t* dwarf2out.c (is_cxx_auto): New.\n+\t(is_base_type): Use it.\n+\t(gen_type_die_with_usage): Likewise.\n+\n 2014-01-29  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs6000.c (altivec_expand_vec_perm_const):  Use"}, {"sha": "d1ca4ba8bd640dfba0cfd40bb8e49f56eab45c59", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 26, "deletions": 15, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1200933cccdd1bbab4758560f36809f46434294a/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1200933cccdd1bbab4758560f36809f46434294a/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=1200933cccdd1bbab4758560f36809f46434294a", "patch": "@@ -10219,6 +10219,23 @@ base_type_die (tree type)\n   return base_type_result;\n }\n \n+/* A C++ function with deduced return type can have a TEMPLATE_TYPE_PARM\n+   named 'auto' in its type: return true for it, false otherwise.  */\n+\n+static inline bool\n+is_cxx_auto (tree type)\n+{\n+  if (is_cxx ())\n+    {\n+      tree name = TYPE_NAME (type);\n+      if (TREE_CODE (name) == TYPE_DECL)\n+\tname = DECL_NAME (name);\n+      if (name == get_identifier (\"auto\"))\n+\treturn true;\n+    }\n+  return false;\n+}\n+\n /* Given a pointer to an arbitrary ..._TYPE tree node, return nonzero if the\n    given input type is a Dwarf \"fundamental\" type.  Otherwise return null.  */\n \n@@ -10252,6 +10269,8 @@ is_base_type (tree type)\n       return 0;\n \n     default:\n+      if (is_cxx_auto (type))\n+\treturn 0;\n       gcc_unreachable ();\n     }\n \n@@ -19830,24 +19849,16 @@ gen_type_die_with_usage (tree type, dw_die_ref context_die,\n       break;\n \n     default:\n-      // A C++ function with deduced return type can have\n-      // a TEMPLATE_TYPE_PARM named 'auto' in its type.\n-      if (is_cxx ())\n+      if (is_cxx_auto (type))\n \t{\n-\t  tree name = TYPE_NAME (type);\n-\t  if (TREE_CODE (name) == TYPE_DECL)\n-\t    name = DECL_NAME (name);\n-\t  if (name == get_identifier (\"auto\"))\n+\t  if (!auto_die)\n \t    {\n-\t      if (!auto_die)\n-\t\t{\n-\t\t  auto_die = new_die (DW_TAG_unspecified_type,\n-\t\t\t\t      comp_unit_die (), NULL_TREE);\n-\t\t  add_name_attribute (auto_die, \"auto\");\n-\t\t}\n-\t      equate_type_number_to_die (type, auto_die);\n-\t      break;\n+\t      auto_die = new_die (DW_TAG_unspecified_type,\n+\t\t\t\t  comp_unit_die (), NULL_TREE);\n+\t      add_name_attribute (auto_die, \"auto\");\n \t    }\n+\t  equate_type_number_to_die (type, auto_die);\n+\t  break;\n \t}\n       gcc_unreachable ();\n     }"}, {"sha": "62bcc3131ca16b5b19c5db7dc860f3986608677e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1200933cccdd1bbab4758560f36809f46434294a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1200933cccdd1bbab4758560f36809f46434294a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1200933cccdd1bbab4758560f36809f46434294a", "patch": "@@ -1,3 +1,8 @@\n+2014-01-29  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/58561\n+\t* g++.dg/cpp1y/auto-fn23.C: New.\n+\n 2014-01-29  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/58846"}, {"sha": "57503d7612eafbf350b68db96491ad253ebe61d9", "filename": "gcc/testsuite/g++.dg/cpp1y/auto-fn23.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1200933cccdd1bbab4758560f36809f46434294a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1200933cccdd1bbab4758560f36809f46434294a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fauto-fn23.C?ref=1200933cccdd1bbab4758560f36809f46434294a", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/58561\n+// { dg-options \"-std=c++1y -g\" }\n+\n+auto foo();\n+\n+namespace N\n+{\n+  using ::foo;\n+}"}]}