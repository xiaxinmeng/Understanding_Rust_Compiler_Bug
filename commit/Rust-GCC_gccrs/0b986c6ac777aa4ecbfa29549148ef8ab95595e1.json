{"sha": "0b986c6ac777aa4ecbfa29549148ef8ab95595e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI5ODZjNmFjNzc3YWE0ZWNiZmEyOTU0OTE0OGVmOGFiOTU1OTVlMQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2015-02-04T20:28:49Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-02-04T20:28:49Z"}, "message": "re PR middle-end/64922 (runtime error: member call on misaligned address for type 'struct _Rep')\n\n\n\tPR middle-end/64922\n\t* gimple.c: Include gimple-ssa.h.\n\t(maybe_remove_unused_call_args): New function.\n\t* gimple.h (maybe_remove_unused_call_args): Declare.\n\t* cgraph.c (cgraph_edge::redirect_call_stmt_to_callee): Use it.\n\t* tree-ssa-pre.c (eliminate_dom_walker::before_dom_children): Likewise.\n\t* gimple-fold.c (gimple_fold_call): Likewise.\n\nFrom-SVN: r220417", "tree": {"sha": "47e63aafd9dc2bb56b66e8efb608e43a446ccad6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47e63aafd9dc2bb56b66e8efb608e43a446ccad6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b986c6ac777aa4ecbfa29549148ef8ab95595e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b986c6ac777aa4ecbfa29549148ef8ab95595e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b986c6ac777aa4ecbfa29549148ef8ab95595e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b986c6ac777aa4ecbfa29549148ef8ab95595e1/comments", "author": null, "committer": null, "parents": [{"sha": "d303ff9764d326120bfd05eb75e82e66fd12ade3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d303ff9764d326120bfd05eb75e82e66fd12ade3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d303ff9764d326120bfd05eb75e82e66fd12ade3"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "755ff3e53773a439d13fbc65714a49b48dc573f4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b986c6ac777aa4ecbfa29549148ef8ab95595e1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b986c6ac777aa4ecbfa29549148ef8ab95595e1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0b986c6ac777aa4ecbfa29549148ef8ab95595e1", "patch": "@@ -1,3 +1,13 @@\n+2015-02-04  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR middle-end/64922\n+\t* gimple.c: Include gimple-ssa.h.\n+\t(maybe_remove_unused_call_args): New function.\n+\t* gimple.h (maybe_remove_unused_call_args): Declare.\n+\t* cgraph.c (cgraph_edge::redirect_call_stmt_to_callee): Use it.\n+\t* tree-ssa-pre.c (eliminate_dom_walker::before_dom_children): Likewise.\n+\t* gimple-fold.c (gimple_fold_call): Likewise.\n+\n 2015-02-04  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR rtl-optimization/64905"}, {"sha": "8ea8ae937142a6b439cfde9b7ded2ceee390a7ec", "filename": "gcc/cgraph.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b986c6ac777aa4ecbfa29549148ef8ab95595e1/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b986c6ac777aa4ecbfa29549148ef8ab95595e1/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=0b986c6ac777aa4ecbfa29549148ef8ab95595e1", "patch": "@@ -1324,7 +1324,8 @@ cgraph_edge::redirect_call_stmt_to_callee (void)\n \t\t     (int64_t)e->count);\n \t  gcc_assert (e2->speculative);\n \t  push_cfun (DECL_STRUCT_FUNCTION (e->caller->decl));\n-\t  new_stmt = gimple_ic (e->call_stmt, dyn_cast<cgraph_node *> (ref->referred),\n+\t  new_stmt = gimple_ic (e->call_stmt,\n+\t\t\t\tdyn_cast<cgraph_node *> (ref->referred),\n \t\t\t\te->count || e2->count\n \t\t\t\t?  RDIV (e->count * REG_BR_PROB_BASE,\n \t\t\t\t\t e->count + e2->count)\n@@ -1464,6 +1465,9 @@ cgraph_edge::redirect_call_stmt_to_callee (void)\n       update_stmt_fn (DECL_STRUCT_FUNCTION (e->caller->decl), new_stmt);\n     }\n \n+  maybe_remove_unused_call_args (DECL_STRUCT_FUNCTION (e->caller->decl),\n+\t\t\t\t new_stmt);\n+\n   e->caller->set_call_stmt_including_clones (e->call_stmt, new_stmt, false);\n \n   if (symtab->dump_file)"}, {"sha": "f89220c5a68a89576f586de581797b61df3814f1", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b986c6ac777aa4ecbfa29549148ef8ab95595e1/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b986c6ac777aa4ecbfa29549148ef8ab95595e1/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=0b986c6ac777aa4ecbfa29549148ef8ab95595e1", "patch": "@@ -3120,6 +3120,7 @@ gimple_fold_call (gimple_stmt_iterator *gsi, bool inplace)\n \t\t\t}\n \t\t      gimple_call_set_lhs (stmt, NULL_TREE);\n \t\t    }\n+\t\t  maybe_remove_unused_call_args (cfun, stmt);\n \t\t}\n \t      else\n \t\t{"}, {"sha": "a5c1192f776f22ac3ae302cb56ad955d2fd1f63f", "filename": "gcc/gimple.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b986c6ac777aa4ecbfa29549148ef8ab95595e1/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b986c6ac777aa4ecbfa29549148ef8ab95595e1/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=0b986c6ac777aa4ecbfa29549148ef8ab95595e1", "patch": "@@ -67,6 +67,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ipa-ref.h\"\n #include \"lto-streamer.h\"\n #include \"cgraph.h\"\n+#include \"gimple-ssa.h\"\n \n \n /* All the tuples have their operand vector (if present) at the very bottom\n@@ -2950,3 +2951,20 @@ gimple_seq_discard (gimple_seq seq)\n       ggc_free (stmt);\n     }\n }\n+\n+/* See if STMT now calls function that takes no parameters and if so, drop\n+   call arguments.  This is used when devirtualization machinery redirects\n+   to __builtiln_unreacahble or __cxa_pure_virutal.  */\n+\n+void\n+maybe_remove_unused_call_args (struct function *fn, gimple stmt)\n+{\n+  tree decl = gimple_call_fndecl (stmt);\n+  if (TYPE_ARG_TYPES (TREE_TYPE (decl))\n+      && TREE_VALUE (TYPE_ARG_TYPES (TREE_TYPE (decl))) == void_type_node\n+      && gimple_call_num_args (stmt))\n+    {\n+      gimple_set_num_ops (stmt, 3);\n+      update_stmt_fn (fn, stmt);\n+    }\n+}"}, {"sha": "5503625c9f1788816a4f63dabe0cc5ed3e698bca", "filename": "gcc/gimple.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b986c6ac777aa4ecbfa29549148ef8ab95595e1/gcc%2Fgimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b986c6ac777aa4ecbfa29549148ef8ab95595e1/gcc%2Fgimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.h?ref=0b986c6ac777aa4ecbfa29549148ef8ab95595e1", "patch": "@@ -1404,6 +1404,7 @@ extern void sort_case_labels (vec<tree>);\n extern void preprocess_case_label_vec_for_gimple (vec<tree>, tree, tree *);\n extern void gimple_seq_set_location (gimple_seq, location_t);\n extern void gimple_seq_discard (gimple_seq);\n+extern void maybe_remove_unused_call_args (struct function *, gimple);\n \n /* Formal (expression) temporary table handling: multiple occurrences of\n    the same scalar expression are evaluated into the same temporary.  */"}, {"sha": "83b48df8b4e390833912ae53e0b1354d18d7bcfe", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b986c6ac777aa4ecbfa29549148ef8ab95595e1/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b986c6ac777aa4ecbfa29549148ef8ab95595e1/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=0b986c6ac777aa4ecbfa29549148ef8ab95595e1", "patch": "@@ -4406,6 +4406,7 @@ eliminate_dom_walker::before_dom_children (basic_block b)\n \t\t\t\t       cgraph_node::get (fn)->name ());\n \t\t    }\n \t\t  gimple_call_set_fndecl (call_stmt, fn);\n+\t\t  maybe_remove_unused_call_args (cfun, call_stmt);\n \t\t  gimple_set_modified (stmt, true);\n \t\t}\n \t    }"}]}