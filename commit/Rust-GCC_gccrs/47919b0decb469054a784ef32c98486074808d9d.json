{"sha": "47919b0decb469054a784ef32c98486074808d9d", "node_id": "C_kwDOANBUbNoAKDQ3OTE5YjBkZWNiNDY5MDU0YTc4NGVmMzJjOTg0ODYwNzQ4MDhkOWQ", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-02-14T14:23:55Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-15T13:42:09Z"}, "message": "RISC-V: Add vnmsac vv c++ api tests\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.target/riscv/rvv/base/vnmsac_vv-1.C: New test.\n\t* g++.target/riscv/rvv/base/vnmsac_vv-2.C: New test.\n\t* g++.target/riscv/rvv/base/vnmsac_vv-3.C: New test.\n\t* g++.target/riscv/rvv/base/vnmsac_vv_mu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vnmsac_vv_mu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vnmsac_vv_mu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vnmsac_vv_tu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vnmsac_vv_tu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vnmsac_vv_tu-3.C: New test.\n\t* g++.target/riscv/rvv/base/vnmsac_vv_tum-1.C: New test.\n\t* g++.target/riscv/rvv/base/vnmsac_vv_tum-2.C: New test.\n\t* g++.target/riscv/rvv/base/vnmsac_vv_tum-3.C: New test.\n\t* g++.target/riscv/rvv/base/vnmsac_vv_tumu-1.C: New test.\n\t* g++.target/riscv/rvv/base/vnmsac_vv_tumu-2.C: New test.\n\t* g++.target/riscv/rvv/base/vnmsac_vv_tumu-3.C: New test.", "tree": {"sha": "93957feea1461cdfa60ddfcbcf3e4e01a9845783", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93957feea1461cdfa60ddfcbcf3e4e01a9845783"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/47919b0decb469054a784ef32c98486074808d9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47919b0decb469054a784ef32c98486074808d9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47919b0decb469054a784ef32c98486074808d9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47919b0decb469054a784ef32c98486074808d9d/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fd29de569b0644b13e437b2b4eb072c076a159f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fd29de569b0644b13e437b2b4eb072c076a159f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fd29de569b0644b13e437b2b4eb072c076a159f"}], "stats": {"total": 5238, "additions": 5238, "deletions": 0}, "files": [{"sha": "c8be480f24a428e055cdf4db09d8eb40f4af1d70", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vnmsac_vv-1.C", "status": "added", "additions": 578, "deletions": 0, "changes": 578, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv-1.C?ref=47919b0decb469054a784ef32c98486074808d9d", "patch": "@@ -0,0 +1,578 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac(vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac(vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac(vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac(vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac(vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac(vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac(vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac(vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac(vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac(vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac(vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac(vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac(vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac(vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac(vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac(vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac(vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac(vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac(vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac(vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac(vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac(vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac(vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac(vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac(vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac(vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac(vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac(vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac(vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac(vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac(vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac(vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac(vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac(vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac(vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac(vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac(vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac(vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac(vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac(vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac(vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac(vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac(vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac(vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8mf8_t test___riscv_vnmsac(vbool64_t mask,vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac(vbool32_t mask,vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac(vbool16_t mask,vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac(vbool8_t mask,vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac(vbool4_t mask,vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac(vbool2_t mask,vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac(vbool1_t mask,vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac(vbool64_t mask,vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac(vbool32_t mask,vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac(vbool16_t mask,vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac(vbool8_t mask,vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac(vbool4_t mask,vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac(vbool2_t mask,vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac(vbool64_t mask,vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac(vbool32_t mask,vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac(vbool16_t mask,vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac(vbool8_t mask,vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac(vbool4_t mask,vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac(vbool64_t mask,vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac(vbool32_t mask,vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac(vbool16_t mask,vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac(vbool8_t mask,vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac(vbool64_t mask,vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac(vbool32_t mask,vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac(vbool16_t mask,vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac(vbool8_t mask,vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac(vbool4_t mask,vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac(vbool2_t mask,vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac(vbool1_t mask,vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac(vbool64_t mask,vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac(vbool32_t mask,vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac(vbool16_t mask,vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac(vbool8_t mask,vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac(vbool4_t mask,vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac(vbool2_t mask,vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac(vbool64_t mask,vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac(vbool32_t mask,vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac(vbool16_t mask,vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac(vbool8_t mask,vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac(vbool4_t mask,vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac(vbool64_t mask,vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac(vbool32_t mask,vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac(vbool16_t mask,vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac(vbool8_t mask,vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */"}, {"sha": "5216084de112403522ff040616e9c2c46d815065", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vnmsac_vv-2.C", "status": "added", "additions": 578, "deletions": 0, "changes": 578, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv-2.C?ref=47919b0decb469054a784ef32c98486074808d9d", "patch": "@@ -0,0 +1,578 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac(vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac(vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac(vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac(vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac(vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac(vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac(vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac(vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac(vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac(vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac(vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac(vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac(vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac(vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac(vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac(vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac(vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac(vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac(vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac(vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac(vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac(vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac(vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac(vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac(vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac(vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac(vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac(vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac(vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac(vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac(vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac(vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac(vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac(vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac(vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac(vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac(vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac(vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac(vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac(vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac(vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac(vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac(vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac(vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,31);\n+}\n+\n+\n+vint8mf8_t test___riscv_vnmsac(vbool64_t mask,vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac(vbool32_t mask,vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac(vbool16_t mask,vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac(vbool8_t mask,vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac(vbool4_t mask,vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac(vbool2_t mask,vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac(vbool1_t mask,vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac(vbool64_t mask,vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac(vbool32_t mask,vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac(vbool16_t mask,vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac(vbool8_t mask,vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac(vbool4_t mask,vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac(vbool2_t mask,vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac(vbool64_t mask,vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac(vbool32_t mask,vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac(vbool16_t mask,vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac(vbool8_t mask,vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac(vbool4_t mask,vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac(vbool64_t mask,vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac(vbool32_t mask,vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac(vbool16_t mask,vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac(vbool8_t mask,vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac(vbool64_t mask,vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac(vbool32_t mask,vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac(vbool16_t mask,vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac(vbool8_t mask,vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac(vbool4_t mask,vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac(vbool2_t mask,vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac(vbool1_t mask,vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac(vbool64_t mask,vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac(vbool32_t mask,vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac(vbool16_t mask,vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac(vbool8_t mask,vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac(vbool4_t mask,vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac(vbool2_t mask,vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac(vbool64_t mask,vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac(vbool32_t mask,vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac(vbool16_t mask,vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac(vbool8_t mask,vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac(vbool4_t mask,vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac(vbool64_t mask,vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac(vbool32_t mask,vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac(vbool16_t mask,vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac(vbool8_t mask,vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */"}, {"sha": "bf7d533c2e2d3ca41ee9aec3f78f0deabee3929e", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vnmsac_vv-3.C", "status": "added", "additions": 578, "deletions": 0, "changes": 578, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv-3.C?ref=47919b0decb469054a784ef32c98486074808d9d", "patch": "@@ -0,0 +1,578 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac(vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac(vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac(vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac(vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac(vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac(vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac(vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac(vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac(vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac(vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac(vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac(vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac(vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac(vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac(vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac(vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac(vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac(vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac(vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac(vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac(vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac(vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac(vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac(vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac(vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac(vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac(vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac(vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac(vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac(vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac(vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac(vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac(vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac(vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac(vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac(vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac(vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac(vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac(vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac(vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac(vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac(vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac(vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac(vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(vd,vs1,vs2,32);\n+}\n+\n+\n+vint8mf8_t test___riscv_vnmsac(vbool64_t mask,vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac(vbool32_t mask,vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac(vbool16_t mask,vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac(vbool8_t mask,vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac(vbool4_t mask,vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac(vbool2_t mask,vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac(vbool1_t mask,vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac(vbool64_t mask,vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac(vbool32_t mask,vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac(vbool16_t mask,vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac(vbool8_t mask,vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac(vbool4_t mask,vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac(vbool2_t mask,vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac(vbool64_t mask,vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac(vbool32_t mask,vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac(vbool16_t mask,vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac(vbool8_t mask,vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac(vbool4_t mask,vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac(vbool64_t mask,vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac(vbool32_t mask,vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac(vbool16_t mask,vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac(vbool8_t mask,vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac(vbool64_t mask,vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac(vbool32_t mask,vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac(vbool16_t mask,vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac(vbool8_t mask,vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac(vbool4_t mask,vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac(vbool2_t mask,vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac(vbool1_t mask,vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac(vbool64_t mask,vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac(vbool32_t mask,vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac(vbool16_t mask,vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac(vbool8_t mask,vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac(vbool4_t mask,vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac(vbool2_t mask,vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac(vbool64_t mask,vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac(vbool32_t mask,vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac(vbool16_t mask,vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac(vbool8_t mask,vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac(vbool4_t mask,vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac(vbool64_t mask,vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac(vbool32_t mask,vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac(vbool16_t mask,vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac(vbool8_t mask,vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */"}, {"sha": "8e2e7d4abc5773f51bffa6d0c0862d23f4cf84cc", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vnmsac_vv_mu-1.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_mu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_mu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_mu-1.C?ref=47919b0decb469054a784ef32c98486074808d9d", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_mu(vbool64_t mask,vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_mu(vbool32_t mask,vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_mu(vbool16_t mask,vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_mu(vbool8_t mask,vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_mu(vbool4_t mask,vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_mu(vbool2_t mask,vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_mu(vbool1_t mask,vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_mu(vbool64_t mask,vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_mu(vbool32_t mask,vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_mu(vbool16_t mask,vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_mu(vbool8_t mask,vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_mu(vbool4_t mask,vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_mu(vbool2_t mask,vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_mu(vbool64_t mask,vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_mu(vbool32_t mask,vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_mu(vbool16_t mask,vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_mu(vbool8_t mask,vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_mu(vbool4_t mask,vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_mu(vbool64_t mask,vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_mu(vbool32_t mask,vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_mu(vbool16_t mask,vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_mu(vbool8_t mask,vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_mu(vbool64_t mask,vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_mu(vbool32_t mask,vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_mu(vbool16_t mask,vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_mu(vbool8_t mask,vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_mu(vbool4_t mask,vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_mu(vbool2_t mask,vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_mu(vbool1_t mask,vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_mu(vbool64_t mask,vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_mu(vbool32_t mask,vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_mu(vbool16_t mask,vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_mu(vbool8_t mask,vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_mu(vbool4_t mask,vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_mu(vbool2_t mask,vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_mu(vbool64_t mask,vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_mu(vbool32_t mask,vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_mu(vbool16_t mask,vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_mu(vbool8_t mask,vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_mu(vbool4_t mask,vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_mu(vbool64_t mask,vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_mu(vbool32_t mask,vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_mu(vbool16_t mask,vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_mu(vbool8_t mask,vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */"}, {"sha": "08617a9514643888cf55f7c5333087558de89c9a", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vnmsac_vv_mu-2.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_mu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_mu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_mu-2.C?ref=47919b0decb469054a784ef32c98486074808d9d", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_mu(vbool64_t mask,vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_mu(vbool32_t mask,vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_mu(vbool16_t mask,vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_mu(vbool8_t mask,vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_mu(vbool4_t mask,vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_mu(vbool2_t mask,vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_mu(vbool1_t mask,vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_mu(vbool64_t mask,vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_mu(vbool32_t mask,vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_mu(vbool16_t mask,vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_mu(vbool8_t mask,vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_mu(vbool4_t mask,vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_mu(vbool2_t mask,vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_mu(vbool64_t mask,vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_mu(vbool32_t mask,vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_mu(vbool16_t mask,vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_mu(vbool8_t mask,vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_mu(vbool4_t mask,vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_mu(vbool64_t mask,vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_mu(vbool32_t mask,vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_mu(vbool16_t mask,vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_mu(vbool8_t mask,vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_mu(vbool64_t mask,vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_mu(vbool32_t mask,vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_mu(vbool16_t mask,vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_mu(vbool8_t mask,vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_mu(vbool4_t mask,vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_mu(vbool2_t mask,vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_mu(vbool1_t mask,vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_mu(vbool64_t mask,vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_mu(vbool32_t mask,vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_mu(vbool16_t mask,vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_mu(vbool8_t mask,vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_mu(vbool4_t mask,vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_mu(vbool2_t mask,vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_mu(vbool64_t mask,vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_mu(vbool32_t mask,vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_mu(vbool16_t mask,vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_mu(vbool8_t mask,vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_mu(vbool4_t mask,vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_mu(vbool64_t mask,vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_mu(vbool32_t mask,vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_mu(vbool16_t mask,vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_mu(vbool8_t mask,vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */"}, {"sha": "5582880625f548884fcfb1a875519b46840fabb3", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vnmsac_vv_mu-3.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_mu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_mu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_mu-3.C?ref=47919b0decb469054a784ef32c98486074808d9d", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_mu(vbool64_t mask,vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_mu(vbool32_t mask,vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_mu(vbool16_t mask,vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_mu(vbool8_t mask,vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_mu(vbool4_t mask,vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_mu(vbool2_t mask,vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_mu(vbool1_t mask,vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_mu(vbool64_t mask,vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_mu(vbool32_t mask,vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_mu(vbool16_t mask,vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_mu(vbool8_t mask,vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_mu(vbool4_t mask,vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_mu(vbool2_t mask,vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_mu(vbool64_t mask,vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_mu(vbool32_t mask,vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_mu(vbool16_t mask,vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_mu(vbool8_t mask,vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_mu(vbool4_t mask,vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_mu(vbool64_t mask,vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_mu(vbool32_t mask,vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_mu(vbool16_t mask,vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_mu(vbool8_t mask,vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_mu(vbool64_t mask,vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_mu(vbool32_t mask,vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_mu(vbool16_t mask,vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_mu(vbool8_t mask,vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_mu(vbool4_t mask,vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_mu(vbool2_t mask,vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_mu(vbool1_t mask,vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_mu(vbool64_t mask,vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_mu(vbool32_t mask,vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_mu(vbool16_t mask,vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_mu(vbool8_t mask,vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_mu(vbool4_t mask,vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_mu(vbool2_t mask,vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_mu(vbool64_t mask,vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_mu(vbool32_t mask,vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_mu(vbool16_t mask,vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_mu(vbool8_t mask,vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_mu(vbool4_t mask,vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_mu(vbool64_t mask,vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_mu(vbool32_t mask,vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_mu(vbool16_t mask,vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_mu(vbool8_t mask,vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_mu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */"}, {"sha": "86420696d99a5ec8ffb60f6329d59df69692c0db", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vnmsac_vv_tu-1.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_tu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_tu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_tu-1.C?ref=47919b0decb469054a784ef32c98486074808d9d", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_tu(vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_tu(vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_tu(vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_tu(vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_tu(vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_tu(vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_tu(vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_tu(vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_tu(vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_tu(vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_tu(vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_tu(vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_tu(vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_tu(vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_tu(vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_tu(vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_tu(vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_tu(vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_tu(vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_tu(vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_tu(vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_tu(vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_tu(vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_tu(vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_tu(vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_tu(vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_tu(vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_tu(vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_tu(vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_tu(vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_tu(vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_tu(vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_tu(vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_tu(vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_tu(vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_tu(vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_tu(vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_tu(vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_tu(vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_tu(vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_tu(vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_tu(vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_tu(vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_tu(vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "eeb2dc89c8c40d1bd0f4c2bfec42626aaea5b00a", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vnmsac_vv_tu-2.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_tu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_tu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_tu-2.C?ref=47919b0decb469054a784ef32c98486074808d9d", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_tu(vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_tu(vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_tu(vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_tu(vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_tu(vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_tu(vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_tu(vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_tu(vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_tu(vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_tu(vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_tu(vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_tu(vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_tu(vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_tu(vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_tu(vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_tu(vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_tu(vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_tu(vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_tu(vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_tu(vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_tu(vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_tu(vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_tu(vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_tu(vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_tu(vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_tu(vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_tu(vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_tu(vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_tu(vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_tu(vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_tu(vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_tu(vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_tu(vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_tu(vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_tu(vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_tu(vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_tu(vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_tu(vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_tu(vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_tu(vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_tu(vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_tu(vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_tu(vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_tu(vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "67e5c935e0e9ce741b2e0007a4c0d11a42ec04e2", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vnmsac_vv_tu-3.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_tu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_tu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_tu-3.C?ref=47919b0decb469054a784ef32c98486074808d9d", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_tu(vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_tu(vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_tu(vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_tu(vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_tu(vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_tu(vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_tu(vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_tu(vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_tu(vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_tu(vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_tu(vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_tu(vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_tu(vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_tu(vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_tu(vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_tu(vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_tu(vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_tu(vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_tu(vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_tu(vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_tu(vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_tu(vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_tu(vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_tu(vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_tu(vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_tu(vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_tu(vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_tu(vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_tu(vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_tu(vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_tu(vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_tu(vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_tu(vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_tu(vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_tu(vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_tu(vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_tu(vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_tu(vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_tu(vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_tu(vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_tu(vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_tu(vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_tu(vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_tu(vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tu(vd,vs1,vs2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+\\s+} 2 } } */"}, {"sha": "0673cebfaee9f31b2c9e97aacdf1f9e93cb93785", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vnmsac_vv_tum-1.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_tum-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_tum-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_tum-1.C?ref=47919b0decb469054a784ef32c98486074808d9d", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_tum(vbool64_t mask,vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_tum(vbool32_t mask,vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_tum(vbool16_t mask,vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_tum(vbool8_t mask,vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_tum(vbool4_t mask,vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_tum(vbool2_t mask,vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_tum(vbool1_t mask,vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_tum(vbool64_t mask,vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_tum(vbool32_t mask,vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_tum(vbool16_t mask,vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_tum(vbool8_t mask,vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_tum(vbool4_t mask,vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_tum(vbool2_t mask,vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_tum(vbool64_t mask,vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_tum(vbool32_t mask,vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_tum(vbool16_t mask,vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_tum(vbool8_t mask,vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_tum(vbool4_t mask,vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_tum(vbool64_t mask,vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_tum(vbool32_t mask,vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_tum(vbool16_t mask,vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_tum(vbool8_t mask,vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_tum(vbool64_t mask,vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_tum(vbool32_t mask,vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_tum(vbool16_t mask,vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_tum(vbool8_t mask,vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_tum(vbool4_t mask,vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_tum(vbool2_t mask,vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_tum(vbool1_t mask,vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_tum(vbool64_t mask,vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_tum(vbool32_t mask,vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_tum(vbool16_t mask,vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_tum(vbool8_t mask,vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_tum(vbool4_t mask,vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_tum(vbool2_t mask,vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_tum(vbool64_t mask,vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_tum(vbool32_t mask,vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_tum(vbool16_t mask,vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_tum(vbool8_t mask,vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_tum(vbool4_t mask,vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_tum(vbool64_t mask,vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_tum(vbool32_t mask,vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_tum(vbool16_t mask,vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_tum(vbool8_t mask,vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */"}, {"sha": "5645e74afe7691d1d59c756eda2ded8b4a36c4e8", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vnmsac_vv_tum-2.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_tum-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_tum-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_tum-2.C?ref=47919b0decb469054a784ef32c98486074808d9d", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_tum(vbool64_t mask,vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_tum(vbool32_t mask,vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_tum(vbool16_t mask,vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_tum(vbool8_t mask,vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_tum(vbool4_t mask,vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_tum(vbool2_t mask,vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_tum(vbool1_t mask,vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_tum(vbool64_t mask,vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_tum(vbool32_t mask,vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_tum(vbool16_t mask,vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_tum(vbool8_t mask,vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_tum(vbool4_t mask,vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_tum(vbool2_t mask,vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_tum(vbool64_t mask,vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_tum(vbool32_t mask,vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_tum(vbool16_t mask,vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_tum(vbool8_t mask,vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_tum(vbool4_t mask,vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_tum(vbool64_t mask,vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_tum(vbool32_t mask,vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_tum(vbool16_t mask,vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_tum(vbool8_t mask,vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_tum(vbool64_t mask,vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_tum(vbool32_t mask,vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_tum(vbool16_t mask,vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_tum(vbool8_t mask,vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_tum(vbool4_t mask,vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_tum(vbool2_t mask,vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_tum(vbool1_t mask,vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_tum(vbool64_t mask,vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_tum(vbool32_t mask,vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_tum(vbool16_t mask,vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_tum(vbool8_t mask,vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_tum(vbool4_t mask,vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_tum(vbool2_t mask,vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_tum(vbool64_t mask,vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_tum(vbool32_t mask,vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_tum(vbool16_t mask,vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_tum(vbool8_t mask,vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_tum(vbool4_t mask,vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_tum(vbool64_t mask,vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_tum(vbool32_t mask,vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_tum(vbool16_t mask,vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_tum(vbool8_t mask,vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */"}, {"sha": "10d980af4f4c83b4f01c8c76f23855ddaace5640", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vnmsac_vv_tum-3.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_tum-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_tum-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_tum-3.C?ref=47919b0decb469054a784ef32c98486074808d9d", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_tum(vbool64_t mask,vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_tum(vbool32_t mask,vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_tum(vbool16_t mask,vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_tum(vbool8_t mask,vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_tum(vbool4_t mask,vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_tum(vbool2_t mask,vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_tum(vbool1_t mask,vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_tum(vbool64_t mask,vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_tum(vbool32_t mask,vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_tum(vbool16_t mask,vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_tum(vbool8_t mask,vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_tum(vbool4_t mask,vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_tum(vbool2_t mask,vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_tum(vbool64_t mask,vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_tum(vbool32_t mask,vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_tum(vbool16_t mask,vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_tum(vbool8_t mask,vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_tum(vbool4_t mask,vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_tum(vbool64_t mask,vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_tum(vbool32_t mask,vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_tum(vbool16_t mask,vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_tum(vbool8_t mask,vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_tum(vbool64_t mask,vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_tum(vbool32_t mask,vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_tum(vbool16_t mask,vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_tum(vbool8_t mask,vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_tum(vbool4_t mask,vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_tum(vbool2_t mask,vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_tum(vbool1_t mask,vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_tum(vbool64_t mask,vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_tum(vbool32_t mask,vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_tum(vbool16_t mask,vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_tum(vbool8_t mask,vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_tum(vbool4_t mask,vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_tum(vbool2_t mask,vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_tum(vbool64_t mask,vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_tum(vbool32_t mask,vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_tum(vbool16_t mask,vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_tum(vbool8_t mask,vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_tum(vbool4_t mask,vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_tum(vbool64_t mask,vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_tum(vbool32_t mask,vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_tum(vbool16_t mask,vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_tum(vbool8_t mask,vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tum(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */"}, {"sha": "84af3ef7648c2fffb8032917ec378a3babc801ad", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vnmsac_vv_tumu-1.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_tumu-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_tumu-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_tumu-1.C?ref=47919b0decb469054a784ef32c98486074808d9d", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_tumu(vbool64_t mask,vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_tumu(vbool32_t mask,vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_tumu(vbool16_t mask,vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_tumu(vbool8_t mask,vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_tumu(vbool4_t mask,vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_tumu(vbool2_t mask,vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_tumu(vbool1_t mask,vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_tumu(vbool64_t mask,vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_tumu(vbool32_t mask,vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_tumu(vbool16_t mask,vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_tumu(vbool8_t mask,vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_tumu(vbool4_t mask,vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_tumu(vbool2_t mask,vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_tumu(vbool64_t mask,vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_tumu(vbool32_t mask,vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_tumu(vbool16_t mask,vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_tumu(vbool8_t mask,vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_tumu(vbool4_t mask,vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_tumu(vbool64_t mask,vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_tumu(vbool32_t mask,vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_tumu(vbool16_t mask,vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_tumu(vbool8_t mask,vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_tumu(vbool64_t mask,vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_tumu(vbool32_t mask,vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_tumu(vbool16_t mask,vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_tumu(vbool8_t mask,vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_tumu(vbool4_t mask,vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_tumu(vbool2_t mask,vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_tumu(vbool1_t mask,vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_tumu(vbool64_t mask,vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_tumu(vbool32_t mask,vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_tumu(vbool16_t mask,vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_tumu(vbool8_t mask,vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_tumu(vbool4_t mask,vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_tumu(vbool2_t mask,vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_tumu(vbool64_t mask,vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_tumu(vbool32_t mask,vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_tumu(vbool16_t mask,vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_tumu(vbool8_t mask,vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_tumu(vbool4_t mask,vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_tumu(vbool64_t mask,vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_tumu(vbool32_t mask,vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_tumu(vbool16_t mask,vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_tumu(vbool8_t mask,vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */"}, {"sha": "4ee7e7091427c1fc48f1e439a771d961a1a3f8ee", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vnmsac_vv_tumu-2.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_tumu-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_tumu-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_tumu-2.C?ref=47919b0decb469054a784ef32c98486074808d9d", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_tumu(vbool64_t mask,vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_tumu(vbool32_t mask,vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_tumu(vbool16_t mask,vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_tumu(vbool8_t mask,vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_tumu(vbool4_t mask,vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_tumu(vbool2_t mask,vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_tumu(vbool1_t mask,vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_tumu(vbool64_t mask,vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_tumu(vbool32_t mask,vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_tumu(vbool16_t mask,vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_tumu(vbool8_t mask,vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_tumu(vbool4_t mask,vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_tumu(vbool2_t mask,vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_tumu(vbool64_t mask,vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_tumu(vbool32_t mask,vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_tumu(vbool16_t mask,vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_tumu(vbool8_t mask,vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_tumu(vbool4_t mask,vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_tumu(vbool64_t mask,vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_tumu(vbool32_t mask,vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_tumu(vbool16_t mask,vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_tumu(vbool8_t mask,vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_tumu(vbool64_t mask,vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_tumu(vbool32_t mask,vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_tumu(vbool16_t mask,vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_tumu(vbool8_t mask,vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_tumu(vbool4_t mask,vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_tumu(vbool2_t mask,vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_tumu(vbool1_t mask,vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_tumu(vbool64_t mask,vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_tumu(vbool32_t mask,vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_tumu(vbool16_t mask,vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_tumu(vbool8_t mask,vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_tumu(vbool4_t mask,vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_tumu(vbool2_t mask,vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_tumu(vbool64_t mask,vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_tumu(vbool32_t mask,vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_tumu(vbool16_t mask,vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_tumu(vbool8_t mask,vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_tumu(vbool4_t mask,vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_tumu(vbool64_t mask,vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_tumu(vbool32_t mask,vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_tumu(vbool16_t mask,vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_tumu(vbool8_t mask,vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */"}, {"sha": "eea93f8cca912e77b8ae7ff6988fc0cb0f565324", "filename": "gcc/testsuite/g++.target/riscv/rvv/base/vnmsac_vv_tumu-3.C", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_tumu-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/47919b0decb469054a784ef32c98486074808d9d/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_tumu-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Friscv%2Frvv%2Fbase%2Fvnmsac_vv_tumu-3.C?ref=47919b0decb469054a784ef32c98486074808d9d", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vnmsac_tumu(vbool64_t mask,vint8mf8_t vd,vint8mf8_t vs1,vint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vnmsac_tumu(vbool32_t mask,vint8mf4_t vd,vint8mf4_t vs1,vint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vnmsac_tumu(vbool16_t mask,vint8mf2_t vd,vint8mf2_t vs1,vint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vnmsac_tumu(vbool8_t mask,vint8m1_t vd,vint8m1_t vs1,vint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vnmsac_tumu(vbool4_t mask,vint8m2_t vd,vint8m2_t vs1,vint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vnmsac_tumu(vbool2_t mask,vint8m4_t vd,vint8m4_t vs1,vint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vnmsac_tumu(vbool1_t mask,vint8m8_t vd,vint8m8_t vs1,vint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vnmsac_tumu(vbool64_t mask,vint16mf4_t vd,vint16mf4_t vs1,vint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vnmsac_tumu(vbool32_t mask,vint16mf2_t vd,vint16mf2_t vs1,vint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vnmsac_tumu(vbool16_t mask,vint16m1_t vd,vint16m1_t vs1,vint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vnmsac_tumu(vbool8_t mask,vint16m2_t vd,vint16m2_t vs1,vint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vnmsac_tumu(vbool4_t mask,vint16m4_t vd,vint16m4_t vs1,vint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vnmsac_tumu(vbool2_t mask,vint16m8_t vd,vint16m8_t vs1,vint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vnmsac_tumu(vbool64_t mask,vint32mf2_t vd,vint32mf2_t vs1,vint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vnmsac_tumu(vbool32_t mask,vint32m1_t vd,vint32m1_t vs1,vint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vnmsac_tumu(vbool16_t mask,vint32m2_t vd,vint32m2_t vs1,vint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vnmsac_tumu(vbool8_t mask,vint32m4_t vd,vint32m4_t vs1,vint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vnmsac_tumu(vbool4_t mask,vint32m8_t vd,vint32m8_t vs1,vint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vnmsac_tumu(vbool64_t mask,vint64m1_t vd,vint64m1_t vs1,vint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vnmsac_tumu(vbool32_t mask,vint64m2_t vd,vint64m2_t vs1,vint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vnmsac_tumu(vbool16_t mask,vint64m4_t vd,vint64m4_t vs1,vint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vnmsac_tumu(vbool8_t mask,vint64m8_t vd,vint64m8_t vs1,vint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vnmsac_tumu(vbool64_t mask,vuint8mf8_t vd,vuint8mf8_t vs1,vuint8mf8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vnmsac_tumu(vbool32_t mask,vuint8mf4_t vd,vuint8mf4_t vs1,vuint8mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vnmsac_tumu(vbool16_t mask,vuint8mf2_t vd,vuint8mf2_t vs1,vuint8mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vnmsac_tumu(vbool8_t mask,vuint8m1_t vd,vuint8m1_t vs1,vuint8m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vnmsac_tumu(vbool4_t mask,vuint8m2_t vd,vuint8m2_t vs1,vuint8m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vnmsac_tumu(vbool2_t mask,vuint8m4_t vd,vuint8m4_t vs1,vuint8m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vnmsac_tumu(vbool1_t mask,vuint8m8_t vd,vuint8m8_t vs1,vuint8m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vnmsac_tumu(vbool64_t mask,vuint16mf4_t vd,vuint16mf4_t vs1,vuint16mf4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vnmsac_tumu(vbool32_t mask,vuint16mf2_t vd,vuint16mf2_t vs1,vuint16mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vnmsac_tumu(vbool16_t mask,vuint16m1_t vd,vuint16m1_t vs1,vuint16m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vnmsac_tumu(vbool8_t mask,vuint16m2_t vd,vuint16m2_t vs1,vuint16m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vnmsac_tumu(vbool4_t mask,vuint16m4_t vd,vuint16m4_t vs1,vuint16m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vnmsac_tumu(vbool2_t mask,vuint16m8_t vd,vuint16m8_t vs1,vuint16m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vnmsac_tumu(vbool64_t mask,vuint32mf2_t vd,vuint32mf2_t vs1,vuint32mf2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vnmsac_tumu(vbool32_t mask,vuint32m1_t vd,vuint32m1_t vs1,vuint32m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vnmsac_tumu(vbool16_t mask,vuint32m2_t vd,vuint32m2_t vs1,vuint32m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vnmsac_tumu(vbool8_t mask,vuint32m4_t vd,vuint32m4_t vs1,vuint32m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vnmsac_tumu(vbool4_t mask,vuint32m8_t vd,vuint32m8_t vs1,vuint32m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vnmsac_tumu(vbool64_t mask,vuint64m1_t vd,vuint64m1_t vs1,vuint64m1_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vnmsac_tumu(vbool32_t mask,vuint64m2_t vd,vuint64m2_t vs1,vuint64m2_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vnmsac_tumu(vbool16_t mask,vuint64m4_t vd,vuint64m4_t vs1,vuint64m4_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vnmsac_tumu(vbool8_t mask,vuint64m8_t vd,vuint64m8_t vs1,vuint64m8_t vs2,size_t vl)\n+{\n+    return __riscv_vnmsac_tumu(mask,vd,vs1,vs2,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*mu\\s+vnms[a-u][b-c]\\.vv\\s+v[0-9]+,\\s*v[0-9]+,\\s*v[0-9]+,\\s*v0.t\\s+} 2 } } */"}]}