{"sha": "5f932c9f93c45440a7baf7d9059d3b33a0f2d2db", "node_id": "C_kwDOANBUbNoAKDVmOTMyYzlmOTNjNDU0NDBhN2JhZjdkOTA1OWQzYjMzYTBmMmQyZGI", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2022-08-14T15:11:02Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2022-08-31T19:22:09Z"}, "message": "libstdc++: [_GLIBCXX_DEBUG] Review nullptr assertion diagnostics\n\nReview null string checks to show:\n_String != nullptr\n\nrather than:\n_String != 0\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/debug/debug.h: Use nullptr rather than '0' in checks in post-C++11.\n\t* include/debug/string: Likewise.\n\t* testsuite/21_strings/basic_string/operations/ends_with/char.cc: Use __gnu_test::string.\n\t* testsuite/21_strings/basic_string/operations/ends_with/nonnull.cc: Likewise.\n\t* testsuite/21_strings/basic_string/operations/ends_with/wchar_t.cc: Likewise.\n\t* testsuite/21_strings/basic_string/operations/starts_with/wchar_t.cc: Likewise.\n\t* testsuite/21_strings/basic_string/operations/starts_with/nonnull.cc: Likewise.\n\t* testsuite/21_strings/basic_string/operations/starts_with/char.cc: Likewise..", "tree": {"sha": "05a4692a398655bde18565bb51f1ca6b08915ae7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05a4692a398655bde18565bb51f1ca6b08915ae7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f932c9f93c45440a7baf7d9059d3b33a0f2d2db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f932c9f93c45440a7baf7d9059d3b33a0f2d2db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f932c9f93c45440a7baf7d9059d3b33a0f2d2db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f932c9f93c45440a7baf7d9059d3b33a0f2d2db/comments", "author": null, "committer": null, "parents": [{"sha": "f956cadc292aec42ceeba1e4835ad795c9aab5c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f956cadc292aec42ceeba1e4835ad795c9aab5c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f956cadc292aec42ceeba1e4835ad795c9aab5c2"}], "stats": {"total": 60, "additions": 44, "deletions": 16}, "files": [{"sha": "f4233760426e071714436ac818a70d547b124b7d", "filename": "libstdc++-v3/include/debug/debug.h", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f932c9f93c45440a7baf7d9059d3b33a0f2d2db/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdebug.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f932c9f93c45440a7baf7d9059d3b33a0f2d2db/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdebug.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fdebug.h?ref=5f932c9f93c45440a7baf7d9059d3b33a0f2d2db", "patch": "@@ -118,10 +118,17 @@ namespace __gnu_debug\n   __glibcxx_check_heap(_First,_Last)\n # define __glibcxx_requires_heap_pred(_First,_Last,_Pred)\t\\\n   __glibcxx_check_heap_pred(_First,_Last,_Pred)\n-# define __glibcxx_requires_string(_String)\t\\\n+# if __cplusplus < 201103L\n+#  define __glibcxx_requires_string(_String)\t\\\n   _GLIBCXX_DEBUG_PEDASSERT(_String != 0)\n-# define __glibcxx_requires_string_len(_String,_Len)\t\\\n+#  define __glibcxx_requires_string_len(_String,_Len)\t\\\n   _GLIBCXX_DEBUG_PEDASSERT(_String != 0 || _Len == 0)\n+# else\n+#  define __glibcxx_requires_string(_String)\t\\\n+  _GLIBCXX_DEBUG_PEDASSERT(_String != nullptr)\n+#  define __glibcxx_requires_string_len(_String,_Len)\t\\\n+  _GLIBCXX_DEBUG_PEDASSERT(_String != nullptr || _Len == 0)\n+# endif\n # define __glibcxx_requires_irreflexive(_First,_Last)\t\\\n   __glibcxx_check_irreflexive(_First,_Last)\n # define __glibcxx_requires_irreflexive2(_First,_Last)\t\\"}, {"sha": "c16751c891b9eec9b9bed15a25c5149d1d2a8264", "filename": "libstdc++-v3/include/debug/string", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f932c9f93c45440a7baf7d9059d3b33a0f2d2db/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fstring", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f932c9f93c45440a7baf7d9059d3b33a0f2d2db/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fstring", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fdebug%2Fstring?ref=5f932c9f93c45440a7baf7d9059d3b33a0f2d2db", "patch": "@@ -50,14 +50,25 @@\n #endif\n \n #ifdef _GLIBCXX_DEBUG_PEDANTIC\n-# define __glibcxx_check_string(_String)\t\t\t\t\\\n+# if __cplusplus < 201103L\n+#  define __glibcxx_check_string(_String)\t\t\t\\\n   _GLIBCXX_DEBUG_VERIFY_STR_COND_AT(_String != 0,\t\t\\\n \t\t\t\t    __FILE__, __LINE__,\t\t\\\n \t\t\t\t    __PRETTY_FUNCTION__);\n-# define __glibcxx_check_string_len(_String,_Len)\t\t\\\n+#  define __glibcxx_check_string_len(_String,_Len)\t\t\\\n   _GLIBCXX_DEBUG_VERIFY_STR_COND_AT(_String != 0 || _Len == 0,\t\\\n \t\t\t\t    __FILE__, __LINE__,\t\t\\\n \t\t\t\t    __PRETTY_FUNCTION__);\n+# else\n+#  define __glibcxx_check_string(_String)\t\t\t\\\n+  _GLIBCXX_DEBUG_VERIFY_STR_COND_AT(_String != nullptr,\t\t\\\n+\t\t\t\t    __FILE__, __LINE__,\t\t\\\n+\t\t\t\t    __PRETTY_FUNCTION__);\n+#  define __glibcxx_check_string_len(_String,_Len)\t\t\\\n+  _GLIBCXX_DEBUG_VERIFY_STR_COND_AT(_String != nullptr || _Len == 0,\t\\\n+\t\t\t\t    __FILE__, __LINE__,\t\t\\\n+\t\t\t\t    __PRETTY_FUNCTION__);\n+# endif\n #else\n # define __glibcxx_check_string(_String)\n # define __glibcxx_check_string_len(_String,_Len)\n@@ -75,8 +86,13 @@ namespace __gnu_debug\n \t\t   const char* __function __attribute__((__unused__)))\n     {\n #ifdef _GLIBCXX_DEBUG_PEDANTIC\n+# if __cplusplus < 201103L\n       _GLIBCXX_DEBUG_VERIFY_STR_COND_AT(__s != 0 || __n == 0,\n \t\t\t\t\t__file, __line, __function);\n+# else\n+      _GLIBCXX_DEBUG_VERIFY_STR_COND_AT(__s != nullptr || __n == 0,\n+\t\t\t\t\t__file, __line, __function);\n+# endif\n #endif\n       return __s;\n     }\n@@ -90,8 +106,13 @@ namespace __gnu_debug\n \t\t   const char* __function __attribute__((__unused__)))\n     {\n #ifdef _GLIBCXX_DEBUG_PEDANTIC\n+# if __cplusplus < 201103L\n       _GLIBCXX_DEBUG_VERIFY_STR_COND_AT(__s != 0,\n \t\t\t\t\t__file, __line, __function);\n+# else\n+      _GLIBCXX_DEBUG_VERIFY_STR_COND_AT(__s != nullptr,\n+\t\t\t\t\t__file, __line, __function);\n+# endif\n #endif\n       return __s;\n     }"}, {"sha": "3cf85121e360f4d6cfc925cc5bd25cac0298a243", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/operations/ends_with/char.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f932c9f93c45440a7baf7d9059d3b33a0f2d2db/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperations%2Fends_with%2Fchar.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f932c9f93c45440a7baf7d9059d3b33a0f2d2db/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperations%2Fends_with%2Fchar.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperations%2Fends_with%2Fchar.cc?ref=5f932c9f93c45440a7baf7d9059d3b33a0f2d2db", "patch": "@@ -20,7 +20,7 @@\n \n // basic_string ends_with\n \n-#include <string>\n+#include <testsuite_string.h>\n #include <testsuite_hooks.h>\n \n void\n@@ -31,7 +31,7 @@ test01()\n   const char cstr_suf2[] = \".rgb\";\n   const std::string_view sv_suf2(\".rgb\");\n \n-  const std::string s_test(\"slugs/slimy.jpg\");\n+  const __gnu_test::string s_test(\"slugs/slimy.jpg\");\n \n   const auto cstr_in_slugs = s_test.ends_with(cstr_suf);\n   VERIFY( cstr_in_slugs );"}, {"sha": "ba77f0124d06ef8b370435df5d887a4c728fc206", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/operations/ends_with/nonnull.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f932c9f93c45440a7baf7d9059d3b33a0f2d2db/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperations%2Fends_with%2Fnonnull.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f932c9f93c45440a7baf7d9059d3b33a0f2d2db/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperations%2Fends_with%2Fnonnull.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperations%2Fends_with%2Fnonnull.cc?ref=5f932c9f93c45440a7baf7d9059d3b33a0f2d2db", "patch": "@@ -1,10 +1,10 @@\n // { dg-options \"-std=gnu++20 -Wnonnull -O0 -Wno-unused-result\" }\n // { dg-do compile { target c++20 } }\n \n-#include <string>\n+#include <testsuite_string.h>\n \n void\n-test01(const std::string& s)\n+test01(const __gnu_test::string& s)\n {\n   s.ends_with((const char*)nullptr);  // { dg-warning \"\\\\\\[-Wnonnull\" }\n   s.ends_with((char*)nullptr);\t      // { dg-warning \"\\\\\\[-Wnonnull\" }"}, {"sha": "70b522ff69e86ca2786b37c02cd02f74458ece76", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/operations/ends_with/wchar_t.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f932c9f93c45440a7baf7d9059d3b33a0f2d2db/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperations%2Fends_with%2Fwchar_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f932c9f93c45440a7baf7d9059d3b33a0f2d2db/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperations%2Fends_with%2Fwchar_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperations%2Fends_with%2Fwchar_t.cc?ref=5f932c9f93c45440a7baf7d9059d3b33a0f2d2db", "patch": "@@ -20,7 +20,7 @@\n \n // basic_string ends_with\n \n-#include <string>\n+#include <testsuite_string.h>\n #include <testsuite_hooks.h>\n \n void\n@@ -31,7 +31,7 @@ test01()\n   const wchar_t cstr_suf2[] = L\".rgb\";\n   const std::wstring_view sv_suf2(L\".rgb\");\n \n-  const std::wstring s_test(L\"slugs/slimy.jpg\");\n+  const __gnu_test::wstring s_test(L\"slugs/slimy.jpg\");\n \n   const auto cstr_in_slugs = s_test.ends_with(cstr_suf);\n   VERIFY( cstr_in_slugs );"}, {"sha": "dddf51cee167c855960e5ec020403ab0dfb3e839", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/operations/starts_with/char.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f932c9f93c45440a7baf7d9059d3b33a0f2d2db/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperations%2Fstarts_with%2Fchar.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f932c9f93c45440a7baf7d9059d3b33a0f2d2db/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperations%2Fstarts_with%2Fchar.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperations%2Fstarts_with%2Fchar.cc?ref=5f932c9f93c45440a7baf7d9059d3b33a0f2d2db", "patch": "@@ -20,7 +20,7 @@\n \n // basic_string begins_with\n \n-#include <string>\n+#include <testsuite_string.h>\n #include <testsuite_hooks.h>\n \n void\n@@ -31,7 +31,7 @@ test01()\n   const char cstr_dir2[] = \"worms/\";\n   const std::string_view sv_dir2(\"worms/\");\n \n-  const std::string s_test(\"slugs/slimy.jpg\");\n+  const __gnu_test::string s_test(\"slugs/slimy.jpg\");\n \n   const auto cstr_in_slugs = s_test.starts_with(cstr_dir);\n   VERIFY( cstr_in_slugs );"}, {"sha": "a023d9ec227082e8bccc31b7e6fdc607d7623c12", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/operations/starts_with/nonnull.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f932c9f93c45440a7baf7d9059d3b33a0f2d2db/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperations%2Fstarts_with%2Fnonnull.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f932c9f93c45440a7baf7d9059d3b33a0f2d2db/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperations%2Fstarts_with%2Fnonnull.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperations%2Fstarts_with%2Fnonnull.cc?ref=5f932c9f93c45440a7baf7d9059d3b33a0f2d2db", "patch": "@@ -1,10 +1,10 @@\n // { dg-options \"-std=gnu++20 -Wnonnull -O0 -Wno-unused-result\" }\n // { dg-do compile { target c++20 } }\n \n-#include <string>\n+#include <testsuite_string.h>\n \n void\n-test01(const std::string& s)\n+test01(const __gnu_test::string& s)\n {\n   s.starts_with((const char*)nullptr);  // { dg-warning \"\\\\\\[-Wnonnull\" }\n   s.starts_with((char*)nullptr);\t// { dg-warning \"\\\\\\[-Wnonnull\" }"}, {"sha": "747b23ae5c2c61eca4ce73a6348aa31a527dd21b", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/operations/starts_with/wchar_t.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f932c9f93c45440a7baf7d9059d3b33a0f2d2db/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperations%2Fstarts_with%2Fwchar_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f932c9f93c45440a7baf7d9059d3b33a0f2d2db/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperations%2Fstarts_with%2Fwchar_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Foperations%2Fstarts_with%2Fwchar_t.cc?ref=5f932c9f93c45440a7baf7d9059d3b33a0f2d2db", "patch": "@@ -20,7 +20,7 @@\n \n // basic_string begins_with\n \n-#include <string>\n+#include <testsuite_string.h>\n #include <testsuite_hooks.h>\n \n void\n@@ -31,7 +31,7 @@ test01()\n   const wchar_t cstr_dir2[] = L\"worms/\";\n   const std::wstring_view sv_dir2(L\"worms/\");\n \n-  const std::wstring s_test(L\"slugs/slimy.jpg\");\n+  const __gnu_test::wstring s_test(L\"slugs/slimy.jpg\");\n \n   const auto cstr_in_slugs = s_test.starts_with(cstr_dir);\n   VERIFY( cstr_in_slugs );"}]}