{"sha": "ff465bd8a0f0f96a00d3067018442917b194b7af", "node_id": "C_kwDOANBUbNoAKGZmNDY1YmQ4YTBmMGY5NmEwMGQzMDY3MDE4NDQyOTE3YjE5NGI3YWY", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2022-03-26T14:20:18Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2022-03-26T14:20:18Z"}, "message": "c++: diagnosing if-stmt with non-constant branches [PR105050]\n\nWhen an if-stmt is determined to be non-constant because both of its\nbranches are non-constant, we issue a somewhat generic error which,\nsince the error also points to the 'if' token, misleadingly suggests\nthe condition is at fault:\n\n  constexpr-105050.C:8:3: error: expression \u2018<statement>\u2019 is not a constant expression\n      8 |   if (p != q && *p < 0)\n        |   ^~\n\nThis patch clarifies the error message to instead read:\n\n  constexpr-105050.C:8:3: error: neither branch of \u2018if\u2019 is a constant expression\n      8 |   if (p != q && *p < 0)\n        |   ^~\n\n\tPR c++/105050\n\ngcc/cp/ChangeLog:\n\n\t* constexpr.cc (potential_constant_expression_1) <case IF_STMT>:\n\tClarify error message when a if-stmt is non-constant because its\n\tbranches are non-constant.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp1y/constexpr-105050.C: New test.", "tree": {"sha": "f15d80be7e43b2fc92aa879bd2eec915bada60b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f15d80be7e43b2fc92aa879bd2eec915bada60b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff465bd8a0f0f96a00d3067018442917b194b7af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff465bd8a0f0f96a00d3067018442917b194b7af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff465bd8a0f0f96a00d3067018442917b194b7af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff465bd8a0f0f96a00d3067018442917b194b7af/comments", "author": null, "committer": null, "parents": [{"sha": "04f19580e8dbdbc7366d0f5fd068aa0cecafdc9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04f19580e8dbdbc7366d0f5fd068aa0cecafdc9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04f19580e8dbdbc7366d0f5fd068aa0cecafdc9d"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "9c40b0515747d84db01a28f92797ed052d026cbc", "filename": "gcc/cp/constexpr.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff465bd8a0f0f96a00d3067018442917b194b7af/gcc%2Fcp%2Fconstexpr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff465bd8a0f0f96a00d3067018442917b194b7af/gcc%2Fcp%2Fconstexpr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.cc?ref=ff465bd8a0f0f96a00d3067018442917b194b7af", "patch": "@@ -9439,7 +9439,12 @@ potential_constant_expression_1 (tree t, bool want_rval, bool strict, bool now,\n \t    }\n \t}\n       if (flags & tf_error)\n-\terror_at (loc, \"expression %qE is not a constant expression\", t);\n+\t{\n+\t  if (TREE_CODE (t) == IF_STMT)\n+\t    error_at (loc, \"neither branch of %<if%> is a constant expression\");\n+\t  else\n+\t    error_at (loc, \"expression %qE is not a constant expression\", t);\n+\t}\n       return false;\n \n     case VEC_INIT_EXPR:"}, {"sha": "e0688fbd38e7fd87527e7372b39384c1eab00018", "filename": "gcc/testsuite/g++.dg/cpp1y/constexpr-105050.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff465bd8a0f0f96a00d3067018442917b194b7af/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-105050.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff465bd8a0f0f96a00d3067018442917b194b7af/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-105050.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-105050.C?ref=ff465bd8a0f0f96a00d3067018442917b194b7af", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/105050\n+// { dg-do compile { target c++14 } }\n+\n+void g();\n+void h();\n+\n+constexpr void f(int* p, int* q) {\n+  if (p != q && *p < 0) // { dg-error \"neither branch of 'if' is a constant expression\" }\n+    g();\n+  else\n+    h();\n+}"}]}