{"sha": "1e17e15ae532b05910a7fc0c599a01839dd1b032", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWUxN2UxNWFlNTMyYjA1OTEwYTdmYzBjNTk5YTAxODM5ZGQxYjAzMg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2008-05-17T13:06:21Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2008-05-17T13:06:21Z"}, "message": "fold-const.c (fold_unary): Fold the cast into a BIT_AND_EXPR only for an INTEGER_TYPE.\n\n\t* fold-const.c (fold_unary) <CASE_CONVERT>: Fold the cast into\n\ta BIT_AND_EXPR only for an INTEGER_TYPE.\n\nFrom-SVN: r135467", "tree": {"sha": "a24b798aed2e282c91f6d71952eb3bd67579425e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a24b798aed2e282c91f6d71952eb3bd67579425e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e17e15ae532b05910a7fc0c599a01839dd1b032", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e17e15ae532b05910a7fc0c599a01839dd1b032", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e17e15ae532b05910a7fc0c599a01839dd1b032", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e17e15ae532b05910a7fc0c599a01839dd1b032/comments", "author": null, "committer": null, "parents": [{"sha": "74c11a6c4d7b55e0e903a99fe58dfd491ce4fc2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74c11a6c4d7b55e0e903a99fe58dfd491ce4fc2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74c11a6c4d7b55e0e903a99fe58dfd491ce4fc2c"}], "stats": {"total": 53, "additions": 50, "deletions": 3}, "files": [{"sha": "ae051b34e8c5ce757ce5a9c56223df6080c58327", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e17e15ae532b05910a7fc0c599a01839dd1b032/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e17e15ae532b05910a7fc0c599a01839dd1b032/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e17e15ae532b05910a7fc0c599a01839dd1b032", "patch": "@@ -1,3 +1,8 @@\n+2008-05-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* fold-const.c (fold_unary) <CASE_CONVERT>: Fold the cast into\n+\ta BIT_AND_EXPR only for an INTEGER_TYPE.\n+\n 2008-05-16  David S. Miller  <davem@davemloft.net>\n \n \t* config/sparc/linux.h (NO_PROFILE_COUNTERS): Undef before\n@@ -23,7 +28,6 @@\n \t(df_simulate_one_insn_backwards): Renamed to df_simulate_one_insn.\n \t(df_simulate_one_insn_forwards): Removed.\n \n-\t\n 2008-05-16  Doug Kwan  <dougkwan@google.com>\n \n \t* real.c (real_to_decimal, real_to_hexadecimal): Distinguish"}, {"sha": "dc1e182c16ff6e5038e952d13ca231abf1246fc7", "filename": "gcc/fold-const.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e17e15ae532b05910a7fc0c599a01839dd1b032/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e17e15ae532b05910a7fc0c599a01839dd1b032/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=1e17e15ae532b05910a7fc0c599a01839dd1b032", "patch": "@@ -7864,8 +7864,7 @@ fold_unary (enum tree_code code, tree type, tree op0)\n       /* Convert (T)(x & c) into (T)x & (T)c, if c is an integer\n \t constants (if x has signed type, the sign bit cannot be set\n \t in c).  This folds extension into the BIT_AND_EXPR.  */\n-      if (INTEGRAL_TYPE_P (type)\n-\t  && TREE_CODE (type) != BOOLEAN_TYPE\n+      if (TREE_CODE (type) == INTEGER_TYPE\n \t  && TREE_CODE (op0) == BIT_AND_EXPR\n \t  && TREE_CODE (TREE_OPERAND (op0, 1)) == INTEGER_CST)\n \t{"}, {"sha": "10325d7442781c2f5d5eedf78b0767abab65d23a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e17e15ae532b05910a7fc0c599a01839dd1b032/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e17e15ae532b05910a7fc0c599a01839dd1b032/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1e17e15ae532b05910a7fc0c599a01839dd1b032", "patch": "@@ -1,3 +1,7 @@\n+2008-05-17  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/bit_packed_array3.adb: New test.\n+\n 2008-05-17  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/warn4.adb: New test."}, {"sha": "0b121efdc5f939e4ae0aeb23d268f91245975ce0", "filename": "gcc/testsuite/gnat.dg/bit_packed_array3.adb", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e17e15ae532b05910a7fc0c599a01839dd1b032/gcc%2Ftestsuite%2Fgnat.dg%2Fbit_packed_array3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e17e15ae532b05910a7fc0c599a01839dd1b032/gcc%2Ftestsuite%2Fgnat.dg%2Fbit_packed_array3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fbit_packed_array3.adb?ref=1e17e15ae532b05910a7fc0c599a01839dd1b032", "patch": "@@ -0,0 +1,40 @@\n+-- { dg-do run }\n+-- { dg-options \"-O2 -gnatp\" }\n+\n+procedure Bit_Packed_Array3 is\n+\n+   type Bitmap_T is array (1 .. 10) of Boolean;\n+   pragma Pack (Bitmap_T);\n+\n+   type Maps_T is record\n+      M1 : Bitmap_T;\n+   end record;\n+   pragma Pack (Maps_T);\n+   for Maps_T'Size use 10;\n+   pragma Suppress_Initialization (Maps_T);\n+\n+   Tmap : constant Bitmap_T := (others => True);\n+   Fmap : constant Bitmap_T := (others => False);\n+   Amap : constant Bitmap_T :=\n+     (1 => False, 2 => True, 3 => False, 4 => True, 5 => False,\n+      6 => True, 7 => False, 8 => True, 9 => False, 10 => True);\n+\n+   function Some_Maps return Maps_T is\n+      Value : Maps_T := (M1 => Amap);\n+   begin\n+      return Value;\n+   end;\n+   pragma Inline (Some_Maps);\n+\n+   Maps : Maps_T;\n+begin\n+   Maps := Some_Maps;\n+\n+   for I in Maps.M1'Range loop\n+      if (I mod 2 = 0 and then not Maps.M1 (I))\n+        or else (I mod 2 /= 0 and then Maps.M1 (I))\n+      then\n+         raise Program_Error;\n+      end if;\n+   end loop;\n+end;"}]}