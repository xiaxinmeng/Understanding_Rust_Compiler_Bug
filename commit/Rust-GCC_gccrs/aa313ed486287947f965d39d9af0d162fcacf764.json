{"sha": "aa313ed486287947f965d39d9af0d162fcacf764", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWEzMTNlZDQ4NjI4Nzk0N2Y5NjVkMzlkOWFmMGQxNjJmY2FjZjc2NA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2005-05-14T14:24:49Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2005-05-14T14:24:49Z"}, "message": "tree-cfg.c (execute_warn_function_return): Break out noreturn warning too..\n\n\n\t* tree-cfg.c (execute_warn_function_return): Break out noreturn\n\twarning too..\n\t(execute_warn_function_noreturn): ... here.\n\t(pass_warn_function_noreturn): New pass.\n\t* tree-pass.h (pass_warn_function_noreturn): Declare\n\t* tree-optimize.c (init_tree_optimization_passes): Move return\n\twarnings early and add noreturn warnings at place of previous\n\treturn warnings.\n\nFrom-SVN: r99696", "tree": {"sha": "525ffde8eec4a141ff785969b9ab2e9d710d86b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/525ffde8eec4a141ff785969b9ab2e9d710d86b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa313ed486287947f965d39d9af0d162fcacf764", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa313ed486287947f965d39d9af0d162fcacf764", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa313ed486287947f965d39d9af0d162fcacf764", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa313ed486287947f965d39d9af0d162fcacf764/comments", "author": null, "committer": null, "parents": [{"sha": "7af893cb9f5d6cd81a29535b029ac25879768f17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7af893cb9f5d6cd81a29535b029ac25879768f17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7af893cb9f5d6cd81a29535b029ac25879768f17"}], "stats": {"total": 60, "additions": 50, "deletions": 10}, "files": [{"sha": "97f56527471e04fb0339c43e2f17ffd85e47925a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa313ed486287947f965d39d9af0d162fcacf764/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa313ed486287947f965d39d9af0d162fcacf764/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa313ed486287947f965d39d9af0d162fcacf764", "patch": "@@ -1,3 +1,14 @@\n+2005-05-14  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree-cfg.c (execute_warn_function_return): Break out noreturn\n+\twarning too..\n+\t(execute_warn_function_noreturn): ... here.\n+\t(pass_warn_function_noreturn): New pass.\n+\t* tree-pass.h (pass_warn_function_noreturn): Declare\n+\t* tree-optimize.c (init_tree_optimization_passes): Move return\n+\twarnings early and add noreturn warnings at place of previous\n+\treturn warnings.\n+\n 2005-05-14  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* tree-ssa-live.c (tpa_init, tpa_delete, tpa_compact,"}, {"sha": "9124a0d8a5f391f168172007d8651e17b039cecc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa313ed486287947f965d39d9af0d162fcacf764/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa313ed486287947f965d39d9af0d162fcacf764/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aa313ed486287947f965d39d9af0d162fcacf764", "patch": "@@ -1,3 +1,7 @@\n+2005-05-14  Jan Hubicka  <jh@suse.cz>\n+\n+\t* gcc.dg/noreturn-7.c: Allow control reaches warning.\n+\n 2005-05-14  Richard Guenther  <rguenth@gcc.gnu.org>\n \n \t* g++.dg/tree-ssa/tmmti-2.C: New testcase."}, {"sha": "8ae5e2382241d9a6d438d4e6cb7ee2d1abc45078", "filename": "gcc/testsuite/gcc.dg/noreturn-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa313ed486287947f965d39d9af0d162fcacf764/gcc%2Ftestsuite%2Fgcc.dg%2Fnoreturn-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa313ed486287947f965d39d9af0d162fcacf764/gcc%2Ftestsuite%2Fgcc.dg%2Fnoreturn-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoreturn-7.c?ref=aa313ed486287947f965d39d9af0d162fcacf764", "patch": "@@ -39,4 +39,4 @@ int k()\n   if (++z > 10)\n     _exit(0);\n   k();\n-}\n+}             /* { dg-warning \"control reaches\" } */"}, {"sha": "96377ec821ecfeef62ea2004b46a6ea3a5b77832", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 31, "deletions": 8, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa313ed486287947f965d39d9af0d162fcacf764/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa313ed486287947f965d39d9af0d162fcacf764/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=aa313ed486287947f965d39d9af0d162fcacf764", "patch": "@@ -5630,14 +5630,6 @@ execute_warn_function_return (void)\n   edge e;\n   edge_iterator ei;\n \n-  if (warn_missing_noreturn\n-      && !TREE_THIS_VOLATILE (cfun->decl)\n-      && EDGE_COUNT (EXIT_BLOCK_PTR->preds) == 0\n-      && !lang_hooks.function.missing_noreturn_ok_p (cfun->decl))\n-    warning (0, \"%Jfunction might be possible candidate for \"\n-\t     \"attribute %<noreturn%>\",\n-\t     cfun->decl);\n-\n   /* If we have a path to EXIT, then we do return.  */\n   if (TREE_THIS_VOLATILE (cfun->decl)\n       && EDGE_COUNT (EXIT_BLOCK_PTR->preds) > 0)\n@@ -5741,3 +5733,34 @@ struct tree_opt_pass pass_warn_function_return =\n   0,\t\t\t\t\t/* todo_flags_finish */\n   0\t\t\t\t\t/* letter */\n };\n+\n+/* Emit noreturn warnings.  */\n+\n+static void\n+execute_warn_function_noreturn (void)\n+{\n+  if (warn_missing_noreturn\n+      && !TREE_THIS_VOLATILE (cfun->decl)\n+      && EDGE_COUNT (EXIT_BLOCK_PTR->preds) == 0\n+      && !lang_hooks.function.missing_noreturn_ok_p (cfun->decl))\n+    warning (0, \"%Jfunction might be possible candidate for \"\n+\t     \"attribute %<noreturn%>\",\n+\t     cfun->decl);\n+}\n+\n+struct tree_opt_pass pass_warn_function_noreturn =\n+{\n+  NULL,\t\t\t\t\t/* name */\n+  NULL,\t\t\t\t\t/* gate */\n+  execute_warn_function_noreturn,\t/* execute */\n+  NULL,\t\t\t\t\t/* sub */\n+  NULL,\t\t\t\t\t/* next */\n+  0,\t\t\t\t\t/* static_pass_number */\n+  0,\t\t\t\t\t/* tv_id */\n+  PROP_cfg,\t\t\t\t/* properties_required */\n+  0,\t\t\t\t\t/* properties_provided */\n+  0,\t\t\t\t\t/* properties_destroyed */\n+  0,\t\t\t\t\t/* todo_flags_start */\n+  0,\t\t\t\t\t/* todo_flags_finish */\n+  0\t\t\t\t\t/* letter */\n+};"}, {"sha": "ba35c3761c6e0a6afe2b4f9272d0c2f0344e1925", "filename": "gcc/tree-optimize.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa313ed486287947f965d39d9af0d162fcacf764/gcc%2Ftree-optimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa313ed486287947f965d39d9af0d162fcacf764/gcc%2Ftree-optimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-optimize.c?ref=aa313ed486287947f965d39d9af0d162fcacf764", "patch": "@@ -327,10 +327,11 @@ init_tree_optimization_passes (void)\n   NEXT_PASS (pass_lower_eh);\n   NEXT_PASS (pass_build_cfg);\n   NEXT_PASS (pass_pre_expand);\n+  NEXT_PASS (pass_warn_function_return);\n   NEXT_PASS (pass_tree_profile);\n   NEXT_PASS (pass_init_datastructures);\n   NEXT_PASS (pass_all_optimizations);\n-  NEXT_PASS (pass_warn_function_return);\n+  NEXT_PASS (pass_warn_function_noreturn);\n   NEXT_PASS (pass_mudflap_2);\n   NEXT_PASS (pass_free_datastructures);\n   NEXT_PASS (pass_expand);"}, {"sha": "83fa184b7367248ca19094223c4ab17790a8e2e4", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa313ed486287947f965d39d9af0d162fcacf764/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa313ed486287947f965d39d9af0d162fcacf764/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=aa313ed486287947f965d39d9af0d162fcacf764", "patch": "@@ -197,6 +197,7 @@ extern struct tree_opt_pass pass_stdarg;\n extern struct tree_opt_pass pass_early_warn_uninitialized;\n extern struct tree_opt_pass pass_late_warn_uninitialized;\n extern struct tree_opt_pass pass_warn_function_return;\n+extern struct tree_opt_pass pass_warn_function_noreturn;\n extern struct tree_opt_pass pass_phiopt;\n extern struct tree_opt_pass pass_forwprop;\n extern struct tree_opt_pass pass_redundant_phi;"}]}