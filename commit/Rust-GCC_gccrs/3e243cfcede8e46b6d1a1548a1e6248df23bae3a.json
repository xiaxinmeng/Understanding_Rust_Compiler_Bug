{"sha": "3e243cfcede8e46b6d1a1548a1e6248df23bae3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2UyNDNjZmNlZGU4ZTQ2YjZkMWExNTQ4YTFlNjI0OGRmMjNiYWUzYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-12-07T04:53:59Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-12-07T04:53:59Z"}, "message": "re PR c++/55058 (Unexpected invalid type conversion error)\n\n\tPR c++/55058\n\t* pt.c (tsubst): Keep the quals when looking through a typedef.\n\nFrom-SVN: r194282", "tree": {"sha": "37937b4ff2b0e11b4a92113ab4ef5c076b935738", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/37937b4ff2b0e11b4a92113ab4ef5c076b935738"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e243cfcede8e46b6d1a1548a1e6248df23bae3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e243cfcede8e46b6d1a1548a1e6248df23bae3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e243cfcede8e46b6d1a1548a1e6248df23bae3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e243cfcede8e46b6d1a1548a1e6248df23bae3a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "01290963d131b098cc4b0f3f5d3401e976eb8d6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01290963d131b098cc4b0f3f5d3401e976eb8d6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01290963d131b098cc4b0f3f5d3401e976eb8d6e"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "a92ebe147c9a07cf22f1358935c5244be05d3eea", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e243cfcede8e46b6d1a1548a1e6248df23bae3a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e243cfcede8e46b6d1a1548a1e6248df23bae3a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3e243cfcede8e46b6d1a1548a1e6248df23bae3a", "patch": "@@ -1,5 +1,8 @@\n 2012-12-06  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/55058\n+\t* pt.c (tsubst): Keep the quals when looking through a typedef.\n+\n \tPR c++/55249\n \t* tree.c (build_vec_init_elt): Use the type of the initializer.\n "}, {"sha": "33044e0f61ce962f5cc38c1c87ec9be451525956", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e243cfcede8e46b6d1a1548a1e6248df23bae3a/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e243cfcede8e46b6d1a1548a1e6248df23bae3a/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=3e243cfcede8e46b6d1a1548a1e6248df23bae3a", "patch": "@@ -11013,8 +11013,13 @@ tsubst (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n \t  return r;\n \t}\n       else\n-\t/* We don't have an instantiation yet, so drop the typedef.  */\n-\tt = DECL_ORIGINAL_TYPE (decl);\n+\t{\n+\t  /* We don't have an instantiation yet, so drop the typedef.  */\n+\t  int quals = cp_type_quals (t);\n+\t  t = DECL_ORIGINAL_TYPE (decl);\n+\t  t = cp_build_qualified_type_real (t, quals,\n+\t\t\t\t\t    complain | tf_ignore_bad_quals);\n+\t}\n     }\n \n   if (type"}, {"sha": "1d8be358a2022a2769b75fd615c0db478408c6bd", "filename": "gcc/testsuite/g++.dg/template/typedef40.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e243cfcede8e46b6d1a1548a1e6248df23bae3a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypedef40.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e243cfcede8e46b6d1a1548a1e6248df23bae3a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypedef40.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypedef40.C?ref=3e243cfcede8e46b6d1a1548a1e6248df23bae3a", "patch": "@@ -0,0 +1,21 @@\n+// PR c++/55058\n+\n+template <typename T>\n+struct A { };\n+\n+template <typename T>\n+struct B {\n+  B(const A<T> T::* p);\n+  typedef A<T> D;\n+};\n+\n+template <typename T>\n+B<T>::B(const D T::* p) { }\n+\n+struct C {\n+  C() : e() {};\n+\n+  const A<C> e;\n+};\n+\n+B<C> g(&C::e);"}]}