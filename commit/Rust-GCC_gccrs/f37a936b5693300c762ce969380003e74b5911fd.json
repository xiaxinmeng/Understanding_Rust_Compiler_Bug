{"sha": "f37a936b5693300c762ce969380003e74b5911fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM3YTkzNmI1NjkzMzAwYzc2MmNlOTY5MzgwMDAzZTc0YjU5MTFmZA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2005-03-17T00:18:50Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2005-03-17T00:18:50Z"}, "message": "link.cc (ensure_class_linked): Removed #ifdef.\n\n\t* link.cc (ensure_class_linked): Removed #ifdef.\n\t(print_class_loaded): Likewise.\n\t(wait_for_state): Likewise.\n\t* java/lang/Class.h (_Jv_IsInterpretedClass): Always declare.\n\t* include/jvm.h (_Jv_IsInterpretedClass): Moved from...\n\t* include/java-interp.h: ... here.\n\nFrom-SVN: r96589", "tree": {"sha": "1c077bcd3965d1e954aabcae14e7bacf373670a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c077bcd3965d1e954aabcae14e7bacf373670a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f37a936b5693300c762ce969380003e74b5911fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f37a936b5693300c762ce969380003e74b5911fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f37a936b5693300c762ce969380003e74b5911fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f37a936b5693300c762ce969380003e74b5911fd/comments", "author": null, "committer": null, "parents": [{"sha": "4c7e54712993900d57a3d533e8ad32d9c17fb80c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c7e54712993900d57a3d533e8ad32d9c17fb80c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c7e54712993900d57a3d533e8ad32d9c17fb80c"}], "stats": {"total": 43, "additions": 24, "deletions": 19}, "files": [{"sha": "7c9560fc8af7b9ebed1e66d08d7785dad8e5ae41", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37a936b5693300c762ce969380003e74b5911fd/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37a936b5693300c762ce969380003e74b5911fd/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=f37a936b5693300c762ce969380003e74b5911fd", "patch": "@@ -1,3 +1,12 @@\n+2005-03-16  Tom Tromey  <tromey@redhat.com>\n+\n+\t* link.cc (ensure_class_linked): Removed #ifdef.\n+\t(print_class_loaded): Likewise.\n+\t(wait_for_state): Likewise.\n+\t* java/lang/Class.h (_Jv_IsInterpretedClass): Always declare.\n+\t* include/jvm.h (_Jv_IsInterpretedClass): Moved from...\n+\t* include/java-interp.h: ... here.\n+\n 2005-03-16  Tom Tromey  <tromey@redhat.com>\n \n \t* gnu/java/lang/MainThread.java (run): Load main class using"}, {"sha": "061520013d7097c29993cc8bb5f6382df38ff0db", "filename": "libjava/include/java-interp.h", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37a936b5693300c762ce969380003e74b5911fd/libjava%2Finclude%2Fjava-interp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37a936b5693300c762ce969380003e74b5911fd/libjava%2Finclude%2Fjava-interp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjava-interp.h?ref=f37a936b5693300c762ce969380003e74b5911fd", "patch": "@@ -1,6 +1,6 @@\n // java-interp.h - Header file for the bytecode interpreter.  -*- c++ -*-\n \n-/* Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004  Free Software Foundation\n+/* Copyright (C) 1999, 2000, 2001, 2002, 2003, 2004, 2005  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -32,12 +32,6 @@ extern \"C\" {\n #include <ffi.h>\n }\n \n-extern inline jboolean\n-_Jv_IsInterpretedClass (jclass c)\n-{\n-  return (c->accflags & java::lang::reflect::Modifier::INTERPRETED) != 0;\n-}\n-\n struct _Jv_ResolvedMethod;\n \n void _Jv_InitInterpreter ();"}, {"sha": "62347880bb661fc67125b742be209ca68131ab50", "filename": "libjava/include/jvm.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37a936b5693300c762ce969380003e74b5911fd/libjava%2Finclude%2Fjvm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37a936b5693300c762ce969380003e74b5911fd/libjava%2Finclude%2Fjvm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fjvm.h?ref=f37a936b5693300c762ce969380003e74b5911fd", "patch": "@@ -572,4 +572,13 @@ _Jv_CheckABIVersion (unsigned long value)\n \t  || value == (GCJ_VERSION + GCJ_BINARYCOMPAT_ADDITION));\n }\n \n+// It makes the source cleaner if we simply always define this\n+// function.  If the interpreter is not built, it will never return\n+// 'true'.\n+extern inline jboolean\n+_Jv_IsInterpretedClass (jclass c)\n+{\n+  return (c->accflags & java::lang::reflect::Modifier::INTERPRETED) != 0;\n+}\n+\n #endif /* __JAVA_JVM_H__ */"}, {"sha": "a82089dbf9f4ff93c365f472a989b89ef1ecfcfb", "filename": "libjava/java/lang/Class.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37a936b5693300c762ce969380003e74b5911fd/libjava%2Fjava%2Flang%2FClass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37a936b5693300c762ce969380003e74b5911fd/libjava%2Fjava%2Flang%2FClass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClass.h?ref=f37a936b5693300c762ce969380003e74b5911fd", "patch": "@@ -233,8 +233,9 @@ jboolean _Jv_CheckAccess (jclass self_klass, jclass other_klass,\n \t\t\t  jint flags);\n jclass _Jv_GetArrayClass (jclass klass, java::lang::ClassLoader *loader);\n \n-#ifdef INTERPRETER\n jboolean _Jv_IsInterpretedClass (jclass);\n+\n+#ifdef INTERPRETER\n void _Jv_InitField (jobject, jclass, int);\n \n class _Jv_ClassReader;\n@@ -465,8 +466,9 @@ class java::lang::Class : public java::lang::Object\n   friend jclass (::_Jv_GetArrayClass) (jclass klass,\n \t\t\t\t       java::lang::ClassLoader *loader);\n \n-#ifdef INTERPRETER\n   friend jboolean (::_Jv_IsInterpretedClass) (jclass);\n+\n+#ifdef INTERPRETER\n   friend void ::_Jv_InitField (jobject, jclass, int);\n \n   friend class ::_Jv_ClassReader;\t"}, {"sha": "909a7b68a0e972f52fed33c3421c183adaee04f8", "filename": "libjava/link.cc", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37a936b5693300c762ce969380003e74b5911fd/libjava%2Flink.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37a936b5693300c762ce969380003e74b5911fd/libjava%2Flink.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Flink.cc?ref=f37a936b5693300c762ce969380003e74b5911fd", "patch": "@@ -1395,9 +1395,7 @@ _Jv_Linker::ensure_class_linked (jclass klass)\n       // a reference to a class we can't access.  This can validly\n       // occur in an obscure case involving the InnerClasses\n       // attribute.\n-#ifdef INTERPRETER\n       if (! _Jv_IsInterpretedClass (klass))\n-#endif\n \t{\n \t  // Resolve class constants first, since other constant pool\n \t  // entries may rely on these.\n@@ -1652,11 +1650,7 @@ _Jv_Linker::print_class_loaded (jclass klass)\n \n   // We use a somewhat bogus test for the ABI here.\n   char *abi;\n-#ifdef INTERPRETER\n   if (_Jv_IsInterpretedClass (klass))\n-#else\n-  if (false)\n-#endif\n     abi = \"bytecode\";\n   else if (klass->state == JV_STATE_PRELOADING)\n     abi = \"BC-compiled\";\n@@ -1693,10 +1687,7 @@ _Jv_Linker::wait_for_state (jclass klass, int state)\n   if (gcj::verbose_class_flag\n       && (klass->state == JV_STATE_COMPILED\n \t  || klass->state == JV_STATE_PRELOADING)\n-#ifdef INTERPRETER\n-      && ! _Jv_IsInterpretedClass (klass)\n-#endif\n-      )\n+      && ! _Jv_IsInterpretedClass (klass))\n     print_class_loaded (klass);\n \n   try"}]}