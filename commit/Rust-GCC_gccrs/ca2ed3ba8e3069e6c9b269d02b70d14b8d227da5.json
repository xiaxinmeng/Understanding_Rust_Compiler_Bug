{"sha": "ca2ed3ba8e3069e6c9b269d02b70d14b8d227da5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2EyZWQzYmE4ZTMwNjllNmM5YjI2OWQwMmI3MGQxNGI4ZDIyN2RhNQ==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2011-01-02T10:19:42Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2011-01-02T10:19:42Z"}, "message": "In gcc/objc/: 2011-01-02 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn gcc/objc/:\n2011-01-02  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* objc-act.c (check_that_protocol_is_defined): New.\n\t(lookup_protocol): Call check_that_protocol_is_defined.\n\nIn gcc/testsuite/:\n2011-01-02  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* objc.dg/protocol-forward-1.m: Removed TODO.\n\t* objc.dg/protocol-forward-2.m: New.\n\t* obj-c++.dg/protocol-forward-2.mm: Removed TODO.\n\t* obj-c++.dg/protocol-forward-2.mm: New.\n\nFrom-SVN: r168398", "tree": {"sha": "11c76db2f4f7ce2099f86c2f785be90df61a15e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/11c76db2f4f7ce2099f86c2f785be90df61a15e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca2ed3ba8e3069e6c9b269d02b70d14b8d227da5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca2ed3ba8e3069e6c9b269d02b70d14b8d227da5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca2ed3ba8e3069e6c9b269d02b70d14b8d227da5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca2ed3ba8e3069e6c9b269d02b70d14b8d227da5/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5af62fcd9311650891737643858e34433ab4557a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5af62fcd9311650891737643858e34433ab4557a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5af62fcd9311650891737643858e34433ab4557a"}], "stats": {"total": 235, "additions": 224, "deletions": 11}, "files": [{"sha": "7a9387f5fb183120b4df81baab7f4bb8dcb3d4d4", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca2ed3ba8e3069e6c9b269d02b70d14b8d227da5/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca2ed3ba8e3069e6c9b269d02b70d14b8d227da5/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=ca2ed3ba8e3069e6c9b269d02b70d14b8d227da5", "patch": "@@ -1,3 +1,8 @@\n+2011-01-02  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc-act.c (check_that_protocol_is_defined): New.\n+\t(lookup_protocol): Call check_that_protocol_is_defined.\n+\n 2010-12-30  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc-act.c (objc_types_are_equivalent): Fixed comparing protocol"}, {"sha": "b65b928060d1c85c7e2d4367a2c96440c2b3f912", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca2ed3ba8e3069e6c9b269d02b70d14b8d227da5/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca2ed3ba8e3069e6c9b269d02b70d14b8d227da5/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=ca2ed3ba8e3069e6c9b269d02b70d14b8d227da5", "patch": "@@ -10929,11 +10929,30 @@ add_protocol (tree protocol)\n   return protocol_chain;\n }\n \n+/* Check that a protocol is defined, and, recursively, that all\n+   protocols that this protocol conforms to are defined too.  */\n+static void\n+check_that_protocol_is_defined (tree protocol)\n+{\n+  if (!PROTOCOL_DEFINED (protocol))\n+    warning (0, \"definition of protocol %qE not found\",\n+\t     PROTOCOL_NAME (protocol));\n+\n+  /* If the protocol itself conforms to other protocols, check them\n+     too, recursively.  */\n+  if (PROTOCOL_LIST (protocol))\n+    {\n+      tree p;\n+\n+      for (p = PROTOCOL_LIST (p); p; p = TREE_CHAIN (p))\n+\tcheck_that_protocol_is_defined (TREE_VALUE (p));\n+    }\n+}\n+\n /* Looks up a protocol.  If 'warn_if_deprecated' is true, a warning is\n    emitted if the protocol is deprecated.  If 'definition_required' is\n    true, a warning is emitted if a full @protocol definition has not\n    been seen.  */\n-\n static tree\n lookup_protocol (tree ident, bool warn_if_deprecated, bool definition_required)\n {\n@@ -10951,9 +10970,8 @@ lookup_protocol (tree ident, bool warn_if_deprecated, bool definition_required)\n \t\t     PROTOCOL_NAME (chain));\n \t  }\n \n-\tif (definition_required && !PROTOCOL_DEFINED (chain))\n-\t  warning (0, \"definition of protocol %qE not found\",\n-\t\t   PROTOCOL_NAME (chain));\n+\tif (definition_required)\n+\t  check_that_protocol_is_defined (chain);\n \n \treturn chain;\n       }"}, {"sha": "43d9687d97cd96bf2619b641fc5b5b09090fb7cb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca2ed3ba8e3069e6c9b269d02b70d14b8d227da5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca2ed3ba8e3069e6c9b269d02b70d14b8d227da5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ca2ed3ba8e3069e6c9b269d02b70d14b8d227da5", "patch": "@@ -1,3 +1,10 @@\n+2011-01-02  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc.dg/protocol-forward-1.m: Removed TODO.\n+\t* objc.dg/protocol-forward-2.m: New.\n+\t* obj-c++.dg/protocol-forward-2.mm: Removed TODO.\n+\t* obj-c++.dg/protocol-forward-2.mm: New.\n+\n 2011-01-01  Kai Tietz  <kai.tietz@onevision.com>\n \n \tPR target/38662"}, {"sha": "03c7ae065da8cb8716e786aa756a2e357acd9d0e", "filename": "gcc/testsuite/obj-c++.dg/protocol-forward-1.mm", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca2ed3ba8e3069e6c9b269d02b70d14b8d227da5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fprotocol-forward-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca2ed3ba8e3069e6c9b269d02b70d14b8d227da5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fprotocol-forward-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fprotocol-forward-1.mm?ref=ca2ed3ba8e3069e6c9b269d02b70d14b8d227da5", "patch": "@@ -25,6 +25,3 @@ @interface MyClass2 (Category) <MyProtocol>  /* { dg-warning \"definition of prot\n @protocol MyProtocol3 <MyProtocol> /* Ok */\n @end\n \n-/* TODO: I guess if MyProtocol3 is now used in an @interface, we\n-   should check that all the protocols it references are defined\n-   too ?  */"}, {"sha": "9217ca8d55aa4ff1f093da322e667f9e6e3dee5c", "filename": "gcc/testsuite/obj-c++.dg/protocol-forward-2.mm", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca2ed3ba8e3069e6c9b269d02b70d14b8d227da5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fprotocol-forward-2.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca2ed3ba8e3069e6c9b269d02b70d14b8d227da5/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fprotocol-forward-2.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fprotocol-forward-2.mm?ref=ca2ed3ba8e3069e6c9b269d02b70d14b8d227da5", "patch": "@@ -0,0 +1,95 @@\n+/* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, December 2010.  */\n+/* { dg-do compile } */\n+\n+/* Test that all protocols appearing in @interface declarations are\n+   real (ie, we saw a full @protocol definition with list of methods),\n+   and not just forward-references (ie, \"@protocol NSObject;\").  This\n+   test checks protocols implemented by other protocols.  */\n+\n+#include <objc/objc.h>\n+\n+@protocol MyProtocol;\n+\n+@interface MyClass <MyProtocol> /* { dg-warning \"definition of protocol .MyProtocol. not found\" } */\n+@end\n+\n+\n+@protocol MyProtocol2 <MyProtocol>\n+- (int)method2;\n+@end\n+\n+@interface MyClass2 <MyProtocol2> /* { dg-warning \"definition of protocol .MyProtocol. not found\" } */\n+- (int)method2;\n+@end\n+\n+\n+@protocol MyProtocol3 <MyProtocol2>\n+- (int)method3;\n+@end\n+\n+@interface MyClass3 <MyProtocol3>  /* { dg-warning \"definition of protocol .MyProtocol. not found\" } */\n+- (int)method2;\n+- (int)method3;\n+@end\n+\n+\n+@protocol MyProtocol4 <MyProtocol3, MyProtocol2>\n+- (int)method4;\n+@end\n+\n+@interface MyClass4 <MyProtocol4>  /* { dg-warning \"definition of protocol .MyProtocol. not found\" } */\n+- (int)method2;\n+- (int)method3;\n+- (int)method4;\n+@end\n+\n+\n+@protocol MyProtocol5\n+- (int)method5;\n+@end\n+\n+@interface MyClass5 <MyProtocol5> /* Ok */\n+- (int)method5;\n+@end\n+\n+\n+@protocol MyProtocol6 <MyProtocol5>\n+- (int)method6;\n+@end\n+\n+@interface MyClass6 <MyProtocol6> /* Ok */\n+- (int)method5;\n+- (int)method6;\n+@end\n+\n+\n+@protocol MyProtocol7 <MyProtocol5, MyProtocol4>\n+- (int)method7;\n+@end\n+\n+@interface MyClass7 <MyProtocol7> /* { dg-warning \"definition of protocol .MyProtocol. not found\" } */\n+- (int)method2;\n+- (int)method3;\n+- (int)method4;\n+- (int)method5;\n+- (int)method7;\n+@end\n+\n+\n+/* Now test that if we finally define MyProtocol, the warnings go away.  */\n+@protocol MyProtocol\n+- (int)method;\n+@end\n+\n+@protocol MyProtocol8 <MyProtocol5, MyProtocol4>\n+- (int)method8;\n+@end\n+\n+@interface MyClass8 <MyProtocol8> /* Ok */\n+- (int)method;\n+- (int)method2;\n+- (int)method3;\n+- (int)method4;\n+- (int)method5;\n+- (int)method8;\n+@end"}, {"sha": "df8dcd70f3e88c661fa25d64a07a08222a9d72af", "filename": "gcc/testsuite/objc.dg/protocol-forward-1.m", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca2ed3ba8e3069e6c9b269d02b70d14b8d227da5/gcc%2Ftestsuite%2Fobjc.dg%2Fprotocol-forward-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca2ed3ba8e3069e6c9b269d02b70d14b8d227da5/gcc%2Ftestsuite%2Fobjc.dg%2Fprotocol-forward-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fprotocol-forward-1.m?ref=ca2ed3ba8e3069e6c9b269d02b70d14b8d227da5", "patch": "@@ -24,7 +24,3 @@ @interface MyClass2 (Category) <MyProtocol>  /* { dg-warning \"definition of prot\n \n @protocol MyProtocol3 <MyProtocol> /* Ok */\n @end\n-\n-/* TODO: I guess if MyProtocol3 is now used in an @interface, we\n-   should check that all the protocols it references are defined\n-   too ?  */"}, {"sha": "9217ca8d55aa4ff1f093da322e667f9e6e3dee5c", "filename": "gcc/testsuite/objc.dg/protocol-forward-2.m", "status": "added", "additions": 95, "deletions": 0, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca2ed3ba8e3069e6c9b269d02b70d14b8d227da5/gcc%2Ftestsuite%2Fobjc.dg%2Fprotocol-forward-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca2ed3ba8e3069e6c9b269d02b70d14b8d227da5/gcc%2Ftestsuite%2Fobjc.dg%2Fprotocol-forward-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fprotocol-forward-2.m?ref=ca2ed3ba8e3069e6c9b269d02b70d14b8d227da5", "patch": "@@ -0,0 +1,95 @@\n+/* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, December 2010.  */\n+/* { dg-do compile } */\n+\n+/* Test that all protocols appearing in @interface declarations are\n+   real (ie, we saw a full @protocol definition with list of methods),\n+   and not just forward-references (ie, \"@protocol NSObject;\").  This\n+   test checks protocols implemented by other protocols.  */\n+\n+#include <objc/objc.h>\n+\n+@protocol MyProtocol;\n+\n+@interface MyClass <MyProtocol> /* { dg-warning \"definition of protocol .MyProtocol. not found\" } */\n+@end\n+\n+\n+@protocol MyProtocol2 <MyProtocol>\n+- (int)method2;\n+@end\n+\n+@interface MyClass2 <MyProtocol2> /* { dg-warning \"definition of protocol .MyProtocol. not found\" } */\n+- (int)method2;\n+@end\n+\n+\n+@protocol MyProtocol3 <MyProtocol2>\n+- (int)method3;\n+@end\n+\n+@interface MyClass3 <MyProtocol3>  /* { dg-warning \"definition of protocol .MyProtocol. not found\" } */\n+- (int)method2;\n+- (int)method3;\n+@end\n+\n+\n+@protocol MyProtocol4 <MyProtocol3, MyProtocol2>\n+- (int)method4;\n+@end\n+\n+@interface MyClass4 <MyProtocol4>  /* { dg-warning \"definition of protocol .MyProtocol. not found\" } */\n+- (int)method2;\n+- (int)method3;\n+- (int)method4;\n+@end\n+\n+\n+@protocol MyProtocol5\n+- (int)method5;\n+@end\n+\n+@interface MyClass5 <MyProtocol5> /* Ok */\n+- (int)method5;\n+@end\n+\n+\n+@protocol MyProtocol6 <MyProtocol5>\n+- (int)method6;\n+@end\n+\n+@interface MyClass6 <MyProtocol6> /* Ok */\n+- (int)method5;\n+- (int)method6;\n+@end\n+\n+\n+@protocol MyProtocol7 <MyProtocol5, MyProtocol4>\n+- (int)method7;\n+@end\n+\n+@interface MyClass7 <MyProtocol7> /* { dg-warning \"definition of protocol .MyProtocol. not found\" } */\n+- (int)method2;\n+- (int)method3;\n+- (int)method4;\n+- (int)method5;\n+- (int)method7;\n+@end\n+\n+\n+/* Now test that if we finally define MyProtocol, the warnings go away.  */\n+@protocol MyProtocol\n+- (int)method;\n+@end\n+\n+@protocol MyProtocol8 <MyProtocol5, MyProtocol4>\n+- (int)method8;\n+@end\n+\n+@interface MyClass8 <MyProtocol8> /* Ok */\n+- (int)method;\n+- (int)method2;\n+- (int)method3;\n+- (int)method4;\n+- (int)method5;\n+- (int)method8;\n+@end"}]}