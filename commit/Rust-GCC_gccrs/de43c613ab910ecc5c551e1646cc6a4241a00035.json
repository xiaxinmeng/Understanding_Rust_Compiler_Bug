{"sha": "de43c613ab910ecc5c551e1646cc6a4241a00035", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU0M2M2MTNhYjkxMGVjYzVjNTUxZTE2NDZjYzZhNDI0MWEwMDAzNQ==", "commit": {"author": {"name": "Brooks Moses", "email": "brooks.moses@codesourcery.com", "date": "2007-01-04T02:21:38Z"}, "committer": {"name": "Brooks Moses", "email": "brooks@gcc.gnu.org", "date": "2007-01-04T02:21:38Z"}, "message": "* gfortran.texi (GNU Fortran and GCC): Rewrite\n\nFrom-SVN: r120428", "tree": {"sha": "bded8fff283fe1324d3c3b4120e6b439f190ece0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bded8fff283fe1324d3c3b4120e6b439f190ece0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de43c613ab910ecc5c551e1646cc6a4241a00035", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de43c613ab910ecc5c551e1646cc6a4241a00035", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de43c613ab910ecc5c551e1646cc6a4241a00035", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de43c613ab910ecc5c551e1646cc6a4241a00035/comments", "author": null, "committer": null, "parents": [{"sha": "e6b38f67a1e0677553cde7eaf9b907aad556de6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6b38f67a1e0677553cde7eaf9b907aad556de6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6b38f67a1e0677553cde7eaf9b907aad556de6e"}], "stats": {"total": 76, "additions": 33, "deletions": 43}, "files": [{"sha": "4a2936a434fb58bcd0b3f6950f09882efd3ea157", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de43c613ab910ecc5c551e1646cc6a4241a00035/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de43c613ab910ecc5c551e1646cc6a4241a00035/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=de43c613ab910ecc5c551e1646cc6a4241a00035", "patch": "@@ -1,3 +1,7 @@\n+2007-01-03  Brooks Moses  <brooks.moses@codesourcery.com>\n+\n+\t* gfortran.texi (GNU Fortran and GCC): Rewrite\n+\n 2007-01-03  Brooks Moses  <brooks.moses@codesourcery.com>\n \n \t* gfortran.texi (Introduction): Lower \"Part I:"}, {"sha": "043a774a72efdf46b4a0f7199a69d6878f3c6318", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 29, "deletions": 43, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de43c613ab910ecc5c551e1646cc6a4241a00035/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de43c613ab910ecc5c551e1646cc6a4241a00035/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=de43c613ab910ecc5c551e1646cc6a4241a00035", "patch": "@@ -351,49 +351,35 @@ programs will call it for you.\n @node GNU Fortran and GCC\n @section GNU Fortran and GCC\n @cindex GNU Compiler Collection\n-\n-GCC used to be the GNU ``C'' Compiler,\n-but is now known as the @dfn{GNU Compiler Collection}.\n-GCC provides the GNU system with a very versatile\n-compiler middle end (shared optimization passes),\n-and back ends (code generators) for many different\n-computer architectures and operating systems.\n-The code of the middle end and back end are shared by all\n-compiler front ends that are in the GNU Compiler Collection.\n-\n-A GCC front end is essentially a source code parser\n-and an intermediate code generator.  The code generator translates the\n-semantics of the source code into a language independent form called\n-@dfn{GENERIC}.\n-\n-The parser takes a source file written in a\n-particular computer language, reads and parses it,\n-and tries to make sure that the source code conforms to\n-the language rules.\n-Once the correctness of a program has been established,\n-the compiler will build a data structure known as the\n-@dfn{Abstract Syntax tree},\n-or just @dfn{AST} or ``tree'' for short.\n-This data structure represents the whole program\n-or a subroutine or a function.\n-The ``tree'' is passed to the GCC middle end,\n-which will perform optimization passes on it.  The optimized AST is then \n-handed off too the back end which assembles the program unit.\n-\n-Different phases in this translation process can be,\n-and in fact @emph{are} merged in many compiler front ends.\n-GNU Fortran has a strict separation between the\n-parser and code generator.\n-\n-The goal of the GNU Fortran project is to build a new front end for GCC.\n-Specifically, a Fortran 95 front end.\n-In a non-@command{gfortran} installation,\n-@command{gcc} will not be able to compile Fortran source code\n-(only the ``C'' front end has to be compiled if you want to build GCC,\n-all other languages are optional).\n-If you build GCC with @command{gfortran}, @command{gcc} will recognize\n-@file{.f/.f90/.f95} source files and accepts Fortran specific\n-command line options.\n+@cindex GCC\n+\n+GNU Fortran is a part of GCC, the @dfn{GNU Compiler Collection}.  GCC\n+consists of a collection of front ends for various languages, which\n+translate the source code into a language-independent form called\n+@dfn{GENERIC}.  This is then processed by a common middle end which\n+provides optimization, and then passed to one of a collection of back\n+ends which generate code for different computer architectures and\n+operating systems.\n+\n+Functionally, this is implemented with a driver program (@command{gcc})\n+which provides the command-line interface for the compiler.  It calls\n+the relevant compiler front-end program (e.g., @command{f951} for\n+Fortran) for each file in the source code, and then calls the assembler\n+and linker as appropriate to produce the compiled output. In a copy of\n+GCC which has been compiled with Fortran language support enabled,\n+@command{gcc} will recognize files with @file{.f}, @file{.f90}, and\n+@file{.f95} extensions as Fortran source code, and compile it\n+accordingly.  A @command{gfortran} driver program is also provided,\n+which is identical to @command{gcc} except that it automatically links\n+the Fortran runtime libraries into the compiled program.\n+\n+This manual specifically documents the Fortran front end, which handles\n+the programming language's syntax and semantics.  The aspects of GCC\n+which relate to the optimization passes and the back-end code generation\n+are documented in the GCC manual; see \n+@ref{Top,,Introduction,gcc,Using the GNU Compiler Collection (GCC)}.\n+The two manuals together provide a complete reference for the GNU\n+Fortran compiler.\n \n \n @c ---------------------------------------------------------------------"}]}