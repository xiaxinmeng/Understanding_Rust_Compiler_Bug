{"sha": "d73e9b8da15ed020f98756edb2f1795b5f063129", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDczZTliOGRhMTVlZDAyMGY5ODc1NmVkYjJmMTc5NWI1ZjA2MzEyOQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-09T16:56:24Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-10-09T16:56:24Z"}, "message": "(asctoeg): Allocate local buffer dynamically.\n\n(asctoeg): Allocate local buffer dynamically.  Count\nany lost significant digits before the decimal point.\n\nFrom-SVN: r5696", "tree": {"sha": "cba6e858982dd07c4dec00025ad5ef527825946e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cba6e858982dd07c4dec00025ad5ef527825946e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d73e9b8da15ed020f98756edb2f1795b5f063129", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d73e9b8da15ed020f98756edb2f1795b5f063129", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d73e9b8da15ed020f98756edb2f1795b5f063129", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d73e9b8da15ed020f98756edb2f1795b5f063129/comments", "author": null, "committer": null, "parents": [{"sha": "0debc00746c5f125a208f0f35dd6cbae415c6596", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0debc00746c5f125a208f0f35dd6cbae415c6596", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0debc00746c5f125a208f0f35dd6cbae415c6596"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "b6b55a52ff79f675357b89c8354bb674c1fc905c", "filename": "gcc/real.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d73e9b8da15ed020f98756edb2f1795b5f063129/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d73e9b8da15ed020f98756edb2f1795b5f063129/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=d73e9b8da15ed020f98756edb2f1795b5f063129", "patch": "@@ -4626,9 +4626,8 @@ asctoe (s, y)\n   asctoeg (s, y, NBITS);\n }\n \n-/* Space to make a copy of the input string: */\n-static char lstr[82];\n \n+/* ASCII to e type, with specified rounding precision = oprec. */\n void \n asctoeg (ss, y, oprec)\n      char *ss;\n@@ -4640,19 +4639,16 @@ asctoeg (ss, y, oprec)\n   int k, trail, c, rndsav;\n   EMULONG lexp;\n   unsigned EMUSHORT nsign, *p;\n-  char *sp, *s;\n+  char *sp, *s, *lstr;\n \n   /* Copy the input string. */\n+  lstr = (char *) alloca (strlen (ss) + 1);\n   s = ss;\n   while (*s == ' ')\t\t/* skip leading spaces */\n     ++s;\n   sp = lstr;\n-  for (k = 0; k < 79; k++)\n-    {\n-      if ((*sp++ = *s++) == '\\0')\n-\tbreak;\n-    }\n-  *sp = '\\0';\n+  while ((*sp++ = *s++) == '\\0')\n+\t;\n   s = lstr;\n \n   rndsav = rndprc;\n@@ -4713,7 +4709,11 @@ asctoeg (ss, y, oprec)\n \t}\n       else\n \t{\n+\t  /* Mark any lost non-zero digit.  */\n \t  lost |= k;\n+\t  /* Count lost digits before the decimal point.  */\n+\t  if (decflg == 0)\n+\t    nexp -= 1;\n \t}\n       prec += 1;\n       goto donchr;"}]}