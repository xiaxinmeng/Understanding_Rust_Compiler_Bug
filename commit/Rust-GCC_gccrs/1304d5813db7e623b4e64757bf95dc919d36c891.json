{"sha": "1304d5813db7e623b4e64757bf95dc919d36c891", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTMwNGQ1ODEzZGI3ZTYyM2I0ZTY0NzU3YmY5NWRjOTE5ZDM2Yzg5MQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-09-23T17:12:26Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-09-23T17:12:26Z"}, "message": "re PR libstdc++/37624 (22_locale/num_get/get/char/10.cc)\n\n2008-09-23  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/37624\n\t* testsuite/22_locale/num_get/get/char/10.cc: Skip long double case\n\twhen strtold is not available.\n\t* testsuite/22_locale/num_get/get/wchar_t/10.cc: Likewise.\n\nFrom-SVN: r140602", "tree": {"sha": "00fb18f4fe5f2b18adb4b8b91956551e31bf7006", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00fb18f4fe5f2b18adb4b8b91956551e31bf7006"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1304d5813db7e623b4e64757bf95dc919d36c891", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1304d5813db7e623b4e64757bf95dc919d36c891", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1304d5813db7e623b4e64757bf95dc919d36c891", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1304d5813db7e623b4e64757bf95dc919d36c891/comments", "author": null, "committer": null, "parents": [{"sha": "e5f21110e033125e949c7858a44c3b28e0d9a4c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5f21110e033125e949c7858a44c3b28e0d9a4c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5f21110e033125e949c7858a44c3b28e0d9a4c0"}], "stats": {"total": 41, "additions": 26, "deletions": 15}, "files": [{"sha": "bdf354b4fa8587da13fa961222a27199ee075803", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1304d5813db7e623b4e64757bf95dc919d36c891/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1304d5813db7e623b4e64757bf95dc919d36c891/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1304d5813db7e623b4e64757bf95dc919d36c891", "patch": "@@ -1,3 +1,10 @@\n+2008-09-23  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/37624\n+\t* testsuite/22_locale/num_get/get/char/10.cc: Skip long double case\n+\twhen strtold is not available.\n+\t* testsuite/22_locale/num_get/get/wchar_t/10.cc: Likewise.\n+\n 2008-09-23  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/37391 continued."}, {"sha": "4f80d86e6aba971d9871ff441b7126fc26860f21", "filename": "libstdc++-v3/testsuite/22_locale/num_get/get/char/10.cc", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1304d5813db7e623b4e64757bf95dc919d36c891/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fchar%2F10.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1304d5813db7e623b4e64757bf95dc919d36c891/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fchar%2F10.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fchar%2F10.cc?ref=1304d5813db7e623b4e64757bf95dc919d36c891", "patch": "@@ -35,13 +35,10 @@ void test01()\n   const num_get<char>& ng = use_facet<num_get<char> >(iss.getloc()); \n   ios_base::iostate err = ios_base::goodbit;\n   iterator_type end;\n-  float f = 0.0f;\n-  double d = 0.0;\n-  long double ld = 0.0l;\n-  float f1 = 1.0f;\n-  double d1 = 3.0;\n-  long double ld1 = 6.0l;\n-  \n+  float f = 1.0f;\n+  double d = 1.0;\n+  long double ld = 1.0l;\n+\n   iss.str(\"1e.\");\n   err = ios_base::goodbit;\n   end = ng.get(iss.rdbuf(), 0, iss, err, f);\n@@ -60,9 +57,14 @@ void test01()\n   iss.clear();\n   err = ios_base::goodbit;\n   end = ng.get(iss.rdbuf(), 0, iss, err, ld);\n-  VERIFY( err == ios_base::failbit );\n   VERIFY( *end == ' ' );\n+\n+  // libstdc++/37624.  We can't always obtain the required behavior\n+  // when sscanf is involved, because of, e.g., glibc/1765.\n+#if defined(_GLIBCXX_HAVE_STRTOLD) && !defined(_GLIBCXX_HAVE_BROKEN_STRTOLD)\n+  VERIFY( err == ios_base::failbit );\n   VERIFY( ld == 0.0l );\n+#endif\n }\n \n int main()"}, {"sha": "51d4a127c8fb8c2827b9bb555b77a6690a63d9b3", "filename": "libstdc++-v3/testsuite/22_locale/num_get/get/wchar_t/10.cc", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1304d5813db7e623b4e64757bf95dc919d36c891/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fwchar_t%2F10.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1304d5813db7e623b4e64757bf95dc919d36c891/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fwchar_t%2F10.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fnum_get%2Fget%2Fwchar_t%2F10.cc?ref=1304d5813db7e623b4e64757bf95dc919d36c891", "patch": "@@ -35,12 +35,9 @@ void test01()\n   const num_get<wchar_t>& ng = use_facet<num_get<wchar_t> >(iss.getloc()); \n   ios_base::iostate err = ios_base::goodbit;\n   iterator_type end;\n-  float f = 0.0f;\n-  double d = 0.0;\n-  long double ld = 0.0l;\n-  float f1 = 1.0f;\n-  double d1 = 3.0;\n-  long double ld1 = 6.0l;\n+  float f = 1.0f;\n+  double d = 1.0;\n+  long double ld = 1.0l;\n   \n   iss.str(L\"1e.\");\n   err = ios_base::goodbit;\n@@ -60,9 +57,14 @@ void test01()\n   iss.clear();\n   err = ios_base::goodbit;\n   end = ng.get(iss.rdbuf(), 0, iss, err, ld);\n-  VERIFY( err == ios_base::failbit );\n   VERIFY( *end == L' ' );\n+\n+  // libstdc++/37624.  We can't always obtain the required behavior\n+  // when sscanf is involved, because of, e.g., glibc/1765.\n+#if defined(_GLIBCXX_HAVE_STRTOLD) && !defined(_GLIBCXX_HAVE_BROKEN_STRTOLD)\n+  VERIFY( err == ios_base::failbit );\n   VERIFY( ld == 0.0l );\n+#endif\n }\n \n int main()"}]}