{"sha": "10b70b8e5eb8d4b5ab175785366cfc6cbe837390", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBiNzBiOGU1ZWI4ZDRiNWFiMTc1Nzg1MzY2Y2ZjNmNiZTgzNzM5MA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-01-13T08:11:01Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-01-13T08:11:01Z"}, "message": "re PR tree-optimization/77283 (Revision 238005 disables loop unrolling)\n\n2017-01-13  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/77283\n\t* gimple-ssa-split-paths.c: Include gimple-ssa.h, tree-phinodes.h\n\tand ssa-iterators.h.\n\t(is_feasible_trace): Implement a cost model based on joiner\n\tPHI node uses.\n\n\t* gcc.dg/tree-ssa/split-path-7.c: Adjust.\n\t* gcc.dg/tree-ssa/split-path-8.c: New testcase.\n\t* gcc.dg/tree-ssa/split-path-9.c: Likewise.\n\nFrom-SVN: r244392", "tree": {"sha": "caf56ce1cf53d62119b36465ce668fc8202fd10d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/caf56ce1cf53d62119b36465ce668fc8202fd10d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10b70b8e5eb8d4b5ab175785366cfc6cbe837390", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10b70b8e5eb8d4b5ab175785366cfc6cbe837390", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10b70b8e5eb8d4b5ab175785366cfc6cbe837390", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10b70b8e5eb8d4b5ab175785366cfc6cbe837390/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "53b586f27080c634a8c2a85d1d0619d1aa7e997c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53b586f27080c634a8c2a85d1d0619d1aa7e997c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53b586f27080c634a8c2a85d1d0619d1aa7e997c"}], "stats": {"total": 95, "additions": 94, "deletions": 1}, "files": [{"sha": "f1bf7ec604c0d0ce41cc329ab36c7267040c2e04", "filename": "gcc/gimple-ssa-split-paths.c", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10b70b8e5eb8d4b5ab175785366cfc6cbe837390/gcc%2Fgimple-ssa-split-paths.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10b70b8e5eb8d4b5ab175785366cfc6cbe837390/gcc%2Fgimple-ssa-split-paths.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-ssa-split-paths.c?ref=10b70b8e5eb8d4b5ab175785366cfc6cbe837390", "patch": "@@ -32,6 +32,9 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tracer.h\"\n #include \"predict.h\"\n #include \"params.h\"\n+#include \"gimple-ssa.h\"\n+#include \"tree-phinodes.h\"\n+#include \"ssa-iterators.h\"\n \n /* Given LATCH, the latch block in a loop, see if the shape of the\n    path reaching LATCH is suitable for being split by duplication.\n@@ -200,6 +203,58 @@ is_feasible_trace (basic_block bb)\n \t}\n     }\n \n+  /* If the joiner has no PHIs with useful uses there is zero chance\n+     of CSE/DCE/jump-threading possibilities exposed by duplicating it.  */\n+  bool found_useful_phi = false;\n+  for (gphi_iterator si = gsi_start_phis (bb); ! gsi_end_p (si);\n+       gsi_next (&si))\n+    {\n+      gphi *phi = si.phi ();\n+      use_operand_p use_p;\n+      imm_use_iterator iter;\n+      FOR_EACH_IMM_USE_FAST (use_p, iter, gimple_phi_result (phi))\n+\t{\n+\t  gimple *stmt = USE_STMT (use_p);\n+\t  if (is_gimple_debug (stmt))\n+\t    continue;\n+\t  /* If there's a use in the joiner this might be a CSE/DCE\n+\t     opportunity.  */\n+\t  if (gimple_bb (stmt) == bb)\n+\t    {\n+\t      found_useful_phi = true;\n+\t      break;\n+\t    }\n+\t  /* If the use is on a loop header PHI and on one path the\n+\t     value is unchanged this might expose a jump threading\n+\t     opportunity.  */\n+\t  if (gimple_code (stmt) == GIMPLE_PHI\n+\t      && gimple_bb (stmt) == bb->loop_father->header\n+\t      /* But for memory the PHI alone isn't good enough.  */\n+\t      && ! virtual_operand_p (gimple_phi_result (stmt)))\n+\t    {\n+\t      for (unsigned i = 0; i < gimple_phi_num_args (phi); ++i)\n+\t\tif (gimple_phi_arg_def (phi, i) == gimple_phi_result (stmt))\n+\t\t  {\n+\t\t    found_useful_phi = true;\n+\t\t    break;\n+\t\t  }\n+\t      if (found_useful_phi)\n+\t\tbreak;\n+\t    }\n+\t}\n+      if (found_useful_phi)\n+\tbreak;\n+    }\n+  if (! found_useful_phi)\n+    {\n+      if (dump_file && (dump_flags & TDF_DETAILS))\n+\tfprintf (dump_file,\n+\t\t \"Block %d is a join that does not expose CSE/DCE/jump-thread \"\n+\t\t \"opportunities when duplicated.\\n\",\n+\t\t bb->index);\n+      return false;\n+    }\n+\n   /* We may want something here which looks at dataflow and tries\n      to guess if duplication of BB is likely to result in simplification\n      of instructions in BB in either the original or the duplicate.  */"}, {"sha": "4dc4fc1109fbe750762573d86a662439332372a3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10b70b8e5eb8d4b5ab175785366cfc6cbe837390/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10b70b8e5eb8d4b5ab175785366cfc6cbe837390/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=10b70b8e5eb8d4b5ab175785366cfc6cbe837390", "patch": "@@ -1,3 +1,10 @@\n+2017-01-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/77283\n+\t* gcc.dg/tree-ssa/split-path-7.c: Adjust.\n+\t* gcc.dg/tree-ssa/split-path-8.c: New testcase.\n+\t* gcc.dg/tree-ssa/split-path-9.c: Likewise.\n+\n 2017-01-12  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* gcc.dg/pr77862.c: Require fpic target."}, {"sha": "f80d30655e718d326975beb4f1461c1eaeeecc89", "filename": "gcc/testsuite/gcc.dg/tree-ssa/split-path-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10b70b8e5eb8d4b5ab175785366cfc6cbe837390/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsplit-path-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10b70b8e5eb8d4b5ab175785366cfc6cbe837390/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsplit-path-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsplit-path-7.c?ref=10b70b8e5eb8d4b5ab175785366cfc6cbe837390", "patch": "@@ -91,4 +91,4 @@ linit ()\n \t}\n     }\n }\n-/* { dg-final { scan-tree-dump-times \"Duplicating join block\" 2 \"split-paths\" } } */\n+/* { dg-final { scan-tree-dump-times \"Duplicating join block\" 0 \"split-paths\" } } */"}, {"sha": "fb54f5dc512e4388999ea2930a9887b8c70ef2d1", "filename": "gcc/testsuite/gcc.dg/tree-ssa/split-path-8.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10b70b8e5eb8d4b5ab175785366cfc6cbe837390/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsplit-path-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10b70b8e5eb8d4b5ab175785366cfc6cbe837390/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsplit-path-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsplit-path-8.c?ref=10b70b8e5eb8d4b5ab175785366cfc6cbe837390", "patch": "@@ -0,0 +1,14 @@\n+/* PR77283 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fdump-tree-split-paths-details\" } */\n+\n+void\n+foo (double *x, double *a, double *b, long n, double limit)\n+{\n+  long i;\n+  for (i=0; i < n; i++)\n+    if (a[i] < limit)\n+      x[i] = b[i];\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"Duplicating join block\" 0 \"split-paths\" } } */"}, {"sha": "bd4ee76f82b7892c252ed2f4e74dc9915006accc", "filename": "gcc/testsuite/gcc.dg/tree-ssa/split-path-9.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10b70b8e5eb8d4b5ab175785366cfc6cbe837390/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsplit-path-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10b70b8e5eb8d4b5ab175785366cfc6cbe837390/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsplit-path-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsplit-path-9.c?ref=10b70b8e5eb8d4b5ab175785366cfc6cbe837390", "patch": "@@ -0,0 +1,17 @@\n+/* PR77366 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fdump-tree-split-paths-details\" } */\n+\n+void\n+foo(unsigned int size, unsigned int *state)\n+{\n+  unsigned int i;\n+\n+  for(i = 0; i < size; i++)\n+    {\n+      if(*state & 1)\n+\t*state ^= 1;\n+    }\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"Duplicating join block\" 0 \"split-paths\" } } */"}]}