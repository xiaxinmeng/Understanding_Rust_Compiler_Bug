{"sha": "b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJjYWNiZmU0YjFhOTA0ZmM4YjlmYzU4ZjI4YWEwMmJjYzQ3OTU0MA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-22T09:02:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-06-22T09:02:09Z"}, "message": "[multiple changes]\n\n2010-06-22  Robert Dewar  <dewar@adacore.com>\n\n\t* ali-util.ads: Minor comment update.\n\t* g-socthi-mingw.adb: Minor reformatting.\n\n2010-06-22  Ed Falis  <falis@adacore.com>\n\n\t* s-osinte-vxworks.ads: take sigset_t definition from System.VxWorks.Ext\n\t* s-vxwext.ads, s-vxwext-kernel.ads, s-vxwext-rtp.ads: Define sigset_t\n\tfor specific versions of VxWorks.\n\n2010-06-22  Emmanuel Briot  <briot@adacore.com>\n\n\t* gnat_rm.texi, gnat_ugn.texi, projects.texi: Remove all project files\n\trelated sections from user's guide and reference manual, since they\n\thave now been merged together into a separate document (projects.texi).\n\tThis removes a lot of duplication where attributes where described\n\tin several places.\n\tThe grammar for the project files is now in each of the sections\n\t(packages,expressions,...) instead of being duplicates in two other\n\tsections (one in the user's guide that contained the full grammar,\n\tand various sections in the rm that contained extracts of the same\n\tgrammar).\n\tAdded the full list of all supported attributes, since existing lists\n\twere incomplete\n\tRename \"associative array\" into \"indexed attribute\"\n\tRemove sections that were duplicates (\"External References in\n\tProject Files\" and \"External Values\", and \"Project Extensions\"\n\tfor instance). The list of valid packages in project files is now in\n\ta single place.\n\n2010-06-22  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Add_Internal_Interface_Entities): If\n\tFind_Primitive_Covering_Interface does not find the operation, it may\n\tbe because of a name conflict between the inherited operation and a\n\tlocal non-overloadable name. In that case look for the operation among\n\tthe primitive operations of the type. This search must succeed\n\tregardless of visibility.\n\nFrom-SVN: r161150", "tree": {"sha": "6899598be63dfd66ea0d8a905fa67221507cd123", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6899598be63dfd66ea0d8a905fa67221507cd123"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540/comments", "author": null, "committer": null, "parents": [{"sha": "d2062f520382da129b9e4b5f5aca71c7d66d6c25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2062f520382da129b9e4b5f5aca71c7d66d6c25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2062f520382da129b9e4b5f5aca71c7d66d6c25"}], "stats": {"total": 9233, "additions": 4279, "deletions": 4954}, "files": [{"sha": "87ae005f9e8e0387fcd61a0c199e2bff7f2ce182", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540", "patch": "@@ -1,3 +1,43 @@\n+2010-06-22  Robert Dewar  <dewar@adacore.com>\n+\n+\t* ali-util.ads: Minor comment update.\n+\t* g-socthi-mingw.adb: Minor reformatting.\n+\n+2010-06-22  Ed Falis  <falis@adacore.com>\n+\n+\t* s-osinte-vxworks.ads: take sigset_t definition from System.VxWorks.Ext\n+\t* s-vxwext.ads, s-vxwext-kernel.ads, s-vxwext-rtp.ads: Define sigset_t\n+\tfor specific versions of VxWorks.\n+\n+2010-06-22  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* gnat_rm.texi, gnat_ugn.texi, projects.texi: Remove all project files\n+\trelated sections from user's guide and reference manual, since they\n+\thave now been merged together into a separate document (projects.texi).\n+\tThis removes a lot of duplication where attributes where described\n+\tin several places.\n+\tThe grammar for the project files is now in each of the sections\n+\t(packages,expressions,...) instead of being duplicates in two other\n+\tsections (one in the user's guide that contained the full grammar,\n+\tand various sections in the rm that contained extracts of the same\n+\tgrammar).\n+\tAdded the full list of all supported attributes, since existing lists\n+\twere incomplete\n+\tRename \"associative array\" into \"indexed attribute\"\n+\tRemove sections that were duplicates (\"External References in\n+\tProject Files\" and \"External Values\", and \"Project Extensions\"\n+\tfor instance). The list of valid packages in project files is now in\n+\ta single place.\n+\n+2010-06-22  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Add_Internal_Interface_Entities): If\n+\tFind_Primitive_Covering_Interface does not find the operation, it may\n+\tbe because of a name conflict between the inherited operation and a\n+\tlocal non-overloadable name. In that case look for the operation among\n+\tthe primitive operations of the type. This search must succeed\n+\tregardless of visibility.\n+\n 2010-06-22  Pascal Obry  <obry@adacore.com>\n \n \t* g-socthi-mingw.adb: Properly honor MSG_WAITALL in recvmsg."}, {"sha": "cbdb14f707580e94cac8754038be2cd266a648a9", "filename": "gcc/ada/ali-util.ads", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540/gcc%2Fada%2Fali-util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540/gcc%2Fada%2Fali-util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali-util.ads?ref=b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540", "patch": "@@ -32,9 +32,8 @@ package ALI.Util is\n    -- Source File Table --\n    -----------------------\n \n-   --  A source file table entry is built for every source file that is in the\n-   --  source dependency table of any of the ALI files that make up the current\n-   --  program.\n+   --  A table entry is built for every source file that is in the source\n+   --  dependency table of any ALI file that is part of the current program.\n \n    No_Source_Id : constant Source_Id := Source_Id'First;\n    --  Special value indicating no Source table entry"}, {"sha": "42ccb3ded093a3a83c691e53ec94e977f65e1bb3", "filename": "gcc/ada/g-socthi-mingw.adb", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540/gcc%2Fada%2Fg-socthi-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540/gcc%2Fada%2Fg-socthi-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.adb?ref=b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540", "patch": "@@ -346,16 +346,21 @@ package body GNAT.Sockets.Thin is\n \n             --  If all the data that was initially available read, do not\n             --  attempt to receive more, since this might block, or merge data\n-            --  from successive datagrams for a datagram-oriented\n-            --  socket. We still try to receive more if we need to fill all\n-            --  vectors (MSG_WAITALL flag is set).\n+            --  from successive datagrams for a datagram-oriented socket. We\n+            --  still try to receive more if we need to fill all vectors\n+            --  (MSG_WAITALL flag is set).\n \n             exit when Natural (Count) >= Req.Size\n               and then\n-                (not Fill -- either we are not in fill mode\n-                 or else  -- or last vector filled\n-                  (Interfaces.C.size_t (Iov_Index) = Iovec'Last\n-                   and then Current_Iovec.Length = 0));\n+\n+                --  Either we are not in fill mode\n+\n+                (not Fill\n+\n+                  --  Or else last vector filled\n+\n+                  or else (Interfaces.C.size_t (Iov_Index) = Iovec'Last\n+                            and then Current_Iovec.Length = 0));\n          end if;\n       end loop;\n "}, {"sha": "3d3adae14c322940c4e22278d65d913db5978442", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 0, "deletions": 1134, "changes": 1134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540", "patch": "@@ -81,7 +81,6 @@ AdaCore\n * Interfacing to Other Languages::\n * Specialized Needs Annexes::\n * Implementation of Specific Ada Features::\n-* Project File Reference::\n * Obsolescent Features::\n * GNU Free Documentation License::\n * Index::\n@@ -463,8 +462,6 @@ Implementation of Specific Ada Features\n * The Size of Discriminated Records with Default Discriminants::\n * Strict Conformance to the Ada Reference Manual::\n \n-Project File Reference\n-\n Obsolescent Features\n \n GNU Free Documentation License\n@@ -581,10 +578,6 @@ of the specialized needs annexes.\n to GNAT's implementation of machine code insertions, tasking, and several\n other features.\n \n-@item\n-@ref{Project File Reference}, presents the syntax and semantics\n-of project files.\n-\n @item\n @ref{Obsolescent Features} documents implementation dependent features,\n including pragmas and attributes, which are considered obsolescent, since\n@@ -15945,1133 +15938,6 @@ machines that are not fully compliant with this standard, such as Alpha, the\n behavior (although at the cost of a significant performance penalty), so\n infinite and and NaN values are properly generated.\n \n-@node Project File Reference\n-@chapter Project File Reference\n-\n-@noindent\n-This chapter describes the syntax and semantics of project files.\n-Project files specify the options to be used when building a system.\n-Project files can specify global settings for all tools,\n-as well as tool-specific settings.\n-@xref{Examples of Project Files,,, gnat_ugn, @value{EDITION} User's Guide},\n-for examples of use.\n-\n-@menu\n-* Reserved Words::\n-* Lexical Elements::\n-* Declarations::\n-* Empty declarations::\n-* Typed string declarations::\n-* Variables::\n-* Expressions::\n-* Attributes::\n-* Project Attributes::\n-* Attribute References::\n-* External Values::\n-* Case Construction::\n-* Packages::\n-* Package Renamings::\n-* Projects::\n-* Project Extensions::\n-* Project File Elaboration::\n-@end menu\n-\n-@node Reserved Words\n-@section Reserved Words\n-\n-@noindent\n-All Ada reserved words are reserved in project files, and cannot be used\n-as variable names or project names. In addition, the following are\n-also reserved in project files:\n-\n-@itemize\n-@item @code{extends}\n-\n-@item @code{external}\n-\n-@item @code{project}\n-\n-@end itemize\n-\n-@node Lexical Elements\n-@section Lexical Elements\n-\n-@noindent\n-Rules for identifiers are the same as in Ada. Identifiers\n-are case-insensitive.  Strings are case sensitive, except where noted.\n-Comments have the same form as in Ada.\n-\n-@noindent\n-Syntax:\n-\n-@smallexample\n-simple_name ::=\n-  identifier\n-\n-name ::=\n-  simple_name @{. simple_name@}\n-@end smallexample\n-\n-@node Declarations\n-@section Declarations\n-\n-@noindent\n-Declarations introduce new entities that denote types, variables, attributes,\n-and packages. Some declarations can only appear immediately within a project\n-declaration. Others can appear within a project or within a package.\n-\n-Syntax:\n-@smallexample\n-declarative_item ::=\n-  simple_declarative_item |\n-  typed_string_declaration |\n-  package_declaration\n-\n-simple_declarative_item ::=\n-  variable_declaration |\n-  typed_variable_declaration |\n-  attribute_declaration |\n-  case_construction |\n-  empty_declaration\n-@end smallexample\n-\n-@node Empty declarations\n-@section Empty declarations\n-\n-@smallexample\n-empty_declaration ::=\n-  @b{null} ;\n-@end smallexample\n-\n-An empty declaration is allowed anywhere a declaration is allowed.\n-It has no effect.\n-\n-@node Typed string declarations\n-@section Typed string declarations\n-\n-@noindent\n-Typed strings are sequences of string literals. Typed strings are the only\n-named types in project files. They are used in case constructions, where they\n-provide support for conditional attribute definitions.\n-\n-Syntax:\n-@smallexample\n-typed_string_declaration ::=\n-  @b{type} <typed_string_>_simple_name @b{is}\n-   ( string_literal @{, string_literal@} );\n-@end smallexample\n-\n-@noindent\n-A typed string declaration can only appear immediately within a project\n-declaration.\n-\n-All the string literals in a typed string declaration must be distinct.\n-\n-@node Variables\n-@section Variables\n-\n-@noindent\n-Variables denote values, and appear as constituents of expressions.\n-\n-@smallexample\n-typed_variable_declaration ::=\n-  <typed_variable_>simple_name : <typed_string_>name :=  string_expression ;\n-\n-variable_declaration ::=\n-  <variable_>simple_name := expression;\n-@end smallexample\n-\n-@noindent\n-The elaboration of a variable declaration introduces the variable and\n-assigns to it the value of the expression. The name of the variable is\n-available after the assignment symbol.\n-\n-@noindent\n-A typed_variable can only be declare once.\n-\n-@noindent\n-a non-typed variable can be declared multiple times.\n-\n-@noindent\n-Before the completion of its first declaration, the value of variable\n-is the null string.\n-\n-@node Expressions\n-@section Expressions\n-\n-@noindent\n-An expression is a formula that defines a computation or retrieval of a value.\n-In a project file the value of an expression is either a string or a list\n-of strings. A string value in an expression is either a literal, the current\n-value of a variable, an external value, an attribute reference, or a\n-concatenation operation.\n-\n-Syntax:\n-\n-@smallexample\n-expression ::=\n-  term @{& term@}\n-\n-term ::=\n-  string_literal |\n-  string_list |\n-  <variable_>name |\n-  external_value |\n-  attribute_reference\n-\n-string_literal ::=\n-  (same as Ada)\n-\n-string_list ::=\n-  ( <string_>expression @{ , <string_>expression @} )\n-@end smallexample\n-\n-@subsection Concatenation\n-@noindent\n-The following concatenation functions are defined:\n-\n-@smallexample @c ada\n-  function \"&\" (X : String;      Y : String)      return String;\n-  function \"&\" (X : String_List; Y : String)      return String_List;\n-  function \"&\" (X : String_List; Y : String_List) return String_List;\n-@end smallexample\n-\n-@node Attributes\n-@section Attributes\n-\n-@noindent\n-An attribute declaration defines a property of a project or package. This\n-property can later be queried by means of an attribute reference.\n-Attribute values are strings or string lists.\n-\n-Some attributes are associative arrays. These attributes are mappings whose\n-domain is a set of strings. These attributes are declared one association\n-at a time, by specifying a point in the domain and the corresponding image\n-of the attribute. They may also be declared as a full associative array,\n-getting the same associations as the corresponding attribute in an imported\n-or extended project.\n-\n-Attributes that are not associative arrays are called simple attributes.\n-\n-Syntax:\n-@smallexample\n-attribute_declaration ::=\n-  full_associative_array_declaration |\n-  @b{for} attribute_designator @b{use} expression ;\n-\n-full_associative_array_declaration ::=\n-  @b{for} <associative_array_attribute_>simple_name @b{use}\n-  <project_>simple_name [ . <package_>simple_Name ] ' <attribute_>simple_name ;\n-\n-attribute_designator ::=\n-  <simple_attribute_>simple_name |\n-  <associative_array_attribute_>simple_name ( string_literal )\n-@end smallexample\n-\n-@noindent\n-Some attributes are project-specific, and can only appear immediately within\n-a project declaration. Others are package-specific, and can only appear within\n-the proper package.\n-\n-The expression in an attribute definition must be a string or a string_list.\n-The string literal appearing in the attribute_designator of an associative\n-array attribute is case-insensitive.\n-\n-@node Project Attributes\n-@section Project Attributes\n-\n-@noindent\n-The following attributes apply to a project. All of them are simple\n-attributes.\n-\n-@table @code\n-@item   Object_Dir\n-Expression must be a path name. The attribute defines the\n-directory in which the object files created by the build are to be placed. If\n-not specified, object files are placed in the project directory.\n-\n-@item   Exec_Dir\n-Expression must be a path name. The attribute defines the\n-directory in which the executables created by the build are to be placed.\n-If not specified, executables are placed in the object directory.\n-\n-@item  Source_Dirs\n-Expression must be a list of path names. The attribute\n-defines the directories in which the source files for the project are to be\n-found. If not specified, source files are found in the project directory.\n-If a string in the list ends with \"/**\", then the directory that precedes\n-\"/**\" and all of its subdirectories (recursively) are included in the list\n-of source directories.\n-\n-@item  Excluded_Source_Dirs\n-Expression must be a list of strings. Each entry designates a directory that\n-is not to be included in the list of source directories of the project.\n-This is normally used when there are strings ending with \"/**\" in the value\n-of attribute Source_Dirs.\n-\n-@item  Source_Files\n-Expression must be a list of file names. The attribute\n-defines the individual files, in the project directory, which are to be used\n-as sources for the project. File names are path_names that contain no directory\n-information. If the project has no sources the attribute must be declared\n-explicitly with an empty list.\n-\n-@item  Excluded_Source_Files (Locally_Removed_Files)\n-Expression must be a list of strings that are legal file names.\n-Each file name must designate a source that would normally be a source file\n-in the source directories of the project or, if the project file is an\n-extending project file, inherited by the current project file. It cannot\n-designate an immediate source that is not inherited. Each of the source files\n-in the list are not considered to be sources of the project file: they are not\n-inherited. Attribute Locally_Removed_Files is obsolescent, attribute\n-Excluded_Source_Files is preferred.\n-\n-@item  Source_List_File\n-Expression must a single path name. The attribute\n-defines a text file that contains a list of source file names to be used\n-as sources for the project\n-\n-@item  Library_Dir\n-Expression must be a path name. The attribute defines the\n-directory in which a  library is to be built.  The directory must exist, must\n-be distinct from the project's object directory, and must be writable.\n-\n-@item  Library_Name\n-Expression must be a string that is a legal file name,\n-without extension. The attribute defines a string that is used to generate\n-the name of the library to be built by the project.\n-\n-@item  Library_Kind\n-Argument must be a string value that must be one of the\n-following @code{\"static\"}, @code{\"dynamic\"} or @code{\"relocatable\"}. This\n-string is case-insensitive. If this attribute is not specified, the library is\n-a static library. Otherwise, the library may be dynamic or relocatable. This\n-distinction is operating-system dependent.\n-\n-@item  Library_Version\n-Expression must be a string value whose interpretation\n-is platform dependent. On UNIX, it is used only for dynamic/relocatable\n-libraries as the internal name of the library (the @code{\"soname\"}). If the\n-library file name (built from the @code{Library_Name}) is different from the\n-@code{Library_Version}, then the library file will be a symbolic link to the\n-actual file whose name will be @code{Library_Version}.\n-\n-@item Library_Interface\n-Expression must be a string list. Each element of the string list\n-must designate a unit of the project.\n-If this attribute is present in a Library Project File, then the project\n-file is a Stand-alone Library_Project_File.\n-\n-@item Library_Auto_Init\n-Expression must be a single string \"true\" or \"false\", case-insensitive.\n-If this attribute is present in a Stand-alone Library Project File,\n-it indicates if initialization is automatic when the dynamic library\n-is loaded.\n-\n-@item Library_Options\n-Expression must be a string list. Indicates additional switches that\n-are to be used when building a shared library.\n-\n-@item Library_GCC\n-Expression must be a single string. Designates an alternative to \"gcc\"\n-for building shared libraries.\n-\n-@item  Library_Src_Dir\n-Expression must be a path name. The attribute defines the\n-directory in which the sources of the interfaces of a Stand-alone Library will\n-be copied.  The directory must exist, must be distinct from the project's\n-object directory and source directories of all projects in the project tree,\n-and must be writable.\n-\n-@item  Library_ALI_Dir\n-Expression must be a path name. The attribute defines the\n-directory in which the ALI files of a Library will\n-be copied.  The directory must exist, must be distinct from the project's\n-object directory and source directories of all projects in the project tree,\n-and must be writable.\n-\n-@item  Library_Symbol_File\n-Expression must be a single string. Its value is the single file name of a\n-symbol file to be created when building a stand-alone library when the\n-symbol policy is either \"compliant\", \"controlled\" or \"restricted\",\n-on platforms that support symbol control, such as VMS. When symbol policy\n-is \"direct\", then a file with this name must exist in the object directory.\n-\n-@item   Library_Reference_Symbol_File\n-Expression must be a single string. Its value is the path name of a\n-reference symbol file that is read when the symbol policy is either\n-\"compliant\" or \"controlled\", on platforms that support symbol control,\n-such as VMS, when building a stand-alone library. The path may be an absolute\n-path or a path relative to the project directory.\n-\n-@item  Library_Symbol_Policy\n-Expression must be a single string. Its case-insensitive value can only be\n-\"autonomous\", \"default\", \"compliant\", \"controlled\", \"restricted\" or \"direct\".\n-\n-This attribute is not taken into account on all platforms. It controls the\n-policy for exported symbols and, on some platforms (like VMS) that have the\n-notions of major and minor IDs built in the library files, it controls\n-the setting of these IDs.\n-\n-\"autonomous\" or \"default\": exported symbols are not controlled.\n-\n-\"compliant\": if attribute Library_Reference_Symbol_File is not defined, then\n-it is equivalent to policy \"autonomous\". If there are exported symbols in\n-the reference symbol file that are not in the object files of the interfaces,\n-the major ID of the library is increased. If there are symbols in the\n-object files of the interfaces that are not in the reference symbol file,\n-these symbols are put at the end of the list in the newly created symbol file\n-and the minor ID is increased.\n-\n-\"controlled\": the attribute Library_Reference_Symbol_File must be defined.\n-The library will fail to build if the exported symbols in the object files of\n-the interfaces do not match exactly the symbol in the symbol file.\n-\n-\"restricted\": The attribute Library_Symbol_File must be defined. The library\n-will fail to build if there are symbols in the symbol file that are not in\n-the exported symbols of the object files of the interfaces. Additional symbols\n-in the object files are not added to the symbol file.\n-\n-\"direct\": The attribute Library_Symbol_File must be defined and must designate\n-an existing file in the object directory. This symbol file is passed directly\n-to the underlying linker without any symbol processing.\n-\n-@item  Main\n-Expression must be a list of strings that are legal file names.\n-These file names designate existing compilation units in the source directory\n-that are legal main subprograms.\n-\n-When a project file is elaborated, as part of the execution of a gnatmake\n-command, one or several executables are built and placed in the Exec_Dir.\n-If the gnatmake command does not include explicit file names, the executables\n-that are built correspond to the files specified by this attribute.\n-\n-@item  Externally_Built\n-Expression must be a single string. Its value must be either \"true\" of \"false\",\n-case-insensitive. The default is \"false\". When the value of this attribute is\n-\"true\", no attempt is made to compile the sources or to build the library,\n-when the project is a library project.\n-\n-@item Main_Language\n-This is a simple attribute. Its value is a string that specifies the\n-language of the main program.\n-\n-@item  Languages\n-Expression must be a string list. Each string designates\n-a programming language that is known to GNAT. The strings are case-insensitive.\n-\n-@end table\n-\n-@node Attribute References\n-@section Attribute References\n-\n-@noindent\n-Attribute references are used to retrieve the value of previously defined\n-attribute for a package or project.\n-Syntax:\n-@smallexample\n-attribute_reference ::=\n-  attribute_prefix ' <simple_attribute_>simple_name [ ( string_literal ) ]\n-\n-attribute_prefix ::=\n-  @b{project} |\n-  <project_simple_name | package_identifier |\n-  <project_>simple_name . package_identifier\n-@end smallexample\n-\n-@noindent\n-If an attribute has not been specified for a given package or project, its\n-value is the null string or the empty list.\n-\n-@node External Values\n-@section External Values\n-\n-@noindent\n-An external value is an expression whose value is obtained from the command\n-that invoked the processing of the current project file (typically a\n-gnatmake command).\n-\n-Syntax:\n-@smallexample\n-external_value ::=\n-  @b{external} ( string_literal [, string_literal] )\n-@end smallexample\n-\n-@noindent\n-The first string_literal is the string to be used on the command line or\n-in the environment to specify the external value. The second string_literal,\n-if present, is the default to use if there is no specification for this\n-external value either on the command line or in the environment.\n-\n-@node Case Construction\n-@section Case Construction\n-\n-@noindent\n-A case construction supports attribute and variable declarations that depend\n-on the value of a previously declared variable.\n-\n-Syntax:\n-@smallexample\n-case_construction ::=\n-  @b{case} <typed_variable_>name @b{is}\n-    @{case_item@}\n-  @b{end case} ;\n-\n-case_item ::=\n-  @b{when} discrete_choice_list =>\n-    @{case_construction |\n-      attribute_declaration |\n-      variable_declaration |\n-      empty_declaration@}\n-\n-discrete_choice_list ::=\n-  string_literal @{| string_literal@} |\n-    @b{others}\n-@end smallexample\n-\n-@noindent\n-Inside a case construction, variable declarations must be for variables that\n-have already been declared before the case construction.\n-\n-All choices in a choice list must be distinct. The choice lists of two\n-distinct alternatives must be disjoint. Unlike Ada, the choice lists of all\n-alternatives do not need to include all values of the type. An @code{others}\n-choice must appear last in the list of alternatives.\n-\n-@node Packages\n-@section Packages\n-\n-@noindent\n-A package provides a grouping of variable declarations and attribute\n-declarations to be used when invoking various GNAT tools. The name of\n-the package indicates the tool(s) to which it applies.\n-Syntax:\n-\n-@smallexample\n-package_declaration ::=\n-  package_spec | package_renaming\n-\n-package_spec ::=\n-  @b{package} package_identifier @b{is}\n-    @{simple_declarative_item@}\n-  @b{end} package_identifier ;\n-\n-package_identifier ::=\n-  @code{Naming} | @code{Builder} | @code{Compiler} | @code{Binder} |\n-  @code{Linker} | @code{Finder}  | @code{Cross_Reference} |\n-  @code{gnatls} | @code{IDE}     | @code{Pretty_Printer} | @code{Check}\n-@end smallexample\n-\n-@subsection Package Naming\n-\n-@noindent\n-The attributes of a @code{Naming} package specifies the naming conventions\n-that apply to the source files in a project. When invoking other GNAT tools,\n-they will use the sources in the source directories that satisfy these\n-naming conventions.\n-\n-The following attributes apply to a @code{Naming} package:\n-\n-@table @code\n-@item Casing\n-This is a simple attribute whose value is a string. Legal values of this\n-string are @code{\"lowercase\"}, @code{\"uppercase\"} or @code{\"mixedcase\"}.\n-These strings are themselves case insensitive.\n-\n-@noindent\n-If @code{Casing} is not specified, then the default is @code{\"lowercase\"}.\n-\n-@item Dot_Replacement\n-This is a simple attribute whose string value satisfies the following\n-requirements:\n-\n-@itemize @bullet\n-@item It must not be empty\n-@item It cannot start or end with an alphanumeric character\n-@item It cannot be a single underscore\n-@item It cannot start with an underscore followed by an alphanumeric\n-@item It cannot contain a dot @code{'.'} if longer than one character\n-@end itemize\n-\n-@noindent\n-If @code{Dot_Replacement} is not specified, then the default is @code{\"-\"}.\n-\n-@item Spec_Suffix\n-This is an associative array attribute, defined on language names,\n-whose image is a string that must satisfy the following\n-conditions:\n-\n-@itemize @bullet\n-@item It must not be empty\n-@item It cannot start with an alphanumeric character\n-@item It cannot start with an underscore followed by an alphanumeric character\n-@end itemize\n-\n-@noindent\n-For Ada, the attribute denotes the suffix used in file names that contain\n-library unit declarations, that is to say units that are package and\n-subprogram declarations. If @code{Spec_Suffix (\"Ada\")} is not\n-specified, then the default is @code{\".ads\"}.\n-\n-For C and C++, the attribute denotes the suffix used in file names that\n-contain prototypes.\n-\n-@item Body_Suffix\n-This is an associative array attribute defined on language names,\n-whose image is a string that must satisfy the following\n-conditions:\n-\n-@itemize @bullet\n-@item It must not be empty\n-@item It cannot start with an alphanumeric character\n-@item It cannot start with an underscore followed by an alphanumeric character\n-@item It cannot be a suffix of @code{Spec_Suffix}\n-@end itemize\n-\n-@noindent\n-For Ada, the attribute denotes the suffix used in file names that contain\n-library bodies, that is to say units that are package and subprogram bodies.\n-If @code{Body_Suffix (\"Ada\")} is not specified, then the default is\n-@code{\".adb\"}.\n-\n-For C and C++, the attribute denotes the suffix used in file names that contain\n-source code.\n-\n-@item Separate_Suffix\n-This is a simple attribute whose value satisfies the same conditions as\n-@code{Body_Suffix}.\n-\n-This attribute is specific to Ada. It denotes the suffix used in file names\n-that contain separate bodies. If it is not specified, then it defaults to same\n-value as @code{Body_Suffix (\"Ada\")}.\n-\n-@item Spec\n-This is an associative array attribute, specific to Ada, defined over\n-compilation unit names. The image is a string that is the name of the file\n-that contains that library unit. The file name is case sensitive if the\n-conventions of the host operating system require it.\n-\n-@item Body\n-This is an associative array attribute, specific to Ada, defined over\n-compilation unit names. The image is a string that is the name of the file\n-that contains the library unit body for the named unit. The file name is case\n-sensitive if the conventions of the host operating system require it.\n-\n-@item Specification_Exceptions\n-This is an associative array attribute defined on language names,\n-whose value is a list of strings.\n-\n-This attribute is not significant for Ada.\n-\n-For C and C++, each string in the list denotes the name of a file that\n-contains prototypes, but whose suffix is not necessarily the\n-@code{Spec_Suffix} for the language.\n-\n-@item Implementation_Exceptions\n-This is an associative array attribute defined on language names,\n-whose value is a list of strings.\n-\n-This attribute is not significant for Ada.\n-\n-For C and C++, each string in the list denotes the name of a file that\n-contains source code, but whose suffix is not necessarily the\n-@code{Body_Suffix} for the language.\n-@end table\n-\n-The following attributes of package @code{Naming} are obsolescent. They are\n-kept as synonyms of other attributes for compatibility with previous versions\n-of the Project Manager.\n-\n-@table @code\n-@item Specification_Suffix\n-This is a synonym of @code{Spec_Suffix}.\n-\n-@item Implementation_Suffix\n-This is a synonym of @code{Body_Suffix}.\n-\n-@item Specification\n-This is a synonym of @code{Spec}.\n-\n-@item Implementation\n-This is a synonym of @code{Body}.\n-@end table\n-\n-@subsection package Compiler\n-\n-@noindent\n-The attributes of the @code{Compiler} package specify the compilation options\n-to be used by the underlying compiler.\n-\n-@table @code\n-@item  Default_Switches\n-This is an associative array attribute. Its\n-domain is a set of language names. Its range is a string list that\n-specifies the compilation options to be used when compiling a component\n-written in that language, for which no file-specific switches have been\n-specified.\n-\n-@item  Switches\n-This is an associative array attribute. Its domain is\n-a set of file names. Its range is a string list that specifies the\n-compilation options to be used when compiling the named file. If a file\n-is not specified in the Switches attribute, it is compiled with the\n-options specified by Default_Switches of its language, if defined.\n-\n-@item  Local_Configuration_Pragmas.\n-This is a simple attribute, whose\n-value is a path name that designates a file containing configuration pragmas\n-to be used for all invocations of the compiler for immediate sources of the\n-project.\n-@end table\n-\n-@subsection package Builder\n-\n-@noindent\n-The attributes of package @code{Builder} specify the compilation, binding, and\n-linking options to be used when building an executable for a project. The\n-following attributes apply to package @code{Builder}:\n-\n-@table @code\n-@item Default_Switches\n-This is an associative array attribute. Its\n-domain is a set of language names. Its range is a string list that\n-specifies options to be used when building a main\n-written in that language, for which no file-specific switches have been\n-specified.\n-\n-@item Switches\n-This is an associative array attribute. Its domain is\n-a set of file names. Its range is a string list that specifies\n-options to be used when building the named main file. If a main file\n-is not specified in the Switches attribute, it is built with the\n-options specified by Default_Switches of its language, if defined.\n-\n-@item Global_Configuration_Pragmas\n-This is a simple attribute, whose\n-value is a path name that designates a file that contains configuration pragmas\n-to be used in every build of an executable. If both local and global\n-configuration pragmas are specified, a compilation makes use of both sets.\n-\n-@item Executable\n-This is an associative array attribute. Its domain is\n-a set of main source file names. Its range is a simple string that specifies\n-the executable file name to be used when linking the specified main source.\n-If a main source is not specified in the Executable attribute, the executable\n-file name is deducted from the main source file name.\n-This attribute has no effect if its value is the empty string.\n-\n-@item Executable_Suffix\n-This is a simple attribute whose value is the suffix to be added to\n-the executables that don't have an attribute Executable specified.\n-@end table\n-\n-@subsection package Gnatls\n-\n-@noindent\n-The attributes of package @code{Gnatls} specify the tool options to be used\n-when invoking the library browser @command{gnatls}.\n-The following attributes apply to package @code{Gnatls}:\n-\n-@table @code\n-@item Switches\n-This is a single attribute with a string list value. Each nonempty string\n-in the list is an option when invoking @code{gnatls}.\n-@end table\n-\n-@subsection package Binder\n-\n-@noindent\n-The attributes of package @code{Binder} specify the options to be used\n-when invoking the binder in the construction of an executable.\n-The following attributes apply to package @code{Binder}:\n-\n-@table @code\n-@item     Default_Switches\n-This is an associative array attribute. Its\n-domain is a set of language names. Its range is a string list that\n-specifies options to be used when binding a main\n-written in that language, for which no file-specific switches have been\n-specified.\n-\n-@item Switches\n-This is an associative array attribute. Its domain is\n-a set of file names. Its range is a string list that specifies\n-options to be used when binding the named main file. If a main file\n-is not specified in the Switches attribute, it is bound with the\n-options specified by Default_Switches of its language, if defined.\n-@end table\n-\n-@subsection package Linker\n-\n-@noindent\n-The attributes of package @code{Linker} specify the options to be used when\n-invoking the linker in the construction of an executable.\n-The following attributes apply to package @code{Linker}:\n-\n-@table @code\n-@item     Default_Switches\n-This is an associative array attribute. Its\n-domain is a set of language names. Its range is a string list that\n-specifies options to be used when linking a main\n-written in that language, for which no file-specific switches have been\n-specified.\n-\n-@item Switches\n-This is an associative array attribute. Its domain is\n-a set of file names. Its range is a string list that specifies\n-options to be used when linking the named main file. If a main file\n-is not specified in the Switches attribute, it is linked with the\n-options specified by Default_Switches of its language, if defined.\n-\n-@item  Linker_Options\n-This is a string list attribute. Its value specifies additional options that\n-be given to the linker when linking an executable. This attribute is not\n-used in the main project, only in projects imported directly or indirectly.\n-\n-@end table\n-\n-@subsection package Cross_Reference\n-\n-@noindent\n-The attributes of package @code{Cross_Reference} specify the tool options\n-to be used\n-when invoking the library tool @command{gnatxref}.\n-The following attributes apply to package @code{Cross_Reference}:\n-\n-@table @code\n-@item     Default_Switches\n-This is an associative array attribute. Its\n-domain is a set of language names. Its range is a string list that\n-specifies options to be used when calling @command{gnatxref} on a source\n-written in that language, for which no file-specific switches have been\n-specified.\n-\n-@item Switches\n-This is an associative array attribute. Its domain is\n-a set of file names. Its range is a string list that specifies\n-options to be used when calling @command{gnatxref} on the named main source.\n-If a source is not specified in the Switches attribute, @command{gnatxref} will\n-be called with the options specified by Default_Switches of its language,\n-if defined.\n-@end table\n-\n-@subsection package   Finder\n-\n-@noindent\n-The attributes of package @code{Finder} specify the tool options to be used\n-when invoking the search tool @command{gnatfind}.\n-The following attributes apply to package @code{Finder}:\n-\n-@table @code\n-@item     Default_Switches\n-This is an associative array attribute. Its\n-domain is a set of language names. Its range is a string list that\n-specifies options to be used when calling @command{gnatfind} on a source\n-written in that language, for which no file-specific switches have been\n-specified.\n-\n-@item Switches\n-This is an associative array attribute. Its domain is\n-a set of file names. Its range is a string list that specifies\n-options to be used when calling @command{gnatfind} on the named main source.\n-If a source is not specified in the Switches attribute, @command{gnatfind} will\n-be called with the options specified by Default_Switches of its language,\n-if defined.\n-@end table\n-\n-@subsection package Check\n-\n-@noindent\n-The attributes of package @code{Check}\n-specify the checking rule options to be used\n-when invoking the checking tool @command{gnatcheck}.\n-The following attributes apply to package @code{Check}:\n-\n-@table @code\n-@item     Default_switches\n-This is an associative array attribute. Its\n-domain is a set of language names. Its range is a string list that\n-specifies options to be used when calling @command{gnatcheck} on a source\n-written in that language. The first string in the range should always be\n-@code{\"-rules\"} to specify that all the other options belong to the\n-@code{-rules} section of the parameters of @command{gnatcheck} call.\n-\n-@end table\n-\n-@subsection package Pretty_Printer\n-\n-@noindent\n-The attributes of package @code{Pretty_Printer}\n-specify the tool options to be used\n-when invoking the formatting tool @command{gnatpp}.\n-The following attributes apply to package @code{Pretty_Printer}:\n-\n-@table @code\n-@item     Default_switches\n-This is an associative array attribute. Its\n-domain is a set of language names. Its range is a string list that\n-specifies options to be used when calling @command{gnatpp} on a source\n-written in that language, for which no file-specific switches have been\n-specified.\n-\n-@item Switches\n-This is an associative array attribute. Its domain is\n-a set of file names. Its range is a string list that specifies\n-options to be used when calling @command{gnatpp} on the named main source.\n-If a source is not specified in the Switches attribute, @command{gnatpp} will\n-be called with the options specified by Default_Switches of its language,\n-if defined.\n-@end table\n-\n-@subsection package gnatstub\n-\n-@noindent\n-The attributes of package @code{gnatstub}\n-specify the tool options to be used\n-when invoking the tool @command{gnatstub}.\n-The following attributes apply to package @code{gnatstub}:\n-\n-@table @code\n-@item     Default_switches\n-This is an associative array attribute. Its\n-domain is a set of language names. Its range is a string list that\n-specifies options to be used when calling @command{gnatstub} on a source\n-written in that language, for which no file-specific switches have been\n-specified.\n-\n-@item Switches\n-This is an associative array attribute. Its domain is\n-a set of file names. Its range is a string list that specifies\n-options to be used when calling @command{gnatstub} on the named main source.\n-If a source is not specified in the Switches attribute, @command{gnatpp} will\n-be called with the options specified by Default_Switches of its language,\n-if defined.\n-@end table\n-\n-@subsection package Eliminate\n-\n-@noindent\n-The attributes of package @code{Eliminate}\n-specify the tool options to be used\n-when invoking the tool @command{gnatelim}.\n-The following attributes apply to package @code{Eliminate}:\n-\n-@table @code\n-@item     Default_switches\n-This is an associative array attribute. Its\n-domain is a set of language names. Its range is a string list that\n-specifies options to be used when calling @command{gnatelim} on a source\n-written in that language, for which no file-specific switches have been\n-specified.\n-\n-@item Switches\n-This is an associative array attribute. Its domain is\n-a set of file names. Its range is a string list that specifies\n-options to be used when calling @command{gnatelim} on the named main source.\n-If a source is not specified in the Switches attribute, @command{gnatelim} will\n-be called with the options specified by Default_Switches of its language,\n-if defined.\n-@end table\n-\n-@subsection package Metrics\n-\n-@noindent\n-The attributes of package @code{Metrics}\n-specify the tool options to be used\n-when invoking the tool @command{gnatmetric}.\n-The following attributes apply to package @code{Metrics}:\n-\n-@table @code\n-@item     Default_switches\n-This is an associative array attribute. Its\n-domain is a set of language names. Its range is a string list that\n-specifies options to be used when calling @command{gnatmetric} on a source\n-written in that language, for which no file-specific switches have been\n-specified.\n-\n-@item Switches\n-This is an associative array attribute. Its domain is\n-a set of file names. Its range is a string list that specifies\n-options to be used when calling @command{gnatmetric} on the named main source.\n-If a source is not specified in the Switches attribute, @command{gnatmetric}\n-will be called with the options specified by Default_Switches of its language,\n-if defined.\n-@end table\n-\n-@subsection  package IDE\n-\n-@noindent\n-The attributes of package @code{IDE} specify the options to be used when using\n-an Integrated Development Environment such as @command{GPS}.\n-\n-@table @code\n-@item Remote_Host\n-This is a simple attribute. Its value is a string that designates the remote\n-host in a cross-compilation environment, to be used for remote compilation and\n-debugging. This field should not be specified when running on the local\n-machine.\n-\n-@item Program_Host\n-This is a simple attribute. Its value is a string that specifies the\n-name of IP address of the embedded target in a cross-compilation environment,\n-on which the program should execute.\n-\n-@item Communication_Protocol\n-This is a simple string attribute. Its value is the name of the protocol\n-to use to communicate with the target in a cross-compilation environment,\n-e.g.@: @code{\"wtx\"} or @code{\"vxworks\"}.\n-\n-@item Compiler_Command\n-This is an associative array attribute, whose domain is a language name. Its\n-value is  string that denotes the command to be used to invoke the compiler.\n-The value of @code{Compiler_Command (\"Ada\")} is expected to be compatible with\n-gnatmake, in particular in the handling of switches.\n-\n-@item Debugger_Command\n-This is simple attribute, Its value is a string that specifies the name of\n-the debugger to be used, such as gdb, powerpc-wrs-vxworks-gdb or gdb-4.\n-\n-@item Default_Switches\n-This is an associative array attribute. Its indexes are the name of the\n-external tools that the GNAT Programming System (GPS) is supporting. Its\n-value is a list of switches to use when invoking that tool.\n-\n-@item  Gnatlist\n-This is a simple attribute.  Its value is a string that specifies the name\n-of the @command{gnatls} utility to be used to retrieve information about the\n-predefined path; e.g., @code{\"gnatls\"}, @code{\"powerpc-wrs-vxworks-gnatls\"}.\n-\n-@item VCS_Kind\n-This is a simple attribute. Its value is a string used to specify the\n-Version Control System (VCS) to be used for this project, e.g.@: CVS, RCS\n-ClearCase or Perforce.\n-\n-@item VCS_File_Check\n-This is a simple attribute. Its value is a string that specifies the\n-command used by the VCS to check the validity of a file, either\n-when the user explicitly asks for a check, or as a sanity check before\n-doing the check-in.\n-\n-@item VCS_Log_Check\n-This is a simple attribute. Its value is a string that specifies\n-the command used by the VCS to check the validity of a log file.\n-\n-@item VCS_Repository_Root\n-The VCS repository root path. This is used to create tags or branches\n-of the repository. For subversion the value should be the @code{URL}\n-as specified to check-out the working copy of the repository.\n-\n-@item VCS_Patch_Root\n-The local root directory to use for building patch file. All patch chunks\n-will be relative to this path. The root project directory is used if\n-this value is not defined.\n-\n-@end table\n-\n-@node Package Renamings\n-@section Package Renamings\n-\n-@noindent\n-A package can be defined by a renaming declaration. The new package renames\n-a package declared in a different project file, and has the same attributes\n-as the package it renames.\n-Syntax:\n-@smallexample\n-package_renaming ::==\n-  @b{package} package_identifier @b{renames}\n-       <project_>simple_name.package_identifier ;\n-@end smallexample\n-\n-@noindent\n-The package_identifier of the renamed package must be the same as the\n-package_identifier. The project whose name is the prefix of the renamed\n-package must contain a package declaration with this name. This project\n-must appear in the context_clause of the enclosing project declaration,\n-or be the parent project of the enclosing child project.\n-\n-@node Projects\n-@section Projects\n-\n-@noindent\n-A project file specifies a set of rules for constructing a software system.\n-A project file can be self-contained, or depend on other project files.\n-Dependencies are expressed through a context clause that names other projects.\n-\n-Syntax:\n-\n-@smallexample\n-project ::=\n-  context_clause project_declaration\n-\n-project_declaration ::=\n-  simple_project_declaration | project_extension\n-\n-simple_project_declaration ::=\n-  @b{project} <project_>simple_name @b{is}\n-    @{declarative_item@}\n-  @b{end} <project_>simple_name;\n-\n-context_clause ::=\n-  @{with_clause@}\n-\n-with_clause ::=\n-  [@b{limited}] @b{with} path_name @{ , path_name @} ;\n-\n-path_name ::=\n-   string_literal\n-@end smallexample\n-\n-@noindent\n-A path name denotes a project file. A path name can be absolute or relative.\n-An absolute path name includes a sequence of directories, in the syntax of\n-the host operating system, that identifies uniquely the project file in the\n-file system. A relative path name identifies the project file, relative\n-to the directory that contains the current project, or relative to a\n-directory listed in the environment variable ADA_PROJECT_PATH.\n-Path names are case sensitive if file names in the host operating system\n-are case sensitive.\n-\n-The syntax of the environment variable ADA_PROJECT_PATH is a list of\n-directory names separated by colons (semicolons on Windows).\n-\n-A given project name can appear only once in a context_clause.\n-\n-It is illegal for a project imported by a context clause to refer, directly\n-or indirectly, to the project in which this context clause appears (the\n-dependency graph cannot contain cycles), except when one of the with_clause\n-in the cycle is a @code{limited with}.\n-\n-@node Project Extensions\n-@section Project Extensions\n-\n-@noindent\n-A project extension introduces a new project, which inherits the declarations\n-of another project.\n-Syntax:\n-@smallexample\n-\n-project_extension ::=\n-  @b{project} <project_>simple_name  @b{extends} path_name @b{is}\n-    @{declarative_item@}\n-  @b{end} <project_>simple_name;\n-@end smallexample\n-\n-@noindent\n-The project extension declares a child project. The child project inherits\n-all the declarations and all the files of the parent project, These inherited\n-declaration can be overridden in the child project, by means of suitable\n-declarations.\n-\n-@node Project File Elaboration\n-@section Project File Elaboration\n-\n-@noindent\n-A project file is processed as part of the invocation of a gnat tool that\n-uses the project option. Elaboration of the process file consists in the\n-sequential elaboration of all its declarations. The computed values of\n-attributes and variables in the project are then used to establish the\n-environment in which the gnat tool will execute.\n-\n @node Obsolescent Features\n @chapter Obsolescent Features\n "}, {"sha": "21f0352d06f1cf6e842ed5353777fe671c9f0b2f", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 153, "deletions": 3802, "changes": 3955, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540"}, {"sha": "fb88fa3f083de9eea5a83ca561eb60dc5aee5656", "filename": "gcc/ada/projects.texi", "status": "added", "additions": 4032, "deletions": 0, "changes": 4032, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540"}, {"sha": "46a68b63beacdf9bb1b8167ca06295de5d8fca97", "filename": "gcc/ada/s-osinte-vxworks.ads", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540/gcc%2Fada%2Fs-osinte-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540/gcc%2Fada%2Fs-osinte-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-vxworks.ads?ref=b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540", "patch": "@@ -7,7 +7,7 @@\n --                                   S p e c                                --\n --                                                                          --\n --            Copyright (C) 1991-1994, Florida State University             --\n---          Copyright (C) 1995-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -155,7 +155,7 @@ package System.OS_Interface is\n    SIG_DFL : constant := 0;\n    SIG_IGN : constant := 1;\n \n-   type sigset_t is private;\n+   subtype sigset_t is System.Vxworks.Ext.sigset_t;\n \n    type struct_sigaction is record\n       sa_handler : System.Address;\n@@ -490,8 +490,6 @@ package System.OS_Interface is\n    --  For uniprocessor systems return ERROR status.\n \n private\n-   type sigset_t is new unsigned_long_long;\n-\n    type pid_t is new int;\n \n    ERROR_PID : constant pid_t := -1;"}, {"sha": "b29322860fd6c967cd3a0bb202642ac09fd018a0", "filename": "gcc/ada/s-vxwext-kernel.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540/gcc%2Fada%2Fs-vxwext-kernel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540/gcc%2Fada%2Fs-vxwext-kernel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwext-kernel.ads?ref=b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                   S p e c                                --\n --                                                                          --\n---            Copyright (C) 2008-2009, Free Software Foundation, Inc.       --\n+--            Copyright (C) 2008-2010, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNARL is free software;  you can redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -39,6 +39,8 @@ package System.VxWorks.Ext is\n    subtype SEM_ID is Long_Integer;\n    --  typedef struct semaphore *SEM_ID;\n \n+   type sigset_t is mod 2 ** Interfaces.C.long_long'Size;\n+\n    type t_id is new Long_Integer;\n    subtype int is Interfaces.C.int;\n "}, {"sha": "2b9b61e20145c2eb9ee949b875a2b438592069ce", "filename": "gcc/ada/s-vxwext-rtp.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540/gcc%2Fada%2Fs-vxwext-rtp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540/gcc%2Fada%2Fs-vxwext-rtp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwext-rtp.ads?ref=b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                   S p e c                                --\n --                                                                          --\n---            Copyright (C) 2008-2009, Free Software Foundation, Inc.       --\n+--            Copyright (C) 2008-2010, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNARL is free software;  you can redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -39,6 +39,8 @@ package System.VxWorks.Ext is\n    subtype SEM_ID is Long_Integer;\n    --  typedef struct semaphore *SEM_ID;\n \n+   type sigset_t is mod 2 ** Interfaces.C.long_long'Size;\n+\n    type t_id is new Long_Integer;\n    subtype int is Interfaces.C.int;\n "}, {"sha": "1559d7d8e1438604179ca4665b5146357a774d26", "filename": "gcc/ada/s-vxwext.ads", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540/gcc%2Fada%2Fs-vxwext.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540/gcc%2Fada%2Fs-vxwext.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwext.ads?ref=b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                   S p e c                                --\n --                                                                          --\n---            Copyright (C) 2008-2009, Free Software Foundation, Inc.       --\n+--            Copyright (C) 2008-2010, Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNARL is free software;  you can redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -39,7 +39,10 @@ package System.VxWorks.Ext is\n    subtype SEM_ID is Long_Integer;\n    --  typedef struct semaphore *SEM_ID;\n \n+   type sigset_t is mod 2 ** Interfaces.C.long'Size;\n+\n    type t_id is new Long_Integer;\n+\n    subtype int is Interfaces.C.int;\n \n    type Interrupt_Handler is access procedure (parameter : System.Address);"}, {"sha": "1de948e108ef68ccaebe6ef990175abf5aa8e216", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=b2cacbfe4b1a904fc8b9fc58f28aa02bcc479540", "patch": "@@ -1551,7 +1551,34 @@ package body Sem_Ch3 is\n                       (Tagged_Type => Tagged_Type,\n                        Iface_Prim  => Iface_Prim);\n \n-                  pragma Assert (Present (Prim));\n+                  if No (Prim) then\n+\n+                     --  In some are cases, a name conflict may have\n+                     --  kept the operation completely hidden. Look for\n+                     --  it in the list of primitive operations of the\n+                     --  type.\n+\n+                     declare\n+                        El : Elmt_Id :=\n+                          First_Elmt (Primitive_Operations (Tagged_Type));\n+                     begin\n+                        while Present (El) loop\n+                           Prim := Node (El);\n+                           if Is_Subprogram (Prim)\n+                             and then Alias (Prim) = Iface_Prim\n+                           then\n+                              exit;\n+                           end if;\n+                           Next_Elmt (El);\n+                        end loop;\n+                     end;\n+                  end if;\n+\n+                  if No (Prim) then\n+                     --  If the operation was not explicitly overridden, it\n+                     --  should have been inherited as an abstract operation.\n+                     raise Program_Error;\n+                  end if;\n \n                   Derive_Subprogram\n                     (New_Subp     => New_Subp,"}]}