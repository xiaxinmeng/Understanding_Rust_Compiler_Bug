{"sha": "fa016245146b1217d617ea2f7555e00945a48f84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmEwMTYyNDUxNDZiMTIxN2Q2MTdlYTJmNzU1NWUwMDk0NWE0OGY4NA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2004-08-30T18:22:01Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2004-08-30T18:22:01Z"}, "message": "pool_allocator.h: Rename __pool_base to __pool_alloc_base.\n\n\n2004-08-30  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/ext/pool_allocator.h: Rename __pool_base to\n\t__pool_alloc_base.\n\t* src/allocator.cc: Same.\n\t* config/linker-map.gnu: Same.\n\nFrom-SVN: r86789", "tree": {"sha": "e338e85f8bbecaefe0b126f7accc8751422321f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e338e85f8bbecaefe0b126f7accc8751422321f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa016245146b1217d617ea2f7555e00945a48f84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa016245146b1217d617ea2f7555e00945a48f84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa016245146b1217d617ea2f7555e00945a48f84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa016245146b1217d617ea2f7555e00945a48f84/comments", "author": null, "committer": null, "parents": [{"sha": "88f1975682abfbb86e5e2807ef7225fe6ce177fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88f1975682abfbb86e5e2807ef7225fe6ce177fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88f1975682abfbb86e5e2807ef7225fe6ce177fc"}], "stats": {"total": 35, "additions": 21, "deletions": 14}, "files": [{"sha": "2146613fcf724bd1ff65eb6ead27796234b4bcdf", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa016245146b1217d617ea2f7555e00945a48f84/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa016245146b1217d617ea2f7555e00945a48f84/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=fa016245146b1217d617ea2f7555e00945a48f84", "patch": "@@ -1,3 +1,10 @@\n+2004-08-30  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/ext/pool_allocator.h: Rename __pool_base to\n+\t__pool_alloc_base.\n+\t* src/allocator.cc: Same.\n+\t* config/linker-map.gnu: Same.\n+\n 2004-08-30  Paolo Carlini  <pcarlini@suse.de>\n \t    Kenneth C. Schalk  <ken@xorian.net>\n "}, {"sha": "80158d8cb37813f17543d2589538d349beb12338", "filename": "libstdc++-v3/config/linker-map.gnu", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa016245146b1217d617ea2f7555e00945a48f84/libstdc%2B%2B-v3%2Fconfig%2Flinker-map.gnu", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa016245146b1217d617ea2f7555e00945a48f84/libstdc%2B%2B-v3%2Fconfig%2Flinker-map.gnu", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flinker-map.gnu?ref=fa016245146b1217d617ea2f7555e00945a48f84", "patch": "@@ -255,9 +255,9 @@ GLIBCXX_3.4.2 {\n \n     _ZN9__gnu_cxx18stdio_sync_filebufI[cw]St11char_traitsI[cw]EE4fileEv;\n \n-    _ZN9__gnu_cxx11__pool_base9_M_refillE[jm];\n-    _ZN9__gnu_cxx11__pool_base16_M_get_free_listE[jm];\n-    _ZN9__gnu_cxx11__pool_base12_M_get_mutexEv;\n+    _ZN9__gnu_cxx17__pool_alloc_base9_M_refillE[jm];\n+    _ZN9__gnu_cxx17__pool_alloc_base16_M_get_free_listE[jm];\n+    _ZN9__gnu_cxx17__pool_alloc_base12_M_get_mutexEv;\n \n } GLIBCXX_3.4.1;\n "}, {"sha": "a744ea39b77d2b5622ab7d8fb2b9a44f5192c651", "filename": "libstdc++-v3/include/ext/pool_allocator.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa016245146b1217d617ea2f7555e00945a48f84/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpool_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa016245146b1217d617ea2f7555e00945a48f84/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpool_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fpool_allocator.h?ref=fa016245146b1217d617ea2f7555e00945a48f84", "patch": "@@ -72,7 +72,7 @@ namespace __gnu_cxx\n    *  @endif\n    *  (See @link Allocators allocators info @endlink for more.)\n    */\n-    class __pool_base\n+    class __pool_alloc_base\n     {\n     protected:\n \n@@ -116,7 +116,7 @@ namespace __gnu_cxx\n \n \n   template<typename _Tp>\n-    class __pool_alloc : private __pool_base\n+    class __pool_alloc : private __pool_alloc_base\n     {\n     private:\n       static _Atomic_word\t    _S_force_new;"}, {"sha": "a0bf0ee65a71c9c8d66a86b4b09903c95db5fce4", "filename": "libstdc++-v3/src/allocator.cc", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa016245146b1217d617ea2f7555e00945a48f84/libstdc%2B%2B-v3%2Fsrc%2Fallocator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa016245146b1217d617ea2f7555e00945a48f84/libstdc%2B%2B-v3%2Fsrc%2Fallocator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fallocator.cc?ref=fa016245146b1217d617ea2f7555e00945a48f84", "patch": "@@ -44,22 +44,22 @@ namespace __gnu_internal\n namespace __gnu_cxx\n {\n   // Definitions for __pool_alloc_base.\n-  __pool_base::_Obj* volatile*\n-  __pool_base::_M_get_free_list(size_t __bytes)\n+  __pool_alloc_base::_Obj* volatile*\n+  __pool_alloc_base::_M_get_free_list(size_t __bytes)\n   { \n     size_t __i = ((__bytes + (size_t)_S_align - 1) / (size_t)_S_align - 1);\n     return _S_free_list + __i;\n   }\n \n   mutex_type&\n-  __pool_base::_M_get_mutex()\n+  __pool_alloc_base::_M_get_mutex()\n   { return __gnu_internal::palloc_init_mutex; }\n \n   // Allocate memory in large chunks in order to avoid fragmenting the\n   // heap too much.  Assume that __n is properly aligned.  We hold the\n   // allocation lock.\n   char*\n-  __pool_base::_M_allocate_chunk(size_t __n, int& __nobjs)\n+  __pool_alloc_base::_M_allocate_chunk(size_t __n, int& __nobjs)\n   {\n     char* __result;\n     size_t __total_bytes = __n * __nobjs;\n@@ -128,7 +128,7 @@ namespace __gnu_cxx\n   // __n\"'s free list.  We assume that __n is properly aligned.  We\n   // hold the allocation lock.\n   void*\n-  __pool_base::_M_refill(size_t __n)\n+  __pool_alloc_base::_M_refill(size_t __n)\n   {\n     int __nobjs = 20;\n     char* __chunk = _M_allocate_chunk(__n, __nobjs);\n@@ -159,11 +159,11 @@ namespace __gnu_cxx\n     return __result;\n   }\n \n-  __pool_base::_Obj* volatile __pool_base::_S_free_list[_S_free_list_size];\n+  __pool_alloc_base::_Obj* volatile __pool_alloc_base::_S_free_list[_S_free_list_size];\n   \n-  char* __pool_base::_S_start_free = 0;\n+  char* __pool_alloc_base::_S_start_free = 0;\n   \n-  char* __pool_base::_S_end_free = 0;\n+  char* __pool_alloc_base::_S_end_free = 0;\n   \n-  size_t __pool_base::_S_heap_size = 0;\n+  size_t __pool_alloc_base::_S_heap_size = 0;\n } // namespace __gnu_cxx"}]}