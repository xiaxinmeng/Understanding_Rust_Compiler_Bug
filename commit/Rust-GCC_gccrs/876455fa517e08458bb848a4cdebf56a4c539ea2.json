{"sha": "876455fa517e08458bb848a4cdebf56a4c539ea2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc2NDU1ZmE1MTdlMDg0NThiYjg0OGE0Y2RlYmY1NmE0YzUzOWVhMg==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2003-09-14T01:14:18Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2003-09-14T01:14:18Z"}, "message": "rs6000.c (GEN_LOCAL_LABEL_FOR_SYMBOL): Remove.\n\n2003-09-13  Andrew Pinski <pinskia@physics.uc.edu>\n\n        * config/rs6000/rs6000.c (GEN_LOCAL_LABEL_FOR_SYMBOL): Remove.\n        (machopic_output_stub): Only generate pic base symbols when using pic\n        and generate them in the form L00000000$spb.\n\nFrom-SVN: r71368", "tree": {"sha": "84da5a5872e1ce454f9b741f837f8e4f5538d0cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84da5a5872e1ce454f9b741f837f8e4f5538d0cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/876455fa517e08458bb848a4cdebf56a4c539ea2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/876455fa517e08458bb848a4cdebf56a4c539ea2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/876455fa517e08458bb848a4cdebf56a4c539ea2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/876455fa517e08458bb848a4cdebf56a4c539ea2/comments", "author": null, "committer": null, "parents": [{"sha": "3428576c065ef869bc2f61935392439f5c686794", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3428576c065ef869bc2f61935392439f5c686794", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3428576c065ef869bc2f61935392439f5c686794"}], "stats": {"total": 33, "additions": 10, "deletions": 23}, "files": [{"sha": "f0c78717061b85d1e05ff0340532d9c6b93f338e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876455fa517e08458bb848a4cdebf56a4c539ea2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876455fa517e08458bb848a4cdebf56a4c539ea2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=876455fa517e08458bb848a4cdebf56a4c539ea2", "patch": "@@ -1,3 +1,9 @@\n+2003-09-13  Andrew Pinski <pinskia@physics.uc.edu>\n+\n+\t* config/rs6000/rs6000.c (GEN_LOCAL_LABEL_FOR_SYMBOL): Remove.\n+\t(machopic_output_stub): Only generate pic base symbols when using pic\n+\tand generate them in the form L00000000$spb.\n+\n 2003-09-13  Richard Henderson  <rth@redhat.com>\n \n \t* cgraphunit.c (cgraph_assemble_pending_functions): Export."}, {"sha": "56a292ebefb65417d405cc79154d2ac24e227fea", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 4, "deletions": 23, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/876455fa517e08458bb848a4cdebf56a4c539ea2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/876455fa517e08458bb848a4cdebf56a4c539ea2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=876455fa517e08458bb848a4cdebf56a4c539ea2", "patch": "@@ -13541,25 +13541,6 @@ output_call (rtx insn, rtx call_dest, int operand_number)\n \n #endif /* RS6000_LONG_BRANCH */\n \n-#define GEN_LOCAL_LABEL_FOR_SYMBOL(BUF,SYMBOL,LENGTH,N)\t\t\\\n-  do {\t\t\t\t\t\t\t\t\\\n-    const char *const symbol_ = (SYMBOL);\t\t\t\\\n-    char *buffer_ = (BUF);\t\t\t\t\t\\\n-    if (symbol_[0] == '\"')\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\\\n-        sprintf(buffer_, \"\\\"L%d$%s\", (N), symbol_+1);\t\t\\\n-      }\t\t\t\t\t\t\t\t\\\n-    else if (name_needs_quotes(symbol_))\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\\\n-        sprintf(buffer_, \"\\\"L%d$%s\\\"\", (N), symbol_);\t\t\\\n-      }\t\t\t\t\t\t\t\t\\\n-    else\t\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\\\n-        sprintf(buffer_, \"L%d$%s\", (N), symbol_);\t\t\\\n-      }\t\t\t\t\t\t\t\t\\\n-  } while (0)\n-\n-\n /* Generate PIC and indirect symbol stubs.  */\n \n void\n@@ -13573,7 +13554,6 @@ machopic_output_stub (FILE *file, const char *symb, const char *stub)\n   /* Lose our funky encoding stuff so it doesn't contaminate the stub.  */\n   symb = (*targetm.strip_name_encoding) (symb);\n \n-  label += 1;\n \n   length = strlen (symb);\n   symbol_name = alloca (length + 32);\n@@ -13582,9 +13562,6 @@ machopic_output_stub (FILE *file, const char *symb, const char *stub)\n   lazy_ptr_name = alloca (length + 32);\n   GEN_LAZY_PTR_NAME_FOR_SYMBOL (lazy_ptr_name, symb, length);\n \n-  local_label_0 = alloca (length + 32);\n-  GEN_LOCAL_LABEL_FOR_SYMBOL (local_label_0, symb, length, 0);\n-\n   if (flag_pic == 2)\n     machopic_picsymbol_stub1_section ();\n   else\n@@ -13596,6 +13573,10 @@ machopic_output_stub (FILE *file, const char *symb, const char *stub)\n \n   if (flag_pic == 2)\n     {\n+      label++;\n+      local_label_0 = alloca (sizeof(\"\\\"L0000000000$spb\\\"\"));\n+      sprintf (local_label_0, \"\\\"L%011d$spb\\\"\", label);\n+    \n       fprintf (file, \"\\tmflr r0\\n\");\n       fprintf (file, \"\\tbcl 20,31,%s\\n\", local_label_0);\n       fprintf (file, \"%s:\\n\\tmflr r11\\n\", local_label_0);"}]}