{"sha": "f48d9d19dd30bea216dd54d6875c7b3e04d0b945", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQ4ZDlkMTlkZDMwYmVhMjE2ZGQ1NGQ2ODc1YzdiM2UwNGQwYjk0NQ==", "commit": {"author": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2019-07-18T21:52:35Z"}, "committer": {"name": "Fran\u00e7ois Dumont", "email": "fdumont@gcc.gnu.org", "date": "2019-07-18T21:52:35Z"}, "message": "stl_tempbuf.h (__detail::__return_temporary_buffer): New.\n\n2019-07-18  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n\n\t* include/bits/stl_tempbuf.h (__detail::__return_temporary_buffer): New.\n\t(~_Temporary_buffer()): Use latter.\n\t(_Temporary_buffer(_FIterator, size_type)): Likewise.\n\nFrom-SVN: r273586", "tree": {"sha": "fb7101b0d8725bb948f79af1cd05f15cbe2c8c1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb7101b0d8725bb948f79af1cd05f15cbe2c8c1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f48d9d19dd30bea216dd54d6875c7b3e04d0b945", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f48d9d19dd30bea216dd54d6875c7b3e04d0b945", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f48d9d19dd30bea216dd54d6875c7b3e04d0b945", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f48d9d19dd30bea216dd54d6875c7b3e04d0b945/comments", "author": null, "committer": null, "parents": [{"sha": "2737c5909faa91ef1b8e0cbf42158632c4ab597e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2737c5909faa91ef1b8e0cbf42158632c4ab597e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2737c5909faa91ef1b8e0cbf42158632c4ab597e"}], "stats": {"total": 57, "additions": 39, "deletions": 18}, "files": [{"sha": "b3c2f7d1b083bfd27c8b562e64d0d679242486c5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f48d9d19dd30bea216dd54d6875c7b3e04d0b945/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f48d9d19dd30bea216dd54d6875c7b3e04d0b945/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f48d9d19dd30bea216dd54d6875c7b3e04d0b945", "patch": "@@ -1,3 +1,9 @@\n+2019-07-18  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n+\n+\t* include/bits/stl_tempbuf.h (__detail::__return_temporary_buffer): New.\n+\t(~_Temporary_buffer()): Use latter.\n+\t(_Temporary_buffer(_FIterator, size_type)): Likewise.\n+\n 2019-07-17  Andreas Schwab  <schwab@suse.de>\n \n \t* config/abi/post/ia64-linux-gnu/baseline_symbols.txt: Update."}, {"sha": "d746945a8f5df2329edb713169549aa1110ee8a6", "filename": "libstdc++-v3/include/bits/stl_tempbuf.h", "status": "modified", "additions": 33, "deletions": 18, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f48d9d19dd30bea216dd54d6875c7b3e04d0b945/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tempbuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f48d9d19dd30bea216dd54d6875c7b3e04d0b945/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tempbuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tempbuf.h?ref=f48d9d19dd30bea216dd54d6875c7b3e04d0b945", "patch": "@@ -63,6 +63,21 @@ namespace std _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n+  namespace __detail\n+  {\n+    template<typename _Tp>\n+      inline void\n+      __return_temporary_buffer(_Tp* __p,\n+\t\t\t\tsize_t __len __attribute__((__unused__)))\n+      {\n+#if __cpp_sized_deallocation\n+\t::operator delete(__p, __len);\n+#else\n+\t::operator delete(__p);\n+#endif\n+      }\n+  }\n+\n   /**\n    *  @brief Allocates a temporary buffer.\n    *  @param  __len  The number of objects of type Tp.\n@@ -112,7 +127,6 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     return_temporary_buffer(_Tp* __p)\n     { ::operator delete(__p); }\n \n-\n   /**\n    *  This class is used in two places: stl_algo.h and ext/memory,\n    *  where it is wrapped as the temporary_buffer class.  See\n@@ -165,7 +179,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       ~_Temporary_buffer()\n       {\n \tstd::_Destroy(_M_buffer, _M_buffer + _M_len);\n-\tstd::return_temporary_buffer(_M_buffer);\n+\tstd::__detail::__return_temporary_buffer(_M_buffer, _M_len);\n       }\n \n     private:\n@@ -185,7 +199,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n         __ucr(_Pointer __first, _Pointer __last,\n \t      _ForwardIterator __seed)\n         {\n-\t  if(__first == __last)\n+\t  if (__first == __last)\n \t    return;\n \n \t  _Pointer __cur = __first;\n@@ -244,22 +258,23 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     _Temporary_buffer(_ForwardIterator __seed, size_type __original_len)\n     : _M_original_len(__original_len), _M_len(0), _M_buffer(0)\n     {\n-      __try\n-\t{\n-\t  std::pair<pointer, size_type> __p(std::get_temporary_buffer<\n-\t\t\t\t\t    value_type>(_M_original_len));\n-\t  _M_buffer = __p.first;\n-\t  _M_len = __p.second;\n-\t  if (_M_buffer)\n-\t    std::__uninitialized_construct_buf(_M_buffer, _M_buffer + _M_len,\n-\t\t\t\t\t       __seed);\n-\t}\n-      __catch(...)\n+      std::pair<pointer, size_type> __p(\n+\t\tstd::get_temporary_buffer<value_type>(_M_original_len));\n+\n+      if (__p.first)\n \t{\n-\t  std::return_temporary_buffer(_M_buffer);\n-\t  _M_buffer = 0;\n-\t  _M_len = 0;\n-\t  __throw_exception_again;\n+\t  __try\n+\t    {\n+\t      std::__uninitialized_construct_buf(__p.first, __p.first + __p.second,\n+\t\t\t\t\t\t __seed);\n+\t      _M_buffer = __p.first;\n+\t      _M_len = __p.second;\n+\t    }\n+\t  __catch(...)\n+\t    {\n+\t      std::__detail::__return_temporary_buffer(__p.first, __p.second);\n+\t      __throw_exception_again;\n+\t    }\n \t}\n     }\n "}]}