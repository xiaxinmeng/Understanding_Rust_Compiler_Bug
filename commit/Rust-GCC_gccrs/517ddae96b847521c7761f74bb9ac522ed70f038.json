{"sha": "517ddae96b847521c7761f74bb9ac522ed70f038", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE3ZGRhZTk2Yjg0NzUyMWM3NzYxZjc0YmI5YWM1MjJlZDcwZjAzOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-12-05T22:24:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-12-05T22:24:08Z"}, "message": "re PR middle-end/34337 (Internal error while building gtkwhiteboardc.c from pidgin 2.3.0)\n\n\tPR middle-end/34337\n\t* fold-const.c (fold_binary) <case BIT_IOR_EXPR>: Don't minimize\n\tnumber of bits set in C1 if a mode mask for some mode can be used\n\tinstead.\n\n\t* gcc.c-torture/execute/20071205-1.c: New test.\n\nFrom-SVN: r130635", "tree": {"sha": "d91874c1661fc111f66e2b41c03740a7db664cb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d91874c1661fc111f66e2b41c03740a7db664cb9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/517ddae96b847521c7761f74bb9ac522ed70f038", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/517ddae96b847521c7761f74bb9ac522ed70f038", "html_url": "https://github.com/Rust-GCC/gccrs/commit/517ddae96b847521c7761f74bb9ac522ed70f038", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/517ddae96b847521c7761f74bb9ac522ed70f038/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e8608df46e1f096a942e0fff741fcdf2d9120df0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8608df46e1f096a942e0fff741fcdf2d9120df0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8608df46e1f096a942e0fff741fcdf2d9120df0"}], "stats": {"total": 60, "additions": 54, "deletions": 6}, "files": [{"sha": "189286b48f9ca907035d8b8e341270e6a12a6434", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517ddae96b847521c7761f74bb9ac522ed70f038/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517ddae96b847521c7761f74bb9ac522ed70f038/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=517ddae96b847521c7761f74bb9ac522ed70f038", "patch": "@@ -1,3 +1,10 @@\n+2007-12-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/34337\n+\t* fold-const.c (fold_binary) <case BIT_IOR_EXPR>: Don't minimize\n+\tnumber of bits set in C1 if a mode mask for some mode can be used\n+\tinstead.\n+\n 2007-12-05  Bernhard Fischer  <aldot@gcc.gnu.org>\n \n \t* varasm.c (merge_weak, weak_finish, assemble_alias): Commentary typo"}, {"sha": "8519e6831f7588608bb1239dda24e4bff0150f01", "filename": "gcc/fold-const.c", "status": "modified", "additions": 25, "deletions": 6, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517ddae96b847521c7761f74bb9ac522ed70f038/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517ddae96b847521c7761f74bb9ac522ed70f038/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=517ddae96b847521c7761f74bb9ac522ed70f038", "patch": "@@ -10570,8 +10570,8 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n \t  && TREE_CODE (arg1) == INTEGER_CST\n \t  && TREE_CODE (TREE_OPERAND (arg0, 1)) == INTEGER_CST)\n \t{\n-\t  unsigned HOST_WIDE_INT hi1, lo1, hi2, lo2, mlo, mhi;\n-\t  int width = TYPE_PRECISION (type);\n+\t  unsigned HOST_WIDE_INT hi1, lo1, hi2, lo2, hi3, lo3, mlo, mhi;\n+\t  int width = TYPE_PRECISION (type), w;\n \t  hi1 = TREE_INT_CST_HIGH (TREE_OPERAND (arg0, 1));\n \t  lo1 = TREE_INT_CST_LOW (TREE_OPERAND (arg0, 1));\n \t  hi2 = TREE_INT_CST_HIGH (arg1);\n@@ -10599,16 +10599,35 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n \t    return fold_build2 (BIT_IOR_EXPR, type,\n \t\t\t\tTREE_OPERAND (arg0, 0), arg1);\n \n-\t  /* Minimize the number of bits set in C1, i.e. C1 := C1 & ~C2.  */\n+\t  /* Minimize the number of bits set in C1, i.e. C1 := C1 & ~C2,\n+\t     unless (C1 & ~C2) | (C2 & C3) for some C3 is a mask of some\n+\t     mode which allows further optimizations.  */\n \t  hi1 &= mhi;\n \t  lo1 &= mlo;\n-\t  if ((hi1 & ~hi2) != hi1 || (lo1 & ~lo2) != lo1)\n+\t  hi2 &= mhi;\n+\t  lo2 &= mlo;\n+\t  hi3 = hi1 & ~hi2;\n+\t  lo3 = lo1 & ~lo2;\n+\t  for (w = BITS_PER_UNIT;\n+\t       w <= width && w <= HOST_BITS_PER_WIDE_INT;\n+\t       w <<= 1)\n+\t    {\n+\t      unsigned HOST_WIDE_INT mask\n+\t\t= (unsigned HOST_WIDE_INT) -1 >> (HOST_BITS_PER_WIDE_INT - w);\n+\t      if (((lo1 | lo2) & mask) == mask\n+\t\t  && (lo1 & ~mask) == 0 && hi1 == 0)\n+\t\t{\n+\t\t  hi3 = 0;\n+\t\t  lo3 = mask;\n+\t\t  break;\n+\t\t}\n+\t    }\n+\t  if (hi3 != hi1 || lo3 != lo1)\n \t    return fold_build2 (BIT_IOR_EXPR, type,\n \t\t\t\tfold_build2 (BIT_AND_EXPR, type,\n \t\t\t\t\t     TREE_OPERAND (arg0, 0),\n \t\t\t\t\t     build_int_cst_wide (type,\n-\t\t\t\t\t\t\t\t lo1 & ~lo2,\n-\t\t\t\t\t\t\t\t hi1 & ~hi2)),\n+\t\t\t\t\t\t\t\t lo3, hi3)),\n \t\t\t\targ1);\n \t}\n "}, {"sha": "70aa1df36f0986ebabf871f2c34a25834a720da4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517ddae96b847521c7761f74bb9ac522ed70f038/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517ddae96b847521c7761f74bb9ac522ed70f038/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=517ddae96b847521c7761f74bb9ac522ed70f038", "patch": "@@ -1,3 +1,8 @@\n+2007-12-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/34337\n+\t* gcc.c-torture/execute/20071205-1.c: New test.\n+\n 2007-12-05  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* gfortran.dg/module_nan.f90: Add -mieee for sh."}, {"sha": "fa19ec067c29d5934eb1b7fed8fbdaaedc6700a0", "filename": "gcc/testsuite/gcc.c-torture/execute/20071205-1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/517ddae96b847521c7761f74bb9ac522ed70f038/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20071205-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/517ddae96b847521c7761f74bb9ac522ed70f038/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20071205-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20071205-1.c?ref=517ddae96b847521c7761f74bb9ac522ed70f038", "patch": "@@ -0,0 +1,17 @@\n+/* PR middle-end/34337 */\n+\n+extern void abort (void);\n+\n+int\n+foo (int x)\n+{\n+  return ((x << 8) & 65535) | 255;\n+}\n+\n+int\n+main (void)\n+{\n+  if (foo (0x32) != 0x32ff || foo (0x174) != 0x74ff)\n+    abort ();\n+  return 0;\n+}"}]}