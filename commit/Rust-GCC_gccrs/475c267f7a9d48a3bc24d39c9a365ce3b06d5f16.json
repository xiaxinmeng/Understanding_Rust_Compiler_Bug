{"sha": "475c267f7a9d48a3bc24d39c9a365ce3b06d5f16", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDc1YzI2N2Y3YTlkNDhhM2JjMjRkMzljOWEzNjVjZTNiMDZkNWYxNg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2001-11-27T15:36:24Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2001-11-27T15:36:24Z"}, "message": "collect2.c: Check HAVE_DUP2 instead of NO_DUP2.\n\n\t* collect2.c: Check HAVE_DUP2 instead of NO_DUP2.\n\t(dup2): Make static and add prototype.\n\t* m68k/plexus.h: Don't define NO_DUP2.\n\t* configure.in (AC_CHECK_FUNCS): Add dup2.\n\t* config.in, configure: Regenerate.\n\nFrom-SVN: r47379", "tree": {"sha": "b4b3cf63e86e012917e8cc2f32151469a46fbd26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4b3cf63e86e012917e8cc2f32151469a46fbd26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/475c267f7a9d48a3bc24d39c9a365ce3b06d5f16", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/475c267f7a9d48a3bc24d39c9a365ce3b06d5f16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/475c267f7a9d48a3bc24d39c9a365ce3b06d5f16", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/475c267f7a9d48a3bc24d39c9a365ce3b06d5f16/comments", "author": null, "committer": null, "parents": [{"sha": "ec8e621da9820b3bb8d316a29195da93c926e8c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec8e621da9820b3bb8d316a29195da93c926e8c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec8e621da9820b3bb8d316a29195da93c926e8c1"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "499a72f2ef42a6b2da9d80675a4c814c4c9b3cff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/475c267f7a9d48a3bc24d39c9a365ce3b06d5f16/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/475c267f7a9d48a3bc24d39c9a365ce3b06d5f16/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=475c267f7a9d48a3bc24d39c9a365ce3b06d5f16", "patch": "@@ -1,5 +1,11 @@\n 2001-11-27  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n+\t* collect2.c: Check HAVE_DUP2 instead of NO_DUP2.\n+\t(dup2): Make static and add prototype.\n+\t* m68k/plexus.h: Don't define NO_DUP2.\n+\t* configure.in (AC_CHECK_FUNCS): Add dup2.\n+\t* config.in, configure: Regenerate.\n+\n \t* ia64/aix.h (REG_SIZE): Don't #undef.\n \t* sparc.h (REG_SIZE): Delete.\n \t* flow.c (mark_used_regs): Don't use REG_SIZE."}, {"sha": "f527b94b7cb70497d430df807db2e9f30be19dce", "filename": "gcc/collect2.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/475c267f7a9d48a3bc24d39c9a365ce3b06d5f16/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/475c267f7a9d48a3bc24d39c9a365ce3b06d5f16/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=475c267f7a9d48a3bc24d39c9a365ce3b06d5f16", "patch": "@@ -309,8 +309,9 @@ static int ignore_library\tPARAMS ((const char *));\n #endif\n static char *extract_string\tPARAMS ((const char **));\n \f\n-#ifdef NO_DUP2\n-int\n+#ifndef HAVE_DUP2\n+static int dup2 PARAMS ((int, int));\n+static int\n dup2 (oldfd, newfd)\n      int oldfd;\n      int newfd;\n@@ -329,7 +330,7 @@ dup2 (oldfd, newfd)\n \n   return fd;\n }\n-#endif\n+#endif /* ! HAVE_DUP2 */\n \f\n /* Delete tempfiles and exit function.  */\n "}, {"sha": "06cdf45ace74b1d3ecbd2b5a08eea2616e4311ba", "filename": "gcc/config.in", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/475c267f7a9d48a3bc24d39c9a365ce3b06d5f16/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/475c267f7a9d48a3bc24d39c9a365ce3b06d5f16/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=475c267f7a9d48a3bc24d39c9a365ce3b06d5f16", "patch": "@@ -1,4 +1,4 @@\n-/* config.in.  Generated automatically from configure.in by autoheader 2.13.  */\n+/* config.in.  Generated automatically from configure.in by autoheader.  */\n \n /* Define if using alloca.c.  */\n #undef C_ALLOCA\n@@ -114,6 +114,9 @@\n /* Define if you have the dcgettext function.  */\n #undef HAVE_DCGETTEXT\n \n+/* Define if you have the dup2 function.  */\n+#undef HAVE_DUP2\n+\n /* Define if you have the feof_unlocked function.  */\n #undef HAVE_FEOF_UNLOCKED\n \n@@ -566,15 +569,16 @@\n    and preserves file table indices exactly as given. */\n #undef HAVE_AS_DWARF2_DEBUG_LINE\n \n-/* Define 0/1 to force the choice for exception handling model. */\n-#undef CONFIG_SJLJ_EXCEPTIONS\n-\n /* Define if your assembler supports the --gdwarf2 option. */\n #undef HAVE_AS_GDWARF2_DEBUG_FLAG\n \n /* Define if your assembler supports the --gstabs option. */\n #undef HAVE_AS_GSTABS_DEBUG_FLAG\n \n+/* Define 0/1 to force the choice for exception handling model. */\n+#undef CONFIG_SJLJ_EXCEPTIONS\n+\n+\n /* Bison unconditionally undefines `const' if neither `__STDC__' nor\n    __cplusplus are defined.  That's a problem since we use `const' in\n    the GCC headers, and the resulting bison code is therefore type"}, {"sha": "35c8e1a15d7315e11c524b276510b6d5edd362dc", "filename": "gcc/config/m68k/plexus.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/475c267f7a9d48a3bc24d39c9a365ce3b06d5f16/gcc%2Fconfig%2Fm68k%2Fplexus.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/475c267f7a9d48a3bc24d39c9a365ce3b06d5f16/gcc%2Fconfig%2Fm68k%2Fplexus.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fplexus.h?ref=475c267f7a9d48a3bc24d39c9a365ce3b06d5f16", "patch": "@@ -102,6 +102,5 @@ Boston, MA 02111-1307, USA.  */\n /***********************************************************************/\n \n #define NM_FLAGS \"\"\n-#define NO_DUP2\n \n #define SIZE_TYPE \"int\""}, {"sha": "0c8cca93a8c7a83727730eaf7ed2630c7ab8ce1b", "filename": "gcc/configure", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/475c267f7a9d48a3bc24d39c9a365ce3b06d5f16/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/475c267f7a9d48a3bc24d39c9a365ce3b06d5f16/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=475c267f7a9d48a3bc24d39c9a365ce3b06d5f16", "patch": "@@ -2078,7 +2078,7 @@ EOF\n fi\n \n # Find some useful tools\n-for ac_prog in gawk mawk nawk awk\n+for ac_prog in mawk gawk nawk awk\n do\n # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n@@ -3397,7 +3397,7 @@ EOF\n fi\n \n \n-for ac_func in strtoul bsearch popen times clock \\\n+for ac_func in strtoul bsearch popen times clock dup2 \\\n \tstrchr strrchr kill getrlimit setrlimit atoll atoq \\\n \tsysconf isascii gettimeofday strsignal putc_unlocked fputc_unlocked \\\n \tfputs_unlocked fwrite_unlocked fprintf_unlocked getrusage nl_langinfo \\"}, {"sha": "3ccd686d594f0cc120b32cce9171e9423313638a", "filename": "gcc/configure.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/475c267f7a9d48a3bc24d39c9a365ce3b06d5f16/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/475c267f7a9d48a3bc24d39c9a365ce3b06d5f16/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=475c267f7a9d48a3bc24d39c9a365ce3b06d5f16", "patch": "@@ -578,7 +578,7 @@ fi\n dnl Disabled until we have a complete test for buggy enum bitfields.\n dnl gcc_AC_C_ENUM_BF_UNSIGNED\n \n-AC_CHECK_FUNCS(strtoul bsearch popen times clock \\\n+AC_CHECK_FUNCS(strtoul bsearch popen times clock dup2 \\\n \tstrchr strrchr kill getrlimit setrlimit atoll atoq \\\n \tsysconf isascii gettimeofday strsignal putc_unlocked fputc_unlocked \\\n \tfputs_unlocked fwrite_unlocked fprintf_unlocked getrusage nl_langinfo \\"}]}