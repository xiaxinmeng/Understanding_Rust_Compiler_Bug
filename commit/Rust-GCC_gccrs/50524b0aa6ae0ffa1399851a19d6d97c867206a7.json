{"sha": "50524b0aa6ae0ffa1399851a19d6d97c867206a7", "node_id": "C_kwDOANBUbNoAKDUwNTI0YjBhYTZhZTBmZmExMzk5ODUxYTE5ZDZkOTdjODY3MjA2YTc", "commit": {"author": {"name": "Corentin Gay", "email": "gay@adacore.com", "date": "2021-09-09T09:57:06Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-05T08:20:02Z"}, "message": "[Ada] Add case to consider ENODEV a \"file not found error\"\n\ngcc/ada/\n\n\t* sysdep.c (__gnat_is_file_not_found_error): Add else if case.", "tree": {"sha": "9398f55e37bde43d092c9b1958052241be78e84b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9398f55e37bde43d092c9b1958052241be78e84b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50524b0aa6ae0ffa1399851a19d6d97c867206a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50524b0aa6ae0ffa1399851a19d6d97c867206a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50524b0aa6ae0ffa1399851a19d6d97c867206a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50524b0aa6ae0ffa1399851a19d6d97c867206a7/comments", "author": {"login": "ashleygay", "id": 28534730, "node_id": "MDQ6VXNlcjI4NTM0NzMw", "avatar_url": "https://avatars.githubusercontent.com/u/28534730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashleygay", "html_url": "https://github.com/ashleygay", "followers_url": "https://api.github.com/users/ashleygay/followers", "following_url": "https://api.github.com/users/ashleygay/following{/other_user}", "gists_url": "https://api.github.com/users/ashleygay/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashleygay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashleygay/subscriptions", "organizations_url": "https://api.github.com/users/ashleygay/orgs", "repos_url": "https://api.github.com/users/ashleygay/repos", "events_url": "https://api.github.com/users/ashleygay/events{/privacy}", "received_events_url": "https://api.github.com/users/ashleygay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdabd8b6ecb3115dd359d39221b01cbc4b523333", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdabd8b6ecb3115dd359d39221b01cbc4b523333", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdabd8b6ecb3115dd359d39221b01cbc4b523333"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "2c50b3621b5685f32dd63d50326a032a1ba268b4", "filename": "gcc/ada/sysdep.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50524b0aa6ae0ffa1399851a19d6d97c867206a7/gcc%2Fada%2Fsysdep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50524b0aa6ae0ffa1399851a19d6d97c867206a7/gcc%2Fada%2Fsysdep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsysdep.c?ref=50524b0aa6ae0ffa1399851a19d6d97c867206a7", "patch": "@@ -907,6 +907,10 @@ __gnat_is_file_not_found_error (int errno_val)\n     if (errno_val == ENOENT)\n       return 1;\n #ifdef __vxworks\n+    /* Starting with VxWorks 21.03, the fopen() function can set errno to\n+     * ENODEV when the prefix of the path does not match any known device. */\n+    else if (errno_val == ENODEV)\n+      return 1;\n     /* In the case of VxWorks, we also have to take into account various\n      * filesystem-specific variants of this error.\n      */"}]}