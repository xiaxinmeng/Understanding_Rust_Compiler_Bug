{"sha": "009186e083d77ea7e83696601a428c409417b27c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA5MTg2ZTA4M2Q3N2VhN2U4MzY5NjYwMWE0MjhjNDA5NDE3YjI3Yw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-09-05T07:51:25Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-09-05T07:51:25Z"}, "message": "s-stoele.ads, [...]: Minor reformatting...\n\n\t* s-stoele.ads, s-stopoo.ads, s-stratt.ads, s-strops.ads, s-unstyp.ads,\n\ts-valboo.ads, s-valcha.ads, s-valdec.ads, s-valenu.ads, s-valint.ads,\n\ts-vallld.ads, s-vallli.ads, s-valllu.ads, s-valrea.ads, s-valuns.ads,\n\ts-valuti.ads, s-valwch.ads, s-veboop.ads, s-vector.ads, s-vercon.ads,\n\ts-wchcnv.ads, s-wchcon.ads, s-wchjis.ads, s-wchstw.ads, s-wchwts.ads,\n\ts-widboo.ads, s-widcha.ads, s-widenu.ads, s-widlli.ads, s-widllu.ads,\n\ts-widwch.ads, s-wwdcha.ads, s-wwdenu.ads, s-wwdwch.ads, system.ads,\n\ttable.ads, types.ads, system-vms_64.ads, s-crtl-vms64.ads,\n\ts-addope.ads, system-darwin-ppc.ads, system-vxworks-x86.ads,\n\ts-vxwork-x86.ads, system-linux-ppc.ads, i-vxwork-x86.ads,\n\ta-numaux-darwin.ads, a-crbtgo.ads, a-crbtgk.ads, a-crbltr.ads,\n\ta-coprnu.ads, a-convec.ads, a-contai.ads, a-coinve.ads, a-cohata.ads,\n\ta-cohama.ads, a-cihama.ads, a-cidlli.ads, a-cdlili.ads,\n\ta-numaux-libc-x86.ads, a-numaux-vxworks.ads, system-linux-ia64.ads,\n\tsystem-freebsd-x86.ads, system-unixware.ads, system-lynxos-ppc.ads,\n\tsystem-lynxos-x86.ads, system-linux-x86_64.ads, system-tru64.ads,\n\ts-vxwork-alpha.ads, system-aix.ads, system-vxworks-sparcv9.ads,\n\tsystem-solaris-x86.ads, system-irix-o32.ads, system-irix-n32.ads,\n\ts-parame-hpux.ads, system-hpux.ads, system-vxworks-m68k.ads,\n\ts-vxwork-m68k.ads, system-linux-x86.ads, system-vxworks-mips.ads,\n\ts-vxwork-mips.ads, system-os2.ads, system-interix.ads,\n\ts-vxwork-ppc.ads, system-solaris-sparc.ads, s-vxwork-sparcv9.ads,\n\tsystem-solaris-sparcv9.ads, s-parame-vms.ads, system-vms.ads,\n\ts-osinte-mingw.ads, system-mingw.ads, s-parame-vms-restrict.ads,\n\tsystem-vms-zcx.ads, s-parame-ae653.ads, system-vxworks-ppc.ads,\n\ts-parame-vxworks.ads, system-vxworks-alpha.ads, interfac-vms.ads,\n\ta-numaux-x86.ads, a-astaco.ads, a-chahan.ads, a-charac.ads,\n\ta-chlat1.ads, a-chlat9.ads, a-colire.adb, a-colire.ads, a-comlin.ads,\n\ta-cwila1.ads, a-cwila9.ads, ada.ads, a-decima.ads, a-exextr.adb,\n\ta-filico.ads, a-finali.ads, a-interr.ads, a-ioexce.ads, a-dynpri.ads,\n\ta-ngcefu.ads, a-ngcefu.adb, a-ngcoty.adb, a-ngcoty.ads, a-ngelfu.ads,\n\ta-nudira.adb, a-nudira.ads, a-nuflra.adb, a-numaux.ads, a-numeri.ads,\n\ta-reatim.adb, a-stmaco.ads, a-storio.ads, a-strbou.ads, a-stream.ads,\n\ta-strfix.ads, a-string.ads, a-strmap.ads, a-strsea.ads, a-strsup.ads,\n\ta-strunb.ads, a-stunau.ads, a-stwibo.ads, a-stwifi.ads, a-stwima.ads,\n\ta-stwise.ads, a-stwisu.ads, a-stwiun.ads, a-swmwco.ads, a-textio.ads,\n\tcsets.ads, debug.ads, dec.ads, g-curexc.ads, get_targ.ads,\n\tg-except.ads, system-linux-hppa.ads, a-chacon.ads, a-widcha.ads,\n\ta-zchara.ads, system-hpux-ia64.ads, a-ciorma.ads, a-coorma.ads,\n\ta-ciormu.ads, a-coormu.ads, a-rbtgso.ads, a-chzla1.ads, a-chzla9.ads,\n\ta-stzbou.ads, a-stzfix.ads, a-stzmap.ads, a-stzsea.ads, a-stzsup.ads,\n\ta-stzunb.ads, a-swunau.ads, a-szunau.ads, gnat.ads, g-regpat.ads,\n\tg-speche.ads, g-spitbo.ads, g-table.ads, g-tasloc.ads, g-trasym.ads,\n\ti-c.ads, i-cpoint.ads, i-cpp.ads, i-cstrin.ads, i-fortra.ads,\n\tinterfac.ads, i-os2err.ads, i-os2lib.ads, i-os2syn.ads, i-os2thr.ads,\n\ti-vxwork.ads, output.ads, s-arit64.ads, s-atacco.ads, s-boarop.ads,\n\ts-casuti.ads, s-crtl.ads, s-exctab.ads, s-exnint.ads, s-exnllf.ads,\n\ts-exnlli.ads, s-expint.ads, s-explli.ads, s-expllu.ads, s-expmod.ads,\n\ts-expuns.ads, s-fatflt.ads, s-fatgen.ads, s-fatlfl.ads, s-fatllf.ads,\n\ts-fatsfl.ads, s-finimp.ads, s-finroo.ads, s-fore.ads, s-geveop.ads,\n\ts-htable.ads, s-imgbiu.ads, s-imgboo.ads, s-imgcha.ads, s-imgdec.ads,\n\ts-imgenu.ads, s-imgint.ads, s-imgllb.ads, s-imglld.ads, s-imglli.ads,\n\ts-imgllu.ads, s-imgllw.ads, s-imgrea.ads, s-imguns.ads, s-imgwch.ads,\n\ts-imgwiu.ads, s-io.ads, s-maccod.ads, s-mantis.ads, s-memcop.ads,\n\ts-pack03.ads, s-pack05.ads, s-pack06.ads, s-pack07.ads, s-pack09.ads,\n\ts-pack10.ads, s-pack11.ads, s-pack12.ads, s-pack13.ads, s-pack14.ads,\n\ts-pack15.ads, s-pack17.ads, s-pack18.ads, s-pack19.ads, s-pack20.ads,\n\ts-pack21.ads, s-pack22.ads, s-pack23.ads, s-pack24.ads, s-pack25.ads,\n\ts-pack26.ads, s-pack27.ads, s-pack28.ads, s-pack29.ads, s-pack30.ads,\n\ts-pack31.ads, s-pack33.ads, s-pack34.ads, s-pack35.ads, s-pack36.ads,\n\ts-pack37.ads, s-pack38.ads, s-pack39.ads, s-pack40.ads, s-pack41.ads,\n\ts-pack42.ads, s-pack43.ads, s-pack44.ads, s-pack45.ads, s-pack46.ads,\n\ts-pack47.ads, s-pack48.ads, s-pack49.ads, s-pack50.ads, s-pack51.ads,\n\ts-pack52.ads, s-pack53.ads, s-pack54.ads, s-pack55.ads, s-pack56.ads,\n\ts-pack57.ads, s-pack58.ads, s-pack59.ads, s-pack60.ads, s-pack61.ads,\n\ts-pack62.ads, s-pack63.ads, s-parame.ads, s-pooglo.ads, s-pooloc.ads,\n\ts-poosiz.ads, s-powtab.ads, s-purexc.ads, s-sopco3.ads, s-sopco4.ads,\n\ts-sopco5.ads: Minor reformatting: reindent pragma Pure/Preelaborate\n\tand always use the no parameter form for consistency.\n\n\t* gnat-style.texi: Document rules about Preelaborate/Pure pragmas.\n\nFrom-SVN: r103855", "tree": {"sha": "7e55fd2579238c1d378290a78f96f5ecd1b6243f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e55fd2579238c1d378290a78f96f5ecd1b6243f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/009186e083d77ea7e83696601a428c409417b27c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/009186e083d77ea7e83696601a428c409417b27c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/009186e083d77ea7e83696601a428c409417b27c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/009186e083d77ea7e83696601a428c409417b27c/comments", "author": null, "committer": null, "parents": [{"sha": "dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfbe160a82072f90a9ba5b2a138f3fa83edf7ba3"}], "stats": {"total": 1141, "additions": 568, "deletions": 573}, "files": [{"sha": "dad55e0b62325024a84135e5e2ec86df844b5ad3", "filename": "gcc/ada/a-astaco.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-astaco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-astaco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-astaco.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -27,8 +27,8 @@\n with Ada.Task_Identification;\n \n package Ada.Asynchronous_Task_Control is\n-pragma Preelaborate_05 (Asynchronous_Task_Control);\n---  In accordance with Ada 2005 AI-362\n+   pragma Preelaborate_05;\n+   --  In accordance with Ada 2005 AI-362\n \n    pragma Unimplemented_Unit;\n "}, {"sha": "70c0f806f5b1b24042488c81a38ac2d12403d3e4", "filename": "gcc/ada/a-cdlili.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-cdlili.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-cdlili.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cdlili.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -43,7 +43,7 @@ generic\n       return Boolean is <>;\n \n package Ada.Containers.Doubly_Linked_Lists is\n-   pragma Preelaborate (Doubly_Linked_Lists);\n+   pragma Preelaborate;\n \n    type List is tagged private;\n "}, {"sha": "7c36c81778490a849db9543a6c38f0de0a2b6d46", "filename": "gcc/ada/a-chacon.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-chacon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-chacon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-chacon.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -36,7 +36,7 @@\n ------------------------------------------------------------------------------\n \n package Ada.Characters.Conversions is\n-pragma Pure (Conversions);\n+   pragma Pure;\n \n    function Is_Character (Item : Wide_Character)      return Boolean;\n    function Is_String    (Item : Wide_String)         return Boolean;"}, {"sha": "7bc2ded790b74c15c953b1886c343ed0797b8e43", "filename": "gcc/ada/a-chahan.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-chahan.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-chahan.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-chahan.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -36,9 +36,9 @@\n ------------------------------------------------------------------------------\n \n package Ada.Characters.Handling is\n-pragma Preelaborate (Handling);\n-pragma Pure_05 (Handling);\n---  In accordance with Ada 2005 AI-362\n+   pragma Preelaborate;\n+   pragma Pure_05;\n+   --  In accordance with Ada 2005 AI-362\n \n    ----------------------------------------\n    -- Character Classification Functions --"}, {"sha": "87889587754e414a16bf0dba7fb8102fc90b5831", "filename": "gcc/ada/a-charac.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-charac.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-charac.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-charac.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -14,6 +14,6 @@\n ------------------------------------------------------------------------------\n \n package Ada.Characters is\n-pragma Pure (Characters);\n+   pragma Pure;\n \n end Ada.Characters;"}, {"sha": "2d8a8bc7a3fb3a975f7b44404d921618f6607002", "filename": "gcc/ada/a-chlat1.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-chlat1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-chlat1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-chlat1.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -14,7 +14,7 @@\n ------------------------------------------------------------------------------\n \n package Ada.Characters.Latin_1 is\n-pragma Pure (Latin_1);\n+   pragma Pure;\n \n    ------------------------\n    -- Control Characters --"}, {"sha": "30f351af829e7a10917d3c04180ad1d5aac4c726", "filename": "gcc/ada/a-chlat9.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-chlat9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-chlat9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-chlat9.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -36,11 +36,11 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package provides definitions for Latin-9 (ISO-8859-9) analogous to\n+--  This package provides definitions for Latin-9 (ISO-8859-15) analogous to\n --  those defined in the standard package Ada.Characters.Latin_1 for Latin-1.\n \n package Ada.Characters.Latin_9 is\n-pragma Pure (Latin_9);\n+   pragma Pure;\n \n    ------------------------\n    -- Control Characters --"}, {"sha": "13496b66dc0c7f7660621f9d5bd4dbfa42e9d64f", "filename": "gcc/ada/a-chzla1.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-chzla1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-chzla1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-chzla1.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,7 +37,7 @@\n --  is in accordance with the implementation permission in RM (A.3.3(27)).\n \n package Ada.Characters.Wide_Wide_Latin_1 is\n-pragma Pure (Wide_Wide_Latin_1);\n+   pragma Pure;\n \n    ------------------------\n    -- Control Characters --"}, {"sha": "67459241dc715be6f4682a6bb2990c3c4145094b", "filename": "gcc/ada/a-chzla9.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-chzla9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-chzla9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-chzla9.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,7 +37,7 @@\n --  is in accordance with the implementation permission in RM (A.3.3(27)).\n \n package Ada.Characters.Wide_Wide_Latin_9 is\n-pragma Pure (Wide_Wide_Latin_9);\n+   pragma Pure;\n \n    ------------------------\n    -- Control Characters --"}, {"sha": "eb8657fe4fd4507799e1d43360ec244ad8755fd2", "filename": "gcc/ada/a-cidlli.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-cidlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-cidlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cidlli.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -38,14 +38,13 @@ with Ada.Finalization;\n with Ada.Streams;\n \n generic\n-\n    type Element_Type (<>) is private;\n \n    with function \"=\" (Left, Right : Element_Type)\n       return Boolean is <>;\n \n package Ada.Containers.Indefinite_Doubly_Linked_Lists is\n-   pragma Preelaborate (Indefinite_Doubly_Linked_Lists);\n+   pragma Preelaborate;\n \n    type List is tagged private;\n "}, {"sha": "93bdd81e8a2a349a1f5891b9eda0d3a19ab81aa3", "filename": "gcc/ada/a-cihama.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-cihama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-cihama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cihama.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -47,7 +47,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Indefinite_Hashed_Maps is\n-   pragma Preelaborate (Indefinite_Hashed_Maps);\n+   pragma Preelaborate;\n \n    type Map is tagged private;\n    type Cursor is private;"}, {"sha": "4815ebd2e356b0411d401d18a515ba4371cb6566", "filename": "gcc/ada/a-ciorma.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-ciorma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-ciorma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciorma.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -39,7 +39,6 @@ with Ada.Finalization;\n with Ada.Streams;\n \n generic\n-\n    type Key_Type (<>) is private;\n \n    type Element_Type (<>) is private;\n@@ -49,7 +48,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Indefinite_Ordered_Maps is\n-pragma Preelaborate (Indefinite_Ordered_Maps);\n+   pragma Preelaborate;\n \n    type Map is tagged private;\n "}, {"sha": "d2bf68dfd68e3415086ec697f56796c49bc57907", "filename": "gcc/ada/a-ciormu.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-ciormu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-ciormu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ciormu.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -45,7 +45,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Indefinite_Ordered_Multisets is\n-pragma Preelaborate (Indefinite_Ordered_Multisets);\n+   pragma Preelaborate;\n \n    type Set is tagged private;\n "}, {"sha": "0c74943506e997fd2f4013dde784658b6cb80a21", "filename": "gcc/ada/a-cohama.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-cohama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-cohama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohama.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -49,7 +49,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Hashed_Maps is\n-pragma Preelaborate (Hashed_Maps);\n+   pragma Preelaborate;\n \n    type Map is tagged private;\n "}, {"sha": "d453da2a347e4e4264f84ca51d738b2ca53e6262", "filename": "gcc/ada/a-cohata.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-cohata.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-cohata.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohata.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n ------------------------------------------------------------------------------\n \n package Ada.Containers.Hash_Tables is\n-pragma Preelaborate;\n+   pragma Preelaborate;\n \n    generic\n       type Node_Type (<>) is limited private;"}, {"sha": "6ccfda5f7faa8341a669f72ee00cfb56511c3a19", "filename": "gcc/ada/a-coinve.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-coinve.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-coinve.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinve.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -44,7 +44,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Indefinite_Vectors is\n-pragma Preelaborate (Indefinite_Vectors);\n+   pragma Preelaborate;\n \n    subtype Extended_Index is Index_Type'Base\n      range Index_Type'First - 1 .."}, {"sha": "de273b50f1a89332353c41dbbd571fb500ddc611", "filename": "gcc/ada/a-colire.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-colire.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-colire.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-colire.adb?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -38,7 +38,7 @@ package body Ada.Command_Line.Remove is\n    -----------------------\n \n    procedure Initialize;\n-   --  Initialize the Remove_Count and Remove_Args variables.\n+   --  Initialize the Remove_Count and Remove_Args variables\n \n    ----------------\n    -- Initialize --"}, {"sha": "8c5a518575e8d778bf60c93b27af956f6fbc908d", "filename": "gcc/ada/a-colire.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-colire.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-colire.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-colire.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -41,7 +41,7 @@\n --  argument, Argument_Count will be 2, and Argument (2) will return C.\n \n package Ada.Command_Line.Remove is\n-pragma Preelaborate (Remove);\n+   pragma Preelaborate;\n \n    procedure Remove_Argument (Number : in Positive);\n    --  Removes the argument identified by Number, which must be in the"}, {"sha": "1ddc3e1da6eeee97fb69f3fdc0e28f42f28e7d96", "filename": "gcc/ada/a-comlin.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-comlin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-comlin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-comlin.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -36,7 +36,7 @@\n ------------------------------------------------------------------------------\n \n package Ada.Command_Line is\n-pragma Preelaborate (Command_Line);\n+   pragma Preelaborate;\n \n    function Argument_Count return Natural;\n    --  If the external execution environment supports passing arguments to a"}, {"sha": "41d99b1f628a72def0f2d52d7f5dbb337788ea1e", "filename": "gcc/ada/a-contai.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-contai.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-contai.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-contai.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -14,7 +14,7 @@\n ------------------------------------------------------------------------------\n \n package Ada.Containers is\n-pragma Pure (Containers);\n+   pragma Pure;\n \n    type Hash_Type is mod 2**32;\n    type Count_Type is range 0 .. 2**31 - 1;"}, {"sha": "9b5c9bb82cf843b4bb734606e199de3ec1c18303", "filename": "gcc/ada/a-convec.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-convec.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-convec.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-convec.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -42,7 +42,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Vectors is\n-pragma Preelaborate (Vectors);\n+   pragma Preelaborate;\n \n    subtype Extended_Index is Index_Type'Base\n      range Index_Type'First - 1 .."}, {"sha": "0efa16fbbb0cbaedd7bbcc73c3dbd81e355e7fd5", "filename": "gcc/ada/a-coorma.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-coorma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-coorma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coorma.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -47,7 +47,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Ordered_Maps is\n-pragma Preelaborate (Ordered_Maps);\n+   pragma Preelaborate;\n \n    type Map is tagged private;\n "}, {"sha": "cb42f07d3497b42266b7486d52ad4fd07afbc3d9", "filename": "gcc/ada/a-coormu.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-coormu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-coormu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coormu.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -44,7 +44,7 @@ generic\n    with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n \n package Ada.Containers.Ordered_Multisets is\n-pragma Preelaborate (Ordered_Multisets);\n+   pragma Preelaborate;\n \n    type Set is tagged private;\n "}, {"sha": "20e49d87996c9b9da57149104487357bc68d2aca", "filename": "gcc/ada/a-coprnu.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-coprnu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-coprnu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coprnu.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -14,7 +14,7 @@\n ------------------------------------------------------------------------------\n \n package Ada.Containers.Prime_Numbers is\n-pragma Pure (Prime_Numbers);\n+   pragma Pure;\n \n    type Primes_Type is array (Positive range <>) of Hash_Type;\n "}, {"sha": "9df13623d43c16e56ad73ea542c813e9973f327b", "filename": "gcc/ada/a-crbltr.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-crbltr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-crbltr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-crbltr.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n ------------------------------------------------------------------------------\n \n package Ada.Containers.Red_Black_Trees is\n-pragma Pure (Red_Black_Trees);\n+   pragma Pure;\n \n    type Color_Type is (Red, Black);\n "}, {"sha": "e1a3824a95380d37343ae5912f53cb816cf9c667", "filename": "gcc/ada/a-crbtgk.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-crbtgk.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-crbtgk.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-crbtgk.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -32,7 +32,7 @@ generic\n       R : Node_Access) return Boolean;\n \n package Ada.Containers.Red_Black_Trees.Generic_Keys is\n-pragma Pure (Generic_Keys);\n+   pragma Pure;\n \n    generic\n       with function New_Node return Node_Access;"}, {"sha": "8b3ab50f7f86c5e54e9a1796b49410179961920a", "filename": "gcc/ada/a-crbtgo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-crbtgo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-crbtgo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-crbtgo.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -50,7 +50,7 @@ generic\n    with procedure Set_Color (Node : Node_Access; Color : Color_Type) is <>;\n \n package Ada.Containers.Red_Black_Trees.Generic_Operations is\n-pragma Pure;\n+   pragma Pure;\n \n    function Min (Node : Node_Access) return Node_Access;\n "}, {"sha": "0237237bd19c225f0c9f32fa78ba2ec1baf56b4a", "filename": "gcc/ada/a-cwila1.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-cwila1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-cwila1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cwila1.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,7 +37,7 @@\n --  is in accordance with the implementation permission in RM (A.3.3(27)).\n \n package Ada.Characters.Wide_Latin_1 is\n-pragma Pure (Wide_Latin_1);\n+   pragma Pure;\n \n    ------------------------\n    -- Control Characters --"}, {"sha": "94fcad9f27ac0de4383b1761cfc2b9908646a0fd", "filename": "gcc/ada/a-cwila9.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-cwila9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-cwila9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cwila9.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,7 +37,7 @@\n --  is in accordance with the implementation permission in RM (A.3.3(27)).\n \n package Ada.Characters.Wide_Latin_9 is\n-pragma Pure (Wide_Latin_9);\n+   pragma Pure;\n \n    ------------------------\n    -- Control Characters --"}, {"sha": "960c9c04e7c28391cae305d87722b740bccaef4f", "filename": "gcc/ada/a-decima.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-decima.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-decima.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-decima.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1997 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -36,7 +36,7 @@\n ------------------------------------------------------------------------------\n \n package Ada.Decimal is\n-pragma Pure (Decimal);\n+   pragma Pure;\n \n    --  The compiler makes a number of assumptions based on the following five\n    --  constants (e.g. there is an assumption that decimal values can always"}, {"sha": "e179f46ea405d082368cc720b695c0dad1d7d340", "filename": "gcc/ada/a-dynpri.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-dynpri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-dynpri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-dynpri.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -17,8 +17,8 @@ with System;\n with Ada.Task_Identification;\n \n package Ada.Dynamic_Priorities is\n-pragma Preelaborate_05 (Dynamic_Priorities);\n---  In accordance with Ada 2005 AI-362\n+   pragma Preelaborate_05;\n+   --  In accordance with Ada 2005 AI-362\n \n    procedure Set_Priority\n      (Priority : System.Any_Priority;"}, {"sha": "caeb23c321df8a3a99745080815f5ce8a887dfeb", "filename": "gcc/ada/a-exextr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-exextr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-exextr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exextr.adb?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -85,7 +85,7 @@ package body Exception_Traces is\n \n    procedure Unhandled_Exception;\n    pragma Export (C, Unhandled_Exception, \"__gnat_unhandled_exception\");\n-   --  Hook for GDB to support \"break exception unhandled\".\n+   --  Hook for GDB to support \"break exception unhandled\"\n \n    --  For \"break exception\", GDB uses __gnat_raise_nodefer_with_msg, which\n    --  is not in this section because it fullfills other purposes than a mere"}, {"sha": "624ba5fa7ef31fa2f6410aa346f01831ca32d843", "filename": "gcc/ada/a-filico.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-filico.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-filico.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-filico.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                S p e c                                   --\n --                                                                          --\n---          Copyright (C) 1992-1997, 2004 Free Software Foundation, Inc.    --\n+--             Copyright (C) 1992-2005 Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,8 +32,9 @@\n ------------------------------------------------------------------------------\n \n with System.Finalization_Root;\n+\n package Ada.Finalization.List_Controller is\n-pragma Elaborate_Body (List_Controller);\n+   pragma Elaborate_Body;\n \n    package SFR renames System.Finalization_Root;\n "}, {"sha": "c2ae4210ca699523a02462d5dd6d19143b3dcb1b", "filename": "gcc/ada/a-finali.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-finali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-finali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-finali.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1997 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -38,7 +38,7 @@\n with System.Finalization_Root;\n \n package Ada.Finalization is\n-pragma Preelaborate (Finalization);\n+   pragma Preelaborate;\n \n    type Controlled is abstract tagged private;\n "}, {"sha": "941af5894fa7269bf406d46c8c9631064affc3d6", "filename": "gcc/ada/a-interr.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-interr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-interr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-interr.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -36,7 +36,7 @@\n ------------------------------------------------------------------------------\n \n with System.Interrupts;\n---  used for Ada_Interrupt_ID.\n+--  used for Ada_Interrupt_ID\n \n package Ada.Interrupts is\n "}, {"sha": "d4c6ee5d2943890a965e442712e603604d3760ee", "filename": "gcc/ada/a-ioexce.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-ioexce.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-ioexce.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ioexce.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -14,7 +14,7 @@\n ------------------------------------------------------------------------------\n \n package Ada.IO_Exceptions is\n-pragma Pure (IO_Exceptions);\n+   pragma Pure;\n \n    Status_Error : exception;\n    Mode_Error   : exception;"}, {"sha": "44216466cb49564259766e007c5eb8b0a4764205", "filename": "gcc/ada/a-ngcefu.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-ngcefu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-ngcefu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngcefu.adb?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -305,7 +305,7 @@ package body Ada.Numerics.Generic_Complex_Elementary_Functions is\n       Result : Complex;\n \n    begin\n-      --  For very small argument, sin (x) = x.\n+      --  For very small argument, sin (x) = x\n \n       if abs Re (X) < Square_Root_Epsilon and then\n          abs Im (X) < Square_Root_Epsilon\n@@ -642,15 +642,15 @@ package body Ada.Numerics.Generic_Complex_Elementary_Functions is\n          end if;\n       end if;\n \n-      if Im (X) < 0.0 then                 -- halve angle, Sqrt of magnitude\n+      if Im (X) < 0.0 then -- halve angle, Sqrt of magnitude\n          R_Y := -R_Y;\n       end if;\n       return Compose_From_Cartesian (R_X, R_Y);\n \n    exception\n       when Constraint_Error =>\n \n-         --  Rescale and try again.\n+         --  Rescale and try again\n \n          R := Modulus (Compose_From_Cartesian (Re (X / 4.0), Im (X / 4.0)));\n          R_X := 2.0 * Sqrt (0.5 * R + 0.5 * Re (X / 4.0));"}, {"sha": "a60f668f278def336d0e9c11d6827cb7ea737460", "filename": "gcc/ada/a-ngcefu.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-ngcefu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-ngcefu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngcefu.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -19,7 +19,7 @@ generic\n    use Complex_Types;\n \n package Ada.Numerics.Generic_Complex_Elementary_Functions is\n-   pragma Pure (Ada.Numerics.Generic_Complex_Elementary_Functions);\n+   pragma Pure;\n \n    function Sqrt (X : Complex)   return Complex;\n "}, {"sha": "aa8c9955d0f152403419a706cc0be5c3ef38fa09", "filename": "gcc/ada/a-ngcoty.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-ngcoty.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-ngcoty.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngcoty.adb?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -51,7 +51,7 @@ package body Ada.Numerics.Generic_Complex_Types is\n       X := Left.Re * Right.Re - Left.Im * Right.Im;\n       Y := Left.Re * Right.Im + Left.Im * Right.Re;\n \n-      --  If either component overflows, try to scale.\n+      --  If either component overflows, try to scale\n \n       if abs (X) > R'Last then\n          X := R'(4.0) * (R'(Left.Re / 2.0)  * R'(Right.Re / 2.0)\n@@ -626,7 +626,7 @@ package body Ada.Numerics.Generic_Complex_Types is\n       elsif Im2 = 0.0 then\n          return abs (X.Re);\n \n-         --  in all other cases, the naive computation will do.\n+      --  In all other cases, the naive computation will do\n \n       else\n          return R (Sqrt (Double (Re2 + Im2)));"}, {"sha": "fd6c9071b4ae72cc8f9c10c92dc04e74b731ad30", "filename": "gcc/ada/a-ngcoty.ads", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-ngcoty.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-ngcoty.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngcoty.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1997 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -39,8 +39,7 @@ generic\n    type Real is digits <>;\n \n package Ada.Numerics.Generic_Complex_Types is\n-\n-pragma Pure (Generic_Complex_Types);\n+   pragma Pure;\n \n    type Complex is record\n       Re, Im : Real'Base;"}, {"sha": "c115411ca89bee7efca19df83e28ce82fef4612d", "filename": "gcc/ada/a-ngelfu.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-ngelfu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-ngelfu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-ngelfu.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -17,7 +17,7 @@ generic\n    type Float_Type is digits <>;\n \n package Ada.Numerics.Generic_Elementary_Functions is\n-pragma Pure (Generic_Elementary_Functions);\n+   pragma Pure;\n \n    function Sqrt    (X           : Float_Type'Base) return Float_Type'Base;\n    function Log     (X           : Float_Type'Base) return Float_Type'Base;"}, {"sha": "9cdd8a149e13d23943013a6467f65137acb08f3a", "filename": "gcc/ada/a-nudira.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-nudira.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-nudira.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-nudira.adb?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -261,7 +261,7 @@ package body Ada.Numerics.Discrete_Random is\n       Outs.FP  := Flt (Outs.P);\n       Outs.Scl := (RstL - RstF + 1.0) / (Flt (Outs.P) * Flt (Outs.Q));\n \n-      --  Now do *some* sanity checks.\n+      --  Now do *some* sanity checks\n \n       if Outs.Q < 31\n         or else Outs.X1 not in 2 .. Outs.P - 1"}, {"sha": "275e89825fd43cfde6168ba8c28d0747c0ea495b", "filename": "gcc/ada/a-nudira.ads", "status": "modified", "additions": 14, "deletions": 15, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-nudira.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-nudira.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-nudira.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -35,14 +35,13 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  Note: the implementation used in this package was contributed by\n---  Robert Eachus. It is based on the work of L. Blum, M. Blum, and\n---  M. Shub, SIAM Journal of Computing, Vol 15. No 2, May 1986. The\n---  particular choices for P and Q chosen here guarantee a period of\n---  562,085,314,430,582 (about 2**49), and the generated sequence has\n---  excellent randomness properties. For further details, see the\n---  paper \"Fast Generation of Trustworthy Random Numbers\", by Robert\n---  Eachus, which describes both the algorithm and the efficient\n+--  Note: the implementation used in this package was contributed by Robert\n+--  Eachus. It is based on the work of L. Blum, M. Blum, and M. Shub, SIAM\n+--  Journal of Computing, Vol 15. No 2, May 1986. The particular choices for P\n+--  and Q chosen here guarantee a period of 562,085,314,430,582 (about 2**49),\n+--  and the generated sequence has excellent randomness properties. For further\n+--  details, see the paper \"Fast Generation of Trustworthy Random Numbers\", by\n+--  Robert Eachus, which describes both the algorithm and the efficient\n --  implementation approach used here.\n \n with Interfaces;\n@@ -52,16 +51,16 @@ generic\n \n package Ada.Numerics.Discrete_Random is\n \n-   --  The algorithm used here is reliable from a required statistical point\n-   --  of view only up to 48 bits. We try to behave reasonably in the case\n-   --  of larger types, but we can't guarantee the required properties.\n-   --  So generate a warning for these (slightly) dubious cases.\n+   --  The algorithm used here is reliable from a required statistical point of\n+   --  view only up to 48 bits. We try to behave reasonably in the case of\n+   --  larger types, but we can't guarantee the required properties. So\n+   --  generate a warning for these (slightly) dubious cases.\n \n    pragma Compile_Time_Warning\n      (Result_Subtype'Size > 48,\n       \"statistical properties not guaranteed for size '> 48\");\n \n-   --  Basic facilities.\n+   --  Basic facilities\n \n    type Generator is limited private;\n \n@@ -70,7 +69,7 @@ package Ada.Numerics.Discrete_Random is\n    procedure Reset (Gen : Generator);\n    procedure Reset (Gen : Generator; Initiator : Integer);\n \n-   --  Advanced facilities.\n+   --  Advanced facilities\n \n    type State is private;\n "}, {"sha": "5f43c97df6ba46453ad96a2662c7fce0aaee6e8e", "filename": "gcc/ada/a-nuflra.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-nuflra.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-nuflra.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-nuflra.adb?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -164,7 +164,7 @@ package body Ada.Numerics.Float_Random is\n       X1 := 2 + Int (Initiator) mod (K1 - 3);\n       X2 := 2 + Int (Initiator) mod (K2 - 3);\n \n-      --  Eliminate effects of small Initiators.\n+      --  Eliminate effects of small initiators\n \n       for J in 1 .. 5 loop\n          X1 := Square_Mod_N (X1, K1);\n@@ -299,7 +299,7 @@ package body Ada.Numerics.Float_Random is\n       Outs.X   := Euclid (Outs.P, Outs.Q);\n       Outs.Scl := 1.0 / (Flt (Outs.P) * Flt (Outs.Q));\n \n-      --  Now do *some* sanity checks.\n+      --  Now do *some* sanity checks\n \n       if Outs.Q < 31 or else Outs.P < 31\n         or else Outs.X1 not in 2 .. Outs.P - 1"}, {"sha": "67faa0f99823562ab3931a5fb57c4dd0b5bf9c70", "filename": "gcc/ada/a-numaux-darwin.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-numaux-darwin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-numaux-darwin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-numaux-darwin.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -41,7 +41,7 @@\n --  routines that take 80-bit arguments).\n \n package Ada.Numerics.Aux is\n-pragma Pure (Aux);\n+   pragma Pure;\n \n    pragma Linker_Options (\"-lm\");\n "}, {"sha": "8e94fa0176ded46fffb11058b9802f9ddc4f0b2d", "filename": "gcc/ada/a-numaux-libc-x86.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-numaux-libc-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-numaux-libc-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-numaux-libc-x86.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -44,7 +44,7 @@\n --  double (see file a-numaux.ads).\n \n package Ada.Numerics.Aux is\n-pragma Pure (Aux);\n+   pragma Pure;\n \n    pragma Linker_Options (\"-lm\");\n "}, {"sha": "db71c04644468d24de853b8b2c4f6e72bded949d", "filename": "gcc/ada/a-numaux-vxworks.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-numaux-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-numaux-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-numaux-vxworks.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -44,7 +44,7 @@\n --  long double (see file 4onumaux.ads).\n \n package Ada.Numerics.Aux is\n-pragma Pure (Aux);\n+   pragma Pure;\n \n    --  This version omits the pragma linker_options (\"-lm\") since there is\n    --  no libm.a library for VxWorks."}, {"sha": "97cf691b1278e10fa4683ac4b314227f1cf448ee", "filename": "gcc/ada/a-numaux-x86.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-numaux-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-numaux-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-numaux-x86.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -42,7 +42,7 @@\n --  routines directly.\n \n package Ada.Numerics.Aux is\n-pragma Pure (Aux);\n+   pragma Pure;\n \n    type Double is new Long_Long_Float;\n "}, {"sha": "fb09ad1009b1d2b68b7d2f887f89591585eb456c", "filename": "gcc/ada/a-numaux.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-numaux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-numaux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-numaux.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -46,7 +46,7 @@\n --  routines that take 80-bit arguments).\n \n package Ada.Numerics.Aux is\n-pragma Pure (Aux);\n+   pragma Pure;\n \n    pragma Linker_Options (\"-lm\");\n "}, {"sha": "a0513d0196977fe9941e4f4d1eaf564f3e80279c", "filename": "gcc/ada/a-numeri.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-numeri.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-numeri.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-numeri.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -14,7 +14,7 @@\n ------------------------------------------------------------------------------\n \n package Ada.Numerics is\n-pragma Pure (Numerics);\n+   pragma Pure;\n \n    Argument_Error : exception;\n "}, {"sha": "381ac5b0b6d5216757dfaab890d2d07143ad9d18", "filename": "gcc/ada/a-rbtgso.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-rbtgso.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-rbtgso.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-rbtgso.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,7 +37,7 @@ generic\n    with procedure Free (X : in out Node_Access);\n \n package Ada.Containers.Red_Black_Trees.Generic_Set_Operations is\n-pragma Pure (Generic_Set_Operations);\n+   pragma Pure;\n \n    procedure Union (Target : in out Tree_Type; Source : Tree_Type);\n "}, {"sha": "b15a6e155bd82d968245802dabedffa6cb64c6db", "filename": "gcc/ada/a-reatim.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-reatim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-reatim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-reatim.adb?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -198,7 +198,7 @@ package body Ada.Real_Time is\n          T_Val := abs (T);\n       end if;\n \n-      --  Extract the integer part of T, truncating towards zero.\n+      --  Extract the integer part of T, truncating towards zero\n \n       if T_Val < 0.5 then\n          SC := 0;"}, {"sha": "660f557a266614ed223ecfcd3dbbf3f15e4e6d90", "filename": "gcc/ada/a-stmaco.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stmaco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stmaco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stmaco.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -38,9 +38,9 @@\n with Ada.Characters.Latin_1;\n \n package Ada.Strings.Maps.Constants is\n-pragma Preelaborate (Constants);\n-pragma Pure_05 (Constants);\n---  In accordance with Ada 2005 AI-362\n+   pragma Preelaborate;\n+   pragma Pure_05;\n+   --  In accordance with Ada 2005 AI-362\n \n    Control_Set           : constant Character_Set;\n    Graphic_Set           : constant Character_Set;"}, {"sha": "23e57c53abdccb639ae739395c518310420e8ed9", "filename": "gcc/ada/a-storio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-storio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-storio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-storio.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -20,7 +20,7 @@ generic\n    type Element_Type is private;\n \n package Ada.Storage_IO is\n-pragma Preelaborate (Storage_IO);\n+   pragma Preelaborate;\n \n    Buffer_Size : constant System.Storage_Elements.Storage_Count :=\n                    System.Storage_Elements.Storage_Count"}, {"sha": "74bb8f697a1143eda221ce28f948811f23e24050", "filename": "gcc/ada/a-strbou.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-strbou.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-strbou.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strbou.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -39,7 +39,7 @@ with Ada.Strings.Maps;\n with Ada.Strings.Superbounded;\n \n package Ada.Strings.Bounded is\n-pragma Preelaborate (Bounded);\n+   pragma Preelaborate;\n \n    generic\n       Max : Positive;"}, {"sha": "0b68692857af0801a8bb3a6c9a04075c4aea0935", "filename": "gcc/ada/a-stream.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stream.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stream.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stream.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -36,7 +36,7 @@\n ------------------------------------------------------------------------------\n \n package Ada.Streams is\n-pragma Pure (Streams);\n+   pragma Pure;\n \n    type Root_Stream_Type is abstract tagged limited private;\n "}, {"sha": "04087925f7d9ded71f21a6857e861272fcfe2776", "filename": "gcc/ada/a-strfix.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-strfix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-strfix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strfix.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -16,7 +16,7 @@\n with Ada.Strings.Maps;\n \n package Ada.Strings.Fixed is\n-pragma Preelaborate (Fixed);\n+   pragma Preelaborate;\n \n    --------------------------------------------------------------\n    -- Copy Procedure for Strings of Possibly Different Lengths --"}, {"sha": "a599c2be8c4d71b0b0ef53b271e32dae950605ae", "filename": "gcc/ada/a-string.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-string.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-string.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-string.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -14,7 +14,7 @@\n ------------------------------------------------------------------------------\n \n package Ada.Strings is\n-pragma Pure (Strings);\n+   pragma Pure;\n \n    Space           : constant Character           := ' ';\n    Wide_Space      : constant Wide_Character      := ' ';"}, {"sha": "3331a2f1666526847d9f5d70be05e9198dc244d4", "filename": "gcc/ada/a-strmap.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-strmap.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-strmap.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strmap.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -38,9 +38,9 @@\n with Ada.Characters.Latin_1;\n \n package Ada.Strings.Maps is\n-pragma Preelaborate (Maps);\n-pragma Pure_05 (Maps);\n---  In accordance with Ada 2005 AI-362\n+   pragma Preelaborate;\n+   pragma Pure_05;\n+   --  In accordance with Ada 2005 AI-362\n \n    --------------------------------\n    -- Character Set Declarations --"}, {"sha": "f9d81c74c70bcadb136ffba68d73c6dfb1739d5f", "filename": "gcc/ada/a-strsea.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-strsea.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-strsea.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strsea.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -41,7 +41,7 @@\n with Ada.Strings.Maps;\n \n private package Ada.Strings.Search is\n-pragma Preelaborate (Search);\n+   pragma Preelaborate;\n \n    function Index\n      (Source  : String;"}, {"sha": "cf27f4a74953d47c73ca7a586a44affe45c907f1", "filename": "gcc/ada/a-strsup.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-strsup.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-strsup.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strsup.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -41,7 +41,7 @@\n with Ada.Strings.Maps;\n \n package Ada.Strings.Superbounded is\n-pragma Preelaborate (Superbounded);\n+   pragma Preelaborate;\n \n    type Super_String (Max_Length : Positive) is record\n       Current_Length : Natural := 0;"}, {"sha": "0869995a1679e8966b0fa98748fcafd5e5cfb4bd", "filename": "gcc/ada/a-strunb.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-strunb.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-strunb.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strunb.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -39,7 +39,7 @@ with Ada.Strings.Maps;\n with Ada.Finalization;\n \n package Ada.Strings.Unbounded is\n-pragma Preelaborate (Unbounded);\n+   pragma Preelaborate;\n \n    type Unbounded_String is private;\n "}, {"sha": "c29e6db3c3f24220a13047394c2f3aba7cea97ad", "filename": "gcc/ada/a-stunau.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stunau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stunau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stunau.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,7 +37,7 @@\n --  utilities (such as GNAT.SPITBOL.Patterns).\n \n package Ada.Strings.Unbounded.Aux is\n-pragma Preelaborate (Aux);\n+   pragma Preelaborate;\n \n    procedure Get_String\n      (U : Unbounded_String;"}, {"sha": "4c056650fc9c0910436638c2c142a2af82078fc9", "filename": "gcc/ada/a-stwibo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stwibo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stwibo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwibo.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -39,7 +39,7 @@ with Ada.Strings.Wide_Maps;\n with Ada.Strings.Wide_Superbounded;\n \n package Ada.Strings.Wide_Bounded is\n-pragma Preelaborate (Wide_Bounded);\n+   pragma Preelaborate;\n \n    generic\n       Max : Positive;"}, {"sha": "be2e03803fbfeed9dc37980c8d56a1602e4b8a0b", "filename": "gcc/ada/a-stwifi.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stwifi.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stwifi.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwifi.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -16,7 +16,7 @@\n with Ada.Strings.Wide_Maps;\n \n package Ada.Strings.Wide_Fixed is\n-pragma Preelaborate (Wide_Fixed);\n+   pragma Preelaborate;\n \n    -------------------------------------------------------------------\n    -- Copy Procedure for Wide_Strings of Possibly Different Lengths --"}, {"sha": "001f5da201e2a300487e1cd50d0c5682a0dd5844", "filename": "gcc/ada/a-stwima.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stwima.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stwima.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwima.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -38,7 +38,7 @@\n with Ada.Finalization;\n \n package Ada.Strings.Wide_Maps is\n-   pragma Preelaborate (Wide_Maps);\n+   pragma Preelaborate;\n \n    -------------------------------------\n    -- Wide Character Set Declarations --"}, {"sha": "35241fc25e5018aee69d24e88f627cc9ca315e06", "filename": "gcc/ada/a-stwise.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stwise.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stwise.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwise.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -41,7 +41,7 @@\n with Ada.Strings.Wide_Maps;\n \n private package Ada.Strings.Wide_Search is\n-pragma Preelaborate (Wide_Search);\n+   pragma Preelaborate;\n \n    function Index\n      (Source  : Wide_String;"}, {"sha": "721e2a80481e11140111c42adeb2e3b755ec8ebb", "filename": "gcc/ada/a-stwisu.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stwisu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stwisu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwisu.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -42,7 +42,7 @@\n with Ada.Strings.Wide_Maps;\n \n package Ada.Strings.Wide_Superbounded is\n-pragma Preelaborate (Wide_Superbounded);\n+   pragma Preelaborate;\n \n    Wide_NUL : constant Wide_Character := Wide_Character'Val (0);\n "}, {"sha": "e2cb3644566b76b35d2e047e60ca43f82cabd6e2", "filename": "gcc/ada/a-stwiun.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stwiun.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stwiun.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stwiun.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -39,7 +39,8 @@ with Ada.Strings.Wide_Maps;\n with Ada.Finalization;\n \n package Ada.Strings.Wide_Unbounded is\n-pragma Preelaborate (Wide_Unbounded);\n+   pragma Preelaborate;\n+\n    type Unbounded_Wide_String is private;\n \n    Null_Unbounded_Wide_String : constant Unbounded_Wide_String;"}, {"sha": "e4ad260871be7d5cc0c84ea1f514bdfa78e92053", "filename": "gcc/ada/a-stzbou.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stzbou.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stzbou.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stzbou.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -39,7 +39,7 @@ with Ada.Strings.Wide_Wide_Maps;\n with Ada.Strings.Wide_Wide_Superbounded;\n \n package Ada.Strings.Wide_Wide_Bounded is\n-pragma Preelaborate (Wide_Wide_Bounded);\n+   pragma Preelaborate;\n \n    generic\n       Max : Positive;"}, {"sha": "1670b381ce4ed926fc7b6c6209013de578d2244f", "filename": "gcc/ada/a-stzfix.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stzfix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stzfix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stzfix.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -16,7 +16,7 @@\n with Ada.Strings.Wide_Wide_Maps;\n \n package Ada.Strings.Wide_Wide_Fixed is\n-pragma Preelaborate (Wide_Wide_Fixed);\n+   pragma Preelaborate;\n \n    ------------------------------------------------------------------------\n    -- Copy Procedure for Wide_Wide_Strings of Possibly Different Lengths --"}, {"sha": "f71e3dde106aaf631c0d1bce3f72f53ad723c92c", "filename": "gcc/ada/a-stzmap.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stzmap.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stzmap.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stzmap.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -38,7 +38,7 @@\n with Ada.Finalization;\n \n package Ada.Strings.Wide_Wide_Maps is\n-   pragma Preelaborate (Wide_Wide_Maps);\n+   pragma Preelaborate;\n \n    ------------------------------------------\n    -- Wide_Wide_Character Set Declarations --"}, {"sha": "eef55151bfd1e4262d952cb69c036fa5af9726ca", "filename": "gcc/ada/a-stzsea.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stzsea.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stzsea.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stzsea.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -42,7 +42,7 @@\n with Ada.Strings.Wide_Wide_Maps;\n \n private package Ada.Strings.Wide_Wide_Search is\n-pragma Preelaborate (Wide_Wide_Search);\n+   pragma Preelaborate;\n \n    function Index\n      (Source  : Wide_Wide_String;"}, {"sha": "33b9ecb03f7e76e767c5547bef25b3de4836e124", "filename": "gcc/ada/a-stzsup.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stzsup.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stzsup.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stzsup.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -42,7 +42,7 @@\n with Ada.Strings.Wide_Wide_Maps;\n \n package Ada.Strings.Wide_Wide_Superbounded is\n-pragma Preelaborate (Wide_Wide_Superbounded);\n+   pragma Preelaborate;\n \n    Wide_Wide_NUL : constant Wide_Wide_Character :=\n                      Wide_Wide_Character'Val (0);"}, {"sha": "b069e934dd2b3ef83a3a3d1381d86b530b0eb314", "filename": "gcc/ada/a-stzunb.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stzunb.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-stzunb.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stzunb.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -39,7 +39,8 @@ with Ada.Strings.Wide_Wide_Maps;\n with Ada.Finalization;\n \n package Ada.Strings.Wide_Wide_Unbounded is\n-pragma Preelaborate (Wide_Wide_Unbounded);\n+   pragma Preelaborate;\n+\n    type Unbounded_Wide_Wide_String is private;\n \n    Null_Unbounded_Wide_Wide_String : constant Unbounded_Wide_Wide_String;"}, {"sha": "269b3f8d5b4467c51249f1078798124ab3534c8a", "filename": "gcc/ada/a-swmwco.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-swmwco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-swmwco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-swmwco.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -38,7 +38,7 @@\n with Ada.Characters.Wide_Latin_1;\n \n package Ada.Strings.Wide_Maps.Wide_Constants is\n-pragma Preelaborate (Wide_Constants);\n+   pragma Preelaborate;\n \n    Control_Set           : constant Wide_Maps.Wide_Character_Set;\n    Graphic_Set           : constant Wide_Maps.Wide_Character_Set;"}, {"sha": "ae2bed6b66cc79a65e42d0e4fc26a2e89e8087d9", "filename": "gcc/ada/a-swunau.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-swunau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-swunau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-swunau.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,7 +37,7 @@\n --  utilities.\n \n package Ada.Strings.Wide_Unbounded.Aux is\n-pragma Preelaborate (Aux);\n+   pragma Preelaborate;\n \n    procedure Get_Wide_String\n      (U : Unbounded_Wide_String;"}, {"sha": "fc5373d8375b6f48158584f43a859fc48a72e681", "filename": "gcc/ada/a-szunau.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-szunau.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-szunau.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-szunau.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,7 +37,7 @@\n --  other layered utilities.\n \n package Ada.Strings.Wide_Wide_Unbounded.Aux is\n-pragma Preelaborate (Aux);\n+   pragma Preelaborate;\n \n    procedure Get_Wide_Wide_String\n      (U : Unbounded_Wide_Wide_String;"}, {"sha": "dbb9a1ad5193447ef7b5ce76a422183a549d9200", "filename": "gcc/ada/a-textio.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-textio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-textio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-textio.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -47,7 +47,7 @@ with System;\n with System.File_Control_Block;\n \n package Ada.Text_IO is\n-pragma Elaborate_Body (Text_IO);\n+   pragma Elaborate_Body;\n \n    type File_Type is limited private;\n    type File_Mode is (In_File, Out_File, Append_File);"}, {"sha": "371c1c16599ba5c0c0fd73a5178cfa29221bbbfc", "filename": "gcc/ada/a-widcha.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-widcha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-widcha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-widcha.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -17,5 +17,5 @@\n --  available in Ada 95 mode, since it deals only with wide characters.\n \n package Ada.Wide_Characters is\n-pragma Pure (Wide_Characters);\n+   pragma Pure;\n end Ada.Wide_Characters;"}, {"sha": "0802bfc62f4fbafc75228eb2dd1faf7af9366ff9", "filename": "gcc/ada/a-zchara.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-zchara.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fa-zchara.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-zchara.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -14,5 +14,5 @@\n ------------------------------------------------------------------------------\n \n package Ada.Wide_Wide_Characters is\n-pragma Pure (Wide_Wide_Characters);\n+   pragma Pure;\n end Ada.Wide_Wide_Characters;"}, {"sha": "2e9f35c8cd2eba2292d2b2c17245f09741dc07c9", "filename": "gcc/ada/ada.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fada.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fada.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fada.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -14,6 +14,6 @@\n ------------------------------------------------------------------------------\n \n package Ada is\n-pragma Pure (Ada);\n+   pragma Pure;\n \n end Ada;"}, {"sha": "5b612b315c38a7bd9e81198e1e23362c0d948ae3", "filename": "gcc/ada/csets.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fcsets.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fcsets.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcsets.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,7 +32,7 @@\n ------------------------------------------------------------------------------\n \n package Csets is\n-pragma Elaborate_Body (Csets);\n+   pragma Elaborate_Body;\n \n    --  This package contains character tables for the various character\n    --  sets that are supported for source representation. Character and"}, {"sha": "48d71de72eab6d3cfcf2dd97462ca7c24db69bcc", "filename": "gcc/ada/debug.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fdebug.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fdebug.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -31,13 +31,13 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-package Debug is\n-pragma Preelaborate (Debug);\n-\n --  This package contains global flags used to control the inclusion\n --  of debugging code in various phases of the compiler. Some of these\n --  flags are also used by the binder and gnatmake.\n \n+package Debug is\n+   pragma Preelaborate;\n+\n    -------------------------\n    -- Dynamic Debug Flags --\n    -------------------------"}, {"sha": "0d96585308e7d65bc880eb466ae437ad327484c1", "filename": "gcc/ada/dec.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fdec.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fdec.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdec.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -36,5 +36,5 @@\n --  the bind. It is also a convenient parent for all DEC IO child packages.\n \n package DEC is\n-pragma Pure (DEC);\n+   pragma Pure;\n end DEC;"}, {"sha": "7fff4f303b121567e8a5fca5ae132390d0b3d4bb", "filename": "gcc/ada/g-curexc.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fg-curexc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fg-curexc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-curexc.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---         Copyright (C) 1996-2004 Ada Core Technologies, Inc.              --\n+--         Copyright (C) 1996-2005 Ada Core Technologies, Inc.              --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -44,7 +44,7 @@\n --  from an exception handler.\n \n package GNAT.Current_Exception is\n-pragma Pure (Current_Exception);\n+   pragma Pure;\n \n    -----------------\n    -- Subprograms --"}, {"sha": "6ad0673306ef01885237f84050ecf27ee6b66e35", "filename": "gcc/ada/g-except.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fg-except.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fg-except.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-except.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---           Copyright (C) 2000-2002 Ada Core Technologies, Inc.            --\n+--           Copyright (C) 2000-2005 Ada Core Technologies, Inc.            --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,7 +43,7 @@\n --  package allows for raising the standard predefined exceptions at least.\n \n package GNAT.Exceptions is\n-pragma Pure (Exceptions);\n+   pragma Pure;\n \n    type Exception_Type is limited null record;\n    --  Type used to specify which exception to raise."}, {"sha": "132d32f945c95712a779e2b8aaf0252e8c5e8443", "filename": "gcc/ada/g-regpat.ads", "status": "modified", "additions": 17, "deletions": 19, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fg-regpat.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fg-regpat.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-regpat.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                                                                          --\n --               Copyright (C) 1986 by University of Toronto.               --\n---           Copyright (C) 1996-2005 Ada Core Technologies, Inc.            --\n+--                     Copyright (C) 1996-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -68,7 +68,7 @@\n --       extensions that provide full (type 0) computational capabilities.\n \n package GNAT.Regpat is\n-pragma Preelaborate (Regpat);\n+   pragma Preelaborate;\n \n    --  The grammar is the following:\n \n@@ -219,7 +219,7 @@ pragma Preelaborate (Regpat);\n    --  Several versions of the Match subprogram are provided, with different\n    --  parameters and return results.\n \n-   --  See the description under each of these subprograms.\n+   --  See the description under each of these subprograms\n \n    --  Here is a short example showing how to get the substring matched by\n    --  the first parenthesis pair.\n@@ -576,7 +576,7 @@ pragma Preelaborate (Regpat);\n       Data       : String;\n       Data_First : Integer  := -1;\n       Data_Last  : Positive := Positive'Last) return Boolean;\n-   --  Return True if Data matches using the given pattern matcher.\n+   --  Return True if Data matches using the given pattern matcher\n \n    pragma Inline (Match);\n    --  All except the last one below\n@@ -590,7 +590,7 @@ pragma Preelaborate (Regpat);\n    --  Match Data using the given pattern matcher and store result in Matches.\n    --  The expression matches if Matches (0) /= No_Match.\n    --\n-   --  At most Matches'Length parenthesis are returned.\n+   --  At most Matches'Length parenthesis are returned\n \n    -----------\n    -- Debug --\n@@ -615,26 +615,24 @@ private\n \n    Program_First : constant := 1;\n \n-   --  The \"internal use only\" fields in regexp are present to pass\n-   --  info from compile to execute that permits the execute phase\n-   --  to run lots faster on simple cases.  They are:\n+   --  The \"internal use only\" fields in regexp are present to pass info from\n+   --  compile to execute that permits the execute phase to run lots faster on\n+   --  simple cases. They are:\n \n    --     First              character that must begin a match or ASCII.Nul\n    --     Anchored           true iff match must start at beginning of line\n    --     Must_Have          pointer to string that match must include or null\n    --     Must_Have_Length   length of Must_Have string\n \n-   --  First and Anchored permit very fast decisions on suitable\n-   --  starting points for a match, cutting down the work a lot.\n-   --  Must_Have permits fast rejection of lines that cannot possibly\n-   --  match.\n-\n-   --  The Must_Have tests are costly enough that Optimize\n-   --  supplies a Must_Have only if the r.e. contains something potentially\n-   --  expensive (at present, the only such thing detected is * or +\n-   --  at the start of the r.e., which can involve a lot of backup).\n-   --  The length is supplied because the test in Execute needs it\n-   --  and Optimize is computing it anyway.\n+   --  First and Anchored permit very fast decisions on suitable starting\n+   --  points for a match, cutting down the work a lot. Must_Have permits fast\n+   --  rejection of lines that cannot possibly match.\n+\n+   --  The Must_Have tests are costly enough that Optimize supplies a Must_Have\n+   --  only if the r.e. contains something potentially expensive (at present,\n+   --  the only such thing detected is * or at the start of the r.e., which can\n+   --  involve a lot of backup). The length is supplied because the test in\n+   --  Execute needs it and Optimize is computing it anyway.\n \n    --  The initialization is meant to fail-safe in case the user of this\n    --  package tries to use an uninitialized matcher. This takes advantage"}, {"sha": "f3482d47e3af75aa5e2cf1396d72fbfb21292915", "filename": "gcc/ada/g-speche.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fg-speche.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fg-speche.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-speche.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -36,7 +36,7 @@\n --  This package provides a utility routine for checking for bad spellings\n \n package GNAT.Spelling_Checker is\n-pragma Pure (Spelling_Checker);\n+   pragma Pure;\n \n    function Is_Bad_Spelling_Of\n      (Found  : String;"}, {"sha": "823ac030e20b07b58952cb9f1eee91e77aa3ed2a", "filename": "gcc/ada/g-spitbo.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fg-spitbo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fg-spitbo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-spitbo.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---           Copyright (C) 1997-2005 Ada Core Technologies, Inc.            --\n+--                     Copyright (C) 1997-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -44,7 +44,7 @@ with Ada.Strings.Unbounded; use Ada.Strings.Unbounded;\n with Interfaces;            use Interfaces;\n \n package GNAT.Spitbol is\n-pragma Preelaborate (Spitbol);\n+   pragma Preelaborate;\n \n    --  The Spitbol package relies heavily on the Unbounded_String package,\n    --  using the synonym VString for variable length string. The following\n@@ -231,7 +231,7 @@ pragma Preelaborate (Spitbol);\n       --  Any non-limited type can be used as the value type in the table\n \n       Null_Value : Value_Type;\n-      --  Value used to represent a value that is not present in the table.\n+      --  Value used to represent a value that is not present in the table\n \n       with function Img (A : Value_Type) return String;\n       --  Used to provide image of value in Dump procedure"}, {"sha": "819ff281bd40c35f664d5a77ddadd91fd75c1bdd", "filename": "gcc/ada/g-table.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fg-table.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fg-table.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-table.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                     Copyright (C) 1998-2005 AdaCore                      --\n+--                     Copyright (C) 1998-2005, AdaCore                     --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -56,7 +56,7 @@ generic\n    Table_Increment : Natural;\n \n package GNAT.Table is\n-pragma Elaborate_Body (Table);\n+   pragma Elaborate_Body;\n \n    --  Table_Component_Type and Table_Index_Type specify the type of the\n    --  array, Table_Low_Bound is the lower bound. Index_type must be an"}, {"sha": "29fb36e3178f7c498c456b58ebc8d7b828b2d5da", "filename": "gcc/ada/g-tasloc.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fg-tasloc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fg-tasloc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-tasloc.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 1998-2002 Ada Core Technologies, Inc.           --\n+--            Copyright (C) 1998-2005 Ada Core Technologies, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -42,7 +42,7 @@\n --  they have no effect (they do NOT cause the tasking runtime to be loaded).\n \n package GNAT.Task_Lock is\n-pragma Elaborate_Body (Task_Lock);\n+   pragma Elaborate_Body;\n \n    procedure Lock;\n    pragma Inline (Lock);"}, {"sha": "8409732c0327e042afb5973bd26157c97c333942", "filename": "gcc/ada/g-trasym.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fg-trasym.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fg-trasym.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-trasym.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -62,7 +62,7 @@\n with Ada.Exceptions; use Ada.Exceptions;\n \n package GNAT.Traceback.Symbolic is\n-pragma Elaborate_Body (Traceback.Symbolic);\n+   pragma Elaborate_Body;\n \n    ------------------------\n    -- Symbolic_Traceback --"}, {"sha": "11eec1d5715e3be34e39c59d4c2c1396252c70a4", "filename": "gcc/ada/get_targ.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fget_targ.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fget_targ.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fget_targ.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -40,7 +40,7 @@\n with Types; use Types;\n \n package Get_Targ is\n-pragma Preelaborate (Get_Targ);\n+   pragma Preelaborate;\n \n    function Get_Bits_Per_Unit return Pos;\n    pragma Import (C, Get_Bits_Per_Unit, \"get_target_bits_per_unit\");"}, {"sha": "6d7da446974d40bcf9e22f485f94a8902362ffea", "filename": "gcc/ada/gnat-style.texi", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fgnat-style.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fgnat-style.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat-style.texi?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -7,7 +7,7 @@\n @c                                                                            o\n @c                      G N A T   C O D I N G   S T Y L E                     o\n @c                                                                            o\n-@c          Copyright (C) 1992-2004 Ada Core Technologies, Inc.               o\n+@c          Copyright (C) 1992-2005 Ada Core Technologies, Inc.               o\n @c                                                                            o\n @c  GNAT is free software;  you can  redistribute it  and/or modify it under  o\n @c  terms of the  GNU General Public License as published  by the Free Soft-  o\n@@ -52,7 +52,7 @@\n @page\n @vskip 0pt plus 1filll\n \n-Copyright @copyright{} 1995-2003, Free Software Foundation\n+Copyright @copyright{} 1995-2005, Free Software Foundation\n \n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.1\n@@ -814,6 +814,20 @@ unique, to prevent name clashes when the packages are @code{use}d.\n @item\n After the file header comment, the context clause and unit specification\n should be the first thing in a @syntax{program_unit}.\n+\n+@item\n+Preelaborate, Pure and Elaborate_Body pragmas should be added right after the\n+package name, indented an extra level and using the parameterless form:\n+\n+@smallexample @c adanocomment\n+@group\n+      package Preelaborate_Package is\n+         pragma Preelaborate;\n+         ...\n+      end Preelaborate_Package;\n+@end group\n+@end smallexample\n+\n @end itemize\n \n @c  -------------------------------------------------------------------------"}, {"sha": "faf1bff22e90eed1d2cac48824dc2590c7b56342", "filename": "gcc/ada/gnat.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fgnat.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fgnat.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,6 +34,6 @@\n --  This is the parent package for a library of useful units provided with GNAT\n \n package GNAT is\n-pragma Pure (GNAT);\n+   pragma Pure;\n \n end GNAT;"}, {"sha": "e958052d2fce8cd13e7a06df24f21df848ccd135", "filename": "gcc/ada/i-c.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fi-c.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fi-c.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-c.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -16,7 +16,7 @@\n with System.Parameters;\n \n package Interfaces.C is\n-pragma Pure (C);\n+   pragma Pure;\n \n    --  Declaration's based on C's <limits.h>\n "}, {"sha": "e473f57e10ed900178f2b3341d7b28c4b416ff92", "filename": "gcc/ada/i-cpoint.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fi-cpoint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fi-cpoint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cpoint.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1993-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1993-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -42,7 +42,7 @@ generic\n    Default_Terminator : Element;\n \n package Interfaces.C.Pointers is\n-pragma Preelaborate (Pointers);\n+   pragma Preelaborate;\n \n    type Pointer is access all Element;\n "}, {"sha": "e534f651f3c0126eaa5e99fb43bdbee57acb6ef9", "filename": "gcc/ada/i-cpp.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fi-cpp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fi-cpp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cpp.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,9 +34,10 @@\n --  Missing package comment ???\n \n with Ada.Tags;\n+\n package Interfaces.CPP is\n-pragma Elaborate_Body;\n---  We have a dummy body to deal with bootstrap path issues\n+   pragma Elaborate_Body;\n+   --  We have a dummy body to deal with bootstrap path issues\n \n    subtype Vtable_Ptr is Ada.Tags.Tag;\n "}, {"sha": "d959bb5082e0c2075fba8ef9bb20f49ac857300d", "filename": "gcc/ada/i-cstrin.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fi-cstrin.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fi-cstrin.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cstrin.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1993-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1993-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -36,7 +36,7 @@\n ------------------------------------------------------------------------------\n \n package Interfaces.C.Strings is\n-pragma Preelaborate (Strings);\n+   pragma Preelaborate;\n \n    type char_array_access is access all char_array;\n "}, {"sha": "78f4f71256d6d6788c8bc680fc31ceee4149cdf2", "filename": "gcc/ada/i-fortra.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fi-fortra.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fi-fortra.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-fortra.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -17,7 +17,7 @@ with Ada.Numerics.Generic_Complex_Types;\n pragma Elaborate_All (Ada.Numerics.Generic_Complex_Types);\n \n package Interfaces.Fortran is\n-pragma Pure (Fortran);\n+   pragma Pure;\n \n    type Fortran_Integer  is new Integer;\n    type Real             is new Float;"}, {"sha": "21cbf84ccb5efa6127dee09aecdd37f182a8bdcd", "filename": "gcc/ada/i-os2err.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fi-os2err.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fi-os2err.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-os2err.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---        Copyright (C) 1993,1994,1995 Free Software Foundation, Inc.       --\n+--           Copyright (C) 1993-2005 Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,7 +34,7 @@\n --  Definition of values for OS/2 error returns\n \n package Interfaces.OS2Lib.Errors is\n-pragma Preelaborate (Errors);\n+   pragma Preelaborate;\n \n    NO_ERROR                        : constant :=     0;\n    ERROR_INVALID_FUNCTION          : constant :=     1;"}, {"sha": "45fa1aee6a63ff2f53fbf42b7114e4c324752fea", "filename": "gcc/ada/i-os2lib.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fi-os2lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fi-os2lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-os2lib.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1993-1997 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1993-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -49,7 +49,7 @@ with Interfaces.C.Strings;\n with System;\n \n package Interfaces.OS2Lib is\n-pragma Preelaborate (OS2Lib);\n+   pragma Preelaborate;\n \n    package IC  renames Interfaces.C;\n    package ICS renames Interfaces.C.Strings;\n@@ -76,7 +76,7 @@ pragma Preelaborate (OS2Lib);\n    type ULONG   is new IC.unsigned_long;\n    type PULONG  is access all ULONG;\n \n-   --  Coprocessor stack register element.\n+   --  Coprocessor stack register element\n \n    type FPREG is record\n       losig             : ULONG;        --  Low 32-bits of the mantissa"}, {"sha": "844e2f0b7dd092a295e024c2a8706e057f75542f", "filename": "gcc/ada/i-os2syn.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fi-os2syn.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fi-os2syn.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-os2syn.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  S p e c                                 --\n --                                                                          --\n---          Copyright (C) 1993-1998 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1993-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,7 +34,7 @@\n with Interfaces.OS2Lib.Threads;\n \n package Interfaces.OS2Lib.Synchronization is\n-pragma Preelaborate (Synchronization);\n+   pragma Preelaborate;\n \n    package IC  renames Interfaces.C;\n    package IOT renames Interfaces.OS2Lib.Threads;"}, {"sha": "1fd90496c3c2a6991ab640a46252a9b10ee2de6d", "filename": "gcc/ada/i-os2thr.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fi-os2thr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fi-os2thr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-os2thr.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n with Interfaces.C;\n \n package Interfaces.OS2Lib.Threads is\n-pragma Preelaborate (Threads);\n+   pragma Preelaborate;\n \n    package IC renames Interfaces.C;\n "}, {"sha": "360c6fce710834a2219d0b2cf4b4fa5010dbb28c", "filename": "gcc/ada/i-vxwork-x86.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fi-vxwork-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fi-vxwork-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-vxwork-x86.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -50,7 +50,7 @@\n with System.VxWorks;\n \n package Interfaces.VxWorks is\n-   pragma Preelaborate (VxWorks);\n+   pragma Preelaborate;\n \n    ------------------------------------------------------------------------\n    --  Here is a complete example that shows how to handle the Interrupt 0x33"}, {"sha": "4818a808f316e233c9f54ced7c499a71b01910a4", "filename": "gcc/ada/i-vxwork.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fi-vxwork.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fi-vxwork.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-vxwork.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -48,7 +48,7 @@\n with System.VxWorks;\n \n package Interfaces.VxWorks is\n-   pragma Preelaborate (VxWorks);\n+   pragma Preelaborate;\n \n    ------------------------------------------------------------------------\n    --  Here is a complete example that shows how to handle the Interrupt 0x14"}, {"sha": "1705e1e19dfbb3e18b0afa2a25e446c0d7aa8667", "filename": "gcc/ada/interfac-vms.ads", "status": "modified", "additions": 23, "deletions": 42, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Finterfac-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Finterfac-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finterfac-vms.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2002-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2002-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -43,7 +43,7 @@\n --  floating-point formats are available.\n \n package Interfaces is\n-pragma Pure (Interfaces);\n+   pragma Pure;\n \n    type Integer_8  is range -2 **  7 .. 2 **  7 - 1;\n    for Integer_8'Size use  8;\n@@ -71,103 +71,83 @@ pragma Pure (Interfaces);\n \n    function Shift_Left\n      (Value  : Unsigned_8;\n-      Amount : Natural)\n-     return    Unsigned_8;\n+      Amount : Natural) return Unsigned_8;\n \n    function Shift_Right\n      (Value  : Unsigned_8;\n-      Amount : Natural)\n-      return   Unsigned_8;\n+      Amount : Natural) return Unsigned_8;\n \n    function Shift_Right_Arithmetic\n      (Value  : Unsigned_8;\n-      Amount : Natural)\n-      return   Unsigned_8;\n+      Amount : Natural) return Unsigned_8;\n \n    function Rotate_Left\n      (Value  : Unsigned_8;\n-      Amount : Natural)\n-      return   Unsigned_8;\n+      Amount : Natural) return Unsigned_8;\n \n    function Rotate_Right\n      (Value  : Unsigned_8;\n-      Amount : Natural)\n-      return   Unsigned_8;\n+      Amount : Natural) return Unsigned_8;\n \n    function Shift_Left\n      (Value  : Unsigned_16;\n-      Amount : Natural)\n-     return    Unsigned_16;\n+      Amount : Natural) return Unsigned_16;\n \n    function Shift_Right\n      (Value  : Unsigned_16;\n-      Amount : Natural)\n-      return   Unsigned_16;\n+      Amount : Natural) return Unsigned_16;\n \n    function Shift_Right_Arithmetic\n      (Value  : Unsigned_16;\n-      Amount : Natural)\n-      return   Unsigned_16;\n+      Amount : Natural) return Unsigned_16;\n \n    function Rotate_Left\n      (Value  : Unsigned_16;\n-      Amount : Natural)\n-      return   Unsigned_16;\n+      Amount : Natural) return Unsigned_16;\n \n    function Rotate_Right\n      (Value  : Unsigned_16;\n-      Amount : Natural)\n-      return   Unsigned_16;\n+      Amount : Natural) return Unsigned_16;\n \n    function Shift_Left\n      (Value  : Unsigned_32;\n-      Amount : Natural)\n-     return    Unsigned_32;\n+      Amount : Natural) return Unsigned_32;\n \n    function Shift_Right\n      (Value  : Unsigned_32;\n-      Amount : Natural)\n-      return   Unsigned_32;\n+      Amount : Natural) return Unsigned_32;\n \n    function Shift_Right_Arithmetic\n      (Value  : Unsigned_32;\n-      Amount : Natural)\n-      return   Unsigned_32;\n+      Amount : Natural) return Unsigned_32;\n \n    function Rotate_Left\n      (Value  : Unsigned_32;\n-      Amount : Natural)\n-      return   Unsigned_32;\n+      Amount : Natural) return Unsigned_32;\n \n    function Rotate_Right\n      (Value  : Unsigned_32;\n-      Amount : Natural)\n-      return   Unsigned_32;\n+      Amount : Natural) return Unsigned_32;\n \n    function Shift_Left\n      (Value  : Unsigned_64;\n-      Amount : Natural)\n-     return    Unsigned_64;\n+      Amount : Natural) return Unsigned_64;\n \n    function Shift_Right\n      (Value  : Unsigned_64;\n-      Amount : Natural)\n-      return   Unsigned_64;\n+      Amount : Natural) return Unsigned_64;\n \n    function Shift_Right_Arithmetic\n      (Value  : Unsigned_64;\n-      Amount : Natural)\n-      return   Unsigned_64;\n+      Amount : Natural) return Unsigned_64;\n \n    function Rotate_Left\n      (Value  : Unsigned_64;\n-      Amount : Natural)\n-      return   Unsigned_64;\n+      Amount : Natural) return Unsigned_64;\n \n    function Rotate_Right\n      (Value  : Unsigned_64;\n-      Amount : Natural)\n-      return   Unsigned_64;\n+      Amount : Natural) return Unsigned_64;\n \n    pragma Import (Intrinsic, Shift_Left);\n    pragma Import (Intrinsic, Shift_Right);\n@@ -178,6 +158,7 @@ pragma Pure (Interfaces);\n    --  Floating point types. We use the digits value to define the IEEE\n    --  forms, otherwise a configuration pragma specifying VAX float can\n    --  default the digits to an illegal value for IEEE.\n+\n    --  Note: it is harmless, and explicitly permitted, to include additional\n    --  types in interfaces, so it is not wrong to have IEEE_Extended_Float\n    --  defined even if the extended format is not available."}, {"sha": "15cfd9c87bb7f20a165f3215417fa15b595987b7", "filename": "gcc/ada/interfac.ads", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Finterfac.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Finterfac.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finterfac.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,11 +6,11 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2002-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2002-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the implementation dependent additions to thie file.     --\n+-- apply solely to the implementation dependent sections of this file.      --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,10 +38,10 @@\n --  Assumes integer sizes of 8, 16, 32 and 64 are available, and that the\n --  floating-point formats are IEEE compatible.\n \n---  Note: There is a specialized version of this package for OpenVMS.\n+--  Note: There is a specialized version of this package for OpenVMS\n \n package Interfaces is\n-pragma Pure (Interfaces);\n+   pragma Pure;\n \n    type Integer_8  is range -2 **  7 .. 2 **  7 - 1;\n    for Integer_8'Size use  8;\n@@ -89,7 +89,7 @@ pragma Pure (Interfaces);\n \n    function Shift_Left\n      (Value  : Unsigned_16;\n-      Amount : Natural) return    Unsigned_16;\n+      Amount : Natural) return Unsigned_16;\n \n    function Shift_Right\n      (Value  : Unsigned_16;\n@@ -157,6 +157,7 @@ pragma Pure (Interfaces);\n    --  that the types Short_Float and Long_Float in Standard refer to the\n    --  32-bit short and 64-bit long IEEE forms. Furthermore, if there is\n    --  an extended float, we assume that it is available as Long_Long_Float.\n+\n    --  Note: it is harmless, and explicitly permitted, to include additional\n    --  types in interfaces, so it is not wrong to have IEEE_Extended_Float\n    --  defined even if the extended format is not available."}, {"sha": "d69bcb3dcfb8de45bcc15ce61d886368eae899a1", "filename": "gcc/ada/output.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Foutput.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Foutput.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Foutput.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,7 +38,7 @@\n with Types; use Types;\n \n package Output is\n-pragma Elaborate_Body (Output);\n+   pragma Elaborate_Body;\n \n    type Output_Proc is access procedure (S : String);\n    --  This type is used for the Set_Special_Output procedure. If this"}, {"sha": "89b089b307c14729ddc1e347af85284942343801", "filename": "gcc/ada/s-addope.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-addope.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-addope.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-addope.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2004 Free Software Foundation, Inc.            --\n+--           Copyright (C) 2004-2005 Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -47,7 +47,7 @@\n --  operations may not be available if type Address is a signed integer.\n \n package System.Address_Operations is\n-pragma Pure (Address_Operations);\n+   pragma Pure;\n \n    --  The semantics of the arithmetic operations are those that apply to\n    --  a modular type with the same length as Address, i.e. they provide"}, {"sha": "9364277f93877f8d9c8d89037e279e54cb8ce1d7", "filename": "gcc/ada/s-arit64.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-arit64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-arit64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-arit64.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,7 +38,7 @@\n with Interfaces;\n \n package System.Arith_64 is\n-pragma Pure (Arith_64);\n+   pragma Pure;\n \n    subtype Int64 is Interfaces.Integer_64;\n "}, {"sha": "6e2b434d63ef2e7ef4543220d6a5e5dbc5cb6a67", "filename": "gcc/ada/s-atacco.ads", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-atacco.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-atacco.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-atacco.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -39,13 +39,12 @@ generic\n    type Object (<>) is limited private;\n \n package System.Address_To_Access_Conversions is\n-pragma Preelaborate (Address_To_Access_Conversions);\n-\n-pragma Elaborate_Body;\n---  This pragma Elaborate_Body is there to ensure the requirement of what is\n---  at the moment a dummy null body. The reason this null body is there is\n---  that we used to have a real body, and it causes bootstrap problems with\n---  old compilers if we try to remove the corresponding file.\n+   pragma Preelaborate;\n+   pragma Elaborate_Body;\n+   --  This pragma Elaborate_Body is there to ensure the requirement of what is\n+   --  at the moment a dummy null body. The reason this null body is there is\n+   --  that we used to have a real body, and it causes bootstrap problems with\n+   --  old compilers if we try to remove the corresponding file.\n \n    pragma Compile_Time_Warning\n      (Object'Unconstrained_Array,"}, {"sha": "4ffd7bff80c1503206221bd96b771ddcd9ef9fc7", "filename": "gcc/ada/s-boarop.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-boarop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-boarop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-boarop.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -35,8 +35,10 @@\n \n with System.Generic_Vector_Operations;\n with System.Vectors.Boolean_Operations;\n+\n package System.Boolean_Array_Operations is\n-pragma Pure (Boolean_Array_Operations);\n+   pragma Pure;\n+\n    type Boolean_Array is array (Integer range <>) of Boolean;\n \n    package Boolean_Operations renames System.Vectors.Boolean_Operations;"}, {"sha": "6b444d396caa6f16e36220a7b72c47c985a2a5da", "filename": "gcc/ada/s-casuti.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-casuti.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-casuti.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-casuti.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -40,7 +40,7 @@\n --  via GNAT.Case_Util, which imports all the entities from this package.\n \n package System.Case_Util is\n-pragma Pure (Case_Util);\n+   pragma Pure;\n \n    --  Note: all the following functions handle the full Latin-1 set\n "}, {"sha": "f939ea0dd847b579f772912ce7284bd491db722f", "filename": "gcc/ada/s-crtl-vms64.ads", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-crtl-vms64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-crtl-vms64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-crtl-vms64.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                S p e c                                   --\n --                                                                          --\n---         Copyright (C) 2004,2005 Free Software Foundation, Inc.           --\n+--         Copyright (C) 2004-2005 Free Software Foundation, Inc.           --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,8 +35,9 @@\n --  on 64 bit VMS.  Note that routines that allocate memory remain 32bit.\n \n with System.Parameters;\n+\n package System.CRTL is\n-pragma Preelaborate (CRTL);\n+   pragma Preelaborate;\n \n    subtype chars is System.Address;\n    --  Pointer to null-terminated array of characters"}, {"sha": "19d74c8b594214e7bf5e02fde1c030cb5549362e", "filename": "gcc/ada/s-crtl.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-crtl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-crtl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-crtl.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -35,8 +35,9 @@\n --  on non-VMS systems.\n \n with System.Parameters;\n+\n package System.CRTL is\n-pragma Preelaborate (CRTL);\n+   pragma Preelaborate;\n \n    subtype chars is System.Address;\n    --  Pointer to null-terminated array of characters"}, {"sha": "a1bcde8c5a830a8e5c24a74e10be91b58febfce9", "filename": "gcc/ada/s-exctab.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-exctab.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-exctab.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-exctab.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1996-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1996-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,7 +38,7 @@\n with System.Standard_Library;\n \n package System.Exception_Table is\n-pragma Elaborate_Body;\n+   pragma Elaborate_Body;\n \n    package SSL renames System.Standard_Library;\n "}, {"sha": "4e25f65d1e9fd26b157b36e38a36b9104cf86c9f", "filename": "gcc/ada/s-exnint.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-exnint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-exnint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-exnint.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Integer exponentiation (checks off)\n \n package System.Exn_Int is\n-pragma Pure (Exn_Int);\n+   pragma Pure;\n \n    function Exn_Integer (Left : Integer; Right : Natural) return Integer;\n "}, {"sha": "65dc96721e75aaccc8f00ff7db62116b89e12325", "filename": "gcc/ada/s-exnllf.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-exnllf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-exnllf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-exnllf.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Long_Long_Float exponentiation (checks off)\n \n package System.Exn_LLF is\n-pragma Pure (Exn_LLF);\n+   pragma Pure;\n \n    function Exn_Long_Long_Float\n      (Left  : Long_Long_Float;"}, {"sha": "87b9757bfb202aa82e1606dc9e6c55e31a0a0097", "filename": "gcc/ada/s-exnlli.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-exnlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-exnlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-exnlli.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Long_Long_Integer exponentiation (checks off)\n \n package System.Exn_LLI is\n-pragma Pure (Exn_LLI);\n+   pragma Pure;\n \n    function Exn_Long_Long_Integer\n      (Left  : Long_Long_Integer;"}, {"sha": "5741e998ab3004f926d2431e5d0682f4baeab775", "filename": "gcc/ada/s-expint.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-expint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-expint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-expint.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Integer exponentiation (checks on)\n \n package System.Exp_Int is\n-pragma Pure (Exp_Int);\n+   pragma Pure;\n \n    function Exp_Integer\n      (Left  : Integer;"}, {"sha": "d74e51a97928f8400b0cfa9b3b6ef23f78ed1f15", "filename": "gcc/ada/s-explli.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-explli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-explli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-explli.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Long_Long_Integer exponentiation\n \n package System.Exp_LLI is\n-pragma Pure (Exp_LLI);\n+   pragma Pure;\n \n    function Exp_Long_Long_Integer\n      (Left  : Long_Long_Integer;"}, {"sha": "7a840826776e625c94dc7a7bfdacf932462cdb07", "filename": "gcc/ada/s-expllu.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-expllu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-expllu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-expllu.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -39,7 +39,7 @@\n with System.Unsigned_Types;\n \n package System.Exp_LLU is\n-pragma Pure (Exp_LLU);\n+   pragma Pure;\n \n    function Exp_Long_Long_Unsigned\n      (Left  : System.Unsigned_Types.Long_Long_Unsigned;"}, {"sha": "dfe9b5902a507c8515517e8270a57c3f941b2622", "filename": "gcc/ada/s-expmod.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-expmod.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-expmod.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-expmod.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -36,7 +36,7 @@\n --  accounting for the modulus value which is passed as the second argument.\n \n package System.Exp_Mod is\n-pragma Pure (Exp_Mod);\n+   pragma Pure;\n \n    function Exp_Modular\n      (Left    : Integer;"}, {"sha": "288258ef8f96deb80e9996c4dc6c188a51f8c3a5", "filename": "gcc/ada/s-expuns.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-expuns.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-expuns.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-expuns.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -39,7 +39,7 @@\n with System.Unsigned_Types;\n \n package System.Exp_Uns is\n-pragma Pure (Exp_Uns);\n+   pragma Pure;\n \n    function Exp_Unsigned\n      (Left  : System.Unsigned_Types.Unsigned;"}, {"sha": "92ad44999238f7388bd8a8a122044c0630fee3f3", "filename": "gcc/ada/s-fatflt.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-fatflt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-fatflt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fatflt.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,7 +37,7 @@\n with System.Fat_Gen;\n \n package System.Fat_Flt is\n-pragma Pure (Fat_Flt);\n+   pragma Pure;\n \n    --  Note the only entity from this package that is acccessed by Rtsfind\n    --  is the name of the package instantiation. Entities within this package"}, {"sha": "c1bc82040589666d80750f442037ffcbca882a4d", "filename": "gcc/ada/s-fatgen.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-fatgen.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-fatgen.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fatgen.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -41,7 +41,7 @@ generic\n     type T is digits <>;\n \n package System.Fat_Gen is\n-pragma Pure (Fat_Gen);\n+   pragma Pure;\n \n    subtype UI is Integer;\n    --  The runtime representation of universal integer for the purposes of"}, {"sha": "bff94090190dfe9458f733afed32924d5a7f5991", "filename": "gcc/ada/s-fatlfl.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-fatlfl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-fatlfl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fatlfl.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,7 +37,7 @@\n with System.Fat_Gen;\n \n package System.Fat_LFlt is\n-pragma Pure (Fat_LFlt);\n+   pragma Pure;\n \n    --  Note the only entity from this package that is acccessed by Rtsfind\n    --  is the name of the package instantiation. Entities within this package"}, {"sha": "bb8abf4e015e4024d3161178f60121524823dfd7", "filename": "gcc/ada/s-fatllf.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-fatllf.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-fatllf.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fatllf.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,7 +37,7 @@\n with System.Fat_Gen;\n \n package System.Fat_LLF is\n-pragma Pure (Fat_LLF);\n+   pragma Pure;\n \n    --  Note the only entity from this package that is acccessed by Rtsfind\n    --  is the name of the package instantiation. Entities within this package"}, {"sha": "1d1f35096527db063209f248c5bcbac7d1e68e11", "filename": "gcc/ada/s-fatsfl.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-fatsfl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-fatsfl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fatsfl.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,7 +37,7 @@\n with System.Fat_Gen;\n \n package System.Fat_SFlt is\n-pragma Pure (Fat_SFlt);\n+   pragma Pure;\n \n    --  Note the only entity from this package that is acccessed by Rtsfind\n    --  is the name of the package instantiation. Entities within this package"}, {"sha": "83d1709b6a8f485353a1830a9567c48d8c8d089c", "filename": "gcc/ada/s-finimp.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-finimp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-finimp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-finimp.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,7 +34,7 @@\n with System.Finalization_Root;\n \n package System.Finalization_Implementation is\n-pragma Elaborate_Body (Finalization_Implementation);\n+   pragma Elaborate_Body;\n \n    package SFR renames System.Finalization_Root;\n "}, {"sha": "ed1be45ab4a19bb9403b029a3714c91799a1f931", "filename": "gcc/ada/s-finroo.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-finroo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-finroo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-finroo.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---            Copyright (C) 1992-2004 Free Software Foundation, Inc.        --\n+--            Copyright (C) 1992-2005 Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,7 +37,7 @@ with Ada.Streams;\n with Unchecked_Conversion;\n \n package System.Finalization_Root is\n-pragma Preelaborate (Finalization_Root);\n+   pragma Preelaborate;\n \n    type Root_Controlled;\n "}, {"sha": "302b82496f7c43dab60e2f67ab4a36277d485251", "filename": "gcc/ada/s-fore.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-fore.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-fore.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fore.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  This package contains the routine used for the 'Fore attribute\n \n package System.Fore is\n-pragma Pure (Fore);\n+   pragma Pure;\n \n    function Fore (Lo, Hi : Long_Long_Float) return Natural;\n    --  Compute Fore attribute value for a fixed-point type. The parameters"}, {"sha": "f52b3a73da28430fa5acdc4776b18eeb0c12bdf6", "filename": "gcc/ada/s-geveop.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-geveop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-geveop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-geveop.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -43,12 +43,14 @@\n \n with System.Vectors;\n with System.Storage_Elements;\n+\n generic\n    type Element is (<>);\n    type Index is (<>);\n    type Element_Array is array (Index range <>) of Element;\n+\n package System.Generic_Vector_Operations is\n-pragma Pure (Generic_Vector_Operations);\n+   pragma Pure;\n \n    generic\n       with function Element_Op (X, Y : Element) return Element;"}, {"sha": "762690bab3351096e4a4147ff5a1280bcbbd11d8", "filename": "gcc/ada/s-htable.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-htable.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-htable.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-htable.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -40,7 +40,7 @@\n --  complete control over allocation.\n \n package System.HTable is\n-pragma Preelaborate (HTable);\n+   pragma Preelaborate;\n \n    -------------------\n    -- Simple_HTable --"}, {"sha": "d1fbeb88b335780f0a5008020982541e87c49e29", "filename": "gcc/ada/s-imgbiu.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imgbiu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imgbiu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgbiu.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -38,7 +38,7 @@\n with System.Unsigned_Types;\n \n package System.Img_BIU is\n-pragma Pure (Img_BIU);\n+   pragma Pure;\n \n    procedure Set_Image_Based_Integer\n      (V : Integer;"}, {"sha": "3723f585fcab20bcfb0eb1033796f123e0520c6a", "filename": "gcc/ada/s-imgboo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imgboo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imgboo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgboo.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Boolean'Image\n \n package System.Img_Bool is\n-pragma Pure (Img_Bool);\n+   pragma Pure;\n \n    function Image_Boolean (V : Boolean) return String;\n    --  Computes Boolean'Image (V) and returns the result."}, {"sha": "a756dcb268057a62c38eff3eaeac5b19b9c24e47", "filename": "gcc/ada/s-imgcha.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imgcha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imgcha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgcha.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Character'Image\n \n package System.Img_Char is\n-pragma Pure (Img_Char);\n+   pragma Pure;\n \n    function Image_Character (V : Character) return String;\n    --  Computes Character'Image (V) and returns the result"}, {"sha": "d1e2768c4800ff54ebb674377bed81e988568b8a", "filename": "gcc/ada/s-imgdec.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imgdec.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imgdec.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgdec.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -35,7 +35,7 @@\n --  type does not exceed Integer'Size (also used for Text_IO.Decimal_IO output)\n \n package System.Img_Dec is\n-pragma Preelaborate (Img_Dec);\n+   pragma Preelaborate;\n \n    function Image_Decimal\n      (V     : Integer;"}, {"sha": "853942259e1501b2dc0579c46600166cbc24944c", "filename": "gcc/ada/s-imgenu.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imgenu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imgenu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgenu.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,7 +37,7 @@\n --  Special routines exist for the enumeration routines in these packages.\n \n package System.Img_Enum is\n-pragma Pure (Img_Enum);\n+   pragma Pure;\n \n    function Image_Enumeration_8\n      (Pos     : Natural;"}, {"sha": "a9e35211be812ff88463429309985c02412b5e6d", "filename": "gcc/ada/s-imgint.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imgint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imgint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgint.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -36,7 +36,7 @@\n --  operations required in Text_IO.Integer_IO for such types.\n \n package System.Img_Int is\n-pragma Pure (Img_Int);\n+   pragma Pure;\n \n    function Image_Integer (V : Integer) return String;\n    --  Computes Integer'Image (V) and returns the result"}, {"sha": "93e6bdafae219dc94fb4f84e633b24767404be47", "filename": "gcc/ada/s-imgllb.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imgllb.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imgllb.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgllb.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -38,7 +38,7 @@\n with System.Unsigned_Types;\n \n package System.Img_LLB is\n-pragma Preelaborate (Img_LLB);\n+   pragma Preelaborate;\n \n    procedure Set_Image_Based_Long_Long_Integer\n      (V : Long_Long_Integer;"}, {"sha": "0ef70f49445190f1e901c2e687700f6621b9eedf", "filename": "gcc/ada/s-imglld.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imglld.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imglld.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imglld.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -35,7 +35,7 @@\n --  type does exceeds Integer'Size (also used for Text_IO.Decimal_IO output)\n \n package System.Img_LLD is\n-pragma Preelaborate (Img_LLD);\n+   pragma Preelaborate;\n \n    function Image_Long_Long_Decimal\n      (V     : Long_Long_Integer;"}, {"sha": "8137f3d43dd27f19f01aa9e2534aa02d498df982", "filename": "gcc/ada/s-imglli.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imglli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imglli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imglli.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -36,7 +36,7 @@\n --  operations required in Text_IO.Integer_IO for such types.\n \n package System.Img_LLI is\n-pragma Preelaborate (Img_LLI);\n+   pragma Preelaborate;\n \n    function Image_Long_Long_Integer (V : Long_Long_Integer) return String;\n    --  Computes Long_Long_Integer'Image (V) and returns the result."}, {"sha": "318152ca960da8f90564de47d1f4529bfa2a01a2", "filename": "gcc/ada/s-imgllu.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imgllu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imgllu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgllu.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -38,7 +38,7 @@\n with System.Unsigned_Types;\n \n package System.Img_LLU is\n-pragma Pure (Img_LLU);\n+   pragma Pure;\n \n    function Image_Long_Long_Unsigned\n      (V :    System.Unsigned_Types.Long_Long_Unsigned)"}, {"sha": "04d85c685ead784ae5e57ef08c80d4bb5d079b94", "filename": "gcc/ada/s-imgllw.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imgllw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imgllw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgllw.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -38,7 +38,7 @@\n with System.Unsigned_Types;\n \n package System.Img_LLW is\n-pragma Pure (Img_LLW);\n+   pragma Pure;\n \n    procedure Set_Image_Width_Long_Long_Integer\n      (V : Long_Long_Integer;"}, {"sha": "0f298bf9967df81f88191da42b54e0b254c4552d", "filename": "gcc/ada/s-imgrea.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imgrea.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imgrea.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgrea.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Image for fixed and float types (also used for Float_IO/Fixed_IO output)\n \n package System.Img_Real is\n-pragma Preelaborate (Img_Real);\n+   pragma Preelaborate;\n \n    function Image_Ordinary_Fixed_Point\n      (V    : Long_Long_Float;"}, {"sha": "6ce8898a17154e562179b18127e9d155b075a42a", "filename": "gcc/ada/s-imguns.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imguns.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imguns.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imguns.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -38,7 +38,7 @@\n with System.Unsigned_Types;\n \n package System.Img_Uns is\n-pragma Pure (Img_Uns);\n+   pragma Pure;\n \n    function Image_Unsigned\n      (V    : System.Unsigned_Types.Unsigned)"}, {"sha": "dbcfb07cf2fdebca1b64d6b30cd5d298a2f8bfa5", "filename": "gcc/ada/s-imgwch.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imgwch.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imgwch.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgwch.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Wide_[Wide_]Character'Image\n \n package System.Img_WChar is\n-pragma Pure (Img_WChar);\n+   pragma Pure;\n \n    function Image_Wide_Character (V : Wide_Character) return String;\n    --  Computes Wide_Character'Image (V) and returns the computed result"}, {"sha": "8b53da8e155fd33bdd892fcc54cc0c08fa42c0fd", "filename": "gcc/ada/s-imgwiu.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imgwiu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-imgwiu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgwiu.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -38,7 +38,7 @@\n with System.Unsigned_Types;\n \n package System.Img_WIU is\n-pragma Pure (Img_WIU);\n+   pragma Pure;\n \n    procedure Set_Image_Width_Integer\n      (V : Integer;"}, {"sha": "6171510e7c0606824064ce169f213cfb51ab2f26", "filename": "gcc/ada/s-io.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-io.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-io.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-io.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1998 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,7 +37,7 @@\n --  for character, integer, string and a new line function\n \n package System.IO is\n-pragma Preelaborate (IO);\n+   pragma Preelaborate;\n \n    procedure Put (X : Integer);\n "}, {"sha": "490e9d692f0524d7215a791a86b59d66bb265f04", "filename": "gcc/ada/s-maccod.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-maccod.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-maccod.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-maccod.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,7 +36,7 @@\n --  for full details.\n \n package System.Machine_Code is\n-pragma Pure (Machine_Code);\n+   pragma Pure;\n \n    type Asm_Input_Operand  is private;\n    type Asm_Output_Operand is private;"}, {"sha": "7637981441f4440a0fb6f53bc6ad50fafd6e35c2", "filename": "gcc/ada/s-mantis.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-mantis.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-mantis.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-mantis.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -35,7 +35,7 @@\n --  fixed-point type with non-static bounds.\n \n package System.Mantissa is\n-pragma Pure (Mantissa);\n+   pragma Pure;\n \n    function Mantissa_Value (First, Last : Integer) return Natural;\n    --  Compute Mantissa value from the given arguments, which are the First"}, {"sha": "477cc38f7372e4c49e338682212e8ff8f2ee9c7c", "filename": "gcc/ada/s-memcop.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-memcop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-memcop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-memcop.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2001-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -46,7 +46,7 @@ with System.CRTL;\n --  The above with is contrary to the intent ???\n \n package System.Memory_Copy is\n-pragma Preelaborate;\n+   pragma Preelaborate;\n \n    procedure memcpy (S1 : Address; S2 : Address; N : System.CRTL.size_t)\n      renames System.CRTL.memcpy;"}, {"sha": "e2bd6683f00ad944df2c4dd85ebe98c67e784439", "filename": "gcc/ada/s-osinte-mingw.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-osinte-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-osinte-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-mingw.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -45,7 +45,7 @@ with Interfaces.C.Strings;\n with Unchecked_Conversion;\n \n package System.OS_Interface is\n-pragma Preelaborate;\n+   pragma Preelaborate;\n \n    pragma Linker_Options (\"-mthreads\");\n "}, {"sha": "3b03c6ef9c4b48d29f9faf3705975692952ca566", "filename": "gcc/ada/s-pack03.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack03.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack03.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack03.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handing of packed arrays with Component_Size = 3\n \n package System.Pack_03 is\n-pragma Preelaborate (Pack_03);\n+   pragma Preelaborate;\n \n    Bits : constant := 3;\n "}, {"sha": "2f4fc26a2622ea4108b7c0674dc514055feef7b7", "filename": "gcc/ada/s-pack05.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack05.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack05.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack05.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 5\n \n package System.Pack_05 is\n-pragma Preelaborate (Pack_05);\n+   pragma Preelaborate;\n \n    Bits : constant := 5;\n "}, {"sha": "dcd53abca2a4ff496479a22edc45f287ddba4a59", "filename": "gcc/ada/s-pack06.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack06.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack06.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack06.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 6\n \n package System.Pack_06 is\n-pragma Preelaborate (Pack_06);\n+   pragma Preelaborate;\n \n    Bits : constant := 6;\n "}, {"sha": "d994b681e98fc5162b264d0eb828ae9a78e8f705", "filename": "gcc/ada/s-pack07.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack07.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack07.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack07.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 7\n \n package System.Pack_07 is\n-pragma Preelaborate (Pack_07);\n+   pragma Preelaborate;\n \n    Bits : constant := 7;\n "}, {"sha": "7b4e51ba25583733dea2b7552fd50f5d1a93b92e", "filename": "gcc/ada/s-pack09.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack09.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack09.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack09.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 9\n \n package System.Pack_09 is\n-pragma Preelaborate (Pack_09);\n+   pragma Preelaborate;\n \n    Bits : constant := 9;\n "}, {"sha": "f079f7f65c14a2c0e34007581deb8890cb9378e9", "filename": "gcc/ada/s-pack10.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack10.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack10.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack10.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 10\n \n package System.Pack_10 is\n-pragma Preelaborate (Pack_10);\n+   pragma Preelaborate;\n \n    Bits : constant := 10;\n "}, {"sha": "b8017cfbf4273bee60c412cd0c02ce4e8a5021e7", "filename": "gcc/ada/s-pack11.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack11.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack11.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack11.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 11\n \n package System.Pack_11 is\n-pragma Preelaborate (Pack_11);\n+   pragma Preelaborate;\n \n    Bits : constant := 11;\n "}, {"sha": "002bc5182082e3995c0e11ae64a864a0f302ae85", "filename": "gcc/ada/s-pack12.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack12.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack12.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack12.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 12\n \n package System.Pack_12 is\n-pragma Preelaborate (Pack_12);\n+   pragma Preelaborate;\n \n    Bits : constant := 12;\n "}, {"sha": "8022a90b59ddff769fb0cbd15ed002b1d254532f", "filename": "gcc/ada/s-pack13.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack13.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack13.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack13.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 13\n \n package System.Pack_13 is\n-pragma Preelaborate (Pack_13);\n+   pragma Preelaborate;\n \n    Bits : constant := 13;\n "}, {"sha": "e3744b2f587e3fe84ab5afadb5a69310ec15f429", "filename": "gcc/ada/s-pack14.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack14.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack14.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack14.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handing of packed arrays with Component_Size = 14\n \n package System.Pack_14 is\n-pragma Preelaborate (Pack_14);\n+   pragma Preelaborate;\n \n    Bits : constant := 14;\n "}, {"sha": "c166f8ab76c2eb412035f9aa7bba69e2b8aae09f", "filename": "gcc/ada/s-pack15.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack15.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack15.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack15.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 15\n \n package System.Pack_15 is\n-pragma Preelaborate (Pack_15);\n+   pragma Preelaborate;\n \n    Bits : constant := 15;\n "}, {"sha": "fde3bd17d52637fabb53e4031e0fed2ec2b86c58", "filename": "gcc/ada/s-pack17.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack17.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack17.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack17.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 17\n \n package System.Pack_17 is\n-pragma Preelaborate (Pack_17);\n+   pragma Preelaborate;\n \n    Bits : constant := 17;\n "}, {"sha": "c689d50d5f06a968a17860124706054b63a4a66b", "filename": "gcc/ada/s-pack18.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack18.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack18.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack18.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 18\n \n package System.Pack_18 is\n-pragma Preelaborate (Pack_18);\n+   pragma Preelaborate;\n \n    Bits : constant := 18;\n "}, {"sha": "4f3e12da9ccc6e653d1d8e5e7422ed3b7c94507a", "filename": "gcc/ada/s-pack19.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack19.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack19.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack19.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 19\n \n package System.Pack_19 is\n-pragma Preelaborate (Pack_19);\n+   pragma Preelaborate;\n \n    Bits : constant := 19;\n "}, {"sha": "39a9dc576d25688955ef023f89c532949d94d958", "filename": "gcc/ada/s-pack20.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack20.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack20.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack20.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 20\n \n package System.Pack_20 is\n-pragma Preelaborate (Pack_20);\n+   pragma Preelaborate;\n \n    Bits : constant := 20;\n "}, {"sha": "7de18f9827df73cb170246bc796486234b02860d", "filename": "gcc/ada/s-pack21.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack21.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack21.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack21.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 21\n \n package System.Pack_21 is\n-pragma Preelaborate (Pack_21);\n+   pragma Preelaborate;\n \n    Bits : constant := 21;\n "}, {"sha": "3968d23fc82243fcbd7583f788ae038f2db42faa", "filename": "gcc/ada/s-pack22.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack22.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack22.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack22.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 22\n \n package System.Pack_22 is\n-pragma Preelaborate (Pack_22);\n+   pragma Preelaborate;\n \n    Bits : constant := 22;\n "}, {"sha": "f19a9e93ac3e409a94708b3d3a4c0ebd99082bf8", "filename": "gcc/ada/s-pack23.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack23.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack23.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack23.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 23\n \n package System.Pack_23 is\n-pragma Preelaborate (Pack_23);\n+   pragma Preelaborate;\n \n    Bits : constant := 23;\n "}, {"sha": "8c1834e5cc8ce9a5513a641035fe758ce303f8d0", "filename": "gcc/ada/s-pack24.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack24.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack24.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack24.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 24\n \n package System.Pack_24 is\n-pragma Preelaborate (Pack_24);\n+   pragma Preelaborate;\n \n    Bits : constant := 24;\n "}, {"sha": "7882d172f164605c275d38b076e1fb0614309d9f", "filename": "gcc/ada/s-pack25.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack25.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack25.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack25.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 25\n \n package System.Pack_25 is\n-pragma Preelaborate (Pack_25);\n+   pragma Preelaborate;\n \n    Bits : constant := 25;\n "}, {"sha": "793b038c386c514c11626ed955fdd95cee6dc087", "filename": "gcc/ada/s-pack26.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack26.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack26.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack26.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 26\n \n package System.Pack_26 is\n-pragma Preelaborate (Pack_26);\n+   pragma Preelaborate;\n \n    Bits : constant := 26;\n "}, {"sha": "edbda505eeb8139e60fe15766fa291d501be2fbd", "filename": "gcc/ada/s-pack27.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack27.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack27.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack27.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 27\n \n package System.Pack_27 is\n-pragma Preelaborate (Pack_27);\n+   pragma Preelaborate;\n \n    Bits : constant := 27;\n "}, {"sha": "5a303079a9e6b112c5dc78e601ad784d0971f80d", "filename": "gcc/ada/s-pack28.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack28.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack28.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack28.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 28\n \n package System.Pack_28 is\n-pragma Preelaborate (Pack_28);\n+   pragma Preelaborate;\n \n    Bits : constant := 28;\n "}, {"sha": "6c1ad90503f11da95901ea4487ee1d78658c0cb8", "filename": "gcc/ada/s-pack29.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack29.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack29.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack29.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 29\n \n package System.Pack_29 is\n-pragma Preelaborate (Pack_29);\n+   pragma Preelaborate;\n \n    Bits : constant := 29;\n "}, {"sha": "c85fe7c78fb51798d48c1760c447106ada865952", "filename": "gcc/ada/s-pack30.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack30.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack30.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack30.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 30\n \n package System.Pack_30 is\n-pragma Preelaborate (Pack_30);\n+   pragma Preelaborate;\n \n    Bits : constant := 30;\n "}, {"sha": "d23157bbfeda1245b99b4745cc0bca0e0c883dba", "filename": "gcc/ada/s-pack31.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack31.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack31.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack31.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 31\n \n package System.Pack_31 is\n-pragma Preelaborate (Pack_31);\n+   pragma Preelaborate;\n \n    Bits : constant := 31;\n "}, {"sha": "8b8d5c199e2655b0b5d78a9ea97f4b0b2a1fb002", "filename": "gcc/ada/s-pack33.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack33.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack33.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack33.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 33\n \n package System.Pack_33 is\n-pragma Preelaborate (Pack_33);\n+   pragma Preelaborate;\n \n    Bits : constant := 33;\n "}, {"sha": "db7ffbb6d610a473d2097be806956679e27ec86e", "filename": "gcc/ada/s-pack34.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack34.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack34.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack34.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 34\n \n package System.Pack_34 is\n-pragma Preelaborate (Pack_34);\n+   pragma Preelaborate;\n \n    Bits : constant := 34;\n "}, {"sha": "1f07dde87ef1791ad884d6b4bdbfc1f5437fdbd4", "filename": "gcc/ada/s-pack35.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack35.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack35.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack35.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 35\n \n package System.Pack_35 is\n-pragma Preelaborate (Pack_35);\n+   pragma Preelaborate;\n \n    Bits : constant := 35;\n "}, {"sha": "509e65b9c849841c9d933bec6fef182731d3eebe", "filename": "gcc/ada/s-pack36.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack36.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack36.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack36.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 36\n \n package System.Pack_36 is\n-pragma Preelaborate (Pack_36);\n+   pragma Preelaborate;\n \n    Bits : constant := 36;\n "}, {"sha": "df2156d8c8b36e8d32796cb02c8594c6320ca07c", "filename": "gcc/ada/s-pack37.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack37.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack37.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack37.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 37\n \n package System.Pack_37 is\n-pragma Preelaborate (Pack_37);\n+   pragma Preelaborate;\n \n    Bits : constant := 37;\n "}, {"sha": "a9d9a4953f2d1f8ad9f723904249f5acb3025c09", "filename": "gcc/ada/s-pack38.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack38.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack38.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack38.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 38\n \n package System.Pack_38 is\n-pragma Preelaborate (Pack_38);\n+   pragma Preelaborate;\n \n    Bits : constant := 38;\n "}, {"sha": "4a2ff511c4d726ea4f906b8b4d28b9ddf45512aa", "filename": "gcc/ada/s-pack39.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack39.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack39.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack39.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 39\n \n package System.Pack_39 is\n-pragma Preelaborate (Pack_39);\n+   pragma Preelaborate;\n \n    Bits : constant := 39;\n "}, {"sha": "ee7981c7ec5f509e259ad25786643665907a3750", "filename": "gcc/ada/s-pack40.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack40.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack40.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack40.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 40\n \n package System.Pack_40 is\n-pragma Preelaborate (Pack_40);\n+   pragma Preelaborate;\n \n    Bits : constant := 40;\n "}, {"sha": "9a956f3f1d69af28d02c9675a7ddab901af564cf", "filename": "gcc/ada/s-pack41.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack41.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack41.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack41.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 41\n \n package System.Pack_41 is\n-pragma Preelaborate (Pack_41);\n+   pragma Preelaborate;\n \n    Bits : constant := 41;\n "}, {"sha": "82ce71050768acd81941869da2b655de29015f3e", "filename": "gcc/ada/s-pack42.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack42.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack42.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack42.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 42\n \n package System.Pack_42 is\n-pragma Preelaborate (Pack_42);\n+   pragma Preelaborate;\n \n    Bits : constant := 42;\n "}, {"sha": "74d4fada4aeb2f517570f3986b23b8e0531d301f", "filename": "gcc/ada/s-pack43.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack43.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack43.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack43.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 43\n \n package System.Pack_43 is\n-pragma Preelaborate (Pack_43);\n+   pragma Preelaborate;\n \n    Bits : constant := 43;\n "}, {"sha": "fa6863f82e4b1bec88118e8b1aada26da8b0323e", "filename": "gcc/ada/s-pack44.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack44.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack44.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack44.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 44\n \n package System.Pack_44 is\n-pragma Preelaborate (Pack_44);\n+   pragma Preelaborate;\n \n    Bits : constant := 44;\n "}, {"sha": "78ebaa1924e4a1297abca2a2d709cbcbfc3d4118", "filename": "gcc/ada/s-pack45.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack45.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack45.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack45.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 45\n \n package System.Pack_45 is\n-pragma Preelaborate (Pack_45);\n+   pragma Preelaborate;\n \n    Bits : constant := 45;\n "}, {"sha": "09256709daddb9a03451d028321ed6e8f7d440d7", "filename": "gcc/ada/s-pack46.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack46.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack46.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack46.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 46\n \n package System.Pack_46 is\n-pragma Preelaborate (Pack_46);\n+   pragma Preelaborate;\n \n    Bits : constant := 46;\n "}, {"sha": "4ca1ba3e96ccd8a8d6a87c84b86d616bd6855b0d", "filename": "gcc/ada/s-pack47.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack47.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack47.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack47.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 47\n \n package System.Pack_47 is\n-pragma Preelaborate (Pack_47);\n+   pragma Preelaborate;\n \n    Bits : constant := 47;\n "}, {"sha": "0004f9275c9404e709780c17e53fa4f6ebbad18d", "filename": "gcc/ada/s-pack48.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack48.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack48.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack48.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 48\n \n package System.Pack_48 is\n-pragma Preelaborate (Pack_48);\n+   pragma Preelaborate;\n \n    Bits : constant := 48;\n "}, {"sha": "f60042b28ab6c291c079e9f6ebf78e4d03c8b7c0", "filename": "gcc/ada/s-pack49.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack49.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack49.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack49.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 49\n \n package System.Pack_49 is\n-pragma Preelaborate (Pack_49);\n+   pragma Preelaborate;\n \n    Bits : constant := 49;\n "}, {"sha": "0ac3532406cdb964533b3af50ad86b8e71f604a3", "filename": "gcc/ada/s-pack50.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack50.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack50.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack50.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 50\n \n package System.Pack_50 is\n-pragma Preelaborate (Pack_50);\n+   pragma Preelaborate;\n \n    Bits : constant := 50;\n "}, {"sha": "b5a479eb0132040f6577ca053fd3722c1efa4d8b", "filename": "gcc/ada/s-pack51.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack51.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack51.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack51.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 51\n \n package System.Pack_51 is\n-pragma Preelaborate (Pack_51);\n+   pragma Preelaborate;\n \n    Bits : constant := 51;\n "}, {"sha": "0bb2dfc5a3b35ee486828bf34ca916cd5c75f202", "filename": "gcc/ada/s-pack52.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack52.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack52.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack52.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 52\n \n package System.Pack_52 is\n-pragma Preelaborate (Pack_52);\n+   pragma Preelaborate;\n \n    Bits : constant := 52;\n "}, {"sha": "eaf4fcc6551d95cfedd6e761bae879e1eaafb040", "filename": "gcc/ada/s-pack53.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack53.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack53.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack53.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 53\n \n package System.Pack_53 is\n-pragma Preelaborate (Pack_53);\n+   pragma Preelaborate;\n \n    Bits : constant := 53;\n "}, {"sha": "efecf4971385f548ae5f724a7d1be827def2011f", "filename": "gcc/ada/s-pack54.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack54.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack54.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack54.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 54\n \n package System.Pack_54 is\n-pragma Preelaborate (Pack_54);\n+   pragma Preelaborate;\n \n    Bits : constant := 54;\n "}, {"sha": "61c8709f9817bd59c070d485bf24389a84a91716", "filename": "gcc/ada/s-pack55.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack55.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack55.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack55.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 55\n \n package System.Pack_55 is\n-pragma Preelaborate (Pack_55);\n+   pragma Preelaborate;\n \n    Bits : constant := 55;\n "}, {"sha": "d0d3c792aa3bd2cf31c6049da635465e226db7fd", "filename": "gcc/ada/s-pack56.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack56.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack56.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack56.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 56\n \n package System.Pack_56 is\n-pragma Preelaborate (Pack_56);\n+   pragma Preelaborate;\n \n    Bits : constant := 56;\n "}, {"sha": "2781b4aa4399c51c9b621225204ccc2cdd90941c", "filename": "gcc/ada/s-pack57.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack57.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack57.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack57.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 57\n \n package System.Pack_57 is\n-pragma Preelaborate (Pack_57);\n+   pragma Preelaborate;\n \n    Bits : constant := 57;\n "}, {"sha": "a88434556a6beaacb498a1cc9f3818a66bfe04a2", "filename": "gcc/ada/s-pack58.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack58.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack58.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack58.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 58\n \n package System.Pack_58 is\n-pragma Preelaborate (Pack_58);\n+   pragma Preelaborate;\n \n    Bits : constant := 58;\n "}, {"sha": "492b9ce63950e6251b2f92acbe5837db1a711500", "filename": "gcc/ada/s-pack59.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack59.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack59.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack59.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 59\n \n package System.Pack_59 is\n-pragma Preelaborate (Pack_59);\n+   pragma Preelaborate;\n \n    Bits : constant := 59;\n "}, {"sha": "fd6f7d05591b289b8e763babf70074b6e7724179", "filename": "gcc/ada/s-pack60.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack60.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack60.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack60.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 60\n \n package System.Pack_60 is\n-pragma Preelaborate (Pack_60);\n+   pragma Preelaborate;\n \n    Bits : constant := 60;\n "}, {"sha": "e745c5e6fe4eca9cbffcebc8cdb9b0ada2e1dbca", "filename": "gcc/ada/s-pack61.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack61.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack61.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack61.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 61\n \n package System.Pack_61 is\n-pragma Preelaborate (Pack_61);\n+   pragma Preelaborate;\n \n    Bits : constant := 61;\n "}, {"sha": "a7642b5ca27081764eafb6774cd69c1f57a118c7", "filename": "gcc/ada/s-pack62.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack62.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack62.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack62.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 62\n \n package System.Pack_62 is\n-pragma Preelaborate (Pack_62);\n+   pragma Preelaborate;\n \n    Bits : constant := 62;\n "}, {"sha": "08f84f542fd7c88682bb17e65291a4965b68c1e8", "filename": "gcc/ada/s-pack63.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack63.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pack63.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pack63.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Handling of packed arrays with Component_Size = 63\n \n package System.Pack_63 is\n-pragma Preelaborate (Pack_63);\n+   pragma Preelaborate;\n \n    Bits : constant := 63;\n "}, {"sha": "2502c5e5bccd09fb08ffe6d47226921fdd3ce5d6", "filename": "gcc/ada/s-parame-ae653.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-parame-ae653.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-parame-ae653.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-ae653.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -49,7 +49,7 @@\n --  otherwise the relinking and rebinding capability would be deactivated.\n \n package System.Parameters is\n-pragma Pure (Parameters);\n+   pragma Pure;\n \n    ---------------------------------------\n    -- Task And Stack Allocation Control --"}, {"sha": "f4a806faf47ad8378b0b485e8bef2dfcb15bbd8e", "filename": "gcc/ada/s-parame-hpux.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-parame-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-parame-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-hpux.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -49,7 +49,7 @@\n --  otherwise the relinking and rebinding capability would be deactivated.\n \n package System.Parameters is\n-pragma Pure (Parameters);\n+   pragma Pure;\n \n    ---------------------------------------\n    -- Task And Stack Allocation Control --"}, {"sha": "6bb42b5444af7f23eb0d41bfab73d4dda8aeb75d", "filename": "gcc/ada/s-parame-vms-restrict.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-parame-vms-restrict.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-parame-vms-restrict.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-vms-restrict.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -49,7 +49,7 @@\n --  otherwise the relinking and rebinding capability would be deactivated.\n \n package System.Parameters is\n-pragma Pure (Parameters);\n+   pragma Pure;\n \n    ---------------------------------------\n    -- Task And Stack Allocation Control --"}, {"sha": "2bb34d5f07a8956364fec34fa1388961072cd40f", "filename": "gcc/ada/s-parame-vms.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-parame-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-parame-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-vms.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -49,7 +49,7 @@\n --  otherwise the relinking and rebinding capability would be deactivated.\n \n package System.Parameters is\n-pragma Pure (Parameters);\n+   pragma Pure;\n \n    ---------------------------------------\n    -- Task And Stack Allocation Control --"}, {"sha": "ea76e897f52f2f7403597031d47f6b891d4609b2", "filename": "gcc/ada/s-parame-vxworks.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-parame-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-parame-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame-vxworks.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -49,7 +49,7 @@\n --  otherwise the relinking and rebinding capability would be deactivated.\n \n package System.Parameters is\n-pragma Pure (Parameters);\n+   pragma Pure;\n \n    ---------------------------------------\n    -- Task And Stack Allocation Control --"}, {"sha": "6a77b3596a8b4c015f6e5d4db6f3eaa0894c8bb3", "filename": "gcc/ada/s-parame.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-parame.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-parame.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-parame.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -49,7 +49,7 @@\n --  otherwise the relinking and rebinding capability would be deactivated.\n \n package System.Parameters is\n-pragma Pure (Parameters);\n+   pragma Pure;\n \n    ---------------------------------------\n    -- Task And Stack Allocation Control --"}, {"sha": "734a1c1282621aa0aca409787a6e68ed1cf39317", "filename": "gcc/ada/s-pooglo.ads", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pooglo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pooglo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pooglo.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---        Copyright (C) 1992-1994, 2004 Free Software Foundation, Inc.      --\n+--           Copyright (C) 1992-2005 Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,9 +36,8 @@ with System.Storage_Pools;\n with System.Storage_Elements;\n \n package System.Pool_Global is\n-\n-pragma Elaborate_Body;\n---  Needed to ensure that library routines can execute allocators\n+   pragma Elaborate_Body;\n+   --  Needed to ensure that library routines can execute allocators\n \n    --  Allocation strategy:\n "}, {"sha": "c7fe93ed6b3f002e1fdf27f4e4c03b87a158814d", "filename": "gcc/ada/s-pooloc.ads", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pooloc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-pooloc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-pooloc.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1998, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,9 +35,8 @@ with System.Storage_Elements;\n with System.Pool_Global;\n \n package System.Pool_Local is\n-\n-pragma Elaborate_Body;\n---  Needed to ensure that library routines can execute allocators\n+   pragma Elaborate_Body;\n+   --  Needed to ensure that library routines can execute allocators\n \n    ----------------------------\n    -- Unbounded_Reclaim_Pool --"}, {"sha": "4245f0a065cd6b7888bba9ae53b10e88a9d2c432", "filename": "gcc/ada/s-poosiz.ads", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-poosiz.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-poosiz.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-poosiz.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -35,9 +35,8 @@ with System.Storage_Pools;\n with System.Storage_Elements;\n \n package System.Pool_Size is\n-\n-pragma Elaborate_Body;\n---  Needed to ensure that library routines can execute allocators\n+   pragma Elaborate_Body;\n+   --  Needed to ensure that library routines can execute allocators\n \n    ------------------------\n    -- Stack_Bounded_Pool --"}, {"sha": "e0433970d04b212cbfb2fde3c7c07adcee3c75aa", "filename": "gcc/ada/s-powtab.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-powtab.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-powtab.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-powtab.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-1999 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,7 +34,7 @@\n --  This package provides a powers of ten table used for real conversions\n \n package System.Powten_Table is\n-pragma Pure (Powten_Table);\n+   pragma Pure;\n \n    Maxpow : constant := 22;\n    --  The number of entries in this table is chosen to include powers of ten"}, {"sha": "c9edb603353177e47b76df04caabf52ba8645e17", "filename": "gcc/ada/s-purexc.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-purexc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-purexc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-purexc.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---           Copyright (C) 2000-2002 Ada Core Technologies, Inc.            --\n+--           Copyright (C) 2000-2005 Ada Core Technologies, Inc.            --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,7 +36,7 @@\n --  is for internal use only, it is not generally available to applications.\n \n package System.Pure_Exceptions is\n-pragma Pure (Pure_Exceptions);\n+   pragma Pure;\n \n    type Exception_Type is limited null record;\n    --  Type used to specify which exception to raise"}, {"sha": "ff7dec2093cf0550c242a3d4687a32b606ffb766", "filename": "gcc/ada/s-sopco3.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-sopco3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-sopco3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-sopco3.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  This package contains the function for concatenating three strings\n \n package System.String_Ops_Concat_3 is\n-pragma Pure (String_Ops_Concat_3);\n+   pragma Pure;\n \n    function Str_Concat_3 (S1, S2, S3 : String) return String;\n    --  Concatenate three strings and return resulting string"}, {"sha": "5194dad6e5f98a208b3e0839d744a2e88f6fe41d", "filename": "gcc/ada/s-sopco4.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-sopco4.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-sopco4.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-sopco4.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  This package contains the function for concatenating four strings\n \n package System.String_Ops_Concat_4 is\n-pragma Pure (String_Ops_Concat_4);\n+   pragma Pure;\n \n    function Str_Concat_4 (S1, S2, S3, S4 : String) return String;\n    --  Concatenate four strings and return resulting string"}, {"sha": "001fee9a905a180f86211fb8bea1bf196e7871ea", "filename": "gcc/ada/s-sopco5.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-sopco5.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-sopco5.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-sopco5.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  This package contains the function for concatenating five strings\n \n package System.String_Ops_Concat_5 is\n-pragma Pure (String_Ops_Concat_5);\n+   pragma Pure;\n \n    function Str_Concat_5 (S1, S2, S3, S4, S5 : String) return String;\n    --  Concatenate five strings and return resulting string"}, {"sha": "ca50e03e8bd31c13255f915c2db06e8367f9587a", "filename": "gcc/ada/s-stoele.ads", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-stoele.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-stoele.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stoele.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -40,16 +40,16 @@\n --  It is a good idea to avoid use clauses for this package!\n \n package System.Storage_Elements is\n-pragma Pure (Storage_Elements);\n---  Note that we take advantage of the implementation permission to make\n---  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005,\n---  this is Pure in any case (AI-362).\n-\n---  We also add the pragma Pure_Function to the operations in this package,\n---  because otherwise functions with parameters derived from Address are\n---  treated as non-pure by the back-end (see exp_ch6.adb). This is because\n---  in many cases such a parameter is used to hide read/out access to objects,\n---  and it would be unsafe to treat such functions as pure.\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005,\n+   --  this is Pure in any case (AI-362).\n+\n+   --  We also add the pragma Pure_Function to the operations in this package,\n+   --  because otherwise functions with parameters derived from Address are\n+   --  treated as non-pure by the back-end (see exp_ch6.adb). This is because\n+   --  in many cases such a parameter is used to hide read/out access to\n+   --  objects, and it would be unsafe to treat such functions as pure.\n \n    type Storage_Offset is range\n      -(2 ** (Integer'(Standard'Address_Size) - 1)) .."}, {"sha": "c30ee9c46096d8d314d41e25a3cfcfcb1f507d95", "filename": "gcc/ada/s-stopoo.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-stopoo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-stopoo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stopoo.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -39,7 +39,7 @@ with Ada.Finalization;\n with System.Storage_Elements;\n \n package System.Storage_Pools is\n-   pragma Preelaborate (System.Storage_Pools);\n+   pragma Preelaborate;\n \n    type Root_Storage_Pool is abstract\n      new Ada.Finalization.Limited_Controlled with private;"}, {"sha": "c4d0a32d062f02a54a0090e5c8b62becda44cf85", "filename": "gcc/ada/s-stratt.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-stratt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-stratt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stratt.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -44,7 +44,7 @@ with System.Unsigned_Types;\n with Ada.Streams;\n \n package System.Stream_Attributes is\n-pragma Preelaborate (Stream_Attributes);\n+   pragma Preelaborate;\n \n    pragma Suppress (Accessibility_Check, Stream_Attributes);\n    --  No need to check accessibility on arguments of subprograms"}, {"sha": "6813be737976274ac8d1a2dedf3e2ceff3ffece9", "filename": "gcc/ada/s-strops.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-strops.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-strops.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-strops.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -35,7 +35,7 @@\n --  (other than runtime comparison, found in s-strcom.ads).\n \n package System.String_Ops is\n-pragma Pure (String_Ops);\n+   pragma Pure;\n \n    function Str_Concat (X, Y : String) return String;\n    --  Concatenate two strings and return resulting string"}, {"sha": "2b813ef4d4284288354b98ac72011ed6508e7041", "filename": "gcc/ada/s-unstyp.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-unstyp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-unstyp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-unstyp.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -38,7 +38,7 @@\n --  used by the compiler in connection with packed array types.\n \n package System.Unsigned_Types is\n-pragma Pure (Unsigned_Types);\n+   pragma Pure;\n \n    type Short_Short_Unsigned is mod 2 ** Short_Short_Integer'Size;\n    type Short_Unsigned       is mod 2 ** Short_Integer'Size;"}, {"sha": "e08d337f58f6b71ea97fc0f8729a449d7049a73b", "filename": "gcc/ada/s-valboo.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-valboo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-valboo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valboo.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---        Copyright (C) 1992,1993,1994 Free Software Foundation, Inc.       --\n+--           Copyright (C) 1992-2005 Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,7 +32,7 @@\n ------------------------------------------------------------------------------\n \n package System.Val_Bool is\n-pragma Pure (Val_Bool);\n+   pragma Pure;\n \n    function Value_Boolean (Str : String) return Boolean;\n    --  Computes Boolean'Value (Str)."}, {"sha": "903ba53e0630ae1a5aff78e3596db639a12f9809", "filename": "gcc/ada/s-valcha.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-valcha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-valcha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valcha.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---           Copyright (C) 1992-2000 Free Software Foundation, Inc.         --\n+--           Copyright (C) 1992-2005 Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,7 +32,7 @@\n ------------------------------------------------------------------------------\n \n package System.Val_Char is\n-pragma Pure (Val_Char);\n+   pragma Pure;\n \n    function Value_Character (Str : String) return Character;\n    --  Computes Character'Value (Str)."}, {"sha": "eb563dedf6b4b7c44c07bcee252a099d0d50fd33", "filename": "gcc/ada/s-valdec.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-valdec.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-valdec.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valdec.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---   Copyright (C) 1992,1993,1994,1995,1996 Free Software Foundation, Inc.  --\n+--            Copyright (C) 1992-2005 Free Software Foundation, Inc.        --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,7 +36,7 @@\n --  Decimal_IO, and the Value attribute for such decimal types.\n \n package System.Val_Dec is\n-pragma Pure (Val_Dec);\n+   pragma Pure;\n \n    function Scan_Decimal\n      (Str   : String;"}, {"sha": "048630fa7d8b9e66d945d2a004dad1868b9ca1cd", "filename": "gcc/ada/s-valenu.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-valenu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-valenu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valenu.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2000, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,7 +36,7 @@\n --  details of the format of constructed image tables.\n \n package System.Val_Enum is\n-pragma Pure (Val_Enum);\n+   pragma Pure;\n \n    function Value_Enumeration_8\n      (Names   : String;"}, {"sha": "32c6be32cc5cf1e432856c350be28feadd602659", "filename": "gcc/ada/s-valint.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-valint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-valint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valint.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -35,7 +35,7 @@\n --  in Text_IO.Integer_IO, and the Value attribute.\n \n package System.Val_Int is\n-pragma Pure (Val_Int);\n+   pragma Pure;\n \n    function Scan_Integer\n      (Str  : String;"}, {"sha": "7d3b14101fc32c8ba698681f3633224ef1900532", "filename": "gcc/ada/s-vallld.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-vallld.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-vallld.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vallld.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---   Copyright (C) 1992,1993,1994,1995,1996 Free Software Foundation, Inc.  --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,7 +36,7 @@\n --  Decimal_IO, and the Value attribute for such decimal types.\n \n package System.Val_LLD is\n-pragma Pure (Val_LLD);\n+   pragma Pure;\n \n    function Scan_Long_Long_Decimal\n      (Str   : String;"}, {"sha": "57c7f2da9d7bdfdb5519b8a070ad44a55534a9bb", "filename": "gcc/ada/s-vallli.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-vallli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-vallli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vallli.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -35,7 +35,7 @@\n --  values for use in Text_IO.Integer_IO, and the Value attribute.\n \n package System.Val_LLI is\n-pragma Pure (Val_LLI);\n+   pragma Pure;\n \n    function Scan_Long_Long_Integer\n      (Str  : String;"}, {"sha": "6fee777c8ef49f484c15e24fbc582981372625c0", "filename": "gcc/ada/s-valllu.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-valllu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-valllu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valllu.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,7 +37,7 @@\n with System.Unsigned_Types;\n \n package System.Val_LLU is\n-pragma Pure (Val_LLU);\n+   pragma Pure;\n \n    function Scan_Long_Long_Unsigned\n      (Str  : String;"}, {"sha": "821072d7d4e1f83a8e464529c4b92d3f63fce5e3", "filename": "gcc/ada/s-valrea.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-valrea.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-valrea.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valrea.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -32,7 +32,7 @@\n ------------------------------------------------------------------------------\n \n package System.Val_Real is\n-pragma Pure (Val_Real);\n+   pragma Pure;\n \n    function Scan_Real\n      (Str  : String;"}, {"sha": "88f609e7b5bb17b76587bbf9865bbce03533b150", "filename": "gcc/ada/s-valuns.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-valuns.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-valuns.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valuns.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---   Copyright (C) 1992,1993,1994,1995,1996 Free Software Foundation, Inc.  --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,7 +37,7 @@\n with System.Unsigned_Types;\n \n package System.Val_Uns is\n-pragma Pure (Val_Uns);\n+   pragma Pure;\n \n    function Scan_Unsigned\n      (Str  : String;"}, {"sha": "f7073ae97d1a6c99943623ac7287657fa10a261e", "filename": "gcc/ada/s-valuti.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-valuti.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-valuti.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valuti.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---   Copyright (C) 1992,1993,1994,1995,1996 Free Software Foundation, Inc.  --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,7 +34,7 @@\n --  This package provides some common utilities used by the s-valxxx files\n \n package System.Val_Util is\n-pragma Pure (Val_Util);\n+   pragma Pure;\n \n    procedure Normalize_String\n      (S    : in out String;"}, {"sha": "05064c9cfad64e8f43a214cc23f40a7e6c7d245a", "filename": "gcc/ada/s-valwch.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-valwch.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-valwch.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-valwch.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  Processing for Wide_[Wide_]Value attribute\n \n package System.Val_WChar is\n-pragma Pure (Val_WChar);\n+   pragma Pure;\n \n    function Value_Wide_Character\n       (Str : String) return Wide_Character;"}, {"sha": "f7e135907cd68bdd560d22b1a24f48c958ca1dc4", "filename": "gcc/ada/s-veboop.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-veboop.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-veboop.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-veboop.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  This package contains functions for runtime operations on boolean vectors\n \n package System.Vectors.Boolean_Operations is\n-pragma Pure (Boolean_Operations);\n+   pragma Pure;\n \n    --  Although in general the boolean operations on arrays of booleans are\n    --  identical to operations on arrays of unsigned words of the same size,"}, {"sha": "8d71514c374fbaa52a98d43acc0e26f587a0dd34", "filename": "gcc/ada/s-vector.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-vector.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-vector.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vector.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -41,7 +41,7 @@\n --  direct processor support for them.\n \n package System.Vectors is\n-pragma Pure (Vectors);\n+   pragma Pure;\n \n    type Vector is mod 2**System.Word_Size;\n    for Vector'Alignment use Integer'Min"}, {"sha": "c8d26a916d35c9fed554e54c87f2af76fd6d57cf", "filename": "gcc/ada/s-vercon.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-vercon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-vercon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vercon.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -38,8 +38,7 @@\n with System.Unsigned_Types;\n \n package System.Version_Control is\n-\n-   pragma Pure (Version_Control);\n+   pragma Pure;\n \n    subtype Version_String is String (1 .. 8);\n    --  Eight character string returned by Get_version_String;"}, {"sha": "97c105c030c3f1976ea2180d59d21e8dd73604de", "filename": "gcc/ada/s-vxwork-alpha.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-vxwork-alpha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-vxwork-alpha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwork-alpha.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -36,7 +36,7 @@\n with Interfaces.C;\n \n package System.VxWorks is\n-   pragma Preelaborate (System.VxWorks);\n+   pragma Preelaborate;\n \n    package IC renames Interfaces.C;\n "}, {"sha": "f2b77edb0cc5f666213d592b4f3357582adaf5d6", "filename": "gcc/ada/s-vxwork-m68k.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-vxwork-m68k.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-vxwork-m68k.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwork-m68k.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -36,7 +36,7 @@\n with Interfaces.C;\n \n package System.VxWorks is\n-   pragma Preelaborate (System.VxWorks);\n+   pragma Preelaborate;\n \n    package IC renames Interfaces.C;\n "}, {"sha": "032904542545f1bbafc1612fca7be75a28386c7c", "filename": "gcc/ada/s-vxwork-mips.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-vxwork-mips.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-vxwork-mips.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwork-mips.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -36,7 +36,7 @@\n with Interfaces.C;\n \n package System.VxWorks is\n-   pragma Preelaborate (System.VxWorks);\n+   pragma Preelaborate;\n \n    package IC renames Interfaces.C;\n "}, {"sha": "62116ca113c9f059aeb57d088998029d82000c73", "filename": "gcc/ada/s-vxwork-ppc.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-vxwork-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-vxwork-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwork-ppc.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -36,7 +36,7 @@\n with Interfaces.C;\n \n package System.VxWorks is\n-   pragma Preelaborate (System.VxWorks);\n+   pragma Preelaborate;\n \n    package IC renames Interfaces.C;\n "}, {"sha": "b769b2a7a974eebaaa9f36fdb6ef4b5365f1448e", "filename": "gcc/ada/s-vxwork-sparcv9.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-vxwork-sparcv9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-vxwork-sparcv9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwork-sparcv9.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -36,7 +36,7 @@\n with Interfaces;\n \n package System.VxWorks is\n-   pragma Preelaborate (System.VxWorks);\n+   pragma Preelaborate;\n \n    --  Floating point context record. SPARCV9 version\n "}, {"sha": "e1c9305988917918b3dfe0e6cd06df1b82b476c8", "filename": "gcc/ada/s-vxwork-x86.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-vxwork-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-vxwork-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-vxwork-x86.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  This is the x86 VxWorks version of this package\n \n package System.VxWorks is\n-   pragma Preelaborate (System.VxWorks);\n+   pragma Preelaborate;\n \n    --  Floating point context record. x86 version\n "}, {"sha": "d90ae5b3869391b53273714bba8451b40d551d0b", "filename": "gcc/ada/s-wchcnv.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-wchcnv.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-wchcnv.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-wchcnv.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,7 +37,7 @@\n with System.WCh_Con;\n \n package System.WCh_Cnv is\n-   pragma Pure (WCh_Cnv);\n+   pragma Pure;\n \n    type UTF_32_Code is range 0 .. 16#7FFF_FFFF#;\n    for UTF_32_Code'Size use 32;"}, {"sha": "40394db19018cb41de988c6d282f6352730294d5", "filename": "gcc/ada/s-wchcon.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-wchcon.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-wchcon.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-wchcon.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -39,7 +39,7 @@\n --  an appropriate WITH, and the interface can be expected to remain stable.\n \n package System.WCh_Con is\n-pragma Pure (WCh_Con);\n+   pragma Pure;\n \n    -------------------------------------\n    -- Wide_Character Encoding Methods --"}, {"sha": "0f103170ec7baeda82c76467005661ddeb563d56", "filename": "gcc/ada/s-wchjis.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-wchjis.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-wchjis.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-wchjis.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -35,7 +35,7 @@\n --  JIS codes and the two external forms we support (EUC and Shift-JIS)\n \n package System.WCh_JIS is\n-pragma Pure (WCh_JIS);\n+   pragma Pure;\n \n    function EUC_To_JIS (EUC1, EUC2 : Character) return Wide_Character;\n    --  Given the two bytes of a EUC representation, return the"}, {"sha": "ba154b901ba1bd6eb6aa99f5c1d12fd2bfe579a8", "filename": "gcc/ada/s-wchstw.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-wchstw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-wchstw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-wchstw.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,7 +37,7 @@\n with System.WCh_Con;\n \n package System.WCh_StW is\n-pragma Pure (WCh_StW);\n+   pragma Pure;\n \n    function String_To_Wide_String\n      (S  : String;"}, {"sha": "ac34cf2dccda52491ef2cb85de72d535a773de52", "filename": "gcc/ada/s-wchwts.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-wchwts.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-wchwts.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-wchwts.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -39,7 +39,7 @@\n with System.WCh_Con;\n \n package System.WCh_WtS is\n-pragma Pure (WCh_WtS);\n+   pragma Pure;\n \n    function Wide_String_To_String\n      (S  : Wide_String;"}, {"sha": "9e5e1bd09450f0c43b9bc28b230c39ecf91486d2", "filename": "gcc/ada/s-widboo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-widboo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-widboo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-widboo.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  This package contains the routine used for Boolean'Width\n \n package System.Wid_Bool is\n-pragma Pure (Wid_Bool);\n+   pragma Pure;\n \n    function Width_Boolean (Lo, Hi : Boolean) return Natural;\n    --  Compute Width attribute for non-static type derived from Boolean."}, {"sha": "021a5a325f0f89ab88337c20c8c01a6c1ebafdbf", "filename": "gcc/ada/s-widcha.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-widcha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-widcha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-widcha.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  This package contains the routine used for Character'Width\n \n package System.Wid_Char is\n-pragma Pure (Wid_Char);\n+   pragma Pure;\n \n    function Width_Character (Lo, Hi : Character) return Natural;\n    --  Compute Width attribute for non-static type derived from Character."}, {"sha": "cef6e287aee8accafd97a60795c9d58908ac70b1", "filename": "gcc/ada/s-widenu.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-widenu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-widenu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-widenu.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  This package contains the routine used for Enumeration_Type'Width\n \n package System.Wid_Enum is\n-pragma Pure (Wid_Enum);\n+   pragma Pure;\n \n    function Width_Enumeration_8\n      (Names   : String;"}, {"sha": "f2aede66aae97da1a0ca99a32731653f8dd26584", "filename": "gcc/ada/s-widlli.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-widlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-widlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-widlli.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -31,12 +31,12 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package contains the routine used for WIdth attribute for all\n+--  This package contains the routine used for Width attribute for all\n --  non-static signed integer subtypes. Note we only have one routine,\n --  since this seems a fairly marginal function.\n \n package System.Wid_LLI is\n-pragma Pure (Wid_LLI);\n+   pragma Pure;\n \n    function Width_Long_Long_Integer\n      (Lo, Hi : Long_Long_Integer)"}, {"sha": "dff5bb3019b8d40ceebc50232b13355b4cbc3c52", "filename": "gcc/ada/s-widllu.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-widllu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-widllu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-widllu.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -31,14 +31,14 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  This package contains the routine used for WIdth attribute for all\n+--  This package contains the routine used for Width attribute for all\n --  non-static unsigned integer (modular integer) subtypes. Note we only\n --  have one routine, since this seems a fairly marginal function.\n \n with System.Unsigned_Types;\n \n package System.Wid_LLU is\n-pragma Pure (Wid_LLU);\n+   pragma Pure;\n \n    function Width_Long_Long_Unsigned\n      (Lo, Hi : System.Unsigned_Types.Long_Long_Unsigned)"}, {"sha": "ca5e2fab89c4f4be80d26efb26b6abd089ca0009", "filename": "gcc/ada/s-widwch.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-widwch.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-widwch.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-widwch.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  This package contains the routines used for Wide_[Wide_]Character'Width\n \n package System.Wid_WChar is\n-pragma Pure (Wid_WChar);\n+   pragma Pure;\n \n    function Width_Wide_Character\n      (Lo, Hi : Wide_Character) return Natural;"}, {"sha": "3ba15e473ebc660b4ae2600be279ed61e9c385b7", "filename": "gcc/ada/s-wwdcha.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-wwdcha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-wwdcha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-wwdcha.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  This package contains the routine used for Character'Wide_[Wide_]Width\n \n package System.WWd_Char is\n-pragma Pure (WWd_Char);\n+   pragma Pure;\n \n    function Wide_Width_Character (Lo, Hi : Character) return Natural;\n    --  Compute Wide_Width attribute for non-static type derived from"}, {"sha": "67bac34a8591fc741684aaa171350ad4f2546ea1", "filename": "gcc/ada/s-wwdenu.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-wwdenu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-wwdenu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-wwdenu.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -36,7 +36,7 @@\n with System.WCh_Con;\n \n package System.WWd_Enum is\n-pragma Pure (WWd_Enum);\n+   pragma Pure;\n \n    function Wide_Width_Enumeration_8\n      (Names   : String;"}, {"sha": "698a4ef059568e5d30a9aacb5b9f2c4ccc57e383", "filename": "gcc/ada/s-wwdwch.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-wwdwch.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fs-wwdwch.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-wwdwch.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -34,7 +34,7 @@\n --  This package contains routines for [Wide_]Wide_Character'[Wide_]Wide_Width\n \n package System.Wwd_WChar is\n-pragma Pure (Wwd_WChar);\n+   pragma Pure;\n \n    function Wide_Width_Wide_Character\n      (Lo, Hi : Wide_Character) return Natural;"}, {"sha": "246207c18c8c1d00e2e2f4258a3042549c266027", "filename": "gcc/ada/system-aix.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-aix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-aix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-aix.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "3d8f99b522db45d15be092becd06335a2b3d8ea1", "filename": "gcc/ada/system-darwin-ppc.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-darwin-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-darwin-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-darwin-ppc.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "3eab5aef7e3409c706f9206a5a4e174380a53070", "filename": "gcc/ada/system-freebsd-x86.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-freebsd-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-freebsd-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-freebsd-x86.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "cb5af090af55cef028bcd559b8e591300f5848b8", "filename": "gcc/ada/system-hpux-ia64.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-hpux-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-hpux-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-hpux-ia64.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "4a72615f49ce2e6c2dc47b52b1799a33b137d856", "filename": "gcc/ada/system-hpux.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-hpux.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "9e25857b2ec5a9d9713e73ac56dfb59c4bb23152", "filename": "gcc/ada/system-interix.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-interix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-interix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-interix.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "794f494848be80bf7a5e9f19154094f6316c13ff", "filename": "gcc/ada/system-irix-n32.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-irix-n32.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-irix-n32.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-irix-n32.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "1a69ff08189768a9d6f361e026cd758ab542d6a3", "filename": "gcc/ada/system-irix-o32.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-irix-o32.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-irix-o32.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-irix-o32.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "67c395c0d188caa9790d1258e9ac41e3b6a57075", "filename": "gcc/ada/system-linux-hppa.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-linux-hppa.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-linux-hppa.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-hppa.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "892a1be8dee3502307a5658b4b8509d7228d87fc", "filename": "gcc/ada/system-linux-ia64.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-linux-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-linux-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-ia64.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "99ed4e32b6f587c746883d0694c5c4f4c7edf7c5", "filename": "gcc/ada/system-linux-ppc.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-linux-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-linux-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-ppc.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "6f43799ab2886db0c6f4720653b336574e71617b", "filename": "gcc/ada/system-linux-x86.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-linux-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-linux-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-x86.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "e850d74038419bd5d5b3c579e57840764e5f62df", "filename": "gcc/ada/system-linux-x86_64.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-linux-x86_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-linux-x86_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-linux-x86_64.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "3aec6f23bb8ada0b01eacec8c1d806326a8e57e2", "filename": "gcc/ada/system-lynxos-ppc.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-lynxos-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-lynxos-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-lynxos-ppc.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "8213dbe7360264652cfa83550f0b4ab6acef0edc", "filename": "gcc/ada/system-lynxos-x86.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-lynxos-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-lynxos-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-lynxos-x86.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "b5967998da0a2a5619e13a1c45b02fa48030e624", "filename": "gcc/ada/system-mingw.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-mingw.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "9dc5bf8b68643461bc229b65ba6ec979edc91294", "filename": "gcc/ada/system-os2.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-os2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-os2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-os2.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "1ec0af3872db74fc60ce6709d1fb2ae6c5bf752b", "filename": "gcc/ada/system-solaris-sparc.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-solaris-sparc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-solaris-sparc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-solaris-sparc.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "672cd97e5dd3556b4dd884f7041424131c72b12c", "filename": "gcc/ada/system-solaris-sparcv9.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-solaris-sparcv9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-solaris-sparcv9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-solaris-sparcv9.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "0ebf08bef5cf8f1540f49e86b25f0e44ea152c1a", "filename": "gcc/ada/system-solaris-x86.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-solaris-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-solaris-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-solaris-x86.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "ef3d7de8a0b733e962b47e223519ebaf00a86b23", "filename": "gcc/ada/system-tru64.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-tru64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-tru64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-tru64.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "63fb6038cdeab1f053e96005c6c781870f6c5bbc", "filename": "gcc/ada/system-unixware.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-unixware.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-unixware.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-unixware.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "5f9f59423c5efb7ade5b5fb094efc1f4b2b4dbc1", "filename": "gcc/ada/system-vms-zcx.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-vms-zcx.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-vms-zcx.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vms-zcx.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "d958ded7663b178c9d769d2cb631a8edf16fde71", "filename": "gcc/ada/system-vms.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-vms.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-vms.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vms.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "3d7b8e8f615ac5133a4fc0b18fa2753110032f74", "filename": "gcc/ada/system-vms_64.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-vms_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-vms_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vms_64.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "6818addb0872fbcb7c34bb6e3afdb94a4695f15e", "filename": "gcc/ada/system-vxworks-alpha.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-vxworks-alpha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-vxworks-alpha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-alpha.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "c532a5d3818844557e4746bbd40e2a1c2a4f212b", "filename": "gcc/ada/system-vxworks-m68k.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-vxworks-m68k.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-vxworks-m68k.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-m68k.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "288a2bca44072e0d84052e6412d94f599df6702e", "filename": "gcc/ada/system-vxworks-mips.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-vxworks-mips.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-vxworks-mips.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-mips.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "5db540ee94953cd2046cd234d597d41bbdf3771d", "filename": "gcc/ada/system-vxworks-ppc.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-vxworks-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-vxworks-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-ppc.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "fa15a6f562ce4180760847c5f17e653404ca2cd2", "filename": "gcc/ada/system-vxworks-sparcv9.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-vxworks-sparcv9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-vxworks-sparcv9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-sparcv9.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "ec6faf9fae20a64c7472182124725ee5c6c32d2f", "filename": "gcc/ada/system-vxworks-x86.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-vxworks-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem-vxworks-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-vxworks-x86.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -37,10 +37,10 @@\n ------------------------------------------------------------------------------\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "11359c69d94f866d7899ce0abbf68102c4948f55", "filename": "gcc/ada/system.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Fsystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -7,7 +7,7 @@\n --                                 S p e c                                  --\n --                            (Compiler Version)                            --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -42,10 +42,10 @@\n --  about most System parameters, this generic version works fine.\n \n package System is\n-pragma Pure (System);\n---  Note that we take advantage of the implementation permission to make this\n---  unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada 2005, this is\n---  Pure in any case (AI-362).\n+   pragma Pure;\n+   --  Note that we take advantage of the implementation permission to make\n+   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n+   --  2005, this is Pure in any case (AI-362).\n \n    type Name is (SYSTEM_NAME_GNAT);\n    System_Name : constant Name := SYSTEM_NAME_GNAT;"}, {"sha": "853948ab8c7d5338cf3e1a8c132c7823b5713e98", "filename": "gcc/ada/table.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Ftable.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/009186e083d77ea7e83696601a428c409417b27c/gcc%2Fada%2Ftable.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftable.ads?ref=009186e083d77ea7e83696601a428c409417b27c", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2005 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,7 +43,7 @@\n with Types; use Types;\n \n package Table is\n-pragma Elaborate_Body (Table);\n+   pragma Elaborate_Body;\n \n    generic\n       type Table_Component_Type is private;"}]}