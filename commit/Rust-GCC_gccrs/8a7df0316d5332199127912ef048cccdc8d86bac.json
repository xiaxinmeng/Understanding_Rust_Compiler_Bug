{"sha": "8a7df0316d5332199127912ef048cccdc8d86bac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGE3ZGYwMzE2ZDUzMzIxOTkxMjc5MTJlZjA0OGNjY2RjOGQ4NmJhYw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-03-09T10:10:02Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-03-09T10:10:02Z"}, "message": "Fix ICE in tree-chkp-opt.c (PR tree-optimization/79631).\n\n2017-03-09  Martin Liska  <mliska@suse.cz>\n\n\tPR tree-optimization/79631\n\t* tree-chkp-opt.c (chkp_is_constant_addr): Call\n\ttree_int_cst_sign_bit just for INTEGER constants.\n2017-03-09  Martin Liska  <mliska@suse.cz>\n\n\tPR tree-optimization/79631\n\t* gcc.target/i386/mpx/pr79631.c: New test.\n\nFrom-SVN: r245998", "tree": {"sha": "396f65b0b5c74091627a2048196c183cca6d90bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/396f65b0b5c74091627a2048196c183cca6d90bc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a7df0316d5332199127912ef048cccdc8d86bac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a7df0316d5332199127912ef048cccdc8d86bac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a7df0316d5332199127912ef048cccdc8d86bac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a7df0316d5332199127912ef048cccdc8d86bac/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3828bb0d7ed18e03d0794c0a38a51d155421559c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3828bb0d7ed18e03d0794c0a38a51d155421559c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3828bb0d7ed18e03d0794c0a38a51d155421559c"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "c3718e31b04101cc1cb2b2247a33172ff74cbcba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7df0316d5332199127912ef048cccdc8d86bac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7df0316d5332199127912ef048cccdc8d86bac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8a7df0316d5332199127912ef048cccdc8d86bac", "patch": "@@ -1,3 +1,9 @@\n+2017-03-09  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/79631\n+\t* tree-chkp-opt.c (chkp_is_constant_addr): Call\n+\ttree_int_cst_sign_bit just for INTEGER constants.\n+\n 2017-03-09  Martin Liska  <mliska@suse.cz>\n \n \tPR target/65705"}, {"sha": "f576273d9c1bc26be6f01c83518f931dfd046352", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7df0316d5332199127912ef048cccdc8d86bac/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7df0316d5332199127912ef048cccdc8d86bac/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8a7df0316d5332199127912ef048cccdc8d86bac", "patch": "@@ -1,3 +1,8 @@\n+2017-03-09  Martin Liska  <mliska@suse.cz>\n+\n+\tPR tree-optimization/79631\n+\t* gcc.target/i386/mpx/pr79631.c: New test.\n+\n 2017-03-09  Martin Liska  <mliska@suse.cz>\n \n \tPR target/65705"}, {"sha": "075d46b835f55a052d2c433a817827cb4070a05f", "filename": "gcc/testsuite/gcc.target/i386/mpx/pr79631.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7df0316d5332199127912ef048cccdc8d86bac/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fpr79631.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7df0316d5332199127912ef048cccdc8d86bac/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fpr79631.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fmpx%2Fpr79631.c?ref=8a7df0316d5332199127912ef048cccdc8d86bac", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile { target { ! x32 } } } */\n+/* { dg-options \"-fcheck-pointer-bounds -mmpx -O2\" } */\n+\n+typedef struct { int _mp_size; } mpz_t[1];\n+int a, b;\n+void fn1()\n+{\n+  mpz_t c[1][b];\n+  for (;;) {\n+      int d = 0 >= 0 ? 0 == 0 ? c[0][0]->_mp_size ? -1 : 0 : 0 : 0,\n+\t  e = 0 >= 0 ? 0 == 0 ? c[1][1]->_mp_size ? -1 : 0 : 0 : 0;\n+      if (d != e)\n+\ta++;\n+  }\n+}"}, {"sha": "ab98edb4f40d922521e140646fd3e6f49d08f50f", "filename": "gcc/tree-chkp-opt.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a7df0316d5332199127912ef048cccdc8d86bac/gcc%2Ftree-chkp-opt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a7df0316d5332199127912ef048cccdc8d86bac/gcc%2Ftree-chkp-opt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chkp-opt.c?ref=8a7df0316d5332199127912ef048cccdc8d86bac", "patch": "@@ -239,9 +239,11 @@ chkp_is_constant_addr (const address_t &addr, int *sign)\n     return false;\n   else if (addr.pol[0].var)\n     return false;\n+  else if (TREE_CODE (addr.pol[0].cst) != INTEGER_CST)\n+    return false;\n   else if (integer_zerop (addr.pol[0].cst))\n     *sign = 0;\n-  else if  (tree_int_cst_sign_bit (addr.pol[0].cst))\n+  else if (tree_int_cst_sign_bit (addr.pol[0].cst))\n     *sign = -1;\n   else\n     *sign = 1;"}]}