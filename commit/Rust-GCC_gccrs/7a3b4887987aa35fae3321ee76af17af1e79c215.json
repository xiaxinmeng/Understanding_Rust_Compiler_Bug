{"sha": "7a3b4887987aa35fae3321ee76af17af1e79c215", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2EzYjQ4ODc5ODdhYTM1ZmFlMzMyMWVlNzZhZjE3YWYxZTc5YzIxNQ==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2010-05-27T16:02:50Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2010-05-27T16:02:50Z"}, "message": "Makefile.in (ALL_CFLAGS): Add file-specific CFLAGS.\n\ngcc/ChangeLog:\n\t* Makefile.in (ALL_CFLAGS): Add file-specific CFLAGS.\n\t(ALL_HOST_FRONTEND_OBJS): New, for all front-end specific objects.\n\t(ALL_HOST_BACKEND_OBJS): New, for all backend and target objects.\n\t(ALL_HOST_OBJS): Now a union of the above two.\n\t<section \"Language makefile fragments\">: Add -DIN_GCC_FRONTEND for\n\tall files in ALL_HOST_FRONTEND_OBJS.\n\t* system.h: Poison GCC_RTL_H if IN_GCC_FRONTEND is defined.\n\t* c-common.c: Pretend to be a backend file by undefining\n\tIN_GCC_FRONTEND (still need rtl.h here).\n\nada/ChangeLog:\n\t* gcc-interface/decl.c: Pretend to be a backend file by undefining\n\tIN_GCC_FRONTEND (still need rtl.h here).\n\njava/ChangeLog:\n\t* buildings.c: Pretend to be a backend file by undefining\n\tIN_GCC_FRONTEND (still need rtl.h here).\n\nFrom-SVN: r159927", "tree": {"sha": "dcbeeba8fae9dc7970adedeece8672f0c973b716", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcbeeba8fae9dc7970adedeece8672f0c973b716"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a3b4887987aa35fae3321ee76af17af1e79c215", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a3b4887987aa35fae3321ee76af17af1e79c215", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a3b4887987aa35fae3321ee76af17af1e79c215", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a3b4887987aa35fae3321ee76af17af1e79c215/comments", "author": null, "committer": null, "parents": [{"sha": "753d358dbcf3dd3fe68e9fe1e0a5eea8188c5d9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/753d358dbcf3dd3fe68e9fe1e0a5eea8188c5d9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/753d358dbcf3dd3fe68e9fe1e0a5eea8188c5d9a"}], "stats": {"total": 68, "additions": 58, "deletions": 10}, "files": [{"sha": "a981b728c4b052e6d1e3f0a4109ccb14a99326cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a3b4887987aa35fae3321ee76af17af1e79c215/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a3b4887987aa35fae3321ee76af17af1e79c215/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7a3b4887987aa35fae3321ee76af17af1e79c215", "patch": "@@ -1,3 +1,16 @@\n+2010-05-27  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* Makefile.in (ALL_CFLAGS): Add file-specific CFLAGS.\n+\t(ALL_HOST_FRONTEND_OBJS): New, for all front-end specific objects.\n+\t(ALL_HOST_BACKEND_OBJS): New, for all backend and target objects.\n+\t(ALL_HOST_OBJS): Now a union of the above two.\n+\t<section \"Language makefile fragments\">: Add -DIN_GCC_FRONTEND for\n+\tall files in ALL_HOST_FRONTEND_OBJS.\n+\t* system.h: Poison GCC_RTL_H if IN_GCC_FRONTEND is defined.\n+\n+\t* c-common.c: Pretend to be a backend file by undefining\n+\tIN_GCC_FRONTEND (still need rtl.h here).\n+\n 2010-05-27  Jan Hubicka  <jh@suse.cz>\n \n \t* cgraph.h (struct cgraph_node): Mark former_clone_of by GTY ((skip))."}, {"sha": "677b2d07cf37af6f3a02b507d643038cf33a6b0d", "filename": "gcc/Makefile.in", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a3b4887987aa35fae3321ee76af17af1e79c215/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a3b4887987aa35fae3321ee76af17af1e79c215/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=7a3b4887987aa35fae3321ee76af17af1e79c215", "patch": "@@ -974,7 +974,7 @@ INTERNAL_CFLAGS = -DIN_GCC @CROSS@\n \n # This is the variable actually used when we compile. If you change this,\n # you probably want to update BUILD_CFLAGS in configure.ac\n-ALL_CFLAGS = $(T_CFLAGS) \\\n+ALL_CFLAGS = $(T_CFLAGS) $(CFLAGS-$@) \\\n   $(CFLAGS) $(INTERNAL_CFLAGS) $(COVERAGE_FLAGS) $(WARN_CFLAGS) @DEFS@\n \n # The C++ version.\n@@ -1446,15 +1446,19 @@ OBJS = $(OBJS-common) $(OBJS-md) $(OBJS-archive)\n \n OBJS-onestep = libbackend.o $(OBJS-archive)\n \n-# This lists all host object files, whether they are included in this\n-# compilation or not.\n-ALL_HOST_OBJS = $(GCC_OBJS) $(C_OBJS) $(OBJS) libbackend.o \\\n+# This lists all host objects for the front ends.\n+ALL_HOST_FRONTEND_OBJS = $(C_OBJS) \\\n+  $(foreach v,$(CONFIG_LANGUAGES),$($(v)_OBJS))\n+\n+ALL_HOST_BACKEND_OBJS = $(GCC_OBJS) $(OBJS) libbackend.o \\\n   @TREEBROWSER@ main.o gccspec.o version.o intl.o prefix.o cppspec.o \\\n-  $(foreach v,$(CONFIG_LANGUAGES),$($(v)_OBJS)) \\\n-  $(COLLECT2_OBJS) $(EXTRA_GCC_OBJS) \\\n-  mips-tfile.o mips-tdump.o \\\n+  $(COLLECT2_OBJS) $(EXTRA_GCC_OBJS) mips-tfile.o mips-tdump.o \\\n   $(GCOV_OBJS) $(GCOV_DUMP_OBJS)\n \n+# This lists all host object files, whether they are included in this\n+# compilation or not.\n+ALL_HOST_OBJS = $(ALL_HOST_FRONTEND_OBJS) $(ALL_HOST_BACKEND_OBJS)\n+\n BACKEND = main.o @TREEBROWSER@ libbackend.a $(CPPLIB) $(LIBDECNUMBER)\n \n MOSTLYCLEANFILES = insn-flags.h insn-config.h insn-codes.h \\\n@@ -1572,6 +1576,13 @@ s-alltree: Makefile\n \t$(SHELL) $(srcdir)/../move-if-change tmp-all-tree.def all-tree.def\n \t$(STAMP) s-alltree\n \n+# Now that LANG_MAKEFRAGS are included, we can add special flags to the\n+# objects that belong to the front ends.  We add an extra define that\n+# causes back-end specific include files to be poisoned, in the hope that\n+# we can avoid introducing dependencies of the front ends on things that\n+# no front end should ever look at (e.g. everything RTL related).\n+$(foreach file,$(ALL_HOST_FRONTEND_OBJS),$(eval CFLAGS-$(file) += -DIN_GCC_FRONTEND))\n+\n #\f\n \n # -----------------------------"}, {"sha": "d54d2dc15ce1030625edb8c33947b16dc518529d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a3b4887987aa35fae3321ee76af17af1e79c215/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a3b4887987aa35fae3321ee76af17af1e79c215/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7a3b4887987aa35fae3321ee76af17af1e79c215", "patch": "@@ -1,3 +1,8 @@\n+2010-05-27  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* gcc-interface/decl.c: Pretend to be a backend file by undefining\n+\tIN_GCC_FRONTEND (still need rtl.h here).\n+\n 2010-05-26  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* gcc-interface/trans.c: Do not include rtl.h, insclude libfuncs.h."}, {"sha": "5740a0899b12f9dde070042f1219659543e2150e", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a3b4887987aa35fae3321ee76af17af1e79c215/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a3b4887987aa35fae3321ee76af17af1e79c215/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=7a3b4887987aa35fae3321ee76af17af1e79c215", "patch": "@@ -23,6 +23,10 @@\n  *                                                                          *\n  ****************************************************************************/\n \n+/* FIXME: Still need to include rtl.h here (via expr.h) because this file\n+   actually generates RTL (search for gen_rtx_* in gnat_to_gnu_entity).  */\n+#undef IN_GCC_FRONTEND\n+\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\""}, {"sha": "1fd11c50c64f7aa53f987b91e32e1f4c3f1d735b", "filename": "gcc/c-common.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a3b4887987aa35fae3321ee76af17af1e79c215/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a3b4887987aa35fae3321ee76af17af1e79c215/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=7a3b4887987aa35fae3321ee76af17af1e79c215", "patch": "@@ -19,6 +19,10 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n+/* FIXME: Still need to include rtl.h here (via expr.h) in a front-end file.\n+   Pretend this is a back-end file.  */\n+#undef IN_GCC_FRONTEND\n+\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\"\n@@ -47,9 +51,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"target-def.h\"\n #include \"libfuncs.h\"\n \n-/* FIXME: Still need to include rtl.h here (via expr.h) in a front-end file.\n-   Pretend this is a back-end file.  */\n-#define IN_GCC_BACKEND\n #include \"expr.h\" /* For vector_mode_valid_p */\n \n /* FIXME: Needed for TARGET_ENUM_VA_LIST, which should be a target hook.  */"}, {"sha": "45c1931ed95c85c4dba9e1dffa1be165e74c032f", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a3b4887987aa35fae3321ee76af17af1e79c215/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a3b4887987aa35fae3321ee76af17af1e79c215/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=7a3b4887987aa35fae3321ee76af17af1e79c215", "patch": "@@ -1,3 +1,8 @@\n+2010-05-27  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* buildings.c: Pretend to be a backend file by undefining\n+\tIN_GCC_FRONTEND (still need rtl.h here).\n+\n 2010-05-26  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* java-tree.h (struct lang_decl_func): Change type of throws_list"}, {"sha": "74859411758185fd3841ce3cb44b0b3a9940ca4f", "filename": "gcc/java/builtins.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a3b4887987aa35fae3321ee76af17af1e79c215/gcc%2Fjava%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a3b4887987aa35fae3321ee76af17af1e79c215/gcc%2Fjava%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fbuiltins.c?ref=7a3b4887987aa35fae3321ee76af17af1e79c215", "patch": "@@ -24,6 +24,9 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n \n /* Written by Tom Tromey <tromey@redhat.com>.  */\n \n+/* FIXME: Still need to include rtl.h here (see below).  */\n+#undef IN_GCC_FRONTEND\n+\n #include \"config.h\"\n #include \"system.h\"\n #include \"coretypes.h\""}, {"sha": "b87cf0db0d9572d142be892f23ee50832a1485db", "filename": "gcc/system.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a3b4887987aa35fae3321ee76af17af1e79c215/gcc%2Fsystem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a3b4887987aa35fae3321ee76af17af1e79c215/gcc%2Fsystem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsystem.h?ref=7a3b4887987aa35fae3321ee76af17af1e79c215", "patch": "@@ -789,6 +789,12 @@ extern void fancy_abort (const char *, int, const char *) ATTRIBUTE_NORETURN;\n   VA_FIXEDARG VA_CLOSE VA_START\n #endif /* IN_GCC */\n \n+/* Front ends should never have to include middle-end headers.  Enforce\n+   this by poisoning the header double-include protection defines.  */\n+#ifdef IN_GCC_FRONTEND\n+#pragma GCC poison GCC_RTL_H\n+#endif\n+\n /* Note: not all uses of the `index' token (e.g. variable names and\n    structure members) have been eliminated.  */\n #undef bcopy"}]}