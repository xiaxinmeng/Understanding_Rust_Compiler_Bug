{"sha": "b05933f5277f7a0f09670f205af31b082e0e4976", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA1OTMzZjUyNzdmN2EwZjA5NjcwZjIwNWFmMzFiMDgyZTBlNDk3Ng==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2011-08-16T17:04:13Z"}, "committer": {"name": "Anatoly Sokolov", "email": "aesok@gcc.gnu.org", "date": "2011-08-16T17:04:13Z"}, "message": "m32c.h (PREFERRED_RELOAD_CLASS, [...]): Remove macro.\n\n\t* config/m32c/m32c.h (PREFERRED_RELOAD_CLASS,\n\tPREFERRED_OUTPUT_RELOAD_CLASS): Remove macro.\n\t* config/m32c/m32c-protos.h (m32c_preferred_reload_class,\n\tm32c_preferred_output_reload_class): Remove.\n\t* config/m32c/m32c.c (m32c_preferred_reload_class): Make static.\n\tChange rclass argument and return types to reg_class_t. Use\n\treg_class_subset_p instead of class_sizes.\n\t(m32c_preferred_output_reload_class): Make static. Change rclass\n\targument and return types to reg_class_t.\n\t(TARGET_PREFERRED_RELOAD_CLASS,\n\tTARGET_PREFERRED_OUTPUT_RELOAD_CLASS): Define.\n\nFrom-SVN: r177790", "tree": {"sha": "ed2d7e4f6adfd9ce164b3ac8aaabcd47a00bdb1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed2d7e4f6adfd9ce164b3ac8aaabcd47a00bdb1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b05933f5277f7a0f09670f205af31b082e0e4976", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b05933f5277f7a0f09670f205af31b082e0e4976", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b05933f5277f7a0f09670f205af31b082e0e4976", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b05933f5277f7a0f09670f205af31b082e0e4976/comments", "author": null, "committer": null, "parents": [{"sha": "c9c8f2e82792603bfc587b49841b2f43ee60d121", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9c8f2e82792603bfc587b49841b2f43ee60d121", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9c8f2e82792603bfc587b49841b2f43ee60d121"}], "stats": {"total": 42, "additions": 30, "deletions": 12}, "files": [{"sha": "59176fccb34cacc7e7dd6b6f9993ff9fb4f5e446", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b05933f5277f7a0f09670f205af31b082e0e4976/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b05933f5277f7a0f09670f205af31b082e0e4976/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b05933f5277f7a0f09670f205af31b082e0e4976", "patch": "@@ -1,3 +1,17 @@\n+2011-08-16  Anatoly Sokolov  <aesok@post.ru>\n+\n+\t* config/m32c/m32c.h (PREFERRED_RELOAD_CLASS,\n+\tPREFERRED_OUTPUT_RELOAD_CLASS): Remove macro.\n+\t* config/m32c/m32c-protos.h (m32c_preferred_reload_class,\n+\tm32c_preferred_output_reload_class): Remove.\n+\t* config/m32c/m32c.c (m32c_preferred_reload_class): Make static.\n+\tChange rclass argument and return types to reg_class_t. Use\n+\treg_class_subset_p instead of class_sizes.\n+\t(m32c_preferred_output_reload_class): Make static. Change rclass\n+\targument and return types to reg_class_t.\n+\t(TARGET_PREFERRED_RELOAD_CLASS,\n+\tTARGET_PREFERRED_OUTPUT_RELOAD_CLASS): Define.\n+\n 2011-08-16  Kai Tietz  <ktietz@redhat.com>\n \n \t* config/i386/mingw32.h (GOMP_SELF_SPEC): Add -pthread option."}, {"sha": "eb242e0018f846cb56507ab775fbd5b9d763a551", "filename": "gcc/config/m32c/m32c-protos.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b05933f5277f7a0f09670f205af31b082e0e4976/gcc%2Fconfig%2Fm32c%2Fm32c-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b05933f5277f7a0f09670f205af31b082e0e4976/gcc%2Fconfig%2Fm32c%2Fm32c-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c-protos.h?ref=b05933f5277f7a0f09670f205af31b082e0e4976", "patch": "@@ -66,8 +66,6 @@ int  m32c_limit_reload_class (enum machine_mode, int);\n int  m32c_modes_tieable_p (enum machine_mode, enum machine_mode);\n bool m32c_mov_ok (rtx *, enum machine_mode);\n char * m32c_output_compare (rtx, rtx *);\n-int  m32c_preferred_output_reload_class (rtx, int);\n-int  m32c_preferred_reload_class (rtx, int);\n int  m32c_prepare_move (rtx *, enum machine_mode);\n int  m32c_prepare_shift (rtx *, int, int);\n int  m32c_reg_ok_for_base_p (rtx, int);"}, {"sha": "a967e217135d3f802e2369f9b599389219da68a4", "filename": "gcc/config/m32c/m32c.c", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b05933f5277f7a0f09670f205af31b082e0e4976/gcc%2Fconfig%2Fm32c%2Fm32c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b05933f5277f7a0f09670f205af31b082e0e4976/gcc%2Fconfig%2Fm32c%2Fm32c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c.c?ref=b05933f5277f7a0f09670f205af31b082e0e4976", "patch": "@@ -729,12 +729,16 @@ m32c_regno_ok_for_base_p (int regno)\n \n #define DEBUG_RELOAD 0\n \n-/* Implements PREFERRED_RELOAD_CLASS.  In general, prefer general\n+/* Implements TARGET_PREFERRED_RELOAD_CLASS.  In general, prefer general\n    registers of the appropriate size.  */\n-int\n-m32c_preferred_reload_class (rtx x, int rclass)\n+\n+#undef TARGET_PREFERRED_RELOAD_CLASS\n+#define TARGET_PREFERRED_RELOAD_CLASS m32c_preferred_reload_class\n+\n+static reg_class_t\n+m32c_preferred_reload_class (rtx x, reg_class_t rclass)\n {\n-  int newclass = rclass;\n+  reg_class_t newclass = rclass;\n \n #if DEBUG_RELOAD\n   fprintf (stderr, \"\\npreferred_reload_class for %s is \",\n@@ -759,7 +763,7 @@ m32c_preferred_reload_class (rtx x, int rclass)\n   else if (newclass == QI_REGS && GET_MODE_SIZE (GET_MODE (x)) > 2)\n     newclass = SI_REGS;\n   else if (GET_MODE_SIZE (GET_MODE (x)) > 4\n-\t   && ~class_contents[rclass][0] & 0x000f)\n+\t   && ! reg_class_subset_p (R03_REGS, rclass))\n     newclass = DI_REGS;\n \n   rclass = reduce_class (rclass, newclass, rclass);\n@@ -779,9 +783,13 @@ m32c_preferred_reload_class (rtx x, int rclass)\n   return rclass;\n }\n \n-/* Implements PREFERRED_OUTPUT_RELOAD_CLASS.  */\n-int\n-m32c_preferred_output_reload_class (rtx x, int rclass)\n+/* Implements TARGET_PREFERRED_OUTPUT_RELOAD_CLASS.  */\n+\n+#undef TARGET_PREFERRED_OUTPUT_RELOAD_CLASS\n+#define TARGET_PREFERRED_OUTPUT_RELOAD_CLASS m32c_preferred_output_reload_class\n+\n+static reg_class_t\n+m32c_preferred_output_reload_class (rtx x, reg_class_t rclass)\n {\n   return m32c_preferred_reload_class (x, rclass);\n }"}, {"sha": "8239aa0a3ff89821b541ee55a3ff9ec5589c0fea", "filename": "gcc/config/m32c/m32c.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b05933f5277f7a0f09670f205af31b082e0e4976/gcc%2Fconfig%2Fm32c%2Fm32c.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b05933f5277f7a0f09670f205af31b082e0e4976/gcc%2Fconfig%2Fm32c%2Fm32c.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c.h?ref=b05933f5277f7a0f09670f205af31b082e0e4976", "patch": "@@ -417,8 +417,6 @@ enum reg_class\n #define REGNO_OK_FOR_BASE_P(NUM) m32c_regno_ok_for_base_p (NUM)\n #define REGNO_OK_FOR_INDEX_P(NUM) 0\n \n-#define PREFERRED_RELOAD_CLASS(X,CLASS) m32c_preferred_reload_class (X, CLASS)\n-#define PREFERRED_OUTPUT_RELOAD_CLASS(X,CLASS) m32c_preferred_output_reload_class (X, CLASS)\n #define LIMIT_RELOAD_CLASS(MODE,CLASS) \\\n   (enum reg_class) m32c_limit_reload_class (MODE, CLASS)\n "}]}