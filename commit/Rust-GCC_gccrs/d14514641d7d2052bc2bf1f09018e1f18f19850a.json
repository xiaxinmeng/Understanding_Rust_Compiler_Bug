{"sha": "d14514641d7d2052bc2bf1f09018e1f18f19850a", "node_id": "C_kwDOANBUbNoAKGQxNDUxNDY0MWQ3ZDIwNTJiYzJiZjFmMDkwMThlMWYxOGYxOTg1MGE", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-09-06T13:30:53Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-09-07T10:07:52Z"}, "message": "mark region also for USE predicate discovery\n\nThe following makes sure to mark the dominating region also for\nUSE predicate discovery, avoiding compute_control_dep_chain to\nwalk to unrelated areas, eating up walking budget.\n\n\t* gimple-predicate-analysis.cc (dfs_mark_dominating_region):\n\tAdjust to take the region exit source as argument.\n\t(uninit_analysis::init_from_phi_def): Adjust.\n\t(uninit_analysis::init_use_preds): Mark the dominating region\n\tbefore computing control dependences.", "tree": {"sha": "fcb14baa952a9eedb07387c048845564139638be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcb14baa952a9eedb07387c048845564139638be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d14514641d7d2052bc2bf1f09018e1f18f19850a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d14514641d7d2052bc2bf1f09018e1f18f19850a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d14514641d7d2052bc2bf1f09018e1f18f19850a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d14514641d7d2052bc2bf1f09018e1f18f19850a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6106132907f6bd01109f2616d20a87edecc6fc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6106132907f6bd01109f2616d20a87edecc6fc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6106132907f6bd01109f2616d20a87edecc6fc6"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "f81af2589cd79951d2bc44745738cc66dd455429", "filename": "gcc/gimple-predicate-analysis.cc", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d14514641d7d2052bc2bf1f09018e1f18f19850a/gcc%2Fgimple-predicate-analysis.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d14514641d7d2052bc2bf1f09018e1f18f19850a/gcc%2Fgimple-predicate-analysis.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-predicate-analysis.cc?ref=d14514641d7d2052bc2bf1f09018e1f18f19850a", "patch": "@@ -934,23 +934,23 @@ simple_control_dep_chain (vec<edge>& chain, basic_block from, basic_block to)\n }\n \n /* Perform a DFS walk on predecessor edges to mark the region denoted\n-   by the EXIT edge and DOM which dominates EXIT->src, including DOM.\n+   by the EXIT_SRC block and DOM which dominates EXIT_SRC, including DOM.\n    Blocks in the region are marked with FLAG and added to BBS.  BBS is\n    filled up to its capacity only after which the walk is terminated\n    and false is returned.  If the whole region was marked, true is returned.  */\n \n static bool\n-dfs_mark_dominating_region (edge exit, basic_block dom, int flag,\n+dfs_mark_dominating_region (basic_block exit_src, basic_block dom, int flag,\n \t\t\t    vec<basic_block> &bbs)\n {\n-  if (exit->src == dom || exit->src->flags & flag)\n+  if (exit_src == dom || exit_src->flags & flag)\n     return true;\n   if (!bbs.space (1))\n     return false;\n-  bbs.quick_push (exit->src);\n-  exit->src->flags |= flag;\n+  bbs.quick_push (exit_src);\n+  exit_src->flags |= flag;\n   auto_vec<edge_iterator, 20> stack (bbs.allocated () - bbs.length () + 1);\n-  stack.quick_push (ei_start (exit->src->preds));\n+  stack.quick_push (ei_start (exit_src->preds));\n   while (!stack.is_empty ())\n     {\n       /* Look at the edge on the top of the stack.  */\n@@ -1960,14 +1960,20 @@ uninit_analysis::init_use_preds (predicate &use_preds, basic_block def_bb,\n     }\n   while (1);\n \n+  auto_bb_flag in_region (cfun);\n+  auto_vec<basic_block, 20> region (MIN (n_basic_blocks_for_fn (cfun),\n+\t\t\t\t\t param_uninit_control_dep_attempts));\n+\n   /* Set DEP_CHAINS to the set of edges between CD_ROOT and USE_BB.\n      Each DEP_CHAINS element is a series of edges whose conditions\n      are logical conjunctions.  Together, the DEP_CHAINS vector is\n      used below to initialize an OR expression of the conjunctions.  */\n   unsigned num_chains = 0;\n   auto_vec<edge> dep_chains[MAX_NUM_CHAINS];\n \n-  if (!compute_control_dep_chain (cd_root, use_bb, dep_chains, &num_chains))\n+  if (!dfs_mark_dominating_region (use_bb, cd_root, in_region, region)\n+      || !compute_control_dep_chain (cd_root, use_bb, dep_chains, &num_chains,\n+\t\t\t\t     in_region))\n     {\n       /* If the info in dep_chains is not complete we need to use a\n \t conservative approximation for the use predicate.  */\n@@ -1979,6 +1985,10 @@ uninit_analysis::init_use_preds (predicate &use_preds, basic_block def_bb,\n       simple_control_dep_chain (dep_chains[0], cd_root, use_bb);\n     }\n \n+  /* Unmark the region.  */\n+  for (auto bb : region)\n+    bb->flags &= ~in_region;\n+\n   /* From the set of edges computed above initialize *THIS as the OR\n      condition under which the definition in DEF_BB is used in USE_BB.\n      Each OR subexpression is represented by one element of DEP_CHAINS,\n@@ -2061,7 +2071,8 @@ uninit_analysis::init_from_phi_def (gphi *phi)\n \t}\n     }\n   for (unsigned i = 0; i < nedges; i++)\n-    if (!dfs_mark_dominating_region (def_edges[i], cd_root, in_region, region))\n+    if (!dfs_mark_dominating_region (def_edges[i]->src, cd_root,\n+\t\t\t\t     in_region, region))\n       break;\n \n   unsigned num_chains = 0;"}]}