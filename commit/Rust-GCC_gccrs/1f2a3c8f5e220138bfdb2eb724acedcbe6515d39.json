{"sha": "1f2a3c8f5e220138bfdb2eb724acedcbe6515d39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWYyYTNjOGY1ZTIyMDEzOGJmZGIyZWI3MjRhY2VkY2JlNjUxNWQzOQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@airs.com", "date": "2005-11-06T05:34:38Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2005-11-06T05:34:38Z"}, "message": "re PR target/22432 (Wrong code generation using MMX intrinsics on amd64)\n\n./:\tPR target/22432\n\t* combine.c (apply_distributive_law): Don't distribute across a\n\tvector mode subreg.\ntestsuite/:\n\tPR target/22432\n\t* gcc.target/i386/pr22432.c: New test.\n\nFrom-SVN: r106555", "tree": {"sha": "3d8809ecbb8eb6e7c7e9c34c78163e49726b4c8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d8809ecbb8eb6e7c7e9c34c78163e49726b4c8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f2a3c8f5e220138bfdb2eb724acedcbe6515d39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f2a3c8f5e220138bfdb2eb724acedcbe6515d39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f2a3c8f5e220138bfdb2eb724acedcbe6515d39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f2a3c8f5e220138bfdb2eb724acedcbe6515d39/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d4a43a05fa45c6493f70ec6d494d1e07eda98763", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4a43a05fa45c6493f70ec6d494d1e07eda98763", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4a43a05fa45c6493f70ec6d494d1e07eda98763"}], "stats": {"total": 49, "additions": 41, "deletions": 8}, "files": [{"sha": "c752e61600e5c7953b18bb338c59fab10d26ffcf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f2a3c8f5e220138bfdb2eb724acedcbe6515d39/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f2a3c8f5e220138bfdb2eb724acedcbe6515d39/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f2a3c8f5e220138bfdb2eb724acedcbe6515d39", "patch": "@@ -1,3 +1,9 @@\n+2005-11-05  Ian Lance Taylor  <ian@airs.com>\n+\n+\tPR target/22432\n+\t* combine.c (apply_distributive_law): Don't distribute across a\n+\tvector mode subreg.\n+\n 2005-11-05  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* c-typeck.c, config/i386/netware.h, config/m32c/cond.md,"}, {"sha": "82d260dafbcd45ad9c909420fd6ac997991c809a", "filename": "gcc/combine.c", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f2a3c8f5e220138bfdb2eb724acedcbe6515d39/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f2a3c8f5e220138bfdb2eb724acedcbe6515d39/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=1f2a3c8f5e220138bfdb2eb724acedcbe6515d39", "patch": "@@ -8117,14 +8117,15 @@ apply_distributive_law (rtx x)\n       break;\n \n     case SUBREG:\n-      /* Non-paradoxical SUBREGs distributes over all operations, provided\n-\t the inner modes and byte offsets are the same, this is an extraction\n-\t of a low-order part, we don't convert an fp operation to int or\n-\t vice versa, and we would not be converting a single-word\n-\t operation into a multi-word operation.  The latter test is not\n-\t required, but it prevents generating unneeded multi-word operations.\n-\t Some of the previous tests are redundant given the latter test, but\n-\t are retained because they are required for correctness.\n+      /* Non-paradoxical SUBREGs distributes over all operations,\n+\t provided the inner modes and byte offsets are the same, this\n+\t is an extraction of a low-order part, we don't convert an fp\n+\t operation to int or vice versa, this is not a vector mode,\n+\t and we would not be converting a single-word operation into a\n+\t multi-word operation.  The latter test is not required, but\n+\t it prevents generating unneeded multi-word operations.  Some\n+\t of the previous tests are redundant given the latter test,\n+\t but are retained because they are required for correctness.\n \n \t We produce the result slightly differently in this case.  */\n \n@@ -8135,6 +8136,7 @@ apply_distributive_law (rtx x)\n \t      != GET_MODE_CLASS (GET_MODE (SUBREG_REG (lhs))))\n \t  || (GET_MODE_SIZE (GET_MODE (lhs))\n \t      > GET_MODE_SIZE (GET_MODE (SUBREG_REG (lhs))))\n+\t  || VECTOR_MODE_P (GET_MODE (lhs))\n \t  || GET_MODE_SIZE (GET_MODE (SUBREG_REG (lhs))) > UNITS_PER_WORD)\n \treturn x;\n "}, {"sha": "9fc72af22ba3fa2ae32ead815aebcc167a2c18d6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f2a3c8f5e220138bfdb2eb724acedcbe6515d39/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f2a3c8f5e220138bfdb2eb724acedcbe6515d39/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1f2a3c8f5e220138bfdb2eb724acedcbe6515d39", "patch": "@@ -1,3 +1,8 @@\n+2005-11-05  Ian Lance Taylor  <ian@airs.com>\n+\n+\tPR target/22432\n+\t* gcc.target/i386/pr22432.c: New test.\n+\n 2005-11-05  Richard Henderson  <rth@redhat.com>\n \n \t* gcc.target/alpha/asm-1.c: Move from gcc.dg/asm-5.c."}, {"sha": "86ae4b28f92d354160e1158f65cd50a8bf643831", "filename": "gcc/testsuite/gcc.target/i386/pr22432.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f2a3c8f5e220138bfdb2eb724acedcbe6515d39/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr22432.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f2a3c8f5e220138bfdb2eb724acedcbe6515d39/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr22432.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr22432.c?ref=1f2a3c8f5e220138bfdb2eb724acedcbe6515d39", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mmmx\" } */\n+/* { dg-final { scan-assembler-not \"paddb\" } } */\n+\n+typedef int v2si __attribute__ ((__vector_size__ (8)));\n+typedef short v4hi __attribute__ ((__vector_size__ (8)));\n+typedef char v8qi __attribute__ ((__vector_size__ (8)));\n+\n+int\n+foo (unsigned int *a, unsigned int *b)\n+{\n+  long long i, j, k;\n+\n+  i = (long long) __builtin_ia32_vec_init_v2si (*a, 0);\n+  j = (long long) __builtin_ia32_vec_init_v2si (*b, 0);\n+  i = (long long) __builtin_ia32_punpcklbw ((v8qi) i, (v8qi) 0ll);\n+  j = (long long) __builtin_ia32_punpcklbw ((v8qi) j, (v8qi) 0ll);\n+  k = (long long) __builtin_ia32_paddw ((v4hi) i, (v4hi) j);\n+  return __builtin_ia32_vec_ext_v2si ((v2si) k, 0);\n+}"}]}