{"sha": "25963ac44095e61cb7755aea38fcfa420783cf66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjU5NjNhYzQ0MDk1ZTYxY2I3NzU1YWVhMzhmY2ZhNDIwNzgzY2Y2Ng==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2011-08-24T13:24:07Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2011-08-24T13:24:07Z"}, "message": "Convert to Pmode if needed.\n\n2011-08-24  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/i386/i386.c (ix86_expand_builtin): Convert to Pmode if\n\tneeded.\n\nFrom-SVN: r178039", "tree": {"sha": "6554a1c6434fc20c1ea87d2bac95099b85ffc4bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6554a1c6434fc20c1ea87d2bac95099b85ffc4bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25963ac44095e61cb7755aea38fcfa420783cf66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25963ac44095e61cb7755aea38fcfa420783cf66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25963ac44095e61cb7755aea38fcfa420783cf66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25963ac44095e61cb7755aea38fcfa420783cf66/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "40885767dcb0f8225450ab93d001fdf800cf4205", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40885767dcb0f8225450ab93d001fdf800cf4205", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40885767dcb0f8225450ab93d001fdf800cf4205"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "cc47d1e76a91322b6f4a920f9d0b355a155cd291", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25963ac44095e61cb7755aea38fcfa420783cf66/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25963ac44095e61cb7755aea38fcfa420783cf66/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=25963ac44095e61cb7755aea38fcfa420783cf66", "patch": "@@ -1,3 +1,8 @@\n+2011-08-24  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/i386.c (ix86_expand_builtin): Convert to Pmode if\n+\tneeded.\n+\n 2011-08-24  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-data-ref.c (dr_analyze_indices): Avoid unsharing the"}, {"sha": "ce6fd80e11a2199b5671733f5e0d11dfbf2b7c1f", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25963ac44095e61cb7755aea38fcfa420783cf66/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25963ac44095e61cb7755aea38fcfa420783cf66/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=25963ac44095e61cb7755aea38fcfa420783cf66", "patch": "@@ -27880,6 +27880,8 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget ATTRIBUTE_UNUSED,\n       /* Force memory operand only with base register here.  But we\n \t don't want to do it on memory operand for other builtin\n \t functions.  */\n+      if (GET_MODE (op1) != Pmode)\n+\top1 = convert_to_mode (Pmode, op1, 1);\n       op1 = force_reg (Pmode, op1);\n       op1 = gen_rtx_MEM (mode1, op1);\n "}]}