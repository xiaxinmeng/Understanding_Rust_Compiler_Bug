{"sha": "8be4d02ba9f6e6e309dee3d2fa599d806a0d1ef6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJlNGQwMmJhOWY2ZTZlMzA5ZGVlM2QyZmE1OTlkODA2YTBkMWVmNg==", "commit": {"author": {"name": "Ville Voutilainen", "email": "ville.voutilainen@gmail.com", "date": "2019-03-26T12:07:26Z"}, "committer": {"name": "Ville Voutilainen", "email": "ville@gcc.gnu.org", "date": "2019-03-26T12:07:26Z"}, "message": "re PR libstdc++/89816 (std::variant move construction regressed since GCC 8.3)\n\nPR libstdc++/89816\n\nFix based on a suggestion by Antony Polukhin.\n* include/std/variant (__variant_construct): Capture a pointer\nto the storage and visit just one variant.\n\nFrom-SVN: r269940", "tree": {"sha": "d2e051624b926ab4e08cb70597ba754f8f6ca337", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2e051624b926ab4e08cb70597ba754f8f6ca337"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8be4d02ba9f6e6e309dee3d2fa599d806a0d1ef6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8be4d02ba9f6e6e309dee3d2fa599d806a0d1ef6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8be4d02ba9f6e6e309dee3d2fa599d806a0d1ef6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8be4d02ba9f6e6e309dee3d2fa599d806a0d1ef6/comments", "author": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f30d4934a90a6121674d882d391dc09d8fce190c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f30d4934a90a6121674d882d391dc09d8fce190c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f30d4934a90a6121674d882d391dc09d8fce190c"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "91d8dbc9a3e2a52fb81265c9d8ce0b833e77082a", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8be4d02ba9f6e6e309dee3d2fa599d806a0d1ef6/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8be4d02ba9f6e6e309dee3d2fa599d806a0d1ef6/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8be4d02ba9f6e6e309dee3d2fa599d806a0d1ef6", "patch": "@@ -1,3 +1,10 @@\n+2019-03-26  Ville Voutilainen  <ville.voutilainen@gmail.com>\n+\n+\tPR libstdc++/89816\n+\tFix based on a suggestion by Antony Polukhin.\n+\t* include/std/variant (__variant_construct): Capture a pointer\n+\tto the storage and visit just one variant.\n+\n 2019-03-22  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* doc/xml/manual/backwards_compatibility.xml: Remove link to"}, {"sha": "0984e13725a230268f7a3ea5eadc45094c6f9a09", "filename": "libstdc++-v3/include/std/variant", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8be4d02ba9f6e6e309dee3d2fa599d806a0d1ef6/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8be4d02ba9f6e6e309dee3d2fa599d806a0d1ef6/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant?ref=8be4d02ba9f6e6e309dee3d2fa599d806a0d1ef6", "patch": "@@ -426,18 +426,18 @@ namespace __variant\n     void __variant_construct(_Tp&& __lhs, _Up&& __rhs)\n     {\n       __lhs._M_index = __rhs._M_index;\n-      __do_visit([](auto&& __this_mem, auto&& __rhs_mem) mutable\n+      void* __storage = std::addressof(__lhs._M_u);\n+      __do_visit([__storage](auto&& __rhs_mem) mutable\n \t\t -> __detail::__variant::__variant_cookie\n         {\n-\t  using _Type = remove_reference_t<decltype(__this_mem)>;\n+\t  using _Type = remove_reference_t<decltype(__rhs_mem)>;\n \t  if constexpr (is_same_v<__remove_cvref_t<decltype(__rhs_mem)>,\n \t\t\t          remove_cv_t<_Type>>\n \t\t\t&& !is_same_v<_Type, __variant_cookie>)\n-\t    ::new ((void*)std::addressof(__this_mem))\n+\t    ::new (__storage)\n \t      _Type(std::forward<decltype(__rhs_mem)>(__rhs_mem));\n \t  return {};\n-\t}, __variant_cast<_Types...>(__lhs),\n-\t   __variant_cast<_Types...>(std::forward<decltype(__rhs)>(__rhs)));\n+\t}, __variant_cast<_Types...>(std::forward<decltype(__rhs)>(__rhs)));\n     }\n \n   // The following are (Copy|Move) (ctor|assign) layers for forwarding"}]}