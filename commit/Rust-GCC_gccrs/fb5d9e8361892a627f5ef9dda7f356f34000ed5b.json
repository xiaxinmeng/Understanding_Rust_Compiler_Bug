{"sha": "fb5d9e8361892a627f5ef9dda7f356f34000ed5b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI1ZDllODM2MTg5MmE2MjdmNWVmOWRkYTdmMzU2ZjM0MDAwZWQ1Yg==", "commit": {"author": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2021-03-09T15:57:21Z"}, "committer": {"name": "Vladimir N. Makarov", "email": "vmakarov@redhat.com", "date": "2021-03-09T16:10:29Z"}, "message": "[PR99454] LRA: Process separately 'g' and digital constraints > 9 in process_address_1\n\ngcc/ChangeLog:\n\n\tPR target/99454\n\t* lra-constraints.c (process_address_1): Process constraint 'g'\n\tseparately and digital constraints containing more one digit.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/99454\n\t* gcc.target/i386/pr99454.c: New.", "tree": {"sha": "f018fea60088833fc31510ebce546f487ac1285f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f018fea60088833fc31510ebce546f487ac1285f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb5d9e8361892a627f5ef9dda7f356f34000ed5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb5d9e8361892a627f5ef9dda7f356f34000ed5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb5d9e8361892a627f5ef9dda7f356f34000ed5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb5d9e8361892a627f5ef9dda7f356f34000ed5b/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f8be03500b85bf8f8598e9ebd508654eab14528", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f8be03500b85bf8f8598e9ebd508654eab14528", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f8be03500b85bf8f8598e9ebd508654eab14528"}], "stats": {"total": 56, "additions": 51, "deletions": 5}, "files": [{"sha": "05cb493852f43b26a5369bc30f1c0933408b1f47", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5d9e8361892a627f5ef9dda7f356f34000ed5b/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5d9e8361892a627f5ef9dda7f356f34000ed5b/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=fb5d9e8361892a627f5ef9dda7f356f34000ed5b", "patch": "@@ -3452,10 +3452,13 @@ process_address_1 (int nop, bool check_only_p,\n \n   constraint\n     = skip_contraint_modifiers (curr_static_id->operand[nop].constraint);\n-  if ('0' <= constraint[0] && constraint[0] <= '9')\n-    constraint\n-      = skip_contraint_modifiers (curr_static_id->operand\n-\t\t\t\t  [constraint[0] - '0'].constraint);\n+  if (IN_RANGE (constraint[0], '0', '9'))\n+    {\n+      char *end;\n+      unsigned long dup = strtoul (constraint, &end, 10);\n+      constraint\n+\t= skip_contraint_modifiers (curr_static_id->operand[dup].constraint);\n+    }\n   cn = lookup_constraint (constraint);\n   if (insn_extra_address_constraint (cn)\n       /* When we find an asm operand with an address constraint that\n@@ -3472,7 +3475,7 @@ process_address_1 (int nop, bool check_only_p,\n      i.e. bcst_mem_operand in i386 backend.  */\n   else if (MEM_P (mem)\n \t   && !(INSN_CODE (curr_insn) < 0\n-\t\t&& (cn == CONSTRAINT__UNKNOWN\n+\t\t&& ((cn == CONSTRAINT__UNKNOWN && *constraint != 'g')\n \t\t    || (get_constraint_type (cn) == CT_FIXED_FORM\n \t\t\t&& constraint_satisfied_p (op, cn)))))\n     decompose_mem_address (&ad, mem);"}, {"sha": "a59ba7dcbe0ba52884f195d791b7c65f4e9f5c8e", "filename": "gcc/testsuite/gcc.target/i386/pr99454.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb5d9e8361892a627f5ef9dda7f356f34000ed5b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr99454.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb5d9e8361892a627f5ef9dda7f356f34000ed5b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr99454.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr99454.c?ref=fb5d9e8361892a627f5ef9dda7f356f34000ed5b", "patch": "@@ -0,0 +1,43 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -w\" } */\n+\n+struct skb_shared_info {\n+  short gso_size;\n+};\n+\n+enum { NETDEV_TX_OK };\n+\n+struct iphdr {\n+  short tot_len;\n+  int daddr;\n+};\n+\n+int tg3_tso_bug();\n+int netdev_priv();\n+int skb_cow_head();\n+int tcp_hdrlen__builtin_expect();\n+struct iphdr *ip_hdr();\n+int _tg3_flag();\n+int tg3_tso_bug_gso_check();\n+\n+int\n+tg3_start_xmit() {\n+  int *tp = netdev_priv();\n+  int mss, tnapi;\n+  struct iphdr *iph;\n+  tnapi = mss = ((struct skb_shared_info *)0)->gso_size;\n+  if (mss) {\n+    int hdr_len;\n+    if (skb_cow_head())\n+      iph = ip_hdr();\n+    hdr_len = tcp_hdrlen__builtin_expect() && _tg3_flag();\n+    if (tg3_tso_bug_gso_check())\n+      return tg3_tso_bug(tp, tnapi);\n+    iph->tot_len = mss + hdr_len;\n+    if (_tg3_flag(tp) || tp)\n+      ;\n+    else\n+      asm(\"\" : : \"g\"(iph->daddr));\n+  }\n+  return 0;\n+}"}]}