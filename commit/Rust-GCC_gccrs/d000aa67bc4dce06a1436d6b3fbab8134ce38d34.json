{"sha": "d000aa67bc4dce06a1436d6b3fbab8134ce38d34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDAwMGFhNjdiYzRkY2UwNmExNDM2ZDZiM2ZiYWI4MTM0Y2UzOGQzNA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2010-09-26T22:30:48Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-09-26T22:30:48Z"}, "message": "re PR fortran/40569 (F2008: Support COMPILER_OPTIONS() / COMPILER_VERSION())\n\n2010-09-27  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/40569\n        PR fortran/40568\n        * intrinsic.h (gfc_simplify_compiler_options,\n        gfc_simplify_compiler_version): New prototypes.\n        * intrinsic.c (gfc_intrinsic_function_by_id,\n        make_from_module): New functions.\n        (gfc_find_function, gfc_find_subroutine, gfc_generic_intrinsic,\n        gfc_specific_intrinsic): Don't return module intrinsics.\n        (add_functions): Add compiler_options, compiler_version.\n        (gfc_intrinsic_func_interface): Also lookup symbol by ISYM ID.\n        * symbol.c (std_for_isocbinding_symbol): Add version check for\n        NAMED_FUNCTIONS.\n        * iso-fortran-env.def: Add compiler_options, compiler_version.\n        * iso-c-binding.def: Add c_sizeof.\n        * gfortran.h (gfc_intrinsic_sym): Add from_module:1.\n        (iso_c_binding_symbol, iso_fortran_env_symbol): Add NAMED_FUNCTIONS.\n        (gfc_intrinsic_function_by_id): New prototype.\n        * module.c (create_intrinsic_function): New function.\n        (import_iso_c_binding_module, use_iso_fortran_env_module): Use it.\n        * trans-types.c (init_c_interop_kinds): Add NAMED_FUNCTIONS.\n        * resolve.c (resolve_intrinsic): Try also to resolve intrinsics\n        by ISYM ID.\n        * simplify.c (gfc_simplify_compiler_options,\n        gfc_simplify_compiler_version): New functions.\n\n2010-09-27  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/40569\n        PR fortran/40568\n        * gfortran.dg/storage_size_2.f08: Fix test.\n        * gfortran.dg/c_sizeof_1.f90: Fix test.\n        * gfortran.dg/c_sizeof_2.f90: Update dg-error.\n        * gfortran.dg/c_sizeof_3.f90: New.\n        * gfortran.dg/c_sizeof_4.f90: New.\n        * gfortran.dg/iso_c_binding_compiler_1.f90: New.\n        * gfortran.dg/iso_c_binding_compiler_2.f90: New.\n\nFrom-SVN: r164639", "tree": {"sha": "f28e0b9963e89079003a4eeca7f1c08e9b8a5a35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f28e0b9963e89079003a4eeca7f1c08e9b8a5a35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d000aa67bc4dce06a1436d6b3fbab8134ce38d34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d000aa67bc4dce06a1436d6b3fbab8134ce38d34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d000aa67bc4dce06a1436d6b3fbab8134ce38d34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "414e8be2b09d9a50d39d8c6d48ebc0a95f6e2040", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/414e8be2b09d9a50d39d8c6d48ebc0a95f6e2040", "html_url": "https://github.com/Rust-GCC/gccrs/commit/414e8be2b09d9a50d39d8c6d48ebc0a95f6e2040"}], "stats": {"total": 344, "additions": 325, "deletions": 19}, "files": [{"sha": "b04f3c50419cb9904804910dbaae21db266e7746", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d000aa67bc4dce06a1436d6b3fbab8134ce38d34", "patch": "@@ -1,3 +1,30 @@\n+2010-09-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/40569\n+\tPR fortran/40568\n+\t* intrinsic.h (gfc_simplify_compiler_options,\n+\tgfc_simplify_compiler_version): New prototypes.\n+\t* intrinsic.c (gfc_intrinsic_function_by_id,\n+\tmake_from_module): New functions.\n+\t(gfc_find_function, gfc_find_subroutine, gfc_generic_intrinsic,\n+\tgfc_specific_intrinsic): Don't return module intrinsics.\n+\t(add_functions): Add compiler_options, compiler_version.\n+\t(gfc_intrinsic_func_interface): Also lookup symbol by ISYM ID.\n+\t* symbol.c (std_for_isocbinding_symbol): Add version check for\n+\tNAMED_FUNCTIONS.\n+\t* iso-fortran-env.def: Add compiler_options, compiler_version.\n+\t* iso-c-binding.def: Add c_sizeof.\n+\t* gfortran.h (gfc_intrinsic_sym): Add from_module:1.\n+\t(iso_c_binding_symbol, iso_fortran_env_symbol): Add NAMED_FUNCTIONS.\n+\t(gfc_intrinsic_function_by_id): New prototype.\n+\t* module.c (create_intrinsic_function): New function.\n+\t(import_iso_c_binding_module, use_iso_fortran_env_module): Use it.\n+\t* trans-types.c (init_c_interop_kinds): Add NAMED_FUNCTIONS.\n+\t* resolve.c (resolve_intrinsic): Try also to resolve intrinsics\n+\tby ISYM ID.\n+\t* simplify.c (gfc_simplify_compiler_options,\n+\tgfc_simplify_compiler_version): New functions.\n+\n 2010-09-26  Daniel Kraft  <d@domob.eu>\n \n \tPR fortran/45783"}, {"sha": "5fdd0d7adb4475c0848486cd969e108eb53ef122", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=d000aa67bc4dce06a1436d6b3fbab8134ce38d34", "patch": "@@ -343,6 +343,8 @@ enum gfc_isym_id\n   GFC_ISYM_CHMOD,\n   GFC_ISYM_CMPLX,\n   GFC_ISYM_COMMAND_ARGUMENT_COUNT,\n+  GFC_ISYM_COMPILER_OPTIONS,\n+  GFC_ISYM_COMPILER_VERSION,\n   GFC_ISYM_COMPLEX,\n   GFC_ISYM_CONJG,\n   GFC_ISYM_CONVERSION,\n@@ -614,14 +616,17 @@ gfc_reverse;\n \n #define NAMED_INTCST(a,b,c,d) a,\n #define NAMED_KINDARRAY(a,b,c,d) a,\n+#define NAMED_FUNCTION(a,b,c,d) a,\n typedef enum\n {\n   ISOFORTRANENV_INVALID = -1,\n #include \"iso-fortran-env.def\"\n   ISOFORTRANENV_LAST, ISOFORTRANENV_NUMBER = ISOFORTRANENV_LAST\n }\n iso_fortran_env_symbol;\n+#undef NAMED_INTCST\n #undef NAMED_KINDARRAY\n+#undef NAMED_FUNCTION\n \n #define NAMED_INTCST(a,b,c,d) a,\n #define NAMED_REALCST(a,b,c) a,\n@@ -631,6 +636,7 @@ iso_fortran_env_symbol;\n #define NAMED_CHARCST(a,b,c) a,\n #define DERIVED_TYPE(a,b,c) a,\n #define PROCEDURE(a,b) a,\n+#define NAMED_FUNCTION(a,b,c,d) a,\n typedef enum\n {\n   ISOCBINDING_INVALID = -1, \n@@ -647,6 +653,7 @@ iso_c_binding_symbol;\n #undef NAMED_CHARCST\n #undef DERIVED_TYPE\n #undef PROCEDURE\n+#undef NAMED_FUNCTION\n \n typedef enum\n {\n@@ -1645,7 +1652,8 @@ typedef struct gfc_intrinsic_sym\n   gfc_intrinsic_arg *formal;\n   gfc_typespec ts;\n   unsigned elemental:1, inquiry:1, transformational:1, pure:1, \n-    generic:1, specific:1, actual_ok:1, noreturn:1, conversion:1;\n+    generic:1, specific:1, actual_ok:1, noreturn:1, conversion:1,\n+    from_module:1;\n \n   int standard;\n \n@@ -2638,6 +2646,7 @@ bool gfc_is_intrinsic (gfc_symbol*, int, locus);\n int gfc_intrinsic_actual_ok (const char *, const bool);\n gfc_intrinsic_sym *gfc_find_function (const char *);\n gfc_intrinsic_sym *gfc_find_subroutine (const char *);\n+gfc_intrinsic_sym *gfc_intrinsic_function_by_id (gfc_isym_id);\n \n match gfc_intrinsic_func_interface (gfc_expr *, int);\n match gfc_intrinsic_sub_interface (gfc_code *, int);"}, {"sha": "625ff03331260bbf616e9a61043de2eb91273df4", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 56, "deletions": 7, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=d000aa67bc4dce06a1436d6b3fbab8134ce38d34", "patch": "@@ -814,6 +814,24 @@ find_sym (gfc_intrinsic_sym *start, int n, const char *name)\n }\n \n \n+gfc_intrinsic_sym *\n+gfc_intrinsic_function_by_id (gfc_isym_id id)\n+{\n+  gfc_intrinsic_sym *start = functions;\n+  int n = nfunc;\n+\n+  while (true)\n+    {\n+      gcc_assert (n > 0);\n+      if (id == start->id)\n+\treturn start;\n+\n+      start++;\n+      n--;\n+    }\n+}\n+\n+\n /* Given a name, find a function in the intrinsic function table.\n    Returns NULL if not found.  */\n \n@@ -823,10 +841,10 @@ gfc_find_function (const char *name)\n   gfc_intrinsic_sym *sym;\n \n   sym = find_sym (functions, nfunc, name);\n-  if (!sym)\n+  if (!sym || sym->from_module)\n     sym = find_sym (conversion, nconv, name);\n \n-  return sym;\n+  return (!sym || sym->from_module) ? NULL : sym;\n }\n \n \n@@ -836,7 +854,9 @@ gfc_find_function (const char *name)\n gfc_intrinsic_sym *\n gfc_find_subroutine (const char *name)\n {\n-  return find_sym (subroutines, nsub, name);\n+  gfc_intrinsic_sym *sym;\n+  sym = find_sym (subroutines, nsub, name);\n+  return (!sym || sym->from_module) ? NULL : sym;\n }\n \n \n@@ -849,7 +869,7 @@ gfc_generic_intrinsic (const char *name)\n   gfc_intrinsic_sym *sym;\n \n   sym = gfc_find_function (name);\n-  return (sym == NULL) ? 0 : sym->generic;\n+  return (!sym || sym->from_module) ? 0 : sym->generic;\n }\n \n \n@@ -862,7 +882,7 @@ gfc_specific_intrinsic (const char *name)\n   gfc_intrinsic_sym *sym;\n \n   sym = gfc_find_function (name);\n-  return (sym == NULL) ? 0 : sym->specific;\n+  return (!sym || sym->from_module) ? 0 : sym->specific;\n }\n \n \n@@ -1014,6 +1034,15 @@ make_noreturn (void)\n     next_sym[-1].noreturn = 1;\n }\n \n+\n+/* Mark current intrinsic as module intrinsic.  */\n+static void\n+make_from_module (void)\n+{\n+  if (sizing == SZ_NOTHING)\n+    next_sym[-1].from_module = 1;\n+}\n+\n /* Set the attr.value of the current procedure.  */\n \n static void\n@@ -2607,10 +2636,23 @@ add_functions (void)\n \t     x, BT_UNKNOWN, 0, REQUIRED);\n \n   make_generic (\"sizeof\", GFC_ISYM_SIZEOF, GFC_STD_GNU);\n-  \n+\n+  /* C_SIZEOF is part of ISO_C_BINDING.  */\n   add_sym_1 (\"c_sizeof\", GFC_ISYM_C_SIZEOF, CLASS_INQUIRY, ACTUAL_NO,\n \t     BT_INTEGER, ii, GFC_STD_F2008, gfc_check_c_sizeof, NULL, NULL,\n \t     x, BT_UNKNOWN, 0, REQUIRED);\n+  make_from_module();\n+\n+  /* COMPILER_OPTIONS and COMPILER_VERSION are part of ISO_FORTRAN_ENV.  */  \n+  add_sym_0 (\"compiler_options\", GFC_ISYM_COMPILER_OPTIONS, CLASS_IMPURE,\n+\t     ACTUAL_NO, BT_CHARACTER, 1, GFC_STD_F2008,\n+\t     NULL, gfc_simplify_compiler_options, NULL);\n+  make_from_module();\n+\n+  add_sym_0 (\"compiler_version\", GFC_ISYM_COMPILER_VERSION, CLASS_IMPURE,\n+\t     ACTUAL_NO, BT_CHARACTER, 1, GFC_STD_F2008,\n+\t     NULL, gfc_simplify_compiler_version, NULL);\n+  make_from_module();\n \n   add_sym_1 (\"spacing\", GFC_ISYM_SPACING, CLASS_ELEMENTAL, ACTUAL_NO, BT_REAL, dr, GFC_STD_F95,\n \t     gfc_check_x, gfc_simplify_spacing, gfc_resolve_spacing,\n@@ -4012,7 +4054,14 @@ gfc_intrinsic_func_interface (gfc_expr *expr, int error_flag)\n \n   name = expr->symtree->n.sym->name;\n \n-  isym = specific = gfc_find_function (name);\n+  if (expr->symtree->n.sym->intmod_sym_id)\n+    {\n+      int id = expr->symtree->n.sym->intmod_sym_id;\n+      isym = specific = gfc_intrinsic_function_by_id ((gfc_isym_id) id);\n+    }\n+  else\n+    isym = specific = gfc_find_function (name);\n+\n   if (isym == NULL)\n     {\n       if (!error_flag)"}, {"sha": "e9574e8a0e51fd40b953993157d02ac45eb7f128", "filename": "gcc/fortran/intrinsic.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ffortran%2Fintrinsic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ffortran%2Fintrinsic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.h?ref=d000aa67bc4dce06a1436d6b3fbab8134ce38d34", "patch": "@@ -246,6 +246,8 @@ gfc_expr *gfc_simplify_btest (gfc_expr *, gfc_expr *);\n gfc_expr *gfc_simplify_ceiling (gfc_expr *, gfc_expr *);\n gfc_expr *gfc_simplify_char (gfc_expr *, gfc_expr *);\n gfc_expr *gfc_simplify_cmplx (gfc_expr *, gfc_expr *, gfc_expr *);\n+gfc_expr *gfc_simplify_compiler_options (void);\n+gfc_expr *gfc_simplify_compiler_version (void);\n gfc_expr *gfc_simplify_complex (gfc_expr *, gfc_expr *);\n gfc_expr *gfc_simplify_conjg (gfc_expr *);\n gfc_expr *gfc_simplify_cos (gfc_expr *);"}, {"sha": "4cb7c2333d91cd2a4d079e19bfcaeceebb9824ad", "filename": "gcc/fortran/iso-c-binding.def", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ffortran%2Fiso-c-binding.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ffortran%2Fiso-c-binding.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fiso-c-binding.def?ref=d000aa67bc4dce06a1436d6b3fbab8134ce38d34", "patch": "@@ -39,6 +39,10 @@ along with GCC; see the file COPYING3.  If not see\n # define NAMED_CHARKNDCST(a,b,c) \n #endif\n \n+#ifndef NAMED_FUNCTION\n+# define NAMED_FUNCTION(a,b,c,d)\n+#endif\n+\n /* The arguments to NAMED_*CST are:\n      -- an internal name\n      -- the symbol name in the module, as seen by Fortran code\n@@ -162,6 +166,15 @@ PROCEDURE (ISOCBINDING_LOC, \"c_loc\")\n PROCEDURE (ISOCBINDING_FUNLOC, \"c_funloc\")\n PROCEDURE (ISOCBINDING_F_PROCPOINTER, \"c_f_procpointer\")\n \n+/* The arguments to NAMED_FUNCTIONS are:\n+     -- the ISYM\n+     -- the symbol name in the module, as seen by Fortran code\n+     -- the Fortran standard  */\n+\n+NAMED_FUNCTION (ISOCBINDING_C_SIZEOF, \"c_sizeof\", \\\n+                GFC_ISYM_C_SIZEOF, GFC_STD_F2008)\n+\n+\n #undef NAMED_INTCST\n #undef NAMED_REALCST\n #undef NAMED_CMPXCST\n@@ -170,3 +183,4 @@ PROCEDURE (ISOCBINDING_F_PROCPOINTER, \"c_f_procpointer\")\n #undef NAMED_CHARKNDCST\n #undef DERIVED_TYPE\n #undef PROCEDURE\n+#undef NAMED_FUNCTION"}, {"sha": "3586f0769264c8409f44d9cb5a2b6f1159cc5c8a", "filename": "gcc/fortran/iso-fortran-env.def", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ffortran%2Fiso-fortran-env.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ffortran%2Fiso-fortran-env.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fiso-fortran-env.def?ref=d000aa67bc4dce06a1436d6b3fbab8134ce38d34", "patch": "@@ -27,6 +27,9 @@ along with GCC; see the file COPYING3.  If not see\n # define NAMED_KINDARRAY(a,b,c,d)\n #endif\n \n+#ifndef NAMED_FUNCTION\n+# define NAMED_FUNCTION(a,b,c,d)\n+#endif\n \n /* The arguments to NAMED_INTCST are:\n      -- an internal name\n@@ -97,5 +100,17 @@ NAMED_KINDARRAY (ISOFORTRAN_LOGICAL_KINDS, \"logical_kinds\", \\\n NAMED_KINDARRAY (ISOFORTRAN_REAL_KINDS, \"real_kinds\", \\\n                  gfc_real_kinds, GFC_STD_F2008)\n \n+/* The arguments to NAMED_FUNCTIONS are:\n+     -- the ISYM\n+     -- the symbol name in the module, as seen by Fortran code\n+     -- the Fortran standard  */\n+\n+NAMED_FUNCTION (ISOFORTRAN_COMPILER_OPTIONS, \"compiler_options\", \\\n+                GFC_ISYM_COMPILER_OPTIONS, GFC_STD_F2008)\n+NAMED_FUNCTION (ISOFORTRAN_COMPILER_VERSION, \"compiler_version\", \\\n+                GFC_ISYM_COMPILER_VERSION, GFC_STD_F2008)\n+\n+\n #undef NAMED_INTCST\n #undef NAMED_KINDARRAY\n+#undef NAMED_FUNCTION"}, {"sha": "c90fe0d298fce91749be4c6a1749160caa38b1ca", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 90, "deletions": 5, "changes": 95, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=d000aa67bc4dce06a1436d6b3fbab8134ce38d34", "patch": "@@ -5207,6 +5207,38 @@ gfc_dump_module (const char *name, int dump_flag)\n }\n \n \n+static void\n+create_intrinsic_function (const char *name, gfc_isym_id id,\n+\t\t\t   const char *modname, intmod_id module)\n+{\n+  gfc_intrinsic_sym *isym;\n+  gfc_symtree *tmp_symtree;\n+  gfc_symbol *sym;\n+\n+  tmp_symtree = gfc_find_symtree (gfc_current_ns->sym_root, name);\n+  if (tmp_symtree)\n+    {\n+      if (strcmp (modname, tmp_symtree->n.sym->module) == 0)\n+        return;\n+      gfc_error (\"Symbol '%s' already declared\", name);\n+    }\n+\n+  gfc_get_sym_tree (name, gfc_current_ns, &tmp_symtree, false);\n+  sym = tmp_symtree->n.sym;\n+\n+  isym = gfc_intrinsic_function_by_id (id);\n+  gcc_assert (isym);\n+\n+  sym->attr.flavor = FL_PROCEDURE;\n+  sym->attr.intrinsic = 1;\n+\n+  sym->module = gfc_get_string (modname);\n+  sym->attr.use_assoc = 1;\n+  sym->from_intmod = module;\n+  sym->intmod_sym_id = id;\n+}\n+\n+\n /* Import the intrinsic ISO_C_BINDING module, generating symbols in\n    the current namespace for all named constants, pointer types, and\n    procedures in the module unless the only clause was used or a rename\n@@ -5252,14 +5284,45 @@ import_iso_c_binding_module (void)\n \t  {\n \t    u->found = 1;\n \t    found = true;\n-\t    generate_isocbinding_symbol (iso_c_module_name,\n-\t\t\t\t\t (iso_c_binding_symbol) i,\n-\t\t\t\t\t u->local_name);\n+\t    switch (i)\n+\t      {\n+#define NAMED_FUNCTION(a,b,c,d) \\\n+\t        case a: \\\n+\t\t  create_intrinsic_function (u->local_name[0] ? u->local_name \\\n+\t\t\t\t\t\t\t      : u->use_name, \\\n+\t\t\t\t\t     (gfc_isym_id) c, \\\n+                                             iso_c_module_name, \\\n+                                             INTMOD_ISO_C_BINDING); \\\n+\t\t  break;\n+#include \"iso-c-binding.def\"\n+#undef NAMED_FUNCTION\n+\n+\t\tdefault:\n+\t\t  generate_isocbinding_symbol (iso_c_module_name,\n+\t\t\t\t\t       (iso_c_binding_symbol) i,\n+\t\t\t\t\t       u->local_name[0] ? u->local_name\n+\t\t\t\t\t\t\t\t: u->use_name);\n+\t      }\n \t  }\n \n       if (!found && !only_flag)\n-\tgenerate_isocbinding_symbol (iso_c_module_name,\n-\t\t\t\t     (iso_c_binding_symbol) i, NULL);\n+\tswitch (i)\n+\t  {\n+#define NAMED_FUNCTION(a,b,c,d) \\\n+\t    case a: \\\n+\t      if ((gfc_option.allow_std & d) == 0) \\\n+\t\tcontinue; \\\n+\t      create_intrinsic_function (b, (gfc_isym_id) c, \\\n+\t\t\t\t\t iso_c_module_name, \\\n+\t\t\t\t\t INTMOD_ISO_C_BINDING); \\\n+\t\t  break;\n+#include \"iso-c-binding.def\"\n+#undef NAMED_FUNCTION\n+\n+\t    default:\n+\t      generate_isocbinding_symbol (iso_c_module_name,\n+\t\t\t\t\t   (iso_c_binding_symbol) i, NULL);\n+\t  }\n    }\n \n    for (u = gfc_rename_list; u; u = u->next)\n@@ -5367,6 +5430,9 @@ use_iso_fortran_env_module (void)\n #define NAMED_KINDARRAY(a,b,c,d) { a, b, 0, d },\n #include \"iso-fortran-env.def\"\n #undef NAMED_KINDARRAY\n+#define NAMED_FUNCTION(a,b,c,d) { a, b, c, d },\n+#include \"iso-fortran-env.def\"\n+#undef NAMED_FUNCTION\n     { ISOFORTRANENV_INVALID, NULL, -1234, 0 } };\n \n   i = 0;\n@@ -5448,6 +5514,16 @@ use_iso_fortran_env_module (void)\n #include \"iso-fortran-env.def\"\n #undef NAMED_KINDARRAY\n \n+#define NAMED_FUNCTION(a,b,c,d) \\\n+\t\tcase a:\n+#include \"iso-fortran-env.def\"\n+#undef NAMED_FUNCTION\n+\t\t  create_intrinsic_function (u->local_name[0] ? u->local_name\n+\t\t\t\t\t\t\t      : u->use_name,\n+\t\t\t\t\t     (gfc_isym_id) symbol[i].value, mod,\n+\t\t\t\t\t     INTMOD_ISO_FORTRAN_ENV);\n+\t\t  break;\n+\n \t\tdefault:\n \t\t  gcc_unreachable ();\n \t\t}\n@@ -5491,6 +5567,15 @@ use_iso_fortran_env_module (void)\n #include \"iso-fortran-env.def\"\n #undef NAMED_KINDARRAY\n \n+#define NAMED_FUNCTION(a,b,c,d) \\\n+\t\tcase a:\n+#include \"iso-fortran-env.def\"\n+#undef NAMED_FUNCTION\n+\t\t  create_intrinsic_function (symbol[i].name,\n+\t\t\t\t\t     (gfc_isym_id) symbol[i].value, mod,\n+\t\t\t\t\t     INTMOD_ISO_FORTRAN_ENV);\n+\t\t  break;\n+\n \t  default:\n \t    gcc_unreachable ();\n \t  }"}, {"sha": "4958cbde185641fc5c89dff3704dc9d2f479dc47", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=d000aa67bc4dce06a1436d6b3fbab8134ce38d34", "patch": "@@ -1396,7 +1396,7 @@ is_illegal_recursion (gfc_symbol* sym, gfc_namespace* context)\n static gfc_try\n resolve_intrinsic (gfc_symbol *sym, locus *loc)\n {\n-  gfc_intrinsic_sym* isym;\n+  gfc_intrinsic_sym* isym = NULL;\n   const char* symstd;\n \n   if (sym->formal)\n@@ -1407,7 +1407,12 @@ resolve_intrinsic (gfc_symbol *sym, locus *loc)\n      gfc_find_subroutine directly to check whether it is a function or\n      subroutine.  */\n \n-  if ((isym = gfc_find_function (sym->name)))\n+  if (sym->intmod_sym_id)\n+    isym = gfc_intrinsic_function_by_id ((gfc_isym_id) sym->intmod_sym_id);\n+  else\n+    isym = gfc_find_function (sym->name);\n+\n+  if (isym)\n     {\n       if (sym->ts.type != BT_UNKNOWN && gfc_option.warn_surprising\n \t  && !sym->attr.implicit_type)"}, {"sha": "8748ecfba8bbda0cca8e2f0f6fde23446f8d33e0", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=d000aa67bc4dce06a1436d6b3fbab8134ce38d34", "patch": "@@ -27,6 +27,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"intrinsic.h\"\n #include \"target-memory.h\"\n #include \"constructor.h\"\n+#include \"version.h\"  /* For version_string.  */\n \n \n gfc_expr gfc_bad_expr;\n@@ -6733,3 +6734,21 @@ gfc_convert_char_constant (gfc_expr *e, bt type ATTRIBUTE_UNUSED, int kind)\n   else\n     return NULL;\n }\n+\n+\n+gfc_expr *\n+gfc_simplify_compiler_options (void)\n+{\n+  /* FIXME: PR40569 - return the proper compiler arguments.  */\n+  return gfc_get_character_expr (gfc_default_character_kind,\n+                                &gfc_current_locus, \"\", 0);\n+}\n+\n+\n+gfc_expr *\n+gfc_simplify_compiler_version (void)\n+{\n+  return gfc_get_character_expr (gfc_default_character_kind,\n+                                &gfc_current_locus, version_string,\n+                                strlen (version_string));\n+}"}, {"sha": "cd07b63cacad6012f210fd97f25013253dc02e4d", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=d000aa67bc4dce06a1436d6b3fbab8134ce38d34", "patch": "@@ -4280,6 +4280,13 @@ std_for_isocbinding_symbol (int id)\n         return d;\n #include \"iso-c-binding.def\"\n #undef NAMED_INTCST\n+\n+#define NAMED_FUNCTION(a,b,c,d) \\\n+      case a:\\\n+        return d;\n+#include \"iso-c-binding.def\"\n+#undef NAMED_FUNCTION\n+\n        default:\n          return GFC_STD_F2003;\n     }"}, {"sha": "ebea9af69cc82b3500e52fabed574c9d26795e2a", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=d000aa67bc4dce06a1436d6b3fbab8134ce38d34", "patch": "@@ -333,6 +333,11 @@ void init_c_interop_kinds (void)\n   c_interop_kinds_table[a].f90_type = BT_PROCEDURE; \\\n   c_interop_kinds_table[a].value = 0;\n #include \"iso-c-binding.def\"\n+#define NAMED_FUNCTION(a,b,c,d) \\\n+  strncpy (c_interop_kinds_table[a].name, b, strlen(b) + 1); \\\n+  c_interop_kinds_table[a].f90_type = BT_PROCEDURE; \\\n+  c_interop_kinds_table[a].value = c;\n+#include \"iso-c-binding.def\"\n }\n \n "}, {"sha": "dc21e6456d4dc6c3793bc019be2017db50be5365", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d000aa67bc4dce06a1436d6b3fbab8134ce38d34", "patch": "@@ -1,3 +1,15 @@\n+2010-09-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/40569\n+\tPR fortran/40568\n+\t* gfortran.dg/storage_size_2.f08: Fix test.\n+\t* gfortran.dg/c_sizeof_1.f90: Fix test.\n+\t* gfortran.dg/c_sizeof_2.f90: Update dg-error.\n+\t* gfortran.dg/c_sizeof_3.f90: New.\n+\t* gfortran.dg/c_sizeof_4.f90: New.\n+\t* gfortran.dg/iso_c_binding_compiler_1.f90: New.\n+\t* gfortran.dg/iso_c_binding_compiler_2.f90: New.\n+\n 2010-09-26  Daniel Kraft  <d@domob.eu>\n \n \tPR fortran/45783"}, {"sha": "e0ac06f940e24c46de9709a8336005bcfb9ed51d", "filename": "gcc/testsuite/gfortran.dg/c_sizeof_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_sizeof_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_sizeof_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_sizeof_1.f90?ref=d000aa67bc4dce06a1436d6b3fbab8134ce38d34", "patch": "@@ -1,7 +1,7 @@\n ! { dg-do run }\n ! Support F2008's c_sizeof()\n !\n-use iso_c_binding, only: c_int, c_char, c_ptr, c_intptr_t, c_null_ptr\n+use iso_c_binding, only: c_int, c_char, c_ptr, c_intptr_t, c_null_ptr, c_sizeof\n \n integer(kind=c_int) :: i, j(10)\n character(kind=c_char,len=4),parameter :: str(1) = \"abcd\""}, {"sha": "e163797470fc3a95589cd9265c73940a28495953", "filename": "gcc/testsuite/gfortran.dg/c_sizeof_2.f90", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_sizeof_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_sizeof_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_sizeof_2.f90?ref=d000aa67bc4dce06a1436d6b3fbab8134ce38d34", "patch": "@@ -2,8 +2,8 @@\n ! { dg-options \"-std=f2003 -Wall -Wno-conversion\" }\n ! Support F2008's c_sizeof()\n !\n-USE ISO_C_BINDING\n+USE ISO_C_BINDING, only: C_SIZE_T, c_sizeof ! { dg-error \"new in Fortran 2008\" }\n integer(C_SIZE_T) :: i\n-i = c_sizeof(i)           ! { dg-warning \"Fortran 2008\" }\n+i = c_sizeof(i)           \n end\n "}, {"sha": "8a68cb94c304d3af40b47d0408947632b953eec7", "filename": "gcc/testsuite/gfortran.dg/c_sizeof_3.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_sizeof_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_sizeof_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_sizeof_3.f90?ref=d000aa67bc4dce06a1436d6b3fbab8134ce38d34", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do link }\n+!\n+! PR fortran/40568\n+!\n+! Module checks for C_SIZEOF (part of ISO_C_BINDING)\n+!\n+subroutine test\n+use iso_c_binding, only: foo => c_sizeof, bar=> c_sizeof, c_sizeof, c_int\n+integer(c_int) :: i\n+print *, c_sizeof(i), bar(i), foo(i)\n+end\n+\n+use iso_c_binding\n+implicit none\n+integer(c_int) :: i\n+print *, c_sizeof(i)\n+call test()\n+end"}, {"sha": "16172f05f5e987b0309e58b6fb18f5b2a6a567bf", "filename": "gcc/testsuite/gfortran.dg/c_sizeof_4.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_sizeof_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_sizeof_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fc_sizeof_4.f90?ref=d000aa67bc4dce06a1436d6b3fbab8134ce38d34", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do link }\n+!\n+! PR fortran/40568\n+!\n+! Module checks for C_SIZEOF (part of ISO_C_BINDING)\n+!\n+\n+implicit none\n+intrinsic c_sizeof ! { dg-error \"does not exist\" }\n+end"}, {"sha": "8eccb6b9e7a1112ae6b3b325c19f3facdb58b153", "filename": "gcc/testsuite/gfortran.dg/iso_c_binding_compiler_1.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ftestsuite%2Fgfortran.dg%2Fiso_c_binding_compiler_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ftestsuite%2Fgfortran.dg%2Fiso_c_binding_compiler_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fiso_c_binding_compiler_1.f90?ref=d000aa67bc4dce06a1436d6b3fbab8134ce38d34", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do link }\n+!\n+! PR fortran/40569\n+!\n+! Check compiler_version/compiler_options intrinsics\n+!\n+subroutine test()\n+  use iso_fortran_env, only: compiler_version\n+  print '(3a)', '>>',compiler_version(),'<<'\n+end\n+\n+use iso_fortran_env, foo => compiler_version, bar => compiler_version\n+  implicit none\n+  print *, foo()\n+  print *, bar()\n+  print '(3a)', '>',compiler_options(),'<'\n+  call test()\n+end"}, {"sha": "279cfe60e230c1d7e710b92d8329cf8fe8a9f358", "filename": "gcc/testsuite/gfortran.dg/iso_c_binding_compiler_2.f90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ftestsuite%2Fgfortran.dg%2Fiso_c_binding_compiler_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ftestsuite%2Fgfortran.dg%2Fiso_c_binding_compiler_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fiso_c_binding_compiler_2.f90?ref=d000aa67bc4dce06a1436d6b3fbab8134ce38d34", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do compile }\n+! { dg-options \"-std=f2003\" }\n+!\n+! PR fortran/40569\n+!\n+! Check compiler_version/compiler_options intrinsics\n+!\n+use iso_fortran_env, only:  compiler_options ! { dg-error \"is not in the selected standard\" }\n+use iso_fortran_env, only:  compiler_version ! { dg-error \"is not in the selected standard\" }\n+  implicit none\n+end"}, {"sha": "c18155e72bd03e2a871eb7f23f32190a32c5b294", "filename": "gcc/testsuite/gfortran.dg/storage_size_2.f08", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ftestsuite%2Fgfortran.dg%2Fstorage_size_2.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d000aa67bc4dce06a1436d6b3fbab8134ce38d34/gcc%2Ftestsuite%2Fgfortran.dg%2Fstorage_size_2.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstorage_size_2.f08?ref=d000aa67bc4dce06a1436d6b3fbab8134ce38d34", "patch": "@@ -4,7 +4,7 @@\n !\n ! Contributed by Janus Weil <janus@gcc.gnu.org>\n \n-use iso_c_binding, only: c_int\n+use iso_c_binding, only: c_int, c_sizeof\n \n type, bind(c) :: t \n   integer(c_int) :: j"}]}