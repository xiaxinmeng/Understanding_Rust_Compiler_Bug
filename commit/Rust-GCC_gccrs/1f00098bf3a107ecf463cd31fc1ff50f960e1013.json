{"sha": "1f00098bf3a107ecf463cd31fc1ff50f960e1013", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWYwMDA5OGJmM2ExMDdlY2Y0NjNjZDMxZmMxZmY1MGY5NjBlMTAxMw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2012-04-10T16:03:36Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2012-04-10T16:03:36Z"}, "message": "cgraph.h: Remove misledaing comment on ipa-ref.h.\n\n\t* cgraph.h: Remove misledaing comment on ipa-ref.h.\n\t(symtab_type): New enum.\n\t(symtab_node): New structure.\n\t(cgraph_node, varpool_node): Add symbol base type.\n\t(cgraph, varpool): New accestor functions.\n\t* cgraph.c (cgraph_create_node_1): Set symbol type.\n\t* varpool.c (varpool_node): Set symbol type.\n\nFrom-SVN: r186284", "tree": {"sha": "7f3b302f0d6eb4540bd850a0c5e0a38b29f73019", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f3b302f0d6eb4540bd850a0c5e0a38b29f73019"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f00098bf3a107ecf463cd31fc1ff50f960e1013", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f00098bf3a107ecf463cd31fc1ff50f960e1013", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f00098bf3a107ecf463cd31fc1ff50f960e1013", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f00098bf3a107ecf463cd31fc1ff50f960e1013/comments", "author": null, "committer": null, "parents": [{"sha": "b43645b85249fcae9071fc4bcc1e9b54c15b313f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b43645b85249fcae9071fc4bcc1e9b54c15b313f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b43645b85249fcae9071fc4bcc1e9b54c15b313f"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "d346e435a2480b7c22b817a81767a557504ecd8f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f00098bf3a107ecf463cd31fc1ff50f960e1013/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f00098bf3a107ecf463cd31fc1ff50f960e1013/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1f00098bf3a107ecf463cd31fc1ff50f960e1013", "patch": "@@ -1,3 +1,13 @@\n+2012-04-10  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cgraph.h: Remove misledaing comment on ipa-ref.h.\n+\t(symtab_type): New enum.\n+\t(symtab_node): New structure.\n+\t(cgraph_node, varpool_node): Add symbol base type.\n+\t(cgraph, varpool): New accestor functions.\n+\t* cgraph.c (cgraph_create_node_1): Set symbol type.\n+\t* varpool.c (varpool_node): Set symbol type.\n+\n 2012-04-10  Ulrich Weigand  <ulrich.weigand@linaro.org>\n \t    Richard Sandiford  <rdsandiford@googlemail.com>\n "}, {"sha": "61a8e235fe30690844e43265f3588217f183c722", "filename": "gcc/cgraph.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f00098bf3a107ecf463cd31fc1ff50f960e1013/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f00098bf3a107ecf463cd31fc1ff50f960e1013/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=1f00098bf3a107ecf463cd31fc1ff50f960e1013", "patch": "@@ -473,6 +473,7 @@ cgraph_create_node_1 (void)\n {\n   struct cgraph_node *node = cgraph_allocate_node ();\n \n+  node->symbol.type = SYMTAB_FUNCTION;\n   node->next = cgraph_nodes;\n   node->order = cgraph_order++;\n   if (cgraph_nodes)"}, {"sha": "8740fba7c4731d83254802344e2dfc7be24a7940", "filename": "gcc/cgraph.h", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f00098bf3a107ecf463cd31fc1ff50f960e1013/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f00098bf3a107ecf463cd31fc1ff50f960e1013/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=1f00098bf3a107ecf463cd31fc1ff50f960e1013", "patch": "@@ -27,7 +27,23 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree.h\"\n #include \"basic-block.h\"\n #include \"function.h\"\n-#include \"ipa-ref.h\"\t/* FIXME: inappropriate dependency of cgraph on IPA.  */\n+#include \"ipa-ref.h\"\n+\n+/* Symbol table consists of functions and variables.\n+   TODO: add labels, constant pool and aliases.  */\n+enum symtab_type\n+{\n+  SYMTAB_FUNCTION,\n+  SYMTAB_VARIABLE\n+};\n+\n+/* Base of all entries in the symbol table.\n+   The symtab_node is inherited by cgraph and varpol nodes.  */\n+struct GTY(()) symtab_node\n+{\n+  /* Type of the symbol.  */\n+  enum symtab_type type;\n+};\n \n enum availability\n {\n@@ -150,6 +166,7 @@ struct GTY(()) cgraph_clone_info\n    Each function decl has assigned cgraph_node listing callees and callers.  */\n \n struct GTY((chain_next (\"%h.next\"), chain_prev (\"%h.previous\"))) cgraph_node {\n+  struct symtab_node symbol;\n   tree decl;\n   struct cgraph_edge *callees;\n   struct cgraph_edge *callers;\n@@ -387,6 +404,7 @@ DEF_VEC_ALLOC_P(cgraph_edge_p,heap);\n    Each static variable decl has assigned varpool_node.  */\n \n struct GTY((chain_next (\"%h.next\"), chain_prev (\"%h.prev\"))) varpool_node {\n+  struct symtab_node symbol;\n   tree decl;\n   /* For aliases points to declaration DECL is alias of.  */\n   tree alias_of;\n@@ -689,6 +707,23 @@ void varpool_add_new_variable (tree);\n #define FOR_EACH_STATIC_VARIABLE(node) \\\n    for ((node) = varpool_nodes_queue; (node); (node) = (node)->next_needed)\n \n+/* Return callgraph node for given symbol and check it is a function. */\n+static inline struct cgraph_node *\n+cgraph (struct symtab_node *node)\n+{\n+  gcc_checking_assert (node->type == SYMTAB_FUNCTION);\n+  return (struct cgraph_node *)node;\n+}\n+\n+/* Return varpool node for given symbol and check it is a variable.  */\n+static inline struct varpool_node *\n+varpool (struct symtab_node *node)\n+{\n+  gcc_checking_assert (node->type == SYMTAB_FUNCTION);\n+  return (struct varpool_node *)node;\n+}\n+\n+\n /* Return first reachable static variable with initializer.  */\n static inline struct varpool_node *\n varpool_first_static_initializer (void)"}, {"sha": "043de4c607b88738f5dd67ff0cd4bd84203e6d4b", "filename": "gcc/varpool.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f00098bf3a107ecf463cd31fc1ff50f960e1013/gcc%2Fvarpool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f00098bf3a107ecf463cd31fc1ff50f960e1013/gcc%2Fvarpool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarpool.c?ref=1f00098bf3a107ecf463cd31fc1ff50f960e1013", "patch": "@@ -142,6 +142,7 @@ varpool_node (tree decl)\n   if (*slot)\n     return *slot;\n   node = ggc_alloc_cleared_varpool_node ();\n+  node->symbol.type = SYMTAB_VARIABLE;\n   node->decl = decl;\n   node->order = cgraph_order++;\n   node->next = varpool_nodes;"}]}