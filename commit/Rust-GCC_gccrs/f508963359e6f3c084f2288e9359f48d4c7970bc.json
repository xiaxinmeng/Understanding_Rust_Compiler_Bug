{"sha": "f508963359e6f3c084f2288e9359f48d4c7970bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjUwODk2MzM1OWU2ZjNjMDg0ZjIyODhlOTM1OWY0OGQ0Yzc5NzBiYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-10-05T12:43:12Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-10-05T12:43:12Z"}, "message": "(LIB_SPEC): Add support for -mwindows.\n\nAlways pass -lkernel32.\n(LIBGCC_SPEC): Don't delete.\n(STARTFILE_SPEC): Remove always-true conditionalization.\n(LONG_DOUBLE_TYPE_SIZE): Use default.\n\nFrom-SVN: r12906", "tree": {"sha": "d87cdbee9525c6904ea1914eaf4e3f8d01f174c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d87cdbee9525c6904ea1914eaf4e3f8d01f174c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f508963359e6f3c084f2288e9359f48d4c7970bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f508963359e6f3c084f2288e9359f48d4c7970bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f508963359e6f3c084f2288e9359f48d4c7970bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f508963359e6f3c084f2288e9359f48d4c7970bc/comments", "author": null, "committer": null, "parents": [{"sha": "69830683fdc8cc1a6b801cb9942570819a17ceee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69830683fdc8cc1a6b801cb9942570819a17ceee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69830683fdc8cc1a6b801cb9942570819a17ceee"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "d1f8186b481398ae8f13a099122d6cdd590a1892", "filename": "gcc/config/i386/cygwin32.h", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f508963359e6f3c084f2288e9359f48d4c7970bc/gcc%2Fconfig%2Fi386%2Fcygwin32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f508963359e6f3c084f2288e9359f48d4c7970bc/gcc%2Fconfig%2Fi386%2Fcygwin32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin32.h?ref=f508963359e6f3c084f2288e9359f48d4c7970bc", "patch": "@@ -41,27 +41,27 @@ Boston, MA 02111-1307, USA. */\n   -D__cdecl=__attribute__((__cdecl__)) \\\n   -Asystem(winnt) -Acpu(i386) -Amachine(i386)\"\n \n-/* We have to dynamic link to get to the system dlls,\n-   and I've put all of libc and libm and the unix stuff into\n-   cygwin.dll, the import library is called 'libcygwin.a' */\n+/* We have to dynamic link to get to the system DLLs.  All of libc, libm and\n+   the Unix stuff is in cygwin.dll.  The import library is called\n+   'libcygwin.a'.  For Windows applications, include more libraries, but\n+   always include kernel32.  We'd like to specific subsystem windows to\n+   ld, but that doesn't work just yet.  */\n \n #undef LIB_SPEC\n-#define LIB_SPEC \"-lcygwin\"\n+#define LIB_SPEC \"-lcygwin %{mwindows:-luser32 -lgdi32 -lcomdlg32} -lkernel32\"\n \n-/* No need for libgcc, it's in the shared library. */\n-#undef LIBGCC_SPEC\n-#define LIBGCC_SPEC \"\"\n+/* Normally, -lgcc is not needed since everything in it is in the DLL, but we\n+   want to allow things to be added to it when installing new versions of\n+   GCC without making a new CYGWIN.DLL, so we leave it.  */\n \n #undef STARTFILE_SPEC\n-#define STARTFILE_SPEC \"%{!:crt0%O%s}\"\n+#define STARTFILE_SPEC \"crt0%O%s\"\n \n #define SIZE_TYPE \"unsigned int\"\n #define PTRDIFF_TYPE \"int\"\n #define WCHAR_UNSIGNED 1\n #define WCHAR_TYPE_SIZE 16\n #define WCHAR_TYPE \"short unsigned int\"\n-#undef LONG_DOUBLE_TYPE_SIZE\n-#define LONG_DOUBLE_TYPE_SIZE 64\n #define HAVE_ATEXIT 1\n \n #undef EXTRA_SECTIONS"}]}