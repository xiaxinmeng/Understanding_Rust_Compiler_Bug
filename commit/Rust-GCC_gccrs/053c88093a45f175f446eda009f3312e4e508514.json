{"sha": "053c88093a45f175f446eda009f3312e4e508514", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDUzYzg4MDkzYTQ1ZjE3NWY0NDZlZGEwMDlmMzMxMmU0ZTUwODUxNA==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2020-07-02T12:30:50Z"}, "committer": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2020-07-02T12:30:50Z"}, "message": "ipa-sra: Prevent constructing debug info from wrong argument\n\nThe mechanism generating debug info for removed parameters did not\nadjust index of the argument in the call statement to take into\naccount extra arguments IPA-SRA might have produced when splitting a\nstrucutre.  This patch addresses that omission and stops gdb from\nshowing incorrect value for the removed parameter and says \"value\noptimized out\" instead.  The guality testcase will end up as\nUNSUPPORTED in the results which is how Richi told me on IRC we deal\nwith this.\n\nIt is possible to generate debug info to actually show the value of\nthe removed parameter but so far my approaches to do just that seem\ntoocontroversial\n(https://gcc.gnu.org/pipermail/gcc-patches/2020-May/546705.html), so\nbefore I come up with something better I'd like to push this to master\nand the gcc-10 branch in time for the GCC 10.2 release.\n\ngcc/ChangeLog:\n\n2020-07-01  Martin Jambor  <mjambor@suse.cz>\n\n\tPR debug/95343\n\t* ipa-param-manipulation.c (ipa_param_adjustments::modify_call): Adjust\n\targument index if necessary.\n\ngcc/testsuite/ChangeLog:\n\n2020-07-01  Martin Jambor  <mjambor@suse.cz>\n\n\tPR debug/95343\n\t* gcc.dg/guality/pr95343.c: New test.", "tree": {"sha": "abe0b8e0c0bcd95507a10bdafee3ebc0cbfbd2e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/abe0b8e0c0bcd95507a10bdafee3ebc0cbfbd2e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/053c88093a45f175f446eda009f3312e4e508514", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/053c88093a45f175f446eda009f3312e4e508514", "html_url": "https://github.com/Rust-GCC/gccrs/commit/053c88093a45f175f446eda009f3312e4e508514", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/053c88093a45f175f446eda009f3312e4e508514/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ac9258cca8030745d3c0b8f63186f0adf0ebc27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ac9258cca8030745d3c0b8f63186f0adf0ebc27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ac9258cca8030745d3c0b8f63186f0adf0ebc27"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "5fc0de56556215ed9b81d082cd9dec27bbf3b5b3", "filename": "gcc/ipa-param-manipulation.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/053c88093a45f175f446eda009f3312e4e508514/gcc%2Fipa-param-manipulation.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/053c88093a45f175f446eda009f3312e4e508514/gcc%2Fipa-param-manipulation.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-param-manipulation.c?ref=053c88093a45f175f446eda009f3312e4e508514", "patch": "@@ -790,7 +790,11 @@ ipa_param_adjustments::modify_call (gcall *stmt,\n \t  if (!is_gimple_reg (old_parm) || kept[i])\n \t    continue;\n \t  tree origin = DECL_ORIGIN (old_parm);\n-\t  tree arg = gimple_call_arg (stmt, i);\n+\t  tree arg;\n+\t  if (transitive_remapping)\n+\t    arg = gimple_call_arg (stmt, index_map[i]);\n+\t  else\n+\t    arg = gimple_call_arg (stmt, i);\n \n \t  if (!useless_type_conversion_p (TREE_TYPE (origin), TREE_TYPE (arg)))\n \t    {"}, {"sha": "a3e57decda862bcb20b261f910fdbedd328df8ae", "filename": "gcc/testsuite/gcc.dg/guality/pr95343.c", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/053c88093a45f175f446eda009f3312e4e508514/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr95343.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/053c88093a45f175f446eda009f3312e4e508514/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr95343.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fpr95343.c?ref=053c88093a45f175f446eda009f3312e4e508514", "patch": "@@ -0,0 +1,45 @@\n+/* { dg-do run } */\n+/* { dg-options \"-g -fno-ipa-icf\" } */\n+\n+volatile int v;\n+\n+int __attribute__((noipa))\n+get_val0 (void)  {return 0;}\n+int __attribute__((noipa))\n+get_val2 (void)  {return 2;}\n+\n+struct S\n+{\n+  int a, b, c;\n+};\n+\n+static int __attribute__((noinline))\n+bar (struct S s, int x, int y, int z, int i)\n+{\n+  int r;\n+  v = s.a + s.b;\t\t/* { dg-final { gdb-test . \"i+1\" \"3\" } } */\n+  return r;\n+}\n+\n+static int __attribute__((noinline))\n+foo (struct S s, int i)\n+{\n+  int r;\n+  r = bar (s, 3, 4, 5, i);\n+  return r;\n+}\n+\n+\n+int\n+main (void)\n+{\n+  struct S s;\n+  int i;\n+  i = get_val2 ();\n+  s.a = get_val0 ();\n+  s.b = get_val0 ();\n+  s.c = get_val0 ();\n+  int r = foo (s, i);\n+  v = r + i;\n+  return 0;\n+}"}]}