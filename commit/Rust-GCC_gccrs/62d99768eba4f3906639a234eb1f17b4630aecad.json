{"sha": "62d99768eba4f3906639a234eb1f17b4630aecad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJkOTk3NjhlYmE0ZjM5MDY2MzlhMjM0ZWIxZjE3YjQ2MzBhZWNhZA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2004-03-09T08:26:14Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2004-03-09T08:26:14Z"}, "message": "re PR c++/14432 (Built-ins lead to conflict even if no header file included)\n\n\tPR c++/14432\n\t* name-lookup.c (supplement_binding): Ignore functions that are\n\tmarked DECL_ANTICIPATED.\n\n\tPR c++/14432\n\t* g++.dg/parse/builtin2.C: New test.\n\nFrom-SVN: r79160", "tree": {"sha": "81908ffe911816861e54657dcd277cbabb315762", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81908ffe911816861e54657dcd277cbabb315762"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62d99768eba4f3906639a234eb1f17b4630aecad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62d99768eba4f3906639a234eb1f17b4630aecad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62d99768eba4f3906639a234eb1f17b4630aecad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62d99768eba4f3906639a234eb1f17b4630aecad/comments", "author": null, "committer": null, "parents": [{"sha": "58ec3cc5c0c441e0e8c49c029be9e25dcb1d853d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58ec3cc5c0c441e0e8c49c029be9e25dcb1d853d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58ec3cc5c0c441e0e8c49c029be9e25dcb1d853d"}], "stats": {"total": 37, "additions": 30, "deletions": 7}, "files": [{"sha": "2f684b4c1fe12e4717207c6e723d855a923b1324", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62d99768eba4f3906639a234eb1f17b4630aecad/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62d99768eba4f3906639a234eb1f17b4630aecad/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=62d99768eba4f3906639a234eb1f17b4630aecad", "patch": "@@ -1,3 +1,9 @@\n+2004-03-09  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/14432\n+\t* name-lookup.c (supplement_binding): Ignore functions that are\n+\tmarked DECL_ANTICIPATED.\n+\n 2004-03-08  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/14401"}, {"sha": "ce101de168c4ffe559d9c7812988a355bf1da9ce", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62d99768eba4f3906639a234eb1f17b4630aecad/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62d99768eba4f3906639a234eb1f17b4630aecad/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=62d99768eba4f3906639a234eb1f17b4630aecad", "patch": "@@ -439,13 +439,20 @@ supplement_binding (cxx_binding *binding, tree decl)\n   if (TREE_CODE (decl) == TYPE_DECL && DECL_ARTIFICIAL (decl))\n     /* The new name is the type name.  */\n     binding->type = decl;\n-  else if (!bval || bval == error_mark_node)\n-    /* VALUE is null when push_class_level_binding moves an inherited\n-       type-binding out of the way to make room for a new value binding.\n-       It is an error_mark_node when DECL's name has been used in a\n-       non-class scope prior declaration.  In that case, we should have\n-       already issued a diagnostic; for graceful error recovery purpose,\n-       pretend this was the intended declaration for that name.  */\n+  else if (/* BVAL is null when push_class_level_binding moves an\n+\t      inherited type-binding out of the way to make room for a\n+\t      new value binding.  */\n+\t   !bval \n+\t   /* BVAL is error_mark_node when DECL's name has been used\n+\t      in a non-class scope prior declaration.  In that case,\n+\t      we should have already issued a diagnostic; for graceful\n+\t      error recovery purpose, pretend this was the intended\n+\t      declaration for that name.  */\n+\t   || bval == error_mark_node\n+\t   /* If BVAL is a built-in that has not yet been declared,\n+\t      pretend it is not there at all.  */\n+\t   || (TREE_CODE (bval) == FUNCTION_DECL\n+\t       && DECL_ANTICIPATED (bval)))\n     binding->value = decl;\n   else if (TREE_CODE (bval) == TYPE_DECL && DECL_ARTIFICIAL (bval))\n     {"}, {"sha": "8e55c0e3ab44c5916c247170f4817bae3d22911f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62d99768eba4f3906639a234eb1f17b4630aecad/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62d99768eba4f3906639a234eb1f17b4630aecad/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=62d99768eba4f3906639a234eb1f17b4630aecad", "patch": "@@ -1,3 +1,8 @@\n+2004-03-09  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/14432\n+\t* g++.dg/parse/builtin2.C: New test.\n+\n 2004-03-08  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/14401"}, {"sha": "c524ea68416bfd4916a8fbac4bdc2891cdbf3bda", "filename": "gcc/testsuite/g++.dg/parse/builtin2.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62d99768eba4f3906639a234eb1f17b4630aecad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbuiltin2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62d99768eba4f3906639a234eb1f17b4630aecad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbuiltin2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbuiltin2.C?ref=62d99768eba4f3906639a234eb1f17b4630aecad", "patch": "@@ -0,0 +1,5 @@\n+// PR c++/14432\n+// { dg-options \"\" }\n+\n+struct Y {}; \n+Y y1; "}]}