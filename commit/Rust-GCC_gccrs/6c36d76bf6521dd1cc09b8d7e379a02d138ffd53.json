{"sha": "6c36d76bf6521dd1cc09b8d7e379a02d138ffd53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMzNmQ3NmJmNjUyMWRkMWNjMDliOGQ3ZTM3OWEwMmQxMzhmZmQ1Mw==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-10-23T18:14:31Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-10-23T18:14:31Z"}, "message": "c-common.c (warn_div_by_zero): New.\n\n\t* c-common.c (warn_div_by_zero): New.\n\t* c-common.h (warn_div_by_zero): New.\n\t* c-decl.c (c_decode_option): Take it on the command line.\n \t* c-typeck.c (build_binary_op): Warn about division by zero.\n\t* doc/invoke.texi: Document the new command line option, fix\n\tdocumentation of -Wmultichar.\n \t* testsuite/gcc.dg/divbyzero.c: New tests.\n \t* testsuite/gcc.dg/noncompile/20010524-1.c: Update.\n\nFrom-SVN: r46439", "tree": {"sha": "a86518d1f2373ba547d08bd0867d006b5db75f24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a86518d1f2373ba547d08bd0867d006b5db75f24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c36d76bf6521dd1cc09b8d7e379a02d138ffd53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c36d76bf6521dd1cc09b8d7e379a02d138ffd53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c36d76bf6521dd1cc09b8d7e379a02d138ffd53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c36d76bf6521dd1cc09b8d7e379a02d138ffd53/comments", "author": null, "committer": null, "parents": [{"sha": "28a8851e654560d565e7270812ea1b2e1c33b14d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28a8851e654560d565e7270812ea1b2e1c33b14d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28a8851e654560d565e7270812ea1b2e1c33b14d"}], "stats": {"total": 76, "additions": 68, "deletions": 8}, "files": [{"sha": "a3b17b2c4e04c259a8e03966be49502c1794c85d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c36d76bf6521dd1cc09b8d7e379a02d138ffd53/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c36d76bf6521dd1cc09b8d7e379a02d138ffd53/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c36d76bf6521dd1cc09b8d7e379a02d138ffd53", "patch": "@@ -1,3 +1,14 @@\n+2001-10-22  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* c-common.c (warn_div_by_zero): New.\n+\t* c-common.h (warn_div_by_zero): New.\n+\t* c-decl.c (c_decode_option): Take it on the command line.\n+ \t* c-typeck.c (build_binary_op): Warn about division by zero.\n+\t* doc/invoke.texi: Document the new command line option, fix\n+\tdocumentation of -Wmultichar.\n+ \t* testsuite/gcc.dg/divbyzero.c: New tests.\n+ \t* testsuite/gcc.dg/noncompile/20010524-1.c: Update.\n+\n Tue Oct 23 15:30:23 CEST 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.c (ix86_expand_int_movcc): Cleanup; use expand_simple_*op."}, {"sha": "bc81a1a3a01b5b56d31de945bfc861cc77b850cf", "filename": "gcc/c-common.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c36d76bf6521dd1cc09b8d7e379a02d138ffd53/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c36d76bf6521dd1cc09b8d7e379a02d138ffd53/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=6c36d76bf6521dd1cc09b8d7e379a02d138ffd53", "patch": "@@ -194,6 +194,9 @@ int flag_short_wchar;\n \n int warn_sequence_point;\n \n+/* Nonzero means to warn about compile-time division by zero.  */\n+int warn_div_by_zero = 1;\n+\n /* The elements of `ridpointers' are identifier nodes for the reserved\n    type names and storage classes.  It is indexed by a RID_... value.  */\n tree *ridpointers;"}, {"sha": "0d45693531f3837698f6de951d1aab90fce26804", "filename": "gcc/c-common.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c36d76bf6521dd1cc09b8d7e379a02d138ffd53/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c36d76bf6521dd1cc09b8d7e379a02d138ffd53/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=6c36d76bf6521dd1cc09b8d7e379a02d138ffd53", "patch": "@@ -401,6 +401,9 @@ extern int warn_missing_format_attribute;\n \n extern int warn_pointer_arith;\n \n+/* Nonzero means to warn about compile-time division by zero.  */\n+extern int warn_div_by_zero;\n+\n /* Nonzero means do some things the same way PCC does.  */\n \n extern int flag_traditional;"}, {"sha": "ad724f5de48b893b1d1d08d63e7a827585dd2b4a", "filename": "gcc/c-decl.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c36d76bf6521dd1cc09b8d7e379a02d138ffd53/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c36d76bf6521dd1cc09b8d7e379a02d138ffd53/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=6c36d76bf6521dd1cc09b8d7e379a02d138ffd53", "patch": "@@ -750,6 +750,10 @@ c_decode_option (argc, argv)\n     warn_multichar = 1;\n   else if (!strcmp (p, \"-Wno-multichar\"))\n     warn_multichar = 0;\n+  else if (!strcmp (p, \"-Wdiv-by-zero\"))\n+    warn_div_by_zero = 1;\n+  else if (!strcmp (p, \"-Wno-div-by-zero\"))\n+    warn_div_by_zero = 0;\n   else if (!strcmp (p, \"-Wunknown-pragmas\"))\n     /* Set to greater than 1, so that even unknown pragmas in system\n        headers will be warned about.  */"}, {"sha": "5dac4774f57d8be813547667f6c456b3e4bdb09a", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c36d76bf6521dd1cc09b8d7e379a02d138ffd53/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c36d76bf6521dd1cc09b8d7e379a02d138ffd53/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=6c36d76bf6521dd1cc09b8d7e379a02d138ffd53", "patch": "@@ -1973,6 +1973,11 @@ build_binary_op (code, orig_op0, orig_op1, convert_p)\n     case FLOOR_DIV_EXPR:\n     case ROUND_DIV_EXPR:\n     case EXACT_DIV_EXPR:\n+      /* Floating point division by zero is a legitimate way to obtain\n+\t infinities and NaNs.  */\n+      if (warn_div_by_zero && skip_evaluation == 0 && integer_zerop (op1))\n+\twarning (\"division by zero\");\n+\n       if ((code0 == INTEGER_TYPE || code0 == REAL_TYPE\n \t   || code0 == COMPLEX_TYPE)\n \t  && (code1 == INTEGER_TYPE || code1 == REAL_TYPE\n@@ -2026,6 +2031,9 @@ build_binary_op (code, orig_op0, orig_op1, convert_p)\n \n     case TRUNC_MOD_EXPR:\n     case FLOOR_MOD_EXPR:\n+      if (warn_div_by_zero && skip_evaluation == 0 && integer_zerop (op1))\n+\twarning (\"division by zero\");\n+\n       if (code0 == INTEGER_TYPE && code1 == INTEGER_TYPE)\n \t{\n \t  /* Although it would be tempting to shorten always here, that loses"}, {"sha": "75b183cefa63eb0327b3184439c20560d638eb27", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c36d76bf6521dd1cc09b8d7e379a02d138ffd53/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c36d76bf6521dd1cc09b8d7e379a02d138ffd53/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=6c36d76bf6521dd1cc09b8d7e379a02d138ffd53", "patch": "@@ -208,7 +208,7 @@ in the following sections.\n -fsyntax-only  -pedantic  -pedantic-errors @gol\n -w  -W  -Wall  -Waggregate-return @gol\n -Wcast-align  -Wcast-qual  -Wchar-subscripts  -Wcomment @gol\n--Wconversion  -Wdisabled-optimization  -Werror @gol\n+-Wconversion  -Wdisabled-optimization  -Wdiv-by-zero  -Werror @gol\n -Wfloat-equal  -Wformat  -Wformat=2 @gol\n -Wformat-nonliteral  -Wformat-security @gol\n -Wimplicit  -Wimplicit-int  @gol\n@@ -1868,12 +1868,6 @@ int a[2][2] = @{ 0, 1, 2, 3 @};\n int b[2][2] = @{ @{ 0, 1 @}, @{ 2, 3 @} @};\n @end smallexample\n \n-@item -Wmultichar\n-@opindex Wmultichar\n-Warn if a multicharacter constant (@samp{'FOOF'}) is used.  Usually they\n-indicate a typo in the user's code, as they have implementation-defined\n-values, and should not be used in portable code.\n-\n @item -Wparentheses\n @opindex Wparentheses\n Warn if parentheses are omitted in certain contexts, such\n@@ -2129,6 +2123,22 @@ warnings about constructions that some users consider questionable, and\n that are easy to avoid (or modify to prevent the warning), even in\n conjunction with macros.\n \n+@item -Wdiv-by-zero\n+@opindex Wno-div-by-zero\n+@opindex Wdiv-by-zero\n+Warn about compile-time integer division by zero.  This is default.  To\n+inhibit the warning messages, use @option{-Wno-div-by-zero}.  Floating\n+point division by zero is not warned about, as it can be a legitimate\n+way of obtaining infinities and NaNs.\n+\n+@item -Wmultichar\n+@opindex Wno-multichar\n+@opindex Wmultichar\n+Warn if a multicharacter constant (@samp{'FOOF'}) is used.  This is\n+default.  To inhibit the warning messages, use @option{-Wno-multichar}.\n+Usually they indicate a typo in the user's code, as they have\n+implementation-defined values, and should not be used in portable code.\n+\n @item -Wsystem-headers\n @opindex Wsystem-headers\n @cindex warnings from system headers"}, {"sha": "607aa12d568674ddca1b7eac6a6bac250e1fad10", "filename": "gcc/testsuite/gcc.dg/divbyzero.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c36d76bf6521dd1cc09b8d7e379a02d138ffd53/gcc%2Ftestsuite%2Fgcc.dg%2Fdivbyzero.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c36d76bf6521dd1cc09b8d7e379a02d138ffd53/gcc%2Ftestsuite%2Fgcc.dg%2Fdivbyzero.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdivbyzero.c?ref=6c36d76bf6521dd1cc09b8d7e379a02d138ffd53", "patch": "@@ -0,0 +1,21 @@\n+/* Copyright (C) 2001 Free Software Foundation, Inc.  */\n+\n+/* { dg-do compile } */\n+\n+/* Source: Neil Booth, Oct 22 2001.  PR 150 - warn about division by\n+   zero.  */\n+\n+#define ZERO (4 - 6 + 2)\n+\n+int main (int argc, char *argv[])\n+{\n+  int w = argc % ZERO;\t\t/* { dg-warning \"division by zero\" } */\n+  int x = argc / 0;\t\t/* { dg-warning \"division by zero\" } */\n+  int y = argc / ZERO;\t\t/* { dg-warning \"division by zero\" } */\n+\n+  double z = 0.0 / 0.0\t;\t/* { dg-bogus \"division by zero\" } */\n+  w = (ZERO ? y / ZERO : x);\t/* { dg-bogus \"division by zero\" } */\n+  x = (ZERO ? argc % ZERO: x);  /* { dg-bogus \"division by zero\" } */\n+\n+  return 0;\n+}"}, {"sha": "95c5db15d357e4383a724b1ac4d16417c6d17e55", "filename": "gcc/testsuite/gcc.dg/noncompile/20010524-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c36d76bf6521dd1cc09b8d7e379a02d138ffd53/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F20010524-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c36d76bf6521dd1cc09b8d7e379a02d138ffd53/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F20010524-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F20010524-1.c?ref=6c36d76bf6521dd1cc09b8d7e379a02d138ffd53", "patch": "@@ -1,2 +1,2 @@\n int i = 7 / 0; /* { dg-error \"not constant\" } */\n-\n+\t/* { dg-warning \"division by zero\" \"div by zero\" { target *-*-* } 1 } */"}]}