{"sha": "5ce1ee7fdd558b1bb5f02f84cbc435acf8184c9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNlMWVlN2ZkZDU1OGIxYmI1ZjAyZjg0Y2JjNDM1YWNmODE4NGM5Yg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2011-04-14T11:54:30Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2011-04-14T11:54:30Z"}, "message": "tree-vect-stmts.c (vectorizable_load): Allocate and free dr_chain within the per-copy loop.\n\ngcc/\n\t* tree-vect-stmts.c (vectorizable_load): Allocate and free dr_chain\n\twithin the per-copy loop.\n\nFrom-SVN: r172422", "tree": {"sha": "b71a2da6bf826c44d0ffe09bd7c48e495a212e53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b71a2da6bf826c44d0ffe09bd7c48e495a212e53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ce1ee7fdd558b1bb5f02f84cbc435acf8184c9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ce1ee7fdd558b1bb5f02f84cbc435acf8184c9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ce1ee7fdd558b1bb5f02f84cbc435acf8184c9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ce1ee7fdd558b1bb5f02f84cbc435acf8184c9b/comments", "author": null, "committer": null, "parents": [{"sha": "6438fe334cf36158cc9ca407f6cbb102ae5de4fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6438fe334cf36158cc9ca407f6cbb102ae5de4fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6438fe334cf36158cc9ca407f6cbb102ae5de4fa"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "572b6affd33caa82336f1d7c02d38890a1e25753", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ce1ee7fdd558b1bb5f02f84cbc435acf8184c9b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ce1ee7fdd558b1bb5f02f84cbc435acf8184c9b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5ce1ee7fdd558b1bb5f02f84cbc435acf8184c9b", "patch": "@@ -1,3 +1,8 @@\n+2011-04-14  Richard Sandiford  <richard.sandiford@linaro.org>\n+\n+\t* tree-vect-stmts.c (vectorizable_load): Allocate and free dr_chain\n+\twithin the per-copy loop.\n+\n 2011-04-14  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* tree-vect-stmts.c (vectorizable_load): Print the number of copies"}, {"sha": "eeb922377a8ab3499eb8319014ad103ffd3a43a2", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ce1ee7fdd558b1bb5f02f84cbc435acf8184c9b/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ce1ee7fdd558b1bb5f02f84cbc435acf8184c9b/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=5ce1ee7fdd558b1bb5f02f84cbc435acf8184c9b", "patch": "@@ -3961,8 +3961,6 @@ vectorizable_load (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n     \t}\n       else\n \tvec_num = group_size;\n-\n-      dr_chain = VEC_alloc (tree, heap, vec_num);\n     }\n   else\n     {\n@@ -4116,6 +4114,9 @@ vectorizable_load (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n         dataref_ptr =\n \t\tbump_vector_ptr (dataref_ptr, ptr_incr, gsi, stmt, NULL_TREE);\n \n+      if (strided_load || slp_perm)\n+\tdr_chain = VEC_alloc (tree, heap, vec_num);\n+\n       for (i = 0; i < vec_num; i++)\n \t{\n \t  if (i > 0)\n@@ -4325,8 +4326,6 @@ vectorizable_load (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n \t        return false;\n \n \t      *vec_stmt = STMT_VINFO_VEC_STMT (stmt_info);\n-              VEC_free (tree, heap, dr_chain);\n-\t      dr_chain = VEC_alloc (tree, heap, group_size);\n \t    }\n           else\n \t    {\n@@ -4337,11 +4336,10 @@ vectorizable_load (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n \t      prev_stmt_info = vinfo_for_stmt (new_stmt);\n \t    }\n         }\n+      if (dr_chain)\n+\tVEC_free (tree, heap, dr_chain);\n     }\n \n-  if (dr_chain)\n-    VEC_free (tree, heap, dr_chain);\n-\n   return true;\n }\n "}]}