{"sha": "c17975d81aaed49ff759c20c68b31304a6953d58", "node_id": "C_kwDOANBUbNoAKGMxNzk3NWQ4MWFhZWQ0OWZmNzU5YzIwYzY4YjMxMzA0YTY5NTNkNTg", "commit": {"author": {"name": "Eugene Rozenfeld", "email": "erozen@microsoft.com", "date": "2022-01-19T00:03:19Z"}, "committer": {"name": "Eugene Rozenfeld", "email": "erozen@microsoft.com", "date": "2022-02-01T23:20:11Z"}, "message": "AutoFDO: don't set param_early_inliner_max_iterations to 10.\n\nparam_early_inliner_max_iterations specifies the maximum number\nof nested indirect inlining iterations performed by early inliner.\nNormally, the default value is 1.\n\nFor AutoFDO this parameter was also used as the number of iteration for\nits indirect call promotion loop and the default value was set to 10.\nWhile it makes sense to have 10 in the indirect call promotion loop\n(we want to make the IR match the profiled binary before actual annotation)\nthere is no reason to have a special default value for the\nregular early inliner.\n\nThis change removes the special AutoFDO default value setting for\nparam_early_inliner_max_iterations while keeping 10 as the number of\niterations for the AutoFDO indirect call promotion loop.\n\nThis change improves a simple fibonacci benchmark in AutoFDO mode\nby 15% on x86_64-pc-linux-gnu.\n\nTested on x86_64-pc-linux-gnu.\n\ngcc/ChangeLog:\n\t* auto-profile.cc (auto_profile): Hard-code the number of iterations (10).\n\ngcc/ChangeLog:\n\t* opts.cc (common_handle_option): Don't set param_early_inliner_max_iterations\n\tto 10 for AutoFDO.", "tree": {"sha": "b0489af3e49878955d23fa457e5812ecda19285b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0489af3e49878955d23fa457e5812ecda19285b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c17975d81aaed49ff759c20c68b31304a6953d58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c17975d81aaed49ff759c20c68b31304a6953d58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c17975d81aaed49ff759c20c68b31304a6953d58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c17975d81aaed49ff759c20c68b31304a6953d58/comments", "author": {"login": "erozenfeld", "id": 10624223, "node_id": "MDQ6VXNlcjEwNjI0MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/10624223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erozenfeld", "html_url": "https://github.com/erozenfeld", "followers_url": "https://api.github.com/users/erozenfeld/followers", "following_url": "https://api.github.com/users/erozenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/erozenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/erozenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erozenfeld/subscriptions", "organizations_url": "https://api.github.com/users/erozenfeld/orgs", "repos_url": "https://api.github.com/users/erozenfeld/repos", "events_url": "https://api.github.com/users/erozenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/erozenfeld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erozenfeld", "id": 10624223, "node_id": "MDQ6VXNlcjEwNjI0MjIz", "avatar_url": "https://avatars.githubusercontent.com/u/10624223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erozenfeld", "html_url": "https://github.com/erozenfeld", "followers_url": "https://api.github.com/users/erozenfeld/followers", "following_url": "https://api.github.com/users/erozenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/erozenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/erozenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erozenfeld/subscriptions", "organizations_url": "https://api.github.com/users/erozenfeld/orgs", "repos_url": "https://api.github.com/users/erozenfeld/repos", "events_url": "https://api.github.com/users/erozenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/erozenfeld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bc732eba9a7dcf2e948c27814b37d30e0a47542", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bc732eba9a7dcf2e948c27814b37d30e0a47542", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bc732eba9a7dcf2e948c27814b37d30e0a47542"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "c7cee639c85ada51dc2392fe676a45b72cf423af", "filename": "gcc/auto-profile.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c17975d81aaed49ff759c20c68b31304a6953d58/gcc%2Fauto-profile.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c17975d81aaed49ff759c20c68b31304a6953d58/gcc%2Fauto-profile.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fauto-profile.cc?ref=c17975d81aaed49ff759c20c68b31304a6953d58", "patch": "@@ -1644,8 +1644,7 @@ auto_profile (void)\n        function before annotation, so the profile inside bar@loc_foo2\n        will be useful.  */\n     autofdo::stmt_set promoted_stmts;\n-    for (int i = 0; i < opt_for_fn (node->decl,\n-\t\t\t\t    param_early_inliner_max_iterations); i++)\n+    for (int i = 0; i < 10; i++)\n       {\n         if (!flag_value_profile_transformations\n             || !autofdo::afdo_vpt_for_early_inline (&promoted_stmts))"}, {"sha": "6e2ee821c4440184d167015293a2cea16fdb2f7b", "filename": "gcc/opts.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c17975d81aaed49ff759c20c68b31304a6953d58/gcc%2Fopts.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c17975d81aaed49ff759c20c68b31304a6953d58/gcc%2Fopts.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.cc?ref=c17975d81aaed49ff759c20c68b31304a6953d58", "patch": "@@ -2895,8 +2895,6 @@ common_handle_option (struct gcc_options *opts,\n     case OPT_fauto_profile:\n       enable_fdo_optimizations (opts, opts_set, value);\n       SET_OPTION_IF_UNSET (opts, opts_set, flag_profile_correction, value);\n-      SET_OPTION_IF_UNSET (opts, opts_set,\n-\t\t\t   param_early_inliner_max_iterations, 10);\n       break;\n \n     case OPT_fprofile_generate_:"}]}