{"sha": "04598eb03b1b44c4fc3c253841a7672066835ed9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ1OThlYjAzYjFiNDRjNGZjM2MyNTM4NDFhNzY3MjA2NjgzNWVkOQ==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-01-15T13:01:59Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-05-06T07:51:21Z"}, "message": "[Ada] Remove excessive conditions in iterations across components\n\ngcc/ada/\n\n\t* exp_ch3.adb (Expand_Freeze_Array_Type): Remove excessive\n\tcondition.\n\t(Expand_N_Object_Declaration): Likewise.\n\t(Build_Equivalent_Aggregate): Likewise.\n\t(Initialization_Warning): Likewise; change another excessive\n\tcondition into assertion.\n\t* freeze.adb (Freeze_Entity): Remove excessive condition.", "tree": {"sha": "916208a2a3b8a851e5e6dadf5baa967500ffe593", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/916208a2a3b8a851e5e6dadf5baa967500ffe593"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04598eb03b1b44c4fc3c253841a7672066835ed9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04598eb03b1b44c4fc3c253841a7672066835ed9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04598eb03b1b44c4fc3c253841a7672066835ed9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04598eb03b1b44c4fc3c253841a7672066835ed9/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2f94a898f16d790e21533a6e0d345c23dd379a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2f94a898f16d790e21533a6e0d345c23dd379a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2f94a898f16d790e21533a6e0d345c23dd379a0"}], "stats": {"total": 25, "additions": 9, "deletions": 16}, "files": [{"sha": "6d7d178f35aa5fc5a96415cf1f78d9291d279d8d", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04598eb03b1b44c4fc3c253841a7672066835ed9/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04598eb03b1b44c4fc3c253841a7672066835ed9/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=04598eb03b1b44c4fc3c253841a7672066835ed9", "patch": "@@ -5477,9 +5477,7 @@ package body Exp_Ch3 is\n               First_Component (Base_Type (Underlying_Type (Etype (Typ))));\n             Comp := First_Component (Typ);\n             while Present (Comp) loop\n-               if Ekind (Comp) = E_Component\n-                 and then Chars (Comp) = Chars (Old_Comp)\n-               then\n+               if Chars (Comp) = Chars (Old_Comp) then\n                   Set_Discriminant_Checking_Func\n                     (Comp, Discriminant_Checking_Func (Old_Comp));\n                end if;\n@@ -6153,8 +6151,7 @@ package body Exp_Ch3 is\n \n             Comp := First_Component (Full_Type);\n             while Present (Comp) loop\n-               if Ekind (Comp) = E_Component\n-                 and then Present (Expression (Parent (Comp)))\n+               if Present (Expression (Parent (Comp)))\n                  and then\n                    not Is_OK_Static_Expression (Expression (Parent (Comp)))\n                then\n@@ -6186,9 +6183,7 @@ package body Exp_Ch3 is\n \n             Comp := First_Component (Full_Type);\n             while Present (Comp) loop\n-               if Ekind (Comp) = E_Component\n-                 and then Present (Expression (Parent (Comp)))\n-               then\n+               if Present (Expression (Parent (Comp))) then\n                   Append_To (Component_Associations (Aggr),\n                     Make_Component_Association (Loc,\n                       Choices    => New_List (New_Occurrence_Of (Comp, Loc)),\n@@ -9001,11 +8996,10 @@ package body Exp_Ch3 is\n                   begin\n                      Comp := First_Component (E);\n                      while Present (Comp) loop\n-                        if Ekind (Comp) = E_Discriminant\n-                          or else\n-                            (Nkind (Parent (Comp)) = N_Component_Declaration\n-                              and then Present (Expression (Parent (Comp))))\n-                        then\n+                        pragma Assert\n+                          (Nkind (Parent (Comp)) = N_Component_Declaration);\n+\n+                        if Present (Expression (Parent (Comp))) then\n                            Warning_Needed := True;\n                            exit;\n                         end if;"}, {"sha": "ce5de2194e153f3004b718d0973169509625d620", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04598eb03b1b44c4fc3c253841a7672066835ed9/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04598eb03b1b44c4fc3c253841a7672066835ed9/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=04598eb03b1b44c4fc3c253841a7672066835ed9", "patch": "@@ -6847,10 +6847,9 @@ package body Freeze is\n             begin\n                Comp := First_Component (E);\n                while Present (Comp) loop\n-                  Typ  := Etype (Comp);\n+                  Typ := Etype (Comp);\n \n-                  if Ekind (Comp) = E_Component\n-                    and then Is_Access_Type (Typ)\n+                  if Is_Access_Type (Typ)\n                     and then Scope (Typ) /= E\n                     and then Base_Type (Designated_Type (Typ)) = E\n                     and then Is_Itype (Designated_Type (Typ))"}]}