{"sha": "603b6b8892e3b2ee00de59e728d0f1937306358b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAzYjZiODg5MmUzYjJlZTAwZGU1OWU3MjhkMGYxOTM3MzA2MzU4Yg==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2004-12-23T20:21:08Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2004-12-23T20:21:08Z"}, "message": "genrecog.c (did_you_mean_codes): New.\n\n* genrecog.c (did_you_mean_codes): New.\n(compute_predicate_codes): Fail unmatched codes.\n\nFrom-SVN: r92565", "tree": {"sha": "45fdcfc18f2bc2f5830cf0b3c5a4ce6d0ff79394", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45fdcfc18f2bc2f5830cf0b3c5a4ce6d0ff79394"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/603b6b8892e3b2ee00de59e728d0f1937306358b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/603b6b8892e3b2ee00de59e728d0f1937306358b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/603b6b8892e3b2ee00de59e728d0f1937306358b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/603b6b8892e3b2ee00de59e728d0f1937306358b/comments", "author": null, "committer": null, "parents": [{"sha": "aae4a2774745b0d7b1007478b7f0624d2f053602", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aae4a2774745b0d7b1007478b7f0624d2f053602", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aae4a2774745b0d7b1007478b7f0624d2f053602"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "9f8e174b30da5ffea76188be56f8484872840a55", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/603b6b8892e3b2ee00de59e728d0f1937306358b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/603b6b8892e3b2ee00de59e728d0f1937306358b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=603b6b8892e3b2ee00de59e728d0f1937306358b", "patch": "@@ -1,3 +1,8 @@\n+2004-12-23  DJ Delorie  <dj@redhat.com>\n+\n+\t* genrecog.c (did_you_mean_codes): New.\n+\t(compute_predicate_codes): Fail unmatched codes.\n+\n 2004-12-23  Eric Christopher  <echristo@redhat.com>\n \n \t* config/mips/mips.h (TARGET_CPU_CPP_BUILTINS): Add"}, {"sha": "2936f80afc7a45189954a60e7e5351f1bf3f1a55", "filename": "gcc/genrecog.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/603b6b8892e3b2ee00de59e728d0f1937306358b/gcc%2Fgenrecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/603b6b8892e3b2ee00de59e728d0f1937306358b/gcc%2Fgenrecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenrecog.c?ref=603b6b8892e3b2ee00de59e728d0f1937306358b", "patch": "@@ -226,6 +226,9 @@ static int error_count;\n #define TRISTATE_NOT(a)\t\t\t\t\\\n   ((a) == I ? I : !(a))\n \n+/* 0 means no warning about that code yet, 1 means warned.  */\n+static char did_you_mean_codes[NUM_RTX_CODE];\n+\n /* Recursively calculate the set of rtx codes accepted by the\n    predicate expression EXP, writing the result to CODES.  */\n static void\n@@ -285,14 +288,30 @@ compute_predicate_codes (rtx exp, char codes[NUM_RTX_CODE])\n \twhile ((code = scan_comma_elt (&next_code)) != 0)\n \t  {\n \t    size_t n = next_code - code;\n+\t    int found_it = 0;\n \t    \n \t    for (i = 0; i < NUM_RTX_CODE; i++)\n \t      if (!strncmp (code, GET_RTX_NAME (i), n)\n \t\t  && GET_RTX_NAME (i)[n] == '\\0')\n \t\t{\n \t\t  codes[i] = Y;\n+\t\t  found_it = 1;\n \t\t  break;\n \t\t}\n+\t    if (!found_it)\n+\t      {\n+\t\tmessage_with_line (pattern_lineno, \"match_code \\\"%.*s\\\" matches nothing\", n, code);\n+\t\terror_count ++;\n+\t\tfor (i = 0; i < NUM_RTX_CODE; i++)\n+\t\t  if (!strncasecmp (code, GET_RTX_NAME (i), n)\n+\t\t      && GET_RTX_NAME (i)[n] == '\\0'\n+\t\t      && !did_you_mean_codes[i])\n+\t\t    {\n+\t\t      did_you_mean_codes[i] = 1;\n+\t\t      message_with_line (pattern_lineno, \"(did you mean \\\"%s\\\"?)\", GET_RTX_NAME (i));\n+\t\t    }\n+\t      }\n+\n \t  }\n       }\n       break;"}]}