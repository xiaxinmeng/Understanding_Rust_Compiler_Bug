{"sha": "31a0ab9213f780d2fa1da6e4879df214c0f247f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFhMGFiOTIxM2Y3ODBkMmZhMWRhNmU0ODc5ZGYyMTRjMGYyNDdmOQ==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2021-01-28T17:55:45Z"}, "committer": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2021-01-28T17:55:45Z"}, "message": "arm: Adjust cost of vector of constant zero\n\nNeon vector comparisons have a dedicated version when comparing with\nconstant zero: it means its cost is free.\n\nAdjust the cost in arm_rtx_costs_internal accordingly, for Neon only,\nsince MVE does not support this.\n\n2021-01-28  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\tgcc/\n\tPR target/98730\n\t* config/arm/arm.c (arm_rtx_costs_internal): Adjust cost of vector\n\tof constant zero for comparisons.\n\n\tgcc/testsuite/\n\tPR target/98730\n\t* gcc.target/arm/simd/vceqzq_p64.c: Update expected result.", "tree": {"sha": "de4a0fb5a0a5ace648e5aa5fd9aef312bb99012c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de4a0fb5a0a5ace648e5aa5fd9aef312bb99012c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31a0ab9213f780d2fa1da6e4879df214c0f247f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31a0ab9213f780d2fa1da6e4879df214c0f247f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31a0ab9213f780d2fa1da6e4879df214c0f247f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31a0ab9213f780d2fa1da6e4879df214c0f247f9/comments", "author": null, "committer": null, "parents": [{"sha": "e28bd09498bb8ee0dbb35ee213c1127b80ade00c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e28bd09498bb8ee0dbb35ee213c1127b80ade00c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e28bd09498bb8ee0dbb35ee213c1127b80ade00c"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "e22396dbcd59ee41d06224e356eea2b9d4df9339", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a0ab9213f780d2fa1da6e4879df214c0f247f9/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a0ab9213f780d2fa1da6e4879df214c0f247f9/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=31a0ab9213f780d2fa1da6e4879df214c0f247f9", "patch": "@@ -11211,11 +11211,23 @@ arm_rtx_costs_internal (rtx x, enum rtx_code code, enum rtx_code outer_code,\n       return true;\n \n     case EQ:\n-    case NE:\n-    case LT:\n-    case LE:\n-    case GT:\n     case GE:\n+    case GT:\n+    case LE:\n+    case LT:\n+      /* Neon has special instructions when comparing with 0 (vceq, vcge, vcgt,\n+\t vcle and vclt). */\n+      if (TARGET_NEON\n+\t  && TARGET_HARD_FLOAT\n+\t  && (VALID_NEON_DREG_MODE (mode) || VALID_NEON_QREG_MODE (mode))\n+\t  && (XEXP (x, 1) == CONST0_RTX (mode)))\n+\t{\n+\t  *cost = 0;\n+\t  return true;\n+\t}\n+\n+      /* Fall through.  */\n+    case NE:\n     case LTU:\n     case LEU:\n     case GEU:"}, {"sha": "a99bb8abefa787e7d17bb86f2915806ff81f3d2f", "filename": "gcc/testsuite/gcc.target/arm/simd/vceqzq_p64.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a0ab9213f780d2fa1da6e4879df214c0f247f9/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvceqzq_p64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a0ab9213f780d2fa1da6e4879df214c0f247f9/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvceqzq_p64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fvceqzq_p64.c?ref=31a0ab9213f780d2fa1da6e4879df214c0f247f9", "patch": "@@ -15,4 +15,4 @@ void func()\n   result2 = vceqzq_p64 (v2);\n }\n \n-/* { dg-final { scan-assembler-times \"vceq\\.i32\\[ \\t\\]+\\[dD\\]\\[0-9\\]+, ?\\[dD\\]\\[0-9\\]+, ?\\[dD\\]\\[0-9\\]+\\n\" 2 } } */\n+/* { dg-final { scan-assembler-times \"vceq\\.i32\\[ \\t\\]+\\[dD\\]\\[0-9\\]+, ?\\[dD\\]\\[0-9\\]+, #0\\n\" 2 } } */"}]}