{"sha": "d9e284b407a63d39729afd4ac9fad236cb0c095a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDllMjg0YjQwN2E2M2QzOTcyOWFmZDRhYzlmYWQyMzZjYjBjMDk1YQ==", "commit": {"author": {"name": "Michael Hayes", "email": "m.hayes@elec.canterbury.ac.nz", "date": "1999-03-19T14:45:58Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "1999-03-19T14:45:58Z"}, "message": "c4x.h (TARGET_SWITCHES): Add documentation.\n\n\t* config/c4x/c4x.h (TARGET_SWITCHES): Add documentation.\n\t* config/c4x/c4x.h (TARGET_OPTIONS): Add documentation.\n\nFrom-SVN: r25865", "tree": {"sha": "4cc55020cecb431c01f812d7fe7f842c3175b36f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4cc55020cecb431c01f812d7fe7f842c3175b36f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9e284b407a63d39729afd4ac9fad236cb0c095a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9e284b407a63d39729afd4ac9fad236cb0c095a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9e284b407a63d39729afd4ac9fad236cb0c095a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9e284b407a63d39729afd4ac9fad236cb0c095a/comments", "author": null, "committer": null, "parents": [{"sha": "68557e1473db9def1ca1f0d9026202213bf587e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68557e1473db9def1ca1f0d9026202213bf587e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68557e1473db9def1ca1f0d9026202213bf587e9"}], "stats": {"total": 146, "additions": 99, "deletions": 47}, "files": [{"sha": "bd111095cbf2b3b8a273d89cf7bb43a0b865f312", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9e284b407a63d39729afd4ac9fad236cb0c095a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9e284b407a63d39729afd4ac9fad236cb0c095a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d9e284b407a63d39729afd4ac9fad236cb0c095a", "patch": "@@ -1,3 +1,8 @@\n+Sat Mar 20 11:39:58 1999  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n+\n+\t* config/c4x/c4x.h (TARGET_SWITCHES): Add documentation.\n+\t* config/c4x/c4x.h (TARGET_OPTIONS): Add documentation.\n+\n Fre Mar 19 23:26:29 1999  Martin von L\ufffdwis  <loewis@informatik.hu-berlin.de>\n \n \t* expr.c (expand_expr): Handle ERROR_MARK much earlier."}, {"sha": "0ac9d02d61e63f2d3855567811b4dada4f2069c4", "filename": "gcc/config/c4x/c4x.h", "status": "modified", "additions": 94, "deletions": 47, "changes": 141, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9e284b407a63d39729afd4ac9fad236cb0c095a/gcc%2Fconfig%2Fc4x%2Fc4x.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9e284b407a63d39729afd4ac9fad236cb0c095a/gcc%2Fconfig%2Fc4x%2Fc4x.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.h?ref=d9e284b407a63d39729afd4ac9fad236cb0c095a", "patch": "@@ -162,51 +162,96 @@\n    An empty string NAME is used to identify the default VALUE.  */\n \n #define TARGET_SWITCHES \\\n-{ { \"small\", SMALL_MEMORY_FLAG }, \\\n-  { \"big\", -SMALL_MEMORY_FLAG }, \\\n-  { \"mpyi\", MPYI_FLAG}, \\\n-  { \"no-mpyi\", -MPYI_FLAG}, \\\n-  { \"fast-fix\", FAST_FIX_FLAG}, \\\n-  { \"no-fast-fix\", -FAST_FIX_FLAG}, \\\n-  { \"rpts\", RPTS_FLAG}, \\\n-  { \"no-rpts\", -RPTS_FLAG}, \\\n-  { \"rptb\", RPTB_FLAG}, \\\n-  { \"no-rptb\", -RPTB_FLAG}, \\\n-  { \"30\", C30_FLAG}, \\\n-  { \"31\", C31_FLAG}, \\\n-  { \"32\", C32_FLAG}, \\\n-  { \"40\", C40_FLAG}, \\\n-  { \"44\", C44_FLAG}, \\\n-  { \"ti\", TI_FLAG}, \\\n-  { \"no-ti\", -TI_FLAG}, \\\n-  { \"paranoid\", PARANOID_FLAG}, \\\n-  { \"no-paranoid\", -PARANOID_FLAG}, \\\n-  { \"isr-dp-reload\", PARANOID_FLAG}, \\\n-  { \"no-isr-dp-reload\", -PARANOID_FLAG}, \\\n-  { \"memparm\", MEMPARM_FLAG}, \\\n-  { \"regparm\", -MEMPARM_FLAG}, \\\n-  { \"devel\", DEVEL_FLAG}, \\\n-  { \"no-devel\", -DEVEL_FLAG}, \\\n-  { \"bk\", BK_FLAG}, \\\n-  { \"no-bk\", -BK_FLAG}, \\\n-  { \"db\", DB_FLAG}, \\\n-  { \"no-db\", -DB_FLAG}, \\\n-  { \"debug\", DEBUG_FLAG}, \\\n-  { \"no-debug\", -DEBUG_FLAG}, \\\n-  { \"hoist\", HOIST_FLAG}, \\\n-  { \"no-hoist\", -HOIST_FLAG}, \\\n-  { \"no-force\", -FORCE_FLAG}, \\\n-  { \"force\", FORCE_FLAG}, \\\n-  { \"loop-unsigned\", LOOP_UNSIGNED_FLAG}, \\\n-  { \"no-loop-unsigned\", -LOOP_UNSIGNED_FLAG}, \\\n-  { \"preserve-float\", PRESERVE_FLOAT_FLAG}, \\\n-  { \"no-preserve-float\", -PRESERVE_FLOAT_FLAG}, \\\n-  { \"parallel-insns\", PARALLEL_PACK_FLAG}, \\\n-  { \"no-parallel-mpy\", -PARALLEL_MPY_FLAG}, \\\n-  { \"parallel-mpy\", PARALLEL_MPY_FLAG}, \\\n-  { \"no-parallel-insns\", -PARALLEL_PACK_FLAG}, \\\n-  { \"aliases\", ALIASES_FLAG}, \\\n-  { \"no-aliases\", -ALIASES_FLAG}, \\\n+{ { \"small\", SMALL_MEMORY_FLAG, \\\n+    \"Small memory model\" }, \\\n+  { \"big\", -SMALL_MEMORY_FLAG, \\\n+    \"Big memory model\" }, \\\n+  { \"mpyi\", MPYI_FLAG, \\\n+    \"Use MPYI instruction for C3x\" }, \\\n+  { \"no-mpyi\", -MPYI_FLAG, \\\n+    \"Do not use MPYI instruction for C3x\" }, \\\n+  { \"fast-fix\", FAST_FIX_FLAG, \\\n+    \"Use fast but approximate float to integer conversion\" }, \\\n+  { \"no-fast-fix\", -FAST_FIX_FLAG, \\\n+    \"Use slow but accurate float to integer conversion\" }, \\\n+  { \"rpts\", RPTS_FLAG, \\\n+    \"Enable use of RTPS instruction\" }, \\\n+  { \"no-rpts\", -RPTS_FLAG, \\\n+    \"Disable use of RTPS instruction\" }, \\\n+  { \"rptb\", RPTB_FLAG, \\\n+    \"Enable use of RTPB instruction\" }, \\\n+  { \"no-rptb\", -RPTB_FLAG, \\\n+    \"Disable use of RTPB instruction\" }, \\\n+  { \"30\", C30_FLAG, \\\n+    \"Generate code for C30 CPU\"}, \\\n+  { \"31\", C31_FLAG, \\\n+    \"Generate code for C31 CPU\"}, \\\n+  { \"32\", C32_FLAG, \\\n+    \"Generate code for C32 CPU\"}, \\\n+  { \"40\", C40_FLAG, \\\n+    \"Generate code for C40 CPU\"}, \\\n+  { \"44\", C44_FLAG, \\\n+    \"Generate code for C44 CPU\"}, \\\n+  { \"ti\", TI_FLAG, \\\n+    \"Emit code compatible with TI tools\"}, \\\n+  { \"no-ti\", -TI_FLAG, \\\n+    \"Emit code to use GAS extensions\"}, \\\n+  { \"paranoid\", PARANOID_FLAG, \\\n+    \"Save DP across ISR in small memory model\" }, \\\n+  { \"no-paranoid\", -PARANOID_FLAG, \\\n+    \"Don't save DP across ISR in small memory model\" }, \\\n+  { \"isr-dp-reload\", PARANOID_FLAG, \\\n+    \"Save DP across ISR in small memory model\" }, \\\n+  { \"no-isr-dp-reload\", -PARANOID_FLAG, \\\n+    \"Don't save DP across ISR in small memory model\" }, \\\n+  { \"memparm\", MEMPARM_FLAG, \\\n+    \"Pass arguments on the stack\" }, \\\n+  { \"regparm\", -MEMPARM_FLAG,  \\\n+    \"Pass arguments in registers\" }, \\\n+  { \"devel\", DEVEL_FLAG, \\\n+    \"Enable new features under development\" }, \\\n+  { \"no-devel\", -DEVEL_FLAG, \\\n+    \"Disable new features under development\" }, \\\n+  { \"bk\", BK_FLAG, \\\n+    \"Use the BK register as a general purpose register\" }, \\\n+  { \"no-bk\", -BK_FLAG, \\\n+    \"Do not allocate BK register\" }, \\\n+  { \"db\", DB_FLAG, \\\n+    \"Enable use of DB instruction\" }, \\\n+  { \"no-db\", -DB_FLAG, \\\n+    \"Disable use of DB instruction\" }, \\\n+  { \"debug\", DEBUG_FLAG, \\\n+    \"Enable debugging\" }, \\\n+  { \"no-debug\", -DEBUG_FLAG, \\\n+    \"Disable debugging\" }, \\\n+  { \"hoist\", HOIST_FLAG, \\\n+    \"Force constants into registers to improve hoisting\" }, \\\n+  { \"no-hoist\", -HOIST_FLAG, \\\n+    \"Don't force constants into registers\" }, \\\n+  { \"force\", FORCE_FLAG, \\\n+    \"Force RTL generation to emit valid 3 operand insns\" }, \\\n+  { \"no-force\", -FORCE_FLAG, \\\n+    \"Allow RTL generation to emit invalid 3 operand insns\" }, \\\n+  { \"loop-unsigned\", LOOP_UNSIGNED_FLAG, \\\n+    \"Allow unsigned interation counts for RPTB/DB\" }, \\\n+  { \"no-loop-unsigned\", -LOOP_UNSIGNED_FLAG, \\\n+    \"Disallow unsigned iteration counts for RPTB/DB\" }, \\\n+  { \"preserve-float\", PRESERVE_FLOAT_FLAG, \\\n+    \"Preserve all 40 bits of FP reg across call\" }, \\\n+  { \"no-preserve-float\", -PRESERVE_FLOAT_FLAG, \\\n+    \"Only preserve 32 bits of FP reg across call\" }, \\\n+  { \"parallel-insns\", PARALLEL_PACK_FLAG, \\\n+    \"Enable parallel instructions\" }, \\\n+  { \"no-parallel-mpy\", -PARALLEL_MPY_FLAG, \\\n+    \"Disable parallel instructions\" }, \\\n+  { \"parallel-mpy\", PARALLEL_MPY_FLAG, \\\n+    \"Enable MPY||ADD and MPY||SUB instructions\" }, \\\n+  { \"no-parallel-insns\", -PARALLEL_PACK_FLAG, \\\n+    \"Disable MPY||ADD and MPY||SUB instructions\" }, \\\n+  { \"aliases\", ALIASES_FLAG, \\\n+    \"Assume that pointers may be aliased\" }, \\\n+  { \"no-aliases\", -ALIASES_FLAG, \\\n+    \"Assume that pointers not aliased\" }, \\\n   { \"\", TARGET_DEFAULT} }\n \n /* Default target switches */\n@@ -290,8 +335,10 @@ extern int target_flags;\n extern char *c4x_rpts_cycles_string, *c4x_cpu_version_string;\n \n #define TARGET_OPTIONS\t\t\\\n-{ {\"rpts=\", &c4x_rpts_cycles_string},\\\n-  {\"cpu=\", &c4x_cpu_version_string} }\n+{ {\"rpts=\", &c4x_rpts_cycles_string, \\\n+   \"Specify maximum number of iterations for RPTS\" }, \\\n+  {\"cpu=\", &c4x_cpu_version_string, \\\n+   \"Select CPU to generate code for\" } }\n \n /* Sometimes certain combinations of command options do not make sense\n    on a particular target machine.  You can define a macro"}]}