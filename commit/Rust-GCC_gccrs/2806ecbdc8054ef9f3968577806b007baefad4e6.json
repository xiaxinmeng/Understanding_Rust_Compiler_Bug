{"sha": "2806ecbdc8054ef9f3968577806b007baefad4e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjgwNmVjYmRjODA1NGVmOWYzOTY4NTc3ODA2YjAwN2JhZWZhZDRlNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-11-10T20:30:03Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-11-10T20:30:03Z"}, "message": "Implement D1957R0, T* to bool should be considered narrowing.\n\nThis paper was delayed until the February meeting in Prague so that we could\nget a better idea of what the impact on existing code would actually be.  To\nthat end, I'm implementing it now.\n\n\t* typeck2.c (check_narrowing): Treat pointer->bool as a narrowing\n\tconversion with -std=c++2a.\n\nFrom-SVN: r278026", "tree": {"sha": "144d7a35712fc76f3d1deecbc1d6c139f4bf098d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/144d7a35712fc76f3d1deecbc1d6c139f4bf098d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2806ecbdc8054ef9f3968577806b007baefad4e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2806ecbdc8054ef9f3968577806b007baefad4e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2806ecbdc8054ef9f3968577806b007baefad4e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2806ecbdc8054ef9f3968577806b007baefad4e6/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0313a84a2faa8f685eb489fa787f1ea969f68560", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0313a84a2faa8f685eb489fa787f1ea969f68560", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0313a84a2faa8f685eb489fa787f1ea969f68560"}], "stats": {"total": 62, "additions": 24, "deletions": 38}, "files": [{"sha": "23576ec1a5df0ec1c4923b61c446232c4ff29170", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2806ecbdc8054ef9f3968577806b007baefad4e6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2806ecbdc8054ef9f3968577806b007baefad4e6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2806ecbdc8054ef9f3968577806b007baefad4e6", "patch": "@@ -1,3 +1,9 @@\n+2019-11-10  Jason Merrill  <jason@redhat.com>\n+\n+\tImplement D1957R0, T* to bool should be considered narrowing.\n+\t* typeck2.c (check_narrowing): Treat pointer->bool as a narrowing\n+\tconversion with -std=c++2a.\n+\n 2019-11-08  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/92215 - flawed diagnostic for bit-field with non-integral type."}, {"sha": "9fb36fd1ed320321faf1f36dc4282b65780459a4", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2806ecbdc8054ef9f3968577806b007baefad4e6/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2806ecbdc8054ef9f3968577806b007baefad4e6/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=2806ecbdc8054ef9f3968577806b007baefad4e6", "patch": "@@ -1018,6 +1018,11 @@ check_narrowing (tree type, tree init, tsubst_flags_t complain,\n \t    ok = true;\n \t}\n     }\n+  else if (TREE_CODE (type) == BOOLEAN_TYPE\n+\t   && (TYPE_PTR_P (ftype) || TYPE_PTRMEM_P (ftype)))\n+    /* This hasn't actually made it into C++20 yet, but let's add it now to get\n+       an idea of the impact.  */\n+    ok = (cxx_dialect < cxx2a);\n \n   bool almost_ok = ok;\n   if (!ok && !CONSTANT_CLASS_P (init) && (complain & tf_warning_or_error))"}, {"sha": "319264ae2741a4e20b3a6e60785b50f605c5eaa7", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist92.C", "status": "modified", "additions": 13, "deletions": 38, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2806ecbdc8054ef9f3968577806b007baefad4e6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist92.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2806ecbdc8054ef9f3968577806b007baefad4e6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist92.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist92.C?ref=2806ecbdc8054ef9f3968577806b007baefad4e6", "patch": "@@ -1,55 +1,30 @@\n // PR c++/64665, DR 1467 \n-// { dg-do run { target c++11 } }\n+// { dg-do compile { target c++11 } }\n \n #include <string>\n-#include <cassert>\n \n-bool Test1(bool) \n-{\n-  return true;\n-}\n-bool Test1(std::string)\n-{\n-  return false;\n-}\n+bool Test1(bool);\n+bool Test1(std::string) = delete;\n \n-bool Test2(int)\n-{\n-  return false;\n-}\n-bool Test2(std::initializer_list<int>)\n-{\n-  return true;\n-}\n+bool Test2(int) = delete;\n+bool Test2(std::initializer_list<int>);\n \n struct S \n { \n     S(int _a) : a(_a) {}\n private:\n     int a;\n };\n-bool Test3(int)\n-{\n-  return true;\n-}\n-bool Test3(S)\n-{\n-  return false;\n-}\n+bool Test3(int);\n+bool Test3(S) = delete;\n \n-bool Test4(bool) \n-{\n-  return false;\n-}\n-bool Test4(std::initializer_list<std::string>)\n-{\n-  return true;\n-}\n+bool Test4(bool) = delete;\n+bool Test4(std::initializer_list<std::string>);\n \n int main () \n {\n-  assert ( Test1({\"false\"}) );\n-  assert ( Test2({123}) );\n-  assert ( Test3({456}) );\n-  assert ( Test4({\"false\"}) );\n+  ( Test1({\"false\"}) );\t// { dg-error \"narrowing\" \"\" { target c++2a } }\n+  ( Test2({123}) );\n+  ( Test3({456}) );\n+  ( Test4({\"false\"}) );\n }"}]}