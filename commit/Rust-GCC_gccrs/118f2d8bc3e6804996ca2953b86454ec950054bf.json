{"sha": "118f2d8bc3e6804996ca2953b86454ec950054bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE4ZjJkOGJjM2U2ODA0OTk2Y2EyOTUzYjg2NDU0ZWM5NTAwNTRiZg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-07-17T08:13:28Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-07-17T08:13:28Z"}, "message": "[Ada] Spurious error on prefixed call in an instantiation\n\nThis patch fixes a spurious error on a prefixed call in an instance, when the\ngeneric parameters include an interface type and an abstract operation of that\ntype, and the actuals in the instance include an interface type and a\ncorresponding abstract operation of it, with a different name than the\ncorresponding generic subprogram parameter. The patch also fixes a similar\nerror involving class-wide operations and generic private types.\n\n2018-07-17  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch4.adb (Try_Object_Operation): Handle properly a prefixed call\n\tin an instance, when the generic parameters include an interface type\n\tand a abstract operation of that type, and the actuals in the instance\n\tinclude an interface type and a corresponding abstract operation of it,\n\twith a different name than the corresponding generic subprogram\n\tparameter.\n\ngcc/testsuite/\n\n\t* gnat.dg/generic_call_cw.adb, gnat.dg/generic_call_iface.adb: New\n\ttestcase.\n\nFrom-SVN: r262803", "tree": {"sha": "86e45eb96a5f6af1683a831858de4d7b4844ac5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86e45eb96a5f6af1683a831858de4d7b4844ac5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/118f2d8bc3e6804996ca2953b86454ec950054bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/118f2d8bc3e6804996ca2953b86454ec950054bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/118f2d8bc3e6804996ca2953b86454ec950054bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/118f2d8bc3e6804996ca2953b86454ec950054bf/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5b4f211d2a7f41f147413d0b756ffe56aec78230", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b4f211d2a7f41f147413d0b756ffe56aec78230", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b4f211d2a7f41f147413d0b756ffe56aec78230"}], "stats": {"total": 168, "additions": 146, "deletions": 22}, "files": [{"sha": "2375e80ae419d1438c5bc3ab83b23c1b64adf527", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118f2d8bc3e6804996ca2953b86454ec950054bf/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118f2d8bc3e6804996ca2953b86454ec950054bf/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=118f2d8bc3e6804996ca2953b86454ec950054bf", "patch": "@@ -1,3 +1,12 @@\n+2018-07-17  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch4.adb (Try_Object_Operation): Handle properly a prefixed call\n+\tin an instance, when the generic parameters include an interface type\n+\tand a abstract operation of that type, and the actuals in the instance\n+\tinclude an interface type and a corresponding abstract operation of it,\n+\twith a different name than the corresponding generic subprogram\n+\tparameter.\n+\n 2018-07-17  Arnaud Charlet  <charlet@adacore.com>\n \n \t* sem_eval.adb (Rewrite_In_Raise_CE): Keep the original reason in more"}, {"sha": "597ec1ed939d8fcd15b03eea2ca45fa3027651f6", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 65, "deletions": 22, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118f2d8bc3e6804996ca2953b86454ec950054bf/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118f2d8bc3e6804996ca2953b86454ec950054bf/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=118f2d8bc3e6804996ca2953b86454ec950054bf", "patch": "@@ -8928,11 +8928,38 @@ package body Sem_Ch4 is\n            (Anc_Type : Entity_Id;\n             Error    : out Boolean)\n          is\n+            Candidate   : Entity_Id;\n+            --  If homonym is a renaming, examine the renamed program\n+\n             Cls_Type    : Entity_Id;\n             Hom         : Entity_Id;\n             Hom_Ref     : Node_Id;\n             Success     : Boolean;\n \n+            function First_Formal_Match\n+              (Typ : Entity_Id) return Boolean;\n+            --  Predicate to verify that the first formal of a class-wide\n+            --  candidate matches the type of the prefix.\n+\n+            ------------------------\n+            -- First_Formal_Match --\n+            ------------------------\n+\n+            function First_Formal_Match\n+             (Typ : Entity_Id) return Boolean\n+            is\n+               Ctrl : constant Entity_Id := First_Formal (Candidate);\n+            begin\n+               return Present (Ctrl)\n+                 and then\n+                   (Base_Type (Etype (Ctrl)) = Typ\n+                     or else\n+                       (Ekind (Etype (Ctrl)) = E_Anonymous_Access_Type\n+                         and then\n+                           Base_Type\n+                            (Designated_Type (Etype (Ctrl))) = Typ));\n+            end First_Formal_Match;\n+\n          begin\n             Error := False;\n \n@@ -8948,25 +8975,23 @@ package body Sem_Ch4 is\n \n             while Present (Hom) loop\n                if Ekind_In (Hom, E_Procedure, E_Function)\n-                 and then (not Is_Hidden (Hom) or else In_Instance)\n-                 and then Scope (Hom) = Scope (Base_Type (Anc_Type))\n-                 and then Present (First_Formal (Hom))\n-                 and then\n-                   (Base_Type (Etype (First_Formal (Hom))) = Cls_Type\n-                     or else\n-                       (Is_Access_Type (Etype (First_Formal (Hom)))\n-                         and then\n-                           Ekind (Etype (First_Formal (Hom))) =\n-                             E_Anonymous_Access_Type\n-                         and then\n-                           Base_Type\n-                             (Designated_Type (Etype (First_Formal (Hom)))) =\n-                                                                   Cls_Type))\n+                 and then Present (Renamed_Entity (Hom))\n+                 and then Is_Generic_Actual_Subprogram (Hom)\n+               then\n+                  Candidate := Renamed_Entity (Hom);\n+               else\n+                  Candidate := Hom;\n+               end if;\n+\n+               if Ekind_In (Candidate, E_Procedure, E_Function)\n+                 and then (not Is_Hidden (Candidate) or else In_Instance)\n+                 and then Scope (Candidate) = Scope (Base_Type (Anc_Type))\n+                 and then First_Formal_Match (Cls_Type)\n                then\n                   --  If the context is a procedure call, ignore functions\n                   --  in the name of the call.\n \n-                  if Ekind (Hom) = E_Function\n+                  if Ekind (Candidate) = E_Function\n                     and then Nkind (Parent (N)) = N_Procedure_Call_Statement\n                     and then N = Name (Parent (N))\n                   then\n@@ -8975,7 +9000,7 @@ package body Sem_Ch4 is\n                   --  If the context is a function call, ignore procedures\n                   --  in the name of the call.\n \n-                  elsif Ekind (Hom) = E_Procedure\n+                  elsif Ekind (Candidate) = E_Procedure\n                     and then Nkind (Parent (N)) /= N_Procedure_Call_Statement\n                   then\n                      goto Next_Hom;\n@@ -8986,26 +9011,26 @@ package body Sem_Ch4 is\n                   Success := False;\n \n                   if No (Matching_Op) then\n-                     Hom_Ref := New_Occurrence_Of (Hom, Sloc (Subprog));\n+                     Hom_Ref := New_Occurrence_Of (Candidate, Sloc (Subprog));\n                      Set_Etype (Call_Node, Any_Type);\n                      Set_Parent (Call_Node, Parent (Node_To_Replace));\n \n                      Set_Name (Call_Node, Hom_Ref);\n \n                      Analyze_One_Call\n                        (N          => Call_Node,\n-                        Nam        => Hom,\n+                        Nam        => Candidate,\n                         Report     => Report_Error,\n                         Success    => Success,\n                         Skip_First => True);\n \n                      Matching_Op :=\n-                       Valid_Candidate (Success, Call_Node, Hom);\n+                       Valid_Candidate (Success, Call_Node, Candidate);\n \n                   else\n                      Analyze_One_Call\n                        (N          => Call_Node,\n-                        Nam        => Hom,\n+                        Nam        => Candidate,\n                         Report     => Report_Error,\n                         Success    => Success,\n                         Skip_First => True);\n@@ -9014,9 +9039,10 @@ package body Sem_Ch4 is\n                      --  traversals, before and after looking at interfaces.\n                      --  Check for this case before reporting a real ambiguity.\n \n-                     if Present (Valid_Candidate (Success, Call_Node, Hom))\n+                     if Present\n+                        (Valid_Candidate (Success, Call_Node, Candidate))\n                        and then Nkind (Call_Node) /= N_Function_Call\n-                       and then Hom /= Matching_Op\n+                       and then Candidate /= Matching_Op\n                      then\n                         Error_Msg_NE (\"ambiguous call to&\", N, Hom);\n                         Report_Ambiguity (Matching_Op);\n@@ -9478,6 +9504,23 @@ package body Sem_Ch4 is\n                  Present (Original_Protected_Subprogram (Prim_Op))\n                    and then Chars (Original_Protected_Subprogram (Prim_Op)) =\n                               Chars (Subprog);\n+\n+            --  In an instance, the selector name may be a generic actual that\n+            --  renames a primitive operation of the type of the prefix.\n+\n+            elsif In_Instance and then Present (Current_Entity (Subprog)) then\n+               declare\n+                  Subp : constant Entity_Id := Current_Entity (Subprog);\n+               begin\n+                  if Present (Subp)\n+                    and then Is_Subprogram (Subp)\n+                    and then Present (Renamed_Entity (Subp))\n+                    and then Is_Generic_Actual_Subprogram (Subp)\n+                    and then Chars (Renamed_Entity (Subp)) = Chars (Prim_Op)\n+                  then\n+                     return True;\n+                  end if;\n+               end;\n             end if;\n \n             return False;"}, {"sha": "652d164a85cdf889db540cee00ba257b11e3b3f1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118f2d8bc3e6804996ca2953b86454ec950054bf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118f2d8bc3e6804996ca2953b86454ec950054bf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=118f2d8bc3e6804996ca2953b86454ec950054bf", "patch": "@@ -1,3 +1,8 @@\n+2018-07-17  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat.dg/generic_call_cw.adb, gnat.dg/generic_call_iface.adb: New\n+\ttestcase.\n+\n 2018-07-17  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/sso10.adb, gnat.dg/sso10_pkg.ads: New testcase."}, {"sha": "5f0a51412e464cbf3e5fe7fe8a99c9904c0e1843", "filename": "gcc/testsuite/gnat.dg/generic_call_cw.adb", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118f2d8bc3e6804996ca2953b86454ec950054bf/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_call_cw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118f2d8bc3e6804996ca2953b86454ec950054bf/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_call_cw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_call_cw.adb?ref=118f2d8bc3e6804996ca2953b86454ec950054bf", "patch": "@@ -0,0 +1,33 @@\n+--  { dg-do compile }\n+\n+procedure Generic_Call_CW is\n+\n+   generic\n+      type Subscriber_Type is tagged private;\n+      with procedure On_Changed (Subscriber : in out Subscriber_Type'Class);\n+   package My_Generic is\n+      type Subscriber_Ptr is access all Subscriber_Type'Class;\n+      procedure Update;\n+      Subscriber : Subscriber_Ptr := null;\n+   end;\n+\n+   package body My_Generic is\n+      procedure Update is\n+      begin\n+         if Subscriber /= null then\n+            Subscriber.On_Changed;\n+         end if;\n+      end;\n+   end;\n+\n+   package User is\n+      type Integer_Subscriber is tagged null record;\n+      procedure On_Changed_Int (I : in out Integer_Subscriber'Class) is null;\n+\n+      package P is new My_Generic\n+        (Subscriber_Type => Integer_Subscriber,\n+         On_Changed      => On_Changed_Int);\n+   end;\n+begin\n+   null;\n+end;"}, {"sha": "0e173ea73c83613cf596c6dc8a8b23423a82a278", "filename": "gcc/testsuite/gnat.dg/generic_call_iface.adb", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/118f2d8bc3e6804996ca2953b86454ec950054bf/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_call_iface.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/118f2d8bc3e6804996ca2953b86454ec950054bf/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_call_iface.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fgeneric_call_iface.adb?ref=118f2d8bc3e6804996ca2953b86454ec950054bf", "patch": "@@ -0,0 +1,34 @@\n+--  { dg-do compile }\n+\n+procedure Generic_Call_Iface is\n+\n+   generic\n+     type Subscriber_Type is interface;\n+     with procedure On_Changed (Subscriber : in out Subscriber_Type)\n+       is abstract;\n+   package My_Generic is\n+      type Subscriber_Ptr is access all Subscriber_Type'Class;\n+      procedure Update;\n+      Subscriber : Subscriber_Ptr := null;\n+   end;\n+\n+   package body My_Generic is\n+      procedure Update is\n+      begin\n+         if Subscriber /= null then\n+            Subscriber.On_Changed;\n+         end if;\n+      end;\n+   end;\n+\n+   package User is\n+      type Integer_Subscriber is interface;\n+      procedure On_Changed_Int (I : in out Integer_Subscriber) is abstract;\n+\n+      package P is new My_Generic\n+        (Subscriber_Type => Integer_Subscriber,\n+         On_Changed      => On_Changed_Int);\n+   end;\n+begin\n+   null;\n+end;"}]}