{"sha": "0004f992f087081cab0f22574347d2d97ea698c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDAwNGY5OTJmMDg3MDgxY2FiMGYyMjU3NDM0N2QyZDk3ZWE2OThjMQ==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2011-04-19T16:19:13Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2011-04-19T16:19:13Z"}, "message": "ipa-prop.c (stmt_may_be_vtbl_ptr_store): Return false for scalar non-pointer assignments.\n\n2011-04-19  Martin Jambor  <mjambor@suse.cz>\n\n\t* ipa-prop.c (stmt_may_be_vtbl_ptr_store): Return false for scalar\n\tnon-pointer assignments.\n\nFrom-SVN: r172717", "tree": {"sha": "358145d64e505393362b5895a0a43f61bcbcb3df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/358145d64e505393362b5895a0a43f61bcbcb3df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0004f992f087081cab0f22574347d2d97ea698c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0004f992f087081cab0f22574347d2d97ea698c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0004f992f087081cab0f22574347d2d97ea698c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0004f992f087081cab0f22574347d2d97ea698c1/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "405914731a9a06617eadb4dc604d0fe5e901fc76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/405914731a9a06617eadb4dc604d0fe5e901fc76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/405914731a9a06617eadb4dc604d0fe5e901fc76"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "785980d91d1040b442a90abcb9c23ae3cb70d86a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0004f992f087081cab0f22574347d2d97ea698c1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0004f992f087081cab0f22574347d2d97ea698c1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0004f992f087081cab0f22574347d2d97ea698c1", "patch": "@@ -1,3 +1,8 @@\n+2011-04-19  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* ipa-prop.c (stmt_may_be_vtbl_ptr_store): Return false for scalar\n+\tnon-pointer assignments.\n+\n 2011-04-19  Martin Jambor  <mjambor@suse.cz>\n \n \t* ipa-cp.c (ipcp_process_devirtualization_opportunities): Take into"}, {"sha": "6620d5791cdd34d1655a6898886788c89ce14a23", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0004f992f087081cab0f22574347d2d97ea698c1/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0004f992f087081cab0f22574347d2d97ea698c1/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=0004f992f087081cab0f22574347d2d97ea698c1", "patch": "@@ -405,13 +405,19 @@ stmt_may_be_vtbl_ptr_store (gimple stmt)\n     {\n       tree lhs = gimple_assign_lhs (stmt);\n \n-      if (TREE_CODE (lhs) == COMPONENT_REF\n-\t  && !DECL_VIRTUAL_P (TREE_OPERAND (lhs, 1))\n-\t  && !AGGREGATE_TYPE_P (TREE_TYPE (lhs)))\n+      if (!AGGREGATE_TYPE_P (TREE_TYPE (lhs)))\n+\t{\n+\t  if (flag_strict_aliasing\n+\t      && !POINTER_TYPE_P (TREE_TYPE (lhs)))\n+\t    return false;\n+\n+\t  if (TREE_CODE (lhs) == COMPONENT_REF\n+\t      && !DECL_VIRTUAL_P (TREE_OPERAND (lhs, 1)))\n \t    return false;\n-      /* In the future we might want to use get_base_ref_and_offset to find\n-\t if there is a field corresponding to the offset and if so, proceed\n-\t almost like if it was a component ref.  */\n+\t  /* In the future we might want to use get_base_ref_and_offset to find\n+\t     if there is a field corresponding to the offset and if so, proceed\n+\t     almost like if it was a component ref.  */\n+\t}\n     }\n   return true;\n }"}]}