{"sha": "aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFmZGIwZDc1NGM2ZjdlMjIxZjYwZDVlYjUzNjUwMTVmNTlhYmJmNA==", "commit": {"author": {"name": "Kirill Yukhin", "email": "kirill.yukhin@intel.com", "date": "2011-10-10T16:07:15Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2011-10-10T16:07:15Z"}, "message": "Fix a typo in x86 FMA.\n\ngcc/\n\n2011-10-10  Kirill Yukhin  <kirill.yukhin@intel.com>\n\t    Yakovlev Vladimir  <vladimir.b.yakovlev@intel.com>\n\n\t* config/i386/sse.md (fma_fnmsub_<mode>): Fix a typo.\n\ngcc/testsuite/\n\n2011-10-10  Kirill Yukhin  <kirill.yukhin@intel.com>\n\t    Yakovlev Vladimir <vladimir.b.yakovlev@intel.com>\n\n\t* gcc.target/i386/fma_1.h: New file.\n\t* gcc.target/i386/fma_2.h: Likewise.\n\t* gcc.target/i386/fma_3.h: Likewise.\n\t* gcc.target/i386/fma_4.h: Likewise.\n\t* gcc.target/i386/fma_5.h: Likewise.\n\t* gcc.target/i386/fma_6.h: Likewise.\n\t* gcc.target/i386/fma_double_1.c: Likewise.\n\t* gcc.target/i386/fma_double_2.c: Likewise.\n\t* gcc.target/i386/fma_double_3.c: Likewise.\n\t* gcc.target/i386/fma_double_4.c: Likewise.\n\t* gcc.target/i386/fma_double_5.c: Likewise.\n\t* gcc.target/i386/fma_double_6.c: Likewise.\n\t* gcc.target/i386/fma_float_1.c: Likewise.\n\t* gcc.target/i386/fma_float_2.c: Likewise.\n\t* gcc.target/i386/fma_float_3.c: Likewise.\n\t* gcc.target/i386/fma_float_4.c: Likewise.\n\t* gcc.target/i386/fma_float_5.c: Likewise.\n\t* gcc.target/i386/fma_float_6.c: Likewise.\n\t* gcc.target/i386/fma_main.h: Likewise.\n\t* gcc.target/i386/fma_run_double_1.c: Likewise.\n\t* gcc.target/i386/fma_run_double_2.c: Likewise.\n\t* gcc.target/i386/fma_run_double_3.c: Likewise.\n\t* gcc.target/i386/fma_run_double_4.c: Likewise.\n\t* gcc.target/i386/fma_run_double_5.c: Likewise.\n\t* gcc.target/i386/fma_run_double_6.c: Likewise.\n\t* gcc.target/i386/fma_run_double_results_1.h: Likewise.\n\t* gcc.target/i386/fma_run_double_results_2.h: Likewise.\n\t* gcc.target/i386/fma_run_double_results_3.h: Likewise.\n\t* gcc.target/i386/fma_run_double_results_4.h: Likewise.\n\t* gcc.target/i386/fma_run_double_results_5.h: Likewise.\n\t* gcc.target/i386/fma_run_double_results_6.h: Likewise.\n\t* gcc.target/i386/fma_run_float_1.c: Likewise.\n\t* gcc.target/i386/fma_run_float_2.c: Likewise.\n\t* gcc.target/i386/fma_run_float_3.c: Likewise.\n\t* gcc.target/i386/fma_run_float_4.c: Likewise.\n\t* gcc.target/i386/fma_run_float_5.c: Likewise.\n\t* gcc.target/i386/fma_run_float_6.c: Likewise.\n\t* gcc.target/i386/fma_run_float_results_1.h: Likewise.\n\t* gcc.target/i386/fma_run_float_results_2.h: Likewise.\n\t* gcc.target/i386/fma_run_float_results_3.h: Likewise.\n\t* gcc.target/i386/fma_run_float_results_4.h: Likewise.\n\t* gcc.target/i386/fma_run_float_results_5.h: Likewise.\n\t* gcc.target/i386/fma_run_float_results_6.h: Likewise.\n\t* gcc.target/i386/l_fma_1.h: Likewise.\n\t* gcc.target/i386/l_fma_2.h: Likewise.\n\t* gcc.target/i386/l_fma_3.h: Likewise.\n\t* gcc.target/i386/l_fma_4.h: Likewise.\n\t* gcc.target/i386/l_fma_5.h: Likewise.\n\t* gcc.target/i386/l_fma_6.h: Likewise.\n\t* gcc.target/i386/l_fma_double_1.c: Likewise.\n\t* gcc.target/i386/l_fma_double_2.c: Likewise.\n\t* gcc.target/i386/l_fma_double_3.c: Likewise.\n\t* gcc.target/i386/l_fma_double_4.c: Likewise.\n\t* gcc.target/i386/l_fma_double_5.c: Likewise.\n\t* gcc.target/i386/l_fma_double_6.c: Likewise.\n\t* gcc.target/i386/l_fma_float_1.c: Likewise.\n\t* gcc.target/i386/l_fma_float_2.c: Likewise.\n\t* gcc.target/i386/l_fma_float_3.c: Likewise.\n\t* gcc.target/i386/l_fma_float_4.c: Likewise.\n\t* gcc.target/i386/l_fma_float_5.c: Likewise.\n\t* gcc.target/i386/l_fma_float_6.c: Likewise.\n\t* gcc.target/i386/l_fma_main.h: Likewise.\n\t* gcc.target/i386/l_fma_run_double_1.c: Likewise.\n\t* gcc.target/i386/l_fma_run_double_2.c: Likewise.\n\t* gcc.target/i386/l_fma_run_double_3.c: Likewise.\n\t* gcc.target/i386/l_fma_run_double_4.c: Likewise.\n\t* gcc.target/i386/l_fma_run_double_5.c: Likewise.\n\t* gcc.target/i386/l_fma_run_double_6.c: Likewise.\n\t* gcc.target/i386/l_fma_run_float_1.c: Likewise.\n\t* gcc.target/i386/l_fma_run_float_2.c: Likewise.\n\t* gcc.target/i386/l_fma_run_float_3.c: Likewise.\n\t* gcc.target/i386/l_fma_run_float_4.c: Likewise.\n\t* gcc.target/i386/l_fma_run_float_5.c: Likewise.\n\t* gcc.target/i386/l_fma_run_float_6.c: Likewise.\n\nCo-Authored-By: Yakovlev Vladimir <vladimir.b.yakovlev@intel.com>\n\nFrom-SVN: r179758", "tree": {"sha": "7175f23be707f864764b8b00f3dea30f5ac5b946", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7175f23be707f864764b8b00f3dea30f5ac5b946"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/comments", "author": null, "committer": null, "parents": [{"sha": "a24ac4609a87536a62a27dd7976bf6ee0acc468f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a24ac4609a87536a62a27dd7976bf6ee0acc468f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a24ac4609a87536a62a27dd7976bf6ee0acc468f"}], "stats": {"total": 3230, "additions": 3229, "deletions": 1}, "files": [{"sha": "d006b4f40b9a760bbaa79e553588f603347e3bc6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -1,3 +1,8 @@\n+2011-10-10  Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Yakovlev Vladimir  <vladimir.b.yakovlev@intel.com>\n+\n+\t* config/i386/sse.md (fma_fnmsub_<mode>): Fix a typo.\n+\n 2011-10-10  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/50389"}, {"sha": "9153352d9a8644b2eb4d68e8bfb4cd8cfc663e30", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -2009,7 +2009,7 @@\n   \"TARGET_FMA\"\n   \"@\n    vfnmsub132<ssemodesuffix>\\t{%2, %3, %0|%0, %3, %2}\n-   vfnmsub231<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n+   vfnmsub213<ssemodesuffix>\\t{%3, %2, %0|%0, %2, %3}\n    vfnmsub231<ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n   [(set_attr \"type\" \"ssemuladd\")\n    (set_attr \"mode\" \"<MODE>\")])"}, {"sha": "82e1213412f2cb7faaf0a087cc4890cb4c91de79", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -1,3 +1,81 @@\n+2011-10-10  Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Yakovlev Vladimir <vladimir.b.yakovlev@intel.com>\n+\n+\t* gcc.target/i386/fma_1.h: New file.\n+\t* gcc.target/i386/fma_2.h: Likewise.\n+\t* gcc.target/i386/fma_3.h: Likewise.\n+\t* gcc.target/i386/fma_4.h: Likewise.\n+\t* gcc.target/i386/fma_5.h: Likewise.\n+\t* gcc.target/i386/fma_6.h: Likewise.\n+\t* gcc.target/i386/fma_double_1.c: Likewise.\n+\t* gcc.target/i386/fma_double_2.c: Likewise.\n+\t* gcc.target/i386/fma_double_3.c: Likewise.\n+\t* gcc.target/i386/fma_double_4.c: Likewise.\n+\t* gcc.target/i386/fma_double_5.c: Likewise.\n+\t* gcc.target/i386/fma_double_6.c: Likewise.\n+\t* gcc.target/i386/fma_float_1.c: Likewise.\n+\t* gcc.target/i386/fma_float_2.c: Likewise.\n+\t* gcc.target/i386/fma_float_3.c: Likewise.\n+\t* gcc.target/i386/fma_float_4.c: Likewise.\n+\t* gcc.target/i386/fma_float_5.c: Likewise.\n+\t* gcc.target/i386/fma_float_6.c: Likewise.\n+\t* gcc.target/i386/fma_main.h: Likewise.\n+\t* gcc.target/i386/fma_run_double_1.c: Likewise.\n+\t* gcc.target/i386/fma_run_double_2.c: Likewise.\n+\t* gcc.target/i386/fma_run_double_3.c: Likewise.\n+\t* gcc.target/i386/fma_run_double_4.c: Likewise.\n+\t* gcc.target/i386/fma_run_double_5.c: Likewise.\n+\t* gcc.target/i386/fma_run_double_6.c: Likewise.\n+\t* gcc.target/i386/fma_run_double_results_1.h: Likewise.\n+\t* gcc.target/i386/fma_run_double_results_2.h: Likewise.\n+\t* gcc.target/i386/fma_run_double_results_3.h: Likewise.\n+\t* gcc.target/i386/fma_run_double_results_4.h: Likewise.\n+\t* gcc.target/i386/fma_run_double_results_5.h: Likewise.\n+\t* gcc.target/i386/fma_run_double_results_6.h: Likewise.\n+\t* gcc.target/i386/fma_run_float_1.c: Likewise.\n+\t* gcc.target/i386/fma_run_float_2.c: Likewise.\n+\t* gcc.target/i386/fma_run_float_3.c: Likewise.\n+\t* gcc.target/i386/fma_run_float_4.c: Likewise.\n+\t* gcc.target/i386/fma_run_float_5.c: Likewise.\n+\t* gcc.target/i386/fma_run_float_6.c: Likewise.\n+\t* gcc.target/i386/fma_run_float_results_1.h: Likewise.\n+\t* gcc.target/i386/fma_run_float_results_2.h: Likewise.\n+\t* gcc.target/i386/fma_run_float_results_3.h: Likewise.\n+\t* gcc.target/i386/fma_run_float_results_4.h: Likewise.\n+\t* gcc.target/i386/fma_run_float_results_5.h: Likewise.\n+\t* gcc.target/i386/fma_run_float_results_6.h: Likewise.\n+\t* gcc.target/i386/l_fma_1.h: Likewise.\n+\t* gcc.target/i386/l_fma_2.h: Likewise.\n+\t* gcc.target/i386/l_fma_3.h: Likewise.\n+\t* gcc.target/i386/l_fma_4.h: Likewise.\n+\t* gcc.target/i386/l_fma_5.h: Likewise.\n+\t* gcc.target/i386/l_fma_6.h: Likewise.\n+\t* gcc.target/i386/l_fma_double_1.c: Likewise.\n+\t* gcc.target/i386/l_fma_double_2.c: Likewise.\n+\t* gcc.target/i386/l_fma_double_3.c: Likewise.\n+\t* gcc.target/i386/l_fma_double_4.c: Likewise.\n+\t* gcc.target/i386/l_fma_double_5.c: Likewise.\n+\t* gcc.target/i386/l_fma_double_6.c: Likewise.\n+\t* gcc.target/i386/l_fma_float_1.c: Likewise.\n+\t* gcc.target/i386/l_fma_float_2.c: Likewise.\n+\t* gcc.target/i386/l_fma_float_3.c: Likewise.\n+\t* gcc.target/i386/l_fma_float_4.c: Likewise.\n+\t* gcc.target/i386/l_fma_float_5.c: Likewise.\n+\t* gcc.target/i386/l_fma_float_6.c: Likewise.\n+\t* gcc.target/i386/l_fma_main.h: Likewise.\n+\t* gcc.target/i386/l_fma_run_double_1.c: Likewise.\n+\t* gcc.target/i386/l_fma_run_double_2.c: Likewise.\n+\t* gcc.target/i386/l_fma_run_double_3.c: Likewise.\n+\t* gcc.target/i386/l_fma_run_double_4.c: Likewise.\n+\t* gcc.target/i386/l_fma_run_double_5.c: Likewise.\n+\t* gcc.target/i386/l_fma_run_double_6.c: Likewise.\n+\t* gcc.target/i386/l_fma_run_float_1.c: Likewise.\n+\t* gcc.target/i386/l_fma_run_float_2.c: Likewise.\n+\t* gcc.target/i386/l_fma_run_float_3.c: Likewise.\n+\t* gcc.target/i386/l_fma_run_float_4.c: Likewise.\n+\t* gcc.target/i386/l_fma_run_float_5.c: Likewise.\n+\t* gcc.target/i386/l_fma_run_float_6.c: Likewise.\n+\n 2011-10-10  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/50389"}, {"sha": "72d7373946f45aa99e0203be96eda58278dd6efa", "filename": "gcc/testsuite/gcc.target/i386/fma_1.h", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_1.h?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,101 @@\n+\n+#ifndef fma_1\n+#define fma_1\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_add_noneg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return ((a * b) + c) * a + b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_add_noneg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return ((a * b) + c) * a - b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_add_neg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return -((a * b) + c) * a + b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_add_neg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return -((a * b) + c) * a - b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_sub_noneg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return ((a * b) - c) * a + b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_sub_noneg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return ((a * b) - c) * a - b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_sub_neg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return -((a * b) - c) * a + b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_sub_neg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return -((a * b) - c) * a - b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_add_noneg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return (-(a * b) + c) * a + b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_add_noneg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return (-(a * b) + c) * a - b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_add_neg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return -(-(a * b) + c) * a + b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_add_neg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return -(-(a * b) + c) * a - b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_sub_noneg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return (-(a * b) - c) * a + b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_sub_noneg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return (-(a * b) - c) * a - b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_sub_neg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return -(-(a * b) - c) * a + b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_sub_neg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return -(-(a * b) - c) * a - b;\n+}\n+\n+#endif"}, {"sha": "c5d38d19a1b0188d5609f91d3c37e27e6b739ac0", "filename": "gcc/testsuite/gcc.target/i386/fma_2.h", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_2.h?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,101 @@\n+\n+#ifndef fma_2\n+#define fma_2\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_add_noneg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return ((a * b) + c) * a + c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_add_noneg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return ((a * b) + c) * a - c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_add_neg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return -((a * b) + c) * a + c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_add_neg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return -((a * b) + c) * a - c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_sub_noneg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return ((a * b) - c) * a + c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_sub_noneg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return ((a * b) - c) * a - c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_sub_neg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return -((a * b) - c) * a + c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_sub_neg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return -((a * b) - c) * a - c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_add_noneg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return (-(a * b) + c) * a + c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_add_noneg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return (-(a * b) + c) * a - c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_add_neg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return -(-(a * b) + c) * a + c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_add_neg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return -(-(a * b) + c) * a - c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_sub_noneg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return (-(a * b) - c) * a + c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_sub_noneg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return (-(a * b) - c) * a - c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_sub_neg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return -(-(a * b) - c) * a + c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_sub_neg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return -(-(a * b) - c) * a - c;\n+}\n+\n+#endif"}, {"sha": "efa88b5d97727a49b3c634a8787c4ad32907e18e", "filename": "gcc/testsuite/gcc.target/i386/fma_3.h", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_3.h?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,101 @@\n+\n+#ifndef fma_3\n+#define fma_3\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_add_noneg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return ((a * b) + c) * b + a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_add_noneg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return ((a * b) + c) * b - a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_add_neg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return -((a * b) + c) * b + a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_add_neg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return -((a * b) + c) * b - a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_sub_noneg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return ((a * b) - c) * b + a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_sub_noneg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return ((a * b) - c) * b - a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_sub_neg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return -((a * b) - c) * b + a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_sub_neg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return -((a * b) - c) * b - a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_add_noneg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return (-(a * b) + c) * b + a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_add_noneg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return (-(a * b) + c) * b - a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_add_neg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return -(-(a * b) + c) * b + a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_add_neg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return -(-(a * b) + c) * b - a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_sub_noneg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return (-(a * b) - c) * b + a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_sub_noneg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return (-(a * b) - c) * b - a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_sub_neg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return -(-(a * b) - c) * b + a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_sub_neg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return -(-(a * b) - c) * b - a;\n+}\n+\n+#endif"}, {"sha": "9fbb3efdf1ce07ad1bc0ccebf55d8a5f38b4e495", "filename": "gcc/testsuite/gcc.target/i386/fma_4.h", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_4.h?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,101 @@\n+\n+#ifndef fma_4\n+#define fma_4\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_add_noneg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return ((a * b) + c) * b + c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_add_noneg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return ((a * b) + c) * b - c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_add_neg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return -((a * b) + c) * b + c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_add_neg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return -((a * b) + c) * b - c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_sub_noneg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return ((a * b) - c) * b + c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_sub_noneg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return ((a * b) - c) * b - c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_sub_neg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return -((a * b) - c) * b + c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_sub_neg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return -((a * b) - c) * b - c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_add_noneg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return (-(a * b) + c) * b + c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_add_noneg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return (-(a * b) + c) * b - c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_add_neg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return -(-(a * b) + c) * b + c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_add_neg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return -(-(a * b) + c) * b - c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_sub_noneg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return (-(a * b) - c) * b + c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_sub_noneg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return (-(a * b) - c) * b - c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_sub_neg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return -(-(a * b) - c) * b + c;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_sub_neg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return -(-(a * b) - c) * b - c;\n+}\n+\n+#endif"}, {"sha": "3409db8f4fe7c6949987063eaa2bb86acabd4e0c", "filename": "gcc/testsuite/gcc.target/i386/fma_5.h", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_5.h?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,101 @@\n+\n+#ifndef fma_5\n+#define fma_5\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_add_noneg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return ((a * b) + c) * c + a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_add_noneg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return ((a * b) + c) * c - a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_add_neg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return -((a * b) + c) * c + a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_add_neg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return -((a * b) + c) * c - a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_sub_noneg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return ((a * b) - c) * c + a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_sub_noneg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return ((a * b) - c) * c - a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_sub_neg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return -((a * b) - c) * c + a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_sub_neg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return -((a * b) - c) * c - a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_add_noneg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return (-(a * b) + c) * c + a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_add_noneg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return (-(a * b) + c) * c - a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_add_neg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return -(-(a * b) + c) * c + a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_add_neg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return -(-(a * b) + c) * c - a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_sub_noneg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return (-(a * b) - c) * c + a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_sub_noneg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return (-(a * b) - c) * c - a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_sub_neg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return -(-(a * b) - c) * c + a;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_sub_neg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return -(-(a * b) - c) * c - a;\n+}\n+\n+#endif"}, {"sha": "a6bb4b0cd81cf94f679c0c9cc91f8faadcbad72d", "filename": "gcc/testsuite/gcc.target/i386/fma_6.h", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_6.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_6.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_6.h?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,101 @@\n+\n+#ifndef fma_6\n+#define fma_6\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_add_noneg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return ((a * b) + c) * c + b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_add_noneg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return ((a * b) + c) * c - b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_add_neg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return -((a * b) + c) * c + b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_add_neg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return -((a * b) + c) * c - b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_sub_noneg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return ((a * b) - c) * c + b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_sub_noneg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return ((a * b) - c) * c - b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_sub_neg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return -((a * b) - c) * c + b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_noneg_sub_neg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return -((a * b) - c) * c - b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_add_noneg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return (-(a * b) + c) * c + b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_add_noneg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return (-(a * b) + c) * c - b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_add_neg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return -(-(a * b) + c) * c + b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_add_neg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return -(-(a * b) + c) * c - b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_sub_noneg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return (-(a * b) - c) * c + b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_sub_noneg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return (-(a * b) - c) * c - b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_sub_neg_add (TYPE a, TYPE b, TYPE c)\n+{\n+  return -(-(a * b) - c) * c + b;\n+}\n+\n+TYPE __attribute__((sseregparm))\n+test_neg_sub_neg_sub (TYPE a, TYPE b, TYPE c)\n+{\n+  return -(-(a * b) - c) * c - b;\n+}\n+\n+#endif"}, {"sha": "51196ab60f90d1296684c63f198cdda886af6ed8", "filename": "gcc/testsuite/gcc.target/i386/fma_double_1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_double_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_double_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_double_1.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-options \"-O2 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE double\n+\n+#include \"fma_1.h\"\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd231sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub231sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd231sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub231sd\" 4  } } */"}, {"sha": "8536363b2c5278ba225e914f47b21d46d792976d", "filename": "gcc/testsuite/gcc.target/i386/fma_double_2.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_double_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_double_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_double_2.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-options \"-O2 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE double\n+\n+#include \"fma_2.h\"\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132sd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132sd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132sd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132sd\" 8  } } */"}, {"sha": "8ca789fab08e3c089c93a06f24f3dfcbc95af94e", "filename": "gcc/testsuite/gcc.target/i386/fma_double_3.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_double_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_double_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_double_3.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-options \"-O2 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE double\n+\n+#include \"fma_3.h\"\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd231sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub231sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd231sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub231sd\" 4  } } */"}, {"sha": "06a6a12352753aab0c79762fa84bbef19c10bdde", "filename": "gcc/testsuite/gcc.target/i386/fma_double_4.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_double_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_double_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_double_4.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-options \"-O2 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE double\n+\n+#include \"fma_4.h\"\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132sd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132sd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132sd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132sd\" 8  } } */"}, {"sha": "42b37311f5917facfb8a3f1d1273a0fc16e811f4", "filename": "gcc/testsuite/gcc.target/i386/fma_double_5.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_double_5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_double_5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_double_5.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-options \"-O2 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE double\n+\n+#include \"fma_5.h\"\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132sd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132sd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132sd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132sd\" 8  } } */"}, {"sha": "4ba0ab199729fe6bf4ebf9d398f33dbe463c08f1", "filename": "gcc/testsuite/gcc.target/i386/fma_double_6.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_double_6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_double_6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_double_6.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-options \"-O2 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE double\n+\n+#include \"fma_6.h\"\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132sd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132sd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132sd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132sd\" 8  } } */"}, {"sha": "0d5ef645b43df79acd0ad6c5f02eb5d30294fc42", "filename": "gcc/testsuite/gcc.target/i386/fma_float_1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_float_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_float_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_float_1.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-options \"-O2 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE float\n+\n+#include \"fma_1.h\"\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd231ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub231ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd231ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub231ss\" 4  } } */"}, {"sha": "a7f08972499e94519ee5c83adf055c8652dd0128", "filename": "gcc/testsuite/gcc.target/i386/fma_float_2.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_float_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_float_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_float_2.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-options \"-O2 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE float\n+\n+#include \"fma_2.h\"\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132ss\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132ss\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132ss\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132ss\" 8  } } */"}, {"sha": "ab837d64212c8280f25a3a2e95156c108d17d45a", "filename": "gcc/testsuite/gcc.target/i386/fma_float_3.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_float_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_float_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_float_3.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-options \"-O2 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE float\n+\n+#include \"fma_3.h\"\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd231ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub231ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd231ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub231ss\" 4  } } */"}, {"sha": "7501974c46f3e4f333d6b675feff7bcd03afa2be", "filename": "gcc/testsuite/gcc.target/i386/fma_float_4.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_float_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_float_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_float_4.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-options \"-O2 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE float\n+\n+#include \"fma_4.h\"\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132ss\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132ss\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132ss\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132ss\" 8  } } */"}, {"sha": "056b067406f8255a0cf890de12e0cfa9889dca68", "filename": "gcc/testsuite/gcc.target/i386/fma_float_5.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_float_5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_float_5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_float_5.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-options \"-O2 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE float\n+\n+#include \"fma_5.h\"\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132ss\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132ss\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132ss\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132ss\" 8  } } */"}, {"sha": "58d9f13b403483c86a3407bf08c1500d688dd097", "filename": "gcc/testsuite/gcc.target/i386/fma_float_6.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_float_6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_float_6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_float_6.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-options \"-O2 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE float\n+\n+#include \"fma_6.h\"\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132ss\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132ss\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132ss\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132ss\" 8  } } */"}, {"sha": "24464ab508b879ee27dde1802f12fba5429b4f09", "filename": "gcc/testsuite/gcc.target/i386/fma_main.h", "status": "added", "additions": 117, "deletions": 0, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_main.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_main.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_main.h?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,117 @@\n+\n+#ifndef fma_main\n+#define fma_main\n+\n+#if DEBUG\n+#include <stdio.h>\n+#endif\n+\n+TYPE m1[32] = {\n+\t\t1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,\n+\t       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32\n+\t      };\n+TYPE m2[32] = {\n+\t\t2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n+\t       18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33\n+\t      };\n+TYPE m3[32] = {\n+\t\t3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, \n+\t       19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34\n+\t      };\n+TYPE m4[32];\n+int test_fails = 0;\n+\n+void\n+compare_result(char * title, TYPE *res)\n+{\n+  int i;\n+  int good = 1;\n+  for (i =0; i < 32; i++)\n+    if (m4[i] != res[i])\n+      {\n+        if (good)\n+          {\n+#if DEBUG\n+             printf (\"!!!! %s miscompare\\n\", title);\n+#endif\n+             good = 0;\n+          }\n+#if DEBUG\n+        printf (\"res[%d] = %d, must be %d\\n\", i, (int)res[i], (int) m4[i]);\n+#endif\n+      }\n+  if (!good)\n+    test_fails = 1;\n+}\n+\n+static void fma_test ()\n+{\n+  int i;\n+  for (i=0; i <32; i++)\n+    m4[i] = test_noneg_add_noneg_add (m1[i], m2[i], m3[i]);\n+  compare_result (\"test0000\", res_test0000);\n+\n+  for (i=0; i <32; i++)\n+    m4[i] = test_noneg_add_noneg_sub (m1[i], m2[i], m3[i]);\n+  compare_result (\"test0001\", res_test0001);\n+\n+  for (i=0; i <32; i++)\n+    m4[i] = test_noneg_add_neg_add (m1[i], m2[i], m3[i]);\n+  compare_result (\"test0010\", res_test0010);\n+\n+  for (i=0; i <32; i++)\n+    m4[i] = test_noneg_add_neg_sub (m1[i], m2[i], m3[i]);\n+  compare_result (\"test0011\", res_test0011);\n+\n+  for (i=0; i <32; i++)\n+    m4[i] = test_noneg_sub_noneg_add (m1[i], m2[i], m3[i]);\n+  compare_result (\"test0100\", res_test0100);\n+\n+  for (i=0; i <32; i++)\n+    m4[i] = test_noneg_sub_noneg_sub (m1[i], m2[i], m3[i]);\n+  compare_result (\"test0101\", res_test0101);\n+\n+  for (i=0; i <32; i++)\n+    m4[i] = test_noneg_sub_neg_add (m1[i], m2[i], m3[i]);\n+  compare_result (\"test0110\", res_test0110);\n+\n+  for (i=0; i <32; i++)\n+    m4[i] = test_noneg_sub_neg_sub (m1[i], m2[i], m3[i]);\n+  compare_result (\"test0111\", res_test0111);\n+\n+  for (i=0; i <32; i++)\n+    m4[i] = test_neg_add_noneg_add (m1[i], m2[i], m3[i]);\n+  compare_result (\"test1000\", res_test1000);\n+\n+  for (i=0; i <32; i++)\n+    m4[i] = test_neg_add_noneg_sub (m1[i], m2[i], m3[i]);\n+  compare_result (\"test1001\", res_test1001);\n+\n+  for (i=0; i <32; i++)\n+    m4[i] = test_neg_add_neg_add (m1[i], m2[i], m3[i]);\n+  compare_result (\"test1010\", res_test1010);\n+\n+  for (i=0; i <32; i++)\n+    m4[i] = test_neg_add_neg_sub (m1[i], m2[i], m3[i]);\n+  compare_result (\"test1011\", res_test1011);\n+\n+  for (i=0; i <32; i++)\n+    m4[i] = test_neg_sub_noneg_add (m1[i], m2[i], m3[i]);\n+  compare_result (\"test1100\", res_test1100);\n+\n+  for (i=0; i <32; i++)\n+    m4[i] = test_neg_sub_noneg_sub (m1[i], m2[i], m3[i]);\n+  compare_result (\"test1101\", res_test1101);\n+\n+  for (i=0; i <32; i++)\n+    m4[i] = test_neg_sub_neg_add (m1[i], m2[i], m3[i]);\n+  compare_result (\"test1110\", res_test1110);\n+\n+  for (i=0; i <32; i++)\n+    m4[i] = test_neg_sub_neg_sub (m1[i], m2[i], m3[i]);\n+  compare_result (\"test1111\", res_test1111);\n+\n+  if (test_fails) abort ();\n+}\n+\n+#endif"}, {"sha": "d46327d23ee20835466b1d5a03cbaa1e4f9d50b3", "filename": "gcc/testsuite/gcc.target/i386/fma_run_double_1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_1.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-require-effective-target fma } */\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE double\n+\n+#include \"fma_1.h\"\n+\n+#include \"fma_run_double_results_1.h\"\n+\n+#include \"fma-check.h\"\n+#include \"fma_main.h\""}, {"sha": "14d325c3af40ee3cd3a1b454f0a465b9b9c14139", "filename": "gcc/testsuite/gcc.target/i386/fma_run_double_2.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_2.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-require-effective-target fma } */\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE double\n+\n+#include \"fma_2.h\"\n+\n+#include \"fma_run_double_results_2.h\"\n+\n+#include \"fma-check.h\"\n+#include \"fma_main.h\""}, {"sha": "f61f3bf7664682ed4bd547b01e1dd1fb2228dadf", "filename": "gcc/testsuite/gcc.target/i386/fma_run_double_3.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_3.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-require-effective-target fma } */\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE double\n+\n+#include \"fma_3.h\"\n+\n+#include \"fma_run_double_results_3.h\"\n+\n+#include \"fma-check.h\"\n+#include \"fma_main.h\""}, {"sha": "36d89ed979f04b9a3e2cc434bb1211c8ff24cdf8", "filename": "gcc/testsuite/gcc.target/i386/fma_run_double_4.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_4.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-require-effective-target fma } */\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE double\n+\n+#include \"fma_4.h\"\n+\n+#include \"fma_run_double_results_4.h\"\n+\n+#include \"fma-check.h\"\n+#include \"fma_main.h\""}, {"sha": "a43af769c032ab03099688b2ee89b240f16de04b", "filename": "gcc/testsuite/gcc.target/i386/fma_run_double_5.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_5.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-require-effective-target fma } */\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE double\n+\n+#include \"fma_5.h\"\n+\n+#include \"fma_run_double_results_5.h\"\n+\n+#include \"fma-check.h\"\n+#include \"fma_main.h\""}, {"sha": "b72c87d13cb717146ef6b219a81acbc554d56260", "filename": "gcc/testsuite/gcc.target/i386/fma_run_double_6.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_6.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-require-effective-target fma } */\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE double\n+\n+#include \"fma_6.h\"\n+\n+#include \"fma_run_double_results_6.h\"\n+\n+#include \"fma-check.h\"\n+#include \"fma_main.h\""}, {"sha": "27f325b86bf4a5245e35cf38c8a70a34c9660939", "filename": "gcc/testsuite/gcc.target/i386/fma_run_double_results_1.h", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_results_1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_results_1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_results_1.h?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,54 @@\n+\n+#ifndef fma_run_double_results_1\n+#define fma_run_double_results_1\n+\n+TYPE res_test0000[32] = {\n+  7, 23, 55, 109, 191, 307, 463, 665, 919, 1231, 1607, 2053, 2575, 3179, 3871, 4657, 5543, 6535, 7639, 8861, 10207, 11683, 13295, 15049, 16951, 19007, 21223, 23605, 26159, 28891, 31807, 34913\n+};\n+TYPE res_test0001[32] = {\n+  3, 17, 47, 99, 179, 293, 447, 647, 899, 1209, 1583, 2027, 2547, 3149, 3839, 4623, 5507, 6497, 7599, 8819, 10163, 11637, 13247, 14999, 16899, 18953, 21167, 23547, 26099, 28829, 31743, 34847\n+};\n+TYPE res_test0010[32] = {\n+  -3, -17, -47, -99, -179, -293, -447, -647, -899, -1209, -1583, -2027, -2547, -3149, -3839, -4623, -5507, -6497, -7599, -8819, -10163, -11637, -13247, -14999, -16899, -18953, -21167, -23547, -26099, -28829, -31743, -34847\n+};\n+TYPE res_test0011[32] = {\n+  -7, -23, -55, -109, -191, -307, -463, -665, -919, -1231, -1607, -2053, -2575, -3179, -3871, -4657, -5543, -6535, -7639, -8861, -10207, -11683, -13295, -15049, -16951, -19007, -21223, -23605, -26159, -28891, -31807, -34913\n+};\n+TYPE res_test0100[32] = {\n+  1, 7, 25, 61, 121, 211, 337, 505, 721, 991, 1321, 1717, 2185, 2731, 3361, 4081, 4897, 5815, 6841, 7981, 9241, 10627, 12145, 13801, 15601, 17551, 19657, 21925, 24361, 26971, 29761, 32737\n+};\n+TYPE res_test0101[32] = {\n+  -3, 1, 17, 51, 109, 197, 321, 487, 701, 969, 1297, 1691, 2157, 2701, 3329, 4047, 4861, 5777, 6801, 7939, 9197, 10581, 12097, 13751, 15549, 17497, 19601, 21867, 24301, 26909, 29697, 32671\n+};\n+TYPE res_test0110[32] = {\n+  3, -1, -17, -51, -109, -197, -321, -487, -701, -969, -1297, -1691, -2157, -2701, -3329, -4047, -4861, -5777, -6801, -7939, -9197, -10581, -12097, -13751, -15549, -17497, -19601, -21867, -24301, -26909, -29697, -32671\n+};\n+TYPE res_test0111[32] = {\n+  -1, -7, -25, -61, -121, -211, -337, -505, -721, -991, -1321, -1717, -2185, -2731, -3361, -4081, -4897, -5815, -6841, -7981, -9241, -10627, -12145, -13801, -15601, -17551, -19657, -21925, -24361, -26971, -29761, -32737\n+};\n+TYPE res_test1000[32] = {\n+  3, -1, -17, -51, -109, -197, -321, -487, -701, -969, -1297, -1691, -2157, -2701, -3329, -4047, -4861, -5777, -6801, -7939, -9197, -10581, -12097, -13751, -15549, -17497, -19601, -21867, -24301, -26909, -29697, -32671\n+};\n+TYPE res_test1001[32] = {\n+  -1, -7, -25, -61, -121, -211, -337, -505, -721, -991, -1321, -1717, -2185, -2731, -3361, -4081, -4897, -5815, -6841, -7981, -9241, -10627, -12145, -13801, -15601, -17551, -19657, -21925, -24361, -26971, -29761, -32737\n+};\n+TYPE res_test1010[32] = {\n+  1, 7, 25, 61, 121, 211, 337, 505, 721, 991, 1321, 1717, 2185, 2731, 3361, 4081, 4897, 5815, 6841, 7981, 9241, 10627, 12145, 13801, 15601, 17551, 19657, 21925, 24361, 26971, 29761, 32737\n+};\n+TYPE res_test1011[32] = {\n+  -3, 1, 17, 51, 109, 197, 321, 487, 701, 969, 1297, 1691, 2157, 2701, 3329, 4047, 4861, 5777, 6801, 7939, 9197, 10581, 12097, 13751, 15549, 17497, 19601, 21867, 24301, 26909, 29697, 32671\n+};\n+TYPE res_test1100[32] = {\n+  -3, -17, -47, -99, -179, -293, -447, -647, -899, -1209, -1583, -2027, -2547, -3149, -3839, -4623, -5507, -6497, -7599, -8819, -10163, -11637, -13247, -14999, -16899, -18953, -21167, -23547, -26099, -28829, -31743, -34847\n+};\n+TYPE res_test1101[32] = {\n+  -7, -23, -55, -109, -191, -307, -463, -665, -919, -1231, -1607, -2053, -2575, -3179, -3871, -4657, -5543, -6535, -7639, -8861, -10207, -11683, -13295, -15049, -16951, -19007, -21223, -23605, -26159, -28891, -31807, -34913\n+};\n+TYPE res_test1110[32] = {\n+  7, 23, 55, 109, 191, 307, 463, 665, 919, 1231, 1607, 2053, 2575, 3179, 3871, 4657, 5543, 6535, 7639, 8861, 10207, 11683, 13295, 15049, 16951, 19007, 21223, 23605, 26159, 28891, 31807, 34913\n+};\n+TYPE res_test1111[32] = {\n+  3, 17, 47, 99, 179, 293, 447, 647, 899, 1209, 1583, 2027, 2547, 3149, 3839, 4623, 5507, 6497, 7599, 8819, 10163, 11637, 13247, 14999, 16899, 18953, 21167, 23547, 26099, 28829, 31743, 34847\n+};\n+\n+#endif"}, {"sha": "f9327ce6501231d3d8868553c1df7e699df258bf", "filename": "gcc/testsuite/gcc.target/i386/fma_run_double_results_2.h", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_results_2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_results_2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_results_2.h?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,54 @@\n+\n+#ifndef fma_run_double_results_2\n+#define fma_run_double_results_2\n+\n+TYPE res_test0000[32] = {\n+  8, 24, 56, 110, 192, 308, 464, 666, 920, 1232, 1608, 2054, 2576, 3180, 3872, 4658, 5544, 6536, 7640, 8862, 10208, 11684, 13296, 15050, 16952, 19008, 21224, 23606, 26160, 28892, 31808, 34914\n+};\n+TYPE res_test0001[32] = {\n+  2, 16, 46, 98, 178, 292, 446, 646, 898, 1208, 1582, 2026, 2546, 3148, 3838, 4622, 5506, 6496, 7598, 8818, 10162, 11636, 13246, 14998, 16898, 18952, 21166, 23546, 26098, 28828, 31742, 34846\n+};\n+TYPE res_test0010[32] = {\n+  -2, -16, -46, -98, -178, -292, -446, -646, -898, -1208, -1582, -2026, -2546, -3148, -3838, -4622, -5506, -6496, -7598, -8818, -10162, -11636, -13246, -14998, -16898, -18952, -21166, -23546, -26098, -28828, -31742, -34846\n+};\n+TYPE res_test0011[32] = {\n+  -8, -24, -56, -110, -192, -308, -464, -666, -920, -1232, -1608, -2054, -2576, -3180, -3872, -4658, -5544, -6536, -7640, -8862, -10208, -11684, -13296, -15050, -16952, -19008, -21224, -23606, -26160, -28892, -31808, -34914\n+};\n+TYPE res_test0100[32] = {\n+  2, 8, 26, 62, 122, 212, 338, 506, 722, 992, 1322, 1718, 2186, 2732, 3362, 4082, 4898, 5816, 6842, 7982, 9242, 10628, 12146, 13802, 15602, 17552, 19658, 21926, 24362, 26972, 29762, 32738\n+};\n+TYPE res_test0101[32] = {\n+  -4, 0, 16, 50, 108, 196, 320, 486, 700, 968, 1296, 1690, 2156, 2700, 3328, 4046, 4860, 5776, 6800, 7938, 9196, 10580, 12096, 13750, 15548, 17496, 19600, 21866, 24300, 26908, 29696, 32670\n+};\n+TYPE res_test0110[32] = {\n+  4, 0, -16, -50, -108, -196, -320, -486, -700, -968, -1296, -1690, -2156, -2700, -3328, -4046, -4860, -5776, -6800, -7938, -9196, -10580, -12096, -13750, -15548, -17496, -19600, -21866, -24300, -26908, -29696, -32670\n+};\n+TYPE res_test0111[32] = {\n+  -2, -8, -26, -62, -122, -212, -338, -506, -722, -992, -1322, -1718, -2186, -2732, -3362, -4082, -4898, -5816, -6842, -7982, -9242, -10628, -12146, -13802, -15602, -17552, -19658, -21926, -24362, -26972, -29762, -32738\n+};\n+TYPE res_test1000[32] = {\n+  4, 0, -16, -50, -108, -196, -320, -486, -700, -968, -1296, -1690, -2156, -2700, -3328, -4046, -4860, -5776, -6800, -7938, -9196, -10580, -12096, -13750, -15548, -17496, -19600, -21866, -24300, -26908, -29696, -32670\n+};\n+TYPE res_test1001[32] = {\n+  -2, -8, -26, -62, -122, -212, -338, -506, -722, -992, -1322, -1718, -2186, -2732, -3362, -4082, -4898, -5816, -6842, -7982, -9242, -10628, -12146, -13802, -15602, -17552, -19658, -21926, -24362, -26972, -29762, -32738\n+};\n+TYPE res_test1010[32] = {\n+  2, 8, 26, 62, 122, 212, 338, 506, 722, 992, 1322, 1718, 2186, 2732, 3362, 4082, 4898, 5816, 6842, 7982, 9242, 10628, 12146, 13802, 15602, 17552, 19658, 21926, 24362, 26972, 29762, 32738\n+};\n+TYPE res_test1011[32] = {\n+  -4, 0, 16, 50, 108, 196, 320, 486, 700, 968, 1296, 1690, 2156, 2700, 3328, 4046, 4860, 5776, 6800, 7938, 9196, 10580, 12096, 13750, 15548, 17496, 19600, 21866, 24300, 26908, 29696, 32670\n+};\n+TYPE res_test1100[32] = {\n+  -2, -16, -46, -98, -178, -292, -446, -646, -898, -1208, -1582, -2026, -2546, -3148, -3838, -4622, -5506, -6496, -7598, -8818, -10162, -11636, -13246, -14998, -16898, -18952, -21166, -23546, -26098, -28828, -31742, -34846\n+};\n+TYPE res_test1101[32] = {\n+  -8, -24, -56, -110, -192, -308, -464, -666, -920, -1232, -1608, -2054, -2576, -3180, -3872, -4658, -5544, -6536, -7640, -8862, -10208, -11684, -13296, -15050, -16952, -19008, -21224, -23606, -26160, -28892, -31808, -34914\n+};\n+TYPE res_test1110[32] = {\n+  8, 24, 56, 110, 192, 308, 464, 666, 920, 1232, 1608, 2054, 2576, 3180, 3872, 4658, 5544, 6536, 7640, 8862, 10208, 11684, 13296, 15050, 16952, 19008, 21224, 23606, 26160, 28892, 31808, 34914\n+};\n+TYPE res_test1111[32] = {\n+  2, 16, 46, 98, 178, 292, 446, 646, 898, 1208, 1582, 2026, 2546, 3148, 3838, 4622, 5506, 6496, 7598, 8818, 10162, 11636, 13246, 14998, 16898, 18952, 21166, 23546, 26098, 28828, 31742, 34846\n+};\n+\n+#endif"}, {"sha": "44cf82735d1bc10ce2150c51335a09d243fd1deb", "filename": "gcc/testsuite/gcc.target/i386/fma_run_double_results_3.h", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_results_3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_results_3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_results_3.h?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,54 @@\n+\n+#ifndef fma_run_double_results_3\n+#define fma_run_double_results_3\n+\n+TYPE res_test0000[32] = {\n+  11, 32, 71, 134, 227, 356, 527, 746, 1019, 1352, 1751, 2222, 2771, 3404, 4127, 4946, 5867, 6896, 8039, 9302, 10691, 12212, 13871, 15674, 17627, 19736, 22007, 24446, 27059, 29852, 32831, 36002\n+};\n+TYPE res_test0001[32] = {\n+  9, 28, 65, 126, 217, 344, 513, 730, 1001, 1332, 1729, 2198, 2745, 3376, 4097, 4914, 5833, 6860, 8001, 9262, 10649, 12168, 13825, 15626, 17577, 19684, 21953, 24390, 27001, 29792, 32769, 35938\n+};\n+TYPE res_test0010[32] = {\n+  -9, -28, -65, -126, -217, -344, -513, -730, -1001, -1332, -1729, -2198, -2745, -3376, -4097, -4914, -5833, -6860, -8001, -9262, -10649, -12168, -13825, -15626, -17577, -19684, -21953, -24390, -27001, -29792, -32769, -35938\n+};\n+TYPE res_test0011[32] = {\n+  -11, -32, -71, -134, -227, -356, -527, -746, -1019, -1352, -1751, -2222, -2771, -3404, -4127, -4946, -5867, -6896, -8039, -9302, -10691, -12212, -13871, -15674, -17627, -19736, -22007, -24446, -27059, -29852, -32831, -36002\n+};\n+TYPE res_test0100[32] = {\n+  -1, 8, 31, 74, 143, 244, 383, 566, 799, 1088, 1439, 1858, 2351, 2924, 3583, 4334, 5183, 6136, 7199, 8378, 9679, 11108, 12671, 14374, 16223, 18224, 20383, 22706, 25199, 27868, 30719, 33758\n+};\n+TYPE res_test0101[32] = {\n+  -3, 4, 25, 66, 133, 232, 369, 550, 781, 1068, 1417, 1834, 2325, 2896, 3553, 4302, 5149, 6100, 7161, 8338, 9637, 11064, 12625, 14326, 16173, 18172, 20329, 22650, 25141, 27808, 30657, 33694\n+};\n+TYPE res_test0110[32] = {\n+  3, -4, -25, -66, -133, -232, -369, -550, -781, -1068, -1417, -1834, -2325, -2896, -3553, -4302, -5149, -6100, -7161, -8338, -9637, -11064, -12625, -14326, -16173, -18172, -20329, -22650, -25141, -27808, -30657, -33694\n+};\n+TYPE res_test0111[32] = {\n+  1, -8, -31, -74, -143, -244, -383, -566, -799, -1088, -1439, -1858, -2351, -2924, -3583, -4334, -5183, -6136, -7199, -8378, -9679, -11108, -12671, -14374, -16223, -18224, -20383, -22706, -25199, -27868, -30719, -33758\n+};\n+TYPE res_test1000[32] = {\n+  3, -4, -25, -66, -133, -232, -369, -550, -781, -1068, -1417, -1834, -2325, -2896, -3553, -4302, -5149, -6100, -7161, -8338, -9637, -11064, -12625, -14326, -16173, -18172, -20329, -22650, -25141, -27808, -30657, -33694\n+};\n+TYPE res_test1001[32] = {\n+  1, -8, -31, -74, -143, -244, -383, -566, -799, -1088, -1439, -1858, -2351, -2924, -3583, -4334, -5183, -6136, -7199, -8378, -9679, -11108, -12671, -14374, -16223, -18224, -20383, -22706, -25199, -27868, -30719, -33758\n+};\n+TYPE res_test1010[32] = {\n+  -1, 8, 31, 74, 143, 244, 383, 566, 799, 1088, 1439, 1858, 2351, 2924, 3583, 4334, 5183, 6136, 7199, 8378, 9679, 11108, 12671, 14374, 16223, 18224, 20383, 22706, 25199, 27868, 30719, 33758\n+};\n+TYPE res_test1011[32] = {\n+  -3, 4, 25, 66, 133, 232, 369, 550, 781, 1068, 1417, 1834, 2325, 2896, 3553, 4302, 5149, 6100, 7161, 8338, 9637, 11064, 12625, 14326, 16173, 18172, 20329, 22650, 25141, 27808, 30657, 33694\n+};\n+TYPE res_test1100[32] = {\n+  -9, -28, -65, -126, -217, -344, -513, -730, -1001, -1332, -1729, -2198, -2745, -3376, -4097, -4914, -5833, -6860, -8001, -9262, -10649, -12168, -13825, -15626, -17577, -19684, -21953, -24390, -27001, -29792, -32769, -35938\n+};\n+TYPE res_test1101[32] = {\n+  -11, -32, -71, -134, -227, -356, -527, -746, -1019, -1352, -1751, -2222, -2771, -3404, -4127, -4946, -5867, -6896, -8039, -9302, -10691, -12212, -13871, -15674, -17627, -19736, -22007, -24446, -27059, -29852, -32831, -36002\n+};\n+TYPE res_test1110[32] = {\n+  11, 32, 71, 134, 227, 356, 527, 746, 1019, 1352, 1751, 2222, 2771, 3404, 4127, 4946, 5867, 6896, 8039, 9302, 10691, 12212, 13871, 15674, 17627, 19736, 22007, 24446, 27059, 29852, 32831, 36002\n+};\n+TYPE res_test1111[32] = {\n+  9, 28, 65, 126, 217, 344, 513, 730, 1001, 1332, 1729, 2198, 2745, 3376, 4097, 4914, 5833, 6860, 8001, 9262, 10649, 12168, 13825, 15626, 17577, 19684, 21953, 24390, 27001, 29792, 32769, 35938\n+};\n+\n+#endif"}, {"sha": "0b7f85775cc2431ee2a637921bb36d8d14881f18", "filename": "gcc/testsuite/gcc.target/i386/fma_run_double_results_4.h", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_results_4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_results_4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_results_4.h?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,54 @@\n+\n+#ifndef fma_run_double_results_4\n+#define fma_run_double_results_4\n+\n+TYPE res_test0000[32] = {\n+  13, 34, 73, 136, 229, 358, 529, 748, 1021, 1354, 1753, 2224, 2773, 3406, 4129, 4948, 5869, 6898, 8041, 9304, 10693, 12214, 13873, 15676, 17629, 19738, 22009, 24448, 27061, 29854, 32833, 36004\n+};\n+TYPE res_test0001[32] = {\n+  7, 26, 63, 124, 215, 342, 511, 728, 999, 1330, 1727, 2196, 2743, 3374, 4095, 4912, 5831, 6858, 7999, 9260, 10647, 12166, 13823, 15624, 17575, 19682, 21951, 24388, 26999, 29790, 32767, 35936\n+};\n+TYPE res_test0010[32] = {\n+  -7, -26, -63, -124, -215, -342, -511, -728, -999, -1330, -1727, -2196, -2743, -3374, -4095, -4912, -5831, -6858, -7999, -9260, -10647, -12166, -13823, -15624, -17575, -19682, -21951, -24388, -26999, -29790, -32767, -35936\n+};\n+TYPE res_test0011[32] = {\n+  -13, -34, -73, -136, -229, -358, -529, -748, -1021, -1354, -1753, -2224, -2773, -3406, -4129, -4948, -5869, -6898, -8041, -9304, -10693, -12214, -13873, -15676, -17629, -19738, -22009, -24448, -27061, -29854, -32833, -36004\n+};\n+TYPE res_test0100[32] = {\n+  1, 10, 33, 76, 145, 246, 385, 568, 801, 1090, 1441, 1860, 2353, 2926, 3585, 4336, 5185, 6138, 7201, 8380, 9681, 11110, 12673, 14376, 16225, 18226, 20385, 22708, 25201, 27870, 30721, 33760\n+};\n+TYPE res_test0101[32] = {\n+  -5, 2, 23, 64, 131, 230, 367, 548, 779, 1066, 1415, 1832, 2323, 2894, 3551, 4300, 5147, 6098, 7159, 8336, 9635, 11062, 12623, 14324, 16171, 18170, 20327, 22648, 25139, 27806, 30655, 33692\n+};\n+TYPE res_test0110[32] = {\n+  5, -2, -23, -64, -131, -230, -367, -548, -779, -1066, -1415, -1832, -2323, -2894, -3551, -4300, -5147, -6098, -7159, -8336, -9635, -11062, -12623, -14324, -16171, -18170, -20327, -22648, -25139, -27806, -30655, -33692\n+};\n+TYPE res_test0111[32] = {\n+  -1, -10, -33, -76, -145, -246, -385, -568, -801, -1090, -1441, -1860, -2353, -2926, -3585, -4336, -5185, -6138, -7201, -8380, -9681, -11110, -12673, -14376, -16225, -18226, -20385, -22708, -25201, -27870, -30721, -33760\n+};\n+TYPE res_test1000[32] = {\n+  5, -2, -23, -64, -131, -230, -367, -548, -779, -1066, -1415, -1832, -2323, -2894, -3551, -4300, -5147, -6098, -7159, -8336, -9635, -11062, -12623, -14324, -16171, -18170, -20327, -22648, -25139, -27806, -30655, -33692\n+};\n+TYPE res_test1001[32] = {\n+  -1, -10, -33, -76, -145, -246, -385, -568, -801, -1090, -1441, -1860, -2353, -2926, -3585, -4336, -5185, -6138, -7201, -8380, -9681, -11110, -12673, -14376, -16225, -18226, -20385, -22708, -25201, -27870, -30721, -33760\n+};\n+TYPE res_test1010[32] = {\n+  1, 10, 33, 76, 145, 246, 385, 568, 801, 1090, 1441, 1860, 2353, 2926, 3585, 4336, 5185, 6138, 7201, 8380, 9681, 11110, 12673, 14376, 16225, 18226, 20385, 22708, 25201, 27870, 30721, 33760\n+};\n+TYPE res_test1011[32] = {\n+  -5, 2, 23, 64, 131, 230, 367, 548, 779, 1066, 1415, 1832, 2323, 2894, 3551, 4300, 5147, 6098, 7159, 8336, 9635, 11062, 12623, 14324, 16171, 18170, 20327, 22648, 25139, 27806, 30655, 33692\n+};\n+TYPE res_test1100[32] = {\n+  -7, -26, -63, -124, -215, -342, -511, -728, -999, -1330, -1727, -2196, -2743, -3374, -4095, -4912, -5831, -6858, -7999, -9260, -10647, -12166, -13823, -15624, -17575, -19682, -21951, -24388, -26999, -29790, -32767, -35936\n+};\n+TYPE res_test1101[32] = {\n+  -13, -34, -73, -136, -229, -358, -529, -748, -1021, -1354, -1753, -2224, -2773, -3406, -4129, -4948, -5869, -6898, -8041, -9304, -10693, -12214, -13873, -15676, -17629, -19738, -22009, -24448, -27061, -29854, -32833, -36004\n+};\n+TYPE res_test1110[32] = {\n+  13, 34, 73, 136, 229, 358, 529, 748, 1021, 1354, 1753, 2224, 2773, 3406, 4129, 4948, 5869, 6898, 8041, 9304, 10693, 12214, 13873, 15676, 17629, 19738, 22009, 24448, 27061, 29854, 32833, 36004\n+};\n+TYPE res_test1111[32] = {\n+  7, 26, 63, 124, 215, 342, 511, 728, 999, 1330, 1727, 2196, 2743, 3374, 4095, 4912, 5831, 6858, 7999, 9260, 10647, 12166, 13823, 15624, 17575, 19682, 21951, 24388, 26999, 29790, 32767, 35936\n+};\n+\n+#endif"}, {"sha": "0f96cad01144001d6556c907c7d994763c0f0bee", "filename": "gcc/testsuite/gcc.target/i386/fma_run_double_results_5.h", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_results_5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_results_5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_results_5.h?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,54 @@\n+\n+#ifndef fma_run_double_results_5\n+#define fma_run_double_results_5\n+\n+TYPE res_test0000[32] = {\n+  16, 42, 88, 160, 264, 406, 592, 828, 1120, 1474, 1896, 2392, 2968, 3630, 4384, 5236, 6192, 7258, 8440, 9744, 11176, 12742, 14448, 16300, 18304, 20466, 22792, 25288, 27960, 30814, 33856, 37092\n+};\n+TYPE res_test0001[32] = {\n+  14, 38, 82, 152, 254, 394, 578, 812, 1102, 1454, 1874, 2368, 2942, 3602, 4354, 5204, 6158, 7222, 8402, 9704, 11134, 12698, 14402, 16252, 18254, 20414, 22738, 25232, 27902, 30754, 33794, 37028\n+};\n+TYPE res_test0010[32] = {\n+  -14, -38, -82, -152, -254, -394, -578, -812, -1102, -1454, -1874, -2368, -2942, -3602, -4354, -5204, -6158, -7222, -8402, -9704, -11134, -12698, -14402, -16252, -18254, -20414, -22738, -25232, -27902, -30754, -33794, -37028\n+};\n+TYPE res_test0011[32] = {\n+  -16, -42, -88, -160, -264, -406, -592, -828, -1120, -1474, -1896, -2392, -2968, -3630, -4384, -5236, -6192, -7258, -8440, -9744, -11176, -12742, -14448, -16300, -18304, -20466, -22792, -25288, -27960, -30814, -33856, -37092\n+};\n+TYPE res_test0100[32] = {\n+  -2, 10, 38, 88, 166, 278, 430, 628, 878, 1186, 1558, 2000, 2518, 3118, 3806, 4588, 5470, 6458, 7558, 8776, 10118, 11590, 13198, 14948, 16846, 18898, 21110, 23488, 26038, 28766, 31678, 34780\n+};\n+TYPE res_test0101[32] = {\n+  -4, 6, 32, 80, 156, 266, 416, 612, 860, 1166, 1536, 1976, 2492, 3090, 3776, 4556, 5436, 6422, 7520, 8736, 10076, 11546, 13152, 14900, 16796, 18846, 21056, 23432, 25980, 28706, 31616, 34716\n+};\n+TYPE res_test0110[32] = {\n+  4, -6, -32, -80, -156, -266, -416, -612, -860, -1166, -1536, -1976, -2492, -3090, -3776, -4556, -5436, -6422, -7520, -8736, -10076, -11546, -13152, -14900, -16796, -18846, -21056, -23432, -25980, -28706, -31616, -34716\n+};\n+TYPE res_test0111[32] = {\n+  2, -10, -38, -88, -166, -278, -430, -628, -878, -1186, -1558, -2000, -2518, -3118, -3806, -4588, -5470, -6458, -7558, -8776, -10118, -11590, -13198, -14948, -16846, -18898, -21110, -23488, -26038, -28766, -31678, -34780\n+};\n+TYPE res_test1000[32] = {\n+  4, -6, -32, -80, -156, -266, -416, -612, -860, -1166, -1536, -1976, -2492, -3090, -3776, -4556, -5436, -6422, -7520, -8736, -10076, -11546, -13152, -14900, -16796, -18846, -21056, -23432, -25980, -28706, -31616, -34716\n+};\n+TYPE res_test1001[32] = {\n+  2, -10, -38, -88, -166, -278, -430, -628, -878, -1186, -1558, -2000, -2518, -3118, -3806, -4588, -5470, -6458, -7558, -8776, -10118, -11590, -13198, -14948, -16846, -18898, -21110, -23488, -26038, -28766, -31678, -34780\n+};\n+TYPE res_test1010[32] = {\n+  -2, 10, 38, 88, 166, 278, 430, 628, 878, 1186, 1558, 2000, 2518, 3118, 3806, 4588, 5470, 6458, 7558, 8776, 10118, 11590, 13198, 14948, 16846, 18898, 21110, 23488, 26038, 28766, 31678, 34780\n+};\n+TYPE res_test1011[32] = {\n+  -4, 6, 32, 80, 156, 266, 416, 612, 860, 1166, 1536, 1976, 2492, 3090, 3776, 4556, 5436, 6422, 7520, 8736, 10076, 11546, 13152, 14900, 16796, 18846, 21056, 23432, 25980, 28706, 31616, 34716\n+};\n+TYPE res_test1100[32] = {\n+  -14, -38, -82, -152, -254, -394, -578, -812, -1102, -1454, -1874, -2368, -2942, -3602, -4354, -5204, -6158, -7222, -8402, -9704, -11134, -12698, -14402, -16252, -18254, -20414, -22738, -25232, -27902, -30754, -33794, -37028\n+};\n+TYPE res_test1101[32] = {\n+  -16, -42, -88, -160, -264, -406, -592, -828, -1120, -1474, -1896, -2392, -2968, -3630, -4384, -5236, -6192, -7258, -8440, -9744, -11176, -12742, -14448, -16300, -18304, -20466, -22792, -25288, -27960, -30814, -33856, -37092\n+};\n+TYPE res_test1110[32] = {\n+  16, 42, 88, 160, 264, 406, 592, 828, 1120, 1474, 1896, 2392, 2968, 3630, 4384, 5236, 6192, 7258, 8440, 9744, 11176, 12742, 14448, 16300, 18304, 20466, 22792, 25288, 27960, 30814, 33856, 37092\n+};\n+TYPE res_test1111[32] = {\n+  14, 38, 82, 152, 254, 394, 578, 812, 1102, 1454, 1874, 2368, 2942, 3602, 4354, 5204, 6158, 7222, 8402, 9704, 11134, 12698, 14402, 16252, 18254, 20414, 22738, 25232, 27902, 30754, 33794, 37028\n+};\n+\n+#endif"}, {"sha": "29ae9256c0a25fc6b06f84f6355fd162bf295e6a", "filename": "gcc/testsuite/gcc.target/i386/fma_run_double_results_6.h", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_results_6.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_results_6.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_double_results_6.h?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,54 @@\n+\n+#ifndef fma_run_double_results_6\n+#define fma_run_double_results_6\n+\n+TYPE res_test0000[32] = {\n+  17, 43, 89, 161, 265, 407, 593, 829, 1121, 1475, 1897, 2393, 2969, 3631, 4385, 5237, 6193, 7259, 8441, 9745, 11177, 12743, 14449, 16301, 18305, 20467, 22793, 25289, 27961, 30815, 33857, 37093\n+};\n+TYPE res_test0001[32] = {\n+  13, 37, 81, 151, 253, 393, 577, 811, 1101, 1453, 1873, 2367, 2941, 3601, 4353, 5203, 6157, 7221, 8401, 9703, 11133, 12697, 14401, 16251, 18253, 20413, 22737, 25231, 27901, 30753, 33793, 37027\n+};\n+TYPE res_test0010[32] = {\n+  -13, -37, -81, -151, -253, -393, -577, -811, -1101, -1453, -1873, -2367, -2941, -3601, -4353, -5203, -6157, -7221, -8401, -9703, -11133, -12697, -14401, -16251, -18253, -20413, -22737, -25231, -27901, -30753, -33793, -37027\n+};\n+TYPE res_test0011[32] = {\n+  -17, -43, -89, -161, -265, -407, -593, -829, -1121, -1475, -1897, -2393, -2969, -3631, -4385, -5237, -6193, -7259, -8441, -9745, -11177, -12743, -14449, -16301, -18305, -20467, -22793, -25289, -27961, -30815, -33857, -37093\n+};\n+TYPE res_test0100[32] = {\n+  -1, 11, 39, 89, 167, 279, 431, 629, 879, 1187, 1559, 2001, 2519, 3119, 3807, 4589, 5471, 6459, 7559, 8777, 10119, 11591, 13199, 14949, 16847, 18899, 21111, 23489, 26039, 28767, 31679, 34781\n+};\n+TYPE res_test0101[32] = {\n+  -5, 5, 31, 79, 155, 265, 415, 611, 859, 1165, 1535, 1975, 2491, 3089, 3775, 4555, 5435, 6421, 7519, 8735, 10075, 11545, 13151, 14899, 16795, 18845, 21055, 23431, 25979, 28705, 31615, 34715\n+};\n+TYPE res_test0110[32] = {\n+  5, -5, -31, -79, -155, -265, -415, -611, -859, -1165, -1535, -1975, -2491, -3089, -3775, -4555, -5435, -6421, -7519, -8735, -10075, -11545, -13151, -14899, -16795, -18845, -21055, -23431, -25979, -28705, -31615, -34715\n+};\n+TYPE res_test0111[32] = {\n+  1, -11, -39, -89, -167, -279, -431, -629, -879, -1187, -1559, -2001, -2519, -3119, -3807, -4589, -5471, -6459, -7559, -8777, -10119, -11591, -13199, -14949, -16847, -18899, -21111, -23489, -26039, -28767, -31679, -34781\n+};\n+TYPE res_test1000[32] = {\n+  5, -5, -31, -79, -155, -265, -415, -611, -859, -1165, -1535, -1975, -2491, -3089, -3775, -4555, -5435, -6421, -7519, -8735, -10075, -11545, -13151, -14899, -16795, -18845, -21055, -23431, -25979, -28705, -31615, -34715\n+};\n+TYPE res_test1001[32] = {\n+  1, -11, -39, -89, -167, -279, -431, -629, -879, -1187, -1559, -2001, -2519, -3119, -3807, -4589, -5471, -6459, -7559, -8777, -10119, -11591, -13199, -14949, -16847, -18899, -21111, -23489, -26039, -28767, -31679, -34781\n+};\n+TYPE res_test1010[32] = {\n+  -1, 11, 39, 89, 167, 279, 431, 629, 879, 1187, 1559, 2001, 2519, 3119, 3807, 4589, 5471, 6459, 7559, 8777, 10119, 11591, 13199, 14949, 16847, 18899, 21111, 23489, 26039, 28767, 31679, 34781\n+};\n+TYPE res_test1011[32] = {\n+  -5, 5, 31, 79, 155, 265, 415, 611, 859, 1165, 1535, 1975, 2491, 3089, 3775, 4555, 5435, 6421, 7519, 8735, 10075, 11545, 13151, 14899, 16795, 18845, 21055, 23431, 25979, 28705, 31615, 34715\n+};\n+TYPE res_test1100[32] = {\n+  -13, -37, -81, -151, -253, -393, -577, -811, -1101, -1453, -1873, -2367, -2941, -3601, -4353, -5203, -6157, -7221, -8401, -9703, -11133, -12697, -14401, -16251, -18253, -20413, -22737, -25231, -27901, -30753, -33793, -37027\n+};\n+TYPE res_test1101[32] = {\n+  -17, -43, -89, -161, -265, -407, -593, -829, -1121, -1475, -1897, -2393, -2969, -3631, -4385, -5237, -6193, -7259, -8441, -9745, -11177, -12743, -14449, -16301, -18305, -20467, -22793, -25289, -27961, -30815, -33857, -37093\n+};\n+TYPE res_test1110[32] = {\n+  17, 43, 89, 161, 265, 407, 593, 829, 1121, 1475, 1897, 2393, 2969, 3631, 4385, 5237, 6193, 7259, 8441, 9745, 11177, 12743, 14449, 16301, 18305, 20467, 22793, 25289, 27961, 30815, 33857, 37093\n+};\n+TYPE res_test1111[32] = {\n+  13, 37, 81, 151, 253, 393, 577, 811, 1101, 1453, 1873, 2367, 2941, 3601, 4353, 5203, 6157, 7221, 8401, 9703, 11133, 12697, 14401, 16251, 18253, 20413, 22737, 25231, 27901, 30753, 33793, 37027\n+};\n+\n+#endif"}, {"sha": "1ca34af62fe33c0be79bc006be7e94b4230be2b3", "filename": "gcc/testsuite/gcc.target/i386/fma_run_float_1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_1.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-require-effective-target fma } */\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE float\n+\n+#include \"fma_1.h\"\n+\n+#include \"fma_run_float_results_1.h\"\n+\n+#include \"fma-check.h\"\n+#include \"fma_main.h\""}, {"sha": "380fd3bd742f525e7f33d4a03fcd00d9b59818f8", "filename": "gcc/testsuite/gcc.target/i386/fma_run_float_2.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_2.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-require-effective-target fma } */\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE float\n+\n+#include \"fma_2.h\"\n+\n+#include \"fma_run_float_results_2.h\"\n+\n+#include \"fma-check.h\"\n+#include \"fma_main.h\""}, {"sha": "0b09056cd36056a9ff4113c10abfbad33a3c8139", "filename": "gcc/testsuite/gcc.target/i386/fma_run_float_3.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_3.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-require-effective-target fma } */\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE float\n+\n+#include \"fma_3.h\"\n+\n+#include \"fma_run_float_results_3.h\"\n+\n+#include \"fma-check.h\"\n+#include \"fma_main.h\""}, {"sha": "e44a62cb92f057726e49d5dc6cde949ca2d3d271", "filename": "gcc/testsuite/gcc.target/i386/fma_run_float_4.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_4.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-require-effective-target fma } */\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE float\n+\n+#include \"fma_4.h\"\n+\n+#include \"fma_run_float_results_4.h\"\n+\n+#include \"fma-check.h\"\n+#include \"fma_main.h\""}, {"sha": "10c4f2beab1dd48f00dbff9af9a3bc485cdede2b", "filename": "gcc/testsuite/gcc.target/i386/fma_run_float_5.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_5.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-require-effective-target fma } */\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE float\n+\n+#include \"fma_5.h\"\n+\n+#include \"fma_run_float_results_5.h\"\n+\n+#include \"fma-check.h\"\n+#include \"fma_main.h\""}, {"sha": "95c44a1ca1364a702729d8c59e858fd3c03e6378", "filename": "gcc/testsuite/gcc.target/i386/fma_run_float_6.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_6.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-require-effective-target fma } */\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE float\n+\n+#include \"fma_6.h\"\n+\n+#include \"fma_run_float_results_6.h\"\n+\n+#include \"fma-check.h\"\n+#include \"fma_main.h\""}, {"sha": "65f52f2c75d8a6811d726ad96174b5cc58958576", "filename": "gcc/testsuite/gcc.target/i386/fma_run_float_results_1.h", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_results_1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_results_1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_results_1.h?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,54 @@\n+\n+#ifndef fma_run_float_results_1\n+#define fma_run_float_results_1\n+\n+TYPE res_test0000[32] = {\n+  7, 23, 55, 109, 191, 307, 463, 665, 919, 1231, 1607, 2053, 2575, 3179, 3871, 4657, 5543, 6535, 7639, 8861, 10207, 11683, 13295, 15049, 16951, 19007, 21223, 23605, 26159, 28891, 31807, 34913\n+};\n+TYPE res_test0001[32] = {\n+  3, 17, 47, 99, 179, 293, 447, 647, 899, 1209, 1583, 2027, 2547, 3149, 3839, 4623, 5507, 6497, 7599, 8819, 10163, 11637, 13247, 14999, 16899, 18953, 21167, 23547, 26099, 28829, 31743, 34847\n+};\n+TYPE res_test0010[32] = {\n+  -3, -17, -47, -99, -179, -293, -447, -647, -899, -1209, -1583, -2027, -2547, -3149, -3839, -4623, -5507, -6497, -7599, -8819, -10163, -11637, -13247, -14999, -16899, -18953, -21167, -23547, -26099, -28829, -31743, -34847\n+};\n+TYPE res_test0011[32] = {\n+  -7, -23, -55, -109, -191, -307, -463, -665, -919, -1231, -1607, -2053, -2575, -3179, -3871, -4657, -5543, -6535, -7639, -8861, -10207, -11683, -13295, -15049, -16951, -19007, -21223, -23605, -26159, -28891, -31807, -34913\n+};\n+TYPE res_test0100[32] = {\n+  1, 7, 25, 61, 121, 211, 337, 505, 721, 991, 1321, 1717, 2185, 2731, 3361, 4081, 4897, 5815, 6841, 7981, 9241, 10627, 12145, 13801, 15601, 17551, 19657, 21925, 24361, 26971, 29761, 32737\n+};\n+TYPE res_test0101[32] = {\n+  -3, 1, 17, 51, 109, 197, 321, 487, 701, 969, 1297, 1691, 2157, 2701, 3329, 4047, 4861, 5777, 6801, 7939, 9197, 10581, 12097, 13751, 15549, 17497, 19601, 21867, 24301, 26909, 29697, 32671\n+};\n+TYPE res_test0110[32] = {\n+  3, -1, -17, -51, -109, -197, -321, -487, -701, -969, -1297, -1691, -2157, -2701, -3329, -4047, -4861, -5777, -6801, -7939, -9197, -10581, -12097, -13751, -15549, -17497, -19601, -21867, -24301, -26909, -29697, -32671\n+};\n+TYPE res_test0111[32] = {\n+  -1, -7, -25, -61, -121, -211, -337, -505, -721, -991, -1321, -1717, -2185, -2731, -3361, -4081, -4897, -5815, -6841, -7981, -9241, -10627, -12145, -13801, -15601, -17551, -19657, -21925, -24361, -26971, -29761, -32737\n+};\n+TYPE res_test1000[32] = {\n+  3, -1, -17, -51, -109, -197, -321, -487, -701, -969, -1297, -1691, -2157, -2701, -3329, -4047, -4861, -5777, -6801, -7939, -9197, -10581, -12097, -13751, -15549, -17497, -19601, -21867, -24301, -26909, -29697, -32671\n+};\n+TYPE res_test1001[32] = {\n+  -1, -7, -25, -61, -121, -211, -337, -505, -721, -991, -1321, -1717, -2185, -2731, -3361, -4081, -4897, -5815, -6841, -7981, -9241, -10627, -12145, -13801, -15601, -17551, -19657, -21925, -24361, -26971, -29761, -32737\n+};\n+TYPE res_test1010[32] = {\n+  1, 7, 25, 61, 121, 211, 337, 505, 721, 991, 1321, 1717, 2185, 2731, 3361, 4081, 4897, 5815, 6841, 7981, 9241, 10627, 12145, 13801, 15601, 17551, 19657, 21925, 24361, 26971, 29761, 32737\n+};\n+TYPE res_test1011[32] = {\n+  -3, 1, 17, 51, 109, 197, 321, 487, 701, 969, 1297, 1691, 2157, 2701, 3329, 4047, 4861, 5777, 6801, 7939, 9197, 10581, 12097, 13751, 15549, 17497, 19601, 21867, 24301, 26909, 29697, 32671\n+};\n+TYPE res_test1100[32] = {\n+  -3, -17, -47, -99, -179, -293, -447, -647, -899, -1209, -1583, -2027, -2547, -3149, -3839, -4623, -5507, -6497, -7599, -8819, -10163, -11637, -13247, -14999, -16899, -18953, -21167, -23547, -26099, -28829, -31743, -34847\n+};\n+TYPE res_test1101[32] = {\n+  -7, -23, -55, -109, -191, -307, -463, -665, -919, -1231, -1607, -2053, -2575, -3179, -3871, -4657, -5543, -6535, -7639, -8861, -10207, -11683, -13295, -15049, -16951, -19007, -21223, -23605, -26159, -28891, -31807, -34913\n+};\n+TYPE res_test1110[32] = {\n+  7, 23, 55, 109, 191, 307, 463, 665, 919, 1231, 1607, 2053, 2575, 3179, 3871, 4657, 5543, 6535, 7639, 8861, 10207, 11683, 13295, 15049, 16951, 19007, 21223, 23605, 26159, 28891, 31807, 34913\n+};\n+TYPE res_test1111[32] = {\n+  3, 17, 47, 99, 179, 293, 447, 647, 899, 1209, 1583, 2027, 2547, 3149, 3839, 4623, 5507, 6497, 7599, 8819, 10163, 11637, 13247, 14999, 16899, 18953, 21167, 23547, 26099, 28829, 31743, 34847\n+};\n+\n+#endif"}, {"sha": "d215efd587c01da36390f3d3e571d49aca2da647", "filename": "gcc/testsuite/gcc.target/i386/fma_run_float_results_2.h", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_results_2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_results_2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_results_2.h?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,54 @@\n+\n+#ifndef fma_run_float_results_2\n+#define fma_run_float_results_2\n+\n+TYPE res_test0000[32] = {\n+  8, 24, 56, 110, 192, 308, 464, 666, 920, 1232, 1608, 2054, 2576, 3180, 3872, 4658, 5544, 6536, 7640, 8862, 10208, 11684, 13296, 15050, 16952, 19008, 21224, 23606, 26160, 28892, 31808, 34914\n+};\n+TYPE res_test0001[32] = {\n+  2, 16, 46, 98, 178, 292, 446, 646, 898, 1208, 1582, 2026, 2546, 3148, 3838, 4622, 5506, 6496, 7598, 8818, 10162, 11636, 13246, 14998, 16898, 18952, 21166, 23546, 26098, 28828, 31742, 34846\n+};\n+TYPE res_test0010[32] = {\n+  -2, -16, -46, -98, -178, -292, -446, -646, -898, -1208, -1582, -2026, -2546, -3148, -3838, -4622, -5506, -6496, -7598, -8818, -10162, -11636, -13246, -14998, -16898, -18952, -21166, -23546, -26098, -28828, -31742, -34846\n+};\n+TYPE res_test0011[32] = {\n+  -8, -24, -56, -110, -192, -308, -464, -666, -920, -1232, -1608, -2054, -2576, -3180, -3872, -4658, -5544, -6536, -7640, -8862, -10208, -11684, -13296, -15050, -16952, -19008, -21224, -23606, -26160, -28892, -31808, -34914\n+};\n+TYPE res_test0100[32] = {\n+  2, 8, 26, 62, 122, 212, 338, 506, 722, 992, 1322, 1718, 2186, 2732, 3362, 4082, 4898, 5816, 6842, 7982, 9242, 10628, 12146, 13802, 15602, 17552, 19658, 21926, 24362, 26972, 29762, 32738\n+};\n+TYPE res_test0101[32] = {\n+  -4, 0, 16, 50, 108, 196, 320, 486, 700, 968, 1296, 1690, 2156, 2700, 3328, 4046, 4860, 5776, 6800, 7938, 9196, 10580, 12096, 13750, 15548, 17496, 19600, 21866, 24300, 26908, 29696, 32670\n+};\n+TYPE res_test0110[32] = {\n+  4, 0, -16, -50, -108, -196, -320, -486, -700, -968, -1296, -1690, -2156, -2700, -3328, -4046, -4860, -5776, -6800, -7938, -9196, -10580, -12096, -13750, -15548, -17496, -19600, -21866, -24300, -26908, -29696, -32670\n+};\n+TYPE res_test0111[32] = {\n+  -2, -8, -26, -62, -122, -212, -338, -506, -722, -992, -1322, -1718, -2186, -2732, -3362, -4082, -4898, -5816, -6842, -7982, -9242, -10628, -12146, -13802, -15602, -17552, -19658, -21926, -24362, -26972, -29762, -32738\n+};\n+TYPE res_test1000[32] = {\n+  4, 0, -16, -50, -108, -196, -320, -486, -700, -968, -1296, -1690, -2156, -2700, -3328, -4046, -4860, -5776, -6800, -7938, -9196, -10580, -12096, -13750, -15548, -17496, -19600, -21866, -24300, -26908, -29696, -32670\n+};\n+TYPE res_test1001[32] = {\n+  -2, -8, -26, -62, -122, -212, -338, -506, -722, -992, -1322, -1718, -2186, -2732, -3362, -4082, -4898, -5816, -6842, -7982, -9242, -10628, -12146, -13802, -15602, -17552, -19658, -21926, -24362, -26972, -29762, -32738\n+};\n+TYPE res_test1010[32] = {\n+  2, 8, 26, 62, 122, 212, 338, 506, 722, 992, 1322, 1718, 2186, 2732, 3362, 4082, 4898, 5816, 6842, 7982, 9242, 10628, 12146, 13802, 15602, 17552, 19658, 21926, 24362, 26972, 29762, 32738\n+};\n+TYPE res_test1011[32] = {\n+  -4, 0, 16, 50, 108, 196, 320, 486, 700, 968, 1296, 1690, 2156, 2700, 3328, 4046, 4860, 5776, 6800, 7938, 9196, 10580, 12096, 13750, 15548, 17496, 19600, 21866, 24300, 26908, 29696, 32670\n+};\n+TYPE res_test1100[32] = {\n+  -2, -16, -46, -98, -178, -292, -446, -646, -898, -1208, -1582, -2026, -2546, -3148, -3838, -4622, -5506, -6496, -7598, -8818, -10162, -11636, -13246, -14998, -16898, -18952, -21166, -23546, -26098, -28828, -31742, -34846\n+};\n+TYPE res_test1101[32] = {\n+  -8, -24, -56, -110, -192, -308, -464, -666, -920, -1232, -1608, -2054, -2576, -3180, -3872, -4658, -5544, -6536, -7640, -8862, -10208, -11684, -13296, -15050, -16952, -19008, -21224, -23606, -26160, -28892, -31808, -34914\n+};\n+TYPE res_test1110[32] = {\n+  8, 24, 56, 110, 192, 308, 464, 666, 920, 1232, 1608, 2054, 2576, 3180, 3872, 4658, 5544, 6536, 7640, 8862, 10208, 11684, 13296, 15050, 16952, 19008, 21224, 23606, 26160, 28892, 31808, 34914\n+};\n+TYPE res_test1111[32] = {\n+  2, 16, 46, 98, 178, 292, 446, 646, 898, 1208, 1582, 2026, 2546, 3148, 3838, 4622, 5506, 6496, 7598, 8818, 10162, 11636, 13246, 14998, 16898, 18952, 21166, 23546, 26098, 28828, 31742, 34846\n+};\n+\n+#endif"}, {"sha": "11751f131a3ccd83dc8fbb3ac94f3492d2232363", "filename": "gcc/testsuite/gcc.target/i386/fma_run_float_results_3.h", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_results_3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_results_3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_results_3.h?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,54 @@\n+\n+#ifndef fma_run_float_results_3\n+#define fma_run_float_results_3\n+\n+TYPE res_test0000[32] = {\n+  11, 32, 71, 134, 227, 356, 527, 746, 1019, 1352, 1751, 2222, 2771, 3404, 4127, 4946, 5867, 6896, 8039, 9302, 10691, 12212, 13871, 15674, 17627, 19736, 22007, 24446, 27059, 29852, 32831, 36002\n+};\n+TYPE res_test0001[32] = {\n+  9, 28, 65, 126, 217, 344, 513, 730, 1001, 1332, 1729, 2198, 2745, 3376, 4097, 4914, 5833, 6860, 8001, 9262, 10649, 12168, 13825, 15626, 17577, 19684, 21953, 24390, 27001, 29792, 32769, 35938\n+};\n+TYPE res_test0010[32] = {\n+  -9, -28, -65, -126, -217, -344, -513, -730, -1001, -1332, -1729, -2198, -2745, -3376, -4097, -4914, -5833, -6860, -8001, -9262, -10649, -12168, -13825, -15626, -17577, -19684, -21953, -24390, -27001, -29792, -32769, -35938\n+};\n+TYPE res_test0011[32] = {\n+  -11, -32, -71, -134, -227, -356, -527, -746, -1019, -1352, -1751, -2222, -2771, -3404, -4127, -4946, -5867, -6896, -8039, -9302, -10691, -12212, -13871, -15674, -17627, -19736, -22007, -24446, -27059, -29852, -32831, -36002\n+};\n+TYPE res_test0100[32] = {\n+  -1, 8, 31, 74, 143, 244, 383, 566, 799, 1088, 1439, 1858, 2351, 2924, 3583, 4334, 5183, 6136, 7199, 8378, 9679, 11108, 12671, 14374, 16223, 18224, 20383, 22706, 25199, 27868, 30719, 33758\n+};\n+TYPE res_test0101[32] = {\n+  -3, 4, 25, 66, 133, 232, 369, 550, 781, 1068, 1417, 1834, 2325, 2896, 3553, 4302, 5149, 6100, 7161, 8338, 9637, 11064, 12625, 14326, 16173, 18172, 20329, 22650, 25141, 27808, 30657, 33694\n+};\n+TYPE res_test0110[32] = {\n+  3, -4, -25, -66, -133, -232, -369, -550, -781, -1068, -1417, -1834, -2325, -2896, -3553, -4302, -5149, -6100, -7161, -8338, -9637, -11064, -12625, -14326, -16173, -18172, -20329, -22650, -25141, -27808, -30657, -33694\n+};\n+TYPE res_test0111[32] = {\n+  1, -8, -31, -74, -143, -244, -383, -566, -799, -1088, -1439, -1858, -2351, -2924, -3583, -4334, -5183, -6136, -7199, -8378, -9679, -11108, -12671, -14374, -16223, -18224, -20383, -22706, -25199, -27868, -30719, -33758\n+};\n+TYPE res_test1000[32] = {\n+  3, -4, -25, -66, -133, -232, -369, -550, -781, -1068, -1417, -1834, -2325, -2896, -3553, -4302, -5149, -6100, -7161, -8338, -9637, -11064, -12625, -14326, -16173, -18172, -20329, -22650, -25141, -27808, -30657, -33694\n+};\n+TYPE res_test1001[32] = {\n+  1, -8, -31, -74, -143, -244, -383, -566, -799, -1088, -1439, -1858, -2351, -2924, -3583, -4334, -5183, -6136, -7199, -8378, -9679, -11108, -12671, -14374, -16223, -18224, -20383, -22706, -25199, -27868, -30719, -33758\n+};\n+TYPE res_test1010[32] = {\n+  -1, 8, 31, 74, 143, 244, 383, 566, 799, 1088, 1439, 1858, 2351, 2924, 3583, 4334, 5183, 6136, 7199, 8378, 9679, 11108, 12671, 14374, 16223, 18224, 20383, 22706, 25199, 27868, 30719, 33758\n+};\n+TYPE res_test1011[32] = {\n+  -3, 4, 25, 66, 133, 232, 369, 550, 781, 1068, 1417, 1834, 2325, 2896, 3553, 4302, 5149, 6100, 7161, 8338, 9637, 11064, 12625, 14326, 16173, 18172, 20329, 22650, 25141, 27808, 30657, 33694\n+};\n+TYPE res_test1100[32] = {\n+  -9, -28, -65, -126, -217, -344, -513, -730, -1001, -1332, -1729, -2198, -2745, -3376, -4097, -4914, -5833, -6860, -8001, -9262, -10649, -12168, -13825, -15626, -17577, -19684, -21953, -24390, -27001, -29792, -32769, -35938\n+};\n+TYPE res_test1101[32] = {\n+  -11, -32, -71, -134, -227, -356, -527, -746, -1019, -1352, -1751, -2222, -2771, -3404, -4127, -4946, -5867, -6896, -8039, -9302, -10691, -12212, -13871, -15674, -17627, -19736, -22007, -24446, -27059, -29852, -32831, -36002\n+};\n+TYPE res_test1110[32] = {\n+  11, 32, 71, 134, 227, 356, 527, 746, 1019, 1352, 1751, 2222, 2771, 3404, 4127, 4946, 5867, 6896, 8039, 9302, 10691, 12212, 13871, 15674, 17627, 19736, 22007, 24446, 27059, 29852, 32831, 36002\n+};\n+TYPE res_test1111[32] = {\n+  9, 28, 65, 126, 217, 344, 513, 730, 1001, 1332, 1729, 2198, 2745, 3376, 4097, 4914, 5833, 6860, 8001, 9262, 10649, 12168, 13825, 15626, 17577, 19684, 21953, 24390, 27001, 29792, 32769, 35938\n+};\n+\n+#endif"}, {"sha": "13906dbdde1aa07db12b5778045b664ac21099ad", "filename": "gcc/testsuite/gcc.target/i386/fma_run_float_results_4.h", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_results_4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_results_4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_results_4.h?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,54 @@\n+\n+#ifndef fma_run_float_results_4\n+#define fma_run_float_results_4\n+\n+TYPE res_test0000[32] = {\n+  13, 34, 73, 136, 229, 358, 529, 748, 1021, 1354, 1753, 2224, 2773, 3406, 4129, 4948, 5869, 6898, 8041, 9304, 10693, 12214, 13873, 15676, 17629, 19738, 22009, 24448, 27061, 29854, 32833, 36004\n+};\n+TYPE res_test0001[32] = {\n+  7, 26, 63, 124, 215, 342, 511, 728, 999, 1330, 1727, 2196, 2743, 3374, 4095, 4912, 5831, 6858, 7999, 9260, 10647, 12166, 13823, 15624, 17575, 19682, 21951, 24388, 26999, 29790, 32767, 35936\n+};\n+TYPE res_test0010[32] = {\n+  -7, -26, -63, -124, -215, -342, -511, -728, -999, -1330, -1727, -2196, -2743, -3374, -4095, -4912, -5831, -6858, -7999, -9260, -10647, -12166, -13823, -15624, -17575, -19682, -21951, -24388, -26999, -29790, -32767, -35936\n+};\n+TYPE res_test0011[32] = {\n+  -13, -34, -73, -136, -229, -358, -529, -748, -1021, -1354, -1753, -2224, -2773, -3406, -4129, -4948, -5869, -6898, -8041, -9304, -10693, -12214, -13873, -15676, -17629, -19738, -22009, -24448, -27061, -29854, -32833, -36004\n+};\n+TYPE res_test0100[32] = {\n+  1, 10, 33, 76, 145, 246, 385, 568, 801, 1090, 1441, 1860, 2353, 2926, 3585, 4336, 5185, 6138, 7201, 8380, 9681, 11110, 12673, 14376, 16225, 18226, 20385, 22708, 25201, 27870, 30721, 33760\n+};\n+TYPE res_test0101[32] = {\n+  -5, 2, 23, 64, 131, 230, 367, 548, 779, 1066, 1415, 1832, 2323, 2894, 3551, 4300, 5147, 6098, 7159, 8336, 9635, 11062, 12623, 14324, 16171, 18170, 20327, 22648, 25139, 27806, 30655, 33692\n+};\n+TYPE res_test0110[32] = {\n+  5, -2, -23, -64, -131, -230, -367, -548, -779, -1066, -1415, -1832, -2323, -2894, -3551, -4300, -5147, -6098, -7159, -8336, -9635, -11062, -12623, -14324, -16171, -18170, -20327, -22648, -25139, -27806, -30655, -33692\n+};\n+TYPE res_test0111[32] = {\n+  -1, -10, -33, -76, -145, -246, -385, -568, -801, -1090, -1441, -1860, -2353, -2926, -3585, -4336, -5185, -6138, -7201, -8380, -9681, -11110, -12673, -14376, -16225, -18226, -20385, -22708, -25201, -27870, -30721, -33760\n+};\n+TYPE res_test1000[32] = {\n+  5, -2, -23, -64, -131, -230, -367, -548, -779, -1066, -1415, -1832, -2323, -2894, -3551, -4300, -5147, -6098, -7159, -8336, -9635, -11062, -12623, -14324, -16171, -18170, -20327, -22648, -25139, -27806, -30655, -33692\n+};\n+TYPE res_test1001[32] = {\n+  -1, -10, -33, -76, -145, -246, -385, -568, -801, -1090, -1441, -1860, -2353, -2926, -3585, -4336, -5185, -6138, -7201, -8380, -9681, -11110, -12673, -14376, -16225, -18226, -20385, -22708, -25201, -27870, -30721, -33760\n+};\n+TYPE res_test1010[32] = {\n+  1, 10, 33, 76, 145, 246, 385, 568, 801, 1090, 1441, 1860, 2353, 2926, 3585, 4336, 5185, 6138, 7201, 8380, 9681, 11110, 12673, 14376, 16225, 18226, 20385, 22708, 25201, 27870, 30721, 33760\n+};\n+TYPE res_test1011[32] = {\n+  -5, 2, 23, 64, 131, 230, 367, 548, 779, 1066, 1415, 1832, 2323, 2894, 3551, 4300, 5147, 6098, 7159, 8336, 9635, 11062, 12623, 14324, 16171, 18170, 20327, 22648, 25139, 27806, 30655, 33692\n+};\n+TYPE res_test1100[32] = {\n+  -7, -26, -63, -124, -215, -342, -511, -728, -999, -1330, -1727, -2196, -2743, -3374, -4095, -4912, -5831, -6858, -7999, -9260, -10647, -12166, -13823, -15624, -17575, -19682, -21951, -24388, -26999, -29790, -32767, -35936\n+};\n+TYPE res_test1101[32] = {\n+  -13, -34, -73, -136, -229, -358, -529, -748, -1021, -1354, -1753, -2224, -2773, -3406, -4129, -4948, -5869, -6898, -8041, -9304, -10693, -12214, -13873, -15676, -17629, -19738, -22009, -24448, -27061, -29854, -32833, -36004\n+};\n+TYPE res_test1110[32] = {\n+  13, 34, 73, 136, 229, 358, 529, 748, 1021, 1354, 1753, 2224, 2773, 3406, 4129, 4948, 5869, 6898, 8041, 9304, 10693, 12214, 13873, 15676, 17629, 19738, 22009, 24448, 27061, 29854, 32833, 36004\n+};\n+TYPE res_test1111[32] = {\n+  7, 26, 63, 124, 215, 342, 511, 728, 999, 1330, 1727, 2196, 2743, 3374, 4095, 4912, 5831, 6858, 7999, 9260, 10647, 12166, 13823, 15624, 17575, 19682, 21951, 24388, 26999, 29790, 32767, 35936\n+};\n+\n+#endif"}, {"sha": "f156bef6f4f6f0b370987dc4137a74a38447097f", "filename": "gcc/testsuite/gcc.target/i386/fma_run_float_results_5.h", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_results_5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_results_5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_results_5.h?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,54 @@\n+\n+#ifndef fma_run_float_results_5\n+#define fma_run_float_results_5\n+\n+TYPE res_test0000[32] = {\n+  16, 42, 88, 160, 264, 406, 592, 828, 1120, 1474, 1896, 2392, 2968, 3630, 4384, 5236, 6192, 7258, 8440, 9744, 11176, 12742, 14448, 16300, 18304, 20466, 22792, 25288, 27960, 30814, 33856, 37092\n+};\n+TYPE res_test0001[32] = {\n+  14, 38, 82, 152, 254, 394, 578, 812, 1102, 1454, 1874, 2368, 2942, 3602, 4354, 5204, 6158, 7222, 8402, 9704, 11134, 12698, 14402, 16252, 18254, 20414, 22738, 25232, 27902, 30754, 33794, 37028\n+};\n+TYPE res_test0010[32] = {\n+  -14, -38, -82, -152, -254, -394, -578, -812, -1102, -1454, -1874, -2368, -2942, -3602, -4354, -5204, -6158, -7222, -8402, -9704, -11134, -12698, -14402, -16252, -18254, -20414, -22738, -25232, -27902, -30754, -33794, -37028\n+};\n+TYPE res_test0011[32] = {\n+  -16, -42, -88, -160, -264, -406, -592, -828, -1120, -1474, -1896, -2392, -2968, -3630, -4384, -5236, -6192, -7258, -8440, -9744, -11176, -12742, -14448, -16300, -18304, -20466, -22792, -25288, -27960, -30814, -33856, -37092\n+};\n+TYPE res_test0100[32] = {\n+  -2, 10, 38, 88, 166, 278, 430, 628, 878, 1186, 1558, 2000, 2518, 3118, 3806, 4588, 5470, 6458, 7558, 8776, 10118, 11590, 13198, 14948, 16846, 18898, 21110, 23488, 26038, 28766, 31678, 34780\n+};\n+TYPE res_test0101[32] = {\n+  -4, 6, 32, 80, 156, 266, 416, 612, 860, 1166, 1536, 1976, 2492, 3090, 3776, 4556, 5436, 6422, 7520, 8736, 10076, 11546, 13152, 14900, 16796, 18846, 21056, 23432, 25980, 28706, 31616, 34716\n+};\n+TYPE res_test0110[32] = {\n+  4, -6, -32, -80, -156, -266, -416, -612, -860, -1166, -1536, -1976, -2492, -3090, -3776, -4556, -5436, -6422, -7520, -8736, -10076, -11546, -13152, -14900, -16796, -18846, -21056, -23432, -25980, -28706, -31616, -34716\n+};\n+TYPE res_test0111[32] = {\n+  2, -10, -38, -88, -166, -278, -430, -628, -878, -1186, -1558, -2000, -2518, -3118, -3806, -4588, -5470, -6458, -7558, -8776, -10118, -11590, -13198, -14948, -16846, -18898, -21110, -23488, -26038, -28766, -31678, -34780\n+};\n+TYPE res_test1000[32] = {\n+  4, -6, -32, -80, -156, -266, -416, -612, -860, -1166, -1536, -1976, -2492, -3090, -3776, -4556, -5436, -6422, -7520, -8736, -10076, -11546, -13152, -14900, -16796, -18846, -21056, -23432, -25980, -28706, -31616, -34716\n+};\n+TYPE res_test1001[32] = {\n+  2, -10, -38, -88, -166, -278, -430, -628, -878, -1186, -1558, -2000, -2518, -3118, -3806, -4588, -5470, -6458, -7558, -8776, -10118, -11590, -13198, -14948, -16846, -18898, -21110, -23488, -26038, -28766, -31678, -34780\n+};\n+TYPE res_test1010[32] = {\n+  -2, 10, 38, 88, 166, 278, 430, 628, 878, 1186, 1558, 2000, 2518, 3118, 3806, 4588, 5470, 6458, 7558, 8776, 10118, 11590, 13198, 14948, 16846, 18898, 21110, 23488, 26038, 28766, 31678, 34780\n+};\n+TYPE res_test1011[32] = {\n+  -4, 6, 32, 80, 156, 266, 416, 612, 860, 1166, 1536, 1976, 2492, 3090, 3776, 4556, 5436, 6422, 7520, 8736, 10076, 11546, 13152, 14900, 16796, 18846, 21056, 23432, 25980, 28706, 31616, 34716\n+};\n+TYPE res_test1100[32] = {\n+  -14, -38, -82, -152, -254, -394, -578, -812, -1102, -1454, -1874, -2368, -2942, -3602, -4354, -5204, -6158, -7222, -8402, -9704, -11134, -12698, -14402, -16252, -18254, -20414, -22738, -25232, -27902, -30754, -33794, -37028\n+};\n+TYPE res_test1101[32] = {\n+  -16, -42, -88, -160, -264, -406, -592, -828, -1120, -1474, -1896, -2392, -2968, -3630, -4384, -5236, -6192, -7258, -8440, -9744, -11176, -12742, -14448, -16300, -18304, -20466, -22792, -25288, -27960, -30814, -33856, -37092\n+};\n+TYPE res_test1110[32] = {\n+  16, 42, 88, 160, 264, 406, 592, 828, 1120, 1474, 1896, 2392, 2968, 3630, 4384, 5236, 6192, 7258, 8440, 9744, 11176, 12742, 14448, 16300, 18304, 20466, 22792, 25288, 27960, 30814, 33856, 37092\n+};\n+TYPE res_test1111[32] = {\n+  14, 38, 82, 152, 254, 394, 578, 812, 1102, 1454, 1874, 2368, 2942, 3602, 4354, 5204, 6158, 7222, 8402, 9704, 11134, 12698, 14402, 16252, 18254, 20414, 22738, 25232, 27902, 30754, 33794, 37028\n+};\n+\n+#endif"}, {"sha": "d2c2e1f9728942d7ac5a50b01faf87026022c9b9", "filename": "gcc/testsuite/gcc.target/i386/fma_run_float_results_6.h", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_results_6.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_results_6.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Ffma_run_float_results_6.h?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,54 @@\n+\n+#ifndef fma_run_float_results_6\n+#define fma_run_float_results_6\n+\n+TYPE res_test0000[32] = {\n+  17, 43, 89, 161, 265, 407, 593, 829, 1121, 1475, 1897, 2393, 2969, 3631, 4385, 5237, 6193, 7259, 8441, 9745, 11177, 12743, 14449, 16301, 18305, 20467, 22793, 25289, 27961, 30815, 33857, 37093\n+};\n+TYPE res_test0001[32] = {\n+  13, 37, 81, 151, 253, 393, 577, 811, 1101, 1453, 1873, 2367, 2941, 3601, 4353, 5203, 6157, 7221, 8401, 9703, 11133, 12697, 14401, 16251, 18253, 20413, 22737, 25231, 27901, 30753, 33793, 37027\n+};\n+TYPE res_test0010[32] = {\n+  -13, -37, -81, -151, -253, -393, -577, -811, -1101, -1453, -1873, -2367, -2941, -3601, -4353, -5203, -6157, -7221, -8401, -9703, -11133, -12697, -14401, -16251, -18253, -20413, -22737, -25231, -27901, -30753, -33793, -37027\n+};\n+TYPE res_test0011[32] = {\n+  -17, -43, -89, -161, -265, -407, -593, -829, -1121, -1475, -1897, -2393, -2969, -3631, -4385, -5237, -6193, -7259, -8441, -9745, -11177, -12743, -14449, -16301, -18305, -20467, -22793, -25289, -27961, -30815, -33857, -37093\n+};\n+TYPE res_test0100[32] = {\n+  -1, 11, 39, 89, 167, 279, 431, 629, 879, 1187, 1559, 2001, 2519, 3119, 3807, 4589, 5471, 6459, 7559, 8777, 10119, 11591, 13199, 14949, 16847, 18899, 21111, 23489, 26039, 28767, 31679, 34781\n+};\n+TYPE res_test0101[32] = {\n+  -5, 5, 31, 79, 155, 265, 415, 611, 859, 1165, 1535, 1975, 2491, 3089, 3775, 4555, 5435, 6421, 7519, 8735, 10075, 11545, 13151, 14899, 16795, 18845, 21055, 23431, 25979, 28705, 31615, 34715\n+};\n+TYPE res_test0110[32] = {\n+  5, -5, -31, -79, -155, -265, -415, -611, -859, -1165, -1535, -1975, -2491, -3089, -3775, -4555, -5435, -6421, -7519, -8735, -10075, -11545, -13151, -14899, -16795, -18845, -21055, -23431, -25979, -28705, -31615, -34715\n+};\n+TYPE res_test0111[32] = {\n+  1, -11, -39, -89, -167, -279, -431, -629, -879, -1187, -1559, -2001, -2519, -3119, -3807, -4589, -5471, -6459, -7559, -8777, -10119, -11591, -13199, -14949, -16847, -18899, -21111, -23489, -26039, -28767, -31679, -34781\n+};\n+TYPE res_test1000[32] = {\n+  5, -5, -31, -79, -155, -265, -415, -611, -859, -1165, -1535, -1975, -2491, -3089, -3775, -4555, -5435, -6421, -7519, -8735, -10075, -11545, -13151, -14899, -16795, -18845, -21055, -23431, -25979, -28705, -31615, -34715\n+};\n+TYPE res_test1001[32] = {\n+  1, -11, -39, -89, -167, -279, -431, -629, -879, -1187, -1559, -2001, -2519, -3119, -3807, -4589, -5471, -6459, -7559, -8777, -10119, -11591, -13199, -14949, -16847, -18899, -21111, -23489, -26039, -28767, -31679, -34781\n+};\n+TYPE res_test1010[32] = {\n+  -1, 11, 39, 89, 167, 279, 431, 629, 879, 1187, 1559, 2001, 2519, 3119, 3807, 4589, 5471, 6459, 7559, 8777, 10119, 11591, 13199, 14949, 16847, 18899, 21111, 23489, 26039, 28767, 31679, 34781\n+};\n+TYPE res_test1011[32] = {\n+  -5, 5, 31, 79, 155, 265, 415, 611, 859, 1165, 1535, 1975, 2491, 3089, 3775, 4555, 5435, 6421, 7519, 8735, 10075, 11545, 13151, 14899, 16795, 18845, 21055, 23431, 25979, 28705, 31615, 34715\n+};\n+TYPE res_test1100[32] = {\n+  -13, -37, -81, -151, -253, -393, -577, -811, -1101, -1453, -1873, -2367, -2941, -3601, -4353, -5203, -6157, -7221, -8401, -9703, -11133, -12697, -14401, -16251, -18253, -20413, -22737, -25231, -27901, -30753, -33793, -37027\n+};\n+TYPE res_test1101[32] = {\n+  -17, -43, -89, -161, -265, -407, -593, -829, -1121, -1475, -1897, -2393, -2969, -3631, -4385, -5237, -6193, -7259, -8441, -9745, -11177, -12743, -14449, -16301, -18305, -20467, -22793, -25289, -27961, -30815, -33857, -37093\n+};\n+TYPE res_test1110[32] = {\n+  17, 43, 89, 161, 265, 407, 593, 829, 1121, 1475, 1897, 2393, 2969, 3631, 4385, 5237, 6193, 7259, 8441, 9745, 11177, 12743, 14449, 16301, 18305, 20467, 22793, 25289, 27961, 30815, 33857, 37093\n+};\n+TYPE res_test1111[32] = {\n+  13, 37, 81, 151, 253, 393, 577, 811, 1101, 1453, 1873, 2367, 2941, 3601, 4353, 5203, 6157, 7221, 8401, 9703, 11133, 12697, 14401, 16251, 18253, 20413, 22737, 25231, 27901, 30753, 33793, 37027\n+};\n+\n+#endif"}, {"sha": "4a0fd6e0050765deac4293bef9e674a194dd6beb", "filename": "gcc/testsuite/gcc.target/i386/l_fma_1.h", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_1.h?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,133 @@\n+\n+#ifndef l_fma_1\n+#define l_fma_1\n+\n+void __attribute__((sseregparm))\n+test_noneg_add_noneg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = ((a[i] * b[i]) + c[i]) * a[i] + b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_add_noneg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = ((a[i] * b[i]) + c[i]) * a[i] - b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_add_neg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -((a[i] * b[i]) + c[i]) * a[i] + b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_add_neg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -((a[i] * b[i]) + c[i]) * a[i] - b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_sub_noneg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = ((a[i] * b[i]) - c[i]) * a[i] + b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_sub_noneg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = ((a[i] * b[i]) - c[i]) * a[i] - b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_sub_neg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -((a[i] * b[i]) - c[i]) * a[i] + b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_sub_neg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -((a[i] * b[i]) - c[i]) * a[i] - b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_add_noneg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = (-(a[i] * b[i]) + c[i]) * a[i] + b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_add_noneg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = (-(a[i] * b[i]) + c[i]) * a[i] - b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_add_neg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -(-(a[i] * b[i]) + c[i]) * a[i] + b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_add_neg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -(-(a[i] * b[i]) + c[i]) * a[i] - b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_sub_noneg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = (-(a[i] * b[i]) - c[i]) * a[i] + b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_sub_noneg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = (-(a[i] * b[i]) - c[i]) * a[i] - b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_sub_neg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -(-(a[i] * b[i]) - c[i]) * a[i] + b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_sub_neg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -(-(a[i] * b[i]) - c[i]) * a[i] - b[i];\n+}\n+\n+#endif"}, {"sha": "fd64b61fdc393d7f51463bd5b47d9827ce0efade", "filename": "gcc/testsuite/gcc.target/i386/l_fma_2.h", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_2.h?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,133 @@\n+\n+#ifndef l_fma_2\n+#define l_fma_2\n+\n+void __attribute__((sseregparm))\n+test_noneg_add_noneg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = ((a[i] * b[i]) + c[i]) * a[i] + c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_add_noneg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = ((a[i] * b[i]) + c[i]) * a[i] - c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_add_neg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -((a[i] * b[i]) + c[i]) * a[i] + c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_add_neg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -((a[i] * b[i]) + c[i]) * a[i] - c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_sub_noneg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = ((a[i] * b[i]) - c[i]) * a[i] + c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_sub_noneg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = ((a[i] * b[i]) - c[i]) * a[i] - c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_sub_neg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -((a[i] * b[i]) - c[i]) * a[i] + c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_sub_neg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -((a[i] * b[i]) - c[i]) * a[i] - c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_add_noneg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = (-(a[i] * b[i]) + c[i]) * a[i] + c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_add_noneg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = (-(a[i] * b[i]) + c[i]) * a[i] - c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_add_neg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -(-(a[i] * b[i]) + c[i]) * a[i] + c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_add_neg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -(-(a[i] * b[i]) + c[i]) * a[i] - c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_sub_noneg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = (-(a[i] * b[i]) - c[i]) * a[i] + c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_sub_noneg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = (-(a[i] * b[i]) - c[i]) * a[i] - c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_sub_neg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -(-(a[i] * b[i]) - c[i]) * a[i] + c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_sub_neg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -(-(a[i] * b[i]) - c[i]) * a[i] - c[i];\n+}\n+\n+#endif"}, {"sha": "226af24a0be2bf994b68485d6caaf62cb8b759e5", "filename": "gcc/testsuite/gcc.target/i386/l_fma_3.h", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_3.h?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,133 @@\n+\n+#ifndef l_fma_3\n+#define l_fma_3\n+\n+void __attribute__((sseregparm))\n+test_noneg_add_noneg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = ((a[i] * b[i]) + c[i]) * b[i] + a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_add_noneg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = ((a[i] * b[i]) + c[i]) * b[i] - a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_add_neg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -((a[i] * b[i]) + c[i]) * b[i] + a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_add_neg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -((a[i] * b[i]) + c[i]) * b[i] - a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_sub_noneg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = ((a[i] * b[i]) - c[i]) * b[i] + a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_sub_noneg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = ((a[i] * b[i]) - c[i]) * b[i] - a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_sub_neg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -((a[i] * b[i]) - c[i]) * b[i] + a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_sub_neg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -((a[i] * b[i]) - c[i]) * b[i] - a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_add_noneg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = (-(a[i] * b[i]) + c[i]) * b[i] + a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_add_noneg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = (-(a[i] * b[i]) + c[i]) * b[i] - a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_add_neg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -(-(a[i] * b[i]) + c[i]) * b[i] + a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_add_neg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -(-(a[i] * b[i]) + c[i]) * b[i] - a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_sub_noneg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = (-(a[i] * b[i]) - c[i]) * b[i] + a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_sub_noneg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = (-(a[i] * b[i]) - c[i]) * b[i] - a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_sub_neg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -(-(a[i] * b[i]) - c[i]) * b[i] + a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_sub_neg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -(-(a[i] * b[i]) - c[i]) * b[i] - a[i];\n+}\n+\n+#endif"}, {"sha": "e33fe25ffd08098945619429263ea356498c930c", "filename": "gcc/testsuite/gcc.target/i386/l_fma_4.h", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_4.h?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,133 @@\n+\n+#ifndef l_fma_4\n+#define l_fma_4\n+\n+void __attribute__((sseregparm))\n+test_noneg_add_noneg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = ((a[i] * b[i]) + c[i]) * b[i] + c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_add_noneg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = ((a[i] * b[i]) + c[i]) * b[i] - c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_add_neg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -((a[i] * b[i]) + c[i]) * b[i] + c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_add_neg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -((a[i] * b[i]) + c[i]) * b[i] - c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_sub_noneg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = ((a[i] * b[i]) - c[i]) * b[i] + c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_sub_noneg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = ((a[i] * b[i]) - c[i]) * b[i] - c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_sub_neg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -((a[i] * b[i]) - c[i]) * b[i] + c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_sub_neg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -((a[i] * b[i]) - c[i]) * b[i] - c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_add_noneg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = (-(a[i] * b[i]) + c[i]) * b[i] + c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_add_noneg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = (-(a[i] * b[i]) + c[i]) * b[i] - c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_add_neg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -(-(a[i] * b[i]) + c[i]) * b[i] + c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_add_neg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -(-(a[i] * b[i]) + c[i]) * b[i] - c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_sub_noneg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = (-(a[i] * b[i]) - c[i]) * b[i] + c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_sub_noneg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = (-(a[i] * b[i]) - c[i]) * b[i] - c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_sub_neg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -(-(a[i] * b[i]) - c[i]) * b[i] + c[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_sub_neg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -(-(a[i] * b[i]) - c[i]) * b[i] - c[i];\n+}\n+\n+#endif"}, {"sha": "a754812e387972792d6b3dabef347b7ccb2a5cdf", "filename": "gcc/testsuite/gcc.target/i386/l_fma_5.h", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_5.h?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,133 @@\n+\n+#ifndef l_fma_5\n+#define l_fma_5\n+\n+void __attribute__((sseregparm))\n+test_noneg_add_noneg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = ((a[i] * b[i]) + c[i]) * c[i] + a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_add_noneg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = ((a[i] * b[i]) + c[i]) * c[i] - a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_add_neg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -((a[i] * b[i]) + c[i]) * c[i] + a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_add_neg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -((a[i] * b[i]) + c[i]) * c[i] - a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_sub_noneg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = ((a[i] * b[i]) - c[i]) * c[i] + a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_sub_noneg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = ((a[i] * b[i]) - c[i]) * c[i] - a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_sub_neg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -((a[i] * b[i]) - c[i]) * c[i] + a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_sub_neg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -((a[i] * b[i]) - c[i]) * c[i] - a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_add_noneg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = (-(a[i] * b[i]) + c[i]) * c[i] + a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_add_noneg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = (-(a[i] * b[i]) + c[i]) * c[i] - a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_add_neg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -(-(a[i] * b[i]) + c[i]) * c[i] + a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_add_neg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -(-(a[i] * b[i]) + c[i]) * c[i] - a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_sub_noneg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = (-(a[i] * b[i]) - c[i]) * c[i] + a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_sub_noneg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = (-(a[i] * b[i]) - c[i]) * c[i] - a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_sub_neg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -(-(a[i] * b[i]) - c[i]) * c[i] + a[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_sub_neg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -(-(a[i] * b[i]) - c[i]) * c[i] - a[i];\n+}\n+\n+#endif"}, {"sha": "39be29ad3765075e47cd57bc675c323efa17d57e", "filename": "gcc/testsuite/gcc.target/i386/l_fma_6.h", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_6.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_6.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_6.h?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,133 @@\n+\n+#ifndef l_fma_6\n+#define l_fma_6\n+\n+void __attribute__((sseregparm))\n+test_noneg_add_noneg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = ((a[i] * b[i]) + c[i]) * c[i] + b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_add_noneg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = ((a[i] * b[i]) + c[i]) * c[i] - b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_add_neg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -((a[i] * b[i]) + c[i]) * c[i] + b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_add_neg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -((a[i] * b[i]) + c[i]) * c[i] - b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_sub_noneg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = ((a[i] * b[i]) - c[i]) * c[i] + b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_sub_noneg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = ((a[i] * b[i]) - c[i]) * c[i] - b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_sub_neg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -((a[i] * b[i]) - c[i]) * c[i] + b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_noneg_sub_neg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -((a[i] * b[i]) - c[i]) * c[i] - b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_add_noneg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = (-(a[i] * b[i]) + c[i]) * c[i] + b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_add_noneg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = (-(a[i] * b[i]) + c[i]) * c[i] - b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_add_neg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -(-(a[i] * b[i]) + c[i]) * c[i] + b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_add_neg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -(-(a[i] * b[i]) + c[i]) * c[i] - b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_sub_noneg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = (-(a[i] * b[i]) - c[i]) * c[i] + b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_sub_noneg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = (-(a[i] * b[i]) - c[i]) * c[i] - b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_sub_neg_add (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -(-(a[i] * b[i]) - c[i]) * c[i] + b[i];\n+}\n+\n+void __attribute__((sseregparm))\n+test_neg_sub_neg_sub (TYPE *a, TYPE *b, TYPE *c, TYPE *d, int n)\n+{\n+  int i;\n+  for (i = 0; i < n; i++)\n+    d[i] = -(-(a[i] * b[i]) - c[i]) * c[i] - b[i];\n+}\n+\n+#endif"}, {"sha": "1f3e5281b788727d0c7a34bb576d45e51527e49f", "filename": "gcc/testsuite/gcc.target/i386/l_fma_double_1.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_1.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do compile } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-options \"-O2 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+\n+#define TYPE double\n+\n+#include \"l_fma_1.h\"\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132pd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd231pd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132pd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub231pd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132pd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd231pd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132pd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub231pd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd132sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd213sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub213sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd213sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub213sd\" 4  } } */"}, {"sha": "051396f51859ed3d8e177334eda29b82aba0cae5", "filename": "gcc/testsuite/gcc.target/i386/l_fma_double_2.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_2.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-options \"-O2 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+\n+#define TYPE double\n+\n+#include \"l_fma_2.h\"\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132pd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132pd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132pd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132pd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd132sd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132sd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132sd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132sd\" 8  } } */"}, {"sha": "1153ed9a169cb637a5bf54af368d999a1a61a3c4", "filename": "gcc/testsuite/gcc.target/i386/l_fma_double_3.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_3.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do compile } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-options \"-O2 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+\n+#define TYPE double\n+\n+#include \"l_fma_3.h\"\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132pd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd231pd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132pd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub231pd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132pd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd231pd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132pd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub231pd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd132sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd213sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub213sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd213sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132sd\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub213sd\" 4  } } */"}, {"sha": "804e9ec2ac92d1a7529b27ce2320d5414f562345", "filename": "gcc/testsuite/gcc.target/i386/l_fma_double_4.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_4.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-options \"-O2 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+\n+#define TYPE double\n+\n+#include \"l_fma_4.h\"\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132pd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132pd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132pd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132pd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd132sd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132sd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132sd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132sd\" 8  } } */"}, {"sha": "4d721e75723a01f17f759d4cf1663d2771197e7c", "filename": "gcc/testsuite/gcc.target/i386/l_fma_double_5.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_5.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-options \"-O2 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+\n+#define TYPE double\n+\n+#include \"l_fma_5.h\"\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132pd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132pd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132pd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132pd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd132sd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132sd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132sd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132sd\" 8  } } */"}, {"sha": "0281fc69770e7c87b19db884a03b0380661cd4dd", "filename": "gcc/testsuite/gcc.target/i386/l_fma_double_6.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_double_6.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-options \"-O2 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+\n+#define TYPE double\n+\n+#include \"l_fma_6.h\"\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132pd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132pd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132pd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132pd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd132sd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132sd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132sd\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132sd\" 8  } } */"}, {"sha": "a25fa3d6da650a334d02caf22164d5c70638c39c", "filename": "gcc/testsuite/gcc.target/i386/l_fma_float_1.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_1.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do compile } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-options \"-O2 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+\n+#define TYPE float\n+\n+#include \"l_fma_1.h\"\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132ps\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd231ps\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132ps\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub231ps\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132ps\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd231ps\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132ps\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub231ps\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd132ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd213ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub213ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd213ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub213ss\" 4  } } */"}, {"sha": "6d5fb2c548e8192acf548c634bcdd1cb06e5193f", "filename": "gcc/testsuite/gcc.target/i386/l_fma_float_2.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_2.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-options \"-O2 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+\n+#define TYPE float\n+\n+#include \"l_fma_2.h\"\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132ps\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132ps\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132ps\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132ps\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd132ss\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132ss\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132ss\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132ss\" 8  } } */"}, {"sha": "5db5db8bb60d6463271ce2d9363080f360405039", "filename": "gcc/testsuite/gcc.target/i386/l_fma_float_3.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_3.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do compile } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-options \"-O2 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+\n+#define TYPE float\n+\n+#include \"l_fma_3.h\"\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132ps\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd231ps\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132ps\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub231ps\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132ps\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd231ps\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132ps\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub231ps\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd132ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd213ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub213ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd213ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132ss\" 4  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub213ss\" 4  } } */"}, {"sha": "792c5f128a7f436c5eda6b286bbfbbbaea997f7f", "filename": "gcc/testsuite/gcc.target/i386/l_fma_float_4.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_4.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-options \"-O2 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+\n+#define TYPE float\n+\n+#include \"l_fma_4.h\"\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132ps\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132ps\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132ps\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132ps\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd132ss\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132ss\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132ss\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132ss\" 8  } } */"}, {"sha": "8be80ad249f80d70d69ea92ae4059aa4b28a6bc1", "filename": "gcc/testsuite/gcc.target/i386/l_fma_float_5.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_5.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-options \"-O2 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+\n+#define TYPE float\n+\n+#include \"l_fma_5.h\"\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132ps\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132ps\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132ps\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132ps\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd132ss\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132ss\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132ss\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132ss\" 8  } } */"}, {"sha": "3d88fdbb9309c4a090a6a9b85ec3fdfd1a972774", "filename": "gcc/testsuite/gcc.target/i386/l_fma_float_6.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_float_6.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-options \"-O2 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+\n+#define TYPE float\n+\n+#include \"l_fma_6.h\"\n+\n+/* { dg-final { scan-assembler-times \"vfmadd132ps\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132ps\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132ps\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132ps\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmadd132ss\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfmsub132ss\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmadd132ss\" 8  } } */\n+/* { dg-final { scan-assembler-times \"vfnmsub132ss\" 8  } } */"}, {"sha": "a9dc5cd20e5b3a70217560b0ab1b0b058d85ac4a", "filename": "gcc/testsuite/gcc.target/i386/l_fma_main.h", "status": "added", "additions": 100, "deletions": 0, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_main.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_main.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_main.h?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,100 @@\n+\n+#ifndef l_fma_main\n+#define l_fma_main\n+\n+#if DEBUG\n+#include <stdio.h>\n+#endif\n+\n+TYPE m1[32] = {\n+\t\t1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16,\n+\t       17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32\n+\t      };\n+TYPE m2[32] = {\n+\t\t2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n+\t       18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33\n+\t      };\n+TYPE m3[32] = {\n+\t\t3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, \n+\t       19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34\n+\t      };\n+TYPE m4[32];\n+int test_fails = 0;\n+\n+void\n+compare_result(char *title, TYPE *res)\n+{\n+  int i;\n+  int good = 1;\n+  for (i =0; i < 32; i++)\n+    if (m4[i] != res[i])\n+      {\n+        if (good)\n+          {\n+#if DEBUG\n+             printf (\"!!!! %s miscompare\\n\", title);\n+#endif\n+             good = 0;\n+          }\n+#if DEBUG\n+        printf (\"res[%d] = %d, must be %d\\n\", i, (int)res[i], (int) m4[i]);\n+#endif\n+      }\n+  if (!good)\n+    test_fails = 1;\n+}\n+\n+static void fma_test ()\n+{\n+  test_noneg_add_noneg_add (m1, m2, m3, m4, 32);\n+  compare_result (\"test0000\", res_test0000);\n+\n+  test_noneg_add_noneg_sub (m1, m2, m3, m4, 32);\n+  compare_result (\"test0001\", res_test0001);\n+\n+  test_noneg_add_neg_add (m1, m2, m3, m4, 32);\n+  compare_result (\"test0010\", res_test0010);\n+\n+  test_noneg_add_neg_sub (m1, m2, m3, m4, 32);\n+  compare_result (\"test0011\", res_test0011);\n+\n+  test_noneg_sub_noneg_add (m1, m2, m3, m4, 32);\n+  compare_result (\"test0100\", res_test0100);\n+\n+  test_noneg_sub_noneg_sub (m1, m2, m3, m4, 32);\n+  compare_result (\"test0101\", res_test0101);\n+\n+  test_noneg_sub_neg_add (m1, m2, m3, m4, 32);\n+  compare_result (\"test0110\", res_test0110);\n+\n+  test_noneg_sub_neg_sub (m1, m2, m3, m4, 32);\n+  compare_result (\"test0111\", res_test0111);\n+\n+  test_neg_add_noneg_add (m1, m2, m3, m4, 32);\n+  compare_result (\"test1000\", res_test1000);\n+\n+  test_neg_add_noneg_sub (m1, m2, m3, m4, 32);\n+  compare_result (\"test1001\", res_test1001);\n+\n+  test_neg_add_neg_add (m1, m2, m3, m4, 32);\n+  compare_result (\"test1010\", res_test1010);\n+\n+  test_neg_add_neg_sub (m1, m2, m3, m4, 32);\n+  compare_result (\"test1011\", res_test1011);\n+\n+  test_neg_sub_noneg_add (m1, m2, m3, m4, 32);\n+  compare_result (\"test1100\", res_test1100);\n+\n+  test_neg_sub_noneg_sub (m1, m2, m3, m4, 32);\n+  compare_result (\"test1101\", res_test1101);\n+\n+  test_neg_sub_neg_add (m1, m2, m3, m4, 32);\n+  compare_result (\"test1110\", res_test1110);\n+\n+  test_neg_sub_neg_sub (m1, m2, m3, m4, 32);\n+  compare_result (\"test1111\", res_test1111);\n+\n+  if (test_fails) abort ();\n+}\n+\n+#endif"}, {"sha": "86f74d41564b20429c69b59d483ada41aa4709b4", "filename": "gcc/testsuite/gcc.target/i386/l_fma_run_double_1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_double_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_double_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_double_1.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-require-effective-target fma } */\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE double\n+\n+#include \"l_fma_1.h\"\n+\n+#include \"fma_run_double_results_1.h\"\n+\n+#include \"fma-check.h\"\n+#include \"l_fma_main.h\""}, {"sha": "1f512d2e6ba920af5c2a70be06bec317f2ad018f", "filename": "gcc/testsuite/gcc.target/i386/l_fma_run_double_2.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_double_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_double_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_double_2.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-require-effective-target fma } */\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE double\n+\n+#include \"l_fma_2.h\"\n+\n+#include \"fma_run_double_results_2.h\"\n+\n+#include \"fma-check.h\"\n+#include \"l_fma_main.h\""}, {"sha": "b7710e0ac485d4ae80c3a419bead74e9735cc526", "filename": "gcc/testsuite/gcc.target/i386/l_fma_run_double_3.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_double_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_double_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_double_3.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-require-effective-target fma } */\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE double\n+\n+#include \"l_fma_3.h\"\n+\n+#include \"fma_run_double_results_3.h\"\n+\n+#include \"fma-check.h\"\n+#include \"l_fma_main.h\""}, {"sha": "1a0ec54c4cb5d8f41122f37343c29d962da88571", "filename": "gcc/testsuite/gcc.target/i386/l_fma_run_double_4.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_double_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_double_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_double_4.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-require-effective-target fma } */\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE double\n+\n+#include \"l_fma_4.h\"\n+\n+#include \"fma_run_double_results_4.h\"\n+\n+#include \"fma-check.h\"\n+#include \"l_fma_main.h\""}, {"sha": "f0581c85dc204bbe44b4d9301428d27332ccff4b", "filename": "gcc/testsuite/gcc.target/i386/l_fma_run_double_5.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_double_5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_double_5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_double_5.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-require-effective-target fma } */\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE double\n+\n+#include \"l_fma_5.h\"\n+\n+#include \"fma_run_double_results_5.h\"\n+\n+#include \"fma-check.h\"\n+#include \"l_fma_main.h\""}, {"sha": "981043c3a9362f9fefdc5b4789ff805313ca5720", "filename": "gcc/testsuite/gcc.target/i386/l_fma_run_double_6.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_double_6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_double_6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_double_6.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-require-effective-target fma } */\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE double\n+\n+#include \"l_fma_6.h\"\n+\n+#include \"fma_run_double_results_6.h\"\n+\n+#include \"fma-check.h\"\n+#include \"l_fma_main.h\""}, {"sha": "36d658d61f1d917def8dc9c516d1421f63fa7a8d", "filename": "gcc/testsuite/gcc.target/i386/l_fma_run_float_1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_float_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_float_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_float_1.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-require-effective-target fma } */\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE float\n+\n+#include \"l_fma_1.h\"\n+\n+#include \"fma_run_float_results_1.h\"\n+\n+#include \"fma-check.h\"\n+#include \"l_fma_main.h\""}, {"sha": "7c6d37642e9c8c72652092c8ba1871ba5d2ac40a", "filename": "gcc/testsuite/gcc.target/i386/l_fma_run_float_2.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_float_2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_float_2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_float_2.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-require-effective-target fma } */\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE float\n+\n+#include \"l_fma_2.h\"\n+\n+#include \"fma_run_float_results_2.h\"\n+\n+#include \"fma-check.h\"\n+#include \"l_fma_main.h\""}, {"sha": "a94b5628468d6e99527ed8a214c1aebed15d6732", "filename": "gcc/testsuite/gcc.target/i386/l_fma_run_float_3.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_float_3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_float_3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_float_3.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-require-effective-target fma } */\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE float\n+\n+#include \"l_fma_3.h\"\n+\n+#include \"fma_run_float_results_3.h\"\n+\n+#include \"fma-check.h\"\n+#include \"l_fma_main.h\""}, {"sha": "c6d51f8c5cdc82755d91d6cdc61de53655d06e52", "filename": "gcc/testsuite/gcc.target/i386/l_fma_run_float_4.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_float_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_float_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_float_4.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-require-effective-target fma } */\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE float\n+\n+#include \"l_fma_4.h\"\n+\n+#include \"fma_run_float_results_4.h\"\n+\n+#include \"fma-check.h\"\n+#include \"l_fma_main.h\""}, {"sha": "ad90804e4c3b2d09c7372d3e40d2a20cd3ff458d", "filename": "gcc/testsuite/gcc.target/i386/l_fma_run_float_5.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_float_5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_float_5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_float_5.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-require-effective-target fma } */\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE float\n+\n+#include \"l_fma_5.h\"\n+\n+#include \"fma_run_float_results_5.h\"\n+\n+#include \"fma-check.h\"\n+#include \"l_fma_main.h\""}, {"sha": "0bd8103581d6cb7706b4d0d9df7b038905742d46", "filename": "gcc/testsuite/gcc.target/i386/l_fma_run_float_6.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_float_6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aafdb0d754c6f7e221f60d5eb5365015f59abbf4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_float_6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fl_fma_run_float_6.c?ref=aafdb0d754c6f7e221f60d5eb5365015f59abbf4", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do run } */\n+/* { dg-prune-output \".*warning: 'sseregparm' attribute ignored.*\" } */\n+/* { dg-require-effective-target fma } */\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+/* Test that the compiler properly optimizes floating point multiply\n+   and add instructions into FMA3 instructions.  */\n+\n+#define TYPE float\n+\n+#include \"l_fma_6.h\"\n+\n+#include \"fma_run_float_results_6.h\"\n+\n+#include \"fma-check.h\"\n+#include \"l_fma_main.h\""}]}