{"sha": "3a6210c52f7720340a39a2f227b0941bf9d9b9ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E2MjEwYzUyZjc3MjAzNDBhMzlhMmYyMjdiMDk0MWJmOWQ5YjliYQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-10-22T18:54:25Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-10-22T18:54:25Z"}, "message": "c-semantics.c (re_push_stmt_list): Remove.\n\n\t* c-semantics.c (re_push_stmt_list): Remove.\n\t* c-common.h: Remove the corresponding prototype.\n\nFrom-SVN: r89468", "tree": {"sha": "77016ed9c30718657394daa0615bb2a3468cf004", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77016ed9c30718657394daa0615bb2a3468cf004"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a6210c52f7720340a39a2f227b0941bf9d9b9ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a6210c52f7720340a39a2f227b0941bf9d9b9ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a6210c52f7720340a39a2f227b0941bf9d9b9ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a6210c52f7720340a39a2f227b0941bf9d9b9ba/comments", "author": null, "committer": null, "parents": [{"sha": "11901f5dcc236898548cc5eb740ef7388ad21860", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11901f5dcc236898548cc5eb740ef7388ad21860", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11901f5dcc236898548cc5eb740ef7388ad21860"}], "stats": {"total": 29, "additions": 5, "deletions": 24}, "files": [{"sha": "8858f73cd5fd76c8b44c5d961c8a5be6e482d57b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a6210c52f7720340a39a2f227b0941bf9d9b9ba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a6210c52f7720340a39a2f227b0941bf9d9b9ba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a6210c52f7720340a39a2f227b0941bf9d9b9ba", "patch": "@@ -1,3 +1,8 @@\n+2004-10-22  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* c-semantics.c (re_push_stmt_list): Remove.\n+\t* c-common.h: Remove the corresponding prototype.\n+\n 2004-10-22  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* stmt.c (asm_op_is_mem_input): Remove."}, {"sha": "77e2c279bc39c3e973e395a53845728420eed94f", "filename": "gcc/c-common.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a6210c52f7720340a39a2f227b0941bf9d9b9ba/gcc%2Fc-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a6210c52f7720340a39a2f227b0941bf9d9b9ba/gcc%2Fc-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.h?ref=3a6210c52f7720340a39a2f227b0941bf9d9b9ba", "patch": "@@ -295,7 +295,6 @@ extern void pop_file_scope (void);\n extern int yyparse (void);\n extern stmt_tree current_stmt_tree (void);\n extern tree push_stmt_list (void);\n-extern tree re_push_stmt_list (tree);\n extern tree pop_stmt_list (tree);\n extern tree add_stmt (tree);\n extern void push_cleanup (tree, tree, bool);"}, {"sha": "658a12dcd2fba95bfe34d06d78f434ec1e4bfc75", "filename": "gcc/c-semantics.c", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a6210c52f7720340a39a2f227b0941bf9d9b9ba/gcc%2Fc-semantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a6210c52f7720340a39a2f227b0941bf9d9b9ba/gcc%2Fc-semantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-semantics.c?ref=3a6210c52f7720340a39a2f227b0941bf9d9b9ba", "patch": "@@ -58,29 +58,6 @@ push_stmt_list (void)\n   return t;\n }\n \n-/* Similarly, except that T may have already been pushed/popped, and\n-   thus may already contain statement(s).  Arrage for new statements\n-   to be appended.  */\n-\n-tree\n-re_push_stmt_list (tree t)\n-{\n-  if (t)\n-    {\n-      if (TREE_CODE (t) != STATEMENT_LIST)\n-\t{\n-\t  tree u = alloc_stmt_list ();\n-\t  append_to_statement_list_force (t, &u);\n-\t  t = u;\n-\t}\n-    }\n-  else\n-    t = alloc_stmt_list ();\n-  TREE_CHAIN (t) = cur_stmt_list;\n-  cur_stmt_list = t;\n-  return t;\n-}\n-\n /* Finish the statement tree rooted at T.  */\n \n tree"}]}