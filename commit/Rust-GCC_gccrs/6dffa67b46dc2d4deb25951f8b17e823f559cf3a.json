{"sha": "6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRmZmE2N2I0NmRjMmQ0ZGViMjU5NTFmOGIxN2U4MjNmNTU5Y2YzYQ==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-04-27T21:33:18Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-04-27T21:33:18Z"}, "message": "libphobos: Backport extern(C) bindings from druntime 2.091\n\nMerge upstream druntime 47688279.\n\nReviewed-on: https://github.com/dlang/druntime/pull/3073\n\nFixes: PR d/90718\nFixes: PR d/90719\n\nlibphobos/ChangeLog:\n\n\t* libdruntime/Makefile.am (DRUNTIME_DSOURCES_LINUX): Remove\n\tcore/sys/linux/sys/netinet/tcp.d.\n\t* libdruntime/Makefile.in: Regenerate.", "tree": {"sha": "fd6096536fa963ea335bfe9ee94c414607d0588d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd6096536fa963ea335bfe9ee94c414607d0588d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b8e9006bb35641865358e2df4f6b3ae185b239a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b8e9006bb35641865358e2df4f6b3ae185b239a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b8e9006bb35641865358e2df4f6b3ae185b239a"}], "stats": {"total": 904, "additions": 697, "deletions": 207}, "files": [{"sha": "cc5275112ba78fc21553547ba0b406373b20c955", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -1,3 +1,9 @@\n+2020-04-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* libdruntime/Makefile.am (DRUNTIME_DSOURCES_LINUX): Remove\n+\tcore/sys/linux/sys/netinet/tcp.d.\n+\t* libdruntime/Makefile.in: Regenerate.\n+\n 2020-04-27  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* configure.tgt: Add hppa-*-linux* as a supported target."}, {"sha": "c6357317ddc8e4b2c4fe3b1a1d5653620140ad1d", "filename": "libphobos/libdruntime/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMERGE?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -1,4 +1,4 @@\n-2b5c0b2766949e788e4929c5fb0e2ba698ff79a3\n+476882795473a884f837bea6da850ac5181868d1\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/druntime repository."}, {"sha": "e1f47d36f9098f459f41868dcaba498db079a118", "filename": "libphobos/libdruntime/Makefile.am", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMakefile.am?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -255,12 +255,12 @@ DRUNTIME_DSOURCES_LINUX = core/sys/linux/config.d \\\n \tcore/sys/linux/sched.d core/sys/linux/stdio.d core/sys/linux/string.d \\\n \tcore/sys/linux/sys/auxv.d core/sys/linux/sys/eventfd.d \\\n \tcore/sys/linux/sys/file.d core/sys/linux/sys/inotify.d \\\n-\tcore/sys/linux/sys/mman.d core/sys/linux/sys/netinet/tcp.d \\\n-\tcore/sys/linux/sys/prctl.d core/sys/linux/sys/signalfd.d \\\n-\tcore/sys/linux/sys/socket.d core/sys/linux/sys/sysinfo.d \\\n-\tcore/sys/linux/sys/time.d core/sys/linux/sys/xattr.d \\\n-\tcore/sys/linux/termios.d core/sys/linux/time.d \\\n-\tcore/sys/linux/timerfd.d core/sys/linux/tipc.d core/sys/linux/unistd.d\n+\tcore/sys/linux/sys/mman.d core/sys/linux/sys/prctl.d \\\n+\tcore/sys/linux/sys/signalfd.d core/sys/linux/sys/socket.d \\\n+\tcore/sys/linux/sys/sysinfo.d core/sys/linux/sys/time.d \\\n+\tcore/sys/linux/sys/xattr.d core/sys/linux/termios.d \\\n+\tcore/sys/linux/time.d core/sys/linux/timerfd.d core/sys/linux/tipc.d \\\n+\tcore/sys/linux/unistd.d\n \n DRUNTIME_DSOURCES_NETBSD = core/sys/netbsd/dlfcn.d \\\n \tcore/sys/netbsd/execinfo.d core/sys/netbsd/string.d \\"}, {"sha": "53402842cb4d466546c0f331257f86e3f4119d5a", "filename": "libphobos/libdruntime/Makefile.in", "status": "modified", "additions": 12, "deletions": 22, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMakefile.in?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -334,13 +334,12 @@ am__objects_17 = core/sys/linux/config.lo core/sys/linux/dlfcn.lo \\\n \tcore/sys/linux/stdio.lo core/sys/linux/string.lo \\\n \tcore/sys/linux/sys/auxv.lo core/sys/linux/sys/eventfd.lo \\\n \tcore/sys/linux/sys/file.lo core/sys/linux/sys/inotify.lo \\\n-\tcore/sys/linux/sys/mman.lo core/sys/linux/sys/netinet/tcp.lo \\\n-\tcore/sys/linux/sys/prctl.lo core/sys/linux/sys/signalfd.lo \\\n-\tcore/sys/linux/sys/socket.lo core/sys/linux/sys/sysinfo.lo \\\n-\tcore/sys/linux/sys/time.lo core/sys/linux/sys/xattr.lo \\\n-\tcore/sys/linux/termios.lo core/sys/linux/time.lo \\\n-\tcore/sys/linux/timerfd.lo core/sys/linux/tipc.lo \\\n-\tcore/sys/linux/unistd.lo\n+\tcore/sys/linux/sys/mman.lo core/sys/linux/sys/prctl.lo \\\n+\tcore/sys/linux/sys/signalfd.lo core/sys/linux/sys/socket.lo \\\n+\tcore/sys/linux/sys/sysinfo.lo core/sys/linux/sys/time.lo \\\n+\tcore/sys/linux/sys/xattr.lo core/sys/linux/termios.lo \\\n+\tcore/sys/linux/time.lo core/sys/linux/timerfd.lo \\\n+\tcore/sys/linux/tipc.lo core/sys/linux/unistd.lo\n @DRUNTIME_OS_LINUX_TRUE@am__objects_18 = $(am__objects_17)\n am__objects_19 = core/sys/windows/accctrl.lo \\\n \tcore/sys/windows/aclapi.lo core/sys/windows/aclui.lo \\\n@@ -878,12 +877,12 @@ DRUNTIME_DSOURCES_LINUX = core/sys/linux/config.d \\\n \tcore/sys/linux/sched.d core/sys/linux/stdio.d core/sys/linux/string.d \\\n \tcore/sys/linux/sys/auxv.d core/sys/linux/sys/eventfd.d \\\n \tcore/sys/linux/sys/file.d core/sys/linux/sys/inotify.d \\\n-\tcore/sys/linux/sys/mman.d core/sys/linux/sys/netinet/tcp.d \\\n-\tcore/sys/linux/sys/prctl.d core/sys/linux/sys/signalfd.d \\\n-\tcore/sys/linux/sys/socket.d core/sys/linux/sys/sysinfo.d \\\n-\tcore/sys/linux/sys/time.d core/sys/linux/sys/xattr.d \\\n-\tcore/sys/linux/termios.d core/sys/linux/time.d \\\n-\tcore/sys/linux/timerfd.d core/sys/linux/tipc.d core/sys/linux/unistd.d\n+\tcore/sys/linux/sys/mman.d core/sys/linux/sys/prctl.d \\\n+\tcore/sys/linux/sys/signalfd.d core/sys/linux/sys/socket.d \\\n+\tcore/sys/linux/sys/sysinfo.d core/sys/linux/sys/time.d \\\n+\tcore/sys/linux/sys/xattr.d core/sys/linux/termios.d \\\n+\tcore/sys/linux/time.d core/sys/linux/timerfd.d core/sys/linux/tipc.d \\\n+\tcore/sys/linux/unistd.d\n \n DRUNTIME_DSOURCES_NETBSD = core/sys/netbsd/dlfcn.d \\\n \tcore/sys/netbsd/execinfo.d core/sys/netbsd/string.d \\\n@@ -1526,11 +1525,6 @@ core/sys/linux/sys/eventfd.lo: core/sys/linux/sys/$(am__dirstamp)\n core/sys/linux/sys/file.lo: core/sys/linux/sys/$(am__dirstamp)\n core/sys/linux/sys/inotify.lo: core/sys/linux/sys/$(am__dirstamp)\n core/sys/linux/sys/mman.lo: core/sys/linux/sys/$(am__dirstamp)\n-core/sys/linux/sys/netinet/$(am__dirstamp):\n-\t@$(MKDIR_P) core/sys/linux/sys/netinet\n-\t@: > core/sys/linux/sys/netinet/$(am__dirstamp)\n-core/sys/linux/sys/netinet/tcp.lo:  \\\n-\tcore/sys/linux/sys/netinet/$(am__dirstamp)\n core/sys/linux/sys/prctl.lo: core/sys/linux/sys/$(am__dirstamp)\n core/sys/linux/sys/signalfd.lo: core/sys/linux/sys/$(am__dirstamp)\n core/sys/linux/sys/socket.lo: core/sys/linux/sys/$(am__dirstamp)\n@@ -1867,8 +1861,6 @@ mostlyclean-compile:\n \t-rm -f core/sys/linux/netinet/*.lo\n \t-rm -f core/sys/linux/sys/*.$(OBJEXT)\n \t-rm -f core/sys/linux/sys/*.lo\n-\t-rm -f core/sys/linux/sys/netinet/*.$(OBJEXT)\n-\t-rm -f core/sys/linux/sys/netinet/*.lo\n \t-rm -f core/sys/netbsd/*.$(OBJEXT)\n \t-rm -f core/sys/netbsd/*.lo\n \t-rm -f core/sys/netbsd/sys/*.$(OBJEXT)\n@@ -2027,7 +2019,6 @@ clean-libtool:\n \t-rm -rf core/sys/linux/.libs core/sys/linux/_libs\n \t-rm -rf core/sys/linux/netinet/.libs core/sys/linux/netinet/_libs\n \t-rm -rf core/sys/linux/sys/.libs core/sys/linux/sys/_libs\n-\t-rm -rf core/sys/linux/sys/netinet/.libs core/sys/linux/sys/netinet/_libs\n \t-rm -rf core/sys/netbsd/.libs core/sys/netbsd/_libs\n \t-rm -rf core/sys/netbsd/sys/.libs core/sys/netbsd/sys/_libs\n \t-rm -rf core/sys/openbsd/.libs core/sys/openbsd/_libs\n@@ -2183,7 +2174,6 @@ distclean-generic:\n \t-rm -f core/sys/linux/$(am__dirstamp)\n \t-rm -f core/sys/linux/netinet/$(am__dirstamp)\n \t-rm -f core/sys/linux/sys/$(am__dirstamp)\n-\t-rm -f core/sys/linux/sys/netinet/$(am__dirstamp)\n \t-rm -f core/sys/netbsd/$(am__dirstamp)\n \t-rm -f core/sys/netbsd/sys/$(am__dirstamp)\n \t-rm -f core/sys/openbsd/$(am__dirstamp)"}, {"sha": "219b4263ff2eb8f4b12757519edaf525abfcac0c", "filename": "libphobos/libdruntime/core/math.d", "status": "modified", "additions": 34, "deletions": 18, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fmath.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fmath.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fmath.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -167,9 +167,11 @@ unittest\n /*************************************\n  * Round argument to a specific precision.\n  *\n- * D language types specify a minimum precision, not a maximum. The\n- * `toPrec()` function forces rounding of the argument `f` to the\n- * precision of the specified floating point type `T`.\n+ * D language types specify only a minimum precision, not a maximum. The\n+ * `toPrec()` function forces rounding of the argument `f` to the precision\n+ * of the specified floating point type `T`.\n+ * The rounding mode used is inevitably target-dependent, but will be done in\n+ * a way to maximize accuracy. In most cases, the default is round-to-nearest.\n  *\n  * Params:\n  *      T = precision type to round to\n@@ -206,9 +208,10 @@ T toPrec(T:real)(real f)  { pragma(inline, false); return f; }\n \n @safe unittest\n {\n-    static float f = 1.1f;\n-    static double d = 1.1;\n-    static real r = 1.1L;\n+    // Test all instantiations work with all combinations of float.\n+    float f = 1.1f;\n+    double d = 1.1;\n+    real r = 1.1L;\n     f = toPrec!float(f + f);\n     f = toPrec!float(d + d);\n     f = toPrec!float(r + r);\n@@ -219,19 +222,32 @@ T toPrec(T:real)(real f)  { pragma(inline, false); return f; }\n     r = toPrec!real(d + d);\n     r = toPrec!real(r + r);\n \n-    /+ Uncomment these once compiler support has been added.\n+    // Comparison tests.\n+    bool approxEqual(T)(T lhs, T rhs)\n+    {\n+        return fabs((lhs - rhs) / rhs) <= 1e-2 || fabs(lhs - rhs) <= 1e-5;\n+    }\n+\n     enum real PIR = 0xc.90fdaa22168c235p-2;\n     enum double PID = 0x1.921fb54442d18p+1;\n     enum float PIF = 0x1.921fb6p+1;\n-\n-    assert(toPrec!float(PIR) == PIF);\n-    assert(toPrec!double(PIR) == PID);\n-    assert(toPrec!real(PIR) == PIR);\n-    assert(toPrec!float(PID) == PIF);\n-    assert(toPrec!double(PID) == PID);\n-    assert(toPrec!real(PID) == PID);\n-    assert(toPrec!float(PIF) == PIF);\n-    assert(toPrec!double(PIF) == PIF);\n-    assert(toPrec!real(PIF) == PIF);\n-    +/\n+    static assert(approxEqual(toPrec!float(PIR), PIF));\n+    static assert(approxEqual(toPrec!double(PIR), PID));\n+    static assert(approxEqual(toPrec!real(PIR), PIR));\n+    static assert(approxEqual(toPrec!float(PID), PIF));\n+    static assert(approxEqual(toPrec!double(PID), PID));\n+    static assert(approxEqual(toPrec!real(PID), PID));\n+    static assert(approxEqual(toPrec!float(PIF), PIF));\n+    static assert(approxEqual(toPrec!double(PIF), PIF));\n+    static assert(approxEqual(toPrec!real(PIF), PIF));\n+\n+    assert(approxEqual(toPrec!float(PIR), PIF));\n+    assert(approxEqual(toPrec!double(PIR), PID));\n+    assert(approxEqual(toPrec!real(PIR), PIR));\n+    assert(approxEqual(toPrec!float(PID), PIF));\n+    assert(approxEqual(toPrec!double(PID), PID));\n+    assert(approxEqual(toPrec!real(PID), PID));\n+    assert(approxEqual(toPrec!float(PIF), PIF));\n+    assert(approxEqual(toPrec!double(PIF), PIF));\n+    assert(approxEqual(toPrec!real(PIF), PIF));\n }"}, {"sha": "fc9402f605190396f3ba8215744cf6690ff2704a", "filename": "libphobos/libdruntime/core/stdc/assert_.d", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Fassert_.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Fassert_.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Fassert_.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -17,6 +17,15 @@\n \n module core.stdc.assert_;\n \n+version (OSX)\n+    version = Darwin;\n+else version (iOS)\n+    version = Darwin;\n+else version (TVOS)\n+    version = Darwin;\n+else version (WatchOS)\n+    version = Darwin;\n+\n extern (C):\n @trusted:\n nothrow:\n@@ -39,10 +48,10 @@ else version (CRuntime_Microsoft)\n     ///\n     void _assert(const(char)* exp, const(char)* file, uint line);\n }\n-else version (OSX)\n+else version (Darwin)\n {\n     /***\n-     * Assert failure function in the OSX C library.\n+     * Assert failure function in the Darwin C library.\n      */\n     void __assert_rtn(const(char)* func, const(char)* file, uint line, const(char)* exp);\n }"}, {"sha": "767ed24247204e641999ede339be5cbe1f509305", "filename": "libphobos/libdruntime/core/stdc/errno.d", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Ferrno.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Ferrno.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Ferrno.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -211,6 +211,50 @@ version (Windows)\n     enum ENOTEMPTY          = 41;       /// Directory not empty\n     enum EILSEQ             = 42;       /// Illegal byte sequence\n     enum EDEADLOCK          = EDEADLK;  /// Resource deadlock would occur\n+\n+    // POSIX compatibility\n+    // See_Also: https://docs.microsoft.com/en-us/cpp/c-runtime-library/errno-constants\n+    enum EADDRINUSE         = 100;\n+    enum EADDRNOTAVAIL      = 101;\n+    enum EAFNOSUPPORT       = 102;\n+    enum EALREADY           = 103;\n+    enum EBADMSG            = 104;\n+    enum ECANCELED          = 105;\n+    enum ECONNABORTED       = 106;\n+    enum ECONNREFUSED       = 107;\n+    enum ECONNRESET         = 108;\n+    enum EDESTADDRREQ       = 109;\n+    enum EHOSTUNREACH       = 110;\n+    enum EIDRM              = 111;\n+    enum EINPROGRESS        = 112;\n+    enum EISCONN            = 113;\n+    enum ELOOP              = 114;\n+    enum EMSGSIZE           = 115;\n+    enum ENETDOWN           = 116;\n+    enum ENETRESET          = 117;\n+    enum ENETUNREACH        = 118;\n+    enum ENOBUFS            = 119;\n+    enum ENODATA            = 120;\n+    enum ENOLINK            = 121;\n+    enum ENOMSG             = 122;\n+    enum ENOPROTOOPT        = 123;\n+    enum ENOSR              = 124;\n+    enum ENOSTR             = 125;\n+    enum ENOTCONN           = 126;\n+    enum ENOTRECOVERABLE    = 127;\n+    enum ENOTSOCK           = 128;\n+    enum ENOTSUP            = 129;\n+    enum EOPNOTSUPP         = 130;\n+    enum EOTHER             = 131;\n+    enum EOVERFLOW          = 132;\n+    enum EOWNERDEAD         = 133;\n+    enum EPROTO             = 134;\n+    enum EPROTONOSUPPORT    = 135;\n+    enum EPROTOTYPE         = 136;\n+    enum ETIME              = 137;\n+    enum ETIMEDOUT          = 138;\n+    enum ETXTBSY            = 139;\n+    enum EWOULDBLOCK        = 140;\n }\n else version (linux)\n {"}, {"sha": "0e310521e0e52590eaa33794cd7b472c6bcc2431", "filename": "libphobos/libdruntime/core/stdc/stdint.d", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Fstdint.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Fstdint.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Fstdint.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -19,6 +19,14 @@ private import core.stdc.stddef; // for wchar_t\n private import core.stdc.signal; // for sig_atomic_t\n private import core.stdc.wchar_; // for wint_t\n \n+version (OSX)\n+    version = Darwin;\n+else version (iOS)\n+    version = Darwin;\n+else version (TVOS)\n+    version = Darwin;\n+else version (WatchOS)\n+    version = Darwin;\n \n // Can't be `private` because of @@@BUG11173@@@.\n T _typify(T)(T val) @safe pure nothrow { return val; }\n@@ -77,7 +85,7 @@ version (Windows)\n     alias intmax_t  = long;      ///\n     alias uintmax_t = ulong;     ///\n }\n-else version (OSX)\n+else version (Darwin)\n {\n     alias int8_t   = byte;          ///\n     alias int16_t  = short;         ///\n@@ -140,6 +148,15 @@ else version (Posix)\n         alias int_fast32_t  = int;  ///\n         alias uint_fast32_t = uint; ///\n     }\n+    else version (CRuntime_Musl)\n+    {\n+        alias int_fast8_t   = byte;  ///\n+        alias uint_fast8_t  = ubyte; ///\n+        alias int_fast16_t  = int;   ///\n+        alias uint_fast16_t = uint;  ///\n+        alias int_fast32_t  = int;   ///\n+        alias uint_fast32_t = uint;  ///\n+    }\n     else\n     {\n         alias int_fast8_t   = byte;      ///"}, {"sha": "0929a4eab53dd92c8080821842746c16783b95a3", "filename": "libphobos/libdruntime/core/stdc/string.d", "status": "modified", "additions": 10, "deletions": 37, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Fstring.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Fstring.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Fstring.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -23,6 +23,12 @@ else version (TVOS)\n else version (WatchOS)\n     version = Darwin;\n \n+// Those libs don't expose the mandated C interface\n+version (CRuntime_Glibc)\n+    version = ReturnStrerrorR;\n+else version (CRuntime_UClibc)\n+    version = ReturnStrerrorR;\n+\n extern (C):\n @system:\n nothrow:\n@@ -76,50 +82,17 @@ pure inout(char)*  strstr(return inout(char)* s1, scope const char* s2);\n char*  strtok(return char* s1, scope const char* s2);\n ///\n char*  strerror(int errnum);\n-version (CRuntime_Glibc)\n+// This `strerror_r` definition is not following the POSIX standard\n+version (ReturnStrerrorR)\n {\n     ///\n     const(char)* strerror_r(int errnum, return char* buf, size_t buflen);\n }\n-else version (Darwin)\n-{\n-    int strerror_r(int errnum, scope char* buf, size_t buflen);\n-}\n-else version (FreeBSD)\n-{\n-    int strerror_r(int errnum, scope char* buf, size_t buflen);\n-}\n-else version (NetBSD)\n-{\n-    int strerror_r(int errnum, char* buf, size_t buflen);\n-}\n-else version (OpenBSD)\n-{\n-    int strerror_r(int errnum, scope char* buf, size_t buflen);\n-}\n-else version (DragonFlyBSD)\n+// This one is\n+else\n {\n     int strerror_r(int errnum, scope char* buf, size_t buflen);\n }\n-else version (Solaris)\n-{\n-    int strerror_r(int errnum, scope char* buf, size_t buflen);\n-}\n-else version (CRuntime_Bionic)\n-{\n-    ///\n-    int strerror_r(int errnum, scope char* buf, size_t buflen);\n-}\n-else version (CRuntime_Musl)\n-{\n-    ///\n-    int strerror_r(int errnum, scope char *buf, size_t buflen);\n-}\n-else version (CRuntime_UClibc)\n-{\n-    ///\n-    const(char)* strerror_r(int errnum, return char* buf, size_t buflen);\n-}\n ///\n pure size_t strlen(scope const char* s);\n ///"}, {"sha": "1c5cf6df2c01c3f405cf6f65308e71616bff6d9e", "filename": "libphobos/libdruntime/core/sys/darwin/mach/port.d", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdarwin%2Fmach%2Fport.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdarwin%2Fmach%2Fport.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdarwin%2Fmach%2Fport.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -25,12 +25,5 @@ else version (WatchOS)\n version (Darwin):\n extern (C):\n \n-version (X86)\n-    version = i386;\n-version (X86_64)\n-    version = i386;\n-version (i386)\n-{\n-    alias uint        natural_t;\n-    alias natural_t   mach_port_t;\n-}\n+alias natural_t = uint;\n+alias mach_port_t = natural_t;"}, {"sha": "b61673fb4f1b1a60af94ba182e6f53e1dbce8df5", "filename": "libphobos/libdruntime/core/sys/darwin/mach/thread_act.d", "status": "modified", "additions": 100, "deletions": 0, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdarwin%2Fmach%2Fthread_act.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdarwin%2Fmach%2Fthread_act.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdarwin%2Fmach%2Fthread_act.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -34,6 +34,11 @@ version (X86)\n     version = i386;\n version (X86_64)\n     version = i386;\n+version (AArch64)\n+    version = AnyARM;\n+version (ARM)\n+    version = AnyARM;\n+\n version (i386)\n {\n     alias mach_port_t thread_act_t;\n@@ -135,3 +140,98 @@ version (i386)\n     kern_return_t thread_resume(thread_act_t);\n     kern_return_t thread_get_state(thread_act_t, thread_state_flavor_t, thread_state_t*, mach_msg_type_number_t*);\n }\n+// https://github.com/apple/darwin-xnu/blob/master/osfmk/mach/arm/_structs.h\n+// https://github.com/apple/darwin-xnu/blob/master/osfmk/mach/arm/thread_status.h\n+else version (AnyARM)\n+{\n+    alias thread_act_t = mach_port_t;\n+    alias thread_state_t = void;\n+    alias thread_state_flavor_t = int;\n+    alias mach_msg_type_number_t = natural_t;\n+\n+    enum\n+    {\n+        ARM_THREAD_STATE = 1,\n+        ARM_UNIFIED_THREAD_STATE = ARM_THREAD_STATE,\n+        ARM_VFP_STATE = 2,\n+        ARM_EXCEPTION_STATE = 3,\n+        ARM_DEBUG_STATE = 4, /* pre-armv8 */\n+        THREAD_STATE_NONE = 5,\n+        ARM_THREAD_STATE64 = 6,\n+        ARM_EXCEPTION_STATE64 = 7,\n+        // ARM_THREAD_STATE_LAST = 8, /* legacy */\n+        ARM_THREAD_STATE32 = 9\n+    }\n+\n+    enum\n+    {\n+        ARM_DEBUG_STATE32 = 14,\n+        ARM_DEBUG_STATE64 = 15,\n+        ARM_NEON_STATE = 16,\n+        ARM_NEON_STATE64 = 17,\n+        ARM_CPMU_STATE64 = 18\n+    }\n+\n+    enum\n+    {\n+        ARM_AMX_STATE = 24,\n+        ARM_AMX_STATE_V1 = 25\n+    }\n+\n+    struct arm_thread_state_t\n+    {\n+        uint[13] r; /// General purpose register r0-r12\n+        uint sp;    /// Stack pointer r13\n+        uint lr;    /// Link register r14\n+        uint pc;    /// Program counter r15\n+        uint cpsr;  /// Current program status register\n+    }\n+\n+    alias arm_thread_state32_t = arm_thread_state_t;\n+\n+    struct arm_thread_state64_t\n+    {\n+        ulong[29] x; /// General purpose registers x0-x28\n+        ulong fp; /// Frame pointer x29\n+        ulong lr; /// Link register x30\n+        ulong sp; /// Stack pointer x31\n+        ulong pc; /// Program counter\n+        ulong cpsr; /// Current program status register\n+        ulong pad; /// Same size for 32-bit or 64-bit clients\n+    }\n+\n+    struct arm_state_hdr_t\n+    {\n+        uint flavor;\n+        uint count;\n+    }\n+\n+    struct arm_unified_thread_state_t\n+    {\n+        arm_state_hdr_t ash;\n+\n+        union _uts\n+        {\n+            arm_thread_state32_t ts_32;\n+            arm_thread_state64_t ts_64;\n+        }\n+\n+        _uts uts;\n+    }\n+\n+    enum : mach_msg_type_number_t\n+    {\n+        ARM_THREAD_STATE_COUNT = cast(mach_msg_type_number_t) (arm_thread_state_t.sizeof / uint.sizeof),\n+        ARM_THREAD_STATE32_COUNT = cast(mach_msg_type_number_t) (arm_thread_state32_t.sizeof / uint.sizeof),\n+        ARM_THREAD_STATE64_COUNT = cast(mach_msg_type_number_t) (arm_thread_state64_t.sizeof / uint.sizeof),\n+        ARM_UNIFIED_THREAD_STATE_COUNT = cast(mach_msg_type_number_t) (arm_unified_thread_state_t.sizeof / uint.sizeof)\n+    }\n+\n+    alias MACHINE_THREAD_STATE = ARM_THREAD_STATE;\n+    alias MACHINE_THREAD_STATE_COUNT = ARM_UNIFIED_THREAD_STATE_COUNT;\n+\n+    mach_port_t   mach_thread_self();\n+    kern_return_t thread_suspend(thread_act_t);\n+    kern_return_t thread_resume(thread_act_t);\n+    kern_return_t thread_get_state(thread_act_t, thread_state_flavor_t, thread_state_t*, mach_msg_type_number_t*);\n+}"}, {"sha": "95b6c1dfbae94cf39253b592ec523b512585348c", "filename": "libphobos/libdruntime/core/sys/freebsd/dlfcn.d", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fdlfcn.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fdlfcn.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fdlfcn.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -86,16 +86,13 @@ static if (__BSD_VISIBLE)\n     };\n }\n \n-private template __externC(RT, P...)\n-{\n-    alias __externC = extern(C) RT function(P) nothrow @nogc;\n-}\n-\n /* XSI functions first. */\n-static assert(is(typeof(&dlclose) == __externC!(int, void*)));\n-static assert(is(typeof(&dlerror) == __externC!(char*)));\n-static assert(is(typeof(&dlopen)  == __externC!(void*, const char*, int)));\n-static assert(is(typeof(&dlsym)   == __externC!(void*, void*, const char*)));\n+extern(C) {\n+    static assert(is(typeof(&dlclose) == int function(void*)));\n+    static assert(is(typeof(&dlerror) == char* function()));\n+    static assert(is(typeof(&dlopen)  == void* function(in char*, int)));\n+    static assert(is(typeof(&dlsym)   == void* function(void*, in char*)));\n+}\n \n static if (__BSD_VISIBLE)\n {"}, {"sha": "125ef097d27e73dc26ed4aec0b6f9ed504151951", "filename": "libphobos/libdruntime/core/sys/freebsd/execinfo.d", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fexecinfo.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fexecinfo.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fexecinfo.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -38,6 +38,8 @@ else\n             asm nothrow @trusted { mov p[EBP], EBP; }\n         else version (D_InlineAsm_X86_64)\n             asm nothrow @trusted { mov p[RBP], RBP; }\n+        else version (AArch64)\n+            asm nothrow @trusted { \"str x29, %0\" : \"=m\" (p); }\n         else\n             static assert(false, \"Architecture not supported.\");\n "}, {"sha": "03d3e17e166a2567ae926ee19f2566dcd34454d6", "filename": "libphobos/libdruntime/core/sys/linux/config.d", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fconfig.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fconfig.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fconfig.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -27,6 +27,3 @@ deprecated(\"use _DEFAULT_SOURCE\")\n enum __USE_MISC = _DEFAULT_SOURCE;\n enum __USE_ATFILE = _ATFILE_SOURCE;\n enum __USE_GNU = _GNU_SOURCE;\n-\n-// Available in bionic from API 21\n-version (CRuntime_Bionic) enum __WORDSIZE = 32;"}, {"sha": "4d7eb1eb7d39b4ae9e313f10eae11dace48bf462", "filename": "libphobos/libdruntime/core/sys/linux/link.d", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Flink.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Flink.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Flink.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -31,7 +31,15 @@ import core.sys.linux.dlfcn : Lmid_t;\n import core.sys.linux.elf;\n \n // <bits/elfclass.h>\n-version (X86_Any)\n+version (Android)\n+{\n+    alias __WORDSIZE __ELF_NATIVE_CLASS;\n+    version (D_LP64)\n+        alias uint64_t Elf_Symndx;\n+    else\n+        alias uint32_t Elf_Symndx;\n+}\n+else version (X86_Any)\n {\n     // http://sourceware.org/git/?p=glibc.git;a=blob;f=bits/elfclass.h\n     alias __WORDSIZE __ELF_NATIVE_CLASS;"}, {"sha": "d49573639515b992521efb4cb4ef7f8b8f451ba7", "filename": "libphobos/libdruntime/core/sys/linux/sys/netinet/tcp.d", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b8e9006bb35641865358e2df4f6b3ae185b239a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fsys%2Fnetinet%2Ftcp.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b8e9006bb35641865358e2df4f6b3ae185b239a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fsys%2Fnetinet%2Ftcp.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fsys%2Fnetinet%2Ftcp.d?ref=9b8e9006bb35641865358e2df4f6b3ae185b239a", "patch": "@@ -1,9 +0,0 @@\n-/**\n- * D header file for GNU/Linux\n- *\n- * Authors: Martin Nowak\n- */\n-deprecated(\"Import core.sys.linux.netinet.tcp instead\")\n-module core.sys.linux.sys.netinet.tcp;\n-\n-public import core.sys.linux.netinet.tcp;"}, {"sha": "339a6022dc8cb185987a32e79c42384e4e5e5ef4", "filename": "libphobos/libdruntime/core/sys/linux/sys/socket.d", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fsys%2Fsocket.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fsys%2Fsocket.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fsys%2Fsocket.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -156,3 +156,21 @@ enum\n     SO_PEERGROUPS              = 59,\n     SO_ZEROCOPY                = 60,\n }\n+\n+enum : uint\n+{\n+    MSG_TRYHARD      = 0x04,\n+    MSG_PROXY        = 0x10,\n+    MSG_DONTWAIT     = 0x40,\n+    MSG_FIN          = 0x200,\n+    MSG_SYN          = 0x400,\n+    MSG_CONFIRM      = 0x800,\n+    MSG_RST          = 0x1000,\n+    MSG_ERRQUEUE     = 0x2000,\n+    MSG_MORE         = 0x8000,\n+    MSG_WAITFORONE   = 0x10000,\n+    MSG_BATCH        = 0x40000,\n+    MSG_ZEROCOPY     = 0x4000000,\n+    MSG_FASTOPEN     = 0x20000000,\n+    MSG_CMSG_CLOEXEC = 0x40000000\n+}"}, {"sha": "f8a9719a87e31e939e1ccd548db0720c155f28a1", "filename": "libphobos/libdruntime/core/sys/linux/timerfd.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Ftimerfd.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Ftimerfd.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Ftimerfd.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -20,5 +20,6 @@ int timerfd_settime(int fd, int flags, const itimerspec* new_value, itimerspec*\n int timerfd_gettime(int fd, itimerspec* curr_value);\n \n enum TFD_TIMER_ABSTIME = 1 << 0;\n+enum TFD_TIMER_CANCEL_ON_SET = 1 << 1;\n enum TFD_CLOEXEC       = 0x80000;\n enum TFD_NONBLOCK      = 0x800;"}, {"sha": "20e711cb72da679ff1bfcd45f4f442f5b4c1fd8e", "filename": "libphobos/libdruntime/core/sys/posix/config.d", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fconfig.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fconfig.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fconfig.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -61,9 +61,9 @@ version (CRuntime_Glibc)\n     enum __USE_REENTRANT     = _REENTRANT;\n \n     version (D_LP64)\n-        enum __WORDSIZE=64;\n+        enum __WORDSIZE = 64;\n     else\n-        enum __WORDSIZE=32;\n+        enum __WORDSIZE = 32;\n }\n else version (CRuntime_Musl)\n {\n@@ -109,13 +109,19 @@ else version (CRuntime_UClibc)\n     enum __USE_REENTRANT     = _REENTRANT;\n \n     version (D_LP64)\n-        enum __WORDSIZE=64;\n+        enum __WORDSIZE = 64;\n     else\n-        enum __WORDSIZE=32;\n+        enum __WORDSIZE = 32;\n }\n else version (CRuntime_Bionic)\n {\n-    enum __USE_GNU           = false;\n+    enum _GNU_SOURCE         = false;\n+    enum __USE_GNU           = _GNU_SOURCE;\n+\n+    version (D_LP64)\n+        enum __WORDSIZE = 64;\n+    else\n+        enum __WORDSIZE = 32;\n }\n else version (OpenBSD)\n {"}, {"sha": "11113d36269bc92aaf74e801ee25fb89a8b4fb40", "filename": "libphobos/libdruntime/core/sys/posix/dlfcn.d", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fdlfcn.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fdlfcn.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fdlfcn.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -126,20 +126,6 @@ version (CRuntime_Glibc)\n     char* dlerror();\n     void* dlopen(in char*, int);\n     void* dlsym(void*, in char*);\n-\n-    deprecated(\"Please use core.sys.linux.dlfcn for non-POSIX extensions\")\n-    {\n-        int   dladdr(in void* addr, Dl_info* info);\n-        void* dlvsym(void* handle, in char* symbol, in char* version_);\n-\n-        struct Dl_info\n-        {\n-            const(char)* dli_fname;\n-            void*        dli_fbase;\n-            const(char)* dli_sname;\n-            void*        dli_saddr;\n-        }\n-    }\n }\n else version (Darwin)\n {"}, {"sha": "15863b4f35e1e52aa3587ac1f7c1b779862a0757", "filename": "libphobos/libdruntime/core/sys/posix/inttypes.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Finttypes.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Finttypes.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Finttypes.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -27,14 +27,14 @@ extern (C) nothrow @nogc:\n intmax_t  imaxabs(intmax_t);\n imaxdiv_t imaxdiv(intmax_t, intmax_t);\n intmax_t  strtoimax(in char*, char**, int);\n-uintmax_t strtoumax(in char *, char**, int);\n+uintmax_t strtoumax(in char*, char**, int);\n intmax_t  wcstoimax(in wchar_t*, wchar_t**, int);\n uintmax_t wcstoumax(in wchar_t*, wchar_t**, int);\n */\n \n intmax_t  imaxabs(intmax_t);\n imaxdiv_t imaxdiv(intmax_t, intmax_t);\n intmax_t  strtoimax(in char*, char**, int);\n-uintmax_t strtoumax(in char *, char**, int);\n+uintmax_t strtoumax(in char*, char**, int);\n intmax_t  wcstoimax(in wchar_t*, wchar_t**, int);\n uintmax_t wcstoumax(in wchar_t*, wchar_t**, int);"}, {"sha": "f1251839b164551c39056aab18890d89ff075b3f", "filename": "libphobos/libdruntime/core/sys/posix/netdb.d", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fnetdb.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fnetdb.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fnetdb.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -743,9 +743,7 @@ else version (Solaris)\n         int ai_socktype;\n         int ai_protocol;\n \n-        version (SPARC)\n-            int _ai_pad;\n-        else version (SPARC64)\n+        version (SPARC64)\n             int _ai_pad;\n \n         socklen_t ai_addrlen;"}, {"sha": "9a97709b473122c0090e172ad5559ded596e80c1", "filename": "libphobos/libdruntime/core/sys/posix/signal.d", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsignal.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsignal.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsignal.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -1142,10 +1142,10 @@ else version (FreeBSD)\n     int sigdelset(sigset_t*, int);\n     int sigemptyset(sigset_t *);\n     int sigfillset(sigset_t *);\n-    int sigismember(in sigset_t *, int);\n+    int sigismember(in sigset_t*, int);\n     int sigpending(sigset_t *);\n     int sigprocmask(int, in sigset_t*, sigset_t*);\n-    int sigsuspend(in sigset_t *);\n+    int sigsuspend(in sigset_t*);\n     int sigwait(in sigset_t*, int*);\n }\n else version (NetBSD)\n@@ -1228,10 +1228,10 @@ else version (NetBSD)\n     int __sigdelset14(sigset_t*, int);\n     int __sigemptyset14(sigset_t *);\n     int __sigfillset14(sigset_t *);\n-    int __sigismember14(in sigset_t *, int);\n+    int __sigismember14(in sigset_t*, int);\n     int __sigpending14(sigset_t *);\n     int __sigprocmask14(int, in sigset_t*, sigset_t*);\n-    int __sigsuspend14(in sigset_t *);\n+    int __sigsuspend14(in sigset_t*);\n     int sigwait(in sigset_t*, int*);\n \n     alias __sigaction14 sigaction;\n@@ -1314,10 +1314,10 @@ else version (OpenBSD)\n     int sigdelset(sigset_t*, int);\n     int sigemptyset(sigset_t *);\n     int sigfillset(sigset_t *);\n-    int sigismember(in sigset_t *, int);\n+    int sigismember(in sigset_t*, int);\n     int sigpending(sigset_t *);\n     int sigprocmask(int, in sigset_t*, sigset_t*);\n-    int sigsuspend(in sigset_t *);\n+    int sigsuspend(in sigset_t*);\n     int sigwait(in sigset_t*, int*);\n }\n else version (DragonFlyBSD)\n@@ -1363,10 +1363,10 @@ else version (DragonFlyBSD)\n     int sigdelset(sigset_t*, int);\n     int sigemptyset(sigset_t *);\n     int sigfillset(sigset_t *);\n-    int sigismember(in sigset_t *, int);\n+    int sigismember(in sigset_t*, int);\n     int sigpending(sigset_t *);\n     int sigprocmask(int, in sigset_t*, sigset_t*);\n-    int sigsuspend(in sigset_t *);\n+    int sigsuspend(in sigset_t*);\n     int sigwait(in sigset_t*, int*);\n }\n else version (Solaris)\n@@ -3258,7 +3258,7 @@ else version (CRuntime_Musl)\n     sigfn_t2 sigset(int sig, sigfn_t2 func);\n \n     int killpg(pid_t, int);\n-    int sigaltstack(const scope stack_t*, stack_t*);\n+    int sigaltstack(in stack_t*, stack_t*);\n     int sighold(int);\n     int sigignore(int);\n     int siginterrupt(int, int);"}, {"sha": "bc2329e6bf8bb8f5f2e20f1f7a5de906f42c56c7", "filename": "libphobos/libdruntime/core/sys/posix/stdio.d", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fstdio.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fstdio.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fstdio.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -180,6 +180,37 @@ else version (CRuntime_UClibc)\n         FILE* tmpfile();\n     }\n }\n+else version (CRuntime_Musl)\n+{\n+    static if ( __USE_FILE_OFFSET64 )\n+    {\n+        int   fgetpos64(FILE*, fpos_t *);\n+        alias fgetpos64 fgetpos;\n+\n+        FILE* fopen64(in char*, in char*);\n+        alias fopen64 fopen;\n+\n+        FILE* freopen64(in char*, in char*, FILE*);\n+        alias freopen64 freopen;\n+\n+        int   fseek(FILE*, c_long, int);\n+\n+        int   fsetpos64(FILE*, in fpos_t*);\n+        alias fsetpos64 fsetpos;\n+\n+        FILE* tmpfile64();\n+        alias tmpfile64 tmpfile;\n+    }\n+    else\n+    {\n+        int   fgetpos(FILE*, fpos_t *);\n+        FILE* fopen(in char*, in char*);\n+        FILE* freopen(in char*, in char*, FILE*);\n+        int   fseek(FILE*, c_long, int);\n+        int   fsetpos(FILE*, in fpos_t*);\n+        FILE* tmpfile();\n+    }\n+}\n else version (Solaris)\n {\n     static if (__USE_FILE_OFFSET64 && __WORDSIZE != 64)\n@@ -277,6 +308,30 @@ else version (CRuntime_UClibc)\n     off_t ftello(FILE*);\n   }\n }\n+else version (CRuntime_Musl)\n+{\n+    enum L_ctermid = 20;\n+\n+    static if ( __USE_FILE_OFFSET64 )\n+    {\n+        int   fseeko64(FILE*, off_t, int);\n+        alias fseeko64 fseeko;\n+    }\n+    else\n+    {\n+        int   fseeko(FILE*, off_t, int);\n+    }\n+\n+    static if ( __USE_FILE_OFFSET64 )\n+    {\n+        off_t ftello64(FILE*);\n+        alias ftello64 ftello;\n+    }\n+    else\n+    {\n+        off_t ftello(FILE*);\n+    }\n+}\n else version (Solaris)\n {\n     enum L_ctermid = 9;\n@@ -331,6 +386,9 @@ else version (OpenBSD)                      // as of OpenBSD 5.4\n     version = HaveMemstream;\n else version (CRuntime_UClibc)\n     version = HaveMemstream;\n+// http://git.musl-libc.org/cgit/musl/commit/src/stdio/open_memstream.c?id=b158b32a44d56ef20407d4285b58180447ffff1f\n+else version (CRuntime_Musl)\n+    version = HaveMemstream;\n \n version (HaveMemstream)\n {"}, {"sha": "a218f958077ff7e31db8a7d9d2e1f72a76c1d268", "filename": "libphobos/libdruntime/core/sys/posix/stdlib.d", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fstdlib.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fstdlib.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fstdlib.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -574,9 +574,45 @@ else version (CRuntime_Bionic)\n }\n else version (CRuntime_Musl)\n {\n-    char*  realpath(in char*, char*);\n+    c_long a64l(in char*);\n+    double drand48();\n+    char*  ecvt(double, int, int *, int *); // LEGACY\n+    double erand48(ref ushort[3]);\n+    char*  fcvt(double, int, int *, int *); // LEGACY\n+    char*  gcvt(double, int, char*); // LEGACY\n+    int    getsubopt(char**, in char**, char**);\n+    int    grantpt(int);\n+    char*  initstate(uint, char*, size_t);\n+    c_long jrand48(ref ushort[3]);\n+    char*  l64a(c_long);\n+    void   lcong48(ref ushort[7]);\n+    c_long lrand48();\n+    char*  mktemp(char*); // LEGACY\n+    char*  mkdtemp(char*); // Defined in IEEE 1003.1, 2008 Edition\n+    int    mkstemp(char*);\n+    c_long mrand48();\n+    c_long nrand48(ref ushort[3]);\n+    int    posix_openpt(int);\n+    char*  ptsname(int);\n     int    putenv(char*);\n+    c_long random();\n+    char*  realpath(in char*, char*);\n+    ushort *seed48(ref ushort[3]);\n+    void   setkey(in char*);\n+    char*  setstate(in char*);\n+    void   srand48(c_long);\n+    void   srandom(uint);\n+    int    unlockpt(int);\n+\n+  static if ( __USE_LARGEFILE64 )\n+  {\n+    int    mkstemp64(char*);\n+    alias  mkstemp64 mkstemp;\n+  }\n+  else\n+  {\n     int    mkstemp(char*);\n+  }\n \n }\n else version (Solaris)"}, {"sha": "3574bc69adaa7e06b5d90d78ba5fc2f2a4e0dc8d", "filename": "libphobos/libdruntime/core/sys/posix/sys/filio.d", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Ffilio.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Ffilio.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Ffilio.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -8,11 +8,20 @@ module core.sys.posix.sys.filio;\n \n import core.sys.posix.sys.ioccom;\n \n+version (OSX)\n+    version = Darwin;\n+else version (iOS)\n+    version = Darwin;\n+else version (TVOS)\n+    version = Darwin;\n+else version (WatchOS)\n+    version = Darwin;\n+\n version (Posix):\n \n nothrow @nogc:\n \n-version (OSX)\n+version (Darwin)\n {\n     // File-descriptor ioctl's\n     enum uint FIOCLEX   = _IO('f', 1);         // set close on exec on fd"}, {"sha": "51f1d2272aa009dc4b2bc626b014250e655abe74", "filename": "libphobos/libdruntime/core/sys/posix/sys/ioccom.d", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fioccom.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fioccom.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fioccom.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -6,11 +6,20 @@\n \n module core.sys.posix.sys.ioccom;\n \n+version (OSX)\n+    version = Darwin;\n+else version (iOS)\n+    version = Darwin;\n+else version (TVOS)\n+    version = Darwin;\n+else version (WatchOS)\n+    version = Darwin;\n+\n version (Posix):\n \n nothrow @nogc:\n \n-version (OSX)\n+version (Darwin)\n {\n     /* OSX ioctl's (based on FreeBSD) encode the command in the lower 16-bits\n      * and the size of any in/out parameters in the lower 13 bits of the upper"}, {"sha": "56a8fd428e8173f0e2f376fa95f8c3e93bb81618", "filename": "libphobos/libdruntime/core/sys/posix/sys/resource.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fresource.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fresource.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fresource.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -525,6 +525,7 @@ else version (CRuntime_Bionic)\n else version (CRuntime_Musl)\n {\n     alias ulong rlim_t;\n+    enum RLIM_INFINITY = cast(c_ulong)(~0UL);\n \n     int getrlimit(int, rlimit*);\n     int setrlimit(int, in rlimit*);"}, {"sha": "83e47582f84a5cfc2b376f83bd2132352aaba8cd", "filename": "libphobos/libdruntime/core/sys/posix/sys/select.d", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fselect.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fselect.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fselect.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -15,7 +15,6 @@ public import core.sys.posix.sys.types; // for time_t\n public import core.sys.posix.signal;    // for sigset_t\n \n //debug=select;  // uncomment to turn on debugging printf's\n-version (unittest) import core.stdc.stdio: printf;\n \n version (OSX)\n     version = Darwin;\n@@ -560,6 +559,8 @@ else\n \n pure unittest\n {\n+    import core.stdc.stdio: printf;\n+\n     debug(select) printf(\"core.sys.posix.sys.select unittest\\n\");\n \n     fd_set fd;"}, {"sha": "05f52fc76afed8aed97f5e348ae06baa69e92eaa", "filename": "libphobos/libdruntime/core/sys/posix/sys/socket.d", "status": "modified", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fsocket.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fsocket.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fsocket.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -571,19 +571,19 @@ version (CRuntime_Glibc)\n     }\n \n     int     accept(int, scope sockaddr*, scope socklen_t*);\n-    int     bind(int, const scope sockaddr*, socklen_t);\n-    int     connect(int, const scope sockaddr*, socklen_t);\n+    int     bind(int, in sockaddr*, socklen_t);\n+    int     connect(int, in sockaddr*, socklen_t);\n     int     getpeername(int, scope sockaddr*, scope socklen_t*);\n     int     getsockname(int, scope sockaddr*, scope socklen_t*);\n     int     getsockopt(int, int, int, scope void*, scope socklen_t*);\n     int     listen(int, int) @safe;\n     ssize_t recv(int, scope void*, size_t, int);\n     ssize_t recvfrom(int, scope void*, size_t, int, scope sockaddr*, scope socklen_t*);\n     ssize_t recvmsg(int, scope msghdr*, int);\n-    ssize_t send(int, const scope void*, size_t, int);\n-    ssize_t sendmsg(int, const scope msghdr*, int);\n-    ssize_t sendto(int, const scope void*, size_t, int, const scope sockaddr*, socklen_t);\n-    int     setsockopt(int, int, int, const scope void*, socklen_t);\n+    ssize_t send(int, in void*, size_t, int);\n+    ssize_t sendmsg(int, in msghdr*, int);\n+    ssize_t sendto(int, in void*, size_t, int, in sockaddr*, socklen_t);\n+    int     setsockopt(int, int, int, in void*, socklen_t);\n     int     shutdown(int, int) @safe;\n     int     socket(int, int, int) @safe;\n     int     sockatmark(int) @safe;\n@@ -727,19 +727,19 @@ else version (Darwin)\n     }\n \n     int     accept(int, scope sockaddr*, scope socklen_t*);\n-    int     bind(int, const scope sockaddr*, socklen_t);\n-    int     connect(int, const scope sockaddr*, socklen_t);\n+    int     bind(int, in sockaddr*, socklen_t);\n+    int     connect(int, in sockaddr*, socklen_t);\n     int     getpeername(int, scope sockaddr*, scope socklen_t*);\n     int     getsockname(int, scope sockaddr*, scope socklen_t*);\n     int     getsockopt(int, int, int, scope void*, scope socklen_t*);\n     int     listen(int, int) @safe;\n     ssize_t recv(int, scope void*, size_t, int);\n     ssize_t recvfrom(int, scope void*, size_t, int, scope sockaddr*, scope socklen_t*);\n     ssize_t recvmsg(int, scope msghdr*, int);\n-    ssize_t send(int, const scope void*, size_t, int);\n-    ssize_t sendmsg(int, const scope msghdr*, int);\n-    ssize_t sendto(int, const scope void*, size_t, int, const scope sockaddr*, socklen_t);\n-    int     setsockopt(int, int, int, const scope void*, socklen_t);\n+    ssize_t send(int, in void*, size_t, int);\n+    ssize_t sendmsg(int, in msghdr*, int);\n+    ssize_t sendto(int, in void*, size_t, int, in sockaddr*, socklen_t);\n+    int     setsockopt(int, int, int, in void*, socklen_t);\n     int     shutdown(int, int) @safe;\n     int     socket(int, int, int) @safe;\n     int     sockatmark(int) @safe;\n@@ -904,19 +904,19 @@ else version (FreeBSD)\n     }\n \n     int     accept(int, scope sockaddr*, scope socklen_t*);\n-    int     bind(int, const scope sockaddr*, socklen_t);\n-    int     connect(int, const scope sockaddr*, socklen_t);\n+    int     bind(int, in sockaddr*, socklen_t);\n+    int     connect(int, in sockaddr*, socklen_t);\n     int     getpeername(int, scope sockaddr*, scope socklen_t*);\n     int     getsockname(int, scope sockaddr*, scope socklen_t*);\n     int     getsockopt(int, int, int, scope void*, scope socklen_t*);\n     int     listen(int, int) @safe;\n     ssize_t recv(int, scope void*, size_t, int);\n     ssize_t recvfrom(int, scope void*, size_t, int, scope sockaddr*, scope socklen_t*);\n     ssize_t recvmsg(int, scope msghdr*, int);\n-    ssize_t send(int, const scope void*, size_t, int);\n-    ssize_t sendmsg(int, const scope msghdr*, int);\n-    ssize_t sendto(int, const scope void*, size_t, int, const scope sockaddr*, socklen_t);\n-    int     setsockopt(int, int, int, const scope void*, socklen_t);\n+    ssize_t send(int, in void*, size_t, int);\n+    ssize_t sendmsg(int, in msghdr*, int);\n+    ssize_t sendto(int, in void*, size_t, int, in sockaddr*, socklen_t);\n+    int     setsockopt(int, int, int, in void*, socklen_t);\n     int     shutdown(int, int) @safe;\n     int     socket(int, int, int) @safe;\n     int     sockatmark(int) @safe;\n@@ -1101,19 +1101,19 @@ else version (NetBSD)\n     }\n \n     int     accept(int, scope sockaddr*, scope socklen_t*);\n-    int     bind(int, const scope sockaddr*, socklen_t);\n-    int     connect(int, const scope sockaddr*, socklen_t);\n+    int     bind(int, in sockaddr*, socklen_t);\n+    int     connect(int, in sockaddr*, socklen_t);\n     int     getpeername(int, scope sockaddr*, scope socklen_t*);\n     int     getsockname(int, scope sockaddr*, scope socklen_t*);\n     int     getsockopt(int, int, int, scope void*, scope socklen_t*);\n     int     listen(int, int) @safe;\n     ssize_t recv(int, scope void*, size_t, int);\n     ssize_t recvfrom(int, scope void*, size_t, int, scope sockaddr*, scope socklen_t*);\n     ssize_t recvmsg(int, scope msghdr*, int);\n-    ssize_t send(int, const scope void*, size_t, int);\n-    ssize_t sendmsg(int, const scope msghdr*, int);\n-    ssize_t sendto(int, const scope void*, size_t, int, const scope sockaddr*, socklen_t);\n-    int     setsockopt(int, int, int, const scope void*, socklen_t);\n+    ssize_t send(int, in void*, size_t, int);\n+    ssize_t sendmsg(int, in msghdr*, int);\n+    ssize_t sendto(int, in void*, size_t, int, in sockaddr*, socklen_t);\n+    int     setsockopt(int, int, int, in void*, socklen_t);\n     int     shutdown(int, int) @safe;\n     int     socket(int, int, int) @safe;\n     int     sockatmark(int) @safe;\n@@ -1274,19 +1274,19 @@ else version (OpenBSD)\n     }\n \n     int     accept(int, scope sockaddr*, scope socklen_t*);\n-    int     bind(int, const scope sockaddr*, socklen_t);\n-    int     connect(int, const scope sockaddr*, socklen_t);\n+    int     bind(int, in sockaddr*, socklen_t);\n+    int     connect(int, in sockaddr*, socklen_t);\n     int     getpeername(int, scope sockaddr*, scope socklen_t*);\n     int     getsockname(int, scope sockaddr*, scope socklen_t*);\n     int     getsockopt(int, int, int, scope void*, scope socklen_t*);\n     int     listen(int, int) @safe;\n     ssize_t recv(int, scope void*, size_t, int);\n     ssize_t recvfrom(int, scope void*, size_t, int, scope sockaddr*, scope socklen_t*);\n     ssize_t recvmsg(int, scope msghdr*, int);\n-    ssize_t send(int, const scope void*, size_t, int);\n-    ssize_t sendmsg(int, const scope msghdr*, int);\n-    ssize_t sendto(int, const scope void*, size_t, int, const scope sockaddr*, socklen_t);\n-    int     setsockopt(int, int, int, const scope void*, socklen_t);\n+    ssize_t send(int, in void*, size_t, int);\n+    ssize_t sendmsg(int, in msghdr*, int);\n+    ssize_t sendto(int, in void*, size_t, int, in sockaddr*, socklen_t);\n+    int     setsockopt(int, int, int, in void*, socklen_t);\n     int     shutdown(int, int) @safe;\n     int     socket(int, int, int) @safe;\n     int     sockatmark(int) @safe;\n@@ -1655,19 +1655,19 @@ else version (Solaris)\n     }\n \n     int     accept(int, scope sockaddr*, scope socklen_t*);\n-    int     bind(int, const scope sockaddr*, socklen_t);\n-    int     connect(int, const scope sockaddr*, socklen_t);\n+    int     bind(int, in sockaddr*, socklen_t);\n+    int     connect(int, in sockaddr*, socklen_t);\n     int     getpeername(int, scope sockaddr*, scope socklen_t*);\n     int     getsockname(int, scope sockaddr*, scope socklen_t*);\n     int     getsockopt(int, int, int, scope void*, scope socklen_t*);\n     int     listen(int, int) @safe;\n     ssize_t recv(int, scope void*, size_t, int);\n     ssize_t recvfrom(int, scope void*, size_t, int, scope sockaddr*, scope socklen_t*);\n     ssize_t recvmsg(int, scope msghdr*, int);\n-    ssize_t send(int, const scope void*, size_t, int);\n-    ssize_t sendmsg(int, const scope msghdr*, int);\n-    ssize_t sendto(int, const scope void*, size_t, int, const scope sockaddr*, socklen_t);\n-    int     setsockopt(int, int, int, const scope void*, socklen_t);\n+    ssize_t send(int, in void*, size_t, int);\n+    ssize_t sendmsg(int, in msghdr*, int);\n+    ssize_t sendto(int, in void*, size_t, int, in sockaddr*, socklen_t);\n+    int     setsockopt(int, int, int, in void*, socklen_t);\n     int     shutdown(int, int) @safe;\n     int     socket(int, int, int) @safe;\n     int     sockatmark(int) @safe;\n@@ -1816,19 +1816,19 @@ else version (CRuntime_Bionic)\n     enum SOCK_RDM = 4;\n \n     int     accept(int, scope sockaddr*, scope socklen_t*);\n-    int     bind(int, const scope sockaddr*, socklen_t);\n-    int     connect(int, const scope sockaddr*, socklen_t);\n+    int     bind(int, in sockaddr*, socklen_t);\n+    int     connect(int, in sockaddr*, socklen_t);\n     int     getpeername(int, scope sockaddr*, scope socklen_t*);\n     int     getsockname(int, scope sockaddr*, scope socklen_t*);\n     int     getsockopt(int, int, int, scope void*, scope socklen_t*);\n     int     listen(int, int) @safe;\n     ssize_t recv(int, scope void*, size_t, int);\n     ssize_t recvfrom(int, scope void*, size_t, int, scope sockaddr*, scope socklen_t*);\n     int     recvmsg(int, scope msghdr*, int);\n-    ssize_t send(int, const scope void*, size_t, int);\n-    int     sendmsg(int, const scope msghdr*, int);\n-    ssize_t sendto(int, const scope void*, size_t, int, const scope sockaddr*, socklen_t);\n-    int     setsockopt(int, int, int, const scope void*, socklen_t);\n+    ssize_t send(int, in void*, size_t, int);\n+    int     sendmsg(int, in msghdr*, int);\n+    ssize_t sendto(int, in void*, size_t, int, in sockaddr*, socklen_t);\n+    int     setsockopt(int, int, int, in void*, socklen_t);\n     int     shutdown(int, int) @safe;\n     int     socket(int, int, int) @safe;\n     int     sockatmark(int) @safe;"}, {"sha": "b0d57f28ee6498aa3f7f15490010cc482530d6c9", "filename": "libphobos/libdruntime/core/sys/posix/sys/stat.d", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fstat.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fstat.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fstat.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -1391,7 +1391,6 @@ else version (Solaris)\n             dev_t st_rdev;\n             c_long[2] st_pad2;\n             off_t st_size;\n-            c_long st_pad3;\n             union\n             {\n                 timestruc_t st_atim;"}, {"sha": "38abb2fcf867c781e874c4a9d137382dbf053583", "filename": "libphobos/libdruntime/core/sys/posix/sys/ttycom.d", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fttycom.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fttycom.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fttycom.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -10,11 +10,20 @@ import core.sys.posix.sys.ioccom;\n import core.sys.posix.termios;\n import core.sys.posix.sys.time;\n \n+version (OSX)\n+    version = Darwin;\n+else version (iOS)\n+    version = Darwin;\n+else version (TVOS)\n+    version = Darwin;\n+else version (WatchOS)\n+    version = Darwin;\n+\n version (Posix):\n \n nothrow @nogc:\n \n-version (OSX)\n+version (Darwin)\n {\n     struct winsize {\n         ushort  ws_row;     // rows, in characters"}, {"sha": "451c8b4fcccaa4685807dbeaeeaff9159718098c", "filename": "libphobos/libdruntime/core/sys/posix/sys/types.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Ftypes.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Ftypes.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Ftypes.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -852,7 +852,7 @@ else version (Darwin)\n {\n     version (D_LP64)\n     {\n-        enum __PTHREAD_SIZE__               = 1168;\n+        enum __PTHREAD_SIZE__               = 8176;\n         enum __PTHREAD_ATTR_SIZE__          = 56;\n         enum __PTHREAD_MUTEXATTR_SIZE__     = 8;\n         enum __PTHREAD_MUTEX_SIZE__         = 56;\n@@ -864,7 +864,7 @@ else version (Darwin)\n     }\n     else\n     {\n-        enum __PTHREAD_SIZE__               = 596;\n+        enum __PTHREAD_SIZE__               = 4088;\n         enum __PTHREAD_ATTR_SIZE__          = 36;\n         enum __PTHREAD_MUTEXATTR_SIZE__     = 8;\n         enum __PTHREAD_MUTEX_SIZE__         = 40;"}, {"sha": "df34ef35c2a22d3bc6cdf3e2a7fe74a62f3086c9", "filename": "libphobos/libdruntime/core/sys/posix/sys/uio.d", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fuio.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fuio.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fuio.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -138,8 +138,8 @@ else version (CRuntime_Musl)\n {\n     struct iovec\n     {\n-        void* iov_base;\n-        uint  iov_len;\n+        void*  iov_base;\n+        size_t iov_len;\n     }\n \n     ssize_t readv(int, in iovec*, int);"}, {"sha": "a319b01bd0dda6fe711c8e6b8575ff088a85faf4", "filename": "libphobos/libdruntime/core/sys/posix/syslog.d", "status": "modified", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsyslog.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsyslog.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsyslog.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -526,3 +526,63 @@ else version (CRuntime_UClibc)\n     void syslog (int __pri, const char *__fmt, ...);\n     void closelog();\n }\n+else version (CRuntime_Musl)\n+{\n+    //PRIORITY\n+    enum {\n+        LOG_EMERG = 0,     /* system is unusable */\n+        LOG_ALERT = 1,     /* action must be taken immediately */\n+        LOG_CRIT  = 2,     /* critical conditions */\n+        LOG_ERR   = 3,     /* error conditions */\n+        LOG_WARNING = 4,   /* warning conditions */\n+        LOG_NOTICE  = 5,   /* normal but significant condition */\n+        LOG_INFO    = 6,   /* informational */\n+        LOG_DEBUG   = 7,   /* debug-level messages */\n+    };\n+\n+    //OPTIONS\n+    enum {\n+        LOG_PID    = 0x01,  /* log the pid with each message */\n+        LOG_CONS   = 0x02,  /* log on the console if errors in sending */\n+        LOG_ODELAY = 0x04,  /* delay open until first syslog() (default) */\n+        LOG_NDELAY = 0x08,  /* don't delay open */\n+        LOG_NOWAIT = 0x10,  /* don't wait for console forks: DEPRECATED */\n+        LOG_PERROR = 0x20,  /* log to stderr as well */\n+    };\n+\n+    //FACILITY\n+    enum {\n+        LOG_KERN   = (0<<3),  /* kernel messages */\n+        LOG_USER   = (1<<3),  /* random user-level messages */\n+        LOG_MAIL   = (2<<3),  /* mail system */\n+        LOG_DAEMON = (3<<3),  /* system daemons */\n+        LOG_AUTH   = (4<<3),  /* security/authorization messages */\n+        LOG_SYSLOG = (5<<3),  /* messages generated internally by syslogd */\n+        LOG_LPR    = (6<<3),  /* line printer subsystem */\n+        LOG_NEWS   = (7<<3),  /* network news subsystem */\n+        LOG_UUCP   = (8<<3),  /* UUCP subsystem */\n+        LOG_CRON   = (9<<3),  /* clock daemon */\n+        LOG_AUTHPRIV = (10<<3), /* security/authorization messages (private), */\n+        LOG_FTP    =  (11<<3), /* ftp daemon */\n+\n+        /* other codes through 15 reserved for system use */\n+        LOG_LOCAL0 = (16<<3), /* reserved for local use */\n+        LOG_LOCAL1 = (17<<3), /* reserved for local use */\n+        LOG_LOCAL2 = (18<<3), /* reserved for local use */\n+        LOG_LOCAL3 = (19<<3), /* reserved for local use */\n+        LOG_LOCAL4 = (20<<3), /* reserved for local use */\n+        LOG_LOCAL5 = (21<<3), /* reserved for local use */\n+        LOG_LOCAL6 = (22<<3), /* reserved for local use */\n+        LOG_LOCAL7 = (23<<3), /* reserved for local use */\n+\n+        LOG_NFACILITIES = 24,  /* current number of facilities */\n+    };\n+\n+    int LOG_MASK(int pri) { return 1 << pri; }        /* mask for one priority */\n+    int LOG_UPTO(int pri) { return (1 << (pri+1)) - 1; }  /* all priorities through pri */\n+\n+    void openlog (const char *, int __option, int __facility);\n+    int  setlogmask (int __mask);\n+    void syslog (int __pri, const char *__fmt, ...);\n+    void closelog();\n+}"}, {"sha": "82a3f199247bf3d860ad898ebbcd64d16faa05d4", "filename": "libphobos/libdruntime/core/sys/posix/time.d", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Ftime.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Ftime.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Ftime.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -624,6 +624,9 @@ else version (CRuntime_Bionic)\n }\n else version (CRuntime_Musl)\n {\n+    extern __gshared int daylight;\n+    extern __gshared c_long timezone;\n+\n     tm*   getdate(in char*);\n     char* strptime(in char*, in char*, tm*);\n }"}, {"sha": "418d63d439bff1c2b74269bc655679612c73cd38", "filename": "libphobos/libdruntime/core/sys/posix/unistd.d", "status": "modified", "additions": 157, "deletions": 4, "changes": 161, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Funistd.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dffa67b46dc2d4deb25951f8b17e823f559cf3a/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Funistd.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Funistd.d?ref=6dffa67b46dc2d4deb25951f8b17e823f559cf3a", "patch": "@@ -1342,9 +1342,162 @@ else version (CRuntime_Bionic)\n     enum W_OK       = 2;\n     enum X_OK       = 1;\n \n-    enum _SC_PAGESIZE         = 0x0027;\n-    enum _SC_NPROCESSORS_ONLN = 0x0061;\n-    enum _SC_THREAD_STACK_MIN = 0x004c;\n+    enum\n+    {\n+        _SC_ARG_MAX             = 0x0000,\n+        _SC_BC_BASE_MAX         = 0x0001,\n+        _SC_BC_DIM_MAX          = 0x0002,\n+        _SC_BC_SCALE_MAX        = 0x0003,\n+        _SC_BC_STRING_MAX       = 0x0004,\n+        _SC_CHILD_MAX           = 0x0005,\n+        _SC_CLK_TCK             = 0x0006,\n+        _SC_COLL_WEIGHTS_MAX    = 0x0007,\n+        _SC_EXPR_NEST_MAX       = 0x0008,\n+        _SC_LINE_MAX            = 0x0009,\n+        _SC_NGROUPS_MAX         = 0x000a,\n+        _SC_OPEN_MAX            = 0x000b,\n+        _SC_PASS_MAX            = 0x000c,\n+        _SC_2_C_BIND            = 0x000d,\n+        _SC_2_C_DEV             = 0x000e,\n+        _SC_2_C_VERSION         = 0x000f,\n+        _SC_2_CHAR_TERM         = 0x0010,\n+        _SC_2_FORT_DEV          = 0x0011,\n+        _SC_2_FORT_RUN          = 0x0012,\n+        _SC_2_LOCALEDEF         = 0x0013,\n+        _SC_2_SW_DEV            = 0x0014,\n+        _SC_2_UPE               = 0x0015,\n+        _SC_2_VERSION           = 0x0016,\n+        _SC_JOB_CONTROL         = 0x0017,\n+        _SC_SAVED_IDS           = 0x0018,\n+        _SC_VERSION             = 0x0019,\n+        _SC_RE_DUP_MAX          = 0x001a,\n+        _SC_STREAM_MAX          = 0x001b,\n+        _SC_TZNAME_MAX          = 0x001c,\n+        _SC_XOPEN_CRYPT         = 0x001d,\n+        _SC_XOPEN_ENH_I18N      = 0x001e,\n+        _SC_XOPEN_SHM           = 0x001f,\n+        _SC_XOPEN_VERSION       = 0x0020,\n+        _SC_XOPEN_XCU_VERSION   = 0x0021,\n+        _SC_XOPEN_REALTIME      = 0x0022,\n+        _SC_XOPEN_REALTIME_THREADS = 0x0023,\n+        _SC_XOPEN_LEGACY        = 0x0024,\n+        _SC_ATEXIT_MAX          = 0x0025,\n+        _SC_IOV_MAX             = 0x0026,\n+        _SC_UIO_MAXIOV          = _SC_IOV_MAX,\n+        _SC_PAGESIZE            = 0x0027,\n+        _SC_PAGE_SIZE           = 0x0028,\n+        _SC_XOPEN_UNIX          = 0x0029,\n+        _SC_XBS5_ILP32_OFF32    = 0x002a,\n+        _SC_XBS5_ILP32_OFFBIG   = 0x002b,\n+        _SC_XBS5_LP64_OFF64     = 0x002c,\n+        _SC_XBS5_LPBIG_OFFBIG   = 0x002d,\n+        _SC_AIO_LISTIO_MAX      = 0x002e,\n+        _SC_AIO_MAX             = 0x002f,\n+        _SC_AIO_PRIO_DELTA_MAX  = 0x0030,\n+        _SC_DELAYTIMER_MAX      = 0x0031,\n+        _SC_MQ_OPEN_MAX         = 0x0032,\n+        _SC_MQ_PRIO_MAX         = 0x0033,\n+        _SC_RTSIG_MAX           = 0x0034,\n+        _SC_SEM_NSEMS_MAX       = 0x0035,\n+        _SC_SEM_VALUE_MAX       = 0x0036,\n+        _SC_SIGQUEUE_MAX        = 0x0037,\n+        _SC_TIMER_MAX           = 0x0038,\n+        _SC_ASYNCHRONOUS_IO     = 0x0039,\n+        _SC_FSYNC               = 0x003a,\n+        _SC_MAPPED_FILES        = 0x003b,\n+        _SC_MEMLOCK             = 0x003c,\n+        _SC_MEMLOCK_RANGE       = 0x003d,\n+        _SC_MEMORY_PROTECTION   = 0x003e,\n+        _SC_MESSAGE_PASSING     = 0x003f,\n+        _SC_PRIORITIZED_IO      = 0x0040,\n+        _SC_PRIORITY_SCHEDULING = 0x0041,\n+        _SC_REALTIME_SIGNALS    = 0x0042,\n+        _SC_SEMAPHORES          = 0x0043,\n+        _SC_SHARED_MEMORY_OBJECTS = 0x0044,\n+        _SC_SYNCHRONIZED_IO     = 0x0045,\n+        _SC_TIMERS              = 0x0046,\n+        _SC_GETGR_R_SIZE_MAX    = 0x0047,\n+        _SC_GETPW_R_SIZE_MAX    = 0x0048,\n+        _SC_LOGIN_NAME_MAX      = 0x0049,\n+        _SC_THREAD_DESTRUCTOR_ITERATIONS = 0x004a,\n+        _SC_THREAD_KEYS_MAX     = 0x004b,\n+        _SC_THREAD_STACK_MIN    = 0x004c,\n+        _SC_THREAD_THREADS_MAX  = 0x004d,\n+        _SC_TTY_NAME_MAX        = 0x004e,\n+\n+        _SC_THREADS                    = 0x004f,\n+        _SC_THREAD_ATTR_STACKADDR      = 0x0050,\n+        _SC_THREAD_ATTR_STACKSIZE      = 0x0051,\n+        _SC_THREAD_PRIORITY_SCHEDULING = 0x0052,\n+        _SC_THREAD_PRIO_INHERIT        = 0x0053,\n+        _SC_THREAD_PRIO_PROTECT        = 0x0054,\n+        _SC_THREAD_SAFE_FUNCTIONS      = 0x0055,\n+\n+        _SC_NPROCESSORS_CONF           = 0x0060,\n+        _SC_NPROCESSORS_ONLN           = 0x0061,\n+        _SC_PHYS_PAGES                 = 0x0062,\n+        _SC_AVPHYS_PAGES               = 0x0063,\n+        _SC_MONOTONIC_CLOCK            = 0x0064,\n+\n+        _SC_2_PBS               = 0x0065,\n+        _SC_2_PBS_ACCOUNTING    = 0x0066,\n+        _SC_2_PBS_CHECKPOINT    = 0x0067,\n+        _SC_2_PBS_LOCATE        = 0x0068,\n+        _SC_2_PBS_MESSAGE       = 0x0069,\n+        _SC_2_PBS_TRACK         = 0x006a,\n+        _SC_ADVISORY_INFO       = 0x006b,\n+        _SC_BARRIERS            = 0x006c,\n+        _SC_CLOCK_SELECTION     = 0x006d,\n+        _SC_CPUTIME             = 0x006e,\n+        _SC_HOST_NAME_MAX       = 0x006f,\n+        _SC_IPV6                = 0x0070,\n+        _SC_RAW_SOCKETS         = 0x0071,\n+        _SC_READER_WRITER_LOCKS = 0x0072,\n+        _SC_REGEXP              = 0x0073,\n+        _SC_SHELL               = 0x0074,\n+        _SC_SPAWN               = 0x0075,\n+        _SC_SPIN_LOCKS          = 0x0076,\n+        _SC_SPORADIC_SERVER     = 0x0077,\n+        _SC_SS_REPL_MAX         = 0x0078,\n+        _SC_SYMLOOP_MAX         = 0x0079,\n+        _SC_THREAD_CPUTIME      = 0x007a,\n+        _SC_THREAD_PROCESS_SHARED      = 0x007b,\n+        _SC_THREAD_ROBUST_PRIO_INHERIT = 0x007c,\n+        _SC_THREAD_ROBUST_PRIO_PROTECT = 0x007d,\n+        _SC_THREAD_SPORADIC_SERVER     = 0x007e,\n+        _SC_TIMEOUTS            = 0x007f,\n+        _SC_TRACE               = 0x0080,\n+        _SC_TRACE_EVENT_FILTER  = 0x0081,\n+        _SC_TRACE_EVENT_NAME_MAX = 0x0082,\n+        _SC_TRACE_INHERIT       = 0x0083,\n+        _SC_TRACE_LOG           = 0x0084,\n+        _SC_TRACE_NAME_MAX      = 0x0085,\n+        _SC_TRACE_SYS_MAX       = 0x0086,\n+        _SC_TRACE_USER_EVENT_MAX = 0x0087,\n+        _SC_TYPED_MEMORY_OBJECTS = 0x0088,\n+        _SC_V7_ILP32_OFF32      = 0x0089,\n+        _SC_V7_ILP32_OFFBIG     = 0x008a,\n+        _SC_V7_LP64_OFF64       = 0x008b,\n+        _SC_V7_LPBIG_OFFBIG     = 0x008c,\n+        _SC_XOPEN_STREAMS       = 0x008d,\n+        _SC_XOPEN_UUCP          = 0x008e,\n+\n+        _SC_LEVEL1_ICACHE_SIZE     = 0x008f,\n+        _SC_LEVEL1_ICACHE_ASSOC    = 0x0090,\n+        _SC_LEVEL1_ICACHE_LINESIZE = 0x0091,\n+        _SC_LEVEL1_DCACHE_SIZE     = 0x0092,\n+        _SC_LEVEL1_DCACHE_ASSOC    = 0x0093,\n+        _SC_LEVEL1_DCACHE_LINESIZE = 0x0094,\n+        _SC_LEVEL2_CACHE_SIZE      = 0x0095,\n+        _SC_LEVEL2_CACHE_ASSOC     = 0x0096,\n+        _SC_LEVEL2_CACHE_LINESIZE  = 0x0097,\n+        _SC_LEVEL3_CACHE_SIZE      = 0x0098,\n+        _SC_LEVEL3_CACHE_ASSOC     = 0x0099,\n+        _SC_LEVEL3_CACHE_LINESIZE  = 0x009a,\n+        _SC_LEVEL4_CACHE_SIZE      = 0x009b,\n+        _SC_LEVEL4_CACHE_ASSOC     = 0x009c,\n+        _SC_LEVEL4_CACHE_LINESIZE  = 0x009d,\n+    }\n }\n else version (Solaris)\n {\n@@ -2403,7 +2556,7 @@ else version (OpenBSD)\n {\n     char*      crypt(in char*, in char*);\n     //char*      ctermid(char*);\n-    void       encrypt(ref char[64], int) @trusted;\n+    //void       encrypt(ref char[64], int) @trusted;\n     int        fchdir(int) @trusted;\n     c_long     gethostid() @trusted;\n     pid_t      getpgid(pid_t) @trusted;"}]}