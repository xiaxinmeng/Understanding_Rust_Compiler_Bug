{"sha": "175a31e4914dc8814c08f8961daf0d419e2f0cb7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc1YTMxZTQ5MTRkYzg4MTRjMDhmODk2MWRhZjBkNDE5ZTJmMGNiNw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-11-05T08:43:46Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-11-05T08:43:46Z"}, "message": "loadpre2.c: Avoid undefined behavior due to uninitialized variables.\n\n2015-11-05  Richard Biener  <rguenther@suse.de>\n\n\t* gcc.dg/tree-ssa/loadpre2.c: Avoid undefined behavior due to\n\tuninitialized variables.\n\t* gcc.dg/tree-ssa/loadpre21.c: Likewise.\n\t* gcc.dg/tree-ssa/loadpre22.c: Likewise.\n\t* gcc.dg/tree-ssa/loadpre23.c: Likewise.\n\t* gcc.dg/tree-ssa/loadpre24.c: Likewise.\n\t* gcc.dg/tree-ssa/loadpre25.c: Likewise.\n\t* gcc.dg/tree-ssa/loadpre4.c: Likewise.\n\t* gcc.dg/ipa/inlinehint-2.c: Likewise.\n\t* gcc.dg/ipa/pure-const-2.c: Likewise.\n\t* gcc.dg/tree-ssa/loop-1.c: Likewise.\n\t* gcc.dg/tree-ssa/loop-23.c: Likewise.\n\t* gcc.dg/tree-ssa/pr22051-2.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-pre-3.c: Likewise.\n\t* gcc.dg/tree-ssa/ssa-sccvn-3.c: Likewise.\n\t* gcc.dg/vect/pr30858.c: Likewise.\n\t* gcc.dg/vect/pr33866.c: Likewise.\n\t* gcc.dg/vect/pr37027.c: Likewise.\n\t* c-c++-common/ubsan/null-10.c: Likewise.\n\t* gcc.target/i386/incoming-8.c: Likewise.\n\nFrom-SVN: r229793", "tree": {"sha": "fda2612f278a31e0d9c9a50272d15ddda7468e2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fda2612f278a31e0d9c9a50272d15ddda7468e2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/175a31e4914dc8814c08f8961daf0d419e2f0cb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/175a31e4914dc8814c08f8961daf0d419e2f0cb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/175a31e4914dc8814c08f8961daf0d419e2f0cb7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/175a31e4914dc8814c08f8961daf0d419e2f0cb7/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7f77442bdff6a81e128f5786001b229c5fc7c8d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f77442bdff6a81e128f5786001b229c5fc7c8d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f77442bdff6a81e128f5786001b229c5fc7c8d8"}], "stats": {"total": 99, "additions": 55, "deletions": 44}, "files": [{"sha": "98d481e77a5f9536354adf95242274ff3ac15e7d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=175a31e4914dc8814c08f8961daf0d419e2f0cb7", "patch": "@@ -1,3 +1,26 @@\n+2015-11-05  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/tree-ssa/loadpre2.c: Avoid undefined behavior due to\n+\tuninitialized variables.\n+\t* gcc.dg/tree-ssa/loadpre21.c: Likewise.\n+\t* gcc.dg/tree-ssa/loadpre22.c: Likewise.\n+\t* gcc.dg/tree-ssa/loadpre23.c: Likewise.\n+\t* gcc.dg/tree-ssa/loadpre24.c: Likewise.\n+\t* gcc.dg/tree-ssa/loadpre25.c: Likewise.\n+\t* gcc.dg/tree-ssa/loadpre4.c: Likewise.\n+\t* gcc.dg/ipa/inlinehint-2.c: Likewise.\n+\t* gcc.dg/ipa/pure-const-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/loop-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/loop-23.c: Likewise.\n+\t* gcc.dg/tree-ssa/pr22051-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-pre-3.c: Likewise.\n+\t* gcc.dg/tree-ssa/ssa-sccvn-3.c: Likewise.\n+\t* gcc.dg/vect/pr30858.c: Likewise.\n+\t* gcc.dg/vect/pr33866.c: Likewise.\n+\t* gcc.dg/vect/pr37027.c: Likewise.\n+\t* c-c++-common/ubsan/null-10.c: Likewise.\n+\t* gcc.target/i386/incoming-8.c: Likewise.\n+\n 2015-11-04  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/slice9.adb: New test."}, {"sha": "705e00d327d71f236aabc8099444e4b6b8cf69db", "filename": "gcc/testsuite/c-c++-common/ubsan/null-10.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fnull-10.c?ref=175a31e4914dc8814c08f8961daf0d419e2f0cb7", "patch": "@@ -2,10 +2,12 @@\n /* { dg-options \"-fsanitize=null -w\" } */\n /* { dg-shouldfail \"ubsan\" } */\n \n+short x;\n+\n int\n main (void)\n {\n-  short *p = 0, *u;\n+  short *p = 0, *u = &x;\n   *(u + *p) = 23;\n   return  0;\n }"}, {"sha": "500100d38999cd3fbae4ca9455aab47e4fdfc41d", "filename": "gcc/testsuite/gcc.dg/ipa/inlinehint-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Finlinehint-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Finlinehint-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Finlinehint-2.c?ref=175a31e4914dc8814c08f8961daf0d419e2f0cb7", "patch": "@@ -5,7 +5,7 @@ int\n t(int s, void **p)\n {\n   int i;\n-  for (i;i<10000;i+=s)\n+  for (i=0;i<10000;i+=s)\n     p[i]=0;\n }\n int"}, {"sha": "564a59c20cb85d5747135e96b4791eb44dbd7522", "filename": "gcc/testsuite/gcc.dg/ipa/pure-const-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpure-const-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpure-const-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fipa%2Fpure-const-2.c?ref=175a31e4914dc8814c08f8961daf0d419e2f0cb7", "patch": "@@ -5,7 +5,7 @@ int i_am_pure(char *c, int n)\n {\n   char *d=__builtin_alloca (n);\n   int i;\n-  int sum;\n+  int sum = 0;\n   for (i=0;i<n;i++)\n     d[i] = c[i];\n   for (i=0;i<n;i++)"}, {"sha": "1ef048443980f1a1159499bb922df493672332b4", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loadpre2.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre2.c?ref=175a31e4914dc8814c08f8961daf0d419e2f0cb7", "patch": "@@ -2,16 +2,15 @@\n /* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n int main(int *a, int argc)\n {\n-  int b;\n   int i;\n-  int d, e;\n+  int e;\n \n   /* Should be able to hoist this out of the loop.  */\n   for (i = 0; i < argc; i++)\n     {\n       e = *a;\n     }\n-  return d + e;\n+  return e;\n }\n \n /* { dg-final { scan-tree-dump-times \"Eliminated: 1\" 1 \"pre\"} } */"}, {"sha": "e2851913f98e083247f8a714cb4588e97124c00a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loadpre21.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre21.c?ref=175a31e4914dc8814c08f8961daf0d419e2f0cb7", "patch": "@@ -3,16 +3,15 @@\n typedef int type[2];\n int main(type *a, int argc)\n {\n-  int b;\n   int i;\n-  int d, e;\n+  int e;\n \n   /* Should be able to hoist this out of the loop.  */\n   for (i = 0; i < argc; i++)\n     {\n       e = (*a)[0];\n     }\n-  return d + e;\n+  return e;\n }\n \n /* { dg-final { scan-tree-dump-times \"Eliminated: 1\" 1 \"pre\"} } */"}, {"sha": "62809c3e0f25a42c8ad0009829080951af61bc25", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loadpre22.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre22.c?ref=175a31e4914dc8814c08f8961daf0d419e2f0cb7", "patch": "@@ -3,16 +3,15 @@\n typedef int type[2];\n int main(type *a, int argc)\n {\n-  int b;\n   int i;\n-  int d, e;\n+  int e;\n \n   /* Should be able to hoist this out of the loop.  */\n   for (i = 0; i < argc; i++)\n     {\n       e = (*a)[argc];\n     }\n-  return d + e;\n+  return e;\n }\n \n /* { dg-final { scan-tree-dump-times \"Eliminated: 1\" 1 \"pre\"} } */"}, {"sha": "9fa073154150d008517560f1a9aafece31ccf817", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loadpre23.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre23.c?ref=175a31e4914dc8814c08f8961daf0d419e2f0cb7", "patch": "@@ -8,17 +8,16 @@ struct {\n \n int foo(int argc)\n {\n-  int b;\n   int c;\n   int i;\n-  int d, e;\n+  int e;\n \n   for (i = 0; i < argc; i++)\n     {\n       e = x.a;\n       x.a = 9;\n     }\n-  return d + e;\n+  return e;\n }\n \n /* { dg-final { scan-tree-dump-times \"Eliminated: 1\" 1 \"pre\"  } } */"}, {"sha": "bd7275f76e9ad42910bfc6c78dfcc90c16d9e71e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loadpre24.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre24.c?ref=175a31e4914dc8814c08f8961daf0d419e2f0cb7", "patch": "@@ -5,17 +5,15 @@ int a;\n \n int foo(int argc)\n {\n-  int b;\n-  int c;\n   int i;\n-  int d, e;\n+  int e;\n \n   for (i = 0; i < argc; i++)\n     {\n       e = a;\n       a = 9;\n     }\n-  return d + e;\n+  return e;\n }\n \n /* We will move the load of a out of the loop.  */"}, {"sha": "8418c309616059bc343d5e986547644cebf0435e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loadpre25.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre25.c?ref=175a31e4914dc8814c08f8961daf0d419e2f0cb7", "patch": "@@ -3,17 +3,15 @@\n struct X { int i; };\n int foo(struct X *a, int argc)\n {\n-  int b;\n-  int c;\n   int i;\n-  int d, e;\n+  int e;\n \n   for (i = 0; i < argc; i++)\n     {\n       e = a->i;\n       a->i = 9;\n     }\n-  return d + e;\n+  return e;\n }\n \n /* { dg-final { scan-tree-dump-times \"Eliminated: 1\" 1 \"pre\"  } } */"}, {"sha": "2ca7e393cdf3a31ffd34f844b6c559ab07a77ec2", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loadpre4.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floadpre4.c?ref=175a31e4914dc8814c08f8961daf0d419e2f0cb7", "patch": "@@ -2,17 +2,15 @@\n /* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n int main(int *a, int argc)\n {\n-  int b;\n-  int c;\n   int i;\n-  int d, e;\n+  int e;\n \n   for (i = 0; i < argc; i++)\n     {\n       e = *a;\n       *a = 9;\n     }\n-  return d + e;\n+  return e;\n }\n \n /* { dg-final { scan-tree-dump-times \"Eliminated: 1\" 1 \"pre\"  } } */"}, {"sha": "0193c6e52fcd2188ceebe9963cd91a65c9ab3a9f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-1.c?ref=175a31e4914dc8814c08f8961daf0d419e2f0cb7", "patch": "@@ -24,7 +24,7 @@ int foo (int x);\n int xxx(void)\n {\n   int x = 45;\n-  int sum;\n+  int sum = 0;\n \n   while (x >>= 1)\n     sum += foo (x) * 2;"}, {"sha": "50ae1a8c1cf2486e5b11a8c9f8aaef911994603a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-23.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-23.c?ref=175a31e4914dc8814c08f8961daf0d419e2f0cb7", "patch": "@@ -7,7 +7,7 @@ int bla(int);\n int foo(void)\n {\n   int i;\n-  int sum;\n+  int sum = 0;\n \n   /* This loop used to appear to be too large for unrolling.  */\n   for (i = 0; i < 4; i++)"}, {"sha": "98114f3d422a6c75828ca0eae10fa2814e49a500", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr22051-2.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr22051-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr22051-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr22051-2.c?ref=175a31e4914dc8814c08f8961daf0d419e2f0cb7", "patch": "@@ -1,14 +1,10 @@\n /* { dg-do compile }  */\n /* { dg-options \"-O2 -fdump-tree-optimized -w\" }  */\n \n-\n-\n-\n void *arf ();\n int\n-foo()\n+foo(void (*q)(void))\n {\n-  void (*q)(void);\n   int r = q;\n \n   if (r != 0)"}, {"sha": "ba2c8eaaa8dc3fd6e192b9eea7ef5c12082ec850", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-3.c?ref=175a31e4914dc8814c08f8961daf0d419e2f0cb7", "patch": "@@ -1,8 +1,8 @@\n /* { dg-do compile } */ \n /* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n-unsigned foo1 (unsigned a, unsigned b)\n+unsigned foo1 (unsigned a, unsigned b, unsigned j, unsigned k)\n {\n-  unsigned i, j, k;\n+  unsigned i;\n   for (i = 0; i != a; i++)\n     {\n       j += 4*b;"}, {"sha": "9040ff856bcc88983e9eb78c7ce30c95a300f61b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-sccvn-3.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sccvn-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sccvn-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-sccvn-3.c?ref=175a31e4914dc8814c08f8961daf0d419e2f0cb7", "patch": "@@ -1,8 +1,8 @@\n /* { dg-do compile } */ \n-/* { dg-options \"-O2 -fdump-tree-fre1-stats\" } */\n+/* { dg-options \"-O2 -fdump-tree-fre1\" } */\n+int *p;\n int main(int argc, char **argv)\n {\n-  int *p;\n   int result;\n   *p = 2;\n   if (argc)\n@@ -11,4 +11,4 @@ int main(int argc, char **argv)\n   return result;\n }\n /* We should eliminate result = *p by saying it has the value 2.  */\n-/* { dg-final { scan-tree-dump-times \"Eliminated: 1\" 1 \"fre1\"} } */\n+/* { dg-final { scan-tree-dump \"return 2;\" \"fre1\"} } */"}, {"sha": "cc92318d7dfd52d31e2b8038598017d5fd5eaed5", "filename": "gcc/testsuite/gcc.dg/vect/pr30858.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr30858.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr30858.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr30858.c?ref=175a31e4914dc8814c08f8961daf0d419e2f0cb7", "patch": "@@ -4,7 +4,7 @@\n int\n foo (int ko)\n {\n- int j,i;\n+ int j,i = 0;\n   for (j = 0; j < ko; j++)\n    i += (i > 10) ? -5 : 7;\n  return i;"}, {"sha": "737b2e8db2e6833f32dedb23cb5523ebb7ef11b4", "filename": "gcc/testsuite/gcc.dg/vect/pr33866.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr33866.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr33866.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr33866.c?ref=175a31e4914dc8814c08f8961daf0d419e2f0cb7", "patch": "@@ -18,7 +18,7 @@ void test_select_fill_hyper_simple (long *offset)\n   fill_iter_info iter_info;\n   int i, j;\n   iter_info.coords = (long *) points;\n-  for (i = 0, num_points = 0; j < (int) start[1]; j++, num_points++)\n+  for (j = i = 0, num_points = 0; j < (int) start[1]; j++, num_points++)\n   {\n     points[num_points][0] = i + start[0];\n     points[num_points][1] = j + start[1];"}, {"sha": "ef6760ec9247d1b2fe8583c62a1d6ff0ff21e45b", "filename": "gcc/testsuite/gcc.dg/vect/pr37027.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr37027.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr37027.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr37027.c?ref=175a31e4914dc8814c08f8961daf0d419e2f0cb7", "patch": "@@ -18,8 +18,8 @@ void\n foo (void)\n {\n   int i;\n-  int sum1;\n-  int sum2;\n+  int sum1 = 0;\n+  int sum2 = 0;\n \n   for (i = 0; i < 16; i++)\n   {"}, {"sha": "a9912d1b1224d2d41afad3b2d1fc28fffd6b4309", "filename": "gcc/testsuite/gcc.target/i386/incoming-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/175a31e4914dc8814c08f8961daf0d419e2f0cb7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fincoming-8.c?ref=175a31e4914dc8814c08f8961daf0d419e2f0cb7", "patch": "@@ -6,7 +6,7 @@ float\n foo (float f)\n {\n   float array[128];\n-  float x;\n+  float x = 0.;\n   int i;\n   for (i = 0; i < sizeof(array) / sizeof(*array); i++)\n     array[i] = f;"}]}