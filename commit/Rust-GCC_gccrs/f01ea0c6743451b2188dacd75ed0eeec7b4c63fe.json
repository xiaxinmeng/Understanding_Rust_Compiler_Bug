{"sha": "f01ea0c6743451b2188dacd75ed0eeec7b4c63fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjAxZWEwYzY3NDM0NTFiMjE4OGRhY2Q3NWVkMGVlZWM3YjRjNjNmZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-01-06T13:35:03Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-01-06T13:35:03Z"}, "message": "(type_attribute): Ignore any subtype for now.\n\nFrom-SVN: r13386", "tree": {"sha": "66eb441b444c78a2f68c215b02a78b4e47499a14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66eb441b444c78a2f68c215b02a78b4e47499a14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f01ea0c6743451b2188dacd75ed0eeec7b4c63fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f01ea0c6743451b2188dacd75ed0eeec7b4c63fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f01ea0c6743451b2188dacd75ed0eeec7b4c63fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f01ea0c6743451b2188dacd75ed0eeec7b4c63fe/comments", "author": null, "committer": null, "parents": [{"sha": "c7cfe938ebe954ded2ecbef9ba151c459fc8dbbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7cfe938ebe954ded2ecbef9ba151c459fc8dbbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7cfe938ebe954ded2ecbef9ba151c459fc8dbbc"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "ffba2a3c33a7c0816dc2c7bd973f6e3106fcb9b0", "filename": "gcc/dwarfout.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f01ea0c6743451b2188dacd75ed0eeec7b4c63fe/gcc%2Fdwarfout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f01ea0c6743451b2188dacd75ed0eeec7b4c63fe/gcc%2Fdwarfout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarfout.c?ref=f01ea0c6743451b2188dacd75ed0eeec7b4c63fe", "patch": "@@ -1,5 +1,5 @@\n /* Output Dwarf format symbol table information from the GNU C compiler.\n-   Copyright (C) 1992, 1993, 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1993, 1995, 1996, 1997 Free Software Foundation, Inc.\n    Contributed by Ron Guilmette (rfg@monkeys.com) of Network Computing Devices.\n \n This file is part of GNU CC.\n@@ -3002,16 +3002,22 @@ type_attribute (type, decl_const, decl_volatile)\n   register enum tree_code code = TREE_CODE (type);\n   register int root_type_modified;\n \n-  if (TREE_CODE (type) == ERROR_MARK)\n+  if (code == ERROR_MARK)\n     return;\n \n   /* Handle a special case.  For functions whose return type is void,\n      we generate *no* type attribute.  (Note that no object may have\n      type `void', so this only applies to function return types.  */\n \n-  if (TREE_CODE (type) == VOID_TYPE)\n+  if (code == VOID_TYPE)\n     return;\n \n+  /* If this is a subtype, find the underlying type.  Eventually,\n+     this should write out the appropriate subtype info.  */\n+  while ((code == INTEGER_TYPE || code == REAL_TYPE)\n+\t && TREE_TYPE (type) != 0)\n+    type = TREE_TYPE (type), code = TREE_CODE (type);\n+\n   root_type_modified = (code == POINTER_TYPE || code == REFERENCE_TYPE\n \t\t\t|| decl_const || decl_volatile\n \t\t\t|| TYPE_READONLY (type) || TYPE_VOLATILE (type));"}]}