{"sha": "d734e6c4664d70c75fdb9427a20fa9ac4d868914", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDczNGU2YzQ2NjRkNzBjNzVmZGI5NDI3YTIwZmE5YWM0ZDg2ODkxNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-12-16T15:21:48Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-12-16T15:21:48Z"}, "message": "re PR tree-optimization/51557 (ICE: in maybe_record_trace_start, at dwarf2cfi.c:2244 with custom flags)\n\n\tPR debug/51557\n\t* sel-sched-ir.c (create_copy_of_insn_rtx): Copy all notes\n\tother than REG_EQUAL, REG_EQUIV and REG_LABEL_OPERAND.\n\n\t* gcc.dg/pr51557.c: New test.\n\nFrom-SVN: r182404", "tree": {"sha": "31215e026f8a9997d381ceb850129aefed72d547", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31215e026f8a9997d381ceb850129aefed72d547"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d734e6c4664d70c75fdb9427a20fa9ac4d868914", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d734e6c4664d70c75fdb9427a20fa9ac4d868914", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d734e6c4664d70c75fdb9427a20fa9ac4d868914", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d734e6c4664d70c75fdb9427a20fa9ac4d868914/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "511b44365ad3441f275464ebb6b55120b33e103c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/511b44365ad3441f275464ebb6b55120b33e103c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/511b44365ad3441f275464ebb6b55120b33e103c"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "1b7a7434ab7345dc849e2634b7570aaac8b04f5f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d734e6c4664d70c75fdb9427a20fa9ac4d868914/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d734e6c4664d70c75fdb9427a20fa9ac4d868914/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d734e6c4664d70c75fdb9427a20fa9ac4d868914", "patch": "@@ -1,5 +1,9 @@\n 2011-12-16  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR debug/51557\n+\t* sel-sched-ir.c (create_copy_of_insn_rtx): Copy all notes\n+\tother than REG_EQUAL, REG_EQUIV and REG_LABEL_OPERAND.\n+\n \tPR tree-optimization/51576\n \t* tree-cfg.c (replace_uses_by): Call maybe_clean_or_replace_eh_stmt\n \teven if fold_stmt didn't change anything."}, {"sha": "a93cd68d1a3565febe6bd17c4b691c510bc96aef", "filename": "gcc/sel-sched-ir.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d734e6c4664d70c75fdb9427a20fa9ac4d868914/gcc%2Fsel-sched-ir.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d734e6c4664d70c75fdb9427a20fa9ac4d868914/gcc%2Fsel-sched-ir.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched-ir.c?ref=d734e6c4664d70c75fdb9427a20fa9ac4d868914", "patch": "@@ -5723,7 +5723,7 @@ create_vinsn_from_insn_rtx (rtx insn_rtx, bool force_unique_p)\n rtx\n create_copy_of_insn_rtx (rtx insn_rtx)\n {\n-  rtx res;\n+  rtx res, link;\n \n   if (DEBUG_INSN_P (insn_rtx))\n     return create_insn_rtx_from_pattern (copy_rtx (PATTERN (insn_rtx)),\n@@ -5733,6 +5733,22 @@ create_copy_of_insn_rtx (rtx insn_rtx)\n \n   res = create_insn_rtx_from_pattern (copy_rtx (PATTERN (insn_rtx)),\n                                       NULL_RTX);\n+\n+  /* Copy all REG_NOTES except REG_EQUAL/REG_EQUIV and REG_LABEL_OPERAND\n+     since mark_jump_label will make them.  REG_LABEL_TARGETs are created\n+     there too, but are supposed to be sticky, so we copy them.  */\n+  for (link = REG_NOTES (insn_rtx); link; link = XEXP (link, 1))\n+    if (REG_NOTE_KIND (link) != REG_LABEL_OPERAND\n+\t&& REG_NOTE_KIND (link) != REG_EQUAL\n+\t&& REG_NOTE_KIND (link) != REG_EQUIV)\n+      {\n+\tif (GET_CODE (link) == EXPR_LIST)\n+\t  add_reg_note (res, REG_NOTE_KIND (link),\n+\t\t\tcopy_insn_1 (XEXP (link, 0)));\n+\telse\n+\t  add_reg_note (res, REG_NOTE_KIND (link), XEXP (link, 0));\n+      }\n+\n   return res;\n }\n "}, {"sha": "86a3311293da10aa65252f3137216b94fc94316c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d734e6c4664d70c75fdb9427a20fa9ac4d868914/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d734e6c4664d70c75fdb9427a20fa9ac4d868914/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d734e6c4664d70c75fdb9427a20fa9ac4d868914", "patch": "@@ -1,3 +1,8 @@\n+2011-12-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/51557\n+\t* gcc.dg/pr51557.c: New test.\n+\n 2011-12-16  Richard Guenther  <rguenther@suse.de>\n \n \tPR lto/51572"}, {"sha": "692cd00e9a75467d23abf0ba4a03bf3e8597ad0d", "filename": "gcc/testsuite/gcc.dg/pr51557.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d734e6c4664d70c75fdb9427a20fa9ac4d868914/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51557.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d734e6c4664d70c75fdb9427a20fa9ac4d868914/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51557.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr51557.c?ref=d734e6c4664d70c75fdb9427a20fa9ac4d868914", "patch": "@@ -0,0 +1,17 @@\n+/* PR debug/51557 */\n+/* { dg-do compile { target powerpc*-*-* ia64-*-* i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-Os -fno-asynchronous-unwind-tables -g -fsel-sched-pipelining -fselective-scheduling2\" } */\n+\n+extern int baz (void);\n+extern void bar (int, int, int, int, int, int, int);\n+\n+void\n+synth (int *values, int n_values, int ci, int s1, int v, int s2)\n+{\n+  while (--s1)\n+    {\n+      int r1 = values[s1];\n+      int co = ci ? r1 : baz () < r1;\n+      bar (0, n_values, s1, s2, v, co, 0);\n+    }\n+}"}]}