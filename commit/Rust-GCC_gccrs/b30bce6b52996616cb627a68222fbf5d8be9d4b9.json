{"sha": "b30bce6b52996616cb627a68222fbf5d8be9d4b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjMwYmNlNmI1Mjk5NjYxNmNiNjI3YTY4MjIyZmJmNWQ4YmU5ZDRiOQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-10-10T13:02:41Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-10-10T13:02:41Z"}, "message": "ansidecl.h (HAVE_GCC_VERSION): New macro.\n\ninclude:\n\t* ansidecl.h (HAVE_GCC_VERSION): New macro.  Use instead of\n\texplicitly testing __GNUC__ and __GNUC_MINOR__.\n\n\t(ATTRIBUTE_PRINTF): Use `__format__', not `format'.\n\ngcc:\n\t* cppinit.c: Use HAVE_GCC_VERSION instead of explicitly testing\n\t__GNUC__ and __GNUC_MINOR__.\n\n\t* gansidecl.h: Likewise.\n\n\t* rtl.c: Likewise.\n\n\t* rtl.h: Likewise.\n\n\t* toplev.h: Likewise.\n\n\t* tree.c: Likewise.\n\n\t* tree.h: Likewise.\n\n\t* varray.c: Likewise.\n\n\t* varray.h: Likewise.\n\ncp:\n\t* cp-tree.h: Use HAVE_GCC_VERSION instead of explicitly testing\n\t__GNUC__ and __GNUC_MINOR__.\n\nf:\n\t* proj.h: Use HAVE_GCC_VERSION instead of explicitly testing\n\t__GNUC__ and __GNUC_MINOR__.  Don't define BUILT_WITH_270.\n\tDefine macro UNUSED in terms of ATTRIBUTE_UNUSED.\n\nFrom-SVN: r29890", "tree": {"sha": "310d1d76de40ddae5138d2494f3d456112cfa3b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/310d1d76de40ddae5138d2494f3d456112cfa3b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b30bce6b52996616cb627a68222fbf5d8be9d4b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b30bce6b52996616cb627a68222fbf5d8be9d4b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b30bce6b52996616cb627a68222fbf5d8be9d4b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b30bce6b52996616cb627a68222fbf5d8be9d4b9/comments", "author": null, "committer": null, "parents": [{"sha": "4724334af7ddfb70240a39f965647d32773ba417", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4724334af7ddfb70240a39f965647d32773ba417", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4724334af7ddfb70240a39f965647d32773ba417"}], "stats": {"total": 93, "additions": 63, "deletions": 30}, "files": [{"sha": "c0afb4e7fbe885c5a9ce38af2aa1b1f9884eaace", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b30bce6b52996616cb627a68222fbf5d8be9d4b9", "patch": "@@ -1,3 +1,24 @@\n+Sun Oct 10 08:40:00 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* cppinit.c: Use HAVE_GCC_VERSION instead of explicitly testing\n+\t__GNUC__ and __GNUC_MINOR__.\n+\n+\t* gansidecl.h: Likewise.\n+\n+\t* rtl.c: Likewise.\n+\t\n+\t* rtl.h: Likewise.\n+\n+\t* toplev.h: Likewise.\n+\n+\t* tree.c: Likewise.\n+\n+\t* tree.h: Likewise.\n+\n+\t* varray.c: Likewise.\n+\n+\t* varray.h: Likewise.\n+\n Sun Oct 10 13:28:48 1999  Bernd Schmidt  <bernds@cygnus.co.uk>\n \n \t* loop.c (find_and_verify_loops): When looking for a BARRIER, don't"}, {"sha": "cd6807acc2ad828efedaa549b716cd600e6d7402", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b30bce6b52996616cb627a68222fbf5d8be9d4b9", "patch": "@@ -1,3 +1,8 @@\n+1999-10-10  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* cp-tree.h: Use HAVE_GCC_VERSION instead of explicitly testing\n+\t__GNUC__ and __GNUC_MINOR__.\n+\n 1999-10-09  Mark Mitchell  <mark@codesourcery.com>\n \n \t* cp-tree.h (make_rtl_for_local_static): New function.  "}, {"sha": "82ed8824a8bcc40a33d8289bfd2707bde595ab0f", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=b30bce6b52996616cb627a68222fbf5d8be9d4b9", "patch": "@@ -123,7 +123,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* Language-specific tree checkers. */\n \n-#if defined ENABLE_CHECKING && (__GNUC__ > 2 || __GNUC_MINOR__ > 6)\n+#if defined ENABLE_CHECKING && HAVE_GCC_VERSION(2,7)\n \n #define VAR_OR_FUNCTION_DECL_CHECK(NODE)\t\t\t\\\n ({  const tree __t = NODE;\t\t\t\t\t\\"}, {"sha": "ec59a76995e1d52ad4b4f45fe9bff646863d33c1", "filename": "gcc/cppinit.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2Fcppinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2Fcppinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppinit.c?ref=b30bce6b52996616cb627a68222fbf5d8be9d4b9", "patch": "@@ -212,8 +212,7 @@ enum { QUOTE = 0, BRACKET, SYSTEM, AFTER };\n \n /* If gcc is in use (stage2/stage3) we can make these tables initialized\n    data. */\n-#if defined __GNUC__ && (__GNUC__ > 2 \\\n-\t\t\t || (__GNUC__ == 2 && __GNUC_MINOR__ > 6))\n+#if HAVE_GCC_VERSION(2,7)\n /* Table to tell if a character is legal as the second or later character\n    of a C identifier. */\n U_CHAR is_idchar[256] ="}, {"sha": "5f48879ffb1da899f759a925462b59ce076d58c8", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=b30bce6b52996616cb627a68222fbf5d8be9d4b9", "patch": "@@ -1,3 +1,9 @@\n+Sun Oct 10 08:40:18 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* proj.h: Use HAVE_GCC_VERSION instead of explicitly testing\n+\t__GNUC__ and __GNUC_MINOR__.  Don't define BUILT_WITH_270.  Define\n+\tmacro UNUSED in terms of ATTRIBUTE_UNUSED.\n+\n Fri Sep 24 10:48:10 1999  Bernd Schmidt  <bernds@cygnus.co.uk>\n \n \t* com.c (duplicate_decls): Use DECL_BUILT_IN_CLASS rather than"}, {"sha": "96bb44af27c9a75c8c72fcf857c8b53cb80f25a4", "filename": "gcc/f/proj.h", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2Ff%2Fproj.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2Ff%2Fproj.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fproj.h?ref=b30bce6b52996616cb627a68222fbf5d8be9d4b9", "patch": "@@ -31,18 +31,10 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #endif\n #include \"system.j\"\n \n-#if !defined (__GNUC__) || (__GNUC__ < 2)\n+#if ! HAVE_GCC_VERSION(2,0)\n #error \"You have to use gcc 2.x to build g77 (might be fixed in g77-0.6).\"\n #endif\n \n-#ifndef BUILT_WITH_270\n-#if (__GNUC__ > 2) || (__GNUC__ == 2 && __GNUC_MINOR__ >= 7)\n-#define BUILT_WITH_270 1\n-#else\n-#define BUILT_WITH_270 0\n-#endif\n-#endif\t/* !defined (BUILT_WITH_270) */\n-\n /* Include files everyone gets.  <assert.h> is needed for assert().\n    <stddef.h> is needed for offsetof, but technically also NULL,\n    size_t, ptrdiff_t, and so on.  */\n@@ -69,11 +61,7 @@ typedef enum\n #define ARRAY_SIZE(a) (sizeof(a)/sizeof(a[0]))\n \n #ifndef UNUSED\t/* Compile with -DUNUSED= if cc doesn't support this. */\n-#if BUILT_WITH_270\n-#define UNUSED __attribute__ ((unused))\n-#else\t/* !BUILT_WITH_270 */\n-#define UNUSED\n-#endif\t/* !BUILT_WITH_270 */\n+#define UNUSED ATTRIBUTE_UNUSED\n #endif  /* !defined (UNUSED) */\n \n #ifndef dmpout"}, {"sha": "17a7c919b632711fedc47b21bd2686aa729cc846", "filename": "gcc/gansidecl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2Fgansidecl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2Fgansidecl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgansidecl.h?ref=b30bce6b52996616cb627a68222fbf5d8be9d4b9", "patch": "@@ -41,7 +41,7 @@ Boston, MA 02111-1307, USA.  */\n    need to do this very early; i.e. before any systems header files or\n    gcc header files in case they use these keywords.  Otherwise\n    conflicts might occur. */\n-#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 7)\n+#if HAVE_GCC_VERSION(2,7)\n # undef const\n # undef inline\n # define inline __inline__  /* Modern gcc can use `__inline__' freely. */"}, {"sha": "b4cee5878410f26d0ca20d4d9667028467289351", "filename": "gcc/rtl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2Frtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2Frtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.c?ref=b30bce6b52996616cb627a68222fbf5d8be9d4b9", "patch": "@@ -981,7 +981,7 @@ read_rtx (infile)\n   return return_rtx;\n }\n \n-#if defined ENABLE_CHECKING && (__GNUC__ > 2 || __GNUC_MINOR__ > 6)\n+#if defined ENABLE_CHECKING && HAVE_GCC_VERSION(2,7)\n void\n rtl_check_failed_bounds (r, n, file, line, func)\n     rtx r;"}, {"sha": "46a79a4b15ebe9e326bdde2176cf4f4d8b48f0bd", "filename": "gcc/rtl.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=b30bce6b52996616cb627a68222fbf5d8be9d4b9", "patch": "@@ -230,7 +230,7 @@ typedef struct rtvec_def{\n \n /* General accessor macros for accessing the fields of an rtx.  */\n \n-#if defined ENABLE_CHECKING  && (__GNUC__ > 2 || __GNUC_MINOR__ > 6)\n+#if defined ENABLE_CHECKING  && HAVE_GCC_VERSION(2,7)\n /* The bit with a star outside the statement expr and an & inside is\n    so that N can be evaluated only once.  */\n #define RTL_CHECK1(RTX, N, C1)\t\t\t\t\t\t\\\n@@ -1673,7 +1673,7 @@ extern void rtx_free\t\t\tPROTO ((rtx));\n \n extern void fancy_abort PROTO((const char *, int, const char *))\n     ATTRIBUTE_NORETURN;\n-#if __GNUC__ < 2 || (__GNUC__ == 2 && __GNUC_MINOR__ < 7)\n+#if ! HAVE_GCC_VERSION(2,7)\n #define abort() fancy_abort (__FILE__, __LINE__, 0)\n #else\n #define abort() fancy_abort (__FILE__, __LINE__, __PRETTY_FUNCTION__)"}, {"sha": "f0d1b6136480e25c7033f3e96ec90e6a52a878c8", "filename": "gcc/toplev.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=b30bce6b52996616cb627a68222fbf5d8be9d4b9", "patch": "@@ -51,7 +51,7 @@ extern void _fatal_insn\t\t\tPROTO ((const char *,\n \t\t\t\t\t\tconst char *))\n   ATTRIBUTE_NORETURN;\n \n-#if defined __GNUC__ && (__GNUC__ > 2 || __GNUC_MINOR__ > 6)\n+#if HAVE_GCC_VERSION(2,7)\n #define fatal_insn(msgid, insn) \\\n \t_fatal_insn (msgid, insn, __FILE__, __LINE__, __PRETTY_FUNCTION__)\n #define fatal_insn_not_found(insn) \\"}, {"sha": "1fe428a72b7f5fb8579b31b1acf585acc537b5d2", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=b30bce6b52996616cb627a68222fbf5d8be9d4b9", "patch": "@@ -5140,7 +5140,7 @@ get_set_constructor_bytes (init, buffer, wd_size)\n   return non_const_bits;\n }\n \f\n-#if defined ENABLE_CHECKING && (__GNUC__ > 2 || __GNUC_MINOR__ > 6)\n+#if defined ENABLE_CHECKING && HAVE_GCC_VERSION(2,7)\n /* Complain that the tree code of NODE does not match the expected CODE.\n    FILE, LINE, and FUNCTION are of the caller.  */\n void"}, {"sha": "f66a5ec7497725f9a2057d7b02a89d3d7287b707", "filename": "gcc/tree.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=b30bce6b52996616cb627a68222fbf5d8be9d4b9", "patch": "@@ -323,7 +323,7 @@ struct tree_common\n \n /* When checking is enabled, errors will be generated if a tree node\n    is accessed incorrectly. The macros abort with a fatal error.  */\n-#if defined ENABLE_CHECKING && (__GNUC__ > 2 || __GNUC_MINOR__ > 6)\n+#if defined ENABLE_CHECKING && HAVE_GCC_VERSION(2,7)\n \n #define TREE_CHECK(t, code)\t\t\t\t\t\t\\\n ({  const tree __t = t;\t\t\t\t\t\t\t\\\n@@ -2519,7 +2519,7 @@ extern void dwarf2out_end_epilogue\tPROTO((void));\n \n extern void fancy_abort PROTO((const char *, int, const char *))\n     ATTRIBUTE_NORETURN;\n-#if __GNUC__ < 2 || (__GNUC__ == 2 && __GNUC_MINOR__ < 7)\n+#if ! HAVE_GCC_VERSION(2,7)\n #define abort() fancy_abort (__FILE__, __LINE__, 0)\n #else\n #define abort() fancy_abort (__FILE__, __LINE__, __PRETTY_FUNCTION__)"}, {"sha": "95752c4e5310b0afe5d4e654ec3cfc425558e013", "filename": "gcc/varray.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2Fvarray.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2Fvarray.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarray.c?ref=b30bce6b52996616cb627a68222fbf5d8be9d4b9", "patch": "@@ -71,7 +71,7 @@ varray_grow (va, n)\n \n /* Check the bounds of a varray access.  */\n \n-#if defined ENABLE_CHECKING && (__GNUC__ > 2 || __GNUC_MINOR__ > 6)\n+#if defined ENABLE_CHECKING && HAVE_GCC_VERSION(2,7)\n \n extern void error PVPROTO ((const char *, ...))\tATTRIBUTE_PRINTF_1;\n "}, {"sha": "b826b63d6c664db8d50b088cd8fe8928b4c6ff83", "filename": "gcc/varray.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2Fvarray.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b30bce6b52996616cb627a68222fbf5d8be9d4b9/gcc%2Fvarray.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarray.h?ref=b30bce6b52996616cb627a68222fbf5d8be9d4b9", "patch": "@@ -163,7 +163,7 @@ extern varray_type varray_grow\tPROTO((varray_type, size_t));\n #define VARRAY_SIZE(VA)\t((VA)->num_elements)\n \n /* Check for VARRAY_xxx macros being in bound.  */\n-#if defined ENABLE_CHECKING && (__GNUC__ > 2 || (__GNUC__ == 2 &&__GNUC_MINOR__ > 6))\n+#if defined ENABLE_CHECKING && HAVE_GCC_VERSION(2,7)\n extern void varray_check_failed PROTO ((varray_type, size_t,\n \t\t\t\t\tconst char *, int,\n \t\t\t\t\tconst char *)) ATTRIBUTE_NORETURN;"}, {"sha": "48f548ed62c95eb838a2976f8b720887ae3c22c4", "filename": "include/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b30bce6b52996616cb627a68222fbf5d8be9d4b9/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b30bce6b52996616cb627a68222fbf5d8be9d4b9/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=b30bce6b52996616cb627a68222fbf5d8be9d4b9", "patch": "@@ -1,3 +1,10 @@\n+1999-10-10  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* ansidecl.h (HAVE_GCC_VERSION): New macro.  Use it instead of\n+\texplicitly testing __GNUC__ and __GNUC_MINOR__.\n+\t\n+\t(ATTRIBUTE_PRINTF): Use `__format__', not `format'.\n+\n 1999-09-25  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* libiberty.h (make_temp_file):  Add a prototype."}, {"sha": "8fe3893767fe39c72cb03b4b77714da4d42aa90d", "filename": "include/ansidecl.h", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b30bce6b52996616cb627a68222fbf5d8be9d4b9/include%2Fansidecl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b30bce6b52996616cb627a68222fbf5d8be9d4b9/include%2Fansidecl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Fansidecl.h?ref=b30bce6b52996616cb627a68222fbf5d8be9d4b9", "patch": "@@ -160,16 +160,23 @@ Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n \n #endif\t/* ANSI C.  */\n \n+/* This macro will return true if we are using gcc, and it is of a\n+   particular minimum version (both major & minor numbers are checked.)  */\n+#ifndef HAVE_GCC_VERSION\n+#define HAVE_GCC_VERSION(MAJOR, MINOR) \\\n+  (__GNUC__ > (MAJOR) || (__GNUC__ == (MAJOR) && __GNUC_MINOR__ >= (MINOR)))\n+#endif /* ! HAVE_GCC_VERSION */\n+\n /* Define macros for some gcc attributes.  This permits us to use the\n    macros freely, and know that they will come into play for the\n    version of gcc in which they are supported.  */\n \n-#if __GNUC__ < 2 || (__GNUC__ == 2 && __GNUC_MINOR__ < 7)\n+#if ! HAVE_GCC_VERSION(2,7)\n # define __attribute__(x)\n #endif\n \n #ifndef ATTRIBUTE_UNUSED_LABEL\n-# if __GNUC__ < 2 || (__GNUC__ == 2 && __GNUC_MINOR__ < 93)\n+# if ! HAVE_GCC_VERSION(2,93)\n #  define ATTRIBUTE_UNUSED_LABEL\n # else\n #  define ATTRIBUTE_UNUSED_LABEL ATTRIBUTE_UNUSED\n@@ -185,7 +192,7 @@ Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n #endif /* ATTRIBUTE_NORETURN */\n \n #ifndef ATTRIBUTE_PRINTF\n-#define ATTRIBUTE_PRINTF(m, n) __attribute__ ((format (__printf__, m, n)))\n+#define ATTRIBUTE_PRINTF(m, n) __attribute__ ((__format__ (__printf__, m, n)))\n #define ATTRIBUTE_PRINTF_1 ATTRIBUTE_PRINTF(1, 2)\n #define ATTRIBUTE_PRINTF_2 ATTRIBUTE_PRINTF(2, 3)\n #define ATTRIBUTE_PRINTF_3 ATTRIBUTE_PRINTF(3, 4)"}]}