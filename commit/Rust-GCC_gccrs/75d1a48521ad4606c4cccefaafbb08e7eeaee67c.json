{"sha": "75d1a48521ad4606c4cccefaafbb08e7eeaee67c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVkMWE0ODUyMWFkNDYwNmM0Y2NjZWZhYWZiYjA4ZTdlZWFlZTY3Yw==", "commit": {"author": {"name": "Ranjit Mathew", "email": "rmathew@hotmail.com", "date": "2005-09-05T14:57:25Z"}, "committer": {"name": "Ranjit Mathew", "email": "rmathew@gcc.gnu.org", "date": "2005-09-05T14:57:25Z"}, "message": "re PR java/23431 (gcj allows overriding with more restrictive access)\n\n\tPR java/23431\n\t* typeck.c (lookup_do): Look up interfaces for the original class,\n\tnot the base class.\n\t* parse.y (java_check_regular_methods): Fix diagnostic message for\n\tmore restrictive overriding of a method from an interface.\n\nFrom-SVN: r103909", "tree": {"sha": "d4c2c71bd7d392f0a29c5042cda181f2835df94d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4c2c71bd7d392f0a29c5042cda181f2835df94d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75d1a48521ad4606c4cccefaafbb08e7eeaee67c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75d1a48521ad4606c4cccefaafbb08e7eeaee67c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75d1a48521ad4606c4cccefaafbb08e7eeaee67c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75d1a48521ad4606c4cccefaafbb08e7eeaee67c/comments", "author": null, "committer": null, "parents": [{"sha": "7291645b6e1a6b5ee9c2f95ea6cf0b00024c7727", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7291645b6e1a6b5ee9c2f95ea6cf0b00024c7727", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7291645b6e1a6b5ee9c2f95ea6cf0b00024c7727"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "8252aadedde4f268cbe7bf75e94713fe1c90d8aa", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75d1a48521ad4606c4cccefaafbb08e7eeaee67c/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75d1a48521ad4606c4cccefaafbb08e7eeaee67c/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=75d1a48521ad4606c4cccefaafbb08e7eeaee67c", "patch": "@@ -1,3 +1,11 @@\n+2005-09-05  Ranjit Mathew  <rmathew@hotmail.com>\n+\n+\tPR java/23431\n+\t* typeck.c (lookup_do): Look up interfaces for the original class,\n+\tnot the base class.\n+\t* parse.y (java_check_regular_methods): Fix diagnostic message for\n+\tmore restrictive overriding of a method from an interface.\n+\n 2005-08-16  Tom Tromey  <tromey@redhat.com>\n \n \t* class.c (make_class_data): Always emit JV_STATE_PRELOADING for"}, {"sha": "9dd860d51aa0c0acf7c172d37b6343dd66a48ac8", "filename": "gcc/java/parse.y", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75d1a48521ad4606c4cccefaafbb08e7eeaee67c/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75d1a48521ad4606c4cccefaafbb08e7eeaee67c/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=75d1a48521ad4606c4cccefaafbb08e7eeaee67c", "patch": "@@ -6518,7 +6518,7 @@ java_check_regular_methods (tree class_decl)\n \t  tree found_decl = TYPE_NAME (DECL_CONTEXT (found));\n \t  parse_error_context (method_wfl, \"Class %qs must override %qs with a public method in order to implement interface %qs\",\n \t\t\t       IDENTIFIER_POINTER (DECL_NAME (class_decl)),\n-\t\t\t       lang_printable_name (method, 2),\n+\t\t\t       lang_printable_name (found, 0),\n \t\t\t       IDENTIFIER_POINTER (DECL_NAME (found_decl)));\n \t}\n "}, {"sha": "8b64ac82c5a0c196005db518e1203024e62c159e", "filename": "gcc/java/typeck.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75d1a48521ad4606c4cccefaafbb08e7eeaee67c/gcc%2Fjava%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75d1a48521ad4606c4cccefaafbb08e7eeaee67c/gcc%2Fjava%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Ftypeck.c?ref=75d1a48521ad4606c4cccefaafbb08e7eeaee67c", "patch": "@@ -842,6 +842,7 @@ lookup_do (tree searched_class, int flags, tree method_name,\n \t   tree signature, tree (*signature_builder) (tree))\n {\n   tree method;\n+  tree orig_class = searched_class;\n     \n   if (searched_class == NULL_TREE)\n     return NULL_TREE;\n@@ -868,7 +869,7 @@ lookup_do (tree searched_class, int flags, tree method_name,\n   \n   /* If that doesn't work, look in our interfaces.  */\n   if (flags & SEARCH_INTERFACE)\n-    method = find_method_in_interfaces (searched_class, flags, method_name, \n+    method = find_method_in_interfaces (orig_class, flags, method_name, \n \t\t\t\t\tsignature, signature_builder);\n   \n   return method;"}]}