{"sha": "0f471dc3e81fee3d346c4887ce63688dc2735fdd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY0NzFkYzNlODFmZWUzZDM0NmM0ODg3Y2U2MzY4OGRjMjczNWZkZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-06-07T13:00:03Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-06-07T13:00:03Z"}, "message": "sse.md (avx_vec_concat<mode>): Add v=v,vm and Yv=Yv,C alternatives.\n\n\t* config/i386/sse.md (avx_vec_concat<mode>): Add v=v,vm and\n\tYv=Yv,C alternatives.\n\nFrom-SVN: r237175", "tree": {"sha": "b541f18f8f16d62d537efa37bc64b465b367dffa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b541f18f8f16d62d537efa37bc64b465b367dffa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f471dc3e81fee3d346c4887ce63688dc2735fdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f471dc3e81fee3d346c4887ce63688dc2735fdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f471dc3e81fee3d346c4887ce63688dc2735fdd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f471dc3e81fee3d346c4887ce63688dc2735fdd/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bfd67b47314d862a8de101a96b39c6efe543f92e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfd67b47314d862a8de101a96b39c6efe543f92e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfd67b47314d862a8de101a96b39c6efe543f92e"}], "stats": {"total": 47, "additions": 39, "deletions": 8}, "files": [{"sha": "022f9aa0fcfde7bc80423b1bf9de6db093eb490f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f471dc3e81fee3d346c4887ce63688dc2735fdd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f471dc3e81fee3d346c4887ce63688dc2735fdd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0f471dc3e81fee3d346c4887ce63688dc2735fdd", "patch": "@@ -1,3 +1,8 @@\n+2016-06-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/i386/sse.md (avx_vec_concat<mode>): Add v=v,vm and\n+\tYv=Yv,C alternatives.\n+\n 2016-06-07  Richard Biener  <rguenther@suse.de>\n \n \tPR c/61564"}, {"sha": "82ef04a2a034db58fa14f7cdb9ac79ba6c3e49ec", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 34, "deletions": 8, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f471dc3e81fee3d346c4887ce63688dc2735fdd/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f471dc3e81fee3d346c4887ce63688dc2735fdd/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=0f471dc3e81fee3d346c4887ce63688dc2735fdd", "patch": "@@ -18414,17 +18414,33 @@\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_insn \"avx_vec_concat<mode>\"\n-  [(set (match_operand:V_256_512 0 \"register_operand\" \"=x,x\")\n+  [(set (match_operand:V_256_512 0 \"register_operand\" \"=x,v,x,Yv\")\n \t(vec_concat:V_256_512\n-\t  (match_operand:<ssehalfvecmode> 1 \"register_operand\" \"x,x\")\n-\t  (match_operand:<ssehalfvecmode> 2 \"vector_move_operand\" \"xm,C\")))]\n+\t  (match_operand:<ssehalfvecmode> 1 \"register_operand\" \"x,v,x,v\")\n+\t  (match_operand:<ssehalfvecmode> 2 \"vector_move_operand\" \"xm,vm,C,C\")))]\n   \"TARGET_AVX\"\n {\n   switch (which_alternative)\n     {\n     case 0:\n       return \"vinsert<i128>\\t{$0x1, %2, %<concat_tg_mode>1, %0|%0, %<concat_tg_mode>1, %2, 0x1}\";\n     case 1:\n+      if (<MODE_SIZE> == 64)\n+\t{\n+\t  if (TARGET_AVX512DQ && GET_MODE_SIZE (<ssescalarmode>mode) == 4)\n+\t    return \"vinsert<shuffletype>32x8\\t{$0x1, %2, %<concat_tg_mode>1, %0|%0, %<concat_tg_mode>1, %2, 0x1}\";\n+\t  else\n+\t    return \"vinsert<shuffletype>64x4\\t{$0x1, %2, %<concat_tg_mode>1, %0|%0, %<concat_tg_mode>1, %2, 0x1}\";\n+\t}\n+      else\n+\t{\n+\t  if (TARGET_AVX512DQ && GET_MODE_SIZE (<ssescalarmode>mode) == 8)\n+\t    return \"vinsert<shuffletype>64x2\\t{$0x1, %2, %<concat_tg_mode>1, %0|%0, %<concat_tg_mode>1, %2, 0x1}\";\n+\t  else\n+\t    return \"vinsert<shuffletype>32x4\\t{$0x1, %2, %<concat_tg_mode>1, %0|%0, %<concat_tg_mode>1, %2, 0x1}\";\n+\t}\n+    case 2:\n+    case 3:\n       switch (get_attr_mode (insn))\n \t{\n \tcase MODE_V16SF:\n@@ -18436,19 +18452,29 @@\n \tcase MODE_V4DF:\n \t  return \"vmovapd\\t{%1, %x0|%x0, %1}\";\n \tcase MODE_XI:\n-\t  return \"vmovdqa\\t{%1, %t0|%t0, %1}\";\n+\t  if (which_alternative == 2)\n+\t    return \"vmovdqa\\t{%1, %t0|%t0, %1}\";\n+\t  else if (GET_MODE_SIZE (<ssescalarmode>mode) == 8)\n+\t    return \"vmovdqa64\\t{%1, %t0|%t0, %1}\";\n+\t  else\n+\t    return \"vmovdqa32\\t{%1, %t0|%t0, %1}\";\n \tcase MODE_OI:\n-\t  return \"vmovdqa\\t{%1, %x0|%x0, %1}\";\n+\t  if (which_alternative == 2)\n+\t    return \"vmovdqa\\t{%1, %x0|%x0, %1}\";\n+\t  else if (GET_MODE_SIZE (<ssescalarmode>mode) == 8)\n+\t    return \"vmovdqa64\\t{%1, %x0|%x0, %1}\";\n+\t  else\n+\t    return \"vmovdqa32\\t{%1, %x0|%x0, %1}\";\n \tdefault:\n \t  gcc_unreachable ();\n \t}\n     default:\n       gcc_unreachable ();\n     }\n }\n-  [(set_attr \"type\" \"sselog,ssemov\")\n-   (set_attr \"prefix_extra\" \"1,*\")\n-   (set_attr \"length_immediate\" \"1,*\")\n+  [(set_attr \"type\" \"sselog,sselog,ssemov,ssemov\")\n+   (set_attr \"prefix_extra\" \"1,1,*,*\")\n+   (set_attr \"length_immediate\" \"1,1,*,*\")\n    (set_attr \"prefix\" \"maybe_evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n "}]}