{"sha": "287ad814d7703a26d5623a9deafd5932c248d49c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg3YWQ4MTRkNzcwM2EyNmQ1NjIzYTlkZWFmZDU5MzJjMjQ4ZDQ5Yw==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-04-13T00:16:21Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-04-13T00:16:21Z"}, "message": "Daily bump.", "tree": {"sha": "228edb5f076085e1594951b8adb888fe709478fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/228edb5f076085e1594951b8adb888fe709478fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/287ad814d7703a26d5623a9deafd5932c248d49c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/287ad814d7703a26d5623a9deafd5932c248d49c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/287ad814d7703a26d5623a9deafd5932c248d49c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/287ad814d7703a26d5623a9deafd5932c248d49c/comments", "author": null, "committer": null, "parents": [{"sha": "ffc4155b6e45b8ab71d49a4b584f7cacb693e6b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffc4155b6e45b8ab71d49a4b584f7cacb693e6b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffc4155b6e45b8ab71d49a4b584f7cacb693e6b9"}], "stats": {"total": 134, "additions": 133, "deletions": 1}, "files": [{"sha": "39f46c431922e66f46ce453d716c677c0e490c63", "filename": "contrib/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287ad814d7703a26d5623a9deafd5932c248d49c/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287ad814d7703a26d5623a9deafd5932c248d49c/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=287ad814d7703a26d5623a9deafd5932c248d49c", "patch": "@@ -1,3 +1,14 @@\n+2021-04-12  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Do not allow space in long lines.\n+\n+2021-04-12  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_commit.py: Support long filenames\n+\tin entries.\n+\t* gcc-changelog/test_email.py: Test it.\n+\t* gcc-changelog/test_patches.txt: Likewise.\n+\n 2021-03-23  Martin Liska  <mliska@suse.cz>\n \n \t* mklog.py: Fix broken tests."}, {"sha": "e3d673962d30186b1323644a9c3ca78abf244516", "filename": "gcc/ChangeLog", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287ad814d7703a26d5623a9deafd5932c248d49c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287ad814d7703a26d5623a9deafd5932c248d49c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=287ad814d7703a26d5623a9deafd5932c248d49c", "patch": "@@ -1,3 +1,66 @@\n+2021-04-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/99905\n+\t* combine.c (expand_compound_operation): If pos + len > modewidth,\n+\tperform the right shift by pos in inner_mode and then convert to mode,\n+\tinstead of trying to simplify a shift of rtx with inner_mode by pos\n+\tas if it was a shift in mode.\n+\n+2021-04-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/99830\n+\t* combine.c (simplify_and_const_int_1): Don't optimize varop\n+\taway if it has side-effects.\n+\n+2021-04-12  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/extend.texi: Escape @smallexample content.\n+\n+2021-04-12  Stefan Schulze Frielinghaus  <stefansf@linux.ibm.com>\n+\n+\t* config/s390/s390.md (\"*movdi_31\", \"*movdi_64\"): Add\n+\t  alternative in order to load a DFP zero.\n+\n+2021-04-12  Martin Liska  <mliska@suse.cz>\n+\n+\t* doc/extend.texi: Be more precise in documentation\n+\tof symver attribute.\n+\n+2021-04-12  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitizer/99877\n+\t* gimplify.c (gimplify_expr): Right now, we unpoison all\n+\tvariables before a goto <dest>. We should not do it if we are\n+\tin a omp context.\n+\n+2021-04-12  Cui,Lili  <lili.cui@intel.com>\n+\n+\t* common/config/i386/cpuinfo.h (get_intel_cpu): Handle\n+\trocketlake.\n+\t* common/config/i386/i386-common.c (processor_names): Add\n+\trocketlake.\n+\t(processor_alias_table): Add rocketlake.\n+\t* common/config/i386/i386-cpuinfo.h (processor_subtypes): Add\n+\tINTEL_COREI7_ROCKETLAKE.\n+\t* config.gcc: Add -march=rocketlake.\n+\t* config/i386/i386-c.c (ix86_target_macros_internal): Handle\n+\trocketlake.\n+\t* config/i386/i386-options.c (m_ROCKETLAKE)  : Define.\n+\t(processor_cost_table): Add rocketlake cost.\n+\t* config/i386/i386.h (ix86_size_cost) : Define\n+\tTARGET_ROCKETLAKE.\n+\t(processor_type) : Add PROCESSOR_ROCKETLAKE.\n+\t(PTA_ROCKETLAKE): Ditto.\n+\t* doc/extend.texi: Add rocketlake.\n+\t* doc/invoke.texi: Add rocketlake.\n+\n+2021-04-12  Cui,Lili  <lili.cui@intel.com>\n+\n+\t* config/i386/i386.h (PTA_ALDERLAKE): Change alderlake ISA list.\n+\t* config/i386/i386-options.c (m_CORE_AVX2): Add m_ALDERLAKE.\n+\t* common/config/i386/cpuinfo.h (get_intel_cpu): Add AlderLake model.\n+\t* doc/invoke.texi: Change alderlake ISA list.\n+\n 2021-04-11  Hafiz Abid Qadeer  <abidh@codesourcery.com>\n \n \tPR middle-end/98088"}, {"sha": "177ba027bbe69ee32fcacbf5f2eceb97a7371cae", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287ad814d7703a26d5623a9deafd5932c248d49c/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287ad814d7703a26d5623a9deafd5932c248d49c/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=287ad814d7703a26d5623a9deafd5932c248d49c", "patch": "@@ -1 +1 @@\n-20210412\n+20210413"}, {"sha": "208c17ef2d7068a22e07b6ea3174fe07c2ac0442", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287ad814d7703a26d5623a9deafd5932c248d49c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287ad814d7703a26d5623a9deafd5932c248d49c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=287ad814d7703a26d5623a9deafd5932c248d49c", "patch": "@@ -1,3 +1,9 @@\n+2021-04-12  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/93085\n+\t* pt.c (uses_outer_template_parms): Handle non-type and template\n+\ttemplate parameters specifically.\n+\n 2021-04-11  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/97974"}, {"sha": "848d446be5a85e72843676dd578015d11e9b8708", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287ad814d7703a26d5623a9deafd5932c248d49c/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287ad814d7703a26d5623a9deafd5932c248d49c/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=287ad814d7703a26d5623a9deafd5932c248d49c", "patch": "@@ -1,3 +1,7 @@\n+2021-04-12  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* sv.po: Update.\n+\n 2021-04-06  Joseph Myers  <joseph@codesourcery.com>\n \n \t* de.po: Update."}, {"sha": "9f9a25f3b3b4de4a51d1b1871c1dbd62c50ec167", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287ad814d7703a26d5623a9deafd5932c248d49c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287ad814d7703a26d5623a9deafd5932c248d49c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=287ad814d7703a26d5623a9deafd5932c248d49c", "patch": "@@ -1,3 +1,28 @@\n+2021-04-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/99905\n+\t* gcc.target/i386/pr99905.c: New test.\n+\n+2021-04-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/99830\n+\t* gcc.dg/pr99830.c: New test.\n+\n+2021-04-12  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/93085\n+\t* g++.dg/template/dependent-tmpl1.C: New test.\n+\n+2021-04-12  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitizer/99877\n+\t* g++.dg/asan/pr99877.C: New test.\n+\n+2021-04-12  Cui,Lili  <lili.cui@intel.com>\n+\n+\t* gcc.target/i386/funcspec-56.inc: Handle new march.\n+\t* g++.target/i386/mv16.C: Handle new march\n+\n 2021-04-11  Hafiz Abid Qadeer  <abidh@codesourcery.com>\n \n \tPR middle-end/98088"}, {"sha": "82af666ea0018aea63df279f9ae17e9be778f758", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/287ad814d7703a26d5623a9deafd5932c248d49c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/287ad814d7703a26d5623a9deafd5932c248d49c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=287ad814d7703a26d5623a9deafd5932c248d49c", "patch": "@@ -1,3 +1,26 @@\n+2021-04-12  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/100044\n+\t* include/bits/ranges_util.h (__detail::__iterator_sentinel_pair):\n+\tRemove helper concept.\n+\t(subrange(_Pr), subrange(Pr, __make_unsigned_like<...>)): Remove\n+\tdeduction guides, as per LWG 3404.\n+\t* testsuite/std/ranges/subrange/lwg3282_neg.cc: Check that class\n+\ttemplate argument deduction fails.\n+\n+2021-04-12  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* testsuite/26_numerics/random/linear_congruential_engine/requirements/non_uint_neg.cc:\n+\tAdjust expected error for C++20 mode.\n+\t* testsuite/tr1/5_numerical_facilities/random/linear_congruential/requirements/non_uint_neg.cc:\n+\tLikewise.\n+\n+2021-04-12  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/99995\n+\t* testsuite/17_intro/headers/c++1998/49745.cc: Include all\n+\tstandard headers and XFAIL for effective-target c++20.\n+\n 2021-04-09  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \tPR libstdc++/99402"}]}