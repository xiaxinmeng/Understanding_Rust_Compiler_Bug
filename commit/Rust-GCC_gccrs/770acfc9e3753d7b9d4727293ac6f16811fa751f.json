{"sha": "770acfc9e3753d7b9d4727293ac6f16811fa751f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzcwYWNmYzllMzc1M2Q3YjlkNDcyNzI5M2FjNmYxNjgxMWZhNzUxZg==", "commit": {"author": {"name": "Tim Shen", "email": "timshen@google.com", "date": "2015-01-22T05:07:03Z"}, "committer": {"name": "Tim Shen", "email": "timshen@gcc.gnu.org", "date": "2015-01-22T05:07:03Z"}, "message": "re PR libstdc++/64680 (basic_regex::operator= does not reset flags)\n\n\tPR libstdc++/64680\n\t* include/bits/regex.h (basic_regex<>::basic_regex,\n\tbasic_regex<>::operator=, basic_regex<>::imbue): Conform to the\n\tstandard interface.\n\t* testsuite/28_regex/basic_regex/assign/char/cstring.cc: New testcase.\n\nFrom-SVN: r219987", "tree": {"sha": "b00ed49b942acb7012c647cf30c9f3a9d17cdbba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b00ed49b942acb7012c647cf30c9f3a9d17cdbba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/770acfc9e3753d7b9d4727293ac6f16811fa751f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/770acfc9e3753d7b9d4727293ac6f16811fa751f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/770acfc9e3753d7b9d4727293ac6f16811fa751f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/770acfc9e3753d7b9d4727293ac6f16811fa751f/comments", "author": {"login": "timshen91", "id": 1157432, "node_id": "MDQ6VXNlcjExNTc0MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/1157432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timshen91", "html_url": "https://github.com/timshen91", "followers_url": "https://api.github.com/users/timshen91/followers", "following_url": "https://api.github.com/users/timshen91/following{/other_user}", "gists_url": "https://api.github.com/users/timshen91/gists{/gist_id}", "starred_url": "https://api.github.com/users/timshen91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timshen91/subscriptions", "organizations_url": "https://api.github.com/users/timshen91/orgs", "repos_url": "https://api.github.com/users/timshen91/repos", "events_url": "https://api.github.com/users/timshen91/events{/privacy}", "received_events_url": "https://api.github.com/users/timshen91/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "77033d2668248d1050d27ea57a8e85a1b3740ac8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77033d2668248d1050d27ea57a8e85a1b3740ac8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77033d2668248d1050d27ea57a8e85a1b3740ac8"}], "stats": {"total": 43, "additions": 36, "deletions": 7}, "files": [{"sha": "e4e9f4937c68e908dd18f80bc11f490072dd3649", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/770acfc9e3753d7b9d4727293ac6f16811fa751f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/770acfc9e3753d7b9d4727293ac6f16811fa751f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=770acfc9e3753d7b9d4727293ac6f16811fa751f", "patch": "@@ -1,3 +1,11 @@\n+2015-01-22  Tim Shen  <timshen@google.com>\n+\n+\tPR libstdc++/64680\n+\t* include/bits/regex.h (basic_regex<>::basic_regex,\n+\tbasic_regex<>::operator=, basic_regex<>::imbue): Conform to the\n+\tstandard interface.\n+\t* testsuite/28_regex/basic_regex/assign/char/cstring.cc: New testcase.\n+\n 2015-01-22  Tim Shen  <timshen@google.com>\n \n \tPR libstdc++/64649"}, {"sha": "2b09da696f18618e652b891742c5d9bc6434ef4b", "filename": "libstdc++-v3/include/bits/regex.h", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/770acfc9e3753d7b9d4727293ac6f16811fa751f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/770acfc9e3753d7b9d4727293ac6f16811fa751f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h?ref=770acfc9e3753d7b9d4727293ac6f16811fa751f", "patch": "@@ -442,7 +442,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n        */\n       explicit\n       basic_regex(const _Ch_type* __p, flag_type __f = ECMAScript)\n-      : basic_regex(__p, __p + _Rx_traits::length(__p), __f)\n+      : basic_regex(__p, __p + char_traits<_Ch_type>::length(__p), __f)\n       { }\n \n       /**\n@@ -553,7 +553,19 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n        */\n       basic_regex&\n       operator=(const _Ch_type* __p)\n-      { return this->assign(__p, flags()); }\n+      { return this->assign(__p); }\n+\n+      /**\n+       * @brief Replaces a regular expression with a new one constructed from\n+       * an initializer list.\n+       *\n+       * @param __l  The initializer list.\n+       *\n+       * @throws regex_error if @p __l is not a valid regular expression.\n+       */\n+      basic_regex&\n+      operator=(initializer_list<_Ch_type> __l)\n+      { return this->assign(__l.begin(), __l.end()); }\n \n       /**\n        * @brief Replaces a regular expression with a new one constructed from\n@@ -564,7 +576,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       template<typename _Ch_traits, typename _Alloc>\n \tbasic_regex&\n \toperator=(const basic_string<_Ch_type, _Ch_traits, _Alloc>& __s)\n-\t{ return this->assign(__s, flags()); }\n+\t{ return this->assign(__s); }\n \n       // [7.8.3] assign\n       /**\n@@ -644,7 +656,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n \t       flag_type __flags = ECMAScript)\n \t{\n \t  return this->assign(basic_regex(__s.data(), __s.data() + __s.size(),\n-\t\t\t\t\t  _M_loc, _M_flags));\n+\t\t\t\t\t  _M_loc, __flags));\n \t}\n \n       /**\n@@ -712,7 +724,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       imbue(locale_type __loc)\n       {\n \tstd::swap(__loc, _M_loc);\n-\t_M_automaton = nullptr;\n+\t_M_automaton.reset();\n \treturn __loc;\n       }\n "}, {"sha": "445006bb0e2a4ffa0a9e3f14ecfb7baeffaf0994", "filename": "libstdc++-v3/testsuite/28_regex/basic_regex/assign/char/cstring.cc", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/770acfc9e3753d7b9d4727293ac6f16811fa751f/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fbasic_regex%2Fassign%2Fchar%2Fcstring.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/770acfc9e3753d7b9d4727293ac6f16811fa751f/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fbasic_regex%2Fassign%2Fchar%2Fcstring.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F28_regex%2Fbasic_regex%2Fassign%2Fchar%2Fcstring.cc?ref=770acfc9e3753d7b9d4727293ac6f16811fa751f", "patch": "@@ -1,5 +1,4 @@\n-// { dg-do compile }\n-// { dg-options \"-std=gnu++11\" }\n+// { dg-options \"-std=c++11\" }\n \n // 2009-06-05  Stephen M. Webb  <stephen.webb@bregmasoft.ca>\n //\n@@ -36,9 +35,19 @@ void test01()\n   re.assign(cs);\n }\n \n+// basic_regex::operator=() resets flags. libstdc++/64680\n+void test02()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  std::regex re(\"[[:alnum:]]\", std::regex_constants::basic);\n+  re = \"\\\\w+\";\n+}\n+\n int\n main()\n { \n   test01();\n+  test02();\n   return 0;\n }"}]}