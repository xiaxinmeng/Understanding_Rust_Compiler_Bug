{"sha": "5b8c23564eb438eda9827b5341d05419afd092e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI4YzIzNTY0ZWI0MzhlZGE5ODI3YjUzNDFkMDU0MTlhZmQwOTJlNA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2001-12-06T11:56:34Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2001-12-06T11:56:34Z"}, "message": "rs6000.c (rs6000_unique_section): Simplify and correct code selecting section.\n\n\t* config/rs6000/rs6000.c (rs6000_unique_section): Simplify and\n\tcorrect code selecting section.\n\nFrom-SVN: r47714", "tree": {"sha": "69222626b6f7d7711b74a2c97291f77e29a96569", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69222626b6f7d7711b74a2c97291f77e29a96569"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b8c23564eb438eda9827b5341d05419afd092e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b8c23564eb438eda9827b5341d05419afd092e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b8c23564eb438eda9827b5341d05419afd092e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b8c23564eb438eda9827b5341d05419afd092e4/comments", "author": null, "committer": null, "parents": [{"sha": "8456b95a5af348aa220ad0adc2101835f221f5d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8456b95a5af348aa220ad0adc2101835f221f5d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8456b95a5af348aa220ad0adc2101835f221f5d3"}], "stats": {"total": 72, "additions": 44, "deletions": 28}, "files": [{"sha": "92c1c1c77413d665cfe04687c34224a2de58a95d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b8c23564eb438eda9827b5341d05419afd092e4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b8c23564eb438eda9827b5341d05419afd092e4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b8c23564eb438eda9827b5341d05419afd092e4", "patch": "@@ -1,3 +1,8 @@\n+2001-12-06  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* config/rs6000/rs6000.c (rs6000_unique_section): Simplify and\n+\tcorrect code selecting section.\n+\n Thu Dec  6 12:45:33 CET 2001  Jan Hubicka  <jh@suse.cz>\n \n \t* final.c (count_basic_block, add_bb, add_bb_string):"}, {"sha": "74d23ca0ef7906969dbef981c853ff4f668f47ce", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 39, "deletions": 28, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b8c23564eb438eda9827b5341d05419afd092e4/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b8c23564eb438eda9827b5341d05419afd092e4/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=5b8c23564eb438eda9827b5341d05419afd092e4", "patch": "@@ -9746,9 +9746,6 @@ rs6000_unique_section (decl, reloc)\n      tree decl;\n      int reloc;\n {\n-  int size = int_size_in_bytes (TREE_TYPE (decl));\n-  int needs_sdata;\n-  int readonly;\n   int len;\n   int sec;\n   const char *name;\n@@ -9757,40 +9754,54 @@ rs6000_unique_section (decl, reloc)\n \n   static const char *const prefixes[7][2] =\n   {\n-    { \".text.\",   \".gnu.linkonce.t.\" },\n     { \".rodata.\", \".gnu.linkonce.r.\" },\n     { \".sdata2.\", \".gnu.linkonce.s2.\" },\n     { \".data.\",   \".gnu.linkonce.d.\" },\n     { \".sdata.\",  \".gnu.linkonce.s.\" },\n     { \".bss.\",    \".gnu.linkonce.b.\" },\n-    { \".sbss.\",   \".gnu.linkonce.sb.\" }\n+    { \".sbss.\",   \".gnu.linkonce.sb.\" },\n+    { \".text.\",   \".gnu.linkonce.t.\" }\n   };\n-  \n-  needs_sdata = (TREE_CODE (decl) != FUNCTION_DECL\n-\t\t && size > 0 \n-\t\t && size <= g_switch_value\n-\t\t && rs6000_sdata != SDATA_NONE\n-\t\t && (rs6000_sdata != SDATA_DATA || TREE_PUBLIC (decl)));\n \n-  if (TREE_CODE (decl) == STRING_CST)\n-    readonly = ! flag_writable_strings;\n-  else if (TREE_CODE (decl) == VAR_DECL)\n-    readonly = (! (flag_pic && reloc)\n-\t\t&& TREE_READONLY (decl)\n-\t\t&& ! TREE_SIDE_EFFECTS (decl)\n-\t\t&& DECL_INITIAL (decl)\n-\t\t&& DECL_INITIAL (decl) != error_mark_node\n-\t\t&& TREE_CONSTANT (DECL_INITIAL (decl)));\n+  if (TREE_CODE (decl) == FUNCTION_DECL)\n+    sec = 6;\n   else\n-    readonly = 1;\n-  if (needs_sdata && rs6000_sdata != SDATA_EABI)\n-    readonly = 0;\n+    {\n+      int readonly;\n+      int needs_sdata;\n+      int size;\n+\n+      readonly = 1;\n+      if (TREE_CODE (decl) == STRING_CST)\n+\treadonly = ! flag_writable_strings;\n+      else if (TREE_CODE (decl) == VAR_DECL)\n+\treadonly = (! (flag_pic && reloc)\n+\t\t    && TREE_READONLY (decl)\n+\t\t    && ! TREE_SIDE_EFFECTS (decl)\n+\t\t    && TREE_CONSTANT (DECL_INITIAL (decl)));\n+\n+      size = int_size_in_bytes (TREE_TYPE (decl));\n+      needs_sdata = (size > 0 \n+\t\t     && size <= g_switch_value\n+\t\t     && rs6000_sdata != SDATA_NONE\n+\t\t     && (rs6000_sdata != SDATA_DATA || TREE_PUBLIC (decl)));\n+\n+      if (DECL_INITIAL (decl) == 0\n+\t  || DECL_INITIAL (decl) == error_mark_node)\n+\tsec = 4;\n+      else if (! readonly)\n+\tsec = 2;\n+      else\n+\tsec = 0;\n \n-  sec = ((TREE_CODE (decl) == FUNCTION_DECL ? 0 : 1)\n-\t + (readonly ? 0 : 2) \n-\t + (needs_sdata ? 1 : 0)\n-\t + (DECL_INITIAL (decl) == 0\n-\t    || DECL_INITIAL (decl) == error_mark_node) ? 4 : 0);\n+      if (needs_sdata)\n+\t{\n+\t  /* .sdata2 is only for EABI.  */\n+\t  if (sec == 0 && rs6000_sdata != SDATA_EABI)\n+\t    sec = 2;\n+\t  sec += 1;\n+\t}\n+    }\n \n   STRIP_NAME_ENCODING (name, IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl)));\n   prefix = prefixes[sec][DECL_ONE_ONLY (decl)];"}]}