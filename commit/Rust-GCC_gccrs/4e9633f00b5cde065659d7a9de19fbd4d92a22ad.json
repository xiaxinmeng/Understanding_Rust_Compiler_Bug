{"sha": "4e9633f00b5cde065659d7a9de19fbd4d92a22ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU5NjMzZjAwYjVjZGUwNjU2NTlkN2E5ZGUxOWZiZDRkOTJhMjJhZA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-08-18T02:06:48Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-08-18T02:06:48Z"}, "message": "Fix typos in last haifa change.\n\nFrom-SVN: r14827", "tree": {"sha": "c591a53d18ff326ae07c13f86df578643e9cce1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c591a53d18ff326ae07c13f86df578643e9cce1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e9633f00b5cde065659d7a9de19fbd4d92a22ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e9633f00b5cde065659d7a9de19fbd4d92a22ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e9633f00b5cde065659d7a9de19fbd4d92a22ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e9633f00b5cde065659d7a9de19fbd4d92a22ad/comments", "author": null, "committer": null, "parents": [{"sha": "9c0416e03f9de45e42a5647453182b7bfd6e21d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c0416e03f9de45e42a5647453182b7bfd6e21d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c0416e03f9de45e42a5647453182b7bfd6e21d2"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "d3651638ad34fdb43e0777a0273af7c81bcd12b9", "filename": "gcc/loop.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e9633f00b5cde065659d7a9de19fbd4d92a22ad/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e9633f00b5cde065659d7a9de19fbd4d92a22ad/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=4e9633f00b5cde065659d7a9de19fbd4d92a22ad", "patch": "@@ -7109,7 +7109,7 @@ void analyze_loop_iterations (loop_start, loop_end)\n \n   /* make sure that the last loop insn is a conditional jump */\n   last_loop_insn = PREV_INSN (loop_end);\n-  if (GET_CODE (last_loop_insn != JUMP_INSN) || !condjump_p (last_loop_insn))\n+  if (GET_CODE (last_loop_insn) != JUMP_INSN || !condjump_p (last_loop_insn)) {\n     if (loop_dump_stream)\n       fprintf (loop_dump_stream,\n               \"analyze_loop_iterations %d: BCT instrumentation failed: invalid jump at loop end\\n\",\n@@ -7300,7 +7300,7 @@ insert_bct (loop_start, loop_end)\n      This check is repeated from analyze_loop_iterations (),\n      because unrolling might have changed that.  */\n   if (GET_CODE (PREV_INSN (loop_end)) != JUMP_INSN\n-      || !is_condjump_p (PREV_INSN (loop_end)))\n+      || !is_condjump_p (PREV_INSN (loop_end))) {\n     if (loop_dump_stream)\n       fprintf (loop_dump_stream,\n \t      \"insert_bct: not instrumenting BCT because of invalid branch\\n\");"}]}