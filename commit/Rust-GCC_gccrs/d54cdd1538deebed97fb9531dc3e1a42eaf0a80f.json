{"sha": "d54cdd1538deebed97fb9531dc3e1a42eaf0a80f", "node_id": "C_kwDOANBUbNoAKGQ1NGNkZDE1MzhkZWViZWQ5N2ZiOTUzMWRjM2UxYTQyZWFmMGE4MGY", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2022-02-25T11:39:22Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2022-02-25T12:51:30Z"}, "message": "arc: Fail conditional move expand patterns\n\nIf the movcc comparison is not valid it triggers an assert in the\ncurrent implementation.  This behavior is not needed as we can FAIL\nthe movcc expand pattern.\n\ngcc/\n\t* config/arc/arc.cc (gen_compare_reg): Return NULL_RTX if the\n\tcomparison is not valid.\n\t* config/arc/arc.md (movsicc): Fail if comparison is not valid.\n\t(movdicc): Likewise.\n\t(movsfcc): Likewise.\n\t(movdfcc): Likewise.\n\nSigned-off-by: Claudiu Zissulescu <claziss@synopsys.com>", "tree": {"sha": "14c2794f8ec5ffa4806ce8353335296262cedf16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14c2794f8ec5ffa4806ce8353335296262cedf16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d54cdd1538deebed97fb9531dc3e1a42eaf0a80f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d54cdd1538deebed97fb9531dc3e1a42eaf0a80f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d54cdd1538deebed97fb9531dc3e1a42eaf0a80f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d54cdd1538deebed97fb9531dc3e1a42eaf0a80f/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e25dce501334053239dcc433e4c46ecbddbcb13e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e25dce501334053239dcc433e4c46ecbddbcb13e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e25dce501334053239dcc433e4c46ecbddbcb13e"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "c27ba99eb60a0b887c4e4b709b0662301d55447a", "filename": "gcc/config/arc/arc.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d54cdd1538deebed97fb9531dc3e1a42eaf0a80f/gcc%2Fconfig%2Farc%2Farc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d54cdd1538deebed97fb9531dc3e1a42eaf0a80f/gcc%2Fconfig%2Farc%2Farc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.cc?ref=d54cdd1538deebed97fb9531dc3e1a42eaf0a80f", "patch": "@@ -2256,7 +2256,8 @@ gen_compare_reg (rtx comparison, machine_mode omode)\n   cmode = GET_MODE (x);\n   if (cmode == VOIDmode)\n     cmode = GET_MODE (y);\n-  gcc_assert (cmode == SImode || cmode == SFmode || cmode == DFmode);\n+  if (cmode != SImode && cmode != SFmode && cmode != DFmode)\n+    return NULL_RTX;\n   if (cmode == SImode)\n     {\n       if (!register_operand (x, SImode))"}, {"sha": "39b358052c17920068ac6bde7b6a6c8dc0c28c65", "filename": "gcc/config/arc/arc.md", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d54cdd1538deebed97fb9531dc3e1a42eaf0a80f/gcc%2Fconfig%2Farc%2Farc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d54cdd1538deebed97fb9531dc3e1a42eaf0a80f/gcc%2Fconfig%2Farc%2Farc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.md?ref=d54cdd1538deebed97fb9531dc3e1a42eaf0a80f", "patch": "@@ -1618,16 +1618,23 @@ core_3, archs4x, archs4xd, archs4xd_slow\"\n \t\t         (match_operand:SI 2 \"nonmemory_operand\" \"\")\n  \t\t         (match_operand:SI 3 \"register_operand\" \"\")))]\n   \"\"\n-  \"operands[1] = gen_compare_reg (operands[1], VOIDmode);\")\n-\n+  \"\n+  operands[1] = gen_compare_reg (operands[1], VOIDmode);\n+  if (operands[1] == NULL_RTX)\n+    FAIL;\n+  \")\n \n (define_expand \"movdicc\"\n   [(set (match_operand:DI 0 \"dest_reg_operand\" \"\")\n \t(if_then_else:DI(match_operand 1 \"comparison_operator\" \"\")\n \t\t        (match_operand:DI 2 \"nonmemory_operand\" \"\")\n \t\t        (match_operand:DI 3 \"register_operand\" \"\")))]\n   \"\"\n-  \"operands[1] = gen_compare_reg (operands[1], VOIDmode);\")\n+  \"\n+  operands[1] = gen_compare_reg (operands[1], VOIDmode);\n+  if (operands[1] == NULL_RTX)\n+    FAIL;\n+  \")\n \n \n (define_expand \"movsfcc\"\n@@ -1636,15 +1643,23 @@ core_3, archs4x, archs4xd, archs4xd_slow\"\n \t\t      (match_operand:SF 2 \"nonmemory_operand\" \"\")\n \t\t      (match_operand:SF 3 \"register_operand\" \"\")))]\n   \"\"\n-  \"operands[1] = gen_compare_reg (operands[1], VOIDmode);\")\n+  \"\n+  operands[1] = gen_compare_reg (operands[1], VOIDmode);\n+  if (operands[1] == NULL_RTX)\n+    FAIL;\n+  \")\n \n (define_expand \"movdfcc\"\n   [(set (match_operand:DF 0 \"dest_reg_operand\" \"\")\n \t(if_then_else:DF (match_operand 1 \"comparison_operator\" \"\")\n \t\t      (match_operand:DF 2 \"nonmemory_operand\" \"\")\n \t\t      (match_operand:DF 3 \"register_operand\" \"\")))]\n   \"\"\n-  \"operands[1] = gen_compare_reg (operands[1], VOIDmode);\")\n+  \"\n+  operands[1] = gen_compare_reg (operands[1], VOIDmode);\n+  if (operands[1] == NULL_RTX)\n+    FAIL;\n+  \")\n \n (define_insn \"*movsicc_insn\"\n   [(set (match_operand:SI 0 \"dest_reg_operand\" \"=w,w\")"}]}