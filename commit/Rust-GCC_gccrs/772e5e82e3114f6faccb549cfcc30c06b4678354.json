{"sha": "772e5e82e3114f6faccb549cfcc30c06b4678354", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzcyZTVlODJlMzExNGY2ZmFjY2I1NDljZmNjMzBjMDZiNDY3ODM1NA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-05-10T11:51:22Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-05-11T08:53:26Z"}, "message": "gcc-changelog: Accept ref_name argument in GitCommit.\n\ncontrib/ChangeLog:\n\n\t* gcc-changelog/git_commit.py: Remove ChangeLog locations\n\tbased on ref_name.\n\t* gcc-changelog/git_repository.py: Likewise.", "tree": {"sha": "50599819fbffd7b4f7f0f80759589c2f1a2ea399", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50599819fbffd7b4f7f0f80759589c2f1a2ea399"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/772e5e82e3114f6faccb549cfcc30c06b4678354", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/772e5e82e3114f6faccb549cfcc30c06b4678354", "html_url": "https://github.com/Rust-GCC/gccrs/commit/772e5e82e3114f6faccb549cfcc30c06b4678354", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/772e5e82e3114f6faccb549cfcc30c06b4678354/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf43636a74a028daf2024b33d1915274a2ff9655", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf43636a74a028daf2024b33d1915274a2ff9655", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf43636a74a028daf2024b33d1915274a2ff9655"}], "stats": {"total": 34, "additions": 23, "deletions": 11}, "files": [{"sha": "4a3f96997c5877c5cb6484423e9b1f838bb76e57", "filename": "contrib/gcc-changelog/git_commit.py", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/772e5e82e3114f6faccb549cfcc30c06b4678354/contrib%2Fgcc-changelog%2Fgit_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/772e5e82e3114f6faccb549cfcc30c06b4678354/contrib%2Fgcc-changelog%2Fgit_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_commit.py?ref=772e5e82e3114f6faccb549cfcc30c06b4678354", "patch": "@@ -19,8 +19,9 @@\n import difflib\n import os\n import re\n+import sys\n \n-changelog_locations = {\n+default_changelog_locations = {\n     'c++tools',\n     'config',\n     'contrib',\n@@ -287,7 +288,7 @@ def __init__(self, hexsha, date, author, lines, modified_files):\n \n \n class GitCommit:\n-    def __init__(self, info, strict=True, commit_to_info_hook=None):\n+    def __init__(self, info, strict=True, commit_to_info_hook=None, ref_name=None):\n         self.original_info = info\n         self.info = info\n         self.message = None\n@@ -300,6 +301,7 @@ def __init__(self, info, strict=True, commit_to_info_hook=None):\n         self.cherry_pick_commit = None\n         self.revert_commit = None\n         self.commit_to_info_hook = commit_to_info_hook\n+        self.init_changelog_locations(ref_name)\n \n         # Skip Update copyright years commits\n         if self.info.lines and self.info.lines[0] == 'Update copyright years.':\n@@ -361,15 +363,14 @@ def is_changelog_filename(cls, path, allow_suffix=False):\n         else:\n             return False\n \n-    @classmethod\n-    def find_changelog_location(cls, name):\n+    def find_changelog_location(self, name):\n         if name.startswith('\\t'):\n             name = name[1:]\n         if name.endswith(':'):\n             name = name[:-1]\n         if name.endswith('/'):\n             name = name[:-1]\n-        return name if name in changelog_locations else None\n+        return name if name in self.changelog_locations else None\n \n     @classmethod\n     def format_git_author(cls, author):\n@@ -389,6 +390,17 @@ def parse_git_name_status(cls, string):\n                 modified_files.append((parts[2], 'A'))\n         return modified_files\n \n+    def init_changelog_locations(self, ref_name):\n+        self.changelog_locations = list(default_changelog_locations)\n+        if ref_name:\n+            version = sys.maxsize\n+            if ref_name.startswith('refs/heads/releases/gcc-'):\n+                version = int(ref_name.split('-')[-1])\n+            if version >= 12:\n+                # HSA and BRIG were removed in GCC 12\n+                self.changelog_locations.remove('gcc/brig')\n+                self.changelog_locations.remove('libhsail-rt')\n+\n     def parse_lines(self, all_are_ignored):\n         body = self.info.lines\n \n@@ -586,7 +598,7 @@ def deduce_changelog_locations(self):\n                 for file in entry.files:\n                     location = self.get_file_changelog_location(file)\n                     if (location == ''\n-                       or (location and location in changelog_locations)):\n+                       or (location and location in self.changelog_locations)):\n                         if changelog and changelog != location:\n                             msg = 'could not deduce ChangeLog file, ' \\\n                                   'not unique location'\n@@ -606,11 +618,10 @@ def in_ignored_location(cls, path):\n                 return True\n         return False\n \n-    @classmethod\n-    def get_changelog_by_path(cls, path):\n+    def get_changelog_by_path(self, path):\n         components = path.split('/')\n         while components:\n-            if '/'.join(components) in changelog_locations:\n+            if '/'.join(components) in self.changelog_locations:\n                 break\n             components = components[:-1]\n         return '/'.join(components)"}, {"sha": "501c0d931f5907eec198f1d01eaf8d706668d498", "filename": "contrib/gcc-changelog/git_repository.py", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/772e5e82e3114f6faccb549cfcc30c06b4678354/contrib%2Fgcc-changelog%2Fgit_repository.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/772e5e82e3114f6faccb549cfcc30c06b4678354/contrib%2Fgcc-changelog%2Fgit_repository.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_repository.py?ref=772e5e82e3114f6faccb549cfcc30c06b4678354", "patch": "@@ -29,7 +29,7 @@\n from git_commit import GitCommit, GitInfo, decode_path\n \n \n-def parse_git_revisions(repo_path, revisions, strict=True):\n+def parse_git_revisions(repo_path, revisions, strict=True, ref_name=None):\n     repo = Repo(repo_path)\n \n     def commit_to_info(commit):\n@@ -73,6 +73,7 @@ def commit_to_info(commit):\n \n     for commit in commits:\n         git_commit = GitCommit(commit_to_info(commit.hexsha), strict=strict,\n-                               commit_to_info_hook=commit_to_info)\n+                               commit_to_info_hook=commit_to_info,\n+                               ref_name=ref_name)\n         parsed_commits.append(git_commit)\n     return parsed_commits"}]}