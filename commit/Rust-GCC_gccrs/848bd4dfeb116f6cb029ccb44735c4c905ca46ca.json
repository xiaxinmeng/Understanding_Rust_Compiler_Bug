{"sha": "848bd4dfeb116f6cb029ccb44735c4c905ca46ca", "node_id": "C_kwDOANBUbNoAKDg0OGJkNGRmZWIxMTZmNmNiMDI5Y2NiNDQ3MzVjNGM5MDVjYTQ2Y2E", "commit": {"author": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-03-27T11:09:34Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2023-03-30T14:48:28Z"}, "message": "session: Add tokenstream dump option\n\nAdd an option to the command line interface to dump the ast back to a\ntokenstream.\n\ngcc/rust/ChangeLog:\n\n\t* rust-session-manager.cc (Session::enable_dump): Enable new\n\tdump.\n\t(Session::compile_crate): CLI argument parsing.\n\t(Session::dump_tokenstream): Dump the tokenstream as a string in\n\tthe specified file.\n\t* rust-session-manager.h (struct CompileOptions): Add\n\ttokenstream dump option.\n\nSigned-off-by: Pierre-Emmanuel Patry <pierre-emmanuel.patry@embecosm.com>", "tree": {"sha": "baacf713f23151805ca295c0a64ffd0e285e0617", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/baacf713f23151805ca295c0a64ffd0e285e0617"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/848bd4dfeb116f6cb029ccb44735c4c905ca46ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/848bd4dfeb116f6cb029ccb44735c4c905ca46ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/848bd4dfeb116f6cb029ccb44735c4c905ca46ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/848bd4dfeb116f6cb029ccb44735c4c905ca46ca/comments", "author": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3a62ea7d7849efdee24808b5ebd4902af16d57e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3a62ea7d7849efdee24808b5ebd4902af16d57e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3a62ea7d7849efdee24808b5ebd4902af16d57e"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "9b154524245b3c3725a71b7eaf8a8447103a262f", "filename": "gcc/rust/rust-session-manager.cc", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/848bd4dfeb116f6cb029ccb44735c4c905ca46ca/gcc%2Frust%2Frust-session-manager.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/848bd4dfeb116f6cb029ccb44735c4c905ca46ca/gcc%2Frust%2Frust-session-manager.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-session-manager.cc?ref=848bd4dfeb116f6cb029ccb44735c4c905ca46ca", "patch": "@@ -35,6 +35,7 @@\n #include \"rust-lint-unused-var.h\"\n #include \"rust-hir-dump.h\"\n #include \"rust-ast-dump.h\"\n+#include \"rust-ast-tokenstream.h\"\n #include \"rust-export-metadata.h\"\n #include \"rust-imports.h\"\n #include \"rust-extern-crate.h\"\n@@ -64,6 +65,7 @@ const char *kLexDumpFile = \"gccrs.lex.dump\";\n const char *kASTDumpFile = \"gccrs.ast.dump\";\n const char *kASTPrettyDumpFile = \"gccrs.ast-pretty.dump\";\n const char *kASTPrettyDumpFileExpanded = \"gccrs.ast-pretty-expanded.dump\";\n+const char *kASTDumpTokenStream = \"gccrs.ast-tokenstream.dump\";\n const char *kASTExpandedDumpFile = \"gccrs.ast-expanded.dump\";\n const char *kHIRDumpFile = \"gccrs.hir.dump\";\n const char *kHIRPrettyDumpFile = \"gccrs.hir-pretty.dump\";\n@@ -303,6 +305,10 @@ Session::enable_dump (std::string arg)\n     {\n       options.enable_dump_option (CompileOptions::AST_DUMP_PRETTY);\n     }\n+  else if (arg == \"ast-tokenstream\")\n+    {\n+      options.enable_dump_option (CompileOptions::AST_DUMP_TOKENSTREAM);\n+    }\n   else if (arg == \"register_plugins\")\n     {\n       options.enable_dump_option (CompileOptions::REGISTER_PLUGINS_DUMP);\n@@ -493,6 +499,10 @@ Session::compile_crate (const char *filename)\n     {\n       dump_ast (parser, *ast_crate.get ());\n     }\n+  if (options.dump_option_enabled (CompileOptions::AST_DUMP_TOKENSTREAM))\n+    {\n+      dump_tokenstream (*ast_crate.get ());\n+    }\n   if (options.dump_option_enabled (CompileOptions::AST_DUMP_PRETTY))\n     {\n       dump_ast_pretty (*ast_crate.get ());\n@@ -921,6 +931,25 @@ Session::dump_ast_pretty (AST::Crate &crate, bool expanded) const\n   out.close ();\n }\n \n+void\n+Session::dump_tokenstream (AST::Crate &crate) const\n+{\n+  std::ofstream out;\n+  out.open (kASTDumpTokenStream);\n+  if (out.fail ())\n+    {\n+      rust_error_at (Linemap::unknown_location (), \"cannot open %s:%m; ignored\",\n+\t\t     kASTDumpTokenStream);\n+    }\n+  std::vector<TokenPtr> tokenstream;\n+  AST::TokenStream (tokenstream).visit (crate);\n+  for (auto &token : tokenstream)\n+    {\n+      out << token->as_string () << \" \";\n+    }\n+  out.close ();\n+}\n+\n void\n Session::dump_ast_expanded (Parser<Lexer> &parser, AST::Crate &crate) const\n {"}, {"sha": "12e20df0658e14e9336e2bdcc219780400ae0948", "filename": "gcc/rust/rust-session-manager.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/848bd4dfeb116f6cb029ccb44735c4c905ca46ca/gcc%2Frust%2Frust-session-manager.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/848bd4dfeb116f6cb029ccb44735c4c905ca46ca/gcc%2Frust%2Frust-session-manager.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-session-manager.h?ref=848bd4dfeb116f6cb029ccb44735c4c905ca46ca", "patch": "@@ -168,6 +168,7 @@ struct CompileOptions\n     LEXER_DUMP,\n     PARSER_AST_DUMP,\n     AST_DUMP_PRETTY,\n+    AST_DUMP_TOKENSTREAM,\n     REGISTER_PLUGINS_DUMP,\n     INJECTION_DUMP,\n     EXPANSION_DUMP,\n@@ -227,6 +228,7 @@ struct CompileOptions\n     enable_dump_option (DumpOption::LEXER_DUMP);\n     enable_dump_option (DumpOption::PARSER_AST_DUMP);\n     enable_dump_option (DumpOption::AST_DUMP_PRETTY);\n+    enable_dump_option (DumpOption::AST_DUMP_TOKENSTREAM);\n     enable_dump_option (DumpOption::REGISTER_PLUGINS_DUMP);\n     enable_dump_option (DumpOption::INJECTION_DUMP);\n     enable_dump_option (DumpOption::EXPANSION_DUMP);\n@@ -343,6 +345,7 @@ struct Session\n   void dump_lex (Parser<Lexer> &parser) const;\n   void dump_ast (Parser<Lexer> &parser, AST::Crate &crate) const;\n   void dump_ast_pretty (AST::Crate &crate, bool expanded = false) const;\n+  void dump_tokenstream (AST::Crate &crate) const;\n   void dump_ast_expanded (Parser<Lexer> &parser, AST::Crate &crate) const;\n   void dump_hir (HIR::Crate &crate) const;\n   void dump_hir_pretty (HIR::Crate &crate) const;"}]}