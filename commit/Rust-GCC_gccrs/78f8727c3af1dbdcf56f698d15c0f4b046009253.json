{"sha": "78f8727c3af1dbdcf56f698d15c0f4b046009253", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhmODcyN2MzYWYxZGJkY2Y1NmY2OThkMTVjMGY0YjA0NjAwOTI1Mw==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-08-01T09:41:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T09:41:55Z"}, "message": "snames.ads-tmpl, [...]: Remove VMS-specific code.\n\n2014-08-01  Robert Dewar  <dewar@adacore.com>\n\n\t* snames.ads-tmpl, s-os_lib.adb, s-os_lib.ads, s-fileio.adb: Remove\n\tVMS-specific code.\n\t* prj-conf.adb: Minor reformatting.\n\t* xr_tabls.adb (Read_File): Restore code which was enabled on\n\tnon VMS platforms before.\n\t* prj-env.adb (Initialize_Default_Project_Path): Ditto.\n\t* sem_ch5.adb: Minor reformatting.\n\t* lib-writ.adb, lib-writ.ads, bindgen.adb, sem_vfpt.adb,\n\tsem_vfpt.ads, ali.adb, ali.ads, opt.ads, bcheck.adb, exp_strm.adb:\n\tRemove VMS-specific code.\n\nFrom-SVN: r213432", "tree": {"sha": "5ca0284eb43ed888b5e50dade8a8e2616e0c56d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ca0284eb43ed888b5e50dade8a8e2616e0c56d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78f8727c3af1dbdcf56f698d15c0f4b046009253", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78f8727c3af1dbdcf56f698d15c0f4b046009253", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78f8727c3af1dbdcf56f698d15c0f4b046009253", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78f8727c3af1dbdcf56f698d15c0f4b046009253/comments", "author": null, "committer": null, "parents": [{"sha": "7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a5b62b0c751de386bc4faf8648503b48d1d3c9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a5b62b0c751de386bc4faf8648503b48d1d3c9b"}], "stats": {"total": 522, "additions": 92, "deletions": 430}, "files": [{"sha": "a1e0c19af6b70add8f3ed037887e800a22f57c2b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=78f8727c3af1dbdcf56f698d15c0f4b046009253", "patch": "@@ -1,3 +1,16 @@\n+2014-08-01  Robert Dewar  <dewar@adacore.com>\n+\n+\t* snames.ads-tmpl, s-os_lib.adb, s-os_lib.ads, s-fileio.adb: Remove\n+\tVMS-specific code.\n+\t* prj-conf.adb: Minor reformatting.\n+\t* xr_tabls.adb (Read_File): Restore code which was enabled on\n+\tnon VMS platforms before.\n+\t* prj-env.adb (Initialize_Default_Project_Path): Ditto.\n+\t* sem_ch5.adb: Minor reformatting.\n+\t* lib-writ.adb, lib-writ.ads, bindgen.adb, sem_vfpt.adb,\n+\tsem_vfpt.ads, ali.adb, ali.ads, opt.ads, bcheck.adb, exp_strm.adb:\n+\tRemove VMS-specific code.\n+\n 2014-08-01  Vincent Celier  <celier@adacore.com>\n \n \t* make.adb (Await_Compile): Remove loop that was only needed"}, {"sha": "2fe955259268ab04c6d42ecf1ae7791c1132a535", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=78f8727c3af1dbdcf56f698d15c0f4b046009253", "patch": "@@ -108,7 +108,6 @@ package body ALI is\n       --  ALI files that are read for a given processing run in gnatbind.\n \n       Dynamic_Elaboration_Checks_Specified   := False;\n-      Float_Format_Specified                 := ' ';\n       Locking_Policy_Specified               := ' ';\n       No_Normalize_Scalars_Specified         := False;\n       No_Object_Specified                    := False;\n@@ -876,7 +875,6 @@ package body ALI is\n         First_Sdep                   => No_Sdep_Id,\n         First_Specific_Dispatching   => Specific_Dispatching.Last + 1,\n         First_Unit                   => No_Unit_Id,\n-        Float_Format                 => 'I',\n         Last_Interrupt_State         => Interrupt_States.Last,\n         Last_Sdep                    => No_Sdep_Id,\n         Last_Specific_Dispatching    => Specific_Dispatching.Last,\n@@ -1091,12 +1089,6 @@ package body ALI is\n                ALIs.Table (Id).Partition_Elaboration_Policy :=\n                  Partition_Elaboration_Policy_Specified;\n \n-            --  Processing for FD/FG/FI\n-\n-            elsif C = 'F' then\n-               Float_Format_Specified := Getc;\n-               ALIs.Table (Id).Float_Format := Float_Format_Specified;\n-\n             --  Processing for Lx\n \n             elsif C = 'L' then"}, {"sha": "f896e7d008896721815c2e912b5fed677a0aa73c", "filename": "gcc/ada/ali.ads", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.ads?ref=78f8727c3af1dbdcf56f698d15c0f4b046009253", "patch": "@@ -176,10 +176,6 @@ package ALI is\n       --  always be set as well in this case. Not set if 'P' appears in\n       --  Ignore_Lines.\n \n-      Float_Format : Character;\n-      --  Set to float format (set to I if no float-format given). Not set if\n-      --  'P' appears in Ignore_Lines.\n-\n       No_Object : Boolean;\n       --  Set to True if no object file generated. Not set if 'P' appears in\n       --  Ignore_Lines.\n@@ -469,11 +465,6 @@ package ALI is\n    --  Set to False by Initialize_ALI. Set to True if Scan_ALI reads\n    --  a unit for which dynamic elaboration checking is enabled.\n \n-   Float_Format_Specified : Character := ' ';\n-   --  Set to blank by Initialize_ALI. Set to appropriate float format\n-   --  character (V or I, see Opt.Float_Format) if an ali file that\n-   --  is read contains an F line setting the floating point format.\n-\n    Initialize_Scalars_Used : Boolean := False;\n    --  Set True if an ali file contains the Initialize_Scalars flag\n "}, {"sha": "be48f06fecf825bb779dd059e112f490ecffc1e4", "filename": "gcc/ada/bcheck.adb", "status": "modified", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fbcheck.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fbcheck.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbcheck.adb?ref=78f8727c3af1dbdcf56f698d15c0f4b046009253", "patch": "@@ -47,7 +47,6 @@ package body Bcheck is\n \n    procedure Check_Consistent_Dispatching_Policy;\n    procedure Check_Consistent_Dynamic_Elaboration_Checking;\n-   procedure Check_Consistent_Floating_Point_Format;\n    procedure Check_Consistent_Interrupt_States;\n    procedure Check_Consistent_Locking_Policy;\n    procedure Check_Consistent_Normalize_Scalars;\n@@ -73,10 +72,6 @@ package body Bcheck is\n \n    procedure Check_Configuration_Consistency is\n    begin\n-      if Float_Format_Specified /= ' ' then\n-         Check_Consistent_Floating_Point_Format;\n-      end if;\n-\n       if Queuing_Policy_Specified /= ' ' then\n          Check_Consistent_Queuing_Policy;\n       end if;\n@@ -526,41 +521,6 @@ package body Bcheck is\n       end if;\n    end Check_Consistent_Dynamic_Elaboration_Checking;\n \n-   --------------------------------------------\n-   -- Check_Consistent_Floating_Point_Format --\n-   --------------------------------------------\n-\n-   --  The rule is that all files must be compiled with the same setting\n-   --  for the floating-point format.\n-\n-   procedure Check_Consistent_Floating_Point_Format is\n-   begin\n-      --  First search for a unit specifying a floating-point format and then\n-      --  check all remaining units against it.\n-\n-      Find_Format : for A1 in ALIs.First .. ALIs.Last loop\n-         if ALIs.Table (A1).Float_Format /= ' ' then\n-            Check_Format : declare\n-               Format : constant Character := ALIs.Table (A1).Float_Format;\n-            begin\n-               for A2 in A1 + 1 .. ALIs.Last loop\n-                  if ALIs.Table (A2).Float_Format /= Format then\n-                     Error_Msg_File_1 := ALIs.Table (A1).Sfile;\n-                     Error_Msg_File_2 := ALIs.Table (A2).Sfile;\n-\n-                     Consistency_Error_Msg\n-                       (\"{ and { compiled with different \" &\n-                        \"floating-point representations\");\n-                     exit Find_Format;\n-                  end if;\n-               end loop;\n-            end Check_Format;\n-\n-            exit Find_Format;\n-         end if;\n-      end loop Find_Format;\n-   end Check_Consistent_Floating_Point_Format;\n-\n    ---------------------------------------\n    -- Check_Consistent_Interrupt_States --\n    ---------------------------------------"}, {"sha": "8979b7736bf3f5e54f5db1e5f61d864389579077", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=78f8727c3af1dbdcf56f698d15c0f4b046009253", "patch": "@@ -159,10 +159,6 @@ package body Bindgen is\n    --  A value of zero indicates that time slicing should be suppressed. If no\n    --  pragma is present, and no -T switch was used, the value is -1.\n \n-   --  Float_Format is the float representation in use. Currently the only\n-   --  valid value is 'I' for IEEE. We needed this field in the past for other\n-   --  floating-point formats, and it is retained for possible future use.\n-\n    --  WC_Encoding shows the wide character encoding method used for the main\n    --  program. This is one of the encoding letters defined in\n    --  System.WCh_Con.WC_Encoding_Letters."}, {"sha": "220e6c23aa5ed219c1f5c355e2030765441ed815", "filename": "gcc/ada/exp_strm.adb", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fexp_strm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fexp_strm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_strm.adb?ref=78f8727c3af1dbdcf56f698d15c0f4b046009253", "patch": "@@ -620,11 +620,14 @@ package body Exp_Strm is\n       --  and we are in the body of the default implementation of a 'Read\n       --  attribute, set target type to force a constraint check (13.13.2(35)).\n       --  If the type of the discriminant is currently private, add another\n-      --  unchecked conversion from the full view.\n-\n-      if Nkind (Targ) = N_Identifier\n-        and then Is_Internal_Name (Chars (Targ))\n-        and then Is_TSS (Scope (Entity (Targ)), TSS_Stream_Read)\n+      --  unchecked conversion from the full view. We also do this check if\n+      --  this is an elementary read call in the source program (as opposed\n+      --  to one generated as part of a composite read).\n+\n+      if (Nkind (Targ) = N_Identifier\n+           and then Is_Internal_Name (Chars (Targ))\n+           and then Is_TSS (Scope (Entity (Targ)), TSS_Stream_Read))\n+        or else Comes_From_Source (N)\n       then\n          Res :=\n            Unchecked_Convert_To (Base_Type (U_Type),"}, {"sha": "1994a5acafe8bb2feefafb811720dd41179d5b52", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=78f8727c3af1dbdcf56f698d15c0f4b046009253", "patch": "@@ -1133,20 +1133,6 @@ package body Lib.Writ is\n          Write_Info_Str (\" DB\");\n       end if;\n \n-      if Opt.Float_Format /= ' ' then\n-         Write_Info_Str (\" F\");\n-\n-         if Opt.Float_Format = 'I' then\n-            Write_Info_Char ('I');\n-\n-         elsif Opt.Float_Format_Long = 'D' then\n-            Write_Info_Char ('D');\n-\n-         else\n-            Write_Info_Char ('G');\n-         end if;\n-      end if;\n-\n       if Tasking_Used\n         and then not Is_Predefined_File_Name (Unit_File_Name (Main_Unit))\n       then"}, {"sha": "941c69f0eee4d9c979d3e28724367645b3110ad9", "filename": "gcc/ada/lib-writ.ads", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Flib-writ.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Flib-writ.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.ads?ref=78f8727c3af1dbdcf56f698d15c0f4b046009253", "patch": "@@ -192,18 +192,6 @@ package Lib.Writ is\n    --              the units in this file, where x is the first character\n    --              (upper case) of the policy name (e.g. 'C' for Concurrent).\n \n-   --         FD   Configuration pragmas apply to all the units in this file\n-   --              specifying a possibly non-standard floating point format\n-   --              (VAX float with Long_Float using D_Float).\n-\n-   --         FG   Configuration pragmas apply to all the units in this file\n-   --              specifying a possibly non-standard floating point format\n-   --              (VAX float with Long_Float using G_Float).\n-\n-   --         FI   Configuration pragmas apply to all the units in this file\n-   --              specifying a possibly non-standard floating point format\n-   --              (IEEE Float).\n-\n    --         Lx   A valid Locking_Policy pragma applies to all the units in\n    --              this file, where x is the first character (upper case) of\n    --              the policy name (e.g. 'C' for Ceiling_Locking)."}, {"sha": "68d20f1d033b1b8694bcc3e3667b49629efab1c8", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=78f8727c3af1dbdcf56f698d15c0f4b046009253", "patch": "@@ -639,19 +639,6 @@ package Opt is\n    --  Indicates the current setting of Fast_Math mode, as set by the use\n    --  of a Fast_Math pragma (set True by Fast_Math (On)).\n \n-   Float_Format : Character := ' ';\n-   --  GNAT\n-   --  A non-blank value indicates that a Float_Format pragma has been\n-   --  processed, in which case this variable is set to 'I' for IEEE or to\n-   --  'V' for VAX. The setting of 'V' is only possible on OpenVMS versions\n-   --  of GNAT.\n-\n-   Float_Format_Long : Character := ' ';\n-   --  GNAT\n-   --  A non-blank value indicates that a Long_Float pragma has been processed\n-   --  (this pragma is recognized only in OpenVMS versions of GNAT), in which\n-   --  case this variable is set to D or G for D_Float or G_Float.\n-\n    Force_ALI_Tree_File : Boolean := False;\n    --  GNAT\n    --  Force generation of ALI file even if errors are encountered. Also forces"}, {"sha": "095c2d1c0204890657fdf68559a6c517bf9903a3", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=78f8727c3af1dbdcf56f698d15c0f4b046009253", "patch": "@@ -1418,7 +1418,7 @@ package body Prj.Conf is\n \n          --  This might raise an Invalid_Config exception\n \n-            Do_Autoconf;\n+         Do_Autoconf;\n \n       --  If the config file is not auto-generated, warn if there is any --RTS\n       --  switch, but not when the config file is generated in memory."}, {"sha": "5021e0c00454bb68f839f69da2f8baa5f068fefa", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=78f8727c3af1dbdcf56f698d15c0f4b046009253", "patch": "@@ -2040,6 +2040,32 @@ package body Prj.Env is\n             --  directory correctly.\n \n             Last := Last - 1;\n+\n+         else\n+            declare\n+               New_Dir : constant String :=\n+                           Normalize_Pathname\n+                             (Name_Buffer (First .. Last),\n+                              Resolve_Links => Opt.Follow_Links_For_Dirs);\n+               New_Len  : Natural;\n+               New_Last : Natural;\n+\n+            begin\n+               --  If the absolute path was resolved and is different from\n+               --  the original, replace original with the resolved path.\n+\n+               if New_Dir /= Name_Buffer (First .. Last)\n+                 and then New_Dir'Length /= 0\n+               then\n+                  New_Len := Name_Len + New_Dir'Length - (Last - First + 1);\n+                  New_Last := First + New_Dir'Length - 1;\n+                  Name_Buffer (New_Last + 1 .. New_Len) :=\n+                    Name_Buffer (Last + 1 .. Name_Len);\n+                  Name_Buffer (First .. New_Last) := New_Dir;\n+                  Name_Len := New_Len;\n+                  Last := New_Last;\n+               end if;\n+            end;\n          end if;\n \n          First := Last + 1;"}, {"sha": "56594689883726f0b268f9a4eefc754ec0d82c10", "filename": "gcc/ada/s-fileio.adb", "status": "modified", "additions": 8, "deletions": 250, "changes": 258, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fs-fileio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fs-fileio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.adb?ref=78f8727c3af1dbdcf56f698d15c0f4b046009253", "patch": "@@ -50,12 +50,6 @@ package body System.File_IO is\n    use type CRTL.size_t;\n    use type Interfaces.C.int;\n \n-   subtype String_Access is System.OS_Lib.String_Access;\n-   procedure Free (X : in out String_Access) renames System.OS_Lib.Free;\n-\n-   function \"=\" (X, Y : String_Access) return Boolean\n-     renames System.OS_Lib.\"=\";\n-\n    ----------------------\n    -- Global Variables --\n    ----------------------\n@@ -102,9 +96,6 @@ package body System.File_IO is\n      (C, text_translation_required, \"__gnat_text_translation_required\");\n    --  If true, add appropriate suffix to control string for Open\n \n-   VMS_Formstr : String_Access := null;\n-   --  For special VMS RMS keywords and values\n-\n    -----------------------\n    -- Local Subprograms --\n    -----------------------\n@@ -139,14 +130,6 @@ package body System.File_IO is\n    --  Clear error indication on File and raise Device_Error with an exception\n    --  message providing errno information.\n \n-   procedure Form_VMS_RMS_Keys (Form : String; VMS_Form : out String_Access);\n-   --  Parse the RMS Keys\n-\n-   function Form_RMS_Context_Key\n-     (Form     : String;\n-      VMS_Form : String_Access) return Natural;\n-   --  Parse the RMS Context Key\n-\n    ----------------\n    -- Append_Set --\n    ----------------\n@@ -630,197 +613,6 @@ package body System.File_IO is\n       Stop  := 0;\n    end Form_Parameter;\n \n-   --------------------------\n-   -- Form_RMS_Context_Key --\n-   --------------------------\n-\n-   function Form_RMS_Context_Key\n-     (Form     : String;\n-      VMS_Form : String_Access) return Natural\n-   is\n-      type Context_Parms is\n-        (Binary_Data, Convert_Fortran_Carriage_Control, Force_Record_Mode,\n-         Force_Stream_Mode, Explicit_Write);\n-      --  Ada-fied list of all possible Context keyword values\n-\n-      Pos   : Natural := 0;\n-      Klen  : Natural := 0;\n-      Index : Natural;\n-\n-   begin\n-      --  Find the end of the occupation\n-\n-      for J in VMS_Form'First .. VMS_Form'Last loop\n-         if VMS_Form (J) = ASCII.NUL then\n-            Pos := J;\n-            exit;\n-         end if;\n-      end loop;\n-\n-      Index := Form'First;\n-      while Index < Form'Last loop\n-         if Form (Index) = '=' then\n-            Index := Index + 1;\n-\n-            --  Loop through the context values and look for a match\n-\n-            for Parm in Context_Parms loop\n-               declare\n-                  KImage : String := Context_Parms'Image (Parm);\n-\n-               begin\n-                  Klen := KImage'Length;\n-                  To_Lower (KImage);\n-\n-                  if Index + Klen - 1 <= Form'Last\n-                    and then Form (Index .. Index + Klen - 1) = KImage\n-                  then\n-                     case Parm is\n-                        when Force_Record_Mode =>\n-                           VMS_Form (Pos) := '\"';\n-                           Pos := Pos + 1;\n-                           VMS_Form (Pos .. Pos + 6) := \"ctx=rec\";\n-                           Pos := Pos + 7;\n-                           VMS_Form (Pos) := '\"';\n-                           Pos := Pos + 1;\n-                           VMS_Form (Pos) := ',';\n-                           return Index + Klen;\n-\n-                        when Force_Stream_Mode =>\n-                           VMS_Form (Pos) := '\"';\n-                           Pos := Pos + 1;\n-                           VMS_Form (Pos .. Pos + 6) := \"ctx=stm\";\n-                           Pos := Pos + 7;\n-                           VMS_Form (Pos) := '\"';\n-                           Pos := Pos + 1;\n-                           VMS_Form (Pos) := ',';\n-                           return Index + Klen;\n-\n-                        when others =>\n-                           raise Use_Error\n-                             with \"unimplemented RMS Context Value\";\n-                     end case;\n-                  end if;\n-               end;\n-            end loop;\n-\n-            raise Use_Error with \"unrecognized RMS Context Value\";\n-         end if;\n-      end loop;\n-\n-      raise Use_Error with \"malformed RMS Context Value\";\n-   end Form_RMS_Context_Key;\n-\n-   -----------------------\n-   -- Form_VMS_RMS_Keys --\n-   -----------------------\n-\n-   procedure Form_VMS_RMS_Keys (Form : String; VMS_Form : out String_Access)\n-   is\n-      VMS_RMS_Keys_Token : constant String := \"vms_rms_keys\";\n-      Klen : Natural := VMS_RMS_Keys_Token'Length;\n-      Index : Natural;\n-\n-      --  Ada-fied list of all RMS keywords, translated from the HP C Run-Time\n-      --  Library Reference Manual, Table REF-3: RMS Valid Keywords and Values.\n-\n-      type RMS_Keys is\n-       (Access_Callback, Allocation_Quantity, Block_Size, Context,\n-        Default_Extension_Quantity, Default_File_Name_String, Error_Callback,\n-        File_Processing_Options, Fixed_Header_Size, Global_Buffer_Count,\n-        Multiblock_Count, Multibuffer_Count, Maximum_Record_Size,\n-        Terminal_Input_Prompt, Record_Attributes, Record_Format,\n-        Record_Processing_Options, Retrieval_Pointer_Count, Sharing_Options,\n-        Timeout_IO_Value);\n-\n-   begin\n-      Index := Form'First + Klen - 1;\n-      while Index < Form'Last loop\n-         Index := Index + 1;\n-\n-         --  Scan for the token signalling VMS RMS Keys ahead.  Should\n-         --  whitespace be eaten???\n-\n-         if Form (Index - Klen .. Index - 1) = VMS_RMS_Keys_Token then\n-\n-            --  Allocate the VMS form string that will contain the cryptic\n-            --  CRTL RMS strings and initialize it to all nulls.  Since the\n-            --  CRTL strings are always shorter than the Ada-fied strings,\n-            --  it follows that an allocation of the original size will be\n-            --  more than adequate.\n-            VMS_Form := new String'(Form (Form'First .. Form'Last));\n-            VMS_Form.all := (others => ASCII.NUL);\n-\n-            if Form (Index) = '=' then\n-               Index := Index + 1;\n-               if Form (Index) = '(' then\n-                  while Index < Form'Last loop\n-                     Index := Index + 1;\n-\n-                     --  Loop through the RMS Keys and dispatch\n-\n-                     for Key in RMS_Keys loop\n-                        declare\n-                           KImage : String := RMS_Keys'Image (Key);\n-\n-                        begin\n-                           Klen := KImage'Length;\n-                           To_Lower (KImage);\n-\n-                           if Form (Index .. Index + Klen - 1) = KImage then\n-                              case Key is\n-                                 when Context =>\n-                                    Index := Form_RMS_Context_Key\n-                                     (Form (Index + Klen .. Form'Last),\n-                                      VMS_Form);\n-                                    exit;\n-\n-                                 when others =>\n-                                    raise Use_Error\n-                                     with \"unimplemented VMS RMS Form Key\";\n-                              end case;\n-                           end if;\n-                        end;\n-                     end loop;\n-\n-                     if Form (Index) = ')' then\n-\n-                        --  Done, erase the unneeded trailing comma and return\n-\n-                        for J in reverse VMS_Form'First .. VMS_Form'Last loop\n-                           if VMS_Form (J) = ',' then\n-                              VMS_Form (J) := ASCII.NUL;\n-                              return;\n-                           end if;\n-                        end loop;\n-\n-                        --  Shouldn't be possible to get here\n-\n-                        raise Use_Error;\n-\n-                     elsif Form (Index) = ',' then\n-\n-                        --  Another key ahead, exit inner loop\n-\n-                        null;\n-\n-                     else\n-\n-                        --  Keyword value not terminated correctly\n-\n-                        raise Use_Error with \"malformed VMS RMS Form\";\n-                     end if;\n-                  end loop;\n-               end if;\n-            end if;\n-\n-            --  Found the keyword, but not followed by correct syntax\n-\n-            raise Use_Error with \"malformed VMS RMS Form\";\n-         end if;\n-      end loop;\n-   end Form_VMS_RMS_Keys;\n-\n    -------------\n    -- Is_Open --\n    -------------\n@@ -1104,17 +896,6 @@ package body System.File_IO is\n          end;\n       end if;\n \n-      --  Acquire settings of target specific form parameters on VMS. Only\n-      --  Context is currently implemented, for forcing a byte stream mode\n-      --  read. On non-VMS systems, the settings are ultimately ignored in\n-      --  the implementation of __gnat_fopen.\n-\n-      --  Should a warning be issued on non-VMS systems?  That's not possible\n-      --  without testing System.OpenVMS boolean which isn't present in most\n-      --  non-VMS versions of package System.\n-\n-      Form_VMS_RMS_Keys (Formstr, VMS_Formstr);\n-\n       --  If we were given a stream (call from xxx.C_Streams.Open), then set\n       --  the full name to the given one, and skip to end of processing.\n \n@@ -1286,19 +1067,8 @@ package body System.File_IO is\n             --  since by the time of the delete, the current working directory\n             --  may have changed and we do not want to delete a different file.\n \n-            if VMS_Formstr = null then\n-               Stream := fopen (Namestr'Address, Fopstr'Address, Encoding,\n-                                Null_Address);\n-            else\n-               Stream := fopen (Namestr'Address, Fopstr'Address, Encoding,\n-                                VMS_Formstr.all'Address);\n-            end if;\n-\n-            --   No need to keep this around\n-\n-            if VMS_Formstr /= null then\n-               Free (VMS_Formstr);\n-            end if;\n+            Stream :=\n+              fopen (Namestr'Address, Fopstr'Address, Encoding, Null_Address);\n \n             if Stream = NULL_Stream then\n \n@@ -1450,21 +1220,9 @@ package body System.File_IO is\n            (Mode, File.Text_Encoding in Text_Content_Encoding,\n             False, File.Access_Method, Fopstr);\n \n-         Form_VMS_RMS_Keys (File.Form.all, VMS_Formstr);\n-\n-         if VMS_Formstr = null then\n-            File.Stream := freopen\n-              (File.Name.all'Address, Fopstr'Address, File.Stream,\n-               File.Encoding, Null_Address);\n-         else\n-            File.Stream := freopen\n-              (File.Name.all'Address, Fopstr'Address, File.Stream,\n-               File.Encoding, VMS_Formstr.all'Address);\n-         end if;\n-\n-         if VMS_Formstr /= null then\n-            Free (VMS_Formstr);\n-         end if;\n+         File.Stream := freopen\n+           (File.Name.all'Address, Fopstr'Address, File.Stream,\n+            File.Encoding, Null_Address);\n \n          if File.Stream = NULL_Stream then\n             Close (File_Ptr);\n@@ -1483,9 +1241,9 @@ package body System.File_IO is\n    procedure Write_Buf (File : AFCB_Ptr; Buf : Address; Siz : size_t) is\n    begin\n       --  Note: for most purposes, the Siz and 1 parameters in the fwrite call\n-      --  could be reversed, but on VMS, this is a better choice, since for\n-      --  some file formats, reversing the parameters results in records of one\n-      --  byte each.\n+      --  could be reversed, but we have encountered systems where this is a\n+      --  better choice, since for some file formats, reversing the parameters\n+      --  results in records of one byte each.\n \n       SSL.Abort_Defer.all;\n "}, {"sha": "49d868f862058dc2aef3ceff2aa2cc262a3130c1", "filename": "gcc/ada/s-os_lib.adb", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.adb?ref=78f8727c3af1dbdcf56f698d15c0f4b046009253", "patch": "@@ -96,8 +96,8 @@ package body System.OS_Lib is\n       Stdout : Boolean);\n    --  Internal routine to implement two Create_Temp_File routines. If Stdout\n    --  is set to True the created descriptor is stdout-compatible, otherwise\n-   --  it might not be depending on the OS (VMS is one example). The first two\n-   --  parameters are as in Create_Temp_File.\n+   --  it might not be depending on the OS. The first two parameters are as\n+   --  in Create_Temp_File.\n \n    function C_String_Length (S : Address) return Integer;\n    --  Returns the length of C (null-terminated) string at S, or 0 for\n@@ -416,8 +416,8 @@ package body System.OS_Lib is\n          loop\n             R := Read (From, Buffer (1)'Address, Buf_Size);\n \n-            --  For VMS, the buffer may not be full. So, we need to try again\n-            --  until there is nothing to read.\n+            --  On some systems, the buffer may not be full. So, we need to try\n+            --  again until there is nothing to read.\n \n             exit when R = 0;\n \n@@ -2019,12 +2019,7 @@ package body System.OS_Lib is\n          end loop;\n       end if;\n \n-      --  Resolve directory names for Windows (formerly also VMS)\n-\n-      --  On VMS, if we have a Unix path such as /temp/..., and TEMP is a\n-      --  logical name, we must not try to resolve this logical name, because\n-      --  it may have multiple equivalences and if resolved we will only\n-      --  get the first one.\n+      --  Resolve directory names for Windows\n \n       if On_Windows then\n "}, {"sha": "78a3eeb7c6768c929c8029f863840988110ca078", "filename": "gcc/ada/s-os_lib.ads", "status": "modified", "additions": 10, "deletions": 20, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fs-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fs-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.ads?ref=78f8727c3af1dbdcf56f698d15c0f4b046009253", "patch": "@@ -368,7 +368,7 @@ package System.OS_Lib is\n    --  effect of \"cp -p\" on Unix systems, and None corresponds to the typical\n    --  effect of \"cp\" on Unix systems.\n \n-   --  Note: Time_Stamps and Full are not supported on VMS and VxWorks 5\n+   --  Note: Time_Stamps and Full are not supported on VxWorks 5\n \n    procedure Copy_File\n      (Name     : String;\n@@ -384,20 +384,14 @@ package System.OS_Lib is\n    --  True or False indicating if the copy is successful (depending on the\n    --  specified Mode).\n    --\n-   --  Note: this procedure is only supported to a very limited extent on VMS.\n-   --  The only supported mode is Overwrite, and the only supported value for\n-   --  Preserve is None, resulting in the default action which for Overwrite\n-   --  is to leave attributes unchanged. Furthermore, the copy only works for\n-   --  simple text files.\n-\n    procedure Copy_Time_Stamps (Source, Dest : String; Success : out Boolean);\n    --  Copy Source file time stamps (last modification and last access time\n    --  stamps) to Dest file. Source and Dest must be valid filenames,\n    --  furthermore Dest must be writable. Success will be set to True if the\n    --  operation was successful and False otherwise.\n    --\n-   --  Note: this procedure is not supported on VMS and VxWorks 5. On these\n-   --  platforms, Success is always set to False.\n+   --  Note: this procedure is not supported on VxWorks 5. On this platform,\n+   --  Success is always set to False.\n \n    procedure Set_File_Last_Modify_Time_Stamp (Name : String; Time : OS_Time);\n    --  Given the name of a file or directory, Name, set the last modification\n@@ -484,17 +478,13 @@ package System.OS_Lib is\n    --  e.g. A is a symbolic link for B, and B is a symbolic link for A), then\n    --  Normalize_Pathname returns an empty string.\n    --\n-   --  In VMS, if Name follows the VMS syntax file specification, it is first\n-   --  converted into Unix syntax. If the conversion fails, Normalize_Pathname\n-   --  returns an empty string.\n-   --\n    --  For case-sensitive file systems, the value of Case_Sensitive parameter\n    --  is ignored. For file systems that are not case-sensitive, such as\n-   --  Windows and OpenVMS, if this parameter is set to False, then the file\n-   --  and directory names are folded to lower case. This allows checking\n-   --  whether two files are the same by applying this function to their names\n-   --  and comparing the results. If Case_Sensitive is set to True, this\n-   --  function does not change the casing of file and directory names.\n+   --  Windows, if this parameter is set to False, then the file and directory\n+   --  names are folded to lower case. This allows checking whether two files\n+   --  are the same by applying this function to their names and comparing the\n+   --  results. If Case_Sensitive is set to True, this function does not change\n+   --  the casing of file and directory names.\n \n    function Is_Absolute_Path (Name : String) return Boolean;\n    --  Returns True if Name is an absolute path name, i.e. it designates a\n@@ -894,7 +884,7 @@ package System.OS_Lib is\n \n    --     On Solaris: fork1, followed in the child process by execv\n \n-   --     On other Unix-like systems, and on VMS: fork, followed in the child\n+   --     On other Unix-like systems: fork, followed in the child\n    --     process by execv.\n \n    --     On vxworks, nucleus, and RTX, spawning of processes is not supported\n@@ -960,7 +950,7 @@ package System.OS_Lib is\n    --  set an explicit null as the value, or to remove the entry, this is\n    --  operating system dependent). Note that any following calls to Spawn\n    --  will pass an environment to the spawned process that includes the\n-   --  changes made by Setenv calls. This procedure is not available on VMS.\n+   --  changes made by Setenv calls.\n \n    procedure OS_Exit (Status : Integer);\n    pragma No_Return (OS_Exit);"}, {"sha": "5013bcd81d0ce7eb9416214dfc8aebc84c907661", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=78f8727c3af1dbdcf56f698d15c0f4b046009253", "patch": "@@ -1753,8 +1753,9 @@ package body Sem_Ch5 is\n          if not Is_Array_Type (Etype (Iter_Name)) then\n             declare\n                Iterator : constant Entity_Id :=\n-                  Find_Value_Of_Aspect\n-                    (Etype (Iter_Name), Aspect_Default_Iterator);\n+                            Find_Value_Of_Aspect\n+                              (Etype (Iter_Name), Aspect_Default_Iterator);\n+\n                I  : Interp_Index;\n                It : Interp;\n \n@@ -1852,11 +1853,11 @@ package body Sem_Ch5 is\n \n             --  The name in the renaming declaration may be a function call.\n             --  Indicate that it does not come from source, to suppress\n-            --  spurious warnings on renamings of parameterless functions,\n-            --  a common enough idiom in user-defined iterators.\n-            --  The entity of the renaming must be a variable, because user-\n-            --  defined Iterate function may have in-out parameters, even\n-            --  if predefined ones do not.\n+            --  spurious warnings on renamings of parameterless functions, a\n+            --  common enough idiom in user-defined iterators. The entity of\n+            --  the renaming must be a variable, because user- defined Iterate\n+            --  function may have in-out parameters, even if predefined ones do\n+            --  not.\n \n             Decl :=\n               Make_Object_Renaming_Declaration (Loc,"}, {"sha": "b2e495a0edab072159d24c873867a90a85dec94d", "filename": "gcc/ada/sem_vfpt.adb", "status": "modified", "additions": 6, "deletions": 31, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fsem_vfpt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fsem_vfpt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_vfpt.adb?ref=78f8727c3af1dbdcf56f698d15c0f4b046009253", "patch": "@@ -23,11 +23,9 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with CStand;   use CStand;\n-with Einfo;    use Einfo;\n-with Opt;      use Opt;\n-with Stand;    use Stand;\n-with Targparm; use Targparm;\n+with CStand; use CStand;\n+with Einfo;  use Einfo;\n+with Stand;  use Stand;\n \n package body Sem_VFpt is\n \n@@ -134,32 +132,9 @@ package body Sem_VFpt is\n \n    procedure Set_Standard_Fpt_Formats is\n    begin\n-      --  IEEE case\n-\n-      if Opt.Float_Format = 'I' then\n-         Set_IEEE_Short (Standard_Float);\n-         Set_IEEE_Long  (Standard_Long_Float);\n-         Set_IEEE_Long  (Standard_Long_Long_Float);\n-\n-      --  Vax float case\n-\n-      else\n-         Set_F_Float (Standard_Float);\n-\n-         if Opt.Float_Format_Long = 'D' then\n-            Set_D_Float (Standard_Long_Float);\n-         else\n-            Set_G_Float (Standard_Long_Float);\n-         end if;\n-\n-         --  Note: Long_Long_Float gets set only in the real VMS case,\n-         --  because this gives better results for testing out the use\n-         --  of VAX float on non-VMS environments with the -gnatdm switch.\n-\n-         if OpenVMS_On_Target then\n-            Set_G_Float (Standard_Long_Long_Float);\n-         end if;\n-      end if;\n+      Set_IEEE_Short (Standard_Float);\n+      Set_IEEE_Long  (Standard_Long_Float);\n+      Set_IEEE_Long  (Standard_Long_Long_Float);\n    end Set_Standard_Fpt_Formats;\n \n end Sem_VFpt;"}, {"sha": "1c9486612d752774898161084a1a87b0e3a4e3ca", "filename": "gcc/ada/sem_vfpt.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fsem_vfpt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fsem_vfpt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_vfpt.ads?ref=78f8727c3af1dbdcf56f698d15c0f4b046009253", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1997-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1997-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "12ff465269d0938481f0ad29381a7893f0180888", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=78f8727c3af1dbdcf56f698d15c0f4b046009253", "patch": "@@ -499,7 +499,7 @@ package Snames is\n    Name_External                       : constant Name_Id := N + $; -- GNAT\n    Name_Finalize_Storage_Only          : constant Name_Id := N + $; -- GNAT\n    Name_Global                         : constant Name_Id := N + $; -- GNAT\n-   Name_Ident                          : constant Name_Id := N + $; -- VMS\n+   Name_Ident                          : constant Name_Id := N + $; -- GNAT\n    Name_Implementation_Defined         : constant Name_Id := N + $; -- GNAT\n    Name_Implemented                    : constant Name_Id := N + $; -- Ada 12\n    Name_Import                         : constant Name_Id := N + $;\n@@ -801,7 +801,6 @@ package Snames is\n    Name_Variant                        : constant Name_Id := N + $;\n    Name_VAX_Float                      : constant Name_Id := N + $;\n    Name_Vector                         : constant Name_Id := N + $;\n-   Name_VMS                            : constant Name_Id := N + $;\n    Name_Vtable_Ptr                     : constant Name_Id := N + $;\n    Name_Warn                           : constant Name_Id := N + $;\n    Name_Working_Storage                : constant Name_Id := N + $;\n@@ -814,9 +813,6 @@ package Snames is\n    --  implemented in all Ada modes. Full descriptions of these implementation\n    --  dependent attributes may be found in the appropriate Sem_Attr section.\n \n-   --  The entries marked VMS are recognized only in OpenVMS implementations\n-   --  of GNAT, and are treated as illegal in all other contexts.\n-\n    First_Attribute_Name                : constant Name_Id := N + $;\n    Name_Abort_Signal                   : constant Name_Id := N + $; -- GNAT\n    Name_Access                         : constant Name_Id := N + $;"}, {"sha": "0b97c121da22e5f1e6486b467023e524e73b2070", "filename": "gcc/ada/xr_tabls.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fxr_tabls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78f8727c3af1dbdcf56f698d15c0f4b046009253/gcc%2Fada%2Fxr_tabls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxr_tabls.adb?ref=78f8727c3af1dbdcf56f698d15c0f4b046009253", "patch": "@@ -1135,6 +1135,11 @@ package body Xr_Tabls is\n \n          Buffer (Read_Ptr) := EOF;\n          Contents := new String'(Buffer (1 .. Read_Ptr));\n+\n+         if Read_Ptr /= Length + 1 then\n+            raise Ada.Text_IO.End_Error;\n+         end if;\n+\n          Close (FD);\n       end;\n    end Read_File;"}]}