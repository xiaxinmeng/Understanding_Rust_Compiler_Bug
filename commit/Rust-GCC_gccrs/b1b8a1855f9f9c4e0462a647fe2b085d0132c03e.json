{"sha": "b1b8a1855f9f9c4e0462a647fe2b085d0132c03e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFiOGExODU1ZjlmOWM0ZTA0NjJhNjQ3ZmUyYjA4NWQwMTMyYzAzZQ==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2007-07-08T14:50:37Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2007-07-08T14:50:37Z"}, "message": "re PR testsuite/25241 ([C++] DejaGNU does not distinguish between errors and warnings)\n\n2007-07-08  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n\n\tPR testsuite/25241\ntestsuite/\n\t* gcc.dg/20041213-1.c: Don't use default -pedantic-errors to allow\n\tdiscern pedantic diagnostics and errors.\n\t* gcc.dg/empty2.c: Add -pedantic, so it actually produces a warning\n\tand not an error.\n\t* gcc.dg/20050121-1.c: This is an error and not a warning.\n\t* gcc.target/i386/sseregparm-2.c:  Likewise.\n\t* gcc.target/i386/20060512-4.c: This is a warning and not an error.\n\t* gcc.dg/charset/attribute2.c: Likewise.\n\t* gcc.dg/bitfld-1.c: Likewise.\n\t* gcc.dg/pack-test-2.c: Likewise.\n\t* gcc.dg/940510-1.c: Match separately error and warning.\n\t* gcc.dg/array-2.c: Match separately multiple messages. The second\n\tdiagnostic is a pedantic warning and not an error.\n\t* gcc.dg/pr14475.c: Match separately multiple messages.\n\t* gcc.dg/pr18809-1.c: Likewise.\n\t* gcc.dg/pr27953.c: Likewise.\n\t* gcc.dg/vla-init-1.c: Likewise.\n\t* gcc.dg/redecl-1.c: Fix wrong use of dg-error and dg-warning.\n\nFrom-SVN: r126461", "tree": {"sha": "6c98b3be03827e9575c8d91dbae2c7db990c42e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c98b3be03827e9575c8d91dbae2c7db990c42e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/comments", "author": null, "committer": null, "parents": [{"sha": "8398345541cee63fccf1baf53e5bca1ac3897a71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8398345541cee63fccf1baf53e5bca1ac3897a71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8398345541cee63fccf1baf53e5bca1ac3897a71"}], "stats": {"total": 142, "additions": 90, "deletions": 52}, "files": [{"sha": "1eb39df47da0eaa988a1cf582d9bf0bbc9b35f81", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b1b8a1855f9f9c4e0462a647fe2b085d0132c03e", "patch": "@@ -1,3 +1,25 @@\n+2007-07-08  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n+\n+\tPR testsuite/25241\n+\t* gcc.dg/20041213-1.c: Don't use default -pedantic-errors to allow\n+\tdiscern pedantic diagnostics and errors.\n+\t* gcc.dg/empty2.c: Add -pedantic, so it actually produces a warning\n+\tand not an error.\n+\t* gcc.dg/20050121-1.c: This is an error and not a warning.\n+\t* gcc.target/i386/sseregparm-2.c:  Likewise.\n+\t* gcc.target/i386/20060512-4.c: This is a warning and not an error.\n+\t* gcc.dg/charset/attribute2.c: Likewise.\n+\t* gcc.dg/bitfld-1.c: Likewise.\n+\t* gcc.dg/pack-test-2.c: Likewise.\n+\t* gcc.dg/940510-1.c: Match separately error and warning.\n+\t* gcc.dg/array-2.c: Match separately multiple messages. The second\n+\tdiagnostic is a pedantic warning and not an error.\n+\t* gcc.dg/pr14475.c: Match separately multiple messages.\n+\t* gcc.dg/pr18809-1.c: Likewise.\n+\t* gcc.dg/pr27953.c: Likewise.\n+\t* gcc.dg/vla-init-1.c: Likewise.\n+\t* gcc.dg/redecl-1.c: Fix wrong use of dg-error and dg-warning.\n+\n 2007-07-07  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/32644"}, {"sha": "f7ef30a62f98be0f976f4f035f35d3964af689d6", "filename": "gcc/testsuite/gcc.dg/20041213-1.c", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.dg%2F20041213-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.dg%2F20041213-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20041213-1.c?ref=b1b8a1855f9f9c4e0462a647fe2b085d0132c03e", "patch": "@@ -1,28 +1,29 @@\n /* { dg-do compile } */\n+/* { dg-options \"\" } */\n /* test redeclarations with void and implicit int */\n-extern foo1(); /* { dg-error \"error: previous declaration\" } */\n-extern void foo1(); /* { dg-error \"error: conflicting types\" } */\n+extern foo1(); /* { dg-error \"previous declaration\" } */\n+extern void foo1(); /* { dg-error \"conflicting types\" } */\n \n-extern void foo2(); /* { dg-error \"error: previous declaration\" } */\n-extern foo2(); /* { dg-error \"error: conflicting types\" } */\n+extern void foo2(); /* { dg-error \"previous declaration\" } */\n+extern foo2(); /* { dg-error \"conflicting types\" } */\n \n-void foo3() {} /* { dg-error \"error: previous definition\" } */\n-extern foo3(); /* { dg-error \"error: conflicting types\" } */\n+void foo3() {} /* { dg-error \"previous definition\" } */\n+extern foo3(); /* { dg-error \"conflicting types\" } */\n \n-extern foo4(); /* { dg-error \"error: previous declaration\" } */\n-void foo4() {} /* { dg-error \"error: conflicting types\" } */\n+extern foo4(); /* { dg-error \"previous declaration\" } */\n+void foo4() {} /* { dg-error \"conflicting types\" } */\n \n extern void foo5(); /* { dg-warning \"previous declaration\" } */\n foo5() {} /* { dg-warning \"conflicting types\" } */\n \n-foo6() {} /* { dg-error \"error: previous definition\" } */\n-extern void foo6(); /* { dg-error \"error: conflicting types\" } */\n+foo6() {} /* { dg-error \"previous definition\" } */\n+extern void foo6(); /* { dg-error \"conflicting types\" } */\n \n-foo7() {} /* { dg-error \"error: previous definition\" } */\n-void foo7() {} /* { dg-error \"error: conflicting types\" } */\n+foo7() {} /* { dg-error \"previous definition\" } */\n+void foo7() {} /* { dg-error \"conflicting types\" } */\n \n-void foo8() {} /* { dg-error \"error: previous definition\" } */\n-foo8() {} /* { dg-error \"error: conflicting types\" } */\n+void foo8() {} /* { dg-error \"previous definition\" } */\n+foo8() {} /* { dg-error \"conflicting types\" } */\n \n int use9() { foo9(); } /* { dg-warning \"previous implicit declaration\" } */\n extern void foo9(); /* { dg-warning \"conflicting types\" } */"}, {"sha": "3fe299a6dc2b7318bf5bc4227d0bc6f517731b93", "filename": "gcc/testsuite/gcc.dg/20050121-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.dg%2F20050121-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.dg%2F20050121-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20050121-1.c?ref=b1b8a1855f9f9c4e0462a647fe2b085d0132c03e", "patch": "@@ -5,5 +5,5 @@\n void foo()\n {\n   return;\n-  break;\t/* { dg-warning \"break statement not within\" } */\n+  break;\t/* { dg-error \"break statement not within\" } */\n }"}, {"sha": "2c27e0090f9dca3eee3ba01de7184b842ab8e7b6", "filename": "gcc/testsuite/gcc.dg/940510-1.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.dg%2F940510-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.dg%2F940510-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F940510-1.c?ref=b1b8a1855f9f9c4e0462a647fe2b085d0132c03e", "patch": "@@ -1,3 +1,5 @@\n /* { dg-do compile } */\n /* { dg-options \"-std=c89 -pedantic\" } */\n-struct { int a[]; } x = { 0 };\t/* { dg-error \"(flexible array member)|(near initialization)\" } */\n+struct { int a[]; } x = { 0 };\t/* { dg-warning \"ISO C90 does not support flexible array members\" } */\n+/* { dg-error \"flexible array member in otherwise empty struct\"  \"\" { target *-*-* }  3 } */\n+"}, {"sha": "497c58666e6efdcab0e945fc618790cbb29ddd47", "filename": "gcc/testsuite/gcc.dg/array-2.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.dg%2Farray-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.dg%2Farray-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Farray-2.c?ref=b1b8a1855f9f9c4e0462a647fe2b085d0132c03e", "patch": "@@ -7,7 +7,8 @@\n struct f { int w; int x[]; };\n struct g { struct f f; };\n struct g g1 = { { 0, { } } };\n-struct g g2 = { { 0, { 1 } } }; /* { dg-error \"(nested context)|(near initialization)\" \"nested\" } */\n-\n+struct g g2 = { { 0, { 1 } } }; /* { dg-error \"nested context\" \"nested\" } */\n+\t\t\t\t/* { dg-error \"near init\" \"near\" { target *-*-* } 10 } */\n struct h { int x[0]; int y; };\n-struct h h1 = { { 0 }, 1 }; /* { dg-error \"(excess elements)|(near initialization)\" \"before end\" } */\n+struct h h1 = { { 0 }, 1 }; /* { dg-warning \"excess elements\" \"excess\" } */\n+\t\t\t    /* { dg-warning \"near init\" \"before end\" { target *-*-* } 13 } */"}, {"sha": "fa835f2299f69bedd6bc05af25c7660a3040fef7", "filename": "gcc/testsuite/gcc.dg/bitfld-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbitfld-1.c?ref=b1b8a1855f9f9c4e0462a647fe2b085d0132c03e", "patch": "@@ -24,7 +24,7 @@ struct bf1\n   float f: 1;\t\t\t/* { dg-error \"invalid type\" } */\n   unsigned long g: 5;\t\t/* { dg-warning \"GCC extension|ISO C\" } */\n   ui h: 5;\n-  enum foo i: 2;\t\t/* { dg-error \"narrower\" } */\n+  enum foo i: 2;\t\t/* { dg-warning \"narrower\" } */\n     /* { dg-warning \"GCC extension|ISO C\" \"extension\" { target *-*-* } 27 } */\n   enum foo j: 3;\t\t/* { dg-warning \"GCC extension|ISO C\" } */\n   unsigned int k: 256;\t\t/* { dg-error \"exceeds its type\" } */"}, {"sha": "427e94979f81b18f72c44832035a53c2a4a3da2b", "filename": "gcc/testsuite/gcc.dg/charset/attribute2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.dg%2Fcharset%2Fattribute2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.dg%2Fcharset%2Fattribute2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcharset%2Fattribute2.c?ref=b1b8a1855f9f9c4e0462a647fe2b085d0132c03e", "patch": "@@ -4,5 +4,5 @@\n /* { dg-do compile }\n    { dg-require-iconv \"IBM1047\" }\n  */\n-int foo __attribute__ ((walrus)); /* { dg-error \"walrus\" \"ignored\" } */\n+int foo __attribute__ ((walrus)); /* { dg-warning \"walrus\" \"ignored\" } */\n char x[] = \"foobar\";"}, {"sha": "acc1ac8ddcb4a10158467b599c48bbae64f01c7e", "filename": "gcc/testsuite/gcc.dg/empty2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.dg%2Fempty2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.dg%2Fempty2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fempty2.c?ref=b1b8a1855f9f9c4e0462a647fe2b085d0132c03e", "patch": "@@ -1,8 +1,8 @@\n /* { dg-do compile } */\n-\n+/* { dg-options \"-pedantic\" } */\n double d=0;\n \n-struct A {} a; /* { dg-warning \"(has no members)\" } */\n+struct A {} a; /* { dg-warning \"struct has no members\" } */\n \n void foo(struct A x)\n {"}, {"sha": "8cb89f488e3ff4a7e0c6fd5c3780c44661eb138d", "filename": "gcc/testsuite/gcc.dg/pack-test-2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.dg%2Fpack-test-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.dg%2Fpack-test-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpack-test-2.c?ref=b1b8a1855f9f9c4e0462a647fe2b085d0132c03e", "patch": "@@ -3,23 +3,23 @@\n \n /* { dg-do compile { target *-*-linux* *-*-cygwin* powerpc*-*-eabi* } } */\n \n-#pragma pack(pop)               /* { dg-error \"without matching\" } */\n+#pragma pack(pop)               /* { dg-warning \"without matching\" } */\n \n #pragma pack(push)\n #pragma pack(pop)               /* reset */\n \n #pragma pack(push, foo, 1)\n-#pragma pack(pop, foo, 1)       /* { dg-error \"malformed\" } (/\n+#pragma pack(pop, foo, 1)       /* { dg-warning \"malformed\" } (/\n #pragma pack(pop)               /* reset */\n \n #pragma pack(push, foo, 1)\n-#pragma pack(pop, bar)          /* { dg-error \"without matching\" } */\n+#pragma pack(pop, bar)          /* { dg-warning \"without matching\" } */\n #pragma pack(pop)               /* reset */\n \n #pragma pack(push, foo, 1)\n #pragma pack(pop)\n-#pragma pack(pop, foo)          /* { dg-error \"without matching\" } */\n+#pragma pack(pop, foo)          /* { dg-warning \"without matching\" } */\n \n-#pragma pack(push, foo, 3)      /* { dg-error \"small power of two\" } */\n+#pragma pack(push, foo, 3)      /* { dg-warning \"small power of two\" } */\n \n extern int blah;\t/* prevent \"ISO C forbids an empty source file\" */"}, {"sha": "4fa5b0436614184b1c9216b0d0841a05a1807649", "filename": "gcc/testsuite/gcc.dg/pr14475.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr14475.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr14475.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr14475.c?ref=b1b8a1855f9f9c4e0462a647fe2b085d0132c03e", "patch": "@@ -3,6 +3,8 @@\n \n struct tree_common\n {\n-  enum tree_code code : 8; /* {dg-error \"\" \"\" } */\n-/* { dg-warning \"\" \"\" { target *-*-* } 6 } */\n+  enum tree_code code : 8; /* { dg-error \"ISO C forbids forward references to\" \"\" } */\n+  /* { dg-error \"type of bit-field .code. is a GCC extension\" \"\" { target *-*-* } 6 } */\n+  /* { dg-warning \"narrower than values of its type\" \"\" { target *-*-* } 6 } */\n+  /* { dg-error \"incomplete type\" \"\" { target *-*-* } 6 } */\n };"}, {"sha": "27f2be9ef0421d7b280005a6257c47aaecdb71ce", "filename": "gcc/testsuite/gcc.dg/pr18809-1.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr18809-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr18809-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr18809-1.c?ref=b1b8a1855f9f9c4e0462a647fe2b085d0132c03e", "patch": "@@ -3,5 +3,8 @@\n \n /* { dg-do compile } */\n \n-void foo(enum E e) {}   /* { dg-error \"\" } */\n+void foo(enum E e) {}   /* { dg-error \"forward ref\" \"forward\" } */\n+\t\t\t/* { dg-warning \"declared\" \"declared\" { target *-*-* } 6 } */\n+\t\t\t/* { dg-warning \"scope\" \"scope\" { target *-*-* } 6 } */\n+\t\t\t/* { dg-error \"incomplete\" \"incomplete\" { target *-*-* } 6 } */\n void bar() { foo(0); }  /* { dg-error \"formal\" } */"}, {"sha": "7df46b1d8e1f62131521663deeaf3ebdd52b0b79", "filename": "gcc/testsuite/gcc.dg/pr27953.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr27953.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr27953.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr27953.c?ref=b1b8a1855f9f9c4e0462a647fe2b085d0132c03e", "patch": "@@ -1,4 +1,8 @@\n /* PR c/27953 */\n \n-void foo(struct A a) {}  /* { dg-warning \"parameter list|definition|incomplete type\" } */\n+void foo(struct A a) {}  /* { dg-warning \"declared inside parameter list\" } */\n+/* { dg-warning \"its scope is only\" \"\" { target *-*-* } 3 } */\n+/* { dg-error \"incomplete type\" \"\" { target *-*-* } 3 } */\n+\n void foo() {}            /* { dg-error \"redefinition\" } */\n+/* { dg-error \"previous definition\" \"\" { target *-*-* } 3 } */"}, {"sha": "c76004e0de47b1d776021c4edf872f0c881c619e", "filename": "gcc/testsuite/gcc.dg/redecl-1.c", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.dg%2Fredecl-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.dg%2Fredecl-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fredecl-1.c?ref=b1b8a1855f9f9c4e0462a647fe2b085d0132c03e", "patch": "@@ -52,50 +52,51 @@ void test3(void)\n \n void prime4(void)\n {\n-  bar4();\t\t\t/* { dg-error \"previous|implicit\" } */\n+  bar4();\t\t\t/* { dg-warning \"implicit declaration of function\" } */\n }\n \n void test4(void)\n {\n   extern double bar4(double);\t/* { dg-error \"conflict\" } */\n+/* { dg-error \"previous implicit declaration\" \"\" { target *-*-* } 55 } */\n }\n \n /* Implicit decl, clashing with extern at previous function scope.  */\n \n void prime5(void)\n {\n-  extern double bar5(double);\t/* { dg-error \"previous\" \"\" } */\n-}\n+  extern double bar5(double);\t/* { dg-message \"note: previous declaration\" \"\" } */\n+} /* { dg-error \"previous implicit declaration\" \"\" { target *-*-* } 68 } */\n \n void test5(void)\n {\n-  bar5(1);\t\t\t/* { dg-error \"implicit\" } */\n-}\n+  bar5(1);\t\t\t/* { dg-warning \"warning: implicit declaration of function\" } */\n+} /* { dg-error \"error: incompatible implicit declaration\" \"\" { target *-*-* } 73 } */\n \n /* Extern then static, both at file scope.  */\n \n-extern int test6(int);\t\t/* { dg-warning \"previous\" \"\" } */\n+extern int test6(int);\t\t/* { dg-error \"previous\" \"\" } */\n static int test6(int x)\t\t\t\n-{ return x; }\t\t\t/* { dg-warning \"follows non-static\" } */\n+{ return x; }\t\t\t/* { dg-error \"follows non-static\" } */\n \n \n /* Extern then static, extern at previous function scope.  */\n \n void prime7(void)\n {\n-  extern int test7(int);\t/* { dg-warning \"previous\" \"\" } */\n+  extern int test7(int);\t/* { dg-error \"previous\" \"\" } */\n }\n \n static int test7(int x)\n-{ return x; }\t\t\t/* { dg-warning \"follows non-static\" } */\n+{ return x; }\t\t\t/* { dg-error \"follows non-static\" } */\n \n /* Implicit decl then static.  */\n \n void prime8(void)\n {\n-  test8();\t\t\t/* { dg-warning \"previous\" \"\" } */\n-                                /* { dg-warning \"implicit\" \"implicit\" { target *-*-* } 96 } */\n+  test8();\t\t\t/* { dg-error \"previous\" \"\" } */\n+                                /* { dg-warning \"implicit\" \"implicit\" { target *-*-* } 97 } */\n }\n \n static int test8(int x)\n-{ return x; }\t\t\t/* { dg-warning \"follows non-static\" } */\n+{ return x; }\t\t\t/* { dg-error \"follows non-static\" } */"}, {"sha": "68e7d651210dac1ab2d6bf64aed40447ff2dc009", "filename": "gcc/testsuite/gcc.dg/vla-init-1.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.dg%2Fvla-init-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.dg%2Fvla-init-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvla-init-1.c?ref=b1b8a1855f9f9c4e0462a647fe2b085d0132c03e", "patch": "@@ -9,5 +9,7 @@ int a;\n void\n foo (void)\n {\n-  int x[a] = { 1 }; /* { dg-error \"init\" \"VLA init\" } */\n+  int x[a] = { 1 }; /* { dg-error \"variable-sized object may not be initialized\" \"VLA init\" } */\n+  /* { dg-warning \"excess elements in array initializer\" \"\" { target *-*-* } 12 } */\n+  /* { dg-warning \"near initialization\" \"\" { target *-*-* } 12 } */\n }"}, {"sha": "372a3b10df7136e3e64747c3dbe7ec8e581df176", "filename": "gcc/testsuite/gcc.target/i386/20060512-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20060512-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20060512-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2F20060512-4.c?ref=b1b8a1855f9f9c4e0462a647fe2b085d0132c03e", "patch": "@@ -6,7 +6,7 @@ outer_function (int x, int y)\n {\n   int __attribute__ ((__noinline__))\n   nested_function (int x, int y)\n-    { /* { dg-error \"-mstackrealign ignored for nested functions\" } */\n+    { /* { dg-warning \"-mstackrealign ignored for nested functions\" } */\n       return (x + y);\n     }\n   return (3 + nested_function (x, y));"}, {"sha": "84bf58925c70fe705d38ce5e68d6ad4d3ff0bcda", "filename": "gcc/testsuite/gcc.target/i386/sseregparm-2.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsseregparm-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b8a1855f9f9c4e0462a647fe2b085d0132c03e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsseregparm-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsseregparm-2.c?ref=b1b8a1855f9f9c4e0462a647fe2b085d0132c03e", "patch": "@@ -4,14 +4,14 @@\n \n float essef(float) __attribute__((sseregparm));\n double essed(double) __attribute__((sseregparm));\n-float __attribute__((sseregparm, noinline)) ssef(float f) { return f; } /* { dg-warning \"SSE\" } */\n-double __attribute__((sseregparm, noinline)) ssed(double d) { return d; } /* { dg-warning \"SSE\" } */\n+float __attribute__((sseregparm, noinline)) ssef(float f) { return f; } /* { dg-error \"SSE\" } */\n+double __attribute__((sseregparm, noinline)) ssed(double d) { return d; } /* { dg-error \"SSE\" } */\n extern double d;\n extern float f;\n void test(void)\n {\n-  f = essef(f); /* { dg-warning \"SSE\" } */\n-  d = essed(d); /* { dg-warning \"SSE\" } */\n-  f = ssef(f); /* { dg-warning \"SSE\" } */\n-  d = ssed(d); /* { dg-warning \"SSE\" } */\n+  f = essef(f); /* { dg-error \"SSE\" } */\n+  d = essed(d); /* { dg-error \"SSE\" } */\n+  f = ssef(f); /* { dg-error \"SSE\" } */\n+  d = ssed(d); /* { dg-error \"SSE\" } */\n }"}]}