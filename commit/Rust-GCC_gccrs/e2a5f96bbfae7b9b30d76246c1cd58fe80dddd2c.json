{"sha": "e2a5f96bbfae7b9b30d76246c1cd58fe80dddd2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJhNWY5NmJiZmFlN2I5YjMwZDc2MjQ2YzFjZDU4ZmU4MGRkZGQyYw==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@redhat.com", "date": "2001-01-04T23:28:00Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2001-01-04T23:28:00Z"}, "message": "integrate.c (expand_inline_function): Don't put a virtual register into the reg map.\n\n\t* integrate.c (expand_inline_function): Don't put a virtual\n\tregister into the reg map.\n\n\t* function.c (fixup_var_refs_1): If force_operand didn't put\n\tthe address into the target, move it there.\n\nFrom-SVN: r38694", "tree": {"sha": "3ff38e446f960e5596f4f68082e401c9737766e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ff38e446f960e5596f4f68082e401c9737766e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2a5f96bbfae7b9b30d76246c1cd58fe80dddd2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2a5f96bbfae7b9b30d76246c1cd58fe80dddd2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2a5f96bbfae7b9b30d76246c1cd58fe80dddd2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2a5f96bbfae7b9b30d76246c1cd58fe80dddd2c/comments", "author": null, "committer": null, "parents": [{"sha": "e9049f5741d04553d9a5de0ddc003c05048ee823", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9049f5741d04553d9a5de0ddc003c05048ee823", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9049f5741d04553d9a5de0ddc003c05048ee823"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "ac4f2e507a86e24495ce70b16bfffd09c5bc2a51", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2a5f96bbfae7b9b30d76246c1cd58fe80dddd2c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2a5f96bbfae7b9b30d76246c1cd58fe80dddd2c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e2a5f96bbfae7b9b30d76246c1cd58fe80dddd2c", "patch": "@@ -1,3 +1,11 @@\n+Thu Jan  4 21:09:47 2001  J\"orn Rennecke <amylaar@redhat.com>\n+\n+\t* integrate.c (expand_inline_function): Don't put a virtual\n+\tregister into the reg map.\n+\n+\t* function.c (fixup_var_refs_1): If force_operand didn't put\n+\tthe address into the target, move it there.\n+\n 2001-01-04  Mark Mitchell  <mark@codesourcery.com>\n \n \tSpecial-case tree_decl/tree_list allocations."}, {"sha": "90ca36a5b6a4ba797962c98ebc30616fd0ff0613", "filename": "gcc/function.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2a5f96bbfae7b9b30d76246c1cd58fe80dddd2c/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2a5f96bbfae7b9b30d76246c1cd58fe80dddd2c/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=e2a5f96bbfae7b9b30d76246c1cd58fe80dddd2c", "patch": "@@ -1916,7 +1916,9 @@ fixup_var_refs_1 (var, promoted_mode, loc, insn, replacements)\n \t\t  /* That failed.  Fall back on force_operand and hope.  */\n \n \t\t  start_sequence ();\n-\t\t  force_operand (sub, y);\n+\t\t  sub = force_operand (sub, y);\n+\t\t  if (sub != y)\n+\t\t    emit_insn (gen_move_insn (y, sub));\n \t\t  seq = gen_sequence ();\n \t\t  end_sequence ();\n \t\t}"}, {"sha": "f6e43027580d3f23c94dd4db1ddb33d271f22cff", "filename": "gcc/integrate.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2a5f96bbfae7b9b30d76246c1cd58fe80dddd2c/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2a5f96bbfae7b9b30d76246c1cd58fe80dddd2c/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=e2a5f96bbfae7b9b30d76246c1cd58fe80dddd2c", "patch": "@@ -1,6 +1,6 @@\n /* Procedure integration for GNU CC.\n    Copyright (C) 1988, 1991, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000 Free Software Foundation, Inc.\n+   1999, 2000, 2001 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@cygnus.com)\n \n This file is part of GNU CC.\n@@ -989,6 +989,15 @@ expand_inline_function (fndecl, parms, target, ignore, type,\n \t    {\n \t      temp = force_operand (structure_value_addr, NULL_RTX);\n \t      temp = force_reg (Pmode, temp);\n+\t      /* A virtual register might be invalid in an insn, because\n+\t\t it can cause trouble in reload.  Since we don't have access\n+\t\t to the expanders at map translation time, make sure we have\n+\t\t a proper register now.\n+\t\t If a virtual register is actually valid, cse or combine\n+\t\t can put it into the mapped insns.  */\n+\t      if (REGNO (temp) >= FIRST_VIRTUAL_REGISTER\n+\t\t  && REGNO (temp) <= LAST_VIRTUAL_REGISTER)\n+\t      temp = copy_to_mode_reg (Pmode, temp);\n \t      map->reg_map[REGNO (XEXP (loc, 0))] = temp;\n \n \t      if (CONSTANT_P (structure_value_addr)"}]}