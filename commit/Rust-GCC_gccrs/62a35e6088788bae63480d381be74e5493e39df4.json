{"sha": "62a35e6088788bae63480d381be74e5493e39df4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJhMzVlNjA4ODc4OGJhZTYzNDgwZDM4MWJlNzRlNTQ5M2UzOWRmNA==", "commit": {"author": {"name": "David S. Miller", "email": "davem@redhat.com", "date": "2002-05-30T10:23:30Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2002-05-30T10:23:30Z"}, "message": "rtl.h (clear_emit_caches): Delete.\n\n2002-05-29  David S. Miller  <davem@redhat.com>\n\n\t* rtl.h (clear_emit_caches): Delete.\n\t* integrate.c (output_inline_function): Don't call it.\n\t* emit-rtl.c (restore_emit_status, init_emit): Likewise.\n\t(clear_emit_caches): Delete definition.\n\t(SEQUENCE_RESULT_SIZE, sequence_result, free_insn): Likewise.\n\nFrom-SVN: r54053", "tree": {"sha": "4e70bf4de9257efe081c1c0f98f589ef7c87e44c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e70bf4de9257efe081c1c0f98f589ef7c87e44c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62a35e6088788bae63480d381be74e5493e39df4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62a35e6088788bae63480d381be74e5493e39df4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62a35e6088788bae63480d381be74e5493e39df4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62a35e6088788bae63480d381be74e5493e39df4/comments", "author": null, "committer": null, "parents": [{"sha": "128977c9d0c1d072b7e9d11dd0f9840c3ef79105", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/128977c9d0c1d072b7e9d11dd0f9840c3ef79105", "html_url": "https://github.com/Rust-GCC/gccrs/commit/128977c9d0c1d072b7e9d11dd0f9840c3ef79105"}], "stats": {"total": 43, "additions": 8, "deletions": 35}, "files": [{"sha": "03903a3ce25386b83663f01f086c3ed3a49f0a1a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62a35e6088788bae63480d381be74e5493e39df4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62a35e6088788bae63480d381be74e5493e39df4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=62a35e6088788bae63480d381be74e5493e39df4", "patch": "@@ -1,3 +1,11 @@\n+2002-05-29  David S. Miller  <davem@redhat.com>\n+\n+\t* rtl.h (clear_emit_caches): Delete.\n+\t* integrate.c (output_inline_function): Don't call it.\n+\t* emit-rtl.c (restore_emit_status, init_emit): Likewise.\n+\t(clear_emit_caches): Delete definition.\n+\t(SEQUENCE_RESULT_SIZE, sequence_result, free_insn): Likewise.\n+\n 2002-05-30  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \t* config/mmix/mmix.c: Include real.h."}, {"sha": "8f8f701e17b7f446730f44d6b1eedf526e99b378", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62a35e6088788bae63480d381be74e5493e39df4/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62a35e6088788bae63480d381be74e5493e39df4/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=62a35e6088788bae63480d381be74e5493e39df4", "patch": "@@ -151,26 +151,6 @@ static htab_t mem_attrs_htab;\n /* A hash table storing all CONST_DOUBLEs.  */\n static htab_t const_double_htab;\n \n-/* start_sequence and gen_sequence can make a lot of rtx expressions which are\n-   shortly thrown away.  We use two mechanisms to prevent this waste:\n-\n-   For sizes up to 5 elements, we keep a SEQUENCE and its associated\n-   rtvec for use by gen_sequence.  One entry for each size is\n-   sufficient because most cases are calls to gen_sequence followed by\n-   immediately emitting the SEQUENCE.  Reuse is safe since emitting a\n-   sequence is destructive on the insn in it anyway and hence can't be\n-   redone.\n-\n-   We do not bother to save this cached data over nested function calls.\n-   Instead, we just reinitialize them.  */\n-\n-#define SEQUENCE_RESULT_SIZE 5\n-\n-static rtx sequence_result[SEQUENCE_RESULT_SIZE];\n-\n-/* During RTL generation, we also keep a list of free INSN rtl codes.  */\n-static rtx free_insn;\n-\n #define first_insn (cfun->emit->x_first_insn)\n #define last_insn (cfun->emit->x_last_insn)\n #define cur_insn_uid (cfun->emit->x_cur_insn_uid)\n@@ -2256,7 +2236,6 @@ restore_emit_status (p)\n      struct function *p ATTRIBUTE_UNUSED;\n {\n   last_label_num = 0;\n-  clear_emit_caches ();\n }\n \n /* Clear out all parts of the state in F that can safely be discarded\n@@ -4656,16 +4635,6 @@ init_virtual_regs (es)\n   ptr[VIRTUAL_CFA_REGNUM] = virtual_cfa_rtx;\n }\n \n-void\n-clear_emit_caches ()\n-{\n-  int i;\n-\n-  /* Clear the start_sequence/gen_sequence cache.  */\n-  for (i = 0; i < SEQUENCE_RESULT_SIZE; i++)\n-    sequence_result[i] = 0;\n-  free_insn = 0;\n-}\n \f\n /* Used by copy_insn_1 to avoid copying SCRATCHes more than once.  */\n static rtx copy_insn_scratch_in[MAX_RECOG_OPERANDS];\n@@ -4860,8 +4829,6 @@ init_emit ()\n   last_label_num = 0;\n   seq_stack = NULL;\n \n-  clear_emit_caches ();\n-\n   /* Init the tables that describe all the pseudo regs.  */\n \n   f->emit->regno_pointer_align_length = LAST_VIRTUAL_REGISTER + 101;"}, {"sha": "cf9413ee5169d112098afa6e5a05216c24e2c481", "filename": "gcc/integrate.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62a35e6088788bae63480d381be74e5493e39df4/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62a35e6088788bae63480d381be74e5493e39df4/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=62a35e6088788bae63480d381be74e5493e39df4", "patch": "@@ -2976,7 +2976,6 @@ output_inline_function (fndecl)\n \n   cfun = f;\n   current_function_decl = fndecl;\n-  clear_emit_caches ();\n \n   set_new_last_label_num (f->inl_max_label_num);\n "}, {"sha": "f4adc1da6b50e168139cb07068c4ee71bac1a506", "filename": "gcc/rtl.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62a35e6088788bae63480d381be74e5493e39df4/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62a35e6088788bae63480d381be74e5493e39df4/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=62a35e6088788bae63480d381be74e5493e39df4", "patch": "@@ -1985,7 +1985,6 @@ extern void reorder_insns_nobb\t\t\tPARAMS ((rtx, rtx, rtx));\n extern int get_max_uid\t\t\t\tPARAMS ((void));\n extern int in_sequence_p\t\t\tPARAMS ((void));\n extern void force_next_line_note\t\tPARAMS ((void));\n-extern void clear_emit_caches\t\t\tPARAMS ((void));\n extern void init_emit\t\t\t\tPARAMS ((void));\n extern void init_emit_once\t\t\tPARAMS ((int));\n extern void push_topmost_sequence\t\tPARAMS ((void));"}]}