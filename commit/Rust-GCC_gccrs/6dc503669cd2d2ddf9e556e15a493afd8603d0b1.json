{"sha": "6dc503669cd2d2ddf9e556e15a493afd8603d0b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRjNTAzNjY5Y2QyZDJkZGY5ZTU1NmUxNWE0OTNhZmQ4NjAzZDBiMQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-02-17T15:00:04Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-02-17T15:00:04Z"}, "message": "h8300.md (cmpqi): Remove mode from compare.\n\n\t* config/h8300/h8300.md (cmpqi): Remove mode from compare.\n\t(cmphi): Likewise.\n\t(*cmphi_h8300): Likewise.\n\t(*cmphi_h8300hs): Likewise.\n\t(cmpsi): Likewise.\n\t(7 peephole2): Likewise.\n\nFrom-SVN: r62996", "tree": {"sha": "55673e6386e4ee78c3578ec62d846e8008b5c5bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55673e6386e4ee78c3578ec62d846e8008b5c5bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6dc503669cd2d2ddf9e556e15a493afd8603d0b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dc503669cd2d2ddf9e556e15a493afd8603d0b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dc503669cd2d2ddf9e556e15a493afd8603d0b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dc503669cd2d2ddf9e556e15a493afd8603d0b1/comments", "author": null, "committer": null, "parents": [{"sha": "7a01761009b6df2f432063354a2c6c27d4b52806", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a01761009b6df2f432063354a2c6c27d4b52806", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a01761009b6df2f432063354a2c6c27d4b52806"}], "stats": {"total": 63, "additions": 36, "deletions": 27}, "files": [{"sha": "2ce31e7d208a6deb36ec90141abc1c1ea5ce9544", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dc503669cd2d2ddf9e556e15a493afd8603d0b1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dc503669cd2d2ddf9e556e15a493afd8603d0b1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6dc503669cd2d2ddf9e556e15a493afd8603d0b1", "patch": "@@ -1,3 +1,12 @@\n+2003-02-17  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.md (cmpqi): Remove mode from compare.\n+\t(cmphi): Likewise.\n+\t(*cmphi_h8300): Likewise.\n+\t(*cmphi_h8300hs): Likewise.\n+\t(cmpsi): Likewise.\n+\t(7 peephole2): Likewise.\n+\n Sun Feb 16 23:07:52 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n \t* c-typeck.c (build_c_cast):  Fold constant variables into"}, {"sha": "8bcba0ee0bcbd848501904fd508c56c6e95946f0", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dc503669cd2d2ddf9e556e15a493afd8603d0b1/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dc503669cd2d2ddf9e556e15a493afd8603d0b1/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=6dc503669cd2d2ddf9e556e15a493afd8603d0b1", "patch": "@@ -703,17 +703,17 @@\n \n (define_insn \"cmpqi\"\n   [(set (cc0)\n-\t(compare:QI (match_operand:QI 0 \"register_operand\" \"r\")\n-\t\t    (match_operand:QI 1 \"nonmemory_operand\" \"rn\")))]\n+\t(compare (match_operand:QI 0 \"register_operand\" \"r\")\n+\t\t (match_operand:QI 1 \"nonmemory_operand\" \"rn\")))]\n   \"\"\n   \"cmp.b\t%X1,%X0\"\n   [(set_attr \"length\" \"2\")\n    (set_attr \"cc\" \"compare\")])\n \n (define_expand \"cmphi\"\n   [(set (cc0)\n-\t(compare:HI (match_operand:HI 0 \"register_operand\" \"\")\n-\t\t    (match_operand:HI 1 \"nonmemory_operand\" \"\")))]\n+\t(compare (match_operand:HI 0 \"register_operand\" \"\")\n+\t\t (match_operand:HI 1 \"nonmemory_operand\" \"\")))]\n   \"\"\n   \"\n {\n@@ -723,28 +723,28 @@\n     operands[1] = force_reg (HImode, operands[1]);\n }\")\n \n-(define_insn \"\"\n+(define_insn \"*cmphi_h8300\"\n   [(set (cc0)\n-\t(compare:HI (match_operand:HI 0 \"register_operand\" \"r\")\n-\t\t    (match_operand:HI 1 \"register_operand\" \"r\")))]\n+\t(compare (match_operand:HI 0 \"register_operand\" \"r\")\n+\t\t (match_operand:HI 1 \"register_operand\" \"r\")))]\n   \"TARGET_H8300\"\n   \"cmp.w\t%T1,%T0\"\n   [(set_attr \"length\" \"2\")\n    (set_attr \"cc\" \"compare\")])\n \n-(define_insn \"\"\n+(define_insn \"*cmphi_h8300hs\"\n   [(set (cc0)\n-\t(compare:HI (match_operand:HI 0 \"register_operand\" \"r,r\")\n-\t\t    (match_operand:HI 1 \"nonmemory_operand\" \"r,n\")))]\n+\t(compare (match_operand:HI 0 \"register_operand\" \"r,r\")\n+\t\t (match_operand:HI 1 \"nonmemory_operand\" \"r,n\")))]\n   \"TARGET_H8300H || TARGET_H8300S\"\n   \"cmp.w\t%T1,%T0\"\n   [(set_attr \"length\" \"2,4\")\n    (set_attr \"cc\" \"compare,compare\")])\n \n (define_insn \"cmpsi\"\n   [(set (cc0)\n-\t(compare:SI (match_operand:SI 0 \"register_operand\" \"r,r\")\n-\t\t    (match_operand:SI 1 \"nonmemory_operand\" \"r,i\")))]\n+\t(compare (match_operand:SI 0 \"register_operand\" \"r,r\")\n+\t\t (match_operand:SI 1 \"nonmemory_operand\" \"r,i\")))]\n   \"TARGET_H8300H || TARGET_H8300S\"\n   \"cmp.l\t%S1,%S0\"\n   [(set_attr \"length\" \"2,6\")\n@@ -3446,7 +3446,7 @@\n \t\t      (pc)))]\n   \"\")\n \n-;; (compare:SI (reg) (const_int)) takes 6 bytes, so we try to achieve\n+;; (compare (reg:SI) (const_int)) takes 6 bytes, so we try to achieve\n ;; the equivalent with shorter sequences.  Here is the summary.\n ;;\n ;; reg  const_int                 use     insn\n@@ -3481,8 +3481,8 @@\n \n (define_peephole2\n   [(set (cc0)\n-\t(compare:HI (match_operand:HI 0 \"register_operand\" \"\")\n-\t\t    (match_operand:HI 1 \"const_int_le_2_operand\" \"\")))\n+\t(compare (match_operand:HI 0 \"register_operand\" \"\")\n+\t\t (match_operand:HI 1 \"const_int_le_2_operand\" \"\")))\n    (set (pc)\n \t(if_then_else (match_operator 3 \"eqne_operator\"\n \t\t\t[(cc0) (const_int 0)])\n@@ -3503,8 +3503,8 @@\n \n (define_peephole2\n   [(set (cc0)\n-\t(compare:SI (match_operand:SI 0 \"register_operand\" \"\")\n-\t\t    (match_operand:SI 1 \"const_int_le_6_operand\" \"\")))\n+\t(compare (match_operand:SI 0 \"register_operand\" \"\")\n+\t\t (match_operand:SI 1 \"const_int_le_6_operand\" \"\")))\n    (set (pc)\n \t(if_then_else (match_operator 3 \"eqne_operator\"\n \t\t\t[(cc0) (const_int 0)])\n@@ -3527,8 +3527,8 @@\n \n (define_peephole2\n   [(set (cc0)\n-\t(compare:SI (match_operand:SI 0 \"register_operand\" \"\")\n-\t\t    (match_operand:SI 1 \"const_int_operand\" \"\")))\n+\t(compare (match_operand:SI 0 \"register_operand\" \"\")\n+\t\t (match_operand:SI 1 \"const_int_operand\" \"\")))\n    (set (pc)\n \t(if_then_else (match_operator 3 \"eqne_operator\"\n \t\t\t[(cc0) (const_int 0)])\n@@ -3557,8 +3557,8 @@\n \n (define_peephole2\n   [(set (cc0)\n-\t(compare:SI (match_operand:SI 0 \"register_operand\" \"\")\n-\t\t    (match_operand:SI 1 \"const_int_operand\" \"\")))\n+\t(compare (match_operand:SI 0 \"register_operand\" \"\")\n+\t\t (match_operand:SI 1 \"const_int_operand\" \"\")))\n    (set (pc)\n \t(if_then_else (match_operator 2 \"gtuleu_operator\"\n \t\t\t[(cc0) (const_int 0)])\n@@ -3592,8 +3592,8 @@\n \n (define_peephole2\n   [(set (cc0)\n-\t(compare:HI (match_operand:HI 0 \"register_operand\" \"\")\n-\t\t    (const_int 255)))\n+\t(compare (match_operand:HI 0 \"register_operand\" \"\")\n+\t\t (const_int 255)))\n    (set (pc)\n \t(if_then_else (match_operator 1 \"gtuleu_operator\"\n \t\t\t[(cc0) (const_int 0)])\n@@ -3615,8 +3615,8 @@\n \n (define_peephole2\n   [(set (cc0)\n-\t(compare:SI (match_operand:SI 0 \"register_operand\" \"\")\n-\t\t    (const_int 65535)))\n+\t(compare (match_operand:SI 0 \"register_operand\" \"\")\n+\t\t (const_int 65535)))\n    (set (pc)\n \t(if_then_else (match_operator 1 \"gtuleu_operator\"\n \t\t\t[(cc0) (const_int 0)])\n@@ -3642,8 +3642,8 @@\n (define_peephole2\n   [(match_scratch:SI 4 \"r\")\n    (set (cc0)\n-\t(compare:SI (match_operand:SI 0 \"register_operand\" \"\")\n-\t\t    (match_operand:SI 1 \"incdec_operand\" \"\")))\n+\t(compare (match_operand:SI 0 \"register_operand\" \"\")\n+\t\t (match_operand:SI 1 \"incdec_operand\" \"\")))\n    (set (pc)\n \t(if_then_else (match_operator 3 \"eqne_operator\"\n \t\t\t[(cc0) (const_int 0)])"}]}