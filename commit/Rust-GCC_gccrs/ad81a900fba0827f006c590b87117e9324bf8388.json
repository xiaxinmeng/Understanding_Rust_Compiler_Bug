{"sha": "ad81a900fba0827f006c590b87117e9324bf8388", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ4MWE5MDBmYmEwODI3ZjAwNmM1OTBiODcxMTdlOTMyNGJmODM4OA==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2019-01-21T17:23:58Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-01-21T17:23:58Z"}, "message": "Makefile.am (noinst_LTLIBRARIES): Rename libzgcj_convience.la to libz_convenience.la.\n\n2019-01-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n\n\t* Makefile.am (noinst_LTLIBRARIES): Rename libzgcj_convience.la to\n\tlibz_convenience.la.\n\t* Makefile.in: Regenerate.\n\t* configure.ac: Remove target_all.\n\t* configure: Regenerate.\n\nFrom-SVN: r268119", "tree": {"sha": "82218fcf2903e464106900015bfe60fab0196180", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82218fcf2903e464106900015bfe60fab0196180"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad81a900fba0827f006c590b87117e9324bf8388", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad81a900fba0827f006c590b87117e9324bf8388", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad81a900fba0827f006c590b87117e9324bf8388", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad81a900fba0827f006c590b87117e9324bf8388/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f3a18a5c6cb1fed68ea519f731c8078af2f2f657", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3a18a5c6cb1fed68ea519f731c8078af2f2f657", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3a18a5c6cb1fed68ea519f731c8078af2f2f657"}], "stats": {"total": 106, "additions": 23, "deletions": 83}, "files": [{"sha": "289a06be8f55be6fa56b76a52ed7511905f52de0", "filename": "zlib/ChangeLog.gcj", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad81a900fba0827f006c590b87117e9324bf8388/zlib%2FChangeLog.gcj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad81a900fba0827f006c590b87117e9324bf8388/zlib%2FChangeLog.gcj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2FChangeLog.gcj?ref=ad81a900fba0827f006c590b87117e9324bf8388", "patch": "@@ -1,3 +1,11 @@\n+2019-01-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Makefile.am (noinst_LTLIBRARIES): Rename libzgcj_convience.la to\n+\tlibz_convenience.la.\n+\t* Makefile.in: Regenerate.\n+\t* configure.ac: Remove target_all.\n+\t* configure: Regenerate.\n+\n 2018-10-31  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR bootstrap/82856"}, {"sha": "29359614baacae0aed24f0f91fb8a987b7cbddd0", "filename": "zlib/Makefile.am", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad81a900fba0827f006c590b87117e9324bf8388/zlib%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad81a900fba0827f006c590b87117e9324bf8388/zlib%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2FMakefile.am?ref=ad81a900fba0827f006c590b87117e9324bf8388", "patch": "@@ -11,8 +11,8 @@ inflate.h inftrees.c inftrees.h trees.c trees.h uncompr.c zconf.h \\\n zconf.h.in zlib.h zutil.c zutil.h\n \n if TARGET_LIBRARY\n-noinst_LTLIBRARIES = libzgcj_convenience.la\n-libzgcj_convenience_la_SOURCES = $(ZLIB_SOURCES)\n+noinst_LTLIBRARIES = libz_convenience.la\n+libz_convenience_la_SOURCES = $(ZLIB_SOURCES)\n else\n toolexeclib_LIBRARIES = libz.a\n libz_a_SOURCES = $(ZLIB_SOURCES)"}, {"sha": "7b99bd84c16821a578d06bbf47788f1da3227813", "filename": "zlib/Makefile.in", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad81a900fba0827f006c590b87117e9324bf8388/zlib%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad81a900fba0827f006c590b87117e9324bf8388/zlib%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2FMakefile.in?ref=ad81a900fba0827f006c590b87117e9324bf8388", "patch": "@@ -161,23 +161,23 @@ am__objects_1 = libz_a-adler32.$(OBJEXT) libz_a-compress.$(OBJEXT) \\\n @TARGET_LIBRARY_FALSE@am_libz_a_OBJECTS = $(am__objects_1)\n libz_a_OBJECTS = $(am_libz_a_OBJECTS)\n LTLIBRARIES = $(noinst_LTLIBRARIES)\n-libzgcj_convenience_la_LIBADD =\n-am__libzgcj_convenience_la_SOURCES_DIST = adler32.c compress.c crc32.c \\\n+libz_convenience_la_LIBADD =\n+am__libz_convenience_la_SOURCES_DIST = adler32.c compress.c crc32.c \\\n \tcrc32.h deflate.c deflate.h gzguts.h gzread.c gzclose.c \\\n \tgzwrite.c gzlib.c infback.c inffast.c inffast.h inffixed.h \\\n \tinflate.c inflate.h inftrees.c inftrees.h trees.c trees.h \\\n \tuncompr.c zconf.h zconf.h.in zlib.h zutil.c zutil.h\n am__objects_2 = adler32.lo compress.lo crc32.lo deflate.lo gzread.lo \\\n \tgzclose.lo gzwrite.lo gzlib.lo infback.lo inffast.lo \\\n \tinflate.lo inftrees.lo trees.lo uncompr.lo zutil.lo\n-@TARGET_LIBRARY_TRUE@am_libzgcj_convenience_la_OBJECTS =  \\\n+@TARGET_LIBRARY_TRUE@am_libz_convenience_la_OBJECTS =  \\\n @TARGET_LIBRARY_TRUE@\t$(am__objects_2)\n-libzgcj_convenience_la_OBJECTS = $(am_libzgcj_convenience_la_OBJECTS)\n+libz_convenience_la_OBJECTS = $(am_libz_convenience_la_OBJECTS)\n AM_V_lt = $(am__v_lt_@AM_V@)\n am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)\n am__v_lt_0 = --silent\n am__v_lt_1 = \n-@TARGET_LIBRARY_TRUE@am_libzgcj_convenience_la_rpath =\n+@TARGET_LIBRARY_TRUE@am_libz_convenience_la_rpath =\n AM_V_P = $(am__v_P_@AM_V@)\n am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)\n am__v_P_0 = false\n@@ -212,9 +212,9 @@ AM_V_CCLD = $(am__v_CCLD_@AM_V@)\n am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)\n am__v_CCLD_0 = @echo \"  CCLD    \" $@;\n am__v_CCLD_1 = \n-SOURCES = $(libz_a_SOURCES) $(libzgcj_convenience_la_SOURCES)\n+SOURCES = $(libz_a_SOURCES) $(libz_convenience_la_SOURCES)\n DIST_SOURCES = $(am__libz_a_SOURCES_DIST) \\\n-\t$(am__libzgcj_convenience_la_SOURCES_DIST)\n+\t$(am__libz_convenience_la_SOURCES_DIST)\n am__can_run_installinfo = \\\n   case $$AM_UPDATE_INFO_DIR in \\\n     n|no|NO) false;; \\\n@@ -378,7 +378,6 @@ srcdir = @srcdir@\n sysconfdir = @sysconfdir@\n target = @target@\n target_alias = @target_alias@\n-target_all = @target_all@\n target_cpu = @target_cpu@\n target_os = @target_os@\n target_vendor = @target_vendor@\n@@ -395,8 +394,8 @@ infback.c inffast.c inffast.h inffixed.h inflate.c \\\n inflate.h inftrees.c inftrees.h trees.c trees.h uncompr.c zconf.h \\\n zconf.h.in zlib.h zutil.c zutil.h\n \n-@TARGET_LIBRARY_TRUE@noinst_LTLIBRARIES = libzgcj_convenience.la\n-@TARGET_LIBRARY_TRUE@libzgcj_convenience_la_SOURCES = $(ZLIB_SOURCES)\n+@TARGET_LIBRARY_TRUE@noinst_LTLIBRARIES = libz_convenience.la\n+@TARGET_LIBRARY_TRUE@libz_convenience_la_SOURCES = $(ZLIB_SOURCES)\n @TARGET_LIBRARY_FALSE@toolexeclib_LIBRARIES = libz.a\n @TARGET_LIBRARY_FALSE@libz_a_SOURCES = $(ZLIB_SOURCES)\n @TARGET_LIBRARY_FALSE@libz_a_CFLAGS = $(AM_CFLAGS) $(PICFLAG)\n@@ -534,8 +533,8 @@ clean-noinstLTLIBRARIES:\n \t  rm -f $${locs}; \\\n \t}\n \n-libzgcj_convenience.la: $(libzgcj_convenience_la_OBJECTS) $(libzgcj_convenience_la_DEPENDENCIES) $(EXTRA_libzgcj_convenience_la_DEPENDENCIES) \n-\t$(AM_V_CCLD)$(LINK) $(am_libzgcj_convenience_la_rpath) $(libzgcj_convenience_la_OBJECTS) $(libzgcj_convenience_la_LIBADD) $(LIBS)\n+libz_convenience.la: $(libz_convenience_la_OBJECTS) $(libz_convenience_la_DEPENDENCIES) $(EXTRA_libz_convenience_la_DEPENDENCIES) \n+\t$(AM_V_CCLD)$(LINK) $(am_libz_convenience_la_rpath) $(libz_convenience_la_OBJECTS) $(libz_convenience_la_LIBADD) $(LIBS)\n \n mostlyclean-compile:\n \t-rm -f *.$(OBJEXT)"}, {"sha": "7a8b49b0b3e7c9e72fc9af80993855f6466e8a0a", "filename": "zlib/configure", "status": "modified", "additions": 2, "deletions": 58, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad81a900fba0827f006c590b87117e9324bf8388/zlib%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad81a900fba0827f006c590b87117e9324bf8388/zlib%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fconfigure?ref=ad81a900fba0827f006c590b87117e9324bf8388", "patch": "@@ -639,7 +639,6 @@ TARGET_LIBRARY_FALSE\n TARGET_LIBRARY_TRUE\n toolexeclibdir\n toolexecdir\n-target_all\n CPP\n OTOOL64\n OTOOL\n@@ -10644,7 +10643,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10647 \"configure\"\n+#line 10646 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10750,7 +10749,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10753 \"configure\"\n+#line 10752 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11139,9 +11138,6 @@ if test -n \"$with_cross_host\"; then\n \n    $as_echo \"#define HAVE_STRERROR 1\" >>confdefs.h\n \n-\n-   # We ignore --with-system-zlib in this case.\n-   target_all=libzgcj.la\n else\n    if test x$gcc_no_link = xyes; then\n   if test \"x${ac_cv_func_mmap_fixed_mapped+set}\" != xset; then\n@@ -11363,60 +11359,8 @@ _ACEOF\n fi\n done\n \n-\n-   if test \"$with_system_zlib\" = yes; then\n-      { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for deflate in -lz\" >&5\n-$as_echo_n \"checking for deflate in -lz... \" >&6; }\n-if ${ac_cv_lib_z_deflate+:} false; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  ac_check_lib_save_LIBS=$LIBS\n-LIBS=\"-lz  $LIBS\"\n-if test x$gcc_no_link = xyes; then\n-  as_fn_error $? \"Link tests are not allowed after GCC_NO_EXECUTABLES.\" \"$LINENO\" 5\n-fi\n-cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-\n-/* Override any GCC internal prototype to avoid an error.\n-   Use char because int might match the return type of a GCC\n-   builtin and then its argument prototype would still apply.  */\n-#ifdef __cplusplus\n-extern \"C\"\n-#endif\n-char deflate ();\n-int\n-main ()\n-{\n-return deflate ();\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_c_try_link \"$LINENO\"; then :\n-  ac_cv_lib_z_deflate=yes\n-else\n-  ac_cv_lib_z_deflate=no\n-fi\n-rm -f core conftest.err conftest.$ac_objext \\\n-    conftest$ac_exeext conftest.$ac_ext\n-LIBS=$ac_check_lib_save_LIBS\n-fi\n-{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_z_deflate\" >&5\n-$as_echo \"$ac_cv_lib_z_deflate\" >&6; }\n-if test \"x$ac_cv_lib_z_deflate\" = xyes; then :\n-  target_all=\n-else\n-  target_all=libzgcj.la\n-fi\n-\n-   else\n-      target_all=libzgcj.la\n-   fi\n fi\n \n-\n-\n for ac_header in unistd.h\n do :\n   ac_fn_c_check_header_mongrel \"$LINENO\" \"unistd.h\" \"ac_cv_header_unistd_h\" \"$ac_includes_default\""}, {"sha": "69588f8c2503fb00c9c5e6c15ed4c5a289fd7088", "filename": "zlib/configure.ac", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad81a900fba0827f006c590b87117e9324bf8388/zlib%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad81a900fba0827f006c590b87117e9324bf8388/zlib%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/zlib%2Fconfigure.ac?ref=ad81a900fba0827f006c590b87117e9324bf8388", "patch": "@@ -74,22 +74,11 @@ if test -n \"$with_cross_host\"; then\n    # we'll have.\n    AC_DEFINE(HAVE_MEMCPY)\n    AC_DEFINE(HAVE_STRERROR)\n-\n-   # We ignore --with-system-zlib in this case.\n-   target_all=libzgcj.la\n else\n    AC_FUNC_MMAP\n    AC_CHECK_FUNCS(memcpy strerror)\n-\n-   if test \"$with_system_zlib\" = yes; then\n-      AC_CHECK_LIB(z, deflate, target_all=, target_all=libzgcj.la)\n-   else\n-      target_all=libzgcj.la\n-   fi\n fi\n \n-AC_SUBST(target_all)\n-\n AC_CHECK_HEADERS(unistd.h)\n \n if test -n \"$with_cross_host\" &&"}]}