{"sha": "7c1fdbe4d17807e400d403f82105257d50d0192b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2MxZmRiZTRkMTc4MDdlNDAwZDQwM2Y4MjEwNTI1N2Q1MGQwMTkyYg==", "commit": {"author": {"name": "Chris Demetriou", "email": "cgd@broadcom.com", "date": "2003-05-02T01:56:10Z"}, "committer": {"name": "Chris Demetriou", "email": "cgd@gcc.gnu.org", "date": "2003-05-02T01:56:10Z"}, "message": "mips-abi.exp (is_meabi_config): Remove, since MEABI is no longer supported.\n\n2003-05-01  Chris Demetriou  <cgd@broadcom.com>\n\n        * gcc.dg/special/mips-abi.exp (is_meabi_config): Remove,\n        since MEABI is no longer supported.  Remove all vestiges\n        of MEABI from the test.\n\nFrom-SVN: r66370", "tree": {"sha": "7de07d65ed0480e22973968ab984c501b252a981", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7de07d65ed0480e22973968ab984c501b252a981"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c1fdbe4d17807e400d403f82105257d50d0192b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c1fdbe4d17807e400d403f82105257d50d0192b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c1fdbe4d17807e400d403f82105257d50d0192b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c1fdbe4d17807e400d403f82105257d50d0192b/comments", "author": null, "committer": null, "parents": [{"sha": "409f52d3d4050e8ff8b38d57d70793d5e808599c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/409f52d3d4050e8ff8b38d57d70793d5e808599c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/409f52d3d4050e8ff8b38d57d70793d5e808599c"}], "stats": {"total": 30, "additions": 11, "deletions": 19}, "files": [{"sha": "355420ef94c4e5c71fafb77cadd1f77737a07541", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c1fdbe4d17807e400d403f82105257d50d0192b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c1fdbe4d17807e400d403f82105257d50d0192b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7c1fdbe4d17807e400d403f82105257d50d0192b", "patch": "@@ -1,3 +1,9 @@\n+2003-05-01  Chris Demetriou  <cgd@broadcom.com>\n+\n+\t* gcc.dg/special/mips-abi.exp (is_meabi_config): Remove,\n+\tsince MEABI is no longer supported.  Remove all vestiges\n+\tof MEABI from the test.\n+\n 2003-05-01  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \tPR c++/10554"}, {"sha": "a13d2794f3643a9fe7c4ffd6fc376de6abb24bc0", "filename": "gcc/testsuite/gcc.dg/special/mips-abi.exp", "status": "modified", "additions": 5, "deletions": 19, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c1fdbe4d17807e400d403f82105257d50d0192b/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fmips-abi.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c1fdbe4d17807e400d403f82105257d50d0192b/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fmips-abi.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fspecial%2Fmips-abi.exp?ref=7c1fdbe4d17807e400d403f82105257d50d0192b", "patch": "@@ -29,15 +29,6 @@ if {![istarget mips*-*-*] || [gcc_target_object_format] != \"elf\"} {\n # flags where possible.\n set asm_abi_flags {-32 -n32 -64 -mabi=o64 -mabi=eabi}\n \n-# Return true if the configuration uses MEABI by default.\n-proc is_meabi_config {} {\n-    return [expr {[istarget mipsisa32*-*-elf*]\n-\t\t  || [istarget mipsisa32el-*-elf*]\n-\t\t  || [istarget mipsisa64-*-elf*]\n-\t\t  || [istarget mipsisa64el-*-elf*]\n-\t\t  || [istarget mipsisa64sr71k-*-elf*]}]\n-}\n-\n # Try to assemble mips-abi.s (an empty file), passing -v in order to\n # get the assembler command line.  Check whether an appropriate ABI\n # flag is passed.\n@@ -100,22 +91,17 @@ foreach flag $default_flags {\n # If the command line does specify an ABI, just check for the\n # appropriate assembler flag.\n switch -- $default_abi {\n-    -mabi=meabi { check_mips_abi \"MEABI\" \"\" \"\" }\n     -mabi=eabi { check_mips_abi \"EABI\" \"-mabi=eabi\" \"\" }\n     -mabi=32 { check_mips_abi \"o32\" \"-32\" \"\" }\n     -mabi=n32 { check_mips_abi \"n32\" \"-n32\" \"\" }\n     -mabi=o64 { check_mips_abi \"o64\" \"-mabi=o64\" \"\" }\n     -mabi=64 { check_mips_abi \"n64\" \"-64\" \"\" }\n     \"\" {\n-\t# MEABI configs shouldn't pass an ABI flag by default\n-\t# but the others should.  It doesn't seem worthwhile\n-\t# duplicating the configuration to ABI logic here,\n-\t# so just accept any ABI.\n-\tif {[is_meabi_config]} {\n-\t    check_mips_abi \"default\" \"\" \"\"\n-\t} else {\n-\t    check_mips_abi \"default\" $asm_abi_flags \"\"\n-\t}\n+\t# An ABI should be passed to the assembler by default.\n+\t# It doesn't seem worthwhile to duplicate the\n+\t# configuration to ABI logic here, so just accept any ABI.\n+\tcheck_mips_abi \"default\" $asm_abi_flags \"\"\n+\n \t# See whether passing a -mabi flag does the right thing.\n \t# Only try ABIs that the SGI assembler also understands.\n \tcheck_mips_abi \"o32\" \"-32\" \"-mabi=32\""}]}