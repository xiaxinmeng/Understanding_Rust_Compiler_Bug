{"sha": "5e41e7f0928de55d189475fc14f7e6c9737cd507", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWU0MWU3ZjA5MjhkZTU1ZDE4OTQ3NWZjMTRmN2U2Yzk3MzdjZDUwNw==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2020-11-10T13:17:52Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2020-11-10T18:28:47Z"}, "message": "Early exit from irange::set for poly ints.\n\nMy previous cleanups to irange::set moved the early exit when\nVARYING.  This caused poly int varyings to be created with\nincorrect min/max.\n\nWe can just set varying and exit for all poly ints.\n\ngcc/ChangeLog:\n\n\t* value-range.cc (irange::set): Early exit for poly ints.", "tree": {"sha": "99d9e5888fa8090a42d7bca42168014f63dcfc81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99d9e5888fa8090a42d7bca42168014f63dcfc81"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e41e7f0928de55d189475fc14f7e6c9737cd507", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e41e7f0928de55d189475fc14f7e6c9737cd507", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e41e7f0928de55d189475fc14f7e6c9737cd507", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e41e7f0928de55d189475fc14f7e6c9737cd507/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c710051affd51ac630072ac0cd2c232c0bf2c265", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c710051affd51ac630072ac0cd2c232c0bf2c265", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c710051affd51ac630072ac0cd2c232c0bf2c265"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "b7ccba010e45661a425c10d6e5f268c49713fb19", "filename": "gcc/value-range.cc", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e41e7f0928de55d189475fc14f7e6c9737cd507/gcc%2Fvalue-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e41e7f0928de55d189475fc14f7e6c9737cd507/gcc%2Fvalue-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-range.cc?ref=5e41e7f0928de55d189475fc14f7e6c9737cd507", "patch": "@@ -249,9 +249,11 @@ irange::set (tree min, tree max, value_range_kind kind)\n       return;\n     }\n \n-  if (kind != VR_VARYING\n-      && (POLY_INT_CST_P (min) || POLY_INT_CST_P (max)))\n-    kind = VR_VARYING;\n+  if (POLY_INT_CST_P (min) || POLY_INT_CST_P (max))\n+    {\n+      set_varying (TREE_TYPE (min));\n+      return;\n+    }\n \n   // Nothing to canonicalize for symbolic ranges.\n   if (TREE_CODE (min) != INTEGER_CST"}]}