{"sha": "9a3e5fd3fd1a6759c5b4cef505d7956067fa8e7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWEzZTVmZDNmZDFhNjc1OWM1YjRjZWY1MDVkNzk1NjA2N2ZhOGU3Yw==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@TechFak.Uni-Bielefeld.DE", "date": "2002-04-30T01:45:34Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2002-04-30T01:45:34Z"}, "message": "libstdc++-v3-dg.exp (libstdc++-v3-init): Set all of LD_LIBRARY_PATH, SHLIB_PATH, LD_LIBRARYN32_PATH, LD_LIBRARY64_PATH.\n\n\t* testsuite/lib/libstdc++-v3-dg.exp (libstdc++-v3-init): Set all\n\tof LD_LIBRARY_PATH, SHLIB_PATH, LD_LIBRARYN32_PATH,\n\tLD_LIBRARY64_PATH.\n\nFrom-SVN: r52919", "tree": {"sha": "ea1a164d15d8438cb9a77628b710372cb8fac27c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea1a164d15d8438cb9a77628b710372cb8fac27c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a3e5fd3fd1a6759c5b4cef505d7956067fa8e7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a3e5fd3fd1a6759c5b4cef505d7956067fa8e7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a3e5fd3fd1a6759c5b4cef505d7956067fa8e7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a3e5fd3fd1a6759c5b4cef505d7956067fa8e7c/comments", "author": null, "committer": null, "parents": [{"sha": "da6886f66b3332623c2f1c37b565fa8fc0a36bd6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da6886f66b3332623c2f1c37b565fa8fc0a36bd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da6886f66b3332623c2f1c37b565fa8fc0a36bd6"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "ee41e4149664f242fe881c49979485778e0dfdcc", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a3e5fd3fd1a6759c5b4cef505d7956067fa8e7c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a3e5fd3fd1a6759c5b4cef505d7956067fa8e7c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9a3e5fd3fd1a6759c5b4cef505d7956067fa8e7c", "patch": "@@ -1,3 +1,9 @@\n+2002-04-29  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n+\n+\t* testsuite/lib/libstdc++-v3-dg.exp (libstdc++-v3-init): Set all\n+\tof LD_LIBRARY_PATH, SHLIB_PATH, LD_LIBRARYN32_PATH,\n+\tLD_LIBRARY64_PATH. \n+\n 2002-04-28  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/5280"}, {"sha": "08fb58e147b864c7a3c74501b191af4e53eedd69", "filename": "libstdc++-v3/testsuite/lib/libstdc++-v3-dg.exp", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a3e5fd3fd1a6759c5b4cef505d7956067fa8e7c/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B-v3-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a3e5fd3fd1a6759c5b4cef505d7956067fa8e7c/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B-v3-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B-v3-dg.exp?ref=9a3e5fd3fd1a6759c5b4cef505d7956067fa8e7c", "patch": "@@ -69,6 +69,17 @@ proc libstdc++-v3-init { args } {\n     append ld_library_path \":${gccdir}\"\n     append ld_library_path \":${blddir}/src/.libs\"\n \n+    # On IRIX 6, we have to set variables akin to LD_LIBRARY_PATH, but\n+    # called LD_LIBRARYN32_PATH (for the N32 ABI) and LD_LIBRARY64_PATH\n+    # (for the 64-bit ABI).  The right way to do this would be to modify\n+    # unix.exp -- but that's not an option since it's part of DejaGNU\n+    # proper, so we do it here.  We really only need to do \n+    # this on IRIX, but it shouldn't hurt to do it anywhere else.\n+    setenv  LD_LIBRARY_PATH     $ld_library_path\n+    setenv  SHLIB_PATH          $ld_library_path\n+    setenv  LD_LIBRARYN32_PATH  $ld_library_path\n+    setenv  LD_LIBRARY64_PATH   $ld_library_path\n+\n     # Do a bunch of handstands and backflips for cross compiling and\n     # finding simulators...\n     if [is_remote host] {"}]}