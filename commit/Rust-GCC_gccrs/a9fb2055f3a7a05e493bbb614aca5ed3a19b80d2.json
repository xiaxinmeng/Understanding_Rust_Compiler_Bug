{"sha": "a9fb2055f3a7a05e493bbb614aca5ed3a19b80d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTlmYjIwNTVmM2E3YTA1ZTQ5M2JiYjYxNGFjYTVlZDNhMTliODBkMg==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-04-16T11:59:53Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-18T09:08:22Z"}, "message": "[Ada] Fix failed assertion on a slice indexed by a subtype_indication\n\n2020-06-18  Piotr Trojanek  <trojanek@adacore.com>\n\ngcc/ada/\n\n\t* checks.adb (Generate_Index_Checks): Handle\n\tN_Subtype_Indication returned from Scalar_Range.", "tree": {"sha": "641287ae9c3aeb36807ed923b6b158f3e6344364", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/641287ae9c3aeb36807ed923b6b158f3e6344364"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9fb2055f3a7a05e493bbb614aca5ed3a19b80d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9fb2055f3a7a05e493bbb614aca5ed3a19b80d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9fb2055f3a7a05e493bbb614aca5ed3a19b80d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9fb2055f3a7a05e493bbb614aca5ed3a19b80d2/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c94bbfbe57de7eccec1f3b2fe0da594014ac6088", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c94bbfbe57de7eccec1f3b2fe0da594014ac6088", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c94bbfbe57de7eccec1f3b2fe0da594014ac6088"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "7b8ca979a7e2342ed8b322f3a38a4350c040c9ae", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9fb2055f3a7a05e493bbb614aca5ed3a19b80d2/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9fb2055f3a7a05e493bbb614aca5ed3a19b80d2/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=a9fb2055f3a7a05e493bbb614aca5ed3a19b80d2", "patch": "@@ -6842,6 +6842,10 @@ package body Checks is\n                   elsif Nkind_In (A_Idx, N_Identifier, N_Expanded_Name) then\n                      A_Range := Scalar_Range (Entity (A_Idx));\n \n+                     if Nkind (A_Range) = N_Subtype_Indication then\n+                        A_Range := Range_Expression (Constraint (A_Range));\n+                     end if;\n+\n                   else pragma Assert (Nkind (A_Idx) = N_Subtype_Indication);\n                      A_Range := Range_Expression (Constraint (A_Idx));\n                   end if;"}]}