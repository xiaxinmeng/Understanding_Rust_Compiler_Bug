{"sha": "30fa7e33061e1b31416ff202deffd5c9ab921351", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBmYTdlMzMwNjFlMWIzMTQxNmZmMjAyZGVmZmQ1YzlhYjkyMTM1MQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2001-12-19T22:09:04Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2001-12-19T22:09:04Z"}, "message": "ia64.c (ia64_single_set): Return first set for prologue_allocate_stack and epilogue_deallocate_stack...\n\n\t* config/ia64/ia64.c (ia64_single_set): Return first set for\n\tprologue_allocate_stack and epilogue_deallocate_stack instructions.\n\n\t* gcc.c-torture/compile/20011219-1.c: New test.\n\nFrom-SVN: r48187", "tree": {"sha": "b3ae6e0b7dd8c5a72816817f086f03774a8e8919", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3ae6e0b7dd8c5a72816817f086f03774a8e8919"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30fa7e33061e1b31416ff202deffd5c9ab921351", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30fa7e33061e1b31416ff202deffd5c9ab921351", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30fa7e33061e1b31416ff202deffd5c9ab921351", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30fa7e33061e1b31416ff202deffd5c9ab921351/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "82b61df521d17a96f60e56ede06a55a8894b1c2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82b61df521d17a96f60e56ede06a55a8894b1c2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82b61df521d17a96f60e56ede06a55a8894b1c2e"}], "stats": {"total": 57, "additions": 55, "deletions": 2}, "files": [{"sha": "148beccf8bcc342ffa76764bcda7248adc96ea47", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30fa7e33061e1b31416ff202deffd5c9ab921351/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30fa7e33061e1b31416ff202deffd5c9ab921351/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=30fa7e33061e1b31416ff202deffd5c9ab921351", "patch": "@@ -1,3 +1,8 @@\n+2001-12-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/ia64/ia64.c (ia64_single_set): Return first set for\n+\tprologue_allocate_stack and epilogue_deallocate_stack instructions.\n+\n 2001-12-19  Dale Johannesen  <dalej@apple.com>\n \n \t * config/rs6000/rs6000.h: LEGITIMIZE_RELOAD_ADDRESS:"}, {"sha": "133a2678485e9401b5d7a21a5c06458c50fb2e58", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30fa7e33061e1b31416ff202deffd5c9ab921351/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30fa7e33061e1b31416ff202deffd5c9ab921351/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=30fa7e33061e1b31416ff202deffd5c9ab921351", "patch": "@@ -5226,12 +5226,27 @@ static rtx\n ia64_single_set (insn)\n      rtx insn;\n {\n-  rtx x = PATTERN (insn);\n+  rtx x = PATTERN (insn), ret;\n   if (GET_CODE (x) == COND_EXEC)\n     x = COND_EXEC_CODE (x);\n   if (GET_CODE (x) == SET)\n     return x;\n-  return single_set_2 (insn, x);\n+  ret = single_set_2 (insn, x);\n+  if (ret == NULL && GET_CODE (x) == PARALLEL)\n+    {\n+      /* Special case here prologue_allocate_stack and\n+\t epilogue_deallocate_stack.  Although it is not a classical\n+\t single set, the second set is there just to protect it\n+\t from moving past FP-relative stack accesses.  */\n+      if (XVECLEN (x, 0) == 2\n+\t  && GET_CODE (XVECEXP (x, 0, 0)) == SET\n+\t  && GET_CODE (XVECEXP (x, 0, 1)) == SET\n+\t  && GET_CODE (SET_DEST (XVECEXP (x, 0, 1))) == REG\n+\t  && SET_DEST (XVECEXP (x, 0, 1)) == SET_SRC (XVECEXP (x, 0, 1))\n+\t  && ia64_safe_itanium_class (insn) == ITANIUM_CLASS_IALU)\n+\tret = XVECEXP (x, 0, 0);\n+    }\n+  return ret;\n }\n \n /* Adjust the cost of a scheduling dependency.  Return the new cost of"}, {"sha": "dedaaef2d50305d8ae55b78babd98779664480c6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30fa7e33061e1b31416ff202deffd5c9ab921351/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30fa7e33061e1b31416ff202deffd5c9ab921351/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=30fa7e33061e1b31416ff202deffd5c9ab921351", "patch": "@@ -1,3 +1,7 @@\n+2001-12-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.c-torture/compile/20011219-1.c: New test.\n+\n 2001-12-19  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.dg/other/error1.C: New test."}, {"sha": "04923092dff0f38afcd5eda919e314f638fdcdba", "filename": "gcc/testsuite/gcc.c-torture/compile/20011219-1.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30fa7e33061e1b31416ff202deffd5c9ab921351/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011219-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30fa7e33061e1b31416ff202deffd5c9ab921351/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011219-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20011219-1.c?ref=30fa7e33061e1b31416ff202deffd5c9ab921351", "patch": "@@ -0,0 +1,29 @@\n+/* This testcase failed on IA-64 at -O2 during scheduling.  */\n+\n+void * baz (unsigned long);\n+static inline double **\n+bar (long w, long x, long y, long z)\n+{\n+  long i, a = x - w + 1, b = z - y + 1;\n+  double **m = (double **) baz (sizeof (double *) * (a + 1));\n+\n+  m += 1;\n+  m -= w;\n+  m[w] = (double *) baz (sizeof (double) * (a * b + 1));\n+  m[w] += 1;\n+  m[w] -= y;\n+  for (i = w + 1; i <= x; i++)\n+    m[i] = m[i - 1] + b;\n+  return m;\n+}\n+\n+void\n+foo (double w[], int x, double y[], double z[])\n+{\n+  int i;\n+  double **a;\n+\n+  a = bar (1, 50, 1, 50);\n+  for (i = 1; i <= x; i++)\n+    a[1][i] = - w[x - i] / w[x];\n+}"}]}