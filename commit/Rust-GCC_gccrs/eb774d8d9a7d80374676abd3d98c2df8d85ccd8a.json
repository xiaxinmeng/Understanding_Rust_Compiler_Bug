{"sha": "eb774d8d9a7d80374676abd3d98c2df8d85ccd8a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI3NzRkOGQ5YTdkODAzNzQ2NzZhYmQzZDk4YzJkZjhkODVjY2Q4YQ==", "commit": {"author": {"name": "Nigel Stephens", "email": "nigel@algor.co.uk", "date": "1998-01-04T19:25:36Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-01-04T19:25:36Z"}, "message": "mips16.S: Various changes to make it work with -msingle-float and -EL.\n\n        *  mips/mips16.S: Various changes to make it work with -msingle-float\n        and -EL.\n\nFrom-SVN: r17293", "tree": {"sha": "25820edad1dd2ef2a9bb6ed13dff75001b2d2fdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25820edad1dd2ef2a9bb6ed13dff75001b2d2fdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb774d8d9a7d80374676abd3d98c2df8d85ccd8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb774d8d9a7d80374676abd3d98c2df8d85ccd8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb774d8d9a7d80374676abd3d98c2df8d85ccd8a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb774d8d9a7d80374676abd3d98c2df8d85ccd8a/comments", "author": null, "committer": null, "parents": [{"sha": "2bcb2ab32669b224d76d010a1e690857bad100aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bcb2ab32669b224d76d010a1e690857bad100aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bcb2ab32669b224d76d010a1e690857bad100aa"}], "stats": {"total": 248, "additions": 154, "deletions": 94}, "files": [{"sha": "06b38972bc0fd18dc471cef42d0ec607d363ef47", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb774d8d9a7d80374676abd3d98c2df8d85ccd8a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb774d8d9a7d80374676abd3d98c2df8d85ccd8a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb774d8d9a7d80374676abd3d98c2df8d85ccd8a", "patch": "@@ -1,3 +1,8 @@\n+Sun Jan  4 20:24:00 1998  Nigel Stephens  <nigel@algor.co.uk>\n+\n+\t*  mips/mips16.S: Various changes to make it work with -msingle-float\n+\tand -EL.\n+\n Sun Jan  4 14:25:18 1998  Gavin Koch  <gavin@cygnus.com>\n                           Ian Lance Taylor  <ian@cygnus.com>\n                           Jeff Law  <law@cygnus.com>"}, {"sha": "f5af9e7c476f396259b638a8e5515cfb768b68f0", "filename": "gcc/config/mips/mips16.S", "status": "modified", "additions": 149, "deletions": 94, "changes": 243, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb774d8d9a7d80374676abd3d98c2df8d85ccd8a/gcc%2Fconfig%2Fmips%2Fmips16.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb774d8d9a7d80374676abd3d98c2df8d85ccd8a/gcc%2Fconfig%2Fmips%2Fmips16.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips16.S?ref=eb774d8d9a7d80374676abd3d98c2df8d85ccd8a", "patch": "@@ -1,5 +1,5 @@\n /* mips16 floating point support code\n-   Copyright (C) 1996, 1997 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 1998 Free Software Foundation, Inc.\n    Contributed by Cygnus Support\n \n This file is free software; you can redistribute it and/or modify it\n@@ -81,6 +81,25 @@ SFOP(__mips16_mulsf3, mul.s)\n SFOP(__mips16_divsf3, div.s)\n #endif\n \n+#define SFOP2(NAME, OPCODE)\t\\\n+STARTFN (NAME);\t\t\t\\\n+\t.set\tnoreorder;\t\\\n+\tmtc1\t$4,$f0;\t\t\\\n+\tnop;\t\t\t\\\n+\tOPCODE\t$f0,$f0;\t\\\n+\tmfc1\t$2,$f0;\t\t\\\n+\tj\t$31;\t\t\\\n+\tnop;\t\t\t\\\n+\t.set\treorder;\t\\\n+\tENDFN (NAME)\n+\t\n+#ifdef L_m16negsf2\n+SFOP2(__mips16_negsf2, neg.s)\n+#endif\n+#ifdef L_m16abssf2\n+SFOP2(__mips16_abssf2, abs.s)\n+#endif\n+\t\n /* Single precision comparisons.  */\n \n /* This macro defines a function which loads two single precision\n@@ -161,6 +180,8 @@ STARTFN (__mips16_fixsfsi)\n \tENDFN (__mips16_fixsfsi)\n #endif\n \n+#if !defined(__mips_single_float) && !defined(__SINGLE_FLOAT)\n+\t\t\n /* The double precision operations.  We need to use different code\n    based on the preprocessor symbol __mips64, because the way in which\n    double precision values will change.  Without __mips64, the value\n@@ -169,28 +190,41 @@ STARTFN (__mips16_fixsfsi)\n \n /* Load the first double precision operand.  */\n \n-#ifdef __mips64\n-#define LDDBL1 dmtc1 $4,$f0\n-#else\n-#define LDDBL1 mtc1 $4,$f1; mtc1 $5,$f0\n+#if defined(__mips64)\n+#define LDDBL1 dmtc1 $4,$f12\n+#elif defined(__mipsfp64)\n+#define LDDBL1 sw $4,0($29); sw $5,4($29); l.d $f12,0($29)\n+#elif defined(__MIPSEB__)\t\n+#define LDDBL1 mtc1 $4,$f13; mtc1 $5,$f12\n+#else\t\n+#define LDDBL1 mtc1 $4,$f12; mtc1 $5,$f13\n #endif\n \n /* Load the second double precision operand.  */\n \n-#ifdef __mips64\n-#define LDDBL2 dmtc1 $5,$f2\n-#else\n-#define LDDBL2 mtc1 $6,$f3; mtc1 $7,$f2\n-#endif\n-\n+#if defined(__mips64)\n+/* XXX this should be $6 for Algo arg passing model */\n+#define LDDBL2 dmtc1 $5,$f14\n+#elif defined(__mipsfp64)\n+#define LDDBL2 sw $6,8($29); sw $7,12($29); l.d $f14,8($29)\n+#elif defined(__MIPSEB__)\t\n+#define LDDBL2 mtc1 $6,$f15; mtc1 $7,$f14\n+#else\t\n+#define LDDBL2 mtc1 $6,$f14; mtc1 $7,$f15\n+#endif\n+\t\n /* Move the double precision return value to the right place.  */\n \n-#ifdef __mips64\n+#if defined(__mips64)\n #define RETDBL dmfc1 $2,$f0\n-#else\n+#elif defined(__mipsfp64)\n+#define RETDBL s.d $f0,0($29); lw $2,0($29); lw $3,4($29)\n+#elif defined(__MIPSEB__)\t\n #define RETDBL mfc1 $2,$f1; mfc1 $3,$f0\n+#else\t\n+#define RETDBL mfc1 $2,$f0; mfc1 $3,$f1\n #endif\n-\n+\t\n /* Double precision math.  */\n \n /* This macro defines a function which loads two double precision\n@@ -203,7 +237,7 @@ STARTFN (NAME);\t\t\t\\\n \tLDDBL1;\t\t\t\\\n \tLDDBL2;\t\t\t\\\n \tnop;\t\t\t\\\n-\tOPCODE\t$f0,$f0,$f2;\t\\\n+\tOPCODE\t$f0,$f12,$f14;\t\\\n \tRETDBL;\t\t\t\\\n \tj\t$31;\t\t\\\n \tnop;\t\t\t\\\n@@ -223,14 +257,34 @@ DFOP(__mips16_muldf3, mul.d)\n DFOP(__mips16_divdf3, div.d)\n #endif\n \n+#define DFOP2(NAME, OPCODE)\t\\\n+STARTFN (NAME);\t\t\t\\\n+\t.set\tnoreorder;\t\\\n+\tLDDBL1;\t\t\t\\\n+\tnop;\t\t\t\\\n+\tOPCODE\t$f0,$f12;\t\\\n+\tRETDBL;\t\t\t\\\n+\tj\t$31;\t\t\\\n+\tnop;\t\t\t\\\n+\t.set\treorder;\t\\\n+\tENDFN (NAME)\n+\t\n+#ifdef L_m16negdf2\n+DFOP2(__mips16_negdf2, neg.d)\n+#endif\n+#ifdef L_m16absdf2\n+DFOP2(__mips16_absdf2, abs.d)\n+#endif\n+\n+\t\n /* Conversions between single and double precision.  */\n \n #ifdef L_m16extsfdf2\n STARTFN (__mips16_extendsfdf2)\n \t.set\tnoreorder\n-\tmtc1\t$4,$f0\n+\tmtc1\t$4,$f12\n \tnop\n-\tcvt.d.s\t$f0,$f0\n+\tcvt.d.s\t$f0,$f12\n \tRETDBL\n \tj\t$31\n \tnop\n@@ -243,7 +297,7 @@ STARTFN (__mips16_truncdfsf2)\n \t.set\tnoreorder\n \tLDDBL1\n \tnop\n-\tcvt.s.d\t$f0,$f0\n+\tcvt.s.d\t$f0,$f12\n \tmfc1\t$2,$f0\n \tj\t$31\n \tnop\n@@ -262,7 +316,7 @@ STARTFN (__mips16_truncdfsf2)\n STARTFN (NAME);\t\t\t\t\t\\\n \tLDDBL1;\t\t\t\t\t\\\n \tLDDBL2;\t\t\t\t\t\\\n-\tOPCODE\t$f0,$f2;\t\t\t\\\n+\tOPCODE\t$f12,$f14;\t\t\t\\\n \tli\t$2,TRUE;\t\t\t\\\n \tbc1t\t1f;\t\t\t\t\\\n \tli\t$2,FALSE;\t\t\t\\\n@@ -276,7 +330,7 @@ STARTFN (NAME);\t\t\t\t\t\\\n STARTFN (NAME);\t\t\t\t\t\\\n \tLDDBL1;\t\t\t\t\t\\\n \tLDDBL2;\t\t\t\t\t\\\n-\tOPCODE\t$f2,$f0;\t\t\t\\\n+\tOPCODE\t$f12,$f14;\t\t\t\\\n \tli\t$2,TRUE;\t\t\t\\\n \tbc1t\t1f;\t\t\t\t\\\n \tli\t$2,FALSE;\t\t\t\\\n@@ -308,9 +362,9 @@ DFCMP(__mips16_ltdf2, c.lt.d, -1, 0)\n #ifdef L_m16fltsidf\n STARTFN (__mips16_floatsidf)\n \t.set\tnoreorder\n-\tmtc1\t$4,$f0\n+\tmtc1\t$4,$f12\n \tnop\n-\tcvt.d.w\t$f0,$f0\n+\tcvt.d.w\t$f0,$f12\n \tRETDBL\n \tj\t$31\n \tnop\n@@ -323,13 +377,14 @@ STARTFN (__mips16_fixdfsi)\n \t.set\tnoreorder\n \tLDDBL1\n \tnop\n-\ttrunc.w.d $f0,$f0,$4\n+\ttrunc.w.d $f0,$f12,$4\n \tmfc1\t$2,$f0\n \tj\t$31\n \tnop\n \t.set\treorder\n \tENDFN (__mips16_fixdfsi)\n #endif\n+#endif /* !__mips_single_float */\n \n /* These functions are used to return floating point values from\n    mips16 functions which do not use -mentry.  In this case we can\n@@ -345,14 +400,30 @@ STARTFN (__mips16_ret_sf)\n \tENDFN (__mips16_ret_sf)\n #endif\n \n+#if !defined(__mips_single_float) && !defined(__SINGLE_FLOAT)\n #ifdef L_m16retdf\n STARTFN (__mips16_ret_df)\n \t.set\tnoreorder\n+#if defined(__mips64)\n+\tj\t$31\n+\tdmtc1\t$2,$f0\n+#elif defined(__mipsfp64)\n+\tsw\t$2,0($29)\n+\tsw\t$3,4($29)\n+\tl.d\t$f0,0($29) \n+#elif defined(__MIPSEB__)\t\n \tmtc1\t$2,$f1\n \tj\t$31\n \tmtc1\t$3,$f0\n+#else\t\n+\tmtc1\t$2,$f0\n+\tj\t$31\n+\tmtc1\t$3,$f1\n+#endif\n+\t.set\treorder\n \tENDFN (__mips16_ret_df)\n #endif\n+#endif /* !__mips_single_float */\n \n /* These functions are used by 16 bit code when calling via a function\n    pointer.  They must copy the floating point arguments from the gp\n@@ -372,18 +443,6 @@ STARTFN (__mips16_call_stub_1)\n \tENDFN (__mips16_call_stub_1)\n #endif\n \n-#ifdef L_m16stub2\n-/* (double) */\n-STARTFN (__mips16_call_stub_2)\n-\t.set\tnoreorder\n-\tmtc1\t$5,$f12\n-\tmtc1\t$4,$f13\n-\tj\t$2\n-\tnop\n-\t.set\treorder\n-\tENDFN (__mips16_call_stub_2)\n-#endif\n-\n #ifdef L_m16stub5\n /* (float, float) */\n STARTFN (__mips16_call_stub_5)\n@@ -396,12 +455,24 @@ STARTFN (__mips16_call_stub_5)\n \tENDFN (__mips16_call_stub_5)\n #endif\n \n+#if !defined(__mips_single_float) && !defined(__SINGLE_FLOAT)\n+\n+#ifdef L_m16stub2\n+/* (double) */\n+STARTFN (__mips16_call_stub_2)\n+\t.set\tnoreorder\n+\tLDDBL1\n+\tj\t$2\n+\tnop\n+\t.set\treorder\n+\tENDFN (__mips16_call_stub_2)\n+#endif\n+\n #ifdef L_m16stub6\n /* (double, float) */\n STARTFN (__mips16_call_stub_6)\n \t.set\tnoreorder\n-\tmtc1\t$5,$f12\n-\tmtc1\t$4,$f13\n+\tLDDBL1\n \tmtc1\t$6,$f14\n \tj\t$2\n \tnop\n@@ -414,8 +485,7 @@ STARTFN (__mips16_call_stub_6)\n STARTFN (__mips16_call_stub_9)\n \t.set\tnoreorder\n \tmtc1\t$4,$f12\n-\tmtc1\t$7,$f14\n-\tmtc1\t$6,$f15\n+\tLDDBL2\n \tj\t$2\n \tnop\n \t.set\treorder\n@@ -426,15 +496,14 @@ STARTFN (__mips16_call_stub_9)\n /* (double, double) */\n STARTFN (__mips16_call_stub_10)\n \t.set\tnoreorder\n-\tmtc1\t$5,$f12\n-\tmtc1\t$4,$f13\n-\tmtc1\t$7,$f14\n-\tmtc1\t$6,$f15\n+\tLDDBL1\n+\tLDDBL2\n \tj\t$2\n \tnop\n \t.set\treorder\n \tENDFN (__mips16_call_stub_10)\n #endif\n+#endif /* !__mips_single_float */\n \n /* Now we have the same set of functions, except that this time the\n    function being called returns an SFmode value.  The calling\n@@ -455,7 +524,7 @@ STARTFN (__mips16_call_stub_sf_0)\n \tmove\t$18,$31\n \tjal\t$2\n \tnop\n-\tmfc1\t$4,$f0\n+\tmfc1\t$2,$f0\n \tj\t$18\n \tnop\n \t.set\treorder\n@@ -470,56 +539,55 @@ STARTFN (__mips16_call_stub_sf_1)\n \tmove\t$18,$31\n \tjal\t$2\n \tnop\n-\tmfc1\t$4,$f0\n+\tmfc1\t$2,$f0\n \tj\t$18\n \tnop\n \t.set\treorder\n \tENDFN (__mips16_call_stub_sf_1)\n #endif\n \n-#ifdef L_m16stubsf2\n-/* (double) */\n-STARTFN (__mips16_call_stub_sf_2)\n+#ifdef L_m16stubsf5\n+/* (float, float) */\n+STARTFN (__mips16_call_stub_sf_5)\n \t.set\tnoreorder\n-\tmtc1\t$5,$f12\n-\tmtc1\t$4,$f13\n+\tmtc1\t$4,$f12\n+\tmtc1\t$5,$f14\n \tmove\t$18,$31\n \tjal\t$2\n \tnop\n-\tmfc1\t$4,$f0\n+\tmfc1\t$2,$f0\n \tj\t$18\n \tnop\n \t.set\treorder\n-\tENDFN (__mips16_call_stub_sf_2)\n+\tENDFN (__mips16_call_stub_sf_5)\n #endif\n \n-#ifdef L_m16stubsf5\n-/* (float, float) */\n-STARTFN (__mips16_call_stub_sf_5)\n+#if !defined(__mips_single_float) && !defined(__SINGLE_FLOAT)\n+#ifdef L_m16stubsf2\n+/* (double) */\n+STARTFN (__mips16_call_stub_sf_2)\n \t.set\tnoreorder\n-\tmtc1\t$4,$f12\n-\tmtc1\t$5,$f14\n+\tLDDBL1\n \tmove\t$18,$31\n \tjal\t$2\n \tnop\n-\tmfc1\t$4,$f0\n+\tmfc1\t$2,$f0\n \tj\t$18\n \tnop\n \t.set\treorder\n-\tENDFN (__mips16_call_stub_sf_5)\n+\tENDFN (__mips16_call_stub_sf_2)\n #endif\n \n #ifdef L_m16stubsf6\n /* (double, float) */\n STARTFN (__mips16_call_stub_sf_6)\n \t.set\tnoreorder\n-\tmtc1\t$5,$f12\n-\tmtc1\t$4,$f13\n+\tLDDBL1\n \tmtc1\t$6,$f14\n \tmove\t$18,$31\n \tjal\t$2\n \tnop\n-\tmfc1\t$4,$f0\n+\tmfc1\t$2,$f0\n \tj\t$18\n \tnop\n \t.set\treorder\n@@ -531,12 +599,11 @@ STARTFN (__mips16_call_stub_sf_6)\n STARTFN (__mips16_call_stub_sf_9)\n \t.set\tnoreorder\n \tmtc1\t$4,$f12\n-\tmtc1\t$7,$f14\n-\tmtc1\t$6,$f15\n+\tLDDBL2\n \tmove\t$18,$31\n \tjal\t$2\n \tnop\n-\tmfc1\t$4,$f0\n+\tmfc1\t$2,$f0\n \tj\t$18\n \tnop\n \t.set\treorder\n@@ -547,14 +614,12 @@ STARTFN (__mips16_call_stub_sf_9)\n /* (double, double) */\n STARTFN (__mips16_call_stub_sf_10)\n \t.set\tnoreorder\n-\tmtc1\t$5,$f12\n-\tmtc1\t$4,$f13\n-\tmtc1\t$7,$f14\n-\tmtc1\t$6,$f15\n+\tLDDBL1\n+\tLDDBL2\n \tmove\t$18,$31\n \tjal\t$2\n \tnop\n-\tmfc1\t$4,$f0\n+\tmfc1\t$2,$f0\n \tj\t$18\n \tnop\n \t.set\treorder\n@@ -571,8 +636,7 @@ STARTFN (__mips16_call_stub_df_0)\n \tmove\t$18,$31\n \tjal\t$2\n \tnop\n-\tmfc1\t$5,$f0\n-\tmfc1\t$4,$f1\n+\tRETDBL\n \tj\t$18\n \tnop\n \t.set\treorder\n@@ -587,8 +651,7 @@ STARTFN (__mips16_call_stub_df_1)\n \tmove\t$18,$31\n \tjal\t$2\n \tnop\n-\tmfc1\t$5,$f0\n-\tmfc1\t$4,$f1\n+\tRETDBL\n \tj\t$18\n \tnop\n \t.set\treorder\n@@ -599,13 +662,11 @@ STARTFN (__mips16_call_stub_df_1)\n /* (double) */\n STARTFN (__mips16_call_stub_df_2)\n \t.set\tnoreorder\n-\tmtc1\t$5,$f12\n-\tmtc1\t$4,$f13\n+\tLDDBL1\n \tmove\t$18,$31\n \tjal\t$2\n \tnop\n-\tmfc1\t$5,$f0\n-\tmfc1\t$4,$f1\n+\tRETDBL\n \tj\t$18\n \tnop\n \t.set\treorder\n@@ -621,8 +682,7 @@ STARTFN (__mips16_call_stub_df_5)\n \tmove\t$18,$31\n \tjal\t$2\n \tnop\n-\tmfc1\t$5,$f0\n-\tmfc1\t$4,$f1\n+\tRETDBL\n \tj\t$18\n \tnop\n \t.set\treorder\n@@ -633,14 +693,12 @@ STARTFN (__mips16_call_stub_df_5)\n /* (double, float) */\n STARTFN (__mips16_call_stub_df_6)\n \t.set\tnoreorder\n-\tmtc1\t$5,$f12\n-\tmtc1\t$4,$f13\n+\tLDDBL1\n \tmtc1\t$6,$f14\n \tmove\t$18,$31\n \tjal\t$2\n \tnop\n-\tmfc1\t$5,$f0\n-\tmfc1\t$4,$f1\n+\tRETDBL\n \tj\t$18\n \tnop\n \t.set\treorder\n@@ -652,13 +710,11 @@ STARTFN (__mips16_call_stub_df_6)\n STARTFN (__mips16_call_stub_df_9)\n \t.set\tnoreorder\n \tmtc1\t$4,$f12\n-\tmtc1\t$7,$f14\n-\tmtc1\t$6,$f15\n+\tLDDBL2\n \tmove\t$18,$31\n \tjal\t$2\n \tnop\n-\tmfc1\t$5,$f0\n-\tmfc1\t$4,$f1\n+\tRETDBL\n \tj\t$18\n \tnop\n \t.set\treorder\n@@ -669,17 +725,16 @@ STARTFN (__mips16_call_stub_df_9)\n /* (double, double) */\n STARTFN (__mips16_call_stub_df_10)\n \t.set\tnoreorder\n-\tmtc1\t$5,$f12\n-\tmtc1\t$4,$f13\n-\tmtc1\t$7,$f14\n-\tmtc1\t$6,$f15\n+\tLDDBL1\n+\tLDDBL2\n \tmove\t$18,$31\n \tjal\t$2\n \tnop\n-\tmfc1\t$5,$f0\n-\tmfc1\t$4,$f1\n+\tRETDBL\n \tj\t$18\n \tnop\n \t.set\treorder\n \tENDFN (__mips16_call_stub_df_10)\n #endif\n+#endif /* !__mips_single_float */\n+"}]}