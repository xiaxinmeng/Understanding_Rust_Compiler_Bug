{"sha": "601070fce9761f7665d5916c786fe065f3165c00", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAxMDcwZmNlOTc2MWY3NjY1ZDU5MTZjNzg2ZmUwNjVmMzE2NWMwMA==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2016-05-10T18:28:10Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2016-05-10T18:28:10Z"}, "message": "Simplify read-md.c and read-rtl.c using require_char_ws\n\nread-md.c and read-rtl.c repeatedly use this pattern:\n\n    c = read_skip_spaces ();\n    if (c != ')')\n      fatal_expected_char (')', c);\n\nSimplify them by introduce a helper function to do this.\n\ngcc/ChangeLog:\n\t* read-md.c (require_char_ws): New function.\n\t(read_string): Simplify using require_char_ws.\n\t(handle_constants): Likewise.\n\t(handle_enum): Likewise.\n\t(handle_file): Likewise.\n\t* read-md.h (require_char_ws): New declaration.\n\t* read-rtl.c (read_conditions): Simplify using require_char_ws.\n\t(read_mapping): Likewise.\n\t(read_rtx_code): Likewise.\n\t(read_nested_rtx): Likewise.\n\nFrom-SVN: r236101", "tree": {"sha": "4536dc681253ddda5e2965d30e5b73bfb1e4008a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4536dc681253ddda5e2965d30e5b73bfb1e4008a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/601070fce9761f7665d5916c786fe065f3165c00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/601070fce9761f7665d5916c786fe065f3165c00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/601070fce9761f7665d5916c786fe065f3165c00", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/601070fce9761f7665d5916c786fe065f3165c00/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3126957087d5ce8dc7e7c5f38118769732c335bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3126957087d5ce8dc7e7c5f38118769732c335bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3126957087d5ce8dc7e7c5f38118769732c335bc"}], "stats": {"total": 80, "additions": 38, "deletions": 42}, "files": [{"sha": "2e58aebb21d7c3df692a23109030835920114337", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/601070fce9761f7665d5916c786fe065f3165c00/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/601070fce9761f7665d5916c786fe065f3165c00/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=601070fce9761f7665d5916c786fe065f3165c00", "patch": "@@ -1,3 +1,16 @@\n+2016-05-10  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* read-md.c (require_char_ws): New function.\n+\t(read_string): Simplify using require_char_ws.\n+\t(handle_constants): Likewise.\n+\t(handle_enum): Likewise.\n+\t(handle_file): Likewise.\n+\t* read-md.h (require_char_ws): New declaration.\n+\t* read-rtl.c (read_conditions): Simplify using require_char_ws.\n+\t(read_mapping): Likewise.\n+\t(read_rtx_code): Likewise.\n+\t(read_nested_rtx): Likewise.\n+\n 2016-05-10  James Norris  <jnorris@codesourcery.com>\n \n \t* config/rs6000/sysv4.h (CRTOFFLOADBEGIN): Define. Add crtoffloadbegin.o"}, {"sha": "b422d8dc75cad8f1bfb3c20b16d413948dfd870c", "filename": "gcc/read-md.c", "status": "modified", "additions": 16, "deletions": 17, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/601070fce9761f7665d5916c786fe065f3165c00/gcc%2Fread-md.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/601070fce9761f7665d5916c786fe065f3165c00/gcc%2Fread-md.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fread-md.c?ref=601070fce9761f7665d5916c786fe065f3165c00", "patch": "@@ -391,6 +391,17 @@ read_skip_spaces (void)\n     }\n }\n \n+/* Consume any whitespace, then consume the next non-whitespace\n+   character, issuing a fatal error if it is not EXPECTED.  */\n+\n+void\n+require_char_ws (char expected)\n+{\n+  int ch = read_skip_spaces ();\n+  if (ch != expected)\n+    fatal_expected_char (expected, ch);\n+}\n+\n /* Read an rtx code name into NAME.  It is terminated by any of the\n    punctuation chars of rtx printed syntax.  */\n \n@@ -603,11 +614,7 @@ read_string (int star_if_braced)\n     fatal_with_file_and_line (\"expected `\\\"' or `{', found `%c'\", c);\n \n   if (saw_paren)\n-    {\n-      c = read_skip_spaces ();\n-      if (c != ')')\n-\tfatal_expected_char (')', c);\n-    }\n+    require_char_ws (')');\n \n   set_md_ptr_loc (stringbuf, read_md_filename, old_lineno);\n   return stringbuf;\n@@ -764,9 +771,7 @@ handle_constants (void)\n   int c;\n   htab_t defs;\n \n-  c = read_skip_spaces ();\n-  if (c != '[')\n-    fatal_expected_char ('[', c);\n+  require_char_ws ('[');\n \n   /* Disable constant expansion during definition processing.  */\n   defs = md_constants;\n@@ -782,9 +787,7 @@ handle_constants (void)\n       read_name (&value);\n       add_constant (defs, xstrdup (name.string), xstrdup (value.string), 0);\n \n-      c = read_skip_spaces ();\n-      if (c != ')')\n-\tfatal_expected_char (')', c);\n+      require_char_ws (')');\n     }\n   md_constants = defs;\n }\n@@ -846,9 +849,7 @@ handle_enum (file_location loc, bool md_p)\n       *slot = def;\n     }\n \n-  c = read_skip_spaces ();\n-  if (c != '[')\n-    fatal_expected_char ('[', c);\n+  require_char_ws ('[');\n \n   while ((c = read_skip_spaces ()) != ']')\n     {\n@@ -1007,9 +1008,7 @@ handle_file (directive_handler_t handle_directive)\n       else\n \tread_skip_construct (1, loc);\n \n-      c = read_skip_spaces ();\n-      if (c != ')')\n-\tfatal_expected_char (')', c);\n+      require_char_ws (')');\n     }\n   fclose (read_md_file);\n }"}, {"sha": "fa259517a26bb49815a37a4178718df4e673f6fb", "filename": "gcc/read-md.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/601070fce9761f7665d5916c786fe065f3165c00/gcc%2Fread-md.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/601070fce9761f7665d5916c786fe065f3165c00/gcc%2Fread-md.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fread-md.h?ref=601070fce9761f7665d5916c786fe065f3165c00", "patch": "@@ -141,6 +141,7 @@ extern void fatal_with_file_and_line (const char *, ...)\n   ATTRIBUTE_PRINTF_1 ATTRIBUTE_NORETURN;\n extern void fatal_expected_char (int, int) ATTRIBUTE_NORETURN;\n extern int read_skip_spaces (void);\n+extern void require_char_ws (char expected);\n extern void read_name (struct md_name *);\n extern char *read_quoted_string (void);\n extern char *read_string (int);"}, {"sha": "dc3a336b45bb658108846d03b2ac805fdb6205d1", "filename": "gcc/read-rtl.c", "status": "modified", "additions": 8, "deletions": 25, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/601070fce9761f7665d5916c786fe065f3165c00/gcc%2Fread-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/601070fce9761f7665d5916c786fe065f3165c00/gcc%2Fread-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fread-rtl.c?ref=601070fce9761f7665d5916c786fe065f3165c00", "patch": "@@ -742,9 +742,7 @@ read_conditions (void)\n {\n   int c;\n \n-  c = read_skip_spaces ();\n-  if (c != '[')\n-    fatal_expected_char ('[', c);\n+  require_char_ws ('[');\n \n   while ( (c = read_skip_spaces ()) != ']')\n     {\n@@ -759,14 +757,10 @@ read_conditions (void)\n       validate_const_int (name.string);\n       value = atoi (name.string);\n \n-      c = read_skip_spaces ();\n-      if (c != '\"')\n-\tfatal_expected_char ('\"', c);\n+      require_char_ws ('\"');\n       expr = read_quoted_string ();\n \n-      c = read_skip_spaces ();\n-      if (c != ')')\n-\tfatal_expected_char (')', c);\n+      require_char_ws (')');\n \n       add_c_test (expr, value);\n     }\n@@ -890,9 +884,7 @@ read_mapping (struct iterator_group *group, htab_t table)\n   read_name (&name);\n   m = add_mapping (group, table, name.string);\n \n-  c = read_skip_spaces ();\n-  if (c != '[')\n-    fatal_expected_char ('[', c);\n+  require_char_ws ('[');\n \n   /* Read each value.  */\n   end_ptr = &m->values;\n@@ -912,9 +904,7 @@ read_mapping (struct iterator_group *group, htab_t table)\n \t  /* A \"(name string)\" pair.  */\n \t  read_name (&name);\n \t  string = read_string (false);\n-\t  c = read_skip_spaces ();\n-\t  if (c != ')')\n-\t    fatal_expected_char (')', c);\n+\t  require_char_ws (')');\n \t}\n       number = group->find_builtin (name.string);\n       end_ptr = add_map_value (end_ptr, number, string);\n@@ -1181,9 +1171,7 @@ read_rtx_code (const char *code_name)\n \t  int list_counter = 0;\n \t  rtvec return_vec = NULL_RTVEC;\n \n-\t  c = read_skip_spaces ();\n-\t  if (c != '[')\n-\t    fatal_expected_char ('[', c);\n+\t  require_char_ws ('[');\n \n \t  /* Add expressions to a list, while keeping a count.  */\n \t  obstack_init (&vector_stack);\n@@ -1398,22 +1386,17 @@ static rtx\n read_nested_rtx (void)\n {\n   struct md_name name;\n-  int c;\n   rtx return_rtx;\n \n-  c = read_skip_spaces ();\n-  if (c != '(')\n-    fatal_expected_char ('(', c);\n+  require_char_ws ('(');\n \n   read_name (&name);\n   if (strcmp (name.string, \"nil\") == 0)\n     return_rtx = NULL;\n   else\n     return_rtx = read_rtx_code (name.string);\n \n-  c = read_skip_spaces ();\n-  if (c != ')')\n-    fatal_expected_char (')', c);\n+  require_char_ws (')');\n \n   return return_rtx;\n }"}]}