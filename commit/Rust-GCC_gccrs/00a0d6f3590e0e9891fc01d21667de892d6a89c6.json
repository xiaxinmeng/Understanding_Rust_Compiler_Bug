{"sha": "00a0d6f3590e0e9891fc01d21667de892d6a89c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDBhMGQ2ZjM1OTBlMGU5ODkxZmMwMWQyMTY2N2RlODkyZDZhODljNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-03-29T18:47:43Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-29T18:47:43Z"}, "message": "re PR c++/48089 ([C++0x] ICE on in(?)valid in constexpr constructors)\n\n\tPR c++/48089\n\t* semantics.c (potential_constant_expression_1): Change error about\n\tuse of *this in constructor into sorry.\n\nFrom-SVN: r171687", "tree": {"sha": "ea1426ddcfe08e8bf73ce3214a37e83090c61fe5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea1426ddcfe08e8bf73ce3214a37e83090c61fe5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/00a0d6f3590e0e9891fc01d21667de892d6a89c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00a0d6f3590e0e9891fc01d21667de892d6a89c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00a0d6f3590e0e9891fc01d21667de892d6a89c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00a0d6f3590e0e9891fc01d21667de892d6a89c6/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5c82436e4009c53b40616b83da778e3548a8a6af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c82436e4009c53b40616b83da778e3548a8a6af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c82436e4009c53b40616b83da778e3548a8a6af"}], "stats": {"total": 31, "additions": 26, "deletions": 5}, "files": [{"sha": "3d0c02a44fa89d6fb1e96b5d9557f11d1736bdcb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00a0d6f3590e0e9891fc01d21667de892d6a89c6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00a0d6f3590e0e9891fc01d21667de892d6a89c6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=00a0d6f3590e0e9891fc01d21667de892d6a89c6", "patch": "@@ -1,5 +1,9 @@\n 2011-03-29  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/48089\n+\t* semantics.c (potential_constant_expression_1): Change error about\n+\tuse of *this in constructor into sorry.\n+\n \tPR c++/48296\n \t* decl.c (cp_finish_decl): Defer validation of constexpr member\n \tfunctions."}, {"sha": "5a659434de68979619c340cf0e3dd7064314c84d", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00a0d6f3590e0e9891fc01d21667de892d6a89c6/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00a0d6f3590e0e9891fc01d21667de892d6a89c6/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=00a0d6f3590e0e9891fc01d21667de892d6a89c6", "patch": "@@ -7495,8 +7495,8 @@ potential_constant_expression_1 (tree t, bool want_rval, tsubst_flags_t flags)\n \t    if (DECL_CONSTRUCTOR_P (DECL_CONTEXT (x)) && want_rval)\n \t      {\n \t\tif (flags & tf_error)\n-\t\t  error (\"the value of the object being constructed is \"\n-\t\t\t \"not a constant expression\");\n+\t\t  sorry (\"use of the value of the object being constructed \"\n+\t\t\t \"in a constant expression\");\n \t\treturn false;\n \t      }\n \t    return true;"}, {"sha": "fbd21e5d3a41cce685bb4d2ab0c46a0f9c434d3a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00a0d6f3590e0e9891fc01d21667de892d6a89c6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00a0d6f3590e0e9891fc01d21667de892d6a89c6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=00a0d6f3590e0e9891fc01d21667de892d6a89c6", "patch": "@@ -1,5 +1,7 @@\n 2011-03-29  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/cpp0x/constexpr-48089.C: Adjust.\n+\n \t* g++.dg/cpp0x/constexpr-memfn1.C: New.\n \n \t* g++.dg/cpp0x/constexpr-diag1.C: Adjust error locations."}, {"sha": "fc69cfef6780d1f352c45bdd2c5ae91cb7261948", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-48089.C", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/00a0d6f3590e0e9891fc01d21667de892d6a89c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-48089.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/00a0d6f3590e0e9891fc01d21667de892d6a89c6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-48089.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-48089.C?ref=00a0d6f3590e0e9891fc01d21667de892d6a89c6", "patch": "@@ -1,9 +1,24 @@\n // PR c++/48089\n // { dg-options -std=c++0x }\n \n+// bang is ill-formed (diagnostic required) because its initializer is\n+// non-constant, because it uses the value of an uninitialized object.\n+\n+// s() is ill-formed (no diagnostic required) because there is no set of\n+// arguments that would produce a constant expression.\n+\n+// R() is well-formed because i is initialized before j.\n+\n struct s {\n-    constexpr s() : v(v) { }\t// { dg-error \"object being constructed\" }\n-    char v;\n+  constexpr s() : v(v) { }\t// { dg-message \"\" }\n+  int v;\n+};\n+\n+constexpr s bang;\t\t// { dg-error \"\" }\n+\n+struct R {\n+  int i,j;\n+  constexpr R() : i(42),j(i) { } // { dg-bogus \"\" \"\" { xfail *-*-* } }\n };\n \n-s bang;\n+constexpr R r;\t\t\t// { dg-bogus \"\" \"\" { xfail *-*-* } }"}]}