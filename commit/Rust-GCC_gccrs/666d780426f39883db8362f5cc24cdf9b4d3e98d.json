{"sha": "666d780426f39883db8362f5cc24cdf9b4d3e98d", "node_id": "C_kwDOANBUbNoAKDY2NmQ3ODA0MjZmMzk4ODNkYjgzNjJmNWNjMjRjZGY5YjRkM2U5OGQ", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2021-11-08T17:38:09Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2021-11-08T17:38:09Z"}, "message": "Move uncprop after modref\n\nmoveS uncprop after modref and pure/const pass and adds a comment that\nthis pass should alwasy be last since it is only supposed to help PHI lowering.\nThe pass replaces constant by SSA names that are known to be constant at the\nplace which hardly helps other passes.\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/103177\n\t* passes.def: Move uncprop after pure/const and modref.", "tree": {"sha": "e9b7f4b16b0b562a8573602ca02c83cff71cf2cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9b7f4b16b0b562a8573602ca02c83cff71cf2cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/666d780426f39883db8362f5cc24cdf9b4d3e98d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/666d780426f39883db8362f5cc24cdf9b4d3e98d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/666d780426f39883db8362f5cc24cdf9b4d3e98d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/666d780426f39883db8362f5cc24cdf9b4d3e98d/comments", "author": null, "committer": null, "parents": [{"sha": "239d82d4c05b30632fd09ba4056de7dac5aee070", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/239d82d4c05b30632fd09ba4056de7dac5aee070", "html_url": "https://github.com/Rust-GCC/gccrs/commit/239d82d4c05b30632fd09ba4056de7dac5aee070"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "56dab80a02968ea53905399b621c47ea2cc8d1bc", "filename": "gcc/passes.def", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/666d780426f39883db8362f5cc24cdf9b4d3e98d/gcc%2Fpasses.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/666d780426f39883db8362f5cc24cdf9b4d3e98d/gcc%2Fpasses.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.def?ref=666d780426f39883db8362f5cc24cdf9b4d3e98d", "patch": "@@ -360,9 +360,11 @@ along with GCC; see the file COPYING3.  If not see\n          number of false positives from it.  */\n       NEXT_PASS (pass_split_crit_edges);\n       NEXT_PASS (pass_late_warn_uninitialized);\n-      NEXT_PASS (pass_uncprop);\n       NEXT_PASS (pass_local_pure_const);\n       NEXT_PASS (pass_modref);\n+      /* uncprop replaces constants by SSA names.  This makes analysis harder\n+\t and thus it should be run last.  */\n+      NEXT_PASS (pass_uncprop);\n   POP_INSERT_PASSES ()\n   NEXT_PASS (pass_all_optimizations_g);\n   PUSH_INSERT_PASSES_WITHIN (pass_all_optimizations_g)\n@@ -393,9 +395,11 @@ along with GCC; see the file COPYING3.  If not see\n          number of false positives from it.  */\n       NEXT_PASS (pass_split_crit_edges);\n       NEXT_PASS (pass_late_warn_uninitialized);\n-      NEXT_PASS (pass_uncprop);\n       NEXT_PASS (pass_local_pure_const);\n       NEXT_PASS (pass_modref);\n+      /* uncprop replaces constants by SSA names.  This makes analysis harder\n+\t and thus it should be run last.  */\n+      NEXT_PASS (pass_uncprop);\n   POP_INSERT_PASSES ()\n   NEXT_PASS (pass_tm_init);\n   PUSH_INSERT_PASSES_WITHIN (pass_tm_init)"}]}