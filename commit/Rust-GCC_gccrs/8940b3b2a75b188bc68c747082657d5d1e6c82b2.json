{"sha": "8940b3b2a75b188bc68c747082657d5d1e6c82b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk0MGIzYjJhNzViMTg4YmM2OGM3NDcwODI2NTdkNWQxZTZjODJiMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2005-02-16T13:54:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2005-02-16T13:54:30Z"}, "message": "re PR middle-end/19857 (alignment check of SSE constant fails in simple test program)\n\n\tPR middle-end/19857\n\t* fold-const.c (fold): Don't optimize (T)(x & cst) to\n\t(T)x & (T)cst if (T)cst overflows.\n\t* convert.c (convert_to_integer) <case POINTER_TYPE>: Pass\n\tTYPE_UNSIGNED (type) as type_for_size's UNSIGNEDP argument.\n\n\t* gcc.dg/tree-ssa/20050215-1.c: New test.\n\t* gcc.c-torture/execute/20050215-1.c: New test.\n\nFrom-SVN: r95106", "tree": {"sha": "a0e729b4caa91a35b874138ae8a236e49b023751", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0e729b4caa91a35b874138ae8a236e49b023751"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8940b3b2a75b188bc68c747082657d5d1e6c82b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8940b3b2a75b188bc68c747082657d5d1e6c82b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8940b3b2a75b188bc68c747082657d5d1e6c82b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8940b3b2a75b188bc68c747082657d5d1e6c82b2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "838731b61e6f6b91ed60653823abfc380e012a09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/838731b61e6f6b91ed60653823abfc380e012a09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/838731b61e6f6b91ed60653823abfc380e012a09"}], "stats": {"total": 66, "additions": 62, "deletions": 4}, "files": [{"sha": "1dbbf273a042a2f1aaaf303506b622ab5bbee6a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8940b3b2a75b188bc68c747082657d5d1e6c82b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8940b3b2a75b188bc68c747082657d5d1e6c82b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8940b3b2a75b188bc68c747082657d5d1e6c82b2", "patch": "@@ -1,3 +1,11 @@\n+2005-02-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/19857\n+\t* fold-const.c (fold): Don't optimize (T)(x & cst) to\n+\t(T)x & (T)cst if (T)cst overflows.\n+\t* convert.c (convert_to_integer) <case POINTER_TYPE>: Pass\n+\tTYPE_UNSIGNED (type) as type_for_size's UNSIGNEDP argument.\n+\n 2005-02-15  Jeff Law  <law@redhat.com>\n \n \t* gcse.c (blocks_with_calls): New bitmap."}, {"sha": "f1a38c2d240768803d09f713c69de198b6e28b80", "filename": "gcc/convert.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8940b3b2a75b188bc68c747082657d5d1e6c82b2/gcc%2Fconvert.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8940b3b2a75b188bc68c747082657d5d1e6c82b2/gcc%2Fconvert.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconvert.c?ref=8940b3b2a75b188bc68c747082657d5d1e6c82b2", "patch": "@@ -387,7 +387,8 @@ convert_to_integer (tree type, tree expr)\n \texpr = integer_zero_node;\n       else\n \texpr = fold (build1 (CONVERT_EXPR,\n-\t\t\t     lang_hooks.types.type_for_size (POINTER_SIZE, 0),\n+\t\t\t     lang_hooks.types.type_for_size\n+\t\t\t\t(POINTER_SIZE, TYPE_UNSIGNED (type)),\n \t\t\t     expr));\n \n       return convert_to_integer (type, expr);"}, {"sha": "5e2a8682c0980e6805d915343ec3bd8220588674", "filename": "gcc/fold-const.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8940b3b2a75b188bc68c747082657d5d1e6c82b2/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8940b3b2a75b188bc68c747082657d5d1e6c82b2/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=8940b3b2a75b188bc68c747082657d5d1e6c82b2", "patch": "@@ -6874,9 +6874,14 @@ fold (tree expr)\n #endif\n \t    }\n \t  if (change)\n-\t    return fold (build2 (BIT_AND_EXPR, type,\n-\t\t\t\t fold_convert (type, and0),\n-\t\t\t\t fold_convert (type, and1)));\n+\t    {\n+\t      tem = build_int_cst_wide (type, TREE_INT_CST_LOW (and1),\n+\t\t\t\t\tTREE_INT_CST_HIGH (and1));\n+\t      tem = force_fit_type (tem, 0, TREE_OVERFLOW (and1),\n+\t\t\t\t    TREE_CONSTANT_OVERFLOW (and1));\n+\t      return fold (build2 (BIT_AND_EXPR, type,\n+\t\t\t\t   fold_convert (type, and0), tem));\n+\t    }\n \t}\n \n       /* Convert (T1)((T2)X op Y) into (T1)X op Y, for pointer types T1 and"}, {"sha": "950407318abf036c87fc32318b74696f6c9a9ba1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8940b3b2a75b188bc68c747082657d5d1e6c82b2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8940b3b2a75b188bc68c747082657d5d1e6c82b2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8940b3b2a75b188bc68c747082657d5d1e6c82b2", "patch": "@@ -1,3 +1,9 @@\n+2005-02-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/19857\n+\t* gcc.dg/tree-ssa/20050215-1.c: New test.\n+\t* gcc.c-torture/execute/20050215-1.c: New test.\n+\n 2005-02-15  Eric Christopher  <echristo@redhat.com>\n \n \t* gcc.dg/cpp/20050215-1.c: New file."}, {"sha": "f4920ce5fd95ebd07754810ae50db43bf996cdd6", "filename": "gcc/testsuite/gcc.c-torture/execute/20050215-1.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8940b3b2a75b188bc68c747082657d5d1e6c82b2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050215-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8940b3b2a75b188bc68c747082657d5d1e6c82b2/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050215-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20050215-1.c?ref=8940b3b2a75b188bc68c747082657d5d1e6c82b2", "patch": "@@ -0,0 +1,25 @@\n+/* PR middle-end/19857 */\n+\n+typedef struct { char c[8]; } V\n+#ifdef __ELF__\n+  __attribute__ ((aligned (8)))\n+#endif\n+  ;\n+typedef __SIZE_TYPE__ size_t;\n+V v;\n+void abort (void);\n+\n+int\n+main (void)\n+{\n+  V *w = &v;\n+  if (((size_t) ((float *) ((size_t) w & ~(size_t) 3)) % 8) != 0\n+      || ((size_t) w & 1))\n+    {\n+#ifndef __ELF__\n+      if (((size_t) &v & 7) == 0)\n+#endif\n+\tabort ();\n+    }\n+  return 0;\n+}"}, {"sha": "6ce588038aa560f50b254bf53760ae1ca6a194a4", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20050215-1.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8940b3b2a75b188bc68c747082657d5d1e6c82b2/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20050215-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8940b3b2a75b188bc68c747082657d5d1e6c82b2/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20050215-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20050215-1.c?ref=8940b3b2a75b188bc68c747082657d5d1e6c82b2", "patch": "@@ -0,0 +1,13 @@\n+/* PR middle-end/19857 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+int i;\n+int foo (void)\n+{\n+  return i & ~(unsigned int) 3;\n+}\n+\n+/* Make sure the optimizers don't introduce overflow where one\n+   did not exist in the original.  */\n+/* { dg-final { scan-tree-dump-times \"-0+4\" 0 \"optimized\"} } */"}]}