{"sha": "3fa057a43770dbb23a0fb21a94cab1789df3277c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZhMDU3YTQzNzcwZGJiMjNhMGZiMjFhOTRjYWIxNzg5ZGYzMjc3Yw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-12-04T06:44:19Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-12-04T06:44:19Z"}, "message": "compiler: Reject invalid nil == nil comparisons.\n\nFrom-SVN: r194119", "tree": {"sha": "64966e7210e3f5894aeff8abf63af39dfe1d22d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64966e7210e3f5894aeff8abf63af39dfe1d22d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fa057a43770dbb23a0fb21a94cab1789df3277c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fa057a43770dbb23a0fb21a94cab1789df3277c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fa057a43770dbb23a0fb21a94cab1789df3277c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fa057a43770dbb23a0fb21a94cab1789df3277c/comments", "author": null, "committer": null, "parents": [{"sha": "98fd70c20f55a656de0c40a7f5fb982166c2ad34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98fd70c20f55a656de0c40a7f5fb982166c2ad34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98fd70c20f55a656de0c40a7f5fb982166c2ad34"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "e0690e77bf6561e76f891de8541eaf913eda9008", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fa057a43770dbb23a0fb21a94cab1789df3277c/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fa057a43770dbb23a0fb21a94cab1789df3277c/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=3fa057a43770dbb23a0fb21a94cab1789df3277c", "patch": "@@ -5610,6 +5610,11 @@ Binary_expression::do_check_types(Gogo*)\n       || this->op_ == OPERATOR_GT\n       || this->op_ == OPERATOR_GE)\n     {\n+      if (left_type->is_nil_type() && right_type->is_nil_type())\n+\t{\n+\t  this->report_error(_(\"invalid comparison of nil with nil\"));\n+\t  return;\n+\t}\n       if (!Type::are_assignable(left_type, right_type, NULL)\n \t  && !Type::are_assignable(right_type, left_type, NULL))\n \t{"}]}