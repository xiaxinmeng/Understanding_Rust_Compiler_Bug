{"sha": "6c34c761d2f06a5be7c40c20088ff0d941fdb259", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMzNGM3NjFkMmYwNmE1YmU3YzQwYzIwMDg4ZmYwZDk0MWZkYjI1OQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2015-01-15T20:39:04Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-01-15T20:39:04Z"}, "message": "c-torture.exp: Compute LTO_TORTURE_OPTIONS after the environment is set up.\n\n\t* lib/c-torture.exp: Compute LTO_TORTURE_OPTIONS after the environment\n\tis set up.\n\t* lib/gcc-dg.exp: Likewise.\n\nFrom-SVN: r219684", "tree": {"sha": "afdb541063f047aed653957b2cdd81795de30f17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afdb541063f047aed653957b2cdd81795de30f17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c34c761d2f06a5be7c40c20088ff0d941fdb259", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c34c761d2f06a5be7c40c20088ff0d941fdb259", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c34c761d2f06a5be7c40c20088ff0d941fdb259", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c34c761d2f06a5be7c40c20088ff0d941fdb259/comments", "author": null, "committer": null, "parents": [{"sha": "d1457701461d5a49ca6b5d8a6d1c83a37a6dc771", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1457701461d5a49ca6b5d8a6d1c83a37a6dc771", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1457701461d5a49ca6b5d8a6d1c83a37a6dc771"}], "stats": {"total": 53, "additions": 29, "deletions": 24}, "files": [{"sha": "b47f7510a07aea819d5a8852c2ad1e1b4bc0d1a7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c34c761d2f06a5be7c40c20088ff0d941fdb259/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c34c761d2f06a5be7c40c20088ff0d941fdb259/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6c34c761d2f06a5be7c40c20088ff0d941fdb259", "patch": "@@ -1,3 +1,9 @@\n+2015-01-15  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* lib/c-torture.exp: Compute LTO_TORTURE_OPTIONS after the environment\n+\tis set up.\n+\t* lib/gcc-dg.exp: Likewise.\n+\n 2015-01-15  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR rtl-optimization/64110"}, {"sha": "ebac57af9f8de1698b56c013c9bb5381a22593ae", "filename": "gcc/testsuite/lib/c-torture.exp", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c34c761d2f06a5be7c40c20088ff0d941fdb259/gcc%2Ftestsuite%2Flib%2Fc-torture.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c34c761d2f06a5be7c40c20088ff0d941fdb259/gcc%2Ftestsuite%2Flib%2Fc-torture.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fc-torture.exp?ref=6c34c761d2f06a5be7c40c20088ff0d941fdb259", "patch": "@@ -51,6 +51,20 @@ if [info exists ADDITIONAL_TORTURE_OPTIONS] {\n \t[concat $C_TORTURE_OPTIONS $ADDITIONAL_TORTURE_OPTIONS]\n }\n \n+global GCC_UNDER_TEST\n+if ![info exists GCC_UNDER_TEST] {\n+    set GCC_UNDER_TEST \"[find_gcc]\"\n+}\n+\n+global orig_environment_saved\n+\n+# This file may be sourced, so don't override environment settings\n+# that have been previously setup.\n+if { $orig_environment_saved == 0 } {\n+    append ld_library_path [gcc-set-multilib-library-path $GCC_UNDER_TEST]\n+    set_ld_library_path_env_vars\n+}\n+\n set LTO_TORTURE_OPTIONS \"\"\n if [check_effective_target_lto] {\n     # When having plugin test both slim and fat LTO and plugin/nonplugin\n@@ -68,20 +82,6 @@ if [check_effective_target_lto] {\n     }\n }\n \n-global GCC_UNDER_TEST\n-if ![info exists GCC_UNDER_TEST] {\n-    set GCC_UNDER_TEST \"[find_gcc]\"\n-}\n-\n-global orig_environment_saved\n-\n-# This file may be sourced, so don't override environment settings\n-# that have been previously setup.\n-if { $orig_environment_saved == 0 } {\n-    append ld_library_path [gcc-set-multilib-library-path $GCC_UNDER_TEST]\n-    set_ld_library_path_env_vars\n-}\n-\n #\n # c-torture-compile -- runs the Tege C-torture test\n #"}, {"sha": "443e8ede9bd325c211f63292393949ec41c60813", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c34c761d2f06a5be7c40c20088ff0d941fdb259/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c34c761d2f06a5be7c40c20088ff0d941fdb259/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=6c34c761d2f06a5be7c40c20088ff0d941fdb259", "patch": "@@ -72,14 +72,22 @@ if [info exists ADDITIONAL_TORTURE_OPTIONS] {\n \t[concat $DG_TORTURE_OPTIONS $ADDITIONAL_TORTURE_OPTIONS]\n }\n \n-set LTO_TORTURE_OPTIONS \"\"\n+global orig_environment_saved\n+\n+# This file may be sourced, so don't override environment settings\n+# that have been previously setup.\n+if { $orig_environment_saved == 0 } {\n+    append ld_library_path [gcc-set-multilib-library-path $GCC_UNDER_TEST]\n+    set_ld_library_path_env_vars\n+}\n \n # Some torture-options cause intermediate code output, unusable for\n # testing using e.g. scan-assembler.  In this variable are the options\n # how to force it, when needed.\n global gcc_force_conventional_output\n set gcc_force_conventional_output \"\"\n \n+set LTO_TORTURE_OPTIONS \"\"\n if [check_effective_target_lto] {\n     # When having plugin test both slim and fat LTO and plugin/nonplugin\n     # path.\n@@ -97,15 +105,6 @@ if [check_effective_target_lto] {\n     }\n }\n \n-global orig_environment_saved\n-\n-# This file may be sourced, so don't override environment settings\n-# that have been previously setup.\n-if { $orig_environment_saved == 0 } {\n-    append ld_library_path [gcc-set-multilib-library-path $GCC_UNDER_TEST]\n-    set_ld_library_path_env_vars\n-}\n-\n # Define gcc callbacks for dg.exp.\n \n proc gcc-dg-test-1 { target_compile prog do_what extra_tool_flags } {"}]}