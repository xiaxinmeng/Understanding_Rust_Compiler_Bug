{"sha": "f1e0c7e0eb3eafb122fc3d00242828c82a9286a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFlMGM3ZTBlYjNlYWZiMTIyZmMzZDAwMjQyODI4YzgyYTkyODZhMg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-11-19T07:31:28Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-11-19T07:31:28Z"}, "message": "re PR tree-optimization/92555 (ICE in exact_div, at poly-int.h:2162)\n\n2019-09-19  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/92555\n\t* tree-vect-loop.c (vect_update_vf_for_slp): Also scan PHIs\n\tfor non-SLP stmts.\n\n\t* gcc.dg/vect/pr92555.c: New testcase.\n\nFrom-SVN: r278430", "tree": {"sha": "21c12315aceb4dfb0b97f02dd472639af34b368d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21c12315aceb4dfb0b97f02dd472639af34b368d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1e0c7e0eb3eafb122fc3d00242828c82a9286a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1e0c7e0eb3eafb122fc3d00242828c82a9286a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1e0c7e0eb3eafb122fc3d00242828c82a9286a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1e0c7e0eb3eafb122fc3d00242828c82a9286a2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e89a689f0a1b94083af100314373a6c2ef2c280e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e89a689f0a1b94083af100314373a6c2ef2c280e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e89a689f0a1b94083af100314373a6c2ef2c280e"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "98f5c2fc49c38d078f85efb65e4dab689cb625ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e0c7e0eb3eafb122fc3d00242828c82a9286a2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e0c7e0eb3eafb122fc3d00242828c82a9286a2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1e0c7e0eb3eafb122fc3d00242828c82a9286a2", "patch": "@@ -1,3 +1,9 @@\n+2019-09-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/92555\n+\t* tree-vect-loop.c (vect_update_vf_for_slp): Also scan PHIs\n+\tfor non-SLP stmts.\n+\n 2019-11-19  Martin Liska  <mliska@suse.cz>\n \n \tPR bootstrap/92540"}, {"sha": "05f38c2acd2c14da3711fce183e38c901f6e621d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e0c7e0eb3eafb122fc3d00242828c82a9286a2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e0c7e0eb3eafb122fc3d00242828c82a9286a2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f1e0c7e0eb3eafb122fc3d00242828c82a9286a2", "patch": "@@ -1,3 +1,8 @@\n+2019-09-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/92555\n+\t* gcc.dg/vect/pr92555.c: New testcase.\n+\n 2019-11-19  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/c2x-attr-fallthrough-5.c, gcc.dg/c2x-attr-syntax-5.c: New"}, {"sha": "b174e1c612e470b5193621b4250fa7fe8e6d2f4b", "filename": "gcc/testsuite/gcc.dg/vect/pr92555.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e0c7e0eb3eafb122fc3d00242828c82a9286a2/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr92555.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e0c7e0eb3eafb122fc3d00242828c82a9286a2/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr92555.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr92555.c?ref=f1e0c7e0eb3eafb122fc3d00242828c82a9286a2", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-fwrapv\" } */\n+\n+signed char rq;\n+\n+signed char\n+pu (int tr, int al)\n+{\n+  signed char x8;\n+\n+  while (tr != 0)\n+    {\n+      for (x8 = 0; x8 >= 0; x8 += 2)\n+        ;\n+\n+      rq ^= al ^ 1;\n+      ++x8;\n+      ++tr;\n+    }\n+\n+  return x8;\n+}"}, {"sha": "5ca6b551598fe7f0cffb380921b4ef3f6269ad89", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1e0c7e0eb3eafb122fc3d00242828c82a9286a2/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1e0c7e0eb3eafb122fc3d00242828c82a9286a2/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=f1e0c7e0eb3eafb122fc3d00242828c82a9286a2", "patch": "@@ -1398,6 +1398,18 @@ vect_update_vf_for_slp (loop_vec_info loop_vinfo)\n   for (i = 0; i < nbbs; i++)\n     {\n       basic_block bb = bbs[i];\n+      for (gphi_iterator si = gsi_start_phis (bb); !gsi_end_p (si);\n+\t   gsi_next (&si))\n+\t{\n+\t  stmt_vec_info stmt_info = loop_vinfo->lookup_stmt (si.phi ());\n+\t  if (!stmt_info)\n+\t    continue;\n+\t  if ((STMT_VINFO_RELEVANT_P (stmt_info)\n+\t       || VECTORIZABLE_CYCLE_DEF (STMT_VINFO_DEF_TYPE (stmt_info)))\n+\t      && !PURE_SLP_STMT (stmt_info))\n+\t    /* STMT needs both SLP and loop-based vectorization.  */\n+\t    only_slp_in_loop = false;\n+\t}\n       for (gimple_stmt_iterator si = gsi_start_bb (bb); !gsi_end_p (si);\n \t   gsi_next (&si))\n \t{"}]}