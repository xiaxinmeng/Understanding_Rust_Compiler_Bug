{"sha": "24d8ce15e2daacbc37d9d727f7a6ded79aad5e92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRkOGNlMTVlMmRhYWNiYzM3ZDlkNzI3ZjdhNmRlZDc5YWFkNWU5Mg==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2007-02-16T13:51:04Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2007-02-16T13:51:04Z"}, "message": "[multiple changes]\n\n2007-02-15  Andrew Haley  <aph@redhat.com>\n\n        * Makefile.am (nat_source_files): Remove\n        java/lang/management/natVMManagementFactory.cc.\n        * java/lang/Thread.java (getStackTrace): Use reflection to call\n        the ManagementFactory.\n        * java/lang/management/VMManagementFactory.java: Remove native\n        methods.\n        * java/lang/management/natVMManagementFactory.cc: Deleted.\n        * sources.am: Regnerate.\n        * scripts/makemake.tcl: Add new \"bcheaders\" type.\n        Move java/lang/management and gnu/classpath/management to \"bc\".\n        Move gnu/java/lang/management to \"bcheaders\".\n\n2007-02-16  Andrew Haley  <aph@redhat.com>\n\n        * gnu/java/lang/management/MemoryMXBeanImpl.java,\n        javax/management/MBeanServerDelegate.java: Use\n        gnu.javax.management.ListenerData rather than\n        gnu.classpath.ListenerData.\n        * gnu/javax/management/ListenerData.java: Move here from\n        gnu/classpath/ListenerData.java.\n\nFrom-SVN: r122041", "tree": {"sha": "959c3c9976841825636b5dad2623a5818c7188d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/959c3c9976841825636b5dad2623a5818c7188d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "421076b552721090c5901ff4797d155e5a5a69c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/421076b552721090c5901ff4797d155e5a5a69c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/421076b552721090c5901ff4797d155e5a5a69c8"}], "stats": {"total": 373, "additions": 188, "deletions": 185}, "files": [{"sha": "948f2dfab21c755a5c5372a3098d4781f2850659", "filename": "libjava/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=24d8ce15e2daacbc37d9d727f7a6ded79aad5e92", "patch": "@@ -1,3 +1,17 @@\n+2007-02-15  Andrew Haley  <aph@redhat.com>\n+\n+\t* Makefile.am (nat_source_files): Remove\n+\tjava/lang/management/natVMManagementFactory.cc.\n+\t* java/lang/Thread.java (getStackTrace): Use reflection to call\n+\tthe ManagementFactory.\n+\t* java/lang/management/VMManagementFactory.java: Remove native\n+\tmethods.\n+\t* java/lang/management/natVMManagementFactory.cc: Deleted.\n+\t* sources.am: Regnerate.\n+\t* scripts/makemake.tcl: Add new \"bcheaders\" type.\n+\tMove java/lang/management and gnu/classpath/management to \"bc\".\n+\tMove gnu/java/lang/management to \"bcheaders\".\n+\t\n 2007-02-15  Kyle Galloway  <kgallowa@redhat.com>\n \t\n \t* interpret.cc (_Jv_InterpMethod::check_handler): New method."}, {"sha": "2532ed6d4f2946ddd26decd1f47e95c9948c8874", "filename": "libjava/Makefile.am", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=24d8ce15e2daacbc37d9d727f7a6ded79aad5e92", "patch": "@@ -867,7 +867,6 @@ gnu/java/nio/channels/natFileChannelImpl.cc \\\n java/io/natFile.cc \\\n java/io/natVMObjectInputStream.cc \\\n java/io/natVMObjectStreamClass.cc \\\n-java/lang/management/natVMManagementFactory.cc \\\n java/lang/natCharacter.cc \\\n java/lang/natClass.cc \\\n java/lang/natClassLoader.cc \\"}, {"sha": "16abe2df57abb735de358179c0a99df86c0c9b7a", "filename": "libjava/Makefile.in", "status": "modified", "additions": 67, "deletions": 94, "changes": 161, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=24d8ce15e2daacbc37d9d727f7a6ded79aad5e92", "patch": "@@ -166,9 +166,9 @@ am__DEPENDENCIES_1 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tgnu/java/awt/font/opentype/truetype.lo gnu/java/awt/image.lo \\\n \tgnu/java/awt/java2d.lo gnu/java/awt/peer.lo \\\n \tgnu/java/awt/peer/headless.lo gnu/java/awt/print.lo \\\n-\tgnu/java/io.lo gnu/java/lang.lo gnu/java/lang/management.lo \\\n-\tgnu/java/lang/reflect.lo gnu/java/locale.lo gnu/java/math.lo \\\n-\tgnu/java/net.lo gnu/java/net/loader.lo gnu/java/net/local.lo \\\n+\tgnu/java/io.lo gnu/java/lang.lo gnu/java/lang/reflect.lo \\\n+\tgnu/java/locale.lo gnu/java/math.lo gnu/java/net.lo \\\n+\tgnu/java/net/loader.lo gnu/java/net/local.lo \\\n \tgnu/java/net/protocol/core.lo gnu/java/net/protocol/file.lo \\\n \tgnu/java/net/protocol/ftp.lo gnu/java/net/protocol/gcjlib.lo \\\n \tgnu/java/net/protocol/http.lo gnu/java/net/protocol/https.lo \\\n@@ -204,8 +204,8 @@ am__DEPENDENCIES_1 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tgnu/javax/crypto/sasl/plain.lo gnu/javax/crypto/sasl/srp.lo \\\n \tgnu/javax/imageio.lo gnu/javax/imageio/bmp.lo \\\n \tgnu/javax/imageio/gif.lo gnu/javax/imageio/jpeg.lo \\\n-\tgnu/javax/imageio/png.lo gnu/javax/management.lo \\\n-\tgnu/javax/naming/giop.lo gnu/javax/naming/ictxImpl/trans.lo \\\n+\tgnu/javax/imageio/png.lo gnu/javax/naming/giop.lo \\\n+\tgnu/javax/naming/ictxImpl/trans.lo \\\n \tgnu/javax/naming/jndi/url/corbaname.lo \\\n \tgnu/javax/naming/jndi/url/rmi.lo gnu/javax/net/ssl.lo \\\n \tgnu/javax/net/ssl/provider.lo gnu/javax/print.lo \\\n@@ -236,26 +236,25 @@ am__DEPENDENCIES_1 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tjava/awt/peer.lo java/awt/print.lo java/beans.lo \\\n \tjava/beans/beancontext.lo java/io.lo java/lang.lo \\\n \tjava/lang/annotation.lo java/lang/instrument.lo \\\n-\tjava/lang/management.lo java/lang/ref.lo java/lang/reflect.lo \\\n-\tjava/math.lo java/net.lo java/nio.lo java/nio/channels.lo \\\n-\tjava/nio/channels/spi.lo java/nio/charset.lo \\\n-\tjava/nio/charset/spi.lo java/rmi.lo java/rmi/activation.lo \\\n-\tjava/rmi/dgc.lo java/rmi/registry.lo java/rmi/server.lo \\\n-\tjava/security.lo java/security/acl.lo java/security/cert.lo \\\n-\tjava/security/interfaces.lo java/security/spec.lo java/sql.lo \\\n-\tjava/text.lo java/util.lo java/util/concurrent.lo \\\n-\tjava/util/concurrent/atomic.lo java/util/concurrent/locks.lo \\\n-\tjava/util/jar.lo java/util/logging.lo java/util/prefs.lo \\\n-\tjava/util/regex.lo java/util/zip.lo javax/accessibility.lo \\\n-\tjavax/crypto.lo javax/crypto/interfaces.lo \\\n-\tjavax/crypto/spec.lo javax/management.lo \\\n-\tjavax/management/loading.lo javax/management/openmbean.lo \\\n-\tjavax/naming.lo javax/naming/directory.lo \\\n-\tjavax/naming/event.lo javax/naming/ldap.lo javax/naming/spi.lo \\\n-\tjavax/net.lo javax/net/ssl.lo javax/print.lo \\\n-\tjavax/print/attribute.lo javax/print/attribute/standard.lo \\\n-\tjavax/print/event.lo javax/security/auth.lo \\\n-\tjavax/security/auth/callback.lo \\\n+\tjava/lang/ref.lo java/lang/reflect.lo java/math.lo java/net.lo \\\n+\tjava/nio.lo java/nio/channels.lo java/nio/channels/spi.lo \\\n+\tjava/nio/charset.lo java/nio/charset/spi.lo java/rmi.lo \\\n+\tjava/rmi/activation.lo java/rmi/dgc.lo java/rmi/registry.lo \\\n+\tjava/rmi/server.lo java/security.lo java/security/acl.lo \\\n+\tjava/security/cert.lo java/security/interfaces.lo \\\n+\tjava/security/spec.lo java/sql.lo java/text.lo java/util.lo \\\n+\tjava/util/concurrent.lo java/util/concurrent/atomic.lo \\\n+\tjava/util/concurrent/locks.lo java/util/jar.lo \\\n+\tjava/util/logging.lo java/util/prefs.lo java/util/regex.lo \\\n+\tjava/util/zip.lo javax/accessibility.lo javax/crypto.lo \\\n+\tjavax/crypto/interfaces.lo javax/crypto/spec.lo \\\n+\tjavax/management.lo javax/management/loading.lo \\\n+\tjavax/management/openmbean.lo javax/naming.lo \\\n+\tjavax/naming/directory.lo javax/naming/event.lo \\\n+\tjavax/naming/ldap.lo javax/naming/spi.lo javax/net.lo \\\n+\tjavax/net/ssl.lo javax/print.lo javax/print/attribute.lo \\\n+\tjavax/print/attribute/standard.lo javax/print/event.lo \\\n+\tjavax/security/auth.lo javax/security/auth/callback.lo \\\n \tjavax/security/auth/kerberos.lo javax/security/auth/login.lo \\\n \tjavax/security/auth/spi.lo javax/security/auth/x500.lo \\\n \tjavax/security/cert.lo javax/security/sasl.lo \\\n@@ -274,13 +273,14 @@ am__DEPENDENCIES_1 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tsun/reflect.lo sun/reflect/annotation.lo sun/reflect/misc.lo\n am__DEPENDENCIES_2 = gnu-CORBA.lo gnu-java-awt-dnd-peer-gtk.lo \\\n \tgnu-java-awt-peer-gtk.lo gnu-java-awt-peer-swing.lo \\\n-\tgnu-java-beans.lo gnu-java-util-prefs-gconf.lo \\\n+\tgnu-java-beans.lo gnu-java-lang-management.lo \\\n+\tgnu-java-util-prefs-gconf.lo gnu-javax-management.lo \\\n \tgnu-javax-rmi.lo gnu-javax-sound-midi.lo gnu-xml-aelfred2.lo \\\n \tgnu-xml-dom.lo gnu-xml-libxmlj.lo gnu-xml-pipeline.lo \\\n \tgnu-xml-stream.lo gnu-xml-transform.lo gnu-xml-util.lo \\\n-\tgnu-xml-validation.lo gnu-xml-xpath.lo javax-imageio.lo \\\n-\tjavax-rmi.lo javax-xml.lo org-omg.lo org-relaxng.lo org-w3c.lo \\\n-\torg-xml.lo\n+\tgnu-xml-validation.lo gnu-xml-xpath.lo java-lang-management.lo \\\n+\tjavax-imageio.lo javax-rmi.lo javax-xml.lo org-omg.lo \\\n+\torg-relaxng.lo org-w3c.lo org-xml.lo\n am__DEPENDENCIES_3 = $(patsubst classpath/resource/%,%,$(addsuffix \\\n \t.lo,$(property_files)))\n am__DEPENDENCIES_4 =\n@@ -323,18 +323,16 @@ am__libgcj_la_SOURCES_DIST = prims.cc jni.cc jvmti.cc exception.cc \\\n \tgnu/java/nio/natVMChannel.cc \\\n \tgnu/java/nio/channels/natFileChannelImpl.cc java/io/natFile.cc \\\n \tjava/io/natVMObjectInputStream.cc \\\n-\tjava/io/natVMObjectStreamClass.cc \\\n-\tjava/lang/management/natVMManagementFactory.cc \\\n-\tjava/lang/natCharacter.cc java/lang/natClass.cc \\\n-\tjava/lang/natClassLoader.cc java/lang/natConcreteProcess.cc \\\n-\tjava/lang/natVMDouble.cc java/lang/natVMFloat.cc \\\n-\tjava/lang/natMath.cc java/lang/natObject.cc \\\n-\tjava/lang/natRuntime.cc java/lang/natString.cc \\\n-\tjava/lang/natStringBuffer.cc java/lang/natStringBuilder.cc \\\n-\tjava/lang/natSystem.cc java/lang/natThread.cc \\\n-\tjava/lang/natThreadLocal.cc java/lang/natVMClassLoader.cc \\\n-\tjava/lang/natVMThrowable.cc java/lang/ref/natReference.cc \\\n-\tjava/lang/reflect/natArray.cc \\\n+\tjava/io/natVMObjectStreamClass.cc java/lang/natCharacter.cc \\\n+\tjava/lang/natClass.cc java/lang/natClassLoader.cc \\\n+\tjava/lang/natConcreteProcess.cc java/lang/natVMDouble.cc \\\n+\tjava/lang/natVMFloat.cc java/lang/natMath.cc \\\n+\tjava/lang/natObject.cc java/lang/natRuntime.cc \\\n+\tjava/lang/natString.cc java/lang/natStringBuffer.cc \\\n+\tjava/lang/natStringBuilder.cc java/lang/natSystem.cc \\\n+\tjava/lang/natThread.cc java/lang/natThreadLocal.cc \\\n+\tjava/lang/natVMClassLoader.cc java/lang/natVMThrowable.cc \\\n+\tjava/lang/ref/natReference.cc java/lang/reflect/natArray.cc \\\n \tjava/lang/reflect/natConstructor.cc \\\n \tjava/lang/reflect/natField.cc java/lang/reflect/natMethod.cc \\\n \tjava/lang/reflect/natVMProxy.cc java/net/natVMInetAddress.cc \\\n@@ -387,18 +385,16 @@ am__objects_2 = gnu/classpath/jdwp/natVMFrame.lo \\\n \tgnu/java/nio/natVMChannel.lo \\\n \tgnu/java/nio/channels/natFileChannelImpl.lo java/io/natFile.lo \\\n \tjava/io/natVMObjectInputStream.lo \\\n-\tjava/io/natVMObjectStreamClass.lo \\\n-\tjava/lang/management/natVMManagementFactory.lo \\\n-\tjava/lang/natCharacter.lo java/lang/natClass.lo \\\n-\tjava/lang/natClassLoader.lo java/lang/natConcreteProcess.lo \\\n-\tjava/lang/natVMDouble.lo java/lang/natVMFloat.lo \\\n-\tjava/lang/natMath.lo java/lang/natObject.lo \\\n-\tjava/lang/natRuntime.lo java/lang/natString.lo \\\n-\tjava/lang/natStringBuffer.lo java/lang/natStringBuilder.lo \\\n-\tjava/lang/natSystem.lo java/lang/natThread.lo \\\n-\tjava/lang/natThreadLocal.lo java/lang/natVMClassLoader.lo \\\n-\tjava/lang/natVMThrowable.lo java/lang/ref/natReference.lo \\\n-\tjava/lang/reflect/natArray.lo \\\n+\tjava/io/natVMObjectStreamClass.lo java/lang/natCharacter.lo \\\n+\tjava/lang/natClass.lo java/lang/natClassLoader.lo \\\n+\tjava/lang/natConcreteProcess.lo java/lang/natVMDouble.lo \\\n+\tjava/lang/natVMFloat.lo java/lang/natMath.lo \\\n+\tjava/lang/natObject.lo java/lang/natRuntime.lo \\\n+\tjava/lang/natString.lo java/lang/natStringBuffer.lo \\\n+\tjava/lang/natStringBuilder.lo java/lang/natSystem.lo \\\n+\tjava/lang/natThread.lo java/lang/natThreadLocal.lo \\\n+\tjava/lang/natVMClassLoader.lo java/lang/natVMThrowable.lo \\\n+\tjava/lang/ref/natReference.lo java/lang/reflect/natArray.lo \\\n \tjava/lang/reflect/natConstructor.lo \\\n \tjava/lang/reflect/natField.lo java/lang/reflect/natMethod.lo \\\n \tjava/lang/reflect/natVMProxy.lo java/net/natVMInetAddress.lo \\\n@@ -1147,7 +1143,6 @@ gnu/awt/xlib/XToolkit.java\n gnu_awt_xlib_header_files = $(patsubst %.java,%.h,$(gnu_awt_xlib_source_files))\n gnu_classpath_source_files = \\\n gnu/classpath/Configuration.java \\\n-classpath/gnu/classpath/ListenerData.java \\\n classpath/gnu/classpath/NotImplementedException.java \\\n classpath/gnu/classpath/Pointer.java \\\n classpath/gnu/classpath/Pointer32.java \\\n@@ -2888,9 +2883,9 @@ classpath/gnu/javax/imageio/png/PNGTime.java\n \n gnu_javax_imageio_png_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_imageio_png_source_files)))\n gnu_javax_management_source_files = \\\n+classpath/gnu/javax/management/ListenerData.java \\\n classpath/gnu/javax/management/Server.java\n \n-gnu_javax_management_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_management_source_files)))\n gnu_javax_naming_giop_source_files = \\\n classpath/gnu/javax/naming/giop/ContextContinuation.java \\\n classpath/gnu/javax/naming/giop/CorbalocParser.java \\\n@@ -4355,7 +4350,6 @@ classpath/java/lang/management/ThreadInfo.java \\\n classpath/java/lang/management/ThreadMXBean.java \\\n java/lang/management/VMManagementFactory.java\n \n-java_lang_management_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(java_lang_management_source_files)))\n java_lang_ref_source_files = \\\n classpath/java/lang/ref/PhantomReference.java \\\n java/lang/ref/Reference.java \\\n@@ -7246,7 +7240,6 @@ all_packages_source_files = \\\n   gnu/java/awt/print.list \\\n   gnu/java/io.list \\\n   gnu/java/lang.list \\\n-  gnu/java/lang/management.list \\\n   gnu/java/lang/reflect.list \\\n   gnu/java/locale.list \\\n   gnu/java/math.list \\\n@@ -7324,7 +7317,6 @@ all_packages_source_files = \\\n   gnu/javax/imageio/gif.list \\\n   gnu/javax/imageio/jpeg.list \\\n   gnu/javax/imageio/png.list \\\n-  gnu/javax/management.list \\\n   gnu/javax/naming/giop.list \\\n   gnu/javax/naming/ictxImpl/trans.list \\\n   gnu/javax/naming/jndi/url/corbaname.list \\\n@@ -7378,7 +7370,6 @@ all_packages_source_files = \\\n   java/lang.list \\\n   java/lang/annotation.list \\\n   java/lang/instrument.list \\\n-  java/lang/management.list \\\n   java/lang/ref.list \\\n   java/lang/reflect.list \\\n   java/math.list \\\n@@ -7577,7 +7568,6 @@ ordinary_header_files = \\\n   $(gnu_javax_imageio_gif_header_files) \\\n   $(gnu_javax_imageio_jpeg_header_files) \\\n   $(gnu_javax_imageio_png_header_files) \\\n-  $(gnu_javax_management_header_files) \\\n   $(gnu_javax_naming_giop_header_files) \\\n   $(gnu_javax_naming_ictxImpl_trans_header_files) \\\n   $(gnu_javax_naming_jndi_url_corbaname_header_files) \\\n@@ -7626,7 +7616,6 @@ ordinary_header_files = \\\n   $(java_lang_header_files) \\\n   $(java_lang_annotation_header_files) \\\n   $(java_lang_instrument_header_files) \\\n-  $(java_lang_management_header_files) \\\n   $(java_lang_ref_header_files) \\\n   $(java_lang_reflect_header_files) \\\n   $(java_math_header_files) \\\n@@ -7719,7 +7708,9 @@ bc_objects = \\\n   gnu-java-awt-peer-gtk.lo \\\n   gnu-java-awt-peer-swing.lo \\\n   gnu-java-beans.lo \\\n+  gnu-java-lang-management.lo \\\n   gnu-java-util-prefs-gconf.lo \\\n+  gnu-javax-management.lo \\\n   gnu-javax-rmi.lo \\\n   gnu-javax-sound-midi.lo \\\n   gnu-xml-aelfred2.lo \\\n@@ -7731,6 +7722,7 @@ bc_objects = \\\n   gnu-xml-util.lo \\\n   gnu-xml-validation.lo \\\n   gnu-xml-xpath.lo \\\n+  java-lang-management.lo \\\n   javax-imageio.lo \\\n   javax-rmi.lo \\\n   javax-xml.lo \\\n@@ -7986,7 +7978,6 @@ gnu/java/nio/channels/natFileChannelImpl.cc \\\n java/io/natFile.cc \\\n java/io/natVMObjectInputStream.cc \\\n java/io/natVMObjectStreamClass.cc \\\n-java/lang/management/natVMManagementFactory.cc \\\n java/lang/natCharacter.cc \\\n java/lang/natClass.cc \\\n java/lang/natClassLoader.cc \\\n@@ -8476,15 +8467,6 @@ java/io/natVMObjectInputStream.lo: java/io/$(am__dirstamp) \\\n \tjava/io/$(DEPDIR)/$(am__dirstamp)\n java/io/natVMObjectStreamClass.lo: java/io/$(am__dirstamp) \\\n \tjava/io/$(DEPDIR)/$(am__dirstamp)\n-java/lang/management/$(am__dirstamp):\n-\t@$(mkdir_p) java/lang/management\n-\t@: > java/lang/management/$(am__dirstamp)\n-java/lang/management/$(DEPDIR)/$(am__dirstamp):\n-\t@$(mkdir_p) java/lang/management/$(DEPDIR)\n-\t@: > java/lang/management/$(DEPDIR)/$(am__dirstamp)\n-java/lang/management/natVMManagementFactory.lo:  \\\n-\tjava/lang/management/$(am__dirstamp) \\\n-\tjava/lang/management/$(DEPDIR)/$(am__dirstamp)\n java/lang/$(am__dirstamp):\n \t@$(mkdir_p) java/lang\n \t@: > java/lang/$(am__dirstamp)\n@@ -8938,8 +8920,6 @@ mostlyclean-compile:\n \t-rm -f java/io/natVMObjectStreamClass.lo\n \t-rm -f java/lang/Object.$(OBJEXT)\n \t-rm -f java/lang/Object.lo\n-\t-rm -f java/lang/management/natVMManagementFactory.$(OBJEXT)\n-\t-rm -f java/lang/management/natVMManagementFactory.lo\n \t-rm -f java/lang/natCharacter.$(OBJEXT)\n \t-rm -f java/lang/natCharacter.lo\n \t-rm -f java/lang/natClass.$(OBJEXT)\n@@ -9125,7 +9105,6 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@java/lang/$(DEPDIR)/natVMDouble.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/lang/$(DEPDIR)/natVMFloat.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/lang/$(DEPDIR)/natVMThrowable.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@java/lang/management/$(DEPDIR)/natVMManagementFactory.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/lang/ref/$(DEPDIR)/natReference.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/lang/reflect/$(DEPDIR)/natArray.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/lang/reflect/$(DEPDIR)/natConstructor.Plo@am__quote@\n@@ -9413,7 +9392,6 @@ clean-libtool:\n \t-rm -rf gnu/java/nio/channels/.libs gnu/java/nio/channels/_libs\n \t-rm -rf java/io/.libs java/io/_libs\n \t-rm -rf java/lang/.libs java/lang/_libs\n-\t-rm -rf java/lang/management/.libs java/lang/management/_libs\n \t-rm -rf java/lang/ref/.libs java/lang/ref/_libs\n \t-rm -rf java/lang/reflect/.libs java/lang/reflect/_libs\n \t-rm -rf java/net/.libs java/net/_libs\n@@ -9824,8 +9802,6 @@ distclean-generic:\n \t-rm -f java/io/$(am__dirstamp)\n \t-rm -f java/lang/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f java/lang/$(am__dirstamp)\n-\t-rm -f java/lang/management/$(DEPDIR)/$(am__dirstamp)\n-\t-rm -f java/lang/management/$(am__dirstamp)\n \t-rm -f java/lang/ref/$(DEPDIR)/$(am__dirstamp)\n \t-rm -f java/lang/ref/$(am__dirstamp)\n \t-rm -f java/lang/reflect/$(DEPDIR)/$(am__dirstamp)\n@@ -9863,7 +9839,7 @@ clean-am: clean-binPROGRAMS clean-dbexecLTLIBRARIES clean-generic \\\n \n distclean: distclean-multi distclean-recursive\n \t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n-\t-rm -rf ./$(DEPDIR) classpath/tools/$(DEPDIR) gnu/classpath/$(DEPDIR) gnu/classpath/jdwp/$(DEPDIR) gnu/gcj/$(DEPDIR) gnu/gcj/convert/$(DEPDIR) gnu/gcj/io/$(DEPDIR) gnu/gcj/jvmti/$(DEPDIR) gnu/gcj/runtime/$(DEPDIR) gnu/gcj/tools/gcj_dbtool/$(DEPDIR) gnu/gcj/util/$(DEPDIR) gnu/gcj/xlib/$(DEPDIR) gnu/java/lang/$(DEPDIR) gnu/java/lang/management/$(DEPDIR) gnu/java/net/$(DEPDIR) gnu/java/net/protocol/core/$(DEPDIR) gnu/java/nio/$(DEPDIR) gnu/java/nio/channels/$(DEPDIR) java/io/$(DEPDIR) java/lang/$(DEPDIR) java/lang/management/$(DEPDIR) java/lang/ref/$(DEPDIR) java/lang/reflect/$(DEPDIR) java/net/$(DEPDIR) java/nio/$(DEPDIR) java/nio/channels/$(DEPDIR) java/security/$(DEPDIR) java/text/$(DEPDIR) java/util/$(DEPDIR) java/util/concurrent/atomic/$(DEPDIR) java/util/logging/$(DEPDIR) java/util/zip/$(DEPDIR) sun/misc/$(DEPDIR)\n+\t-rm -rf ./$(DEPDIR) classpath/tools/$(DEPDIR) gnu/classpath/$(DEPDIR) gnu/classpath/jdwp/$(DEPDIR) gnu/gcj/$(DEPDIR) gnu/gcj/convert/$(DEPDIR) gnu/gcj/io/$(DEPDIR) gnu/gcj/jvmti/$(DEPDIR) gnu/gcj/runtime/$(DEPDIR) gnu/gcj/tools/gcj_dbtool/$(DEPDIR) gnu/gcj/util/$(DEPDIR) gnu/gcj/xlib/$(DEPDIR) gnu/java/lang/$(DEPDIR) gnu/java/lang/management/$(DEPDIR) gnu/java/net/$(DEPDIR) gnu/java/net/protocol/core/$(DEPDIR) gnu/java/nio/$(DEPDIR) gnu/java/nio/channels/$(DEPDIR) java/io/$(DEPDIR) java/lang/$(DEPDIR) java/lang/ref/$(DEPDIR) java/lang/reflect/$(DEPDIR) java/net/$(DEPDIR) java/nio/$(DEPDIR) java/nio/channels/$(DEPDIR) java/security/$(DEPDIR) java/text/$(DEPDIR) java/util/$(DEPDIR) java/util/concurrent/atomic/$(DEPDIR) java/util/logging/$(DEPDIR) java/util/zip/$(DEPDIR) sun/misc/$(DEPDIR)\n \t-rm -f Makefile\n distclean-am: clean-am distclean-compile distclean-generic \\\n \tdistclean-libtool distclean-local distclean-tags\n@@ -9896,7 +9872,7 @@ installcheck-am:\n maintainer-clean: maintainer-clean-multi maintainer-clean-recursive\n \t-rm -f $(am__CONFIG_DISTCLEAN_FILES)\n \t-rm -rf $(top_srcdir)/autom4te.cache\n-\t-rm -rf ./$(DEPDIR) classpath/tools/$(DEPDIR) gnu/classpath/$(DEPDIR) gnu/classpath/jdwp/$(DEPDIR) gnu/gcj/$(DEPDIR) gnu/gcj/convert/$(DEPDIR) gnu/gcj/io/$(DEPDIR) gnu/gcj/jvmti/$(DEPDIR) gnu/gcj/runtime/$(DEPDIR) gnu/gcj/tools/gcj_dbtool/$(DEPDIR) gnu/gcj/util/$(DEPDIR) gnu/gcj/xlib/$(DEPDIR) gnu/java/lang/$(DEPDIR) gnu/java/lang/management/$(DEPDIR) gnu/java/net/$(DEPDIR) gnu/java/net/protocol/core/$(DEPDIR) gnu/java/nio/$(DEPDIR) gnu/java/nio/channels/$(DEPDIR) java/io/$(DEPDIR) java/lang/$(DEPDIR) java/lang/management/$(DEPDIR) java/lang/ref/$(DEPDIR) java/lang/reflect/$(DEPDIR) java/net/$(DEPDIR) java/nio/$(DEPDIR) java/nio/channels/$(DEPDIR) java/security/$(DEPDIR) java/text/$(DEPDIR) java/util/$(DEPDIR) java/util/concurrent/atomic/$(DEPDIR) java/util/logging/$(DEPDIR) java/util/zip/$(DEPDIR) sun/misc/$(DEPDIR)\n+\t-rm -rf ./$(DEPDIR) classpath/tools/$(DEPDIR) gnu/classpath/$(DEPDIR) gnu/classpath/jdwp/$(DEPDIR) gnu/gcj/$(DEPDIR) gnu/gcj/convert/$(DEPDIR) gnu/gcj/io/$(DEPDIR) gnu/gcj/jvmti/$(DEPDIR) gnu/gcj/runtime/$(DEPDIR) gnu/gcj/tools/gcj_dbtool/$(DEPDIR) gnu/gcj/util/$(DEPDIR) gnu/gcj/xlib/$(DEPDIR) gnu/java/lang/$(DEPDIR) gnu/java/lang/management/$(DEPDIR) gnu/java/net/$(DEPDIR) gnu/java/net/protocol/core/$(DEPDIR) gnu/java/nio/$(DEPDIR) gnu/java/nio/channels/$(DEPDIR) java/io/$(DEPDIR) java/lang/$(DEPDIR) java/lang/ref/$(DEPDIR) java/lang/reflect/$(DEPDIR) java/net/$(DEPDIR) java/nio/$(DEPDIR) java/nio/channels/$(DEPDIR) java/security/$(DEPDIR) java/text/$(DEPDIR) java/util/$(DEPDIR) java/util/concurrent/atomic/$(DEPDIR) java/util/logging/$(DEPDIR) java/util/zip/$(DEPDIR) sun/misc/$(DEPDIR)\n \t-rm -f Makefile\n maintainer-clean-am: distclean-am maintainer-clean-generic\n \n@@ -10249,11 +10225,10 @@ gnu/java/lang.list: $(gnu_java_lang_source_files)\n \n -include gnu/java/lang.deps\n \n-gnu/java/lang/management.list: $(gnu_java_lang_management_source_files)\n-\t@$(mkinstalldirs) $(dir $@)\n-\techo $(srcdir)/classpath/lib/gnu/java/lang/management/*.class > gnu/java/lang/management.list\n-\n--include gnu/java/lang/management.deps\n+gnu-java-lang-management.lo: $(gnu_java_lang_management_source_files)\n+\t@find $(srcdir)/classpath/lib/gnu/java/lang/management -name '*.class' > gnu-java-lang-management.list\n+\t$(LTGCJCOMPILE) -fsource-filename=$(here)/classpath/lib/classes -findirect-dispatch -fno-indirect-classes -c -o gnu-java-lang-management.lo @gnu-java-lang-management.list\n+\t@rm -f gnu-java-lang-management.list\n \n gnu/java/lang/reflect.list: $(gnu_java_lang_reflect_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n@@ -10722,11 +10697,10 @@ gnu/javax/imageio/png.list: $(gnu_javax_imageio_png_source_files)\n \n -include gnu/javax/imageio/png.deps\n \n-gnu/javax/management.list: $(gnu_javax_management_source_files)\n-\t@$(mkinstalldirs) $(dir $@)\n-\techo $(srcdir)/classpath/lib/gnu/javax/management/*.class > gnu/javax/management.list\n-\n--include gnu/javax/management.deps\n+gnu-javax-management.lo: $(gnu_javax_management_source_files)\n+\t@find $(srcdir)/classpath/lib/gnu/javax/management -name '*.class' > gnu-javax-management.list\n+\t$(LTGCJCOMPILE) -fsource-filename=$(here)/classpath/lib/classes -fjni -findirect-dispatch -fno-indirect-classes -c -o gnu-javax-management.lo @gnu-javax-management.list\n+\t@rm -f gnu-javax-management.list\n \n gnu/javax/naming/giop.list: $(gnu_javax_naming_giop_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n@@ -11101,11 +11075,10 @@ java/lang/instrument.list: $(java_lang_instrument_source_files)\n \n -include java/lang/instrument.deps\n \n-java/lang/management.list: $(java_lang_management_source_files)\n-\t@$(mkinstalldirs) $(dir $@)\n-\techo $(srcdir)/classpath/lib/java/lang/management/*.class > java/lang/management.list\n-\n--include java/lang/management.deps\n+java-lang-management.lo: $(java_lang_management_source_files)\n+\t@find $(srcdir)/classpath/lib/java/lang/management -name '*.class' > java-lang-management.list\n+\t$(LTGCJCOMPILE) -fsource-filename=$(here)/classpath/lib/classes -fjni -findirect-dispatch -fno-indirect-classes -c -o java-lang-management.lo @java-lang-management.list\n+\t@rm -f java-lang-management.list\n \n java/lang/ref.list: $(java_lang_ref_source_files)\n \t@$(mkinstalldirs) $(dir $@)"}, {"sha": "577fa6772251ed4ca2cec8513ff4e068a1e219f4", "filename": "libjava/classpath/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fclasspath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fclasspath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog?ref=24d8ce15e2daacbc37d9d727f7a6ded79aad5e92", "patch": "@@ -1,3 +1,12 @@\n+2007-02-16  Andrew Haley  <aph@redhat.com>\n+\n+\t* gnu/java/lang/management/MemoryMXBeanImpl.java,\n+\tjavax/management/MBeanServerDelegate.java: Use\n+\tgnu.javax.management.ListenerData rather than\n+\tgnu.classpath.ListenerData.\n+\t* gnu/javax/management/ListenerData.java: Move here from\n+\tgnu/classpath/ListenerData.java.\n+\n 2007-02-14  Jakub Jelinek  <jakub@redhat.com>\n \tAndrew Haley  <aph@redhat.com>\n "}, {"sha": "1e6c63afccf9f0e37f0305bc0d949d1f21d7a13e", "filename": "libjava/classpath/gnu/java/lang/management/MemoryMXBeanImpl.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FMemoryMXBeanImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FMemoryMXBeanImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Fmanagement%2FMemoryMXBeanImpl.java?ref=24d8ce15e2daacbc37d9d727f7a6ded79aad5e92", "patch": "@@ -37,7 +37,7 @@\n \n package gnu.java.lang.management;\n \n-import gnu.classpath.ListenerData;\n+import gnu.javax.management.ListenerData;\n \n import java.lang.management.MemoryMXBean;\n import java.lang.management.MemoryNotificationInfo;"}, {"sha": "719daa086c54b008b34146bddc14a9ea48c7b58c", "filename": "libjava/classpath/gnu/javax/management/ListenerData.java", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fmanagement%2FListenerData.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fmanagement%2FListenerData.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fmanagement%2FListenerData.java?ref=24d8ce15e2daacbc37d9d727f7a6ded79aad5e92", "patch": "@@ -35,7 +35,7 @@\n obligated to do so.  If you do not wish to do so, delete this\n exception statement from your version. */\n \n-package gnu.classpath;\n+package gnu.javax.management;\n \n import javax.management.NotificationFilter;\n import javax.management.NotificationListener;", "previous_filename": "libjava/classpath/gnu/classpath/ListenerData.java"}, {"sha": "9e9d19111a83b7e1942e8c156aac049955cfb0d0", "filename": "libjava/classpath/javax/management/MBeanServerDelegate.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fclasspath%2Fjavax%2Fmanagement%2FMBeanServerDelegate.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fclasspath%2Fjavax%2Fmanagement%2FMBeanServerDelegate.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjavax%2Fmanagement%2FMBeanServerDelegate.java?ref=24d8ce15e2daacbc37d9d727f7a6ded79aad5e92", "patch": "@@ -37,7 +37,7 @@\n \n package javax.management;\n \n-import gnu.classpath.ListenerData;\n+import gnu.javax.management.ListenerData;\n import gnu.classpath.SystemProperties;\n \n import java.net.InetAddress;"}, {"sha": "2ab92adf60d3f371637116de1ed2233ebc354a8c", "filename": "libjava/classpath/lib/gnu/classpath/ListenerData.class", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/421076b552721090c5901ff4797d155e5a5a69c8/libjava%2Fclasspath%2Flib%2Fgnu%2Fclasspath%2FListenerData.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/421076b552721090c5901ff4797d155e5a5a69c8/libjava%2Fclasspath%2Flib%2Fgnu%2Fclasspath%2FListenerData.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fclasspath%2FListenerData.class?ref=421076b552721090c5901ff4797d155e5a5a69c8"}, {"sha": "9347297b37aa4a005d4a1ce26e48105878f75dfc", "filename": "libjava/classpath/lib/gnu/java/lang/management/MemoryMXBeanImpl.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Flang%2Fmanagement%2FMemoryMXBeanImpl.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Flang%2Fmanagement%2FMemoryMXBeanImpl.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fjava%2Flang%2Fmanagement%2FMemoryMXBeanImpl.class?ref=24d8ce15e2daacbc37d9d727f7a6ded79aad5e92"}, {"sha": "aaebddd058da87dd8ebd1b9c9c4c991e68fdd420", "filename": "libjava/classpath/lib/gnu/javax/management/ListenerData.class", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fclasspath%2Flib%2Fgnu%2Fjavax%2Fmanagement%2FListenerData.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fclasspath%2Flib%2Fgnu%2Fjavax%2Fmanagement%2FListenerData.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fgnu%2Fjavax%2Fmanagement%2FListenerData.class?ref=24d8ce15e2daacbc37d9d727f7a6ded79aad5e92"}, {"sha": "e5ddca2eab821f912c4502fc617c9b0d33b73ab4", "filename": "libjava/classpath/lib/java/lang/Thread$State.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FThread%24State.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FThread%24State.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FThread%24State.class?ref=24d8ce15e2daacbc37d9d727f7a6ded79aad5e92"}, {"sha": "09315799f1e09e2cad34ab5932bb8a6a963be5d0", "filename": "libjava/classpath/lib/java/lang/Thread.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FThread.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FThread.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2FThread.class?ref=24d8ce15e2daacbc37d9d727f7a6ded79aad5e92"}, {"sha": "7602cf7bacdb98f6416f1c68eec5822fd8bc4216", "filename": "libjava/classpath/lib/java/lang/management/VMManagementFactory.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2Fmanagement%2FVMManagementFactory.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2Fmanagement%2FVMManagementFactory.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjava%2Flang%2Fmanagement%2FVMManagementFactory.class?ref=24d8ce15e2daacbc37d9d727f7a6ded79aad5e92"}, {"sha": "c0c761938cb15f4ca7219cdc1f0b2ee11136cd6c", "filename": "libjava/classpath/lib/javax/management/MBeanServerDelegate.class", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fclasspath%2Flib%2Fjavax%2Fmanagement%2FMBeanServerDelegate.class", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fclasspath%2Flib%2Fjavax%2Fmanagement%2FMBeanServerDelegate.class", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Flib%2Fjavax%2Fmanagement%2FMBeanServerDelegate.class?ref=24d8ce15e2daacbc37d9d727f7a6ded79aad5e92"}, {"sha": "ff1b8f0d4dd358dacee9fd3ab6e98d782d087580", "filename": "libjava/gnu/javax/management/ListenerData.h", "status": "renamed", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fgnu%2Fjavax%2Fmanagement%2FListenerData.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fgnu%2Fjavax%2Fmanagement%2FListenerData.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjavax%2Fmanagement%2FListenerData.h?ref=24d8ce15e2daacbc37d9d727f7a6ded79aad5e92", "patch": "@@ -1,8 +1,8 @@\n \n // DO NOT EDIT THIS FILE - it is machine generated -*- c++ -*-\n \n-#ifndef __gnu_classpath_ListenerData__\n-#define __gnu_classpath_ListenerData__\n+#ifndef __gnu_javax_management_ListenerData__\n+#define __gnu_javax_management_ListenerData__\n \n #pragma interface\n \n@@ -11,9 +11,12 @@ extern \"Java\"\n {\n   namespace gnu\n   {\n-    namespace classpath\n+    namespace javax\n     {\n-        class ListenerData;\n+      namespace management\n+      {\n+          class ListenerData;\n+      }\n     }\n   }\n   namespace javax\n@@ -26,7 +29,7 @@ extern \"Java\"\n   }\n }\n \n-class gnu::classpath::ListenerData : public ::java::lang::Object\n+class gnu::javax::management::ListenerData : public ::java::lang::Object\n {\n \n public:\n@@ -43,4 +46,4 @@ class gnu::classpath::ListenerData : public ::java::lang::Object\n   static ::java::lang::Class class$;\n };\n \n-#endif // __gnu_classpath_ListenerData__\n+#endif // __gnu_javax_management_ListenerData__", "previous_filename": "libjava/gnu/classpath/ListenerData.h"}, {"sha": "84682f3fb831d1ef4d0722c8efdd6f5d6c2cb5b0", "filename": "libjava/java/lang/Thread.java", "status": "modified", "additions": 41, "deletions": 4, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fjava%2Flang%2FThread.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fjava%2Flang%2FThread.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FThread.java?ref=24d8ce15e2daacbc37d9d727f7a6ded79aad5e92", "patch": "@@ -50,6 +50,9 @@\n import java.util.HashMap;\n import java.util.Map;\n \n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+\n /* Written using \"Java Class Libraries\", 2nd edition, ISBN 0-201-31002-3\n  * \"The Java Language Specification\", ISBN 0-201-63451-1\n  * plus online API docs for JDK 1.2 beta from http://www.javasoft.com.\n@@ -1291,9 +1294,43 @@ public StackTraceElement[] getStackTrace()\n     SecurityManager sm = SecurityManager.current; // Be thread-safe.\n     if (sm != null)\n       sm.checkPermission(new RuntimePermission(\"getStackTrace\"));\n-    ThreadMXBean bean = ManagementFactory.getThreadMXBean();\n-    ThreadInfo info = bean.getThreadInfo(getId(), Integer.MAX_VALUE);\n-    return info.getStackTrace();\n-  }\n \n+    // Calling java.lang.management via reflection means that\n+    // javax.management be overridden in the endorsed directory.\n+\n+    // This is the equivalent code:\n+    //\n+    //     ThreadMXBean bean = ManagementFactory.getThreadMXBean();\n+    //     ThreadInfo info = bean.getThreadInfo(getId(), Integer.MAX_VALUE);\n+    //     return info.getStackTrace();\n+\n+    try\n+      {\n+\ttry\n+\t  {\n+\t    Object bean \n+\t      = (Class.forName(\"java.lang.management.ManagementFactory\")\n+\t\t .getDeclaredMethod(\"getThreadMXBean\")\n+\t\t .invoke(null));\n+\t    Object info = bean.getClass()\n+\t      .getDeclaredMethod(\"getThreadInfo\", long.class, int.class)\n+\t      .invoke(bean, new Long(getId()), new Integer(Integer.MAX_VALUE));\n+\t    Object trace = info.getClass()\n+\t      .getDeclaredMethod(\"getStackTrace\").invoke(info);\n+\t    return (StackTraceElement[])trace;\n+\t  }\n+\tcatch (InvocationTargetException e)\n+\t  {\n+\t    throw (Exception)e.getTargetException();\n+\t  }\n+      }\n+    catch (UnsupportedOperationException e)\n+      {\n+\tthrow e;\n+      }\n+    catch (Exception e)\n+      {\n+\tthrow new UnsupportedOperationException(e);\n+      }\n+  }\n }"}, {"sha": "35b15e360f1f0bfb2d8cc9765d4dafe78dabd5af", "filename": "libjava/java/lang/management/VMManagementFactory.java", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fjava%2Flang%2Fmanagement%2FVMManagementFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fjava%2Flang%2Fmanagement%2FVMManagementFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Fmanagement%2FVMManagementFactory.java?ref=24d8ce15e2daacbc37d9d727f7a6ded79aad5e92", "patch": "@@ -1,5 +1,5 @@\n /* VMManagementFactory.java - VM interface for obtaining system beans.\n-   Copyright (C) 2006 Free Software Foundation\n+   Copyright (C) 2006, 2007 Free Software Foundation\n \n This file is part of GNU Classpath.\n \n@@ -54,7 +54,11 @@\n    *\n    * @return a list of memory pool names.\n    */\n-  static native String[] getMemoryPoolNames();\n+  static String[] getMemoryPoolNames()\n+  {\n+    String[] result = {\"Heap\"};\n+    return result;\n+  }\n \n   /**\n    * Return a list of the names of the currently available\n@@ -63,13 +67,21 @@\n    *\n    * @return a list of memory manager names.\n    */\n-  static native String[] getMemoryManagerNames();\n+  static String[] getMemoryManagerNames()\n+  {\n+    String[] result = {};\n+    return result;\n+  }\n \n   /**\n    * Return a list of the names of the currently available\n    * garbage collectors within the virtual machine.\n    *\n    * @return a list of garbage collector names.\n    */\n-  static native String[] getGarbageCollectorNames();\n+  static String[] getGarbageCollectorNames()\n+  {\n+    String[] result = {\"BoehmGC\"};\n+    return result;\n+  }\n }"}, {"sha": "35a418bb338effd3e20e50276f258737980d94a6", "filename": "libjava/java/lang/management/natVMManagementFactory.cc", "status": "removed", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/421076b552721090c5901ff4797d155e5a5a69c8/libjava%2Fjava%2Flang%2Fmanagement%2FnatVMManagementFactory.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/421076b552721090c5901ff4797d155e5a5a69c8/libjava%2Fjava%2Flang%2Fmanagement%2FnatVMManagementFactory.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2Fmanagement%2FnatVMManagementFactory.cc?ref=421076b552721090c5901ff4797d155e5a5a69c8", "patch": "@@ -1,44 +0,0 @@\n-/* Copyright (C) 2006  Free Software Foundation\n-\n-   This file is part of libgcj.\n-\n-This software is copyrighted work licensed under the terms of the\n-Libgcj License.  Please consult the file \"LIBGCJ_LICENSE\" for\n-details.  */\n- \n-/**\n- * @author Andrew John Hughes <gnu_andrew@member.fsf.org>\n- * @date Tue 08 Aug 2006 */\n-/* Implemented for our sole pool, the heap, and our sole memory\n- * manager/garbage collector, Boehm GC.\n- * Status:  Believed complete and correct.\n- */\n-\n-#include <config.h>\n-\n-#include <gcj/cni.h>\n-#include <java/lang/String.h>\n-#include <java/lang/management/VMManagementFactory.h>\n-\n-JArray< ::java::lang::String *> *\n-java::lang::management::VMManagementFactory::getMemoryPoolNames ()\n-{\n-  return (JArray<jstring>*)\n-    JvNewObjectArray(1, &java::lang::String::class$, JvNewStringLatin1(\"Heap\"));\n-}\n-\n-\n-JArray< ::java::lang::String *> *\n-java::lang::management::VMManagementFactory::getMemoryManagerNames ()\n-{\n-  return (JArray<jstring>*)\n-    JvNewObjectArray(0, &java::lang::String::class$, NULL);\n-}\n-\n-\n-JArray< ::java::lang::String *> *\n-java::lang::management::VMManagementFactory::getGarbageCollectorNames ()\n-{\n-  return (JArray<jstring>*) \n-    JvNewObjectArray(1, &java::lang::String::class$, JvNewStringLatin1(\"BoehmGC\"));\n-}"}, {"sha": "59a5915a5fe956034d9a265ad5b63c987f0b6882", "filename": "libjava/scripts/makemake.tcl", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fscripts%2Fmakemake.tcl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fscripts%2Fmakemake.tcl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fscripts%2Fmakemake.tcl?ref=24d8ce15e2daacbc37d9d727f7a6ded79aad5e92", "patch": "@@ -22,6 +22,8 @@ proc verbose {text} {\n # * bc    objects in this package and all its sub-packages\n #         are to be compiled with the BC ABI.  It is an error\n #         for sub-packages to also appear in the map.\n+# * bcheaders \n+#         as bc, but generate header files and compile with CNI.\n # * package\n #         objects in this package (and possibly sub-packages,\n #         if they do not appear in the map) will be compiled en masse\n@@ -73,6 +75,10 @@ set package_map(javax/rmi) bc\n set package_map(org/omg) bc\n set package_map(gnu/CORBA) bc\n set package_map(gnu/javax/rmi) bc\n+set package_map(gnu/java/lang/management) bcheaders\n+set package_map(java/lang/management) bc\n+set package_map(gnu/classpath/management) bc\n+set package_map(gnu/javax/management) bc\n \n # parser/HTML_401F.class is really big, and there have been complaints\n # about this package requiring too much memory to build.  So, we\n@@ -265,7 +271,11 @@ proc emit_bc_rule {package} {\n     set omit \"| grep -v $exclusion_map($package)\"\n   }\n   puts  \"\\t@find \\$(srcdir)/classpath/lib/$package -name '*.class'${omit} > $tname\"\n-  puts \"\\t\\$(LTGCJCOMPILE) -fsource-filename=\\$(here)/classpath/lib/classes -fjni -findirect-dispatch -fno-indirect-classes -c -o $loname @$tname\"\n+  puts -nonewline \"\\t\\$(LTGCJCOMPILE) -fsource-filename=\\$(here)/classpath/lib/classes \"\n+  if {$package_map($package) == \"bc\"} {\n+    puts -nonewline \"-fjni \"\n+  }\n+  puts \"-findirect-dispatch -fno-indirect-classes -c -o $loname @$tname\"\n   puts \"\\t@rm -f $tname\"\n   puts \"\"\n \n@@ -461,6 +471,8 @@ foreach package [lsort [array names package_map]] {\n \n   if {$package_map($package) == \"bc\"} {\n     emit_bc_rule $package\n+  } elseif {$package_map($package) == \"bcheaders\"} {\n+    emit_bc_rule $package\n   } elseif {$package_map($package) == \"ordinary\"} {\n     emit_ordinary_rule $package\n   } elseif {$package_map($package) == \"package\"} {"}, {"sha": "ce077f4c700b55c520b39304aeff8cefd42d207c", "filename": "libjava/sources.am", "status": "modified", "additions": 16, "deletions": 28, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fsources.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24d8ce15e2daacbc37d9d727f7a6ded79aad5e92/libjava%2Fsources.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fsources.am?ref=24d8ce15e2daacbc37d9d727f7a6ded79aad5e92", "patch": "@@ -223,7 +223,6 @@ gnu/awt/xlib.list: $(gnu_awt_xlib_source_files)\n \n gnu_classpath_source_files = \\\n gnu/classpath/Configuration.java \\\n-classpath/gnu/classpath/ListenerData.java \\\n classpath/gnu/classpath/NotImplementedException.java \\\n classpath/gnu/classpath/Pointer.java \\\n classpath/gnu/classpath/Pointer32.java \\\n@@ -1125,12 +1124,10 @@ gnu/java/lang/management/VMThreadMXBeanImpl.java\n \n gnu_java_lang_management_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_lang_management_source_files)))\n \n-gnu/java/lang/management.list: $(gnu_java_lang_management_source_files)\n-\t@$(mkinstalldirs) $(dir $@)\n-\techo $(srcdir)/classpath/lib/gnu/java/lang/management/*.class > gnu/java/lang/management.list\n-\n--include gnu/java/lang/management.deps\n-\n+gnu-java-lang-management.lo: $(gnu_java_lang_management_source_files)\n+\t@find $(srcdir)/classpath/lib/gnu/java/lang/management -name '*.class' > gnu-java-lang-management.list\n+\t$(LTGCJCOMPILE) -fsource-filename=$(here)/classpath/lib/classes -findirect-dispatch -fno-indirect-classes -c -o gnu-java-lang-management.lo @gnu-java-lang-management.list\n+\t@rm -f gnu-java-lang-management.list\n \n gnu_java_lang_reflect_source_files = \\\n classpath/gnu/java/lang/reflect/ClassSignatureParser.java \\\n@@ -2879,16 +2876,13 @@ gnu/javax/imageio/png.list: $(gnu_javax_imageio_png_source_files)\n \n \n gnu_javax_management_source_files = \\\n+classpath/gnu/javax/management/ListenerData.java \\\n classpath/gnu/javax/management/Server.java\n \n-gnu_javax_management_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_management_source_files)))\n-\n-gnu/javax/management.list: $(gnu_javax_management_source_files)\n-\t@$(mkinstalldirs) $(dir $@)\n-\techo $(srcdir)/classpath/lib/gnu/javax/management/*.class > gnu/javax/management.list\n-\n--include gnu/javax/management.deps\n-\n+gnu-javax-management.lo: $(gnu_javax_management_source_files)\n+\t@find $(srcdir)/classpath/lib/gnu/javax/management -name '*.class' > gnu-javax-management.list\n+\t$(LTGCJCOMPILE) -fsource-filename=$(here)/classpath/lib/classes -fjni -findirect-dispatch -fno-indirect-classes -c -o gnu-javax-management.lo @gnu-javax-management.list\n+\t@rm -f gnu-javax-management.list\n \n gnu_javax_naming_giop_source_files = \\\n classpath/gnu/javax/naming/giop/ContextContinuation.java \\\n@@ -4828,14 +4822,10 @@ classpath/java/lang/management/ThreadInfo.java \\\n classpath/java/lang/management/ThreadMXBean.java \\\n java/lang/management/VMManagementFactory.java\n \n-java_lang_management_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(java_lang_management_source_files)))\n-\n-java/lang/management.list: $(java_lang_management_source_files)\n-\t@$(mkinstalldirs) $(dir $@)\n-\techo $(srcdir)/classpath/lib/java/lang/management/*.class > java/lang/management.list\n-\n--include java/lang/management.deps\n-\n+java-lang-management.lo: $(java_lang_management_source_files)\n+\t@find $(srcdir)/classpath/lib/java/lang/management -name '*.class' > java-lang-management.list\n+\t$(LTGCJCOMPILE) -fsource-filename=$(here)/classpath/lib/classes -fjni -findirect-dispatch -fno-indirect-classes -c -o java-lang-management.lo @java-lang-management.list\n+\t@rm -f java-lang-management.list\n \n java_lang_ref_source_files = \\\n classpath/java/lang/ref/PhantomReference.java \\\n@@ -8464,7 +8454,6 @@ all_packages_source_files = \\\n   gnu/java/awt/print.list \\\n   gnu/java/io.list \\\n   gnu/java/lang.list \\\n-  gnu/java/lang/management.list \\\n   gnu/java/lang/reflect.list \\\n   gnu/java/locale.list \\\n   gnu/java/math.list \\\n@@ -8542,7 +8531,6 @@ all_packages_source_files = \\\n   gnu/javax/imageio/gif.list \\\n   gnu/javax/imageio/jpeg.list \\\n   gnu/javax/imageio/png.list \\\n-  gnu/javax/management.list \\\n   gnu/javax/naming/giop.list \\\n   gnu/javax/naming/ictxImpl/trans.list \\\n   gnu/javax/naming/jndi/url/corbaname.list \\\n@@ -8596,7 +8584,6 @@ all_packages_source_files = \\\n   java/lang.list \\\n   java/lang/annotation.list \\\n   java/lang/instrument.list \\\n-  java/lang/management.list \\\n   java/lang/ref.list \\\n   java/lang/reflect.list \\\n   java/math.list \\\n@@ -8795,7 +8782,6 @@ ordinary_header_files = \\\n   $(gnu_javax_imageio_gif_header_files) \\\n   $(gnu_javax_imageio_jpeg_header_files) \\\n   $(gnu_javax_imageio_png_header_files) \\\n-  $(gnu_javax_management_header_files) \\\n   $(gnu_javax_naming_giop_header_files) \\\n   $(gnu_javax_naming_ictxImpl_trans_header_files) \\\n   $(gnu_javax_naming_jndi_url_corbaname_header_files) \\\n@@ -8844,7 +8830,6 @@ ordinary_header_files = \\\n   $(java_lang_header_files) \\\n   $(java_lang_annotation_header_files) \\\n   $(java_lang_instrument_header_files) \\\n-  $(java_lang_management_header_files) \\\n   $(java_lang_ref_header_files) \\\n   $(java_lang_reflect_header_files) \\\n   $(java_math_header_files) \\\n@@ -8937,7 +8922,9 @@ bc_objects = \\\n   gnu-java-awt-peer-gtk.lo \\\n   gnu-java-awt-peer-swing.lo \\\n   gnu-java-beans.lo \\\n+  gnu-java-lang-management.lo \\\n   gnu-java-util-prefs-gconf.lo \\\n+  gnu-javax-management.lo \\\n   gnu-javax-rmi.lo \\\n   gnu-javax-sound-midi.lo \\\n   gnu-xml-aelfred2.lo \\\n@@ -8949,6 +8936,7 @@ bc_objects = \\\n   gnu-xml-util.lo \\\n   gnu-xml-validation.lo \\\n   gnu-xml-xpath.lo \\\n+  java-lang-management.lo \\\n   javax-imageio.lo \\\n   javax-rmi.lo \\\n   javax-xml.lo \\"}]}