{"sha": "089e575bb026643d369f674640a28ffee2a40fda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDg5ZTU3NWJiMDI2NjQzZDM2OWY2NzQ2NDBhMjhmZmVlMmE0MGZkYQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-02-02T22:25:11Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-02-02T22:25:11Z"}, "message": "(int_reg_class_contents): Make unsigned to avoid signed integer overflow.\n\n(init_reg_sets): Avoid signed integer overflow.\n\nFrom-SVN: r3411", "tree": {"sha": "8dc0d346bc155890096f03730a122b681e61b8e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8dc0d346bc155890096f03730a122b681e61b8e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/089e575bb026643d369f674640a28ffee2a40fda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/089e575bb026643d369f674640a28ffee2a40fda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/089e575bb026643d369f674640a28ffee2a40fda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/089e575bb026643d369f674640a28ffee2a40fda/comments", "author": null, "committer": null, "parents": [{"sha": "b670485b6a73554456655d6881ddd17ba017d51c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b670485b6a73554456655d6881ddd17ba017d51c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b670485b6a73554456655d6881ddd17ba017d51c"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "80d008a8958dcefa759b46c5d586dbab20f394ec", "filename": "gcc/regclass.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/089e575bb026643d369f674640a28ffee2a40fda/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/089e575bb026643d369f674640a28ffee2a40fda/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=089e575bb026643d369f674640a28ffee2a40fda", "patch": "@@ -115,14 +115,14 @@ int reg_alloc_order[FIRST_PSEUDO_REGISTER] = REG_ALLOC_ORDER;\n \n HARD_REG_SET reg_class_contents[N_REG_CLASSES];\n \n-/* The same information, but as an array of ints.  We copy from these\n-   ints to the table above.  This is done so that the tm.h files do\n-   not have to be aware of the wordsize for machines with <= 64 regs.  */\n+/* The same information, but as an array of unsigned ints.  We copy from\n+   these unsigned ints to the table above.  We do this so the tm.h files\n+   do not have to be aware of the wordsize for machines with <= 64 regs.  */\n \n #define N_REG_INTS  \\\n   ((FIRST_PSEUDO_REGISTER + (HOST_BITS_PER_INT - 1)) / HOST_BITS_PER_INT)\n \n-static int int_reg_class_contents[N_REG_CLASSES][N_REG_INTS] \n+static unsigned int_reg_class_contents[N_REG_CLASSES][N_REG_INTS] \n   = REG_CLASS_CONTENTS;\n \n /* For each reg class, number of regs it contains.  */\n@@ -201,7 +201,7 @@ init_reg_sets ()\n \n       for (j = 0; j < FIRST_PSEUDO_REGISTER; j++)\n \tif (int_reg_class_contents[i][j / HOST_BITS_PER_INT]\n-\t    & (1 << (j % HOST_BITS_PER_INT)))\n+\t    & ((unsigned) 1 << (j % HOST_BITS_PER_INT)))\n \t  SET_HARD_REG_BIT (reg_class_contents[i], j);\n     }\n "}]}