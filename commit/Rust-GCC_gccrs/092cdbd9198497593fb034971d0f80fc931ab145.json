{"sha": "092cdbd9198497593fb034971d0f80fc931ab145", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDkyY2RiZDkxOTg0OTc1OTNmYjAzNDk3MWQwZjgwZmM5MzFhYjE0NQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-11-04T08:41:48Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-11-04T09:59:55Z"}, "message": "Re-instantiate SLP induction IV CSE\n\nThis re-instantiates the previously removed CSE, fixing the\nFAIL of gcc.dg/vect/costmodel/x86_64/costmodel-pr30843.c\nIt turns out the previous approach still works.\n\n2020-11-04  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vect-loop.c (vectorizable_induction): Re-instantiate\n\tpreviously removed CSE of SLP IVs.", "tree": {"sha": "8c139f7e5f8a991b418696bdd96a0c097b0fbd6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c139f7e5f8a991b418696bdd96a0c097b0fbd6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/092cdbd9198497593fb034971d0f80fc931ab145", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/092cdbd9198497593fb034971d0f80fc931ab145", "html_url": "https://github.com/Rust-GCC/gccrs/commit/092cdbd9198497593fb034971d0f80fc931ab145", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/092cdbd9198497593fb034971d0f80fc931ab145/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14ddf41acb96f28815b9fffe9a408be255e1ca2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14ddf41acb96f28815b9fffe9a408be255e1ca2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14ddf41acb96f28815b9fffe9a408be255e1ca2c"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "c09aa3924194a684bd030772b2ab6ed2ace66bc0", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/092cdbd9198497593fb034971d0f80fc931ab145/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/092cdbd9198497593fb034971d0f80fc931ab145/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=092cdbd9198497593fb034971d0f80fc931ab145", "patch": "@@ -7874,8 +7874,16 @@ vectorizable_induction (loop_vec_info loop_vinfo,\n       if (nested_in_vect_loop)\n \tnivs = nvects;\n       else\n-\tnivs = least_common_multiple (group_size,\n-\t\t\t\t      const_nunits) / const_nunits;\n+\t{\n+\t  /* Compute the number of distinct IVs we need.  First reduce\n+\t     group_size if it is a multiple of const_nunits so we get\n+\t     one IV for a group_size of 4 but const_nunits 2.  */\n+\t  unsigned group_sizep = group_size;\n+\t  if (group_sizep % const_nunits == 0)\n+\t    group_sizep = group_sizep / const_nunits;\n+\t  nivs = least_common_multiple (group_sizep,\n+\t\t\t\t\tconst_nunits) / const_nunits;\n+\t}\n       tree stept = TREE_TYPE (step_vectype);\n       tree lupdate_mul = NULL_TREE;\n       if (!nested_in_vect_loop)\n@@ -7975,6 +7983,15 @@ vectorizable_induction (loop_vec_info loop_vinfo,\n \n \t  SLP_TREE_VEC_STMTS (slp_node).quick_push (induction_phi);\n \t}\n+      if (!nested_in_vect_loop)\n+\t{\n+\t  /* Fill up to the number of vectors we need for the whole group.  */\n+\t  nivs = least_common_multiple (group_size,\n+\t\t\t\t\tconst_nunits) / const_nunits;\n+\t  for (; ivn < nivs; ++ivn)\n+\t    SLP_TREE_VEC_STMTS (slp_node)\n+\t      .quick_push (SLP_TREE_VEC_STMTS (slp_node)[0]);\n+\t}\n \n       /* Re-use IVs when we can.  We are generating further vector\n \t stmts by adding VF' * stride to the IVs generated above.  */"}]}