{"sha": "b2f06c39b01335127308567e5e074c3218011420", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJmMDZjMzliMDEzMzUxMjczMDg1NjdlNWUwNzRjMzIxODAxMTQyMA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2008-04-22T21:23:23Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2008-04-22T21:23:23Z"}, "message": "fold-const.c (pointer_may_wrap_p): Call int_size_in_bytes rather than size_in_bytes.\n\n./:\t* fold-const.c (pointer_may_wrap_p): Call int_size_in_bytes rather\n\tthan size_in_bytes.\ntestsuite/:\n\t* gcc.c-torture/compile/20080419-1.c: New test.\n\nFrom-SVN: r134566", "tree": {"sha": "976b9798182677c5c456dcd680a49a1515900333", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/976b9798182677c5c456dcd680a49a1515900333"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2f06c39b01335127308567e5e074c3218011420", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2f06c39b01335127308567e5e074c3218011420", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2f06c39b01335127308567e5e074c3218011420", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2f06c39b01335127308567e5e074c3218011420/comments", "author": null, "committer": null, "parents": [{"sha": "aafc759a8a4e404469bf39a92bb10522baf4a281", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aafc759a8a4e404469bf39a92bb10522baf4a281", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aafc759a8a4e404469bf39a92bb10522baf4a281"}], "stats": {"total": 57, "additions": 34, "deletions": 23}, "files": [{"sha": "6132b7fdd09516189512fb621feb53e0638d7c0e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f06c39b01335127308567e5e074c3218011420/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f06c39b01335127308567e5e074c3218011420/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b2f06c39b01335127308567e5e074c3218011420", "patch": "@@ -1,3 +1,8 @@\n+2008-04-22  Ian Lance Taylor  <iant@google.com>\n+\n+\t* fold-const.c (pointer_may_wrap_p): Call int_size_in_bytes rather\n+\tthan size_in_bytes.\n+\n 2008-04-22  Pat Haugen  <pthaugen@us.ibm.com>\n \n \t* config/rs6000/rs6000.c (rs6000_register_move_cost): Increase cost"}, {"sha": "4015f62e5cd0425089c6d2b6afee81e3dedd9730", "filename": "gcc/fold-const.c", "status": "modified", "additions": 19, "deletions": 23, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f06c39b01335127308567e5e074c3218011420/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f06c39b01335127308567e5e074c3218011420/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=b2f06c39b01335127308567e5e074c3218011420", "patch": "@@ -8401,31 +8401,15 @@ maybe_canonicalize_comparison (enum tree_code code, tree type,\n static bool\n pointer_may_wrap_p (tree base, tree offset, HOST_WIDE_INT bitpos)\n {\n-  tree size;\n   unsigned HOST_WIDE_INT offset_low, total_low;\n-  HOST_WIDE_INT offset_high, total_high;\n+  HOST_WIDE_INT size, offset_high, total_high;\n \n   if (!POINTER_TYPE_P (TREE_TYPE (base)))\n     return true;\n \n   if (bitpos < 0)\n     return true;\n \n-  size = size_in_bytes (TREE_TYPE (TREE_TYPE (base)));\n-  if (size == NULL_TREE || TREE_CODE (size) != INTEGER_CST)\n-    return true;\n-\n-  /* We can do slightly better for SIZE if we have an ADDR_EXPR of an\n-     array.  */\n-  if (TREE_CODE (base) == ADDR_EXPR)\n-    {\n-      tree base_size = size_in_bytes (TREE_TYPE (TREE_OPERAND (base, 0)));\n-      if (base_size != NULL_TREE\n-\t  && TREE_CODE (base_size) == INTEGER_CST\n-\t  && INT_CST_LT_UNSIGNED (size, base_size))\n-\tsize = base_size;\n-    }\n-\n   if (offset == NULL_TREE)\n     {\n       offset_low = 0;\n@@ -8445,13 +8429,25 @@ pointer_may_wrap_p (tree base, tree offset, HOST_WIDE_INT bitpos)\n \t\t\t    true))\n     return true;\n \n-  if ((unsigned HOST_WIDE_INT) total_high\n-      < (unsigned HOST_WIDE_INT) TREE_INT_CST_HIGH (size))\n-    return false;\n-  if ((unsigned HOST_WIDE_INT) total_high\n-      > (unsigned HOST_WIDE_INT) TREE_INT_CST_HIGH (size))\n+  if (total_high != 0)\n     return true;\n-  return total_low > TREE_INT_CST_LOW (size);\n+\n+  size = int_size_in_bytes (TREE_TYPE (TREE_TYPE (base)));\n+  if (size <= 0)\n+    return true;\n+\n+  /* We can do slightly better for SIZE if we have an ADDR_EXPR of an\n+     array.  */\n+  if (TREE_CODE (base) == ADDR_EXPR)\n+    {\n+      HOST_WIDE_INT base_size;\n+\n+      base_size = int_size_in_bytes (TREE_TYPE (TREE_OPERAND (base, 0)));\n+      if (base_size > 0 && size < base_size)\n+\tsize = base_size;\n+    }\n+\n+  return total_low > (unsigned HOST_WIDE_INT) size;\n }\n \n /* Subroutine of fold_binary.  This routine performs all of the"}, {"sha": "af0d3207a67793447fbaaf725600b9b0ec63b0f0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f06c39b01335127308567e5e074c3218011420/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f06c39b01335127308567e5e074c3218011420/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b2f06c39b01335127308567e5e074c3218011420", "patch": "@@ -1,3 +1,7 @@\n+2008-04-22  Ian Lance Taylor  <iant@google.com>\n+\n+\t* gcc.c-torture/compile/20080419-1.c: New test.\n+\n 2008-04-22  Kris Van Hees <kris.van.hees@oracle.com>\n \n \tPR testsuite/35981"}, {"sha": "b257fea747f5eb618e202c23ecf2f9fd4a30c487", "filename": "gcc/testsuite/gcc.c-torture/compile/20080419-1.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2f06c39b01335127308567e5e074c3218011420/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080419-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2f06c39b01335127308567e5e074c3218011420/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080419-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080419-1.c?ref=b2f06c39b01335127308567e5e074c3218011420", "patch": "@@ -0,0 +1,6 @@\n+extern void *f();\n+void dmi_scan_machine(void) {\n+  char *p = f(), *q;\n+  for (q = p; q < p + 10; q++)\n+    ;\n+}"}]}