{"sha": "922f9c255896c0e24e997292cc7518b4b6545e7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTIyZjljMjU1ODk2YzBlMjRlOTk3MjkyY2M3NTE4YjRiNjU0NWU3Yw==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2015-09-08T19:08:34Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2015-09-08T19:08:34Z"}, "message": "[AArch64] Implement vcvt_{,high_}f16_f32\n\n\t* config/aarch64/aarch64-simd.md (aarch64_float_truncate_lo_v2sf):\n\tReparameterize to...\n\t(aarch64_float_truncate_lo_<mode>): ...this, for both V2SF and V4HF.\n\t(aarch64_float_truncate_hi_v4sf): Reparameterize to...\n\t(aarch64_float_truncate_hi_<Vdbl>): ...this, for both V4SF and V8HF.\n\n\t* config/aarch64/aarch64-simd-builtins.def (float_truncate_hi_): Add\n\tv8hf variant.\n\t(float_truncate_lo_): Use BUILTIN_VDF iterator.\n\n\t* config/aarch64/arm_neon.h (vcvt_f16_f32, vcvt_high_f16_f32): New.\n\n\t* config/aarch64/iterators.md (VDF, Vdtype): New.\n\t(VWIDE, Vmwtype): Add cases for V4HF and V2SF.\n\nFrom-SVN: r227545", "tree": {"sha": "b47582d070f61e22a2a8041aa39d0476f99176b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b47582d070f61e22a2a8041aa39d0476f99176b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/922f9c255896c0e24e997292cc7518b4b6545e7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/922f9c255896c0e24e997292cc7518b4b6545e7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/922f9c255896c0e24e997292cc7518b4b6545e7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/922f9c255896c0e24e997292cc7518b4b6545e7c/comments", "author": null, "committer": null, "parents": [{"sha": "7c3694857570a7ed472cbacbb027521715a26da6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c3694857570a7ed472cbacbb027521715a26da6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c3694857570a7ed472cbacbb027521715a26da6"}], "stats": {"total": 70, "additions": 52, "deletions": 18}, "files": [{"sha": "4f267d23bc27ef5da3ead672f2781fe8355e445a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/922f9c255896c0e24e997292cc7518b4b6545e7c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/922f9c255896c0e24e997292cc7518b4b6545e7c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=922f9c255896c0e24e997292cc7518b4b6545e7c", "patch": "@@ -1,3 +1,20 @@\n+2015-09-08  Alan Lawrence  <alan.lawrence@arm.com>\n+\n+\t* config/aarch64/aarch64-simd.md (aarch64_float_truncate_lo_v2sf):\n+\tReparameterize to...\n+\t(aarch64_float_truncate_lo_<mode>): ...this, for both V2SF and V4HF.\n+\t(aarch64_float_truncate_hi_v4sf): Reparameterize to...\n+\t(aarch64_float_truncate_hi_<Vdbl>): ...this, for both V4SF and V8HF.\n+\n+\t* config/aarch64/aarch64-simd-builtins.def (float_truncate_hi_): Add\n+\tv8hf variant.\n+\t(float_truncate_lo_): Use BUILTIN_VDF iterator.\n+\n+\t* config/aarch64/arm_neon.h (vcvt_f16_f32, vcvt_high_f16_f32): New.\n+\n+\t* config/aarch64/iterators.md (VDF, Vdtype): New.\n+\t(VWIDE, Vmwtype): Add cases for V4HF and V2SF.\n+\n 2015-09-08  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* config/aarch64/aarch64.c (aarch64_split_simd_combine): Add V4HFmode."}, {"sha": "c5b46aa1404307436503de8f44f887d337a17368", "filename": "gcc/config/aarch64/aarch64-simd-builtins.def", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/922f9c255896c0e24e997292cc7518b4b6545e7c/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/922f9c255896c0e24e997292cc7518b4b6545e7c/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd-builtins.def?ref=922f9c255896c0e24e997292cc7518b4b6545e7c", "patch": "@@ -363,9 +363,10 @@\n \n   VAR1 (UNOP, vec_unpacks_hi_, 10, v4sf)\n   VAR1 (BINOP, float_truncate_hi_, 0, v4sf)\n+  VAR1 (BINOP, float_truncate_hi_, 0, v8hf)\n \n   VAR1 (UNOP, float_extend_lo_, 0, v2df)\n-  VAR1 (UNOP, float_truncate_lo_, 0, v2sf)\n+  BUILTIN_VDF (UNOP, float_truncate_lo_, 0)\n \n   /* Implemented by aarch64_ld1<VALL_F16:mode>.  */\n   BUILTIN_VALL_F16 (LOAD1, ld1, 0)"}, {"sha": "8bd4057c808f8f38b3347ae6a1f8e0e77380f181", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/922f9c255896c0e24e997292cc7518b4b6545e7c/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/922f9c255896c0e24e997292cc7518b4b6545e7c/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=922f9c255896c0e24e997292cc7518b4b6545e7c", "patch": "@@ -1726,23 +1726,23 @@\n \n ;; Float narrowing operations.\n \n-(define_insn \"aarch64_float_truncate_lo_v2sf\"\n-  [(set (match_operand:V2SF 0 \"register_operand\" \"=w\")\n-      (float_truncate:V2SF\n-\t(match_operand:V2DF 1 \"register_operand\" \"w\")))]\n+(define_insn \"aarch64_float_truncate_lo_<mode>\"\n+  [(set (match_operand:VDF 0 \"register_operand\" \"=w\")\n+      (float_truncate:VDF\n+\t(match_operand:<VWIDE> 1 \"register_operand\" \"w\")))]\n   \"TARGET_SIMD\"\n-  \"fcvtn\\\\t%0.2s, %1.2d\"\n+  \"fcvtn\\\\t%0.<Vtype>, %1<Vmwtype>\"\n   [(set_attr \"type\" \"neon_fp_cvt_narrow_d_q\")]\n )\n \n-(define_insn \"aarch64_float_truncate_hi_v4sf\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=w\")\n-    (vec_concat:V4SF\n-      (match_operand:V2SF 1 \"register_operand\" \"0\")\n-      (float_truncate:V2SF\n-\t(match_operand:V2DF 2 \"register_operand\" \"w\"))))]\n+(define_insn \"aarch64_float_truncate_hi_<Vdbl>\"\n+  [(set (match_operand:<VDBL> 0 \"register_operand\" \"=w\")\n+    (vec_concat:<VDBL>\n+      (match_operand:VDF 1 \"register_operand\" \"0\")\n+      (float_truncate:VDF\n+\t(match_operand:<VWIDE> 2 \"register_operand\" \"w\"))))]\n   \"TARGET_SIMD\"\n-  \"fcvtn2\\\\t%0.4s, %2.2d\"\n+  \"fcvtn2\\\\t%0.<Vdtype>, %2<Vmwtype>\"\n   [(set_attr \"type\" \"neon_fp_cvt_narrow_d_q\")]\n )\n "}, {"sha": "02e9af2d0e78746f88be14e9d1f79511eb6901b3", "filename": "gcc/config/aarch64/arm_neon.h", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/922f9c255896c0e24e997292cc7518b4b6545e7c/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/922f9c255896c0e24e997292cc7518b4b6545e7c/gcc%2Fconfig%2Faarch64%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Farm_neon.h?ref=922f9c255896c0e24e997292cc7518b4b6545e7c", "patch": "@@ -5725,12 +5725,8 @@ vaddlvq_u32 (uint32x4_t a)\n        result;                                                          \\\n      })\n \n-/* vcvt_f16_f32 not supported */\n-\n /* vcvt_f32_f16 not supported */\n \n-/* vcvt_high_f16_f32 not supported */\n-\n /* vcvt_high_f32_f16 not supported */\n \n #define vcvt_n_f32_s32(a, b)                                            \\\n@@ -13114,6 +13110,18 @@ vcntq_u8 (uint8x16_t __a)\n \n /* vcvt (double -> float).  */\n \n+__extension__ static __inline float16x4_t __attribute__ ((__always_inline__))\n+vcvt_f16_f32 (float32x4_t __a)\n+{\n+  return __builtin_aarch64_float_truncate_lo_v4hf (__a);\n+}\n+\n+__extension__ static __inline float16x8_t __attribute__ ((__always_inline__))\n+vcvt_high_f16_f32 (float16x4_t __a, float32x4_t __b)\n+{\n+  return __builtin_aarch64_float_truncate_hi_v8hf (__a, __b);\n+}\n+\n __extension__ static __inline float32x2_t __attribute__ ((__always_inline__))\n vcvt_f32_f64 (float64x2_t __a)\n {"}, {"sha": "d7dfdc1ff25cf50663cffe8fb4299111f14b3702", "filename": "gcc/config/aarch64/iterators.md", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/922f9c255896c0e24e997292cc7518b4b6545e7c/gcc%2Fconfig%2Faarch64%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/922f9c255896c0e24e997292cc7518b4b6545e7c/gcc%2Fconfig%2Faarch64%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Fiterators.md?ref=922f9c255896c0e24e997292cc7518b4b6545e7c", "patch": "@@ -41,6 +41,9 @@\n ;; Iterator for General Purpose Float registers, inc __fp16.\n (define_mode_iterator GPF_F16 [HF SF DF])\n \n+;; Double vector modes.\n+(define_mode_iterator VDF [V2SF V4HF])\n+\n ;; Integer vector modes.\n (define_mode_iterator VDQ_I [V8QI V16QI V4HI V8HI V2SI V4SI V2DI])\n \n@@ -449,6 +452,9 @@\n \t\t\t(SI   \"V2SI\")  (DI   \"V2DI\")\n \t\t\t(DF   \"V2DF\")])\n \n+;; Register suffix for double-length mode.\n+(define_mode_attr Vdtype [(V4HF \"8h\") (V2SF \"4s\")])\n+\n ;; Double modes of vector modes (lower case).\n (define_mode_attr Vdbl [(V8QI \"v16qi\") (V4HI \"v8hi\")\n \t\t\t(V4HF \"v8hf\")\n@@ -482,7 +488,8 @@\n (define_mode_attr VWIDE [(V8QI \"V8HI\") (V4HI \"V4SI\")\n \t\t\t (V2SI \"V2DI\") (V16QI \"V8HI\") \n \t\t\t (V8HI \"V4SI\") (V4SI \"V2DI\")\n-\t\t\t (HI \"SI\")     (SI \"DI\")]\n+\t\t\t (HI \"SI\")     (SI \"DI\")\n+\t\t\t (V4HF \"V4SF\") (V2SF \"V2DF\")]\n \n )\n \n@@ -495,6 +502,7 @@\n (define_mode_attr Vmwtype [(V8QI \".8h\") (V4HI \".4s\")\n \t\t\t   (V2SI \".2d\") (V16QI \".8h\") \n \t\t\t   (V8HI \".4s\") (V4SI \".2d\")\n+\t\t\t   (V4HF \".4s\") (V2SF \".2d\")\n \t\t\t   (SI   \"\")    (HI   \"\")])\n \n ;; Lower part register suffixes for VQW."}]}