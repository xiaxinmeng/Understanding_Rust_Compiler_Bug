{"sha": "b48d6421892860b065d69730f6fa8c757f6f6357", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ4ZDY0MjE4OTI4NjBiMDY1ZDY5NzMwZjZmYThjNzU3ZjZmNjM1Nw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2017-02-14T10:31:14Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2017-02-14T10:31:14Z"}, "message": "[AArch64] PR rtl-optimization/68664 Implement TARGET_SCHED_CAN_SPECULATE_INSN hook\n\n\tPR rtl-optimization/68664\n\t* config/aarch64/aarch64.c (aarch64_sched_can_speculate_insn):\n\tNew function.\n\t(TARGET_SCHED_CAN_SPECULATE_INSN): Define.\n\nFrom-SVN: r245424", "tree": {"sha": "95e6732d45fcaf512e38a16f5713d84dd7d8a52e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95e6732d45fcaf512e38a16f5713d84dd7d8a52e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b48d6421892860b065d69730f6fa8c757f6f6357", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b48d6421892860b065d69730f6fa8c757f6f6357", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b48d6421892860b065d69730f6fa8c757f6f6357", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b48d6421892860b065d69730f6fa8c757f6f6357/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c8431fc9b528c3d2adfddeb4961e1477b9a3d4a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8431fc9b528c3d2adfddeb4961e1477b9a3d4a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8431fc9b528c3d2adfddeb4961e1477b9a3d4a9"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "d60309152952f8b6b51f77f3598c011129231993", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b48d6421892860b065d69730f6fa8c757f6f6357/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b48d6421892860b065d69730f6fa8c757f6f6357/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b48d6421892860b065d69730f6fa8c757f6f6357", "patch": "@@ -1,3 +1,10 @@\n+2017-02-14  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR rtl-optimization/68664\n+\t* config/aarch64/aarch64.c (aarch64_sched_can_speculate_insn):\n+\tNew function.\n+\t(TARGET_SCHED_CAN_SPECULATE_INSN): Define.\n+\n 2017-02-14  Amit Pawar  <amit.pawar@amd.com>\n \n \t* config/i386/i386.c (znver1_cost): Fix the alignment for function and"}, {"sha": "45404063aeae36a0703971aa4d6d4fe9e58027c1", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b48d6421892860b065d69730f6fa8c757f6f6357/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b48d6421892860b065d69730f6fa8c757f6f6357/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=b48d6421892860b065d69730f6fa8c757f6f6357", "patch": "@@ -14682,6 +14682,35 @@ aarch64_excess_precision (enum excess_precision_type type)\n   return FLT_EVAL_METHOD_UNPREDICTABLE;\n }\n \n+/* Implement TARGET_SCHED_CAN_SPECULATE_INSN.  Return true if INSN can be\n+   scheduled for speculative execution.  Reject the long-running division\n+   and square-root instructions.  */\n+\n+static bool\n+aarch64_sched_can_speculate_insn (rtx_insn *insn)\n+{\n+  switch (get_attr_type (insn))\n+    {\n+      case TYPE_SDIV:\n+      case TYPE_UDIV:\n+      case TYPE_FDIVS:\n+      case TYPE_FDIVD:\n+      case TYPE_FSQRTS:\n+      case TYPE_FSQRTD:\n+      case TYPE_NEON_FP_SQRT_S:\n+      case TYPE_NEON_FP_SQRT_D:\n+      case TYPE_NEON_FP_SQRT_S_Q:\n+      case TYPE_NEON_FP_SQRT_D_Q:\n+      case TYPE_NEON_FP_DIV_S:\n+      case TYPE_NEON_FP_DIV_D:\n+      case TYPE_NEON_FP_DIV_S_Q:\n+      case TYPE_NEON_FP_DIV_D_Q:\n+\treturn false;\n+      default:\n+\treturn true;\n+    }\n+}\n+\n /* Target-specific selftests.  */\n \n #if CHECKING_P\n@@ -15070,6 +15099,9 @@ aarch64_libgcc_floating_mode_supported_p\n #define TARGET_USE_BY_PIECES_INFRASTRUCTURE_P \\\n   aarch64_use_by_pieces_infrastructure_p\n \n+#undef TARGET_SCHED_CAN_SPECULATE_INSN\n+#define TARGET_SCHED_CAN_SPECULATE_INSN aarch64_sched_can_speculate_insn\n+\n #undef TARGET_CAN_USE_DOLOOP_P\n #define TARGET_CAN_USE_DOLOOP_P can_use_doloop_if_innermost\n "}]}