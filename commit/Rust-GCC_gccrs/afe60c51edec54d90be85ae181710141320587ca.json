{"sha": "afe60c51edec54d90be85ae181710141320587ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZlNjBjNTFlZGVjNTRkOTBiZTg1YWUxODE3MTAxNDEzMjA1ODdjYQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@cygnus.com", "date": "1999-08-13T07:47:18Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-08-13T07:47:18Z"}, "message": "* Makefile.in (GCC_FOR_TARGET): Move -B./ after the tooldir -B.\n\nFrom-SVN: r28700", "tree": {"sha": "ac62d1b3035b044d8601202a02912660ed5a1434", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac62d1b3035b044d8601202a02912660ed5a1434"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afe60c51edec54d90be85ae181710141320587ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afe60c51edec54d90be85ae181710141320587ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afe60c51edec54d90be85ae181710141320587ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afe60c51edec54d90be85ae181710141320587ca/comments", "author": null, "committer": null, "parents": [{"sha": "c6d582b33acb05b0bca8432a464b3ee2af486700", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6d582b33acb05b0bca8432a464b3ee2af486700", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6d582b33acb05b0bca8432a464b3ee2af486700"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "d62c86ed3e592196a25874b33301a4802e5771ee", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afe60c51edec54d90be85ae181710141320587ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afe60c51edec54d90be85ae181710141320587ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=afe60c51edec54d90be85ae181710141320587ca", "patch": "@@ -1,3 +1,7 @@\n+1999-08-13  Michael Meissner  <meissner@cygnus.com>\n+\n+\t* Makefile.in (GCC_FOR_TARGET): Move -B./ after the tooldir -B.\n+\n Fri Aug 13 01:29:57 1999  Alexandre Oliva  <oliva@dcc.unicamp.br>\n \n \t* dwarfout.c (fundamental_type_code): Return FT_boolean for"}, {"sha": "a6cbb43ddd01513e3a062f81c52c81d02f16347f", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afe60c51edec54d90be85ae181710141320587ca/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afe60c51edec54d90be85ae181710141320587ca/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=afe60c51edec54d90be85ae181710141320587ca", "patch": "@@ -166,7 +166,7 @@ INSTALL_ASSERT_H = install-assert-h\n # The GCC to use for compiling libgcc2.a, enquire, and libgcc1-test.\n # Usually the one we just built.\n # Don't use this as a dependency--use $(GCC_PASSES) or $(GCC_PARTS).\n-GCC_FOR_TARGET = ./xgcc -B./ -B$(build_tooldir)/bin/ -I$(build_tooldir)/include\n+GCC_FOR_TARGET = ./xgcc -B$(build_tooldir)/bin/ -B./ -I$(build_tooldir)/include\n \n # This is used instead of ALL_CFLAGS when compiling with GCC_FOR_TARGET.\n # It omits XCFLAGS, and specifies -B./.\n@@ -533,7 +533,7 @@ all: all.indirect\n all.indirect: $(ALL)\n \n # IN_GCC tells various files that system.h, toplev.c, etc are available.\n-INTERNAL_CFLAGS = $(CROSS) -DIN_GCC $(SCHED_CFLAGS) @extra_c_flags@\n+INTERNAL_CFLAGS = $(CROSS) -DIN_GCC @extra_c_flags@\n \n # This is the variable actually used when we compile.\n # If you change this line, you probably also need to change the definition\n@@ -657,17 +657,14 @@ C_AND_OBJC_OBJS = c-lex.o c-pragma.o c-decl.o c-typeck.o c-convert.o \\\n # Language-specific object files for C.\n C_OBJS = c-parse.o c-lang.o $(C_AND_OBJC_OBJS)\n \n-SCHED_PREFIX = @sched_prefix@\n-SCHED_CFLAGS = @sched_cflags@\n-\n # Language-independent object files.\n OBJS = toplev.o version.o tree.o print-tree.o stor-layout.o fold-const.o \\\n  function.o stmt.o except.o expr.o calls.o expmed.o explow.o optabs.o real.o \\\n  builtins.o intl.o varasm.o rtl.o print-rtl.o rtlanal.o emit-rtl.o genrtl.o \\\n  dbxout.o sdbout.o dwarfout.o dwarf2out.o xcoffout.o bitmap.o alias.o gcse.o \\\n  integrate.o jump.o cse.o loop.o unroll.o flow.o stupid.o combine.o varray.o \\\n  regclass.o regmove.o local-alloc.o global.o reload.o reload1.o caller-save.o \\\n- insn-peep.o reorg.o $(SCHED_PREFIX)sched.o final.o recog.o reg-stack.o \\\n+ insn-peep.o reorg.o haifa-sched.o final.o recog.o reg-stack.o \\\n  insn-opinit.o insn-recog.o insn-extract.o insn-output.o insn-emit.o lcm.o \\\n  profile.o insn-attrtab.o $(out_object_file) getpwd.o $(EXTRA_OBJS) convert.o \\\n  mbchar.o dyn-string.o splay-tree.o graph.o sbitmap.o resource.o hash.o\n@@ -1569,7 +1566,7 @@ alias.o : alias.c $(CONFIG_H) system.h $(RTL_H) flags.h hard-reg-set.h \\\n regmove.o : regmove.c $(CONFIG_H) system.h $(RTL_H) insn-config.h \\\n    $(RECOG_H) output.h reload.h $(REGS_H) hard-reg-set.h flags.h function.h \\\n    $(EXPR_H) insn-flags.h $(BASIC_BLOCK_H) toplev.h\n-$(SCHED_PREFIX)sched.o : $(SCHED_PREFIX)sched.c $(CONFIG_H) system.h $(RTL_H) \\\n+haifa-sched.o : haifa-sched.c $(CONFIG_H) system.h $(RTL_H) \\\n    $(BASIC_BLOCK_H) $(REGS_H) hard-reg-set.h flags.h insn-config.h function.h \\\n    insn-attr.h toplev.h recog.h\n final.o : final.c $(CONFIG_H) system.h $(RTL_H) $(TREE_H) flags.h intl.h \\"}]}