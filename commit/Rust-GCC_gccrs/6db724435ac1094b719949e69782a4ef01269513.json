{"sha": "6db724435ac1094b719949e69782a4ef01269513", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRiNzI0NDM1YWMxMDk0YjcxOTk0OWU2OTc4MmE0ZWYwMTI2OTUxMw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2018-01-26T22:51:02Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2018-01-26T22:51:02Z"}, "message": "Regenerate .pot files.\n\ngcc/po:\n\t* gcc.pot: Regenerate.\n\nlibcpp/po:\n\t* cpplib.pot: Regenerate.\n\nFrom-SVN: r257111", "tree": {"sha": "d3e415ac89304cfe2d99923435026f240304ca72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3e415ac89304cfe2d99923435026f240304ca72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6db724435ac1094b719949e69782a4ef01269513", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6db724435ac1094b719949e69782a4ef01269513", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6db724435ac1094b719949e69782a4ef01269513", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6db724435ac1094b719949e69782a4ef01269513/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee61fae2b1e8315f016384ab5b76dee796d880cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee61fae2b1e8315f016384ab5b76dee796d880cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee61fae2b1e8315f016384ab5b76dee796d880cd"}], "stats": {"total": 25775, "additions": 13669, "deletions": 12106}, "files": [{"sha": "56d6c0f39ae8c0c015f0d41ac35d96f7b849358c", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db724435ac1094b719949e69782a4ef01269513/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db724435ac1094b719949e69782a4ef01269513/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=6db724435ac1094b719949e69782a4ef01269513", "patch": "@@ -1,3 +1,7 @@\n+2018-01-26  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.pot: Regenerate.\n+\n 2018-01-22  Joseph Myers  <joseph@codesourcery.com>\n \n \t* es.po: Update."}, {"sha": "7109e253c486bc8b7bd5e3d8dab7ea56fc049bc1", "filename": "gcc/po/gcc.pot", "status": "modified", "additions": 13529, "deletions": 11986, "changes": 25515, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db724435ac1094b719949e69782a4ef01269513/gcc%2Fpo%2Fgcc.pot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db724435ac1094b719949e69782a4ef01269513/gcc%2Fpo%2Fgcc.pot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2Fgcc.pot?ref=6db724435ac1094b719949e69782a4ef01269513"}, {"sha": "342fe08849b70acb90ea15776eca2abbaa99a190", "filename": "libcpp/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db724435ac1094b719949e69782a4ef01269513/libcpp%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db724435ac1094b719949e69782a4ef01269513/libcpp%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2FChangeLog?ref=6db724435ac1094b719949e69782a4ef01269513", "patch": "@@ -1,3 +1,7 @@\n+2018-01-26  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* cpplib.pot: Regenerate.\n+\n 2017-08-04  Joseph Myers  <joseph@codesourcery.com>\n \n \t* cpplib.pot: Regenerate."}, {"sha": "3c09d173103fc016cfec83114b37343e34b2ca55", "filename": "libcpp/po/cpplib.pot", "status": "modified", "additions": 132, "deletions": 120, "changes": 252, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6db724435ac1094b719949e69782a4ef01269513/libcpp%2Fpo%2Fcpplib.pot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6db724435ac1094b719949e69782a4ef01269513/libcpp%2Fpo%2Fcpplib.pot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2Fcpplib.pot?ref=6db724435ac1094b719949e69782a4ef01269513", "patch": "@@ -8,7 +8,7 @@ msgid \"\"\n msgstr \"\"\n \"Project-Id-Version: PACKAGE VERSION\\n\"\n \"Report-Msgid-Bugs-To: https://gcc.gnu.org/bugs/\\n\"\n-\"POT-Creation-Date: 2017-08-04 22:19+0000\\n\"\n+\"POT-Creation-Date: 2018-01-26 22:47+0000\\n\"\n \"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n\"\n \"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n\"\n \"Language-Team: LANGUAGE <LL@li.org>\\n\"\n@@ -428,189 +428,189 @@ msgid \"unterminated #%s\"\n msgstr \"\"\n \n #: directives-only.c:221\n-#: lex.c:2819\n+#: lex.c:2851\n #: traditional.c:167\n msgid \"unterminated comment\"\n msgstr \"\"\n \n-#: errors.c:300\n+#: errors.c:284\n #, c-format\n msgid \"%s: %s\"\n msgstr \"\"\n \n-#: errors.c:312\n+#: errors.c:296\n msgid \"stdout\"\n msgstr \"\"\n \n-#: expr.c:601\n-#: expr.c:718\n+#: expr.c:628\n+#: expr.c:745\n msgid \"fixed-point constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:626\n+#: expr.c:653\n msgid \"invalid prefix \\\"0b\\\" for floating constant\"\n msgstr \"\"\n \n-#: expr.c:639\n-msgid \"use of C++1z hexadecimal floating constant\"\n+#: expr.c:666\n+msgid \"use of C++17 hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:642\n+#: expr.c:669\n msgid \"use of C99 hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:686\n+#: expr.c:713\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" on floating constant\"\n msgstr \"\"\n \n-#: expr.c:697\n-#: expr.c:757\n+#: expr.c:724\n+#: expr.c:784\n #, c-format\n msgid \"traditional C rejects the \\\"%.*s\\\" suffix\"\n msgstr \"\"\n \n-#: expr.c:705\n+#: expr.c:732\n msgid \"suffix for double constant is a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:711\n+#: expr.c:738\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" with hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:722\n+#: expr.c:749\n msgid \"decimal float constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:740\n+#: expr.c:767\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" on integer constant\"\n msgstr \"\"\n \n-#: expr.c:765\n+#: expr.c:792\n msgid \"use of C++11 long long integer constant\"\n msgstr \"\"\n \n-#: expr.c:766\n+#: expr.c:793\n msgid \"use of C99 long long integer constant\"\n msgstr \"\"\n \n-#: expr.c:782\n+#: expr.c:809\n msgid \"imaginary constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:788\n+#: expr.c:815\n msgid \"binary constants are a C++14 feature or GCC extension\"\n msgstr \"\"\n \n-#: expr.c:790\n+#: expr.c:817\n msgid \"binary constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:885\n+#: expr.c:912\n msgid \"integer constant is too large for its type\"\n msgstr \"\"\n \n-#: expr.c:916\n+#: expr.c:943\n msgid \"integer constant is so large that it is unsigned\"\n msgstr \"\"\n \n-#: expr.c:1011\n+#: expr.c:1038\n msgid \"missing ')' after \\\"defined\\\"\"\n msgstr \"\"\n \n-#: expr.c:1018\n+#: expr.c:1045\n msgid \"operator \\\"defined\\\" requires an identifier\"\n msgstr \"\"\n \n-#: expr.c:1026\n+#: expr.c:1053\n #, c-format\n msgid \"(\\\"%s\\\" is an alternative token for \\\"%s\\\" in C++)\"\n msgstr \"\"\n \n-#: expr.c:1038\n+#: expr.c:1065\n msgid \"this use of \\\"defined\\\" may not be portable\"\n msgstr \"\"\n \n-#: expr.c:1098\n+#: expr.c:1125\n msgid \"user-defined literal in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1103\n+#: expr.c:1130\n msgid \"floating constant in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1109\n+#: expr.c:1136\n msgid \"imaginary number in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1162\n+#: expr.c:1189\n #, c-format\n msgid \"\\\"%s\\\" is not defined, evaluates to 0\"\n msgstr \"\"\n \n-#: expr.c:1175\n+#: expr.c:1202\n msgid \"assertions are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:1178\n+#: expr.c:1205\n msgid \"assertions are a deprecated extension\"\n msgstr \"\"\n \n-#: expr.c:1424\n+#: expr.c:1451\n #, c-format\n msgid \"unbalanced stack in %s\"\n msgstr \"\"\n \n-#: expr.c:1444\n+#: expr.c:1471\n #, c-format\n msgid \"impossible operator '%u'\"\n msgstr \"\"\n \n-#: expr.c:1545\n+#: expr.c:1572\n msgid \"missing ')' in expression\"\n msgstr \"\"\n \n-#: expr.c:1574\n+#: expr.c:1601\n msgid \"'?' without following ':'\"\n msgstr \"\"\n \n-#: expr.c:1584\n+#: expr.c:1611\n msgid \"integer overflow in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1589\n+#: expr.c:1616\n msgid \"missing '(' in expression\"\n msgstr \"\"\n \n-#: expr.c:1621\n+#: expr.c:1648\n #, c-format\n msgid \"the left operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.c:1626\n+#: expr.c:1653\n #, c-format\n msgid \"the right operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.c:1885\n+#: expr.c:1912\n msgid \"traditional C rejects the unary plus operator\"\n msgstr \"\"\n \n-#: expr.c:1983\n+#: expr.c:2010\n msgid \"comma operator in operand of #if\"\n msgstr \"\"\n \n-#: expr.c:2119\n+#: expr.c:2146\n msgid \"division by zero in #if\"\n msgstr \"\"\n \n-#: expr.c:2216\n+#: expr.c:2243\n msgid \"operator \\\"__has_include__\\\" requires a header string\"\n msgstr \"\"\n \n-#: expr.c:2232\n+#: expr.c:2259\n msgid \"missing ')' after \\\"__has_include__\\\"\"\n msgstr \"\"\n \n@@ -631,38 +631,38 @@ msgstr \"\"\n msgid \"Multiple include guards may be useful for:\\n\"\n msgstr \"\"\n \n-#: init.c:553\n+#: init.c:565\n msgid \"cppchar_t must be an unsigned type\"\n msgstr \"\"\n \n-#: init.c:557\n+#: init.c:569\n #, c-format\n msgid \"\"\n \"preprocessor arithmetic has maximum precision of %lu bits; target requires \"\n \"%lu bits\"\n msgstr \"\"\n \n-#: init.c:564\n+#: init.c:576\n msgid \"CPP arithmetic must be at least as precise as a target int\"\n msgstr \"\"\n \n-#: init.c:567\n+#: init.c:579\n msgid \"target char is less than 8 bits wide\"\n msgstr \"\"\n \n-#: init.c:571\n+#: init.c:583\n msgid \"target wchar_t is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:575\n+#: init.c:587\n msgid \"target int is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:580\n+#: init.c:592\n msgid \"CPP half-integer narrower than CPP character\"\n msgstr \"\"\n \n-#: init.c:584\n+#: init.c:596\n #, c-format\n msgid \"\"\n \"CPP on this host cannot handle wide character constants over %lu bits, but \"\n@@ -710,247 +710,259 @@ msgstr \"\"\n msgid \"`%.*s' is not in NFC\"\n msgstr \"\"\n \n-#: lex.c:1381\n-#: lex.c:1470\n+#: lex.c:1365\n+msgid \"__VA_OPT__ is not available until C++2a\"\n+msgstr \"\"\n+\n+#: lex.c:1372\n+msgid \"__VA_OPT__ can only appear in the expansion of a C++2a variadic macro\"\n+msgstr \"\"\n+\n+#: lex.c:1403\n+#: lex.c:1495\n #, c-format\n msgid \"attempt to use poisoned \\\"%s\\\"\"\n msgstr \"\"\n \n-#: lex.c:1391\n-#: lex.c:1480\n+#: lex.c:1413\n+#: lex.c:1505\n msgid \"__VA_ARGS__ can only appear in the expansion of a C++11 variadic macro\"\n msgstr \"\"\n \n-#: lex.c:1395\n-#: lex.c:1484\n+#: lex.c:1417\n+#: lex.c:1509\n msgid \"__VA_ARGS__ can only appear in the expansion of a C99 variadic macro\"\n msgstr \"\"\n \n-#: lex.c:1402\n-#: lex.c:1491\n+#: lex.c:1427\n+#: lex.c:1521\n #, c-format\n msgid \"identifier \\\"%s\\\" is a special operator name in C++\"\n msgstr \"\"\n \n-#: lex.c:1781\n+#: lex.c:1811\n msgid \"raw string delimiter longer than 16 characters\"\n msgstr \"\"\n \n-#: lex.c:1785\n+#: lex.c:1815\n msgid \"invalid new-line in raw string delimiter\"\n msgstr \"\"\n \n-#: lex.c:1789\n+#: lex.c:1819\n #, c-format\n msgid \"invalid character '%c' in raw string delimiter\"\n msgstr \"\"\n \n-#: lex.c:1838\n-#: lex.c:1860\n+#: lex.c:1868\n+#: lex.c:1890\n msgid \"unterminated raw string\"\n msgstr \"\"\n \n-#: lex.c:1881\n-#: lex.c:2011\n+#: lex.c:1912\n+#: lex.c:2043\n msgid \"\"\n \"invalid suffix on literal; C++11 requires a space between literal and string \"\n \"macro\"\n msgstr \"\"\n \n-#: lex.c:1993\n+#: lex.c:2024\n msgid \"null character(s) preserved in literal\"\n msgstr \"\"\n \n-#: lex.c:1996\n+#: lex.c:2027\n #, c-format\n msgid \"missing terminating %c character\"\n msgstr \"\"\n \n-#: lex.c:2029\n+#: lex.c:2061\n msgid \"C++11 requires a space between string literal and macro\"\n msgstr \"\"\n \n-#: lex.c:2833\n-#: lex.c:2867\n+#: lex.c:2865\n+#: lex.c:2899\n msgid \"C++ style comments are not allowed in ISO C90\"\n msgstr \"\"\n \n-#: lex.c:2835\n-#: lex.c:2846\n-#: lex.c:2869\n+#: lex.c:2867\n+#: lex.c:2878\n+#: lex.c:2901\n msgid \"(this will be reported only once per input file)\"\n msgstr \"\"\n \n-#: lex.c:2844\n+#: lex.c:2876\n msgid \"C++ style comments are incompatible with C90\"\n msgstr \"\"\n \n-#: lex.c:2875\n+#: lex.c:2907\n msgid \"multi-line comment\"\n msgstr \"\"\n \n-#: lex.c:3255\n+#: lex.c:3287\n #, c-format\n msgid \"unspellable token %s\"\n msgstr \"\"\n \n-#: macro.c:203\n+#: macro.c:93\n+msgid \"'##' cannot appear at either end of __VA_OPT__\"\n+msgstr \"\"\n+\n+#: macro.c:352\n #, c-format\n msgid \"macro \\\"%s\\\" is not used\"\n msgstr \"\"\n \n-#: macro.c:242\n-#: macro.c:488\n+#: macro.c:391\n+#: macro.c:639\n #, c-format\n msgid \"invalid built-in macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:249\n-#: macro.c:349\n+#: macro.c:398\n+#: macro.c:500\n #, c-format\n msgid \"macro \\\"%s\\\" might prevent reproducible builds\"\n msgstr \"\"\n \n-#: macro.c:280\n+#: macro.c:429\n msgid \"could not determine file timestamp\"\n msgstr \"\"\n \n-#: macro.c:395\n+#: macro.c:546\n msgid \"could not determine date and time\"\n msgstr \"\"\n \n-#: macro.c:411\n+#: macro.c:562\n msgid \"__COUNTER__ expanded inside directive with -fdirectives-only\"\n msgstr \"\"\n \n-#: macro.c:599\n+#: macro.c:758\n msgid \"invalid string literal, ignoring final '\\\\'\"\n msgstr \"\"\n \n-#: macro.c:661\n+#: macro.c:820\n #, c-format\n msgid \"pasting \\\"%s\\\" and \\\"%s\\\" does not give a valid preprocessing token\"\n msgstr \"\"\n \n-#: macro.c:785\n+#: macro.c:946\n msgid \"\"\n \"ISO C++11 requires at least one argument for the \\\"...\\\" in a variadic macro\"\n msgstr \"\"\n \n-#: macro.c:789\n+#: macro.c:950\n msgid \"\"\n \"ISO C99 requires at least one argument for the \\\"...\\\" in a variadic macro\"\n msgstr \"\"\n \n-#: macro.c:796\n+#: macro.c:957\n #, c-format\n msgid \"macro \\\"%s\\\" requires %u arguments, but only %u given\"\n msgstr \"\"\n \n-#: macro.c:801\n+#: macro.c:962\n #, c-format\n msgid \"macro \\\"%s\\\" passed %u arguments, but takes just %u\"\n msgstr \"\"\n \n-#: macro.c:995\n+#: macro.c:1156\n #: traditional.c:819\n #, c-format\n msgid \"unterminated argument list invoking macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:1146\n+#: macro.c:1307\n #, c-format\n msgid \"function-like macro \\\"%s\\\" must be used with arguments in traditional C\"\n msgstr \"\"\n \n-#: macro.c:1836\n+#: macro.c:2003\n #, c-format\n msgid \"\"\n \"invoking macro %s argument %d: empty macro arguments are undefined in ISO C+\"\n \"+98\"\n msgstr \"\"\n \n-#: macro.c:1844\n-#: macro.c:1853\n+#: macro.c:2011\n+#: macro.c:2020\n #, c-format\n msgid \"\"\n \"invoking macro %s argument %d: empty macro arguments are undefined in ISO C90\"\n msgstr \"\"\n \n-#: macro.c:2817\n+#: macro.c:2984\n #, c-format\n msgid \"duplicate macro parameter \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:2866\n+#: macro.c:3033\n #, c-format\n msgid \"\\\"%s\\\" may not appear in macro parameter list\"\n msgstr \"\"\n \n-#: macro.c:2874\n+#: macro.c:3041\n msgid \"macro parameters must be comma-separated\"\n msgstr \"\"\n \n-#: macro.c:2893\n+#: macro.c:3060\n msgid \"parameter name missing\"\n msgstr \"\"\n \n-#: macro.c:2914\n+#: macro.c:3081\n msgid \"anonymous variadic macros were introduced in C++11\"\n msgstr \"\"\n \n-#: macro.c:2918\n-#: macro.c:2923\n+#: macro.c:3085\n+#: macro.c:3090\n msgid \"anonymous variadic macros were introduced in C99\"\n msgstr \"\"\n \n-#: macro.c:2930\n+#: macro.c:3097\n msgid \"ISO C++ does not permit named variadic macros\"\n msgstr \"\"\n \n-#: macro.c:2933\n+#: macro.c:3100\n msgid \"ISO C does not permit named variadic macros\"\n msgstr \"\"\n \n-#: macro.c:2943\n+#: macro.c:3110\n msgid \"missing ')' in macro parameter list\"\n msgstr \"\"\n \n-#: macro.c:2994\n+#: macro.c:3161\n msgid \"'##' cannot appear at either end of a macro expansion\"\n msgstr \"\"\n \n-#: macro.c:3031\n+#: macro.c:3198\n msgid \"ISO C++11 requires whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:3034\n+#: macro.c:3201\n msgid \"ISO C99 requires whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:3059\n+#: macro.c:3226\n msgid \"missing whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:3093\n+#: macro.c:3263\n msgid \"'#' is not followed by a macro parameter\"\n msgstr \"\"\n \n-#: macro.c:3254\n+#: macro.c:3430\n #, c-format\n msgid \"\\\"%s\\\" redefined\"\n msgstr \"\"\n \n-#: macro.c:3259\n+#: macro.c:3435\n msgid \"this is the location of the previous definition\"\n msgstr \"\"\n \n-#: macro.c:3320\n+#: macro.c:3496\n #, c-format\n msgid \"macro argument \\\"%s\\\" would be stringified in traditional C\"\n msgstr \"\"\n \n-#: macro.c:3356\n+#: macro.c:3532\n #, c-format\n msgid \"invalid hash type %d in cpp_macro_definition\"\n msgstr \"\"\n@@ -991,7 +1003,7 @@ msgid \"%s: not used because `__COUNTER__' is invalid\"\n msgstr \"\"\n \n #: pch.c:725\n-#: pch.c:902\n+#: pch.c:903\n msgid \"while reading precompiled header\"\n msgstr \"\"\n "}]}