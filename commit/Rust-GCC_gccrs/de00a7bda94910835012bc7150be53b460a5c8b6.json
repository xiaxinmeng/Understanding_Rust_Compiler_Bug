{"sha": "de00a7bda94910835012bc7150be53b460a5c8b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUwMGE3YmRhOTQ5MTA4MzUwMTJiYzcxNTBiZTUzYjQ2MGE1YzhiNg==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-03-25T13:57:37Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-03-25T13:57:37Z"}, "message": "Revert \"x86: Skip ISA check for always_inline in system headers\"\n\nThis reverts commit 72982851d70dfbc547d83ed2bb45356b9ebe3ff0.", "tree": {"sha": "519c37d529eb8ad2ede847f20ec3b6aaa5d11eda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/519c37d529eb8ad2ede847f20ec3b6aaa5d11eda"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de00a7bda94910835012bc7150be53b460a5c8b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de00a7bda94910835012bc7150be53b460a5c8b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de00a7bda94910835012bc7150be53b460a5c8b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de00a7bda94910835012bc7150be53b460a5c8b6/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c1e856bedb4ae190c420ec2d2ca5e08730cf21d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c1e856bedb4ae190c420ec2d2ca5e08730cf21d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c1e856bedb4ae190c420ec2d2ca5e08730cf21d"}], "stats": {"total": 66, "additions": 8, "deletions": 58}, "files": [{"sha": "7c41302c75b5a1905dec71d7153fa80a84008519", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 8, "deletions": 16, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de00a7bda94910835012bc7150be53b460a5c8b6/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de00a7bda94910835012bc7150be53b460a5c8b6/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=de00a7bda94910835012bc7150be53b460a5c8b6", "patch": "@@ -578,29 +578,21 @@ ix86_can_inline_p (tree caller, tree callee)\n        && lookup_attribute (\"always_inline\",\n \t\t\t    DECL_ATTRIBUTES (callee)));\n \n-  /* NB: Skip ISA check for always_inline in system headers if caller\n-     has target attribute.  */\n-  bool skip_isa_check = (always_inline\n-\t\t\t && caller_tree != target_option_default_node\n-\t\t\t && DECL_IN_SYSTEM_HEADER (callee));\n-\n   cgraph_node *callee_node = cgraph_node::get (callee);\n   /* Callee's isa options should be a subset of the caller's, i.e. a SSE4\n      function can inline a SSE2 function but a SSE2 function can't inline\n      a SSE4 function.  */\n-  if (!skip_isa_check\n-      && (((caller_opts->x_ix86_isa_flags & callee_opts->x_ix86_isa_flags)\n-\t   != callee_opts->x_ix86_isa_flags)\n-\t  || ((caller_opts->x_ix86_isa_flags2 & callee_opts->x_ix86_isa_flags2)\n-\t      != callee_opts->x_ix86_isa_flags2)))\n+  if (((caller_opts->x_ix86_isa_flags & callee_opts->x_ix86_isa_flags)\n+       != callee_opts->x_ix86_isa_flags)\n+      || ((caller_opts->x_ix86_isa_flags2 & callee_opts->x_ix86_isa_flags2)\n+\t  != callee_opts->x_ix86_isa_flags2))\n     ret = false;\n \n   /* See if we have the same non-isa options.  */\n-  else if (!skip_isa_check\n-\t   && ((!always_inline\n-\t\t&& caller_opts->x_target_flags != callee_opts->x_target_flags)\n-\t       || ((caller_opts->x_target_flags & ~always_inline_safe_mask)\n-\t\t   != (callee_opts->x_target_flags & ~always_inline_safe_mask))))\n+  else if ((!always_inline\n+\t    && caller_opts->x_target_flags != callee_opts->x_target_flags)\n+\t   || (caller_opts->x_target_flags & ~always_inline_safe_mask)\n+\t       != (callee_opts->x_target_flags & ~always_inline_safe_mask))\n     ret = false;\n \n   /* See if arch, tune, etc. are the same.  */"}, {"sha": "4566d4c7fc36513c6e955a37743aeb35395c2a51", "filename": "gcc/testsuite/gcc.target/i386/pr98209.c", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c1e856bedb4ae190c420ec2d2ca5e08730cf21d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98209.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c1e856bedb4ae190c420ec2d2ca5e08730cf21d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98209.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98209.c?ref=7c1e856bedb4ae190c420ec2d2ca5e08730cf21d", "patch": "@@ -1,13 +0,0 @@\n-/* { dg-do run { target *-*-linux* } } */\n-/* { dg-options \"-O2 -D_FORTIFY_SOURCE=2\" } */\n-\n-#include <stdio.h>\n-\n-extern int main(int argc, char** argv)\n-  __attribute__ ((__target__ (\"no-sse,no-mmx\")));\n-\n-int main(int argc, char** argv)\n-{\n-  printf (\"hello!\\n\");\n-  return 0;\n-}"}, {"sha": "92535923a56bb850f1b3dd69af8dda36bf206891", "filename": "gcc/testsuite/gcc.target/i386/pr99744-1.c", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c1e856bedb4ae190c420ec2d2ca5e08730cf21d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr99744-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c1e856bedb4ae190c420ec2d2ca5e08730cf21d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr99744-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr99744-1.c?ref=7c1e856bedb4ae190c420ec2d2ca5e08730cf21d", "patch": "@@ -1,16 +0,0 @@\n-/* { dg-do compile } */\n-/* { dg-options \"-O0\" } */\n-\n-#include <x86intrin.h>\n-\n-extern unsigned long long int curr_deadline;\n-extern void bar (void);\n-\n-__attribute__ ((target(\"general-regs-only\")))\n-void\n-foo (void)\n-{\n-  if (__rdtsc () < curr_deadline)\n-    return; \n-  bar ();\n-}"}, {"sha": "4bb2a6bb6dc06922ba43d7c31ab29cb7c77e2c51", "filename": "gcc/testsuite/gcc.target/i386/pr99744-2.c", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c1e856bedb4ae190c420ec2d2ca5e08730cf21d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr99744-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c1e856bedb4ae190c420ec2d2ca5e08730cf21d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr99744-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr99744-2.c?ref=7c1e856bedb4ae190c420ec2d2ca5e08730cf21d", "patch": "@@ -1,13 +0,0 @@\n-/* { dg-do compile { target { ! ia32 } } } */\n-/* { dg-options \"-O2\" } */\n-\n-#include <x86intrin.h>\n-\n-extern __m128i x, y;\n-\n-__attribute__ ((target(\"general-regs-only\")))\n-void\n-foo (void)\n-{\n-  x = _mm_move_epi64 (y); /* { dg-error \"SSE register return with SSE disabled\" } */\n-}"}]}