{"sha": "ba045eb2297e8e51c7e99c2b2650f32cb642d209", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmEwNDVlYjIyOTdlOGU1MWM3ZTk5YzJiMjY1MGYzMmNiNjQyZDIwOQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2019-10-02T10:50:23Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2019-10-02T10:50:23Z"}, "message": "Improve OMP/ACC error diagnostic in Fortran\n\n\tgcc/fortran/\n\t* openmp.c (gfc_match_omp_clauses): Show a clause-parsing\n\terror if none was rised before.\n\t* parse.c (matcha, matcho): If error occurred after\n\tOpenMP/OpenACC directive matched, do not try other directives.\n\n\tgcc/testsuite/\n\t* gfortran.dg/goacc/asyncwait-1.f95: Handle new error message.\n\t* gfortran.dg/goacc/asyncwait-2.f95: Likewise\n\t* gfortran.dg/goacc/asyncwait-3.f95: Likewise\n\t* gfortran.dg/goacc/asyncwait-4.f95: Likewise\n\t* gfortran.dg/goacc/default-2.f: Likewise\n\t* gfortran.dg/goacc/enter-exit-data.f95: Likewise\n\t* gfortran.dg/goacc/if.f95: Likewise\n\t* gfortran.dg/goacc/list.f95: Likewise\n\t* gfortran.dg/goacc/literal.f95: Likewise\n\t* gfortran.dg/goacc/loop-2-kernels-tile.f: Likewise95\n\t* gfortran.dg/goacc/loop-2-parallel-tile.f95: Likewise\n\t* gfortran.dg/goacc/loop-7.f95: Likewise\n\t* gfortran.dg/goacc/parallel-kernels-cla: Likewiseuses.f95\n\t* gfortran.dg/goacc/routine-6.f90: Likewise\n\t* gfortran.dg/goacc/several-directives.f95: Likewise\n\t* gfortran.dg/goacc/sie.f95: Likewise\n\t* gfortran.dg/goacc/tile-1.f90: Likewise\n\t* gfortran.dg/goacc/update-if_present-2.: Likewisef90\n\t* gfortran.dg/gomp/declare-simd-1.f90: Likewise\n\t* gfortran.dg/gomp/pr29759.f90: Likewise\n\nFrom-SVN: r276447", "tree": {"sha": "d7f0ed7450b0af3f1045c81b3a743f450109c511", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d7f0ed7450b0af3f1045c81b3a743f450109c511"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba045eb2297e8e51c7e99c2b2650f32cb642d209", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba045eb2297e8e51c7e99c2b2650f32cb642d209", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba045eb2297e8e51c7e99c2b2650f32cb642d209", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba045eb2297e8e51c7e99c2b2650f32cb642d209/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4aef466788a964688458f4e633398b140ad89e24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4aef466788a964688458f4e633398b140ad89e24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4aef466788a964688458f4e633398b140ad89e24"}], "stats": {"total": 266, "additions": 155, "deletions": 111}, "files": [{"sha": "075f3b9df3be017d531e0a565e024afa97175ba7", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=ba045eb2297e8e51c7e99c2b2650f32cb642d209", "patch": "@@ -1,3 +1,10 @@\n+2019-10-02  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* openmp.c (gfc_match_omp_clauses): Show a clause-parsing\n+\terror if none was rised before.\n+\t* parse.c (matcha, matcho): If error occurred after\n+\tOpenMP/OpenACC directive matched, do not try other directives.\n+\n 2019-10-02  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* trans-openmp.c (gfc_omp_is_optional_argument): Fix coding"}, {"sha": "2beac3dc054c5f846d1eaa16e41586d62f1ec39c", "filename": "gcc/fortran/openmp.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ffortran%2Fopenmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ffortran%2Fopenmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fopenmp.c?ref=ba045eb2297e8e51c7e99c2b2650f32cb642d209", "patch": "@@ -1922,6 +1922,8 @@ gfc_match_omp_clauses (gfc_omp_clauses **cp, const omp_mask mask,\n \n   if (gfc_match_omp_eos () != MATCH_YES)\n     {\n+      if (!gfc_error_flag_test ())\n+\tgfc_error (\"Failed to match clause at %C\");\n       gfc_free_omp_clauses (c);\n       return MATCH_ERROR;\n     }"}, {"sha": "4d3434505559b4b6f3fef36fe7b8844f01a02a66", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=ba045eb2297e8e51c7e99c2b2650f32cb642d209", "patch": "@@ -609,13 +609,18 @@ decode_statement (void)\n \n /* Like match and if spec_only, goto do_spec_only without actually\n    matching.  */\n+/* If the directive matched but the clauses failed, do not start\n+   matching the next directive in the same switch statement. */\n #define matcha(keyword, subr, st)\t\t\t\t\\\n     do {\t\t\t\t\t\t\t\\\n+      match m2;\t\t\t\t\t\t\t\\\n       if (spec_only && gfc_match (keyword) == MATCH_YES)\t\\\n \tgoto do_spec_only;\t\t\t\t\t\\\n-      else if (match_word (keyword, subr, &old_locus)\t\t\\\n+      else if ((m2 = match_word (keyword, subr, &old_locus))\t\\\n \t       == MATCH_YES)\t\t\t\t\t\\\n \treturn st;\t\t\t\t\t\t\\\n+      else if (m2 == MATCH_ERROR)\t\t\t\t\\\n+\tgoto error_handling;\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\\\n \tundo_new_statement ();\t\t\t\t  \t\\\n     } while (0)\n@@ -711,6 +716,7 @@ decode_oacc_directive (void)\n   /* Directive not found or stored an error message.\n      Check and give up.  */\n \n+ error_handling:\n   if (gfc_error_check () == 0)\n     gfc_error_now (\"Unclassifiable OpenACC directive at %C\");\n \n@@ -746,18 +752,23 @@ decode_oacc_directive (void)\n \n /* Like match, but don't match anything if not -fopenmp\n    and if spec_only, goto do_spec_only without actually matching.  */\n+/* If the directive matched but the clauses failed, do not start\n+   matching the next directive in the same switch statement. */\n #define matcho(keyword, subr, st)\t\t\t\t\\\n     do {\t\t\t\t\t\t\t\\\n+      match m2;\t\t\t\t\t\t\t\\\n       if (!flag_openmp)\t\t\t\t\t\t\\\n \t;\t\t\t\t\t\t\t\\\n       else if (spec_only && gfc_match (keyword) == MATCH_YES)\t\\\n \tgoto do_spec_only;\t\t\t\t\t\\\n-      else if (match_word (keyword, subr, &old_locus)\t\t\\\n+      else if ((m2 = match_word (keyword, subr, &old_locus))\t\\\n \t       == MATCH_YES)\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\\\n \t  ret = st;\t\t\t\t\t\t\\\n \t  goto finish;\t\t\t\t\t\t\\\n \t}\t\t\t\t\t\t\t\\\n+      else if (m2 == MATCH_ERROR)\t\t\t\t\\\n+\tgoto error_handling;\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\\\n \tundo_new_statement ();\t\t\t\t  \t\\\n     } while (0)\n@@ -1030,6 +1041,7 @@ decode_omp_directive (void)\n      not -fopenmp and simd_matched is false, i.e. if a directive other\n      than one marked with match has been seen.  */\n \n+ error_handling:\n   if (flag_openmp || simd_matched)\n     {\n       if (!gfc_error_check ())"}, {"sha": "a5a1cf36df21b06347d17cc4bfda8e736851e301", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ba045eb2297e8e51c7e99c2b2650f32cb642d209", "patch": "@@ -1,3 +1,26 @@\n+2019-10-02  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* gfortran.dg/goacc/asyncwait-1.f95: Handle new error message.\n+\t* gfortran.dg/goacc/asyncwait-2.f95: Likewise.\n+\t* gfortran.dg/goacc/asyncwait-3.f95: Likewise.\n+\t* gfortran.dg/goacc/asyncwait-4.f95: Likewise.\n+\t* gfortran.dg/goacc/default-2.f: Likewise.\n+\t* gfortran.dg/goacc/enter-exit-data.f95: Likewise.\n+\t* gfortran.dg/goacc/if.f95: Likewise.\n+\t* gfortran.dg/goacc/list.f95: Likewise.\n+\t* gfortran.dg/goacc/literal.f95: Likewise.\n+\t* gfortran.dg/goacc/loop-2-kernels-tile.f95: Likewise.\n+\t* gfortran.dg/goacc/loop-2-parallel-tile.f95: Likewise.\n+\t* gfortran.dg/goacc/loop-7.f95: Likewise.\n+\t* gfortran.dg/goacc/parallel-kernels-clauses.f95: Likewise.\n+\t* gfortran.dg/goacc/routine-6.f90: Likewise.\n+\t* gfortran.dg/goacc/several-directives.f95: Likewise.\n+\t* gfortran.dg/goacc/sie.f95: Likewise.\n+\t* gfortran.dg/goacc/tile-1.f90: Likewise.\n+\t* gfortran.dg/goacc/update-if_present-2.f90: Likewise.\n+\t* gfortran.dg/gomp/declare-simd-1.f90: Likewise.\n+\t* gfortran.dg/gomp/pr29759.f90: Likewise.\n+\n 2019-10-02  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* libgomp/testsuite/libgomp.fortran/use_device_ptr-optional-1.f90: New."}, {"sha": "c8a72fabadd9b281f227b8b5a0313220408721af", "filename": "gcc/testsuite/gfortran.dg/goacc/asyncwait-1.f95", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fasyncwait-1.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fasyncwait-1.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fasyncwait-1.f95?ref=ba045eb2297e8e51c7e99c2b2650f32cb642d209", "patch": "@@ -11,13 +11,13 @@ program asyncwait\n   a(:) = 3.0\n   b(:) = 0.0\n \n-  !$acc parallel copyin (a(1:N)) copy (b(1:N)) async (1 2) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc parallel copyin (a(1:N)) copy (b(1:N)) async (1 2) ! { dg-error \"Failed to match clause\" }\n   do i = 1, N\n      b(i) = a(i)\n   end do\n   !$acc end parallel ! { dg-error \"Unexpected \\\\\\!\\\\\\$ACC END PARALLEL\" }\n \n-  !$acc parallel copyin (a(1:N)) copy (b(1:N)) async (1,) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc parallel copyin (a(1:N)) copy (b(1:N)) async (1,) ! { dg-error \"Failed to match clause\" }\n   do i = 1, N\n      b(i) = a(i)\n   end do\n@@ -29,25 +29,25 @@ program asyncwait\n   end do\n   !$acc end parallel ! { dg-error \"Unexpected \\\\\\!\\\\\\$ACC END PARALLEL\" }\n \n-  !$acc parallel copyin (a(1:N)) copy (b(1:N)) async (1,2,) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc parallel copyin (a(1:N)) copy (b(1:N)) async (1,2,) ! { dg-error \"Failed to match clause\" }\n   do i = 1, N\n      b(i) = a(i)\n   end do\n   !$acc end parallel ! { dg-error \"Unexpected \\\\\\!\\\\\\$ACC END PARALLEL\" }\n \n-  !$acc parallel copyin (a(1:N)) copy (b(1:N)) async (1,2 3) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc parallel copyin (a(1:N)) copy (b(1:N)) async (1,2 3) ! { dg-error \"Failed to match clause\" }\n   do i = 1, N\n      b(i) = a(i)\n   end do\n   !$acc end parallel ! { dg-error \"Unexpected \\\\\\!\\\\\\$ACC END PARALLEL\" }\n \n-  !$acc parallel copyin (a(1:N)) copy (b(1:N)) async (1,2,,) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc parallel copyin (a(1:N)) copy (b(1:N)) async (1,2,,) ! { dg-error \"Failed to match clause\" }\n   do i = 1, N\n      b(i) = a(i)\n   end do\n   !$acc end parallel ! { dg-error \"Unexpected \\\\\\!\\\\\\$ACC END PARALLEL\" }\n \n-  !$acc parallel copyin (a(1:N)) copy (b(1:N)) async (1  ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc parallel copyin (a(1:N)) copy (b(1:N)) async (1  ! { dg-error \"Failed to match clause\" }\n   do i = 1, N\n      b(i) = a(i)\n   end do"}, {"sha": "3663c9b2ffc7c0e1ea22dc41e54989f21bc9d827", "filename": "gcc/testsuite/gfortran.dg/goacc/asyncwait-2.f95", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fasyncwait-2.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fasyncwait-2.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fasyncwait-2.f95?ref=ba045eb2297e8e51c7e99c2b2650f32cb642d209", "patch": "@@ -83,13 +83,13 @@ program asyncwait\n   end do\n   !$acc end parallel ! { dg-error \"Unexpected \\\\\\!\\\\\\$ACC END PARALLEL\" }\n \n-  !$acc parallel copyin (a(1:N)) copy (b(1:N)) waitasync ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc parallel copyin (a(1:N)) copy (b(1:N)) waitasync ! { dg-error \"Failed to match clause\" }\n   do i = 1, N\n      b(i) = a(i)\n   end do\n   !$acc end parallel ! { dg-error \"Unexpected \\\\\\!\\\\\\$ACC END PARALLEL\" }\n \n-  !$acc parallel copyin (a(1:N)) copy (b(1:N)) asyncwait ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc parallel copyin (a(1:N)) copy (b(1:N)) asyncwait ! { dg-error \"Failed to match clause\" }\n   do i = 1, N\n      b(i) = a(i)\n   end do"}, {"sha": "815928a1bb75a28dfdd3466f405b4ebc5f2a028c", "filename": "gcc/testsuite/gfortran.dg/goacc/asyncwait-3.f95", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fasyncwait-3.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fasyncwait-3.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fasyncwait-3.f95?ref=ba045eb2297e8e51c7e99c2b2650f32cb642d209", "patch": "@@ -33,9 +33,9 @@ program asyncwait\n \n   !$acc wait (1.0) ! { dg-error \"WAIT clause at \\\\\\(1\\\\\\) requires a scalar INTEGER expression\" }\n \n-  !$acc wait 1 ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc wait 1 ! { dg-error \"Failed to match clause\" }\n \n-  !$acc wait N ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc wait N ! { dg-error \"Failed to match clause\" }\n \n   !$acc wait (1)\n end program asyncwait"}, {"sha": "057d06bbe78f81b3147216922f98facb7b7d5cdb", "filename": "gcc/testsuite/gfortran.dg/goacc/asyncwait-4.f95", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fasyncwait-4.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fasyncwait-4.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fasyncwait-4.f95?ref=ba045eb2297e8e51c7e99c2b2650f32cb642d209", "patch": "@@ -11,31 +11,31 @@ program asyncwait\n   a(:) = 3.0\n   b(:) = 0.0\n \n-  !$acc wait async (1 2) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc wait async (1 2) ! { dg-error \"Failed to match clause\" }\n \n-  !$acc wait async (1,) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc wait async (1,) ! { dg-error \"Failed to match clause\" }\n \n   !$acc wait async (,1) ! { dg-error \"Invalid character in name\" }\n \n-  !$acc wait async (1, 2, ) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc wait async (1, 2, ) ! { dg-error \"Failed to match clause\" }\n \n-  !$acc wait async (1, 2, ,) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc wait async (1, 2, ,) ! { dg-error \"Failed to match clause\" }\n \n-  !$acc wait async (1 ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc wait async (1 ! { dg-error \"Failed to match clause\" }\n \n-  !$acc wait async (1, *) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc wait async (1, *) ! { dg-error \"Failed to match clause\" }\n \n-  !$acc wait async (1, a) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc wait async (1, a) ! { dg-error \"Failed to match clause\" }\n \n   !$acc wait async (a) ! { dg-error \"ASYNC clause at \\\\\\(1\\\\\\) requires a scalar INTEGER expression\" }\n \n   !$acc wait async (N)\n \n   !$acc wait async (1.0) ! { dg-error \"ASYNC clause at \\\\\\(1\\\\\\) requires a scalar INTEGER expression\" }\n \n-  !$acc wait async 1 ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc wait async 1 ! { dg-error \"Failed to match clause\" }\n \n-  !$acc waitasync ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc waitasync ! { dg-error \"Failed to match clause\" }\n \n-  !$acc wait,async ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc wait,async ! { dg-error \"Failed to match clause\" }\n end program asyncwait"}, {"sha": "ea82388eae93c341c4631a391784a1a4a83c0532", "filename": "gcc/testsuite/gfortran.dg/goacc/default-2.f", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault-2.f?ref=ba045eb2297e8e51c7e99c2b2650f32cb642d209", "patch": "@@ -3,58 +3,58 @@\n       SUBROUTINE F1\n       IMPLICIT NONE\n \n-!$ACC KERNELS DEFAULT ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC KERNELS DEFAULT ! { dg-error \"Failed to match clause\" }\n !$ACC END KERNELS ! { dg-error \"Unexpected\" }\n-!$ACC PARALLEL DEFAULT ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC PARALLEL DEFAULT ! { dg-error \"Failed to match clause\" }\n !$ACC END PARALLEL ! { dg-error \"Unexpected\" }\n \n-!$ACC KERNELS DEFAULT ( ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC KERNELS DEFAULT ( ! { dg-error \"Failed to match clause\" }\n !$ACC END KERNELS ! { dg-error \"Unexpected\" }\n-!$ACC PARALLEL DEFAULT ( ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC PARALLEL DEFAULT ( ! { dg-error \"Failed to match clause\" }\n !$ACC END PARALLEL ! { dg-error \"Unexpected\" }\n \n-!$ACC KERNELS DEFAULT (, ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC KERNELS DEFAULT (, ! { dg-error \"Failed to match clause\" }\n !$ACC END KERNELS ! { dg-error \"Unexpected\" }\n-!$ACC PARALLEL DEFAULT (, ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC PARALLEL DEFAULT (, ! { dg-error \"Failed to match clause\" }\n !$ACC END PARALLEL ! { dg-error \"Unexpected\" }\n \n-!$ACC KERNELS DEFAULT () ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC KERNELS DEFAULT () ! { dg-error \"Failed to match clause\" }\n !$ACC END KERNELS ! { dg-error \"Unexpected\" }\n-!$ACC PARALLEL DEFAULT () ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC PARALLEL DEFAULT () ! { dg-error \"Failed to match clause\" }\n !$ACC END PARALLEL ! { dg-error \"Unexpected\" }\n \n-!$ACC KERNELS DEFAULT (,) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC KERNELS DEFAULT (,) ! { dg-error \"Failed to match clause\" }\n !$ACC END KERNELS ! { dg-error \"Unexpected\" }\n-!$ACC PARALLEL DEFAULT (,) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC PARALLEL DEFAULT (,) ! { dg-error \"Failed to match clause\" }\n !$ACC END PARALLEL ! { dg-error \"Unexpected\" }\n \n-!$ACC KERNELS DEFAULT (FIRSTPRIVATE) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC KERNELS DEFAULT (FIRSTPRIVATE) ! { dg-error \"Failed to match clause\" }\n !$ACC END KERNELS ! { dg-error \"Unexpected\" }\n-!$ACC PARALLEL DEFAULT (FIRSTPRIVATE) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC PARALLEL DEFAULT (FIRSTPRIVATE) ! { dg-error \"Failed to match clause\" }\n !$ACC END PARALLEL ! { dg-error \"Unexpected\" }\n \n-!$ACC KERNELS DEFAULT (PRIVATE) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC KERNELS DEFAULT (PRIVATE) ! { dg-error \"Failed to match clause\" }\n !$ACC END KERNELS ! { dg-error \"Unexpected\" }\n-!$ACC PARALLEL DEFAULT (PRIVATE) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC PARALLEL DEFAULT (PRIVATE) ! { dg-error \"Failed to match clause\" }\n !$ACC END PARALLEL ! { dg-error \"Unexpected\" }\n \n-!$ACC KERNELS DEFAULT (SHARED) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC KERNELS DEFAULT (SHARED) ! { dg-error \"Failed to match clause\" }\n !$ACC END KERNELS ! { dg-error \"Unexpected\" }\n-!$ACC PARALLEL DEFAULT (SHARED) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC PARALLEL DEFAULT (SHARED) ! { dg-error \"Failed to match clause\" }\n !$ACC END PARALLEL ! { dg-error \"Unexpected\" }\n \n-!$ACC KERNELS DEFAULT (NONE ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC KERNELS DEFAULT (NONE ! { dg-error \"Failed to match clause\" }\n !$ACC END KERNELS ! { dg-error \"Unexpected\" }\n-!$ACC PARALLEL DEFAULT (NONE ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC PARALLEL DEFAULT (NONE ! { dg-error \"Failed to match clause\" }\n !$ACC END PARALLEL ! { dg-error \"Unexpected\" }\n \n-!$ACC KERNELS DEFAULT (NONE NONE) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC KERNELS DEFAULT (NONE NONE) ! { dg-error \"Failed to match clause\" }\n !$ACC END KERNELS ! { dg-error \"Unexpected\" }\n-!$ACC PARALLEL DEFAULT (NONE NONE) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC PARALLEL DEFAULT (NONE NONE) ! { dg-error \"Failed to match clause\" }\n !$ACC END PARALLEL ! { dg-error \"Unexpected\" }\n \n-!$ACC KERNELS DEFAULT (NONE, NONE) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC KERNELS DEFAULT (NONE, NONE) ! { dg-error \"Failed to match clause\" }\n !$ACC END KERNELS ! { dg-error \"Unexpected\" }\n-!$ACC PARALLEL DEFAULT (NONE, NONE) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC PARALLEL DEFAULT (NONE, NONE) ! { dg-error \"Failed to match clause\" }\n !$ACC END PARALLEL ! { dg-error \"Unexpected\" }\n       END SUBROUTINE F1"}, {"sha": "a414df8d439a649794738fcef88b0731b1238dd0", "filename": "gcc/testsuite/gfortran.dg/goacc/enter-exit-data.f95", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fenter-exit-data.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fenter-exit-data.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fenter-exit-data.f95?ref=ba045eb2297e8e51c7e99c2b2650f32cb642d209", "patch": "@@ -28,7 +28,7 @@ subroutine foo (vi)\n   !$acc enter data\n   !$acc enter data if (.false.)\n   !$acc enter data if (l)\n-  !$acc enter data if (.false.) if (l) ! { dg-error \"Unclassifiable\" }\n+  !$acc enter data if (.false.) if (l) ! { dg-error \"Failed to match clause\" }\n   !$acc enter data if (i) ! { dg-error \"LOGICAL\" }\n   !$acc enter data if (1) ! { dg-error \"LOGICAL\" }\n   !$acc enter data if (a) ! { dg-error \"LOGICAL\" }\n@@ -63,7 +63,7 @@ subroutine foo (vi)\n   !$acc exit data\n   !$acc exit data if (.false.)\n   !$acc exit data if (l)\n-  !$acc exit data if (.false.) if (l) ! { dg-error \"Unclassifiable\" }\n+  !$acc exit data if (.false.) if (l) ! { dg-error \"Failed to match clause\" }\n   !$acc exit data if (i) ! { dg-error \"LOGICAL\" }\n   !$acc exit data if (1) ! { dg-error \"LOGICAL\" }\n   !$acc exit data if (a) ! { dg-error \"LOGICAL\" }"}, {"sha": "35e9cfee1347f18b66b2134af99c909f86e4171a", "filename": "gcc/testsuite/gfortran.dg/goacc/if.f95", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fif.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fif.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fif.f95?ref=ba045eb2297e8e51c7e99c2b2650f32cb642d209", "patch": "@@ -6,29 +6,29 @@ program test\n   logical :: x\n   integer :: i\n \n-  !$acc parallel if ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc parallel if ! { dg-error \"Failed to match clause\" }\n   !$acc parallel if () ! { dg-error \"Invalid character\" }\n   !$acc parallel if (i) ! { dg-error \"scalar LOGICAL expression\" }\n   !$acc end parallel \n   !$acc parallel if (1) ! { dg-error \"scalar LOGICAL expression\" }\n   !$acc end parallel \n   !$acc kernels if (i) ! { dg-error \"scalar LOGICAL expression\" }\n   !$acc end kernels \n-  !$acc kernels if ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc kernels if ! { dg-error \"Failed to match clause\" }\n   !$acc kernels if () ! { dg-error \"Invalid character\" }\n   !$acc kernels if (1) ! { dg-error \"scalar LOGICAL expression\" }\n   !$acc end kernels\n-  !$acc data if ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc data if ! { dg-error \"Failed to match clause\" }\n   !$acc data if () ! { dg-error \"Invalid character\" }\n   !$acc data if (i) ! { dg-error \"scalar LOGICAL expression\" }\n   !$acc end data \n   !$acc data if (1) ! { dg-error \"scalar LOGICAL expression\" }\n   !$acc end data \n \n   ! at most one if clause may appear\n-  !$acc parallel if (.false.) if (.false.) { dg-error \"Unclassifiable OpenACC directive\" }\n-  !$acc kernels if (.false.) if (.false.) { dg-error \"Unclassifiable OpenACC directive\" }\n-  !$acc data if (.false.) if (.false.) { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc parallel if (.false.) if (.false.) { dg-error \"Failed to match clause\" }\n+  !$acc kernels if (.false.) if (.false.) { dg-error \"Failed to match clause\" }\n+  !$acc data if (.false.) if (.false.) { dg-error \"Failed to match clause\" }\n \n   !$acc parallel if (x)\n   !$acc end parallel\n@@ -49,4 +49,4 @@ program test\n   !$acc data if (i.gt.1)\n   !$acc end data\n \n-end program test\n\\ No newline at end of file\n+end program test"}, {"sha": "d2f4c5e88be2624f99ce1006aad568dd45e595f0", "filename": "gcc/testsuite/gfortran.dg/goacc/list.f95", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Flist.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Flist.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Flist.f95?ref=ba045eb2297e8e51c7e99c2b2650f32cb642d209", "patch": "@@ -24,7 +24,7 @@ program test\n   !$acc parallel private (i) private (j)\n   !$acc end parallel\n \n-  !$acc parallel private ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc parallel private ! { dg-error \"Failed to match clause\" }\n \n   !$acc parallel private() ! { dg-error \"Syntax error\" }\n \n@@ -56,7 +56,7 @@ program test\n   !$acc parallel firstprivate (i) firstprivate (j)\n   !$acc end parallel\n \n-  !$acc parallel firstprivate ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc parallel firstprivate ! { dg-error \"Failed to match clause\" }\n \n   !$acc parallel firstprivate() ! { dg-error \"Syntax error\" }\n \n@@ -91,7 +91,7 @@ program test\n   !$acc host_data use_device (i) use_device (j) ! { dg-error \"neither a POINTER nor an array\" }\n   !$acc end host_data\n \n-  !$acc host_data use_device ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc host_data use_device ! { dg-error \"Failed to match clause\" }\n \n   !$acc host_data use_device() ! { dg-error \"Syntax error\" }\n "}, {"sha": "896749a46cb88c1b6b84b56270cffb846a9e62df", "filename": "gcc/testsuite/gfortran.dg/goacc/literal.f95", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fliteral.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fliteral.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fliteral.f95?ref=ba045eb2297e8e51c7e99c2b2650f32cb642d209", "patch": "@@ -10,7 +10,7 @@ subroutine oacc1\n     !$acc end data ! { dg-error \"Unexpected\" }\n     !$acc data deviceptr (10) ! { dg-error \"Syntax error\" }\n     !$acc end data ! { dg-error \"Unexpected\" }\n-    !$acc data private (10) ! { dg-error \"Unclassifiable\" }\n+    !$acc data private (10) ! { dg-error \"Failed to match clause\" }\n     !$acc end data ! { dg-error \"Unexpected\" }\n     !$acc host_data use_device (10) ! { dg-error \"Syntax error\" }\n     !$acc end host_data ! { dg-error \"Unexpected\" }"}, {"sha": "afc8a278cacd5f0c8960641ede5eb551eb02cf8f", "filename": "gcc/testsuite/gfortran.dg/goacc/loop-2-kernels-tile.f95", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-kernels-tile.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-kernels-tile.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-kernels-tile.f95?ref=ba045eb2297e8e51c7e99c2b2650f32cb642d209", "patch": "@@ -3,7 +3,7 @@ program test\n   integer :: i, j\n \n   !$acc kernels\n-    !$acc loop tile ! { dg-error \"Unclassifiable\" }\n+    !$acc loop tile ! { dg-error \"Failed to match clause\" }\n     DO i = 1,10\n     ENDDO\n     !$acc loop tile() ! { dg-error \"Syntax error\" }\n@@ -65,7 +65,7 @@ program test\n     ENDDO\n   !$acc end kernels\n \n-  !$acc kernels loop tile ! { dg-error \"Unclassifiable\" }\n+  !$acc kernels loop tile ! { dg-error \"Failed to match clause\" }\n   DO i = 1,10\n   ENDDO\n   !$acc kernels loop tile() ! { dg-error \"Syntax error\" }"}, {"sha": "4bfca748f75ebe7ed57b62ee1113a58057b08b52", "filename": "gcc/testsuite/gfortran.dg/goacc/loop-2-parallel-tile.f95", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-parallel-tile.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-parallel-tile.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-2-parallel-tile.f95?ref=ba045eb2297e8e51c7e99c2b2650f32cb642d209", "patch": "@@ -3,7 +3,7 @@ program test\n   integer :: i, j\n \n   !$acc parallel\n-    !$acc loop tile ! { dg-error \"Unclassifiable\" }\n+    !$acc loop tile ! { dg-error \"Failed to match clause\" }\n     DO i = 1,10\n     ENDDO\n     !$acc loop tile() ! { dg-error \"Syntax error\" }\n@@ -56,7 +56,7 @@ program test\n     ENDDO\n   !$acc end parallel\n \n-  !$acc parallel loop tile ! { dg-error \"Unclassifiable\" }\n+  !$acc parallel loop tile ! { dg-error \"Failed to match clause\" }\n   DO i = 1,10\n   ENDDO\n   !$acc parallel loop tile() ! { dg-error \"Syntax error\" }"}, {"sha": "37d50d3b82bd7e7fb6e049b5303220b8cbcfdbb9", "filename": "gcc/testsuite/gfortran.dg/goacc/loop-7.f95", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-7.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-7.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Floop-7.f95?ref=ba045eb2297e8e51c7e99c2b2650f32cb642d209", "patch": "@@ -30,13 +30,13 @@ program test\n     !$acc loop gang(num:num, static:1)\n     DO i = 1,10\n     ENDDO\n-    !$acc loop gang(static:*, num:5, static:5) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+    !$acc loop gang(static:*, num:5, static:5) ! { dg-error \"Failed to match clause\" }\n     DO i = 1,10\n     ENDDO\n-    !$acc loop gang(1, num:2, static:3) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+    !$acc loop gang(1, num:2, static:3) ! { dg-error \"Failed to match clause\" }\n     DO i = 1,10\n     ENDDO\n-    !$acc loop gang(num:num static:1) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+    !$acc loop gang(num:num static:1) ! { dg-error \"Failed to match clause\" }\n     DO i = 1,10\n     ENDDO\n     !$acc loop gang(num)\n@@ -45,7 +45,7 @@ program test\n     !$acc loop gang(num:num+1, static:1+num)\n     DO i = 1,10\n     ENDDO\n-    !$acc loop gang(length:num) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+    !$acc loop gang(length:num) ! { dg-error \"Failed to match clause\" }\n     DO i = 1,10\n     ENDDO\n \n@@ -58,19 +58,19 @@ program test\n     !$acc loop worker (num)\n     DO i = 1,10\n     ENDDO\n-    !$acc loop worker (static:num) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+    !$acc loop worker (static:num) ! { dg-error \"Failed to match clause\" }\n     DO i = 1,10\n     ENDDO\n     !$acc loop worker (num:,) ! { dg-error \"Invalid character\" }\n     DO i = 1,10\n     ENDDO\n-    !$acc loop worker (num:num:num) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+    !$acc loop worker (num:num:num) ! { dg-error \"Failed to match clause\" }\n     DO i = 1,10\n     ENDDO\n     !$acc loop worker (num:num*num)\n     DO i = 1,10\n     ENDDO\n-    !$acc loop worker (length:num*num) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+    !$acc loop worker (length:num*num) ! { dg-error \"Failed to match clause\" }\n     DO i = 1,10\n     ENDDO\n     !$acc loop worker (num:*) ! { dg-error \"Invalid character\" }\n@@ -89,13 +89,13 @@ program test\n     !$acc loop vector (length)\n     DO i = 1,10\n     ENDDO\n-    !$acc loop vrctor (static:num) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+    !$acc loop vrctor (static:num) ! { dg-error \"Failed to match clause\" }\n     DO i = 1,10\n     ENDDO\n     !$acc loop vector (length:,) ! { dg-error \"Invalid character\" }\n     DO i = 1,10\n     ENDDO\n-    !$acc loop vector (length:num:num) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+    !$acc loop vector (length:num:num) ! { dg-error \"Failed to match clause\" }\n     DO i = 1,10\n     ENDDO\n     !$acc loop vector (length:static*num)\n@@ -107,7 +107,7 @@ program test\n     !$acc loop vector (length:32)\n     DO i = 1,10\n     ENDDO\n-    !$acc loop vector (num:num*num) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+    !$acc loop vector (num:num*num) ! { dg-error \"Failed to match clause\" }\n     DO i = 1,10\n     ENDDO\n     !$acc loop vector (length:*) ! { dg-error \"Invalid character\" }"}, {"sha": "72ba147565b0b57b2aac33cefffe15560b5b159a", "filename": "gcc/testsuite/gfortran.dg/goacc/parallel-kernels-clauses.f95", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fparallel-kernels-clauses.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fparallel-kernels-clauses.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fparallel-kernels-clauses.f95?ref=ba045eb2297e8e51c7e99c2b2650f32cb642d209", "patch": "@@ -16,8 +16,8 @@ program test\n   !$acc parallel async(i)\n   !$acc end parallel\n \n-  !$acc kernels async(0, 1) { dg-error \"Unclassifiable\" }\n-  !$acc parallel async(0, 1) { dg-error \"Unclassifiable\" }\n+  !$acc kernels async(0, 1) { dg-error \"Failed to match clause\" }\n+  !$acc parallel async(0, 1) { dg-error \"Failed to match clause\" }\n \n   !$acc kernels async\n   !$acc end kernels\n@@ -37,11 +37,11 @@ program test\n   !$acc kernels async() { dg-error \"Invalid character\" }\n   !$acc parallel async() { dg-error \"Invalid character\" }\n \n-  !$acc kernels async(\"a\") { dg-error \"Unclassifiable\" }\n-  !$acc parallel async(\"a\") { dg-error \"Unclassifiable\" }\n+  !$acc kernels async(\"a\") { dg-error \"Failed to match clause\" }\n+  !$acc parallel async(\"a\") { dg-error \"Failed to match clause\" }\n \n-  !$acc kernels async(.true.) { dg-error \"Unclassifiable\" }\n-  !$acc parallel async(.true.) { dg-error \"Unclassifiable\" }\n+  !$acc kernels async(.true.) { dg-error \"Failed to match clause\" }\n+  !$acc parallel async(.true.) { dg-error \"Failed to match clause\" }\n \n   ! default(none)\n   !$acc kernels default(none)\n@@ -59,17 +59,17 @@ program test\n   !$acc parallel default ( none )\n   !$acc end parallel\n \n-  !$acc kernels default { dg-error \"Unclassifiable\" }\n-  !$acc parallel default { dg-error \"Unclassifiable\" }\n+  !$acc kernels default { dg-error \"Failed to match clause\" }\n+  !$acc parallel default { dg-error \"Failed to match clause\" }\n \n-  !$acc kernels default() { dg-error \"Unclassifiable\" }\n-  !$acc parallel default() { dg-error \"Unclassifiable\" }\n+  !$acc kernels default() { dg-error \"Failed to match clause\" }\n+  !$acc parallel default() { dg-error \"Failed to match clause\" }\n \n-  !$acc kernels default(i) { dg-error \"Unclassifiable\" }\n-  !$acc parallel default(i) { dg-error \"Unclassifiable\" }\n+  !$acc kernels default(i) { dg-error \"Failed to match clause\" }\n+  !$acc parallel default(i) { dg-error \"Failed to match clause\" }\n \n-  !$acc kernels default(1) { dg-error \"Unclassifiable\" }\n-  !$acc parallel default(1) { dg-error \"Unclassifiable\" }\n+  !$acc kernels default(1) { dg-error \"Failed to match clause\" }\n+  !$acc parallel default(1) { dg-error \"Failed to match clause\" }\n \n   ! Wait\n   !$acc kernels wait (l) ! { dg-error \"INTEGER\" }"}, {"sha": "f1e2aa3c3c3a15c862ff53c7eead55eda2229efb", "filename": "gcc/testsuite/gfortran.dg/goacc/routine-6.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Froutine-6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Froutine-6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Froutine-6.f90?ref=ba045eb2297e8e51c7e99c2b2650f32cb642d209", "patch": "@@ -108,7 +108,7 @@ subroutine subr4 (x)\n end subroutine subr4\n \n subroutine subr10 (x)\n-  !$acc routine (subr10) device ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc routine (subr10) device ! { dg-error \"Failed to match clause\" }\n   integer, intent(inout) :: x\n   if (x < 1) then\n      x = 1"}, {"sha": "e7610be69d9c53429ca35090447226d0f479cede", "filename": "gcc/testsuite/gfortran.dg/goacc/several-directives.f95", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fseveral-directives.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fseveral-directives.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fseveral-directives.f95?ref=ba045eb2297e8e51c7e99c2b2650f32cb642d209", "patch": "@@ -2,5 +2,5 @@\n \n program test\n   ! only one directive-name may appear in directive\n-  !$acc parallel kernels ! { dg-error \"Unclassifiable OpenACC directive\" }\n-end\n\\ No newline at end of file\n+  !$acc parallel kernels ! { dg-error \"Failed to match clause\" }\n+end"}, {"sha": "194a1daae5f5eb6990768283383e77c4f50f7dad", "filename": "gcc/testsuite/gfortran.dg/goacc/sie.f95", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fsie.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fsie.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fsie.f95?ref=ba045eb2297e8e51c7e99c2b2650f32cb642d209", "patch": "@@ -67,7 +67,7 @@ program test\n   !$acc end kernels\n \n \n-  !$acc parallel num_gangs ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc parallel num_gangs ! { dg-error \"Failed to match clause\" }\n \n   !$acc parallel num_gangs(3)\n   !$acc end parallel\n@@ -95,7 +95,7 @@ program test\n   !$acc parallel num_gangs(\"1\") ! { dg-error \"scalar INTEGER expression\" }\n   !$acc end parallel\n \n-  !$acc kernels num_gangs ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc kernels num_gangs ! { dg-error \"Failed to match clause\" }\n \n   !$acc kernels num_gangs(3)\n   !$acc end kernels\n@@ -124,7 +124,7 @@ program test\n   !$acc end kernels\n \n \n-  !$acc parallel num_workers ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc parallel num_workers ! { dg-error \"Failed to match clause\" }\n \n   !$acc parallel num_workers(3)\n   !$acc end parallel\n@@ -152,7 +152,7 @@ program test\n   !$acc parallel num_workers(\"1\") ! { dg-error \"scalar INTEGER expression\" }\n   !$acc end parallel\n \n-  !$acc kernels num_workers ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc kernels num_workers ! { dg-error \"Failed to match clause\" }\n \n   !$acc kernels num_workers(3)\n   !$acc end kernels\n@@ -181,7 +181,7 @@ program test\n   !$acc end kernels\n \n \n-  !$acc parallel vector_length ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc parallel vector_length ! { dg-error \"Failed to match clause\" }\n \n   !$acc parallel vector_length(3)\n   !$acc end parallel\n@@ -209,7 +209,7 @@ program test\n   !$acc parallel vector_length(\"1\") ! { dg-error \"scalar INTEGER expression\" }\n   !$acc end parallel\n \n-  !$acc kernels vector_length ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc kernels vector_length ! { dg-error \"Failed to match clause\" }\n \n   !$acc kernels vector_length(3)\n   !$acc end kernels"}, {"sha": "f609b127df987adc99048728ee119e7ee0b7043f", "filename": "gcc/testsuite/gfortran.dg/goacc/tile-1.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Ftile-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Ftile-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Ftile-1.f90?ref=ba045eb2297e8e51c7e99c2b2650f32cb642d209", "patch": "@@ -24,7 +24,7 @@ subroutine parloop\n      end do\n   end do \n \n-  !$acc parallel loop tile ! { dg-error \"Unclassifiable\" }\n+  !$acc parallel loop tile ! { dg-error \"Failed to match clause\" }\n   do i = 1, n\n   end do\n \n@@ -92,7 +92,7 @@ subroutine par\n   integer i, j, k\n \n   !$acc parallel\n-  !$acc loop tile ! { dg-error \"Unclassifiable\" }\n+  !$acc loop tile ! { dg-error \"Failed to match clause\" }\n   do i = 1, n\n   end do\n \n@@ -173,7 +173,7 @@ subroutine kern\n   integer i, j, k\n \n   !$acc kernels\n-  !$acc loop tile  ! { dg-error \"Unclassifiable\" }\n+  !$acc loop tile  ! { dg-error \"Failed to match clause\" }\n   do i = 1, n\n   end do\n \n@@ -275,7 +275,7 @@ subroutine kernsloop\n      end do\n   end do \n \n-  !$acc kernels loop tile ! { dg-error \"Unclassifiable\" }\n+  !$acc kernels loop tile ! { dg-error \"Failed to match clause\" }\n   do i = 1, n\n   end do\n "}, {"sha": "bf8b319a78ee370bc6f743bb59e997942557d896", "filename": "gcc/testsuite/gfortran.dg/goacc/update-if_present-2.f90", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fupdate-if_present-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fupdate-if_present-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fupdate-if_present-2.f90?ref=ba045eb2297e8e51c7e99c2b2650f32cb642d209", "patch": "@@ -2,7 +2,7 @@\n \n subroutine t1\n   implicit none\n-  !$acc routine gang if_present ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc routine gang if_present ! { dg-error \"Failed to match clause\" }\n   integer a, b, c(10)\n   real, allocatable :: x, y, z(:)\n \n@@ -12,18 +12,18 @@ subroutine t1\n \n   allocate (x, y, z(100))\n \n-  !$acc enter data copyin(a) if_present ! { dg-error \"Unclassifiable OpenACC directive\" }\n-  !$acc exit data copyout(a) if_present ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc enter data copyin(a) if_present ! { dg-error \"Failed to match clause\" }\n+  !$acc exit data copyout(a) if_present ! { dg-error \"Failed to match clause\" }\n \n-  !$acc data copy(a) if_present ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc data copy(a) if_present ! { dg-error \"Failed to match clause\" }\n   !$acc end data ! { dg-error \"Unexpected ..ACC END DATA statement\" }\n \n   !$acc declare link(a) if_present ! { dg-error \"Unexpected junk after\" }\n \n   !$acc init if_present ! { dg-error \"Unclassifiable OpenACC directive\" }\n   !$acc shutdown if_present ! { dg-error \"Unclassifiable OpenACC directive\" }\n   \n-  !$acc update self(a) device_type(nvidia) device(b) if_present ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc update self(a) device_type(nvidia) device(b) if_present ! { dg-error \"Failed to match clause\" }\n end subroutine t1\n \n subroutine t2\n@@ -35,17 +35,17 @@ subroutine t2\n   c(:) = -1\n \n   !$acc parallel\n-  !$acc loop if_present ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc loop if_present ! { dg-error \"Failed to match clause\" }\n   do b = 1, 10\n   end do\n   !$acc end parallel\n \n-  !$acc kernels loop if_present ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc kernels loop if_present ! { dg-error \"Failed to match clause\" }\n   do b = 1, 10\n   end do\n   !$acc end kernels loop ! { dg-error \"Unexpected ..ACC END KERNELS LOOP statement\" }\n \n-  !$acc parallel loop if_present ! { dg-error \"Unclassifiable OpenACC directive\" }\n+  !$acc parallel loop if_present ! { dg-error \"Failed to match clause\" }\n   do b = 1, 10\n   end do\n   !$acc end parallel loop   ! { dg-error \"Unexpected ..ACC END PARALLEL LOOP statement\" }"}, {"sha": "40169d38da4be8ca88027e237712b961a6e5f84f", "filename": "gcc/testsuite/gfortran.dg/gomp/declare-simd-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fdeclare-simd-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fdeclare-simd-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fdeclare-simd-1.f90?ref=ba045eb2297e8e51c7e99c2b2650f32cb642d209", "patch": "@@ -2,7 +2,7 @@\n \n subroutine fn1 (x)\n   integer :: x\n-!$omp declare simd (fn1) inbranch notinbranch uniform (x) ! { dg-error \"Unclassifiable OpenMP directive\" }\n+!$omp declare simd (fn1) inbranch notinbranch uniform (x) ! { dg-error \"Failed to match clause\" }\n end subroutine fn1\n subroutine fn2 (x)\n !$omp declare simd (fn100)\t! { dg-error \"should refer to containing procedure\" }"}, {"sha": "1b1f379522c095eb00bea86cda428d6714d1df25", "filename": "gcc/testsuite/gfortran.dg/gomp/pr29759.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr29759.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba045eb2297e8e51c7e99c2b2650f32cb642d209/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr29759.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgomp%2Fpr29759.f90?ref=ba045eb2297e8e51c7e99c2b2650f32cb642d209", "patch": "@@ -21,20 +21,20 @@ PROGRAM test_omp\n !$OMP END PARALLEL\n \n \n-!$OMP PARALLEL &\t\t! { dg-error \"Unclassifiable OpenMP\" }\n+!$OMP PARALLEL &\t\t! { dg-error \"Failed to match clause\" }\n !$    NUM_THREADS(2)\n !$OMP END PARALLEL\t\t! { dg-error \"Unexpected\" }\n \n-!$OMP PARALLEL &\t\t! { dg-error \"Unclassifiable OpenMP\" }\n+!$OMP PARALLEL &\t\t! { dg-error \"Failed to match clause\" }\n !$    & NUM_THREADS(2)\t\t! { dg-error \"Invalid character\" }\n !$OMP END PARALLEL\t\t! { dg-error \"Unexpected\" }\n \n-!$OMP PARALLEL &\t\t! { dg-error \"Unclassifiable OpenMP\" }\n+!$OMP PARALLEL &\t\t! { dg-error \"Failed to match clause\" }\n !\n !$    NUM_THREADS(2)\n !$OMP END PARALLEL\t\t! { dg-error \"Unexpected\" }\n \n-!$OMP PARALLEL &\t\t! { dg-error \"Unclassifiable OpenMP\" }\n+!$OMP PARALLEL &\t\t! { dg-error \"Failed to match clause\" }\n !\n !$    & NUM_THREADS(2)\t\t! { dg-error \"Invalid character\" }\n !$OMP END PARALLEL\t\t! { dg-error \"Unexpected\" }"}]}