{"sha": "c4077cc2a8c9ade9bd9b61804d756fcfc2cc9931", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQwNzdjYzJhOGM5YWRlOWJkOWI2MTgwNGQ3NTZmY2ZjMmNjOTkzMQ==", "commit": {"author": {"name": "CohenArthur", "email": "arthur.cohen@epita.fr", "date": "2021-08-03T14:25:12Z"}, "committer": {"name": "CohenArthur", "email": "arthur.cohen@epita.fr", "date": "2021-08-03T15:55:23Z"}, "message": "expand: Merge both implementations for both module types", "tree": {"sha": "33a70ae8a1a0b4ae271e7d3f6d9db468bed9d48a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33a70ae8a1a0b4ae271e7d3f6d9db468bed9d48a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4077cc2a8c9ade9bd9b61804d756fcfc2cc9931", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4077cc2a8c9ade9bd9b61804d756fcfc2cc9931", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4077cc2a8c9ade9bd9b61804d756fcfc2cc9931", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4077cc2a8c9ade9bd9b61804d756fcfc2cc9931/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a5af75e3225b413ba0bd120a1028b5f305a4cb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a5af75e3225b413ba0bd120a1028b5f305a4cb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a5af75e3225b413ba0bd120a1028b5f305a4cb3"}], "stats": {"total": 26, "additions": 10, "deletions": 16}, "files": [{"sha": "0a2547179793ed60240761d04f3f8167f77f9770", "filename": "gcc/rust/expand/rust-macro-expand.cc", "status": "modified", "additions": 10, "deletions": 16, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4077cc2a8c9ade9bd9b61804d756fcfc2cc9931/gcc%2Frust%2Fexpand%2Frust-macro-expand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4077cc2a8c9ade9bd9b61804d756fcfc2cc9931/gcc%2Frust%2Fexpand%2Frust-macro-expand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-macro-expand.cc?ref=c4077cc2a8c9ade9bd9b61804d756fcfc2cc9931", "patch": "@@ -2015,7 +2015,7 @@ class AttrVisitor : public AST::ASTVisitor\n \t\t     \"cannot strip block expression in this position - outer \"\n \t\t     \"attributes not allowed\");\n   }\n-  void visit (AST::ModuleBodied &module) override\n+  void visit (AST::Module &module) override\n   {\n     // strip test based on outer attrs\n     expander.expand_cfg_attrs (module.get_outer_attrs ());\n@@ -2025,27 +2025,21 @@ class AttrVisitor : public AST::ASTVisitor\n \treturn;\n       }\n \n-    // strip test based on inner attrs\n-    expander.expand_cfg_attrs (module.get_inner_attrs ());\n-    if (expander.fails_cfg_with_expand (module.get_inner_attrs ()))\n+    // A loaded module might have inner attributes\n+    if (module.get_kind () == AST::Module::ModuleKind::LOADED)\n       {\n-\tmodule.mark_for_strip ();\n-\treturn;\n+\t// strip test based on inner attrs\n+\texpander.expand_cfg_attrs (module.get_inner_attrs ());\n+\tif (expander.fails_cfg_with_expand (module.get_inner_attrs ()))\n+\t  {\n+\t    module.mark_for_strip ();\n+\t    return;\n+\t  }\n       }\n \n     // strip items if required\n     expand_pointer_allow_strip (module.get_items ());\n   }\n-  void visit (AST::ModuleNoBody &module) override\n-  {\n-    // strip test based on outer attrs\n-    expander.expand_cfg_attrs (module.get_outer_attrs ());\n-    if (expander.fails_cfg_with_expand (module.get_outer_attrs ()))\n-      {\n-\tmodule.mark_for_strip ();\n-\treturn;\n-      }\n-  }\n   void visit (AST::ExternCrate &crate) override\n   {\n     // strip test based on outer attrs"}]}