{"sha": "16621f0de36074287eca820cd34de79ab8ee3486", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY2MjFmMGRlMzYwNzQyODdlY2E4MjBjZDM0ZGU3OWFiOGVlMzQ4Ng==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2018-08-09T13:39:17Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2018-08-09T13:39:17Z"}, "message": "aarch64 - PR target/86887 Fix missing register constraints in carryin patterns\n\nSome of the carryin insn patterns are missing a register constraint.\nThat means that the register allocator can pick practically anything\nto hold that value, including memory locations, or registers of the\nwrong class.\n\n\tPR target/86887\n\t* config/aarch64/aarch64.md (add<mode>3_carryinC_zero): Add missing\n\tregister constraint to operand 0.\n\t(add<mode>3_carryinC): Likewise.\n\t(add<mode>3_carryinV_zero, add<mode>3_carryinV): Likewise.\n\nFrom-SVN: r263446", "tree": {"sha": "22a225d6fa78251c77914063f23d64ce3e255168", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22a225d6fa78251c77914063f23d64ce3e255168"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16621f0de36074287eca820cd34de79ab8ee3486", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16621f0de36074287eca820cd34de79ab8ee3486", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16621f0de36074287eca820cd34de79ab8ee3486", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16621f0de36074287eca820cd34de79ab8ee3486/comments", "author": null, "committer": null, "parents": [{"sha": "40c27f7d974e45f49261cb6997df8fae7c88b80f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40c27f7d974e45f49261cb6997df8fae7c88b80f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40c27f7d974e45f49261cb6997df8fae7c88b80f"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "9d5a23fc06fefe07df39974aba83b24e4e22104f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16621f0de36074287eca820cd34de79ab8ee3486/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16621f0de36074287eca820cd34de79ab8ee3486/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=16621f0de36074287eca820cd34de79ab8ee3486", "patch": "@@ -1,3 +1,11 @@\n+2018-08-09  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\tPR target/86887\n+\t* config/aarch64/aarch64.md (add<mode>3_carryinC_zero): Add missing\n+\tregister constraint to operand 0.\n+\t(add<mode>3_carryinC): Likewise.\n+\t(add<mode>3_carryinV_zero, add<mode>3_carryinV): Likewise.\n+\n 2018-08-09  Martin Liska  <mliska@suse.cz>\n \n         PR c/86895"}, {"sha": "22d20eae5c57de81827b3f0f676635a8fff2f054", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16621f0de36074287eca820cd34de79ab8ee3486/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16621f0de36074287eca820cd34de79ab8ee3486/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=16621f0de36074287eca820cd34de79ab8ee3486", "patch": "@@ -2451,7 +2451,7 @@\n \t    (plus:GPI\n \t      (match_operand:GPI 3 \"aarch64_carry_operation\" \"\")\n \t      (match_dup 1)))))\n-   (set (match_operand:GPI 0 \"register_operand\")\n+   (set (match_operand:GPI 0 \"register_operand\" \"=r\")\n \t(plus:GPI (match_dup 3) (match_dup 1)))]\n    \"\"\n    \"adcs\\\\t%<w>0, %<w>1, <w>zr\"\n@@ -2472,7 +2472,7 @@\n \t\t(match_operand:GPI 4 \"aarch64_carry_operation\" \"\")\n \t\t(match_dup 1))\n \t      (match_dup 2)))))\n-   (set (match_operand:GPI 0 \"register_operand\")\n+   (set (match_operand:GPI 0 \"register_operand\" \"=r\")\n \t(plus:GPI\n \t  (plus:GPI (match_dup 4) (match_dup 1))\n \t  (match_dup 2)))]\n@@ -2517,7 +2517,7 @@\n \t    (plus:GPI\n \t      (match_operand:GPI 3 \"aarch64_carry_operation\" \"\")\n \t      (match_dup 1)))))\n-   (set (match_operand:GPI 0 \"register_operand\")\n+   (set (match_operand:GPI 0 \"register_operand\" \"=r\")\n \t(plus:GPI (match_dup 3) (match_dup 1)))]\n    \"\"\n    \"adcs\\\\t%<w>0, %<w>1, <w>zr\"\n@@ -2538,7 +2538,7 @@\n \t\t(match_operand:GPI 4 \"aarch64_carry_operation\" \"\")\n \t\t(match_dup 1))\n \t      (match_dup 2)))))\n-   (set (match_operand:GPI 0 \"register_operand\")\n+   (set (match_operand:GPI 0 \"register_operand\" \"=r\")\n \t(plus:GPI\n \t  (plus:GPI (match_dup 4) (match_dup 1))\n \t  (match_dup 2)))]"}]}