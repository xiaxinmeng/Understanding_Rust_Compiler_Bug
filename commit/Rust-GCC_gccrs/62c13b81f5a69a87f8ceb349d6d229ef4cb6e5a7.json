{"sha": "62c13b81f5a69a87f8ceb349d6d229ef4cb6e5a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJjMTNiODFmNWE2OWE4N2Y4Y2ViMzQ5ZDZkMjI5ZWY0Y2I2ZTVhNw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-31T21:00:49Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-10-31T21:00:49Z"}, "message": "(install-libobjc): New target.\n\n(install-fixincludes): Ignore dirs that don't exist.\n\n(libgcc2.a, libgcc1.a): Use || to exit if cp fails.\n(install-float-h-cross): Use fi, not done.\nWrite float.h in $(tmpdir), not in `.'.\n(tmpdir): New variable.\n\nFrom-SVN: r2663", "tree": {"sha": "013bff0c773ab5d0bccfc33698f5f1176b9ab43f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/013bff0c773ab5d0bccfc33698f5f1176b9ab43f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62c13b81f5a69a87f8ceb349d6d229ef4cb6e5a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62c13b81f5a69a87f8ceb349d6d229ef4cb6e5a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62c13b81f5a69a87f8ceb349d6d229ef4cb6e5a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62c13b81f5a69a87f8ceb349d6d229ef4cb6e5a7/comments", "author": null, "committer": null, "parents": [{"sha": "152551c656050f4b5d939868aad65bb56e89c1de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/152551c656050f4b5d939868aad65bb56e89c1de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/152551c656050f4b5d939868aad65bb56e89c1de"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "94cc56d8137498b6b3c17a7897b0a6f698bdad1c", "filename": "gcc/Makefile.in", "status": "modified", "additions": 24, "deletions": 8, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62c13b81f5a69a87f8ceb349d6d229ef4cb6e5a7/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62c13b81f5a69a87f8ceb349d6d229ef4cb6e5a7/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=62c13b81f5a69a87f8ceb349d6d229ef4cb6e5a7", "patch": "@@ -152,6 +152,8 @@ mandir = $(prefix)/man/man1\n # Directory in which to find other cross-compilation tools and headers.\n # Used in install-cross.\n tooldir = $(prefix)/$(target)\n+# Dir for temp files.\n+tmpdir = /tmp\n \n # Additional system libraries to link with.\n CLIB=\n@@ -578,8 +580,7 @@ libgcc1.a: libgcc1.c $(CONFIG_H) $(LIB1FUNCS_EXTRA) config.status\n \t    name=`echo $${file} | sed -e 's/[.]c$$//' -e 's/[.]asm$$//'`; \\\n \t    echo $${name}; \\\n \t    if [ $${name}.asm = $${file} ]; then \\\n-\t      cp $${file} $${name}.s; file=$${name}.s; \\\n-\t      if [ $$? -eq 0 ] ; then true; else exit 1; fi; \\\n+\t      cp $${file} $${name}.s || exit 1; file=$${name}.s; \\\n \t    else true; fi; \\\n \t    $(OLDCC) $(CCLIBFLAGS) $(INCLUDES) -c $${file}; \\\n \t    if [ $$? -eq 0 ] ; then true; else exit 1; fi; \\\n@@ -633,8 +634,7 @@ libgcc2.a: libgcc2.c libgcc2.ready $(CONFIG_H) $(LIB2FUNCS_EXTRA) \\\n \t    name=`echo $${file} | sed -e 's/[.]c$$//' -e 's/[.]asm$$//'`; \\\n \t    echo $${name}; \\\n \t    if [ $${name}.asm = $${file} ]; then \\\n-\t      cp $${file} $${name}.s; file=$${name}.s; \\\n-\t      if [ $$? -eq 0 ] ; then true; else exit 1; fi; \\\n+\t      cp $${file} $${name}.s || exit 1; file=$${name}.s; \\\n \t    else true; fi; \\\n \t    $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) $(INCLUDES) -c $${file}; \\\n \t    if [ $$? -eq 0 ] ; then true; else exit 1; fi; \\\n@@ -1411,10 +1411,13 @@ install-cross-rest: install-float-h-cross\n # Install float.h for cross compiler.\n # Run this on the target machine!\n install-float-h-cross:\n-\tif [ -f enquire ] ; then true; else false; done\n-\t-./enquire -f > float.h\n+# I don't see what this line is for.\n+# If you see what good it does, please tell me.  -- rms.\n+\tif [ -f enquire ] ; then true; else false; fi\n+\t-./enquire -f > $(tmpdir)/float.h\n \t-rm -f $(libsubdir)/include/float.h\n-\t$(INSTALL_DATA) float.h $(libsubdir)/include/float.h\n+\t$(INSTALL_DATA) $(tmpdir)/float.h $(libsubdir)/include/float.h\n+\t-rm -f $(tmpdir)/float.h\n \tchmod a-x $(libsubdir)/include/float.h\n \n # Create the installation directory.\n@@ -1510,6 +1513,16 @@ install-libgcc: libgcc.a install-dir\n \t  chmod a-x $(libsubdir)/libgcc.a; \\\n \telse true; fi\n \n+# Install the objc run time library.\n+install-libobjc: libobjc.a install-dir\n+\t-if [ -f libobjc.a ] ; then \\\n+\t  rm -f $(libsubdir)/libobjc.a; \\\n+\t  $(INSTALL_DATA) libobjc.a $(libsubdir)/libobjc.a; \\\n+\t  if $(RANLIB_TEST) ; then \\\n+\t    (cd $(libsubdir); $(RANLIB) libobjc.a); else true; fi; \\\n+\t  chmod a-x $(libsubdir)/libobjc.a; \\\n+\telse true; fi\n+\n # Install all the header files for native compiler.\n install-headers: install-common-headers install-float-h install-limits-h\n \n@@ -1598,7 +1611,10 @@ install-fixincludes: install-headers\n \trm -rf *\n # Install fixed copies of system files.\n \tfor dir in /usr/include $(OTHER_FIXINCLUDES_DIRS); do \\\n-\t  $(srcdir)/$(FIXINCLUDES) $(libsubdir)/include $$dir $(srcdir); \\\n+\t  if [ -d $$dir ]; \\\n+\t  then \\\n+\t    $(srcdir)/$(FIXINCLUDES) $(libsubdir)/include $$dir $(srcdir); \\\n+\t  else true; fi \\\n \tdone\n \t-cd $(libsubdir)/include; \\\n \tif [ -f limits.h ]; then \\"}]}