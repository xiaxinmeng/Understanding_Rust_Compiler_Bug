{"sha": "b446725a8ad50e83d6024dea0fea93a7be60506b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQ0NjcyNWE4YWQ1MGU4M2Q2MDI0ZGVhMGZlYTkzYTdiZTYwNTA2Yg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2007-12-13T11:01:00Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-12-13T11:01:00Z"}, "message": "re PR libfortran/34427 (Revision 130708 breaks namelist input)\n\n2007-12-13  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/34427\n        * io/list_read.c (read_real): Fix unwinding for namelists.\n\n2007-12-13  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/34427\n        * gfortran.dg/namelist_42.f90: New.\n\nFrom-SVN: r130889", "tree": {"sha": "22f6171a6affa88a69cac78b9b3a72aa28c002f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/22f6171a6affa88a69cac78b9b3a72aa28c002f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b446725a8ad50e83d6024dea0fea93a7be60506b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b446725a8ad50e83d6024dea0fea93a7be60506b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b446725a8ad50e83d6024dea0fea93a7be60506b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b446725a8ad50e83d6024dea0fea93a7be60506b/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "014c00953445614f1eabdf244a67f8a086bb3c8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/014c00953445614f1eabdf244a67f8a086bb3c8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/014c00953445614f1eabdf244a67f8a086bb3c8c"}], "stats": {"total": 155, "additions": 134, "deletions": 21}, "files": [{"sha": "d665f7dbcf7647be35daecb3534d1a077f7a7757", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b446725a8ad50e83d6024dea0fea93a7be60506b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b446725a8ad50e83d6024dea0fea93a7be60506b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b446725a8ad50e83d6024dea0fea93a7be60506b", "patch": "@@ -1,3 +1,8 @@\n+2007-12-13  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/34427\n+\t* gfortran.dg/namelist_42.f90: New.\n+\n 2007-12-12  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/34254"}, {"sha": "b0095fe0e6a048a45150ca02a9ca3a1e47541f0a", "filename": "gcc/testsuite/gfortran.dg/namelist_42.f90", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b446725a8ad50e83d6024dea0fea93a7be60506b/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_42.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b446725a8ad50e83d6024dea0fea93a7be60506b/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_42.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_42.f90?ref=b446725a8ad50e83d6024dea0fea93a7be60506b", "patch": "@@ -0,0 +1,34 @@\n+! { dg-do run }\n+! { dg-options \"-mieee\" { target sh*-*-* } }\n+!\n+! PR fortran/34427\n+!\n+! Check that namelists and the real values Inf, NaN, Infinity\n+! properly coexist.\n+!\n+ PROGRAM TEST\n+  IMPLICIT NONE\n+  real , DIMENSION(11) ::foo \n+  integer :: infinity\n+  NAMELIST /nl/ foo\n+  NAMELIST /nl/ infinity\n+  foo = -1.0\n+  infinity = -1\n+\n+  open (10, status=\"scratch\")\n+! Works:\n+  write (10,*) \" &nl foo = 5, 5, 5, nan, infinity, infinity \"\n+  write (10,*)\n+  write (10,*) \"      = 1, /\"\n+! Does not work\n+  !write (10,*) \" &nl foo = 5, 5, 5, nan, infinity, infinity\"\n+  !write (10,*) \"      = 1, /\"\n+  rewind (10)\n+  READ (10, NML = nl)\n+  CLOSE (10)\n+\n+  if(infinity /= 1) call abort()\n+  if(any(foo(1:3) /= [5.0, 5.0, 5.0]) .or. .not.isnan(foo(4)) &\n+     .or. foo(5) <= huge(foo) .or. any(foo(6:11) /= -1.0)) &\n+    call abort()\n+ END PROGRAM TEST"}, {"sha": "12969af81d8c80f26cd1e9b1b79b03980a233535", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b446725a8ad50e83d6024dea0fea93a7be60506b/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b446725a8ad50e83d6024dea0fea93a7be60506b/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=b446725a8ad50e83d6024dea0fea93a7be60506b", "patch": "@@ -1,3 +1,8 @@\n+2007-12-13  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/34427\n+\t* io/list_read.c (read_real): Fix unwinding for namelists.\n+\n 2007-12-10  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/34411"}, {"sha": "e63fca57a2f22b98ce7847443073f358753a7983", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 90, "deletions": 21, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b446725a8ad50e83d6024dea0fea93a7be60506b/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b446725a8ad50e83d6024dea0fea93a7be60506b/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=b446725a8ad50e83d6024dea0fea93a7be60506b", "patch": "@@ -1315,6 +1315,7 @@ read_real (st_parameter_dt *dtp, int length)\n {\n   char c, message[100];\n   int seen_dp;\n+  int is_inf, i;\n \n   seen_dp = 0;\n \n@@ -1522,34 +1523,102 @@ read_real (st_parameter_dt *dtp, int length)\n   return;\n \n  inf_nan:\n+  l_push_char (dtp, c);\n+  is_inf = 0;\n+\n   /* Match INF and Infinity.  */\n-  if ((c == 'i' || c == 'I')\n-      && ((c = next_char (dtp)) == 'n' || c == 'N')\n-      && ((c = next_char (dtp)) == 'f' || c == 'F'))\n+  if (c == 'i' || c == 'I')\n     {\n-\tc = next_char (dtp);\n-\tif (is_separator (c)\n-\t    || ((c == 'i' || c == 'I')\n-\t\t&& ((c = next_char (dtp)) == 'n' || c == 'N')\n-\t\t&& ((c = next_char (dtp)) == 'i' || c == 'I')\n-\t\t&& ((c = next_char (dtp)) == 't' || c == 'T')\n-\t\t&& ((c = next_char (dtp)) == 'y' || c == 'Y')\n-\t\t&& (c = next_char (dtp)) && is_separator (c)))\n-\t  {\n-\t     push_char (dtp, 'i');\n-\t     push_char (dtp, 'n');\n-\t     push_char (dtp, 'f');\n-\t     goto done;\n-\t  }\n+      c = next_char (dtp);\n+      l_push_char (dtp, c);\n+      if (c != 'n' && c != 'N')\n+\tgoto unwind;\n+      c = next_char (dtp);\n+      l_push_char (dtp, c);\n+      if (c != 'f' && c != 'F')\n+\tgoto unwind;\n+      c = next_char (dtp);\n+      l_push_char (dtp, c);\n+      if (!is_separator (c))\n+\t{\n+\t  if (c != 'i' && c != 'I')\n+\t    goto unwind;\n+\t  c = next_char (dtp);\n+\t  l_push_char (dtp, c);\n+\t  if (c != 'n' && c != 'N')\n+\t    goto unwind;\n+\t  c = next_char (dtp);\n+\t  l_push_char (dtp, c);\n+\t  if (c != 'i' && c != 'I')\n+\t    goto unwind;\n+\t  c = next_char (dtp);\n+\t  l_push_char (dtp, c);\n+\t  if (c != 't' && c != 'T')\n+\t    goto unwind;\n+\t  c = next_char (dtp);\n+\t  l_push_char (dtp, c);\n+\t  if (c != 'y' && c != 'Y')\n+\t    goto unwind;\n+\t  c = next_char (dtp);\n+\t  l_push_char (dtp, c);\n+\t}\n+\tis_inf = 1;\n     } /* Match NaN.  */\n-  else if (((c = next_char (dtp)) == 'a' || c == 'A')\n-\t   && ((c = next_char (dtp)) == 'n' || c == 'N')\n-\t   && (c = next_char (dtp)) && is_separator (c))\n+  else\n+    {\n+      c = next_char (dtp);\n+      l_push_char (dtp, c);\n+      if (c != 'a' && c != 'A')\n+\tgoto unwind;\n+      c = next_char (dtp);\n+      l_push_char (dtp, c);\n+      if (c != 'n' && c != 'N')\n+\tgoto unwind;\n+      c = next_char (dtp);\n+      l_push_char (dtp, c);\n+    }\n+\n+  if (!is_separator (c) || c == '=')\n+    goto unwind;\n+\n+  if (dtp->u.p.namelist_mode && c != ',' && c != '/')\n+    for (i = 0; i < 63; i++)\n+    { \n+      eat_spaces (dtp);\n+      c = next_char (dtp);\n+      l_push_char (dtp, c);\n+      if (c == '=')\n+\tgoto unwind;\n+\n+      if (c == ',' || c == '/' || !is_separator(c))\n+\tbreak;\n+    }\n+\n+  if (is_inf)\n+    {\n+      push_char (dtp, 'i');\n+      push_char (dtp, 'n');\n+      push_char (dtp, 'f');\n+    }\n+  else\n     {\n       push_char (dtp, 'n');\n       push_char (dtp, 'a');\n       push_char (dtp, 'n');\n-      goto done;\n+    }\n+\n+  dtp->u.p.item_count = 0;\n+  dtp->u.p.line_buffer_enabled = 0;\n+  free_line (dtp);\n+  goto done;\n+\n+ unwind:\n+  if (dtp->u.p.namelist_mode)\n+    {\n+      dtp->u.p.nml_read_error = 1;\n+      dtp->u.p.line_buffer_enabled = 1;\n+      dtp->u.p.item_count = 0;\n+      return;\n     }\n \n  bad_real:"}]}