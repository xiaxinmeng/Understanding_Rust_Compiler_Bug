{"sha": "2d4e0a12089d6bfe5079df70f0618c925bee79e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ0ZTBhMTIwODlkNmJmZTUwNzlkZjcwZjA2MThjOTI1YmVlNzllOA==", "commit": {"author": {"name": "Aaron Sawdey", "email": "acsawdey@linux.ibm.com", "date": "2018-04-16T14:50:06Z"}, "committer": {"name": "Aaron Sawdey", "email": "acsawdey@gcc.gnu.org", "date": "2018-04-16T14:50:06Z"}, "message": "re PR target/83660 (ICE with vec_extract inside expression statement)\n\n2018-04-16  Aaron Sawdey  <acsawdey@linux.ibm.com>\n\n\tPR target/83660\n\t* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin): Mark\n\tvec_extract expression as having side effects to make sure it gets\n\ta cleanup point.\n\n2018-04-16  Aaron Sawdey  <acsawdey@linux.ibm.com>\n\n\tPR target/83660\n\t* gcc.target/powerpc/pr83660.C: New test.\n\nFrom-SVN: r259403", "tree": {"sha": "d183ea52381e8389b365b6b1a32314ff290486b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d183ea52381e8389b365b6b1a32314ff290486b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d4e0a12089d6bfe5079df70f0618c925bee79e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d4e0a12089d6bfe5079df70f0618c925bee79e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d4e0a12089d6bfe5079df70f0618c925bee79e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d4e0a12089d6bfe5079df70f0618c925bee79e8/comments", "author": {"login": "acsawdey", "id": 41373646, "node_id": "MDQ6VXNlcjQxMzczNjQ2", "avatar_url": "https://avatars.githubusercontent.com/u/41373646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acsawdey", "html_url": "https://github.com/acsawdey", "followers_url": "https://api.github.com/users/acsawdey/followers", "following_url": "https://api.github.com/users/acsawdey/following{/other_user}", "gists_url": "https://api.github.com/users/acsawdey/gists{/gist_id}", "starred_url": "https://api.github.com/users/acsawdey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acsawdey/subscriptions", "organizations_url": "https://api.github.com/users/acsawdey/orgs", "repos_url": "https://api.github.com/users/acsawdey/repos", "events_url": "https://api.github.com/users/acsawdey/events{/privacy}", "received_events_url": "https://api.github.com/users/acsawdey/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "af7a5758bf250decdba7b366068af186f32a52b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af7a5758bf250decdba7b366068af186f32a52b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af7a5758bf250decdba7b366068af186f32a52b5"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "c3ea8d62e4366f5e76298512df941346d1cf2d03", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4e0a12089d6bfe5079df70f0618c925bee79e8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4e0a12089d6bfe5079df70f0618c925bee79e8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2d4e0a12089d6bfe5079df70f0618c925bee79e8", "patch": "@@ -1,3 +1,10 @@\n+2018-04-16  Aaron Sawdey  <acsawdey@linux.ibm.com>\n+\n+\tPR target/83660\n+\t* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin): Mark\n+\tvec_extract expression as having side effects to make sure it gets\n+\ta cleanup point.\n+\n 2018-04-16  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/85403\n@@ -20,7 +27,7 @@\n \tPROCESSOR_SKYLAKE-AVX512.\n \t* gcc/config/i386/i386.h (processor_costs): Define TARGET_SKYLAKE.\n \t(processor_type): Add PROCESSOR_SKYLAKE.\n-\t\n+\n 2018-04-16  Paolo Carlini  <paolo.carlini@oracle.com>\n \t    Jason Merrill  <jason@redhat.com>\n "}, {"sha": "bdf6405557e1abbdd324d3c048cbec423b7c1a90", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4e0a12089d6bfe5079df70f0618c925bee79e8/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4e0a12089d6bfe5079df70f0618c925bee79e8/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=2d4e0a12089d6bfe5079df70f0618c925bee79e8", "patch": "@@ -6705,6 +6705,15 @@ altivec_resolve_overloaded_builtin (location_t loc, tree fndecl,\n       stmt = build_binary_op (loc, PLUS_EXPR, stmt, arg2, 1);\n       stmt = build_indirect_ref (loc, stmt, RO_NULL);\n \n+      /* PR83660: We mark this as having side effects so that\n+\t downstream in fold_build_cleanup_point_expr () it will get a\n+\t CLEANUP_POINT_EXPR.  If it does not we can run into an ICE\n+\t later in gimplify_cleanup_point_expr ().  Potentially this\n+\t causes missed optimization because the actually is no side\n+\t effect.  */\n+      if (c_dialect_cxx ())\n+\tTREE_SIDE_EFFECTS (stmt) = 1;\n+\n       return stmt;\n     }\n "}, {"sha": "77e67379b5a14abbdc239b12f970d6e8b1743b4a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4e0a12089d6bfe5079df70f0618c925bee79e8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4e0a12089d6bfe5079df70f0618c925bee79e8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2d4e0a12089d6bfe5079df70f0618c925bee79e8", "patch": "@@ -1,3 +1,8 @@\n+2018-04-16  Aaron Sawdey  <acsawdey@linux.ibm.com>\n+\n+\tPR target/83660\n+\t* gcc.target/powerpc/pr83660.C: New test.\n+\n 2018-04-16  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/85403"}, {"sha": "f3e5373110901daf95d29680404384f7b9603f7a", "filename": "gcc/testsuite/gcc.target/powerpc/pr83660.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4e0a12089d6bfe5079df70f0618c925bee79e8/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr83660.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4e0a12089d6bfe5079df70f0618c925bee79e8/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr83660.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr83660.C?ref=2d4e0a12089d6bfe5079df70f0618c925bee79e8", "patch": "@@ -0,0 +1,14 @@\n+/* PR target/83660 */\n+/* { dg-do compile } */\n+/* { dg-options \"-mcpu=power7\" } */\n+/* { dg-skip-if \"do not override -mcpu\" { powerpc*-*-* } { \"-mcpu=*\" } { \"-mcpu=power7\" } } */\n+\n+#include <altivec.h>\n+\n+typedef __vector unsigned int  uvec32_t  __attribute__((__aligned__(16)));\n+\n+unsigned get_word(uvec32_t v)\n+{\n+    return ({const unsigned _B1 = 32;\n+            vec_extract((uvec32_t)v, 2);});\n+}"}]}