{"sha": "94d145bf5bb4260cb02d43434ab48eb6d6ffe0cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRkMTQ1YmY1YmI0MjYwY2IwMmQ0MzQzNGFiNDhlYjZkNmZmZTBjZA==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2012-06-07T11:11:55Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2012-06-07T11:11:55Z"}, "message": "re PR fortran/52861 ((missed optimisation) missed transformation to memset with -O3)\n\n2012-06-07  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/52861\n\t* frontend-passes (empty_string):  Add prototype.\n\t(optimize_assignment):  Set the length of an empty string\n\tconstant to zero.\n\n2012-06-07  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/52861\n\t* gfortran.dg/string_assign_1.f90:  New test case.\n\nFrom-SVN: r188300", "tree": {"sha": "45b7207b0fa91090d90b3a9db729bafd16702830", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45b7207b0fa91090d90b3a9db729bafd16702830"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94d145bf5bb4260cb02d43434ab48eb6d6ffe0cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94d145bf5bb4260cb02d43434ab48eb6d6ffe0cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94d145bf5bb4260cb02d43434ab48eb6d6ffe0cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94d145bf5bb4260cb02d43434ab48eb6d6ffe0cd/comments", "author": null, "committer": null, "parents": [{"sha": "d8a5e488d5a4df076006e84e2ad3e31b74501e13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8a5e488d5a4df076006e84e2ad3e31b74501e13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8a5e488d5a4df076006e84e2ad3e31b74501e13"}], "stats": {"total": 37, "additions": 33, "deletions": 4}, "files": [{"sha": "c882a416a9f713f002934244daa36bb0703e0eea", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94d145bf5bb4260cb02d43434ab48eb6d6ffe0cd/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94d145bf5bb4260cb02d43434ab48eb6d6ffe0cd/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=94d145bf5bb4260cb02d43434ab48eb6d6ffe0cd", "patch": "@@ -1,3 +1,10 @@\n+2012-06-07  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/52861\n+\t* frontend-passes (empty_string):  Add prototype.\n+\t(optimize_assignment):  Set the length of an empty string\n+\tconstant to zero.\n+\n 2012-06-04  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/50619"}, {"sha": "4fd24c2947e44a694437f0437524b830f3c1d049", "filename": "gcc/fortran/frontend-passes.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94d145bf5bb4260cb02d43434ab48eb6d6ffe0cd/gcc%2Ffortran%2Ffrontend-passes.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94d145bf5bb4260cb02d43434ab48eb6d6ffe0cd/gcc%2Ffortran%2Ffrontend-passes.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ffrontend-passes.c?ref=94d145bf5bb4260cb02d43434ab48eb6d6ffe0cd", "patch": "@@ -1,5 +1,5 @@\n /* Pass manager for Fortran front end.\n-   Copyright (C) 2010, 2011 Free Software Foundation, Inc.\n+   Copyright (C) 2010, 2011, 2012 Free Software Foundation, Inc.\n    Contributed by Thomas K\u00f6nig.\n \n This file is part of GCC.\n@@ -37,6 +37,7 @@ static bool optimize_comparison (gfc_expr *, gfc_intrinsic_op);\n static bool optimize_trim (gfc_expr *);\n static bool optimize_lexical_comparison (gfc_expr *);\n static void optimize_minmaxloc (gfc_expr **);\n+static bool empty_string (gfc_expr *e);\n \n /* How deep we are inside an argument list.  */\n \n@@ -734,10 +735,15 @@ optimize_assignment (gfc_code * c)\n   lhs = c->expr1;\n   rhs = c->expr2;\n \n-  /* Optimize away a = trim(b), where a is a character variable.  */\n-\n   if (lhs->ts.type == BT_CHARACTER)\n-    remove_trim (rhs);\n+    {\n+      /* Optimize away a = trim(b), where a is a character variable.  */\n+      remove_trim (rhs);\n+\n+      /* Replace a = '   ' by a = '' to optimize away a memcpy.  */\n+      if (empty_string(rhs))\n+\trhs->value.character.length = 0;\n+    }\n \n   if (lhs->rank > 0 && gfc_check_dependency (lhs, rhs, true) == 0)\n     optimize_binop_array_assignment (c, &rhs, false);"}, {"sha": "5819c0067c40d79d71d70a2afbc454de83c23306", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94d145bf5bb4260cb02d43434ab48eb6d6ffe0cd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94d145bf5bb4260cb02d43434ab48eb6d6ffe0cd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=94d145bf5bb4260cb02d43434ab48eb6d6ffe0cd", "patch": "@@ -1,3 +1,8 @@\n+2012-06-07  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/52861\n+\t* gfortran.dg/string_assign_1.f90:  New test case.\n+\n 2012-06-07  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/53580"}, {"sha": "8a520ff1dd9d590fc44cf795fdaebe376f29ce2e", "filename": "gcc/testsuite/gfortran.dg/string_assign_1.f90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94d145bf5bb4260cb02d43434ab48eb6d6ffe0cd/gcc%2Ftestsuite%2Fgfortran.dg%2Fstring_assign_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94d145bf5bb4260cb02d43434ab48eb6d6ffe0cd/gcc%2Ftestsuite%2Fgfortran.dg%2Fstring_assign_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstring_assign_1.f90?ref=94d145bf5bb4260cb02d43434ab48eb6d6ffe0cd", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do compile }\n+! { dg-options \"-ffrontend-optimize -fdump-tree-original\" }\n+! PR 52861 - optimize this to c = '' so that there is\n+! no memcpy in the generated code.\n+program main\n+  character (len=20) :: c\n+  c = '     '\n+  print *,c\n+end program main\n+! { dg-final { scan-tree-dump-times \"memcpy\" 0 \"original\" } }\n+! { dg-final { cleanup-tree-dump \"original\" } }"}]}