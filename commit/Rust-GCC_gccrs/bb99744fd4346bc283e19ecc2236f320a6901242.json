{"sha": "bb99744fd4346bc283e19ecc2236f320a6901242", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmI5OTc0NGZkNDM0NmJjMjgzZTE5ZWNjMjIzNmYzMjBhNjkwMTI0Mg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2005-03-25T04:05:12Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2005-03-25T04:05:12Z"}, "message": "* xmemdup.c, xstrdup.c: Expose the tail call.\n\nFrom-SVN: r97033", "tree": {"sha": "5755195d1ce674183bfde67ec9b821bff117374f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5755195d1ce674183bfde67ec9b821bff117374f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bb99744fd4346bc283e19ecc2236f320a6901242", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb99744fd4346bc283e19ecc2236f320a6901242", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb99744fd4346bc283e19ecc2236f320a6901242", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb99744fd4346bc283e19ecc2236f320a6901242/comments", "author": null, "committer": null, "parents": [{"sha": "cba9e10abbeccd3d3b9839ab6df5e187077c5bcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cba9e10abbeccd3d3b9839ab6df5e187077c5bcb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cba9e10abbeccd3d3b9839ab6df5e187077c5bcb"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "231bab3897d9d611632851dda05e2ce906a42396", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb99744fd4346bc283e19ecc2236f320a6901242/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb99744fd4346bc283e19ecc2236f320a6901242/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=bb99744fd4346bc283e19ecc2236f320a6901242", "patch": "@@ -1,3 +1,7 @@\n+2005-03-24  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* xmemdup.c, xstrdup.c: Expose the tail call.\n+\n 2005-03-09  Mark Mitchell  <mark@codesourcery.com>\n \n \t* configure.ac (funcs): Add gettimeofday."}, {"sha": "0dae37d89235c9d6646c459fa551c931d20235b7", "filename": "libiberty/xmemdup.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb99744fd4346bc283e19ecc2236f320a6901242/libiberty%2Fxmemdup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb99744fd4346bc283e19ecc2236f320a6901242/libiberty%2Fxmemdup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fxmemdup.c?ref=bb99744fd4346bc283e19ecc2236f320a6901242", "patch": "@@ -24,6 +24,10 @@ allocated, the remaining memory is zeroed.\n #include <sys/types.h> /* For size_t. */\n #ifdef HAVE_STRING_H\n #include <string.h>\n+#else\n+# ifdef HAVE_STRINGS_H\n+#  include <strings.h>\n+# endif\n #endif\n \n PTR\n@@ -33,6 +37,5 @@ xmemdup (input, copy_size, alloc_size)\n   size_t alloc_size;\n {\n   PTR output = xcalloc (1, alloc_size);\n-  memcpy (output, input, copy_size);\n-  return output;\n+  return (PTR) memcpy (output, input, copy_size);\n }"}, {"sha": "5ddd2e98a93beb881a94745ea64debd6f77ca78b", "filename": "libiberty/xstrdup.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bb99744fd4346bc283e19ecc2236f320a6901242/libiberty%2Fxstrdup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bb99744fd4346bc283e19ecc2236f320a6901242/libiberty%2Fxstrdup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fxstrdup.c?ref=bb99744fd4346bc283e19ecc2236f320a6901242", "patch": "@@ -19,6 +19,10 @@ obtain memory.\n #endif\n #ifdef HAVE_STRING_H\n #include <string.h>\n+#else\n+# ifdef HAVE_STRINGS_H\n+#  include <strings.h>\n+# endif\n #endif\n #include \"ansidecl.h\"\n #include \"libiberty.h\"\n@@ -29,6 +33,5 @@ xstrdup (s)\n {\n   register size_t len = strlen (s) + 1;\n   register char *ret = xmalloc (len);\n-  memcpy (ret, s, len);\n-  return ret;\n+  return (char *) memcpy (ret, s, len);\n }"}]}