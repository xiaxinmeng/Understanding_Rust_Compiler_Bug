{"sha": "cd1c19a5c03992bc00fea9ec5a119982e870eaa2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2QxYzE5YTVjMDM5OTJiYzAwZmVhOWVjNWExMTk5ODJlODcwZWFhMg==", "commit": {"author": {"name": "Alan Lawrence", "email": "alan.lawrence@arm.com", "date": "2015-09-08T18:30:07Z"}, "committer": {"name": "Alan Lawrence", "email": "alalaw01@gcc.gnu.org", "date": "2015-09-08T18:30:07Z"}, "message": "[ARM] Add V8HFmode and float16x8_t type\n\t\n\t* config/arm/arm.h (VALID_NEON_QREG_MODE): Add V8HFmode.\n\n\t* config/arm/arm.c (arm_vector_mode_supported_p): Support V8HFmode.\n\n\t* config/arm/arm-builtins.c (v8hf_UP): New.\n\t(arm_init_simd_builtin_types): Initialise Float16x8_t.\n\n\t* config/arm/arm-simd-builtin-types.def (Float16x8_t): New.\n\n\t* config/arm/arm_neon.h (float16x8_t): New typedef.\n\nFrom-SVN: r227536", "tree": {"sha": "309f2cc7490ca62a97066d44d8504d3510f013b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/309f2cc7490ca62a97066d44d8504d3510f013b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd1c19a5c03992bc00fea9ec5a119982e870eaa2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd1c19a5c03992bc00fea9ec5a119982e870eaa2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd1c19a5c03992bc00fea9ec5a119982e870eaa2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd1c19a5c03992bc00fea9ec5a119982e870eaa2/comments", "author": null, "committer": null, "parents": [{"sha": "61e33bff7b18fc1ce8b4260c059038496e11e17f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61e33bff7b18fc1ce8b4260c059038496e11e17f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61e33bff7b18fc1ce8b4260c059038496e11e17f"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "9416f90ebbf1820a0beb8f85ae7d3711d1a67317", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1c19a5c03992bc00fea9ec5a119982e870eaa2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1c19a5c03992bc00fea9ec5a119982e870eaa2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd1c19a5c03992bc00fea9ec5a119982e870eaa2", "patch": "@@ -1,3 +1,15 @@\n+2015-09-07  Alan Lawrence  <alan.lawrence.com>\n+\t\n+\t* config/arm/arm.h (VALID_NEON_QREG_MODE): Add V8HFmode.\n+\t\n+\t* config/arm/arm.c (arm_vector_mode_supported_p): Support V8HFmode.\n+\t\n+\t* config/arm/arm-builtins.c (v8hf_UP): New.\n+\t(arm_init_simd_builtin_types): Initialise Float16x8_t.\n+\t\n+\t* config/arm/arm-simd-builtin-types.def (Float16x8_t): New.\n+\t\n+\t* config/arm/arm_neon.h (float16x8_t): New typedef.\n 2015-09-07  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* config/arm/arm_neon.h (float16_t, vget_lane_f16, vset_lane_f16,"}, {"sha": "342c138eab76a74c428458410c1401c0d5181fd8", "filename": "gcc/config/arm/arm-builtins.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1c19a5c03992bc00fea9ec5a119982e870eaa2/gcc%2Fconfig%2Farm%2Farm-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1c19a5c03992bc00fea9ec5a119982e870eaa2/gcc%2Fconfig%2Farm%2Farm-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-builtins.c?ref=cd1c19a5c03992bc00fea9ec5a119982e870eaa2", "patch": "@@ -190,6 +190,7 @@ arm_storestruct_lane_qualifiers[SIMD_MAX_BUILTIN_ARGS]\n #define di_UP    DImode\n #define v16qi_UP V16QImode\n #define v8hi_UP  V8HImode\n+#define v8hf_UP  V8HFmode\n #define v4si_UP  V4SImode\n #define v4sf_UP  V4SFmode\n #define v2di_UP  V2DImode\n@@ -819,6 +820,7 @@ arm_init_simd_builtin_types (void)\n   /* The __builtin_simd{64,128}_float16 types are kept private unless\n      we have a scalar __fp16 type.  */\n   arm_simd_types[Float16x4_t].eltype = arm_simd_floatHF_type_node;\n+  arm_simd_types[Float16x8_t].eltype = arm_simd_floatHF_type_node;\n   arm_simd_types[Float32x2_t].eltype = float_type_node;\n   arm_simd_types[Float32x4_t].eltype = float_type_node;\n "}, {"sha": "b178ae6c05f0c532b105b30f9a2706c9f0aa8afe", "filename": "gcc/config/arm/arm-simd-builtin-types.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1c19a5c03992bc00fea9ec5a119982e870eaa2/gcc%2Fconfig%2Farm%2Farm-simd-builtin-types.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1c19a5c03992bc00fea9ec5a119982e870eaa2/gcc%2Fconfig%2Farm%2Farm-simd-builtin-types.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-simd-builtin-types.def?ref=cd1c19a5c03992bc00fea9ec5a119982e870eaa2", "patch": "@@ -44,5 +44,7 @@\n \n   ENTRY (Float16x4_t, V4HF, none, 64, float16, 18)\n   ENTRY (Float32x2_t, V2SF, none, 64, float32, 18)\n+\n+  ENTRY (Float16x8_t, V8HF, none, 128, float16, 19)\n   ENTRY (Float32x4_t, V4SF, none, 128, float32, 19)\n "}, {"sha": "f343d533396c60590c8e6e56d1fff725e4287f21", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1c19a5c03992bc00fea9ec5a119982e870eaa2/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1c19a5c03992bc00fea9ec5a119982e870eaa2/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=cd1c19a5c03992bc00fea9ec5a119982e870eaa2", "patch": "@@ -26278,7 +26278,8 @@ arm_vector_mode_supported_p (machine_mode mode)\n {\n   /* Neon also supports V2SImode, etc. listed in the clause below.  */\n   if (TARGET_NEON && (mode == V2SFmode || mode == V4SImode || mode == V8HImode\n-      || mode == V4HFmode || mode == V16QImode || mode == V4SFmode || mode == V2DImode))\n+      || mode == V4HFmode || mode == V16QImode || mode == V4SFmode\n+      || mode == V2DImode || mode == V8HFmode))\n     return true;\n \n   if ((TARGET_NEON || TARGET_IWMMXT)"}, {"sha": "f7a9d6386739962da0b472db6ddd4c94ec985d45", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1c19a5c03992bc00fea9ec5a119982e870eaa2/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1c19a5c03992bc00fea9ec5a119982e870eaa2/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=cd1c19a5c03992bc00fea9ec5a119982e870eaa2", "patch": "@@ -1016,7 +1016,7 @@ extern int arm_arch_crc;\n /* Modes valid for Neon Q registers.  */\n #define VALID_NEON_QREG_MODE(MODE) \\\n   ((MODE) == V4SImode || (MODE) == V8HImode || (MODE) == V16QImode \\\n-   || (MODE) == V4SFmode || (MODE) == V2DImode)\n+   || (MODE) == V8HFmode || (MODE) == V4SFmode || (MODE) == V2DImode)\n \n /* Structure modes valid for Neon registers.  */\n #define VALID_NEON_STRUCT_MODE(MODE) \\"}, {"sha": "10d2de945e16d8056a7f137bc6d892617576ddb8", "filename": "gcc/config/arm/arm_neon.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1c19a5c03992bc00fea9ec5a119982e870eaa2/gcc%2Fconfig%2Farm%2Farm_neon.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1c19a5c03992bc00fea9ec5a119982e870eaa2/gcc%2Fconfig%2Farm%2Farm_neon.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm_neon.h?ref=cd1c19a5c03992bc00fea9ec5a119982e870eaa2", "patch": "@@ -60,6 +60,9 @@ typedef __simd128_int8_t int8x16_t;\n typedef __simd128_int16_t int16x8_t;\n typedef __simd128_int32_t int32x4_t;\n typedef __simd128_int64_t int64x2_t;\n+#if defined (__ARM_FP16_FORMAT_IEEE) || defined (__ARM_FP16_FORMAT_ALTERNATIVE)\n+typedef __simd128_float16_t float16x8_t;\n+#endif\n typedef __simd128_float32_t float32x4_t;\n typedef __simd128_poly8_t poly8x16_t;\n typedef __simd128_poly16_t poly16x8_t;"}]}