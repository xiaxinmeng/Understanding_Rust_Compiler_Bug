{"sha": "f7acbf4c824c9486072210648c86a7df28eb8f3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjdhY2JmNGM4MjRjOTQ4NjA3MjIxMDY0OGM4NmE3ZGYyOGViOGYzZQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2006-04-26T00:51:14Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-04-26T00:51:14Z"}, "message": "expmed.c (store_bit_field): Also check whether the bitsize is valid for the machine's \"insv\" instruction...\n\n\n\t* expmed.c (store_bit_field): Also check whether the bitsize is\n\tvalid for the machine's \"insv\" instruction before moving the\n\ttarget into a pseudo for use with the insv.\n\t* config/i386/predicates.md (const8_operand): New predicate.\n\t* config/i386/i386.md (extv, extzv, insv): Use the new\n\tconst8_operand predicate where appropriate.\n\nFrom-SVN: r113265", "tree": {"sha": "1aae3ef33166342b584dde15d93a18e829caac8b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1aae3ef33166342b584dde15d93a18e829caac8b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7acbf4c824c9486072210648c86a7df28eb8f3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7acbf4c824c9486072210648c86a7df28eb8f3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7acbf4c824c9486072210648c86a7df28eb8f3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7acbf4c824c9486072210648c86a7df28eb8f3e/comments", "author": null, "committer": null, "parents": [{"sha": "a22b8ac1e4cae83b56d649add7f54be84f000453", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a22b8ac1e4cae83b56d649add7f54be84f000453", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a22b8ac1e4cae83b56d649add7f54be84f000453"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "7bf04eff71a91823d70bd49a247708b104e38baf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7acbf4c824c9486072210648c86a7df28eb8f3e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7acbf4c824c9486072210648c86a7df28eb8f3e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f7acbf4c824c9486072210648c86a7df28eb8f3e", "patch": "@@ -1,3 +1,12 @@\n+2006-04-25  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* expmed.c (store_bit_field): Also check whether the bitsize is\n+\tvalid for the machine's \"insv\" instruction before moving the\n+\ttarget into a pseudo for use with the insv.\n+\t* config/i386/predicates.md (const8_operand): New predicate.\n+\t* config/i386/i386.md (extv, extzv, insv): Use the new\n+\tconst8_operand predicate where appropriate.\n+\n 2006-04-25  DJ Delorie  <dj@redhat.com>\n \n \t* doc/install.texi (Specific): Clarify that this is not a list of"}, {"sha": "e08d1753d6480e3c387937d1cbee8ad81d04a190", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7acbf4c824c9486072210648c86a7df28eb8f3e/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7acbf4c824c9486072210648c86a7df28eb8f3e/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=f7acbf4c824c9486072210648c86a7df28eb8f3e", "patch": "@@ -12501,8 +12501,8 @@\n (define_expand \"extv\"\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(sign_extract:SI (match_operand:SI 1 \"register_operand\" \"\")\n-\t\t\t (match_operand:SI 2 \"immediate_operand\" \"\")\n-\t\t\t (match_operand:SI 3 \"immediate_operand\" \"\")))]\n+\t\t\t (match_operand:SI 2 \"const8_operand\" \"\")\n+\t\t\t (match_operand:SI 3 \"const8_operand\" \"\")))]\n   \"\"\n {\n   /* Handle extractions from %ah et al.  */\n@@ -12518,8 +12518,8 @@\n (define_expand \"extzv\"\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(zero_extract:SI (match_operand 1 \"ext_register_operand\" \"\")\n-\t\t\t (match_operand:SI 2 \"immediate_operand\" \"\")\n-\t\t\t (match_operand:SI 3 \"immediate_operand\" \"\")))]\n+\t\t\t (match_operand:SI 2 \"const8_operand\" \"\")\n+\t\t\t (match_operand:SI 3 \"const8_operand\" \"\")))]\n   \"\"\n {\n   /* Handle extractions from %ah et al.  */\n@@ -12534,12 +12534,12 @@\n \n (define_expand \"insv\"\n   [(set (zero_extract (match_operand 0 \"ext_register_operand\" \"\")\n-\t\t      (match_operand 1 \"immediate_operand\" \"\")\n-\t\t      (match_operand 2 \"immediate_operand\" \"\"))\n+\t\t      (match_operand 1 \"const8_operand\" \"\")\n+\t\t      (match_operand 2 \"const8_operand\" \"\"))\n         (match_operand 3 \"register_operand\" \"\"))]\n   \"\"\n {\n-  /* Handle extractions from %ah et al.  */\n+  /* Handle insertions to %ah et al.  */\n   if (INTVAL (operands[1]) != 8 || INTVAL (operands[2]) != 8)\n     FAIL;\n "}, {"sha": "24f741b00311d2af8d120949ff8b2e94af140ee5", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7acbf4c824c9486072210648c86a7df28eb8f3e/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7acbf4c824c9486072210648c86a7df28eb8f3e/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=f7acbf4c824c9486072210648c86a7df28eb8f3e", "patch": "@@ -544,6 +544,11 @@\n   (and (match_code \"const_int\")\n        (match_test \"op == const1_rtx\")))\n \n+;; Match exactly eight.\n+(define_predicate \"const8_operand\"\n+  (and (match_code \"const_int\")\n+       (match_test \"INTVAL (op) == 8\")))\n+\n ;; Match 2, 4, or 8.  Used for leal multiplicands.\n (define_predicate \"const248_operand\"\n   (match_code \"const_int\")"}, {"sha": "5a32366cc649fd6af421d3eae3c16c35f99bb59d", "filename": "gcc/expmed.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7acbf4c824c9486072210648c86a7df28eb8f3e/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7acbf4c824c9486072210648c86a7df28eb8f3e/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=f7acbf4c824c9486072210648c86a7df28eb8f3e", "patch": "@@ -636,7 +636,9 @@ store_bit_field (rtx str_rtx, unsigned HOST_WIDE_INT bitsize,\n       && bitsize > 0\n       && GET_MODE_BITSIZE (op_mode) >= bitsize\n       && ! ((REG_P (op0) || GET_CODE (op0) == SUBREG)\n-\t    && (bitsize + bitpos > GET_MODE_BITSIZE (op_mode))))\n+\t    && (bitsize + bitpos > GET_MODE_BITSIZE (op_mode)))\n+      && insn_data[CODE_FOR_insv].operand[1].predicate (GEN_INT (bitsize),\n+\t\t\t\t\t\t\tVOIDmode))\n     {\n       int xbitpos = bitpos;\n       rtx value1;"}]}