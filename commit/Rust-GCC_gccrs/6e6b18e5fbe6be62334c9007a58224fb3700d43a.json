{"sha": "6e6b18e5fbe6be62334c9007a58224fb3700d43a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU2YjE4ZTVmYmU2YmU2MjMzNGM5MDA3YTU4MjI0ZmIzNzAwZDQzYQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2018-08-01T15:14:42Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-08-01T15:14:42Z"}, "message": "[05/11] Add a vect_stmt_to_vectorize helper function\n\nThis patch adds a helper that does the opposite of vect_orig_stmt:\ngo from the original scalar statement to the statement that should\nactually be vectorised.\n\nThe use in the last two hunks of vectorizable_reduction are because\nreduc_stmt_info (first hunk) and stmt_info (second hunk) are already\npattern statements if appropriate.\n\n2018-08-01  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* tree-vectorizer.h (vect_stmt_to_vectorize): New function.\n\t* tree-vect-loop.c (vect_update_vf_for_slp): Use it.\n\t(vectorizable_reduction): Likewise.\n\t* tree-vect-slp.c (vect_analyze_slp_instance): Likewise.\n\t(vect_detect_hybrid_slp_stmts): Likewise.\n\t* tree-vect-stmts.c (vect_is_simple_use): Likewise.\n\nFrom-SVN: r263219", "tree": {"sha": "9c60cd9b0f1770a384516c649066da81a765c012", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c60cd9b0f1770a384516c649066da81a765c012"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e6b18e5fbe6be62334c9007a58224fb3700d43a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e6b18e5fbe6be62334c9007a58224fb3700d43a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e6b18e5fbe6be62334c9007a58224fb3700d43a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e6b18e5fbe6be62334c9007a58224fb3700d43a/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cd3ca9102eba6eae8944329cd72b74ff460e7b3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd3ca9102eba6eae8944329cd72b74ff460e7b3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd3ca9102eba6eae8944329cd72b74ff460e7b3b"}], "stats": {"total": 56, "additions": 29, "deletions": 27}, "files": [{"sha": "227d0457315a0345da107d06f485f8f8fa11f604", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e6b18e5fbe6be62334c9007a58224fb3700d43a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e6b18e5fbe6be62334c9007a58224fb3700d43a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6e6b18e5fbe6be62334c9007a58224fb3700d43a", "patch": "@@ -1,3 +1,12 @@\n+2018-08-01  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* tree-vectorizer.h (vect_stmt_to_vectorize): New function.\n+\t* tree-vect-loop.c (vect_update_vf_for_slp): Use it.\n+\t(vectorizable_reduction): Likewise.\n+\t* tree-vect-slp.c (vect_analyze_slp_instance): Likewise.\n+\t(vect_detect_hybrid_slp_stmts): Likewise.\n+\t* tree-vect-stmts.c (vect_is_simple_use): Likewise.\n+\n 2018-08-01  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* tree-vrp (zero_nonzero_bits_from_bounds): Rename to..."}, {"sha": "f4ce5b6033b4330f1eb4f54bf34c327267d50d7f", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e6b18e5fbe6be62334c9007a58224fb3700d43a/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e6b18e5fbe6be62334c9007a58224fb3700d43a/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=6e6b18e5fbe6be62334c9007a58224fb3700d43a", "patch": "@@ -1424,9 +1424,7 @@ vect_update_vf_for_slp (loop_vec_info loop_vinfo)\n \t   gsi_next (&si))\n \t{\n \t  stmt_vec_info stmt_info = loop_vinfo->lookup_stmt (gsi_stmt (si));\n-\t  if (STMT_VINFO_IN_PATTERN_P (stmt_info)\n-\t      && STMT_VINFO_RELATED_STMT (stmt_info))\n-\t    stmt_info = STMT_VINFO_RELATED_STMT (stmt_info);\n+\t  stmt_info = vect_stmt_to_vectorize (stmt_info);\n \t  if ((STMT_VINFO_RELEVANT_P (stmt_info)\n \t       || VECTORIZABLE_CYCLE_DEF (STMT_VINFO_DEF_TYPE (stmt_info)))\n \t      && !PURE_SLP_STMT (stmt_info))\n@@ -6111,8 +6109,7 @@ vectorizable_reduction (stmt_vec_info stmt_info, gimple_stmt_iterator *gsi,\n \treturn true;\n \n       stmt_vec_info reduc_stmt_info = STMT_VINFO_REDUC_DEF (stmt_info);\n-      if (STMT_VINFO_IN_PATTERN_P (reduc_stmt_info))\n-\treduc_stmt_info = STMT_VINFO_RELATED_STMT (reduc_stmt_info);\n+      reduc_stmt_info = vect_stmt_to_vectorize (reduc_stmt_info);\n \n       if (STMT_VINFO_VEC_REDUCTION_TYPE (reduc_stmt_info)\n \t  == EXTRACT_LAST_REDUCTION)\n@@ -6145,8 +6142,7 @@ vectorizable_reduction (stmt_vec_info stmt_info, gimple_stmt_iterator *gsi,\n       if (ncopies > 1\n \t  && STMT_VINFO_RELEVANT (reduc_stmt_info) <= vect_used_only_live\n \t  && (use_stmt_info = loop_vinfo->lookup_single_use (phi_result))\n-\t  && (use_stmt_info == reduc_stmt_info\n-\t      || STMT_VINFO_RELATED_STMT (use_stmt_info) == reduc_stmt_info))\n+\t  && vect_stmt_to_vectorize (use_stmt_info) == reduc_stmt_info)\n \tsingle_defuse_cycle = true;\n \n       /* Create the destination vector  */\n@@ -6915,8 +6911,7 @@ vectorizable_reduction (stmt_vec_info stmt_info, gimple_stmt_iterator *gsi,\n   if (ncopies > 1\n       && (STMT_VINFO_RELEVANT (stmt_info) <= vect_used_only_live)\n       && (use_stmt_info = loop_vinfo->lookup_single_use (reduc_phi_result))\n-      && (use_stmt_info == stmt_info\n-\t  || STMT_VINFO_RELATED_STMT (use_stmt_info) == stmt_info))\n+      && vect_stmt_to_vectorize (use_stmt_info) == stmt_info)\n     {\n       single_defuse_cycle = true;\n       epilog_copies = 1;"}, {"sha": "d0f6da4a6acf21e70b81238cf98ecf327d23c30e", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 3, "deletions": 13, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e6b18e5fbe6be62334c9007a58224fb3700d43a/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e6b18e5fbe6be62334c9007a58224fb3700d43a/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=6e6b18e5fbe6be62334c9007a58224fb3700d43a", "patch": "@@ -1969,11 +1969,7 @@ vect_analyze_slp_instance (vec_info *vinfo,\n       /* Collect the stores and store them in SLP_TREE_SCALAR_STMTS.  */\n       while (next_info)\n         {\n-\t  if (STMT_VINFO_IN_PATTERN_P (next_info)\n-\t      && STMT_VINFO_RELATED_STMT (next_info))\n-\t    scalar_stmts.safe_push (STMT_VINFO_RELATED_STMT (next_info));\n-\t  else\n-\t    scalar_stmts.safe_push (next_info);\n+\t  scalar_stmts.safe_push (vect_stmt_to_vectorize (next_info));\n \t  next_info = DR_GROUP_NEXT_ELEMENT (next_info);\n         }\n     }\n@@ -1983,11 +1979,7 @@ vect_analyze_slp_instance (vec_info *vinfo,\n \t SLP_TREE_SCALAR_STMTS.  */\n       while (next_info)\n         {\n-\t  if (STMT_VINFO_IN_PATTERN_P (next_info)\n-\t      && STMT_VINFO_RELATED_STMT (next_info))\n-\t    scalar_stmts.safe_push (STMT_VINFO_RELATED_STMT (next_info));\n-\t  else\n-\t    scalar_stmts.safe_push (next_info);\n+\t  scalar_stmts.safe_push (vect_stmt_to_vectorize (next_info));\n \t  next_info = REDUC_GROUP_NEXT_ELEMENT (next_info);\n         }\n       /* Mark the first element of the reduction chain as reduction to properly\n@@ -2325,9 +2317,7 @@ vect_detect_hybrid_slp_stmts (slp_tree node, unsigned i, slp_vect_type stype)\n \t    use_vinfo = loop_vinfo->lookup_stmt (use_stmt);\n \t    if (!use_vinfo)\n \t      continue;\n-\t    if (STMT_VINFO_IN_PATTERN_P (use_vinfo)\n-\t\t&& STMT_VINFO_RELATED_STMT (use_vinfo))\n-\t      use_vinfo = STMT_VINFO_RELATED_STMT (use_vinfo);\n+\t    use_vinfo = vect_stmt_to_vectorize (use_vinfo);\n \t    if (!STMT_SLP_TYPE (use_vinfo)\n \t\t&& (STMT_VINFO_RELEVANT (use_vinfo)\n \t\t    || VECTORIZABLE_CYCLE_DEF (STMT_VINFO_DEF_TYPE (use_vinfo)))"}, {"sha": "9d51c10bcbc8483cb49913ced06cfcd9729541a0", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e6b18e5fbe6be62334c9007a58224fb3700d43a/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e6b18e5fbe6be62334c9007a58224fb3700d43a/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=6e6b18e5fbe6be62334c9007a58224fb3700d43a", "patch": "@@ -10031,11 +10031,8 @@ vect_is_simple_use (tree operand, vec_info *vinfo, enum vect_def_type *dt,\n \t*dt = vect_external_def;\n       else\n \t{\n-\t  if (STMT_VINFO_IN_PATTERN_P (stmt_vinfo))\n-\t    {\n-\t      stmt_vinfo = STMT_VINFO_RELATED_STMT (stmt_vinfo);\n-\t      def_stmt = stmt_vinfo->stmt;\n-\t    }\n+\t  stmt_vinfo = vect_stmt_to_vectorize (stmt_vinfo);\n+\t  def_stmt = stmt_vinfo->stmt;\n \t  switch (gimple_code (def_stmt))\n \t    {\n \t    case GIMPLE_PHI:"}, {"sha": "5de2be9a69c833052c3037a52bb0a693ddf8d178", "filename": "gcc/tree-vectorizer.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e6b18e5fbe6be62334c9007a58224fb3700d43a/gcc%2Ftree-vectorizer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e6b18e5fbe6be62334c9007a58224fb3700d43a/gcc%2Ftree-vectorizer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.h?ref=6e6b18e5fbe6be62334c9007a58224fb3700d43a", "patch": "@@ -1131,6 +1131,17 @@ vect_orig_stmt (stmt_vec_info stmt_info)\n   return stmt_info;\n }\n \n+/* If STMT_INFO has been replaced by a pattern statement, return the\n+   replacement statement, otherwise return STMT_INFO itself.  */\n+\n+inline stmt_vec_info\n+vect_stmt_to_vectorize (stmt_vec_info stmt_info)\n+{\n+  if (STMT_VINFO_IN_PATTERN_P (stmt_info))\n+    return STMT_VINFO_RELATED_STMT (stmt_info);\n+  return stmt_info;\n+}\n+\n /* Return true if BB is a loop header.  */\n \n static inline bool"}]}