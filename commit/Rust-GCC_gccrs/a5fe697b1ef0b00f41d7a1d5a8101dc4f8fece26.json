{"sha": "a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVmZTY5N2IxZWYwYjAwZjQxZDdhMWQ1YTgxMDFkYzRmOGZlY2UyNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T09:21:47Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-02T09:21:47Z"}, "message": "[multiple changes]\n\n2011-08-02  Yannick Moy  <moy@adacore.com>\n\n\t* sem_aggr.adb (Check_Qualified_Aggregate): new procedure which checks\n\tqualification of aggregates in formal mode\n\t(Is_Top_Level_Aggregate): returns True for an aggregate not contained in\n\tanother aggregate\n\t(Resolve_Aggregate): complete the test that an aggregate is adequately\n\tqualified in formal mode\n\n2011-08-02  Pascal Obry  <obry@adacore.com>\n\n\t* make.adb, bindgen.adb, gnatbind.adb: Minor reformatting.\n\t* mlib-prj.adb: Supress warning when compiling binder generated file.\n\t(Build_Library): Supress all warnings when compiling the binder\n\tgenerated file.\n\nFrom-SVN: r177103", "tree": {"sha": "33645d6834a7a66fdb2d63221086db80c23b3581", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33645d6834a7a66fdb2d63221086db80c23b3581"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26/comments", "author": null, "committer": null, "parents": [{"sha": "bd65a2d74050033a6edbb61871bb2e57b9df6eb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd65a2d74050033a6edbb61871bb2e57b9df6eb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd65a2d74050033a6edbb61871bb2e57b9df6eb2"}], "stats": {"total": 246, "additions": 166, "deletions": 80}, "files": [{"sha": "2eae3c872d1e61b34a1c1871b6277a83d14bd834", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26", "patch": "@@ -1,3 +1,19 @@\n+2011-08-02  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_aggr.adb (Check_Qualified_Aggregate): new procedure which checks\n+\tqualification of aggregates in formal mode\n+\t(Is_Top_Level_Aggregate): returns True for an aggregate not contained in\n+\tanother aggregate\n+\t(Resolve_Aggregate): complete the test that an aggregate is adequately\n+\tqualified in formal mode\n+\n+2011-08-02  Pascal Obry  <obry@adacore.com>\n+\n+\t* make.adb, bindgen.adb, gnatbind.adb: Minor reformatting.\n+\t* mlib-prj.adb: Supress warning when compiling binder generated file.\n+\t(Build_Library): Supress all warnings when compiling the binder\n+\tgenerated file.\n+\n 2011-08-02  Yannick Moy  <moy@adacore.com>\n \n \t* errout.adb, errout.ads (Check_Formal_Restriction): move procedure"}, {"sha": "ed7ec12c1508b1cd590474fc44ec82785b65d169", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26", "patch": "@@ -92,11 +92,11 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-cbdlli$(objext) \\\n   a-cborma$(objext) \\\n   a-cdlili$(objext) \\\n+  a-cfdlli$(objext) \\\n   a-cfhama$(objext) \\\n   a-cfhase$(objext) \\\n-  a-cforse$(objext) \\\n-  a-cfdlli$(objext) \\\n   a-cforma$(objext) \\\n+  a-cforse$(objext) \\\n   a-cgaaso$(objext) \\\n   a-cgarso$(objext) \\\n   a-cgcaso$(objext) \\"}, {"sha": "ed34d0e3f27644f31351bb76e641191b8b2fc523", "filename": "gcc/ada/a-cfdlli.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26/gcc%2Fada%2Fa-cfdlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26/gcc%2Fada%2Fa-cfdlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfdlli.adb?ref=a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26", "patch": "@@ -8,6 +8,10 @@\n --                                                                          --\n --          Copyright (C) 2010, Free Software Foundation, Inc.              --\n --                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n -- ware  Foundation;  either version 3,  or (at your option) any later ver- --"}, {"sha": "bc83c9d140a97acf93936a7551249f446d3176f5", "filename": "gcc/ada/a-cfhama.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26/gcc%2Fada%2Fa-cfhama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26/gcc%2Fada%2Fa-cfhama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfhama.adb?ref=a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26", "patch": "@@ -8,6 +8,10 @@\n --                                                                          --\n --          Copyright (C) 2010, Free Software Foundation, Inc.              --\n --                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n -- ware  Foundation;  either version 3,  or (at your option) any later ver- --"}, {"sha": "0df686d303a5699289592e533e9a4ac945ac13c8", "filename": "gcc/ada/a-cfhase.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26/gcc%2Fada%2Fa-cfhase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26/gcc%2Fada%2Fa-cfhase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfhase.adb?ref=a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26", "patch": "@@ -8,6 +8,10 @@\n --                                                                          --\n --          Copyright (C) 2010, Free Software Foundation, Inc.              --\n --                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n -- ware  Foundation;  either version 3,  or (at your option) any later ver- --"}, {"sha": "f4519173095c4667bd06e2d75bfd298ddf41bd46", "filename": "gcc/ada/a-cforma.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26/gcc%2Fada%2Fa-cforma.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26/gcc%2Fada%2Fa-cforma.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cforma.adb?ref=a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26", "patch": "@@ -8,6 +8,10 @@\n --                                                                          --\n --          Copyright (C) 2010, Free Software Foundation, Inc.              --\n --                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n -- ware  Foundation;  either version 3,  or (at your option) any later ver- --"}, {"sha": "229af23996b46ea75617109f4d4612842f71c38a", "filename": "gcc/ada/a-cforse.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26/gcc%2Fada%2Fa-cforse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26/gcc%2Fada%2Fa-cforse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cforse.adb?ref=a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26", "patch": "@@ -8,6 +8,10 @@\n --                                                                          --\n --          Copyright (C) 2010, Free Software Foundation, Inc.              --\n --                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n -- ware  Foundation;  either version 3,  or (at your option) any later ver- --"}, {"sha": "a0fddf97ffc251e7c2a00890be007b882c9ea73e", "filename": "gcc/ada/a-cofove.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26/gcc%2Fada%2Fa-cofove.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26/gcc%2Fada%2Fa-cofove.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cofove.adb?ref=a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26", "patch": "@@ -8,6 +8,10 @@\n --                                                                          --\n --          Copyright (C) 2010, Free Software Foundation, Inc.              --\n --                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n -- ware  Foundation;  either version 3,  or (at your option) any later ver- --"}, {"sha": "5d1928df2c07bdf324c431cc55a1e50405a94ba0", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26", "patch": "@@ -1442,7 +1442,6 @@ package body Bindgen is\n             end if;\n          end;\n       end loop;\n-\n    end Gen_Elab_Calls_C;\n \n    ----------------------\n@@ -3030,6 +3029,10 @@ package body Bindgen is\n       procedure Increment_Ubuf;\n       --  Little procedure to increment the serial number\n \n+      --------------------\n+      -- Increment_Ubuf --\n+      --------------------\n+\n       procedure Increment_Ubuf is\n       begin\n          for J in reverse Ubuf'Range loop\n@@ -3081,7 +3084,6 @@ package body Bindgen is\n             Write_Statement_Buffer;\n          end if;\n       end loop;\n-\n    end Gen_Versions_Ada;\n \n    --------------------\n@@ -3129,7 +3131,6 @@ package body Bindgen is\n             Write_Statement_Buffer;\n          end if;\n       end loop;\n-\n    end Gen_Versions_C;\n \n    ------------------------"}, {"sha": "2c83bf2262d895996f4be545f7753772c8571aa0", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26", "patch": "@@ -469,12 +469,11 @@ procedure Gnatbind is\n    end Scan_Bind_Arg;\n \n    procedure Check_Version_And_Help is\n-      new Check_Version_And_Help_G (Bindusg.Display);\n+     new Check_Version_And_Help_G (Bindusg.Display);\n \n --  Start of processing for Gnatbind\n \n begin\n-\n    --  Set default for Shared_Libgnat option\n \n    declare\n@@ -876,9 +875,8 @@ begin\n                   -- Put_In_Sources --\n                   --------------------\n \n-                  function Put_In_Sources (S : File_Name_Type)\n-                                           return Boolean\n-                  is\n+                  function Put_In_Sources\n+                    (S : File_Name_Type) return Boolean is\n                   begin\n                      for J in 1 .. Closure_Sources.Last loop\n                         if Closure_Sources.Table (J) = S then\n@@ -978,5 +976,4 @@ begin\n \n       null;\n    end if;\n-\n end Gnatbind;"}, {"sha": "5fe7c7454c33f210556de5be8bc0122e0c08bb0e", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 23, "deletions": 24, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26", "patch": "@@ -2213,7 +2213,6 @@ package body Make is\n             Check_File (Name_Find);\n          end if;\n       end loop;\n-\n    end Check_Linker_Options;\n \n    -----------------\n@@ -6066,21 +6065,19 @@ package body Make is\n                      end loop;\n \n                      for Index in 1 .. Library_Projs.Last loop\n-                        if Library_Projs.Table\n-                          (Index).Library_Kind = Static\n+                        if Library_Projs.Table (Index).Library_Kind = Static\n                           and then not Targparm.OpenVMS_On_Target\n                         then\n                            Linker_Switches.Increment_Last;\n                            Linker_Switches.Table (Linker_Switches.Last) :=\n                              new String'\n                                (Get_Name_String\n-                                    (Library_Projs.Table (Index).\n-                                       Library_Dir.Display_Name) &\n+                                 (Library_Projs.Table\n+                                   (Index).Library_Dir.Display_Name) &\n                                 Directory_Separator &\n                                 \"lib\" &\n                                 Get_Name_String\n-                                    (Library_Projs.Table (Index).\n-                                     Library_Name) &\n+                                  (Library_Projs.Table (Index). Library_Name) &\n                                 \".\" &\n                                 MLib.Tgt.Archive_Ext);\n \n@@ -6109,7 +6106,7 @@ package body Make is\n                   if Libraries_Present then\n \n                      --  If Path_Option is not null, create the switch\n-                     --  (\"-Wl,-rpath,\" or equivalent) with all the non static\n+                     --  (\"-Wl,-rpath,\" or equivalent) with all the non-static\n                      --  library dirs plus the standard GNAT library dir.\n                      --  We do that only if Run_Path_Option is True\n                      --  (not disabled by -R switch).\n@@ -6134,17 +6131,19 @@ package body Make is\n                               loop\n                                  Linker_Switches.Increment_Last;\n                                  Linker_Switches.Table\n-                                   (Linker_Switches.Last) := new String'\n-                                   (Path_Option.all &\n-                                    Library_Paths.Table (Index).all);\n+                                   (Linker_Switches.Last) :=\n+                                     new String'\n+                                       (Path_Option.all &\n+                                        Library_Paths.Table (Index).all);\n                               end loop;\n \n                               --  One switch for the standard GNAT library dir\n \n                               Linker_Switches.Increment_Last;\n                               Linker_Switches.Table\n-                                (Linker_Switches.Last) := new String'\n-                                (Path_Option.all & MLib.Utl.Lib_Directory);\n+                                (Linker_Switches.Last) :=\n+                                  new String'\n+                                    (Path_Option.all & MLib.Utl.Lib_Directory);\n \n                            else\n                               --  We are going to create one switch of the form\n@@ -6178,8 +6177,8 @@ package body Make is\n                               loop\n                                  Option\n                                    (Current + 1 ..\n-                                      Current +\n-                                        Library_Paths.Table (Index)'Length) :=\n+                                     Current +\n+                                       Library_Paths.Table (Index)'Length) :=\n                                    Library_Paths.Table (Index).all;\n                                  Current :=\n                                    Current +\n@@ -6351,19 +6350,19 @@ package body Make is\n                                                  not Unique_Compile);\n \n                   The_Packages : constant Package_Id :=\n-                    Main_Project.Decl.Packages;\n+                                   Main_Project.Decl.Packages;\n \n                   Binder_Package : constant Prj.Package_Id :=\n-                               Prj.Util.Value_Of\n-                                 (Name        => Name_Binder,\n-                                  In_Packages => The_Packages,\n-                                  In_Tree     => Project_Tree);\n+                                     Prj.Util.Value_Of\n+                                       (Name        => Name_Binder,\n+                                        In_Packages => The_Packages,\n+                                        In_Tree     => Project_Tree);\n \n                   Linker_Package : constant Prj.Package_Id :=\n-                               Prj.Util.Value_Of\n-                                 (Name        => Name_Linker,\n-                                  In_Packages => The_Packages,\n-                                  In_Tree     => Project_Tree);\n+                                     Prj.Util.Value_Of\n+                                       (Name        => Name_Linker,\n+                                        In_Packages => The_Packages,\n+                                        In_Tree     => Project_Tree);\n \n                begin\n                   --  We fail if we cannot find the main source file"}, {"sha": "4050382e1c648c62938bd674e59533f8b36be13f", "filename": "gcc/ada/mlib-prj.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26/gcc%2Fada%2Fmlib-prj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26/gcc%2Fada%2Fmlib-prj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-prj.adb?ref=a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26", "patch": "@@ -91,6 +91,9 @@ package body MLib.Prj is\n    Compile_Switch_String : aliased String := \"-c\";\n    Compile_Switch : constant String_Access := Compile_Switch_String'Access;\n \n+   No_Warning_String : aliased String := \"-gnatws\";\n+   No_Warning : constant String_Access := No_Warning_String'Access;\n+\n    Auto_Initialize : constant String := \"-a\";\n \n    --  List of objects to put inside the library\n@@ -1184,8 +1187,9 @@ package body MLib.Prj is\n                Arguments := new String_List (1 .. Initial_Argument_Max);\n             end if;\n \n-            Argument_Number := 1;\n+            Argument_Number := 2;\n             Arguments (1) := Compile_Switch;\n+            Arguments (2) := No_Warning;\n \n             if OpenVMS_On_Target then\n                B_Start := new String'(\"b__\");\n@@ -1258,7 +1262,7 @@ package body MLib.Prj is\n \n             --  Process binder generated file for pragmas Linker_Options\n \n-            Process_Binder_File (Arguments (2).all & ASCII.NUL);\n+            Process_Binder_File (Arguments (3).all & ASCII.NUL);\n          end if;\n       end if;\n "}, {"sha": "566995d4cfd5222f37189e00fdd0ae6884c17fbf", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 88, "deletions": 43, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=a5fe697b1ef0b00f41d7a1d5a8101dc4f8fece26", "patch": "@@ -98,6 +98,15 @@ package body Sem_Aggr is\n    --  expressions allowed for a limited component association (namely, an\n    --  aggregate, function call, or <> notation). Report error for violations.\n \n+   procedure Check_Qualified_Aggregate (Level : Nat; Expr : Node_Id);\n+   --  Given aggregate Expr, check that sub-aggregates of Expr that are nested\n+   --  at Level are qualified. If Level = 0, this applies to Expr directly.\n+   --  Only issue errors in formal verification mode.\n+\n+   function Is_Top_Level_Aggregate (Expr : Node_Id) return Boolean;\n+   --  Return True of Expr is an aggregate not contained directly in another\n+   --  aggregate.\n+\n    ------------------------------------------------------\n    -- Subprograms used for RECORD AGGREGATE Processing --\n    ------------------------------------------------------\n@@ -789,6 +798,41 @@ package body Sem_Aggr is\n       end if;\n    end Check_Expr_OK_In_Limited_Aggregate;\n \n+   -------------------------------\n+   -- Check_Qualified_Aggregate --\n+   -------------------------------\n+\n+   procedure Check_Qualified_Aggregate (Level : Nat; Expr : Node_Id) is\n+      Comp_Expr : Node_Id;\n+      Comp_Assn : Node_Id;\n+   begin\n+      if Level = 0 then\n+         if Nkind (Parent (Expr)) /= N_Qualified_Expression then\n+            Check_Formal_Restriction (\"aggregate should be qualified\", Expr);\n+         end if;\n+      else\n+         Comp_Expr := First (Expressions (Expr));\n+         while Present (Comp_Expr) loop\n+            if Nkind (Comp_Expr) = N_Aggregate then\n+               Check_Qualified_Aggregate (Level - 1, Comp_Expr);\n+            end if;\n+\n+            Comp_Expr := Next (Comp_Expr);\n+         end loop;\n+\n+         Comp_Assn := First (Component_Associations (Expr));\n+         while Present (Comp_Assn) loop\n+            Comp_Expr := Expression (Comp_Assn);\n+\n+            if Nkind (Comp_Expr) = N_Aggregate then\n+               Check_Qualified_Aggregate (Level - 1, Comp_Expr);\n+            end if;\n+\n+            Comp_Assn := Next (Comp_Assn);\n+         end loop;\n+      end if;\n+   end Check_Qualified_Aggregate;\n+\n    ----------------------------------------\n    -- Check_Static_Discriminated_Subtype --\n    ----------------------------------------\n@@ -861,6 +905,17 @@ package body Sem_Aggr is\n             = N_Others_Choice;\n    end Is_Others_Aggregate;\n \n+   ----------------------------\n+   -- Is_Top_Level_Aggregate --\n+   ----------------------------\n+\n+   function Is_Top_Level_Aggregate (Expr : Node_Id) return Boolean is\n+   begin\n+      return Nkind (Parent (Expr)) /= N_Aggregate\n+        and then (Nkind (Parent (Expr)) /= N_Component_Association\n+                   or else Nkind (Parent (Parent (Expr))) /= N_Aggregate);\n+   end Is_Top_Level_Aggregate;\n+\n    --------------------------------\n    -- Make_String_Into_Aggregate --\n    --------------------------------\n@@ -921,6 +976,39 @@ package body Sem_Aggr is\n          return;\n       end if;\n \n+      --  An unqualified aggregate is restricted in SPARK or ALFA to:\n+\n+      --    An aggregate item inside an aggregate for a multi-dimensional array\n+\n+      --    An expression being assigned to an unconstrained array, but only if\n+      --    the aggregate specifies a value for OTHERS only.\n+\n+      if Nkind (Parent (N)) = N_Qualified_Expression then\n+         if Is_Array_Type (Typ) then\n+            Check_Qualified_Aggregate (Number_Dimensions (Typ), N);\n+         else\n+            Check_Qualified_Aggregate (1, N);\n+         end if;\n+      else\n+         if Is_Array_Type (Typ)\n+           and then Nkind (Parent (N)) = N_Assignment_Statement\n+           and then not Is_Constrained (Etype (Name (Parent (N))))\n+           and then not Is_Others_Aggregate (N)\n+         then\n+            Check_Formal_Restriction\n+              (\"array aggregate should have only OTHERS\", N);\n+         elsif Is_Top_Level_Aggregate (N) then\n+            Check_Formal_Restriction (\"aggregate should be qualified\", N);\n+\n+         --  The legality of this unqualified aggregate is checked by calling\n+         --  Check_Qualified_Aggregate from one of its enclosing aggregate,\n+         --  unless one of these already causes an error to be issued.\n+\n+         else\n+            null;\n+         end if;\n+      end if;\n+\n       --  Check for aggregates not allowed in configurable run-time mode.\n       --  We allow all cases of aggregates that do not come from source, since\n       --  these are all assumed to be small (e.g. bounds of a string literal).\n@@ -1098,49 +1186,6 @@ package body Sem_Aggr is\n          Error_Msg_N (\"illegal context for aggregate\", N);\n       end if;\n \n-      --  An unqualified aggregate is restricted in SPARK or ALFA to:\n-\n-      --    An aggregate item inside an aggregate for a multi-dimensional array\n-\n-      --    An expression being assigned to an unconstrained array, but only if\n-      --    the aggregate specifies a value for OTHERS only.\n-\n-      if Nkind (Parent (N)) /= N_Qualified_Expression then\n-         if Is_Array_Type (Etype (N)) then\n-            if Nkind (Parent (N)) = N_Assignment_Statement\n-              and then not Is_Constrained (Etype (Name (Parent (N))))\n-            then\n-               if not Is_Others_Aggregate (N) then\n-                  Check_Formal_Restriction\n-                    (\"array aggregate should have only OTHERS\", N);\n-               end if;\n-\n-               --  The following check is disabled until a proper place is\n-               --  found where the type of the parent node can be inspected???\n-\n---              elsif not (Nkind (Parent (N)) = N_Aggregate\n---                         and then Is_Array_Type (Etype (Parent (N)))\n---                         and then Number_Dimensions (Etype (Parent (N))) > 1)\n---              then\n---                 Check_Formal_Restriction\n---                   (\"array aggregate should be qualified\", N);\n-            else\n-               null;\n-            end if;\n-\n-         elsif Is_Record_Type (Etype (N)) then\n-            Check_Formal_Restriction\n-              (\"record aggregate should be qualified\", N);\n-\n-         --  The type of aggregate is neither array nor record, so an error\n-         --  must have occurred during resolution. Do not report an additional\n-         --  message here.\n-\n-         else\n-            null;\n-         end if;\n-      end if;\n-\n       --  If we can determine statically that the evaluation of the aggregate\n       --  raises Constraint_Error, then replace the aggregate with an\n       --  N_Raise_Constraint_Error node, but set the Etype to the right"}]}