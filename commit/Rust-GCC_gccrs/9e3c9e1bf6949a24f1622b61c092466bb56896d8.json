{"sha": "9e3c9e1bf6949a24f1622b61c092466bb56896d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUzYzllMWJmNjk0OWEyNGYxNjIyYjYxYzA5MjQ2NmJiNTY4OTZkOA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-28T23:51:24Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-04-28T23:51:24Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r854", "tree": {"sha": "9c8224040e974095241abdb4c0fd4be7d81df212", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c8224040e974095241abdb4c0fd4be7d81df212"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e3c9e1bf6949a24f1622b61c092466bb56896d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e3c9e1bf6949a24f1622b61c092466bb56896d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e3c9e1bf6949a24f1622b61c092466bb56896d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e3c9e1bf6949a24f1622b61c092466bb56896d8/comments", "author": null, "committer": null, "parents": [{"sha": "9dee6758c3677473917b41309fd8d04f1145b377", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dee6758c3677473917b41309fd8d04f1145b377", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dee6758c3677473917b41309fd8d04f1145b377"}], "stats": {"total": 46, "additions": 26, "deletions": 20}, "files": [{"sha": "1650a00ccae673db26fc54f386fc482045de35b0", "filename": "gcc/c-decl.c", "status": "modified", "additions": 26, "deletions": 20, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e3c9e1bf6949a24f1622b61c092466bb56896d8/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e3c9e1bf6949a24f1622b61c092466bb56896d8/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=9e3c9e1bf6949a24f1622b61c092466bb56896d8", "patch": "@@ -2495,23 +2495,6 @@ init_decl_processing ()\n \t\t\t       BUILT_IN_ALLOCA, 0);\n       /* Suppress error if redefined as a non-function.  */\n       DECL_BUILT_IN_NONANSI (temp) = 1;\n-      /* Declare these functions volatile\n-\t to avoid spurious \"control drops through\" warnings.  */\n-      /* Don't specify the argument types, to avoid errors\n-\t from certain code which isn't valid in ANSI but which exists.  */\n-      temp = builtin_function (\"abort\",\n-\t\t\t       build_function_type (void_type_node, 0),\n-\t\t\t       NOT_BUILT_IN, 0);\n-      TREE_THIS_VOLATILE (temp) = 1;\n-      TREE_SIDE_EFFECTS (temp) = 1;\n-      /* Suppress error if redefined as a non-function.  */\n-      DECL_BUILT_IN_NONANSI (temp) = 1;\n-      exit_type = build_function_type (void_type_node, 0);\n-      temp = builtin_function (\"exit\", exit_type, NOT_BUILT_IN, 0);\n-      TREE_THIS_VOLATILE (temp) = 1;\n-      TREE_SIDE_EFFECTS (temp) = 1;\n-      /* Suppress error if redefined as a non-function.  */\n-      DECL_BUILT_IN_NONANSI (temp) = 1;\n       temp = builtin_function (\"_exit\", exit_type, NOT_BUILT_IN, 0);\n       TREE_THIS_VOLATILE (temp) = 1;\n       TREE_SIDE_EFFECTS (temp) = 1;\n@@ -2562,10 +2545,11 @@ init_decl_processing ()\n   /* In an ANSI C program, it is okay to supply built-in meanings\n      for these functions, since applications cannot validly use them\n      with any other meaning.\n-     However, a traditional C program can do so.\n-     Also, honor the -fno-builtin option.  */\n-  if (!flag_traditional && !flag_no_builtin)\n+     However, honor the -fno-builtin option.  */\n+  if (!flag_no_builtin)\n     {\n+      tree exit_type;\n+\n       builtin_function (\"abs\", int_ftype_int, BUILT_IN_ABS, 0);\n       builtin_function (\"fabs\", double_ftype_double, BUILT_IN_FABS, 0);\n       builtin_function (\"labs\", long_ftype_long, BUILT_IN_LABS, 0);\n@@ -2575,6 +2559,28 @@ init_decl_processing ()\n       builtin_function (\"strcpy\", string_ftype_ptr_ptr, BUILT_IN_STRCPY, 0);\n       builtin_function (\"strlen\", sizet_ftype_string, BUILT_IN_STRLEN, 0);\n       builtin_function (\"sqrt\", double_ftype_double, BUILT_IN_FSQRT, 0);\n+\n+      /* Declare these functions volatile\n+\t to avoid spurious \"control drops through\" warnings.  */\n+      /* Don't specify the argument types, to avoid errors\n+\t from certain code which isn't valid in ANSI but which exists.  */\n+      temp = builtin_function (\"abort\",\n+\t\t\t       build_function_type (void_type_node, 0),\n+\t\t\t       NOT_BUILT_IN, 0);\n+      TREE_THIS_VOLATILE (temp) = 1;\n+      TREE_SIDE_EFFECTS (temp) = 1;\n+#if 0\n+      /* Suppress error if redefined as a non-function.  */\n+      DECL_BUILT_IN_NONANSI (temp) = 1;\n+#endif\n+      exit_type = build_function_type (void_type_node, 0);\n+      temp = builtin_function (\"exit\", exit_type, NOT_BUILT_IN, 0);\n+      TREE_THIS_VOLATILE (temp) = 1;\n+      TREE_SIDE_EFFECTS (temp) = 1;\n+#if 0\n+      /* Suppress error if redefined as a non-function.  */\n+      DECL_BUILT_IN_NONANSI (temp) = 1;\n+#endif\n     }\n \n #if 0"}]}