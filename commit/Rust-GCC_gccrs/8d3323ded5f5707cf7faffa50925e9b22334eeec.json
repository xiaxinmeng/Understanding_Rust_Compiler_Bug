{"sha": "8d3323ded5f5707cf7faffa50925e9b22334eeec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQzMzIzZGVkNWY1NzA3Y2Y3ZmFmZmE1MDkyNWU5YjIyMzM0ZWVlYw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2008-11-06T11:51:11Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2008-11-06T11:51:11Z"}, "message": "decl.c (gnat_to_gnu_entity): If not optimizing...\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Out_Parameter>: If not\n\toptimizing, create a PARM_DECL pointing to the VAR_DECL for debugging\n\tpurposes.\n\nFrom-SVN: r141639", "tree": {"sha": "e694d5e18e099bc7b8c033c2307780963d572f6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e694d5e18e099bc7b8c033c2307780963d572f6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d3323ded5f5707cf7faffa50925e9b22334eeec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d3323ded5f5707cf7faffa50925e9b22334eeec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d3323ded5f5707cf7faffa50925e9b22334eeec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d3323ded5f5707cf7faffa50925e9b22334eeec/comments", "author": null, "committer": null, "parents": [{"sha": "baf6e6a838df2137989ae6301150b1c0ddd0b87c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baf6e6a838df2137989ae6301150b1c0ddd0b87c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/baf6e6a838df2137989ae6301150b1c0ddd0b87c"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "a1c70a6bb737527f637269534b71fcaa4504c3ae", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d3323ded5f5707cf7faffa50925e9b22334eeec/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d3323ded5f5707cf7faffa50925e9b22334eeec/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8d3323ded5f5707cf7faffa50925e9b22334eeec", "patch": "@@ -1,3 +1,9 @@\n+2008-11-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Out_Parameter>: If not\n+\toptimizing, create a PARM_DECL pointing to the VAR_DECL for debugging\n+\tpurposes.\n+\n 2008-11-06  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/misc.c (gnat_printable_name): Always return a copy"}, {"sha": "188b896180d3054ec07775f86a0668272e170f18", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d3323ded5f5707cf7faffa50925e9b22334eeec/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d3323ded5f5707cf7faffa50925e9b22334eeec/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=8d3323ded5f5707cf7faffa50925e9b22334eeec", "patch": "@@ -1318,6 +1318,24 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t\t\t\t\t       get_block_jmpbuf_decl ())),\n \t\t\t      gnat_entity);\n \n+\t/* If we are defining an Out parameter and we're not optimizing,\n+\t   create a fake PARM_DECL for debugging purposes and make it\n+\t   point to the VAR_DECL.  Suppress debug info for the latter\n+\t   but make sure it will still live on the stack so it can be\n+\t   accessed from within the debugger through the PARM_DECL.  */\n+\tif (kind == E_Out_Parameter && definition && !optimize)\n+\t  {\n+\t    tree param = create_param_decl (gnu_entity_id, gnu_type, false);\n+\t    gnat_pushdecl (param, gnat_entity);\n+\t    SET_DECL_VALUE_EXPR (param, gnu_decl);\n+\t    DECL_HAS_VALUE_EXPR_P (param) = 1;\n+\t    if (debug_info_p)\n+\t      debug_info_p = false;\n+\t    else\n+\t      DECL_IGNORED_P (param) = 1;\n+\t    TREE_ADDRESSABLE (gnu_decl) = 1;\n+\t  }\n+\n \t/* If this is a public constant or we're not optimizing and we're not\n \t   making a VAR_DECL for it, make one just for export or debugger use.\n \t   Likewise if the address is taken or if either the object or type is"}]}