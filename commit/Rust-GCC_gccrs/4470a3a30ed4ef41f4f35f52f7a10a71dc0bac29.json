{"sha": "4470a3a30ed4ef41f4f35f52f7a10a71dc0bac29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ3MGEzYTMwZWQ0ZWY0MWY0ZjM1ZjUyZjdhMTBhNzFkYzBiYWMyOQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2010-09-26T18:28:48Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-09-26T18:28:48Z"}, "message": "i386.md (pro_epilogue_adjust_stack_<mode>_add): Merge from pro_epilogue_adjust_stack_<mode>_{1,2}.\n\n\t* config/i386/i386.md (pro_epilogue_adjust_stack_<mode>_add): Merge\n\tfrom pro_epilogue_adjust_stack_<mode>_{1,2}.\n\t(pro_epilogue_adjust_stack_<mode>_add): Rename from\n\tpro_epilogue_adjust_stack_<mode>_3.\n\t* config/i386/i386.c (pro_epilogue_adjust_stack): Update for\n\trenamed pro_epilogue_adjust_stack_{si,di}_add.\n\t(ix86_expand_prologue): Use indirect functions.  Update for renamed\n\tpro_epilogue_adjust_stack_{si,di}_sub.\n\nFrom-SVN: r164635", "tree": {"sha": "46fbb1dcff6a392a8eb69a5e8f958e5efeaf9069", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46fbb1dcff6a392a8eb69a5e8f958e5efeaf9069"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4470a3a30ed4ef41f4f35f52f7a10a71dc0bac29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4470a3a30ed4ef41f4f35f52f7a10a71dc0bac29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4470a3a30ed4ef41f4f35f52f7a10a71dc0bac29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4470a3a30ed4ef41f4f35f52f7a10a71dc0bac29/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d284c684ffafd0754d16cef50f4b06b0db893583", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d284c684ffafd0754d16cef50f4b06b0db893583", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d284c684ffafd0754d16cef50f4b06b0db893583"}], "stats": {"total": 51, "additions": 27, "deletions": 24}, "files": [{"sha": "c80e26b9b1c901a67a23bc4ce973070712d423c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4470a3a30ed4ef41f4f35f52f7a10a71dc0bac29/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4470a3a30ed4ef41f4f35f52f7a10a71dc0bac29/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4470a3a30ed4ef41f4f35f52f7a10a71dc0bac29", "patch": "@@ -1,3 +1,14 @@\n+2010-09-26  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (pro_epilogue_adjust_stack_<mode>_add): Merge\n+\tfrom pro_epilogue_adjust_stack_<mode>_{1,2}.\n+\t(pro_epilogue_adjust_stack_<mode>_add): Rename from\n+\tpro_epilogue_adjust_stack_<mode>_3.\n+\t* config/i386/i386.c (pro_epilogue_adjust_stack): Update for\n+\trenamed pro_epilogue_adjust_stack_{si,di}_add.\n+\t(ix86_expand_prologue): Use indirect functions.  Update for renamed\n+\tpro_epilogue_adjust_stack_{si,di}_sub.\n+\n 2010-09-26  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (movmsk_df): New insn."}, {"sha": "af30e3940675747eb7193e663b34aeacac434d27", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4470a3a30ed4ef41f4f35f52f7a10a71dc0bac29/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4470a3a30ed4ef41f4f35f52f7a10a71dc0bac29/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=4470a3a30ed4ef41f4f35f52f7a10a71dc0bac29", "patch": "@@ -8777,9 +8777,11 @@ pro_epilogue_adjust_stack (rtx dest, rtx src, rtx offset,\n   rtx insn;\n \n   if (! TARGET_64BIT)\n-    insn = emit_insn (gen_pro_epilogue_adjust_stack_si_1 (dest, src, offset));\n+    insn = emit_insn (gen_pro_epilogue_adjust_stack_si_add (dest,\n+\t\t\t\t\t\t\t    src, offset));\n   else if (x86_64_immediate_operand (offset, DImode))\n-    insn = emit_insn (gen_pro_epilogue_adjust_stack_di_1 (dest, src, offset));\n+    insn = emit_insn (gen_pro_epilogue_adjust_stack_di_add (dest,\n+\t\t\t\t\t\t\t    src, offset));\n   else\n     {\n       rtx tmp;\n@@ -8796,7 +8798,7 @@ pro_epilogue_adjust_stack (rtx dest, rtx src, rtx offset,\n       insn = emit_insn (gen_rtx_SET (DImode, tmp, offset));\n       if (style < 0)\n \tRTX_FRAME_RELATED_P (insn) = 1;\n-      insn = emit_insn (gen_pro_epilogue_adjust_stack_di_2 (dest, src, tmp));\n+      insn = emit_insn (gen_pro_epilogue_adjust_stack_di_add (dest, src, tmp));\n     }\n \n   if (style >= 0)\n@@ -9698,6 +9700,8 @@ ix86_expand_prologue (void)\n     {\n       rtx eax = gen_rtx_REG (Pmode, AX_REG);\n       rtx r10 = NULL;\n+      rtx (*adjust_stack_insn)(rtx, rtx, rtx);\n+\n       bool eax_live = false;\n       bool r10_live = false;\n \n@@ -9722,13 +9726,12 @@ ix86_expand_prologue (void)\n       emit_insn (ix86_gen_allocate_stack_worker (eax, eax));\n \n       /* Use the fact that AX still contains ALLOCATE.  */\n-      if (TARGET_64BIT)\n-\tinsn = gen_pro_epilogue_adjust_stack_di_3 (stack_pointer_rtx,\n-\t\t\t\t\t           stack_pointer_rtx, eax);\n-      else\n-\tinsn = gen_pro_epilogue_adjust_stack_si_3 (stack_pointer_rtx,\n-\t\t\t\t\t           stack_pointer_rtx, eax);\n-      insn = emit_insn (insn);\n+      adjust_stack_insn = (TARGET_64BIT\n+\t\t\t   ? gen_pro_epilogue_adjust_stack_di_sub\n+\t\t\t   : gen_pro_epilogue_adjust_stack_si_sub);\n+\n+      insn = emit_insn (adjust_stack_insn (stack_pointer_rtx,\n+\t\t\t\t\t   stack_pointer_rtx, eax));\n \n       if (m->fs.cfa_reg == stack_pointer_rtx)\n \t{"}, {"sha": "c541c1485c4cff15bea089941b37d93a19f20aff", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4470a3a30ed4ef41f4f35f52f7a10a71dc0bac29/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4470a3a30ed4ef41f4f35f52f7a10a71dc0bac29/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=4470a3a30ed4ef41f4f35f52f7a10a71dc0bac29", "patch": "@@ -16246,10 +16246,10 @@\n ;;\n ;; in proper program order.\n \n-(define_insn \"pro_epilogue_adjust_stack_<mode>_1\"\n+(define_insn \"pro_epilogue_adjust_stack_<mode>_add\"\n   [(set (match_operand:P 0 \"register_operand\" \"=r,r\")\n \t(plus:P (match_operand:P 1 \"register_operand\" \"0,r\")\n-\t        (match_operand:P 2 \"<immediate_operand>\" \"<i>,<i>\")))\n+\t        (match_operand:P 2 \"<nonmemory_operand>\" \"r<i>,l<i>\")))\n    (clobber (reg:CC FLAGS_REG))\n    (clobber (mem:BLK (scratch)))]\n   \"\"\n@@ -16289,18 +16289,7 @@\n \t      (const_string \"*\")))\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"pro_epilogue_adjust_stack_<mode>_2\"\n-  [(set (match_operand:P 0 \"register_operand\" \"=r\")\n-\t(plus:P (match_operand:DI 1 \"register_operand\" \"0\")\n-\t\t (match_operand:DI 2 \"register_operand\" \"r\")))\n-   (clobber (reg:CC FLAGS_REG))\n-   (clobber (mem:BLK (scratch)))]\n-  \"\"\n-  \"add{<imodesuffix>}\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"alu\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-(define_insn \"pro_epilogue_adjust_stack_<mode>_3\"\n+(define_insn \"pro_epilogue_adjust_stack_<mode>_sub\"\n   [(set (match_operand:P 0 \"register_operand\" \"=r\")\n \t(minus:P (match_operand:P 1 \"register_operand\" \"0\")\n \t\t (match_operand:P 2 \"register_operand\" \"r\")))"}]}