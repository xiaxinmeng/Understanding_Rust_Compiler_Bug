{"sha": "24de083ff5a0b613356e4ad95c501fe9a9f795e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRkZTA4M2ZmNWEwYjYxMzM1NmU0YWQ5NWM1MDFmZTlhOWY3OTVlMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T10:26:42Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T10:26:42Z"}, "message": "[multiple changes]\n\n2014-08-01  Tristan Gingold  <gingold@adacore.com>\n\n\t* sem_ch9.adb (Analyze_Task_Type_Declaration): Move code from ...\n\t* exp_ch9.adb (Make_Task_Create_Call): ... here.\n\n2014-08-01  Vincent Celier  <celier@adacore.com>\n\n\t* gnat1drv.adb: Do not try to get the target parameters when\n\tinvoked with -gnats.\n\n2014-08-01  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch7.adb (Find_Last_Init): Nothing to do for an object\n\tdeclaration subject to No_Initialization.\n\n2014-08-01  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_aggr.adb (Resolve_Array_Aggregate): Reject choice that\n\tis a subtype with dynamic predicates, or a non-static subtype\n\twith predicates.\n\t* sem_ch3.adb (Analyze_Number_Declaration): Reject qualified\n\texpression if subtype has a dynamic predicate.\n\t(Constrain_Index): Reject subtype indication if subtype mark\n\thas predicates.\n\t(Inerit_Predicate_Flags): Inherit Has_Predicates as well.\n\t(Make_Index): If index is a subtype indication, itype inhereits\n\tpredicate flags for subsequent testing.\n\t* sem_ch5.adb (Analyze_Loop_Parameter_Specification): New\n\tprocedure Check_Predicate_Use, to reject illegal uses of domains\n\tof iteration that have dynamic predicates.\n\t* sem_res.adb (Resolve_Slice): Reject slices given by a subtype\n\tindication to which a predicate applies.\n\t* sem_util.adb (Bad_Predicated_Subtype_Use): Add guard to\n\tprevent cascaded errors when subtype is invalid.\n\nFrom-SVN: r213450", "tree": {"sha": "520e7bb444a0c8b57b449b3b72fdb8f4bfd8bfff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/520e7bb444a0c8b57b449b3b72fdb8f4bfd8bfff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24de083ff5a0b613356e4ad95c501fe9a9f795e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24de083ff5a0b613356e4ad95c501fe9a9f795e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24de083ff5a0b613356e4ad95c501fe9a9f795e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24de083ff5a0b613356e4ad95c501fe9a9f795e1/comments", "author": null, "committer": null, "parents": [{"sha": "73999267a3581a69fc112fb7c420231ed4213357", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73999267a3581a69fc112fb7c420231ed4213357", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73999267a3581a69fc112fb7c420231ed4213357"}], "stats": {"total": 253, "additions": 187, "deletions": 66}, "files": [{"sha": "f39e478e8e7058ecf9f37a08f9e37c792caffa69", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24de083ff5a0b613356e4ad95c501fe9a9f795e1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24de083ff5a0b613356e4ad95c501fe9a9f795e1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=24de083ff5a0b613356e4ad95c501fe9a9f795e1", "patch": "@@ -1,3 +1,38 @@\n+2014-08-01  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* sem_ch9.adb (Analyze_Task_Type_Declaration): Move code from ...\n+\t* exp_ch9.adb (Make_Task_Create_Call): ... here.\n+\n+2014-08-01  Vincent Celier  <celier@adacore.com>\n+\n+\t* gnat1drv.adb: Do not try to get the target parameters when\n+\tinvoked with -gnats.\n+\n+2014-08-01  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch7.adb (Find_Last_Init): Nothing to do for an object\n+\tdeclaration subject to No_Initialization.\n+\n+2014-08-01  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_aggr.adb (Resolve_Array_Aggregate): Reject choice that\n+\tis a subtype with dynamic predicates, or a non-static subtype\n+\twith predicates.\n+\t* sem_ch3.adb (Analyze_Number_Declaration): Reject qualified\n+\texpression if subtype has a dynamic predicate.\n+\t(Constrain_Index): Reject subtype indication if subtype mark\n+\thas predicates.\n+\t(Inerit_Predicate_Flags): Inherit Has_Predicates as well.\n+\t(Make_Index): If index is a subtype indication, itype inhereits\n+\tpredicate flags for subsequent testing.\n+\t* sem_ch5.adb (Analyze_Loop_Parameter_Specification): New\n+\tprocedure Check_Predicate_Use, to reject illegal uses of domains\n+\tof iteration that have dynamic predicates.\n+\t* sem_res.adb (Resolve_Slice): Reject slices given by a subtype\n+\tindication to which a predicate applies.\n+\t* sem_util.adb (Bad_Predicated_Subtype_Use): Add guard to\n+\tprevent cascaded errors when subtype is invalid.\n+\n 2014-08-01  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch10.adb: Minor reformatting."}, {"sha": "e2951801f8ca9c76447d13cbc7313d3f8c2ec3e9", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24de083ff5a0b613356e4ad95c501fe9a9f795e1/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24de083ff5a0b613356e4ad95c501fe9a9f795e1/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=24de083ff5a0b613356e4ad95c501fe9a9f795e1", "patch": "@@ -2449,6 +2449,15 @@ package body Exp_Ch7 is\n                   Next (Stmt);\n                end loop;\n \n+            --  Nothing to do for an object with supporessed initialization.\n+            --  Note that this check is not performed at the beginning of the\n+            --  routine because a declaration marked with No_Initialization\n+            --  may still be initialized by a build-in-place call (the case\n+            --  above).\n+\n+            elsif No_Initialization (Decl) then\n+               return;\n+\n             --  In all other cases the initialization calls follow the related\n             --  object. The general structure of object initialization built by\n             --  routine Default_Initialize_Object is as follows:"}, {"sha": "d01e849c88f69e415e34b9151198e7abb00ed836", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24de083ff5a0b613356e4ad95c501fe9a9f795e1/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24de083ff5a0b613356e4ad95c501fe9a9f795e1/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=24de083ff5a0b613356e4ad95c501fe9a9f795e1", "patch": "@@ -14013,20 +14013,6 @@ package body Exp_Ch9 is\n       Ttyp := Corresponding_Concurrent_Type (Task_Rec);\n       Tnam := Chars (Ttyp);\n \n-      --  The sequential partition elaboration policy is supported only in the\n-      --  restricted profile.\n-\n-      --  This test should be in sem_ch9, not here ???\n-\n-      if Partition_Elaboration_Policy = 'S'\n-        and then not Restricted_Profile\n-      then\n-         Error_Msg_N\n-           (\"sequential elaboration supported only in restricted profile\",\n-            Task_Rec);\n-         return Make_Null_Statement (Loc);\n-      end if;\n-\n       --  Get task declaration. In the case of a task type declaration, this is\n       --  simply the parent of the task type entity. In the single task\n       --  declaration, this parent will be the implicit type, and we can find"}, {"sha": "536c321e3c13a215288ccd64606173d302a3b5f4", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 42, "deletions": 30, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24de083ff5a0b613356e4ad95c501fe9a9f795e1/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24de083ff5a0b613356e4ad95c501fe9a9f795e1/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=24de083ff5a0b613356e4ad95c501fe9a9f795e1", "patch": "@@ -863,53 +863,65 @@ begin\n \n       Opt.Compilation_Time := System.OS_Lib.Current_Time_String;\n \n-      --  Acquire target parameters from system.ads (source of package System)\n+      --  Get the target parameters only when -gnats is not used, to avoid\n+      --  failing when there is no default runtime.\n \n-      Targparm_Acquire : declare\n-         use Sinput;\n+      if Operating_Mode /= Check_Syntax then\n \n-         S : Source_File_Index;\n-         N : File_Name_Type;\n+         --  Acquire target parameters from system.ads (package System source)\n+         --  System).\n \n-      begin\n-         Name_Buffer (1 .. 10) := \"system.ads\";\n-         Name_Len := 10;\n-         N := Name_Find;\n-         S := Load_Source_File (N);\n+         Targparm_Acquire : declare\n+            use Sinput;\n \n-         if S = No_Source_File then\n-            Write_Line\n-              (\"fatal error, run-time library not installed correctly\");\n-            Write_Line (\"cannot locate file system.ads\");\n-            raise Unrecoverable_Error;\n+            S : Source_File_Index;\n+            N : File_Name_Type;\n \n-         --  Remember source index of system.ads (which was read successfully)\n+         begin\n+            Name_Buffer (1 .. 10) := \"system.ads\";\n+            Name_Len := 10;\n+            N := Name_Find;\n+            S := Load_Source_File (N);\n \n-         else\n-            System_Source_File_Index := S;\n-         end if;\n+            --  Failed to read system.ads, fatal error\n \n-         Targparm.Get_Target_Parameters\n-           (System_Text  => Source_Text  (S),\n-            Source_First => Source_First (S),\n-            Source_Last  => Source_Last  (S),\n-            Make_Id      => Tbuild.Make_Id'Access,\n-            Make_SC      => Tbuild.Make_SC'Access,\n-            Set_RND      => Tbuild.Set_RND'Access);\n+            if S = No_Source_File then\n+               Write_Line\n+                 (\"fatal error, run-time library not installed correctly\");\n+               Write_Line (\"cannot locate file system.ads\");\n+               raise Unrecoverable_Error;\n \n-         --  Acquire configuration pragma information from Targparm\n+            --  Read system.ads successfully, remember its source index\n+\n+            else\n+               System_Source_File_Index := S;\n+            end if;\n \n-         Restrict.Restrictions := Targparm.Restrictions_On_Target;\n-      end Targparm_Acquire;\n+            Targparm.Get_Target_Parameters\n+              (System_Text  => Source_Text  (S),\n+               Source_First => Source_First (S),\n+               Source_Last  => Source_Last  (S),\n+               Make_Id      => Tbuild.Make_Id'Access,\n+               Make_SC      => Tbuild.Make_SC'Access,\n+               Set_RND      => Tbuild.Set_RND'Access);\n+\n+            --  Acquire configuration pragma information from Targparm\n+\n+            Restrict.Restrictions := Targparm.Restrictions_On_Target;\n+         end Targparm_Acquire;\n+      end if;\n \n       --  Perform various adjustments and settings of global switches\n \n       Adjust_Global_Switches;\n \n       --  Output copyright notice if full list mode unless we have a list\n-      --  file, in which case we defer this so that it is output in the file\n+      --  file, in which case we defer this so that it is output in the file.\n \n       if (Verbose_Mode or else (Full_List and then Full_List_File_Name = null))\n+\n+        --  Debug flag gnatd7 suppresses this copyright notice\n+\n         and then not Debug_Flag_7\n       then\n          Write_Eol;"}, {"sha": "5cc0f630e3a32368e96b3428bfc78bd1a9fc8f1c", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24de083ff5a0b613356e4ad95c501fe9a9f795e1/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24de083ff5a0b613356e4ad95c501fe9a9f795e1/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=24de083ff5a0b613356e4ad95c501fe9a9f795e1", "patch": "@@ -1727,6 +1727,15 @@ package body Sem_Aggr is\n                      if Is_Type (E) and then Has_Predicates (E) then\n                         Freeze_Before (N, E);\n \n+                        if Has_Dynamic_Predicate_Aspect (E) then\n+                           Error_Msg_NE (\"subtype& has dynamic predicate,\"\n+                             & \"not allowed in aggregate choice\", Choice, E);\n+\n+                        elsif not Is_Static_Subtype (E) then\n+                           Error_Msg_NE (\"non-static subtype& has predicate,\"\n+                             & \"not allowed in aggregate choice\", Choice, E);\n+                        end if;\n+\n                         --  If the subtype has a static predicate, replace the\n                         --  original choice with the list of individual values\n                         --  covered by the predicate.\n@@ -1882,6 +1891,14 @@ package body Sem_Aggr is\n                   elsif Nkind (Choice) = N_Subtype_Indication then\n                      Resolve_Discrete_Subtype_Indication (Choice, Index_Base);\n \n+                     if Has_Dynamic_Predicate_Aspect\n+                       (Entity (Subtype_Mark (Choice)))\n+                     then\n+                        Error_Msg_NE (\"subtype& has dynamic predicate, \"\n+                          & \"not allowed in aggregate choice\",\n+                            Choice, Entity (Subtype_Mark (Choice)));\n+                     end if;\n+\n                      --  Does the subtype indication evaluation raise CE?\n \n                      Get_Index_Bounds (Subtype_Mark (Choice), S_Low, S_High);"}, {"sha": "560eb03875fbda4095aacf848dd2e702489742dc", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24de083ff5a0b613356e4ad95c501fe9a9f795e1/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24de083ff5a0b613356e4ad95c501fe9a9f795e1/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=24de083ff5a0b613356e4ad95c501fe9a9f795e1", "patch": "@@ -2920,6 +2920,11 @@ package body Sem_Ch3 is\n \n       if not Is_Overloaded (E) then\n          T := Etype (E);\n+         if Has_Dynamic_Predicate_Aspect (T) then\n+            Error_Msg_N\n+              (\"subtype has dynamic predicate, \"\n+                 & \"not allowed in number declaration\", N);\n+         end if;\n \n       else\n          T := Any_Type;\n@@ -12424,6 +12429,10 @@ package body Sem_Ch3 is\n          --  The parser has verified that this is a discrete indication\n \n          Resolve_Discrete_Subtype_Indication (S, T);\n+         Bad_Predicated_Subtype_Use\n+           (\"subtype& has predicate, not allowed in index constraint\",\n+            S, Entity (Subtype_Mark (S)));\n+\n          R := Range_Expression (Constraint (S));\n \n          --  Capture values of bounds and generate temporaries for them if\n@@ -16802,6 +16811,7 @@ package body Sem_Ch3 is\n \n    procedure Inherit_Predicate_Flags (Subt, Par : Entity_Id) is\n    begin\n+      Set_Has_Predicates (Subt, Has_Predicates (Par));\n       Set_Has_Static_Predicate_Aspect\n         (Subt, Has_Static_Predicate_Aspect (Par));\n       Set_Has_Dynamic_Predicate_Aspect\n@@ -17419,6 +17429,10 @@ package body Sem_Ch3 is\n          Set_Scalar_Range   (Def_Id, R);\n          Conditional_Delay  (Def_Id, T);\n \n+         if Nkind (N) = N_Subtype_Indication then\n+            Inherit_Predicate_Flags (Def_Id, Entity (Subtype_Mark (N)));\n+         end if;\n+\n          --  In the subtype indication case, if the immediate parent of the\n          --  new subtype is non-static, then the subtype we create is non-\n          --  static, even if its bounds are static."}, {"sha": "37c864638c4dcf9c90469c24d3b718801f68e9d0", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 32, "deletions": 17, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24de083ff5a0b613356e4ad95c501fe9a9f795e1/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24de083ff5a0b613356e4ad95c501fe9a9f795e1/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=24de083ff5a0b613356e4ad95c501fe9a9f795e1", "patch": "@@ -2134,6 +2134,12 @@ package body Sem_Ch5 is\n       --  to capture the bounds, so that the function result can be finalized\n       --  in timely fashion.\n \n+      procedure Check_Predicate_Use (T : Entity_Id);\n+      --  Diagnose Attempt to iterate through non-static predicate. Note that\n+      --  a type with inherited predicates may have both static and dynamic\n+      --  forms. In this case it is not sufficent to check the static predicate\n+      --  function only, look for a dynamic predicate aspect as well.\n+\n       function Has_Call_Using_Secondary_Stack (N : Node_Id) return Boolean;\n       --  N is the node for an arbitrary construct. This function searches the\n       --  construct N to see if any expressions within it contain function\n@@ -2192,6 +2198,27 @@ package body Sem_Ch5 is\n          end if;\n       end Check_Controlled_Array_Attribute;\n \n+      -------------------------\n+      -- Check_Predicate_Use --\n+      -------------------------\n+\n+      procedure Check_Predicate_Use (T : Entity_Id) is\n+      begin\n+         if Is_Discrete_Type (T)\n+           and then Has_Predicates (T)\n+           and then (not Has_Static_Predicate (T)\n+                      or else Has_Dynamic_Predicate_Aspect (T))\n+         then\n+            Bad_Predicated_Subtype_Use\n+              (\"cannot use subtype& with non-static predicate for loop \" &\n+               \"iteration\", Discrete_Subtype_Definition (N),\n+                  T, Suggest_Static => True);\n+\n+         elsif Inside_A_Generic and then Is_Generic_Formal (T) then\n+            Set_No_Dynamic_Predicate_On_Actual (T);\n+         end if;\n+      end Check_Predicate_Use;\n+\n       ------------------------------------\n       -- Has_Call_Using_Secondary_Stack --\n       ------------------------------------\n@@ -2566,23 +2593,7 @@ package body Sem_Ch5 is\n             Set_Etype  (DS, Entity (DS));\n          end if;\n \n-         --  Attempt to iterate through non-static predicate. Note that a type\n-         --  with inherited predicates may have both static and dynamic forms.\n-         --  In this case it is not sufficent to check the static predicate\n-         --  function only, look for a dynamic predicate aspect as well.\n-\n-         if Is_Discrete_Type (Entity (DS))\n-           and then Has_Predicates (Entity (DS))\n-           and then (not Has_Static_Predicate (Entity (DS))\n-                      or else Has_Dynamic_Predicate_Aspect (Entity (DS)))\n-         then\n-            Bad_Predicated_Subtype_Use\n-              (\"cannot use subtype& with non-static predicate for loop \" &\n-               \"iteration\", DS, Entity (DS), Suggest_Static => True);\n-\n-         elsif Inside_A_Generic and then Is_Generic_Formal (Entity (DS)) then\n-            Set_No_Dynamic_Predicate_On_Actual (Entity (DS));\n-         end if;\n+         Check_Predicate_Use (Entity (DS));\n       end if;\n \n       --  Error if not discrete type\n@@ -2594,6 +2605,10 @@ package body Sem_Ch5 is\n \n       Check_Controlled_Array_Attribute (DS);\n \n+      if Nkind (DS) = N_Subtype_Indication then\n+         Check_Predicate_Use (Entity (Subtype_Mark (DS)));\n+      end if;\n+\n       Make_Index (DS, N, In_Iter_Schm => True);\n       Set_Ekind (Id, E_Loop_Parameter);\n "}, {"sha": "7a49d4bfe204fb7d31c5c2f22bb88bcd859813f2", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24de083ff5a0b613356e4ad95c501fe9a9f795e1/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24de083ff5a0b613356e4ad95c501fe9a9f795e1/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=24de083ff5a0b613356e4ad95c501fe9a9f795e1", "patch": "@@ -2896,6 +2896,17 @@ package body Sem_Ch9 is\n    begin\n       Check_Restriction (No_Tasking, N);\n       Tasking_Used := True;\n+\n+      --  The sequential partition elaboration policy is supported only in the\n+      --  restricted profile.\n+\n+      if Partition_Elaboration_Policy = 'S'\n+        and then not Restricted_Profile\n+      then\n+         Error_Msg_N\n+           (\"sequential elaboration supported only in restricted profile\", N);\n+      end if;\n+\n       T := Find_Type_Name (N);\n       Generate_Definition (T);\n "}, {"sha": "c0d3638313e08eeb3f4fac95cec0473c1e026762", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24de083ff5a0b613356e4ad95c501fe9a9f795e1/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24de083ff5a0b613356e4ad95c501fe9a9f795e1/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=24de083ff5a0b613356e4ad95c501fe9a9f795e1", "patch": "@@ -9814,14 +9814,28 @@ package body Sem_Res is\n \n       --  Check bad use of type with predicates\n \n-      if Has_Predicates (Etype (Drange)) then\n-         Bad_Predicated_Subtype_Use\n-           (\"subtype& has predicate, not allowed in slice\",\n-            Drange, Etype (Drange));\n+      declare\n+         Subt : Entity_Id;\n+\n+      begin\n+         if Nkind (Drange) = N_Subtype_Indication\n+            and then Has_Predicates (Entity (Subtype_Mark (Drange)))\n+         then\n+            Subt := Entity (Subtype_Mark (Drange));\n+\n+         else\n+            Subt := Etype (Drange);\n+         end if;\n+\n+         if Has_Predicates (Subt) then\n+            Bad_Predicated_Subtype_Use\n+              (\"subtype& has predicate, not allowed in slice\", Drange, Subt);\n+         end if;\n+      end;\n \n       --  Otherwise here is where we check suspicious indexes\n \n-      elsif Nkind (Drange) = N_Range then\n+      if Nkind (Drange) = N_Range then\n          Warn_On_Suspicious_Index (Name, Low_Bound  (Drange));\n          Warn_On_Suspicious_Index (Name, High_Bound (Drange));\n       end if;"}, {"sha": "23c5fa7edb21618ca71b8378fbab61101a1c7754", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24de083ff5a0b613356e4ad95c501fe9a9f795e1/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24de083ff5a0b613356e4ad95c501fe9a9f795e1/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=24de083ff5a0b613356e4ad95c501fe9a9f795e1", "patch": "@@ -782,7 +782,15 @@ package body Sem_Util is\n       Suggest_Static : Boolean := False)\n    is\n       Gen            : Entity_Id;\n+\n    begin\n+\n+      --  Avoid cascaded errors\n+\n+      if Error_Posted (N) then\n+         return;\n+      end if;\n+\n       if Inside_A_Generic then\n          Gen := Current_Scope;\n          while Present (Gen) and then  Ekind (Gen) /= E_Generic_Package loop"}]}