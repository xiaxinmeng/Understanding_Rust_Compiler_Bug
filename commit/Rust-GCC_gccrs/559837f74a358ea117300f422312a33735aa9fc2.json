{"sha": "559837f74a358ea117300f422312a33735aa9fc2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU5ODM3Zjc0YTM1OGVhMTE3MzAwZjQyMjMxMmEzMzczNWFhOWZjMg==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2004-10-08T16:06:02Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2004-10-08T16:06:02Z"}, "message": "builtins.c (expand_builtin_strncpy): Delete duplicate code.\n\n\t* builtins.c (expand_builtin_strncpy): Delete duplicate code.\n\tAccept an `exp' instead of an `arglist'.\n\nFrom-SVN: r88761", "tree": {"sha": "ae4c253a884ebb18fb26844a656196c3733e617d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae4c253a884ebb18fb26844a656196c3733e617d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/559837f74a358ea117300f422312a33735aa9fc2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/559837f74a358ea117300f422312a33735aa9fc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/559837f74a358ea117300f422312a33735aa9fc2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/559837f74a358ea117300f422312a33735aa9fc2/comments", "author": null, "committer": null, "parents": [{"sha": "a58eeb317d540ceddf751e55581ab87035481118", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a58eeb317d540ceddf751e55581ab87035481118", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a58eeb317d540ceddf751e55581ab87035481118"}], "stats": {"total": 49, "additions": 17, "deletions": 32}, "files": [{"sha": "44f9eb80585d5d82d5f8875ae97c6b92db89a4ff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/559837f74a358ea117300f422312a33735aa9fc2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/559837f74a358ea117300f422312a33735aa9fc2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=559837f74a358ea117300f422312a33735aa9fc2", "patch": "@@ -1,3 +1,8 @@\n+2004-10-08  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* builtins.c (expand_builtin_strncpy): Delete duplicate code.\n+\tAccept an `exp' instead of an `arglist'.\n+\n 2004-10-08  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* tree-tailcall.c (tree_optimize_tail_calls_1): Use fold_convert,"}, {"sha": "dc2297e99a6e78794a9fd7bbdd49fb5ab17184a2", "filename": "gcc/builtins.c", "status": "modified", "additions": 12, "deletions": 32, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/559837f74a358ea117300f422312a33735aa9fc2/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/559837f74a358ea117300f422312a33735aa9fc2/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=559837f74a358ea117300f422312a33735aa9fc2", "patch": "@@ -3010,35 +3010,21 @@ builtin_strncpy_read_str (void *data, HOST_WIDE_INT offset,\n    if we failed the caller should emit a normal call.  */\n \n static rtx\n-expand_builtin_strncpy (tree arglist, rtx target, enum machine_mode mode)\n+expand_builtin_strncpy (tree exp, rtx target, enum machine_mode mode)\n {\n-  if (!validate_arglist (arglist,\n-\t\t\t POINTER_TYPE, POINTER_TYPE, INTEGER_TYPE, VOID_TYPE))\n-    return 0;\n-  else\n+  tree arglist = TREE_OPERAND (exp, 1);\n+  if (validate_arglist (arglist,\n+\t\t\tPOINTER_TYPE, POINTER_TYPE, INTEGER_TYPE, VOID_TYPE))\n     {\n       tree slen = c_strlen (TREE_VALUE (TREE_CHAIN (arglist)), 1);\n       tree len = TREE_VALUE (TREE_CHAIN (TREE_CHAIN (arglist)));\n-      tree fn;\n-\n-      /* We must be passed a constant len parameter.  */\n-      if (TREE_CODE (len) != INTEGER_CST)\n-\treturn 0;\n-\n-      /* If the len parameter is zero, return the dst parameter.  */\n-      if (integer_zerop (len))\n-\t{\n-\t  /* Evaluate and ignore the src argument in case it has\n-\t     side-effects.  */\n-\t  expand_expr (TREE_VALUE (TREE_CHAIN (arglist)), const0_rtx,\n-\t\t       VOIDmode, EXPAND_NORMAL);\n-\t  /* Return the dst parameter.  */\n-\t  return expand_expr (TREE_VALUE (arglist), target, mode,\n-\t\t\t      EXPAND_NORMAL);\n-\t}\n+      tree result = fold_builtin_strncpy (exp, slen);\n+      \n+      if (result)\n+\treturn expand_expr (result, target, mode, EXPAND_NORMAL);\n \n-      /* Now, we must be passed a constant src ptr parameter.  */\n-      if (slen == 0 || TREE_CODE (slen) != INTEGER_CST)\n+      /* We must be passed a constant len and src parameter.  */\n+      if (!host_integerp (len, 1) || !slen || !host_integerp (slen, 1))\n \treturn 0;\n \n       slen = size_binop (PLUS_EXPR, slen, ssize_int (1));\n@@ -3068,14 +3054,8 @@ expand_builtin_strncpy (tree arglist, rtx target, enum machine_mode mode)\n \t  dest_mem = convert_memory_address (ptr_mode, dest_mem);\n \t  return dest_mem;\n \t}\n-\n-      /* OK transform into builtin memcpy.  */\n-      fn = implicit_built_in_decls[BUILT_IN_MEMCPY];\n-      if (!fn)\n-\treturn 0;\n-      return expand_expr (build_function_call_expr (fn, arglist),\n-\t\t\t  target, mode, EXPAND_NORMAL);\n     }\n+  return 0;\n }\n \n /* Callback routine for store_by_pieces.  Read GET_MODE_BITSIZE (MODE)\n@@ -5391,7 +5371,7 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,\n       break;\n \n     case BUILT_IN_STRNCPY:\n-      target = expand_builtin_strncpy (arglist, target, mode);\n+      target = expand_builtin_strncpy (exp, target, mode);\n       if (target)\n \treturn target;\n       break;"}]}