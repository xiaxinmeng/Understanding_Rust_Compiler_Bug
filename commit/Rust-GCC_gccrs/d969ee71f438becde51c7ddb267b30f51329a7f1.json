{"sha": "d969ee71f438becde51c7ddb267b30f51329a7f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk2OWVlNzFmNDM4YmVjZGU1MWM3ZGRiMjY3YjMwZjUxMzI5YTdmMQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-07-08T00:03:08Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-07-08T00:03:08Z"}, "message": "tree-ssa-dom.c (simplify_switch_and_lookup_avail_expr): Look through any value-preserving cast.\n\n        * tree-ssa-dom.c (simplify_switch_and_lookup_avail_expr): Look\n        through any value-preserving cast.\n\nFrom-SVN: r84244", "tree": {"sha": "c7e51d564515ad836ba64ff4909f61006732ab2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7e51d564515ad836ba64ff4909f61006732ab2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d969ee71f438becde51c7ddb267b30f51329a7f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d969ee71f438becde51c7ddb267b30f51329a7f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d969ee71f438becde51c7ddb267b30f51329a7f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d969ee71f438becde51c7ddb267b30f51329a7f1/comments", "author": null, "committer": null, "parents": [{"sha": "b49fcebddd697b67f7b2645fd1a40202d89410de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b49fcebddd697b67f7b2645fd1a40202d89410de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b49fcebddd697b67f7b2645fd1a40202d89410de"}], "stats": {"total": 31, "additions": 27, "deletions": 4}, "files": [{"sha": "11e1eb01bf18450529e95c2d8bcb93f9fabab28e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d969ee71f438becde51c7ddb267b30f51329a7f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d969ee71f438becde51c7ddb267b30f51329a7f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d969ee71f438becde51c7ddb267b30f51329a7f1", "patch": "@@ -1,3 +1,8 @@\n+2004-07-07  Richard Henderson  <rth@redhat.com>\n+\n+\t* tree-ssa-dom.c (simplify_switch_and_lookup_avail_expr): Look\n+\tthrough any value-preserving cast.\n+\n 2004-07-07  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* function.c (assign_parm_find_data_types): Call"}, {"sha": "740fe9bc9b2d42c36e2e4f2411c515b6997f1911", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d969ee71f438becde51c7ddb267b30f51329a7f1/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d969ee71f438becde51c7ddb267b30f51329a7f1/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=d969ee71f438becde51c7ddb267b30f51329a7f1", "patch": "@@ -2460,15 +2460,33 @@ simplify_switch_and_lookup_avail_expr (tree stmt,\n \t  def = TREE_OPERAND (def, 1);\n \t  if (TREE_CODE (def) == NOP_EXPR)\n \t    {\n+\t      int need_precision;\n+\t      bool fail;\n+\n \t      def = TREE_OPERAND (def, 0);\n+\n+#ifdef ENABLE_CHECKING\n+\t      /* ??? Why was Jeff testing this?  We are gimple...  */\n+\t      if (!is_gimple_val (def))\n+\t\tabort ();\n+#endif\n+\n \t      to = TREE_TYPE (cond);\n \t      ti = TREE_TYPE (def);\n \n-\t      /* If we have an extension that preserves sign, then we\n+\t      /* If we have an extension that preserves value, then we\n \t\t can copy the source value into the switch.  */\n-\t      if (TYPE_UNSIGNED (to) == TYPE_UNSIGNED (ti)\n-\t\t  && TYPE_PRECISION (to) >= TYPE_PRECISION (ti)\n-\t          && is_gimple_val (def))\n+\n+\t      need_precision = TYPE_PRECISION (ti);\n+\t      fail = false;\n+\t      if (TYPE_UNSIGNED (to) && !TYPE_UNSIGNED (ti))\n+\t\tfail = true;\n+\t      else if (!TYPE_UNSIGNED (to) && TYPE_UNSIGNED (ti))\n+\t\tneed_precision += 1;\n+\t      if (TYPE_PRECISION (to) < need_precision)\n+\t\tfail = true;\n+\n+\t      if (!fail)\n \t\t{\n \t\t  SWITCH_COND (stmt) = def;\n \t\t  ann->modified = 1;"}]}